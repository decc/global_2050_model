# coding: utf-8
# Test for global_2050_model
require 'minitest/autorun'
require_relative '../lib/global_2050_model'

class TestGlobal2050Model < Minitest::Unit::TestCase
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Global2050Model.new end
  def test_user_inputs_e7; assert_in_epsilon(2.0, worksheet.user_inputs_e7, 0.002); end
  def test_user_inputs_e8; assert_in_epsilon(2.0, worksheet.user_inputs_e8, 0.002); end
  def test_user_inputs_e9; assert_in_epsilon(2.3, worksheet.user_inputs_e9, 0.002); end
  def test_user_inputs_e10; assert_in_epsilon(1.9, worksheet.user_inputs_e10, 0.002); end
  def test_user_inputs_e11; assert_in_epsilon(2.2, worksheet.user_inputs_e11, 0.002); end
  def test_user_inputs_e12; assert_in_epsilon(1.4, worksheet.user_inputs_e12, 0.002); end
  def test_user_inputs_e13; assert_in_epsilon(2.4, worksheet.user_inputs_e13, 0.002); end
  def test_user_inputs_e14; assert_in_epsilon(1.6, worksheet.user_inputs_e14, 0.002); end
  def test_user_inputs_e15; assert_in_delta(1.0, worksheet.user_inputs_e15, 0.002); end
  def test_user_inputs_e16; assert_in_epsilon(2.2, worksheet.user_inputs_e16, 0.002); end
  def test_user_inputs_e17; assert_in_epsilon(1.6, worksheet.user_inputs_e17, 0.002); end
  def test_user_inputs_e18; assert_in_epsilon(2.1, worksheet.user_inputs_e18, 0.002); end
  def test_user_inputs_e19; assert_in_epsilon(1.2, worksheet.user_inputs_e19, 0.002); end
  def test_user_inputs_e20; assert_in_epsilon(1.2, worksheet.user_inputs_e20, 0.002); end
  def test_user_inputs_e21; assert_in_epsilon(1.2, worksheet.user_inputs_e21, 0.002); end
  def test_user_inputs_e22; assert_in_delta(1.0, worksheet.user_inputs_e22, 0.002); end
  def test_user_inputs_e23; assert_in_epsilon(1.1, worksheet.user_inputs_e23, 0.002); end
  def test_user_inputs_e24; assert_in_epsilon(1.8, worksheet.user_inputs_e24, 0.002); end
  def test_user_inputs_e25; assert_in_delta(1.0, worksheet.user_inputs_e25, 0.002); end
  def test_user_inputs_e26; assert_in_epsilon(1.9, worksheet.user_inputs_e26, 0.002); end
  def test_user_inputs_e27; assert_in_epsilon(1.6, worksheet.user_inputs_e27, 0.002); end
  def test_user_inputs_e28; assert_in_delta(1.0, worksheet.user_inputs_e28, 0.002); end
  def test_user_inputs_e29; assert_in_epsilon(2.0, worksheet.user_inputs_e29, 0.002); end
  def test_user_inputs_e30; assert_in_epsilon(2.2, worksheet.user_inputs_e30, 0.002); end
  def test_user_inputs_e31; assert_in_delta(1.0, worksheet.user_inputs_e31, 0.002); end
  def test_user_inputs_e32; assert_in_epsilon(1.7, worksheet.user_inputs_e32, 0.002); end
  def test_user_inputs_e33; assert_in_epsilon(1.2, worksheet.user_inputs_e33, 0.002); end
  def test_user_inputs_e34; assert_in_epsilon(1.9, worksheet.user_inputs_e34, 0.002); end
  def test_user_inputs_e35; assert_in_epsilon(1.3, worksheet.user_inputs_e35, 0.002); end
  def test_user_inputs_e36; assert_in_epsilon(1.2, worksheet.user_inputs_e36, 0.002); end
  def test_user_inputs_e37; assert_in_epsilon(1.4, worksheet.user_inputs_e37, 0.002); end
  def test_user_inputs_e38; assert_in_epsilon(1.7, worksheet.user_inputs_e38, 0.002); end
  def test_user_inputs_e39; assert_in_epsilon(3.0, worksheet.user_inputs_e39, 0.002); end
  def test_user_inputs_e40; assert_in_epsilon(1.8, worksheet.user_inputs_e40, 0.002); end
  def test_user_inputs_e41; assert_in_epsilon(2.1, worksheet.user_inputs_e41, 0.002); end
  def test_user_inputs_e42; assert_in_epsilon(1.8, worksheet.user_inputs_e42, 0.002); end
  def test_user_inputs_e43; assert_in_epsilon(2.3, worksheet.user_inputs_e43, 0.002); end
  def test_user_inputs_e44; assert_in_epsilon(2.0, worksheet.user_inputs_e44, 0.002); end
  def test_user_inputs_e45; assert_in_epsilon(2.0, worksheet.user_inputs_e45, 0.002); end
  def test_user_inputs_e46; assert_in_epsilon(2.4, worksheet.user_inputs_e46, 0.002); end
  def test_user_inputs_e47; assert_in_epsilon(3.9, worksheet.user_inputs_e47, 0.002); end
  def test_user_inputs_e48; assert_in_epsilon(2.9, worksheet.user_inputs_e48, 0.002); end
  def test_user_inputs_e49; assert_in_delta(1.0, worksheet.user_inputs_e49, 0.002); end
  def test_user_inputs_e50; assert_in_delta(1.0, worksheet.user_inputs_e50, 0.002); end
  def test_user_inputs_e51; assert_in_delta(1.0, worksheet.user_inputs_e51, 0.002); end
  def test_user_inputs_e52; assert_in_delta(1.0, worksheet.user_inputs_e52, 0.002); end
  def test_user_inputs_e53; assert_in_delta(1.0, worksheet.user_inputs_e53, 0.002); end
  def test_user_inputs_e54; assert_in_epsilon(1.7, worksheet.user_inputs_e54, 0.002); end
  def test_user_inputs_e55; assert_in_epsilon(1.5, worksheet.user_inputs_e55, 0.002); end
  def test_user_inputs_e56; assert_in_epsilon(2.0, worksheet.user_inputs_e56, 0.002); end
  def test_user_inputs_e57; assert_equal("B", worksheet.user_inputs_e57); end
  def test_user_inputs_e58; assert_equal("US", worksheet.user_inputs_e58); end
  def test_user_inputs_e59; assert_equal("Point", worksheet.user_inputs_e59); end
  def test_user_inputs_e60; assert_equal("Point", worksheet.user_inputs_e60); end
  def test_user_inputs_e61; assert_equal("Point", worksheet.user_inputs_e61); end
  def test_user_inputs_e62; assert_equal("Point", worksheet.user_inputs_e62); end
  def test_user_inputs_e63; assert_equal("Point", worksheet.user_inputs_e63); end
  def test_user_inputs_e64; assert_equal("Point", worksheet.user_inputs_e64); end
  def test_user_inputs_e65; assert_equal("Point", worksheet.user_inputs_e65); end
  def test_lever_graphs_c3000; assert_equal("1975", worksheet.lever_graphs_c3000); end
  def test_lever_graphs_d3000; assert_equal("1980", worksheet.lever_graphs_d3000); end
  def test_lever_graphs_e3000; assert_equal("1985", worksheet.lever_graphs_e3000); end
  def test_lever_graphs_f3000; assert_equal("1990", worksheet.lever_graphs_f3000); end
  def test_lever_graphs_g3000; assert_equal("1995", worksheet.lever_graphs_g3000); end
  def test_lever_graphs_h3000; assert_equal("2000", worksheet.lever_graphs_h3000); end
  def test_lever_graphs_i3000; assert_equal("2005", worksheet.lever_graphs_i3000); end
  def test_lever_graphs_j3000; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3000, 0.002); end
  def test_lever_graphs_k3000; assert_equal("2011", worksheet.lever_graphs_k3000); end
  def test_lever_graphs_l3000; assert_equal("2015", worksheet.lever_graphs_l3000); end
  def test_lever_graphs_m3000; assert_equal("2020", worksheet.lever_graphs_m3000); end
  def test_lever_graphs_n3000; assert_equal("2025", worksheet.lever_graphs_n3000); end
  def test_lever_graphs_o3000; assert_equal("2030", worksheet.lever_graphs_o3000); end
  def test_lever_graphs_p3000; assert_equal("2035", worksheet.lever_graphs_p3000); end
  def test_lever_graphs_q3000; assert_equal("2040", worksheet.lever_graphs_q3000); end
  def test_lever_graphs_r3000; assert_equal("2045", worksheet.lever_graphs_r3000); end
  def test_lever_graphs_s3000; assert_equal("2050", worksheet.lever_graphs_s3000); end
  def test_lever_graphs_b3001; assert_equal("Historic data", worksheet.lever_graphs_b3001); end
  def test_lever_graphs_b3002; assert_in_delta(1.0, worksheet.lever_graphs_b3002, 0.002); end
  def test_lever_graphs_k3002; assert_in_delta(0.06, worksheet.lever_graphs_k3002, 0.002); end
  def test_lever_graphs_l3002; assert_in_delta(0.06923076923076923, worksheet.lever_graphs_l3002, 0.002); end
  def test_lever_graphs_m3002; assert_in_delta(0.059340659340659345, worksheet.lever_graphs_m3002, 0.002); end
  def test_lever_graphs_n3002; assert_in_delta(0.049450549450549455, worksheet.lever_graphs_n3002, 0.002); end
  def test_lever_graphs_o3002; assert_in_delta(0.039560439560439566, worksheet.lever_graphs_o3002, 0.002); end
  def test_lever_graphs_p3002; assert_in_delta(0.029670329670329676, worksheet.lever_graphs_p3002, 0.002); end
  def test_lever_graphs_q3002; assert_in_delta(0.01978021978021978, worksheet.lever_graphs_q3002, 0.002); end
  def test_lever_graphs_r3002; assert_in_delta(0.009890109890109897, worksheet.lever_graphs_r3002, 0.002); end
  def test_lever_graphs_s3002; assert_in_delta(0.0, (worksheet.lever_graphs_s3002||0), 0.002); end
  def test_lever_graphs_b3003; assert_in_epsilon(2.0, worksheet.lever_graphs_b3003, 0.002); end
  def test_lever_graphs_k3003; assert_in_delta(0.06, worksheet.lever_graphs_k3003, 0.002); end
  def test_lever_graphs_l3003; assert_in_delta(0.06923076923076923, worksheet.lever_graphs_l3003, 0.002); end
  def test_lever_graphs_m3003; assert_in_delta(0.06791208791208792, worksheet.lever_graphs_m3003, 0.002); end
  def test_lever_graphs_n3003; assert_in_delta(0.0665934065934066, worksheet.lever_graphs_n3003, 0.002); end
  def test_lever_graphs_o3003; assert_in_delta(0.06527472527472528, worksheet.lever_graphs_o3003, 0.002); end
  def test_lever_graphs_p3003; assert_in_delta(0.06395604395604396, worksheet.lever_graphs_p3003, 0.002); end
  def test_lever_graphs_q3003; assert_in_delta(0.06263736263736264, worksheet.lever_graphs_q3003, 0.002); end
  def test_lever_graphs_r3003; assert_in_delta(0.06131868131868132, worksheet.lever_graphs_r3003, 0.002); end
  def test_lever_graphs_s3003; assert_in_delta(0.06, worksheet.lever_graphs_s3003, 0.002); end
  def test_lever_graphs_b3004; assert_in_epsilon(3.0, worksheet.lever_graphs_b3004, 0.002); end
  def test_lever_graphs_k3004; assert_in_delta(0.06, worksheet.lever_graphs_k3004, 0.002); end
  def test_lever_graphs_l3004; assert_in_delta(0.06923076923076923, worksheet.lever_graphs_l3004, 0.002); end
  def test_lever_graphs_m3004; assert_in_delta(0.08076923076923077, worksheet.lever_graphs_m3004, 0.002); end
  def test_lever_graphs_n3004; assert_in_delta(0.09230769230769231, worksheet.lever_graphs_n3004, 0.002); end
  def test_lever_graphs_o3004; assert_in_delta(0.10384615384615384, worksheet.lever_graphs_o3004, 0.002); end
  def test_lever_graphs_p3004; assert_in_delta(0.11538461538461538, worksheet.lever_graphs_p3004, 0.002); end
  def test_lever_graphs_q3004; assert_in_delta(0.12692307692307692, worksheet.lever_graphs_q3004, 0.002); end
  def test_lever_graphs_r3004; assert_in_delta(0.13846153846153847, worksheet.lever_graphs_r3004, 0.002); end
  def test_lever_graphs_s3004; assert_in_delta(0.15, worksheet.lever_graphs_s3004, 0.002); end
  def test_lever_graphs_b3005; assert_in_epsilon(4.0, worksheet.lever_graphs_b3005, 0.002); end
  def test_lever_graphs_k3005; assert_in_delta(0.06, worksheet.lever_graphs_k3005, 0.002); end
  def test_lever_graphs_l3005; assert_in_delta(0.06923076923076923, worksheet.lever_graphs_l3005, 0.002); end
  def test_lever_graphs_m3005; assert_in_delta(0.1021978021978022, worksheet.lever_graphs_m3005, 0.002); end
  def test_lever_graphs_n3005; assert_in_delta(0.13516483516483516, worksheet.lever_graphs_n3005, 0.002); end
  def test_lever_graphs_o3005; assert_in_delta(0.16813186813186812, worksheet.lever_graphs_o3005, 0.002); end
  def test_lever_graphs_p3005; assert_in_delta(0.20109890109890108, worksheet.lever_graphs_p3005, 0.002); end
  def test_lever_graphs_q3005; assert_in_delta(0.23406593406593407, worksheet.lever_graphs_q3005, 0.002); end
  def test_lever_graphs_r3005; assert_in_delta(0.267032967032967, worksheet.lever_graphs_r3005, 0.002); end
  def test_lever_graphs_s3005; assert_in_delta(0.3, worksheet.lever_graphs_s3005, 0.002); end
  def test_lever_graphs_c3010; assert_equal("1975", worksheet.lever_graphs_c3010); end
  def test_lever_graphs_d3010; assert_equal("1980", worksheet.lever_graphs_d3010); end
  def test_lever_graphs_e3010; assert_equal("1985", worksheet.lever_graphs_e3010); end
  def test_lever_graphs_f3010; assert_equal("1990", worksheet.lever_graphs_f3010); end
  def test_lever_graphs_g3010; assert_equal("1995", worksheet.lever_graphs_g3010); end
  def test_lever_graphs_h3010; assert_equal("2000", worksheet.lever_graphs_h3010); end
  def test_lever_graphs_i3010; assert_equal("2005", worksheet.lever_graphs_i3010); end
  def test_lever_graphs_j3010; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3010, 0.002); end
  def test_lever_graphs_k3010; assert_equal("2011", worksheet.lever_graphs_k3010); end
  def test_lever_graphs_l3010; assert_equal("2015", worksheet.lever_graphs_l3010); end
  def test_lever_graphs_m3010; assert_equal("2020", worksheet.lever_graphs_m3010); end
  def test_lever_graphs_n3010; assert_equal("2025", worksheet.lever_graphs_n3010); end
  def test_lever_graphs_o3010; assert_equal("2030", worksheet.lever_graphs_o3010); end
  def test_lever_graphs_p3010; assert_equal("2035", worksheet.lever_graphs_p3010); end
  def test_lever_graphs_q3010; assert_equal("2040", worksheet.lever_graphs_q3010); end
  def test_lever_graphs_r3010; assert_equal("2045", worksheet.lever_graphs_r3010); end
  def test_lever_graphs_s3010; assert_equal("2050", worksheet.lever_graphs_s3010); end
  def test_lever_graphs_b3011; assert_equal("Historic data", worksheet.lever_graphs_b3011); end
  def test_lever_graphs_b3012; assert_in_delta(1.0, worksheet.lever_graphs_b3012, 0.002); end
  def test_lever_graphs_k3012; assert_in_delta(0.01, worksheet.lever_graphs_k3012, 0.002); end
  def test_lever_graphs_l3012; assert_in_delta(0.014102564102564103, worksheet.lever_graphs_l3012, 0.002); end
  def test_lever_graphs_m3012; assert_in_delta(0.012087912087912088, worksheet.lever_graphs_m3012, 0.002); end
  def test_lever_graphs_n3012; assert_in_delta(0.010073260073260074, worksheet.lever_graphs_n3012, 0.002); end
  def test_lever_graphs_o3012; assert_in_delta(0.00805860805860806, worksheet.lever_graphs_o3012, 0.002); end
  def test_lever_graphs_p3012; assert_in_delta(0.006043956043956045, worksheet.lever_graphs_p3012, 0.002); end
  def test_lever_graphs_q3012; assert_in_delta(0.004029304029304029, worksheet.lever_graphs_q3012, 0.002); end
  def test_lever_graphs_r3012; assert_in_delta(0.002014652014652016, worksheet.lever_graphs_r3012, 0.002); end
  def test_lever_graphs_s3012; assert_in_delta(0.0, (worksheet.lever_graphs_s3012||0), 0.002); end
  def test_lever_graphs_b3013; assert_in_epsilon(2.0, worksheet.lever_graphs_b3013, 0.002); end
  def test_lever_graphs_k3013; assert_in_delta(0.01, worksheet.lever_graphs_k3013, 0.002); end
  def test_lever_graphs_l3013; assert_in_delta(0.014102564102564103, worksheet.lever_graphs_l3013, 0.002); end
  def test_lever_graphs_m3013; assert_in_delta(0.013516483516483517, worksheet.lever_graphs_m3013, 0.002); end
  def test_lever_graphs_n3013; assert_in_delta(0.01293040293040293, worksheet.lever_graphs_n3013, 0.002); end
  def test_lever_graphs_o3013; assert_in_delta(0.012344322344322345, worksheet.lever_graphs_o3013, 0.002); end
  def test_lever_graphs_p3013; assert_in_delta(0.011758241758241758, worksheet.lever_graphs_p3013, 0.002); end
  def test_lever_graphs_q3013; assert_in_delta(0.011172161172161172, worksheet.lever_graphs_q3013, 0.002); end
  def test_lever_graphs_r3013; assert_in_delta(0.010586080586080586, worksheet.lever_graphs_r3013, 0.002); end
  def test_lever_graphs_s3013; assert_in_delta(0.01, worksheet.lever_graphs_s3013, 0.002); end
  def test_lever_graphs_b3014; assert_in_epsilon(3.0, worksheet.lever_graphs_b3014, 0.002); end
  def test_lever_graphs_k3014; assert_in_delta(0.01, worksheet.lever_graphs_k3014, 0.002); end
  def test_lever_graphs_l3014; assert_in_delta(0.014102564102564103, worksheet.lever_graphs_l3014, 0.002); end
  def test_lever_graphs_m3014; assert_in_delta(0.019230769230769232, worksheet.lever_graphs_m3014, 0.002); end
  def test_lever_graphs_n3014; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_n3014, 0.002); end
  def test_lever_graphs_o3014; assert_in_delta(0.029487179487179487, worksheet.lever_graphs_o3014, 0.002); end
  def test_lever_graphs_p3014; assert_in_delta(0.03461538461538462, worksheet.lever_graphs_p3014, 0.002); end
  def test_lever_graphs_q3014; assert_in_delta(0.03974358974358975, worksheet.lever_graphs_q3014, 0.002); end
  def test_lever_graphs_r3014; assert_in_delta(0.04487179487179487, worksheet.lever_graphs_r3014, 0.002); end
  def test_lever_graphs_s3014; assert_in_delta(0.05, worksheet.lever_graphs_s3014, 0.002); end
  def test_lever_graphs_b3015; assert_in_epsilon(4.0, worksheet.lever_graphs_b3015, 0.002); end
  def test_lever_graphs_k3015; assert_in_delta(0.01, worksheet.lever_graphs_k3015, 0.002); end
  def test_lever_graphs_l3015; assert_in_delta(0.014102564102564103, worksheet.lever_graphs_l3015, 0.002); end
  def test_lever_graphs_m3015; assert_in_delta(0.026373626373626374, worksheet.lever_graphs_m3015, 0.002); end
  def test_lever_graphs_n3015; assert_in_delta(0.038644688644688646, worksheet.lever_graphs_n3015, 0.002); end
  def test_lever_graphs_o3015; assert_in_delta(0.050915750915750915, worksheet.lever_graphs_o3015, 0.002); end
  def test_lever_graphs_p3015; assert_in_delta(0.06318681318681318, worksheet.lever_graphs_p3015, 0.002); end
  def test_lever_graphs_q3015; assert_in_delta(0.07545787545787547, worksheet.lever_graphs_q3015, 0.002); end
  def test_lever_graphs_r3015; assert_in_delta(0.08772893772893774, worksheet.lever_graphs_r3015, 0.002); end
  def test_lever_graphs_s3015; assert_in_delta(0.1, worksheet.lever_graphs_s3015, 0.002); end
  def test_lever_graphs_c2990; assert_equal("1975", worksheet.lever_graphs_c2990); end
  def test_lever_graphs_d2990; assert_equal("1980", worksheet.lever_graphs_d2990); end
  def test_lever_graphs_e2990; assert_equal("1985", worksheet.lever_graphs_e2990); end
  def test_lever_graphs_f2990; assert_equal("1990", worksheet.lever_graphs_f2990); end
  def test_lever_graphs_g2990; assert_equal("1995", worksheet.lever_graphs_g2990); end
  def test_lever_graphs_h2990; assert_equal("2000", worksheet.lever_graphs_h2990); end
  def test_lever_graphs_i2990; assert_equal("2005", worksheet.lever_graphs_i2990); end
  def test_lever_graphs_j2990; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2990, 0.002); end
  def test_lever_graphs_k2990; assert_equal("2011", worksheet.lever_graphs_k2990); end
  def test_lever_graphs_l2990; assert_equal("2015", worksheet.lever_graphs_l2990); end
  def test_lever_graphs_m2990; assert_equal("2020", worksheet.lever_graphs_m2990); end
  def test_lever_graphs_n2990; assert_equal("2025", worksheet.lever_graphs_n2990); end
  def test_lever_graphs_o2990; assert_equal("2030", worksheet.lever_graphs_o2990); end
  def test_lever_graphs_p2990; assert_equal("2035", worksheet.lever_graphs_p2990); end
  def test_lever_graphs_q2990; assert_equal("2040", worksheet.lever_graphs_q2990); end
  def test_lever_graphs_r2990; assert_equal("2045", worksheet.lever_graphs_r2990); end
  def test_lever_graphs_s2990; assert_equal("2050", worksheet.lever_graphs_s2990); end
  def test_lever_graphs_b2991; assert_equal("Historic data", worksheet.lever_graphs_b2991); end
  def test_lever_graphs_b2992; assert_in_delta(1.0, worksheet.lever_graphs_b2992, 0.002); end
  def test_lever_graphs_k2992; assert_in_delta(0.0, (worksheet.lever_graphs_k2992||0), 0.002); end
  def test_lever_graphs_l2992; assert_in_delta(0.025, worksheet.lever_graphs_l2992, 0.002); end
  def test_lever_graphs_m2992; assert_in_delta(0.03571428571428572, worksheet.lever_graphs_m2992, 0.002); end
  def test_lever_graphs_n2992; assert_in_delta(0.04642857142857143, worksheet.lever_graphs_n2992, 0.002); end
  def test_lever_graphs_o2992; assert_in_delta(0.05714285714285715, worksheet.lever_graphs_o2992, 0.002); end
  def test_lever_graphs_p2992; assert_in_delta(0.06785714285714287, worksheet.lever_graphs_p2992, 0.002); end
  def test_lever_graphs_q2992; assert_in_delta(0.07857142857142858, worksheet.lever_graphs_q2992, 0.002); end
  def test_lever_graphs_r2992; assert_in_delta(0.0892857142857143, worksheet.lever_graphs_r2992, 0.002); end
  def test_lever_graphs_s2992; assert_in_delta(0.1, worksheet.lever_graphs_s2992, 0.002); end
  def test_lever_graphs_b2993; assert_in_epsilon(2.0, worksheet.lever_graphs_b2993, 0.002); end
  def test_lever_graphs_k2993; assert_in_delta(0.0, (worksheet.lever_graphs_k2993||0), 0.002); end
  def test_lever_graphs_l2993; assert_in_delta(0.025, worksheet.lever_graphs_l2993, 0.002); end
  def test_lever_graphs_m2993; assert_in_delta(0.06428571428571428, worksheet.lever_graphs_m2993, 0.002); end
  def test_lever_graphs_n2993; assert_in_delta(0.10357142857142856, worksheet.lever_graphs_n2993, 0.002); end
  def test_lever_graphs_o2993; assert_in_delta(0.14285714285714285, worksheet.lever_graphs_o2993, 0.002); end
  def test_lever_graphs_p2993; assert_in_delta(0.1821428571428571, worksheet.lever_graphs_p2993, 0.002); end
  def test_lever_graphs_q2993; assert_in_delta(0.2214285714285714, worksheet.lever_graphs_q2993, 0.002); end
  def test_lever_graphs_r2993; assert_in_delta(0.2607142857142857, worksheet.lever_graphs_r2993, 0.002); end
  def test_lever_graphs_s2993; assert_in_delta(0.3, worksheet.lever_graphs_s2993, 0.002); end
  def test_lever_graphs_b2994; assert_in_epsilon(3.0, worksheet.lever_graphs_b2994, 0.002); end
  def test_lever_graphs_k2994; assert_in_delta(0.0, (worksheet.lever_graphs_k2994||0), 0.002); end
  def test_lever_graphs_l2994; assert_in_delta(0.025, worksheet.lever_graphs_l2994, 0.002); end
  def test_lever_graphs_m2994; assert_in_delta(0.09285714285714286, worksheet.lever_graphs_m2994, 0.002); end
  def test_lever_graphs_n2994; assert_in_delta(0.1607142857142857, worksheet.lever_graphs_n2994, 0.002); end
  def test_lever_graphs_o2994; assert_in_delta(0.22857142857142854, worksheet.lever_graphs_o2994, 0.002); end
  def test_lever_graphs_p2994; assert_in_delta(0.29642857142857143, worksheet.lever_graphs_p2994, 0.002); end
  def test_lever_graphs_q2994; assert_in_delta(0.3642857142857143, worksheet.lever_graphs_q2994, 0.002); end
  def test_lever_graphs_r2994; assert_in_delta(0.4321428571428571, worksheet.lever_graphs_r2994, 0.002); end
  def test_lever_graphs_s2994; assert_in_delta(0.5, worksheet.lever_graphs_s2994, 0.002); end
  def test_lever_graphs_b2995; assert_in_epsilon(4.0, worksheet.lever_graphs_b2995, 0.002); end
  def test_lever_graphs_k2995; assert_in_delta(0.0, (worksheet.lever_graphs_k2995||0), 0.002); end
  def test_lever_graphs_l2995; assert_in_delta(0.025, worksheet.lever_graphs_l2995, 0.002); end
  def test_lever_graphs_m2995; assert_in_delta(0.1357142857142857, worksheet.lever_graphs_m2995, 0.002); end
  def test_lever_graphs_n2995; assert_in_delta(0.2464285714285714, worksheet.lever_graphs_n2995, 0.002); end
  def test_lever_graphs_o2995; assert_in_delta(0.35714285714285715, worksheet.lever_graphs_o2995, 0.002); end
  def test_lever_graphs_p2995; assert_in_delta(0.46785714285714286, worksheet.lever_graphs_p2995, 0.002); end
  def test_lever_graphs_q2995; assert_in_delta(0.5785714285714286, worksheet.lever_graphs_q2995, 0.002); end
  def test_lever_graphs_r2995; assert_in_delta(0.6892857142857143, worksheet.lever_graphs_r2995, 0.002); end
  def test_lever_graphs_s2995; assert_in_delta(0.8, worksheet.lever_graphs_s2995, 0.002); end
  def test_lever_graphs_d2558; assert_equal("Title", worksheet.lever_graphs_d2558); end
  def test_lever_graphs_e2558; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2558); end
  def test_lever_graphs_f2558; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2558); end
  def test_lever_graphs_g2558; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2558); end
  def test_lever_graphs_h2558; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2558); end
  def test_lever_graphs_i2558; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2558); end
  def test_lever_graphs_j2558; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2558); end
  def test_lever_graphs_d2559; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2559, 0.002); end
  def test_lever_graphs_e2559; assert_in_epsilon(65.982, worksheet.lever_graphs_e2559, 0.002); end
  def test_lever_graphs_f2559; assert_in_epsilon(1500.0, worksheet.lever_graphs_f2559, 0.002); end
  def test_lever_graphs_g2559; assert_in_epsilon(699.9999999999999, worksheet.lever_graphs_g2559, 0.002); end
  def test_lever_graphs_h2559; assert_in_epsilon(1500.0, worksheet.lever_graphs_h2559, 0.002); end
  def test_lever_graphs_i2559; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_i2559, 0.002); end
  def test_lever_graphs_j2559; assert_in_epsilon(99.99999999999999, worksheet.lever_graphs_j2559, 0.002); end
  def test_lever_graphs_d2560; assert_equal("2050: Level 1", worksheet.lever_graphs_d2560); end
  def test_lever_graphs_e2560; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_e2560, 0.002); end
  def test_lever_graphs_f2560; assert_in_epsilon(1192.0, worksheet.lever_graphs_f2560, 0.002); end
  def test_lever_graphs_g2560; assert_in_epsilon(558.0, worksheet.lever_graphs_g2560, 0.002); end
  def test_lever_graphs_h2560; assert_in_epsilon(1319.0, worksheet.lever_graphs_h2560, 0.002); end
  def test_lever_graphs_i2560; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_i2560, 0.002); end
  def test_lever_graphs_j2560; assert_in_epsilon(90.0, worksheet.lever_graphs_j2560, 0.002); end
  def test_lever_graphs_d2561; assert_equal("2050: Level 2", worksheet.lever_graphs_d2561); end
  def test_lever_graphs_e2561; assert_in_epsilon(45.0, worksheet.lever_graphs_e2561, 0.002); end
  def test_lever_graphs_f2561; assert_in_epsilon(1062.0, worksheet.lever_graphs_f2561, 0.002); end
  def test_lever_graphs_g2561; assert_in_epsilon(474.99999999999994, worksheet.lever_graphs_g2561, 0.002); end
  def test_lever_graphs_h2561; assert_in_epsilon(1181.0, worksheet.lever_graphs_h2561, 0.002); end
  def test_lever_graphs_i2561; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_i2561, 0.002); end
  def test_lever_graphs_j2561; assert_in_epsilon(85.99999999999999, worksheet.lever_graphs_j2561, 0.002); end
  def test_lever_graphs_d2562; assert_equal("2050: Level 3", worksheet.lever_graphs_d2562); end
  def test_lever_graphs_e2562; assert_in_epsilon(40.0, worksheet.lever_graphs_e2562, 0.002); end
  def test_lever_graphs_f2562; assert_in_epsilon(945.9999999999999, worksheet.lever_graphs_f2562, 0.002); end
  def test_lever_graphs_g2562; assert_in_epsilon(416.99999999999994, worksheet.lever_graphs_g2562, 0.002); end
  def test_lever_graphs_h2562; assert_in_epsilon(1056.9999999999998, worksheet.lever_graphs_h2562, 0.002); end
  def test_lever_graphs_i2562; assert_in_epsilon(192.0, worksheet.lever_graphs_i2562, 0.002); end
  def test_lever_graphs_j2562; assert_in_epsilon(80.0, worksheet.lever_graphs_j2562, 0.002); end
  def test_lever_graphs_d2563; assert_equal("2050: Level 4", worksheet.lever_graphs_d2563); end
  def test_lever_graphs_e2563; assert_in_epsilon(34.0, worksheet.lever_graphs_e2563, 0.002); end
  def test_lever_graphs_f2563; assert_in_epsilon(750.0, worksheet.lever_graphs_f2563, 0.002); end
  def test_lever_graphs_g2563; assert_in_epsilon(365.99999999999994, worksheet.lever_graphs_g2563, 0.002); end
  def test_lever_graphs_h2563; assert_in_epsilon(928.0, worksheet.lever_graphs_h2563, 0.002); end
  def test_lever_graphs_i2563; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_i2563, 0.002); end
  def test_lever_graphs_j2563; assert_in_epsilon(72.99999999999999, worksheet.lever_graphs_j2563, 0.002); end
  def test_lever_graphs_c2578; assert_equal("1975", worksheet.lever_graphs_c2578); end
  def test_lever_graphs_d2578; assert_equal("1980", worksheet.lever_graphs_d2578); end
  def test_lever_graphs_e2578; assert_equal("1985", worksheet.lever_graphs_e2578); end
  def test_lever_graphs_f2578; assert_equal("1990", worksheet.lever_graphs_f2578); end
  def test_lever_graphs_g2578; assert_equal("1995", worksheet.lever_graphs_g2578); end
  def test_lever_graphs_h2578; assert_equal("2000", worksheet.lever_graphs_h2578); end
  def test_lever_graphs_i2578; assert_equal("2005", worksheet.lever_graphs_i2578); end
  def test_lever_graphs_j2578; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2578, 0.002); end
  def test_lever_graphs_k2578; assert_equal("2011", worksheet.lever_graphs_k2578); end
  def test_lever_graphs_l2578; assert_equal("2015", worksheet.lever_graphs_l2578); end
  def test_lever_graphs_m2578; assert_equal("2020", worksheet.lever_graphs_m2578); end
  def test_lever_graphs_n2578; assert_equal("2025", worksheet.lever_graphs_n2578); end
  def test_lever_graphs_o2578; assert_equal("2030", worksheet.lever_graphs_o2578); end
  def test_lever_graphs_p2578; assert_equal("2035", worksheet.lever_graphs_p2578); end
  def test_lever_graphs_q2578; assert_equal("2040", worksheet.lever_graphs_q2578); end
  def test_lever_graphs_r2578; assert_equal("2045", worksheet.lever_graphs_r2578); end
  def test_lever_graphs_s2578; assert_equal("2050", worksheet.lever_graphs_s2578); end
  def test_lever_graphs_b2579; assert_equal("Historic data", worksheet.lever_graphs_b2579); end
  def test_lever_graphs_b2580; assert_in_delta(1.0, worksheet.lever_graphs_b2580, 0.002); end
  def test_lever_graphs_k2580; assert_in_epsilon(65.982, worksheet.lever_graphs_k2580, 0.002); end
  def test_lever_graphs_l2580; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2580, 0.002); end
  def test_lever_graphs_m2580; assert_in_epsilon(63.21692307692307, worksheet.lever_graphs_m2580, 0.002); end
  def test_lever_graphs_n2580; assert_in_epsilon(61.68076923076923, worksheet.lever_graphs_n2580, 0.002); end
  def test_lever_graphs_o2580; assert_in_epsilon(60.14461538461538, worksheet.lever_graphs_o2580, 0.002); end
  def test_lever_graphs_p2580; assert_in_epsilon(58.608461538461526, worksheet.lever_graphs_p2580, 0.002); end
  def test_lever_graphs_q2580; assert_in_epsilon(57.07230769230768, worksheet.lever_graphs_q2580, 0.002); end
  def test_lever_graphs_r2580; assert_in_epsilon(55.53615384615383, worksheet.lever_graphs_r2580, 0.002); end
  def test_lever_graphs_s2580; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_s2580, 0.002); end
  def test_lever_graphs_b2581; assert_in_epsilon(2.0, worksheet.lever_graphs_b2581, 0.002); end
  def test_lever_graphs_k2581; assert_in_epsilon(65.982, worksheet.lever_graphs_k2581, 0.002); end
  def test_lever_graphs_l2581; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2581, 0.002); end
  def test_lever_graphs_m2581; assert_in_epsilon(61.93120879120879, worksheet.lever_graphs_m2581, 0.002); end
  def test_lever_graphs_n2581; assert_in_epsilon(59.10934065934066, worksheet.lever_graphs_n2581, 0.002); end
  def test_lever_graphs_o2581; assert_in_epsilon(56.287472527472524, worksheet.lever_graphs_o2581, 0.002); end
  def test_lever_graphs_p2581; assert_in_epsilon(53.46560439560439, worksheet.lever_graphs_p2581, 0.002); end
  def test_lever_graphs_q2581; assert_in_epsilon(50.64373626373626, worksheet.lever_graphs_q2581, 0.002); end
  def test_lever_graphs_r2581; assert_in_epsilon(47.82186813186812, worksheet.lever_graphs_r2581, 0.002); end
  def test_lever_graphs_s2581; assert_in_epsilon(45.0, worksheet.lever_graphs_s2581, 0.002); end
  def test_lever_graphs_b2582; assert_in_epsilon(3.0, worksheet.lever_graphs_b2582, 0.002); end
  def test_lever_graphs_k2582; assert_in_epsilon(65.982, worksheet.lever_graphs_k2582, 0.002); end
  def test_lever_graphs_l2582; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2582, 0.002); end
  def test_lever_graphs_m2582; assert_in_epsilon(61.21692307692308, worksheet.lever_graphs_m2582, 0.002); end
  def test_lever_graphs_n2582; assert_in_epsilon(57.680769230769236, worksheet.lever_graphs_n2582, 0.002); end
  def test_lever_graphs_o2582; assert_in_epsilon(54.144615384615385, worksheet.lever_graphs_o2582, 0.002); end
  def test_lever_graphs_p2582; assert_in_epsilon(50.60846153846153, worksheet.lever_graphs_p2582, 0.002); end
  def test_lever_graphs_q2582; assert_in_epsilon(47.07230769230769, worksheet.lever_graphs_q2582, 0.002); end
  def test_lever_graphs_r2582; assert_in_epsilon(43.536153846153844, worksheet.lever_graphs_r2582, 0.002); end
  def test_lever_graphs_s2582; assert_in_epsilon(40.0, worksheet.lever_graphs_s2582, 0.002); end
  def test_lever_graphs_b2583; assert_in_epsilon(4.0, worksheet.lever_graphs_b2583, 0.002); end
  def test_lever_graphs_k2583; assert_in_epsilon(65.982, worksheet.lever_graphs_k2583, 0.002); end
  def test_lever_graphs_l2583; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2583, 0.002); end
  def test_lever_graphs_m2583; assert_in_epsilon(60.35978021978022, worksheet.lever_graphs_m2583, 0.002); end
  def test_lever_graphs_n2583; assert_in_epsilon(55.966483516483514, worksheet.lever_graphs_n2583, 0.002); end
  def test_lever_graphs_o2583; assert_in_epsilon(51.573186813186815, worksheet.lever_graphs_o2583, 0.002); end
  def test_lever_graphs_p2583; assert_in_epsilon(47.17989010989011, worksheet.lever_graphs_p2583, 0.002); end
  def test_lever_graphs_q2583; assert_in_epsilon(42.786593406593404, worksheet.lever_graphs_q2583, 0.002); end
  def test_lever_graphs_r2583; assert_in_epsilon(38.3932967032967, worksheet.lever_graphs_r2583, 0.002); end
  def test_lever_graphs_s2583; assert_in_epsilon(34.0, worksheet.lever_graphs_s2583, 0.002); end
  def test_lever_graphs_c2568; assert_equal("1975", worksheet.lever_graphs_c2568); end
  def test_lever_graphs_d2568; assert_equal("1980", worksheet.lever_graphs_d2568); end
  def test_lever_graphs_e2568; assert_equal("1985", worksheet.lever_graphs_e2568); end
  def test_lever_graphs_f2568; assert_equal("1990", worksheet.lever_graphs_f2568); end
  def test_lever_graphs_g2568; assert_equal("1995", worksheet.lever_graphs_g2568); end
  def test_lever_graphs_h2568; assert_equal("2000", worksheet.lever_graphs_h2568); end
  def test_lever_graphs_i2568; assert_equal("2005", worksheet.lever_graphs_i2568); end
  def test_lever_graphs_j2568; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2568, 0.002); end
  def test_lever_graphs_k2568; assert_equal("2011", worksheet.lever_graphs_k2568); end
  def test_lever_graphs_l2568; assert_equal("2015", worksheet.lever_graphs_l2568); end
  def test_lever_graphs_m2568; assert_equal("2020", worksheet.lever_graphs_m2568); end
  def test_lever_graphs_n2568; assert_equal("2025", worksheet.lever_graphs_n2568); end
  def test_lever_graphs_o2568; assert_equal("2030", worksheet.lever_graphs_o2568); end
  def test_lever_graphs_p2568; assert_equal("2035", worksheet.lever_graphs_p2568); end
  def test_lever_graphs_q2568; assert_equal("2040", worksheet.lever_graphs_q2568); end
  def test_lever_graphs_r2568; assert_equal("2045", worksheet.lever_graphs_r2568); end
  def test_lever_graphs_s2568; assert_equal("2050", worksheet.lever_graphs_s2568); end
  def test_lever_graphs_b2569; assert_equal("Historic data", worksheet.lever_graphs_b2569); end
  def test_lever_graphs_b2570; assert_in_delta(1.0, worksheet.lever_graphs_b2570, 0.002); end
  def test_lever_graphs_k2570; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2570, 0.002); end
  def test_lever_graphs_l2570; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2570, 0.002); end
  def test_lever_graphs_m2570; assert_in_epsilon(248.38461538461533, worksheet.lever_graphs_m2570, 0.002); end
  def test_lever_graphs_n2570; assert_in_epsilon(247.4871794871795, worksheet.lever_graphs_n2570, 0.002); end
  def test_lever_graphs_o2570; assert_in_epsilon(246.58974358974356, worksheet.lever_graphs_o2570, 0.002); end
  def test_lever_graphs_p2570; assert_in_epsilon(245.69230769230762, worksheet.lever_graphs_p2570, 0.002); end
  def test_lever_graphs_q2570; assert_in_epsilon(244.7948717948718, worksheet.lever_graphs_q2570, 0.002); end
  def test_lever_graphs_r2570; assert_in_epsilon(243.89743589743586, worksheet.lever_graphs_r2570, 0.002); end
  def test_lever_graphs_s2570; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_s2570, 0.002); end
  def test_lever_graphs_b2571; assert_in_epsilon(2.0, worksheet.lever_graphs_b2571, 0.002); end
  def test_lever_graphs_k2571; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2571, 0.002); end
  def test_lever_graphs_l2571; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2571, 0.002); end
  def test_lever_graphs_m2571; assert_in_epsilon(243.38461538461536, worksheet.lever_graphs_m2571, 0.002); end
  def test_lever_graphs_n2571; assert_in_epsilon(237.48717948717947, worksheet.lever_graphs_n2571, 0.002); end
  def test_lever_graphs_o2571; assert_in_epsilon(231.58974358974353, worksheet.lever_graphs_o2571, 0.002); end
  def test_lever_graphs_p2571; assert_in_epsilon(225.69230769230765, worksheet.lever_graphs_p2571, 0.002); end
  def test_lever_graphs_q2571; assert_in_epsilon(219.79487179487177, worksheet.lever_graphs_q2571, 0.002); end
  def test_lever_graphs_r2571; assert_in_epsilon(213.89743589743586, worksheet.lever_graphs_r2571, 0.002); end
  def test_lever_graphs_s2571; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_s2571, 0.002); end
  def test_lever_graphs_b2572; assert_in_epsilon(3.0, worksheet.lever_graphs_b2572, 0.002); end
  def test_lever_graphs_k2572; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2572, 0.002); end
  def test_lever_graphs_l2572; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2572, 0.002); end
  def test_lever_graphs_m2572; assert_in_epsilon(241.09890109890108, worksheet.lever_graphs_m2572, 0.002); end
  def test_lever_graphs_n2572; assert_in_epsilon(232.9157509157509, worksheet.lever_graphs_n2572, 0.002); end
  def test_lever_graphs_o2572; assert_in_epsilon(224.73260073260073, worksheet.lever_graphs_o2572, 0.002); end
  def test_lever_graphs_p2572; assert_in_epsilon(216.5494505494505, worksheet.lever_graphs_p2572, 0.002); end
  def test_lever_graphs_q2572; assert_in_epsilon(208.36630036630038, worksheet.lever_graphs_q2572, 0.002); end
  def test_lever_graphs_r2572; assert_in_epsilon(200.18315018315016, worksheet.lever_graphs_r2572, 0.002); end
  def test_lever_graphs_s2572; assert_in_epsilon(192.0, worksheet.lever_graphs_s2572, 0.002); end
  def test_lever_graphs_b2573; assert_in_epsilon(4.0, worksheet.lever_graphs_b2573, 0.002); end
  def test_lever_graphs_k2573; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2573, 0.002); end
  def test_lever_graphs_l2573; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2573, 0.002); end
  def test_lever_graphs_m2573; assert_in_epsilon(238.5274725274725, worksheet.lever_graphs_m2573, 0.002); end
  def test_lever_graphs_n2573; assert_in_epsilon(227.77289377289375, worksheet.lever_graphs_n2573, 0.002); end
  def test_lever_graphs_o2573; assert_in_epsilon(217.018315018315, worksheet.lever_graphs_o2573, 0.002); end
  def test_lever_graphs_p2573; assert_in_epsilon(206.26373626373623, worksheet.lever_graphs_p2573, 0.002); end
  def test_lever_graphs_q2573; assert_in_epsilon(195.50915750915746, worksheet.lever_graphs_q2573, 0.002); end
  def test_lever_graphs_r2573; assert_in_epsilon(184.75457875457872, worksheet.lever_graphs_r2573, 0.002); end
  def test_lever_graphs_s2573; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_s2573, 0.002); end
  def test_lever_graphs_d2426; assert_equal("Title", worksheet.lever_graphs_d2426); end
  def test_lever_graphs_e2426; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2426); end
  def test_lever_graphs_f2426; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2426); end
  def test_lever_graphs_g2426; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2426); end
  def test_lever_graphs_h2426; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2426); end
  def test_lever_graphs_i2426; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2426); end
  def test_lever_graphs_j2426; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2426); end
  def test_lever_graphs_d2427; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2427, 0.002); end
  def test_lever_graphs_e2427; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_e2427, 0.002); end
  def test_lever_graphs_f2427; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2427, 0.002); end
  def test_lever_graphs_g2427; assert_in_delta(0.7803646989372999, worksheet.lever_graphs_g2427, 0.002); end
  def test_lever_graphs_h2427; assert_in_delta(0.25750327590507216, worksheet.lever_graphs_h2427, 0.002); end
  def test_lever_graphs_i2427; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2427, 0.002); end
  def test_lever_graphs_j2427; assert_in_epsilon(2.0, worksheet.lever_graphs_j2427, 0.002); end
  def test_lever_graphs_d2428; assert_equal("2050: Level 1", worksheet.lever_graphs_d2428); end
  def test_lever_graphs_e2428; assert_in_epsilon(1.4335294291738556, worksheet.lever_graphs_e2428, 0.002); end
  def test_lever_graphs_f2428; assert_in_delta(0.664498073950059, worksheet.lever_graphs_f2428, 0.002); end
  def test_lever_graphs_g2428; assert_in_delta(0.9988668146397438, worksheet.lever_graphs_g2428, 0.002); end
  def test_lever_graphs_h2428; assert_in_delta(0.6, worksheet.lever_graphs_h2428, 0.002); end
  def test_lever_graphs_i2428; assert_in_epsilon(2.448841089755415, worksheet.lever_graphs_i2428, 0.002); end
  def test_lever_graphs_j2428; assert_in_epsilon(5.0, worksheet.lever_graphs_j2428, 0.002); end
  def test_lever_graphs_d2429; assert_equal("2050: Level 2", worksheet.lever_graphs_d2429); end
  def test_lever_graphs_e2429; assert_in_epsilon(1.2423921719506748, worksheet.lever_graphs_e2429, 0.002); end
  def test_lever_graphs_f2429; assert_in_delta(0.5980482665550532, worksheet.lever_graphs_f2429, 0.002); end
  def test_lever_graphs_g2429; assert_in_delta(0.9208303447460138, worksheet.lever_graphs_g2429, 0.002); end
  def test_lever_graphs_h2429; assert_in_delta(0.492257534581666, worksheet.lever_graphs_h2429, 0.002); end
  def test_lever_graphs_i2429; assert_in_epsilon(2.122328944454693, worksheet.lever_graphs_i2429, 0.002); end
  def test_lever_graphs_j2429; assert_in_epsilon(4.2, worksheet.lever_graphs_j2429, 0.002); end
  def test_lever_graphs_d2430; assert_equal("2050: Level 3", worksheet.lever_graphs_d2430); end
  def test_lever_graphs_e2430; assert_in_epsilon(1.1277098176167664, worksheet.lever_graphs_e2430, 0.002); end
  def test_lever_graphs_f2430; assert_in_delta(0.49837355546254425, worksheet.lever_graphs_f2430, 0.002); end
  def test_lever_graphs_g2430; assert_in_delta(0.8584011688310299, worksheet.lever_graphs_g2430, 0.002); end
  def test_lever_graphs_h2430; assert_in_delta(0.40350589662913, worksheet.lever_graphs_h2430, 0.002); end
  def test_lever_graphs_i2430; assert_in_epsilon(1.9590728718043318, worksheet.lever_graphs_i2430, 0.002); end
  def test_lever_graphs_j2430; assert_in_epsilon(3.6, worksheet.lever_graphs_j2430, 0.002); end
  def test_lever_graphs_d2431; assert_equal("2050: Level 4", worksheet.lever_graphs_d2431); end
  def test_lever_graphs_e2431; assert_in_epsilon(1.0034706004216989, worksheet.lever_graphs_e2431, 0.002); end
  def test_lever_graphs_f2431; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2431, 0.002); end
  def test_lever_graphs_g2431; assert_in_delta(0.8193829338841649, worksheet.lever_graphs_g2431, 0.002); end
  def test_lever_graphs_h2431; assert_in_delta(0.296128767290833, worksheet.lever_graphs_h2431, 0.002); end
  def test_lever_graphs_i2431; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2431, 0.002); end
  def test_lever_graphs_j2431; assert_in_epsilon(3.0, worksheet.lever_graphs_j2431, 0.002); end
  def test_lever_graphs_c2447; assert_equal("1975", worksheet.lever_graphs_c2447); end
  def test_lever_graphs_d2447; assert_equal("1980", worksheet.lever_graphs_d2447); end
  def test_lever_graphs_e2447; assert_equal("1985", worksheet.lever_graphs_e2447); end
  def test_lever_graphs_f2447; assert_equal("1990", worksheet.lever_graphs_f2447); end
  def test_lever_graphs_g2447; assert_equal("1995", worksheet.lever_graphs_g2447); end
  def test_lever_graphs_h2447; assert_equal("2000", worksheet.lever_graphs_h2447); end
  def test_lever_graphs_i2447; assert_equal("2005", worksheet.lever_graphs_i2447); end
  def test_lever_graphs_j2447; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2447, 0.002); end
  def test_lever_graphs_k2447; assert_equal("2011", worksheet.lever_graphs_k2447); end
  def test_lever_graphs_l2447; assert_equal("2015", worksheet.lever_graphs_l2447); end
  def test_lever_graphs_m2447; assert_equal("2020", worksheet.lever_graphs_m2447); end
  def test_lever_graphs_n2447; assert_equal("2025", worksheet.lever_graphs_n2447); end
  def test_lever_graphs_o2447; assert_equal("2030", worksheet.lever_graphs_o2447); end
  def test_lever_graphs_p2447; assert_equal("2035", worksheet.lever_graphs_p2447); end
  def test_lever_graphs_q2447; assert_equal("2040", worksheet.lever_graphs_q2447); end
  def test_lever_graphs_r2447; assert_equal("2045", worksheet.lever_graphs_r2447); end
  def test_lever_graphs_s2447; assert_equal("2050", worksheet.lever_graphs_s2447); end
  def test_lever_graphs_b2448; assert_equal("Historic data", worksheet.lever_graphs_b2448); end
  def test_lever_graphs_b2449; assert_in_delta(1.0, worksheet.lever_graphs_b2449, 0.002); end
  def test_lever_graphs_k2449; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2449, 0.002); end
  def test_lever_graphs_l2449; assert_in_delta(0.98, worksheet.lever_graphs_l2449, 0.002); end
  def test_lever_graphs_m2449; assert_in_epsilon(1.044789918453408, worksheet.lever_graphs_m2449, 0.002); end
  def test_lever_graphs_n2449; assert_in_epsilon(1.109579836906816, worksheet.lever_graphs_n2449, 0.002); end
  def test_lever_graphs_o2449; assert_in_epsilon(1.1743697553602237, worksheet.lever_graphs_o2449, 0.002); end
  def test_lever_graphs_p2449; assert_in_epsilon(1.2391596738136317, worksheet.lever_graphs_p2449, 0.002); end
  def test_lever_graphs_q2449; assert_in_epsilon(1.3039495922670399, worksheet.lever_graphs_q2449, 0.002); end
  def test_lever_graphs_r2449; assert_in_epsilon(1.3687395107204474, worksheet.lever_graphs_r2449, 0.002); end
  def test_lever_graphs_s2449; assert_in_epsilon(1.4335294291738556, worksheet.lever_graphs_s2449, 0.002); end
  def test_lever_graphs_b2450; assert_in_epsilon(2.0, worksheet.lever_graphs_b2450, 0.002); end
  def test_lever_graphs_k2450; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2450, 0.002); end
  def test_lever_graphs_l2450; assert_in_delta(0.98, worksheet.lever_graphs_l2450, 0.002); end
  def test_lever_graphs_m2450; assert_in_epsilon(1.0174845959929535, worksheet.lever_graphs_m2450, 0.002); end
  def test_lever_graphs_n2450; assert_in_epsilon(1.054969191985907, worksheet.lever_graphs_n2450, 0.002); end
  def test_lever_graphs_o2450; assert_in_epsilon(1.0924537879788605, worksheet.lever_graphs_o2450, 0.002); end
  def test_lever_graphs_p2450; assert_in_epsilon(1.129938383971814, worksheet.lever_graphs_p2450, 0.002); end
  def test_lever_graphs_q2450; assert_in_epsilon(1.1674229799647677, worksheet.lever_graphs_q2450, 0.002); end
  def test_lever_graphs_r2450; assert_in_epsilon(1.204907575957721, worksheet.lever_graphs_r2450, 0.002); end
  def test_lever_graphs_s2450; assert_in_epsilon(1.2423921719506748, worksheet.lever_graphs_s2450, 0.002); end
  def test_lever_graphs_b2451; assert_in_epsilon(3.0, worksheet.lever_graphs_b2451, 0.002); end
  def test_lever_graphs_k2451; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2451, 0.002); end
  def test_lever_graphs_l2451; assert_in_delta(0.98, worksheet.lever_graphs_l2451, 0.002); end
  def test_lever_graphs_m2451; assert_in_epsilon(1.001101402516681, worksheet.lever_graphs_m2451, 0.002); end
  def test_lever_graphs_n2451; assert_in_epsilon(1.0222028050333618, worksheet.lever_graphs_n2451, 0.002); end
  def test_lever_graphs_o2451; assert_in_epsilon(1.0433042075500427, worksheet.lever_graphs_o2451, 0.002); end
  def test_lever_graphs_p2451; assert_in_epsilon(1.0644056100667236, worksheet.lever_graphs_p2451, 0.002); end
  def test_lever_graphs_q2451; assert_in_epsilon(1.0855070125834045, worksheet.lever_graphs_q2451, 0.002); end
  def test_lever_graphs_r2451; assert_in_epsilon(1.1066084151000855, worksheet.lever_graphs_r2451, 0.002); end
  def test_lever_graphs_s2451; assert_in_epsilon(1.1277098176167664, worksheet.lever_graphs_s2451, 0.002); end
  def test_lever_graphs_b2452; assert_in_epsilon(4.0, worksheet.lever_graphs_b2452, 0.002); end
  def test_lever_graphs_k2452; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2452, 0.002); end
  def test_lever_graphs_l2452; assert_in_delta(0.98, worksheet.lever_graphs_l2452, 0.002); end
  def test_lever_graphs_m2452; assert_in_delta(0.9833529429173855, worksheet.lever_graphs_m2452, 0.002); end
  def test_lever_graphs_n2452; assert_in_delta(0.986705885834771, worksheet.lever_graphs_n2452, 0.002); end
  def test_lever_graphs_o2452; assert_in_delta(0.9900588287521566, worksheet.lever_graphs_o2452, 0.002); end
  def test_lever_graphs_p2452; assert_in_delta(0.9934117716695421, worksheet.lever_graphs_p2452, 0.002); end
  def test_lever_graphs_q2452; assert_in_delta(0.9967647145869278, worksheet.lever_graphs_q2452, 0.002); end
  def test_lever_graphs_r2452; assert_in_epsilon(1.0001176575043131, worksheet.lever_graphs_r2452, 0.002); end
  def test_lever_graphs_s2452; assert_in_epsilon(1.0034706004216989, worksheet.lever_graphs_s2452, 0.002); end
  def test_lever_graphs_c3472; assert_equal("1975", worksheet.lever_graphs_c3472); end
  def test_lever_graphs_d3472; assert_equal("1980", worksheet.lever_graphs_d3472); end
  def test_lever_graphs_e3472; assert_equal("1985", worksheet.lever_graphs_e3472); end
  def test_lever_graphs_f3472; assert_equal("1990", worksheet.lever_graphs_f3472); end
  def test_lever_graphs_g3472; assert_equal("1995", worksheet.lever_graphs_g3472); end
  def test_lever_graphs_h3472; assert_equal("2000", worksheet.lever_graphs_h3472); end
  def test_lever_graphs_i3472; assert_equal("2005", worksheet.lever_graphs_i3472); end
  def test_lever_graphs_j3472; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3472, 0.002); end
  def test_lever_graphs_k3472; assert_equal("2011", worksheet.lever_graphs_k3472); end
  def test_lever_graphs_l3472; assert_equal("2015", worksheet.lever_graphs_l3472); end
  def test_lever_graphs_m3472; assert_equal("2020", worksheet.lever_graphs_m3472); end
  def test_lever_graphs_n3472; assert_equal("2025", worksheet.lever_graphs_n3472); end
  def test_lever_graphs_o3472; assert_equal("2030", worksheet.lever_graphs_o3472); end
  def test_lever_graphs_p3472; assert_equal("2035", worksheet.lever_graphs_p3472); end
  def test_lever_graphs_q3472; assert_equal("2040", worksheet.lever_graphs_q3472); end
  def test_lever_graphs_r3472; assert_equal("2045", worksheet.lever_graphs_r3472); end
  def test_lever_graphs_s3472; assert_equal("2050", worksheet.lever_graphs_s3472); end
  def test_lever_graphs_b3473; assert_equal("Historic data", worksheet.lever_graphs_b3473); end
  def test_lever_graphs_c3473; assert_in_delta(0.44, worksheet.lever_graphs_c3473, 0.002); end
  def test_lever_graphs_d3473; assert_in_delta(0.44, worksheet.lever_graphs_d3473, 0.002); end
  def test_lever_graphs_e3473; assert_in_delta(0.44, worksheet.lever_graphs_e3473, 0.002); end
  def test_lever_graphs_f3473; assert_in_delta(0.44, worksheet.lever_graphs_f3473, 0.002); end
  def test_lever_graphs_g3473; assert_in_delta(0.44, worksheet.lever_graphs_g3473, 0.002); end
  def test_lever_graphs_h3473; assert_in_delta(0.44, worksheet.lever_graphs_h3473, 0.002); end
  def test_lever_graphs_i3473; assert_in_delta(0.44, worksheet.lever_graphs_i3473, 0.002); end
  def test_lever_graphs_j3473; assert_in_delta(0.44, worksheet.lever_graphs_j3473, 0.002); end
  def test_lever_graphs_k3473; assert_in_delta(0.44, worksheet.lever_graphs_k3473, 0.002); end
  def test_lever_graphs_b3474; assert_in_delta(1.0, worksheet.lever_graphs_b3474, 0.002); end
  def test_lever_graphs_l3474; assert_in_delta(0.44, worksheet.lever_graphs_l3474, 0.002); end
  def test_lever_graphs_m3474; assert_in_delta(0.43176470588235294, worksheet.lever_graphs_m3474, 0.002); end
  def test_lever_graphs_n3474; assert_in_delta(0.4235294117647059, worksheet.lever_graphs_n3474, 0.002); end
  def test_lever_graphs_o3474; assert_in_delta(0.4152941176470588, worksheet.lever_graphs_o3474, 0.002); end
  def test_lever_graphs_p3474; assert_in_delta(0.40705882352941175, worksheet.lever_graphs_p3474, 0.002); end
  def test_lever_graphs_q3474; assert_in_delta(0.3988235294117647, worksheet.lever_graphs_q3474, 0.002); end
  def test_lever_graphs_r3474; assert_in_delta(0.3905882352941176, worksheet.lever_graphs_r3474, 0.002); end
  def test_lever_graphs_s3474; assert_in_delta(0.38235294117647056, worksheet.lever_graphs_s3474, 0.002); end
  def test_lever_graphs_b3475; assert_in_epsilon(2.0, worksheet.lever_graphs_b3475, 0.002); end
  def test_lever_graphs_l3475; assert_in_delta(0.44, worksheet.lever_graphs_l3475, 0.002); end
  def test_lever_graphs_m3475; assert_in_delta(0.44, worksheet.lever_graphs_m3475, 0.002); end
  def test_lever_graphs_n3475; assert_in_delta(0.44, worksheet.lever_graphs_n3475, 0.002); end
  def test_lever_graphs_o3475; assert_in_delta(0.44, worksheet.lever_graphs_o3475, 0.002); end
  def test_lever_graphs_p3475; assert_in_delta(0.44, worksheet.lever_graphs_p3475, 0.002); end
  def test_lever_graphs_q3475; assert_in_delta(0.44, worksheet.lever_graphs_q3475, 0.002); end
  def test_lever_graphs_r3475; assert_in_delta(0.44, worksheet.lever_graphs_r3475, 0.002); end
  def test_lever_graphs_s3475; assert_in_delta(0.44, worksheet.lever_graphs_s3475, 0.002); end
  def test_lever_graphs_b3476; assert_in_epsilon(3.0, worksheet.lever_graphs_b3476, 0.002); end
  def test_lever_graphs_l3476; assert_in_delta(0.44, worksheet.lever_graphs_l3476, 0.002); end
  def test_lever_graphs_m3476; assert_in_delta(0.44941176470588234, worksheet.lever_graphs_m3476, 0.002); end
  def test_lever_graphs_n3476; assert_in_delta(0.4588235294117647, worksheet.lever_graphs_n3476, 0.002); end
  def test_lever_graphs_o3476; assert_in_delta(0.4682352941176471, worksheet.lever_graphs_o3476, 0.002); end
  def test_lever_graphs_p3476; assert_in_delta(0.4776470588235294, worksheet.lever_graphs_p3476, 0.002); end
  def test_lever_graphs_q3476; assert_in_delta(0.48705882352941177, worksheet.lever_graphs_q3476, 0.002); end
  def test_lever_graphs_r3476; assert_in_delta(0.4964705882352941, worksheet.lever_graphs_r3476, 0.002); end
  def test_lever_graphs_s3476; assert_in_delta(0.5058823529411764, worksheet.lever_graphs_s3476, 0.002); end
  def test_lever_graphs_b3477; assert_in_epsilon(4.0, worksheet.lever_graphs_b3477, 0.002); end
  def test_lever_graphs_l3477; assert_in_delta(0.44, worksheet.lever_graphs_l3477, 0.002); end
  def test_lever_graphs_m3477; assert_in_delta(0.4576470588235294, worksheet.lever_graphs_m3477, 0.002); end
  def test_lever_graphs_n3477; assert_in_delta(0.4752941176470588, worksheet.lever_graphs_n3477, 0.002); end
  def test_lever_graphs_o3477; assert_in_delta(0.4929411764705882, worksheet.lever_graphs_o3477, 0.002); end
  def test_lever_graphs_p3477; assert_in_delta(0.5105882352941177, worksheet.lever_graphs_p3477, 0.002); end
  def test_lever_graphs_q3477; assert_in_delta(0.528235294117647, worksheet.lever_graphs_q3477, 0.002); end
  def test_lever_graphs_r3477; assert_in_delta(0.5458823529411765, worksheet.lever_graphs_r3477, 0.002); end
  def test_lever_graphs_s3477; assert_in_delta(0.5635294117647058, worksheet.lever_graphs_s3477, 0.002); end
  def test_lever_graphs_c3076; assert_equal("1975", worksheet.lever_graphs_c3076); end
  def test_lever_graphs_d3076; assert_equal("1980", worksheet.lever_graphs_d3076); end
  def test_lever_graphs_e3076; assert_equal("1985", worksheet.lever_graphs_e3076); end
  def test_lever_graphs_f3076; assert_equal("1990", worksheet.lever_graphs_f3076); end
  def test_lever_graphs_g3076; assert_equal("1995", worksheet.lever_graphs_g3076); end
  def test_lever_graphs_h3076; assert_equal("2000", worksheet.lever_graphs_h3076); end
  def test_lever_graphs_i3076; assert_equal("2005", worksheet.lever_graphs_i3076); end
  def test_lever_graphs_j3076; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3076, 0.002); end
  def test_lever_graphs_k3076; assert_equal("2011", worksheet.lever_graphs_k3076); end
  def test_lever_graphs_l3076; assert_equal("2015", worksheet.lever_graphs_l3076); end
  def test_lever_graphs_m3076; assert_equal("2020", worksheet.lever_graphs_m3076); end
  def test_lever_graphs_n3076; assert_equal("2025", worksheet.lever_graphs_n3076); end
  def test_lever_graphs_o3076; assert_equal("2030", worksheet.lever_graphs_o3076); end
  def test_lever_graphs_p3076; assert_equal("2035", worksheet.lever_graphs_p3076); end
  def test_lever_graphs_q3076; assert_equal("2040", worksheet.lever_graphs_q3076); end
  def test_lever_graphs_r3076; assert_equal("2045", worksheet.lever_graphs_r3076); end
  def test_lever_graphs_s3076; assert_equal("2050", worksheet.lever_graphs_s3076); end
  def test_lever_graphs_b3077; assert_equal("Historic data", worksheet.lever_graphs_b3077); end
  def test_lever_graphs_b3078; assert_in_delta(1.0, worksheet.lever_graphs_b3078, 0.002); end
  def test_lever_graphs_k3078; assert_in_delta(0.4, worksheet.lever_graphs_k3078, 0.002); end
  def test_lever_graphs_l3078; assert_in_delta(0.37948717948717947, worksheet.lever_graphs_l3078, 0.002); end
  def test_lever_graphs_m3078; assert_in_delta(0.3538461538461538, worksheet.lever_graphs_m3078, 0.002); end
  def test_lever_graphs_n3078; assert_in_delta(0.32820512820512815, worksheet.lever_graphs_n3078, 0.002); end
  def test_lever_graphs_o3078; assert_in_delta(0.3025641025641026, worksheet.lever_graphs_o3078, 0.002); end
  def test_lever_graphs_p3078; assert_in_delta(0.27692307692307694, worksheet.lever_graphs_p3078, 0.002); end
  def test_lever_graphs_q3078; assert_in_delta(0.2512820512820513, worksheet.lever_graphs_q3078, 0.002); end
  def test_lever_graphs_r3078; assert_in_delta(0.22564102564102562, worksheet.lever_graphs_r3078, 0.002); end
  def test_lever_graphs_s3078; assert_in_delta(0.19999999999999996, worksheet.lever_graphs_s3078, 0.002); end
  def test_lever_graphs_b3079; assert_in_epsilon(2.0, worksheet.lever_graphs_b3079, 0.002); end
  def test_lever_graphs_k3079; assert_in_delta(0.4, worksheet.lever_graphs_k3079, 0.002); end
  def test_lever_graphs_l3079; assert_in_delta(0.4, worksheet.lever_graphs_l3079, 0.002); end
  def test_lever_graphs_m3079; assert_in_delta(0.4, worksheet.lever_graphs_m3079, 0.002); end
  def test_lever_graphs_n3079; assert_in_delta(0.4, worksheet.lever_graphs_n3079, 0.002); end
  def test_lever_graphs_o3079; assert_in_delta(0.4, worksheet.lever_graphs_o3079, 0.002); end
  def test_lever_graphs_p3079; assert_in_delta(0.4, worksheet.lever_graphs_p3079, 0.002); end
  def test_lever_graphs_q3079; assert_in_delta(0.4, worksheet.lever_graphs_q3079, 0.002); end
  def test_lever_graphs_r3079; assert_in_delta(0.4, worksheet.lever_graphs_r3079, 0.002); end
  def test_lever_graphs_s3079; assert_in_delta(0.4, worksheet.lever_graphs_s3079, 0.002); end
  def test_lever_graphs_b3080; assert_in_epsilon(3.0, worksheet.lever_graphs_b3080, 0.002); end
  def test_lever_graphs_k3080; assert_in_delta(0.4, worksheet.lever_graphs_k3080, 0.002); end
  def test_lever_graphs_l3080; assert_in_delta(0.4205128205128206, worksheet.lever_graphs_l3080, 0.002); end
  def test_lever_graphs_m3080; assert_in_delta(0.4461538461538461, worksheet.lever_graphs_m3080, 0.002); end
  def test_lever_graphs_n3080; assert_in_delta(0.4717948717948718, worksheet.lever_graphs_n3080, 0.002); end
  def test_lever_graphs_o3080; assert_in_delta(0.49743589743589745, worksheet.lever_graphs_o3080, 0.002); end
  def test_lever_graphs_p3080; assert_in_delta(0.5230769230769231, worksheet.lever_graphs_p3080, 0.002); end
  def test_lever_graphs_q3080; assert_in_delta(0.5487179487179488, worksheet.lever_graphs_q3080, 0.002); end
  def test_lever_graphs_r3080; assert_in_delta(0.5743589743589743, worksheet.lever_graphs_r3080, 0.002); end
  def test_lever_graphs_s3080; assert_in_delta(0.6, worksheet.lever_graphs_s3080, 0.002); end
  def test_lever_graphs_b3081; assert_in_epsilon(4.0, worksheet.lever_graphs_b3081, 0.002); end
  def test_lever_graphs_k3081; assert_in_delta(0.4, worksheet.lever_graphs_k3081, 0.002); end
  def test_lever_graphs_l3081; assert_in_delta(0.441025641025641, worksheet.lever_graphs_l3081, 0.002); end
  def test_lever_graphs_m3081; assert_in_delta(0.49230769230769234, worksheet.lever_graphs_m3081, 0.002); end
  def test_lever_graphs_n3081; assert_in_delta(0.5435897435897437, worksheet.lever_graphs_n3081, 0.002); end
  def test_lever_graphs_o3081; assert_in_delta(0.5948717948717949, worksheet.lever_graphs_o3081, 0.002); end
  def test_lever_graphs_p3081; assert_in_delta(0.6461538461538462, worksheet.lever_graphs_p3081, 0.002); end
  def test_lever_graphs_q3081; assert_in_delta(0.6974358974358974, worksheet.lever_graphs_q3081, 0.002); end
  def test_lever_graphs_r3081; assert_in_delta(0.7487179487179487, worksheet.lever_graphs_r3081, 0.002); end
  def test_lever_graphs_s3081; assert_in_delta(0.8, worksheet.lever_graphs_s3081, 0.002); end
  def test_lever_graphs_c3058; assert_equal("1975", worksheet.lever_graphs_c3058); end
  def test_lever_graphs_d3058; assert_equal("1980", worksheet.lever_graphs_d3058); end
  def test_lever_graphs_e3058; assert_equal("1985", worksheet.lever_graphs_e3058); end
  def test_lever_graphs_f3058; assert_equal("1990", worksheet.lever_graphs_f3058); end
  def test_lever_graphs_g3058; assert_equal("1995", worksheet.lever_graphs_g3058); end
  def test_lever_graphs_h3058; assert_equal("2000", worksheet.lever_graphs_h3058); end
  def test_lever_graphs_i3058; assert_equal("2005", worksheet.lever_graphs_i3058); end
  def test_lever_graphs_j3058; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3058, 0.002); end
  def test_lever_graphs_k3058; assert_equal("2011", worksheet.lever_graphs_k3058); end
  def test_lever_graphs_l3058; assert_equal("2015", worksheet.lever_graphs_l3058); end
  def test_lever_graphs_m3058; assert_equal("2020", worksheet.lever_graphs_m3058); end
  def test_lever_graphs_n3058; assert_equal("2025", worksheet.lever_graphs_n3058); end
  def test_lever_graphs_o3058; assert_equal("2030", worksheet.lever_graphs_o3058); end
  def test_lever_graphs_p3058; assert_equal("2035", worksheet.lever_graphs_p3058); end
  def test_lever_graphs_q3058; assert_equal("2040", worksheet.lever_graphs_q3058); end
  def test_lever_graphs_r3058; assert_equal("2045", worksheet.lever_graphs_r3058); end
  def test_lever_graphs_s3058; assert_equal("2050", worksheet.lever_graphs_s3058); end
  def test_lever_graphs_b3059; assert_equal("Historic data", worksheet.lever_graphs_b3059); end
  def test_lever_graphs_b3060; assert_in_delta(1.0, worksheet.lever_graphs_b3060, 0.002); end
  def test_lever_graphs_k3060; assert_in_delta(0.0, (worksheet.lever_graphs_k3060||0), 0.002); end
  def test_lever_graphs_l3060; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l3060, 0.002); end
  def test_lever_graphs_m3060; assert_in_delta(0.046153846153846156, worksheet.lever_graphs_m3060, 0.002); end
  def test_lever_graphs_n3060; assert_in_delta(0.07179487179487179, worksheet.lever_graphs_n3060, 0.002); end
  def test_lever_graphs_o3060; assert_in_delta(0.09743589743589742, worksheet.lever_graphs_o3060, 0.002); end
  def test_lever_graphs_p3060; assert_in_delta(0.12307692307692307, worksheet.lever_graphs_p3060, 0.002); end
  def test_lever_graphs_q3060; assert_in_delta(0.14871794871794874, worksheet.lever_graphs_q3060, 0.002); end
  def test_lever_graphs_r3060; assert_in_delta(0.17435897435897435, worksheet.lever_graphs_r3060, 0.002); end
  def test_lever_graphs_s3060; assert_in_delta(0.2, worksheet.lever_graphs_s3060, 0.002); end
  def test_lever_graphs_b3061; assert_in_epsilon(2.0, worksheet.lever_graphs_b3061, 0.002); end
  def test_lever_graphs_k3061; assert_in_delta(0.0, (worksheet.lever_graphs_k3061||0), 0.002); end
  def test_lever_graphs_l3061; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l3061, 0.002); end
  def test_lever_graphs_m3061; assert_in_delta(0.089010989010989, worksheet.lever_graphs_m3061, 0.002); end
  def test_lever_graphs_n3061; assert_in_delta(0.1575091575091575, worksheet.lever_graphs_n3061, 0.002); end
  def test_lever_graphs_o3061; assert_in_delta(0.226007326007326, worksheet.lever_graphs_o3061, 0.002); end
  def test_lever_graphs_p3061; assert_in_delta(0.29450549450549446, worksheet.lever_graphs_p3061, 0.002); end
  def test_lever_graphs_q3061; assert_in_delta(0.363003663003663, worksheet.lever_graphs_q3061, 0.002); end
  def test_lever_graphs_r3061; assert_in_delta(0.43150183150183147, worksheet.lever_graphs_r3061, 0.002); end
  def test_lever_graphs_s3061; assert_in_delta(0.5, worksheet.lever_graphs_s3061, 0.002); end
  def test_lever_graphs_b3062; assert_in_epsilon(3.0, worksheet.lever_graphs_b3062, 0.002); end
  def test_lever_graphs_k3062; assert_in_delta(0.0, (worksheet.lever_graphs_k3062||0), 0.002); end
  def test_lever_graphs_l3062; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l3062, 0.002); end
  def test_lever_graphs_m3062; assert_in_delta(0.189010989010989, worksheet.lever_graphs_m3062, 0.002); end
  def test_lever_graphs_n3062; assert_in_delta(0.35750915750915746, worksheet.lever_graphs_n3062, 0.002); end
  def test_lever_graphs_o3062; assert_in_delta(0.526007326007326, worksheet.lever_graphs_o3062, 0.002); end
  def test_lever_graphs_p3062; assert_in_delta(0.6945054945054945, worksheet.lever_graphs_p3062, 0.002); end
  def test_lever_graphs_q3062; assert_in_delta(0.863003663003663, worksheet.lever_graphs_q3062, 0.002); end
  def test_lever_graphs_r3062; assert_in_epsilon(1.0315018315018314, worksheet.lever_graphs_r3062, 0.002); end
  def test_lever_graphs_s3062; assert_in_epsilon(1.2, worksheet.lever_graphs_s3062, 0.002); end
  def test_lever_graphs_b3063; assert_in_epsilon(4.0, worksheet.lever_graphs_b3063, 0.002); end
  def test_lever_graphs_k3063; assert_in_delta(0.0, (worksheet.lever_graphs_k3063||0), 0.002); end
  def test_lever_graphs_l3063; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l3063, 0.002); end
  def test_lever_graphs_m3063; assert_in_delta(0.3032967032967033, worksheet.lever_graphs_m3063, 0.002); end
  def test_lever_graphs_n3063; assert_in_delta(0.5860805860805861, worksheet.lever_graphs_n3063, 0.002); end
  def test_lever_graphs_o3063; assert_in_delta(0.8688644688644689, worksheet.lever_graphs_o3063, 0.002); end
  def test_lever_graphs_p3063; assert_in_epsilon(1.1516483516483516, worksheet.lever_graphs_p3063, 0.002); end
  def test_lever_graphs_q3063; assert_in_epsilon(1.4344322344322344, worksheet.lever_graphs_q3063, 0.002); end
  def test_lever_graphs_r3063; assert_in_epsilon(1.717216117216117, worksheet.lever_graphs_r3063, 0.002); end
  def test_lever_graphs_s3063; assert_in_epsilon(2.0, worksheet.lever_graphs_s3063, 0.002); end
  def test_lever_graphs_c2332; assert_equal("1975", worksheet.lever_graphs_c2332); end
  def test_lever_graphs_d2332; assert_equal("1980", worksheet.lever_graphs_d2332); end
  def test_lever_graphs_e2332; assert_equal("1985", worksheet.lever_graphs_e2332); end
  def test_lever_graphs_f2332; assert_equal("1990", worksheet.lever_graphs_f2332); end
  def test_lever_graphs_g2332; assert_equal("1995", worksheet.lever_graphs_g2332); end
  def test_lever_graphs_h2332; assert_equal("2000", worksheet.lever_graphs_h2332); end
  def test_lever_graphs_i2332; assert_equal("2005", worksheet.lever_graphs_i2332); end
  def test_lever_graphs_j2332; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2332, 0.002); end
  def test_lever_graphs_k2332; assert_equal("2011", worksheet.lever_graphs_k2332); end
  def test_lever_graphs_l2332; assert_equal("2015", worksheet.lever_graphs_l2332); end
  def test_lever_graphs_m2332; assert_equal("2020", worksheet.lever_graphs_m2332); end
  def test_lever_graphs_n2332; assert_equal("2025", worksheet.lever_graphs_n2332); end
  def test_lever_graphs_o2332; assert_equal("2030", worksheet.lever_graphs_o2332); end
  def test_lever_graphs_p2332; assert_equal("2035", worksheet.lever_graphs_p2332); end
  def test_lever_graphs_q2332; assert_equal("2040", worksheet.lever_graphs_q2332); end
  def test_lever_graphs_r2332; assert_equal("2045", worksheet.lever_graphs_r2332); end
  def test_lever_graphs_s2332; assert_equal("2050", worksheet.lever_graphs_s2332); end
  def test_lever_graphs_b2333; assert_equal("Historic data", worksheet.lever_graphs_b2333); end
  def test_lever_graphs_b2334; assert_in_delta(1.0, worksheet.lever_graphs_b2334, 0.002); end
  def test_lever_graphs_k2334; assert_in_epsilon(78.0, worksheet.lever_graphs_k2334, 0.002); end
  def test_lever_graphs_l2334; assert_in_epsilon(79.0, worksheet.lever_graphs_l2334, 0.002); end
  def test_lever_graphs_m2334; assert_in_epsilon(81.99999999999999, worksheet.lever_graphs_m2334, 0.002); end
  def test_lever_graphs_n2334; assert_in_epsilon(85.0, worksheet.lever_graphs_n2334, 0.002); end
  def test_lever_graphs_o2334; assert_in_epsilon(87.99999999999999, worksheet.lever_graphs_o2334, 0.002); end
  def test_lever_graphs_p2334; assert_in_epsilon(90.99999999999999, worksheet.lever_graphs_p2334, 0.002); end
  def test_lever_graphs_q2334; assert_in_epsilon(94.0, worksheet.lever_graphs_q2334, 0.002); end
  def test_lever_graphs_r2334; assert_in_epsilon(97.0, worksheet.lever_graphs_r2334, 0.002); end
  def test_lever_graphs_s2334; assert_in_epsilon(100.0, worksheet.lever_graphs_s2334, 0.002); end
  def test_lever_graphs_b2335; assert_in_epsilon(2.0, worksheet.lever_graphs_b2335, 0.002); end
  def test_lever_graphs_k2335; assert_in_epsilon(78.0, worksheet.lever_graphs_k2335, 0.002); end
  def test_lever_graphs_l2335; assert_in_epsilon(79.0, worksheet.lever_graphs_l2335, 0.002); end
  def test_lever_graphs_m2335; assert_in_epsilon(81.28571428571428, worksheet.lever_graphs_m2335, 0.002); end
  def test_lever_graphs_n2335; assert_in_epsilon(83.57142857142857, worksheet.lever_graphs_n2335, 0.002); end
  def test_lever_graphs_o2335; assert_in_epsilon(85.85714285714285, worksheet.lever_graphs_o2335, 0.002); end
  def test_lever_graphs_p2335; assert_in_epsilon(88.14285714285714, worksheet.lever_graphs_p2335, 0.002); end
  def test_lever_graphs_q2335; assert_in_epsilon(90.42857142857143, worksheet.lever_graphs_q2335, 0.002); end
  def test_lever_graphs_r2335; assert_in_epsilon(92.71428571428571, worksheet.lever_graphs_r2335, 0.002); end
  def test_lever_graphs_s2335; assert_in_epsilon(95.0, worksheet.lever_graphs_s2335, 0.002); end
  def test_lever_graphs_b2336; assert_in_epsilon(3.0, worksheet.lever_graphs_b2336, 0.002); end
  def test_lever_graphs_k2336; assert_in_epsilon(78.0, worksheet.lever_graphs_k2336, 0.002); end
  def test_lever_graphs_l2336; assert_in_epsilon(79.0, worksheet.lever_graphs_l2336, 0.002); end
  def test_lever_graphs_m2336; assert_in_epsilon(80.57142857142856, worksheet.lever_graphs_m2336, 0.002); end
  def test_lever_graphs_n2336; assert_in_epsilon(82.14285714285714, worksheet.lever_graphs_n2336, 0.002); end
  def test_lever_graphs_o2336; assert_in_epsilon(83.7142857142857, worksheet.lever_graphs_o2336, 0.002); end
  def test_lever_graphs_p2336; assert_in_epsilon(85.28571428571428, worksheet.lever_graphs_p2336, 0.002); end
  def test_lever_graphs_q2336; assert_in_epsilon(86.85714285714285, worksheet.lever_graphs_q2336, 0.002); end
  def test_lever_graphs_r2336; assert_in_epsilon(88.42857142857142, worksheet.lever_graphs_r2336, 0.002); end
  def test_lever_graphs_s2336; assert_in_epsilon(89.99999999999999, worksheet.lever_graphs_s2336, 0.002); end
  def test_lever_graphs_b2337; assert_in_epsilon(4.0, worksheet.lever_graphs_b2337, 0.002); end
  def test_lever_graphs_k2337; assert_in_epsilon(78.0, worksheet.lever_graphs_k2337, 0.002); end
  def test_lever_graphs_l2337; assert_in_epsilon(79.0, worksheet.lever_graphs_l2337, 0.002); end
  def test_lever_graphs_m2337; assert_in_epsilon(79.85714285714283, worksheet.lever_graphs_m2337, 0.002); end
  def test_lever_graphs_n2337; assert_in_epsilon(80.71428571428571, worksheet.lever_graphs_n2337, 0.002); end
  def test_lever_graphs_o2337; assert_in_epsilon(81.57142857142857, worksheet.lever_graphs_o2337, 0.002); end
  def test_lever_graphs_p2337; assert_in_epsilon(82.42857142857143, worksheet.lever_graphs_p2337, 0.002); end
  def test_lever_graphs_q2337; assert_in_epsilon(83.28571428571428, worksheet.lever_graphs_q2337, 0.002); end
  def test_lever_graphs_r2337; assert_in_epsilon(84.14285714285714, worksheet.lever_graphs_r2337, 0.002); end
  def test_lever_graphs_s2337; assert_in_epsilon(85.0, worksheet.lever_graphs_s2337, 0.002); end
  def test_lever_graphs_b2338; assert_equal("Australia -average", worksheet.lever_graphs_b2338); end
  def test_lever_graphs_k2338; assert_in_epsilon(214.0, worksheet.lever_graphs_k2338, 0.002); end
  def test_lever_graphs_b2339; assert_equal("US -average", worksheet.lever_graphs_b2339); end
  def test_lever_graphs_k2339; assert_in_epsilon(201.0, worksheet.lever_graphs_k2339, 0.002); end
  def test_lever_graphs_b2340; assert_equal("Germany -average", worksheet.lever_graphs_b2340); end
  def test_lever_graphs_k2340; assert_in_epsilon(109.0, worksheet.lever_graphs_k2340, 0.002); end
  def test_lever_graphs_b2341; assert_equal("Spain -average", worksheet.lever_graphs_b2341); end
  def test_lever_graphs_k2341; assert_in_epsilon(97.0, worksheet.lever_graphs_k2341, 0.002); end
  def test_lever_graphs_b2342; assert_equal("UK -average", worksheet.lever_graphs_b2342); end
  def test_lever_graphs_k2342; assert_in_epsilon(76.0, worksheet.lever_graphs_k2342, 0.002); end
  def test_lever_graphs_b2343; assert_equal("China -average", worksheet.lever_graphs_b2343); end
  def test_lever_graphs_k2343; assert_in_epsilon(60.0, worksheet.lever_graphs_k2343, 0.002); end
  def test_lever_graphs_b2344; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2344); end
  def test_lever_graphs_k2344; assert_in_epsilon(45.0, worksheet.lever_graphs_k2344, 0.002); end
  def test_lever_graphs_c2315; assert_equal("1975", worksheet.lever_graphs_c2315); end
  def test_lever_graphs_d2315; assert_equal("1980", worksheet.lever_graphs_d2315); end
  def test_lever_graphs_e2315; assert_equal("1985", worksheet.lever_graphs_e2315); end
  def test_lever_graphs_f2315; assert_equal("1990", worksheet.lever_graphs_f2315); end
  def test_lever_graphs_g2315; assert_equal("1995", worksheet.lever_graphs_g2315); end
  def test_lever_graphs_h2315; assert_equal("2000", worksheet.lever_graphs_h2315); end
  def test_lever_graphs_i2315; assert_equal("2005", worksheet.lever_graphs_i2315); end
  def test_lever_graphs_j2315; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2315, 0.002); end
  def test_lever_graphs_k2315; assert_equal("2011", worksheet.lever_graphs_k2315); end
  def test_lever_graphs_l2315; assert_equal("2015", worksheet.lever_graphs_l2315); end
  def test_lever_graphs_m2315; assert_equal("2020", worksheet.lever_graphs_m2315); end
  def test_lever_graphs_n2315; assert_equal("2025", worksheet.lever_graphs_n2315); end
  def test_lever_graphs_o2315; assert_equal("2030", worksheet.lever_graphs_o2315); end
  def test_lever_graphs_p2315; assert_equal("2035", worksheet.lever_graphs_p2315); end
  def test_lever_graphs_q2315; assert_equal("2040", worksheet.lever_graphs_q2315); end
  def test_lever_graphs_r2315; assert_equal("2045", worksheet.lever_graphs_r2315); end
  def test_lever_graphs_s2315; assert_equal("2050", worksheet.lever_graphs_s2315); end
  def test_lever_graphs_b2316; assert_equal("Historical data", worksheet.lever_graphs_b2316); end
  def test_lever_graphs_b2317; assert_in_delta(1.0, worksheet.lever_graphs_b2317, 0.002); end
  def test_lever_graphs_k2317; assert_in_epsilon(92.0, worksheet.lever_graphs_k2317, 0.002); end
  def test_lever_graphs_l2317; assert_in_epsilon(93.2, worksheet.lever_graphs_l2317, 0.002); end
  def test_lever_graphs_m2317; assert_in_epsilon(95.6, worksheet.lever_graphs_m2317, 0.002); end
  def test_lever_graphs_n2317; assert_in_epsilon(98.0, worksheet.lever_graphs_n2317, 0.002); end
  def test_lever_graphs_o2317; assert_in_epsilon(100.39999999999999, worksheet.lever_graphs_o2317, 0.002); end
  def test_lever_graphs_p2317; assert_in_epsilon(102.8, worksheet.lever_graphs_p2317, 0.002); end
  def test_lever_graphs_q2317; assert_in_epsilon(105.2, worksheet.lever_graphs_q2317, 0.002); end
  def test_lever_graphs_r2317; assert_in_epsilon(107.6, worksheet.lever_graphs_r2317, 0.002); end
  def test_lever_graphs_s2317; assert_in_epsilon(110.0, worksheet.lever_graphs_s2317, 0.002); end
  def test_lever_graphs_b2318; assert_in_epsilon(2.0, worksheet.lever_graphs_b2318, 0.002); end
  def test_lever_graphs_k2318; assert_in_epsilon(92.0, worksheet.lever_graphs_k2318, 0.002); end
  def test_lever_graphs_l2318; assert_in_epsilon(93.2, worksheet.lever_graphs_l2318, 0.002); end
  def test_lever_graphs_m2318; assert_in_epsilon(94.88571428571427, worksheet.lever_graphs_m2318, 0.002); end
  def test_lever_graphs_n2318; assert_in_epsilon(96.57142857142857, worksheet.lever_graphs_n2318, 0.002); end
  def test_lever_graphs_o2318; assert_in_epsilon(98.25714285714284, worksheet.lever_graphs_o2318, 0.002); end
  def test_lever_graphs_p2318; assert_in_epsilon(99.94285714285714, worksheet.lever_graphs_p2318, 0.002); end
  def test_lever_graphs_q2318; assert_in_epsilon(101.62857142857142, worksheet.lever_graphs_q2318, 0.002); end
  def test_lever_graphs_r2318; assert_in_epsilon(103.3142857142857, worksheet.lever_graphs_r2318, 0.002); end
  def test_lever_graphs_s2318; assert_in_epsilon(105.0, worksheet.lever_graphs_s2318, 0.002); end
  def test_lever_graphs_b2319; assert_in_epsilon(3.0, worksheet.lever_graphs_b2319, 0.002); end
  def test_lever_graphs_k2319; assert_in_epsilon(92.0, worksheet.lever_graphs_k2319, 0.002); end
  def test_lever_graphs_l2319; assert_in_epsilon(93.2, worksheet.lever_graphs_l2319, 0.002); end
  def test_lever_graphs_m2319; assert_in_epsilon(94.17142857142856, worksheet.lever_graphs_m2319, 0.002); end
  def test_lever_graphs_n2319; assert_in_epsilon(95.14285714285715, worksheet.lever_graphs_n2319, 0.002); end
  def test_lever_graphs_o2319; assert_in_epsilon(96.11428571428571, worksheet.lever_graphs_o2319, 0.002); end
  def test_lever_graphs_p2319; assert_in_epsilon(97.08571428571427, worksheet.lever_graphs_p2319, 0.002); end
  def test_lever_graphs_q2319; assert_in_epsilon(98.05714285714285, worksheet.lever_graphs_q2319, 0.002); end
  def test_lever_graphs_r2319; assert_in_epsilon(99.02857142857142, worksheet.lever_graphs_r2319, 0.002); end
  def test_lever_graphs_s2319; assert_in_epsilon(100.0, worksheet.lever_graphs_s2319, 0.002); end
  def test_lever_graphs_b2320; assert_in_epsilon(4.0, worksheet.lever_graphs_b2320, 0.002); end
  def test_lever_graphs_k2320; assert_in_epsilon(92.0, worksheet.lever_graphs_k2320, 0.002); end
  def test_lever_graphs_l2320; assert_in_epsilon(93.2, worksheet.lever_graphs_l2320, 0.002); end
  def test_lever_graphs_m2320; assert_in_epsilon(93.45714285714284, worksheet.lever_graphs_m2320, 0.002); end
  def test_lever_graphs_n2320; assert_in_epsilon(93.71428571428572, worksheet.lever_graphs_n2320, 0.002); end
  def test_lever_graphs_o2320; assert_in_epsilon(93.97142857142858, worksheet.lever_graphs_o2320, 0.002); end
  def test_lever_graphs_p2320; assert_in_epsilon(94.22857142857143, worksheet.lever_graphs_p2320, 0.002); end
  def test_lever_graphs_q2320; assert_in_epsilon(94.4857142857143, worksheet.lever_graphs_q2320, 0.002); end
  def test_lever_graphs_r2320; assert_in_epsilon(94.74285714285715, worksheet.lever_graphs_r2320, 0.002); end
  def test_lever_graphs_s2320; assert_in_epsilon(95.0, worksheet.lever_graphs_s2320, 0.002); end
  def test_lever_graphs_b2321; assert_equal("Australia -average", worksheet.lever_graphs_b2321); end
  def test_lever_graphs_k2321; assert_in_epsilon(214.0, worksheet.lever_graphs_k2321, 0.002); end
  def test_lever_graphs_b2322; assert_equal("US -average", worksheet.lever_graphs_b2322); end
  def test_lever_graphs_k2322; assert_in_epsilon(201.0, worksheet.lever_graphs_k2322, 0.002); end
  def test_lever_graphs_b2323; assert_equal("Germany -average", worksheet.lever_graphs_b2323); end
  def test_lever_graphs_k2323; assert_in_epsilon(109.0, worksheet.lever_graphs_k2323, 0.002); end
  def test_lever_graphs_b2324; assert_equal("Spain -average", worksheet.lever_graphs_b2324); end
  def test_lever_graphs_k2324; assert_in_epsilon(97.0, worksheet.lever_graphs_k2324, 0.002); end
  def test_lever_graphs_b2325; assert_equal("UK -average", worksheet.lever_graphs_b2325); end
  def test_lever_graphs_k2325; assert_in_epsilon(76.0, worksheet.lever_graphs_k2325, 0.002); end
  def test_lever_graphs_b2326; assert_equal("China -average", worksheet.lever_graphs_b2326); end
  def test_lever_graphs_k2326; assert_in_epsilon(60.0, worksheet.lever_graphs_k2326, 0.002); end
  def test_lever_graphs_b2327; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2327); end
  def test_lever_graphs_k2327; assert_in_epsilon(45.0, worksheet.lever_graphs_k2327, 0.002); end
  def test_lever_graphs_c2863; assert_equal("1975", worksheet.lever_graphs_c2863); end
  def test_lever_graphs_d2863; assert_equal("1980", worksheet.lever_graphs_d2863); end
  def test_lever_graphs_e2863; assert_equal("1985", worksheet.lever_graphs_e2863); end
  def test_lever_graphs_f2863; assert_equal("1990", worksheet.lever_graphs_f2863); end
  def test_lever_graphs_g2863; assert_equal("1995", worksheet.lever_graphs_g2863); end
  def test_lever_graphs_h2863; assert_equal("2000", worksheet.lever_graphs_h2863); end
  def test_lever_graphs_i2863; assert_equal("2005", worksheet.lever_graphs_i2863); end
  def test_lever_graphs_j2863; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2863, 0.002); end
  def test_lever_graphs_k2863; assert_equal("2011", worksheet.lever_graphs_k2863); end
  def test_lever_graphs_l2863; assert_equal("2015", worksheet.lever_graphs_l2863); end
  def test_lever_graphs_m2863; assert_equal("2020", worksheet.lever_graphs_m2863); end
  def test_lever_graphs_n2863; assert_equal("2025", worksheet.lever_graphs_n2863); end
  def test_lever_graphs_o2863; assert_equal("2030", worksheet.lever_graphs_o2863); end
  def test_lever_graphs_p2863; assert_equal("2035", worksheet.lever_graphs_p2863); end
  def test_lever_graphs_q2863; assert_equal("2040", worksheet.lever_graphs_q2863); end
  def test_lever_graphs_r2863; assert_equal("2045", worksheet.lever_graphs_r2863); end
  def test_lever_graphs_s2863; assert_equal("2050", worksheet.lever_graphs_s2863); end
  def test_lever_graphs_b2864; assert_equal("Historic data", worksheet.lever_graphs_b2864); end
  def test_lever_graphs_c2864; assert_in_epsilon(1820.2, worksheet.lever_graphs_c2864, 0.002); end
  def test_lever_graphs_d2864; assert_in_epsilon(1891.64, worksheet.lever_graphs_d2864, 0.002); end
  def test_lever_graphs_e2864; assert_in_epsilon(1966.88, worksheet.lever_graphs_e2864, 0.002); end
  def test_lever_graphs_f2864; assert_in_epsilon(1991.2, worksheet.lever_graphs_f2864, 0.002); end
  def test_lever_graphs_g2864; assert_in_epsilon(2023.12, worksheet.lever_graphs_g2864, 0.002); end
  def test_lever_graphs_h2864; assert_in_epsilon(2071.76, worksheet.lever_graphs_h2864, 0.002); end
  def test_lever_graphs_i2864; assert_in_epsilon(2098.36, worksheet.lever_graphs_i2864, 0.002); end
  def test_lever_graphs_j2864; assert_in_epsilon(2167.0, worksheet.lever_graphs_j2864, 0.002); end
  def test_lever_graphs_k2864; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2864, 0.002); end
  def test_lever_graphs_b2865; assert_in_delta(1.0, worksheet.lever_graphs_b2865, 0.002); end
  def test_lever_graphs_k2865; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2865, 0.002); end
  def test_lever_graphs_l2865; assert_in_epsilon(2196.666666666667, worksheet.lever_graphs_l2865, 0.002); end
  def test_lever_graphs_m2865; assert_in_epsilon(2210.1358204171893, worksheet.lever_graphs_m2865, 0.002); end
  def test_lever_graphs_n2865; assert_in_epsilon(2233.852276261972, worksheet.lever_graphs_n2865, 0.002); end
  def test_lever_graphs_o2865; assert_in_epsilon(2288.381506649597, worksheet.lever_graphs_o2865, 0.002); end
  def test_lever_graphs_p2865; assert_in_epsilon(2378.3333333333335, worksheet.lever_graphs_p2865, 0.002); end
  def test_lever_graphs_q2865; assert_in_epsilon(2468.2851600170698, worksheet.lever_graphs_q2865, 0.002); end
  def test_lever_graphs_r2865; assert_in_epsilon(2522.8143904046947, worksheet.lever_graphs_r2865, 0.002); end
  def test_lever_graphs_s2865; assert_in_epsilon(2560.0, worksheet.lever_graphs_s2865, 0.002); end
  def test_lever_graphs_b2866; assert_in_epsilon(2.0, worksheet.lever_graphs_b2866, 0.002); end
  def test_lever_graphs_k2866; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2866, 0.002); end
  def test_lever_graphs_l2866; assert_in_epsilon(2196.666666666667, worksheet.lever_graphs_l2866, 0.002); end
  def test_lever_graphs_m2866; assert_in_epsilon(2205.316581919296, worksheet.lever_graphs_m2866, 0.002); end
  def test_lever_graphs_n2866; assert_in_epsilon(2220.5473333792484, worksheet.lever_graphs_n2866, 0.002); end
  def test_lever_graphs_o2866; assert_in_epsilon(2255.5661051878146, worksheet.lever_graphs_o2866, 0.002); end
  def test_lever_graphs_p2866; assert_in_epsilon(2313.3333333333335, worksheet.lever_graphs_p2866, 0.002); end
  def test_lever_graphs_q2866; assert_in_epsilon(2371.100561478852, worksheet.lever_graphs_q2866, 0.002); end
  def test_lever_graphs_r2866; assert_in_epsilon(2406.1193332874186, worksheet.lever_graphs_r2866, 0.002); end
  def test_lever_graphs_s2866; assert_in_epsilon(2430.0, worksheet.lever_graphs_s2866, 0.002); end
  def test_lever_graphs_b2867; assert_in_epsilon(3.0, worksheet.lever_graphs_b2867, 0.002); end
  def test_lever_graphs_k2867; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2867, 0.002); end
  def test_lever_graphs_l2867; assert_in_epsilon(2196.666666666667, worksheet.lever_graphs_l2867, 0.002); end
  def test_lever_graphs_m2867; assert_in_epsilon(2201.6094753824545, worksheet.lever_graphs_m2867, 0.002); end
  def test_lever_graphs_n2867; assert_in_epsilon(2210.312761930999, worksheet.lever_graphs_n2867, 0.002); end
  def test_lever_graphs_o2867; assert_in_epsilon(2230.3234886787513, worksheet.lever_graphs_o2867, 0.002); end
  def test_lever_graphs_p2867; assert_in_epsilon(2263.3333333333335, worksheet.lever_graphs_p2867, 0.002); end
  def test_lever_graphs_q2867; assert_in_epsilon(2296.343177987915, worksheet.lever_graphs_q2867, 0.002); end
  def test_lever_graphs_r2867; assert_in_epsilon(2316.3539047356676, worksheet.lever_graphs_r2867, 0.002); end
  def test_lever_graphs_s2867; assert_in_epsilon(2330.0, worksheet.lever_graphs_s2867, 0.002); end
  def test_lever_graphs_b2868; assert_in_epsilon(4.0, worksheet.lever_graphs_b2868, 0.002); end
  def test_lever_graphs_k2868; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2868, 0.002); end
  def test_lever_graphs_l2868; assert_in_epsilon(2196.666666666667, worksheet.lever_graphs_l2868, 0.002); end
  def test_lever_graphs_m2868; assert_in_epsilon(2193.0831303477203, worksheet.lever_graphs_m2868, 0.002); end
  def test_lever_graphs_n2868; assert_in_epsilon(2186.773247600026, worksheet.lever_graphs_n2868, 0.002); end
  def test_lever_graphs_o2868; assert_in_epsilon(2172.2654707079055, worksheet.lever_graphs_o2868, 0.002); end
  def test_lever_graphs_p2868; assert_in_epsilon(2148.3333333333335, worksheet.lever_graphs_p2868, 0.002); end
  def test_lever_graphs_q2868; assert_in_epsilon(2124.4011959587615, worksheet.lever_graphs_q2868, 0.002); end
  def test_lever_graphs_r2868; assert_in_epsilon(2109.893419066641, worksheet.lever_graphs_r2868, 0.002); end
  def test_lever_graphs_s2868; assert_in_epsilon(2100.0, worksheet.lever_graphs_s2868, 0.002); end
  def test_lever_graphs_b2869; assert_equal("USA today", worksheet.lever_graphs_b2869); end
  def test_lever_graphs_k2869; assert_in_epsilon(2729.0, worksheet.lever_graphs_k2869, 0.002); end
  def test_lever_graphs_b2870; assert_equal("EU today", worksheet.lever_graphs_b2870); end
  def test_lever_graphs_k2870; assert_in_epsilon(2520.0, worksheet.lever_graphs_k2870, 0.002); end
  def test_lever_graphs_b2871; assert_equal("Australia today", worksheet.lever_graphs_b2871); end
  def test_lever_graphs_k2871; assert_in_epsilon(2449.0, worksheet.lever_graphs_k2871, 0.002); end
  def test_lever_graphs_b2872; assert_equal("China today", worksheet.lever_graphs_b2872); end
  def test_lever_graphs_k2872; assert_in_epsilon(2306.0, worksheet.lever_graphs_k2872, 0.002); end
  def test_lever_graphs_b2873; assert_equal("South Africa today", worksheet.lever_graphs_b2873); end
  def test_lever_graphs_k2873; assert_in_epsilon(2255.0, worksheet.lever_graphs_k2873, 0.002); end
  def test_lever_graphs_b2874; assert_equal("Bangladesh today", worksheet.lever_graphs_b2874); end
  def test_lever_graphs_k2874; assert_in_epsilon(1823.0, worksheet.lever_graphs_k2874, 0.002); end
  def test_lever_graphs_b2875; assert_equal("Malaysia today", worksheet.lever_graphs_b2875); end
  def test_lever_graphs_k2875; assert_in_epsilon(2141.0, worksheet.lever_graphs_k2875, 0.002); end
  def test_lever_graphs_b2876; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2876); end
  def test_lever_graphs_k2876; assert_in_epsilon(2100.0, worksheet.lever_graphs_k2876, 0.002); end
  def test_lever_graphs_c1827; assert_equal("1975", worksheet.lever_graphs_c1827); end
  def test_lever_graphs_d1827; assert_equal("1980", worksheet.lever_graphs_d1827); end
  def test_lever_graphs_e1827; assert_equal("1985", worksheet.lever_graphs_e1827); end
  def test_lever_graphs_f1827; assert_equal("1990", worksheet.lever_graphs_f1827); end
  def test_lever_graphs_g1827; assert_equal("1995", worksheet.lever_graphs_g1827); end
  def test_lever_graphs_h1827; assert_equal("2000", worksheet.lever_graphs_h1827); end
  def test_lever_graphs_i1827; assert_equal("2005", worksheet.lever_graphs_i1827); end
  def test_lever_graphs_j1827; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1827, 0.002); end
  def test_lever_graphs_k1827; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1827, 0.002); end
  def test_lever_graphs_l1827; assert_equal("2015", worksheet.lever_graphs_l1827); end
  def test_lever_graphs_m1827; assert_equal("2020", worksheet.lever_graphs_m1827); end
  def test_lever_graphs_n1827; assert_equal("2025", worksheet.lever_graphs_n1827); end
  def test_lever_graphs_o1827; assert_equal("2030", worksheet.lever_graphs_o1827); end
  def test_lever_graphs_p1827; assert_equal("2035", worksheet.lever_graphs_p1827); end
  def test_lever_graphs_q1827; assert_equal("2040", worksheet.lever_graphs_q1827); end
  def test_lever_graphs_r1827; assert_equal("2045", worksheet.lever_graphs_r1827); end
  def test_lever_graphs_s1827; assert_equal("2050", worksheet.lever_graphs_s1827); end
  def test_lever_graphs_b1828; assert_equal("Historic data", worksheet.lever_graphs_b1828); end
  def test_lever_graphs_b1829; assert_in_delta(1.0, worksheet.lever_graphs_b1829, 0.002); end
  def test_lever_graphs_k1829; assert_in_delta(0.0, (worksheet.lever_graphs_k1829||0), 0.002); end
  def test_lever_graphs_l1829; assert_in_epsilon(2.6, worksheet.lever_graphs_l1829, 0.002); end
  def test_lever_graphs_m1829; assert_in_epsilon(16.0, worksheet.lever_graphs_m1829, 0.002); end
  def test_lever_graphs_n1829; assert_in_epsilon(16.0, worksheet.lever_graphs_n1829, 0.002); end
  def test_lever_graphs_o1829; assert_in_epsilon(16.0, worksheet.lever_graphs_o1829, 0.002); end
  def test_lever_graphs_p1829; assert_in_epsilon(16.0, worksheet.lever_graphs_p1829, 0.002); end
  def test_lever_graphs_q1829; assert_in_epsilon(16.0, worksheet.lever_graphs_q1829, 0.002); end
  def test_lever_graphs_r1829; assert_in_epsilon(16.0, worksheet.lever_graphs_r1829, 0.002); end
  def test_lever_graphs_s1829; assert_in_epsilon(16.0, worksheet.lever_graphs_s1829, 0.002); end
  def test_lever_graphs_b1830; assert_in_epsilon(2.0, worksheet.lever_graphs_b1830, 0.002); end
  def test_lever_graphs_k1830; assert_in_delta(0.0, (worksheet.lever_graphs_k1830||0), 0.002); end
  def test_lever_graphs_l1830; assert_in_epsilon(9.0, worksheet.lever_graphs_l1830, 0.002); end
  def test_lever_graphs_m1830; assert_in_epsilon(18.0, worksheet.lever_graphs_m1830, 0.002); end
  def test_lever_graphs_n1830; assert_in_epsilon(36.0, worksheet.lever_graphs_n1830, 0.002); end
  def test_lever_graphs_o1830; assert_in_epsilon(114.0, worksheet.lever_graphs_o1830, 0.002); end
  def test_lever_graphs_p1830; assert_in_epsilon(159.6, worksheet.lever_graphs_p1830, 0.002); end
  def test_lever_graphs_q1830; assert_in_epsilon(223.4, worksheet.lever_graphs_q1830, 0.002); end
  def test_lever_graphs_r1830; assert_in_epsilon(312.8, worksheet.lever_graphs_r1830, 0.002); end
  def test_lever_graphs_s1830; assert_in_epsilon(490.0, worksheet.lever_graphs_s1830, 0.002); end
  def test_lever_graphs_b1831; assert_in_epsilon(3.0, worksheet.lever_graphs_b1831, 0.002); end
  def test_lever_graphs_k1831; assert_in_delta(0.0, (worksheet.lever_graphs_k1831||0), 0.002); end
  def test_lever_graphs_l1831; assert_in_epsilon(9.0, worksheet.lever_graphs_l1831, 0.002); end
  def test_lever_graphs_m1831; assert_in_epsilon(31.3, worksheet.lever_graphs_m1831, 0.002); end
  def test_lever_graphs_n1831; assert_in_epsilon(108.9, worksheet.lever_graphs_n1831, 0.002); end
  def test_lever_graphs_o1831; assert_in_epsilon(380.0, worksheet.lever_graphs_o1831, 0.002); end
  def test_lever_graphs_p1831; assert_in_epsilon(535.8, worksheet.lever_graphs_p1831, 0.002); end
  def test_lever_graphs_q1831; assert_in_epsilon(755.5, worksheet.lever_graphs_q1831, 0.002); end
  def test_lever_graphs_r1831; assert_in_epsilon(1065.3, worksheet.lever_graphs_r1831, 0.002); end
  def test_lever_graphs_s1831; assert_in_epsilon(1487.0, worksheet.lever_graphs_s1831, 0.002); end
  def test_lever_graphs_b1832; assert_in_epsilon(4.0, worksheet.lever_graphs_b1832, 0.002); end
  def test_lever_graphs_k1832; assert_in_delta(0.0, (worksheet.lever_graphs_k1832||0), 0.002); end
  def test_lever_graphs_l1832; assert_in_epsilon(16.0, worksheet.lever_graphs_l1832, 0.002); end
  def test_lever_graphs_m1832; assert_in_epsilon(380.0, worksheet.lever_graphs_m1832, 0.002); end
  def test_lever_graphs_n1832; assert_in_epsilon(760.0, worksheet.lever_graphs_n1832, 0.002); end
  def test_lever_graphs_o1832; assert_in_epsilon(1266.7, worksheet.lever_graphs_o1832, 0.002); end
  def test_lever_graphs_p1832; assert_in_epsilon(1773.4, worksheet.lever_graphs_p1832, 0.002); end
  def test_lever_graphs_q1832; assert_in_epsilon(2482.8, worksheet.lever_graphs_q1832, 0.002); end
  def test_lever_graphs_r1832; assert_in_epsilon(3000.0, worksheet.lever_graphs_r1832, 0.002); end
  def test_lever_graphs_s1832; assert_in_epsilon(3700.0, worksheet.lever_graphs_s1832, 0.002); end
  def test_lever_graphs_b1833; assert_equal("Comparator A", worksheet.lever_graphs_b1833); end
  def test_lever_graphs_b1834; assert_equal("Comparator B", worksheet.lever_graphs_b1834); end
  def test_lever_graphs_b1835; assert_equal("Comparator C", worksheet.lever_graphs_b1835); end
  def test_lever_graphs_c1851; assert_equal("1975", worksheet.lever_graphs_c1851); end
  def test_lever_graphs_d1851; assert_equal("1980", worksheet.lever_graphs_d1851); end
  def test_lever_graphs_e1851; assert_equal("1985", worksheet.lever_graphs_e1851); end
  def test_lever_graphs_f1851; assert_equal("1990", worksheet.lever_graphs_f1851); end
  def test_lever_graphs_g1851; assert_equal("1995", worksheet.lever_graphs_g1851); end
  def test_lever_graphs_h1851; assert_equal("2000", worksheet.lever_graphs_h1851); end
  def test_lever_graphs_i1851; assert_equal("2005", worksheet.lever_graphs_i1851); end
  def test_lever_graphs_j1851; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1851, 0.002); end
  def test_lever_graphs_k1851; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1851, 0.002); end
  def test_lever_graphs_l1851; assert_equal("2015", worksheet.lever_graphs_l1851); end
  def test_lever_graphs_m1851; assert_equal("2020", worksheet.lever_graphs_m1851); end
  def test_lever_graphs_n1851; assert_equal("2025", worksheet.lever_graphs_n1851); end
  def test_lever_graphs_o1851; assert_equal("2030", worksheet.lever_graphs_o1851); end
  def test_lever_graphs_p1851; assert_equal("2035", worksheet.lever_graphs_p1851); end
  def test_lever_graphs_q1851; assert_equal("2040", worksheet.lever_graphs_q1851); end
  def test_lever_graphs_r1851; assert_equal("2045", worksheet.lever_graphs_r1851); end
  def test_lever_graphs_s1851; assert_equal("2050", worksheet.lever_graphs_s1851); end
  def test_lever_graphs_b1852; assert_equal("Historic data", worksheet.lever_graphs_b1852); end
  def test_lever_graphs_b1853; assert_in_delta(1.0, worksheet.lever_graphs_b1853, 0.002); end
  def test_lever_graphs_k1853; assert_in_epsilon(1.6, worksheet.lever_graphs_k1853, 0.002); end
  def test_lever_graphs_l1853; assert_in_epsilon(8.0, worksheet.lever_graphs_l1853, 0.002); end
  def test_lever_graphs_m1853; assert_in_epsilon(30.0, worksheet.lever_graphs_m1853, 0.002); end
  def test_lever_graphs_n1853; assert_in_epsilon(30.0, worksheet.lever_graphs_n1853, 0.002); end
  def test_lever_graphs_o1853; assert_in_epsilon(20.0, worksheet.lever_graphs_o1853, 0.002); end
  def test_lever_graphs_p1853; assert_in_epsilon(20.0, worksheet.lever_graphs_p1853, 0.002); end
  def test_lever_graphs_q1853; assert_in_delta(0.0, (worksheet.lever_graphs_q1853||0), 0.002); end
  def test_lever_graphs_r1853; assert_in_delta(0.0, (worksheet.lever_graphs_r1853||0), 0.002); end
  def test_lever_graphs_s1853; assert_in_delta(0.0, (worksheet.lever_graphs_s1853||0), 0.002); end
  def test_lever_graphs_b1854; assert_in_epsilon(2.0, worksheet.lever_graphs_b1854, 0.002); end
  def test_lever_graphs_k1854; assert_in_epsilon(1.6, worksheet.lever_graphs_k1854, 0.002); end
  def test_lever_graphs_l1854; assert_in_epsilon(8.0, worksheet.lever_graphs_l1854, 0.002); end
  def test_lever_graphs_m1854; assert_in_epsilon(71.0, worksheet.lever_graphs_m1854, 0.002); end
  def test_lever_graphs_n1854; assert_in_epsilon(101.0, worksheet.lever_graphs_n1854, 0.002); end
  def test_lever_graphs_o1854; assert_in_epsilon(164.0, worksheet.lever_graphs_o1854, 0.002); end
  def test_lever_graphs_p1854; assert_in_epsilon(199.0, worksheet.lever_graphs_p1854, 0.002); end
  def test_lever_graphs_q1854; assert_in_epsilon(267.0, worksheet.lever_graphs_q1854, 0.002); end
  def test_lever_graphs_r1854; assert_in_epsilon(312.0, worksheet.lever_graphs_r1854, 0.002); end
  def test_lever_graphs_s1854; assert_in_epsilon(388.0, worksheet.lever_graphs_s1854, 0.002); end
  def test_lever_graphs_b1855; assert_in_epsilon(3.0, worksheet.lever_graphs_b1855, 0.002); end
  def test_lever_graphs_k1855; assert_in_epsilon(1.6, worksheet.lever_graphs_k1855, 0.002); end
  def test_lever_graphs_l1855; assert_in_epsilon(8.0, worksheet.lever_graphs_l1855, 0.002); end
  def test_lever_graphs_m1855; assert_in_epsilon(83.0, worksheet.lever_graphs_m1855, 0.002); end
  def test_lever_graphs_n1855; assert_in_epsilon(146.3, worksheet.lever_graphs_n1855, 0.002); end
  def test_lever_graphs_o1855; assert_in_epsilon(257.8, worksheet.lever_graphs_o1855, 0.002); end
  def test_lever_graphs_p1855; assert_in_epsilon(396.6, worksheet.lever_graphs_p1855, 0.002); end
  def test_lever_graphs_q1855; assert_in_epsilon(610.3, worksheet.lever_graphs_q1855, 0.002); end
  def test_lever_graphs_r1855; assert_in_epsilon(778.9, worksheet.lever_graphs_r1855, 0.002); end
  def test_lever_graphs_s1855; assert_in_epsilon(994.1, worksheet.lever_graphs_s1855, 0.002); end
  def test_lever_graphs_b1856; assert_in_epsilon(4.0, worksheet.lever_graphs_b1856, 0.002); end
  def test_lever_graphs_k1856; assert_in_epsilon(1.6, worksheet.lever_graphs_k1856, 0.002); end
  def test_lever_graphs_l1856; assert_in_epsilon(8.0, worksheet.lever_graphs_l1856, 0.002); end
  def test_lever_graphs_m1856; assert_in_epsilon(97.6, worksheet.lever_graphs_m1856, 0.002); end
  def test_lever_graphs_n1856; assert_in_epsilon(196.2, worksheet.lever_graphs_n1856, 0.002); end
  def test_lever_graphs_o1856; assert_in_epsilon(394.7, worksheet.lever_graphs_o1856, 0.002); end
  def test_lever_graphs_p1856; assert_in_epsilon(665.1, worksheet.lever_graphs_p1856, 0.002); end
  def test_lever_graphs_q1856; assert_in_epsilon(1120.8, worksheet.lever_graphs_q1856, 0.002); end
  def test_lever_graphs_r1856; assert_in_epsilon(1499.9, worksheet.lever_graphs_r1856, 0.002); end
  def test_lever_graphs_s1856; assert_in_epsilon(2007.1, worksheet.lever_graphs_s1856, 0.002); end
  def test_lever_graphs_b1857; assert_equal("Comparator A", worksheet.lever_graphs_b1857); end
  def test_lever_graphs_b1858; assert_equal("Comparator B", worksheet.lever_graphs_b1858); end
  def test_lever_graphs_b1859; assert_equal("Comparator C", worksheet.lever_graphs_b1859); end
  def test_lever_graphs_c1804; assert_equal("1975", worksheet.lever_graphs_c1804); end
  def test_lever_graphs_d1804; assert_equal("1980", worksheet.lever_graphs_d1804); end
  def test_lever_graphs_e1804; assert_equal("1985", worksheet.lever_graphs_e1804); end
  def test_lever_graphs_f1804; assert_equal("1990", worksheet.lever_graphs_f1804); end
  def test_lever_graphs_g1804; assert_equal("1995", worksheet.lever_graphs_g1804); end
  def test_lever_graphs_h1804; assert_equal("2000", worksheet.lever_graphs_h1804); end
  def test_lever_graphs_i1804; assert_equal("2005", worksheet.lever_graphs_i1804); end
  def test_lever_graphs_j1804; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1804, 0.002); end
  def test_lever_graphs_k1804; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1804, 0.002); end
  def test_lever_graphs_l1804; assert_equal("2015", worksheet.lever_graphs_l1804); end
  def test_lever_graphs_m1804; assert_equal("2020", worksheet.lever_graphs_m1804); end
  def test_lever_graphs_n1804; assert_equal("2025", worksheet.lever_graphs_n1804); end
  def test_lever_graphs_o1804; assert_equal("2030", worksheet.lever_graphs_o1804); end
  def test_lever_graphs_p1804; assert_equal("2035", worksheet.lever_graphs_p1804); end
  def test_lever_graphs_q1804; assert_equal("2040", worksheet.lever_graphs_q1804); end
  def test_lever_graphs_r1804; assert_equal("2045", worksheet.lever_graphs_r1804); end
  def test_lever_graphs_s1804; assert_equal("2050", worksheet.lever_graphs_s1804); end
  def test_lever_graphs_b1805; assert_equal("Historic data", worksheet.lever_graphs_b1805); end
  def test_lever_graphs_b1806; assert_in_delta(1.0, worksheet.lever_graphs_b1806, 0.002); end
  def test_lever_graphs_k1806; assert_in_epsilon(11.43, worksheet.lever_graphs_k1806, 0.002); end
  def test_lever_graphs_l1806; assert_in_epsilon(14.5, worksheet.lever_graphs_l1806, 0.002); end
  def test_lever_graphs_m1806; assert_in_epsilon(16.0, worksheet.lever_graphs_m1806, 0.002); end
  def test_lever_graphs_n1806; assert_in_epsilon(16.0, worksheet.lever_graphs_n1806, 0.002); end
  def test_lever_graphs_o1806; assert_in_epsilon(10.0, worksheet.lever_graphs_o1806, 0.002); end
  def test_lever_graphs_p1806; assert_in_epsilon(7.0, worksheet.lever_graphs_p1806, 0.002); end
  def test_lever_graphs_q1806; assert_in_epsilon(4.0, worksheet.lever_graphs_q1806, 0.002); end
  def test_lever_graphs_r1806; assert_in_delta(0.0, (worksheet.lever_graphs_r1806||0), 0.002); end
  def test_lever_graphs_s1806; assert_in_delta(0.0, (worksheet.lever_graphs_s1806||0), 0.002); end
  def test_lever_graphs_b1807; assert_in_epsilon(2.0, worksheet.lever_graphs_b1807, 0.002); end
  def test_lever_graphs_k1807; assert_in_epsilon(11.43, worksheet.lever_graphs_k1807, 0.002); end
  def test_lever_graphs_l1807; assert_in_epsilon(14.5, worksheet.lever_graphs_l1807, 0.002); end
  def test_lever_graphs_m1807; assert_in_epsilon(19.0, worksheet.lever_graphs_m1807, 0.002); end
  def test_lever_graphs_n1807; assert_in_epsilon(25.0, worksheet.lever_graphs_n1807, 0.002); end
  def test_lever_graphs_o1807; assert_in_epsilon(39.0, worksheet.lever_graphs_o1807, 0.002); end
  def test_lever_graphs_p1807; assert_in_epsilon(73.0, worksheet.lever_graphs_p1807, 0.002); end
  def test_lever_graphs_q1807; assert_in_epsilon(98.0, worksheet.lever_graphs_q1807, 0.002); end
  def test_lever_graphs_r1807; assert_in_epsilon(137.0, worksheet.lever_graphs_r1807, 0.002); end
  def test_lever_graphs_s1807; assert_in_epsilon(172.0, worksheet.lever_graphs_s1807, 0.002); end
  def test_lever_graphs_b1808; assert_in_epsilon(3.0, worksheet.lever_graphs_b1808, 0.002); end
  def test_lever_graphs_k1808; assert_in_epsilon(11.43, worksheet.lever_graphs_k1808, 0.002); end
  def test_lever_graphs_l1808; assert_in_epsilon(14.5, worksheet.lever_graphs_l1808, 0.002); end
  def test_lever_graphs_m1808; assert_in_epsilon(23.0, worksheet.lever_graphs_m1808, 0.002); end
  def test_lever_graphs_n1808; assert_in_epsilon(38.0, worksheet.lever_graphs_n1808, 0.002); end
  def test_lever_graphs_o1808; assert_in_epsilon(60.0, worksheet.lever_graphs_o1808, 0.002); end
  def test_lever_graphs_p1808; assert_in_epsilon(103.0, worksheet.lever_graphs_p1808, 0.002); end
  def test_lever_graphs_q1808; assert_in_epsilon(169.0, worksheet.lever_graphs_q1808, 0.002); end
  def test_lever_graphs_r1808; assert_in_epsilon(237.0, worksheet.lever_graphs_r1808, 0.002); end
  def test_lever_graphs_s1808; assert_in_epsilon(289.0, worksheet.lever_graphs_s1808, 0.002); end
  def test_lever_graphs_b1809; assert_in_epsilon(4.0, worksheet.lever_graphs_b1809, 0.002); end
  def test_lever_graphs_k1809; assert_in_epsilon(11.43, worksheet.lever_graphs_k1809, 0.002); end
  def test_lever_graphs_l1809; assert_in_epsilon(14.5, worksheet.lever_graphs_l1809, 0.002); end
  def test_lever_graphs_m1809; assert_in_epsilon(25.35, worksheet.lever_graphs_m1809, 0.002); end
  def test_lever_graphs_n1809; assert_in_epsilon(43.79, worksheet.lever_graphs_n1809, 0.002); end
  def test_lever_graphs_o1809; assert_in_epsilon(75.63, worksheet.lever_graphs_o1809, 0.002); end
  def test_lever_graphs_p1809; assert_in_epsilon(130.64, worksheet.lever_graphs_p1809, 0.002); end
  def test_lever_graphs_q1809; assert_in_epsilon(226.0, worksheet.lever_graphs_q1809, 0.002); end
  def test_lever_graphs_r1809; assert_in_epsilon(302.0, worksheet.lever_graphs_r1809, 0.002); end
  def test_lever_graphs_s1809; assert_in_epsilon(404.0, worksheet.lever_graphs_s1809, 0.002); end
  def test_lever_graphs_b1810; assert_equal("Comparator A", worksheet.lever_graphs_b1810); end
  def test_lever_graphs_b1811; assert_equal("Comparator B", worksheet.lever_graphs_b1811); end
  def test_lever_graphs_b1812; assert_equal("Comparator C", worksheet.lever_graphs_b1812); end
  def test_lever_graphs_c1782; assert_equal("1975", worksheet.lever_graphs_c1782); end
  def test_lever_graphs_d1782; assert_equal("1980", worksheet.lever_graphs_d1782); end
  def test_lever_graphs_e1782; assert_equal("1985", worksheet.lever_graphs_e1782); end
  def test_lever_graphs_f1782; assert_equal("1990", worksheet.lever_graphs_f1782); end
  def test_lever_graphs_g1782; assert_equal("1995", worksheet.lever_graphs_g1782); end
  def test_lever_graphs_h1782; assert_equal("2000", worksheet.lever_graphs_h1782); end
  def test_lever_graphs_i1782; assert_equal("2005", worksheet.lever_graphs_i1782); end
  def test_lever_graphs_j1782; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1782, 0.002); end
  def test_lever_graphs_k1782; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1782, 0.002); end
  def test_lever_graphs_l1782; assert_equal("2015", worksheet.lever_graphs_l1782); end
  def test_lever_graphs_m1782; assert_equal("2020", worksheet.lever_graphs_m1782); end
  def test_lever_graphs_n1782; assert_equal("2025", worksheet.lever_graphs_n1782); end
  def test_lever_graphs_o1782; assert_equal("2030", worksheet.lever_graphs_o1782); end
  def test_lever_graphs_p1782; assert_equal("2035", worksheet.lever_graphs_p1782); end
  def test_lever_graphs_q1782; assert_equal("2040", worksheet.lever_graphs_q1782); end
  def test_lever_graphs_r1782; assert_equal("2045", worksheet.lever_graphs_r1782); end
  def test_lever_graphs_s1782; assert_equal("2050", worksheet.lever_graphs_s1782); end
  def test_lever_graphs_b1783; assert_equal("Historic data", worksheet.lever_graphs_b1783); end
  def test_lever_graphs_b1784; assert_in_delta(1.0, worksheet.lever_graphs_b1784, 0.002); end
  def test_lever_graphs_k1784; assert_in_epsilon(970.0, worksheet.lever_graphs_k1784, 0.002); end
  def test_lever_graphs_l1784; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1784, 0.002); end
  def test_lever_graphs_m1784; assert_in_epsilon(1380.0, worksheet.lever_graphs_m1784, 0.002); end
  def test_lever_graphs_n1784; assert_in_epsilon(1420.0, worksheet.lever_graphs_n1784, 0.002); end
  def test_lever_graphs_o1784; assert_in_epsilon(1420.0, worksheet.lever_graphs_o1784, 0.002); end
  def test_lever_graphs_p1784; assert_in_epsilon(1420.0, worksheet.lever_graphs_p1784, 0.002); end
  def test_lever_graphs_q1784; assert_in_epsilon(1188.0, worksheet.lever_graphs_q1784, 0.002); end
  def test_lever_graphs_r1784; assert_in_epsilon(1188.0, worksheet.lever_graphs_r1784, 0.002); end
  def test_lever_graphs_s1784; assert_in_epsilon(1188.0, worksheet.lever_graphs_s1784, 0.002); end
  def test_lever_graphs_b1785; assert_in_epsilon(2.0, worksheet.lever_graphs_b1785, 0.002); end
  def test_lever_graphs_k1785; assert_in_epsilon(970.0, worksheet.lever_graphs_k1785, 0.002); end
  def test_lever_graphs_l1785; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1785, 0.002); end
  def test_lever_graphs_m1785; assert_in_epsilon(1410.0, worksheet.lever_graphs_m1785, 0.002); end
  def test_lever_graphs_n1785; assert_in_epsilon(1460.0, worksheet.lever_graphs_n1785, 0.002); end
  def test_lever_graphs_o1785; assert_in_epsilon(1515.0, worksheet.lever_graphs_o1785, 0.002); end
  def test_lever_graphs_p1785; assert_in_epsilon(1570.0, worksheet.lever_graphs_p1785, 0.002); end
  def test_lever_graphs_q1785; assert_in_epsilon(1625.0, worksheet.lever_graphs_q1785, 0.002); end
  def test_lever_graphs_r1785; assert_in_epsilon(1685.0, worksheet.lever_graphs_r1785, 0.002); end
  def test_lever_graphs_s1785; assert_in_epsilon(1750.0, worksheet.lever_graphs_s1785, 0.002); end
  def test_lever_graphs_b1786; assert_in_epsilon(3.0, worksheet.lever_graphs_b1786, 0.002); end
  def test_lever_graphs_k1786; assert_in_epsilon(970.0, worksheet.lever_graphs_k1786, 0.002); end
  def test_lever_graphs_l1786; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1786, 0.002); end
  def test_lever_graphs_m1786; assert_in_epsilon(1510.0, worksheet.lever_graphs_m1786, 0.002); end
  def test_lever_graphs_n1786; assert_in_epsilon(1590.0, worksheet.lever_graphs_n1786, 0.002); end
  def test_lever_graphs_o1786; assert_in_epsilon(1670.0, worksheet.lever_graphs_o1786, 0.002); end
  def test_lever_graphs_p1786; assert_in_epsilon(1750.0, worksheet.lever_graphs_p1786, 0.002); end
  def test_lever_graphs_q1786; assert_in_epsilon(1865.0, worksheet.lever_graphs_q1786, 0.002); end
  def test_lever_graphs_r1786; assert_in_epsilon(1982.0, worksheet.lever_graphs_r1786, 0.002); end
  def test_lever_graphs_s1786; assert_in_epsilon(2101.0, worksheet.lever_graphs_s1786, 0.002); end
  def test_lever_graphs_b1787; assert_in_epsilon(4.0, worksheet.lever_graphs_b1787, 0.002); end
  def test_lever_graphs_k1787; assert_in_epsilon(970.0, worksheet.lever_graphs_k1787, 0.002); end
  def test_lever_graphs_l1787; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1787, 0.002); end
  def test_lever_graphs_m1787; assert_in_epsilon(1650.0, worksheet.lever_graphs_m1787, 0.002); end
  def test_lever_graphs_n1787; assert_in_epsilon(1850.0, worksheet.lever_graphs_n1787, 0.002); end
  def test_lever_graphs_o1787; assert_in_epsilon(1995.0, worksheet.lever_graphs_o1787, 0.002); end
  def test_lever_graphs_p1787; assert_in_epsilon(2140.0, worksheet.lever_graphs_p1787, 0.002); end
  def test_lever_graphs_q1787; assert_in_epsilon(2285.0, worksheet.lever_graphs_q1787, 0.002); end
  def test_lever_graphs_r1787; assert_in_epsilon(2330.0, worksheet.lever_graphs_r1787, 0.002); end
  def test_lever_graphs_s1787; assert_in_epsilon(2375.0, worksheet.lever_graphs_s1787, 0.002); end
  def test_lever_graphs_b1788; assert_equal("Comparator A", worksheet.lever_graphs_b1788); end
  def test_lever_graphs_b1789; assert_equal("Comparator B", worksheet.lever_graphs_b1789); end
  def test_lever_graphs_b1790; assert_equal("Comparator C", worksheet.lever_graphs_b1790); end
  def test_lever_graphs_c1995; assert_equal("1975", worksheet.lever_graphs_c1995); end
  def test_lever_graphs_d1995; assert_equal("1980", worksheet.lever_graphs_d1995); end
  def test_lever_graphs_e1995; assert_equal("1985", worksheet.lever_graphs_e1995); end
  def test_lever_graphs_f1995; assert_equal("1990", worksheet.lever_graphs_f1995); end
  def test_lever_graphs_g1995; assert_equal("1995", worksheet.lever_graphs_g1995); end
  def test_lever_graphs_h1995; assert_equal("2000", worksheet.lever_graphs_h1995); end
  def test_lever_graphs_i1995; assert_equal("2005", worksheet.lever_graphs_i1995); end
  def test_lever_graphs_j1995; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1995, 0.002); end
  def test_lever_graphs_k1995; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1995, 0.002); end
  def test_lever_graphs_l1995; assert_equal("2015", worksheet.lever_graphs_l1995); end
  def test_lever_graphs_m1995; assert_equal("2020", worksheet.lever_graphs_m1995); end
  def test_lever_graphs_n1995; assert_equal("2025", worksheet.lever_graphs_n1995); end
  def test_lever_graphs_o1995; assert_equal("2030", worksheet.lever_graphs_o1995); end
  def test_lever_graphs_p1995; assert_equal("2035", worksheet.lever_graphs_p1995); end
  def test_lever_graphs_q1995; assert_equal("2040", worksheet.lever_graphs_q1995); end
  def test_lever_graphs_r1995; assert_equal("2045", worksheet.lever_graphs_r1995); end
  def test_lever_graphs_s1995; assert_equal("2050", worksheet.lever_graphs_s1995); end
  def test_lever_graphs_b1996; assert_equal("Historic data", worksheet.lever_graphs_b1996); end
  def test_lever_graphs_b1997; assert_in_delta(1.0, worksheet.lever_graphs_b1997, 0.002); end
  def test_lever_graphs_k1997; assert_in_delta(0.527, worksheet.lever_graphs_k1997, 0.002); end
  def test_lever_graphs_l1997; assert_in_epsilon(1.1, worksheet.lever_graphs_l1997, 0.002); end
  def test_lever_graphs_m1997; assert_in_epsilon(1.1, worksheet.lever_graphs_m1997, 0.002); end
  def test_lever_graphs_n1997; assert_in_epsilon(1.1, worksheet.lever_graphs_n1997, 0.002); end
  def test_lever_graphs_o1997; assert_in_epsilon(2.0, worksheet.lever_graphs_o1997, 0.002); end
  def test_lever_graphs_p1997; assert_in_epsilon(3.0, worksheet.lever_graphs_p1997, 0.002); end
  def test_lever_graphs_q1997; assert_in_epsilon(5.0, worksheet.lever_graphs_q1997, 0.002); end
  def test_lever_graphs_r1997; assert_in_epsilon(7.0, worksheet.lever_graphs_r1997, 0.002); end
  def test_lever_graphs_s1997; assert_in_epsilon(8.0, worksheet.lever_graphs_s1997, 0.002); end
  def test_lever_graphs_b1998; assert_in_epsilon(2.0, worksheet.lever_graphs_b1998, 0.002); end
  def test_lever_graphs_k1998; assert_in_delta(0.527, worksheet.lever_graphs_k1998, 0.002); end
  def test_lever_graphs_l1998; assert_in_epsilon(1.1, worksheet.lever_graphs_l1998, 0.002); end
  def test_lever_graphs_m1998; assert_in_epsilon(3.0, worksheet.lever_graphs_m1998, 0.002); end
  def test_lever_graphs_n1998; assert_in_epsilon(10.0, worksheet.lever_graphs_n1998, 0.002); end
  def test_lever_graphs_o1998; assert_in_epsilon(24.0, worksheet.lever_graphs_o1998, 0.002); end
  def test_lever_graphs_p1998; assert_in_epsilon(40.0, worksheet.lever_graphs_p1998, 0.002); end
  def test_lever_graphs_q1998; assert_in_epsilon(59.0, worksheet.lever_graphs_q1998, 0.002); end
  def test_lever_graphs_r1998; assert_in_epsilon(79.0, worksheet.lever_graphs_r1998, 0.002); end
  def test_lever_graphs_s1998; assert_in_epsilon(97.0, worksheet.lever_graphs_s1998, 0.002); end
  def test_lever_graphs_b1999; assert_in_epsilon(3.0, worksheet.lever_graphs_b1999, 0.002); end
  def test_lever_graphs_k1999; assert_in_delta(0.527, worksheet.lever_graphs_k1999, 0.002); end
  def test_lever_graphs_l1999; assert_in_epsilon(1.1, worksheet.lever_graphs_l1999, 0.002); end
  def test_lever_graphs_m1999; assert_in_epsilon(4.0, worksheet.lever_graphs_m1999, 0.002); end
  def test_lever_graphs_n1999; assert_in_epsilon(14.0, worksheet.lever_graphs_n1999, 0.002); end
  def test_lever_graphs_o1999; assert_in_epsilon(30.0, worksheet.lever_graphs_o1999, 0.002); end
  def test_lever_graphs_p1999; assert_in_epsilon(56.0, worksheet.lever_graphs_p1999, 0.002); end
  def test_lever_graphs_q1999; assert_in_epsilon(97.0, worksheet.lever_graphs_q1999, 0.002); end
  def test_lever_graphs_r1999; assert_in_epsilon(153.0, worksheet.lever_graphs_r1999, 0.002); end
  def test_lever_graphs_s1999; assert_in_epsilon(237.0, worksheet.lever_graphs_s1999, 0.002); end
  def test_lever_graphs_b2000; assert_in_epsilon(4.0, worksheet.lever_graphs_b2000, 0.002); end
  def test_lever_graphs_k2000; assert_in_delta(0.527, worksheet.lever_graphs_k2000, 0.002); end
  def test_lever_graphs_l2000; assert_in_epsilon(1.1, worksheet.lever_graphs_l2000, 0.002); end
  def test_lever_graphs_m2000; assert_in_epsilon(7.0, worksheet.lever_graphs_m2000, 0.002); end
  def test_lever_graphs_n2000; assert_in_epsilon(24.0, worksheet.lever_graphs_n2000, 0.002); end
  def test_lever_graphs_o2000; assert_in_epsilon(48.0, worksheet.lever_graphs_o2000, 0.002); end
  def test_lever_graphs_p2000; assert_in_epsilon(89.7, worksheet.lever_graphs_p2000, 0.002); end
  def test_lever_graphs_q2000; assert_in_epsilon(140.9, worksheet.lever_graphs_q2000, 0.002); end
  def test_lever_graphs_r2000; assert_in_epsilon(244.9, worksheet.lever_graphs_r2000, 0.002); end
  def test_lever_graphs_s2000; assert_in_epsilon(435.6, worksheet.lever_graphs_s2000, 0.002); end
  def test_lever_graphs_b2001; assert_equal("Comparator A", worksheet.lever_graphs_b2001); end
  def test_lever_graphs_b2002; assert_equal("Comparator B", worksheet.lever_graphs_b2002); end
  def test_lever_graphs_b2003; assert_equal("Comparator C", worksheet.lever_graphs_b2003); end
  def test_lever_graphs_c1979; assert_equal("1975", worksheet.lever_graphs_c1979); end
  def test_lever_graphs_d1979; assert_equal("1980", worksheet.lever_graphs_d1979); end
  def test_lever_graphs_e1979; assert_equal("1985", worksheet.lever_graphs_e1979); end
  def test_lever_graphs_f1979; assert_equal("1990", worksheet.lever_graphs_f1979); end
  def test_lever_graphs_g1979; assert_equal("1995", worksheet.lever_graphs_g1979); end
  def test_lever_graphs_h1979; assert_equal("2000", worksheet.lever_graphs_h1979); end
  def test_lever_graphs_i1979; assert_equal("2005", worksheet.lever_graphs_i1979); end
  def test_lever_graphs_j1979; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1979, 0.002); end
  def test_lever_graphs_k1979; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1979, 0.002); end
  def test_lever_graphs_l1979; assert_equal("2015", worksheet.lever_graphs_l1979); end
  def test_lever_graphs_m1979; assert_equal("2020", worksheet.lever_graphs_m1979); end
  def test_lever_graphs_n1979; assert_equal("2025", worksheet.lever_graphs_n1979); end
  def test_lever_graphs_o1979; assert_equal("2030", worksheet.lever_graphs_o1979); end
  def test_lever_graphs_p1979; assert_equal("2035", worksheet.lever_graphs_p1979); end
  def test_lever_graphs_q1979; assert_equal("2040", worksheet.lever_graphs_q1979); end
  def test_lever_graphs_r1979; assert_equal("2045", worksheet.lever_graphs_r1979); end
  def test_lever_graphs_s1979; assert_equal("2050", worksheet.lever_graphs_s1979); end
  def test_lever_graphs_b1980; assert_equal("Historic data", worksheet.lever_graphs_b1980); end
  def test_lever_graphs_b1981; assert_in_delta(1.0, worksheet.lever_graphs_b1981, 0.002); end
  def test_lever_graphs_k1981; assert_in_delta(0.527, worksheet.lever_graphs_k1981, 0.002); end
  def test_lever_graphs_l1981; assert_in_delta(1.0, worksheet.lever_graphs_l1981, 0.002); end
  def test_lever_graphs_m1981; assert_in_delta(1.0, worksheet.lever_graphs_m1981, 0.002); end
  def test_lever_graphs_n1981; assert_in_delta(1.0, worksheet.lever_graphs_n1981, 0.002); end
  def test_lever_graphs_o1981; assert_in_delta(1.0, worksheet.lever_graphs_o1981, 0.002); end
  def test_lever_graphs_p1981; assert_in_delta(1.0, worksheet.lever_graphs_p1981, 0.002); end
  def test_lever_graphs_q1981; assert_in_delta(1.0, worksheet.lever_graphs_q1981, 0.002); end
  def test_lever_graphs_r1981; assert_in_delta(0.0, (worksheet.lever_graphs_r1981||0), 0.002); end
  def test_lever_graphs_s1981; assert_in_delta(0.0, (worksheet.lever_graphs_s1981||0), 0.002); end
  def test_lever_graphs_b1982; assert_in_epsilon(2.0, worksheet.lever_graphs_b1982, 0.002); end
  def test_lever_graphs_k1982; assert_in_delta(0.527, worksheet.lever_graphs_k1982, 0.002); end
  def test_lever_graphs_l1982; assert_in_delta(1.0, worksheet.lever_graphs_l1982, 0.002); end
  def test_lever_graphs_m1982; assert_in_epsilon(2.0, worksheet.lever_graphs_m1982, 0.002); end
  def test_lever_graphs_n1982; assert_in_epsilon(4.0, worksheet.lever_graphs_n1982, 0.002); end
  def test_lever_graphs_o1982; assert_in_epsilon(8.0, worksheet.lever_graphs_o1982, 0.002); end
  def test_lever_graphs_p1982; assert_in_epsilon(13.0, worksheet.lever_graphs_p1982, 0.002); end
  def test_lever_graphs_q1982; assert_in_epsilon(21.0, worksheet.lever_graphs_q1982, 0.002); end
  def test_lever_graphs_r1982; assert_in_epsilon(28.0, worksheet.lever_graphs_r1982, 0.002); end
  def test_lever_graphs_s1982; assert_in_epsilon(35.0, worksheet.lever_graphs_s1982, 0.002); end
  def test_lever_graphs_b1983; assert_in_epsilon(3.0, worksheet.lever_graphs_b1983, 0.002); end
  def test_lever_graphs_k1983; assert_in_delta(0.527, worksheet.lever_graphs_k1983, 0.002); end
  def test_lever_graphs_l1983; assert_in_delta(1.0, worksheet.lever_graphs_l1983, 0.002); end
  def test_lever_graphs_m1983; assert_in_epsilon(2.0, worksheet.lever_graphs_m1983, 0.002); end
  def test_lever_graphs_n1983; assert_in_epsilon(6.0, worksheet.lever_graphs_n1983, 0.002); end
  def test_lever_graphs_o1983; assert_in_epsilon(11.0, worksheet.lever_graphs_o1983, 0.002); end
  def test_lever_graphs_p1983; assert_in_epsilon(22.0, worksheet.lever_graphs_p1983, 0.002); end
  def test_lever_graphs_q1983; assert_in_epsilon(38.0, worksheet.lever_graphs_q1983, 0.002); end
  def test_lever_graphs_r1983; assert_in_epsilon(70.0, worksheet.lever_graphs_r1983, 0.002); end
  def test_lever_graphs_s1983; assert_in_epsilon(132.0, worksheet.lever_graphs_s1983, 0.002); end
  def test_lever_graphs_b1984; assert_in_epsilon(4.0, worksheet.lever_graphs_b1984, 0.002); end
  def test_lever_graphs_k1984; assert_in_delta(0.527, worksheet.lever_graphs_k1984, 0.002); end
  def test_lever_graphs_l1984; assert_in_delta(1.0, worksheet.lever_graphs_l1984, 0.002); end
  def test_lever_graphs_m1984; assert_in_epsilon(3.0, worksheet.lever_graphs_m1984, 0.002); end
  def test_lever_graphs_n1984; assert_in_epsilon(10.0, worksheet.lever_graphs_n1984, 0.002); end
  def test_lever_graphs_o1984; assert_in_epsilon(18.0, worksheet.lever_graphs_o1984, 0.002); end
  def test_lever_graphs_p1984; assert_in_epsilon(31.7, worksheet.lever_graphs_p1984, 0.002); end
  def test_lever_graphs_q1984; assert_in_epsilon(55.9, worksheet.lever_graphs_q1984, 0.002); end
  def test_lever_graphs_r1984; assert_in_epsilon(127.9, worksheet.lever_graphs_r1984, 0.002); end
  def test_lever_graphs_s1984; assert_in_epsilon(292.6, worksheet.lever_graphs_s1984, 0.002); end
  def test_lever_graphs_b1985; assert_equal("Comparator A", worksheet.lever_graphs_b1985); end
  def test_lever_graphs_b1986; assert_equal("Comparator B", worksheet.lever_graphs_b1986); end
  def test_lever_graphs_b1987; assert_equal("Comparator C", worksheet.lever_graphs_b1987); end
  def test_lever_graphs_c1963; assert_equal("1975", worksheet.lever_graphs_c1963); end
  def test_lever_graphs_d1963; assert_equal("1980", worksheet.lever_graphs_d1963); end
  def test_lever_graphs_e1963; assert_equal("1985", worksheet.lever_graphs_e1963); end
  def test_lever_graphs_f1963; assert_equal("1990", worksheet.lever_graphs_f1963); end
  def test_lever_graphs_g1963; assert_equal("1995", worksheet.lever_graphs_g1963); end
  def test_lever_graphs_h1963; assert_equal("2000", worksheet.lever_graphs_h1963); end
  def test_lever_graphs_i1963; assert_equal("2005", worksheet.lever_graphs_i1963); end
  def test_lever_graphs_j1963; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1963, 0.002); end
  def test_lever_graphs_k1963; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1963, 0.002); end
  def test_lever_graphs_l1963; assert_equal("2015", worksheet.lever_graphs_l1963); end
  def test_lever_graphs_m1963; assert_equal("2020", worksheet.lever_graphs_m1963); end
  def test_lever_graphs_n1963; assert_equal("2025", worksheet.lever_graphs_n1963); end
  def test_lever_graphs_o1963; assert_equal("2030", worksheet.lever_graphs_o1963); end
  def test_lever_graphs_p1963; assert_equal("2035", worksheet.lever_graphs_p1963); end
  def test_lever_graphs_q1963; assert_equal("2040", worksheet.lever_graphs_q1963); end
  def test_lever_graphs_r1963; assert_equal("2045", worksheet.lever_graphs_r1963); end
  def test_lever_graphs_s1963; assert_equal("2050", worksheet.lever_graphs_s1963); end
  def test_lever_graphs_b1964; assert_equal("Historic data", worksheet.lever_graphs_b1964); end
  def test_lever_graphs_b1965; assert_in_delta(1.0, worksheet.lever_graphs_b1965, 0.002); end
  def test_lever_graphs_k1965; assert_in_delta(0.0, (worksheet.lever_graphs_k1965||0), 0.002); end
  def test_lever_graphs_l1965; assert_in_delta(0.1, worksheet.lever_graphs_l1965, 0.002); end
  def test_lever_graphs_m1965; assert_in_delta(0.1, worksheet.lever_graphs_m1965, 0.002); end
  def test_lever_graphs_n1965; assert_in_delta(0.1, worksheet.lever_graphs_n1965, 0.002); end
  def test_lever_graphs_o1965; assert_in_delta(1.0, worksheet.lever_graphs_o1965, 0.002); end
  def test_lever_graphs_p1965; assert_in_epsilon(2.0, worksheet.lever_graphs_p1965, 0.002); end
  def test_lever_graphs_q1965; assert_in_epsilon(4.0, worksheet.lever_graphs_q1965, 0.002); end
  def test_lever_graphs_r1965; assert_in_epsilon(7.0, worksheet.lever_graphs_r1965, 0.002); end
  def test_lever_graphs_s1965; assert_in_epsilon(8.0, worksheet.lever_graphs_s1965, 0.002); end
  def test_lever_graphs_b1966; assert_in_epsilon(2.0, worksheet.lever_graphs_b1966, 0.002); end
  def test_lever_graphs_k1966; assert_in_delta(0.0, (worksheet.lever_graphs_k1966||0), 0.002); end
  def test_lever_graphs_l1966; assert_in_delta(0.1, worksheet.lever_graphs_l1966, 0.002); end
  def test_lever_graphs_m1966; assert_in_delta(1.0, worksheet.lever_graphs_m1966, 0.002); end
  def test_lever_graphs_n1966; assert_in_epsilon(6.0, worksheet.lever_graphs_n1966, 0.002); end
  def test_lever_graphs_o1966; assert_in_epsilon(16.0, worksheet.lever_graphs_o1966, 0.002); end
  def test_lever_graphs_p1966; assert_in_epsilon(27.0, worksheet.lever_graphs_p1966, 0.002); end
  def test_lever_graphs_q1966; assert_in_epsilon(38.0, worksheet.lever_graphs_q1966, 0.002); end
  def test_lever_graphs_r1966; assert_in_epsilon(51.0, worksheet.lever_graphs_r1966, 0.002); end
  def test_lever_graphs_s1966; assert_in_epsilon(62.0, worksheet.lever_graphs_s1966, 0.002); end
  def test_lever_graphs_b1967; assert_in_epsilon(3.0, worksheet.lever_graphs_b1967, 0.002); end
  def test_lever_graphs_k1967; assert_in_delta(0.0, (worksheet.lever_graphs_k1967||0), 0.002); end
  def test_lever_graphs_l1967; assert_in_delta(0.1, worksheet.lever_graphs_l1967, 0.002); end
  def test_lever_graphs_m1967; assert_in_epsilon(2.0, worksheet.lever_graphs_m1967, 0.002); end
  def test_lever_graphs_n1967; assert_in_epsilon(8.0, worksheet.lever_graphs_n1967, 0.002); end
  def test_lever_graphs_o1967; assert_in_epsilon(19.0, worksheet.lever_graphs_o1967, 0.002); end
  def test_lever_graphs_p1967; assert_in_epsilon(34.0, worksheet.lever_graphs_p1967, 0.002); end
  def test_lever_graphs_q1967; assert_in_epsilon(59.0, worksheet.lever_graphs_q1967, 0.002); end
  def test_lever_graphs_r1967; assert_in_epsilon(83.0, worksheet.lever_graphs_r1967, 0.002); end
  def test_lever_graphs_s1967; assert_in_epsilon(105.0, worksheet.lever_graphs_s1967, 0.002); end
  def test_lever_graphs_b1968; assert_in_epsilon(4.0, worksheet.lever_graphs_b1968, 0.002); end
  def test_lever_graphs_k1968; assert_in_delta(0.0, (worksheet.lever_graphs_k1968||0), 0.002); end
  def test_lever_graphs_l1968; assert_in_delta(0.1, worksheet.lever_graphs_l1968, 0.002); end
  def test_lever_graphs_m1968; assert_in_epsilon(4.0, worksheet.lever_graphs_m1968, 0.002); end
  def test_lever_graphs_n1968; assert_in_epsilon(14.0, worksheet.lever_graphs_n1968, 0.002); end
  def test_lever_graphs_o1968; assert_in_epsilon(30.0, worksheet.lever_graphs_o1968, 0.002); end
  def test_lever_graphs_p1968; assert_in_epsilon(58.0, worksheet.lever_graphs_p1968, 0.002); end
  def test_lever_graphs_q1968; assert_in_epsilon(85.0, worksheet.lever_graphs_q1968, 0.002); end
  def test_lever_graphs_r1968; assert_in_epsilon(117.0, worksheet.lever_graphs_r1968, 0.002); end
  def test_lever_graphs_s1968; assert_in_epsilon(143.0, worksheet.lever_graphs_s1968, 0.002); end
  def test_lever_graphs_b1969; assert_equal("Comparator A", worksheet.lever_graphs_b1969); end
  def test_lever_graphs_b1970; assert_equal("Comparator B", worksheet.lever_graphs_b1970); end
  def test_lever_graphs_b1971; assert_equal("Comparator C", worksheet.lever_graphs_b1971); end
  def test_lever_graphs_c1761; assert_equal("1975", worksheet.lever_graphs_c1761); end
  def test_lever_graphs_d1761; assert_equal("1980", worksheet.lever_graphs_d1761); end
  def test_lever_graphs_e1761; assert_equal("1985", worksheet.lever_graphs_e1761); end
  def test_lever_graphs_f1761; assert_equal("1990", worksheet.lever_graphs_f1761); end
  def test_lever_graphs_g1761; assert_equal("1995", worksheet.lever_graphs_g1761); end
  def test_lever_graphs_h1761; assert_equal("2000", worksheet.lever_graphs_h1761); end
  def test_lever_graphs_i1761; assert_equal("2005", worksheet.lever_graphs_i1761); end
  def test_lever_graphs_j1761; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1761, 0.002); end
  def test_lever_graphs_k1761; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1761, 0.002); end
  def test_lever_graphs_l1761; assert_equal("2015", worksheet.lever_graphs_l1761); end
  def test_lever_graphs_m1761; assert_equal("2020", worksheet.lever_graphs_m1761); end
  def test_lever_graphs_n1761; assert_equal("2025", worksheet.lever_graphs_n1761); end
  def test_lever_graphs_o1761; assert_equal("2030", worksheet.lever_graphs_o1761); end
  def test_lever_graphs_p1761; assert_equal("2035", worksheet.lever_graphs_p1761); end
  def test_lever_graphs_q1761; assert_equal("2040", worksheet.lever_graphs_q1761); end
  def test_lever_graphs_r1761; assert_equal("2045", worksheet.lever_graphs_r1761); end
  def test_lever_graphs_s1761; assert_equal("2050", worksheet.lever_graphs_s1761); end
  def test_lever_graphs_b1762; assert_equal("Historic data", worksheet.lever_graphs_b1762); end
  def test_lever_graphs_b1763; assert_in_delta(1.0, worksheet.lever_graphs_b1763, 0.002); end
  def test_lever_graphs_k1763; assert_in_epsilon(364.0, worksheet.lever_graphs_k1763, 0.002); end
  def test_lever_graphs_l1763; assert_in_epsilon(448.0, worksheet.lever_graphs_l1763, 0.002); end
  def test_lever_graphs_m1763; assert_in_epsilon(400.0, worksheet.lever_graphs_m1763, 0.002); end
  def test_lever_graphs_n1763; assert_in_epsilon(300.0, worksheet.lever_graphs_n1763, 0.002); end
  def test_lever_graphs_o1763; assert_in_epsilon(200.0, worksheet.lever_graphs_o1763, 0.002); end
  def test_lever_graphs_p1763; assert_in_epsilon(200.0, worksheet.lever_graphs_p1763, 0.002); end
  def test_lever_graphs_q1763; assert_in_epsilon(100.0, worksheet.lever_graphs_q1763, 0.002); end
  def test_lever_graphs_r1763; assert_in_epsilon(50.0, worksheet.lever_graphs_r1763, 0.002); end
  def test_lever_graphs_s1763; assert_in_delta(0.0, (worksheet.lever_graphs_s1763||0), 0.002); end
  def test_lever_graphs_b1764; assert_in_epsilon(2.0, worksheet.lever_graphs_b1764, 0.002); end
  def test_lever_graphs_k1764; assert_in_epsilon(364.0, worksheet.lever_graphs_k1764, 0.002); end
  def test_lever_graphs_l1764; assert_in_epsilon(448.0, worksheet.lever_graphs_l1764, 0.002); end
  def test_lever_graphs_m1764; assert_in_epsilon(475.0, worksheet.lever_graphs_m1764, 0.002); end
  def test_lever_graphs_n1764; assert_in_epsilon(498.0, worksheet.lever_graphs_n1764, 0.002); end
  def test_lever_graphs_o1764; assert_in_epsilon(530.0, worksheet.lever_graphs_o1764, 0.002); end
  def test_lever_graphs_p1764; assert_in_epsilon(562.0, worksheet.lever_graphs_p1764, 0.002); end
  def test_lever_graphs_q1764; assert_in_epsilon(601.0, worksheet.lever_graphs_q1764, 0.002); end
  def test_lever_graphs_r1764; assert_in_epsilon(643.0, worksheet.lever_graphs_r1764, 0.002); end
  def test_lever_graphs_s1764; assert_in_epsilon(685.0, worksheet.lever_graphs_s1764, 0.002); end
  def test_lever_graphs_b1765; assert_in_epsilon(3.0, worksheet.lever_graphs_b1765, 0.002); end
  def test_lever_graphs_k1765; assert_in_epsilon(364.0, worksheet.lever_graphs_k1765, 0.002); end
  def test_lever_graphs_l1765; assert_in_epsilon(448.0, worksheet.lever_graphs_l1765, 0.002); end
  def test_lever_graphs_m1765; assert_in_epsilon(510.0, worksheet.lever_graphs_m1765, 0.002); end
  def test_lever_graphs_n1765; assert_in_epsilon(585.0, worksheet.lever_graphs_n1765, 0.002); end
  def test_lever_graphs_o1765; assert_in_epsilon(660.0, worksheet.lever_graphs_o1765, 0.002); end
  def test_lever_graphs_p1765; assert_in_epsilon(735.0, worksheet.lever_graphs_p1765, 0.002); end
  def test_lever_graphs_q1765; assert_in_epsilon(817.0, worksheet.lever_graphs_q1765, 0.002); end
  def test_lever_graphs_r1765; assert_in_epsilon(920.0, worksheet.lever_graphs_r1765, 0.002); end
  def test_lever_graphs_s1765; assert_in_epsilon(1030.0, worksheet.lever_graphs_s1765, 0.002); end
  def test_lever_graphs_b1766; assert_in_epsilon(4.0, worksheet.lever_graphs_b1766, 0.002); end
  def test_lever_graphs_k1766; assert_in_epsilon(364.0, worksheet.lever_graphs_k1766, 0.002); end
  def test_lever_graphs_l1766; assert_in_epsilon(448.0, worksheet.lever_graphs_l1766, 0.002); end
  def test_lever_graphs_m1766; assert_in_epsilon(546.0, worksheet.lever_graphs_m1766, 0.002); end
  def test_lever_graphs_n1766; assert_in_epsilon(670.0, worksheet.lever_graphs_n1766, 0.002); end
  def test_lever_graphs_o1766; assert_in_epsilon(823.0, worksheet.lever_graphs_o1766, 0.002); end
  def test_lever_graphs_p1766; assert_in_epsilon(1010.0, worksheet.lever_graphs_p1766, 0.002); end
  def test_lever_graphs_q1766; assert_in_epsilon(1240.0, worksheet.lever_graphs_q1766, 0.002); end
  def test_lever_graphs_r1766; assert_in_epsilon(1523.0, worksheet.lever_graphs_r1766, 0.002); end
  def test_lever_graphs_s1766; assert_in_epsilon(1870.0, worksheet.lever_graphs_s1766, 0.002); end
  def test_lever_graphs_b1767; assert_equal("Comparator A", worksheet.lever_graphs_b1767); end
  def test_lever_graphs_b1768; assert_equal("Comparator B", worksheet.lever_graphs_b1768); end
  def test_lever_graphs_b1769; assert_equal("Comparator C", worksheet.lever_graphs_b1769); end
  def test_lever_graphs_c1923; assert_equal("1975", worksheet.lever_graphs_c1923); end
  def test_lever_graphs_d1923; assert_equal("1980", worksheet.lever_graphs_d1923); end
  def test_lever_graphs_e1923; assert_equal("1985", worksheet.lever_graphs_e1923); end
  def test_lever_graphs_f1923; assert_equal("1990", worksheet.lever_graphs_f1923); end
  def test_lever_graphs_g1923; assert_equal("1995", worksheet.lever_graphs_g1923); end
  def test_lever_graphs_h1923; assert_equal("2000", worksheet.lever_graphs_h1923); end
  def test_lever_graphs_i1923; assert_equal("2005", worksheet.lever_graphs_i1923); end
  def test_lever_graphs_j1923; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1923, 0.002); end
  def test_lever_graphs_k1923; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1923, 0.002); end
  def test_lever_graphs_l1923; assert_equal("2015", worksheet.lever_graphs_l1923); end
  def test_lever_graphs_m1923; assert_equal("2020", worksheet.lever_graphs_m1923); end
  def test_lever_graphs_n1923; assert_equal("2025", worksheet.lever_graphs_n1923); end
  def test_lever_graphs_o1923; assert_equal("2030", worksheet.lever_graphs_o1923); end
  def test_lever_graphs_p1923; assert_equal("2035", worksheet.lever_graphs_p1923); end
  def test_lever_graphs_q1923; assert_equal("2040", worksheet.lever_graphs_q1923); end
  def test_lever_graphs_r1923; assert_equal("2045", worksheet.lever_graphs_r1923); end
  def test_lever_graphs_s1923; assert_equal("2050", worksheet.lever_graphs_s1923); end
  def test_lever_graphs_b1924; assert_equal("Historic data", worksheet.lever_graphs_b1924); end
  def test_lever_graphs_b1925; assert_in_delta(1.0, worksheet.lever_graphs_b1925, 0.002); end
  def test_lever_graphs_k1925; assert_in_epsilon(4.1, worksheet.lever_graphs_k1925, 0.002); end
  def test_lever_graphs_l1925; assert_in_epsilon(15.0, worksheet.lever_graphs_l1925, 0.002); end
  def test_lever_graphs_m1925; assert_in_epsilon(17.0, worksheet.lever_graphs_m1925, 0.002); end
  def test_lever_graphs_n1925; assert_in_epsilon(13.0, worksheet.lever_graphs_n1925, 0.002); end
  def test_lever_graphs_o1925; assert_in_delta(0.0, (worksheet.lever_graphs_o1925||0), 0.002); end
  def test_lever_graphs_p1925; assert_in_delta(0.0, (worksheet.lever_graphs_p1925||0), 0.002); end
  def test_lever_graphs_q1925; assert_in_delta(0.0, (worksheet.lever_graphs_q1925||0), 0.002); end
  def test_lever_graphs_r1925; assert_in_delta(0.0, (worksheet.lever_graphs_r1925||0), 0.002); end
  def test_lever_graphs_s1925; assert_in_delta(0.0, (worksheet.lever_graphs_s1925||0), 0.002); end
  def test_lever_graphs_b1926; assert_in_epsilon(2.0, worksheet.lever_graphs_b1926, 0.002); end
  def test_lever_graphs_k1926; assert_in_epsilon(4.1, worksheet.lever_graphs_k1926, 0.002); end
  def test_lever_graphs_l1926; assert_in_epsilon(15.0, worksheet.lever_graphs_l1926, 0.002); end
  def test_lever_graphs_m1926; assert_in_epsilon(33.0, worksheet.lever_graphs_m1926, 0.002); end
  def test_lever_graphs_n1926; assert_in_epsilon(50.0, worksheet.lever_graphs_n1926, 0.002); end
  def test_lever_graphs_o1926; assert_in_epsilon(96.0, worksheet.lever_graphs_o1926, 0.002); end
  def test_lever_graphs_p1926; assert_in_epsilon(147.0, worksheet.lever_graphs_p1926, 0.002); end
  def test_lever_graphs_q1926; assert_in_epsilon(220.0, worksheet.lever_graphs_q1926, 0.002); end
  def test_lever_graphs_r1926; assert_in_epsilon(376.0, worksheet.lever_graphs_r1926, 0.002); end
  def test_lever_graphs_s1926; assert_in_epsilon(455.0, worksheet.lever_graphs_s1926, 0.002); end
  def test_lever_graphs_b1927; assert_in_epsilon(3.0, worksheet.lever_graphs_b1927, 0.002); end
  def test_lever_graphs_k1927; assert_in_epsilon(4.1, worksheet.lever_graphs_k1927, 0.002); end
  def test_lever_graphs_l1927; assert_in_epsilon(15.0, worksheet.lever_graphs_l1927, 0.002); end
  def test_lever_graphs_m1927; assert_in_epsilon(46.0, worksheet.lever_graphs_m1927, 0.002); end
  def test_lever_graphs_n1927; assert_in_epsilon(87.0, worksheet.lever_graphs_n1927, 0.002); end
  def test_lever_graphs_o1927; assert_in_epsilon(188.0, worksheet.lever_graphs_o1927, 0.002); end
  def test_lever_graphs_p1927; assert_in_epsilon(295.0, worksheet.lever_graphs_p1927, 0.002); end
  def test_lever_graphs_q1927; assert_in_epsilon(424.0, worksheet.lever_graphs_q1927, 0.002); end
  def test_lever_graphs_r1927; assert_in_epsilon(708.0, worksheet.lever_graphs_r1927, 0.002); end
  def test_lever_graphs_s1927; assert_in_epsilon(910.0, worksheet.lever_graphs_s1927, 0.002); end
  def test_lever_graphs_b1928; assert_in_epsilon(4.0, worksheet.lever_graphs_b1928, 0.002); end
  def test_lever_graphs_k1928; assert_in_epsilon(4.1, worksheet.lever_graphs_k1928, 0.002); end
  def test_lever_graphs_l1928; assert_in_epsilon(15.0, worksheet.lever_graphs_l1928, 0.002); end
  def test_lever_graphs_m1928; assert_in_epsilon(71.0, worksheet.lever_graphs_m1928, 0.002); end
  def test_lever_graphs_n1928; assert_in_epsilon(177.0, worksheet.lever_graphs_n1928, 0.002); end
  def test_lever_graphs_o1928; assert_in_epsilon(440.0, worksheet.lever_graphs_o1928, 0.002); end
  def test_lever_graphs_p1928; assert_in_epsilon(647.0, worksheet.lever_graphs_p1928, 0.002); end
  def test_lever_graphs_q1928; assert_in_epsilon(951.0, worksheet.lever_graphs_q1928, 0.002); end
  def test_lever_graphs_r1928; assert_in_epsilon(1157.0, worksheet.lever_graphs_r1928, 0.002); end
  def test_lever_graphs_s1928; assert_in_epsilon(1408.0, worksheet.lever_graphs_s1928, 0.002); end
  def test_lever_graphs_b1929; assert_equal("Comparator A", worksheet.lever_graphs_b1929); end
  def test_lever_graphs_b1930; assert_equal("Comparator B", worksheet.lever_graphs_b1930); end
  def test_lever_graphs_b1931; assert_equal("Comparator C", worksheet.lever_graphs_b1931); end
  def test_lever_graphs_c1907; assert_equal("1975", worksheet.lever_graphs_c1907); end
  def test_lever_graphs_d1907; assert_equal("1980", worksheet.lever_graphs_d1907); end
  def test_lever_graphs_e1907; assert_equal("1985", worksheet.lever_graphs_e1907); end
  def test_lever_graphs_f1907; assert_equal("1990", worksheet.lever_graphs_f1907); end
  def test_lever_graphs_g1907; assert_equal("1995", worksheet.lever_graphs_g1907); end
  def test_lever_graphs_h1907; assert_equal("2000", worksheet.lever_graphs_h1907); end
  def test_lever_graphs_i1907; assert_equal("2005", worksheet.lever_graphs_i1907); end
  def test_lever_graphs_j1907; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1907, 0.002); end
  def test_lever_graphs_k1907; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1907, 0.002); end
  def test_lever_graphs_l1907; assert_equal("2015", worksheet.lever_graphs_l1907); end
  def test_lever_graphs_m1907; assert_equal("2020", worksheet.lever_graphs_m1907); end
  def test_lever_graphs_n1907; assert_equal("2025", worksheet.lever_graphs_n1907); end
  def test_lever_graphs_o1907; assert_equal("2030", worksheet.lever_graphs_o1907); end
  def test_lever_graphs_p1907; assert_equal("2035", worksheet.lever_graphs_p1907); end
  def test_lever_graphs_q1907; assert_equal("2040", worksheet.lever_graphs_q1907); end
  def test_lever_graphs_r1907; assert_equal("2045", worksheet.lever_graphs_r1907); end
  def test_lever_graphs_s1907; assert_equal("2050", worksheet.lever_graphs_s1907); end
  def test_lever_graphs_b1908; assert_equal("Historic data", worksheet.lever_graphs_b1908); end
  def test_lever_graphs_b1909; assert_in_delta(1.0, worksheet.lever_graphs_b1909, 0.002); end
  def test_lever_graphs_k1909; assert_in_epsilon(233.57, worksheet.lever_graphs_k1909, 0.002); end
  def test_lever_graphs_l1909; assert_in_epsilon(399.0, worksheet.lever_graphs_l1909, 0.002); end
  def test_lever_graphs_m1909; assert_in_epsilon(376.0, worksheet.lever_graphs_m1909, 0.002); end
  def test_lever_graphs_n1909; assert_in_epsilon(335.0, worksheet.lever_graphs_n1909, 0.002); end
  def test_lever_graphs_o1909; assert_in_epsilon(198.0, worksheet.lever_graphs_o1909, 0.002); end
  def test_lever_graphs_p1909; assert_in_delta(0.0, (worksheet.lever_graphs_p1909||0), 0.002); end
  def test_lever_graphs_q1909; assert_in_delta(0.0, (worksheet.lever_graphs_q1909||0), 0.002); end
  def test_lever_graphs_r1909; assert_in_delta(0.0, (worksheet.lever_graphs_r1909||0), 0.002); end
  def test_lever_graphs_s1909; assert_in_delta(0.0, (worksheet.lever_graphs_s1909||0), 0.002); end
  def test_lever_graphs_b1910; assert_in_epsilon(2.0, worksheet.lever_graphs_b1910, 0.002); end
  def test_lever_graphs_k1910; assert_in_epsilon(233.57, worksheet.lever_graphs_k1910, 0.002); end
  def test_lever_graphs_l1910; assert_in_epsilon(399.0, worksheet.lever_graphs_l1910, 0.002); end
  def test_lever_graphs_m1910; assert_in_epsilon(564.0, worksheet.lever_graphs_m1910, 0.002); end
  def test_lever_graphs_n1910; assert_in_epsilon(607.0, worksheet.lever_graphs_n1910, 0.002); end
  def test_lever_graphs_o1910; assert_in_epsilon(741.0, worksheet.lever_graphs_o1910, 0.002); end
  def test_lever_graphs_p1910; assert_in_epsilon(878.0, worksheet.lever_graphs_p1910, 0.002); end
  def test_lever_graphs_q1910; assert_in_epsilon(1068.0, worksheet.lever_graphs_q1910, 0.002); end
  def test_lever_graphs_r1910; assert_in_epsilon(1499.0, worksheet.lever_graphs_r1910, 0.002); end
  def test_lever_graphs_s1910; assert_in_epsilon(1862.0, worksheet.lever_graphs_s1910, 0.002); end
  def test_lever_graphs_b1911; assert_in_epsilon(3.0, worksheet.lever_graphs_b1911, 0.002); end
  def test_lever_graphs_k1911; assert_in_epsilon(233.57, worksheet.lever_graphs_k1911, 0.002); end
  def test_lever_graphs_l1911; assert_in_epsilon(399.0, worksheet.lever_graphs_l1911, 0.002); end
  def test_lever_graphs_m1911; assert_in_epsilon(778.0, worksheet.lever_graphs_m1911, 0.002); end
  def test_lever_graphs_n1911; assert_in_epsilon(982.0, worksheet.lever_graphs_n1911, 0.002); end
  def test_lever_graphs_o1911; assert_in_epsilon(1466.0, worksheet.lever_graphs_o1911, 0.002); end
  def test_lever_graphs_p1911; assert_in_epsilon(1945.0, worksheet.lever_graphs_p1911, 0.002); end
  def test_lever_graphs_q1911; assert_in_epsilon(2369.0, worksheet.lever_graphs_q1911, 0.002); end
  def test_lever_graphs_r1911; assert_in_epsilon(3037.0, worksheet.lever_graphs_r1911, 0.002); end
  def test_lever_graphs_s1911; assert_in_epsilon(3800.0, worksheet.lever_graphs_s1911, 0.002); end
  def test_lever_graphs_b1912; assert_in_epsilon(4.0, worksheet.lever_graphs_b1912, 0.002); end
  def test_lever_graphs_k1912; assert_in_epsilon(233.57, worksheet.lever_graphs_k1912, 0.002); end
  def test_lever_graphs_l1912; assert_in_epsilon(399.0, worksheet.lever_graphs_l1912, 0.002); end
  def test_lever_graphs_m1912; assert_in_epsilon(1073.0, worksheet.lever_graphs_m1912, 0.002); end
  def test_lever_graphs_n1912; assert_in_epsilon(1576.0, worksheet.lever_graphs_n1912, 0.002); end
  def test_lever_graphs_o1912; assert_in_epsilon(2316.0, worksheet.lever_graphs_o1912, 0.002); end
  def test_lever_graphs_p1912; assert_in_epsilon(3100.0, worksheet.lever_graphs_p1912, 0.002); end
  def test_lever_graphs_q1912; assert_in_epsilon(4149.0, worksheet.lever_graphs_q1912, 0.002); end
  def test_lever_graphs_r1912; assert_in_epsilon(4581.0, worksheet.lever_graphs_r1912, 0.002); end
  def test_lever_graphs_s1912; assert_in_epsilon(5058.0, worksheet.lever_graphs_s1912, 0.002); end
  def test_lever_graphs_b1913; assert_equal("Comparator A", worksheet.lever_graphs_b1913); end
  def test_lever_graphs_b1914; assert_equal("Comparator B", worksheet.lever_graphs_b1914); end
  def test_lever_graphs_b1915; assert_equal("Comparator C", worksheet.lever_graphs_b1915); end
  def test_lever_graphs_c1883; assert_equal("1975", worksheet.lever_graphs_c1883); end
  def test_lever_graphs_d1883; assert_equal("1980", worksheet.lever_graphs_d1883); end
  def test_lever_graphs_e1883; assert_equal("1985", worksheet.lever_graphs_e1883); end
  def test_lever_graphs_f1883; assert_equal("1990", worksheet.lever_graphs_f1883); end
  def test_lever_graphs_g1883; assert_equal("1995", worksheet.lever_graphs_g1883); end
  def test_lever_graphs_h1883; assert_equal("2000", worksheet.lever_graphs_h1883); end
  def test_lever_graphs_i1883; assert_equal("2005", worksheet.lever_graphs_i1883); end
  def test_lever_graphs_j1883; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1883, 0.002); end
  def test_lever_graphs_k1883; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1883, 0.002); end
  def test_lever_graphs_l1883; assert_equal("2015", worksheet.lever_graphs_l1883); end
  def test_lever_graphs_m1883; assert_equal("2020", worksheet.lever_graphs_m1883); end
  def test_lever_graphs_n1883; assert_equal("2025", worksheet.lever_graphs_n1883); end
  def test_lever_graphs_o1883; assert_equal("2030", worksheet.lever_graphs_o1883); end
  def test_lever_graphs_p1883; assert_equal("2035", worksheet.lever_graphs_p1883); end
  def test_lever_graphs_q1883; assert_equal("2040", worksheet.lever_graphs_q1883); end
  def test_lever_graphs_r1883; assert_equal("2045", worksheet.lever_graphs_r1883); end
  def test_lever_graphs_s1883; assert_equal("2050", worksheet.lever_graphs_s1883); end
  def test_lever_graphs_b1884; assert_equal("Historic data", worksheet.lever_graphs_b1884); end
  def test_lever_graphs_b1885; assert_in_delta(1.0, worksheet.lever_graphs_b1885, 0.002); end
  def test_lever_graphs_k1885; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1885, 0.002); end
  def test_lever_graphs_l1885; assert_in_epsilon(173.0, worksheet.lever_graphs_l1885, 0.002); end
  def test_lever_graphs_m1885; assert_in_epsilon(140.0, worksheet.lever_graphs_m1885, 0.002); end
  def test_lever_graphs_n1885; assert_in_epsilon(115.0, worksheet.lever_graphs_n1885, 0.002); end
  def test_lever_graphs_o1885; assert_in_epsilon(75.0, worksheet.lever_graphs_o1885, 0.002); end
  def test_lever_graphs_p1885; assert_in_epsilon(55.0, worksheet.lever_graphs_p1885, 0.002); end
  def test_lever_graphs_q1885; assert_in_delta(0.0, (worksheet.lever_graphs_q1885||0), 0.002); end
  def test_lever_graphs_r1885; assert_in_delta(0.0, (worksheet.lever_graphs_r1885||0), 0.002); end
  def test_lever_graphs_s1885; assert_in_delta(0.0, (worksheet.lever_graphs_s1885||0), 0.002); end
  def test_lever_graphs_b1886; assert_in_epsilon(2.0, worksheet.lever_graphs_b1886, 0.002); end
  def test_lever_graphs_k1886; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1886, 0.002); end
  def test_lever_graphs_l1886; assert_in_epsilon(173.0, worksheet.lever_graphs_l1886, 0.002); end
  def test_lever_graphs_m1886; assert_in_epsilon(278.46000000000004, worksheet.lever_graphs_m1886, 0.002); end
  def test_lever_graphs_n1886; assert_in_epsilon(398.83, worksheet.lever_graphs_n1886, 0.002); end
  def test_lever_graphs_o1886; assert_in_epsilon(591.5799999999999, worksheet.lever_graphs_o1886, 0.002); end
  def test_lever_graphs_p1886; assert_in_epsilon(812.85, worksheet.lever_graphs_p1886, 0.002); end
  def test_lever_graphs_q1886; assert_in_epsilon(1148.26, worksheet.lever_graphs_q1886, 0.002); end
  def test_lever_graphs_r1886; assert_in_epsilon(1577.17, worksheet.lever_graphs_r1886, 0.002); end
  def test_lever_graphs_s1886; assert_in_epsilon(2204.31, worksheet.lever_graphs_s1886, 0.002); end
  def test_lever_graphs_b1887; assert_in_epsilon(3.0, worksheet.lever_graphs_b1887, 0.002); end
  def test_lever_graphs_k1887; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1887, 0.002); end
  def test_lever_graphs_l1887; assert_in_epsilon(173.0, worksheet.lever_graphs_l1887, 0.002); end
  def test_lever_graphs_m1887; assert_in_epsilon(321.28, worksheet.lever_graphs_m1887, 0.002); end
  def test_lever_graphs_n1887; assert_in_epsilon(539.22, worksheet.lever_graphs_n1887, 0.002); end
  def test_lever_graphs_o1887; assert_in_epsilon(905.7, worksheet.lever_graphs_o1887, 0.002); end
  def test_lever_graphs_p1887; assert_in_epsilon(1464.94, worksheet.lever_graphs_p1887, 0.002); end
  def test_lever_graphs_q1887; assert_in_epsilon(2371.94, worksheet.lever_graphs_q1887, 0.002); end
  def test_lever_graphs_r1887; assert_in_epsilon(3136.37, worksheet.lever_graphs_r1887, 0.002); end
  def test_lever_graphs_s1887; assert_in_epsilon(4148.93, worksheet.lever_graphs_s1887, 0.002); end
  def test_lever_graphs_b1888; assert_in_epsilon(4.0, worksheet.lever_graphs_b1888, 0.002); end
  def test_lever_graphs_k1888; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1888, 0.002); end
  def test_lever_graphs_l1888; assert_in_epsilon(173.0, worksheet.lever_graphs_l1888, 0.002); end
  def test_lever_graphs_m1888; assert_in_epsilon(410.20000000000005, worksheet.lever_graphs_m1888, 0.002); end
  def test_lever_graphs_n1888; assert_in_epsilon(779.8399999999999, worksheet.lever_graphs_n1888, 0.002); end
  def test_lever_graphs_o1888; assert_in_epsilon(1484.3700000000001, worksheet.lever_graphs_o1888, 0.002); end
  def test_lever_graphs_p1888; assert_in_epsilon(2500.8, worksheet.lever_graphs_p1888, 0.002); end
  def test_lever_graphs_q1888; assert_in_epsilon(4214.1, worksheet.lever_graphs_q1888, 0.002); end
  def test_lever_graphs_r1888; assert_in_epsilon(5639.4, worksheet.lever_graphs_r1888, 0.002); end
  def test_lever_graphs_s1888; assert_in_epsilon(7546.700000000001, worksheet.lever_graphs_s1888, 0.002); end
  def test_lever_graphs_b1889; assert_equal("Comparator A", worksheet.lever_graphs_b1889); end
  def test_lever_graphs_b1890; assert_equal("Comparator B", worksheet.lever_graphs_b1890); end
  def test_lever_graphs_b1891; assert_equal("Comparator C", worksheet.lever_graphs_b1891); end
  def test_lever_graphs_c1867; assert_equal("1975", worksheet.lever_graphs_c1867); end
  def test_lever_graphs_d1867; assert_equal("1980", worksheet.lever_graphs_d1867); end
  def test_lever_graphs_e1867; assert_equal("1985", worksheet.lever_graphs_e1867); end
  def test_lever_graphs_f1867; assert_equal("1990", worksheet.lever_graphs_f1867); end
  def test_lever_graphs_g1867; assert_equal("1995", worksheet.lever_graphs_g1867); end
  def test_lever_graphs_h1867; assert_equal("2000", worksheet.lever_graphs_h1867); end
  def test_lever_graphs_i1867; assert_equal("2005", worksheet.lever_graphs_i1867); end
  def test_lever_graphs_j1867; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1867, 0.002); end
  def test_lever_graphs_k1867; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1867, 0.002); end
  def test_lever_graphs_l1867; assert_equal("2015", worksheet.lever_graphs_l1867); end
  def test_lever_graphs_m1867; assert_equal("2020", worksheet.lever_graphs_m1867); end
  def test_lever_graphs_n1867; assert_equal("2025", worksheet.lever_graphs_n1867); end
  def test_lever_graphs_o1867; assert_equal("2030", worksheet.lever_graphs_o1867); end
  def test_lever_graphs_p1867; assert_equal("2035", worksheet.lever_graphs_p1867); end
  def test_lever_graphs_q1867; assert_equal("2040", worksheet.lever_graphs_q1867); end
  def test_lever_graphs_r1867; assert_equal("2045", worksheet.lever_graphs_r1867); end
  def test_lever_graphs_s1867; assert_equal("2050", worksheet.lever_graphs_s1867); end
  def test_lever_graphs_b1868; assert_equal("Historic data", worksheet.lever_graphs_b1868); end
  def test_lever_graphs_b1869; assert_in_delta(1.0, worksheet.lever_graphs_b1869, 0.002); end
  def test_lever_graphs_k1869; assert_in_epsilon(69.69, worksheet.lever_graphs_k1869, 0.002); end
  def test_lever_graphs_l1869; assert_in_epsilon(165.0, worksheet.lever_graphs_l1869, 0.002); end
  def test_lever_graphs_m1869; assert_in_epsilon(110.0, worksheet.lever_graphs_m1869, 0.002); end
  def test_lever_graphs_n1869; assert_in_epsilon(85.0, worksheet.lever_graphs_n1869, 0.002); end
  def test_lever_graphs_o1869; assert_in_epsilon(55.0, worksheet.lever_graphs_o1869, 0.002); end
  def test_lever_graphs_p1869; assert_in_epsilon(35.0, worksheet.lever_graphs_p1869, 0.002); end
  def test_lever_graphs_q1869; assert_in_delta(0.0, (worksheet.lever_graphs_q1869||0), 0.002); end
  def test_lever_graphs_r1869; assert_in_delta(0.0, (worksheet.lever_graphs_r1869||0), 0.002); end
  def test_lever_graphs_s1869; assert_in_delta(0.0, (worksheet.lever_graphs_s1869||0), 0.002); end
  def test_lever_graphs_b1870; assert_in_epsilon(2.0, worksheet.lever_graphs_b1870, 0.002); end
  def test_lever_graphs_k1870; assert_in_epsilon(69.69, worksheet.lever_graphs_k1870, 0.002); end
  def test_lever_graphs_l1870; assert_in_epsilon(165.0, worksheet.lever_graphs_l1870, 0.002); end
  def test_lever_graphs_m1870; assert_in_epsilon(207.46, worksheet.lever_graphs_m1870, 0.002); end
  def test_lever_graphs_n1870; assert_in_epsilon(297.83, worksheet.lever_graphs_n1870, 0.002); end
  def test_lever_graphs_o1870; assert_in_epsilon(427.58, worksheet.lever_graphs_o1870, 0.002); end
  def test_lever_graphs_p1870; assert_in_epsilon(613.85, worksheet.lever_graphs_p1870, 0.002); end
  def test_lever_graphs_q1870; assert_in_epsilon(881.26, worksheet.lever_graphs_q1870, 0.002); end
  def test_lever_graphs_r1870; assert_in_epsilon(1265.17, worksheet.lever_graphs_r1870, 0.002); end
  def test_lever_graphs_s1870; assert_in_epsilon(1816.31, worksheet.lever_graphs_s1870, 0.002); end
  def test_lever_graphs_b1871; assert_in_epsilon(3.0, worksheet.lever_graphs_b1871, 0.002); end
  def test_lever_graphs_k1871; assert_in_epsilon(69.69, worksheet.lever_graphs_k1871, 0.002); end
  def test_lever_graphs_l1871; assert_in_epsilon(165.0, worksheet.lever_graphs_l1871, 0.002); end
  def test_lever_graphs_m1871; assert_in_epsilon(238.28, worksheet.lever_graphs_m1871, 0.002); end
  def test_lever_graphs_n1871; assert_in_epsilon(392.92, worksheet.lever_graphs_n1871, 0.002); end
  def test_lever_graphs_o1871; assert_in_epsilon(647.9, worksheet.lever_graphs_o1871, 0.002); end
  def test_lever_graphs_p1871; assert_in_epsilon(1068.34, worksheet.lever_graphs_p1871, 0.002); end
  def test_lever_graphs_q1871; assert_in_epsilon(1761.64, worksheet.lever_graphs_q1871, 0.002); end
  def test_lever_graphs_r1871; assert_in_epsilon(2357.47, worksheet.lever_graphs_r1871, 0.002); end
  def test_lever_graphs_s1871; assert_in_epsilon(3154.83, worksheet.lever_graphs_s1871, 0.002); end
  def test_lever_graphs_b1872; assert_in_epsilon(4.0, worksheet.lever_graphs_b1872, 0.002); end
  def test_lever_graphs_k1872; assert_in_epsilon(69.69, worksheet.lever_graphs_k1872, 0.002); end
  def test_lever_graphs_l1872; assert_in_epsilon(165.0, worksheet.lever_graphs_l1872, 0.002); end
  def test_lever_graphs_m1872; assert_in_epsilon(312.6, worksheet.lever_graphs_m1872, 0.002); end
  def test_lever_graphs_n1872; assert_in_epsilon(583.64, worksheet.lever_graphs_n1872, 0.002); end
  def test_lever_graphs_o1872; assert_in_epsilon(1089.67, worksheet.lever_graphs_o1872, 0.002); end
  def test_lever_graphs_p1872; assert_in_epsilon(1835.7, worksheet.lever_graphs_p1872, 0.002); end
  def test_lever_graphs_q1872; assert_in_epsilon(3093.3, worksheet.lever_graphs_q1872, 0.002); end
  def test_lever_graphs_r1872; assert_in_epsilon(4139.5, worksheet.lever_graphs_r1872, 0.002); end
  def test_lever_graphs_s1872; assert_in_epsilon(5539.6, worksheet.lever_graphs_s1872, 0.002); end
  def test_lever_graphs_b1873; assert_equal("Comparator A", worksheet.lever_graphs_b1873); end
  def test_lever_graphs_b1874; assert_equal("Comparator B", worksheet.lever_graphs_b1874); end
  def test_lever_graphs_b1875; assert_equal("Comparator C", worksheet.lever_graphs_b1875); end
  def test_lever_graphs_c2017; assert_equal("1975", worksheet.lever_graphs_c2017); end
  def test_lever_graphs_d2017; assert_equal("1980", worksheet.lever_graphs_d2017); end
  def test_lever_graphs_e2017; assert_equal("1985", worksheet.lever_graphs_e2017); end
  def test_lever_graphs_f2017; assert_equal("1990", worksheet.lever_graphs_f2017); end
  def test_lever_graphs_g2017; assert_equal("1995", worksheet.lever_graphs_g2017); end
  def test_lever_graphs_h2017; assert_equal("2000", worksheet.lever_graphs_h2017); end
  def test_lever_graphs_i2017; assert_equal("2005", worksheet.lever_graphs_i2017); end
  def test_lever_graphs_j2017; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2017, 0.002); end
  def test_lever_graphs_k2017; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2017, 0.002); end
  def test_lever_graphs_l2017; assert_equal("2015", worksheet.lever_graphs_l2017); end
  def test_lever_graphs_m2017; assert_equal("2020", worksheet.lever_graphs_m2017); end
  def test_lever_graphs_n2017; assert_equal("2025", worksheet.lever_graphs_n2017); end
  def test_lever_graphs_o2017; assert_equal("2030", worksheet.lever_graphs_o2017); end
  def test_lever_graphs_p2017; assert_equal("2035", worksheet.lever_graphs_p2017); end
  def test_lever_graphs_q2017; assert_equal("2040", worksheet.lever_graphs_q2017); end
  def test_lever_graphs_r2017; assert_equal("2045", worksheet.lever_graphs_r2017); end
  def test_lever_graphs_s2017; assert_equal("2050", worksheet.lever_graphs_s2017); end
  def test_lever_graphs_b2018; assert_equal("Historic data", worksheet.lever_graphs_b2018); end
  def test_lever_graphs_b2019; assert_in_delta(1.0, worksheet.lever_graphs_b2019, 0.002); end
  def test_lever_graphs_k2019; assert_in_epsilon(120.0, worksheet.lever_graphs_k2019, 0.002); end
  def test_lever_graphs_l2019; assert_in_epsilon(123.6, worksheet.lever_graphs_l2019, 0.002); end
  def test_lever_graphs_m2019; assert_in_epsilon(127.3, worksheet.lever_graphs_m2019, 0.002); end
  def test_lever_graphs_n2019; assert_in_epsilon(131.1, worksheet.lever_graphs_n2019, 0.002); end
  def test_lever_graphs_o2019; assert_in_epsilon(135.0, worksheet.lever_graphs_o2019, 0.002); end
  def test_lever_graphs_p2019; assert_in_epsilon(139.1, worksheet.lever_graphs_p2019, 0.002); end
  def test_lever_graphs_q2019; assert_in_epsilon(143.3, worksheet.lever_graphs_q2019, 0.002); end
  def test_lever_graphs_r2019; assert_in_epsilon(147.6, worksheet.lever_graphs_r2019, 0.002); end
  def test_lever_graphs_s2019; assert_in_epsilon(152.0, worksheet.lever_graphs_s2019, 0.002); end
  def test_lever_graphs_b2020; assert_in_epsilon(2.0, worksheet.lever_graphs_b2020, 0.002); end
  def test_lever_graphs_k2020; assert_in_epsilon(120.0, worksheet.lever_graphs_k2020, 0.002); end
  def test_lever_graphs_l2020; assert_in_epsilon(123.6, worksheet.lever_graphs_l2020, 0.002); end
  def test_lever_graphs_m2020; assert_in_epsilon(178.6, worksheet.lever_graphs_m2020, 0.002); end
  def test_lever_graphs_n2020; assert_in_epsilon(202.2, worksheet.lever_graphs_n2020, 0.002); end
  def test_lever_graphs_o2020; assert_in_epsilon(245.1, worksheet.lever_graphs_o2020, 0.002); end
  def test_lever_graphs_p2020; assert_in_epsilon(278.2, worksheet.lever_graphs_p2020, 0.002); end
  def test_lever_graphs_q2020; assert_in_epsilon(305.7, worksheet.lever_graphs_q2020, 0.002); end
  def test_lever_graphs_r2020; assert_in_epsilon(355.3, worksheet.lever_graphs_r2020, 0.002); end
  def test_lever_graphs_s2020; assert_in_epsilon(403.0, worksheet.lever_graphs_s2020, 0.002); end
  def test_lever_graphs_b2021; assert_in_epsilon(3.0, worksheet.lever_graphs_b2021, 0.002); end
  def test_lever_graphs_k2021; assert_in_epsilon(120.0, worksheet.lever_graphs_k2021, 0.002); end
  def test_lever_graphs_l2021; assert_in_epsilon(123.6, worksheet.lever_graphs_l2021, 0.002); end
  def test_lever_graphs_m2021; assert_in_epsilon(193.5, worksheet.lever_graphs_m2021, 0.002); end
  def test_lever_graphs_n2021; assert_in_epsilon(245.7, worksheet.lever_graphs_n2021, 0.002); end
  def test_lever_graphs_o2021; assert_in_epsilon(312.0, worksheet.lever_graphs_o2021, 0.002); end
  def test_lever_graphs_p2021; assert_in_epsilon(396.2, worksheet.lever_graphs_p2021, 0.002); end
  def test_lever_graphs_q2021; assert_in_epsilon(503.2, worksheet.lever_graphs_q2021, 0.002); end
  def test_lever_graphs_r2021; assert_in_epsilon(639.1, worksheet.lever_graphs_r2021, 0.002); end
  def test_lever_graphs_s2021; assert_in_epsilon(800.0, worksheet.lever_graphs_s2021, 0.002); end
  def test_lever_graphs_b2022; assert_in_epsilon(4.0, worksheet.lever_graphs_b2022, 0.002); end
  def test_lever_graphs_k2022; assert_in_epsilon(120.0, worksheet.lever_graphs_k2022, 0.002); end
  def test_lever_graphs_l2022; assert_in_epsilon(123.6, worksheet.lever_graphs_l2022, 0.002); end
  def test_lever_graphs_m2022; assert_in_epsilon(212.3, worksheet.lever_graphs_m2022, 0.002); end
  def test_lever_graphs_n2022; assert_in_epsilon(282.4, worksheet.lever_graphs_n2022, 0.002); end
  def test_lever_graphs_o2022; assert_in_epsilon(375.6, worksheet.lever_graphs_o2022, 0.002); end
  def test_lever_graphs_p2022; assert_in_epsilon(499.5, worksheet.lever_graphs_p2022, 0.002); end
  def test_lever_graphs_q2022; assert_in_epsilon(664.3, worksheet.lever_graphs_q2022, 0.002); end
  def test_lever_graphs_r2022; assert_in_epsilon(883.5, worksheet.lever_graphs_r2022, 0.002); end
  def test_lever_graphs_s2022; assert_in_epsilon(1200.0, worksheet.lever_graphs_s2022, 0.002); end
  def test_lever_graphs_b2023; assert_equal("Comparator A", worksheet.lever_graphs_b2023); end
  def test_lever_graphs_b2024; assert_equal("Comparator B", worksheet.lever_graphs_b2024); end
  def test_lever_graphs_b2025; assert_equal("Comparator C", worksheet.lever_graphs_b2025); end
  def test_lever_graphs_c1939; assert_equal("1975", worksheet.lever_graphs_c1939); end
  def test_lever_graphs_d1939; assert_equal("1980", worksheet.lever_graphs_d1939); end
  def test_lever_graphs_e1939; assert_equal("1985", worksheet.lever_graphs_e1939); end
  def test_lever_graphs_f1939; assert_equal("1990", worksheet.lever_graphs_f1939); end
  def test_lever_graphs_g1939; assert_equal("1995", worksheet.lever_graphs_g1939); end
  def test_lever_graphs_h1939; assert_equal("2000", worksheet.lever_graphs_h1939); end
  def test_lever_graphs_i1939; assert_equal("2005", worksheet.lever_graphs_i1939); end
  def test_lever_graphs_j1939; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1939, 0.002); end
  def test_lever_graphs_k1939; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1939, 0.002); end
  def test_lever_graphs_l1939; assert_equal("2015", worksheet.lever_graphs_l1939); end
  def test_lever_graphs_m1939; assert_equal("2020", worksheet.lever_graphs_m1939); end
  def test_lever_graphs_n1939; assert_equal("2025", worksheet.lever_graphs_n1939); end
  def test_lever_graphs_o1939; assert_equal("2030", worksheet.lever_graphs_o1939); end
  def test_lever_graphs_p1939; assert_equal("2035", worksheet.lever_graphs_p1939); end
  def test_lever_graphs_q1939; assert_equal("2040", worksheet.lever_graphs_q1939); end
  def test_lever_graphs_r1939; assert_equal("2045", worksheet.lever_graphs_r1939); end
  def test_lever_graphs_s1939; assert_equal("2050", worksheet.lever_graphs_s1939); end
  def test_lever_graphs_b1940; assert_equal("Historic data", worksheet.lever_graphs_b1940); end
  def test_lever_graphs_b1941; assert_in_delta(1.0, worksheet.lever_graphs_b1941, 0.002); end
  def test_lever_graphs_k1941; assert_in_epsilon(237.67, worksheet.lever_graphs_k1941, 0.002); end
  def test_lever_graphs_l1941; assert_in_epsilon(414.0, worksheet.lever_graphs_l1941, 0.002); end
  def test_lever_graphs_m1941; assert_in_epsilon(393.0, worksheet.lever_graphs_m1941, 0.002); end
  def test_lever_graphs_n1941; assert_in_epsilon(348.0, worksheet.lever_graphs_n1941, 0.002); end
  def test_lever_graphs_o1941; assert_in_epsilon(198.0, worksheet.lever_graphs_o1941, 0.002); end
  def test_lever_graphs_p1941; assert_in_delta(0.0, (worksheet.lever_graphs_p1941||0), 0.002); end
  def test_lever_graphs_q1941; assert_in_delta(0.0, (worksheet.lever_graphs_q1941||0), 0.002); end
  def test_lever_graphs_r1941; assert_in_delta(0.0, (worksheet.lever_graphs_r1941||0), 0.002); end
  def test_lever_graphs_s1941; assert_in_delta(0.0, (worksheet.lever_graphs_s1941||0), 0.002); end
  def test_lever_graphs_b1942; assert_in_epsilon(2.0, worksheet.lever_graphs_b1942, 0.002); end
  def test_lever_graphs_k1942; assert_in_epsilon(237.67, worksheet.lever_graphs_k1942, 0.002); end
  def test_lever_graphs_l1942; assert_in_epsilon(414.0, worksheet.lever_graphs_l1942, 0.002); end
  def test_lever_graphs_m1942; assert_in_epsilon(597.0, worksheet.lever_graphs_m1942, 0.002); end
  def test_lever_graphs_n1942; assert_in_epsilon(657.0, worksheet.lever_graphs_n1942, 0.002); end
  def test_lever_graphs_o1942; assert_in_epsilon(837.0, worksheet.lever_graphs_o1942, 0.002); end
  def test_lever_graphs_p1942; assert_in_epsilon(1025.0, worksheet.lever_graphs_p1942, 0.002); end
  def test_lever_graphs_q1942; assert_in_epsilon(1288.0, worksheet.lever_graphs_q1942, 0.002); end
  def test_lever_graphs_r1942; assert_in_epsilon(1875.0, worksheet.lever_graphs_r1942, 0.002); end
  def test_lever_graphs_s1942; assert_in_epsilon(2317.0, worksheet.lever_graphs_s1942, 0.002); end
  def test_lever_graphs_b1943; assert_in_epsilon(3.0, worksheet.lever_graphs_b1943, 0.002); end
  def test_lever_graphs_k1943; assert_in_epsilon(237.67, worksheet.lever_graphs_k1943, 0.002); end
  def test_lever_graphs_l1943; assert_in_epsilon(414.0, worksheet.lever_graphs_l1943, 0.002); end
  def test_lever_graphs_m1943; assert_in_epsilon(824.0, worksheet.lever_graphs_m1943, 0.002); end
  def test_lever_graphs_n1943; assert_in_epsilon(1069.0, worksheet.lever_graphs_n1943, 0.002); end
  def test_lever_graphs_o1943; assert_in_epsilon(1654.0, worksheet.lever_graphs_o1943, 0.002); end
  def test_lever_graphs_p1943; assert_in_epsilon(2240.0, worksheet.lever_graphs_p1943, 0.002); end
  def test_lever_graphs_q1943; assert_in_epsilon(2793.0, worksheet.lever_graphs_q1943, 0.002); end
  def test_lever_graphs_r1943; assert_in_epsilon(3745.0, worksheet.lever_graphs_r1943, 0.002); end
  def test_lever_graphs_s1943; assert_in_epsilon(4710.0, worksheet.lever_graphs_s1943, 0.002); end
  def test_lever_graphs_b1944; assert_in_epsilon(4.0, worksheet.lever_graphs_b1944, 0.002); end
  def test_lever_graphs_k1944; assert_in_epsilon(237.67, worksheet.lever_graphs_k1944, 0.002); end
  def test_lever_graphs_l1944; assert_in_epsilon(414.0, worksheet.lever_graphs_l1944, 0.002); end
  def test_lever_graphs_m1944; assert_in_epsilon(1144.0, worksheet.lever_graphs_m1944, 0.002); end
  def test_lever_graphs_n1944; assert_in_epsilon(1753.0, worksheet.lever_graphs_n1944, 0.002); end
  def test_lever_graphs_o1944; assert_in_epsilon(2756.0, worksheet.lever_graphs_o1944, 0.002); end
  def test_lever_graphs_p1944; assert_in_epsilon(3747.0, worksheet.lever_graphs_p1944, 0.002); end
  def test_lever_graphs_q1944; assert_in_epsilon(5100.0, worksheet.lever_graphs_q1944, 0.002); end
  def test_lever_graphs_r1944; assert_in_epsilon(5738.0, worksheet.lever_graphs_r1944, 0.002); end
  def test_lever_graphs_s1944; assert_in_epsilon(6466.0, worksheet.lever_graphs_s1944, 0.002); end
  def test_lever_graphs_b1945; assert_equal("Comparator A", worksheet.lever_graphs_b1945); end
  def test_lever_graphs_b1946; assert_equal("Comparator B", worksheet.lever_graphs_b1946); end
  def test_lever_graphs_b1947; assert_equal("Comparator C", worksheet.lever_graphs_b1947); end
  def test_lever_graphs_c2056; assert_equal("1975", worksheet.lever_graphs_c2056); end
  def test_lever_graphs_d2056; assert_equal("1980", worksheet.lever_graphs_d2056); end
  def test_lever_graphs_e2056; assert_equal("1985", worksheet.lever_graphs_e2056); end
  def test_lever_graphs_f2056; assert_equal("1990", worksheet.lever_graphs_f2056); end
  def test_lever_graphs_g2056; assert_equal("1995", worksheet.lever_graphs_g2056); end
  def test_lever_graphs_h2056; assert_equal("2000", worksheet.lever_graphs_h2056); end
  def test_lever_graphs_i2056; assert_equal("2005", worksheet.lever_graphs_i2056); end
  def test_lever_graphs_j2056; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2056, 0.002); end
  def test_lever_graphs_k2056; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2056, 0.002); end
  def test_lever_graphs_l2056; assert_equal("2015", worksheet.lever_graphs_l2056); end
  def test_lever_graphs_m2056; assert_equal("2020", worksheet.lever_graphs_m2056); end
  def test_lever_graphs_n2056; assert_equal("2025", worksheet.lever_graphs_n2056); end
  def test_lever_graphs_o2056; assert_equal("2030", worksheet.lever_graphs_o2056); end
  def test_lever_graphs_p2056; assert_equal("2035", worksheet.lever_graphs_p2056); end
  def test_lever_graphs_q2056; assert_equal("2040", worksheet.lever_graphs_q2056); end
  def test_lever_graphs_r2056; assert_equal("2045", worksheet.lever_graphs_r2056); end
  def test_lever_graphs_s2056; assert_equal("2050", worksheet.lever_graphs_s2056); end
  def test_lever_graphs_b2057; assert_equal("Historic data", worksheet.lever_graphs_b2057); end
  def test_lever_graphs_b2058; assert_in_delta(1.0, worksheet.lever_graphs_b2058, 0.002); end
  def test_lever_graphs_k2058; assert_in_delta(0.0, (worksheet.lever_graphs_k2058||0), 0.002); end
  def test_lever_graphs_l2058; assert_in_delta(0.0, (worksheet.lever_graphs_l2058||0), 0.002); end
  def test_lever_graphs_m2058; assert_in_delta(0.0, (worksheet.lever_graphs_m2058||0), 0.002); end
  def test_lever_graphs_n2058; assert_in_delta(0.0, (worksheet.lever_graphs_n2058||0), 0.002); end
  def test_lever_graphs_o2058; assert_in_delta(0.0, (worksheet.lever_graphs_o2058||0), 0.002); end
  def test_lever_graphs_p2058; assert_in_delta(0.0, (worksheet.lever_graphs_p2058||0), 0.002); end
  def test_lever_graphs_q2058; assert_in_delta(0.0, (worksheet.lever_graphs_q2058||0), 0.002); end
  def test_lever_graphs_r2058; assert_in_delta(0.0, (worksheet.lever_graphs_r2058||0), 0.002); end
  def test_lever_graphs_s2058; assert_in_delta(0.0, (worksheet.lever_graphs_s2058||0), 0.002); end
  def test_lever_graphs_b2059; assert_in_epsilon(2.0, worksheet.lever_graphs_b2059, 0.002); end
  def test_lever_graphs_k2059; assert_in_delta(0.0, (worksheet.lever_graphs_k2059||0), 0.002); end
  def test_lever_graphs_l2059; assert_in_delta(0.0, (worksheet.lever_graphs_l2059||0), 0.002); end
  def test_lever_graphs_m2059; assert_in_delta(0.0, (worksheet.lever_graphs_m2059||0), 0.002); end
  def test_lever_graphs_n2059; assert_in_delta(0.0, (worksheet.lever_graphs_n2059||0), 0.002); end
  def test_lever_graphs_o2059; assert_in_delta(0.0, (worksheet.lever_graphs_o2059||0), 0.002); end
  def test_lever_graphs_p2059; assert_in_delta(0.0, (worksheet.lever_graphs_p2059||0), 0.002); end
  def test_lever_graphs_q2059; assert_in_delta(0.0, (worksheet.lever_graphs_q2059||0), 0.002); end
  def test_lever_graphs_r2059; assert_in_delta(0.0, (worksheet.lever_graphs_r2059||0), 0.002); end
  def test_lever_graphs_s2059; assert_in_delta(0.0, (worksheet.lever_graphs_s2059||0), 0.002); end
  def test_lever_graphs_b2060; assert_in_epsilon(3.0, worksheet.lever_graphs_b2060, 0.002); end
  def test_lever_graphs_k2060; assert_in_delta(0.0, (worksheet.lever_graphs_k2060||0), 0.002); end
  def test_lever_graphs_l2060; assert_in_delta(0.0, (worksheet.lever_graphs_l2060||0), 0.002); end
  def test_lever_graphs_m2060; assert_in_delta(0.0, (worksheet.lever_graphs_m2060||0), 0.002); end
  def test_lever_graphs_n2060; assert_in_delta(0.0, (worksheet.lever_graphs_n2060||0), 0.002); end
  def test_lever_graphs_o2060; assert_in_delta(0.0, (worksheet.lever_graphs_o2060||0), 0.002); end
  def test_lever_graphs_p2060; assert_in_delta(0.0, (worksheet.lever_graphs_p2060||0), 0.002); end
  def test_lever_graphs_q2060; assert_in_delta(0.0, (worksheet.lever_graphs_q2060||0), 0.002); end
  def test_lever_graphs_r2060; assert_in_delta(0.0, (worksheet.lever_graphs_r2060||0), 0.002); end
  def test_lever_graphs_s2060; assert_in_delta(0.0, (worksheet.lever_graphs_s2060||0), 0.002); end
  def test_lever_graphs_b2061; assert_in_epsilon(4.0, worksheet.lever_graphs_b2061, 0.002); end
  def test_lever_graphs_k2061; assert_in_delta(0.0, (worksheet.lever_graphs_k2061||0), 0.002); end
  def test_lever_graphs_l2061; assert_in_delta(0.0, (worksheet.lever_graphs_l2061||0), 0.002); end
  def test_lever_graphs_m2061; assert_in_delta(0.0, (worksheet.lever_graphs_m2061||0), 0.002); end
  def test_lever_graphs_n2061; assert_in_delta(0.0, (worksheet.lever_graphs_n2061||0), 0.002); end
  def test_lever_graphs_o2061; assert_in_delta(0.0, (worksheet.lever_graphs_o2061||0), 0.002); end
  def test_lever_graphs_p2061; assert_in_delta(0.0, (worksheet.lever_graphs_p2061||0), 0.002); end
  def test_lever_graphs_q2061; assert_in_delta(0.0, (worksheet.lever_graphs_q2061||0), 0.002); end
  def test_lever_graphs_r2061; assert_in_delta(0.0, (worksheet.lever_graphs_r2061||0), 0.002); end
  def test_lever_graphs_s2061; assert_in_delta(0.0, (worksheet.lever_graphs_s2061||0), 0.002); end
  def test_lever_graphs_b2062; assert_equal("Comparator A", worksheet.lever_graphs_b2062); end
  def test_lever_graphs_b2063; assert_equal("Comparator B", worksheet.lever_graphs_b2063); end
  def test_lever_graphs_b2064; assert_equal("Comparator C", worksheet.lever_graphs_b2064); end
  def test_lever_graphs_c2071; assert_equal("1975", worksheet.lever_graphs_c2071); end
  def test_lever_graphs_d2071; assert_equal("1980", worksheet.lever_graphs_d2071); end
  def test_lever_graphs_e2071; assert_equal("1985", worksheet.lever_graphs_e2071); end
  def test_lever_graphs_f2071; assert_equal("1990", worksheet.lever_graphs_f2071); end
  def test_lever_graphs_g2071; assert_equal("1995", worksheet.lever_graphs_g2071); end
  def test_lever_graphs_h2071; assert_equal("2000", worksheet.lever_graphs_h2071); end
  def test_lever_graphs_i2071; assert_equal("2005", worksheet.lever_graphs_i2071); end
  def test_lever_graphs_j2071; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2071, 0.002); end
  def test_lever_graphs_k2071; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2071, 0.002); end
  def test_lever_graphs_l2071; assert_equal("2015", worksheet.lever_graphs_l2071); end
  def test_lever_graphs_m2071; assert_equal("2020", worksheet.lever_graphs_m2071); end
  def test_lever_graphs_n2071; assert_equal("2025", worksheet.lever_graphs_n2071); end
  def test_lever_graphs_o2071; assert_equal("2030", worksheet.lever_graphs_o2071); end
  def test_lever_graphs_p2071; assert_equal("2035", worksheet.lever_graphs_p2071); end
  def test_lever_graphs_q2071; assert_equal("2040", worksheet.lever_graphs_q2071); end
  def test_lever_graphs_r2071; assert_equal("2045", worksheet.lever_graphs_r2071); end
  def test_lever_graphs_s2071; assert_equal("2050", worksheet.lever_graphs_s2071); end
  def test_lever_graphs_b2072; assert_equal("Historic data", worksheet.lever_graphs_b2072); end
  def test_lever_graphs_b2073; assert_in_delta(1.0, worksheet.lever_graphs_b2073, 0.002); end
  def test_lever_graphs_k2073; assert_in_delta(0.0, (worksheet.lever_graphs_k2073||0), 0.002); end
  def test_lever_graphs_l2073; assert_in_delta(0.0, (worksheet.lever_graphs_l2073||0), 0.002); end
  def test_lever_graphs_m2073; assert_in_delta(0.0, (worksheet.lever_graphs_m2073||0), 0.002); end
  def test_lever_graphs_n2073; assert_in_delta(0.0, (worksheet.lever_graphs_n2073||0), 0.002); end
  def test_lever_graphs_o2073; assert_in_delta(0.0, (worksheet.lever_graphs_o2073||0), 0.002); end
  def test_lever_graphs_p2073; assert_in_delta(0.0, (worksheet.lever_graphs_p2073||0), 0.002); end
  def test_lever_graphs_q2073; assert_in_delta(0.0, (worksheet.lever_graphs_q2073||0), 0.002); end
  def test_lever_graphs_r2073; assert_in_delta(0.0, (worksheet.lever_graphs_r2073||0), 0.002); end
  def test_lever_graphs_s2073; assert_in_delta(0.0, (worksheet.lever_graphs_s2073||0), 0.002); end
  def test_lever_graphs_b2074; assert_in_epsilon(2.0, worksheet.lever_graphs_b2074, 0.002); end
  def test_lever_graphs_k2074; assert_in_delta(0.0, (worksheet.lever_graphs_k2074||0), 0.002); end
  def test_lever_graphs_l2074; assert_in_delta(0.0, (worksheet.lever_graphs_l2074||0), 0.002); end
  def test_lever_graphs_m2074; assert_in_delta(0.0, (worksheet.lever_graphs_m2074||0), 0.002); end
  def test_lever_graphs_n2074; assert_in_delta(0.0, (worksheet.lever_graphs_n2074||0), 0.002); end
  def test_lever_graphs_o2074; assert_in_delta(0.0, (worksheet.lever_graphs_o2074||0), 0.002); end
  def test_lever_graphs_p2074; assert_in_delta(0.0, (worksheet.lever_graphs_p2074||0), 0.002); end
  def test_lever_graphs_q2074; assert_in_delta(0.0, (worksheet.lever_graphs_q2074||0), 0.002); end
  def test_lever_graphs_r2074; assert_in_delta(0.0, (worksheet.lever_graphs_r2074||0), 0.002); end
  def test_lever_graphs_s2074; assert_in_delta(0.0, (worksheet.lever_graphs_s2074||0), 0.002); end
  def test_lever_graphs_b2075; assert_in_epsilon(3.0, worksheet.lever_graphs_b2075, 0.002); end
  def test_lever_graphs_k2075; assert_in_delta(0.0, (worksheet.lever_graphs_k2075||0), 0.002); end
  def test_lever_graphs_l2075; assert_in_delta(0.0, (worksheet.lever_graphs_l2075||0), 0.002); end
  def test_lever_graphs_m2075; assert_in_delta(0.0, (worksheet.lever_graphs_m2075||0), 0.002); end
  def test_lever_graphs_n2075; assert_in_delta(0.0, (worksheet.lever_graphs_n2075||0), 0.002); end
  def test_lever_graphs_o2075; assert_in_delta(0.0, (worksheet.lever_graphs_o2075||0), 0.002); end
  def test_lever_graphs_p2075; assert_in_delta(0.0, (worksheet.lever_graphs_p2075||0), 0.002); end
  def test_lever_graphs_q2075; assert_in_delta(0.0, (worksheet.lever_graphs_q2075||0), 0.002); end
  def test_lever_graphs_r2075; assert_in_delta(0.0, (worksheet.lever_graphs_r2075||0), 0.002); end
  def test_lever_graphs_s2075; assert_in_delta(0.0, (worksheet.lever_graphs_s2075||0), 0.002); end
  def test_lever_graphs_b2076; assert_in_epsilon(4.0, worksheet.lever_graphs_b2076, 0.002); end
  def test_lever_graphs_k2076; assert_in_delta(0.0, (worksheet.lever_graphs_k2076||0), 0.002); end
  def test_lever_graphs_l2076; assert_in_delta(0.0, (worksheet.lever_graphs_l2076||0), 0.002); end
  def test_lever_graphs_m2076; assert_in_delta(0.0, (worksheet.lever_graphs_m2076||0), 0.002); end
  def test_lever_graphs_n2076; assert_in_delta(0.0, (worksheet.lever_graphs_n2076||0), 0.002); end
  def test_lever_graphs_o2076; assert_in_delta(0.0, (worksheet.lever_graphs_o2076||0), 0.002); end
  def test_lever_graphs_p2076; assert_in_delta(0.0, (worksheet.lever_graphs_p2076||0), 0.002); end
  def test_lever_graphs_q2076; assert_in_delta(0.0, (worksheet.lever_graphs_q2076||0), 0.002); end
  def test_lever_graphs_r2076; assert_in_delta(0.0, (worksheet.lever_graphs_r2076||0), 0.002); end
  def test_lever_graphs_s2076; assert_in_delta(0.0, (worksheet.lever_graphs_s2076||0), 0.002); end
  def test_lever_graphs_b2077; assert_equal("Comparator A", worksheet.lever_graphs_b2077); end
  def test_lever_graphs_b2078; assert_equal("Comparator B", worksheet.lever_graphs_b2078); end
  def test_lever_graphs_b2079; assert_equal("Comparator C", worksheet.lever_graphs_b2079); end
  def test_lever_graphs_c2086; assert_equal("1975", worksheet.lever_graphs_c2086); end
  def test_lever_graphs_d2086; assert_equal("1980", worksheet.lever_graphs_d2086); end
  def test_lever_graphs_e2086; assert_equal("1985", worksheet.lever_graphs_e2086); end
  def test_lever_graphs_f2086; assert_equal("1990", worksheet.lever_graphs_f2086); end
  def test_lever_graphs_g2086; assert_equal("1995", worksheet.lever_graphs_g2086); end
  def test_lever_graphs_h2086; assert_equal("2000", worksheet.lever_graphs_h2086); end
  def test_lever_graphs_i2086; assert_equal("2005", worksheet.lever_graphs_i2086); end
  def test_lever_graphs_j2086; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2086, 0.002); end
  def test_lever_graphs_k2086; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2086, 0.002); end
  def test_lever_graphs_l2086; assert_equal("2015", worksheet.lever_graphs_l2086); end
  def test_lever_graphs_m2086; assert_equal("2020", worksheet.lever_graphs_m2086); end
  def test_lever_graphs_n2086; assert_equal("2025", worksheet.lever_graphs_n2086); end
  def test_lever_graphs_o2086; assert_equal("2030", worksheet.lever_graphs_o2086); end
  def test_lever_graphs_p2086; assert_equal("2035", worksheet.lever_graphs_p2086); end
  def test_lever_graphs_q2086; assert_equal("2040", worksheet.lever_graphs_q2086); end
  def test_lever_graphs_r2086; assert_equal("2045", worksheet.lever_graphs_r2086); end
  def test_lever_graphs_s2086; assert_equal("2050", worksheet.lever_graphs_s2086); end
  def test_lever_graphs_b2087; assert_equal("Historic data", worksheet.lever_graphs_b2087); end
  def test_lever_graphs_b2088; assert_in_delta(1.0, worksheet.lever_graphs_b2088, 0.002); end
  def test_lever_graphs_k2088; assert_in_delta(0.0, (worksheet.lever_graphs_k2088||0), 0.002); end
  def test_lever_graphs_l2088; assert_in_delta(0.0, (worksheet.lever_graphs_l2088||0), 0.002); end
  def test_lever_graphs_m2088; assert_in_delta(0.0, (worksheet.lever_graphs_m2088||0), 0.002); end
  def test_lever_graphs_n2088; assert_in_delta(0.0, (worksheet.lever_graphs_n2088||0), 0.002); end
  def test_lever_graphs_o2088; assert_in_delta(0.0, (worksheet.lever_graphs_o2088||0), 0.002); end
  def test_lever_graphs_p2088; assert_in_delta(0.0, (worksheet.lever_graphs_p2088||0), 0.002); end
  def test_lever_graphs_q2088; assert_in_delta(0.0, (worksheet.lever_graphs_q2088||0), 0.002); end
  def test_lever_graphs_r2088; assert_in_delta(0.0, (worksheet.lever_graphs_r2088||0), 0.002); end
  def test_lever_graphs_s2088; assert_in_delta(0.0, (worksheet.lever_graphs_s2088||0), 0.002); end
  def test_lever_graphs_b2089; assert_in_epsilon(2.0, worksheet.lever_graphs_b2089, 0.002); end
  def test_lever_graphs_k2089; assert_in_delta(0.0, (worksheet.lever_graphs_k2089||0), 0.002); end
  def test_lever_graphs_l2089; assert_in_delta(0.0, (worksheet.lever_graphs_l2089||0), 0.002); end
  def test_lever_graphs_m2089; assert_in_delta(0.0, (worksheet.lever_graphs_m2089||0), 0.002); end
  def test_lever_graphs_n2089; assert_in_delta(0.0, (worksheet.lever_graphs_n2089||0), 0.002); end
  def test_lever_graphs_o2089; assert_in_delta(0.0, (worksheet.lever_graphs_o2089||0), 0.002); end
  def test_lever_graphs_p2089; assert_in_delta(0.0, (worksheet.lever_graphs_p2089||0), 0.002); end
  def test_lever_graphs_q2089; assert_in_delta(0.0, (worksheet.lever_graphs_q2089||0), 0.002); end
  def test_lever_graphs_r2089; assert_in_delta(0.0, (worksheet.lever_graphs_r2089||0), 0.002); end
  def test_lever_graphs_s2089; assert_in_delta(0.0, (worksheet.lever_graphs_s2089||0), 0.002); end
  def test_lever_graphs_b2090; assert_in_epsilon(3.0, worksheet.lever_graphs_b2090, 0.002); end
  def test_lever_graphs_k2090; assert_in_delta(0.0, (worksheet.lever_graphs_k2090||0), 0.002); end
  def test_lever_graphs_l2090; assert_in_delta(0.0, (worksheet.lever_graphs_l2090||0), 0.002); end
  def test_lever_graphs_m2090; assert_in_delta(0.0, (worksheet.lever_graphs_m2090||0), 0.002); end
  def test_lever_graphs_n2090; assert_in_delta(0.0, (worksheet.lever_graphs_n2090||0), 0.002); end
  def test_lever_graphs_o2090; assert_in_delta(0.0, (worksheet.lever_graphs_o2090||0), 0.002); end
  def test_lever_graphs_p2090; assert_in_delta(0.0, (worksheet.lever_graphs_p2090||0), 0.002); end
  def test_lever_graphs_q2090; assert_in_delta(0.0, (worksheet.lever_graphs_q2090||0), 0.002); end
  def test_lever_graphs_r2090; assert_in_delta(0.0, (worksheet.lever_graphs_r2090||0), 0.002); end
  def test_lever_graphs_s2090; assert_in_delta(0.0, (worksheet.lever_graphs_s2090||0), 0.002); end
  def test_lever_graphs_b2091; assert_in_epsilon(4.0, worksheet.lever_graphs_b2091, 0.002); end
  def test_lever_graphs_k2091; assert_in_delta(0.0, (worksheet.lever_graphs_k2091||0), 0.002); end
  def test_lever_graphs_l2091; assert_in_delta(0.0, (worksheet.lever_graphs_l2091||0), 0.002); end
  def test_lever_graphs_m2091; assert_in_delta(0.0, (worksheet.lever_graphs_m2091||0), 0.002); end
  def test_lever_graphs_n2091; assert_in_delta(0.0, (worksheet.lever_graphs_n2091||0), 0.002); end
  def test_lever_graphs_o2091; assert_in_delta(0.0, (worksheet.lever_graphs_o2091||0), 0.002); end
  def test_lever_graphs_p2091; assert_in_delta(0.0, (worksheet.lever_graphs_p2091||0), 0.002); end
  def test_lever_graphs_q2091; assert_in_delta(0.0, (worksheet.lever_graphs_q2091||0), 0.002); end
  def test_lever_graphs_r2091; assert_in_delta(0.0, (worksheet.lever_graphs_r2091||0), 0.002); end
  def test_lever_graphs_s2091; assert_in_delta(0.0, (worksheet.lever_graphs_s2091||0), 0.002); end
  def test_lever_graphs_b2092; assert_equal("Comparator A", worksheet.lever_graphs_b2092); end
  def test_lever_graphs_b2093; assert_equal("Comparator B", worksheet.lever_graphs_b2093); end
  def test_lever_graphs_b2094; assert_equal("Comparator C", worksheet.lever_graphs_b2094); end
  def test_lever_graphs_c1653; assert_equal("1975", worksheet.lever_graphs_c1653); end
  def test_lever_graphs_d1653; assert_equal("1980", worksheet.lever_graphs_d1653); end
  def test_lever_graphs_e1653; assert_equal("1985", worksheet.lever_graphs_e1653); end
  def test_lever_graphs_f1653; assert_equal("1990", worksheet.lever_graphs_f1653); end
  def test_lever_graphs_g1653; assert_equal("1995", worksheet.lever_graphs_g1653); end
  def test_lever_graphs_h1653; assert_equal("2000", worksheet.lever_graphs_h1653); end
  def test_lever_graphs_i1653; assert_equal("2005", worksheet.lever_graphs_i1653); end
  def test_lever_graphs_j1653; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1653, 0.002); end
  def test_lever_graphs_k1653; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1653, 0.002); end
  def test_lever_graphs_l1653; assert_equal("2015", worksheet.lever_graphs_l1653); end
  def test_lever_graphs_m1653; assert_equal("2020", worksheet.lever_graphs_m1653); end
  def test_lever_graphs_n1653; assert_equal("2025", worksheet.lever_graphs_n1653); end
  def test_lever_graphs_o1653; assert_equal("2030", worksheet.lever_graphs_o1653); end
  def test_lever_graphs_p1653; assert_equal("2035", worksheet.lever_graphs_p1653); end
  def test_lever_graphs_q1653; assert_equal("2040", worksheet.lever_graphs_q1653); end
  def test_lever_graphs_r1653; assert_equal("2045", worksheet.lever_graphs_r1653); end
  def test_lever_graphs_s1653; assert_equal("2050", worksheet.lever_graphs_s1653); end
  def test_lever_graphs_b1654; assert_equal("Historic data", worksheet.lever_graphs_b1654); end
  def test_lever_graphs_b1655; assert_in_delta(1.0, worksheet.lever_graphs_b1655, 0.002); end
  def test_lever_graphs_k1655; assert_in_delta(0.0, (worksheet.lever_graphs_k1655||0), 0.002); end
  def test_lever_graphs_l1655; assert_in_delta(0.0, (worksheet.lever_graphs_l1655||0), 0.002); end
  def test_lever_graphs_m1655; assert_in_delta(0.0, (worksheet.lever_graphs_m1655||0), 0.002); end
  def test_lever_graphs_n1655; assert_in_delta(0.0, (worksheet.lever_graphs_n1655||0), 0.002); end
  def test_lever_graphs_o1655; assert_in_delta(0.0, (worksheet.lever_graphs_o1655||0), 0.002); end
  def test_lever_graphs_p1655; assert_in_delta(0.0, (worksheet.lever_graphs_p1655||0), 0.002); end
  def test_lever_graphs_q1655; assert_in_delta(0.0, (worksheet.lever_graphs_q1655||0), 0.002); end
  def test_lever_graphs_r1655; assert_in_delta(0.0, (worksheet.lever_graphs_r1655||0), 0.002); end
  def test_lever_graphs_s1655; assert_in_delta(0.0, (worksheet.lever_graphs_s1655||0), 0.002); end
  def test_lever_graphs_b1656; assert_in_epsilon(2.0, worksheet.lever_graphs_b1656, 0.002); end
  def test_lever_graphs_k1656; assert_in_delta(0.0, (worksheet.lever_graphs_k1656||0), 0.002); end
  def test_lever_graphs_l1656; assert_in_delta(0.0, (worksheet.lever_graphs_l1656||0), 0.002); end
  def test_lever_graphs_m1656; assert_in_delta(0.0, (worksheet.lever_graphs_m1656||0), 0.002); end
  def test_lever_graphs_n1656; assert_in_delta(0.0, (worksheet.lever_graphs_n1656||0), 0.002); end
  def test_lever_graphs_o1656; assert_in_delta(0.0, (worksheet.lever_graphs_o1656||0), 0.002); end
  def test_lever_graphs_p1656; assert_in_delta(0.05, worksheet.lever_graphs_p1656, 0.002); end
  def test_lever_graphs_q1656; assert_in_delta(0.1, worksheet.lever_graphs_q1656, 0.002); end
  def test_lever_graphs_r1656; assert_in_delta(0.15, worksheet.lever_graphs_r1656, 0.002); end
  def test_lever_graphs_s1656; assert_in_delta(0.2, worksheet.lever_graphs_s1656, 0.002); end
  def test_lever_graphs_b1657; assert_in_epsilon(3.0, worksheet.lever_graphs_b1657, 0.002); end
  def test_lever_graphs_k1657; assert_in_delta(0.0, (worksheet.lever_graphs_k1657||0), 0.002); end
  def test_lever_graphs_l1657; assert_in_delta(0.0, (worksheet.lever_graphs_l1657||0), 0.002); end
  def test_lever_graphs_m1657; assert_in_delta(0.0, (worksheet.lever_graphs_m1657||0), 0.002); end
  def test_lever_graphs_n1657; assert_in_delta(0.01, worksheet.lever_graphs_n1657, 0.002); end
  def test_lever_graphs_o1657; assert_in_delta(0.08, worksheet.lever_graphs_o1657, 0.002); end
  def test_lever_graphs_p1657; assert_in_delta(0.15000000000000002, worksheet.lever_graphs_p1657, 0.002); end
  def test_lever_graphs_q1657; assert_in_delta(0.22000000000000003, worksheet.lever_graphs_q1657, 0.002); end
  def test_lever_graphs_r1657; assert_in_delta(0.29000000000000004, worksheet.lever_graphs_r1657, 0.002); end
  def test_lever_graphs_s1657; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_s1657, 0.002); end
  def test_lever_graphs_b1658; assert_in_epsilon(4.0, worksheet.lever_graphs_b1658, 0.002); end
  def test_lever_graphs_k1658; assert_in_delta(0.0, (worksheet.lever_graphs_k1658||0), 0.002); end
  def test_lever_graphs_l1658; assert_in_delta(0.0, (worksheet.lever_graphs_l1658||0), 0.002); end
  def test_lever_graphs_m1658; assert_in_delta(0.0, (worksheet.lever_graphs_m1658||0), 0.002); end
  def test_lever_graphs_n1658; assert_in_delta(0.04, worksheet.lever_graphs_n1658, 0.002); end
  def test_lever_graphs_o1658; assert_in_delta(0.192, worksheet.lever_graphs_o1658, 0.002); end
  def test_lever_graphs_p1658; assert_in_delta(0.344, worksheet.lever_graphs_p1658, 0.002); end
  def test_lever_graphs_q1658; assert_in_delta(0.496, worksheet.lever_graphs_q1658, 0.002); end
  def test_lever_graphs_r1658; assert_in_delta(0.648, worksheet.lever_graphs_r1658, 0.002); end
  def test_lever_graphs_s1658; assert_in_delta(0.8, worksheet.lever_graphs_s1658, 0.002); end
  def test_lever_graphs_b1659; assert_equal("Comparator A", worksheet.lever_graphs_b1659); end
  def test_lever_graphs_b1660; assert_equal("Comparator B", worksheet.lever_graphs_b1660); end
  def test_lever_graphs_b1661; assert_equal("Comparator C", worksheet.lever_graphs_b1661); end
  def test_lever_graphs_d1642; assert_equal("Title", worksheet.lever_graphs_d1642); end
  def test_lever_graphs_e1642; assert_equal("Steel.Oxygen", worksheet.lever_graphs_e1642); end
  def test_lever_graphs_f1642; assert_equal("Chemicals & petrochemicals.HVC", worksheet.lever_graphs_f1642); end
  def test_lever_graphs_g1642; assert_equal("Pulp & paper.Pulp", worksheet.lever_graphs_g1642); end
  def test_lever_graphs_h1642; assert_equal("Cement", worksheet.lever_graphs_h1642); end
  def test_lever_graphs_i1642; assert_equal("Timber", worksheet.lever_graphs_i1642); end
  def test_lever_graphs_d1643; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1643, 0.002); end
  def test_lever_graphs_e1643; assert_in_delta(0.0, (worksheet.lever_graphs_e1643||0), 0.002); end
  def test_lever_graphs_f1643; assert_in_delta(0.0, (worksheet.lever_graphs_f1643||0), 0.002); end
  def test_lever_graphs_g1643; assert_in_delta(0.0, (worksheet.lever_graphs_g1643||0), 0.002); end
  def test_lever_graphs_h1643; assert_in_delta(0.0, (worksheet.lever_graphs_h1643||0), 0.002); end
  def test_lever_graphs_i1643; assert_in_delta(0.0, (worksheet.lever_graphs_i1643||0), 0.002); end
  def test_lever_graphs_d1644; assert_equal("2050: Level 1", worksheet.lever_graphs_d1644); end
  def test_lever_graphs_e1644; assert_in_delta(0.0, (worksheet.lever_graphs_e1644||0), 0.002); end
  def test_lever_graphs_f1644; assert_in_delta(0.0, (worksheet.lever_graphs_f1644||0), 0.002); end
  def test_lever_graphs_g1644; assert_in_delta(0.0, (worksheet.lever_graphs_g1644||0), 0.002); end
  def test_lever_graphs_h1644; assert_in_delta(0.0, (worksheet.lever_graphs_h1644||0), 0.002); end
  def test_lever_graphs_i1644; assert_in_delta(0.0, (worksheet.lever_graphs_i1644||0), 0.002); end
  def test_lever_graphs_d1645; assert_equal("2050: Level 2", worksheet.lever_graphs_d1645); end
  def test_lever_graphs_e1645; assert_in_delta(0.2, worksheet.lever_graphs_e1645, 0.002); end
  def test_lever_graphs_f1645; assert_in_delta(0.0, (worksheet.lever_graphs_f1645||0), 0.002); end
  def test_lever_graphs_g1645; assert_in_delta(0.425, worksheet.lever_graphs_g1645, 0.002); end
  def test_lever_graphs_h1645; assert_in_delta(0.425, worksheet.lever_graphs_h1645, 0.002); end
  def test_lever_graphs_i1645; assert_in_delta(0.0, (worksheet.lever_graphs_i1645||0), 0.002); end
  def test_lever_graphs_d1646; assert_equal("2050: Level 3", worksheet.lever_graphs_d1646); end
  def test_lever_graphs_e1646; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_e1646, 0.002); end
  def test_lever_graphs_f1646; assert_in_delta(0.5, worksheet.lever_graphs_f1646, 0.002); end
  def test_lever_graphs_g1646; assert_in_delta(0.6375, worksheet.lever_graphs_g1646, 0.002); end
  def test_lever_graphs_h1646; assert_in_delta(0.6375, worksheet.lever_graphs_h1646, 0.002); end
  def test_lever_graphs_i1646; assert_in_delta(0.0, (worksheet.lever_graphs_i1646||0), 0.002); end
  def test_lever_graphs_d1647; assert_equal("2050: Level 4", worksheet.lever_graphs_d1647); end
  def test_lever_graphs_e1647; assert_in_delta(0.8, worksheet.lever_graphs_e1647, 0.002); end
  def test_lever_graphs_f1647; assert_in_delta(0.62, worksheet.lever_graphs_f1647, 0.002); end
  def test_lever_graphs_g1647; assert_in_delta(0.85, worksheet.lever_graphs_g1647, 0.002); end
  def test_lever_graphs_h1647; assert_in_delta(0.85, worksheet.lever_graphs_h1647, 0.002); end
  def test_lever_graphs_i1647; assert_in_delta(0.3, worksheet.lever_graphs_i1647, 0.002); end
  def test_lever_graphs_c2457; assert_equal("1975", worksheet.lever_graphs_c2457); end
  def test_lever_graphs_d2457; assert_equal("1980", worksheet.lever_graphs_d2457); end
  def test_lever_graphs_e2457; assert_equal("1985", worksheet.lever_graphs_e2457); end
  def test_lever_graphs_f2457; assert_equal("1990", worksheet.lever_graphs_f2457); end
  def test_lever_graphs_g2457; assert_equal("1995", worksheet.lever_graphs_g2457); end
  def test_lever_graphs_h2457; assert_equal("2000", worksheet.lever_graphs_h2457); end
  def test_lever_graphs_i2457; assert_equal("2005", worksheet.lever_graphs_i2457); end
  def test_lever_graphs_j2457; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2457, 0.002); end
  def test_lever_graphs_k2457; assert_equal("2011", worksheet.lever_graphs_k2457); end
  def test_lever_graphs_l2457; assert_equal("2015", worksheet.lever_graphs_l2457); end
  def test_lever_graphs_m2457; assert_equal("2020", worksheet.lever_graphs_m2457); end
  def test_lever_graphs_n2457; assert_equal("2025", worksheet.lever_graphs_n2457); end
  def test_lever_graphs_o2457; assert_equal("2030", worksheet.lever_graphs_o2457); end
  def test_lever_graphs_p2457; assert_equal("2035", worksheet.lever_graphs_p2457); end
  def test_lever_graphs_q2457; assert_equal("2040", worksheet.lever_graphs_q2457); end
  def test_lever_graphs_r2457; assert_equal("2045", worksheet.lever_graphs_r2457); end
  def test_lever_graphs_s2457; assert_equal("2050", worksheet.lever_graphs_s2457); end
  def test_lever_graphs_b2458; assert_equal("Historic data", worksheet.lever_graphs_b2458); end
  def test_lever_graphs_b2459; assert_in_delta(1.0, worksheet.lever_graphs_b2459, 0.002); end
  def test_lever_graphs_k2459; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2459, 0.002); end
  def test_lever_graphs_l2459; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2459, 0.002); end
  def test_lever_graphs_m2459; assert_in_epsilon(4790.7692307692305, worksheet.lever_graphs_m2459, 0.002); end
  def test_lever_graphs_n2459; assert_in_epsilon(4652.307692307692, worksheet.lever_graphs_n2459, 0.002); end
  def test_lever_graphs_o2459; assert_in_epsilon(4513.846153846154, worksheet.lever_graphs_o2459, 0.002); end
  def test_lever_graphs_p2459; assert_in_epsilon(4375.384615384615, worksheet.lever_graphs_p2459, 0.002); end
  def test_lever_graphs_q2459; assert_in_epsilon(4236.923076923077, worksheet.lever_graphs_q2459, 0.002); end
  def test_lever_graphs_r2459; assert_in_epsilon(4098.461538461539, worksheet.lever_graphs_r2459, 0.002); end
  def test_lever_graphs_s2459; assert_in_epsilon(3960.0000000000005, worksheet.lever_graphs_s2459, 0.002); end
  def test_lever_graphs_b2460; assert_in_epsilon(2.0, worksheet.lever_graphs_b2460, 0.002); end
  def test_lever_graphs_k2460; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2460, 0.002); end
  def test_lever_graphs_l2460; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2460, 0.002); end
  def test_lever_graphs_m2460; assert_in_epsilon(4739.340659340659, worksheet.lever_graphs_m2460, 0.002); end
  def test_lever_graphs_n2460; assert_in_epsilon(4549.450549450549, worksheet.lever_graphs_n2460, 0.002); end
  def test_lever_graphs_o2460; assert_in_epsilon(4359.56043956044, worksheet.lever_graphs_o2460, 0.002); end
  def test_lever_graphs_p2460; assert_in_epsilon(4169.67032967033, worksheet.lever_graphs_p2460, 0.002); end
  def test_lever_graphs_q2460; assert_in_epsilon(3979.78021978022, worksheet.lever_graphs_q2460, 0.002); end
  def test_lever_graphs_r2460; assert_in_epsilon(3789.8901098901097, worksheet.lever_graphs_r2460, 0.002); end
  def test_lever_graphs_s2460; assert_in_epsilon(3600.0, worksheet.lever_graphs_s2460, 0.002); end
  def test_lever_graphs_b2461; assert_in_epsilon(3.0, worksheet.lever_graphs_b2461, 0.002); end
  def test_lever_graphs_k2461; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2461, 0.002); end
  def test_lever_graphs_l2461; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2461, 0.002); end
  def test_lever_graphs_m2461; assert_in_epsilon(4687.912087912087, worksheet.lever_graphs_m2461, 0.002); end
  def test_lever_graphs_n2461; assert_in_epsilon(4446.593406593407, worksheet.lever_graphs_n2461, 0.002); end
  def test_lever_graphs_o2461; assert_in_epsilon(4205.274725274725, worksheet.lever_graphs_o2461, 0.002); end
  def test_lever_graphs_p2461; assert_in_epsilon(3963.9560439560437, worksheet.lever_graphs_p2461, 0.002); end
  def test_lever_graphs_q2461; assert_in_epsilon(3722.6373626373625, worksheet.lever_graphs_q2461, 0.002); end
  def test_lever_graphs_r2461; assert_in_epsilon(3481.3186813186812, worksheet.lever_graphs_r2461, 0.002); end
  def test_lever_graphs_s2461; assert_in_epsilon(3240.0, worksheet.lever_graphs_s2461, 0.002); end
  def test_lever_graphs_b2462; assert_in_epsilon(4.0, worksheet.lever_graphs_b2462, 0.002); end
  def test_lever_graphs_k2462; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2462, 0.002); end
  def test_lever_graphs_l2462; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2462, 0.002); end
  def test_lever_graphs_m2462; assert_in_epsilon(4636.483516483517, worksheet.lever_graphs_m2462, 0.002); end
  def test_lever_graphs_n2462; assert_in_epsilon(4343.736263736263, worksheet.lever_graphs_n2462, 0.002); end
  def test_lever_graphs_o2462; assert_in_epsilon(4050.989010989011, worksheet.lever_graphs_o2462, 0.002); end
  def test_lever_graphs_p2462; assert_in_epsilon(3758.241758241758, worksheet.lever_graphs_p2462, 0.002); end
  def test_lever_graphs_q2462; assert_in_epsilon(3465.4945054945056, worksheet.lever_graphs_q2462, 0.002); end
  def test_lever_graphs_r2462; assert_in_epsilon(3172.7472527472523, worksheet.lever_graphs_r2462, 0.002); end
  def test_lever_graphs_s2462; assert_in_epsilon(2880.0, worksheet.lever_graphs_s2462, 0.002); end
  def test_lever_graphs_d2467; assert_equal("Title", worksheet.lever_graphs_d2467); end
  def test_lever_graphs_e2467; assert_equal("Global urban solid stoves used by people with access to electricity", worksheet.lever_graphs_e2467); end
  def test_lever_graphs_f2467; assert_equal("Global urban liquid stoves used by people with access to electricity", worksheet.lever_graphs_f2467); end
  def test_lever_graphs_g2467; assert_equal("Global urban gas stoves used by people with access to electricity", worksheet.lever_graphs_g2467); end
  def test_lever_graphs_h2467; assert_equal("Global urban electricity stoves used by people with access to electricity", worksheet.lever_graphs_h2467); end
  def test_lever_graphs_i2467; assert_equal("Global urban traditional biomass boiler used by people with access to electricity", worksheet.lever_graphs_i2467); end
  def test_lever_graphs_d2468; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2468, 0.002); end
  def test_lever_graphs_e2468; assert_in_delta(0.13, worksheet.lever_graphs_e2468, 0.002); end
  def test_lever_graphs_f2468; assert_in_delta(0.15, worksheet.lever_graphs_f2468, 0.002); end
  def test_lever_graphs_g2468; assert_in_delta(0.4, worksheet.lever_graphs_g2468, 0.002); end
  def test_lever_graphs_h2468; assert_in_delta(0.2, worksheet.lever_graphs_h2468, 0.002); end
  def test_lever_graphs_i2468; assert_in_delta(0.11999999999999994, worksheet.lever_graphs_i2468, 0.002); end
  def test_lever_graphs_d2469; assert_equal("2050: Level 1", worksheet.lever_graphs_d2469); end
  def test_lever_graphs_e2469; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_e2469, 0.002); end
  def test_lever_graphs_f2469; assert_in_delta(0.15, worksheet.lever_graphs_f2469, 0.002); end
  def test_lever_graphs_g2469; assert_in_delta(0.4, worksheet.lever_graphs_g2469, 0.002); end
  def test_lever_graphs_h2469; assert_in_delta(0.25, worksheet.lever_graphs_h2469, 0.002); end
  def test_lever_graphs_i2469; assert_in_delta(0.12, worksheet.lever_graphs_i2469, 0.002); end
  def test_lever_graphs_d2470; assert_equal("2050: Level 2", worksheet.lever_graphs_d2470); end
  def test_lever_graphs_e2470; assert_in_delta(0.010000000000000009, worksheet.lever_graphs_e2470, 0.002); end
  def test_lever_graphs_f2470; assert_in_delta(0.08, worksheet.lever_graphs_f2470, 0.002); end
  def test_lever_graphs_g2470; assert_in_delta(0.35, worksheet.lever_graphs_g2470, 0.002); end
  def test_lever_graphs_h2470; assert_in_delta(0.5, worksheet.lever_graphs_h2470, 0.002); end
  def test_lever_graphs_i2470; assert_in_delta(0.06, worksheet.lever_graphs_i2470, 0.002); end
  def test_lever_graphs_d2471; assert_equal("2050: Level 3", worksheet.lever_graphs_d2471); end
  def test_lever_graphs_e2471; assert_in_delta(0.0, (worksheet.lever_graphs_e2471||0), 0.002); end
  def test_lever_graphs_f2471; assert_in_delta(0.01, worksheet.lever_graphs_f2471, 0.002); end
  def test_lever_graphs_g2471; assert_in_delta(0.3, worksheet.lever_graphs_g2471, 0.002); end
  def test_lever_graphs_h2471; assert_in_delta(0.68, worksheet.lever_graphs_h2471, 0.002); end
  def test_lever_graphs_i2471; assert_in_delta(0.01, worksheet.lever_graphs_i2471, 0.002); end
  def test_lever_graphs_d2472; assert_equal("2050: Level 4", worksheet.lever_graphs_d2472); end
  def test_lever_graphs_e2472; assert_in_delta(0.0, (worksheet.lever_graphs_e2472||0), 0.002); end
  def test_lever_graphs_f2472; assert_in_delta(0.0, (worksheet.lever_graphs_f2472||0), 0.002); end
  def test_lever_graphs_g2472; assert_in_delta(0.25, worksheet.lever_graphs_g2472, 0.002); end
  def test_lever_graphs_h2472; assert_in_delta(0.75, worksheet.lever_graphs_h2472, 0.002); end
  def test_lever_graphs_i2472; assert_in_delta(0.0, (worksheet.lever_graphs_i2472||0), 0.002); end
  def test_lever_graphs_c2940; assert_equal("1975", worksheet.lever_graphs_c2940); end
  def test_lever_graphs_d2940; assert_equal("1980", worksheet.lever_graphs_d2940); end
  def test_lever_graphs_e2940; assert_equal("1985", worksheet.lever_graphs_e2940); end
  def test_lever_graphs_f2940; assert_equal("1990", worksheet.lever_graphs_f2940); end
  def test_lever_graphs_g2940; assert_equal("1995", worksheet.lever_graphs_g2940); end
  def test_lever_graphs_h2940; assert_equal("2000", worksheet.lever_graphs_h2940); end
  def test_lever_graphs_i2940; assert_equal("2005", worksheet.lever_graphs_i2940); end
  def test_lever_graphs_j2940; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2940, 0.002); end
  def test_lever_graphs_k2940; assert_equal("2011", worksheet.lever_graphs_k2940); end
  def test_lever_graphs_l2940; assert_equal("2015", worksheet.lever_graphs_l2940); end
  def test_lever_graphs_m2940; assert_equal("2020", worksheet.lever_graphs_m2940); end
  def test_lever_graphs_n2940; assert_equal("2025", worksheet.lever_graphs_n2940); end
  def test_lever_graphs_o2940; assert_equal("2030", worksheet.lever_graphs_o2940); end
  def test_lever_graphs_p2940; assert_equal("2035", worksheet.lever_graphs_p2940); end
  def test_lever_graphs_q2940; assert_equal("2040", worksheet.lever_graphs_q2940); end
  def test_lever_graphs_r2940; assert_equal("2045", worksheet.lever_graphs_r2940); end
  def test_lever_graphs_s2940; assert_equal("2050", worksheet.lever_graphs_s2940); end
  def test_lever_graphs_b2941; assert_equal("Historic data", worksheet.lever_graphs_b2941); end
  def test_lever_graphs_b2942; assert_in_delta(1.0, worksheet.lever_graphs_b2942, 0.002); end
  def test_lever_graphs_k2942; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2942, 0.002); end
  def test_lever_graphs_l2942; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2942, 0.002); end
  def test_lever_graphs_m2942; assert_in_delta(0.03213187568829684, worksheet.lever_graphs_m2942, 0.002); end
  def test_lever_graphs_n2942; assert_in_delta(0.03151582202368931, worksheet.lever_graphs_n2942, 0.002); end
  def test_lever_graphs_o2942; assert_in_delta(0.030899768359081793, worksheet.lever_graphs_o2942, 0.002); end
  def test_lever_graphs_p2942; assert_in_delta(0.03028371469447427, worksheet.lever_graphs_p2942, 0.002); end
  def test_lever_graphs_q2942; assert_in_delta(0.029667661029866746, worksheet.lever_graphs_q2942, 0.002); end
  def test_lever_graphs_r2942; assert_in_delta(0.029051607365259222, worksheet.lever_graphs_r2942, 0.002); end
  def test_lever_graphs_s2942; assert_in_delta(0.0284355537006517, worksheet.lever_graphs_s2942, 0.002); end
  def test_lever_graphs_b2943; assert_in_epsilon(2.0, worksheet.lever_graphs_b2943, 0.002); end
  def test_lever_graphs_k2943; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2943, 0.002); end
  def test_lever_graphs_l2943; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2943, 0.002); end
  def test_lever_graphs_m2943; assert_in_delta(0.033937307669290595, worksheet.lever_graphs_m2943, 0.002); end
  def test_lever_graphs_n2943; assert_in_delta(0.03512668598567683, worksheet.lever_graphs_n2943, 0.002); end
  def test_lever_graphs_o2943; assert_in_delta(0.036316064302063064, worksheet.lever_graphs_o2943, 0.002); end
  def test_lever_graphs_p2943; assert_in_delta(0.0375054426184493, worksheet.lever_graphs_p2943, 0.002); end
  def test_lever_graphs_q2943; assert_in_delta(0.03869482093483553, worksheet.lever_graphs_q2943, 0.002); end
  def test_lever_graphs_r2943; assert_in_delta(0.039884199251221775, worksheet.lever_graphs_r2943, 0.002); end
  def test_lever_graphs_s2943; assert_in_delta(0.04107357756760801, worksheet.lever_graphs_s2943, 0.002); end
  def test_lever_graphs_b2944; assert_in_epsilon(3.0, worksheet.lever_graphs_b2944, 0.002); end
  def test_lever_graphs_k2944; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2944, 0.002); end
  def test_lever_graphs_l2944; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2944, 0.002); end
  def test_lever_graphs_m2944; assert_in_delta(0.03529138165503592, worksheet.lever_graphs_m2944, 0.002); end
  def test_lever_graphs_n2944; assert_in_delta(0.03783483395716747, worksheet.lever_graphs_n2944, 0.002); end
  def test_lever_graphs_o2944; assert_in_delta(0.04037828625929902, worksheet.lever_graphs_o2944, 0.002); end
  def test_lever_graphs_p2944; assert_in_delta(0.04292173856143058, worksheet.lever_graphs_p2944, 0.002); end
  def test_lever_graphs_q2944; assert_in_delta(0.045465190863562134, worksheet.lever_graphs_q2944, 0.002); end
  def test_lever_graphs_r2944; assert_in_delta(0.04800864316569369, worksheet.lever_graphs_r2944, 0.002); end
  def test_lever_graphs_s2944; assert_in_delta(0.05055209546782524, worksheet.lever_graphs_s2944, 0.002); end
  def test_lever_graphs_b2945; assert_in_epsilon(4.0, worksheet.lever_graphs_b2945, 0.002); end
  def test_lever_graphs_k2945; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2945, 0.002); end
  def test_lever_graphs_l2945; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2945, 0.002); end
  def test_lever_graphs_m2945; assert_in_delta(0.03709681363602968, worksheet.lever_graphs_m2945, 0.002); end
  def test_lever_graphs_n2945; assert_in_delta(0.041445697919154985, worksheet.lever_graphs_n2945, 0.002); end
  def test_lever_graphs_o2945; assert_in_delta(0.0457945822022803, worksheet.lever_graphs_o2945, 0.002); end
  def test_lever_graphs_p2945; assert_in_delta(0.050143466485405616, worksheet.lever_graphs_p2945, 0.002); end
  def test_lever_graphs_q2945; assert_in_delta(0.05449235076853092, worksheet.lever_graphs_q2945, 0.002); end
  def test_lever_graphs_r2945; assert_in_delta(0.05884123505165624, worksheet.lever_graphs_r2945, 0.002); end
  def test_lever_graphs_s2945; assert_in_delta(0.06319011933478155, worksheet.lever_graphs_s2945, 0.002); end
  def test_lever_graphs_c3020; assert_equal("1975", worksheet.lever_graphs_c3020); end
  def test_lever_graphs_d3020; assert_equal("1980", worksheet.lever_graphs_d3020); end
  def test_lever_graphs_e3020; assert_equal("1985", worksheet.lever_graphs_e3020); end
  def test_lever_graphs_f3020; assert_equal("1990", worksheet.lever_graphs_f3020); end
  def test_lever_graphs_g3020; assert_equal("1995", worksheet.lever_graphs_g3020); end
  def test_lever_graphs_h3020; assert_equal("2000", worksheet.lever_graphs_h3020); end
  def test_lever_graphs_i3020; assert_equal("2005", worksheet.lever_graphs_i3020); end
  def test_lever_graphs_j3020; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3020, 0.002); end
  def test_lever_graphs_k3020; assert_equal("2011", worksheet.lever_graphs_k3020); end
  def test_lever_graphs_l3020; assert_equal("2015", worksheet.lever_graphs_l3020); end
  def test_lever_graphs_m3020; assert_equal("2020", worksheet.lever_graphs_m3020); end
  def test_lever_graphs_n3020; assert_equal("2025", worksheet.lever_graphs_n3020); end
  def test_lever_graphs_o3020; assert_equal("2030", worksheet.lever_graphs_o3020); end
  def test_lever_graphs_p3020; assert_equal("2035", worksheet.lever_graphs_p3020); end
  def test_lever_graphs_q3020; assert_equal("2040", worksheet.lever_graphs_q3020); end
  def test_lever_graphs_r3020; assert_equal("2045", worksheet.lever_graphs_r3020); end
  def test_lever_graphs_s3020; assert_equal("2050", worksheet.lever_graphs_s3020); end
  def test_lever_graphs_b3021; assert_equal("Historic data", worksheet.lever_graphs_b3021); end
  def test_lever_graphs_b3022; assert_in_delta(1.0, worksheet.lever_graphs_b3022, 0.002); end
  def test_lever_graphs_k3022; assert_in_delta(0.05, worksheet.lever_graphs_k3022, 0.002); end
  def test_lever_graphs_l3022; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3022, 0.002); end
  def test_lever_graphs_m3022; assert_in_delta(0.0507967032967033, worksheet.lever_graphs_m3022, 0.002); end
  def test_lever_graphs_n3022; assert_in_delta(0.05108058608058609, worksheet.lever_graphs_n3022, 0.002); end
  def test_lever_graphs_o3022; assert_in_delta(0.05136446886446887, worksheet.lever_graphs_o3022, 0.002); end
  def test_lever_graphs_p3022; assert_in_delta(0.05164835164835165, worksheet.lever_graphs_p3022, 0.002); end
  def test_lever_graphs_q3022; assert_in_delta(0.051932234432234436, worksheet.lever_graphs_q3022, 0.002); end
  def test_lever_graphs_r3022; assert_in_delta(0.052216117216117214, worksheet.lever_graphs_r3022, 0.002); end
  def test_lever_graphs_s3022; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s3022, 0.002); end
  def test_lever_graphs_b3023; assert_in_epsilon(2.0, worksheet.lever_graphs_b3023, 0.002); end
  def test_lever_graphs_k3023; assert_in_delta(0.05, worksheet.lever_graphs_k3023, 0.002); end
  def test_lever_graphs_l3023; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3023, 0.002); end
  def test_lever_graphs_m3023; assert_in_delta(0.05115384615384616, worksheet.lever_graphs_m3023, 0.002); end
  def test_lever_graphs_n3023; assert_in_delta(0.05179487179487181, worksheet.lever_graphs_n3023, 0.002); end
  def test_lever_graphs_o3023; assert_in_delta(0.05243589743589744, worksheet.lever_graphs_o3023, 0.002); end
  def test_lever_graphs_p3023; assert_in_delta(0.05307692307692308, worksheet.lever_graphs_p3023, 0.002); end
  def test_lever_graphs_q3023; assert_in_delta(0.05371794871794873, worksheet.lever_graphs_q3023, 0.002); end
  def test_lever_graphs_r3023; assert_in_delta(0.05435897435897436, worksheet.lever_graphs_r3023, 0.002); end
  def test_lever_graphs_s3023; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s3023, 0.002); end
  def test_lever_graphs_b3024; assert_in_epsilon(3.0, worksheet.lever_graphs_b3024, 0.002); end
  def test_lever_graphs_k3024; assert_in_delta(0.05, worksheet.lever_graphs_k3024, 0.002); end
  def test_lever_graphs_l3024; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3024, 0.002); end
  def test_lever_graphs_m3024; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_m3024, 0.002); end
  def test_lever_graphs_n3024; assert_in_delta(0.05322344322344323, worksheet.lever_graphs_n3024, 0.002); end
  def test_lever_graphs_o3024; assert_in_delta(0.05457875457875458, worksheet.lever_graphs_o3024, 0.002); end
  def test_lever_graphs_p3024; assert_in_delta(0.05593406593406593, worksheet.lever_graphs_p3024, 0.002); end
  def test_lever_graphs_q3024; assert_in_delta(0.05728937728937729, worksheet.lever_graphs_q3024, 0.002); end
  def test_lever_graphs_r3024; assert_in_delta(0.058644688644688636, worksheet.lever_graphs_r3024, 0.002); end
  def test_lever_graphs_s3024; assert_in_delta(0.06, worksheet.lever_graphs_s3024, 0.002); end
  def test_lever_graphs_b3025; assert_in_epsilon(4.0, worksheet.lever_graphs_b3025, 0.002); end
  def test_lever_graphs_k3025; assert_in_delta(0.05, worksheet.lever_graphs_k3025, 0.002); end
  def test_lever_graphs_l3025; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3025, 0.002); end
  def test_lever_graphs_m3025; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_m3025, 0.002); end
  def test_lever_graphs_n3025; assert_in_delta(0.05608058608058609, worksheet.lever_graphs_n3025, 0.002); end
  def test_lever_graphs_o3025; assert_in_delta(0.05886446886446886, worksheet.lever_graphs_o3025, 0.002); end
  def test_lever_graphs_p3025; assert_in_delta(0.06164835164835164, worksheet.lever_graphs_p3025, 0.002); end
  def test_lever_graphs_q3025; assert_in_delta(0.06443223443223443, worksheet.lever_graphs_q3025, 0.002); end
  def test_lever_graphs_r3025; assert_in_delta(0.06721611721611721, worksheet.lever_graphs_r3025, 0.002); end
  def test_lever_graphs_s3025; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s3025, 0.002); end
  def test_lever_graphs_c3030; assert_equal("1975", worksheet.lever_graphs_c3030); end
  def test_lever_graphs_d3030; assert_equal("1980", worksheet.lever_graphs_d3030); end
  def test_lever_graphs_e3030; assert_equal("1985", worksheet.lever_graphs_e3030); end
  def test_lever_graphs_f3030; assert_equal("1990", worksheet.lever_graphs_f3030); end
  def test_lever_graphs_g3030; assert_equal("1995", worksheet.lever_graphs_g3030); end
  def test_lever_graphs_h3030; assert_equal("2000", worksheet.lever_graphs_h3030); end
  def test_lever_graphs_i3030; assert_equal("2005", worksheet.lever_graphs_i3030); end
  def test_lever_graphs_j3030; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3030, 0.002); end
  def test_lever_graphs_k3030; assert_equal("2011", worksheet.lever_graphs_k3030); end
  def test_lever_graphs_l3030; assert_equal("2015", worksheet.lever_graphs_l3030); end
  def test_lever_graphs_m3030; assert_equal("2020", worksheet.lever_graphs_m3030); end
  def test_lever_graphs_n3030; assert_equal("2025", worksheet.lever_graphs_n3030); end
  def test_lever_graphs_o3030; assert_equal("2030", worksheet.lever_graphs_o3030); end
  def test_lever_graphs_p3030; assert_equal("2035", worksheet.lever_graphs_p3030); end
  def test_lever_graphs_q3030; assert_equal("2040", worksheet.lever_graphs_q3030); end
  def test_lever_graphs_r3030; assert_equal("2045", worksheet.lever_graphs_r3030); end
  def test_lever_graphs_s3030; assert_equal("2050", worksheet.lever_graphs_s3030); end
  def test_lever_graphs_b3031; assert_equal("Historic data", worksheet.lever_graphs_b3031); end
  def test_lever_graphs_b3032; assert_in_delta(1.0, worksheet.lever_graphs_b3032, 0.002); end
  def test_lever_graphs_k3032; assert_in_delta(0.078, worksheet.lever_graphs_k3032, 0.002); end
  def test_lever_graphs_l3032; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l3032, 0.002); end
  def test_lever_graphs_m3032; assert_in_delta(0.07973626373626375, worksheet.lever_graphs_m3032, 0.002); end
  def test_lever_graphs_n3032; assert_in_delta(0.08044688644688647, worksheet.lever_graphs_n3032, 0.002); end
  def test_lever_graphs_o3032; assert_in_delta(0.08115750915750916, worksheet.lever_graphs_o3032, 0.002); end
  def test_lever_graphs_p3032; assert_in_delta(0.08186813186813188, worksheet.lever_graphs_p3032, 0.002); end
  def test_lever_graphs_q3032; assert_in_delta(0.08257875457875459, worksheet.lever_graphs_q3032, 0.002); end
  def test_lever_graphs_r3032; assert_in_delta(0.08328937728937728, worksheet.lever_graphs_r3032, 0.002); end
  def test_lever_graphs_s3032; assert_in_delta(0.084, worksheet.lever_graphs_s3032, 0.002); end
  def test_lever_graphs_b3033; assert_in_epsilon(2.0, worksheet.lever_graphs_b3033, 0.002); end
  def test_lever_graphs_k3033; assert_in_delta(0.078, worksheet.lever_graphs_k3033, 0.002); end
  def test_lever_graphs_l3033; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l3033, 0.002); end
  def test_lever_graphs_m3033; assert_in_delta(0.08030769230769232, worksheet.lever_graphs_m3033, 0.002); end
  def test_lever_graphs_n3033; assert_in_delta(0.08158974358974361, worksheet.lever_graphs_n3033, 0.002); end
  def test_lever_graphs_o3033; assert_in_delta(0.08287179487179488, worksheet.lever_graphs_o3033, 0.002); end
  def test_lever_graphs_p3033; assert_in_delta(0.08415384615384616, worksheet.lever_graphs_p3033, 0.002); end
  def test_lever_graphs_q3033; assert_in_delta(0.08543589743589744, worksheet.lever_graphs_q3033, 0.002); end
  def test_lever_graphs_r3033; assert_in_delta(0.08671794871794872, worksheet.lever_graphs_r3033, 0.002); end
  def test_lever_graphs_s3033; assert_in_delta(0.08800000000000001, worksheet.lever_graphs_s3033, 0.002); end
  def test_lever_graphs_b3034; assert_in_epsilon(3.0, worksheet.lever_graphs_b3034, 0.002); end
  def test_lever_graphs_k3034; assert_in_delta(0.078, worksheet.lever_graphs_k3034, 0.002); end
  def test_lever_graphs_l3034; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l3034, 0.002); end
  def test_lever_graphs_m3034; assert_in_delta(0.08087912087912089, worksheet.lever_graphs_m3034, 0.002); end
  def test_lever_graphs_n3034; assert_in_delta(0.08273260073260075, worksheet.lever_graphs_n3034, 0.002); end
  def test_lever_graphs_o3034; assert_in_delta(0.08458608058608058, worksheet.lever_graphs_o3034, 0.002); end
  def test_lever_graphs_p3034; assert_in_delta(0.08643956043956044, worksheet.lever_graphs_p3034, 0.002); end
  def test_lever_graphs_q3034; assert_in_delta(0.08829304029304029, worksheet.lever_graphs_q3034, 0.002); end
  def test_lever_graphs_r3034; assert_in_delta(0.09014652014652014, worksheet.lever_graphs_r3034, 0.002); end
  def test_lever_graphs_s3034; assert_in_delta(0.092, worksheet.lever_graphs_s3034, 0.002); end
  def test_lever_graphs_b3035; assert_in_epsilon(4.0, worksheet.lever_graphs_b3035, 0.002); end
  def test_lever_graphs_k3035; assert_in_delta(0.078, worksheet.lever_graphs_k3035, 0.002); end
  def test_lever_graphs_l3035; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l3035, 0.002); end
  def test_lever_graphs_m3035; assert_in_delta(0.08145054945054947, worksheet.lever_graphs_m3035, 0.002); end
  def test_lever_graphs_n3035; assert_in_delta(0.08387545787545789, worksheet.lever_graphs_n3035, 0.002); end
  def test_lever_graphs_o3035; assert_in_delta(0.0863003663003663, worksheet.lever_graphs_o3035, 0.002); end
  def test_lever_graphs_p3035; assert_in_delta(0.08872527472527472, worksheet.lever_graphs_p3035, 0.002); end
  def test_lever_graphs_q3035; assert_in_delta(0.09115018315018315, worksheet.lever_graphs_q3035, 0.002); end
  def test_lever_graphs_r3035; assert_in_delta(0.09357509157509157, worksheet.lever_graphs_r3035, 0.002); end
  def test_lever_graphs_s3035; assert_in_delta(0.096, worksheet.lever_graphs_s3035, 0.002); end
  def test_lever_graphs_c3040; assert_equal("1975", worksheet.lever_graphs_c3040); end
  def test_lever_graphs_d3040; assert_equal("1980", worksheet.lever_graphs_d3040); end
  def test_lever_graphs_e3040; assert_equal("1985", worksheet.lever_graphs_e3040); end
  def test_lever_graphs_f3040; assert_equal("1990", worksheet.lever_graphs_f3040); end
  def test_lever_graphs_g3040; assert_equal("1995", worksheet.lever_graphs_g3040); end
  def test_lever_graphs_h3040; assert_equal("2000", worksheet.lever_graphs_h3040); end
  def test_lever_graphs_i3040; assert_equal("2005", worksheet.lever_graphs_i3040); end
  def test_lever_graphs_j3040; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3040, 0.002); end
  def test_lever_graphs_k3040; assert_equal("2011", worksheet.lever_graphs_k3040); end
  def test_lever_graphs_l3040; assert_equal("2015", worksheet.lever_graphs_l3040); end
  def test_lever_graphs_m3040; assert_equal("2020", worksheet.lever_graphs_m3040); end
  def test_lever_graphs_n3040; assert_equal("2025", worksheet.lever_graphs_n3040); end
  def test_lever_graphs_o3040; assert_equal("2030", worksheet.lever_graphs_o3040); end
  def test_lever_graphs_p3040; assert_equal("2035", worksheet.lever_graphs_p3040); end
  def test_lever_graphs_q3040; assert_equal("2040", worksheet.lever_graphs_q3040); end
  def test_lever_graphs_r3040; assert_equal("2045", worksheet.lever_graphs_r3040); end
  def test_lever_graphs_s3040; assert_equal("2050", worksheet.lever_graphs_s3040); end
  def test_lever_graphs_b3041; assert_equal("Historic data", worksheet.lever_graphs_b3041); end
  def test_lever_graphs_b3042; assert_in_delta(1.0, worksheet.lever_graphs_b3042, 0.002); end
  def test_lever_graphs_k3042; assert_in_delta(0.05, worksheet.lever_graphs_k3042, 0.002); end
  def test_lever_graphs_l3042; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3042, 0.002); end
  def test_lever_graphs_m3042; assert_in_delta(0.0507967032967033, worksheet.lever_graphs_m3042, 0.002); end
  def test_lever_graphs_n3042; assert_in_delta(0.05108058608058609, worksheet.lever_graphs_n3042, 0.002); end
  def test_lever_graphs_o3042; assert_in_delta(0.05136446886446887, worksheet.lever_graphs_o3042, 0.002); end
  def test_lever_graphs_p3042; assert_in_delta(0.05164835164835165, worksheet.lever_graphs_p3042, 0.002); end
  def test_lever_graphs_q3042; assert_in_delta(0.051932234432234436, worksheet.lever_graphs_q3042, 0.002); end
  def test_lever_graphs_r3042; assert_in_delta(0.052216117216117214, worksheet.lever_graphs_r3042, 0.002); end
  def test_lever_graphs_s3042; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s3042, 0.002); end
  def test_lever_graphs_b3043; assert_in_epsilon(2.0, worksheet.lever_graphs_b3043, 0.002); end
  def test_lever_graphs_k3043; assert_in_delta(0.05, worksheet.lever_graphs_k3043, 0.002); end
  def test_lever_graphs_l3043; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3043, 0.002); end
  def test_lever_graphs_m3043; assert_in_delta(0.05115384615384616, worksheet.lever_graphs_m3043, 0.002); end
  def test_lever_graphs_n3043; assert_in_delta(0.05179487179487181, worksheet.lever_graphs_n3043, 0.002); end
  def test_lever_graphs_o3043; assert_in_delta(0.05243589743589744, worksheet.lever_graphs_o3043, 0.002); end
  def test_lever_graphs_p3043; assert_in_delta(0.05307692307692308, worksheet.lever_graphs_p3043, 0.002); end
  def test_lever_graphs_q3043; assert_in_delta(0.05371794871794873, worksheet.lever_graphs_q3043, 0.002); end
  def test_lever_graphs_r3043; assert_in_delta(0.05435897435897436, worksheet.lever_graphs_r3043, 0.002); end
  def test_lever_graphs_s3043; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s3043, 0.002); end
  def test_lever_graphs_b3044; assert_in_epsilon(3.0, worksheet.lever_graphs_b3044, 0.002); end
  def test_lever_graphs_k3044; assert_in_delta(0.05, worksheet.lever_graphs_k3044, 0.002); end
  def test_lever_graphs_l3044; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3044, 0.002); end
  def test_lever_graphs_m3044; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_m3044, 0.002); end
  def test_lever_graphs_n3044; assert_in_delta(0.05322344322344323, worksheet.lever_graphs_n3044, 0.002); end
  def test_lever_graphs_o3044; assert_in_delta(0.05457875457875458, worksheet.lever_graphs_o3044, 0.002); end
  def test_lever_graphs_p3044; assert_in_delta(0.05593406593406593, worksheet.lever_graphs_p3044, 0.002); end
  def test_lever_graphs_q3044; assert_in_delta(0.05728937728937729, worksheet.lever_graphs_q3044, 0.002); end
  def test_lever_graphs_r3044; assert_in_delta(0.058644688644688636, worksheet.lever_graphs_r3044, 0.002); end
  def test_lever_graphs_s3044; assert_in_delta(0.06, worksheet.lever_graphs_s3044, 0.002); end
  def test_lever_graphs_b3045; assert_in_epsilon(4.0, worksheet.lever_graphs_b3045, 0.002); end
  def test_lever_graphs_k3045; assert_in_delta(0.05, worksheet.lever_graphs_k3045, 0.002); end
  def test_lever_graphs_l3045; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l3045, 0.002); end
  def test_lever_graphs_m3045; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_m3045, 0.002); end
  def test_lever_graphs_n3045; assert_in_delta(0.05608058608058609, worksheet.lever_graphs_n3045, 0.002); end
  def test_lever_graphs_o3045; assert_in_delta(0.05886446886446886, worksheet.lever_graphs_o3045, 0.002); end
  def test_lever_graphs_p3045; assert_in_delta(0.06164835164835164, worksheet.lever_graphs_p3045, 0.002); end
  def test_lever_graphs_q3045; assert_in_delta(0.06443223443223443, worksheet.lever_graphs_q3045, 0.002); end
  def test_lever_graphs_r3045; assert_in_delta(0.06721611721611721, worksheet.lever_graphs_r3045, 0.002); end
  def test_lever_graphs_s3045; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s3045, 0.002); end
  def test_lever_graphs_c3132; assert_equal("1975", worksheet.lever_graphs_c3132); end
  def test_lever_graphs_d3132; assert_equal("1980", worksheet.lever_graphs_d3132); end
  def test_lever_graphs_e3132; assert_equal("1985", worksheet.lever_graphs_e3132); end
  def test_lever_graphs_f3132; assert_equal("1990", worksheet.lever_graphs_f3132); end
  def test_lever_graphs_g3132; assert_equal("1995", worksheet.lever_graphs_g3132); end
  def test_lever_graphs_h3132; assert_equal("2000", worksheet.lever_graphs_h3132); end
  def test_lever_graphs_i3132; assert_equal("2005", worksheet.lever_graphs_i3132); end
  def test_lever_graphs_j3132; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3132, 0.002); end
  def test_lever_graphs_k3132; assert_equal("2011", worksheet.lever_graphs_k3132); end
  def test_lever_graphs_l3132; assert_equal("2015", worksheet.lever_graphs_l3132); end
  def test_lever_graphs_m3132; assert_equal("2020", worksheet.lever_graphs_m3132); end
  def test_lever_graphs_n3132; assert_equal("2025", worksheet.lever_graphs_n3132); end
  def test_lever_graphs_o3132; assert_equal("2030", worksheet.lever_graphs_o3132); end
  def test_lever_graphs_p3132; assert_equal("2035", worksheet.lever_graphs_p3132); end
  def test_lever_graphs_q3132; assert_equal("2040", worksheet.lever_graphs_q3132); end
  def test_lever_graphs_r3132; assert_equal("2045", worksheet.lever_graphs_r3132); end
  def test_lever_graphs_s3132; assert_equal("2050", worksheet.lever_graphs_s3132); end
  def test_lever_graphs_b3133; assert_equal("Historic data", worksheet.lever_graphs_b3133); end
  def test_lever_graphs_b3134; assert_in_delta(1.0, worksheet.lever_graphs_b3134, 0.002); end
  def test_lever_graphs_k3134; assert_in_delta(1.0, worksheet.lever_graphs_k3134, 0.002); end
  def test_lever_graphs_l3134; assert_in_delta(1.0, worksheet.lever_graphs_l3134, 0.002); end
  def test_lever_graphs_m3134; assert_in_delta(1.0, worksheet.lever_graphs_m3134, 0.002); end
  def test_lever_graphs_n3134; assert_in_delta(1.0, worksheet.lever_graphs_n3134, 0.002); end
  def test_lever_graphs_o3134; assert_in_delta(1.0, worksheet.lever_graphs_o3134, 0.002); end
  def test_lever_graphs_p3134; assert_in_delta(1.0, worksheet.lever_graphs_p3134, 0.002); end
  def test_lever_graphs_q3134; assert_in_delta(1.0, worksheet.lever_graphs_q3134, 0.002); end
  def test_lever_graphs_r3134; assert_in_delta(1.0, worksheet.lever_graphs_r3134, 0.002); end
  def test_lever_graphs_s3134; assert_in_delta(1.0, worksheet.lever_graphs_s3134, 0.002); end
  def test_lever_graphs_b3135; assert_in_epsilon(2.0, worksheet.lever_graphs_b3135, 0.002); end
  def test_lever_graphs_k3135; assert_in_delta(1.0, worksheet.lever_graphs_k3135, 0.002); end
  def test_lever_graphs_l3135; assert_in_delta(1.0, worksheet.lever_graphs_l3135, 0.002); end
  def test_lever_graphs_m3135; assert_in_delta(1.0, worksheet.lever_graphs_m3135, 0.002); end
  def test_lever_graphs_n3135; assert_in_delta(1.0, worksheet.lever_graphs_n3135, 0.002); end
  def test_lever_graphs_o3135; assert_in_delta(1.0, worksheet.lever_graphs_o3135, 0.002); end
  def test_lever_graphs_p3135; assert_in_delta(1.0, worksheet.lever_graphs_p3135, 0.002); end
  def test_lever_graphs_q3135; assert_in_delta(1.0, worksheet.lever_graphs_q3135, 0.002); end
  def test_lever_graphs_r3135; assert_in_delta(1.0, worksheet.lever_graphs_r3135, 0.002); end
  def test_lever_graphs_s3135; assert_in_delta(1.0, worksheet.lever_graphs_s3135, 0.002); end
  def test_lever_graphs_b3136; assert_in_epsilon(3.0, worksheet.lever_graphs_b3136, 0.002); end
  def test_lever_graphs_k3136; assert_in_delta(1.0, worksheet.lever_graphs_k3136, 0.002); end
  def test_lever_graphs_l3136; assert_in_delta(1.0, worksheet.lever_graphs_l3136, 0.002); end
  def test_lever_graphs_m3136; assert_in_delta(1.0, worksheet.lever_graphs_m3136, 0.002); end
  def test_lever_graphs_n3136; assert_in_delta(1.0, worksheet.lever_graphs_n3136, 0.002); end
  def test_lever_graphs_o3136; assert_in_delta(1.0, worksheet.lever_graphs_o3136, 0.002); end
  def test_lever_graphs_p3136; assert_in_delta(1.0, worksheet.lever_graphs_p3136, 0.002); end
  def test_lever_graphs_q3136; assert_in_delta(1.0, worksheet.lever_graphs_q3136, 0.002); end
  def test_lever_graphs_r3136; assert_in_delta(1.0, worksheet.lever_graphs_r3136, 0.002); end
  def test_lever_graphs_s3136; assert_in_delta(1.0, worksheet.lever_graphs_s3136, 0.002); end
  def test_lever_graphs_b3137; assert_in_epsilon(4.0, worksheet.lever_graphs_b3137, 0.002); end
  def test_lever_graphs_k3137; assert_in_delta(1.0, worksheet.lever_graphs_k3137, 0.002); end
  def test_lever_graphs_l3137; assert_in_delta(1.0, worksheet.lever_graphs_l3137, 0.002); end
  def test_lever_graphs_m3137; assert_in_delta(1.0, worksheet.lever_graphs_m3137, 0.002); end
  def test_lever_graphs_n3137; assert_in_delta(1.0, worksheet.lever_graphs_n3137, 0.002); end
  def test_lever_graphs_o3137; assert_in_delta(1.0, worksheet.lever_graphs_o3137, 0.002); end
  def test_lever_graphs_p3137; assert_in_delta(1.0, worksheet.lever_graphs_p3137, 0.002); end
  def test_lever_graphs_q3137; assert_in_delta(1.0, worksheet.lever_graphs_q3137, 0.002); end
  def test_lever_graphs_r3137; assert_in_delta(1.0, worksheet.lever_graphs_r3137, 0.002); end
  def test_lever_graphs_s3137; assert_in_delta(1.0, worksheet.lever_graphs_s3137, 0.002); end
  def test_lever_graphs_d3153; assert_equal("Title", worksheet.lever_graphs_d3153); end
  def test_lever_graphs_e3153; assert_equal("Food crops", worksheet.lever_graphs_e3153); end
  def test_lever_graphs_f3153; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3153); end
  def test_lever_graphs_g3153; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3153); end
  def test_lever_graphs_h3153; assert_equal("Pigs", worksheet.lever_graphs_h3153); end
  def test_lever_graphs_i3153; assert_equal("Sheep and goats", worksheet.lever_graphs_i3153); end
  def test_lever_graphs_j3153; assert_equal("Other animals", worksheet.lever_graphs_j3153); end
  def test_lever_graphs_k3153; assert_equal("Eggs", worksheet.lever_graphs_k3153); end
  def test_lever_graphs_l3153; assert_equal("Milk products", worksheet.lever_graphs_l3153); end
  def test_lever_graphs_d3154; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3154, 0.002); end
  def test_lever_graphs_e3154; assert_in_delta(0.24, worksheet.lever_graphs_e3154, 0.002); end
  def test_lever_graphs_f3154; assert_in_delta(0.19, worksheet.lever_graphs_f3154, 0.002); end
  def test_lever_graphs_g3154; assert_in_delta(0.19, worksheet.lever_graphs_g3154, 0.002); end
  def test_lever_graphs_h3154; assert_in_delta(0.19, worksheet.lever_graphs_h3154, 0.002); end
  def test_lever_graphs_i3154; assert_in_delta(0.19, worksheet.lever_graphs_i3154, 0.002); end
  def test_lever_graphs_j3154; assert_in_delta(0.19, worksheet.lever_graphs_j3154, 0.002); end
  def test_lever_graphs_k3154; assert_in_delta(0.1, worksheet.lever_graphs_k3154, 0.002); end
  def test_lever_graphs_l3154; assert_in_delta(0.18, worksheet.lever_graphs_l3154, 0.002); end
  def test_lever_graphs_d3155; assert_equal("2050: Level 1", worksheet.lever_graphs_d3155); end
  def test_lever_graphs_e3155; assert_in_delta(0.24, worksheet.lever_graphs_e3155, 0.002); end
  def test_lever_graphs_f3155; assert_in_delta(0.19, worksheet.lever_graphs_f3155, 0.002); end
  def test_lever_graphs_g3155; assert_in_delta(0.19, worksheet.lever_graphs_g3155, 0.002); end
  def test_lever_graphs_h3155; assert_in_delta(0.19, worksheet.lever_graphs_h3155, 0.002); end
  def test_lever_graphs_i3155; assert_in_delta(0.19, worksheet.lever_graphs_i3155, 0.002); end
  def test_lever_graphs_j3155; assert_in_delta(0.19, worksheet.lever_graphs_j3155, 0.002); end
  def test_lever_graphs_k3155; assert_in_delta(0.1, worksheet.lever_graphs_k3155, 0.002); end
  def test_lever_graphs_l3155; assert_in_delta(0.18, worksheet.lever_graphs_l3155, 0.002); end
  def test_lever_graphs_d3156; assert_equal("2050: Level 2", worksheet.lever_graphs_d3156); end
  def test_lever_graphs_e3156; assert_in_delta(0.2, worksheet.lever_graphs_e3156, 0.002); end
  def test_lever_graphs_f3156; assert_in_delta(0.15, worksheet.lever_graphs_f3156, 0.002); end
  def test_lever_graphs_g3156; assert_in_delta(0.15, worksheet.lever_graphs_g3156, 0.002); end
  def test_lever_graphs_h3156; assert_in_delta(0.15, worksheet.lever_graphs_h3156, 0.002); end
  def test_lever_graphs_i3156; assert_in_delta(0.15, worksheet.lever_graphs_i3156, 0.002); end
  def test_lever_graphs_j3156; assert_in_delta(0.15, worksheet.lever_graphs_j3156, 0.002); end
  def test_lever_graphs_k3156; assert_in_delta(0.08, worksheet.lever_graphs_k3156, 0.002); end
  def test_lever_graphs_l3156; assert_in_delta(0.15, worksheet.lever_graphs_l3156, 0.002); end
  def test_lever_graphs_d3157; assert_equal("2050: Level 3", worksheet.lever_graphs_d3157); end
  def test_lever_graphs_e3157; assert_in_delta(0.16, worksheet.lever_graphs_e3157, 0.002); end
  def test_lever_graphs_f3157; assert_in_delta(0.1, worksheet.lever_graphs_f3157, 0.002); end
  def test_lever_graphs_g3157; assert_in_delta(0.1, worksheet.lever_graphs_g3157, 0.002); end
  def test_lever_graphs_h3157; assert_in_delta(0.1, worksheet.lever_graphs_h3157, 0.002); end
  def test_lever_graphs_i3157; assert_in_delta(0.1, worksheet.lever_graphs_i3157, 0.002); end
  def test_lever_graphs_j3157; assert_in_delta(0.1, worksheet.lever_graphs_j3157, 0.002); end
  def test_lever_graphs_k3157; assert_in_delta(0.06, worksheet.lever_graphs_k3157, 0.002); end
  def test_lever_graphs_l3157; assert_in_delta(0.1, worksheet.lever_graphs_l3157, 0.002); end
  def test_lever_graphs_d3158; assert_equal("2050: Level 4", worksheet.lever_graphs_d3158); end
  def test_lever_graphs_e3158; assert_in_delta(0.1, worksheet.lever_graphs_e3158, 0.002); end
  def test_lever_graphs_f3158; assert_in_delta(0.05, worksheet.lever_graphs_f3158, 0.002); end
  def test_lever_graphs_g3158; assert_in_delta(0.05, worksheet.lever_graphs_g3158, 0.002); end
  def test_lever_graphs_h3158; assert_in_delta(0.05, worksheet.lever_graphs_h3158, 0.002); end
  def test_lever_graphs_i3158; assert_in_delta(0.05, worksheet.lever_graphs_i3158, 0.002); end
  def test_lever_graphs_j3158; assert_in_delta(0.05, worksheet.lever_graphs_j3158, 0.002); end
  def test_lever_graphs_k3158; assert_in_delta(0.05, worksheet.lever_graphs_k3158, 0.002); end
  def test_lever_graphs_l3158; assert_in_delta(0.05, worksheet.lever_graphs_l3158, 0.002); end
  def test_lever_graphs_c1408; assert_equal("1975", worksheet.lever_graphs_c1408); end
  def test_lever_graphs_d1408; assert_equal("1980", worksheet.lever_graphs_d1408); end
  def test_lever_graphs_e1408; assert_equal("1985", worksheet.lever_graphs_e1408); end
  def test_lever_graphs_f1408; assert_equal("1990", worksheet.lever_graphs_f1408); end
  def test_lever_graphs_g1408; assert_equal("1995", worksheet.lever_graphs_g1408); end
  def test_lever_graphs_h1408; assert_equal("2000", worksheet.lever_graphs_h1408); end
  def test_lever_graphs_i1408; assert_equal("2005", worksheet.lever_graphs_i1408); end
  def test_lever_graphs_j1408; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1408, 0.002); end
  def test_lever_graphs_k1408; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1408, 0.002); end
  def test_lever_graphs_l1408; assert_equal("2015", worksheet.lever_graphs_l1408); end
  def test_lever_graphs_m1408; assert_equal("2020", worksheet.lever_graphs_m1408); end
  def test_lever_graphs_n1408; assert_equal("2025", worksheet.lever_graphs_n1408); end
  def test_lever_graphs_o1408; assert_equal("2030", worksheet.lever_graphs_o1408); end
  def test_lever_graphs_p1408; assert_equal("2035", worksheet.lever_graphs_p1408); end
  def test_lever_graphs_q1408; assert_equal("2040", worksheet.lever_graphs_q1408); end
  def test_lever_graphs_r1408; assert_equal("2045", worksheet.lever_graphs_r1408); end
  def test_lever_graphs_s1408; assert_equal("2050", worksheet.lever_graphs_s1408); end
  def test_lever_graphs_b1409; assert_equal("Historic data", worksheet.lever_graphs_b1409); end
  def test_lever_graphs_b1410; assert_in_delta(1.0, worksheet.lever_graphs_b1410, 0.002); end
  def test_lever_graphs_k1410; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1410, 0.002); end
  def test_lever_graphs_l1410; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1410, 0.002); end
  def test_lever_graphs_m1410; assert_in_epsilon(24783.325014639468, worksheet.lever_graphs_m1410, 0.002); end
  def test_lever_graphs_n1410; assert_in_epsilon(28730.6661644222, worksheet.lever_graphs_n1410, 0.002); end
  def test_lever_graphs_o1410; assert_in_epsilon(32506.11166024606, worksheet.lever_graphs_o1410, 0.002); end
  def test_lever_graphs_p1410; assert_in_epsilon(35018.31412006242, worksheet.lever_graphs_p1410, 0.002); end
  def test_lever_graphs_q1410; assert_in_epsilon(36804.60007774434, worksheet.lever_graphs_q1410, 0.002); end
  def test_lever_graphs_r1410; assert_in_epsilon(37733.962350586844, worksheet.lever_graphs_r1410, 0.002); end
  def test_lever_graphs_s1410; assert_in_epsilon(37923.00987949159, worksheet.lever_graphs_s1410, 0.002); end
  def test_lever_graphs_b1411; assert_in_epsilon(2.0, worksheet.lever_graphs_b1411, 0.002); end
  def test_lever_graphs_k1411; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1411, 0.002); end
  def test_lever_graphs_l1411; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1411, 0.002); end
  def test_lever_graphs_m1411; assert_in_epsilon(24190.44997641361, worksheet.lever_graphs_m1411, 0.002); end
  def test_lever_graphs_n1411; assert_in_epsilon(27369.273776834176, worksheet.lever_graphs_n1411, 0.002); end
  def test_lever_graphs_o1411; assert_in_epsilon(29484.48083771553, worksheet.lever_graphs_o1411, 0.002); end
  def test_lever_graphs_p1411; assert_in_epsilon(30988.485682419887, worksheet.lever_graphs_p1411, 0.002); end
  def test_lever_graphs_q1411; assert_in_epsilon(31770.983778443922, worksheet.lever_graphs_q1411, 0.002); end
  def test_lever_graphs_r1411; assert_in_epsilon(32250.416514701214, worksheet.lever_graphs_r1411, 0.002); end
  def test_lever_graphs_s1411; assert_in_epsilon(32411.991424105294, worksheet.lever_graphs_s1411, 0.002); end
  def test_lever_graphs_b1412; assert_in_epsilon(3.0, worksheet.lever_graphs_b1412, 0.002); end
  def test_lever_graphs_k1412; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1412, 0.002); end
  def test_lever_graphs_l1412; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1412, 0.002); end
  def test_lever_graphs_m1412; assert_in_epsilon(23608.975982112308, worksheet.lever_graphs_m1412, 0.002); end
  def test_lever_graphs_n1412; assert_in_epsilon(25433.572173619974, worksheet.lever_graphs_n1412, 0.002); end
  def test_lever_graphs_o1412; assert_in_epsilon(26730.939964418292, worksheet.lever_graphs_o1412, 0.002); end
  def test_lever_graphs_p1412; assert_in_epsilon(27405.92969581251, worksheet.lever_graphs_p1412, 0.002); end
  def test_lever_graphs_q1412; assert_in_epsilon(27819.492585629385, worksheet.lever_graphs_q1412, 0.002); end
  def test_lever_graphs_r1412; assert_in_epsilon(28098.80251897496, worksheet.lever_graphs_r1412, 0.002); end
  def test_lever_graphs_s1412; assert_in_epsilon(28239.577800723553, worksheet.lever_graphs_s1412, 0.002); end
  def test_lever_graphs_b1413; assert_in_epsilon(4.0, worksheet.lever_graphs_b1413, 0.002); end
  def test_lever_graphs_k1413; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1413, 0.002); end
  def test_lever_graphs_l1413; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1413, 0.002); end
  def test_lever_graphs_m1413; assert_in_epsilon(23038.73780309913, worksheet.lever_graphs_m1413, 0.002); end
  def test_lever_graphs_n1413; assert_in_epsilon(23915.74732043146, worksheet.lever_graphs_n1413, 0.002); end
  def test_lever_graphs_o1413; assert_in_epsilon(24519.64990976793, worksheet.lever_graphs_o1413, 0.002); end
  def test_lever_graphs_p1413; assert_in_epsilon(24889.658057148208, worksheet.lever_graphs_p1413, 0.002); end
  def test_lever_graphs_q1413; assert_in_epsilon(25202.338280363892, worksheet.lever_graphs_q1413, 0.002); end
  def test_lever_graphs_r1413; assert_in_epsilon(25265.4071634213, worksheet.lever_graphs_r1413, 0.002); end
  def test_lever_graphs_s1413; assert_in_epsilon(25290.68267876902, worksheet.lever_graphs_s1413, 0.002); end
  def test_lever_graphs_c1418; assert_equal("1975", worksheet.lever_graphs_c1418); end
  def test_lever_graphs_d1418; assert_equal("1980", worksheet.lever_graphs_d1418); end
  def test_lever_graphs_e1418; assert_equal("1985", worksheet.lever_graphs_e1418); end
  def test_lever_graphs_f1418; assert_equal("1990", worksheet.lever_graphs_f1418); end
  def test_lever_graphs_g1418; assert_equal("1995", worksheet.lever_graphs_g1418); end
  def test_lever_graphs_h1418; assert_equal("2000", worksheet.lever_graphs_h1418); end
  def test_lever_graphs_i1418; assert_equal("2005", worksheet.lever_graphs_i1418); end
  def test_lever_graphs_j1418; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1418, 0.002); end
  def test_lever_graphs_k1418; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1418, 0.002); end
  def test_lever_graphs_l1418; assert_equal("2015", worksheet.lever_graphs_l1418); end
  def test_lever_graphs_m1418; assert_equal("2020", worksheet.lever_graphs_m1418); end
  def test_lever_graphs_n1418; assert_equal("2025", worksheet.lever_graphs_n1418); end
  def test_lever_graphs_o1418; assert_equal("2030", worksheet.lever_graphs_o1418); end
  def test_lever_graphs_p1418; assert_equal("2035", worksheet.lever_graphs_p1418); end
  def test_lever_graphs_q1418; assert_equal("2040", worksheet.lever_graphs_q1418); end
  def test_lever_graphs_r1418; assert_equal("2045", worksheet.lever_graphs_r1418); end
  def test_lever_graphs_s1418; assert_equal("2050", worksheet.lever_graphs_s1418); end
  def test_lever_graphs_b1419; assert_equal("Historic data", worksheet.lever_graphs_b1419); end
  def test_lever_graphs_b1420; assert_in_delta(1.0, worksheet.lever_graphs_b1420, 0.002); end
  def test_lever_graphs_k1420; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1420, 0.002); end
  def test_lever_graphs_l1420; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1420, 0.002); end
  def test_lever_graphs_m1420; assert_in_epsilon(94103.80336725559, worksheet.lever_graphs_m1420, 0.002); end
  def test_lever_graphs_n1420; assert_in_epsilon(111765.7985685757, worksheet.lever_graphs_n1420, 0.002); end
  def test_lever_graphs_o1420; assert_in_epsilon(129567.19267398585, worksheet.lever_graphs_o1420, 0.002); end
  def test_lever_graphs_p1420; assert_in_epsilon(139580.66409588963, worksheet.lever_graphs_p1420, 0.002); end
  def test_lever_graphs_q1420; assert_in_epsilon(146700.68076441222, worksheet.lever_graphs_q1420, 0.002); end
  def test_lever_graphs_r1420; assert_in_epsilon(150405.05678846253, worksheet.lever_graphs_r1420, 0.002); end
  def test_lever_graphs_s1420; assert_in_epsilon(151158.58762777539, worksheet.lever_graphs_s1420, 0.002); end
  def test_lever_graphs_b1421; assert_in_epsilon(2.0, worksheet.lever_graphs_b1421, 0.002); end
  def test_lever_graphs_k1421; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1421, 0.002); end
  def test_lever_graphs_l1421; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1421, 0.002); end
  def test_lever_graphs_m1421; assert_in_epsilon(89665.75374249024, worksheet.lever_graphs_m1421, 0.002); end
  def test_lever_graphs_n1421; assert_in_epsilon(103947.18366623712, worksheet.lever_graphs_n1421, 0.002); end
  def test_lever_graphs_o1421; assert_in_epsilon(117606.69730683087, worksheet.lever_graphs_o1421, 0.002); end
  def test_lever_graphs_p1421; assert_in_epsilon(123605.82082854785, worksheet.lever_graphs_p1421, 0.002); end
  def test_lever_graphs_q1421; assert_in_epsilon(126727.02269839907, worksheet.lever_graphs_q1421, 0.002); end
  def test_lever_graphs_r1421; assert_in_epsilon(129927.03882672988, worksheet.lever_graphs_r1421, 0.002); end
  def test_lever_graphs_s1421; assert_in_epsilon(130577.97459117186, worksheet.lever_graphs_s1421, 0.002); end
  def test_lever_graphs_b1422; assert_in_epsilon(3.0, worksheet.lever_graphs_b1422, 0.002); end
  def test_lever_graphs_k1422; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1422, 0.002); end
  def test_lever_graphs_l1422; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1422, 0.002); end
  def test_lever_graphs_m1422; assert_in_epsilon(87510.42781711393, worksheet.lever_graphs_m1422, 0.002); end
  def test_lever_graphs_n1422; assert_in_epsilon(94180.74027796341, worksheet.lever_graphs_n1422, 0.002); end
  def test_lever_graphs_o1422; assert_in_epsilon(101359.48435588086, worksheet.lever_graphs_o1422, 0.002); end
  def test_lever_graphs_p1422; assert_in_epsilon(106529.8367309845, worksheet.lever_graphs_p1422, 0.002); end
  def test_lever_graphs_q1422; assert_in_epsilon(109219.84860397634, worksheet.lever_graphs_q1422, 0.002); end
  def test_lever_graphs_r1422; assert_in_epsilon(111977.78664769074, worksheet.lever_graphs_r1422, 0.002); end
  def test_lever_graphs_s1422; assert_in_epsilon(112538.79647913347, worksheet.lever_graphs_s1422, 0.002); end
  def test_lever_graphs_b1423; assert_in_epsilon(4.0, worksheet.lever_graphs_b1423, 0.002); end
  def test_lever_graphs_k1423; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1423, 0.002); end
  def test_lever_graphs_l1423; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1423, 0.002); end
  def test_lever_graphs_m1423; assert_in_epsilon(85396.74922974514, worksheet.lever_graphs_m1423, 0.002); end
  def test_lever_graphs_n1423; assert_in_epsilon(87553.12416086438, worksheet.lever_graphs_n1423, 0.002); end
  def test_lever_graphs_o1423; assert_in_epsilon(89585.45767453355, worksheet.lever_graphs_o1423, 0.002); end
  def test_lever_graphs_p1423; assert_in_epsilon(91664.96688353478, worksheet.lever_graphs_p1423, 0.002); end
  def test_lever_graphs_q1423; assert_in_epsilon(92124.20928472932, worksheet.lever_graphs_q1423, 0.002); end
  def test_lever_graphs_r1423; assert_in_epsilon(92585.75249494857, worksheet.lever_graphs_r1423, 0.002); end
  def test_lever_graphs_s1423; assert_in_epsilon(93049.60804126874, worksheet.lever_graphs_s1423, 0.002); end
  def test_lever_graphs_c1428; assert_equal("1975", worksheet.lever_graphs_c1428); end
  def test_lever_graphs_d1428; assert_equal("1980", worksheet.lever_graphs_d1428); end
  def test_lever_graphs_e1428; assert_equal("1985", worksheet.lever_graphs_e1428); end
  def test_lever_graphs_f1428; assert_equal("1990", worksheet.lever_graphs_f1428); end
  def test_lever_graphs_g1428; assert_equal("1995", worksheet.lever_graphs_g1428); end
  def test_lever_graphs_h1428; assert_equal("2000", worksheet.lever_graphs_h1428); end
  def test_lever_graphs_i1428; assert_equal("2005", worksheet.lever_graphs_i1428); end
  def test_lever_graphs_j1428; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1428, 0.002); end
  def test_lever_graphs_k1428; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1428, 0.002); end
  def test_lever_graphs_l1428; assert_equal("2015", worksheet.lever_graphs_l1428); end
  def test_lever_graphs_m1428; assert_equal("2020", worksheet.lever_graphs_m1428); end
  def test_lever_graphs_n1428; assert_equal("2025", worksheet.lever_graphs_n1428); end
  def test_lever_graphs_o1428; assert_equal("2030", worksheet.lever_graphs_o1428); end
  def test_lever_graphs_p1428; assert_equal("2035", worksheet.lever_graphs_p1428); end
  def test_lever_graphs_q1428; assert_equal("2040", worksheet.lever_graphs_q1428); end
  def test_lever_graphs_r1428; assert_equal("2045", worksheet.lever_graphs_r1428); end
  def test_lever_graphs_s1428; assert_equal("2050", worksheet.lever_graphs_s1428); end
  def test_lever_graphs_b1429; assert_equal("Historic data", worksheet.lever_graphs_b1429); end
  def test_lever_graphs_b1430; assert_in_delta(1.0, worksheet.lever_graphs_b1430, 0.002); end
  def test_lever_graphs_k1430; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1430, 0.002); end
  def test_lever_graphs_l1430; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1430, 0.002); end
  def test_lever_graphs_m1430; assert_in_epsilon(118887.12838189506, worksheet.lever_graphs_m1430, 0.002); end
  def test_lever_graphs_n1430; assert_in_epsilon(140496.4647329979, worksheet.lever_graphs_n1430, 0.002); end
  def test_lever_graphs_o1430; assert_in_epsilon(162073.3043342319, worksheet.lever_graphs_o1430, 0.002); end
  def test_lever_graphs_p1430; assert_in_epsilon(174598.97821595205, worksheet.lever_graphs_p1430, 0.002); end
  def test_lever_graphs_q1430; assert_in_epsilon(183505.28084215656, worksheet.lever_graphs_q1430, 0.002); end
  def test_lever_graphs_r1430; assert_in_epsilon(188139.01913904937, worksheet.lever_graphs_r1430, 0.002); end
  def test_lever_graphs_s1430; assert_in_epsilon(189081.59750726697, worksheet.lever_graphs_s1430, 0.002); end
  def test_lever_graphs_b1431; assert_in_epsilon(2.0, worksheet.lever_graphs_b1431, 0.002); end
  def test_lever_graphs_k1431; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1431, 0.002); end
  def test_lever_graphs_l1431; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1431, 0.002); end
  def test_lever_graphs_m1431; assert_in_epsilon(113856.20371890385, worksheet.lever_graphs_m1431, 0.002); end
  def test_lever_graphs_n1431; assert_in_epsilon(131316.4574430713, worksheet.lever_graphs_n1431, 0.002); end
  def test_lever_graphs_o1431; assert_in_epsilon(147091.1781445464, worksheet.lever_graphs_o1431, 0.002); end
  def test_lever_graphs_p1431; assert_in_epsilon(154594.30651096773, worksheet.lever_graphs_p1431, 0.002); end
  def test_lever_graphs_q1431; assert_in_epsilon(158498.006476843, worksheet.lever_graphs_q1431, 0.002); end
  def test_lever_graphs_r1431; assert_in_epsilon(162177.4553414311, worksheet.lever_graphs_r1431, 0.002); end
  def test_lever_graphs_s1431; assert_in_epsilon(162989.96601527717, worksheet.lever_graphs_s1431, 0.002); end
  def test_lever_graphs_b1432; assert_in_epsilon(3.0, worksheet.lever_graphs_b1432, 0.002); end
  def test_lever_graphs_k1432; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1432, 0.002); end
  def test_lever_graphs_l1432; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1432, 0.002); end
  def test_lever_graphs_m1432; assert_in_epsilon(111119.40379922625, worksheet.lever_graphs_m1432, 0.002); end
  def test_lever_graphs_n1432; assert_in_epsilon(119614.31245158339, worksheet.lever_graphs_n1432, 0.002); end
  def test_lever_graphs_o1432; assert_in_epsilon(128090.42432029915, worksheet.lever_graphs_o1432, 0.002); end
  def test_lever_graphs_p1432; assert_in_epsilon(133935.76642679702, worksheet.lever_graphs_p1432, 0.002); end
  def test_lever_graphs_q1432; assert_in_epsilon(137039.3411896057, worksheet.lever_graphs_q1432, 0.002); end
  def test_lever_graphs_r1432; assert_in_epsilon(140076.58916666568, worksheet.lever_graphs_r1432, 0.002); end
  def test_lever_graphs_s1432; assert_in_epsilon(140778.37427985703, worksheet.lever_graphs_s1432, 0.002); end
  def test_lever_graphs_b1433; assert_in_epsilon(4.0, worksheet.lever_graphs_b1433, 0.002); end
  def test_lever_graphs_k1433; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1433, 0.002); end
  def test_lever_graphs_l1433; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1433, 0.002); end
  def test_lever_graphs_m1433; assert_in_epsilon(108435.48703284428, worksheet.lever_graphs_m1433, 0.002); end
  def test_lever_graphs_n1433; assert_in_epsilon(111468.87148129584, worksheet.lever_graphs_n1433, 0.002); end
  def test_lever_graphs_o1433; assert_in_epsilon(114105.10758430148, worksheet.lever_graphs_o1433, 0.002); end
  def test_lever_graphs_p1433; assert_in_epsilon(116554.62494068299, worksheet.lever_graphs_p1433, 0.002); end
  def test_lever_graphs_q1433; assert_in_epsilon(117326.54756509322, worksheet.lever_graphs_q1433, 0.002); end
  def test_lever_graphs_r1433; assert_in_epsilon(117851.15965836987, worksheet.lever_graphs_r1433, 0.002); end
  def test_lever_graphs_s1433; assert_in_epsilon(118340.29072003777, worksheet.lever_graphs_s1433, 0.002); end
  def test_lever_graphs_c2163; assert_equal("1975", worksheet.lever_graphs_c2163); end
  def test_lever_graphs_d2163; assert_equal("1980", worksheet.lever_graphs_d2163); end
  def test_lever_graphs_e2163; assert_equal("1985", worksheet.lever_graphs_e2163); end
  def test_lever_graphs_f2163; assert_equal("1990", worksheet.lever_graphs_f2163); end
  def test_lever_graphs_g2163; assert_equal("1995", worksheet.lever_graphs_g2163); end
  def test_lever_graphs_h2163; assert_equal("2000", worksheet.lever_graphs_h2163); end
  def test_lever_graphs_i2163; assert_equal("2005", worksheet.lever_graphs_i2163); end
  def test_lever_graphs_j2163; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2163, 0.002); end
  def test_lever_graphs_k2163; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2163, 0.002); end
  def test_lever_graphs_l2163; assert_equal("2015", worksheet.lever_graphs_l2163); end
  def test_lever_graphs_m2163; assert_equal("2020", worksheet.lever_graphs_m2163); end
  def test_lever_graphs_n2163; assert_equal("2025", worksheet.lever_graphs_n2163); end
  def test_lever_graphs_o2163; assert_equal("2030", worksheet.lever_graphs_o2163); end
  def test_lever_graphs_p2163; assert_equal("2035", worksheet.lever_graphs_p2163); end
  def test_lever_graphs_q2163; assert_equal("2040", worksheet.lever_graphs_q2163); end
  def test_lever_graphs_r2163; assert_equal("2045", worksheet.lever_graphs_r2163); end
  def test_lever_graphs_s2163; assert_equal("2050", worksheet.lever_graphs_s2163); end
  def test_lever_graphs_b2164; assert_equal("Historic data", worksheet.lever_graphs_b2164); end
  def test_lever_graphs_b2165; assert_in_delta(1.0, worksheet.lever_graphs_b2165, 0.002); end
  def test_lever_graphs_k2165; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2165, 0.002); end
  def test_lever_graphs_l2165; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2165, 0.002); end
  def test_lever_graphs_m2165; assert_in_epsilon(7.5806628990088445, worksheet.lever_graphs_m2165, 0.002); end
  def test_lever_graphs_n2165; assert_in_epsilon(7.13660906986481, worksheet.lever_graphs_n2165, 0.002); end
  def test_lever_graphs_o2165; assert_in_epsilon(6.718566660276611, worksheet.lever_graphs_o2165, 0.002); end
  def test_lever_graphs_p2165; assert_in_epsilon(6.38929004351293, worksheet.lever_graphs_p2165, 0.002); end
  def test_lever_graphs_q2165; assert_in_epsilon(6.231147148269996, worksheet.lever_graphs_q2165, 0.002); end
  def test_lever_graphs_r2165; assert_in_epsilon(6.076918486869242, worksheet.lever_graphs_r2165, 0.002); end
  def test_lever_graphs_s2165; assert_in_epsilon(5.9265071771425, worksheet.lever_graphs_s2165, 0.002); end
  def test_lever_graphs_b2166; assert_in_epsilon(2.0, worksheet.lever_graphs_b2166, 0.002); end
  def test_lever_graphs_k2166; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2166, 0.002); end
  def test_lever_graphs_l2166; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2166, 0.002); end
  def test_lever_graphs_m2166; assert_in_epsilon(7.4285983775928015, worksheet.lever_graphs_m2166, 0.002); end
  def test_lever_graphs_n2166; assert_in_epsilon(6.783663831581343, worksheet.lever_graphs_n2166, 0.002); end
  def test_lever_graphs_o2166; assert_in_epsilon(6.289925051143047, worksheet.lever_graphs_o2166, 0.002); end
  def test_lever_graphs_p2166; assert_in_epsilon(5.951506723180597, worksheet.lever_graphs_p2166, 0.002); end
  def test_lever_graphs_q2166; assert_in_epsilon(5.631296396707781, worksheet.lever_graphs_q2166, 0.002); end
  def test_lever_graphs_r2166; assert_in_epsilon(5.409619853440235, worksheet.lever_graphs_r2166, 0.002); end
  def test_lever_graphs_s2166; assert_in_epsilon(5.27572501693093, worksheet.lever_graphs_s2166, 0.002); end
  def test_lever_graphs_b2167; assert_in_epsilon(3.0, worksheet.lever_graphs_b2167, 0.002); end
  def test_lever_graphs_k2167; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2167, 0.002); end
  def test_lever_graphs_l2167; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2167, 0.002); end
  def test_lever_graphs_m2167; assert_in_epsilon(7.3348041473624335, worksheet.lever_graphs_m2167, 0.002); end
  def test_lever_graphs_n2167; assert_in_epsilon(6.715081950093092, worksheet.lever_graphs_n2167, 0.002); end
  def test_lever_graphs_o2167; assert_in_epsilon(6.069902226905445, worksheet.lever_graphs_o2167, 0.002); end
  def test_lever_graphs_p2167; assert_in_epsilon(5.486710857442462, worksheet.lever_graphs_p2167, 0.002); end
  def test_lever_graphs_q2167; assert_in_epsilon(5.139227431512809, worksheet.lever_graphs_q2167, 0.002); end
  def test_lever_graphs_r2167; assert_in_epsilon(4.93692123204699, worksheet.lever_graphs_r2167, 0.002); end
  def test_lever_graphs_s2167; assert_in_epsilon(4.814726275814738, worksheet.lever_graphs_s2167, 0.002); end
  def test_lever_graphs_b2168; assert_in_epsilon(4.0, worksheet.lever_graphs_b2168, 0.002); end
  def test_lever_graphs_k2168; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2168, 0.002); end
  def test_lever_graphs_l2168; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2168, 0.002); end
  def test_lever_graphs_m2168; assert_in_epsilon(7.3348041473624335, worksheet.lever_graphs_m2168, 0.002); end
  def test_lever_graphs_n2168; assert_in_epsilon(6.715081950093092, worksheet.lever_graphs_n2168, 0.002); end
  def test_lever_graphs_o2168; assert_in_epsilon(5.916629786782296, worksheet.lever_graphs_o2168, 0.002); end
  def test_lever_graphs_p2168; assert_in_epsilon(5.280295480672461, worksheet.lever_graphs_p2168, 0.002); end
  def test_lever_graphs_q2168; assert_in_epsilon(4.895977107046136, worksheet.lever_graphs_q2168, 0.002); end
  def test_lever_graphs_r2168; assert_in_epsilon(4.656025513339062, worksheet.lever_graphs_r2168, 0.002); end
  def test_lever_graphs_s2168; assert_in_epsilon(4.317143691403358, worksheet.lever_graphs_s2168, 0.002); end
  def test_lever_graphs_c2234; assert_equal("1975", worksheet.lever_graphs_c2234); end
  def test_lever_graphs_d2234; assert_equal("1980", worksheet.lever_graphs_d2234); end
  def test_lever_graphs_e2234; assert_equal("1985", worksheet.lever_graphs_e2234); end
  def test_lever_graphs_f2234; assert_equal("1990", worksheet.lever_graphs_f2234); end
  def test_lever_graphs_g2234; assert_equal("1995", worksheet.lever_graphs_g2234); end
  def test_lever_graphs_h2234; assert_equal("2000", worksheet.lever_graphs_h2234); end
  def test_lever_graphs_i2234; assert_equal("2005", worksheet.lever_graphs_i2234); end
  def test_lever_graphs_j2234; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2234, 0.002); end
  def test_lever_graphs_k2234; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2234, 0.002); end
  def test_lever_graphs_l2234; assert_equal("2015", worksheet.lever_graphs_l2234); end
  def test_lever_graphs_m2234; assert_equal("2020", worksheet.lever_graphs_m2234); end
  def test_lever_graphs_n2234; assert_equal("2025", worksheet.lever_graphs_n2234); end
  def test_lever_graphs_o2234; assert_equal("2030", worksheet.lever_graphs_o2234); end
  def test_lever_graphs_p2234; assert_equal("2035", worksheet.lever_graphs_p2234); end
  def test_lever_graphs_q2234; assert_equal("2040", worksheet.lever_graphs_q2234); end
  def test_lever_graphs_r2234; assert_equal("2045", worksheet.lever_graphs_r2234); end
  def test_lever_graphs_s2234; assert_equal("2050", worksheet.lever_graphs_s2234); end
  def test_lever_graphs_b2235; assert_equal("Historic data", worksheet.lever_graphs_b2235); end
  def test_lever_graphs_b2236; assert_in_delta(1.0, worksheet.lever_graphs_b2236, 0.002); end
  def test_lever_graphs_k2236; assert_in_epsilon(9.96, worksheet.lever_graphs_k2236, 0.002); end
  def test_lever_graphs_l2236; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2236, 0.002); end
  def test_lever_graphs_m2236; assert_in_epsilon(9.14448948972875, worksheet.lever_graphs_m2236, 0.002); end
  def test_lever_graphs_n2236; assert_in_epsilon(8.918151972794055, worksheet.lever_graphs_n2236, 0.002); end
  def test_lever_graphs_o2236; assert_in_epsilon(8.697416591618794, worksheet.lever_graphs_o2236, 0.002); end
  def test_lever_graphs_p2236; assert_in_epsilon(8.482144686357737, worksheet.lever_graphs_p2236, 0.002); end
  def test_lever_graphs_q2236; assert_in_epsilon(8.272201029169722, worksheet.lever_graphs_q2236, 0.002); end
  def test_lever_graphs_r2236; assert_in_epsilon(8.067453739271263, worksheet.lever_graphs_r2236, 0.002); end
  def test_lever_graphs_s2236; assert_in_epsilon(7.8677742000927084, worksheet.lever_graphs_s2236, 0.002); end
  def test_lever_graphs_b2237; assert_in_epsilon(2.0, worksheet.lever_graphs_b2237, 0.002); end
  def test_lever_graphs_k2237; assert_in_epsilon(9.96, worksheet.lever_graphs_k2237, 0.002); end
  def test_lever_graphs_l2237; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2237, 0.002); end
  def test_lever_graphs_m2237; assert_in_epsilon(8.827318247472038, worksheet.lever_graphs_m2237, 0.002); end
  def test_lever_graphs_n2237; assert_in_epsilon(8.310238867860596, worksheet.lever_graphs_n2237, 0.002); end
  def test_lever_graphs_o2237; assert_in_epsilon(7.823448538368755, worksheet.lever_graphs_o2237, 0.002); end
  def test_lever_graphs_p2237; assert_in_epsilon(7.365173011959558, worksheet.lever_graphs_p2237, 0.002); end
  def test_lever_graphs_q2237; assert_in_epsilon(6.933741971978007, worksheet.lever_graphs_q2237, 0.002); end
  def test_lever_graphs_r2237; assert_in_epsilon(6.52758294420273, worksheet.lever_graphs_r2237, 0.002); end
  def test_lever_graphs_s2237; assert_in_epsilon(6.145215565512471, worksheet.lever_graphs_s2237, 0.002); end
  def test_lever_graphs_b2238; assert_in_epsilon(3.0, worksheet.lever_graphs_b2238, 0.002); end
  def test_lever_graphs_k2238; assert_in_epsilon(9.96, worksheet.lever_graphs_k2238, 0.002); end
  def test_lever_graphs_l2238; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2238, 0.002); end
  def test_lever_graphs_m2238; assert_in_epsilon(8.606204281617035, worksheet.lever_graphs_m2238, 0.002); end
  def test_lever_graphs_n2238; assert_in_epsilon(7.899129607011463, worksheet.lever_graphs_n2238, 0.002); end
  def test_lever_graphs_o2238; assert_in_epsilon(7.250147278242543, worksheet.lever_graphs_o2238, 0.002); end
  def test_lever_graphs_p2238; assert_in_epsilon(6.654484502893848, worksheet.lever_graphs_p2238, 0.002); end
  def test_lever_graphs_q2238; assert_in_epsilon(6.107760615035191, worksheet.lever_graphs_q2238, 0.002); end
  def test_lever_graphs_r2238; assert_in_epsilon(5.605954858614858, worksheet.lever_graphs_r2238, 0.002); end
  def test_lever_graphs_s2238; assert_in_epsilon(5.145376817726912, worksheet.lever_graphs_s2238, 0.002); end
  def test_lever_graphs_b2239; assert_in_epsilon(4.0, worksheet.lever_graphs_b2239, 0.002); end
  def test_lever_graphs_k2239; assert_in_epsilon(9.96, worksheet.lever_graphs_k2239, 0.002); end
  def test_lever_graphs_l2239; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2239, 0.002); end
  def test_lever_graphs_m2239; assert_in_epsilon(8.432522727417279, worksheet.lever_graphs_m2239, 0.002); end
  def test_lever_graphs_n2239; assert_in_epsilon(7.583522495724577, worksheet.lever_graphs_n2239, 0.002); end
  def test_lever_graphs_o2239; assert_in_epsilon(6.820001001144634, worksheet.lever_graphs_o2239, 0.002); end
  def test_lever_graphs_p2239; assert_in_epsilon(6.13335210409628, worksheet.lever_graphs_p2239, 0.002); end
  def test_lever_graphs_q2239; assert_in_epsilon(5.5158361452598985, worksheet.lever_graphs_q2239, 0.002); end
  def test_lever_graphs_r2239; assert_in_epsilon(4.960492706922208, worksheet.lever_graphs_r2239, 0.002); end
  def test_lever_graphs_s2239; assert_in_epsilon(4.461062157652073, worksheet.lever_graphs_s2239, 0.002); end
  def test_lever_graphs_d2624; assert_equal("Title", worksheet.lever_graphs_d2624); end
  def test_lever_graphs_e2624; assert_equal("Design for Steel Materials demand per product", worksheet.lever_graphs_e2624); end
  def test_lever_graphs_f2624; assert_equal("Design for Chemicals Materials demand per product", worksheet.lever_graphs_f2624); end
  def test_lever_graphs_g2624; assert_equal("Design for Aluminium Materials demand per product", worksheet.lever_graphs_g2624); end
  def test_lever_graphs_h2624; assert_equal("Design for Cement Materials demand per product", worksheet.lever_graphs_h2624); end
  def test_lever_graphs_i2624; assert_equal("Design for Paper Materials demand per product", worksheet.lever_graphs_i2624); end
  def test_lever_graphs_j2624; assert_equal("Design for Timber Materials demand per product", worksheet.lever_graphs_j2624); end
  def test_lever_graphs_k2624; assert_equal("Design for Other industries Materials demand per product", worksheet.lever_graphs_k2624); end
  def test_lever_graphs_d2625; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2625, 0.002); end
  def test_lever_graphs_e2625; assert_in_delta(1.0, worksheet.lever_graphs_e2625, 0.002); end
  def test_lever_graphs_f2625; assert_in_delta(1.0, worksheet.lever_graphs_f2625, 0.002); end
  def test_lever_graphs_g2625; assert_in_delta(1.0, worksheet.lever_graphs_g2625, 0.002); end
  def test_lever_graphs_h2625; assert_in_delta(1.0, worksheet.lever_graphs_h2625, 0.002); end
  def test_lever_graphs_i2625; assert_in_delta(1.0, worksheet.lever_graphs_i2625, 0.002); end
  def test_lever_graphs_j2625; assert_in_delta(1.0, worksheet.lever_graphs_j2625, 0.002); end
  def test_lever_graphs_k2625; assert_in_delta(1.0, worksheet.lever_graphs_k2625, 0.002); end
  def test_lever_graphs_d2626; assert_equal("2050: Level 1", worksheet.lever_graphs_d2626); end
  def test_lever_graphs_e2626; assert_in_delta(1.0, worksheet.lever_graphs_e2626, 0.002); end
  def test_lever_graphs_f2626; assert_in_delta(1.0, worksheet.lever_graphs_f2626, 0.002); end
  def test_lever_graphs_g2626; assert_in_delta(1.0, worksheet.lever_graphs_g2626, 0.002); end
  def test_lever_graphs_h2626; assert_in_delta(1.0, worksheet.lever_graphs_h2626, 0.002); end
  def test_lever_graphs_i2626; assert_in_delta(1.0, worksheet.lever_graphs_i2626, 0.002); end
  def test_lever_graphs_j2626; assert_in_delta(1.0, worksheet.lever_graphs_j2626, 0.002); end
  def test_lever_graphs_k2626; assert_in_delta(1.0, worksheet.lever_graphs_k2626, 0.002); end
  def test_lever_graphs_d2627; assert_equal("2050: Level 2", worksheet.lever_graphs_d2627); end
  def test_lever_graphs_e2627; assert_in_delta(0.9, worksheet.lever_graphs_e2627, 0.002); end
  def test_lever_graphs_f2627; assert_in_delta(0.9, worksheet.lever_graphs_f2627, 0.002); end
  def test_lever_graphs_g2627; assert_in_delta(0.9, worksheet.lever_graphs_g2627, 0.002); end
  def test_lever_graphs_h2627; assert_in_delta(0.9, worksheet.lever_graphs_h2627, 0.002); end
  def test_lever_graphs_i2627; assert_in_delta(0.95, worksheet.lever_graphs_i2627, 0.002); end
  def test_lever_graphs_j2627; assert_in_delta(0.9, worksheet.lever_graphs_j2627, 0.002); end
  def test_lever_graphs_k2627; assert_in_delta(0.9, worksheet.lever_graphs_k2627, 0.002); end
  def test_lever_graphs_d2628; assert_equal("2050: Level 3", worksheet.lever_graphs_d2628); end
  def test_lever_graphs_e2628; assert_in_delta(0.8, worksheet.lever_graphs_e2628, 0.002); end
  def test_lever_graphs_f2628; assert_in_delta(0.8, worksheet.lever_graphs_f2628, 0.002); end
  def test_lever_graphs_g2628; assert_in_delta(0.8, worksheet.lever_graphs_g2628, 0.002); end
  def test_lever_graphs_h2628; assert_in_delta(0.8, worksheet.lever_graphs_h2628, 0.002); end
  def test_lever_graphs_i2628; assert_in_delta(0.9, worksheet.lever_graphs_i2628, 0.002); end
  def test_lever_graphs_j2628; assert_in_delta(0.8, worksheet.lever_graphs_j2628, 0.002); end
  def test_lever_graphs_k2628; assert_in_delta(0.8, worksheet.lever_graphs_k2628, 0.002); end
  def test_lever_graphs_d2629; assert_equal("2050: Level 4", worksheet.lever_graphs_d2629); end
  def test_lever_graphs_e2629; assert_in_delta(0.7, worksheet.lever_graphs_e2629, 0.002); end
  def test_lever_graphs_f2629; assert_in_delta(0.7, worksheet.lever_graphs_f2629, 0.002); end
  def test_lever_graphs_g2629; assert_in_delta(0.7, worksheet.lever_graphs_g2629, 0.002); end
  def test_lever_graphs_h2629; assert_in_delta(0.7, worksheet.lever_graphs_h2629, 0.002); end
  def test_lever_graphs_i2629; assert_in_delta(0.8, worksheet.lever_graphs_i2629, 0.002); end
  def test_lever_graphs_j2629; assert_in_delta(0.7, worksheet.lever_graphs_j2629, 0.002); end
  def test_lever_graphs_k2629; assert_in_delta(0.7, worksheet.lever_graphs_k2629, 0.002); end
  def test_lever_graphs_c2834; assert_equal("1975", worksheet.lever_graphs_c2834); end
  def test_lever_graphs_d2834; assert_equal("1980", worksheet.lever_graphs_d2834); end
  def test_lever_graphs_e2834; assert_equal("1985", worksheet.lever_graphs_e2834); end
  def test_lever_graphs_f2834; assert_equal("1990", worksheet.lever_graphs_f2834); end
  def test_lever_graphs_g2834; assert_equal("1995", worksheet.lever_graphs_g2834); end
  def test_lever_graphs_h2834; assert_equal("2000", worksheet.lever_graphs_h2834); end
  def test_lever_graphs_i2834; assert_equal("2005", worksheet.lever_graphs_i2834); end
  def test_lever_graphs_j2834; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2834, 0.002); end
  def test_lever_graphs_k2834; assert_equal("2011", worksheet.lever_graphs_k2834); end
  def test_lever_graphs_l2834; assert_equal("2015", worksheet.lever_graphs_l2834); end
  def test_lever_graphs_m2834; assert_equal("2020", worksheet.lever_graphs_m2834); end
  def test_lever_graphs_n2834; assert_equal("2025", worksheet.lever_graphs_n2834); end
  def test_lever_graphs_o2834; assert_equal("2030", worksheet.lever_graphs_o2834); end
  def test_lever_graphs_p2834; assert_equal("2035", worksheet.lever_graphs_p2834); end
  def test_lever_graphs_q2834; assert_equal("2040", worksheet.lever_graphs_q2834); end
  def test_lever_graphs_r2834; assert_equal("2045", worksheet.lever_graphs_r2834); end
  def test_lever_graphs_s2834; assert_equal("2050", worksheet.lever_graphs_s2834); end
  def test_lever_graphs_b2835; assert_equal("Historic data", worksheet.lever_graphs_b2835); end
  def test_lever_graphs_b2836; assert_in_delta(1.0, worksheet.lever_graphs_b2836, 0.002); end
  def test_lever_graphs_k2836; assert_in_delta(1.0, worksheet.lever_graphs_k2836, 0.002); end
  def test_lever_graphs_l2836; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2836, 0.002); end
  def test_lever_graphs_m2836; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2836, 0.002); end
  def test_lever_graphs_n2836; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2836, 0.002); end
  def test_lever_graphs_o2836; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2836, 0.002); end
  def test_lever_graphs_p2836; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2836, 0.002); end
  def test_lever_graphs_q2836; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2836, 0.002); end
  def test_lever_graphs_r2836; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2836, 0.002); end
  def test_lever_graphs_s2836; assert_in_delta(1.0, worksheet.lever_graphs_s2836, 0.002); end
  def test_lever_graphs_b2837; assert_in_epsilon(2.0, worksheet.lever_graphs_b2837, 0.002); end
  def test_lever_graphs_k2837; assert_in_delta(1.0, worksheet.lever_graphs_k2837, 0.002); end
  def test_lever_graphs_l2837; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2837, 0.002); end
  def test_lever_graphs_m2837; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2837, 0.002); end
  def test_lever_graphs_n2837; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2837, 0.002); end
  def test_lever_graphs_o2837; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2837, 0.002); end
  def test_lever_graphs_p2837; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2837, 0.002); end
  def test_lever_graphs_q2837; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2837, 0.002); end
  def test_lever_graphs_r2837; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2837, 0.002); end
  def test_lever_graphs_s2837; assert_in_delta(0.9, worksheet.lever_graphs_s2837, 0.002); end
  def test_lever_graphs_b2838; assert_in_epsilon(3.0, worksheet.lever_graphs_b2838, 0.002); end
  def test_lever_graphs_k2838; assert_in_delta(1.0, worksheet.lever_graphs_k2838, 0.002); end
  def test_lever_graphs_l2838; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2838, 0.002); end
  def test_lever_graphs_m2838; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2838, 0.002); end
  def test_lever_graphs_n2838; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2838, 0.002); end
  def test_lever_graphs_o2838; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2838, 0.002); end
  def test_lever_graphs_p2838; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2838, 0.002); end
  def test_lever_graphs_q2838; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2838, 0.002); end
  def test_lever_graphs_r2838; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2838, 0.002); end
  def test_lever_graphs_s2838; assert_in_delta(0.8, worksheet.lever_graphs_s2838, 0.002); end
  def test_lever_graphs_b2839; assert_in_epsilon(4.0, worksheet.lever_graphs_b2839, 0.002); end
  def test_lever_graphs_k2839; assert_in_delta(1.0, worksheet.lever_graphs_k2839, 0.002); end
  def test_lever_graphs_l2839; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2839, 0.002); end
  def test_lever_graphs_m2839; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2839, 0.002); end
  def test_lever_graphs_n2839; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2839, 0.002); end
  def test_lever_graphs_o2839; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2839, 0.002); end
  def test_lever_graphs_p2839; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2839, 0.002); end
  def test_lever_graphs_q2839; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2839, 0.002); end
  def test_lever_graphs_r2839; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2839, 0.002); end
  def test_lever_graphs_s2839; assert_in_delta(0.7, worksheet.lever_graphs_s2839, 0.002); end
  def test_lever_graphs_c2750; assert_equal("1975", worksheet.lever_graphs_c2750); end
  def test_lever_graphs_d2750; assert_equal("1980", worksheet.lever_graphs_d2750); end
  def test_lever_graphs_e2750; assert_equal("1985", worksheet.lever_graphs_e2750); end
  def test_lever_graphs_f2750; assert_equal("1990", worksheet.lever_graphs_f2750); end
  def test_lever_graphs_g2750; assert_equal("1995", worksheet.lever_graphs_g2750); end
  def test_lever_graphs_h2750; assert_equal("2000", worksheet.lever_graphs_h2750); end
  def test_lever_graphs_i2750; assert_equal("2005", worksheet.lever_graphs_i2750); end
  def test_lever_graphs_j2750; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2750, 0.002); end
  def test_lever_graphs_k2750; assert_equal("2011", worksheet.lever_graphs_k2750); end
  def test_lever_graphs_l2750; assert_equal("2015", worksheet.lever_graphs_l2750); end
  def test_lever_graphs_m2750; assert_equal("2020", worksheet.lever_graphs_m2750); end
  def test_lever_graphs_n2750; assert_equal("2025", worksheet.lever_graphs_n2750); end
  def test_lever_graphs_o2750; assert_equal("2030", worksheet.lever_graphs_o2750); end
  def test_lever_graphs_p2750; assert_equal("2035", worksheet.lever_graphs_p2750); end
  def test_lever_graphs_q2750; assert_equal("2040", worksheet.lever_graphs_q2750); end
  def test_lever_graphs_r2750; assert_equal("2045", worksheet.lever_graphs_r2750); end
  def test_lever_graphs_s2750; assert_equal("2050", worksheet.lever_graphs_s2750); end
  def test_lever_graphs_b2751; assert_equal("Historic data", worksheet.lever_graphs_b2751); end
  def test_lever_graphs_b2752; assert_in_delta(1.0, worksheet.lever_graphs_b2752, 0.002); end
  def test_lever_graphs_k2752; assert_in_delta(1.0, worksheet.lever_graphs_k2752, 0.002); end
  def test_lever_graphs_l2752; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2752, 0.002); end
  def test_lever_graphs_m2752; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2752, 0.002); end
  def test_lever_graphs_n2752; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2752, 0.002); end
  def test_lever_graphs_o2752; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2752, 0.002); end
  def test_lever_graphs_p2752; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2752, 0.002); end
  def test_lever_graphs_q2752; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2752, 0.002); end
  def test_lever_graphs_r2752; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2752, 0.002); end
  def test_lever_graphs_s2752; assert_in_delta(1.0, worksheet.lever_graphs_s2752, 0.002); end
  def test_lever_graphs_b2753; assert_in_epsilon(2.0, worksheet.lever_graphs_b2753, 0.002); end
  def test_lever_graphs_k2753; assert_in_delta(1.0, worksheet.lever_graphs_k2753, 0.002); end
  def test_lever_graphs_l2753; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2753, 0.002); end
  def test_lever_graphs_m2753; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2753, 0.002); end
  def test_lever_graphs_n2753; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2753, 0.002); end
  def test_lever_graphs_o2753; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2753, 0.002); end
  def test_lever_graphs_p2753; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2753, 0.002); end
  def test_lever_graphs_q2753; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2753, 0.002); end
  def test_lever_graphs_r2753; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2753, 0.002); end
  def test_lever_graphs_s2753; assert_in_delta(0.9, worksheet.lever_graphs_s2753, 0.002); end
  def test_lever_graphs_b2754; assert_in_epsilon(3.0, worksheet.lever_graphs_b2754, 0.002); end
  def test_lever_graphs_k2754; assert_in_delta(1.0, worksheet.lever_graphs_k2754, 0.002); end
  def test_lever_graphs_l2754; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2754, 0.002); end
  def test_lever_graphs_m2754; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2754, 0.002); end
  def test_lever_graphs_n2754; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2754, 0.002); end
  def test_lever_graphs_o2754; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2754, 0.002); end
  def test_lever_graphs_p2754; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2754, 0.002); end
  def test_lever_graphs_q2754; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2754, 0.002); end
  def test_lever_graphs_r2754; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2754, 0.002); end
  def test_lever_graphs_s2754; assert_in_delta(0.8, worksheet.lever_graphs_s2754, 0.002); end
  def test_lever_graphs_b2755; assert_in_epsilon(4.0, worksheet.lever_graphs_b2755, 0.002); end
  def test_lever_graphs_k2755; assert_in_delta(1.0, worksheet.lever_graphs_k2755, 0.002); end
  def test_lever_graphs_l2755; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2755, 0.002); end
  def test_lever_graphs_m2755; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2755, 0.002); end
  def test_lever_graphs_n2755; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2755, 0.002); end
  def test_lever_graphs_o2755; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2755, 0.002); end
  def test_lever_graphs_p2755; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2755, 0.002); end
  def test_lever_graphs_q2755; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2755, 0.002); end
  def test_lever_graphs_r2755; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2755, 0.002); end
  def test_lever_graphs_s2755; assert_in_delta(0.7, worksheet.lever_graphs_s2755, 0.002); end
  def test_lever_graphs_d2680; assert_equal("Title", worksheet.lever_graphs_d2680); end
  def test_lever_graphs_e2680; assert_equal("Steel", worksheet.lever_graphs_e2680); end
  def test_lever_graphs_f2680; assert_equal("Chemicals & petrochemicals", worksheet.lever_graphs_f2680); end
  def test_lever_graphs_g2680; assert_equal("Pulp & paper", worksheet.lever_graphs_g2680); end
  def test_lever_graphs_d2681; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2681, 0.002); end
  def test_lever_graphs_e2681; assert_in_delta(0.0, (worksheet.lever_graphs_e2681||0), 0.002); end
  def test_lever_graphs_f2681; assert_in_delta(0.0, (worksheet.lever_graphs_f2681||0), 0.002); end
  def test_lever_graphs_g2681; assert_in_delta(0.0, (worksheet.lever_graphs_g2681||0), 0.002); end
  def test_lever_graphs_d2682; assert_equal("2050: Level 1", worksheet.lever_graphs_d2682); end
  def test_lever_graphs_e2682; assert_in_delta(0.0, (worksheet.lever_graphs_e2682||0), 0.002); end
  def test_lever_graphs_f2682; assert_in_delta(0.07624999999999993, worksheet.lever_graphs_f2682, 0.002); end
  def test_lever_graphs_g2682; assert_in_delta(0.0, (worksheet.lever_graphs_g2682||0), 0.002); end
  def test_lever_graphs_d2683; assert_equal("2050: Level 2", worksheet.lever_graphs_d2683); end
  def test_lever_graphs_e2683; assert_in_delta(0.1549295774647888, worksheet.lever_graphs_e2683, 0.002); end
  def test_lever_graphs_f2683; assert_in_delta(0.15500000000000025, worksheet.lever_graphs_f2683, 0.002); end
  def test_lever_graphs_g2683; assert_in_delta(0.09090909090909091, worksheet.lever_graphs_g2683, 0.002); end
  def test_lever_graphs_d2684; assert_equal("2050: Level 3", worksheet.lever_graphs_d2684); end
  def test_lever_graphs_e2684; assert_in_delta(0.295774647887324, worksheet.lever_graphs_e2684, 0.002); end
  def test_lever_graphs_f2684; assert_in_delta(0.23624999999999985, worksheet.lever_graphs_f2684, 0.002); end
  def test_lever_graphs_g2684; assert_in_delta(0.2424242424242424, worksheet.lever_graphs_g2684, 0.002); end
  def test_lever_graphs_d2685; assert_equal("2050: Level 4", worksheet.lever_graphs_d2685); end
  def test_lever_graphs_e2685; assert_in_delta(0.647887323943662, worksheet.lever_graphs_e2685, 0.002); end
  def test_lever_graphs_f2685; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_f2685, 0.002); end
  def test_lever_graphs_g2685; assert_in_delta(0.3939393939393939, worksheet.lever_graphs_g2685, 0.002); end
  def test_lever_graphs_d2691; assert_equal("Title", worksheet.lever_graphs_d2691); end
  def test_lever_graphs_e2691; assert_equal("Aluminium", worksheet.lever_graphs_e2691); end
  def test_lever_graphs_d2692; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2692, 0.002); end
  def test_lever_graphs_e2692; assert_in_delta(0.0, (worksheet.lever_graphs_e2692||0), 0.002); end
  def test_lever_graphs_d2693; assert_equal("2050: Level 1", worksheet.lever_graphs_d2693); end
  def test_lever_graphs_e2693; assert_in_delta(-0.2857142857142857, worksheet.lever_graphs_e2693, 0.002); end
  def test_lever_graphs_d2694; assert_equal("2050: Level 2", worksheet.lever_graphs_d2694); end
  def test_lever_graphs_e2694; assert_in_delta(-0.2142857142857143, worksheet.lever_graphs_e2694, 0.002); end
  def test_lever_graphs_d2695; assert_equal("2050: Level 3", worksheet.lever_graphs_d2695); end
  def test_lever_graphs_e2695; assert_in_delta(-0.14285714285714282, worksheet.lever_graphs_e2695, 0.002); end
  def test_lever_graphs_d2696; assert_equal("2050: Level 4", worksheet.lever_graphs_d2696); end
  def test_lever_graphs_e2696; assert_in_delta(-0.07142857142857141, worksheet.lever_graphs_e2696, 0.002); end
  def test_lever_graphs_d2634; assert_equal("Title", worksheet.lever_graphs_d2634); end
  def test_lever_graphs_e2634; assert_equal("Global Oxygen steel technology", worksheet.lever_graphs_e2634); end
  def test_lever_graphs_f2634; assert_equal("Global Hisarna Oxygen steel technology", worksheet.lever_graphs_f2634); end
  def test_lever_graphs_g2634; assert_equal("Global Electric steel technology", worksheet.lever_graphs_g2634); end
  def test_lever_graphs_h2634; assert_equal("Global DRI Electric steel technology", worksheet.lever_graphs_h2634); end
  def test_lever_graphs_i2634; assert_equal("Global Alumina Aluminium technology", worksheet.lever_graphs_i2634); end
  def test_lever_graphs_j2634; assert_equal("Global Primary Aluminium technology", worksheet.lever_graphs_j2634); end
  def test_lever_graphs_k2634; assert_equal("Global Secondary Aluminium technology", worksheet.lever_graphs_k2634); end
  def test_lever_graphs_l2634; assert_equal("Global Chemicals: High Value Chemicals  technology", worksheet.lever_graphs_l2634); end
  def test_lever_graphs_m2634; assert_equal("Global Chemicals: Ammonia technology", worksheet.lever_graphs_m2634); end
  def test_lever_graphs_n2634; assert_equal("Global Chemicals: Methanol technology", worksheet.lever_graphs_n2634); end
  def test_lever_graphs_o2634; assert_equal("Global Chemicals: Others technology", worksheet.lever_graphs_o2634); end
  def test_lever_graphs_p2634; assert_equal("Global Pulp & paper: Pulp technology", worksheet.lever_graphs_p2634); end
  def test_lever_graphs_q2634; assert_equal("Global Pulp & paper: Virgin technology", worksheet.lever_graphs_q2634); end
  def test_lever_graphs_r2634; assert_equal("Global Pulp & paper: Recycled technology", worksheet.lever_graphs_r2634); end
  def test_lever_graphs_s2634; assert_equal("Global Cement technology", worksheet.lever_graphs_s2634); end
  def test_lever_graphs_t2634; assert_equal("Global Timber technology", worksheet.lever_graphs_t2634); end
  def test_lever_graphs_u2634; assert_equal("Global Other industries technology", worksheet.lever_graphs_u2634); end
  def test_lever_graphs_d2635; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2635, 0.002); end
  def test_lever_graphs_e2635; assert_in_delta(0.0, (worksheet.lever_graphs_e2635||0), 0.002); end
  def test_lever_graphs_f2635; assert_in_delta(0.0, (worksheet.lever_graphs_f2635||0), 0.002); end
  def test_lever_graphs_g2635; assert_in_delta(0.0, (worksheet.lever_graphs_g2635||0), 0.002); end
  def test_lever_graphs_h2635; assert_in_delta(0.0, (worksheet.lever_graphs_h2635||0), 0.002); end
  def test_lever_graphs_i2635; assert_in_delta(0.0, (worksheet.lever_graphs_i2635||0), 0.002); end
  def test_lever_graphs_j2635; assert_in_delta(0.0, (worksheet.lever_graphs_j2635||0), 0.002); end
  def test_lever_graphs_k2635; assert_in_delta(0.0, (worksheet.lever_graphs_k2635||0), 0.002); end
  def test_lever_graphs_l2635; assert_in_delta(0.0, (worksheet.lever_graphs_l2635||0), 0.002); end
  def test_lever_graphs_m2635; assert_in_delta(0.0, (worksheet.lever_graphs_m2635||0), 0.002); end
  def test_lever_graphs_n2635; assert_in_delta(0.0, (worksheet.lever_graphs_n2635||0), 0.002); end
  def test_lever_graphs_o2635; assert_in_delta(0.0, (worksheet.lever_graphs_o2635||0), 0.002); end
  def test_lever_graphs_p2635; assert_in_delta(0.0, (worksheet.lever_graphs_p2635||0), 0.002); end
  def test_lever_graphs_q2635; assert_in_delta(0.0, (worksheet.lever_graphs_q2635||0), 0.002); end
  def test_lever_graphs_r2635; assert_in_delta(0.0, (worksheet.lever_graphs_r2635||0), 0.002); end
  def test_lever_graphs_s2635; assert_in_delta(0.0, (worksheet.lever_graphs_s2635||0), 0.002); end
  def test_lever_graphs_t2635; assert_in_delta(0.0, (worksheet.lever_graphs_t2635||0), 0.002); end
  def test_lever_graphs_u2635; assert_in_delta(0.0, (worksheet.lever_graphs_u2635||0), 0.002); end
  def test_lever_graphs_d2636; assert_equal("2050: Level 1", worksheet.lever_graphs_d2636); end
  def test_lever_graphs_e2636; assert_in_delta(0.0, (worksheet.lever_graphs_e2636||0), 0.002); end
  def test_lever_graphs_f2636; assert_in_delta(0.0, (worksheet.lever_graphs_f2636||0), 0.002); end
  def test_lever_graphs_g2636; assert_in_delta(0.0, (worksheet.lever_graphs_g2636||0), 0.002); end
  def test_lever_graphs_h2636; assert_in_delta(0.0, (worksheet.lever_graphs_h2636||0), 0.002); end
  def test_lever_graphs_i2636; assert_in_delta(0.0, (worksheet.lever_graphs_i2636||0), 0.002); end
  def test_lever_graphs_j2636; assert_in_delta(0.0, (worksheet.lever_graphs_j2636||0), 0.002); end
  def test_lever_graphs_k2636; assert_in_delta(0.0, (worksheet.lever_graphs_k2636||0), 0.002); end
  def test_lever_graphs_l2636; assert_in_delta(0.0, (worksheet.lever_graphs_l2636||0), 0.002); end
  def test_lever_graphs_m2636; assert_in_delta(0.0, (worksheet.lever_graphs_m2636||0), 0.002); end
  def test_lever_graphs_n2636; assert_in_delta(0.0, (worksheet.lever_graphs_n2636||0), 0.002); end
  def test_lever_graphs_o2636; assert_in_delta(0.0, (worksheet.lever_graphs_o2636||0), 0.002); end
  def test_lever_graphs_p2636; assert_in_delta(0.0, (worksheet.lever_graphs_p2636||0), 0.002); end
  def test_lever_graphs_q2636; assert_in_delta(0.0, (worksheet.lever_graphs_q2636||0), 0.002); end
  def test_lever_graphs_r2636; assert_in_delta(0.0, (worksheet.lever_graphs_r2636||0), 0.002); end
  def test_lever_graphs_s2636; assert_in_delta(0.05, worksheet.lever_graphs_s2636, 0.002); end
  def test_lever_graphs_t2636; assert_in_delta(0.0, (worksheet.lever_graphs_t2636||0), 0.002); end
  def test_lever_graphs_u2636; assert_in_delta(0.0, (worksheet.lever_graphs_u2636||0), 0.002); end
  def test_lever_graphs_d2637; assert_equal("2050: Level 2", worksheet.lever_graphs_d2637); end
  def test_lever_graphs_e2637; assert_in_delta(0.05, worksheet.lever_graphs_e2637, 0.002); end
  def test_lever_graphs_f2637; assert_in_delta(0.0, (worksheet.lever_graphs_f2637||0), 0.002); end
  def test_lever_graphs_g2637; assert_in_delta(0.0, (worksheet.lever_graphs_g2637||0), 0.002); end
  def test_lever_graphs_h2637; assert_in_delta(0.0, (worksheet.lever_graphs_h2637||0), 0.002); end
  def test_lever_graphs_i2637; assert_in_delta(0.025, worksheet.lever_graphs_i2637, 0.002); end
  def test_lever_graphs_j2637; assert_in_delta(0.025, worksheet.lever_graphs_j2637, 0.002); end
  def test_lever_graphs_k2637; assert_in_delta(0.025, worksheet.lever_graphs_k2637, 0.002); end
  def test_lever_graphs_l2637; assert_in_delta(0.05, worksheet.lever_graphs_l2637, 0.002); end
  def test_lever_graphs_m2637; assert_in_delta(0.075, worksheet.lever_graphs_m2637, 0.002); end
  def test_lever_graphs_n2637; assert_in_delta(0.075, worksheet.lever_graphs_n2637, 0.002); end
  def test_lever_graphs_o2637; assert_in_delta(0.05, worksheet.lever_graphs_o2637, 0.002); end
  def test_lever_graphs_p2637; assert_in_delta(0.2, worksheet.lever_graphs_p2637, 0.002); end
  def test_lever_graphs_q2637; assert_in_delta(0.2, worksheet.lever_graphs_q2637, 0.002); end
  def test_lever_graphs_r2637; assert_in_delta(0.2, worksheet.lever_graphs_r2637, 0.002); end
  def test_lever_graphs_s2637; assert_in_delta(0.09, worksheet.lever_graphs_s2637, 0.002); end
  def test_lever_graphs_t2637; assert_in_delta(0.2, worksheet.lever_graphs_t2637, 0.002); end
  def test_lever_graphs_u2637; assert_in_delta(0.0, (worksheet.lever_graphs_u2637||0), 0.002); end
  def test_lever_graphs_d2638; assert_equal("2050: Level 3", worksheet.lever_graphs_d2638); end
  def test_lever_graphs_e2638; assert_in_delta(0.07, worksheet.lever_graphs_e2638, 0.002); end
  def test_lever_graphs_f2638; assert_in_delta(0.0, (worksheet.lever_graphs_f2638||0), 0.002); end
  def test_lever_graphs_g2638; assert_in_delta(0.0, (worksheet.lever_graphs_g2638||0), 0.002); end
  def test_lever_graphs_h2638; assert_in_delta(0.0, (worksheet.lever_graphs_h2638||0), 0.002); end
  def test_lever_graphs_i2638; assert_in_delta(0.05, worksheet.lever_graphs_i2638, 0.002); end
  def test_lever_graphs_j2638; assert_in_delta(0.05, worksheet.lever_graphs_j2638, 0.002); end
  def test_lever_graphs_k2638; assert_in_delta(0.05, worksheet.lever_graphs_k2638, 0.002); end
  def test_lever_graphs_l2638; assert_in_delta(0.1, worksheet.lever_graphs_l2638, 0.002); end
  def test_lever_graphs_m2638; assert_in_delta(0.15, worksheet.lever_graphs_m2638, 0.002); end
  def test_lever_graphs_n2638; assert_in_delta(0.15, worksheet.lever_graphs_n2638, 0.002); end
  def test_lever_graphs_o2638; assert_in_delta(0.1, worksheet.lever_graphs_o2638, 0.002); end
  def test_lever_graphs_p2638; assert_in_delta(0.3, worksheet.lever_graphs_p2638, 0.002); end
  def test_lever_graphs_q2638; assert_in_delta(0.3, worksheet.lever_graphs_q2638, 0.002); end
  def test_lever_graphs_r2638; assert_in_delta(0.3, worksheet.lever_graphs_r2638, 0.002); end
  def test_lever_graphs_s2638; assert_in_delta(0.18, worksheet.lever_graphs_s2638, 0.002); end
  def test_lever_graphs_t2638; assert_in_delta(0.3, worksheet.lever_graphs_t2638, 0.002); end
  def test_lever_graphs_u2638; assert_in_delta(0.0, (worksheet.lever_graphs_u2638||0), 0.002); end
  def test_lever_graphs_d2639; assert_equal("2050: Level 4", worksheet.lever_graphs_d2639); end
  def test_lever_graphs_e2639; assert_in_delta(0.1, worksheet.lever_graphs_e2639, 0.002); end
  def test_lever_graphs_f2639; assert_in_delta(0.0, (worksheet.lever_graphs_f2639||0), 0.002); end
  def test_lever_graphs_g2639; assert_in_delta(0.0, (worksheet.lever_graphs_g2639||0), 0.002); end
  def test_lever_graphs_h2639; assert_in_delta(0.0, (worksheet.lever_graphs_h2639||0), 0.002); end
  def test_lever_graphs_i2639; assert_in_delta(0.1, worksheet.lever_graphs_i2639, 0.002); end
  def test_lever_graphs_j2639; assert_in_delta(0.1, worksheet.lever_graphs_j2639, 0.002); end
  def test_lever_graphs_k2639; assert_in_delta(0.1, worksheet.lever_graphs_k2639, 0.002); end
  def test_lever_graphs_l2639; assert_in_delta(0.2, worksheet.lever_graphs_l2639, 0.002); end
  def test_lever_graphs_m2639; assert_in_delta(0.3, worksheet.lever_graphs_m2639, 0.002); end
  def test_lever_graphs_n2639; assert_in_delta(0.3, worksheet.lever_graphs_n2639, 0.002); end
  def test_lever_graphs_o2639; assert_in_delta(0.2, worksheet.lever_graphs_o2639, 0.002); end
  def test_lever_graphs_p2639; assert_in_delta(0.4, worksheet.lever_graphs_p2639, 0.002); end
  def test_lever_graphs_q2639; assert_in_delta(0.4, worksheet.lever_graphs_q2639, 0.002); end
  def test_lever_graphs_r2639; assert_in_delta(0.4, worksheet.lever_graphs_r2639, 0.002); end
  def test_lever_graphs_s2639; assert_in_delta(0.3, worksheet.lever_graphs_s2639, 0.002); end
  def test_lever_graphs_t2639; assert_in_delta(0.4, worksheet.lever_graphs_t2639, 0.002); end
  def test_lever_graphs_u2639; assert_in_delta(0.0, (worksheet.lever_graphs_u2639||0), 0.002); end
  def test_lever_graphs_c2740; assert_equal("1975", worksheet.lever_graphs_c2740); end
  def test_lever_graphs_d2740; assert_equal("1980", worksheet.lever_graphs_d2740); end
  def test_lever_graphs_e2740; assert_equal("1985", worksheet.lever_graphs_e2740); end
  def test_lever_graphs_f2740; assert_equal("1990", worksheet.lever_graphs_f2740); end
  def test_lever_graphs_g2740; assert_equal("1995", worksheet.lever_graphs_g2740); end
  def test_lever_graphs_h2740; assert_equal("2000", worksheet.lever_graphs_h2740); end
  def test_lever_graphs_i2740; assert_equal("2005", worksheet.lever_graphs_i2740); end
  def test_lever_graphs_j2740; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2740, 0.002); end
  def test_lever_graphs_k2740; assert_equal("2011", worksheet.lever_graphs_k2740); end
  def test_lever_graphs_l2740; assert_equal("2015", worksheet.lever_graphs_l2740); end
  def test_lever_graphs_m2740; assert_equal("2020", worksheet.lever_graphs_m2740); end
  def test_lever_graphs_n2740; assert_equal("2025", worksheet.lever_graphs_n2740); end
  def test_lever_graphs_o2740; assert_equal("2030", worksheet.lever_graphs_o2740); end
  def test_lever_graphs_p2740; assert_equal("2035", worksheet.lever_graphs_p2740); end
  def test_lever_graphs_q2740; assert_equal("2040", worksheet.lever_graphs_q2740); end
  def test_lever_graphs_r2740; assert_equal("2045", worksheet.lever_graphs_r2740); end
  def test_lever_graphs_s2740; assert_equal("2050", worksheet.lever_graphs_s2740); end
  def test_lever_graphs_b2741; assert_equal("Historic data", worksheet.lever_graphs_b2741); end
  def test_lever_graphs_b2742; assert_in_delta(1.0, worksheet.lever_graphs_b2742, 0.002); end
  def test_lever_graphs_k2742; assert_in_delta(0.0, (worksheet.lever_graphs_k2742||0), 0.002); end
  def test_lever_graphs_l2742; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2742, 0.002); end
  def test_lever_graphs_m2742; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_m2742, 0.002); end
  def test_lever_graphs_n2742; assert_in_delta(0.0018315018315018315, worksheet.lever_graphs_n2742, 0.002); end
  def test_lever_graphs_o2742; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_o2742, 0.002); end
  def test_lever_graphs_p2742; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_p2742, 0.002); end
  def test_lever_graphs_q2742; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_q2742, 0.002); end
  def test_lever_graphs_r2742; assert_in_delta(0.0003663003663003663, worksheet.lever_graphs_r2742, 0.002); end
  def test_lever_graphs_s2742; assert_in_delta(0.0, (worksheet.lever_graphs_s2742||0), 0.002); end
  def test_lever_graphs_b2743; assert_in_epsilon(2.0, worksheet.lever_graphs_b2743, 0.002); end
  def test_lever_graphs_k2743; assert_in_delta(0.0, (worksheet.lever_graphs_k2743||0), 0.002); end
  def test_lever_graphs_l2743; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2743, 0.002); end
  def test_lever_graphs_m2743; assert_in_delta(0.0057692307692307696, worksheet.lever_graphs_m2743, 0.002); end
  def test_lever_graphs_n2743; assert_in_delta(0.008974358974358974, worksheet.lever_graphs_n2743, 0.002); end
  def test_lever_graphs_o2743; assert_in_delta(0.01217948717948718, worksheet.lever_graphs_o2743, 0.002); end
  def test_lever_graphs_p2743; assert_in_delta(0.015384615384615384, worksheet.lever_graphs_p2743, 0.002); end
  def test_lever_graphs_q2743; assert_in_delta(0.01858974358974359, worksheet.lever_graphs_q2743, 0.002); end
  def test_lever_graphs_r2743; assert_in_delta(0.021794871794871797, worksheet.lever_graphs_r2743, 0.002); end
  def test_lever_graphs_s2743; assert_in_delta(0.025, worksheet.lever_graphs_s2743, 0.002); end
  def test_lever_graphs_b2744; assert_in_epsilon(3.0, worksheet.lever_graphs_b2744, 0.002); end
  def test_lever_graphs_k2744; assert_in_delta(0.0, (worksheet.lever_graphs_k2744||0), 0.002); end
  def test_lever_graphs_l2744; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2744, 0.002); end
  def test_lever_graphs_m2744; assert_in_delta(0.009340659340659342, worksheet.lever_graphs_m2744, 0.002); end
  def test_lever_graphs_n2744; assert_in_delta(0.01611721611721612, worksheet.lever_graphs_n2744, 0.002); end
  def test_lever_graphs_o2744; assert_in_delta(0.0228937728937729, worksheet.lever_graphs_o2744, 0.002); end
  def test_lever_graphs_p2744; assert_in_delta(0.029670329670329676, worksheet.lever_graphs_p2744, 0.002); end
  def test_lever_graphs_q2744; assert_in_delta(0.03644688644688645, worksheet.lever_graphs_q2744, 0.002); end
  def test_lever_graphs_r2744; assert_in_delta(0.04322344322344323, worksheet.lever_graphs_r2744, 0.002); end
  def test_lever_graphs_s2744; assert_in_delta(0.05, worksheet.lever_graphs_s2744, 0.002); end
  def test_lever_graphs_b2745; assert_in_epsilon(4.0, worksheet.lever_graphs_b2745, 0.002); end
  def test_lever_graphs_k2745; assert_in_delta(0.0, (worksheet.lever_graphs_k2745||0), 0.002); end
  def test_lever_graphs_l2745; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2745, 0.002); end
  def test_lever_graphs_m2745; assert_in_delta(0.016483516483516484, worksheet.lever_graphs_m2745, 0.002); end
  def test_lever_graphs_n2745; assert_in_delta(0.030402930402930402, worksheet.lever_graphs_n2745, 0.002); end
  def test_lever_graphs_o2745; assert_in_delta(0.04432234432234432, worksheet.lever_graphs_o2745, 0.002); end
  def test_lever_graphs_p2745; assert_in_delta(0.058241758241758236, worksheet.lever_graphs_p2745, 0.002); end
  def test_lever_graphs_q2745; assert_in_delta(0.07216117216117217, worksheet.lever_graphs_q2745, 0.002); end
  def test_lever_graphs_r2745; assert_in_delta(0.08608058608058608, worksheet.lever_graphs_r2745, 0.002); end
  def test_lever_graphs_s2745; assert_in_delta(0.1, worksheet.lever_graphs_s2745, 0.002); end
  def test_lever_graphs_c2768; assert_equal("1975", worksheet.lever_graphs_c2768); end
  def test_lever_graphs_d2768; assert_equal("1980", worksheet.lever_graphs_d2768); end
  def test_lever_graphs_e2768; assert_equal("1985", worksheet.lever_graphs_e2768); end
  def test_lever_graphs_f2768; assert_equal("1990", worksheet.lever_graphs_f2768); end
  def test_lever_graphs_g2768; assert_equal("1995", worksheet.lever_graphs_g2768); end
  def test_lever_graphs_h2768; assert_equal("2000", worksheet.lever_graphs_h2768); end
  def test_lever_graphs_i2768; assert_equal("2005", worksheet.lever_graphs_i2768); end
  def test_lever_graphs_j2768; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2768, 0.002); end
  def test_lever_graphs_k2768; assert_equal("2011", worksheet.lever_graphs_k2768); end
  def test_lever_graphs_l2768; assert_equal("2015", worksheet.lever_graphs_l2768); end
  def test_lever_graphs_m2768; assert_equal("2020", worksheet.lever_graphs_m2768); end
  def test_lever_graphs_n2768; assert_equal("2025", worksheet.lever_graphs_n2768); end
  def test_lever_graphs_o2768; assert_equal("2030", worksheet.lever_graphs_o2768); end
  def test_lever_graphs_p2768; assert_equal("2035", worksheet.lever_graphs_p2768); end
  def test_lever_graphs_q2768; assert_equal("2040", worksheet.lever_graphs_q2768); end
  def test_lever_graphs_r2768; assert_equal("2045", worksheet.lever_graphs_r2768); end
  def test_lever_graphs_s2768; assert_equal("2050", worksheet.lever_graphs_s2768); end
  def test_lever_graphs_b2769; assert_equal("Historic data", worksheet.lever_graphs_b2769); end
  def test_lever_graphs_b2770; assert_in_delta(1.0, worksheet.lever_graphs_b2770, 0.002); end
  def test_lever_graphs_k2770; assert_in_delta(0.0, (worksheet.lever_graphs_k2770||0), 0.002); end
  def test_lever_graphs_l2770; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2770, 0.002); end
  def test_lever_graphs_m2770; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2770, 0.002); end
  def test_lever_graphs_n2770; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2770, 0.002); end
  def test_lever_graphs_o2770; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2770, 0.002); end
  def test_lever_graphs_p2770; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2770, 0.002); end
  def test_lever_graphs_q2770; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2770, 0.002); end
  def test_lever_graphs_r2770; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2770, 0.002); end
  def test_lever_graphs_s2770; assert_in_delta(0.0, (worksheet.lever_graphs_s2770||0), 0.002); end
  def test_lever_graphs_b2771; assert_in_epsilon(2.0, worksheet.lever_graphs_b2771, 0.002); end
  def test_lever_graphs_k2771; assert_in_delta(0.0, (worksheet.lever_graphs_k2771||0), 0.002); end
  def test_lever_graphs_l2771; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2771, 0.002); end
  def test_lever_graphs_m2771; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2771, 0.002); end
  def test_lever_graphs_n2771; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2771, 0.002); end
  def test_lever_graphs_o2771; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2771, 0.002); end
  def test_lever_graphs_p2771; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2771, 0.002); end
  def test_lever_graphs_q2771; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2771, 0.002); end
  def test_lever_graphs_r2771; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2771, 0.002); end
  def test_lever_graphs_s2771; assert_in_delta(0.05, worksheet.lever_graphs_s2771, 0.002); end
  def test_lever_graphs_b2772; assert_in_epsilon(3.0, worksheet.lever_graphs_b2772, 0.002); end
  def test_lever_graphs_k2772; assert_in_delta(0.0, (worksheet.lever_graphs_k2772||0), 0.002); end
  def test_lever_graphs_l2772; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2772, 0.002); end
  def test_lever_graphs_m2772; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2772, 0.002); end
  def test_lever_graphs_n2772; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2772, 0.002); end
  def test_lever_graphs_o2772; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2772, 0.002); end
  def test_lever_graphs_p2772; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2772, 0.002); end
  def test_lever_graphs_q2772; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2772, 0.002); end
  def test_lever_graphs_r2772; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2772, 0.002); end
  def test_lever_graphs_s2772; assert_in_delta(0.1, worksheet.lever_graphs_s2772, 0.002); end
  def test_lever_graphs_b2773; assert_in_epsilon(4.0, worksheet.lever_graphs_b2773, 0.002); end
  def test_lever_graphs_k2773; assert_in_delta(0.0, (worksheet.lever_graphs_k2773||0), 0.002); end
  def test_lever_graphs_l2773; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2773, 0.002); end
  def test_lever_graphs_m2773; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2773, 0.002); end
  def test_lever_graphs_n2773; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2773, 0.002); end
  def test_lever_graphs_o2773; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2773, 0.002); end
  def test_lever_graphs_p2773; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2773, 0.002); end
  def test_lever_graphs_q2773; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2773, 0.002); end
  def test_lever_graphs_r2773; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2773, 0.002); end
  def test_lever_graphs_s2773; assert_in_delta(0.2, worksheet.lever_graphs_s2773, 0.002); end
  def test_lever_graphs_c2806; assert_equal("1975", worksheet.lever_graphs_c2806); end
  def test_lever_graphs_d2806; assert_equal("1980", worksheet.lever_graphs_d2806); end
  def test_lever_graphs_e2806; assert_equal("1985", worksheet.lever_graphs_e2806); end
  def test_lever_graphs_f2806; assert_equal("1990", worksheet.lever_graphs_f2806); end
  def test_lever_graphs_g2806; assert_equal("1995", worksheet.lever_graphs_g2806); end
  def test_lever_graphs_h2806; assert_equal("2000", worksheet.lever_graphs_h2806); end
  def test_lever_graphs_i2806; assert_equal("2005", worksheet.lever_graphs_i2806); end
  def test_lever_graphs_j2806; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2806, 0.002); end
  def test_lever_graphs_k2806; assert_equal("2011", worksheet.lever_graphs_k2806); end
  def test_lever_graphs_l2806; assert_equal("2015", worksheet.lever_graphs_l2806); end
  def test_lever_graphs_m2806; assert_equal("2020", worksheet.lever_graphs_m2806); end
  def test_lever_graphs_n2806; assert_equal("2025", worksheet.lever_graphs_n2806); end
  def test_lever_graphs_o2806; assert_equal("2030", worksheet.lever_graphs_o2806); end
  def test_lever_graphs_p2806; assert_equal("2035", worksheet.lever_graphs_p2806); end
  def test_lever_graphs_q2806; assert_equal("2040", worksheet.lever_graphs_q2806); end
  def test_lever_graphs_r2806; assert_equal("2045", worksheet.lever_graphs_r2806); end
  def test_lever_graphs_s2806; assert_equal("2050", worksheet.lever_graphs_s2806); end
  def test_lever_graphs_b2807; assert_equal("Historic data", worksheet.lever_graphs_b2807); end
  def test_lever_graphs_b2808; assert_in_delta(1.0, worksheet.lever_graphs_b2808, 0.002); end
  def test_lever_graphs_k2808; assert_in_delta(0.0, (worksheet.lever_graphs_k2808||0), 0.002); end
  def test_lever_graphs_l2808; assert_in_delta(0.0, (worksheet.lever_graphs_l2808||0), 0.002); end
  def test_lever_graphs_m2808; assert_in_delta(0.0, (worksheet.lever_graphs_m2808||0), 0.002); end
  def test_lever_graphs_n2808; assert_in_delta(0.0, (worksheet.lever_graphs_n2808||0), 0.002); end
  def test_lever_graphs_o2808; assert_in_delta(0.0, (worksheet.lever_graphs_o2808||0), 0.002); end
  def test_lever_graphs_p2808; assert_in_delta(0.0, (worksheet.lever_graphs_p2808||0), 0.002); end
  def test_lever_graphs_q2808; assert_in_delta(0.0, (worksheet.lever_graphs_q2808||0), 0.002); end
  def test_lever_graphs_r2808; assert_in_delta(0.0, (worksheet.lever_graphs_r2808||0), 0.002); end
  def test_lever_graphs_s2808; assert_in_delta(0.0, (worksheet.lever_graphs_s2808||0), 0.002); end
  def test_lever_graphs_b2809; assert_in_epsilon(2.0, worksheet.lever_graphs_b2809, 0.002); end
  def test_lever_graphs_k2809; assert_in_delta(0.0, (worksheet.lever_graphs_k2809||0), 0.002); end
  def test_lever_graphs_l2809; assert_in_delta(0.0, (worksheet.lever_graphs_l2809||0), 0.002); end
  def test_lever_graphs_m2809; assert_in_delta(0.0, (worksheet.lever_graphs_m2809||0), 0.002); end
  def test_lever_graphs_n2809; assert_in_delta(0.0, (worksheet.lever_graphs_n2809||0), 0.002); end
  def test_lever_graphs_o2809; assert_in_delta(0.0, (worksheet.lever_graphs_o2809||0), 0.002); end
  def test_lever_graphs_p2809; assert_in_delta(0.0, (worksheet.lever_graphs_p2809||0), 0.002); end
  def test_lever_graphs_q2809; assert_in_delta(0.0, (worksheet.lever_graphs_q2809||0), 0.002); end
  def test_lever_graphs_r2809; assert_in_delta(0.0, (worksheet.lever_graphs_r2809||0), 0.002); end
  def test_lever_graphs_s2809; assert_in_delta(0.0, (worksheet.lever_graphs_s2809||0), 0.002); end
  def test_lever_graphs_b2810; assert_in_epsilon(3.0, worksheet.lever_graphs_b2810, 0.002); end
  def test_lever_graphs_k2810; assert_in_delta(0.0, (worksheet.lever_graphs_k2810||0), 0.002); end
  def test_lever_graphs_l2810; assert_in_delta(0.0, (worksheet.lever_graphs_l2810||0), 0.002); end
  def test_lever_graphs_m2810; assert_in_delta(0.0, (worksheet.lever_graphs_m2810||0), 0.002); end
  def test_lever_graphs_n2810; assert_in_delta(0.0, (worksheet.lever_graphs_n2810||0), 0.002); end
  def test_lever_graphs_o2810; assert_in_delta(0.0, (worksheet.lever_graphs_o2810||0), 0.002); end
  def test_lever_graphs_p2810; assert_in_delta(0.0, (worksheet.lever_graphs_p2810||0), 0.002); end
  def test_lever_graphs_q2810; assert_in_delta(0.0, (worksheet.lever_graphs_q2810||0), 0.002); end
  def test_lever_graphs_r2810; assert_in_delta(0.0, (worksheet.lever_graphs_r2810||0), 0.002); end
  def test_lever_graphs_s2810; assert_in_delta(0.0, (worksheet.lever_graphs_s2810||0), 0.002); end
  def test_lever_graphs_b2811; assert_in_epsilon(4.0, worksheet.lever_graphs_b2811, 0.002); end
  def test_lever_graphs_k2811; assert_in_delta(0.0, (worksheet.lever_graphs_k2811||0), 0.002); end
  def test_lever_graphs_l2811; assert_in_delta(0.0, (worksheet.lever_graphs_l2811||0), 0.002); end
  def test_lever_graphs_m2811; assert_in_delta(0.0, (worksheet.lever_graphs_m2811||0), 0.002); end
  def test_lever_graphs_n2811; assert_in_delta(0.0, (worksheet.lever_graphs_n2811||0), 0.002); end
  def test_lever_graphs_o2811; assert_in_delta(0.0, (worksheet.lever_graphs_o2811||0), 0.002); end
  def test_lever_graphs_p2811; assert_in_delta(0.0, (worksheet.lever_graphs_p2811||0), 0.002); end
  def test_lever_graphs_q2811; assert_in_delta(0.0, (worksheet.lever_graphs_q2811||0), 0.002); end
  def test_lever_graphs_r2811; assert_in_delta(0.0, (worksheet.lever_graphs_r2811||0), 0.002); end
  def test_lever_graphs_s2811; assert_in_delta(0.0, (worksheet.lever_graphs_s2811||0), 0.002); end
  def test_lever_graphs_c2796; assert_equal("1975", worksheet.lever_graphs_c2796); end
  def test_lever_graphs_d2796; assert_equal("1980", worksheet.lever_graphs_d2796); end
  def test_lever_graphs_e2796; assert_equal("1985", worksheet.lever_graphs_e2796); end
  def test_lever_graphs_f2796; assert_equal("1990", worksheet.lever_graphs_f2796); end
  def test_lever_graphs_g2796; assert_equal("1995", worksheet.lever_graphs_g2796); end
  def test_lever_graphs_h2796; assert_equal("2000", worksheet.lever_graphs_h2796); end
  def test_lever_graphs_i2796; assert_equal("2005", worksheet.lever_graphs_i2796); end
  def test_lever_graphs_j2796; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2796, 0.002); end
  def test_lever_graphs_k2796; assert_equal("2011", worksheet.lever_graphs_k2796); end
  def test_lever_graphs_l2796; assert_equal("2015", worksheet.lever_graphs_l2796); end
  def test_lever_graphs_m2796; assert_equal("2020", worksheet.lever_graphs_m2796); end
  def test_lever_graphs_n2796; assert_equal("2025", worksheet.lever_graphs_n2796); end
  def test_lever_graphs_o2796; assert_equal("2030", worksheet.lever_graphs_o2796); end
  def test_lever_graphs_p2796; assert_equal("2035", worksheet.lever_graphs_p2796); end
  def test_lever_graphs_q2796; assert_equal("2040", worksheet.lever_graphs_q2796); end
  def test_lever_graphs_r2796; assert_equal("2045", worksheet.lever_graphs_r2796); end
  def test_lever_graphs_s2796; assert_equal("2050", worksheet.lever_graphs_s2796); end
  def test_lever_graphs_b2797; assert_equal("Historic data", worksheet.lever_graphs_b2797); end
  def test_lever_graphs_b2798; assert_in_delta(1.0, worksheet.lever_graphs_b2798, 0.002); end
  def test_lever_graphs_k2798; assert_in_delta(0.0, (worksheet.lever_graphs_k2798||0), 0.002); end
  def test_lever_graphs_l2798; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2798, 0.002); end
  def test_lever_graphs_m2798; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2798, 0.002); end
  def test_lever_graphs_n2798; assert_in_delta(0.014652014652014652, worksheet.lever_graphs_n2798, 0.002); end
  def test_lever_graphs_o2798; assert_in_delta(0.011721611721611722, worksheet.lever_graphs_o2798, 0.002); end
  def test_lever_graphs_p2798; assert_in_delta(0.008791208791208791, worksheet.lever_graphs_p2798, 0.002); end
  def test_lever_graphs_q2798; assert_in_delta(0.005860805860805861, worksheet.lever_graphs_q2798, 0.002); end
  def test_lever_graphs_r2798; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_r2798, 0.002); end
  def test_lever_graphs_s2798; assert_in_delta(0.0, (worksheet.lever_graphs_s2798||0), 0.002); end
  def test_lever_graphs_b2799; assert_in_epsilon(2.0, worksheet.lever_graphs_b2799, 0.002); end
  def test_lever_graphs_k2799; assert_in_delta(0.0, (worksheet.lever_graphs_k2799||0), 0.002); end
  def test_lever_graphs_l2799; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2799, 0.002); end
  def test_lever_graphs_m2799; assert_in_delta(0.046153846153846156, worksheet.lever_graphs_m2799, 0.002); end
  def test_lever_graphs_n2799; assert_in_delta(0.07179487179487179, worksheet.lever_graphs_n2799, 0.002); end
  def test_lever_graphs_o2799; assert_in_delta(0.09743589743589744, worksheet.lever_graphs_o2799, 0.002); end
  def test_lever_graphs_p2799; assert_in_delta(0.12307692307692307, worksheet.lever_graphs_p2799, 0.002); end
  def test_lever_graphs_q2799; assert_in_delta(0.14871794871794872, worksheet.lever_graphs_q2799, 0.002); end
  def test_lever_graphs_r2799; assert_in_delta(0.17435897435897438, worksheet.lever_graphs_r2799, 0.002); end
  def test_lever_graphs_s2799; assert_in_delta(0.2, worksheet.lever_graphs_s2799, 0.002); end
  def test_lever_graphs_b2800; assert_in_epsilon(3.0, worksheet.lever_graphs_b2800, 0.002); end
  def test_lever_graphs_k2800; assert_in_delta(0.0, (worksheet.lever_graphs_k2800||0), 0.002); end
  def test_lever_graphs_l2800; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2800, 0.002); end
  def test_lever_graphs_m2800; assert_in_delta(0.06043956043956045, worksheet.lever_graphs_m2800, 0.002); end
  def test_lever_graphs_n2800; assert_in_delta(0.10036630036630037, worksheet.lever_graphs_n2800, 0.002); end
  def test_lever_graphs_o2800; assert_in_delta(0.1402930402930403, worksheet.lever_graphs_o2800, 0.002); end
  def test_lever_graphs_p2800; assert_in_delta(0.18021978021978025, worksheet.lever_graphs_p2800, 0.002); end
  def test_lever_graphs_q2800; assert_in_delta(0.22014652014652017, worksheet.lever_graphs_q2800, 0.002); end
  def test_lever_graphs_r2800; assert_in_delta(0.2600732600732601, worksheet.lever_graphs_r2800, 0.002); end
  def test_lever_graphs_s2800; assert_in_delta(0.3, worksheet.lever_graphs_s2800, 0.002); end
  def test_lever_graphs_b2801; assert_in_epsilon(4.0, worksheet.lever_graphs_b2801, 0.002); end
  def test_lever_graphs_k2801; assert_in_delta(0.0, (worksheet.lever_graphs_k2801||0), 0.002); end
  def test_lever_graphs_l2801; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2801, 0.002); end
  def test_lever_graphs_m2801; assert_in_delta(0.07472527472527474, worksheet.lever_graphs_m2801, 0.002); end
  def test_lever_graphs_n2801; assert_in_delta(0.12893772893772895, worksheet.lever_graphs_n2801, 0.002); end
  def test_lever_graphs_o2801; assert_in_delta(0.1831501831501832, worksheet.lever_graphs_o2801, 0.002); end
  def test_lever_graphs_p2801; assert_in_delta(0.2373626373626374, worksheet.lever_graphs_p2801, 0.002); end
  def test_lever_graphs_q2801; assert_in_delta(0.2915750915750916, worksheet.lever_graphs_q2801, 0.002); end
  def test_lever_graphs_r2801; assert_in_delta(0.34578754578754584, worksheet.lever_graphs_r2801, 0.002); end
  def test_lever_graphs_s2801; assert_in_delta(0.4, worksheet.lever_graphs_s2801, 0.002); end
  def test_lever_graphs_c2730; assert_equal("1975", worksheet.lever_graphs_c2730); end
  def test_lever_graphs_d2730; assert_equal("1980", worksheet.lever_graphs_d2730); end
  def test_lever_graphs_e2730; assert_equal("1985", worksheet.lever_graphs_e2730); end
  def test_lever_graphs_f2730; assert_equal("1990", worksheet.lever_graphs_f2730); end
  def test_lever_graphs_g2730; assert_equal("1995", worksheet.lever_graphs_g2730); end
  def test_lever_graphs_h2730; assert_equal("2000", worksheet.lever_graphs_h2730); end
  def test_lever_graphs_i2730; assert_equal("2005", worksheet.lever_graphs_i2730); end
  def test_lever_graphs_j2730; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2730, 0.002); end
  def test_lever_graphs_k2730; assert_equal("2011", worksheet.lever_graphs_k2730); end
  def test_lever_graphs_l2730; assert_equal("2015", worksheet.lever_graphs_l2730); end
  def test_lever_graphs_m2730; assert_equal("2020", worksheet.lever_graphs_m2730); end
  def test_lever_graphs_n2730; assert_equal("2025", worksheet.lever_graphs_n2730); end
  def test_lever_graphs_o2730; assert_equal("2030", worksheet.lever_graphs_o2730); end
  def test_lever_graphs_p2730; assert_equal("2035", worksheet.lever_graphs_p2730); end
  def test_lever_graphs_q2730; assert_equal("2040", worksheet.lever_graphs_q2730); end
  def test_lever_graphs_r2730; assert_equal("2045", worksheet.lever_graphs_r2730); end
  def test_lever_graphs_s2730; assert_equal("2050", worksheet.lever_graphs_s2730); end
  def test_lever_graphs_b2731; assert_equal("Historic data", worksheet.lever_graphs_b2731); end
  def test_lever_graphs_b2732; assert_in_delta(1.0, worksheet.lever_graphs_b2732, 0.002); end
  def test_lever_graphs_k2732; assert_in_delta(0.0, (worksheet.lever_graphs_k2732||0), 0.002); end
  def test_lever_graphs_l2732; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2732, 0.002); end
  def test_lever_graphs_m2732; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2732, 0.002); end
  def test_lever_graphs_n2732; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2732, 0.002); end
  def test_lever_graphs_o2732; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2732, 0.002); end
  def test_lever_graphs_p2732; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2732, 0.002); end
  def test_lever_graphs_q2732; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2732, 0.002); end
  def test_lever_graphs_r2732; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2732, 0.002); end
  def test_lever_graphs_s2732; assert_in_delta(0.0, (worksheet.lever_graphs_s2732||0), 0.002); end
  def test_lever_graphs_b2733; assert_in_epsilon(2.0, worksheet.lever_graphs_b2733, 0.002); end
  def test_lever_graphs_k2733; assert_in_delta(0.0, (worksheet.lever_graphs_k2733||0), 0.002); end
  def test_lever_graphs_l2733; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2733, 0.002); end
  def test_lever_graphs_m2733; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2733, 0.002); end
  def test_lever_graphs_n2733; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2733, 0.002); end
  def test_lever_graphs_o2733; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2733, 0.002); end
  def test_lever_graphs_p2733; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2733, 0.002); end
  def test_lever_graphs_q2733; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2733, 0.002); end
  def test_lever_graphs_r2733; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2733, 0.002); end
  def test_lever_graphs_s2733; assert_in_delta(0.05, worksheet.lever_graphs_s2733, 0.002); end
  def test_lever_graphs_b2734; assert_in_epsilon(3.0, worksheet.lever_graphs_b2734, 0.002); end
  def test_lever_graphs_k2734; assert_in_delta(0.0, (worksheet.lever_graphs_k2734||0), 0.002); end
  def test_lever_graphs_l2734; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2734, 0.002); end
  def test_lever_graphs_m2734; assert_in_delta(0.014395604395604396, worksheet.lever_graphs_m2734, 0.002); end
  def test_lever_graphs_n2734; assert_in_delta(0.023663003663003664, worksheet.lever_graphs_n2734, 0.002); end
  def test_lever_graphs_o2734; assert_in_delta(0.03293040293040293, worksheet.lever_graphs_o2734, 0.002); end
  def test_lever_graphs_p2734; assert_in_delta(0.042197802197802205, worksheet.lever_graphs_p2734, 0.002); end
  def test_lever_graphs_q2734; assert_in_delta(0.05146520146520148, worksheet.lever_graphs_q2734, 0.002); end
  def test_lever_graphs_r2734; assert_in_delta(0.06073260073260074, worksheet.lever_graphs_r2734, 0.002); end
  def test_lever_graphs_s2734; assert_in_delta(0.07, worksheet.lever_graphs_s2734, 0.002); end
  def test_lever_graphs_b2735; assert_in_epsilon(4.0, worksheet.lever_graphs_b2735, 0.002); end
  def test_lever_graphs_k2735; assert_in_delta(0.0, (worksheet.lever_graphs_k2735||0), 0.002); end
  def test_lever_graphs_l2735; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2735, 0.002); end
  def test_lever_graphs_m2735; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2735, 0.002); end
  def test_lever_graphs_n2735; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2735, 0.002); end
  def test_lever_graphs_o2735; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2735, 0.002); end
  def test_lever_graphs_p2735; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2735, 0.002); end
  def test_lever_graphs_q2735; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2735, 0.002); end
  def test_lever_graphs_r2735; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2735, 0.002); end
  def test_lever_graphs_s2735; assert_in_delta(0.1, worksheet.lever_graphs_s2735, 0.002); end
  def test_lever_graphs_c2709; assert_equal("1975", worksheet.lever_graphs_c2709); end
  def test_lever_graphs_d2709; assert_equal("1980", worksheet.lever_graphs_d2709); end
  def test_lever_graphs_e2709; assert_equal("1985", worksheet.lever_graphs_e2709); end
  def test_lever_graphs_f2709; assert_equal("1990", worksheet.lever_graphs_f2709); end
  def test_lever_graphs_g2709; assert_equal("1995", worksheet.lever_graphs_g2709); end
  def test_lever_graphs_h2709; assert_equal("2000", worksheet.lever_graphs_h2709); end
  def test_lever_graphs_i2709; assert_equal("2005", worksheet.lever_graphs_i2709); end
  def test_lever_graphs_j2709; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2709, 0.002); end
  def test_lever_graphs_k2709; assert_equal("2011", worksheet.lever_graphs_k2709); end
  def test_lever_graphs_l2709; assert_equal("2015", worksheet.lever_graphs_l2709); end
  def test_lever_graphs_m2709; assert_equal("2020", worksheet.lever_graphs_m2709); end
  def test_lever_graphs_n2709; assert_equal("2025", worksheet.lever_graphs_n2709); end
  def test_lever_graphs_o2709; assert_equal("2030", worksheet.lever_graphs_o2709); end
  def test_lever_graphs_p2709; assert_equal("2035", worksheet.lever_graphs_p2709); end
  def test_lever_graphs_q2709; assert_equal("2040", worksheet.lever_graphs_q2709); end
  def test_lever_graphs_r2709; assert_equal("2045", worksheet.lever_graphs_r2709); end
  def test_lever_graphs_s2709; assert_equal("2050", worksheet.lever_graphs_s2709); end
  def test_lever_graphs_b2710; assert_equal("Historic data", worksheet.lever_graphs_b2710); end
  def test_lever_graphs_b2711; assert_in_delta(1.0, worksheet.lever_graphs_b2711, 0.002); end
  def test_lever_graphs_k2711; assert_in_delta(0.0, (worksheet.lever_graphs_k2711||0), 0.002); end
  def test_lever_graphs_l2711; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2711, 0.002); end
  def test_lever_graphs_m2711; assert_in_delta(0.0032967032967032967, worksheet.lever_graphs_m2711, 0.002); end
  def test_lever_graphs_n2711; assert_in_delta(0.002747252747252747, worksheet.lever_graphs_n2711, 0.002); end
  def test_lever_graphs_o2711; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_o2711, 0.002); end
  def test_lever_graphs_p2711; assert_in_delta(0.0016483516483516484, worksheet.lever_graphs_p2711, 0.002); end
  def test_lever_graphs_q2711; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_q2711, 0.002); end
  def test_lever_graphs_r2711; assert_in_delta(0.0005494505494505495, worksheet.lever_graphs_r2711, 0.002); end
  def test_lever_graphs_s2711; assert_in_delta(0.0, (worksheet.lever_graphs_s2711||0), 0.002); end
  def test_lever_graphs_b2712; assert_in_epsilon(2.0, worksheet.lever_graphs_b2712, 0.002); end
  def test_lever_graphs_k2712; assert_in_delta(0.0, (worksheet.lever_graphs_k2712||0), 0.002); end
  def test_lever_graphs_l2712; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2712, 0.002); end
  def test_lever_graphs_m2712; assert_in_delta(0.008653846153846154, worksheet.lever_graphs_m2712, 0.002); end
  def test_lever_graphs_n2712; assert_in_delta(0.01346153846153846, worksheet.lever_graphs_n2712, 0.002); end
  def test_lever_graphs_o2712; assert_in_delta(0.01826923076923077, worksheet.lever_graphs_o2712, 0.002); end
  def test_lever_graphs_p2712; assert_in_delta(0.023076923076923075, worksheet.lever_graphs_p2712, 0.002); end
  def test_lever_graphs_q2712; assert_in_delta(0.027884615384615383, worksheet.lever_graphs_q2712, 0.002); end
  def test_lever_graphs_r2712; assert_in_delta(0.032692307692307694, worksheet.lever_graphs_r2712, 0.002); end
  def test_lever_graphs_s2712; assert_in_delta(0.037500000000000006, worksheet.lever_graphs_s2712, 0.002); end
  def test_lever_graphs_b2713; assert_in_epsilon(3.0, worksheet.lever_graphs_b2713, 0.002); end
  def test_lever_graphs_k2713; assert_in_delta(0.0, (worksheet.lever_graphs_k2713||0), 0.002); end
  def test_lever_graphs_l2713; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2713, 0.002); end
  def test_lever_graphs_m2713; assert_in_delta(0.011868131868131869, worksheet.lever_graphs_m2713, 0.002); end
  def test_lever_graphs_n2713; assert_in_delta(0.01989010989010989, worksheet.lever_graphs_n2713, 0.002); end
  def test_lever_graphs_o2713; assert_in_delta(0.027912087912087914, worksheet.lever_graphs_o2713, 0.002); end
  def test_lever_graphs_p2713; assert_in_delta(0.03593406593406594, worksheet.lever_graphs_p2713, 0.002); end
  def test_lever_graphs_q2713; assert_in_delta(0.043956043956043966, worksheet.lever_graphs_q2713, 0.002); end
  def test_lever_graphs_r2713; assert_in_delta(0.05197802197802198, worksheet.lever_graphs_r2713, 0.002); end
  def test_lever_graphs_s2713; assert_in_delta(0.060000000000000005, worksheet.lever_graphs_s2713, 0.002); end
  def test_lever_graphs_b2714; assert_in_epsilon(4.0, worksheet.lever_graphs_b2714, 0.002); end
  def test_lever_graphs_k2714; assert_in_delta(0.0, (worksheet.lever_graphs_k2714||0), 0.002); end
  def test_lever_graphs_l2714; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2714, 0.002); end
  def test_lever_graphs_m2714; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2714, 0.002); end
  def test_lever_graphs_n2714; assert_in_delta(0.03131868131868132, worksheet.lever_graphs_n2714, 0.002); end
  def test_lever_graphs_o2714; assert_in_delta(0.04505494505494506, worksheet.lever_graphs_o2714, 0.002); end
  def test_lever_graphs_p2714; assert_in_delta(0.05879120879120879, worksheet.lever_graphs_p2714, 0.002); end
  def test_lever_graphs_q2714; assert_in_delta(0.07252747252747253, worksheet.lever_graphs_q2714, 0.002); end
  def test_lever_graphs_r2714; assert_in_delta(0.08626373626373626, worksheet.lever_graphs_r2714, 0.002); end
  def test_lever_graphs_s2714; assert_in_delta(0.1, worksheet.lever_graphs_s2714, 0.002); end
  def test_lever_graphs_c2286; assert_equal("1975", worksheet.lever_graphs_c2286); end
  def test_lever_graphs_d2286; assert_equal("1980", worksheet.lever_graphs_d2286); end
  def test_lever_graphs_e2286; assert_equal("1985", worksheet.lever_graphs_e2286); end
  def test_lever_graphs_f2286; assert_equal("1990", worksheet.lever_graphs_f2286); end
  def test_lever_graphs_g2286; assert_equal("1995", worksheet.lever_graphs_g2286); end
  def test_lever_graphs_h2286; assert_equal("2000", worksheet.lever_graphs_h2286); end
  def test_lever_graphs_i2286; assert_equal("2005", worksheet.lever_graphs_i2286); end
  def test_lever_graphs_j2286; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2286, 0.002); end
  def test_lever_graphs_k2286; assert_equal("2011", worksheet.lever_graphs_k2286); end
  def test_lever_graphs_l2286; assert_equal("2015", worksheet.lever_graphs_l2286); end
  def test_lever_graphs_m2286; assert_equal("2020", worksheet.lever_graphs_m2286); end
  def test_lever_graphs_n2286; assert_equal("2025", worksheet.lever_graphs_n2286); end
  def test_lever_graphs_o2286; assert_equal("2030", worksheet.lever_graphs_o2286); end
  def test_lever_graphs_p2286; assert_equal("2035", worksheet.lever_graphs_p2286); end
  def test_lever_graphs_q2286; assert_equal("2040", worksheet.lever_graphs_q2286); end
  def test_lever_graphs_r2286; assert_equal("2045", worksheet.lever_graphs_r2286); end
  def test_lever_graphs_s2286; assert_equal("2050", worksheet.lever_graphs_s2286); end
  def test_lever_graphs_b2287; assert_equal("Historic data", worksheet.lever_graphs_b2287); end
  def test_lever_graphs_b2288; assert_in_delta(1.0, worksheet.lever_graphs_b2288, 0.002); end
  def test_lever_graphs_k2288; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2288, 0.002); end
  def test_lever_graphs_l2288; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2288, 0.002); end
  def test_lever_graphs_m2288; assert_in_epsilon(12.569076390371949, worksheet.lever_graphs_m2288, 0.002); end
  def test_lever_graphs_n2288; assert_in_epsilon(12.55082065124287, worksheet.lever_graphs_n2288, 0.002); end
  def test_lever_graphs_o2288; assert_in_epsilon(12.532564912113788, worksheet.lever_graphs_o2288, 0.002); end
  def test_lever_graphs_p2288; assert_in_epsilon(12.514309172984708, worksheet.lever_graphs_p2288, 0.002); end
  def test_lever_graphs_q2288; assert_in_epsilon(12.496053433855627, worksheet.lever_graphs_q2288, 0.002); end
  def test_lever_graphs_r2288; assert_in_epsilon(12.477797694726547, worksheet.lever_graphs_r2288, 0.002); end
  def test_lever_graphs_s2288; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_s2288, 0.002); end
  def test_lever_graphs_b2289; assert_in_epsilon(2.0, worksheet.lever_graphs_b2289, 0.002); end
  def test_lever_graphs_k2289; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2289, 0.002); end
  def test_lever_graphs_l2289; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2289, 0.002); end
  def test_lever_graphs_m2289; assert_in_epsilon(12.747069846880485, worksheet.lever_graphs_m2289, 0.002); end
  def test_lever_graphs_n2289; assert_in_epsilon(12.906807564259939, worksheet.lever_graphs_n2289, 0.002); end
  def test_lever_graphs_o2289; assert_in_epsilon(13.066545281639394, worksheet.lever_graphs_o2289, 0.002); end
  def test_lever_graphs_p2289; assert_in_epsilon(13.22628299901885, worksheet.lever_graphs_p2289, 0.002); end
  def test_lever_graphs_q2289; assert_in_epsilon(13.386020716398304, worksheet.lever_graphs_q2289, 0.002); end
  def test_lever_graphs_r2289; assert_in_epsilon(13.545758433777758, worksheet.lever_graphs_r2289, 0.002); end
  def test_lever_graphs_s2289; assert_in_epsilon(13.705496151157213, worksheet.lever_graphs_s2289, 0.002); end
  def test_lever_graphs_b2290; assert_in_epsilon(3.0, worksheet.lever_graphs_b2290, 0.002); end
  def test_lever_graphs_k2290; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2290, 0.002); end
  def test_lever_graphs_l2290; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2290, 0.002); end
  def test_lever_graphs_m2290; assert_in_epsilon(12.92506330338902, worksheet.lever_graphs_m2290, 0.002); end
  def test_lever_graphs_n2290; assert_in_epsilon(13.26279447727701, worksheet.lever_graphs_n2290, 0.002); end
  def test_lever_graphs_o2290; assert_in_epsilon(13.600525651165, worksheet.lever_graphs_o2290, 0.002); end
  def test_lever_graphs_p2290; assert_in_epsilon(13.938256825052989, worksheet.lever_graphs_p2290, 0.002); end
  def test_lever_graphs_q2290; assert_in_epsilon(14.275987998940979, worksheet.lever_graphs_q2290, 0.002); end
  def test_lever_graphs_r2290; assert_in_epsilon(14.613719172828969, worksheet.lever_graphs_r2290, 0.002); end
  def test_lever_graphs_s2290; assert_in_epsilon(14.951450346716959, worksheet.lever_graphs_s2290, 0.002); end
  def test_lever_graphs_b2291; assert_in_epsilon(4.0, worksheet.lever_graphs_b2291, 0.002); end
  def test_lever_graphs_k2291; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2291, 0.002); end
  def test_lever_graphs_l2291; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2291, 0.002); end
  def test_lever_graphs_m2291; assert_in_epsilon(13.103056759897555, worksheet.lever_graphs_m2291, 0.002); end
  def test_lever_graphs_n2291; assert_in_epsilon(13.618781390294082, worksheet.lever_graphs_n2291, 0.002); end
  def test_lever_graphs_o2291; assert_in_epsilon(14.134506020690607, worksheet.lever_graphs_o2291, 0.002); end
  def test_lever_graphs_p2291; assert_in_epsilon(14.650230651087131, worksheet.lever_graphs_p2291, 0.002); end
  def test_lever_graphs_q2291; assert_in_epsilon(15.165955281483658, worksheet.lever_graphs_q2291, 0.002); end
  def test_lever_graphs_r2291; assert_in_epsilon(15.681679911880183, worksheet.lever_graphs_r2291, 0.002); end
  def test_lever_graphs_s2291; assert_in_epsilon(16.197404542276708, worksheet.lever_graphs_s2291, 0.002); end
  def test_lever_graphs_c2296; assert_equal("1975", worksheet.lever_graphs_c2296); end
  def test_lever_graphs_d2296; assert_equal("1980", worksheet.lever_graphs_d2296); end
  def test_lever_graphs_e2296; assert_equal("1985", worksheet.lever_graphs_e2296); end
  def test_lever_graphs_f2296; assert_equal("1990", worksheet.lever_graphs_f2296); end
  def test_lever_graphs_g2296; assert_equal("1995", worksheet.lever_graphs_g2296); end
  def test_lever_graphs_h2296; assert_equal("2000", worksheet.lever_graphs_h2296); end
  def test_lever_graphs_i2296; assert_equal("2005", worksheet.lever_graphs_i2296); end
  def test_lever_graphs_j2296; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2296, 0.002); end
  def test_lever_graphs_k2296; assert_equal("2011", worksheet.lever_graphs_k2296); end
  def test_lever_graphs_l2296; assert_equal("2015", worksheet.lever_graphs_l2296); end
  def test_lever_graphs_m2296; assert_equal("2020", worksheet.lever_graphs_m2296); end
  def test_lever_graphs_n2296; assert_equal("2025", worksheet.lever_graphs_n2296); end
  def test_lever_graphs_o2296; assert_equal("2030", worksheet.lever_graphs_o2296); end
  def test_lever_graphs_p2296; assert_equal("2035", worksheet.lever_graphs_p2296); end
  def test_lever_graphs_q2296; assert_equal("2040", worksheet.lever_graphs_q2296); end
  def test_lever_graphs_r2296; assert_equal("2045", worksheet.lever_graphs_r2296); end
  def test_lever_graphs_s2296; assert_equal("2050", worksheet.lever_graphs_s2296); end
  def test_lever_graphs_b2297; assert_equal("Historic data", worksheet.lever_graphs_b2297); end
  def test_lever_graphs_b2298; assert_in_delta(1.0, worksheet.lever_graphs_b2298, 0.002); end
  def test_lever_graphs_k2298; assert_in_epsilon(7.0, worksheet.lever_graphs_k2298, 0.002); end
  def test_lever_graphs_l2298; assert_in_epsilon(7.0, worksheet.lever_graphs_l2298, 0.002); end
  def test_lever_graphs_m2298; assert_in_epsilon(6.714285714285714, worksheet.lever_graphs_m2298, 0.002); end
  def test_lever_graphs_n2298; assert_in_epsilon(6.428571428571429, worksheet.lever_graphs_n2298, 0.002); end
  def test_lever_graphs_o2298; assert_in_epsilon(6.142857142857143, worksheet.lever_graphs_o2298, 0.002); end
  def test_lever_graphs_p2298; assert_in_epsilon(5.857142857142858, worksheet.lever_graphs_p2298, 0.002); end
  def test_lever_graphs_q2298; assert_in_epsilon(5.571428571428571, worksheet.lever_graphs_q2298, 0.002); end
  def test_lever_graphs_r2298; assert_in_epsilon(5.285714285714286, worksheet.lever_graphs_r2298, 0.002); end
  def test_lever_graphs_s2298; assert_in_epsilon(5.0, worksheet.lever_graphs_s2298, 0.002); end
  def test_lever_graphs_b2299; assert_in_epsilon(2.0, worksheet.lever_graphs_b2299, 0.002); end
  def test_lever_graphs_k2299; assert_in_epsilon(7.0, worksheet.lever_graphs_k2299, 0.002); end
  def test_lever_graphs_l2299; assert_in_epsilon(7.0, worksheet.lever_graphs_l2299, 0.002); end
  def test_lever_graphs_m2299; assert_in_epsilon(7.0, worksheet.lever_graphs_m2299, 0.002); end
  def test_lever_graphs_n2299; assert_in_epsilon(7.0, worksheet.lever_graphs_n2299, 0.002); end
  def test_lever_graphs_o2299; assert_in_epsilon(7.0, worksheet.lever_graphs_o2299, 0.002); end
  def test_lever_graphs_p2299; assert_in_epsilon(7.0, worksheet.lever_graphs_p2299, 0.002); end
  def test_lever_graphs_q2299; assert_in_epsilon(7.0, worksheet.lever_graphs_q2299, 0.002); end
  def test_lever_graphs_r2299; assert_in_epsilon(7.0, worksheet.lever_graphs_r2299, 0.002); end
  def test_lever_graphs_s2299; assert_in_epsilon(7.0, worksheet.lever_graphs_s2299, 0.002); end
  def test_lever_graphs_b2300; assert_in_epsilon(3.0, worksheet.lever_graphs_b2300, 0.002); end
  def test_lever_graphs_k2300; assert_in_epsilon(7.0, worksheet.lever_graphs_k2300, 0.002); end
  def test_lever_graphs_l2300; assert_in_epsilon(7.0, worksheet.lever_graphs_l2300, 0.002); end
  def test_lever_graphs_m2300; assert_in_epsilon(7.428571428571429, worksheet.lever_graphs_m2300, 0.002); end
  def test_lever_graphs_n2300; assert_in_epsilon(7.857142857142858, worksheet.lever_graphs_n2300, 0.002); end
  def test_lever_graphs_o2300; assert_in_epsilon(8.285714285714286, worksheet.lever_graphs_o2300, 0.002); end
  def test_lever_graphs_p2300; assert_in_epsilon(8.714285714285715, worksheet.lever_graphs_p2300, 0.002); end
  def test_lever_graphs_q2300; assert_in_epsilon(9.142857142857142, worksheet.lever_graphs_q2300, 0.002); end
  def test_lever_graphs_r2300; assert_in_epsilon(9.571428571428571, worksheet.lever_graphs_r2300, 0.002); end
  def test_lever_graphs_s2300; assert_in_epsilon(10.0, worksheet.lever_graphs_s2300, 0.002); end
  def test_lever_graphs_b2301; assert_in_epsilon(4.0, worksheet.lever_graphs_b2301, 0.002); end
  def test_lever_graphs_k2301; assert_in_epsilon(7.0, worksheet.lever_graphs_k2301, 0.002); end
  def test_lever_graphs_l2301; assert_in_epsilon(7.0, worksheet.lever_graphs_l2301, 0.002); end
  def test_lever_graphs_m2301; assert_in_epsilon(8.142857142857142, worksheet.lever_graphs_m2301, 0.002); end
  def test_lever_graphs_n2301; assert_in_epsilon(9.285714285714285, worksheet.lever_graphs_n2301, 0.002); end
  def test_lever_graphs_o2301; assert_in_epsilon(10.428571428571429, worksheet.lever_graphs_o2301, 0.002); end
  def test_lever_graphs_p2301; assert_in_epsilon(11.571428571428571, worksheet.lever_graphs_p2301, 0.002); end
  def test_lever_graphs_q2301; assert_in_epsilon(12.714285714285715, worksheet.lever_graphs_q2301, 0.002); end
  def test_lever_graphs_r2301; assert_in_epsilon(13.857142857142858, worksheet.lever_graphs_r2301, 0.002); end
  def test_lever_graphs_s2301; assert_in_epsilon(15.0, worksheet.lever_graphs_s2301, 0.002); end
  def test_lever_graphs_d2658; assert_equal("Title", worksheet.lever_graphs_d2658); end
  def test_lever_graphs_e2658; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2658); end
  def test_lever_graphs_d2659; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2659, 0.002); end
  def test_lever_graphs_e2659; assert_in_delta(0.0, (worksheet.lever_graphs_e2659||0), 0.002); end
  def test_lever_graphs_d2660; assert_equal("2050: Level 1", worksheet.lever_graphs_d2660); end
  def test_lever_graphs_e2660; assert_in_delta(0.0, (worksheet.lever_graphs_e2660||0), 0.002); end
  def test_lever_graphs_d2661; assert_equal("2050: Level 2", worksheet.lever_graphs_d2661); end
  def test_lever_graphs_e2661; assert_in_delta(0.005, worksheet.lever_graphs_e2661, 0.002); end
  def test_lever_graphs_d2662; assert_equal("2050: Level 3", worksheet.lever_graphs_d2662); end
  def test_lever_graphs_e2662; assert_in_delta(0.01, worksheet.lever_graphs_e2662, 0.002); end
  def test_lever_graphs_d2663; assert_equal("2050: Level 4", worksheet.lever_graphs_d2663); end
  def test_lever_graphs_e2663; assert_in_delta(0.02, worksheet.lever_graphs_e2663, 0.002); end
  def test_lever_graphs_d2669; assert_equal("Title", worksheet.lever_graphs_d2669); end
  def test_lever_graphs_e2669; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2669); end
  def test_lever_graphs_f2669; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2669); end
  def test_lever_graphs_d2670; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2670, 0.002); end
  def test_lever_graphs_e2670; assert_in_delta(0.0, (worksheet.lever_graphs_e2670||0), 0.002); end
  def test_lever_graphs_f2670; assert_in_delta(0.0, (worksheet.lever_graphs_f2670||0), 0.002); end
  def test_lever_graphs_d2671; assert_equal("2050: Level 1", worksheet.lever_graphs_d2671); end
  def test_lever_graphs_e2671; assert_in_delta(0.0, (worksheet.lever_graphs_e2671||0), 0.002); end
  def test_lever_graphs_f2671; assert_in_delta(0.0, (worksheet.lever_graphs_f2671||0), 0.002); end
  def test_lever_graphs_d2672; assert_equal("2050: Level 2", worksheet.lever_graphs_d2672); end
  def test_lever_graphs_e2672; assert_in_delta(0.0025, worksheet.lever_graphs_e2672, 0.002); end
  def test_lever_graphs_f2672; assert_in_delta(0.0125, worksheet.lever_graphs_f2672, 0.002); end
  def test_lever_graphs_d2673; assert_equal("2050: Level 3", worksheet.lever_graphs_d2673); end
  def test_lever_graphs_e2673; assert_in_delta(0.005, worksheet.lever_graphs_e2673, 0.002); end
  def test_lever_graphs_f2673; assert_in_delta(0.025, worksheet.lever_graphs_f2673, 0.002); end
  def test_lever_graphs_d2674; assert_equal("2050: Level 4", worksheet.lever_graphs_d2674); end
  def test_lever_graphs_e2674; assert_in_delta(0.01, worksheet.lever_graphs_e2674, 0.002); end
  def test_lever_graphs_f2674; assert_in_delta(0.05, worksheet.lever_graphs_f2674, 0.002); end
  def test_lever_graphs_d2647; assert_equal("Title", worksheet.lever_graphs_d2647); end
  def test_lever_graphs_e2647; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2647); end
  def test_lever_graphs_f2647; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2647); end
  def test_lever_graphs_d2648; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2648, 0.002); end
  def test_lever_graphs_e2648; assert_in_delta(0.0, (worksheet.lever_graphs_e2648||0), 0.002); end
  def test_lever_graphs_f2648; assert_in_delta(0.0, (worksheet.lever_graphs_f2648||0), 0.002); end
  def test_lever_graphs_d2649; assert_equal("2050: Level 1", worksheet.lever_graphs_d2649); end
  def test_lever_graphs_e2649; assert_in_delta(0.0, (worksheet.lever_graphs_e2649||0), 0.002); end
  def test_lever_graphs_f2649; assert_in_delta(0.0, (worksheet.lever_graphs_f2649||0), 0.002); end
  def test_lever_graphs_d2650; assert_equal("2050: Level 2", worksheet.lever_graphs_d2650); end
  def test_lever_graphs_e2650; assert_in_delta(0.0175, worksheet.lever_graphs_e2650, 0.002); end
  def test_lever_graphs_f2650; assert_in_delta(0.04, worksheet.lever_graphs_f2650, 0.002); end
  def test_lever_graphs_d2651; assert_equal("2050: Level 3", worksheet.lever_graphs_d2651); end
  def test_lever_graphs_e2651; assert_in_delta(0.035, worksheet.lever_graphs_e2651, 0.002); end
  def test_lever_graphs_f2651; assert_in_delta(0.08, worksheet.lever_graphs_f2651, 0.002); end
  def test_lever_graphs_d2652; assert_equal("2050: Level 4", worksheet.lever_graphs_d2652); end
  def test_lever_graphs_e2652; assert_in_delta(0.07, worksheet.lever_graphs_e2652, 0.002); end
  def test_lever_graphs_f2652; assert_in_delta(0.16, worksheet.lever_graphs_f2652, 0.002); end
  def test_lever_graphs_c2844; assert_equal("1975", worksheet.lever_graphs_c2844); end
  def test_lever_graphs_d2844; assert_equal("1980", worksheet.lever_graphs_d2844); end
  def test_lever_graphs_e2844; assert_equal("1985", worksheet.lever_graphs_e2844); end
  def test_lever_graphs_f2844; assert_equal("1990", worksheet.lever_graphs_f2844); end
  def test_lever_graphs_g2844; assert_equal("1995", worksheet.lever_graphs_g2844); end
  def test_lever_graphs_h2844; assert_equal("2000", worksheet.lever_graphs_h2844); end
  def test_lever_graphs_i2844; assert_equal("2005", worksheet.lever_graphs_i2844); end
  def test_lever_graphs_j2844; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2844, 0.002); end
  def test_lever_graphs_k2844; assert_equal("2011", worksheet.lever_graphs_k2844); end
  def test_lever_graphs_l2844; assert_equal("2015", worksheet.lever_graphs_l2844); end
  def test_lever_graphs_m2844; assert_equal("2020", worksheet.lever_graphs_m2844); end
  def test_lever_graphs_n2844; assert_equal("2025", worksheet.lever_graphs_n2844); end
  def test_lever_graphs_o2844; assert_equal("2030", worksheet.lever_graphs_o2844); end
  def test_lever_graphs_p2844; assert_equal("2035", worksheet.lever_graphs_p2844); end
  def test_lever_graphs_q2844; assert_equal("2040", worksheet.lever_graphs_q2844); end
  def test_lever_graphs_r2844; assert_equal("2045", worksheet.lever_graphs_r2844); end
  def test_lever_graphs_s2844; assert_equal("2050", worksheet.lever_graphs_s2844); end
  def test_lever_graphs_b2845; assert_equal("Historic data", worksheet.lever_graphs_b2845); end
  def test_lever_graphs_b2846; assert_in_delta(1.0, worksheet.lever_graphs_b2846, 0.002); end
  def test_lever_graphs_k2846; assert_in_delta(0.0, (worksheet.lever_graphs_k2846||0), 0.002); end
  def test_lever_graphs_l2846; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2846, 0.002); end
  def test_lever_graphs_m2846; assert_in_delta(0.0036630036630036595, worksheet.lever_graphs_m2846, 0.002); end
  def test_lever_graphs_n2846; assert_in_delta(0.0030525030525030495, worksheet.lever_graphs_n2846, 0.002); end
  def test_lever_graphs_o2846; assert_in_delta(0.00244200244200244, worksheet.lever_graphs_o2846, 0.002); end
  def test_lever_graphs_p2846; assert_in_delta(0.0018315018315018298, worksheet.lever_graphs_p2846, 0.002); end
  def test_lever_graphs_q2846; assert_in_delta(0.0012210012210012197, worksheet.lever_graphs_q2846, 0.002); end
  def test_lever_graphs_r2846; assert_in_delta(0.0006105006105006101, worksheet.lever_graphs_r2846, 0.002); end
  def test_lever_graphs_s2846; assert_in_delta(0.0, (worksheet.lever_graphs_s2846||0), 0.002); end
  def test_lever_graphs_b2847; assert_in_epsilon(2.0, worksheet.lever_graphs_b2847, 0.002); end
  def test_lever_graphs_k2847; assert_in_delta(0.0, (worksheet.lever_graphs_k2847||0), 0.002); end
  def test_lever_graphs_l2847; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2847, 0.002); end
  def test_lever_graphs_m2847; assert_in_delta(0.009615384615384606, worksheet.lever_graphs_m2847, 0.002); end
  def test_lever_graphs_n2847; assert_in_delta(0.014957264957264942, worksheet.lever_graphs_n2847, 0.002); end
  def test_lever_graphs_o2847; assert_in_delta(0.02029914529914528, worksheet.lever_graphs_o2847, 0.002); end
  def test_lever_graphs_p2847; assert_in_delta(0.025641025641025616, worksheet.lever_graphs_p2847, 0.002); end
  def test_lever_graphs_q2847; assert_in_delta(0.030982905982905953, worksheet.lever_graphs_q2847, 0.002); end
  def test_lever_graphs_r2847; assert_in_delta(0.03632478632478629, worksheet.lever_graphs_r2847, 0.002); end
  def test_lever_graphs_s2847; assert_in_delta(0.04166666666666663, worksheet.lever_graphs_s2847, 0.002); end
  def test_lever_graphs_b2848; assert_in_epsilon(3.0, worksheet.lever_graphs_b2848, 0.002); end
  def test_lever_graphs_k2848; assert_in_delta(0.0, (worksheet.lever_graphs_k2848||0), 0.002); end
  def test_lever_graphs_l2848; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2848, 0.002); end
  def test_lever_graphs_m2848; assert_in_delta(0.015567765567765561, worksheet.lever_graphs_m2848, 0.002); end
  def test_lever_graphs_n2848; assert_in_delta(0.026862026862026853, worksheet.lever_graphs_n2848, 0.002); end
  def test_lever_graphs_o2848; assert_in_delta(0.03815628815628815, worksheet.lever_graphs_o2848, 0.002); end
  def test_lever_graphs_p2848; assert_in_delta(0.04945054945054944, worksheet.lever_graphs_p2848, 0.002); end
  def test_lever_graphs_q2848; assert_in_delta(0.06074481074481074, worksheet.lever_graphs_q2848, 0.002); end
  def test_lever_graphs_r2848; assert_in_delta(0.07203907203907203, worksheet.lever_graphs_r2848, 0.002); end
  def test_lever_graphs_s2848; assert_in_delta(0.08333333333333333, worksheet.lever_graphs_s2848, 0.002); end
  def test_lever_graphs_b2849; assert_in_epsilon(4.0, worksheet.lever_graphs_b2849, 0.002); end
  def test_lever_graphs_k2849; assert_in_delta(0.0, (worksheet.lever_graphs_k2849||0), 0.002); end
  def test_lever_graphs_l2849; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2849, 0.002); end
  def test_lever_graphs_m2849; assert_in_delta(0.12667887667887667, worksheet.lever_graphs_m2849, 0.002); end
  def test_lever_graphs_n2849; assert_in_delta(0.2490842490842491, worksheet.lever_graphs_n2849, 0.002); end
  def test_lever_graphs_o2849; assert_in_delta(0.3714896214896215, worksheet.lever_graphs_o2849, 0.002); end
  def test_lever_graphs_p2849; assert_in_delta(0.4938949938949939, worksheet.lever_graphs_p2849, 0.002); end
  def test_lever_graphs_q2849; assert_in_delta(0.6163003663003663, worksheet.lever_graphs_q2849, 0.002); end
  def test_lever_graphs_r2849; assert_in_delta(0.7387057387057387, worksheet.lever_graphs_r2849, 0.002); end
  def test_lever_graphs_s2849; assert_in_delta(0.8611111111111112, worksheet.lever_graphs_s2849, 0.002); end
  def test_lever_graphs_c2778; assert_equal("1975", worksheet.lever_graphs_c2778); end
  def test_lever_graphs_d2778; assert_equal("1980", worksheet.lever_graphs_d2778); end
  def test_lever_graphs_e2778; assert_equal("1985", worksheet.lever_graphs_e2778); end
  def test_lever_graphs_f2778; assert_equal("1990", worksheet.lever_graphs_f2778); end
  def test_lever_graphs_g2778; assert_equal("1995", worksheet.lever_graphs_g2778); end
  def test_lever_graphs_h2778; assert_equal("2000", worksheet.lever_graphs_h2778); end
  def test_lever_graphs_i2778; assert_equal("2005", worksheet.lever_graphs_i2778); end
  def test_lever_graphs_j2778; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2778, 0.002); end
  def test_lever_graphs_k2778; assert_equal("2011", worksheet.lever_graphs_k2778); end
  def test_lever_graphs_l2778; assert_equal("2015", worksheet.lever_graphs_l2778); end
  def test_lever_graphs_m2778; assert_equal("2020", worksheet.lever_graphs_m2778); end
  def test_lever_graphs_n2778; assert_equal("2025", worksheet.lever_graphs_n2778); end
  def test_lever_graphs_o2778; assert_equal("2030", worksheet.lever_graphs_o2778); end
  def test_lever_graphs_p2778; assert_equal("2035", worksheet.lever_graphs_p2778); end
  def test_lever_graphs_q2778; assert_equal("2040", worksheet.lever_graphs_q2778); end
  def test_lever_graphs_r2778; assert_equal("2045", worksheet.lever_graphs_r2778); end
  def test_lever_graphs_s2778; assert_equal("2050", worksheet.lever_graphs_s2778); end
  def test_lever_graphs_b2779; assert_equal("Historic data", worksheet.lever_graphs_b2779); end
  def test_lever_graphs_b2780; assert_in_delta(1.0, worksheet.lever_graphs_b2780, 0.002); end
  def test_lever_graphs_k2780; assert_in_delta(0.0, (worksheet.lever_graphs_k2780||0), 0.002); end
  def test_lever_graphs_l2780; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2780, 0.002); end
  def test_lever_graphs_m2780; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2780, 0.002); end
  def test_lever_graphs_n2780; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2780, 0.002); end
  def test_lever_graphs_o2780; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2780, 0.002); end
  def test_lever_graphs_p2780; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2780, 0.002); end
  def test_lever_graphs_q2780; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2780, 0.002); end
  def test_lever_graphs_r2780; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2780, 0.002); end
  def test_lever_graphs_s2780; assert_in_delta(0.0, (worksheet.lever_graphs_s2780||0), 0.002); end
  def test_lever_graphs_b2781; assert_in_epsilon(2.0, worksheet.lever_graphs_b2781, 0.002); end
  def test_lever_graphs_k2781; assert_in_delta(0.0, (worksheet.lever_graphs_k2781||0), 0.002); end
  def test_lever_graphs_l2781; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2781, 0.002); end
  def test_lever_graphs_m2781; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2781, 0.002); end
  def test_lever_graphs_n2781; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2781, 0.002); end
  def test_lever_graphs_o2781; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2781, 0.002); end
  def test_lever_graphs_p2781; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2781, 0.002); end
  def test_lever_graphs_q2781; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2781, 0.002); end
  def test_lever_graphs_r2781; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2781, 0.002); end
  def test_lever_graphs_s2781; assert_in_delta(0.05, worksheet.lever_graphs_s2781, 0.002); end
  def test_lever_graphs_b2782; assert_in_epsilon(3.0, worksheet.lever_graphs_b2782, 0.002); end
  def test_lever_graphs_k2782; assert_in_delta(0.0, (worksheet.lever_graphs_k2782||0), 0.002); end
  def test_lever_graphs_l2782; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2782, 0.002); end
  def test_lever_graphs_m2782; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2782, 0.002); end
  def test_lever_graphs_n2782; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2782, 0.002); end
  def test_lever_graphs_o2782; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2782, 0.002); end
  def test_lever_graphs_p2782; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2782, 0.002); end
  def test_lever_graphs_q2782; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2782, 0.002); end
  def test_lever_graphs_r2782; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2782, 0.002); end
  def test_lever_graphs_s2782; assert_in_delta(0.1, worksheet.lever_graphs_s2782, 0.002); end
  def test_lever_graphs_b2783; assert_in_epsilon(4.0, worksheet.lever_graphs_b2783, 0.002); end
  def test_lever_graphs_k2783; assert_in_delta(0.0, (worksheet.lever_graphs_k2783||0), 0.002); end
  def test_lever_graphs_l2783; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2783, 0.002); end
  def test_lever_graphs_m2783; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2783, 0.002); end
  def test_lever_graphs_n2783; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2783, 0.002); end
  def test_lever_graphs_o2783; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2783, 0.002); end
  def test_lever_graphs_p2783; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2783, 0.002); end
  def test_lever_graphs_q2783; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2783, 0.002); end
  def test_lever_graphs_r2783; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2783, 0.002); end
  def test_lever_graphs_s2783; assert_in_delta(0.2, worksheet.lever_graphs_s2783, 0.002); end
  def test_lever_graphs_c2816; assert_equal("1975", worksheet.lever_graphs_c2816); end
  def test_lever_graphs_d2816; assert_equal("1980", worksheet.lever_graphs_d2816); end
  def test_lever_graphs_e2816; assert_equal("1985", worksheet.lever_graphs_e2816); end
  def test_lever_graphs_f2816; assert_equal("1990", worksheet.lever_graphs_f2816); end
  def test_lever_graphs_g2816; assert_equal("1995", worksheet.lever_graphs_g2816); end
  def test_lever_graphs_h2816; assert_equal("2000", worksheet.lever_graphs_h2816); end
  def test_lever_graphs_i2816; assert_equal("2005", worksheet.lever_graphs_i2816); end
  def test_lever_graphs_j2816; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2816, 0.002); end
  def test_lever_graphs_k2816; assert_equal("2011", worksheet.lever_graphs_k2816); end
  def test_lever_graphs_l2816; assert_equal("2015", worksheet.lever_graphs_l2816); end
  def test_lever_graphs_m2816; assert_equal("2020", worksheet.lever_graphs_m2816); end
  def test_lever_graphs_n2816; assert_equal("2025", worksheet.lever_graphs_n2816); end
  def test_lever_graphs_o2816; assert_equal("2030", worksheet.lever_graphs_o2816); end
  def test_lever_graphs_p2816; assert_equal("2035", worksheet.lever_graphs_p2816); end
  def test_lever_graphs_q2816; assert_equal("2040", worksheet.lever_graphs_q2816); end
  def test_lever_graphs_r2816; assert_equal("2045", worksheet.lever_graphs_r2816); end
  def test_lever_graphs_s2816; assert_equal("2050", worksheet.lever_graphs_s2816); end
  def test_lever_graphs_b2817; assert_equal("Historic data", worksheet.lever_graphs_b2817); end
  def test_lever_graphs_b2818; assert_in_delta(1.0, worksheet.lever_graphs_b2818, 0.002); end
  def test_lever_graphs_k2818; assert_in_delta(0.0, (worksheet.lever_graphs_k2818||0), 0.002); end
  def test_lever_graphs_l2818; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2818, 0.002); end
  def test_lever_graphs_m2818; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2818, 0.002); end
  def test_lever_graphs_n2818; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2818, 0.002); end
  def test_lever_graphs_o2818; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2818, 0.002); end
  def test_lever_graphs_p2818; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2818, 0.002); end
  def test_lever_graphs_q2818; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2818, 0.002); end
  def test_lever_graphs_r2818; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2818, 0.002); end
  def test_lever_graphs_s2818; assert_in_delta(0.0, (worksheet.lever_graphs_s2818||0), 0.002); end
  def test_lever_graphs_b2819; assert_in_epsilon(2.0, worksheet.lever_graphs_b2819, 0.002); end
  def test_lever_graphs_k2819; assert_in_delta(0.0, (worksheet.lever_graphs_k2819||0), 0.002); end
  def test_lever_graphs_l2819; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2819, 0.002); end
  def test_lever_graphs_m2819; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2819, 0.002); end
  def test_lever_graphs_n2819; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2819, 0.002); end
  def test_lever_graphs_o2819; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2819, 0.002); end
  def test_lever_graphs_p2819; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2819, 0.002); end
  def test_lever_graphs_q2819; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2819, 0.002); end
  def test_lever_graphs_r2819; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2819, 0.002); end
  def test_lever_graphs_s2819; assert_in_delta(0.05, worksheet.lever_graphs_s2819, 0.002); end
  def test_lever_graphs_b2820; assert_in_epsilon(3.0, worksheet.lever_graphs_b2820, 0.002); end
  def test_lever_graphs_k2820; assert_in_delta(0.0, (worksheet.lever_graphs_k2820||0), 0.002); end
  def test_lever_graphs_l2820; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2820, 0.002); end
  def test_lever_graphs_m2820; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2820, 0.002); end
  def test_lever_graphs_n2820; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2820, 0.002); end
  def test_lever_graphs_o2820; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2820, 0.002); end
  def test_lever_graphs_p2820; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2820, 0.002); end
  def test_lever_graphs_q2820; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2820, 0.002); end
  def test_lever_graphs_r2820; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2820, 0.002); end
  def test_lever_graphs_s2820; assert_in_delta(0.1, worksheet.lever_graphs_s2820, 0.002); end
  def test_lever_graphs_b2821; assert_in_epsilon(4.0, worksheet.lever_graphs_b2821, 0.002); end
  def test_lever_graphs_k2821; assert_in_delta(0.0, (worksheet.lever_graphs_k2821||0), 0.002); end
  def test_lever_graphs_l2821; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2821, 0.002); end
  def test_lever_graphs_m2821; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2821, 0.002); end
  def test_lever_graphs_n2821; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2821, 0.002); end
  def test_lever_graphs_o2821; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2821, 0.002); end
  def test_lever_graphs_p2821; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2821, 0.002); end
  def test_lever_graphs_q2821; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2821, 0.002); end
  def test_lever_graphs_r2821; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2821, 0.002); end
  def test_lever_graphs_s2821; assert_in_delta(0.2, worksheet.lever_graphs_s2821, 0.002); end
  def test_lever_graphs_c2719; assert_equal("1975", worksheet.lever_graphs_c2719); end
  def test_lever_graphs_d2719; assert_equal("1980", worksheet.lever_graphs_d2719); end
  def test_lever_graphs_e2719; assert_equal("1985", worksheet.lever_graphs_e2719); end
  def test_lever_graphs_f2719; assert_equal("1990", worksheet.lever_graphs_f2719); end
  def test_lever_graphs_g2719; assert_equal("1995", worksheet.lever_graphs_g2719); end
  def test_lever_graphs_h2719; assert_equal("2000", worksheet.lever_graphs_h2719); end
  def test_lever_graphs_i2719; assert_equal("2005", worksheet.lever_graphs_i2719); end
  def test_lever_graphs_j2719; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2719, 0.002); end
  def test_lever_graphs_k2719; assert_equal("2011", worksheet.lever_graphs_k2719); end
  def test_lever_graphs_l2719; assert_equal("2015", worksheet.lever_graphs_l2719); end
  def test_lever_graphs_m2719; assert_equal("2020", worksheet.lever_graphs_m2719); end
  def test_lever_graphs_n2719; assert_equal("2025", worksheet.lever_graphs_n2719); end
  def test_lever_graphs_o2719; assert_equal("2030", worksheet.lever_graphs_o2719); end
  def test_lever_graphs_p2719; assert_equal("2035", worksheet.lever_graphs_p2719); end
  def test_lever_graphs_q2719; assert_equal("2040", worksheet.lever_graphs_q2719); end
  def test_lever_graphs_r2719; assert_equal("2045", worksheet.lever_graphs_r2719); end
  def test_lever_graphs_s2719; assert_equal("2050", worksheet.lever_graphs_s2719); end
  def test_lever_graphs_b2720; assert_equal("Historic data", worksheet.lever_graphs_b2720); end
  def test_lever_graphs_b2721; assert_in_delta(1.0, worksheet.lever_graphs_b2721, 0.002); end
  def test_lever_graphs_k2721; assert_in_delta(0.0, (worksheet.lever_graphs_k2721||0), 0.002); end
  def test_lever_graphs_l2721; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2721, 0.002); end
  def test_lever_graphs_m2721; assert_in_delta(-0.0005860805860805861, worksheet.lever_graphs_m2721, 0.002); end
  def test_lever_graphs_n2721; assert_in_delta(-0.0004884004884004884, worksheet.lever_graphs_n2721, 0.002); end
  def test_lever_graphs_o2721; assert_in_delta(-0.0003907203907203907, worksheet.lever_graphs_o2721, 0.002); end
  def test_lever_graphs_p2721; assert_in_delta(-0.00029304029304029304, worksheet.lever_graphs_p2721, 0.002); end
  def test_lever_graphs_q2721; assert_in_delta(-0.00019536019536019536, worksheet.lever_graphs_q2721, 0.002); end
  def test_lever_graphs_r2721; assert_in_delta(-9.768009768009768e-05, worksheet.lever_graphs_r2721, 0.002); end
  def test_lever_graphs_s2721; assert_in_delta(0.0, (worksheet.lever_graphs_s2721||0), 0.002); end
  def test_lever_graphs_b2722; assert_in_epsilon(2.0, worksheet.lever_graphs_b2722, 0.002); end
  def test_lever_graphs_k2722; assert_in_delta(0.0, (worksheet.lever_graphs_k2722||0), 0.002); end
  def test_lever_graphs_l2722; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2722, 0.002); end
  def test_lever_graphs_m2722; assert_in_delta(-0.0015384615384615385, worksheet.lever_graphs_m2722, 0.002); end
  def test_lever_graphs_n2722; assert_in_delta(-0.002393162393162393, worksheet.lever_graphs_n2722, 0.002); end
  def test_lever_graphs_o2722; assert_in_delta(-0.003247863247863248, worksheet.lever_graphs_o2722, 0.002); end
  def test_lever_graphs_p2722; assert_in_delta(-0.0041025641025641026, worksheet.lever_graphs_p2722, 0.002); end
  def test_lever_graphs_q2722; assert_in_delta(-0.004957264957264958, worksheet.lever_graphs_q2722, 0.002); end
  def test_lever_graphs_r2722; assert_in_delta(-0.005811965811965812, worksheet.lever_graphs_r2722, 0.002); end
  def test_lever_graphs_s2722; assert_in_delta(-0.006666666666666667, worksheet.lever_graphs_s2722, 0.002); end
  def test_lever_graphs_b2723; assert_in_epsilon(3.0, worksheet.lever_graphs_b2723, 0.002); end
  def test_lever_graphs_k2723; assert_in_delta(0.0, (worksheet.lever_graphs_k2723||0), 0.002); end
  def test_lever_graphs_l2723; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2723, 0.002); end
  def test_lever_graphs_m2723; assert_in_delta(-0.0037606837606837607, worksheet.lever_graphs_m2723, 0.002); end
  def test_lever_graphs_n2723; assert_in_delta(-0.006837606837606838, worksheet.lever_graphs_n2723, 0.002); end
  def test_lever_graphs_o2723; assert_in_delta(-0.009914529914529915, worksheet.lever_graphs_o2723, 0.002); end
  def test_lever_graphs_p2723; assert_in_delta(-0.012991452991452991, worksheet.lever_graphs_p2723, 0.002); end
  def test_lever_graphs_q2723; assert_in_delta(-0.01606837606837607, worksheet.lever_graphs_q2723, 0.002); end
  def test_lever_graphs_r2723; assert_in_delta(-0.019145299145299145, worksheet.lever_graphs_r2723, 0.002); end
  def test_lever_graphs_s2723; assert_in_delta(-0.022222222222222223, worksheet.lever_graphs_s2723, 0.002); end
  def test_lever_graphs_b2724; assert_in_epsilon(4.0, worksheet.lever_graphs_b2724, 0.002); end
  def test_lever_graphs_k2724; assert_in_delta(0.0, (worksheet.lever_graphs_k2724||0), 0.002); end
  def test_lever_graphs_l2724; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2724, 0.002); end
  def test_lever_graphs_m2724; assert_in_delta(0.023223443223443226, worksheet.lever_graphs_m2724, 0.002); end
  def test_lever_graphs_n2724; assert_in_delta(0.04713064713064713, worksheet.lever_graphs_n2724, 0.002); end
  def test_lever_graphs_o2724; assert_in_delta(0.07103785103785104, worksheet.lever_graphs_o2724, 0.002); end
  def test_lever_graphs_p2724; assert_in_delta(0.09494505494505495, worksheet.lever_graphs_p2724, 0.002); end
  def test_lever_graphs_q2724; assert_in_delta(0.11885225885225886, worksheet.lever_graphs_q2724, 0.002); end
  def test_lever_graphs_r2724; assert_in_delta(0.14275946275946275, worksheet.lever_graphs_r2724, 0.002); end
  def test_lever_graphs_s2724; assert_in_delta(0.16666666666666666, worksheet.lever_graphs_s2724, 0.002); end
  def test_lever_graphs_d1715; assert_equal("Title", worksheet.lever_graphs_d1715); end
  def test_lever_graphs_e1715; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_e1715); end
  def test_lever_graphs_f1715; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_f1715); end
  def test_lever_graphs_d1716; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1716, 0.002); end
  def test_lever_graphs_e1716; assert_in_delta(0.35, worksheet.lever_graphs_e1716, 0.002); end
  def test_lever_graphs_f1716; assert_in_delta(0.65, worksheet.lever_graphs_f1716, 0.002); end
  def test_lever_graphs_d1717; assert_equal("2050: Level 1", worksheet.lever_graphs_d1717); end
  def test_lever_graphs_e1717; assert_in_delta(0.61, worksheet.lever_graphs_e1717, 0.002); end
  def test_lever_graphs_f1717; assert_in_delta(0.39, worksheet.lever_graphs_f1717, 0.002); end
  def test_lever_graphs_d1718; assert_equal("2050: Level 2", worksheet.lever_graphs_d1718); end
  def test_lever_graphs_e1718; assert_in_delta(0.475, worksheet.lever_graphs_e1718, 0.002); end
  def test_lever_graphs_f1718; assert_in_delta(0.525, worksheet.lever_graphs_f1718, 0.002); end
  def test_lever_graphs_d1719; assert_equal("2050: Level 3", worksheet.lever_graphs_d1719); end
  def test_lever_graphs_e1719; assert_in_delta(0.175, worksheet.lever_graphs_e1719, 0.002); end
  def test_lever_graphs_f1719; assert_in_delta(0.825, worksheet.lever_graphs_f1719, 0.002); end
  def test_lever_graphs_d1720; assert_equal("2050: Level 4", worksheet.lever_graphs_d1720); end
  def test_lever_graphs_e1720; assert_in_delta(0.07, worksheet.lever_graphs_e1720, 0.002); end
  def test_lever_graphs_f1720; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_f1720, 0.002); end
  def test_lever_graphs_c3381; assert_equal("1975", worksheet.lever_graphs_c3381); end
  def test_lever_graphs_d3381; assert_equal("1980", worksheet.lever_graphs_d3381); end
  def test_lever_graphs_e3381; assert_equal("1985", worksheet.lever_graphs_e3381); end
  def test_lever_graphs_f3381; assert_equal("1990", worksheet.lever_graphs_f3381); end
  def test_lever_graphs_g3381; assert_equal("1995", worksheet.lever_graphs_g3381); end
  def test_lever_graphs_h3381; assert_equal("2000", worksheet.lever_graphs_h3381); end
  def test_lever_graphs_i3381; assert_equal("2005", worksheet.lever_graphs_i3381); end
  def test_lever_graphs_j3381; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3381, 0.002); end
  def test_lever_graphs_k3381; assert_equal("2011", worksheet.lever_graphs_k3381); end
  def test_lever_graphs_l3381; assert_equal("2015", worksheet.lever_graphs_l3381); end
  def test_lever_graphs_m3381; assert_equal("2020", worksheet.lever_graphs_m3381); end
  def test_lever_graphs_n3381; assert_equal("2025", worksheet.lever_graphs_n3381); end
  def test_lever_graphs_o3381; assert_equal("2030", worksheet.lever_graphs_o3381); end
  def test_lever_graphs_p3381; assert_equal("2035", worksheet.lever_graphs_p3381); end
  def test_lever_graphs_q3381; assert_equal("2040", worksheet.lever_graphs_q3381); end
  def test_lever_graphs_r3381; assert_equal("2045", worksheet.lever_graphs_r3381); end
  def test_lever_graphs_s3381; assert_equal("2050", worksheet.lever_graphs_s3381); end
  def test_lever_graphs_b3382; assert_equal("Historic data", worksheet.lever_graphs_b3382); end
  def test_lever_graphs_b3383; assert_in_delta(1.0, worksheet.lever_graphs_b3383, 0.002); end
  def test_lever_graphs_k3383; assert_in_delta(0.0, (worksheet.lever_graphs_k3383||0), 0.002); end
  def test_lever_graphs_l3383; assert_in_delta(0.0, (worksheet.lever_graphs_l3383||0), 0.002); end
  def test_lever_graphs_m3383; assert_in_delta(0.0, (worksheet.lever_graphs_m3383||0), 0.002); end
  def test_lever_graphs_n3383; assert_in_delta(0.0, (worksheet.lever_graphs_n3383||0), 0.002); end
  def test_lever_graphs_o3383; assert_in_delta(0.0, (worksheet.lever_graphs_o3383||0), 0.002); end
  def test_lever_graphs_p3383; assert_in_delta(0.0, (worksheet.lever_graphs_p3383||0), 0.002); end
  def test_lever_graphs_q3383; assert_in_delta(0.0, (worksheet.lever_graphs_q3383||0), 0.002); end
  def test_lever_graphs_r3383; assert_in_delta(0.0, (worksheet.lever_graphs_r3383||0), 0.002); end
  def test_lever_graphs_s3383; assert_in_delta(0.0, (worksheet.lever_graphs_s3383||0), 0.002); end
  def test_lever_graphs_b3384; assert_in_epsilon(2.0, worksheet.lever_graphs_b3384, 0.002); end
  def test_lever_graphs_k3384; assert_in_delta(0.0, (worksheet.lever_graphs_k3384||0), 0.002); end
  def test_lever_graphs_l3384; assert_in_delta(0.0, (worksheet.lever_graphs_l3384||0), 0.002); end
  def test_lever_graphs_m3384; assert_in_delta(0.0, (worksheet.lever_graphs_m3384||0), 0.002); end
  def test_lever_graphs_n3384; assert_in_delta(0.0033000000000000004, worksheet.lever_graphs_n3384, 0.002); end
  def test_lever_graphs_o3384; assert_in_delta(0.0165, worksheet.lever_graphs_o3384, 0.002); end
  def test_lever_graphs_p3384; assert_in_delta(0.066, worksheet.lever_graphs_p3384, 0.002); end
  def test_lever_graphs_q3384; assert_in_delta(0.132, worksheet.lever_graphs_q3384, 0.002); end
  def test_lever_graphs_r3384; assert_in_delta(0.23099999999999998, worksheet.lever_graphs_r3384, 0.002); end
  def test_lever_graphs_s3384; assert_in_delta(0.33, worksheet.lever_graphs_s3384, 0.002); end
  def test_lever_graphs_b3385; assert_in_epsilon(3.0, worksheet.lever_graphs_b3385, 0.002); end
  def test_lever_graphs_k3385; assert_in_delta(0.0, (worksheet.lever_graphs_k3385||0), 0.002); end
  def test_lever_graphs_l3385; assert_in_delta(0.0, (worksheet.lever_graphs_l3385||0), 0.002); end
  def test_lever_graphs_m3385; assert_in_delta(0.0, (worksheet.lever_graphs_m3385||0), 0.002); end
  def test_lever_graphs_n3385; assert_in_delta(0.00825, worksheet.lever_graphs_n3385, 0.002); end
  def test_lever_graphs_o3385; assert_in_delta(0.04125, worksheet.lever_graphs_o3385, 0.002); end
  def test_lever_graphs_p3385; assert_in_delta(0.165, worksheet.lever_graphs_p3385, 0.002); end
  def test_lever_graphs_q3385; assert_in_delta(0.33, worksheet.lever_graphs_q3385, 0.002); end
  def test_lever_graphs_r3385; assert_in_delta(0.5774999999999999, worksheet.lever_graphs_r3385, 0.002); end
  def test_lever_graphs_s3385; assert_in_delta(0.825, worksheet.lever_graphs_s3385, 0.002); end
  def test_lever_graphs_b3386; assert_in_epsilon(4.0, worksheet.lever_graphs_b3386, 0.002); end
  def test_lever_graphs_k3386; assert_in_delta(0.0, (worksheet.lever_graphs_k3386||0), 0.002); end
  def test_lever_graphs_l3386; assert_in_delta(0.0, (worksheet.lever_graphs_l3386||0), 0.002); end
  def test_lever_graphs_m3386; assert_in_delta(0.0, (worksheet.lever_graphs_m3386||0), 0.002); end
  def test_lever_graphs_n3386; assert_in_delta(0.033, worksheet.lever_graphs_n3386, 0.002); end
  def test_lever_graphs_o3386; assert_in_delta(0.165, worksheet.lever_graphs_o3386, 0.002); end
  def test_lever_graphs_p3386; assert_in_delta(0.66, worksheet.lever_graphs_p3386, 0.002); end
  def test_lever_graphs_q3386; assert_in_epsilon(1.32, worksheet.lever_graphs_q3386, 0.002); end
  def test_lever_graphs_r3386; assert_in_epsilon(2.3099999999999996, worksheet.lever_graphs_r3386, 0.002); end
  def test_lever_graphs_s3386; assert_in_epsilon(3.3, worksheet.lever_graphs_s3386, 0.002); end
  def test_lever_graphs_c3399; assert_equal("1975", worksheet.lever_graphs_c3399); end
  def test_lever_graphs_d3399; assert_equal("1980", worksheet.lever_graphs_d3399); end
  def test_lever_graphs_e3399; assert_equal("1985", worksheet.lever_graphs_e3399); end
  def test_lever_graphs_f3399; assert_equal("1990", worksheet.lever_graphs_f3399); end
  def test_lever_graphs_g3399; assert_equal("1995", worksheet.lever_graphs_g3399); end
  def test_lever_graphs_h3399; assert_equal("2000", worksheet.lever_graphs_h3399); end
  def test_lever_graphs_i3399; assert_equal("2005", worksheet.lever_graphs_i3399); end
  def test_lever_graphs_j3399; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3399, 0.002); end
  def test_lever_graphs_k3399; assert_equal("2011", worksheet.lever_graphs_k3399); end
  def test_lever_graphs_l3399; assert_equal("2015", worksheet.lever_graphs_l3399); end
  def test_lever_graphs_m3399; assert_equal("2020", worksheet.lever_graphs_m3399); end
  def test_lever_graphs_n3399; assert_equal("2025", worksheet.lever_graphs_n3399); end
  def test_lever_graphs_o3399; assert_equal("2030", worksheet.lever_graphs_o3399); end
  def test_lever_graphs_p3399; assert_equal("2035", worksheet.lever_graphs_p3399); end
  def test_lever_graphs_q3399; assert_equal("2040", worksheet.lever_graphs_q3399); end
  def test_lever_graphs_r3399; assert_equal("2045", worksheet.lever_graphs_r3399); end
  def test_lever_graphs_s3399; assert_equal("2050", worksheet.lever_graphs_s3399); end
  def test_lever_graphs_b3400; assert_equal("Historic data", worksheet.lever_graphs_b3400); end
  def test_lever_graphs_b3401; assert_in_delta(1.0, worksheet.lever_graphs_b3401, 0.002); end
  def test_lever_graphs_k3401; assert_in_delta(0.0, (worksheet.lever_graphs_k3401||0), 0.002); end
  def test_lever_graphs_l3401; assert_in_delta(0.0, (worksheet.lever_graphs_l3401||0), 0.002); end
  def test_lever_graphs_m3401; assert_in_delta(0.0, (worksheet.lever_graphs_m3401||0), 0.002); end
  def test_lever_graphs_n3401; assert_in_delta(0.0, (worksheet.lever_graphs_n3401||0), 0.002); end
  def test_lever_graphs_o3401; assert_in_delta(0.0, (worksheet.lever_graphs_o3401||0), 0.002); end
  def test_lever_graphs_p3401; assert_in_delta(0.0, (worksheet.lever_graphs_p3401||0), 0.002); end
  def test_lever_graphs_q3401; assert_in_delta(0.0, (worksheet.lever_graphs_q3401||0), 0.002); end
  def test_lever_graphs_r3401; assert_in_delta(0.0, (worksheet.lever_graphs_r3401||0), 0.002); end
  def test_lever_graphs_s3401; assert_in_delta(0.0, (worksheet.lever_graphs_s3401||0), 0.002); end
  def test_lever_graphs_b3402; assert_in_epsilon(2.0, worksheet.lever_graphs_b3402, 0.002); end
  def test_lever_graphs_k3402; assert_in_delta(0.0, (worksheet.lever_graphs_k3402||0), 0.002); end
  def test_lever_graphs_l3402; assert_in_delta(0.0, (worksheet.lever_graphs_l3402||0), 0.002); end
  def test_lever_graphs_m3402; assert_in_delta(0.0, (worksheet.lever_graphs_m3402||0), 0.002); end
  def test_lever_graphs_n3402; assert_in_delta(0.01, worksheet.lever_graphs_n3402, 0.002); end
  def test_lever_graphs_o3402; assert_in_delta(0.05, worksheet.lever_graphs_o3402, 0.002); end
  def test_lever_graphs_p3402; assert_in_delta(0.2, worksheet.lever_graphs_p3402, 0.002); end
  def test_lever_graphs_q3402; assert_in_delta(0.4, worksheet.lever_graphs_q3402, 0.002); end
  def test_lever_graphs_r3402; assert_in_delta(0.7, worksheet.lever_graphs_r3402, 0.002); end
  def test_lever_graphs_s3402; assert_in_delta(1.0, worksheet.lever_graphs_s3402, 0.002); end
  def test_lever_graphs_b3403; assert_in_epsilon(3.0, worksheet.lever_graphs_b3403, 0.002); end
  def test_lever_graphs_k3403; assert_in_delta(0.0, (worksheet.lever_graphs_k3403||0), 0.002); end
  def test_lever_graphs_l3403; assert_in_delta(0.0, (worksheet.lever_graphs_l3403||0), 0.002); end
  def test_lever_graphs_m3403; assert_in_delta(0.0, (worksheet.lever_graphs_m3403||0), 0.002); end
  def test_lever_graphs_n3403; assert_in_delta(0.025, worksheet.lever_graphs_n3403, 0.002); end
  def test_lever_graphs_o3403; assert_in_delta(0.125, worksheet.lever_graphs_o3403, 0.002); end
  def test_lever_graphs_p3403; assert_in_delta(0.5, worksheet.lever_graphs_p3403, 0.002); end
  def test_lever_graphs_q3403; assert_in_delta(1.0, worksheet.lever_graphs_q3403, 0.002); end
  def test_lever_graphs_r3403; assert_in_epsilon(1.75, worksheet.lever_graphs_r3403, 0.002); end
  def test_lever_graphs_s3403; assert_in_epsilon(2.5, worksheet.lever_graphs_s3403, 0.002); end
  def test_lever_graphs_b3404; assert_in_epsilon(4.0, worksheet.lever_graphs_b3404, 0.002); end
  def test_lever_graphs_k3404; assert_in_delta(0.0, (worksheet.lever_graphs_k3404||0), 0.002); end
  def test_lever_graphs_l3404; assert_in_delta(0.0, (worksheet.lever_graphs_l3404||0), 0.002); end
  def test_lever_graphs_m3404; assert_in_delta(0.0, (worksheet.lever_graphs_m3404||0), 0.002); end
  def test_lever_graphs_n3404; assert_in_delta(0.1, worksheet.lever_graphs_n3404, 0.002); end
  def test_lever_graphs_o3404; assert_in_delta(0.5, worksheet.lever_graphs_o3404, 0.002); end
  def test_lever_graphs_p3404; assert_in_epsilon(2.0, worksheet.lever_graphs_p3404, 0.002); end
  def test_lever_graphs_q3404; assert_in_epsilon(4.0, worksheet.lever_graphs_q3404, 0.002); end
  def test_lever_graphs_r3404; assert_in_epsilon(7.0, worksheet.lever_graphs_r3404, 0.002); end
  def test_lever_graphs_s3404; assert_in_epsilon(10.0, worksheet.lever_graphs_s3404, 0.002); end
  def test_lever_graphs_c3417; assert_equal("1975", worksheet.lever_graphs_c3417); end
  def test_lever_graphs_d3417; assert_equal("1980", worksheet.lever_graphs_d3417); end
  def test_lever_graphs_e3417; assert_equal("1985", worksheet.lever_graphs_e3417); end
  def test_lever_graphs_f3417; assert_equal("1990", worksheet.lever_graphs_f3417); end
  def test_lever_graphs_g3417; assert_equal("1995", worksheet.lever_graphs_g3417); end
  def test_lever_graphs_h3417; assert_equal("2000", worksheet.lever_graphs_h3417); end
  def test_lever_graphs_i3417; assert_equal("2005", worksheet.lever_graphs_i3417); end
  def test_lever_graphs_j3417; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3417, 0.002); end
  def test_lever_graphs_k3417; assert_equal("2011", worksheet.lever_graphs_k3417); end
  def test_lever_graphs_l3417; assert_equal("2015", worksheet.lever_graphs_l3417); end
  def test_lever_graphs_m3417; assert_equal("2020", worksheet.lever_graphs_m3417); end
  def test_lever_graphs_n3417; assert_equal("2025", worksheet.lever_graphs_n3417); end
  def test_lever_graphs_o3417; assert_equal("2030", worksheet.lever_graphs_o3417); end
  def test_lever_graphs_p3417; assert_equal("2035", worksheet.lever_graphs_p3417); end
  def test_lever_graphs_q3417; assert_equal("2040", worksheet.lever_graphs_q3417); end
  def test_lever_graphs_r3417; assert_equal("2045", worksheet.lever_graphs_r3417); end
  def test_lever_graphs_s3417; assert_equal("2050", worksheet.lever_graphs_s3417); end
  def test_lever_graphs_b3418; assert_equal("Historic data", worksheet.lever_graphs_b3418); end
  def test_lever_graphs_b3419; assert_in_delta(1.0, worksheet.lever_graphs_b3419, 0.002); end
  def test_lever_graphs_k3419; assert_in_delta(0.0, (worksheet.lever_graphs_k3419||0), 0.002); end
  def test_lever_graphs_l3419; assert_in_delta(0.0, (worksheet.lever_graphs_l3419||0), 0.002); end
  def test_lever_graphs_m3419; assert_in_delta(0.0, (worksheet.lever_graphs_m3419||0), 0.002); end
  def test_lever_graphs_n3419; assert_in_delta(0.0, (worksheet.lever_graphs_n3419||0), 0.002); end
  def test_lever_graphs_o3419; assert_in_delta(0.0, (worksheet.lever_graphs_o3419||0), 0.002); end
  def test_lever_graphs_p3419; assert_in_delta(0.0, (worksheet.lever_graphs_p3419||0), 0.002); end
  def test_lever_graphs_q3419; assert_in_delta(0.0, (worksheet.lever_graphs_q3419||0), 0.002); end
  def test_lever_graphs_r3419; assert_in_delta(0.0, (worksheet.lever_graphs_r3419||0), 0.002); end
  def test_lever_graphs_s3419; assert_in_delta(0.0, (worksheet.lever_graphs_s3419||0), 0.002); end
  def test_lever_graphs_b3420; assert_in_epsilon(2.0, worksheet.lever_graphs_b3420, 0.002); end
  def test_lever_graphs_k3420; assert_in_delta(0.0, (worksheet.lever_graphs_k3420||0), 0.002); end
  def test_lever_graphs_l3420; assert_in_delta(0.0, (worksheet.lever_graphs_l3420||0), 0.002); end
  def test_lever_graphs_m3420; assert_in_delta(0.0, (worksheet.lever_graphs_m3420||0), 0.002); end
  def test_lever_graphs_n3420; assert_in_delta(0.001, worksheet.lever_graphs_n3420, 0.002); end
  def test_lever_graphs_o3420; assert_in_delta(0.005000000000000001, worksheet.lever_graphs_o3420, 0.002); end
  def test_lever_graphs_p3420; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_p3420, 0.002); end
  def test_lever_graphs_q3420; assert_in_delta(0.04000000000000001, worksheet.lever_graphs_q3420, 0.002); end
  def test_lever_graphs_r3420; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_r3420, 0.002); end
  def test_lever_graphs_s3420; assert_in_delta(0.1, worksheet.lever_graphs_s3420, 0.002); end
  def test_lever_graphs_b3421; assert_in_epsilon(3.0, worksheet.lever_graphs_b3421, 0.002); end
  def test_lever_graphs_k3421; assert_in_delta(0.0, (worksheet.lever_graphs_k3421||0), 0.002); end
  def test_lever_graphs_l3421; assert_in_delta(0.0, (worksheet.lever_graphs_l3421||0), 0.002); end
  def test_lever_graphs_m3421; assert_in_delta(0.0, (worksheet.lever_graphs_m3421||0), 0.002); end
  def test_lever_graphs_n3421; assert_in_delta(0.0025, worksheet.lever_graphs_n3421, 0.002); end
  def test_lever_graphs_o3421; assert_in_delta(0.0125, worksheet.lever_graphs_o3421, 0.002); end
  def test_lever_graphs_p3421; assert_in_delta(0.05, worksheet.lever_graphs_p3421, 0.002); end
  def test_lever_graphs_q3421; assert_in_delta(0.1, worksheet.lever_graphs_q3421, 0.002); end
  def test_lever_graphs_r3421; assert_in_delta(0.175, worksheet.lever_graphs_r3421, 0.002); end
  def test_lever_graphs_s3421; assert_in_delta(0.25, worksheet.lever_graphs_s3421, 0.002); end
  def test_lever_graphs_b3422; assert_in_epsilon(4.0, worksheet.lever_graphs_b3422, 0.002); end
  def test_lever_graphs_k3422; assert_in_delta(0.0, (worksheet.lever_graphs_k3422||0), 0.002); end
  def test_lever_graphs_l3422; assert_in_delta(0.0, (worksheet.lever_graphs_l3422||0), 0.002); end
  def test_lever_graphs_m3422; assert_in_delta(0.0, (worksheet.lever_graphs_m3422||0), 0.002); end
  def test_lever_graphs_n3422; assert_in_delta(0.01, worksheet.lever_graphs_n3422, 0.002); end
  def test_lever_graphs_o3422; assert_in_delta(0.05, worksheet.lever_graphs_o3422, 0.002); end
  def test_lever_graphs_p3422; assert_in_delta(0.2, worksheet.lever_graphs_p3422, 0.002); end
  def test_lever_graphs_q3422; assert_in_delta(0.4, worksheet.lever_graphs_q3422, 0.002); end
  def test_lever_graphs_r3422; assert_in_delta(0.7, worksheet.lever_graphs_r3422, 0.002); end
  def test_lever_graphs_s3422; assert_in_delta(1.0, worksheet.lever_graphs_s3422, 0.002); end
  def test_lever_graphs_c3435; assert_equal("1975", worksheet.lever_graphs_c3435); end
  def test_lever_graphs_d3435; assert_equal("1980", worksheet.lever_graphs_d3435); end
  def test_lever_graphs_e3435; assert_equal("1985", worksheet.lever_graphs_e3435); end
  def test_lever_graphs_f3435; assert_equal("1990", worksheet.lever_graphs_f3435); end
  def test_lever_graphs_g3435; assert_equal("1995", worksheet.lever_graphs_g3435); end
  def test_lever_graphs_h3435; assert_equal("2000", worksheet.lever_graphs_h3435); end
  def test_lever_graphs_i3435; assert_equal("2005", worksheet.lever_graphs_i3435); end
  def test_lever_graphs_j3435; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3435, 0.002); end
  def test_lever_graphs_k3435; assert_equal("2011", worksheet.lever_graphs_k3435); end
  def test_lever_graphs_l3435; assert_equal("2015", worksheet.lever_graphs_l3435); end
  def test_lever_graphs_m3435; assert_equal("2020", worksheet.lever_graphs_m3435); end
  def test_lever_graphs_n3435; assert_equal("2025", worksheet.lever_graphs_n3435); end
  def test_lever_graphs_o3435; assert_equal("2030", worksheet.lever_graphs_o3435); end
  def test_lever_graphs_p3435; assert_equal("2035", worksheet.lever_graphs_p3435); end
  def test_lever_graphs_q3435; assert_equal("2040", worksheet.lever_graphs_q3435); end
  def test_lever_graphs_r3435; assert_equal("2045", worksheet.lever_graphs_r3435); end
  def test_lever_graphs_s3435; assert_equal("2050", worksheet.lever_graphs_s3435); end
  def test_lever_graphs_b3436; assert_equal("Historic data", worksheet.lever_graphs_b3436); end
  def test_lever_graphs_b3437; assert_in_delta(1.0, worksheet.lever_graphs_b3437, 0.002); end
  def test_lever_graphs_k3437; assert_in_delta(0.0, (worksheet.lever_graphs_k3437||0), 0.002); end
  def test_lever_graphs_l3437; assert_in_delta(0.0, (worksheet.lever_graphs_l3437||0), 0.002); end
  def test_lever_graphs_m3437; assert_in_delta(0.0, (worksheet.lever_graphs_m3437||0), 0.002); end
  def test_lever_graphs_n3437; assert_in_delta(0.0, (worksheet.lever_graphs_n3437||0), 0.002); end
  def test_lever_graphs_o3437; assert_in_delta(0.0, (worksheet.lever_graphs_o3437||0), 0.002); end
  def test_lever_graphs_p3437; assert_in_delta(0.0, (worksheet.lever_graphs_p3437||0), 0.002); end
  def test_lever_graphs_q3437; assert_in_delta(0.0, (worksheet.lever_graphs_q3437||0), 0.002); end
  def test_lever_graphs_r3437; assert_in_delta(0.0, (worksheet.lever_graphs_r3437||0), 0.002); end
  def test_lever_graphs_s3437; assert_in_delta(0.0, (worksheet.lever_graphs_s3437||0), 0.002); end
  def test_lever_graphs_b3438; assert_in_epsilon(2.0, worksheet.lever_graphs_b3438, 0.002); end
  def test_lever_graphs_k3438; assert_in_delta(0.0, (worksheet.lever_graphs_k3438||0), 0.002); end
  def test_lever_graphs_l3438; assert_in_delta(0.0, (worksheet.lever_graphs_l3438||0), 0.002); end
  def test_lever_graphs_m3438; assert_in_delta(0.0, (worksheet.lever_graphs_m3438||0), 0.002); end
  def test_lever_graphs_n3438; assert_in_delta(0.01, worksheet.lever_graphs_n3438, 0.002); end
  def test_lever_graphs_o3438; assert_in_delta(0.05, worksheet.lever_graphs_o3438, 0.002); end
  def test_lever_graphs_p3438; assert_in_delta(0.2, worksheet.lever_graphs_p3438, 0.002); end
  def test_lever_graphs_q3438; assert_in_delta(0.4, worksheet.lever_graphs_q3438, 0.002); end
  def test_lever_graphs_r3438; assert_in_delta(0.7, worksheet.lever_graphs_r3438, 0.002); end
  def test_lever_graphs_s3438; assert_in_delta(1.0, worksheet.lever_graphs_s3438, 0.002); end
  def test_lever_graphs_b3439; assert_in_epsilon(3.0, worksheet.lever_graphs_b3439, 0.002); end
  def test_lever_graphs_k3439; assert_in_delta(0.0, (worksheet.lever_graphs_k3439||0), 0.002); end
  def test_lever_graphs_l3439; assert_in_delta(0.0, (worksheet.lever_graphs_l3439||0), 0.002); end
  def test_lever_graphs_m3439; assert_in_delta(0.0, (worksheet.lever_graphs_m3439||0), 0.002); end
  def test_lever_graphs_n3439; assert_in_delta(0.025, worksheet.lever_graphs_n3439, 0.002); end
  def test_lever_graphs_o3439; assert_in_delta(0.125, worksheet.lever_graphs_o3439, 0.002); end
  def test_lever_graphs_p3439; assert_in_delta(0.5, worksheet.lever_graphs_p3439, 0.002); end
  def test_lever_graphs_q3439; assert_in_delta(1.0, worksheet.lever_graphs_q3439, 0.002); end
  def test_lever_graphs_r3439; assert_in_epsilon(1.75, worksheet.lever_graphs_r3439, 0.002); end
  def test_lever_graphs_s3439; assert_in_epsilon(2.5, worksheet.lever_graphs_s3439, 0.002); end
  def test_lever_graphs_b3440; assert_in_epsilon(4.0, worksheet.lever_graphs_b3440, 0.002); end
  def test_lever_graphs_k3440; assert_in_delta(0.0, (worksheet.lever_graphs_k3440||0), 0.002); end
  def test_lever_graphs_l3440; assert_in_delta(0.0, (worksheet.lever_graphs_l3440||0), 0.002); end
  def test_lever_graphs_m3440; assert_in_delta(0.0, (worksheet.lever_graphs_m3440||0), 0.002); end
  def test_lever_graphs_n3440; assert_in_delta(0.1, worksheet.lever_graphs_n3440, 0.002); end
  def test_lever_graphs_o3440; assert_in_delta(0.5, worksheet.lever_graphs_o3440, 0.002); end
  def test_lever_graphs_p3440; assert_in_epsilon(2.0, worksheet.lever_graphs_p3440, 0.002); end
  def test_lever_graphs_q3440; assert_in_epsilon(4.0, worksheet.lever_graphs_q3440, 0.002); end
  def test_lever_graphs_r3440; assert_in_epsilon(7.0, worksheet.lever_graphs_r3440, 0.002); end
  def test_lever_graphs_s3440; assert_in_epsilon(10.0, worksheet.lever_graphs_s3440, 0.002); end
  def test_lever_graphs_c3453; assert_equal("1975", worksheet.lever_graphs_c3453); end
  def test_lever_graphs_d3453; assert_equal("1980", worksheet.lever_graphs_d3453); end
  def test_lever_graphs_e3453; assert_equal("1985", worksheet.lever_graphs_e3453); end
  def test_lever_graphs_f3453; assert_equal("1990", worksheet.lever_graphs_f3453); end
  def test_lever_graphs_g3453; assert_equal("1995", worksheet.lever_graphs_g3453); end
  def test_lever_graphs_h3453; assert_equal("2000", worksheet.lever_graphs_h3453); end
  def test_lever_graphs_i3453; assert_equal("2005", worksheet.lever_graphs_i3453); end
  def test_lever_graphs_j3453; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3453, 0.002); end
  def test_lever_graphs_k3453; assert_equal("2011", worksheet.lever_graphs_k3453); end
  def test_lever_graphs_l3453; assert_equal("2015", worksheet.lever_graphs_l3453); end
  def test_lever_graphs_m3453; assert_equal("2020", worksheet.lever_graphs_m3453); end
  def test_lever_graphs_n3453; assert_equal("2025", worksheet.lever_graphs_n3453); end
  def test_lever_graphs_o3453; assert_equal("2030", worksheet.lever_graphs_o3453); end
  def test_lever_graphs_p3453; assert_equal("2035", worksheet.lever_graphs_p3453); end
  def test_lever_graphs_q3453; assert_equal("2040", worksheet.lever_graphs_q3453); end
  def test_lever_graphs_r3453; assert_equal("2045", worksheet.lever_graphs_r3453); end
  def test_lever_graphs_s3453; assert_equal("2050", worksheet.lever_graphs_s3453); end
  def test_lever_graphs_b3454; assert_equal("Historic data", worksheet.lever_graphs_b3454); end
  def test_lever_graphs_b3455; assert_in_delta(1.0, worksheet.lever_graphs_b3455, 0.002); end
  def test_lever_graphs_k3455; assert_in_delta(0.0, (worksheet.lever_graphs_k3455||0), 0.002); end
  def test_lever_graphs_l3455; assert_in_delta(0.0, (worksheet.lever_graphs_l3455||0), 0.002); end
  def test_lever_graphs_m3455; assert_in_delta(0.0, (worksheet.lever_graphs_m3455||0), 0.002); end
  def test_lever_graphs_n3455; assert_in_delta(0.0, (worksheet.lever_graphs_n3455||0), 0.002); end
  def test_lever_graphs_o3455; assert_in_delta(0.0, (worksheet.lever_graphs_o3455||0), 0.002); end
  def test_lever_graphs_p3455; assert_in_delta(0.0, (worksheet.lever_graphs_p3455||0), 0.002); end
  def test_lever_graphs_q3455; assert_in_delta(0.0, (worksheet.lever_graphs_q3455||0), 0.002); end
  def test_lever_graphs_r3455; assert_in_delta(0.0, (worksheet.lever_graphs_r3455||0), 0.002); end
  def test_lever_graphs_s3455; assert_in_delta(0.0, (worksheet.lever_graphs_s3455||0), 0.002); end
  def test_lever_graphs_b3456; assert_in_epsilon(2.0, worksheet.lever_graphs_b3456, 0.002); end
  def test_lever_graphs_k3456; assert_in_delta(0.0, (worksheet.lever_graphs_k3456||0), 0.002); end
  def test_lever_graphs_l3456; assert_in_delta(0.0, (worksheet.lever_graphs_l3456||0), 0.002); end
  def test_lever_graphs_m3456; assert_in_delta(0.0, (worksheet.lever_graphs_m3456||0), 0.002); end
  def test_lever_graphs_n3456; assert_in_delta(0.0037000000000000006, worksheet.lever_graphs_n3456, 0.002); end
  def test_lever_graphs_o3456; assert_in_delta(0.018500000000000003, worksheet.lever_graphs_o3456, 0.002); end
  def test_lever_graphs_p3456; assert_in_delta(0.07400000000000001, worksheet.lever_graphs_p3456, 0.002); end
  def test_lever_graphs_q3456; assert_in_delta(0.14800000000000002, worksheet.lever_graphs_q3456, 0.002); end
  def test_lever_graphs_r3456; assert_in_delta(0.259, worksheet.lever_graphs_r3456, 0.002); end
  def test_lever_graphs_s3456; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_s3456, 0.002); end
  def test_lever_graphs_b3457; assert_in_epsilon(3.0, worksheet.lever_graphs_b3457, 0.002); end
  def test_lever_graphs_k3457; assert_in_delta(0.0, (worksheet.lever_graphs_k3457||0), 0.002); end
  def test_lever_graphs_l3457; assert_in_delta(0.0, (worksheet.lever_graphs_l3457||0), 0.002); end
  def test_lever_graphs_m3457; assert_in_delta(0.0, (worksheet.lever_graphs_m3457||0), 0.002); end
  def test_lever_graphs_n3457; assert_in_delta(0.009250000000000001, worksheet.lever_graphs_n3457, 0.002); end
  def test_lever_graphs_o3457; assert_in_delta(0.046250000000000006, worksheet.lever_graphs_o3457, 0.002); end
  def test_lever_graphs_p3457; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_p3457, 0.002); end
  def test_lever_graphs_q3457; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_q3457, 0.002); end
  def test_lever_graphs_r3457; assert_in_delta(0.6475, worksheet.lever_graphs_r3457, 0.002); end
  def test_lever_graphs_s3457; assert_in_delta(0.925, worksheet.lever_graphs_s3457, 0.002); end
  def test_lever_graphs_b3458; assert_in_epsilon(4.0, worksheet.lever_graphs_b3458, 0.002); end
  def test_lever_graphs_k3458; assert_in_delta(0.0, (worksheet.lever_graphs_k3458||0), 0.002); end
  def test_lever_graphs_l3458; assert_in_delta(0.0, (worksheet.lever_graphs_l3458||0), 0.002); end
  def test_lever_graphs_m3458; assert_in_delta(0.0, (worksheet.lever_graphs_m3458||0), 0.002); end
  def test_lever_graphs_n3458; assert_in_delta(0.037000000000000005, worksheet.lever_graphs_n3458, 0.002); end
  def test_lever_graphs_o3458; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_o3458, 0.002); end
  def test_lever_graphs_p3458; assert_in_delta(0.7400000000000001, worksheet.lever_graphs_p3458, 0.002); end
  def test_lever_graphs_q3458; assert_in_epsilon(1.4800000000000002, worksheet.lever_graphs_q3458, 0.002); end
  def test_lever_graphs_r3458; assert_in_epsilon(2.59, worksheet.lever_graphs_r3458, 0.002); end
  def test_lever_graphs_s3458; assert_in_epsilon(3.7, worksheet.lever_graphs_s3458, 0.002); end
  def test_lever_graphs_b2508; assert_equal("Year", worksheet.lever_graphs_b2508); end
  def test_lever_graphs_c2508; assert_equal("Level", worksheet.lever_graphs_c2508); end
  def test_lever_graphs_d2508; assert_equal("Title", worksheet.lever_graphs_d2508); end
  def test_lever_graphs_e2508; assert_equal("heater.solid.boiler.urban.space", worksheet.lever_graphs_e2508); end
  def test_lever_graphs_f2508; assert_equal("heater.liquid.boiler.urban.space", worksheet.lever_graphs_f2508); end
  def test_lever_graphs_g2508; assert_equal("heater.gas.boiler.urban.space", worksheet.lever_graphs_g2508); end
  def test_lever_graphs_h2508; assert_equal("heater.heatpump.urban.space", worksheet.lever_graphs_h2508); end
  def test_lever_graphs_i2508; assert_equal("heater.electricity.urban.space", worksheet.lever_graphs_i2508); end
  def test_lever_graphs_j2508; assert_equal("heater.solar.urban.space", worksheet.lever_graphs_j2508); end
  def test_lever_graphs_k2508; assert_equal("heater.microchp.urban.space", worksheet.lever_graphs_k2508); end
  def test_lever_graphs_l2508; assert_equal("heater.districtheating.urban.space", worksheet.lever_graphs_l2508); end
  def test_lever_graphs_b2509; assert_in_epsilon(2011.0, worksheet.lever_graphs_b2509, 0.002); end
  def test_lever_graphs_c2509; assert_in_delta(1.0, worksheet.lever_graphs_c2509, 0.002); end
  def test_lever_graphs_d2509; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2509, 0.002); end
  def test_lever_graphs_e2509; assert_in_delta(0.07, worksheet.lever_graphs_e2509, 0.002); end
  def test_lever_graphs_f2509; assert_in_delta(0.14, worksheet.lever_graphs_f2509, 0.002); end
  def test_lever_graphs_g2509; assert_in_delta(0.55, worksheet.lever_graphs_g2509, 0.002); end
  def test_lever_graphs_h2509; assert_in_delta(0.02, worksheet.lever_graphs_h2509, 0.002); end
  def test_lever_graphs_i2509; assert_in_delta(0.03, worksheet.lever_graphs_i2509, 0.002); end
  def test_lever_graphs_j2509; assert_in_delta(0.0, (worksheet.lever_graphs_j2509||0), 0.002); end
  def test_lever_graphs_k2509; assert_in_delta(0.02, worksheet.lever_graphs_k2509, 0.002); end
  def test_lever_graphs_l2509; assert_in_delta(0.17, worksheet.lever_graphs_l2509, 0.002); end
  def test_lever_graphs_b2510; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2510, 0.002); end
  def test_lever_graphs_c2510; assert_in_delta(1.0, worksheet.lever_graphs_c2510, 0.002); end
  def test_lever_graphs_d2510; assert_equal("2050: Level 1", worksheet.lever_graphs_d2510); end
  def test_lever_graphs_e2510; assert_in_delta(0.02, worksheet.lever_graphs_e2510, 0.002); end
  def test_lever_graphs_f2510; assert_in_delta(0.14, worksheet.lever_graphs_f2510, 0.002); end
  def test_lever_graphs_g2510; assert_in_delta(0.55, worksheet.lever_graphs_g2510, 0.002); end
  def test_lever_graphs_h2510; assert_in_delta(0.02, worksheet.lever_graphs_h2510, 0.002); end
  def test_lever_graphs_i2510; assert_in_delta(0.08, worksheet.lever_graphs_i2510, 0.002); end
  def test_lever_graphs_j2510; assert_in_delta(0.0, (worksheet.lever_graphs_j2510||0), 0.002); end
  def test_lever_graphs_k2510; assert_in_delta(0.02, worksheet.lever_graphs_k2510, 0.002); end
  def test_lever_graphs_l2510; assert_in_delta(0.17, worksheet.lever_graphs_l2510, 0.002); end
  def test_lever_graphs_b2511; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2511, 0.002); end
  def test_lever_graphs_c2511; assert_in_epsilon(2.0, worksheet.lever_graphs_c2511, 0.002); end
  def test_lever_graphs_d2511; assert_equal("2050: Level 2", worksheet.lever_graphs_d2511); end
  def test_lever_graphs_e2511; assert_in_delta(0.01, worksheet.lever_graphs_e2511, 0.002); end
  def test_lever_graphs_f2511; assert_in_delta(0.01, worksheet.lever_graphs_f2511, 0.002); end
  def test_lever_graphs_g2511; assert_in_delta(0.1, worksheet.lever_graphs_g2511, 0.002); end
  def test_lever_graphs_h2511; assert_in_delta(0.15, worksheet.lever_graphs_h2511, 0.002); end
  def test_lever_graphs_i2511; assert_in_delta(0.05, worksheet.lever_graphs_i2511, 0.002); end
  def test_lever_graphs_j2511; assert_in_delta(0.05, worksheet.lever_graphs_j2511, 0.002); end
  def test_lever_graphs_k2511; assert_in_delta(0.08, worksheet.lever_graphs_k2511, 0.002); end
  def test_lever_graphs_l2511; assert_in_delta(0.55, worksheet.lever_graphs_l2511, 0.002); end
  def test_lever_graphs_b2512; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2512, 0.002); end
  def test_lever_graphs_c2512; assert_in_epsilon(3.0, worksheet.lever_graphs_c2512, 0.002); end
  def test_lever_graphs_d2512; assert_equal("2050: Level 3", worksheet.lever_graphs_d2512); end
  def test_lever_graphs_e2512; assert_in_delta(0.01, worksheet.lever_graphs_e2512, 0.002); end
  def test_lever_graphs_f2512; assert_in_delta(0.0, (worksheet.lever_graphs_f2512||0), 0.002); end
  def test_lever_graphs_g2512; assert_in_delta(0.3, worksheet.lever_graphs_g2512, 0.002); end
  def test_lever_graphs_h2512; assert_in_delta(0.35, worksheet.lever_graphs_h2512, 0.002); end
  def test_lever_graphs_i2512; assert_in_delta(0.05, worksheet.lever_graphs_i2512, 0.002); end
  def test_lever_graphs_j2512; assert_in_delta(0.1, worksheet.lever_graphs_j2512, 0.002); end
  def test_lever_graphs_k2512; assert_in_delta(0.09, worksheet.lever_graphs_k2512, 0.002); end
  def test_lever_graphs_l2512; assert_in_delta(0.1, worksheet.lever_graphs_l2512, 0.002); end
  def test_lever_graphs_b2513; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2513, 0.002); end
  def test_lever_graphs_c2513; assert_in_epsilon(4.0, worksheet.lever_graphs_c2513, 0.002); end
  def test_lever_graphs_d2513; assert_equal("2050: Level 4", worksheet.lever_graphs_d2513); end
  def test_lever_graphs_e2513; assert_in_delta(0.0, (worksheet.lever_graphs_e2513||0), 0.002); end
  def test_lever_graphs_f2513; assert_in_delta(0.0, (worksheet.lever_graphs_f2513||0), 0.002); end
  def test_lever_graphs_g2513; assert_in_delta(0.1, worksheet.lever_graphs_g2513, 0.002); end
  def test_lever_graphs_h2513; assert_in_delta(0.5, worksheet.lever_graphs_h2513, 0.002); end
  def test_lever_graphs_i2513; assert_in_delta(0.02, worksheet.lever_graphs_i2513, 0.002); end
  def test_lever_graphs_j2513; assert_in_delta(0.2, worksheet.lever_graphs_j2513, 0.002); end
  def test_lever_graphs_k2513; assert_in_delta(0.11, worksheet.lever_graphs_k2513, 0.002); end
  def test_lever_graphs_l2513; assert_in_delta(0.07, worksheet.lever_graphs_l2513, 0.002); end
  def test_lever_graphs_c2519; assert_equal("1975", worksheet.lever_graphs_c2519); end
  def test_lever_graphs_d2519; assert_equal("1980", worksheet.lever_graphs_d2519); end
  def test_lever_graphs_e2519; assert_equal("1985", worksheet.lever_graphs_e2519); end
  def test_lever_graphs_f2519; assert_equal("1990", worksheet.lever_graphs_f2519); end
  def test_lever_graphs_g2519; assert_equal("1995", worksheet.lever_graphs_g2519); end
  def test_lever_graphs_h2519; assert_equal("2000", worksheet.lever_graphs_h2519); end
  def test_lever_graphs_i2519; assert_equal("2005", worksheet.lever_graphs_i2519); end
  def test_lever_graphs_j2519; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2519, 0.002); end
  def test_lever_graphs_k2519; assert_equal("2011", worksheet.lever_graphs_k2519); end
  def test_lever_graphs_l2519; assert_equal("2015", worksheet.lever_graphs_l2519); end
  def test_lever_graphs_m2519; assert_equal("2020", worksheet.lever_graphs_m2519); end
  def test_lever_graphs_n2519; assert_equal("2025", worksheet.lever_graphs_n2519); end
  def test_lever_graphs_o2519; assert_equal("2030", worksheet.lever_graphs_o2519); end
  def test_lever_graphs_p2519; assert_equal("2035", worksheet.lever_graphs_p2519); end
  def test_lever_graphs_q2519; assert_equal("2040", worksheet.lever_graphs_q2519); end
  def test_lever_graphs_r2519; assert_equal("2045", worksheet.lever_graphs_r2519); end
  def test_lever_graphs_s2519; assert_equal("2050", worksheet.lever_graphs_s2519); end
  def test_lever_graphs_b2520; assert_equal("Historic data", worksheet.lever_graphs_b2520); end
  def test_lever_graphs_b2521; assert_in_delta(1.0, worksheet.lever_graphs_b2521, 0.002); end
  def test_lever_graphs_k2521; assert_in_delta(0.02, worksheet.lever_graphs_k2521, 0.002); end
  def test_lever_graphs_l2521; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2521, 0.002); end
  def test_lever_graphs_m2521; assert_in_delta(0.02, worksheet.lever_graphs_m2521, 0.002); end
  def test_lever_graphs_n2521; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_n2521, 0.002); end
  def test_lever_graphs_o2521; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_o2521, 0.002); end
  def test_lever_graphs_p2521; assert_in_delta(0.02, worksheet.lever_graphs_p2521, 0.002); end
  def test_lever_graphs_q2521; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_q2521, 0.002); end
  def test_lever_graphs_r2521; assert_in_delta(0.02, worksheet.lever_graphs_r2521, 0.002); end
  def test_lever_graphs_s2521; assert_in_delta(0.02, worksheet.lever_graphs_s2521, 0.002); end
  def test_lever_graphs_b2522; assert_in_epsilon(2.0, worksheet.lever_graphs_b2522, 0.002); end
  def test_lever_graphs_k2522; assert_in_delta(0.02, worksheet.lever_graphs_k2522, 0.002); end
  def test_lever_graphs_l2522; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2522, 0.002); end
  def test_lever_graphs_m2522; assert_in_delta(0.03857142857142857, worksheet.lever_graphs_m2522, 0.002); end
  def test_lever_graphs_n2522; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2522, 0.002); end
  def test_lever_graphs_o2522; assert_in_delta(0.0757142857142857, worksheet.lever_graphs_o2522, 0.002); end
  def test_lever_graphs_p2522; assert_in_delta(0.09428571428571428, worksheet.lever_graphs_p2522, 0.002); end
  def test_lever_graphs_q2522; assert_in_delta(0.11285714285714285, worksheet.lever_graphs_q2522, 0.002); end
  def test_lever_graphs_r2522; assert_in_delta(0.13142857142857142, worksheet.lever_graphs_r2522, 0.002); end
  def test_lever_graphs_s2522; assert_in_delta(0.15, worksheet.lever_graphs_s2522, 0.002); end
  def test_lever_graphs_b2523; assert_in_epsilon(3.0, worksheet.lever_graphs_b2523, 0.002); end
  def test_lever_graphs_k2523; assert_in_delta(0.02, worksheet.lever_graphs_k2523, 0.002); end
  def test_lever_graphs_l2523; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2523, 0.002); end
  def test_lever_graphs_m2523; assert_in_delta(0.06714285714285714, worksheet.lever_graphs_m2523, 0.002); end
  def test_lever_graphs_n2523; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_n2523, 0.002); end
  def test_lever_graphs_o2523; assert_in_delta(0.16142857142857142, worksheet.lever_graphs_o2523, 0.002); end
  def test_lever_graphs_p2523; assert_in_delta(0.20857142857142855, worksheet.lever_graphs_p2523, 0.002); end
  def test_lever_graphs_q2523; assert_in_delta(0.2557142857142857, worksheet.lever_graphs_q2523, 0.002); end
  def test_lever_graphs_r2523; assert_in_delta(0.3028571428571428, worksheet.lever_graphs_r2523, 0.002); end
  def test_lever_graphs_s2523; assert_in_delta(0.35, worksheet.lever_graphs_s2523, 0.002); end
  def test_lever_graphs_b2524; assert_in_epsilon(4.0, worksheet.lever_graphs_b2524, 0.002); end
  def test_lever_graphs_k2524; assert_in_delta(0.02, worksheet.lever_graphs_k2524, 0.002); end
  def test_lever_graphs_l2524; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2524, 0.002); end
  def test_lever_graphs_m2524; assert_in_delta(0.08857142857142856, worksheet.lever_graphs_m2524, 0.002); end
  def test_lever_graphs_n2524; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_n2524, 0.002); end
  def test_lever_graphs_o2524; assert_in_delta(0.2257142857142857, worksheet.lever_graphs_o2524, 0.002); end
  def test_lever_graphs_p2524; assert_in_delta(0.29428571428571426, worksheet.lever_graphs_p2524, 0.002); end
  def test_lever_graphs_q2524; assert_in_delta(0.3628571428571429, worksheet.lever_graphs_q2524, 0.002); end
  def test_lever_graphs_r2524; assert_in_delta(0.4314285714285714, worksheet.lever_graphs_r2524, 0.002); end
  def test_lever_graphs_s2524; assert_in_delta(0.5, worksheet.lever_graphs_s2524, 0.002); end
  def test_lever_graphs_c2529; assert_equal("1975", worksheet.lever_graphs_c2529); end
  def test_lever_graphs_d2529; assert_equal("1980", worksheet.lever_graphs_d2529); end
  def test_lever_graphs_e2529; assert_equal("1985", worksheet.lever_graphs_e2529); end
  def test_lever_graphs_f2529; assert_equal("1990", worksheet.lever_graphs_f2529); end
  def test_lever_graphs_g2529; assert_equal("1995", worksheet.lever_graphs_g2529); end
  def test_lever_graphs_h2529; assert_equal("2000", worksheet.lever_graphs_h2529); end
  def test_lever_graphs_i2529; assert_equal("2005", worksheet.lever_graphs_i2529); end
  def test_lever_graphs_j2529; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2529, 0.002); end
  def test_lever_graphs_k2529; assert_equal("2011", worksheet.lever_graphs_k2529); end
  def test_lever_graphs_l2529; assert_equal("2015", worksheet.lever_graphs_l2529); end
  def test_lever_graphs_m2529; assert_equal("2020", worksheet.lever_graphs_m2529); end
  def test_lever_graphs_n2529; assert_equal("2025", worksheet.lever_graphs_n2529); end
  def test_lever_graphs_o2529; assert_equal("2030", worksheet.lever_graphs_o2529); end
  def test_lever_graphs_p2529; assert_equal("2035", worksheet.lever_graphs_p2529); end
  def test_lever_graphs_q2529; assert_equal("2040", worksheet.lever_graphs_q2529); end
  def test_lever_graphs_r2529; assert_equal("2045", worksheet.lever_graphs_r2529); end
  def test_lever_graphs_s2529; assert_equal("2050", worksheet.lever_graphs_s2529); end
  def test_lever_graphs_b2530; assert_equal("Historic data", worksheet.lever_graphs_b2530); end
  def test_lever_graphs_b2531; assert_in_delta(1.0, worksheet.lever_graphs_b2531, 0.002); end
  def test_lever_graphs_k2531; assert_in_delta(0.0, (worksheet.lever_graphs_k2531||0), 0.002); end
  def test_lever_graphs_l2531; assert_in_delta(0.0, (worksheet.lever_graphs_l2531||0), 0.002); end
  def test_lever_graphs_m2531; assert_in_delta(0.0, (worksheet.lever_graphs_m2531||0), 0.002); end
  def test_lever_graphs_n2531; assert_in_delta(0.0, (worksheet.lever_graphs_n2531||0), 0.002); end
  def test_lever_graphs_o2531; assert_in_delta(0.0, (worksheet.lever_graphs_o2531||0), 0.002); end
  def test_lever_graphs_p2531; assert_in_delta(0.0, (worksheet.lever_graphs_p2531||0), 0.002); end
  def test_lever_graphs_q2531; assert_in_delta(0.0, (worksheet.lever_graphs_q2531||0), 0.002); end
  def test_lever_graphs_r2531; assert_in_delta(0.0, (worksheet.lever_graphs_r2531||0), 0.002); end
  def test_lever_graphs_s2531; assert_in_delta(0.0, (worksheet.lever_graphs_s2531||0), 0.002); end
  def test_lever_graphs_b2532; assert_in_epsilon(2.0, worksheet.lever_graphs_b2532, 0.002); end
  def test_lever_graphs_k2532; assert_in_delta(0.0, (worksheet.lever_graphs_k2532||0), 0.002); end
  def test_lever_graphs_l2532; assert_in_delta(0.0, (worksheet.lever_graphs_l2532||0), 0.002); end
  def test_lever_graphs_m2532; assert_in_delta(0.007142857142857143, worksheet.lever_graphs_m2532, 0.002); end
  def test_lever_graphs_n2532; assert_in_delta(0.014285714285714285, worksheet.lever_graphs_n2532, 0.002); end
  def test_lever_graphs_o2532; assert_in_delta(0.02142857142857143, worksheet.lever_graphs_o2532, 0.002); end
  def test_lever_graphs_p2532; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_p2532, 0.002); end
  def test_lever_graphs_q2532; assert_in_delta(0.03571428571428572, worksheet.lever_graphs_q2532, 0.002); end
  def test_lever_graphs_r2532; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_r2532, 0.002); end
  def test_lever_graphs_s2532; assert_in_delta(0.05, worksheet.lever_graphs_s2532, 0.002); end
  def test_lever_graphs_b2533; assert_in_epsilon(3.0, worksheet.lever_graphs_b2533, 0.002); end
  def test_lever_graphs_k2533; assert_in_delta(0.0, (worksheet.lever_graphs_k2533||0), 0.002); end
  def test_lever_graphs_l2533; assert_in_delta(0.0, (worksheet.lever_graphs_l2533||0), 0.002); end
  def test_lever_graphs_m2533; assert_in_delta(0.014285714285714285, worksheet.lever_graphs_m2533, 0.002); end
  def test_lever_graphs_n2533; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_n2533, 0.002); end
  def test_lever_graphs_o2533; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_o2533, 0.002); end
  def test_lever_graphs_p2533; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_p2533, 0.002); end
  def test_lever_graphs_q2533; assert_in_delta(0.07142857142857144, worksheet.lever_graphs_q2533, 0.002); end
  def test_lever_graphs_r2533; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_r2533, 0.002); end
  def test_lever_graphs_s2533; assert_in_delta(0.1, worksheet.lever_graphs_s2533, 0.002); end
  def test_lever_graphs_b2534; assert_in_epsilon(4.0, worksheet.lever_graphs_b2534, 0.002); end
  def test_lever_graphs_k2534; assert_in_delta(0.0, (worksheet.lever_graphs_k2534||0), 0.002); end
  def test_lever_graphs_l2534; assert_in_delta(0.0, (worksheet.lever_graphs_l2534||0), 0.002); end
  def test_lever_graphs_m2534; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_m2534, 0.002); end
  def test_lever_graphs_n2534; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2534, 0.002); end
  def test_lever_graphs_o2534; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_o2534, 0.002); end
  def test_lever_graphs_p2534; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_p2534, 0.002); end
  def test_lever_graphs_q2534; assert_in_delta(0.14285714285714288, worksheet.lever_graphs_q2534, 0.002); end
  def test_lever_graphs_r2534; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_r2534, 0.002); end
  def test_lever_graphs_s2534; assert_in_delta(0.2, worksheet.lever_graphs_s2534, 0.002); end
  def test_lever_graphs_c2539; assert_equal("1975", worksheet.lever_graphs_c2539); end
  def test_lever_graphs_d2539; assert_equal("1980", worksheet.lever_graphs_d2539); end
  def test_lever_graphs_e2539; assert_equal("1985", worksheet.lever_graphs_e2539); end
  def test_lever_graphs_f2539; assert_equal("1990", worksheet.lever_graphs_f2539); end
  def test_lever_graphs_g2539; assert_equal("1995", worksheet.lever_graphs_g2539); end
  def test_lever_graphs_h2539; assert_equal("2000", worksheet.lever_graphs_h2539); end
  def test_lever_graphs_i2539; assert_equal("2005", worksheet.lever_graphs_i2539); end
  def test_lever_graphs_j2539; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2539, 0.002); end
  def test_lever_graphs_k2539; assert_equal("2011", worksheet.lever_graphs_k2539); end
  def test_lever_graphs_l2539; assert_equal("2015", worksheet.lever_graphs_l2539); end
  def test_lever_graphs_m2539; assert_equal("2020", worksheet.lever_graphs_m2539); end
  def test_lever_graphs_n2539; assert_equal("2025", worksheet.lever_graphs_n2539); end
  def test_lever_graphs_o2539; assert_equal("2030", worksheet.lever_graphs_o2539); end
  def test_lever_graphs_p2539; assert_equal("2035", worksheet.lever_graphs_p2539); end
  def test_lever_graphs_q2539; assert_equal("2040", worksheet.lever_graphs_q2539); end
  def test_lever_graphs_r2539; assert_equal("2045", worksheet.lever_graphs_r2539); end
  def test_lever_graphs_s2539; assert_equal("2050", worksheet.lever_graphs_s2539); end
  def test_lever_graphs_b2540; assert_equal("Historic data", worksheet.lever_graphs_b2540); end
  def test_lever_graphs_b2541; assert_in_delta(1.0, worksheet.lever_graphs_b2541, 0.002); end
  def test_lever_graphs_k2541; assert_in_delta(0.02, worksheet.lever_graphs_k2541, 0.002); end
  def test_lever_graphs_l2541; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2541, 0.002); end
  def test_lever_graphs_m2541; assert_in_delta(0.02, worksheet.lever_graphs_m2541, 0.002); end
  def test_lever_graphs_n2541; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_n2541, 0.002); end
  def test_lever_graphs_o2541; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_o2541, 0.002); end
  def test_lever_graphs_p2541; assert_in_delta(0.02, worksheet.lever_graphs_p2541, 0.002); end
  def test_lever_graphs_q2541; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_q2541, 0.002); end
  def test_lever_graphs_r2541; assert_in_delta(0.02, worksheet.lever_graphs_r2541, 0.002); end
  def test_lever_graphs_s2541; assert_in_delta(0.02, worksheet.lever_graphs_s2541, 0.002); end
  def test_lever_graphs_b2542; assert_in_epsilon(2.0, worksheet.lever_graphs_b2542, 0.002); end
  def test_lever_graphs_k2542; assert_in_delta(0.02, worksheet.lever_graphs_k2542, 0.002); end
  def test_lever_graphs_l2542; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2542, 0.002); end
  def test_lever_graphs_m2542; assert_in_delta(0.045714285714285714, worksheet.lever_graphs_m2542, 0.002); end
  def test_lever_graphs_n2542; assert_in_delta(0.07142857142857142, worksheet.lever_graphs_n2542, 0.002); end
  def test_lever_graphs_o2542; assert_in_delta(0.09714285714285714, worksheet.lever_graphs_o2542, 0.002); end
  def test_lever_graphs_p2542; assert_in_delta(0.12285714285714285, worksheet.lever_graphs_p2542, 0.002); end
  def test_lever_graphs_q2542; assert_in_delta(0.14857142857142858, worksheet.lever_graphs_q2542, 0.002); end
  def test_lever_graphs_r2542; assert_in_delta(0.17428571428571427, worksheet.lever_graphs_r2542, 0.002); end
  def test_lever_graphs_s2542; assert_in_delta(0.2, worksheet.lever_graphs_s2542, 0.002); end
  def test_lever_graphs_b2543; assert_in_epsilon(3.0, worksheet.lever_graphs_b2543, 0.002); end
  def test_lever_graphs_k2543; assert_in_delta(0.02, worksheet.lever_graphs_k2543, 0.002); end
  def test_lever_graphs_l2543; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2543, 0.002); end
  def test_lever_graphs_m2543; assert_in_delta(0.08142857142857143, worksheet.lever_graphs_m2543, 0.002); end
  def test_lever_graphs_n2543; assert_in_delta(0.14285714285714285, worksheet.lever_graphs_n2543, 0.002); end
  def test_lever_graphs_o2543; assert_in_delta(0.2042857142857143, worksheet.lever_graphs_o2543, 0.002); end
  def test_lever_graphs_p2543; assert_in_delta(0.2657142857142857, worksheet.lever_graphs_p2543, 0.002); end
  def test_lever_graphs_q2543; assert_in_delta(0.3271428571428572, worksheet.lever_graphs_q2543, 0.002); end
  def test_lever_graphs_r2543; assert_in_delta(0.38857142857142857, worksheet.lever_graphs_r2543, 0.002); end
  def test_lever_graphs_s2543; assert_in_delta(0.44999999999999996, worksheet.lever_graphs_s2543, 0.002); end
  def test_lever_graphs_b2544; assert_in_epsilon(4.0, worksheet.lever_graphs_b2544, 0.002); end
  def test_lever_graphs_k2544; assert_in_delta(0.02, worksheet.lever_graphs_k2544, 0.002); end
  def test_lever_graphs_l2544; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2544, 0.002); end
  def test_lever_graphs_m2544; assert_in_delta(0.11714285714285713, worksheet.lever_graphs_m2544, 0.002); end
  def test_lever_graphs_n2544; assert_in_delta(0.21428571428571427, worksheet.lever_graphs_n2544, 0.002); end
  def test_lever_graphs_o2544; assert_in_delta(0.3114285714285714, worksheet.lever_graphs_o2544, 0.002); end
  def test_lever_graphs_p2544; assert_in_delta(0.40857142857142853, worksheet.lever_graphs_p2544, 0.002); end
  def test_lever_graphs_q2544; assert_in_delta(0.5057142857142858, worksheet.lever_graphs_q2544, 0.002); end
  def test_lever_graphs_r2544; assert_in_delta(0.6028571428571428, worksheet.lever_graphs_r2544, 0.002); end
  def test_lever_graphs_s2544; assert_in_delta(0.7, worksheet.lever_graphs_s2544, 0.002); end
  def test_lever_graphs_c2406; assert_equal("1975", worksheet.lever_graphs_c2406); end
  def test_lever_graphs_d2406; assert_equal("1980", worksheet.lever_graphs_d2406); end
  def test_lever_graphs_e2406; assert_equal("1985", worksheet.lever_graphs_e2406); end
  def test_lever_graphs_f2406; assert_equal("1990", worksheet.lever_graphs_f2406); end
  def test_lever_graphs_g2406; assert_equal("1995", worksheet.lever_graphs_g2406); end
  def test_lever_graphs_h2406; assert_equal("2000", worksheet.lever_graphs_h2406); end
  def test_lever_graphs_i2406; assert_equal("2005", worksheet.lever_graphs_i2406); end
  def test_lever_graphs_j2406; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2406, 0.002); end
  def test_lever_graphs_k2406; assert_equal("2011", worksheet.lever_graphs_k2406); end
  def test_lever_graphs_l2406; assert_equal("2015", worksheet.lever_graphs_l2406); end
  def test_lever_graphs_m2406; assert_equal("2020", worksheet.lever_graphs_m2406); end
  def test_lever_graphs_n2406; assert_equal("2025", worksheet.lever_graphs_n2406); end
  def test_lever_graphs_o2406; assert_equal("2030", worksheet.lever_graphs_o2406); end
  def test_lever_graphs_p2406; assert_equal("2035", worksheet.lever_graphs_p2406); end
  def test_lever_graphs_q2406; assert_equal("2040", worksheet.lever_graphs_q2406); end
  def test_lever_graphs_r2406; assert_equal("2045", worksheet.lever_graphs_r2406); end
  def test_lever_graphs_s2406; assert_equal("2050", worksheet.lever_graphs_s2406); end
  def test_lever_graphs_b2407; assert_equal("Historic data", worksheet.lever_graphs_b2407); end
  def test_lever_graphs_b2408; assert_in_delta(1.0, worksheet.lever_graphs_b2408, 0.002); end
  def test_lever_graphs_k2408; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2408, 0.002); end
  def test_lever_graphs_l2408; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2408, 0.002); end
  def test_lever_graphs_m2408; assert_in_epsilon(4776.346153846154, worksheet.lever_graphs_m2408, 0.002); end
  def test_lever_graphs_n2408; assert_in_epsilon(4893.413461538462, worksheet.lever_graphs_n2408, 0.002); end
  def test_lever_graphs_o2408; assert_in_epsilon(5010.4807692307695, worksheet.lever_graphs_o2408, 0.002); end
  def test_lever_graphs_p2408; assert_in_epsilon(5127.548076923076, worksheet.lever_graphs_p2408, 0.002); end
  def test_lever_graphs_q2408; assert_in_epsilon(5244.615384615385, worksheet.lever_graphs_q2408, 0.002); end
  def test_lever_graphs_r2408; assert_in_epsilon(5361.682692307692, worksheet.lever_graphs_r2408, 0.002); end
  def test_lever_graphs_s2408; assert_in_epsilon(5478.75, worksheet.lever_graphs_s2408, 0.002); end
  def test_lever_graphs_b2409; assert_in_epsilon(2.0, worksheet.lever_graphs_b2409, 0.002); end
  def test_lever_graphs_k2409; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2409, 0.002); end
  def test_lever_graphs_l2409; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2409, 0.002); end
  def test_lever_graphs_m2409; assert_in_epsilon(4711.12293956044, worksheet.lever_graphs_m2409, 0.002); end
  def test_lever_graphs_n2409; assert_in_epsilon(4762.967032967033, worksheet.lever_graphs_n2409, 0.002); end
  def test_lever_graphs_o2409; assert_in_epsilon(4814.811126373626, worksheet.lever_graphs_o2409, 0.002); end
  def test_lever_graphs_p2409; assert_in_epsilon(4866.655219780219, worksheet.lever_graphs_p2409, 0.002); end
  def test_lever_graphs_q2409; assert_in_epsilon(4918.499313186813, worksheet.lever_graphs_q2409, 0.002); end
  def test_lever_graphs_r2409; assert_in_epsilon(4970.343406593406, worksheet.lever_graphs_r2409, 0.002); end
  def test_lever_graphs_s2409; assert_in_epsilon(5022.1875, worksheet.lever_graphs_s2409, 0.002); end
  def test_lever_graphs_b2410; assert_in_epsilon(3.0, worksheet.lever_graphs_b2410, 0.002); end
  def test_lever_graphs_k2410; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2410, 0.002); end
  def test_lever_graphs_l2410; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2410, 0.002); end
  def test_lever_graphs_m2410; assert_in_epsilon(4645.899725274726, worksheet.lever_graphs_m2410, 0.002); end
  def test_lever_graphs_n2410; assert_in_epsilon(4632.520604395605, worksheet.lever_graphs_n2410, 0.002); end
  def test_lever_graphs_o2410; assert_in_epsilon(4619.141483516483, worksheet.lever_graphs_o2410, 0.002); end
  def test_lever_graphs_p2410; assert_in_epsilon(4605.7623626373625, worksheet.lever_graphs_p2410, 0.002); end
  def test_lever_graphs_q2410; assert_in_epsilon(4592.383241758242, worksheet.lever_graphs_q2410, 0.002); end
  def test_lever_graphs_r2410; assert_in_epsilon(4579.004120879121, worksheet.lever_graphs_r2410, 0.002); end
  def test_lever_graphs_s2410; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2410, 0.002); end
  def test_lever_graphs_b2411; assert_in_epsilon(4.0, worksheet.lever_graphs_b2411, 0.002); end
  def test_lever_graphs_k2411; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2411, 0.002); end
  def test_lever_graphs_l2411; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2411, 0.002); end
  def test_lever_graphs_m2411; assert_in_epsilon(4515.453296703297, worksheet.lever_graphs_m2411, 0.002); end
  def test_lever_graphs_n2411; assert_in_epsilon(4371.627747252747, worksheet.lever_graphs_n2411, 0.002); end
  def test_lever_graphs_o2411; assert_in_epsilon(4227.802197802198, worksheet.lever_graphs_o2411, 0.002); end
  def test_lever_graphs_p2411; assert_in_epsilon(4083.9766483516482, worksheet.lever_graphs_p2411, 0.002); end
  def test_lever_graphs_q2411; assert_in_epsilon(3940.1510989010994, worksheet.lever_graphs_q2411, 0.002); end
  def test_lever_graphs_r2411; assert_in_epsilon(3796.3255494505493, worksheet.lever_graphs_r2411, 0.002); end
  def test_lever_graphs_s2411; assert_in_epsilon(3652.5, worksheet.lever_graphs_s2411, 0.002); end
  def test_lever_graphs_c2396; assert_equal("1975", worksheet.lever_graphs_c2396); end
  def test_lever_graphs_d2396; assert_equal("1980", worksheet.lever_graphs_d2396); end
  def test_lever_graphs_e2396; assert_equal("1985", worksheet.lever_graphs_e2396); end
  def test_lever_graphs_f2396; assert_equal("1990", worksheet.lever_graphs_f2396); end
  def test_lever_graphs_g2396; assert_equal("1995", worksheet.lever_graphs_g2396); end
  def test_lever_graphs_h2396; assert_equal("2000", worksheet.lever_graphs_h2396); end
  def test_lever_graphs_i2396; assert_equal("2005", worksheet.lever_graphs_i2396); end
  def test_lever_graphs_j2396; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2396, 0.002); end
  def test_lever_graphs_k2396; assert_equal("2011", worksheet.lever_graphs_k2396); end
  def test_lever_graphs_l2396; assert_equal("2015", worksheet.lever_graphs_l2396); end
  def test_lever_graphs_m2396; assert_equal("2020", worksheet.lever_graphs_m2396); end
  def test_lever_graphs_n2396; assert_equal("2025", worksheet.lever_graphs_n2396); end
  def test_lever_graphs_o2396; assert_equal("2030", worksheet.lever_graphs_o2396); end
  def test_lever_graphs_p2396; assert_equal("2035", worksheet.lever_graphs_p2396); end
  def test_lever_graphs_q2396; assert_equal("2040", worksheet.lever_graphs_q2396); end
  def test_lever_graphs_r2396; assert_equal("2045", worksheet.lever_graphs_r2396); end
  def test_lever_graphs_s2396; assert_equal("2050", worksheet.lever_graphs_s2396); end
  def test_lever_graphs_b2397; assert_equal("Historic data", worksheet.lever_graphs_b2397); end
  def test_lever_graphs_b2398; assert_in_delta(1.0, worksheet.lever_graphs_b2398, 0.002); end
  def test_lever_graphs_k2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2398, 0.002); end
  def test_lever_graphs_l2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2398, 0.002); end
  def test_lever_graphs_m2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_m2398, 0.002); end
  def test_lever_graphs_n2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_n2398, 0.002); end
  def test_lever_graphs_o2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_o2398, 0.002); end
  def test_lever_graphs_p2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_p2398, 0.002); end
  def test_lever_graphs_q2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_q2398, 0.002); end
  def test_lever_graphs_r2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_r2398, 0.002); end
  def test_lever_graphs_s2398; assert_in_epsilon(9131.25, worksheet.lever_graphs_s2398, 0.002); end
  def test_lever_graphs_b2399; assert_in_epsilon(2.0, worksheet.lever_graphs_b2399, 0.002); end
  def test_lever_graphs_k2399; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2399, 0.002); end
  def test_lever_graphs_l2399; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2399, 0.002); end
  def test_lever_graphs_m2399; assert_in_epsilon(8870.357142857141, worksheet.lever_graphs_m2399, 0.002); end
  def test_lever_graphs_n2399; assert_in_epsilon(8609.464285714286, worksheet.lever_graphs_n2399, 0.002); end
  def test_lever_graphs_o2399; assert_in_epsilon(8348.571428571428, worksheet.lever_graphs_o2399, 0.002); end
  def test_lever_graphs_p2399; assert_in_epsilon(8087.678571428571, worksheet.lever_graphs_p2399, 0.002); end
  def test_lever_graphs_q2399; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_q2399, 0.002); end
  def test_lever_graphs_r2399; assert_in_epsilon(7565.892857142856, worksheet.lever_graphs_r2399, 0.002); end
  def test_lever_graphs_s2399; assert_in_epsilon(7305.0, worksheet.lever_graphs_s2399, 0.002); end
  def test_lever_graphs_b2400; assert_in_epsilon(3.0, worksheet.lever_graphs_b2400, 0.002); end
  def test_lever_graphs_k2400; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2400, 0.002); end
  def test_lever_graphs_l2400; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2400, 0.002); end
  def test_lever_graphs_m2400; assert_in_epsilon(8674.6875, worksheet.lever_graphs_m2400, 0.002); end
  def test_lever_graphs_n2400; assert_in_epsilon(8218.125, worksheet.lever_graphs_n2400, 0.002); end
  def test_lever_graphs_o2400; assert_in_epsilon(7761.562499999999, worksheet.lever_graphs_o2400, 0.002); end
  def test_lever_graphs_p2400; assert_in_epsilon(7305.0, worksheet.lever_graphs_p2400, 0.002); end
  def test_lever_graphs_q2400; assert_in_epsilon(6848.4375, worksheet.lever_graphs_q2400, 0.002); end
  def test_lever_graphs_r2400; assert_in_epsilon(6391.874999999999, worksheet.lever_graphs_r2400, 0.002); end
  def test_lever_graphs_s2400; assert_in_epsilon(5935.3125, worksheet.lever_graphs_s2400, 0.002); end
  def test_lever_graphs_b2401; assert_in_epsilon(4.0, worksheet.lever_graphs_b2401, 0.002); end
  def test_lever_graphs_k2401; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2401, 0.002); end
  def test_lever_graphs_l2401; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2401, 0.002); end
  def test_lever_graphs_m2401; assert_in_epsilon(8479.017857142857, worksheet.lever_graphs_m2401, 0.002); end
  def test_lever_graphs_n2401; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_n2401, 0.002); end
  def test_lever_graphs_o2401; assert_in_epsilon(7174.553571428571, worksheet.lever_graphs_o2401, 0.002); end
  def test_lever_graphs_p2401; assert_in_epsilon(6522.3214285714275, worksheet.lever_graphs_p2401, 0.002); end
  def test_lever_graphs_q2401; assert_in_epsilon(5870.089285714285, worksheet.lever_graphs_q2401, 0.002); end
  def test_lever_graphs_r2401; assert_in_epsilon(5217.857142857142, worksheet.lever_graphs_r2401, 0.002); end
  def test_lever_graphs_s2401; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2401, 0.002); end
  def test_lever_graphs_c2606; assert_equal("1975", worksheet.lever_graphs_c2606); end
  def test_lever_graphs_d2606; assert_equal("1980", worksheet.lever_graphs_d2606); end
  def test_lever_graphs_e2606; assert_equal("1985", worksheet.lever_graphs_e2606); end
  def test_lever_graphs_f2606; assert_equal("1990", worksheet.lever_graphs_f2606); end
  def test_lever_graphs_g2606; assert_equal("1995", worksheet.lever_graphs_g2606); end
  def test_lever_graphs_h2606; assert_equal("2000", worksheet.lever_graphs_h2606); end
  def test_lever_graphs_i2606; assert_equal("2005", worksheet.lever_graphs_i2606); end
  def test_lever_graphs_j2606; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2606, 0.002); end
  def test_lever_graphs_k2606; assert_equal("2011", worksheet.lever_graphs_k2606); end
  def test_lever_graphs_l2606; assert_equal("2015", worksheet.lever_graphs_l2606); end
  def test_lever_graphs_m2606; assert_equal("2020", worksheet.lever_graphs_m2606); end
  def test_lever_graphs_n2606; assert_equal("2025", worksheet.lever_graphs_n2606); end
  def test_lever_graphs_o2606; assert_equal("2030", worksheet.lever_graphs_o2606); end
  def test_lever_graphs_p2606; assert_equal("2035", worksheet.lever_graphs_p2606); end
  def test_lever_graphs_q2606; assert_equal("2040", worksheet.lever_graphs_q2606); end
  def test_lever_graphs_r2606; assert_equal("2045", worksheet.lever_graphs_r2606); end
  def test_lever_graphs_s2606; assert_equal("2050", worksheet.lever_graphs_s2606); end
  def test_lever_graphs_b2607; assert_equal("Historic data", worksheet.lever_graphs_b2607); end
  def test_lever_graphs_b2608; assert_in_delta(1.0, worksheet.lever_graphs_b2608, 0.002); end
  def test_lever_graphs_k2608; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2608, 0.002); end
  def test_lever_graphs_l2608; assert_in_epsilon(17.1, worksheet.lever_graphs_l2608, 0.002); end
  def test_lever_graphs_m2608; assert_in_epsilon(16.371428571428574, worksheet.lever_graphs_m2608, 0.002); end
  def test_lever_graphs_n2608; assert_in_epsilon(15.642857142857144, worksheet.lever_graphs_n2608, 0.002); end
  def test_lever_graphs_o2608; assert_in_epsilon(14.914285714285715, worksheet.lever_graphs_o2608, 0.002); end
  def test_lever_graphs_p2608; assert_in_epsilon(14.185714285714287, worksheet.lever_graphs_p2608, 0.002); end
  def test_lever_graphs_q2608; assert_in_epsilon(13.457142857142857, worksheet.lever_graphs_q2608, 0.002); end
  def test_lever_graphs_r2608; assert_in_epsilon(12.728571428571428, worksheet.lever_graphs_r2608, 0.002); end
  def test_lever_graphs_s2608; assert_in_epsilon(12.0, worksheet.lever_graphs_s2608, 0.002); end
  def test_lever_graphs_b2609; assert_in_epsilon(2.0, worksheet.lever_graphs_b2609, 0.002); end
  def test_lever_graphs_k2609; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2609, 0.002); end
  def test_lever_graphs_l2609; assert_in_epsilon(17.1, worksheet.lever_graphs_l2609, 0.002); end
  def test_lever_graphs_m2609; assert_in_epsilon(15.942857142857143, worksheet.lever_graphs_m2609, 0.002); end
  def test_lever_graphs_n2609; assert_in_epsilon(14.785714285714286, worksheet.lever_graphs_n2609, 0.002); end
  def test_lever_graphs_o2609; assert_in_epsilon(13.62857142857143, worksheet.lever_graphs_o2609, 0.002); end
  def test_lever_graphs_p2609; assert_in_epsilon(12.471428571428572, worksheet.lever_graphs_p2609, 0.002); end
  def test_lever_graphs_q2609; assert_in_epsilon(11.314285714285715, worksheet.lever_graphs_q2609, 0.002); end
  def test_lever_graphs_r2609; assert_in_epsilon(10.157142857142857, worksheet.lever_graphs_r2609, 0.002); end
  def test_lever_graphs_s2609; assert_in_epsilon(9.0, worksheet.lever_graphs_s2609, 0.002); end
  def test_lever_graphs_b2610; assert_in_epsilon(3.0, worksheet.lever_graphs_b2610, 0.002); end
  def test_lever_graphs_k2610; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2610, 0.002); end
  def test_lever_graphs_l2610; assert_in_epsilon(17.1, worksheet.lever_graphs_l2610, 0.002); end
  def test_lever_graphs_m2610; assert_in_epsilon(15.514285714285716, worksheet.lever_graphs_m2610, 0.002); end
  def test_lever_graphs_n2610; assert_in_epsilon(13.928571428571429, worksheet.lever_graphs_n2610, 0.002); end
  def test_lever_graphs_o2610; assert_in_epsilon(12.342857142857143, worksheet.lever_graphs_o2610, 0.002); end
  def test_lever_graphs_p2610; assert_in_epsilon(10.757142857142858, worksheet.lever_graphs_p2610, 0.002); end
  def test_lever_graphs_q2610; assert_in_epsilon(9.17142857142857, worksheet.lever_graphs_q2610, 0.002); end
  def test_lever_graphs_r2610; assert_in_epsilon(7.585714285714285, worksheet.lever_graphs_r2610, 0.002); end
  def test_lever_graphs_s2610; assert_in_epsilon(6.0, worksheet.lever_graphs_s2610, 0.002); end
  def test_lever_graphs_b2611; assert_in_epsilon(4.0, worksheet.lever_graphs_b2611, 0.002); end
  def test_lever_graphs_k2611; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2611, 0.002); end
  def test_lever_graphs_l2611; assert_in_epsilon(17.1, worksheet.lever_graphs_l2611, 0.002); end
  def test_lever_graphs_m2611; assert_in_epsilon(15.22857142857143, worksheet.lever_graphs_m2611, 0.002); end
  def test_lever_graphs_n2611; assert_in_epsilon(13.357142857142858, worksheet.lever_graphs_n2611, 0.002); end
  def test_lever_graphs_o2611; assert_in_epsilon(11.485714285714288, worksheet.lever_graphs_o2611, 0.002); end
  def test_lever_graphs_p2611; assert_in_epsilon(9.614285714285716, worksheet.lever_graphs_p2611, 0.002); end
  def test_lever_graphs_q2611; assert_in_epsilon(7.742857142857144, worksheet.lever_graphs_q2611, 0.002); end
  def test_lever_graphs_r2611; assert_in_epsilon(5.871428571428572, worksheet.lever_graphs_r2611, 0.002); end
  def test_lever_graphs_s2611; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2611, 0.002); end
  def test_lever_graphs_c2596; assert_equal("1975", worksheet.lever_graphs_c2596); end
  def test_lever_graphs_d2596; assert_equal("1980", worksheet.lever_graphs_d2596); end
  def test_lever_graphs_e2596; assert_equal("1985", worksheet.lever_graphs_e2596); end
  def test_lever_graphs_f2596; assert_equal("1990", worksheet.lever_graphs_f2596); end
  def test_lever_graphs_g2596; assert_equal("1995", worksheet.lever_graphs_g2596); end
  def test_lever_graphs_h2596; assert_equal("2000", worksheet.lever_graphs_h2596); end
  def test_lever_graphs_i2596; assert_equal("2005", worksheet.lever_graphs_i2596); end
  def test_lever_graphs_j2596; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2596, 0.002); end
  def test_lever_graphs_k2596; assert_equal("2011", worksheet.lever_graphs_k2596); end
  def test_lever_graphs_l2596; assert_equal("2015", worksheet.lever_graphs_l2596); end
  def test_lever_graphs_m2596; assert_equal("2020", worksheet.lever_graphs_m2596); end
  def test_lever_graphs_n2596; assert_equal("2025", worksheet.lever_graphs_n2596); end
  def test_lever_graphs_o2596; assert_equal("2030", worksheet.lever_graphs_o2596); end
  def test_lever_graphs_p2596; assert_equal("2035", worksheet.lever_graphs_p2596); end
  def test_lever_graphs_q2596; assert_equal("2040", worksheet.lever_graphs_q2596); end
  def test_lever_graphs_r2596; assert_equal("2045", worksheet.lever_graphs_r2596); end
  def test_lever_graphs_s2596; assert_equal("2050", worksheet.lever_graphs_s2596); end
  def test_lever_graphs_b2597; assert_equal("Historic data", worksheet.lever_graphs_b2597); end
  def test_lever_graphs_b2598; assert_in_delta(1.0, worksheet.lever_graphs_b2598, 0.002); end
  def test_lever_graphs_k2598; assert_in_epsilon(16.9, worksheet.lever_graphs_k2598, 0.002); end
  def test_lever_graphs_l2598; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2598, 0.002); end
  def test_lever_graphs_m2598; assert_in_epsilon(14.057142857142855, worksheet.lever_graphs_m2598, 0.002); end
  def test_lever_graphs_n2598; assert_in_epsilon(13.714285714285714, worksheet.lever_graphs_n2598, 0.002); end
  def test_lever_graphs_o2598; assert_in_epsilon(13.37142857142857, worksheet.lever_graphs_o2598, 0.002); end
  def test_lever_graphs_p2598; assert_in_epsilon(13.028571428571428, worksheet.lever_graphs_p2598, 0.002); end
  def test_lever_graphs_q2598; assert_in_epsilon(12.685714285714285, worksheet.lever_graphs_q2598, 0.002); end
  def test_lever_graphs_r2598; assert_in_epsilon(12.342857142857142, worksheet.lever_graphs_r2598, 0.002); end
  def test_lever_graphs_s2598; assert_in_epsilon(12.0, worksheet.lever_graphs_s2598, 0.002); end
  def test_lever_graphs_b2599; assert_in_epsilon(2.0, worksheet.lever_graphs_b2599, 0.002); end
  def test_lever_graphs_k2599; assert_in_epsilon(16.9, worksheet.lever_graphs_k2599, 0.002); end
  def test_lever_graphs_l2599; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2599, 0.002); end
  def test_lever_graphs_m2599; assert_in_epsilon(13.628571428571426, worksheet.lever_graphs_m2599, 0.002); end
  def test_lever_graphs_n2599; assert_in_epsilon(12.857142857142856, worksheet.lever_graphs_n2599, 0.002); end
  def test_lever_graphs_o2599; assert_in_epsilon(12.085714285714285, worksheet.lever_graphs_o2599, 0.002); end
  def test_lever_graphs_p2599; assert_in_epsilon(11.314285714285713, worksheet.lever_graphs_p2599, 0.002); end
  def test_lever_graphs_q2599; assert_in_epsilon(10.542857142857143, worksheet.lever_graphs_q2599, 0.002); end
  def test_lever_graphs_r2599; assert_in_epsilon(9.77142857142857, worksheet.lever_graphs_r2599, 0.002); end
  def test_lever_graphs_s2599; assert_in_epsilon(9.0, worksheet.lever_graphs_s2599, 0.002); end
  def test_lever_graphs_b2600; assert_in_epsilon(3.0, worksheet.lever_graphs_b2600, 0.002); end
  def test_lever_graphs_k2600; assert_in_epsilon(16.9, worksheet.lever_graphs_k2600, 0.002); end
  def test_lever_graphs_l2600; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2600, 0.002); end
  def test_lever_graphs_m2600; assert_in_epsilon(13.2, worksheet.lever_graphs_m2600, 0.002); end
  def test_lever_graphs_n2600; assert_in_epsilon(11.999999999999998, worksheet.lever_graphs_n2600, 0.002); end
  def test_lever_graphs_o2600; assert_in_epsilon(10.799999999999999, worksheet.lever_graphs_o2600, 0.002); end
  def test_lever_graphs_p2600; assert_in_epsilon(9.6, worksheet.lever_graphs_p2600, 0.002); end
  def test_lever_graphs_q2600; assert_in_epsilon(8.399999999999999, worksheet.lever_graphs_q2600, 0.002); end
  def test_lever_graphs_r2600; assert_in_epsilon(7.199999999999999, worksheet.lever_graphs_r2600, 0.002); end
  def test_lever_graphs_s2600; assert_in_epsilon(6.0, worksheet.lever_graphs_s2600, 0.002); end
  def test_lever_graphs_b2601; assert_in_epsilon(4.0, worksheet.lever_graphs_b2601, 0.002); end
  def test_lever_graphs_k2601; assert_in_epsilon(16.9, worksheet.lever_graphs_k2601, 0.002); end
  def test_lever_graphs_l2601; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2601, 0.002); end
  def test_lever_graphs_m2601; assert_in_epsilon(12.914285714285713, worksheet.lever_graphs_m2601, 0.002); end
  def test_lever_graphs_n2601; assert_in_epsilon(11.428571428571427, worksheet.lever_graphs_n2601, 0.002); end
  def test_lever_graphs_o2601; assert_in_epsilon(9.942857142857143, worksheet.lever_graphs_o2601, 0.002); end
  def test_lever_graphs_p2601; assert_in_epsilon(8.457142857142857, worksheet.lever_graphs_p2601, 0.002); end
  def test_lever_graphs_q2601; assert_in_epsilon(6.9714285714285715, worksheet.lever_graphs_q2601, 0.002); end
  def test_lever_graphs_r2601; assert_in_epsilon(5.485714285714286, worksheet.lever_graphs_r2601, 0.002); end
  def test_lever_graphs_s2601; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2601, 0.002); end
  def test_lever_graphs_c2366; assert_equal("1975", worksheet.lever_graphs_c2366); end
  def test_lever_graphs_d2366; assert_equal("1980", worksheet.lever_graphs_d2366); end
  def test_lever_graphs_e2366; assert_equal("1985", worksheet.lever_graphs_e2366); end
  def test_lever_graphs_f2366; assert_equal("1990", worksheet.lever_graphs_f2366); end
  def test_lever_graphs_g2366; assert_equal("1995", worksheet.lever_graphs_g2366); end
  def test_lever_graphs_h2366; assert_equal("2000", worksheet.lever_graphs_h2366); end
  def test_lever_graphs_i2366; assert_equal("2005", worksheet.lever_graphs_i2366); end
  def test_lever_graphs_j2366; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2366, 0.002); end
  def test_lever_graphs_k2366; assert_equal("2011", worksheet.lever_graphs_k2366); end
  def test_lever_graphs_l2366; assert_equal("2015", worksheet.lever_graphs_l2366); end
  def test_lever_graphs_m2366; assert_equal("2020", worksheet.lever_graphs_m2366); end
  def test_lever_graphs_n2366; assert_equal("2025", worksheet.lever_graphs_n2366); end
  def test_lever_graphs_o2366; assert_equal("2030", worksheet.lever_graphs_o2366); end
  def test_lever_graphs_p2366; assert_equal("2035", worksheet.lever_graphs_p2366); end
  def test_lever_graphs_q2366; assert_equal("2040", worksheet.lever_graphs_q2366); end
  def test_lever_graphs_r2366; assert_equal("2045", worksheet.lever_graphs_r2366); end
  def test_lever_graphs_s2366; assert_equal("2050", worksheet.lever_graphs_s2366); end
  def test_lever_graphs_b2367; assert_equal("Historic data", worksheet.lever_graphs_b2367); end
  def test_lever_graphs_b2368; assert_in_delta(1.0, worksheet.lever_graphs_b2368, 0.002); end
  def test_lever_graphs_k2368; assert_in_epsilon(29.0, worksheet.lever_graphs_k2368, 0.002); end
  def test_lever_graphs_l2368; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2368, 0.002); end
  def test_lever_graphs_m2368; assert_in_epsilon(27.93406593406593, worksheet.lever_graphs_m2368, 0.002); end
  def test_lever_graphs_n2368; assert_in_epsilon(27.27838827838828, worksheet.lever_graphs_n2368, 0.002); end
  def test_lever_graphs_o2368; assert_in_epsilon(26.62271062271062, worksheet.lever_graphs_o2368, 0.002); end
  def test_lever_graphs_p2368; assert_in_epsilon(25.967032967032964, worksheet.lever_graphs_p2368, 0.002); end
  def test_lever_graphs_q2368; assert_in_epsilon(25.31135531135531, worksheet.lever_graphs_q2368, 0.002); end
  def test_lever_graphs_r2368; assert_in_epsilon(24.655677655677653, worksheet.lever_graphs_r2368, 0.002); end
  def test_lever_graphs_s2368; assert_in_epsilon(24.0, worksheet.lever_graphs_s2368, 0.002); end
  def test_lever_graphs_b2369; assert_in_epsilon(2.0, worksheet.lever_graphs_b2369, 0.002); end
  def test_lever_graphs_k2369; assert_in_epsilon(29.0, worksheet.lever_graphs_k2369, 0.002); end
  def test_lever_graphs_l2369; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2369, 0.002); end
  def test_lever_graphs_m2369; assert_in_epsilon(28.076923076923073, worksheet.lever_graphs_m2369, 0.002); end
  def test_lever_graphs_n2369; assert_in_epsilon(27.564102564102566, worksheet.lever_graphs_n2369, 0.002); end
  def test_lever_graphs_o2369; assert_in_epsilon(27.05128205128205, worksheet.lever_graphs_o2369, 0.002); end
  def test_lever_graphs_p2369; assert_in_epsilon(26.538461538461537, worksheet.lever_graphs_p2369, 0.002); end
  def test_lever_graphs_q2369; assert_in_epsilon(26.025641025641026, worksheet.lever_graphs_q2369, 0.002); end
  def test_lever_graphs_r2369; assert_in_epsilon(25.51282051282051, worksheet.lever_graphs_r2369, 0.002); end
  def test_lever_graphs_s2369; assert_in_epsilon(25.0, worksheet.lever_graphs_s2369, 0.002); end
  def test_lever_graphs_b2370; assert_in_epsilon(3.0, worksheet.lever_graphs_b2370, 0.002); end
  def test_lever_graphs_k2370; assert_in_epsilon(29.0, worksheet.lever_graphs_k2370, 0.002); end
  def test_lever_graphs_l2370; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2370, 0.002); end
  def test_lever_graphs_m2370; assert_in_epsilon(28.21978021978022, worksheet.lever_graphs_m2370, 0.002); end
  def test_lever_graphs_n2370; assert_in_epsilon(27.84981684981685, worksheet.lever_graphs_n2370, 0.002); end
  def test_lever_graphs_o2370; assert_in_epsilon(27.479853479853478, worksheet.lever_graphs_o2370, 0.002); end
  def test_lever_graphs_p2370; assert_in_epsilon(27.10989010989011, worksheet.lever_graphs_p2370, 0.002); end
  def test_lever_graphs_q2370; assert_in_epsilon(26.73992673992674, worksheet.lever_graphs_q2370, 0.002); end
  def test_lever_graphs_r2370; assert_in_epsilon(26.36996336996337, worksheet.lever_graphs_r2370, 0.002); end
  def test_lever_graphs_s2370; assert_in_epsilon(26.0, worksheet.lever_graphs_s2370, 0.002); end
  def test_lever_graphs_b2371; assert_in_epsilon(4.0, worksheet.lever_graphs_b2371, 0.002); end
  def test_lever_graphs_k2371; assert_in_epsilon(29.0, worksheet.lever_graphs_k2371, 0.002); end
  def test_lever_graphs_l2371; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2371, 0.002); end
  def test_lever_graphs_m2371; assert_in_epsilon(28.36263736263736, worksheet.lever_graphs_m2371, 0.002); end
  def test_lever_graphs_n2371; assert_in_epsilon(28.13553113553114, worksheet.lever_graphs_n2371, 0.002); end
  def test_lever_graphs_o2371; assert_in_epsilon(27.908424908424905, worksheet.lever_graphs_o2371, 0.002); end
  def test_lever_graphs_p2371; assert_in_epsilon(27.68131868131868, worksheet.lever_graphs_p2371, 0.002); end
  def test_lever_graphs_q2371; assert_in_epsilon(27.454212454212453, worksheet.lever_graphs_q2371, 0.002); end
  def test_lever_graphs_r2371; assert_in_epsilon(27.227106227106226, worksheet.lever_graphs_r2371, 0.002); end
  def test_lever_graphs_s2371; assert_in_epsilon(27.0, worksheet.lever_graphs_s2371, 0.002); end
  def test_lever_graphs_c2356; assert_equal("1975", worksheet.lever_graphs_c2356); end
  def test_lever_graphs_d2356; assert_equal("1980", worksheet.lever_graphs_d2356); end
  def test_lever_graphs_e2356; assert_equal("1985", worksheet.lever_graphs_e2356); end
  def test_lever_graphs_f2356; assert_equal("1990", worksheet.lever_graphs_f2356); end
  def test_lever_graphs_g2356; assert_equal("1995", worksheet.lever_graphs_g2356); end
  def test_lever_graphs_h2356; assert_equal("2000", worksheet.lever_graphs_h2356); end
  def test_lever_graphs_i2356; assert_equal("2005", worksheet.lever_graphs_i2356); end
  def test_lever_graphs_j2356; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2356, 0.002); end
  def test_lever_graphs_k2356; assert_equal("2011", worksheet.lever_graphs_k2356); end
  def test_lever_graphs_l2356; assert_equal("2015", worksheet.lever_graphs_l2356); end
  def test_lever_graphs_m2356; assert_equal("2020", worksheet.lever_graphs_m2356); end
  def test_lever_graphs_n2356; assert_equal("2025", worksheet.lever_graphs_n2356); end
  def test_lever_graphs_o2356; assert_equal("2030", worksheet.lever_graphs_o2356); end
  def test_lever_graphs_p2356; assert_equal("2035", worksheet.lever_graphs_p2356); end
  def test_lever_graphs_q2356; assert_equal("2040", worksheet.lever_graphs_q2356); end
  def test_lever_graphs_r2356; assert_equal("2045", worksheet.lever_graphs_r2356); end
  def test_lever_graphs_s2356; assert_equal("2050", worksheet.lever_graphs_s2356); end
  def test_lever_graphs_b2357; assert_equal("Historic data", worksheet.lever_graphs_b2357); end
  def test_lever_graphs_b2358; assert_in_delta(1.0, worksheet.lever_graphs_b2358, 0.002); end
  def test_lever_graphs_k2358; assert_in_epsilon(26.5, worksheet.lever_graphs_k2358, 0.002); end
  def test_lever_graphs_l2358; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2358, 0.002); end
  def test_lever_graphs_m2358; assert_in_epsilon(26.010989010989007, worksheet.lever_graphs_m2358, 0.002); end
  def test_lever_graphs_n2358; assert_in_epsilon(25.67582417582418, worksheet.lever_graphs_n2358, 0.002); end
  def test_lever_graphs_o2358; assert_in_epsilon(25.34065934065934, worksheet.lever_graphs_o2358, 0.002); end
  def test_lever_graphs_p2358; assert_in_epsilon(25.005494505494504, worksheet.lever_graphs_p2358, 0.002); end
  def test_lever_graphs_q2358; assert_in_epsilon(24.67032967032967, worksheet.lever_graphs_q2358, 0.002); end
  def test_lever_graphs_r2358; assert_in_epsilon(24.335164835164832, worksheet.lever_graphs_r2358, 0.002); end
  def test_lever_graphs_s2358; assert_in_epsilon(24.0, worksheet.lever_graphs_s2358, 0.002); end
  def test_lever_graphs_b2359; assert_in_epsilon(2.0, worksheet.lever_graphs_b2359, 0.002); end
  def test_lever_graphs_k2359; assert_in_epsilon(26.5, worksheet.lever_graphs_k2359, 0.002); end
  def test_lever_graphs_l2359; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2359, 0.002); end
  def test_lever_graphs_m2359; assert_in_epsilon(26.153846153846153, worksheet.lever_graphs_m2359, 0.002); end
  def test_lever_graphs_n2359; assert_in_epsilon(25.961538461538463, worksheet.lever_graphs_n2359, 0.002); end
  def test_lever_graphs_o2359; assert_in_epsilon(25.769230769230766, worksheet.lever_graphs_o2359, 0.002); end
  def test_lever_graphs_p2359; assert_in_epsilon(25.576923076923073, worksheet.lever_graphs_p2359, 0.002); end
  def test_lever_graphs_q2359; assert_in_epsilon(25.384615384615387, worksheet.lever_graphs_q2359, 0.002); end
  def test_lever_graphs_r2359; assert_in_epsilon(25.19230769230769, worksheet.lever_graphs_r2359, 0.002); end
  def test_lever_graphs_s2359; assert_in_epsilon(25.0, worksheet.lever_graphs_s2359, 0.002); end
  def test_lever_graphs_b2360; assert_in_epsilon(3.0, worksheet.lever_graphs_b2360, 0.002); end
  def test_lever_graphs_k2360; assert_in_epsilon(26.5, worksheet.lever_graphs_k2360, 0.002); end
  def test_lever_graphs_l2360; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2360, 0.002); end
  def test_lever_graphs_m2360; assert_in_epsilon(26.296703296703296, worksheet.lever_graphs_m2360, 0.002); end
  def test_lever_graphs_n2360; assert_in_epsilon(26.247252747252748, worksheet.lever_graphs_n2360, 0.002); end
  def test_lever_graphs_o2360; assert_in_epsilon(26.197802197802197, worksheet.lever_graphs_o2360, 0.002); end
  def test_lever_graphs_p2360; assert_in_epsilon(26.148351648351646, worksheet.lever_graphs_p2360, 0.002); end
  def test_lever_graphs_q2360; assert_in_epsilon(26.098901098901102, worksheet.lever_graphs_q2360, 0.002); end
  def test_lever_graphs_r2360; assert_in_epsilon(26.049450549450547, worksheet.lever_graphs_r2360, 0.002); end
  def test_lever_graphs_s2360; assert_in_epsilon(26.0, worksheet.lever_graphs_s2360, 0.002); end
  def test_lever_graphs_b2361; assert_in_epsilon(4.0, worksheet.lever_graphs_b2361, 0.002); end
  def test_lever_graphs_k2361; assert_in_epsilon(26.5, worksheet.lever_graphs_k2361, 0.002); end
  def test_lever_graphs_l2361; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2361, 0.002); end
  def test_lever_graphs_m2361; assert_in_epsilon(26.439560439560438, worksheet.lever_graphs_m2361, 0.002); end
  def test_lever_graphs_n2361; assert_in_epsilon(26.532967032967036, worksheet.lever_graphs_n2361, 0.002); end
  def test_lever_graphs_o2361; assert_in_epsilon(26.626373626373628, worksheet.lever_graphs_o2361, 0.002); end
  def test_lever_graphs_p2361; assert_in_epsilon(26.71978021978022, worksheet.lever_graphs_p2361, 0.002); end
  def test_lever_graphs_q2361; assert_in_epsilon(26.81318681318681, worksheet.lever_graphs_q2361, 0.002); end
  def test_lever_graphs_r2361; assert_in_epsilon(26.906593406593405, worksheet.lever_graphs_r2361, 0.002); end
  def test_lever_graphs_s2361; assert_in_epsilon(27.0, worksheet.lever_graphs_s2361, 0.002); end
  def test_lever_graphs_c2386; assert_equal("1975", worksheet.lever_graphs_c2386); end
  def test_lever_graphs_d2386; assert_equal("1980", worksheet.lever_graphs_d2386); end
  def test_lever_graphs_e2386; assert_equal("1985", worksheet.lever_graphs_e2386); end
  def test_lever_graphs_f2386; assert_equal("1990", worksheet.lever_graphs_f2386); end
  def test_lever_graphs_g2386; assert_equal("1995", worksheet.lever_graphs_g2386); end
  def test_lever_graphs_h2386; assert_equal("2000", worksheet.lever_graphs_h2386); end
  def test_lever_graphs_i2386; assert_equal("2005", worksheet.lever_graphs_i2386); end
  def test_lever_graphs_j2386; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2386, 0.002); end
  def test_lever_graphs_k2386; assert_equal("2011", worksheet.lever_graphs_k2386); end
  def test_lever_graphs_l2386; assert_equal("2015", worksheet.lever_graphs_l2386); end
  def test_lever_graphs_m2386; assert_equal("2020", worksheet.lever_graphs_m2386); end
  def test_lever_graphs_n2386; assert_equal("2025", worksheet.lever_graphs_n2386); end
  def test_lever_graphs_o2386; assert_equal("2030", worksheet.lever_graphs_o2386); end
  def test_lever_graphs_p2386; assert_equal("2035", worksheet.lever_graphs_p2386); end
  def test_lever_graphs_q2386; assert_equal("2040", worksheet.lever_graphs_q2386); end
  def test_lever_graphs_r2386; assert_equal("2045", worksheet.lever_graphs_r2386); end
  def test_lever_graphs_s2386; assert_equal("2050", worksheet.lever_graphs_s2386); end
  def test_lever_graphs_b2387; assert_equal("Historic data", worksheet.lever_graphs_b2387); end
  def test_lever_graphs_b2388; assert_in_delta(1.0, worksheet.lever_graphs_b2388, 0.002); end
  def test_lever_graphs_k2388; assert_in_epsilon(13.0, worksheet.lever_graphs_k2388, 0.002); end
  def test_lever_graphs_l2388; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2388, 0.002); end
  def test_lever_graphs_m2388; assert_in_epsilon(13.923076923076925, worksheet.lever_graphs_m2388, 0.002); end
  def test_lever_graphs_n2388; assert_in_epsilon(14.435897435897438, worksheet.lever_graphs_n2388, 0.002); end
  def test_lever_graphs_o2388; assert_in_epsilon(14.948717948717949, worksheet.lever_graphs_o2388, 0.002); end
  def test_lever_graphs_p2388; assert_in_epsilon(15.461538461538462, worksheet.lever_graphs_p2388, 0.002); end
  def test_lever_graphs_q2388; assert_in_epsilon(15.974358974358974, worksheet.lever_graphs_q2388, 0.002); end
  def test_lever_graphs_r2388; assert_in_epsilon(16.48717948717949, worksheet.lever_graphs_r2388, 0.002); end
  def test_lever_graphs_s2388; assert_in_epsilon(17.0, worksheet.lever_graphs_s2388, 0.002); end
  def test_lever_graphs_b2389; assert_in_epsilon(2.0, worksheet.lever_graphs_b2389, 0.002); end
  def test_lever_graphs_k2389; assert_in_epsilon(13.0, worksheet.lever_graphs_k2389, 0.002); end
  def test_lever_graphs_l2389; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2389, 0.002); end
  def test_lever_graphs_m2389; assert_in_epsilon(13.780219780219781, worksheet.lever_graphs_m2389, 0.002); end
  def test_lever_graphs_n2389; assert_in_epsilon(14.150183150183151, worksheet.lever_graphs_n2389, 0.002); end
  def test_lever_graphs_o2389; assert_in_epsilon(14.520146520146522, worksheet.lever_graphs_o2389, 0.002); end
  def test_lever_graphs_p2389; assert_in_epsilon(14.89010989010989, worksheet.lever_graphs_p2389, 0.002); end
  def test_lever_graphs_q2389; assert_in_epsilon(15.260073260073261, worksheet.lever_graphs_q2389, 0.002); end
  def test_lever_graphs_r2389; assert_in_epsilon(15.63003663003663, worksheet.lever_graphs_r2389, 0.002); end
  def test_lever_graphs_s2389; assert_in_epsilon(16.0, worksheet.lever_graphs_s2389, 0.002); end
  def test_lever_graphs_b2390; assert_in_epsilon(3.0, worksheet.lever_graphs_b2390, 0.002); end
  def test_lever_graphs_k2390; assert_in_epsilon(13.0, worksheet.lever_graphs_k2390, 0.002); end
  def test_lever_graphs_l2390; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2390, 0.002); end
  def test_lever_graphs_m2390; assert_in_epsilon(13.637362637362639, worksheet.lever_graphs_m2390, 0.002); end
  def test_lever_graphs_n2390; assert_in_epsilon(13.864468864468865, worksheet.lever_graphs_n2390, 0.002); end
  def test_lever_graphs_o2390; assert_in_epsilon(14.091575091575091, worksheet.lever_graphs_o2390, 0.002); end
  def test_lever_graphs_p2390; assert_in_epsilon(14.31868131868132, worksheet.lever_graphs_p2390, 0.002); end
  def test_lever_graphs_q2390; assert_in_epsilon(14.545787545787547, worksheet.lever_graphs_q2390, 0.002); end
  def test_lever_graphs_r2390; assert_in_epsilon(14.772893772893772, worksheet.lever_graphs_r2390, 0.002); end
  def test_lever_graphs_s2390; assert_in_epsilon(15.0, worksheet.lever_graphs_s2390, 0.002); end
  def test_lever_graphs_b2391; assert_in_epsilon(4.0, worksheet.lever_graphs_b2391, 0.002); end
  def test_lever_graphs_k2391; assert_in_epsilon(13.0, worksheet.lever_graphs_k2391, 0.002); end
  def test_lever_graphs_l2391; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2391, 0.002); end
  def test_lever_graphs_m2391; assert_in_epsilon(13.494505494505496, worksheet.lever_graphs_m2391, 0.002); end
  def test_lever_graphs_n2391; assert_in_epsilon(13.57875457875458, worksheet.lever_graphs_n2391, 0.002); end
  def test_lever_graphs_o2391; assert_in_epsilon(13.663003663003664, worksheet.lever_graphs_o2391, 0.002); end
  def test_lever_graphs_p2391; assert_in_epsilon(13.747252747252748, worksheet.lever_graphs_p2391, 0.002); end
  def test_lever_graphs_q2391; assert_in_epsilon(13.831501831501832, worksheet.lever_graphs_q2391, 0.002); end
  def test_lever_graphs_r2391; assert_in_epsilon(13.915750915750916, worksheet.lever_graphs_r2391, 0.002); end
  def test_lever_graphs_s2391; assert_in_epsilon(14.0, worksheet.lever_graphs_s2391, 0.002); end
  def test_lever_graphs_c2376; assert_equal("1975", worksheet.lever_graphs_c2376); end
  def test_lever_graphs_d2376; assert_equal("1980", worksheet.lever_graphs_d2376); end
  def test_lever_graphs_e2376; assert_equal("1985", worksheet.lever_graphs_e2376); end
  def test_lever_graphs_f2376; assert_equal("1990", worksheet.lever_graphs_f2376); end
  def test_lever_graphs_g2376; assert_equal("1995", worksheet.lever_graphs_g2376); end
  def test_lever_graphs_h2376; assert_equal("2000", worksheet.lever_graphs_h2376); end
  def test_lever_graphs_i2376; assert_equal("2005", worksheet.lever_graphs_i2376); end
  def test_lever_graphs_j2376; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2376, 0.002); end
  def test_lever_graphs_k2376; assert_equal("2011", worksheet.lever_graphs_k2376); end
  def test_lever_graphs_l2376; assert_equal("2015", worksheet.lever_graphs_l2376); end
  def test_lever_graphs_m2376; assert_equal("2020", worksheet.lever_graphs_m2376); end
  def test_lever_graphs_n2376; assert_equal("2025", worksheet.lever_graphs_n2376); end
  def test_lever_graphs_o2376; assert_equal("2030", worksheet.lever_graphs_o2376); end
  def test_lever_graphs_p2376; assert_equal("2035", worksheet.lever_graphs_p2376); end
  def test_lever_graphs_q2376; assert_equal("2040", worksheet.lever_graphs_q2376); end
  def test_lever_graphs_r2376; assert_equal("2045", worksheet.lever_graphs_r2376); end
  def test_lever_graphs_s2376; assert_equal("2050", worksheet.lever_graphs_s2376); end
  def test_lever_graphs_b2377; assert_equal("Historic data", worksheet.lever_graphs_b2377); end
  def test_lever_graphs_b2378; assert_in_delta(1.0, worksheet.lever_graphs_b2378, 0.002); end
  def test_lever_graphs_k2378; assert_in_epsilon(17.5, worksheet.lever_graphs_k2378, 0.002); end
  def test_lever_graphs_l2378; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2378, 0.002); end
  def test_lever_graphs_m2378; assert_in_epsilon(17.98901098901099, worksheet.lever_graphs_m2378, 0.002); end
  def test_lever_graphs_n2378; assert_in_epsilon(18.324175824175825, worksheet.lever_graphs_n2378, 0.002); end
  def test_lever_graphs_o2378; assert_in_epsilon(18.659340659340657, worksheet.lever_graphs_o2378, 0.002); end
  def test_lever_graphs_p2378; assert_in_epsilon(18.994505494505493, worksheet.lever_graphs_p2378, 0.002); end
  def test_lever_graphs_q2378; assert_in_epsilon(19.32967032967033, worksheet.lever_graphs_q2378, 0.002); end
  def test_lever_graphs_r2378; assert_in_epsilon(19.664835164835164, worksheet.lever_graphs_r2378, 0.002); end
  def test_lever_graphs_s2378; assert_in_epsilon(20.0, worksheet.lever_graphs_s2378, 0.002); end
  def test_lever_graphs_b2379; assert_in_epsilon(2.0, worksheet.lever_graphs_b2379, 0.002); end
  def test_lever_graphs_k2379; assert_in_epsilon(17.5, worksheet.lever_graphs_k2379, 0.002); end
  def test_lever_graphs_l2379; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2379, 0.002); end
  def test_lever_graphs_m2379; assert_in_epsilon(17.846153846153847, worksheet.lever_graphs_m2379, 0.002); end
  def test_lever_graphs_n2379; assert_in_epsilon(18.038461538461537, worksheet.lever_graphs_n2379, 0.002); end
  def test_lever_graphs_o2379; assert_in_epsilon(18.23076923076923, worksheet.lever_graphs_o2379, 0.002); end
  def test_lever_graphs_p2379; assert_in_epsilon(18.42307692307692, worksheet.lever_graphs_p2379, 0.002); end
  def test_lever_graphs_q2379; assert_in_epsilon(18.615384615384613, worksheet.lever_graphs_q2379, 0.002); end
  def test_lever_graphs_r2379; assert_in_epsilon(18.807692307692307, worksheet.lever_graphs_r2379, 0.002); end
  def test_lever_graphs_s2379; assert_in_epsilon(19.0, worksheet.lever_graphs_s2379, 0.002); end
  def test_lever_graphs_b2380; assert_in_epsilon(3.0, worksheet.lever_graphs_b2380, 0.002); end
  def test_lever_graphs_k2380; assert_in_epsilon(17.5, worksheet.lever_graphs_k2380, 0.002); end
  def test_lever_graphs_l2380; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2380, 0.002); end
  def test_lever_graphs_m2380; assert_in_epsilon(17.7032967032967, worksheet.lever_graphs_m2380, 0.002); end
  def test_lever_graphs_n2380; assert_in_epsilon(17.752747252747252, worksheet.lever_graphs_n2380, 0.002); end
  def test_lever_graphs_o2380; assert_in_epsilon(17.802197802197803, worksheet.lever_graphs_o2380, 0.002); end
  def test_lever_graphs_p2380; assert_in_epsilon(17.85164835164835, worksheet.lever_graphs_p2380, 0.002); end
  def test_lever_graphs_q2380; assert_in_epsilon(17.9010989010989, worksheet.lever_graphs_q2380, 0.002); end
  def test_lever_graphs_r2380; assert_in_epsilon(17.95054945054945, worksheet.lever_graphs_r2380, 0.002); end
  def test_lever_graphs_s2380; assert_in_epsilon(18.0, worksheet.lever_graphs_s2380, 0.002); end
  def test_lever_graphs_b2381; assert_in_epsilon(4.0, worksheet.lever_graphs_b2381, 0.002); end
  def test_lever_graphs_k2381; assert_in_epsilon(17.5, worksheet.lever_graphs_k2381, 0.002); end
  def test_lever_graphs_l2381; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2381, 0.002); end
  def test_lever_graphs_m2381; assert_in_epsilon(17.56043956043956, worksheet.lever_graphs_m2381, 0.002); end
  def test_lever_graphs_n2381; assert_in_epsilon(17.467032967032967, worksheet.lever_graphs_n2381, 0.002); end
  def test_lever_graphs_o2381; assert_in_epsilon(17.373626373626372, worksheet.lever_graphs_o2381, 0.002); end
  def test_lever_graphs_p2381; assert_in_epsilon(17.28021978021978, worksheet.lever_graphs_p2381, 0.002); end
  def test_lever_graphs_q2381; assert_in_epsilon(17.186813186813186, worksheet.lever_graphs_q2381, 0.002); end
  def test_lever_graphs_r2381; assert_in_epsilon(17.09340659340659, worksheet.lever_graphs_r2381, 0.002); end
  def test_lever_graphs_s2381; assert_in_epsilon(17.0, worksheet.lever_graphs_s2381, 0.002); end
  def test_lever_graphs_c1726; assert_equal("1975", worksheet.lever_graphs_c1726); end
  def test_lever_graphs_d1726; assert_equal("1980", worksheet.lever_graphs_d1726); end
  def test_lever_graphs_e1726; assert_equal("1985", worksheet.lever_graphs_e1726); end
  def test_lever_graphs_f1726; assert_equal("1990", worksheet.lever_graphs_f1726); end
  def test_lever_graphs_g1726; assert_equal("1995", worksheet.lever_graphs_g1726); end
  def test_lever_graphs_h1726; assert_equal("2000", worksheet.lever_graphs_h1726); end
  def test_lever_graphs_i1726; assert_equal("2005", worksheet.lever_graphs_i1726); end
  def test_lever_graphs_j1726; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1726, 0.002); end
  def test_lever_graphs_k1726; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1726, 0.002); end
  def test_lever_graphs_l1726; assert_equal("2015", worksheet.lever_graphs_l1726); end
  def test_lever_graphs_m1726; assert_equal("2020", worksheet.lever_graphs_m1726); end
  def test_lever_graphs_n1726; assert_equal("2025", worksheet.lever_graphs_n1726); end
  def test_lever_graphs_o1726; assert_equal("2030", worksheet.lever_graphs_o1726); end
  def test_lever_graphs_p1726; assert_equal("2035", worksheet.lever_graphs_p1726); end
  def test_lever_graphs_q1726; assert_equal("2040", worksheet.lever_graphs_q1726); end
  def test_lever_graphs_r1726; assert_equal("2045", worksheet.lever_graphs_r1726); end
  def test_lever_graphs_s1726; assert_equal("2050", worksheet.lever_graphs_s1726); end
  def test_lever_graphs_b1727; assert_equal("Historic data", worksheet.lever_graphs_b1727); end
  def test_lever_graphs_b1728; assert_in_delta(1.0, worksheet.lever_graphs_b1728, 0.002); end
  def test_lever_graphs_k1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1728, 0.002); end
  def test_lever_graphs_l1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_l1728, 0.002); end
  def test_lever_graphs_m1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_m1728, 0.002); end
  def test_lever_graphs_n1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_n1728, 0.002); end
  def test_lever_graphs_o1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_o1728, 0.002); end
  def test_lever_graphs_p1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_p1728, 0.002); end
  def test_lever_graphs_q1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_q1728, 0.002); end
  def test_lever_graphs_r1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_r1728, 0.002); end
  def test_lever_graphs_s1728; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_s1728, 0.002); end
  def test_lever_graphs_b1729; assert_in_epsilon(2.0, worksheet.lever_graphs_b1729, 0.002); end
  def test_lever_graphs_k1729; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1729, 0.002); end
  def test_lever_graphs_l1729; assert_in_delta(0.61, worksheet.lever_graphs_l1729, 0.002); end
  def test_lever_graphs_m1729; assert_in_delta(0.56, worksheet.lever_graphs_m1729, 0.002); end
  def test_lever_graphs_n1729; assert_in_delta(0.56, worksheet.lever_graphs_n1729, 0.002); end
  def test_lever_graphs_o1729; assert_in_delta(0.54, worksheet.lever_graphs_o1729, 0.002); end
  def test_lever_graphs_p1729; assert_in_delta(0.52, worksheet.lever_graphs_p1729, 0.002); end
  def test_lever_graphs_q1729; assert_in_delta(0.49, worksheet.lever_graphs_q1729, 0.002); end
  def test_lever_graphs_r1729; assert_in_delta(0.44, worksheet.lever_graphs_r1729, 0.002); end
  def test_lever_graphs_s1729; assert_in_delta(0.4, worksheet.lever_graphs_s1729, 0.002); end
  def test_lever_graphs_b1730; assert_in_epsilon(3.0, worksheet.lever_graphs_b1730, 0.002); end
  def test_lever_graphs_k1730; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1730, 0.002); end
  def test_lever_graphs_l1730; assert_in_delta(0.61, worksheet.lever_graphs_l1730, 0.002); end
  def test_lever_graphs_m1730; assert_in_delta(0.55, worksheet.lever_graphs_m1730, 0.002); end
  def test_lever_graphs_n1730; assert_in_delta(0.54, worksheet.lever_graphs_n1730, 0.002); end
  def test_lever_graphs_o1730; assert_in_delta(0.51, worksheet.lever_graphs_o1730, 0.002); end
  def test_lever_graphs_p1730; assert_in_delta(0.49, worksheet.lever_graphs_p1730, 0.002); end
  def test_lever_graphs_q1730; assert_in_delta(0.46, worksheet.lever_graphs_q1730, 0.002); end
  def test_lever_graphs_r1730; assert_in_delta(0.41, worksheet.lever_graphs_r1730, 0.002); end
  def test_lever_graphs_s1730; assert_in_delta(0.32, worksheet.lever_graphs_s1730, 0.002); end
  def test_lever_graphs_b1731; assert_in_epsilon(4.0, worksheet.lever_graphs_b1731, 0.002); end
  def test_lever_graphs_k1731; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1731, 0.002); end
  def test_lever_graphs_l1731; assert_in_delta(0.61, worksheet.lever_graphs_l1731, 0.002); end
  def test_lever_graphs_m1731; assert_in_delta(0.55, worksheet.lever_graphs_m1731, 0.002); end
  def test_lever_graphs_n1731; assert_in_delta(0.5223, worksheet.lever_graphs_n1731, 0.002); end
  def test_lever_graphs_o1731; assert_in_delta(0.4761, worksheet.lever_graphs_o1731, 0.002); end
  def test_lever_graphs_p1731; assert_in_delta(0.45, worksheet.lever_graphs_p1731, 0.002); end
  def test_lever_graphs_q1731; assert_in_delta(0.4166, worksheet.lever_graphs_q1731, 0.002); end
  def test_lever_graphs_r1731; assert_in_delta(0.362, worksheet.lever_graphs_r1731, 0.002); end
  def test_lever_graphs_s1731; assert_in_delta(0.2641, worksheet.lever_graphs_s1731, 0.002); end
  def test_lever_graphs_b1732; assert_equal("Comparator A", worksheet.lever_graphs_b1732); end
  def test_lever_graphs_b1733; assert_equal("Comparator B", worksheet.lever_graphs_b1733); end
  def test_lever_graphs_b1734; assert_equal("Comparator C", worksheet.lever_graphs_b1734); end
  def test_lever_graphs_d1676; assert_equal("Title", worksheet.lever_graphs_d1676); end
  def test_lever_graphs_e1676; assert_equal("Solid fueled", worksheet.lever_graphs_e1676); end
  def test_lever_graphs_f1676; assert_equal("Liquid fueled", worksheet.lever_graphs_f1676); end
  def test_lever_graphs_g1676; assert_equal("Gas fueled", worksheet.lever_graphs_g1676); end
  def test_lever_graphs_d1677; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1677, 0.002); end
  def test_lever_graphs_e1677; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_e1677, 0.002); end
  def test_lever_graphs_f1677; assert_in_delta(0.06785132715399025, worksheet.lever_graphs_f1677, 0.002); end
  def test_lever_graphs_g1677; assert_in_delta(0.3201932191553456, worksheet.lever_graphs_g1677, 0.002); end
  def test_lever_graphs_d1678; assert_equal("2050: Level 1", worksheet.lever_graphs_d1678); end
  def test_lever_graphs_e1678; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_e1678, 0.002); end
  def test_lever_graphs_f1678; assert_in_delta(0.2909, worksheet.lever_graphs_f1678, 0.002); end
  def test_lever_graphs_g1678; assert_in_delta(0.09714454630933583, worksheet.lever_graphs_g1678, 0.002); end
  def test_lever_graphs_d1679; assert_equal("2050: Level 2", worksheet.lever_graphs_d1679); end
  def test_lever_graphs_e1679; assert_in_delta(0.4, worksheet.lever_graphs_e1679, 0.002); end
  def test_lever_graphs_f1679; assert_in_delta(0.19, worksheet.lever_graphs_f1679, 0.002); end
  def test_lever_graphs_g1679; assert_in_delta(0.41, worksheet.lever_graphs_g1679, 0.002); end
  def test_lever_graphs_d1680; assert_equal("2050: Level 3", worksheet.lever_graphs_d1680); end
  def test_lever_graphs_e1680; assert_in_delta(0.32, worksheet.lever_graphs_e1680, 0.002); end
  def test_lever_graphs_f1680; assert_in_delta(0.06, worksheet.lever_graphs_f1680, 0.002); end
  def test_lever_graphs_g1680; assert_in_delta(0.6199999999999999, worksheet.lever_graphs_g1680, 0.002); end
  def test_lever_graphs_d1681; assert_equal("2050: Level 4", worksheet.lever_graphs_d1681); end
  def test_lever_graphs_e1681; assert_in_delta(0.2641, worksheet.lever_graphs_e1681, 0.002); end
  def test_lever_graphs_f1681; assert_in_delta(0.0188, worksheet.lever_graphs_f1681, 0.002); end
  def test_lever_graphs_g1681; assert_in_delta(0.7171, worksheet.lever_graphs_g1681, 0.002); end
  def test_lever_graphs_c2972; assert_equal("1975", worksheet.lever_graphs_c2972); end
  def test_lever_graphs_d2972; assert_equal("1980", worksheet.lever_graphs_d2972); end
  def test_lever_graphs_e2972; assert_equal("1985", worksheet.lever_graphs_e2972); end
  def test_lever_graphs_f2972; assert_equal("1990", worksheet.lever_graphs_f2972); end
  def test_lever_graphs_g2972; assert_equal("1995", worksheet.lever_graphs_g2972); end
  def test_lever_graphs_h2972; assert_equal("2000", worksheet.lever_graphs_h2972); end
  def test_lever_graphs_i2972; assert_equal("2005", worksheet.lever_graphs_i2972); end
  def test_lever_graphs_j2972; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2972, 0.002); end
  def test_lever_graphs_k2972; assert_equal("2011", worksheet.lever_graphs_k2972); end
  def test_lever_graphs_l2972; assert_equal("2015", worksheet.lever_graphs_l2972); end
  def test_lever_graphs_m2972; assert_equal("2020", worksheet.lever_graphs_m2972); end
  def test_lever_graphs_n2972; assert_equal("2025", worksheet.lever_graphs_n2972); end
  def test_lever_graphs_o2972; assert_equal("2030", worksheet.lever_graphs_o2972); end
  def test_lever_graphs_p2972; assert_equal("2035", worksheet.lever_graphs_p2972); end
  def test_lever_graphs_q2972; assert_equal("2040", worksheet.lever_graphs_q2972); end
  def test_lever_graphs_r2972; assert_equal("2045", worksheet.lever_graphs_r2972); end
  def test_lever_graphs_s2972; assert_equal("2050", worksheet.lever_graphs_s2972); end
  def test_lever_graphs_b2973; assert_equal("Historic data", worksheet.lever_graphs_b2973); end
  def test_lever_graphs_b2974; assert_in_delta(1.0, worksheet.lever_graphs_b2974, 0.002); end
  def test_lever_graphs_k2974; assert_in_delta(1.0, worksheet.lever_graphs_k2974, 0.002); end
  def test_lever_graphs_l2974; assert_in_delta(1.0, worksheet.lever_graphs_l2974, 0.002); end
  def test_lever_graphs_m2974; assert_in_epsilon(1.0142857142857142, worksheet.lever_graphs_m2974, 0.002); end
  def test_lever_graphs_n2974; assert_in_epsilon(1.0285714285714287, worksheet.lever_graphs_n2974, 0.002); end
  def test_lever_graphs_o2974; assert_in_epsilon(1.042857142857143, worksheet.lever_graphs_o2974, 0.002); end
  def test_lever_graphs_p2974; assert_in_epsilon(1.0571428571428572, worksheet.lever_graphs_p2974, 0.002); end
  def test_lever_graphs_q2974; assert_in_epsilon(1.0714285714285714, worksheet.lever_graphs_q2974, 0.002); end
  def test_lever_graphs_r2974; assert_in_epsilon(1.0857142857142859, worksheet.lever_graphs_r2974, 0.002); end
  def test_lever_graphs_s2974; assert_in_epsilon(1.1, worksheet.lever_graphs_s2974, 0.002); end
  def test_lever_graphs_b2975; assert_in_epsilon(2.0, worksheet.lever_graphs_b2975, 0.002); end
  def test_lever_graphs_k2975; assert_in_delta(1.0, worksheet.lever_graphs_k2975, 0.002); end
  def test_lever_graphs_l2975; assert_in_delta(1.0, worksheet.lever_graphs_l2975, 0.002); end
  def test_lever_graphs_m2975; assert_in_delta(1.0, worksheet.lever_graphs_m2975, 0.002); end
  def test_lever_graphs_n2975; assert_in_delta(1.0, worksheet.lever_graphs_n2975, 0.002); end
  def test_lever_graphs_o2975; assert_in_delta(1.0, worksheet.lever_graphs_o2975, 0.002); end
  def test_lever_graphs_p2975; assert_in_delta(1.0, worksheet.lever_graphs_p2975, 0.002); end
  def test_lever_graphs_q2975; assert_in_delta(1.0, worksheet.lever_graphs_q2975, 0.002); end
  def test_lever_graphs_r2975; assert_in_delta(1.0, worksheet.lever_graphs_r2975, 0.002); end
  def test_lever_graphs_s2975; assert_in_delta(1.0, worksheet.lever_graphs_s2975, 0.002); end
  def test_lever_graphs_b2976; assert_in_epsilon(3.0, worksheet.lever_graphs_b2976, 0.002); end
  def test_lever_graphs_k2976; assert_in_delta(1.0, worksheet.lever_graphs_k2976, 0.002); end
  def test_lever_graphs_l2976; assert_in_delta(1.0, worksheet.lever_graphs_l2976, 0.002); end
  def test_lever_graphs_m2976; assert_in_delta(0.9857142857142858, worksheet.lever_graphs_m2976, 0.002); end
  def test_lever_graphs_n2976; assert_in_delta(0.9714285714285714, worksheet.lever_graphs_n2976, 0.002); end
  def test_lever_graphs_o2976; assert_in_delta(0.9571428571428572, worksheet.lever_graphs_o2976, 0.002); end
  def test_lever_graphs_p2976; assert_in_delta(0.9428571428571428, worksheet.lever_graphs_p2976, 0.002); end
  def test_lever_graphs_q2976; assert_in_delta(0.9285714285714286, worksheet.lever_graphs_q2976, 0.002); end
  def test_lever_graphs_r2976; assert_in_delta(0.9142857142857144, worksheet.lever_graphs_r2976, 0.002); end
  def test_lever_graphs_s2976; assert_in_delta(0.9, worksheet.lever_graphs_s2976, 0.002); end
  def test_lever_graphs_b2977; assert_in_epsilon(4.0, worksheet.lever_graphs_b2977, 0.002); end
  def test_lever_graphs_k2977; assert_in_delta(1.0, worksheet.lever_graphs_k2977, 0.002); end
  def test_lever_graphs_l2977; assert_in_delta(1.0, worksheet.lever_graphs_l2977, 0.002); end
  def test_lever_graphs_m2977; assert_in_delta(0.9571428571428572, worksheet.lever_graphs_m2977, 0.002); end
  def test_lever_graphs_n2977; assert_in_delta(0.9142857142857143, worksheet.lever_graphs_n2977, 0.002); end
  def test_lever_graphs_o2977; assert_in_delta(0.8714285714285714, worksheet.lever_graphs_o2977, 0.002); end
  def test_lever_graphs_p2977; assert_in_delta(0.8285714285714285, worksheet.lever_graphs_p2977, 0.002); end
  def test_lever_graphs_q2977; assert_in_delta(0.7857142857142857, worksheet.lever_graphs_q2977, 0.002); end
  def test_lever_graphs_r2977; assert_in_delta(0.7428571428571429, worksheet.lever_graphs_r2977, 0.002); end
  def test_lever_graphs_s2977; assert_in_delta(0.7, worksheet.lever_graphs_s2977, 0.002); end
  def test_lever_graphs_d3114; assert_equal("Title", worksheet.lever_graphs_d3114); end
  def test_lever_graphs_e3114; assert_equal("Forest", worksheet.lever_graphs_e3114); end
  def test_lever_graphs_f3114; assert_equal("Arable.bio", worksheet.lever_graphs_f3114); end
  def test_lever_graphs_g3114; assert_equal("natural.grassland", worksheet.lever_graphs_g3114); end
  def test_lever_graphs_d3115; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3115, 0.002); end
  def test_lever_graphs_e3115; assert_in_delta(0.8, worksheet.lever_graphs_e3115, 0.002); end
  def test_lever_graphs_f3115; assert_in_delta(0.0, (worksheet.lever_graphs_f3115||0), 0.002); end
  def test_lever_graphs_g3115; assert_in_delta(0.2, worksheet.lever_graphs_g3115, 0.002); end
  def test_lever_graphs_d3116; assert_equal("2050: Level 1", worksheet.lever_graphs_d3116); end
  def test_lever_graphs_e3116; assert_in_delta(0.8, worksheet.lever_graphs_e3116, 0.002); end
  def test_lever_graphs_f3116; assert_in_delta(0.0, (worksheet.lever_graphs_f3116||0), 0.002); end
  def test_lever_graphs_g3116; assert_in_delta(0.2, worksheet.lever_graphs_g3116, 0.002); end
  def test_lever_graphs_d3117; assert_equal("2050: Level 2", worksheet.lever_graphs_d3117); end
  def test_lever_graphs_e3117; assert_in_delta(0.48, worksheet.lever_graphs_e3117, 0.002); end
  def test_lever_graphs_f3117; assert_in_delta(0.4, worksheet.lever_graphs_f3117, 0.002); end
  def test_lever_graphs_g3117; assert_in_delta(0.12, worksheet.lever_graphs_g3117, 0.002); end
  def test_lever_graphs_d3118; assert_equal("2050: Level 3", worksheet.lever_graphs_d3118); end
  def test_lever_graphs_e3118; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_e3118, 0.002); end
  def test_lever_graphs_f3118; assert_in_delta(0.6, worksheet.lever_graphs_f3118, 0.002); end
  def test_lever_graphs_g3118; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_g3118, 0.002); end
  def test_lever_graphs_d3119; assert_equal("2050: Level 4", worksheet.lever_graphs_d3119); end
  def test_lever_graphs_e3119; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_e3119, 0.002); end
  def test_lever_graphs_f3119; assert_in_delta(0.8, worksheet.lever_graphs_f3119, 0.002); end
  def test_lever_graphs_g3119; assert_in_delta(0.040000000000000036, worksheet.lever_graphs_g3119, 0.002); end
  def test_lever_graphs_c3093; assert_equal("1975", worksheet.lever_graphs_c3093); end
  def test_lever_graphs_d3093; assert_equal("1980", worksheet.lever_graphs_d3093); end
  def test_lever_graphs_e3093; assert_equal("1985", worksheet.lever_graphs_e3093); end
  def test_lever_graphs_f3093; assert_equal("1990", worksheet.lever_graphs_f3093); end
  def test_lever_graphs_g3093; assert_equal("1995", worksheet.lever_graphs_g3093); end
  def test_lever_graphs_h3093; assert_equal("2000", worksheet.lever_graphs_h3093); end
  def test_lever_graphs_i3093; assert_equal("2005", worksheet.lever_graphs_i3093); end
  def test_lever_graphs_j3093; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3093, 0.002); end
  def test_lever_graphs_k3093; assert_equal("2011", worksheet.lever_graphs_k3093); end
  def test_lever_graphs_l3093; assert_equal("2015", worksheet.lever_graphs_l3093); end
  def test_lever_graphs_m3093; assert_equal("2020", worksheet.lever_graphs_m3093); end
  def test_lever_graphs_n3093; assert_equal("2025", worksheet.lever_graphs_n3093); end
  def test_lever_graphs_o3093; assert_equal("2030", worksheet.lever_graphs_o3093); end
  def test_lever_graphs_p3093; assert_equal("2035", worksheet.lever_graphs_p3093); end
  def test_lever_graphs_q3093; assert_equal("2040", worksheet.lever_graphs_q3093); end
  def test_lever_graphs_r3093; assert_equal("2045", worksheet.lever_graphs_r3093); end
  def test_lever_graphs_s3093; assert_equal("2050", worksheet.lever_graphs_s3093); end
  def test_lever_graphs_b3094; assert_equal("Historic data", worksheet.lever_graphs_b3094); end
  def test_lever_graphs_b3095; assert_in_delta(1.0, worksheet.lever_graphs_b3095, 0.002); end
  def test_lever_graphs_k3095; assert_in_delta(0.8, worksheet.lever_graphs_k3095, 0.002); end
  def test_lever_graphs_l3095; assert_in_delta(0.8, worksheet.lever_graphs_l3095, 0.002); end
  def test_lever_graphs_m3095; assert_in_delta(0.8, worksheet.lever_graphs_m3095, 0.002); end
  def test_lever_graphs_n3095; assert_in_delta(0.8, worksheet.lever_graphs_n3095, 0.002); end
  def test_lever_graphs_o3095; assert_in_delta(0.8, worksheet.lever_graphs_o3095, 0.002); end
  def test_lever_graphs_p3095; assert_in_delta(0.8, worksheet.lever_graphs_p3095, 0.002); end
  def test_lever_graphs_q3095; assert_in_delta(0.8, worksheet.lever_graphs_q3095, 0.002); end
  def test_lever_graphs_r3095; assert_in_delta(0.8, worksheet.lever_graphs_r3095, 0.002); end
  def test_lever_graphs_s3095; assert_in_delta(0.8, worksheet.lever_graphs_s3095, 0.002); end
  def test_lever_graphs_b3096; assert_in_epsilon(2.0, worksheet.lever_graphs_b3096, 0.002); end
  def test_lever_graphs_k3096; assert_in_delta(0.48, worksheet.lever_graphs_k3096, 0.002); end
  def test_lever_graphs_l3096; assert_in_delta(0.48, worksheet.lever_graphs_l3096, 0.002); end
  def test_lever_graphs_m3096; assert_in_delta(0.48, worksheet.lever_graphs_m3096, 0.002); end
  def test_lever_graphs_n3096; assert_in_delta(0.48, worksheet.lever_graphs_n3096, 0.002); end
  def test_lever_graphs_o3096; assert_in_delta(0.48, worksheet.lever_graphs_o3096, 0.002); end
  def test_lever_graphs_p3096; assert_in_delta(0.48, worksheet.lever_graphs_p3096, 0.002); end
  def test_lever_graphs_q3096; assert_in_delta(0.48, worksheet.lever_graphs_q3096, 0.002); end
  def test_lever_graphs_r3096; assert_in_delta(0.48, worksheet.lever_graphs_r3096, 0.002); end
  def test_lever_graphs_s3096; assert_in_delta(0.48, worksheet.lever_graphs_s3096, 0.002); end
  def test_lever_graphs_b3097; assert_in_epsilon(3.0, worksheet.lever_graphs_b3097, 0.002); end
  def test_lever_graphs_k3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_k3097, 0.002); end
  def test_lever_graphs_l3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_l3097, 0.002); end
  def test_lever_graphs_m3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_m3097, 0.002); end
  def test_lever_graphs_n3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_n3097, 0.002); end
  def test_lever_graphs_o3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_o3097, 0.002); end
  def test_lever_graphs_p3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_p3097, 0.002); end
  def test_lever_graphs_q3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_q3097, 0.002); end
  def test_lever_graphs_r3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_r3097, 0.002); end
  def test_lever_graphs_s3097; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_s3097, 0.002); end
  def test_lever_graphs_b3098; assert_in_epsilon(4.0, worksheet.lever_graphs_b3098, 0.002); end
  def test_lever_graphs_k3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_k3098, 0.002); end
  def test_lever_graphs_l3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_l3098, 0.002); end
  def test_lever_graphs_m3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_m3098, 0.002); end
  def test_lever_graphs_n3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_n3098, 0.002); end
  def test_lever_graphs_o3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_o3098, 0.002); end
  def test_lever_graphs_p3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_p3098, 0.002); end
  def test_lever_graphs_q3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_q3098, 0.002); end
  def test_lever_graphs_r3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_r3098, 0.002); end
  def test_lever_graphs_s3098; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_s3098, 0.002); end
  def test_lever_graphs_c2479; assert_equal("1975", worksheet.lever_graphs_c2479); end
  def test_lever_graphs_d2479; assert_equal("1980", worksheet.lever_graphs_d2479); end
  def test_lever_graphs_e2479; assert_equal("1985", worksheet.lever_graphs_e2479); end
  def test_lever_graphs_f2479; assert_equal("1990", worksheet.lever_graphs_f2479); end
  def test_lever_graphs_g2479; assert_equal("1995", worksheet.lever_graphs_g2479); end
  def test_lever_graphs_h2479; assert_equal("2000", worksheet.lever_graphs_h2479); end
  def test_lever_graphs_i2479; assert_equal("2005", worksheet.lever_graphs_i2479); end
  def test_lever_graphs_j2479; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2479, 0.002); end
  def test_lever_graphs_k2479; assert_equal("2011", worksheet.lever_graphs_k2479); end
  def test_lever_graphs_l2479; assert_equal("2015", worksheet.lever_graphs_l2479); end
  def test_lever_graphs_m2479; assert_equal("2020", worksheet.lever_graphs_m2479); end
  def test_lever_graphs_n2479; assert_equal("2025", worksheet.lever_graphs_n2479); end
  def test_lever_graphs_o2479; assert_equal("2030", worksheet.lever_graphs_o2479); end
  def test_lever_graphs_p2479; assert_equal("2035", worksheet.lever_graphs_p2479); end
  def test_lever_graphs_q2479; assert_equal("2040", worksheet.lever_graphs_q2479); end
  def test_lever_graphs_r2479; assert_equal("2045", worksheet.lever_graphs_r2479); end
  def test_lever_graphs_s2479; assert_equal("2050", worksheet.lever_graphs_s2479); end
  def test_lever_graphs_b2480; assert_equal("Historic data", worksheet.lever_graphs_b2480); end
  def test_lever_graphs_b2481; assert_in_delta(1.0, worksheet.lever_graphs_b2481, 0.002); end
  def test_lever_graphs_k2481; assert_in_epsilon(24.0, worksheet.lever_graphs_k2481, 0.002); end
  def test_lever_graphs_l2481; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2481, 0.002); end
  def test_lever_graphs_m2481; assert_in_epsilon(27.692307692307693, worksheet.lever_graphs_m2481, 0.002); end
  def test_lever_graphs_n2481; assert_in_epsilon(29.743589743589745, worksheet.lever_graphs_n2481, 0.002); end
  def test_lever_graphs_o2481; assert_in_epsilon(31.794871794871796, worksheet.lever_graphs_o2481, 0.002); end
  def test_lever_graphs_p2481; assert_in_epsilon(33.84615384615384, worksheet.lever_graphs_p2481, 0.002); end
  def test_lever_graphs_q2481; assert_in_epsilon(35.8974358974359, worksheet.lever_graphs_q2481, 0.002); end
  def test_lever_graphs_r2481; assert_in_epsilon(37.94871794871795, worksheet.lever_graphs_r2481, 0.002); end
  def test_lever_graphs_s2481; assert_in_epsilon(40.0, worksheet.lever_graphs_s2481, 0.002); end
  def test_lever_graphs_b2482; assert_in_epsilon(2.0, worksheet.lever_graphs_b2482, 0.002); end
  def test_lever_graphs_k2482; assert_in_epsilon(24.0, worksheet.lever_graphs_k2482, 0.002); end
  def test_lever_graphs_l2482; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2482, 0.002); end
  def test_lever_graphs_m2482; assert_in_epsilon(26.978021978021978, worksheet.lever_graphs_m2482, 0.002); end
  def test_lever_graphs_n2482; assert_in_epsilon(28.315018315018317, worksheet.lever_graphs_n2482, 0.002); end
  def test_lever_graphs_o2482; assert_in_epsilon(29.65201465201465, worksheet.lever_graphs_o2482, 0.002); end
  def test_lever_graphs_p2482; assert_in_epsilon(30.98901098901099, worksheet.lever_graphs_p2482, 0.002); end
  def test_lever_graphs_q2482; assert_in_epsilon(32.32600732600733, worksheet.lever_graphs_q2482, 0.002); end
  def test_lever_graphs_r2482; assert_in_epsilon(33.663003663003664, worksheet.lever_graphs_r2482, 0.002); end
  def test_lever_graphs_s2482; assert_in_epsilon(35.0, worksheet.lever_graphs_s2482, 0.002); end
  def test_lever_graphs_b2483; assert_in_epsilon(3.0, worksheet.lever_graphs_b2483, 0.002); end
  def test_lever_graphs_k2483; assert_in_epsilon(24.0, worksheet.lever_graphs_k2483, 0.002); end
  def test_lever_graphs_l2483; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2483, 0.002); end
  def test_lever_graphs_m2483; assert_in_epsilon(26.263736263736263, worksheet.lever_graphs_m2483, 0.002); end
  def test_lever_graphs_n2483; assert_in_epsilon(26.88644688644689, worksheet.lever_graphs_n2483, 0.002); end
  def test_lever_graphs_o2483; assert_in_epsilon(27.509157509157507, worksheet.lever_graphs_o2483, 0.002); end
  def test_lever_graphs_p2483; assert_in_epsilon(28.13186813186813, worksheet.lever_graphs_p2483, 0.002); end
  def test_lever_graphs_q2483; assert_in_epsilon(28.754578754578755, worksheet.lever_graphs_q2483, 0.002); end
  def test_lever_graphs_r2483; assert_in_epsilon(29.377289377289376, worksheet.lever_graphs_r2483, 0.002); end
  def test_lever_graphs_s2483; assert_in_epsilon(30.0, worksheet.lever_graphs_s2483, 0.002); end
  def test_lever_graphs_b2484; assert_in_epsilon(4.0, worksheet.lever_graphs_b2484, 0.002); end
  def test_lever_graphs_k2484; assert_in_epsilon(24.0, worksheet.lever_graphs_k2484, 0.002); end
  def test_lever_graphs_l2484; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2484, 0.002); end
  def test_lever_graphs_m2484; assert_in_epsilon(25.549450549450547, worksheet.lever_graphs_m2484, 0.002); end
  def test_lever_graphs_n2484; assert_in_epsilon(25.45787545787546, worksheet.lever_graphs_n2484, 0.002); end
  def test_lever_graphs_o2484; assert_in_epsilon(25.366300366300365, worksheet.lever_graphs_o2484, 0.002); end
  def test_lever_graphs_p2484; assert_in_epsilon(25.274725274725274, worksheet.lever_graphs_p2484, 0.002); end
  def test_lever_graphs_q2484; assert_in_epsilon(25.183150183150182, worksheet.lever_graphs_q2484, 0.002); end
  def test_lever_graphs_r2484; assert_in_epsilon(25.09157509157509, worksheet.lever_graphs_r2484, 0.002); end
  def test_lever_graphs_s2484; assert_in_epsilon(25.0, worksheet.lever_graphs_s2484, 0.002); end
  def test_lever_graphs_d2489; assert_equal("Title", worksheet.lever_graphs_d2489); end
  def test_lever_graphs_e2489; assert_equal("Global urban incandescent light bulb", worksheet.lever_graphs_e2489); end
  def test_lever_graphs_f2489; assert_equal("Global urban halogens light bulb", worksheet.lever_graphs_f2489); end
  def test_lever_graphs_g2489; assert_equal("Global urban compact fluorescent lamp", worksheet.lever_graphs_g2489); end
  def test_lever_graphs_h2489; assert_equal("Global urban LEDs bulb", worksheet.lever_graphs_h2489); end
  def test_lever_graphs_d2490; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2490, 0.002); end
  def test_lever_graphs_e2490; assert_in_delta(0.717, worksheet.lever_graphs_e2490, 0.002); end
  def test_lever_graphs_f2490; assert_in_delta(0.03, worksheet.lever_graphs_f2490, 0.002); end
  def test_lever_graphs_g2490; assert_in_delta(0.25, worksheet.lever_graphs_g2490, 0.002); end
  def test_lever_graphs_h2490; assert_in_delta(0.0030000000000000027, worksheet.lever_graphs_h2490, 0.002); end
  def test_lever_graphs_d2491; assert_equal("2050: Level 1", worksheet.lever_graphs_d2491); end
  def test_lever_graphs_e2491; assert_in_delta(0.51, worksheet.lever_graphs_e2491, 0.002); end
  def test_lever_graphs_f2491; assert_in_delta(0.03, worksheet.lever_graphs_f2491, 0.002); end
  def test_lever_graphs_g2491; assert_in_delta(0.45, worksheet.lever_graphs_g2491, 0.002); end
  def test_lever_graphs_h2491; assert_in_delta(0.01, worksheet.lever_graphs_h2491, 0.002); end
  def test_lever_graphs_d2492; assert_equal("2050: Level 2", worksheet.lever_graphs_d2492); end
  def test_lever_graphs_e2492; assert_in_delta(0.20000000000000007, worksheet.lever_graphs_e2492, 0.002); end
  def test_lever_graphs_f2492; assert_in_delta(0.01, worksheet.lever_graphs_f2492, 0.002); end
  def test_lever_graphs_g2492; assert_in_delta(0.69, worksheet.lever_graphs_g2492, 0.002); end
  def test_lever_graphs_h2492; assert_in_delta(0.1, worksheet.lever_graphs_h2492, 0.002); end
  def test_lever_graphs_d2493; assert_equal("2050: Level 3", worksheet.lever_graphs_d2493); end
  def test_lever_graphs_e2493; assert_in_delta(0.0, (worksheet.lever_graphs_e2493||0), 0.002); end
  def test_lever_graphs_f2493; assert_in_delta(0.0, (worksheet.lever_graphs_f2493||0), 0.002); end
  def test_lever_graphs_g2493; assert_in_delta(0.5, worksheet.lever_graphs_g2493, 0.002); end
  def test_lever_graphs_h2493; assert_in_delta(0.5, worksheet.lever_graphs_h2493, 0.002); end
  def test_lever_graphs_d2494; assert_equal("2050: Level 4", worksheet.lever_graphs_d2494); end
  def test_lever_graphs_e2494; assert_in_delta(0.0, (worksheet.lever_graphs_e2494||0), 0.002); end
  def test_lever_graphs_f2494; assert_in_delta(0.0, (worksheet.lever_graphs_f2494||0), 0.002); end
  def test_lever_graphs_g2494; assert_in_delta(0.2, worksheet.lever_graphs_g2494, 0.002); end
  def test_lever_graphs_h2494; assert_in_delta(0.8, worksheet.lever_graphs_h2494, 0.002); end
  def test_lever_graphs_d1705; assert_equal("Title", worksheet.lever_graphs_d1705); end
  def test_lever_graphs_e1705; assert_equal("liquid-fuel efficient power plant", worksheet.lever_graphs_e1705); end
  def test_lever_graphs_f1705; assert_equal("Liquid-fuel inefficient power plant", worksheet.lever_graphs_f1705); end
  def test_lever_graphs_d1706; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1706, 0.002); end
  def test_lever_graphs_e1706; assert_in_delta(0.3, worksheet.lever_graphs_e1706, 0.002); end
  def test_lever_graphs_f1706; assert_in_delta(0.7, worksheet.lever_graphs_f1706, 0.002); end
  def test_lever_graphs_d1707; assert_equal("2050: Level 1", worksheet.lever_graphs_d1707); end
  def test_lever_graphs_e1707; assert_in_delta(0.3288, worksheet.lever_graphs_e1707, 0.002); end
  def test_lever_graphs_f1707; assert_in_delta(0.6712, worksheet.lever_graphs_f1707, 0.002); end
  def test_lever_graphs_d1708; assert_equal("2050: Level 2", worksheet.lever_graphs_d1708); end
  def test_lever_graphs_e1708; assert_in_delta(0.47, worksheet.lever_graphs_e1708, 0.002); end
  def test_lever_graphs_f1708; assert_in_delta(0.53, worksheet.lever_graphs_f1708, 0.002); end
  def test_lever_graphs_d1709; assert_equal("2050: Level 3", worksheet.lever_graphs_d1709); end
  def test_lever_graphs_e1709; assert_in_delta(0.65, worksheet.lever_graphs_e1709, 0.002); end
  def test_lever_graphs_f1709; assert_in_delta(0.35, worksheet.lever_graphs_f1709, 0.002); end
  def test_lever_graphs_d1710; assert_equal("2050: Level 4", worksheet.lever_graphs_d1710); end
  def test_lever_graphs_e1710; assert_in_delta(0.7142, worksheet.lever_graphs_e1710, 0.002); end
  def test_lever_graphs_f1710; assert_in_delta(0.28580000000000005, worksheet.lever_graphs_f1710, 0.002); end
  def test_lever_graphs_c1560; assert_equal("1975", worksheet.lever_graphs_c1560); end
  def test_lever_graphs_d1560; assert_equal("1980", worksheet.lever_graphs_d1560); end
  def test_lever_graphs_e1560; assert_equal("1985", worksheet.lever_graphs_e1560); end
  def test_lever_graphs_f1560; assert_equal("1990", worksheet.lever_graphs_f1560); end
  def test_lever_graphs_g1560; assert_equal("1995", worksheet.lever_graphs_g1560); end
  def test_lever_graphs_h1560; assert_equal("2000", worksheet.lever_graphs_h1560); end
  def test_lever_graphs_i1560; assert_equal("2005", worksheet.lever_graphs_i1560); end
  def test_lever_graphs_j1560; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1560, 0.002); end
  def test_lever_graphs_k1560; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1560, 0.002); end
  def test_lever_graphs_l1560; assert_equal("2015", worksheet.lever_graphs_l1560); end
  def test_lever_graphs_m1560; assert_equal("2020", worksheet.lever_graphs_m1560); end
  def test_lever_graphs_n1560; assert_equal("2025", worksheet.lever_graphs_n1560); end
  def test_lever_graphs_o1560; assert_equal("2030", worksheet.lever_graphs_o1560); end
  def test_lever_graphs_p1560; assert_equal("2035", worksheet.lever_graphs_p1560); end
  def test_lever_graphs_q1560; assert_equal("2040", worksheet.lever_graphs_q1560); end
  def test_lever_graphs_r1560; assert_equal("2045", worksheet.lever_graphs_r1560); end
  def test_lever_graphs_s1560; assert_equal("2050", worksheet.lever_graphs_s1560); end
  def test_lever_graphs_b1561; assert_equal("Historic data", worksheet.lever_graphs_b1561); end
  def test_lever_graphs_b1562; assert_in_delta(1.0, worksheet.lever_graphs_b1562, 0.002); end
  def test_lever_graphs_k1562; assert_in_delta(0.24, worksheet.lever_graphs_k1562, 0.002); end
  def test_lever_graphs_l1562; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1562, 0.002); end
  def test_lever_graphs_m1562; assert_in_delta(0.2421098901098901, worksheet.lever_graphs_m1562, 0.002); end
  def test_lever_graphs_n1562; assert_in_delta(0.24175824175824173, worksheet.lever_graphs_n1562, 0.002); end
  def test_lever_graphs_o1562; assert_in_delta(0.2414065934065934, worksheet.lever_graphs_o1562, 0.002); end
  def test_lever_graphs_p1562; assert_in_delta(0.24105494505494504, worksheet.lever_graphs_p1562, 0.002); end
  def test_lever_graphs_q1562; assert_in_delta(0.24070329670329668, worksheet.lever_graphs_q1562, 0.002); end
  def test_lever_graphs_r1562; assert_in_delta(0.24035164835164835, worksheet.lever_graphs_r1562, 0.002); end
  def test_lever_graphs_s1562; assert_in_delta(0.24, worksheet.lever_graphs_s1562, 0.002); end
  def test_lever_graphs_b1563; assert_in_epsilon(2.0, worksheet.lever_graphs_b1563, 0.002); end
  def test_lever_graphs_k1563; assert_in_delta(0.24, worksheet.lever_graphs_k1563, 0.002); end
  def test_lever_graphs_l1563; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1563, 0.002); end
  def test_lever_graphs_m1563; assert_in_delta(0.2455384615384615, worksheet.lever_graphs_m1563, 0.002); end
  def test_lever_graphs_n1563; assert_in_delta(0.24861538461538457, worksheet.lever_graphs_n1563, 0.002); end
  def test_lever_graphs_o1563; assert_in_delta(0.25169230769230766, worksheet.lever_graphs_o1563, 0.002); end
  def test_lever_graphs_p1563; assert_in_delta(0.25476923076923075, worksheet.lever_graphs_p1563, 0.002); end
  def test_lever_graphs_q1563; assert_in_delta(0.2578461538461539, worksheet.lever_graphs_q1563, 0.002); end
  def test_lever_graphs_r1563; assert_in_delta(0.26092307692307687, worksheet.lever_graphs_r1563, 0.002); end
  def test_lever_graphs_s1563; assert_in_delta(0.264, worksheet.lever_graphs_s1563, 0.002); end
  def test_lever_graphs_b1564; assert_in_epsilon(3.0, worksheet.lever_graphs_b1564, 0.002); end
  def test_lever_graphs_k1564; assert_in_delta(0.24, worksheet.lever_graphs_k1564, 0.002); end
  def test_lever_graphs_l1564; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1564, 0.002); end
  def test_lever_graphs_m1564; assert_in_delta(0.24896703296703293, worksheet.lever_graphs_m1564, 0.002); end
  def test_lever_graphs_n1564; assert_in_delta(0.25547252747252747, worksheet.lever_graphs_n1564, 0.002); end
  def test_lever_graphs_o1564; assert_in_delta(0.26197802197802195, worksheet.lever_graphs_o1564, 0.002); end
  def test_lever_graphs_p1564; assert_in_delta(0.2684835164835164, worksheet.lever_graphs_p1564, 0.002); end
  def test_lever_graphs_q1564; assert_in_delta(0.27498901098901096, worksheet.lever_graphs_q1564, 0.002); end
  def test_lever_graphs_r1564; assert_in_delta(0.28149450549450544, worksheet.lever_graphs_r1564, 0.002); end
  def test_lever_graphs_s1564; assert_in_delta(0.288, worksheet.lever_graphs_s1564, 0.002); end
  def test_lever_graphs_b1565; assert_in_epsilon(4.0, worksheet.lever_graphs_b1565, 0.002); end
  def test_lever_graphs_k1565; assert_in_delta(0.24, worksheet.lever_graphs_k1565, 0.002); end
  def test_lever_graphs_l1565; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1565, 0.002); end
  def test_lever_graphs_m1565; assert_in_delta(0.2523956043956043, worksheet.lever_graphs_m1565, 0.002); end
  def test_lever_graphs_n1565; assert_in_delta(0.26232967032967036, worksheet.lever_graphs_n1565, 0.002); end
  def test_lever_graphs_o1565; assert_in_delta(0.27226373626373623, worksheet.lever_graphs_o1565, 0.002); end
  def test_lever_graphs_p1565; assert_in_delta(0.2821978021978022, worksheet.lever_graphs_p1565, 0.002); end
  def test_lever_graphs_q1565; assert_in_delta(0.29213186813186814, worksheet.lever_graphs_q1565, 0.002); end
  def test_lever_graphs_r1565; assert_in_delta(0.30206593406593407, worksheet.lever_graphs_r1565, 0.002); end
  def test_lever_graphs_s1565; assert_in_delta(0.312, worksheet.lever_graphs_s1565, 0.002); end
  def test_lever_graphs_c1572; assert_equal("1975", worksheet.lever_graphs_c1572); end
  def test_lever_graphs_d1572; assert_equal("1980", worksheet.lever_graphs_d1572); end
  def test_lever_graphs_e1572; assert_equal("1985", worksheet.lever_graphs_e1572); end
  def test_lever_graphs_f1572; assert_equal("1990", worksheet.lever_graphs_f1572); end
  def test_lever_graphs_g1572; assert_equal("1995", worksheet.lever_graphs_g1572); end
  def test_lever_graphs_h1572; assert_equal("2000", worksheet.lever_graphs_h1572); end
  def test_lever_graphs_i1572; assert_equal("2005", worksheet.lever_graphs_i1572); end
  def test_lever_graphs_j1572; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1572, 0.002); end
  def test_lever_graphs_k1572; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1572, 0.002); end
  def test_lever_graphs_l1572; assert_equal("2015", worksheet.lever_graphs_l1572); end
  def test_lever_graphs_m1572; assert_equal("2020", worksheet.lever_graphs_m1572); end
  def test_lever_graphs_n1572; assert_equal("2025", worksheet.lever_graphs_n1572); end
  def test_lever_graphs_o1572; assert_equal("2030", worksheet.lever_graphs_o1572); end
  def test_lever_graphs_p1572; assert_equal("2035", worksheet.lever_graphs_p1572); end
  def test_lever_graphs_q1572; assert_equal("2040", worksheet.lever_graphs_q1572); end
  def test_lever_graphs_r1572; assert_equal("2045", worksheet.lever_graphs_r1572); end
  def test_lever_graphs_s1572; assert_equal("2050", worksheet.lever_graphs_s1572); end
  def test_lever_graphs_b1573; assert_equal("Historic data", worksheet.lever_graphs_b1573); end
  def test_lever_graphs_b1574; assert_in_delta(1.0, worksheet.lever_graphs_b1574, 0.002); end
  def test_lever_graphs_k1574; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1574, 0.002); end
  def test_lever_graphs_l1574; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1574, 0.002); end
  def test_lever_graphs_m1574; assert_in_epsilon(20175.824175824175, worksheet.lever_graphs_m1574, 0.002); end
  def test_lever_graphs_n1574; assert_in_epsilon(20146.520146520146, worksheet.lever_graphs_n1574, 0.002); end
  def test_lever_graphs_o1574; assert_in_epsilon(20117.216117216118, worksheet.lever_graphs_o1574, 0.002); end
  def test_lever_graphs_p1574; assert_in_epsilon(20087.91208791209, worksheet.lever_graphs_p1574, 0.002); end
  def test_lever_graphs_q1574; assert_in_epsilon(20058.608058608057, worksheet.lever_graphs_q1574, 0.002); end
  def test_lever_graphs_r1574; assert_in_epsilon(20029.30402930403, worksheet.lever_graphs_r1574, 0.002); end
  def test_lever_graphs_s1574; assert_in_epsilon(20000.0, worksheet.lever_graphs_s1574, 0.002); end
  def test_lever_graphs_b1575; assert_in_epsilon(2.0, worksheet.lever_graphs_b1575, 0.002); end
  def test_lever_graphs_k1575; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1575, 0.002); end
  def test_lever_graphs_l1575; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1575, 0.002); end
  def test_lever_graphs_m1575; assert_in_epsilon(20318.681318681316, worksheet.lever_graphs_m1575, 0.002); end
  def test_lever_graphs_n1575; assert_in_epsilon(20432.234432234432, worksheet.lever_graphs_n1575, 0.002); end
  def test_lever_graphs_o1575; assert_in_epsilon(20545.787545787545, worksheet.lever_graphs_o1575, 0.002); end
  def test_lever_graphs_p1575; assert_in_epsilon(20659.340659340658, worksheet.lever_graphs_p1575, 0.002); end
  def test_lever_graphs_q1575; assert_in_epsilon(20772.89377289377, worksheet.lever_graphs_q1575, 0.002); end
  def test_lever_graphs_r1575; assert_in_epsilon(20886.446886446887, worksheet.lever_graphs_r1575, 0.002); end
  def test_lever_graphs_s1575; assert_in_epsilon(21000.0, worksheet.lever_graphs_s1575, 0.002); end
  def test_lever_graphs_b1576; assert_in_epsilon(3.0, worksheet.lever_graphs_b1576, 0.002); end
  def test_lever_graphs_k1576; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1576, 0.002); end
  def test_lever_graphs_l1576; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1576, 0.002); end
  def test_lever_graphs_m1576; assert_in_epsilon(20461.53846153846, worksheet.lever_graphs_m1576, 0.002); end
  def test_lever_graphs_n1576; assert_in_epsilon(20717.948717948715, worksheet.lever_graphs_n1576, 0.002); end
  def test_lever_graphs_o1576; assert_in_epsilon(20974.35897435897, worksheet.lever_graphs_o1576, 0.002); end
  def test_lever_graphs_p1576; assert_in_epsilon(21230.76923076923, worksheet.lever_graphs_p1576, 0.002); end
  def test_lever_graphs_q1576; assert_in_epsilon(21487.179487179492, worksheet.lever_graphs_q1576, 0.002); end
  def test_lever_graphs_r1576; assert_in_epsilon(21743.589743589742, worksheet.lever_graphs_r1576, 0.002); end
  def test_lever_graphs_s1576; assert_in_epsilon(22000.0, worksheet.lever_graphs_s1576, 0.002); end
  def test_lever_graphs_b1577; assert_in_epsilon(4.0, worksheet.lever_graphs_b1577, 0.002); end
  def test_lever_graphs_k1577; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1577, 0.002); end
  def test_lever_graphs_l1577; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1577, 0.002); end
  def test_lever_graphs_m1577; assert_in_epsilon(20604.395604395602, worksheet.lever_graphs_m1577, 0.002); end
  def test_lever_graphs_n1577; assert_in_epsilon(21003.663003663, worksheet.lever_graphs_n1577, 0.002); end
  def test_lever_graphs_o1577; assert_in_epsilon(21402.930402930397, worksheet.lever_graphs_o1577, 0.002); end
  def test_lever_graphs_p1577; assert_in_epsilon(21802.1978021978, worksheet.lever_graphs_p1577, 0.002); end
  def test_lever_graphs_q1577; assert_in_epsilon(22201.465201465202, worksheet.lever_graphs_q1577, 0.002); end
  def test_lever_graphs_r1577; assert_in_epsilon(22600.732600732597, worksheet.lever_graphs_r1577, 0.002); end
  def test_lever_graphs_s1577; assert_in_epsilon(23000.0, worksheet.lever_graphs_s1577, 0.002); end
  def test_lever_graphs_c2887; assert_equal("1975", worksheet.lever_graphs_c2887); end
  def test_lever_graphs_d2887; assert_equal("1980", worksheet.lever_graphs_d2887); end
  def test_lever_graphs_e2887; assert_equal("1985", worksheet.lever_graphs_e2887); end
  def test_lever_graphs_f2887; assert_equal("1990", worksheet.lever_graphs_f2887); end
  def test_lever_graphs_g2887; assert_equal("1995", worksheet.lever_graphs_g2887); end
  def test_lever_graphs_h2887; assert_equal("2000", worksheet.lever_graphs_h2887); end
  def test_lever_graphs_i2887; assert_equal("2005", worksheet.lever_graphs_i2887); end
  def test_lever_graphs_j2887; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2887, 0.002); end
  def test_lever_graphs_k2887; assert_equal("2011", worksheet.lever_graphs_k2887); end
  def test_lever_graphs_l2887; assert_equal("2015", worksheet.lever_graphs_l2887); end
  def test_lever_graphs_m2887; assert_equal("2020", worksheet.lever_graphs_m2887); end
  def test_lever_graphs_n2887; assert_equal("2025", worksheet.lever_graphs_n2887); end
  def test_lever_graphs_o2887; assert_equal("2030", worksheet.lever_graphs_o2887); end
  def test_lever_graphs_p2887; assert_equal("2035", worksheet.lever_graphs_p2887); end
  def test_lever_graphs_q2887; assert_equal("2040", worksheet.lever_graphs_q2887); end
  def test_lever_graphs_r2887; assert_equal("2045", worksheet.lever_graphs_r2887); end
  def test_lever_graphs_s2887; assert_equal("2050", worksheet.lever_graphs_s2887); end
  def test_lever_graphs_b2888; assert_equal("Historic data", worksheet.lever_graphs_b2888); end
  def test_lever_graphs_c2888; assert_in_epsilon(113.0, worksheet.lever_graphs_c2888, 0.002); end
  def test_lever_graphs_d2888; assert_in_epsilon(126.0, worksheet.lever_graphs_d2888, 0.002); end
  def test_lever_graphs_e2888; assert_in_epsilon(131.0, worksheet.lever_graphs_e2888, 0.002); end
  def test_lever_graphs_f2888; assert_in_epsilon(143.0, worksheet.lever_graphs_f2888, 0.002); end
  def test_lever_graphs_g2888; assert_in_epsilon(153.0, worksheet.lever_graphs_g2888, 0.002); end
  def test_lever_graphs_h2888; assert_in_epsilon(165.0, worksheet.lever_graphs_h2888, 0.002); end
  def test_lever_graphs_i2888; assert_in_epsilon(171.0, worksheet.lever_graphs_i2888, 0.002); end
  def test_lever_graphs_j2888; assert_in_epsilon(185.0, worksheet.lever_graphs_j2888, 0.002); end
  def test_lever_graphs_k2888; assert_in_epsilon(187.0, worksheet.lever_graphs_k2888, 0.002); end
  def test_lever_graphs_b2889; assert_in_delta(1.0, worksheet.lever_graphs_b2889, 0.002); end
  def test_lever_graphs_k2889; assert_in_epsilon(191.0, worksheet.lever_graphs_k2889, 0.002); end
  def test_lever_graphs_l2889; assert_in_epsilon(191.0, worksheet.lever_graphs_l2889, 0.002); end
  def test_lever_graphs_m2889; assert_in_epsilon(194.47684860431448, worksheet.lever_graphs_m2889, 0.002); end
  def test_lever_graphs_n2889; assert_in_epsilon(200.45005265182385, worksheet.lever_graphs_n2889, 0.002); end
  def test_lever_graphs_o2889; assert_in_epsilon(213.96183538981848, worksheet.lever_graphs_o2889, 0.002); end
  def test_lever_graphs_p2889; assert_in_epsilon(236.00000000000003, worksheet.lever_graphs_p2889, 0.002); end
  def test_lever_graphs_q2889; assert_in_epsilon(258.0381646101815, worksheet.lever_graphs_q2889, 0.002); end
  def test_lever_graphs_r2889; assert_in_epsilon(271.54994734817615, worksheet.lever_graphs_r2889, 0.002); end
  def test_lever_graphs_s2889; assert_in_epsilon(281.0, worksheet.lever_graphs_s2889, 0.002); end
  def test_lever_graphs_b2890; assert_in_epsilon(2.0, worksheet.lever_graphs_b2890, 0.002); end
  def test_lever_graphs_k2890; assert_in_epsilon(191.0, worksheet.lever_graphs_k2890, 0.002); end
  def test_lever_graphs_l2890; assert_in_epsilon(191.0, worksheet.lever_graphs_l2890, 0.002); end
  def test_lever_graphs_m2890; assert_in_epsilon(191.0, worksheet.lever_graphs_m2890, 0.002); end
  def test_lever_graphs_n2890; assert_in_epsilon(191.0, worksheet.lever_graphs_n2890, 0.002); end
  def test_lever_graphs_o2890; assert_in_epsilon(191.0, worksheet.lever_graphs_o2890, 0.002); end
  def test_lever_graphs_p2890; assert_in_epsilon(191.0, worksheet.lever_graphs_p2890, 0.002); end
  def test_lever_graphs_q2890; assert_in_epsilon(191.0, worksheet.lever_graphs_q2890, 0.002); end
  def test_lever_graphs_r2890; assert_in_epsilon(191.0, worksheet.lever_graphs_r2890, 0.002); end
  def test_lever_graphs_s2890; assert_in_epsilon(191.0, worksheet.lever_graphs_s2890, 0.002); end
  def test_lever_graphs_b2891; assert_in_epsilon(3.0, worksheet.lever_graphs_b2891, 0.002); end
  def test_lever_graphs_k2891; assert_in_epsilon(191.0, worksheet.lever_graphs_k2891, 0.002); end
  def test_lever_graphs_l2891; assert_in_epsilon(191.0, worksheet.lever_graphs_l2891, 0.002); end
  def test_lever_graphs_m2891; assert_in_epsilon(189.49336560479708, worksheet.lever_graphs_m2891, 0.002); end
  def test_lever_graphs_n2891; assert_in_epsilon(186.90497718420966, worksheet.lever_graphs_n2891, 0.002); end
  def test_lever_graphs_o2891; assert_in_epsilon(181.04987133107866, worksheet.lever_graphs_o2891, 0.002); end
  def test_lever_graphs_p2891; assert_in_epsilon(171.5, worksheet.lever_graphs_p2891, 0.002); end
  def test_lever_graphs_q2891; assert_in_epsilon(161.95012866892134, worksheet.lever_graphs_q2891, 0.002); end
  def test_lever_graphs_r2891; assert_in_epsilon(156.09502281579032, worksheet.lever_graphs_r2891, 0.002); end
  def test_lever_graphs_s2891; assert_in_epsilon(152.0, worksheet.lever_graphs_s2891, 0.002); end
  def test_lever_graphs_b2892; assert_in_epsilon(4.0, worksheet.lever_graphs_b2892, 0.002); end
  def test_lever_graphs_k2892; assert_in_epsilon(191.0, worksheet.lever_graphs_k2892, 0.002); end
  def test_lever_graphs_l2892; assert_in_epsilon(191.0, worksheet.lever_graphs_l2892, 0.002); end
  def test_lever_graphs_m2892; assert_in_epsilon(184.1621977448482, worksheet.lever_graphs_m2892, 0.002); end
  def test_lever_graphs_n2892; assert_in_epsilon(172.41489645141314, worksheet.lever_graphs_n2892, 0.002); end
  def test_lever_graphs_o2892; assert_in_epsilon(145.841723733357, worksheet.lever_graphs_o2892, 0.002); end
  def test_lever_graphs_p2892; assert_in_epsilon(102.50000000000001, worksheet.lever_graphs_p2892, 0.002); end
  def test_lever_graphs_q2892; assert_in_epsilon(59.15827626664304, worksheet.lever_graphs_q2892, 0.002); end
  def test_lever_graphs_r2892; assert_in_epsilon(32.585103548586886, worksheet.lever_graphs_r2892, 0.002); end
  def test_lever_graphs_s2892; assert_in_epsilon(14.0, worksheet.lever_graphs_s2892, 0.002); end
  def test_lever_graphs_b2893; assert_equal("USA today", worksheet.lever_graphs_b2893); end
  def test_lever_graphs_k2893; assert_in_epsilon(350.0, worksheet.lever_graphs_k2893, 0.002); end
  def test_lever_graphs_b2894; assert_equal("UK today", worksheet.lever_graphs_b2894); end
  def test_lever_graphs_k2894; assert_in_epsilon(360.0, worksheet.lever_graphs_k2894, 0.002); end
  def test_lever_graphs_b2895; assert_equal("Brazil today", worksheet.lever_graphs_b2895); end
  def test_lever_graphs_k2895; assert_in_epsilon(344.0, worksheet.lever_graphs_k2895, 0.002); end
  def test_lever_graphs_b2896; assert_equal("China", worksheet.lever_graphs_b2896); end
  def test_lever_graphs_k2896; assert_in_epsilon(367.0, worksheet.lever_graphs_k2896, 0.002); end
  def test_lever_graphs_b2897; assert_equal("Europe", worksheet.lever_graphs_b2897); end
  def test_lever_graphs_k2897; assert_in_epsilon(281.0, worksheet.lever_graphs_k2897, 0.002); end
  def test_lever_graphs_b2898; assert_equal("India today", worksheet.lever_graphs_b2898); end
  def test_lever_graphs_k2898; assert_in_epsilon(14.0, worksheet.lever_graphs_k2898, 0.002); end
  def test_lever_graphs_b2899; assert_equal("Nigeria today", worksheet.lever_graphs_b2899); end
  def test_lever_graphs_k2899; assert_in_epsilon(34.0, worksheet.lever_graphs_k2899, 0.002); end
  def test_lever_graphs_b2900; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2900); end
  def test_lever_graphs_k2900; assert_in_epsilon(162.0, worksheet.lever_graphs_k2900, 0.002); end
  def test_lever_graphs_c2913; assert_equal("1975", worksheet.lever_graphs_c2913); end
  def test_lever_graphs_d2913; assert_equal("1980", worksheet.lever_graphs_d2913); end
  def test_lever_graphs_e2913; assert_equal("1985", worksheet.lever_graphs_e2913); end
  def test_lever_graphs_f2913; assert_equal("1990", worksheet.lever_graphs_f2913); end
  def test_lever_graphs_g2913; assert_equal("1995", worksheet.lever_graphs_g2913); end
  def test_lever_graphs_h2913; assert_equal("2000", worksheet.lever_graphs_h2913); end
  def test_lever_graphs_i2913; assert_equal("2005", worksheet.lever_graphs_i2913); end
  def test_lever_graphs_j2913; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2913, 0.002); end
  def test_lever_graphs_k2913; assert_equal("2011", worksheet.lever_graphs_k2913); end
  def test_lever_graphs_l2913; assert_equal("2015", worksheet.lever_graphs_l2913); end
  def test_lever_graphs_m2913; assert_equal("2020", worksheet.lever_graphs_m2913); end
  def test_lever_graphs_n2913; assert_equal("2025", worksheet.lever_graphs_n2913); end
  def test_lever_graphs_o2913; assert_equal("2030", worksheet.lever_graphs_o2913); end
  def test_lever_graphs_p2913; assert_equal("2035", worksheet.lever_graphs_p2913); end
  def test_lever_graphs_q2913; assert_equal("2040", worksheet.lever_graphs_q2913); end
  def test_lever_graphs_r2913; assert_equal("2045", worksheet.lever_graphs_r2913); end
  def test_lever_graphs_s2913; assert_equal("2050", worksheet.lever_graphs_s2913); end
  def test_lever_graphs_b2914; assert_equal("Historic data", worksheet.lever_graphs_b2914); end
  def test_lever_graphs_c2914; assert_in_delta(0.4, worksheet.lever_graphs_c2914, 0.002); end
  def test_lever_graphs_d2914; assert_in_delta(0.3484, worksheet.lever_graphs_d2914, 0.002); end
  def test_lever_graphs_e2914; assert_in_delta(0.3333, worksheet.lever_graphs_e2914, 0.002); end
  def test_lever_graphs_f2914; assert_in_delta(0.3125, worksheet.lever_graphs_f2914, 0.002); end
  def test_lever_graphs_g2914; assert_in_delta(0.2593, worksheet.lever_graphs_g2914, 0.002); end
  def test_lever_graphs_h2914; assert_in_delta(0.2451, worksheet.lever_graphs_h2914, 0.002); end
  def test_lever_graphs_i2914; assert_in_delta(0.237, worksheet.lever_graphs_i2914, 0.002); end
  def test_lever_graphs_j2914; assert_in_delta(0.2227, worksheet.lever_graphs_j2914, 0.002); end
  def test_lever_graphs_k2914; assert_in_delta(0.2208, worksheet.lever_graphs_k2914, 0.002); end
  def test_lever_graphs_b2915; assert_in_delta(1.0, worksheet.lever_graphs_b2915, 0.002); end
  def test_lever_graphs_k2915; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2915, 0.002); end
  def test_lever_graphs_l2915; assert_in_delta(0.21607692307692308, worksheet.lever_graphs_l2915, 0.002); end
  def test_lever_graphs_m2915; assert_in_delta(0.21649736263736263, worksheet.lever_graphs_m2915, 0.002); end
  def test_lever_graphs_n2915; assert_in_delta(0.2169178021978022, worksheet.lever_graphs_n2915, 0.002); end
  def test_lever_graphs_o2915; assert_in_delta(0.21733824175824173, worksheet.lever_graphs_o2915, 0.002); end
  def test_lever_graphs_p2915; assert_in_delta(0.2177586813186813, worksheet.lever_graphs_p2915, 0.002); end
  def test_lever_graphs_q2915; assert_in_delta(0.21817912087912086, worksheet.lever_graphs_q2915, 0.002); end
  def test_lever_graphs_r2915; assert_in_delta(0.21859956043956044, worksheet.lever_graphs_r2915, 0.002); end
  def test_lever_graphs_s2915; assert_in_delta(0.21902, worksheet.lever_graphs_s2915, 0.002); end
  def test_lever_graphs_b2916; assert_in_epsilon(2.0, worksheet.lever_graphs_b2916, 0.002); end
  def test_lever_graphs_k2916; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2916, 0.002); end
  def test_lever_graphs_l2916; assert_in_delta(0.21607692307692308, worksheet.lever_graphs_l2916, 0.002); end
  def test_lever_graphs_m2916; assert_in_delta(0.20992307692307693, worksheet.lever_graphs_m2916, 0.002); end
  def test_lever_graphs_n2916; assert_in_delta(0.20376923076923079, worksheet.lever_graphs_n2916, 0.002); end
  def test_lever_graphs_o2916; assert_in_delta(0.19761538461538464, worksheet.lever_graphs_o2916, 0.002); end
  def test_lever_graphs_p2916; assert_in_delta(0.19146153846153846, worksheet.lever_graphs_p2916, 0.002); end
  def test_lever_graphs_q2916; assert_in_delta(0.1853076923076923, worksheet.lever_graphs_q2916, 0.002); end
  def test_lever_graphs_r2916; assert_in_delta(0.17915384615384616, worksheet.lever_graphs_r2916, 0.002); end
  def test_lever_graphs_s2916; assert_in_delta(0.17300000000000001, worksheet.lever_graphs_s2916, 0.002); end
  def test_lever_graphs_b2917; assert_in_epsilon(3.0, worksheet.lever_graphs_b2917, 0.002); end
  def test_lever_graphs_k2917; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2917, 0.002); end
  def test_lever_graphs_l2917; assert_in_delta(0.21607692307692308, worksheet.lever_graphs_l2917, 0.002); end
  def test_lever_graphs_m2917; assert_in_delta(0.20192307692307693, worksheet.lever_graphs_m2917, 0.002); end
  def test_lever_graphs_n2917; assert_in_delta(0.18776923076923074, worksheet.lever_graphs_n2917, 0.002); end
  def test_lever_graphs_o2917; assert_in_delta(0.17361538461538462, worksheet.lever_graphs_o2917, 0.002); end
  def test_lever_graphs_p2917; assert_in_delta(0.15946153846153846, worksheet.lever_graphs_p2917, 0.002); end
  def test_lever_graphs_q2917; assert_in_delta(0.1453076923076923, worksheet.lever_graphs_q2917, 0.002); end
  def test_lever_graphs_r2917; assert_in_delta(0.13115384615384615, worksheet.lever_graphs_r2917, 0.002); end
  def test_lever_graphs_s2917; assert_in_delta(0.11699999999999999, worksheet.lever_graphs_s2917, 0.002); end
  def test_lever_graphs_b2918; assert_in_epsilon(4.0, worksheet.lever_graphs_b2918, 0.002); end
  def test_lever_graphs_k2918; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2918, 0.002); end
  def test_lever_graphs_l2918; assert_in_delta(0.21607692307692308, worksheet.lever_graphs_l2918, 0.002); end
  def test_lever_graphs_m2918; assert_in_delta(0.19506593406593406, worksheet.lever_graphs_m2918, 0.002); end
  def test_lever_graphs_n2918; assert_in_delta(0.17405494505494506, worksheet.lever_graphs_n2918, 0.002); end
  def test_lever_graphs_o2918; assert_in_delta(0.15304395604395604, worksheet.lever_graphs_o2918, 0.002); end
  def test_lever_graphs_p2918; assert_in_delta(0.13203296703296702, worksheet.lever_graphs_p2918, 0.002); end
  def test_lever_graphs_q2918; assert_in_delta(0.11102197802197801, worksheet.lever_graphs_q2918, 0.002); end
  def test_lever_graphs_r2918; assert_in_delta(0.090010989010989, worksheet.lever_graphs_r2918, 0.002); end
  def test_lever_graphs_s2918; assert_in_delta(0.069, worksheet.lever_graphs_s2918, 0.002); end
  def test_lever_graphs_b2919; assert_equal("USA today", worksheet.lever_graphs_b2919); end
  def test_lever_graphs_k2919; assert_in_delta(0.24, worksheet.lever_graphs_k2919, 0.002); end
  def test_lever_graphs_b2920; assert_equal("UK today", worksheet.lever_graphs_b2920); end
  def test_lever_graphs_k2920; assert_in_delta(0.19, worksheet.lever_graphs_k2920, 0.002); end
  def test_lever_graphs_b2921; assert_equal("Brazil today", worksheet.lever_graphs_b2921); end
  def test_lever_graphs_k2921; assert_in_delta(0.38, worksheet.lever_graphs_k2921, 0.002); end
  def test_lever_graphs_b2922; assert_equal("China today", worksheet.lever_graphs_b2922); end
  def test_lever_graphs_k2922; assert_in_delta(0.09, worksheet.lever_graphs_k2922, 0.002); end
  def test_lever_graphs_b2923; assert_equal("Europe today", worksheet.lever_graphs_b2923); end
  def test_lever_graphs_k2923; assert_in_delta(0.22, worksheet.lever_graphs_k2923, 0.002); end
  def test_lever_graphs_b2924; assert_equal("India today", worksheet.lever_graphs_b2924); end
  def test_lever_graphs_k2924; assert_in_delta(0.47, worksheet.lever_graphs_k2924, 0.002); end
  def test_lever_graphs_b2925; assert_equal("Nigeria today", worksheet.lever_graphs_b2925); end
  def test_lever_graphs_k2925; assert_in_delta(0.52, worksheet.lever_graphs_k2925, 0.002); end
  def test_lever_graphs_b2926; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2926); end
  def test_lever_graphs_d1499; assert_equal("Title", worksheet.lever_graphs_d1499); end
  def test_lever_graphs_e1499; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1499); end
  def test_lever_graphs_f1499; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1499); end
  def test_lever_graphs_g1499; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1499); end
  def test_lever_graphs_h1499; assert_equal("Urban passenger car", worksheet.lever_graphs_h1499); end
  def test_lever_graphs_i1499; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1499); end
  def test_lever_graphs_j1499; assert_equal("Urban passenger train", worksheet.lever_graphs_j1499); end
  def test_lever_graphs_d1500; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1500, 0.002); end
  def test_lever_graphs_e1500; assert_in_delta(0.014029126814902794, worksheet.lever_graphs_e1500, 0.002); end
  def test_lever_graphs_f1500; assert_in_delta(0.003050510137966473, worksheet.lever_graphs_f1500, 0.002); end
  def test_lever_graphs_g1500; assert_in_delta(0.01163819442092095, worksheet.lever_graphs_g1500, 0.002); end
  def test_lever_graphs_h1500; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_h1500, 0.002); end
  def test_lever_graphs_i1500; assert_in_delta(0.19310320114294077, worksheet.lever_graphs_i1500, 0.002); end
  def test_lever_graphs_j1500; assert_in_delta(0.018280317998154723, worksheet.lever_graphs_j1500, 0.002); end
  def test_lever_graphs_d1501; assert_equal("2050: Level 1", worksheet.lever_graphs_d1501); end
  def test_lever_graphs_e1501; assert_in_delta(0.01079411386416709, worksheet.lever_graphs_e1501, 0.002); end
  def test_lever_graphs_f1501; assert_in_delta(0.003189163273233461, worksheet.lever_graphs_f1501, 0.002); end
  def test_lever_graphs_g1501; assert_in_delta(0.02290550711079704, worksheet.lever_graphs_g1501, 0.002); end
  def test_lever_graphs_h1501; assert_in_delta(0.7784845756581111, worksheet.lever_graphs_h1501, 0.002); end
  def test_lever_graphs_i1501; assert_in_delta(0.1332866427545019, worksheet.lever_graphs_i1501, 0.002); end
  def test_lever_graphs_j1501; assert_in_delta(0.05133999733918937, worksheet.lever_graphs_j1501, 0.002); end
  def test_lever_graphs_d1502; assert_equal("2050: Level 2", worksheet.lever_graphs_d1502); end
  def test_lever_graphs_e1502; assert_in_delta(0.022796417705789093, worksheet.lever_graphs_e1502, 0.002); end
  def test_lever_graphs_f1502; assert_in_delta(0.009512790847152591, worksheet.lever_graphs_f1502, 0.002); end
  def test_lever_graphs_g1502; assert_in_delta(0.033423319192698295, worksheet.lever_graphs_g1502, 0.002); end
  def test_lever_graphs_h1502; assert_in_delta(0.6901915413292197, worksheet.lever_graphs_h1502, 0.002); end
  def test_lever_graphs_i1502; assert_in_delta(0.17482966962334492, worksheet.lever_graphs_i1502, 0.002); end
  def test_lever_graphs_j1502; assert_in_delta(0.06924626130179545, worksheet.lever_graphs_j1502, 0.002); end
  def test_lever_graphs_d1503; assert_equal("2050: Level 3", worksheet.lever_graphs_d1503); end
  def test_lever_graphs_e1503; assert_in_delta(0.02672087112825595, worksheet.lever_graphs_e1503, 0.002); end
  def test_lever_graphs_f1503; assert_in_delta(0.01040707612363653, worksheet.lever_graphs_f1503, 0.002); end
  def test_lever_graphs_g1503; assert_in_delta(0.060831697923719716, worksheet.lever_graphs_g1503, 0.002); end
  def test_lever_graphs_h1503; assert_in_delta(0.5996726025835968, worksheet.lever_graphs_h1503, 0.002); end
  def test_lever_graphs_i1503; assert_in_delta(0.20626637362162492, worksheet.lever_graphs_i1503, 0.002); end
  def test_lever_graphs_j1503; assert_in_delta(0.09610137861916612, worksheet.lever_graphs_j1503, 0.002); end
  def test_lever_graphs_d1504; assert_equal("2050: Level 4", worksheet.lever_graphs_d1504); end
  def test_lever_graphs_e1504; assert_in_delta(0.036189143851419275, worksheet.lever_graphs_e1504, 0.002); end
  def test_lever_graphs_f1504; assert_in_delta(0.027406398413794133, worksheet.lever_graphs_f1504, 0.002); end
  def test_lever_graphs_g1504; assert_in_delta(0.09611793339525283, worksheet.lever_graphs_g1504, 0.002); end
  def test_lever_graphs_h1504; assert_in_delta(0.4498247091005362, worksheet.lever_graphs_h1504, 0.002); end
  def test_lever_graphs_i1504; assert_in_delta(0.27935479464253477, worksheet.lever_graphs_i1504, 0.002); end
  def test_lever_graphs_j1504; assert_in_delta(0.11110702059646282, worksheet.lever_graphs_j1504, 0.002); end
  def test_lever_graphs_d1521; assert_equal("Title", worksheet.lever_graphs_d1521); end
  def test_lever_graphs_e1521; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1521); end
  def test_lever_graphs_f1521; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1521); end
  def test_lever_graphs_g1521; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1521); end
  def test_lever_graphs_h1521; assert_equal("Urban passenger car", worksheet.lever_graphs_h1521); end
  def test_lever_graphs_i1521; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1521); end
  def test_lever_graphs_j1521; assert_equal("Urban passenger train", worksheet.lever_graphs_j1521); end
  def test_lever_graphs_d1522; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1522, 0.002); end
  def test_lever_graphs_e1522; assert_in_delta(0.11247000971418973, worksheet.lever_graphs_e1522, 0.002); end
  def test_lever_graphs_f1522; assert_in_delta(0.08431450603944185, worksheet.lever_graphs_f1522, 0.002); end
  def test_lever_graphs_g1522; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1522, 0.002); end
  def test_lever_graphs_h1522; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_h1522, 0.002); end
  def test_lever_graphs_i1522; assert_in_delta(0.3796610169491526, worksheet.lever_graphs_i1522, 0.002); end
  def test_lever_graphs_j1522; assert_in_delta(0.04505946143761872, worksheet.lever_graphs_j1522, 0.002); end
  def test_lever_graphs_d1523; assert_equal("2050: Level 1", worksheet.lever_graphs_d1523); end
  def test_lever_graphs_e1523; assert_in_delta(0.024221820886008705, worksheet.lever_graphs_e1523, 0.002); end
  def test_lever_graphs_f1523; assert_in_delta(0.0037182619781153717, worksheet.lever_graphs_f1523, 0.002); end
  def test_lever_graphs_g1523; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1523, 0.002); end
  def test_lever_graphs_h1523; assert_in_delta(0.6193562094975034, worksheet.lever_graphs_h1523, 0.002); end
  def test_lever_graphs_i1523; assert_in_delta(0.19866142568787845, worksheet.lever_graphs_i1523, 0.002); end
  def test_lever_graphs_j1523; assert_in_delta(0.005311802825879175, worksheet.lever_graphs_j1523, 0.002); end
  def test_lever_graphs_d1524; assert_equal("2050: Level 2", worksheet.lever_graphs_d1524); end
  def test_lever_graphs_e1524; assert_in_delta(0.03238268378593342, worksheet.lever_graphs_e1524, 0.002); end
  def test_lever_graphs_f1524; assert_in_delta(0.023860924894898307, worksheet.lever_graphs_f1524, 0.002); end
  def test_lever_graphs_g1524; assert_in_delta(0.16191341892966707, worksheet.lever_graphs_g1524, 0.002); end
  def test_lever_graphs_h1524; assert_in_delta(0.4938075218725145, worksheet.lever_graphs_h1524, 0.002); end
  def test_lever_graphs_i1524; assert_in_delta(0.27496875355073286, worksheet.lever_graphs_i1524, 0.002); end
  def test_lever_graphs_j1524; assert_in_delta(0.013066696966253843, worksheet.lever_graphs_j1524, 0.002); end
  def test_lever_graphs_d1525; assert_equal("2050: Level 3", worksheet.lever_graphs_d1525); end
  def test_lever_graphs_e1525; assert_in_delta(0.036979322877091506, worksheet.lever_graphs_e1525, 0.002); end
  def test_lever_graphs_f1525; assert_in_delta(0.02974530482992349, worksheet.lever_graphs_f1525, 0.002); end
  def test_lever_graphs_g1525; assert_in_delta(0.1728510014278969, worksheet.lever_graphs_g1525, 0.002); end
  def test_lever_graphs_h1525; assert_in_delta(0.4081204200380899, worksheet.lever_graphs_h1525, 0.002); end
  def test_lever_graphs_i1525; assert_in_delta(0.3270965131187632, worksheet.lever_graphs_i1525, 0.002); end
  def test_lever_graphs_j1525; assert_in_delta(0.02520743770823508, worksheet.lever_graphs_j1525, 0.002); end
  def test_lever_graphs_d1526; assert_equal("2050: Level 4", worksheet.lever_graphs_d1526); end
  def test_lever_graphs_e1526; assert_in_delta(0.05408328879859205, worksheet.lever_graphs_e1526, 0.002); end
  def test_lever_graphs_f1526; assert_in_delta(0.049718098389071146, worksheet.lever_graphs_f1526, 0.002); end
  def test_lever_graphs_g1526; assert_in_delta(0.22471057762431754, worksheet.lever_graphs_g1526, 0.002); end
  def test_lever_graphs_h1526; assert_in_delta(0.25364652438624186, worksheet.lever_graphs_h1526, 0.002); end
  def test_lever_graphs_i1526; assert_in_delta(0.3841349241581299, worksheet.lever_graphs_i1526, 0.002); end
  def test_lever_graphs_j1526; assert_in_delta(0.03370658664364756, worksheet.lever_graphs_j1526, 0.002); end
  def test_lever_graphs_d1510; assert_equal("Title", worksheet.lever_graphs_d1510); end
  def test_lever_graphs_e1510; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1510); end
  def test_lever_graphs_f1510; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1510); end
  def test_lever_graphs_g1510; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1510); end
  def test_lever_graphs_h1510; assert_equal("Urban passenger car", worksheet.lever_graphs_h1510); end
  def test_lever_graphs_i1510; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1510); end
  def test_lever_graphs_j1510; assert_equal("Urban passenger train", worksheet.lever_graphs_j1510); end
  def test_lever_graphs_d1511; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1511, 0.002); end
  def test_lever_graphs_e1511; assert_in_delta(0.04635097613382408, worksheet.lever_graphs_e1511, 0.002); end
  def test_lever_graphs_f1511; assert_in_delta(0.026083051554046464, worksheet.lever_graphs_f1511, 0.002); end
  def test_lever_graphs_g1511; assert_in_delta(0.061057423607414035, worksheet.lever_graphs_g1511, 0.002); end
  def test_lever_graphs_h1511; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_h1511, 0.002); end
  def test_lever_graphs_i1511; assert_in_delta(0.25597150666185114, worksheet.lever_graphs_i1511, 0.002); end
  def test_lever_graphs_j1511; assert_in_delta(0.08876810047539424, worksheet.lever_graphs_j1511, 0.002); end
  def test_lever_graphs_d1512; assert_equal("2050: Level 1", worksheet.lever_graphs_d1512); end
  def test_lever_graphs_e1512; assert_in_delta(0.026523421094867723, worksheet.lever_graphs_e1512, 0.002); end
  def test_lever_graphs_f1512; assert_in_delta(0.018446740235152366, worksheet.lever_graphs_f1512, 0.002); end
  def test_lever_graphs_g1512; assert_in_delta(0.03888772265788877, worksheet.lever_graphs_g1512, 0.002); end
  def test_lever_graphs_h1512; assert_in_delta(0.7119444609675022, worksheet.lever_graphs_h1512, 0.002); end
  def test_lever_graphs_i1512; assert_in_delta(0.1665064776992505, worksheet.lever_graphs_i1512, 0.002); end
  def test_lever_graphs_j1512; assert_in_delta(0.037691177345338445, worksheet.lever_graphs_j1512, 0.002); end
  def test_lever_graphs_d1513; assert_equal("2050: Level 2", worksheet.lever_graphs_d1513); end
  def test_lever_graphs_e1513; assert_in_delta(0.03434157116153882, worksheet.lever_graphs_e1513, 0.002); end
  def test_lever_graphs_f1513; assert_in_delta(0.023603185132698507, worksheet.lever_graphs_f1513, 0.002); end
  def test_lever_graphs_g1513; assert_in_delta(0.06898295981370371, worksheet.lever_graphs_g1513, 0.002); end
  def test_lever_graphs_h1513; assert_in_delta(0.5886974598187011, worksheet.lever_graphs_h1513, 0.002); end
  def test_lever_graphs_i1513; assert_in_delta(0.24423032237528697, worksheet.lever_graphs_i1513, 0.002); end
  def test_lever_graphs_j1513; assert_in_delta(0.04014450169807082, worksheet.lever_graphs_j1513, 0.002); end
  def test_lever_graphs_d1514; assert_equal("2050: Level 3", worksheet.lever_graphs_d1514); end
  def test_lever_graphs_e1514; assert_in_delta(0.041424283431744015, worksheet.lever_graphs_e1514, 0.002); end
  def test_lever_graphs_f1514; assert_in_delta(0.029719915259893908, worksheet.lever_graphs_f1514, 0.002); end
  def test_lever_graphs_g1514; assert_in_delta(0.11933865586984425, worksheet.lever_graphs_g1514, 0.002); end
  def test_lever_graphs_h1514; assert_in_delta(0.41925679100261354, worksheet.lever_graphs_h1514, 0.002); end
  def test_lever_graphs_i1514; assert_in_delta(0.3251978372453256, worksheet.lever_graphs_i1514, 0.002); end
  def test_lever_graphs_j1514; assert_in_delta(0.06506251719057865, worksheet.lever_graphs_j1514, 0.002); end
  def test_lever_graphs_d1515; assert_equal("2050: Level 4", worksheet.lever_graphs_d1515); end
  def test_lever_graphs_e1515; assert_in_delta(0.04979364078226359, worksheet.lever_graphs_e1515, 0.002); end
  def test_lever_graphs_f1515; assert_in_delta(0.03837022017086388, worksheet.lever_graphs_f1515, 0.002); end
  def test_lever_graphs_g1515; assert_in_delta(0.12314766608892123, worksheet.lever_graphs_g1515, 0.002); end
  def test_lever_graphs_h1515; assert_in_delta(0.3511714667205578, worksheet.lever_graphs_h1515, 0.002); end
  def test_lever_graphs_i1515; assert_in_delta(0.3545543680301203, worksheet.lever_graphs_i1515, 0.002); end
  def test_lever_graphs_j1515; assert_in_delta(0.08296263820727312, worksheet.lever_graphs_j1515, 0.002); end
  def test_lever_graphs_c1540; assert_equal("1975", worksheet.lever_graphs_c1540); end
  def test_lever_graphs_d1540; assert_equal("1980", worksheet.lever_graphs_d1540); end
  def test_lever_graphs_e1540; assert_equal("1985", worksheet.lever_graphs_e1540); end
  def test_lever_graphs_f1540; assert_equal("1990", worksheet.lever_graphs_f1540); end
  def test_lever_graphs_g1540; assert_equal("1995", worksheet.lever_graphs_g1540); end
  def test_lever_graphs_h1540; assert_equal("2000", worksheet.lever_graphs_h1540); end
  def test_lever_graphs_i1540; assert_equal("2005", worksheet.lever_graphs_i1540); end
  def test_lever_graphs_j1540; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1540, 0.002); end
  def test_lever_graphs_k1540; assert_equal("2011", worksheet.lever_graphs_k1540); end
  def test_lever_graphs_l1540; assert_equal("2015", worksheet.lever_graphs_l1540); end
  def test_lever_graphs_m1540; assert_equal("2020", worksheet.lever_graphs_m1540); end
  def test_lever_graphs_n1540; assert_equal("2025", worksheet.lever_graphs_n1540); end
  def test_lever_graphs_o1540; assert_equal("2030", worksheet.lever_graphs_o1540); end
  def test_lever_graphs_p1540; assert_equal("2035", worksheet.lever_graphs_p1540); end
  def test_lever_graphs_q1540; assert_equal("2040", worksheet.lever_graphs_q1540); end
  def test_lever_graphs_r1540; assert_equal("2045", worksheet.lever_graphs_r1540); end
  def test_lever_graphs_s1540; assert_equal("2050", worksheet.lever_graphs_s1540); end
  def test_lever_graphs_b1541; assert_equal("Historic data", worksheet.lever_graphs_b1541); end
  def test_lever_graphs_b1542; assert_in_delta(1.0, worksheet.lever_graphs_b1542, 0.002); end
  def test_lever_graphs_k1542; assert_in_epsilon(1.6, worksheet.lever_graphs_k1542, 0.002); end
  def test_lever_graphs_l1542; assert_in_epsilon(1.6, worksheet.lever_graphs_l1542, 0.002); end
  def test_lever_graphs_m1542; assert_in_epsilon(1.5771428571428572, worksheet.lever_graphs_m1542, 0.002); end
  def test_lever_graphs_n1542; assert_in_epsilon(1.5542857142857143, worksheet.lever_graphs_n1542, 0.002); end
  def test_lever_graphs_o1542; assert_in_epsilon(1.5314285714285714, worksheet.lever_graphs_o1542, 0.002); end
  def test_lever_graphs_p1542; assert_in_epsilon(1.5085714285714287, worksheet.lever_graphs_p1542, 0.002); end
  def test_lever_graphs_q1542; assert_in_epsilon(1.4857142857142858, worksheet.lever_graphs_q1542, 0.002); end
  def test_lever_graphs_r1542; assert_in_epsilon(1.4628571428571426, worksheet.lever_graphs_r1542, 0.002); end
  def test_lever_graphs_s1542; assert_in_epsilon(1.4400000000000002, worksheet.lever_graphs_s1542, 0.002); end
  def test_lever_graphs_b1543; assert_in_epsilon(2.0, worksheet.lever_graphs_b1543, 0.002); end
  def test_lever_graphs_k1543; assert_in_epsilon(1.6, worksheet.lever_graphs_k1543, 0.002); end
  def test_lever_graphs_l1543; assert_in_epsilon(1.6, worksheet.lever_graphs_l1543, 0.002); end
  def test_lever_graphs_m1543; assert_in_epsilon(1.6, worksheet.lever_graphs_m1543, 0.002); end
  def test_lever_graphs_n1543; assert_in_epsilon(1.6, worksheet.lever_graphs_n1543, 0.002); end
  def test_lever_graphs_o1543; assert_in_epsilon(1.6, worksheet.lever_graphs_o1543, 0.002); end
  def test_lever_graphs_p1543; assert_in_epsilon(1.6, worksheet.lever_graphs_p1543, 0.002); end
  def test_lever_graphs_q1543; assert_in_epsilon(1.6, worksheet.lever_graphs_q1543, 0.002); end
  def test_lever_graphs_r1543; assert_in_epsilon(1.6, worksheet.lever_graphs_r1543, 0.002); end
  def test_lever_graphs_s1543; assert_in_epsilon(1.6, worksheet.lever_graphs_s1543, 0.002); end
  def test_lever_graphs_b1544; assert_in_epsilon(3.0, worksheet.lever_graphs_b1544, 0.002); end
  def test_lever_graphs_k1544; assert_in_epsilon(1.6, worksheet.lever_graphs_k1544, 0.002); end
  def test_lever_graphs_l1544; assert_in_epsilon(1.6, worksheet.lever_graphs_l1544, 0.002); end
  def test_lever_graphs_m1544; assert_in_epsilon(1.6228571428571428, worksheet.lever_graphs_m1544, 0.002); end
  def test_lever_graphs_n1544; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_n1544, 0.002); end
  def test_lever_graphs_o1544; assert_in_epsilon(1.6685714285714284, worksheet.lever_graphs_o1544, 0.002); end
  def test_lever_graphs_p1544; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_p1544, 0.002); end
  def test_lever_graphs_q1544; assert_in_epsilon(1.7142857142857146, worksheet.lever_graphs_q1544, 0.002); end
  def test_lever_graphs_r1544; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_r1544, 0.002); end
  def test_lever_graphs_s1544; assert_in_epsilon(1.7600000000000002, worksheet.lever_graphs_s1544, 0.002); end
  def test_lever_graphs_b1545; assert_in_epsilon(4.0, worksheet.lever_graphs_b1545, 0.002); end
  def test_lever_graphs_k1545; assert_in_epsilon(1.6, worksheet.lever_graphs_k1545, 0.002); end
  def test_lever_graphs_l1545; assert_in_epsilon(1.6, worksheet.lever_graphs_l1545, 0.002); end
  def test_lever_graphs_m1545; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_m1545, 0.002); end
  def test_lever_graphs_n1545; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_n1545, 0.002); end
  def test_lever_graphs_o1545; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_o1545, 0.002); end
  def test_lever_graphs_p1545; assert_in_epsilon(1.7828571428571427, worksheet.lever_graphs_p1545, 0.002); end
  def test_lever_graphs_q1545; assert_in_epsilon(1.8285714285714285, worksheet.lever_graphs_q1545, 0.002); end
  def test_lever_graphs_r1545; assert_in_epsilon(1.874285714285714, worksheet.lever_graphs_r1545, 0.002); end
  def test_lever_graphs_s1545; assert_in_epsilon(1.92, worksheet.lever_graphs_s1545, 0.002); end
  def test_lever_graphs_c3193; assert_equal("1975", worksheet.lever_graphs_c3193); end
  def test_lever_graphs_d3193; assert_equal("1980", worksheet.lever_graphs_d3193); end
  def test_lever_graphs_e3193; assert_equal("1985", worksheet.lever_graphs_e3193); end
  def test_lever_graphs_f3193; assert_equal("1990", worksheet.lever_graphs_f3193); end
  def test_lever_graphs_g3193; assert_equal("1995", worksheet.lever_graphs_g3193); end
  def test_lever_graphs_h3193; assert_equal("2000", worksheet.lever_graphs_h3193); end
  def test_lever_graphs_i3193; assert_equal("2005", worksheet.lever_graphs_i3193); end
  def test_lever_graphs_j3193; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3193, 0.002); end
  def test_lever_graphs_k3193; assert_equal("2011", worksheet.lever_graphs_k3193); end
  def test_lever_graphs_l3193; assert_equal("2015", worksheet.lever_graphs_l3193); end
  def test_lever_graphs_m3193; assert_equal("2020", worksheet.lever_graphs_m3193); end
  def test_lever_graphs_n3193; assert_equal("2025", worksheet.lever_graphs_n3193); end
  def test_lever_graphs_o3193; assert_equal("2030", worksheet.lever_graphs_o3193); end
  def test_lever_graphs_p3193; assert_equal("2035", worksheet.lever_graphs_p3193); end
  def test_lever_graphs_q3193; assert_equal("2040", worksheet.lever_graphs_q3193); end
  def test_lever_graphs_r3193; assert_equal("2045", worksheet.lever_graphs_r3193); end
  def test_lever_graphs_s3193; assert_equal("2050", worksheet.lever_graphs_s3193); end
  def test_lever_graphs_b3194; assert_equal("Historic data", worksheet.lever_graphs_b3194); end
  def test_lever_graphs_c3194; assert_in_epsilon(48.366777087544, worksheet.lever_graphs_c3194, 0.002); end
  def test_lever_graphs_d3194; assert_in_epsilon(100.8586055269058, worksheet.lever_graphs_d3194, 0.002); end
  def test_lever_graphs_e3194; assert_in_epsilon(57.79701296868199, worksheet.lever_graphs_e3194, 0.002); end
  def test_lever_graphs_f3194; assert_in_epsilon(40.96227805628421, worksheet.lever_graphs_f3194, 0.002); end
  def test_lever_graphs_g3194; assert_in_epsilon(25.195809116543934, worksheet.lever_graphs_g3194, 0.002); end
  def test_lever_graphs_h3194; assert_in_epsilon(37.34055877514925, worksheet.lever_graphs_h3194, 0.002); end
  def test_lever_graphs_i3194; assert_in_epsilon(62.994224615593296, worksheet.lever_graphs_i3194, 0.002); end
  def test_lever_graphs_k3194; assert_in_epsilon(111.60806135788701, worksheet.lever_graphs_k3194, 0.002); end
  def test_lever_graphs_b3195; assert_in_delta(1.0, worksheet.lever_graphs_b3195, 0.002); end
  def test_lever_graphs_b3196; assert_in_epsilon(2.0, worksheet.lever_graphs_b3196, 0.002); end
  def test_lever_graphs_b3197; assert_in_epsilon(3.0, worksheet.lever_graphs_b3197, 0.002); end
  def test_lever_graphs_b3198; assert_in_epsilon(4.0, worksheet.lever_graphs_b3198, 0.002); end
  def test_lever_graphs_c1215; assert_equal("1975", worksheet.lever_graphs_c1215); end
  def test_lever_graphs_d1215; assert_equal("1980", worksheet.lever_graphs_d1215); end
  def test_lever_graphs_e1215; assert_equal("1985", worksheet.lever_graphs_e1215); end
  def test_lever_graphs_f1215; assert_equal("1990", worksheet.lever_graphs_f1215); end
  def test_lever_graphs_g1215; assert_equal("1995", worksheet.lever_graphs_g1215); end
  def test_lever_graphs_h1215; assert_equal("2000", worksheet.lever_graphs_h1215); end
  def test_lever_graphs_i1215; assert_equal("2005", worksheet.lever_graphs_i1215); end
  def test_lever_graphs_j1215; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1215, 0.002); end
  def test_lever_graphs_k1215; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1215, 0.002); end
  def test_lever_graphs_l1215; assert_equal("2015", worksheet.lever_graphs_l1215); end
  def test_lever_graphs_m1215; assert_equal("2020", worksheet.lever_graphs_m1215); end
  def test_lever_graphs_n1215; assert_equal("2025", worksheet.lever_graphs_n1215); end
  def test_lever_graphs_o1215; assert_equal("2030", worksheet.lever_graphs_o1215); end
  def test_lever_graphs_p1215; assert_equal("2035", worksheet.lever_graphs_p1215); end
  def test_lever_graphs_q1215; assert_equal("2040", worksheet.lever_graphs_q1215); end
  def test_lever_graphs_r1215; assert_equal("2045", worksheet.lever_graphs_r1215); end
  def test_lever_graphs_s1215; assert_equal("2050", worksheet.lever_graphs_s1215); end
  def test_lever_graphs_b1216; assert_equal("Historic data", worksheet.lever_graphs_b1216); end
  def test_lever_graphs_b1217; assert_in_delta(1.0, worksheet.lever_graphs_b1217, 0.002); end
  def test_lever_graphs_k1217; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1217, 0.002); end
  def test_lever_graphs_l1217; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1217, 0.002); end
  def test_lever_graphs_m1217; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m1217, 0.002); end
  def test_lever_graphs_n1217; assert_in_epsilon(12600.851505289062, worksheet.lever_graphs_n1217, 0.002); end
  def test_lever_graphs_o1217; assert_in_epsilon(12721.015350442445, worksheet.lever_graphs_o1217, 0.002); end
  def test_lever_graphs_p1217; assert_in_epsilon(12842.325098289466, worksheet.lever_graphs_p1217, 0.002); end
  def test_lever_graphs_q1217; assert_in_epsilon(12964.791676351475, worksheet.lever_graphs_q1217, 0.002); end
  def test_lever_graphs_r1217; assert_in_epsilon(13088.426116356506, worksheet.lever_graphs_r1217, 0.002); end
  def test_lever_graphs_s1217; assert_in_epsilon(13101.519778890486, worksheet.lever_graphs_s1217, 0.002); end
  def test_lever_graphs_b1218; assert_in_epsilon(2.0, worksheet.lever_graphs_b1218, 0.002); end
  def test_lever_graphs_k1218; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1218, 0.002); end
  def test_lever_graphs_l1218; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1218, 0.002); end
  def test_lever_graphs_m1218; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m1218, 0.002); end
  def test_lever_graphs_n1218; assert_in_epsilon(12420.058594095803, worksheet.lever_graphs_n1218, 0.002); end
  def test_lever_graphs_o1218; assert_in_epsilon(12538.498367556385, worksheet.lever_graphs_o1218, 0.002); end
  def test_lever_graphs_p1218; assert_in_epsilon(12658.067602672169, worksheet.lever_graphs_p1218, 0.002); end
  def test_lever_graphs_q1218; assert_in_epsilon(12778.777070179987, worksheet.lever_graphs_q1218, 0.002); end
  def test_lever_graphs_r1218; assert_in_epsilon(12651.499429280722, worksheet.lever_graphs_r1218, 0.002); end
  def test_lever_graphs_s1218; assert_in_epsilon(12525.489483856847, worksheet.lever_graphs_s1218, 0.002); end
  def test_lever_graphs_b1219; assert_in_epsilon(3.0, worksheet.lever_graphs_b1219, 0.002); end
  def test_lever_graphs_k1219; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1219, 0.002); end
  def test_lever_graphs_l1219; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1219, 0.002); end
  def test_lever_graphs_m1219; assert_in_epsilon(12180.784397392952, worksheet.lever_graphs_m1219, 0.002); end
  def test_lever_graphs_n1219; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_n1219, 0.002); end
  def test_lever_graphs_o1219; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_o1219, 0.002); end
  def test_lever_graphs_p1219; assert_in_epsilon(12150.180527616512, worksheet.lever_graphs_p1219, 0.002); end
  def test_lever_graphs_q1219; assert_in_epsilon(11969.018060318878, worksheet.lever_graphs_q1219, 0.002); end
  def test_lever_graphs_r1219; assert_in_epsilon(11731.54509713868, worksheet.lever_graphs_r1219, 0.002); end
  def test_lever_graphs_s1219; assert_in_epsilon(11441.174728177544, worksheet.lever_graphs_s1219, 0.002); end
  def test_lever_graphs_b1220; assert_in_epsilon(4.0, worksheet.lever_graphs_b1220, 0.002); end
  def test_lever_graphs_k1220; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1220, 0.002); end
  def test_lever_graphs_l1220; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1220, 0.002); end
  def test_lever_graphs_m1220; assert_in_epsilon(12132.274764133377, worksheet.lever_graphs_m1220, 0.002); end
  def test_lever_graphs_n1220; assert_in_epsilon(12193.057582085099, worksheet.lever_graphs_n1220, 0.002); end
  def test_lever_graphs_o1220; assert_in_epsilon(12132.214102880871, worksheet.lever_graphs_o1220, 0.002); end
  def test_lever_graphs_p1220; assert_in_epsilon(11951.319519819708, worksheet.lever_graphs_p1220, 0.002); end
  def test_lever_graphs_q1220; assert_in_epsilon(11714.197706987443, worksheet.lever_graphs_q1220, 0.002); end
  def test_lever_graphs_r1220; assert_in_epsilon(11424.256707562632, worksheet.lever_graphs_r1220, 0.002); end
  def test_lever_graphs_s1220; assert_in_epsilon(11085.617136296338, worksheet.lever_graphs_s1220, 0.002); end
  def test_lever_graphs_c1235; assert_equal("1975", worksheet.lever_graphs_c1235); end
  def test_lever_graphs_d1235; assert_equal("1980", worksheet.lever_graphs_d1235); end
  def test_lever_graphs_e1235; assert_equal("1985", worksheet.lever_graphs_e1235); end
  def test_lever_graphs_f1235; assert_equal("1990", worksheet.lever_graphs_f1235); end
  def test_lever_graphs_g1235; assert_equal("1995", worksheet.lever_graphs_g1235); end
  def test_lever_graphs_h1235; assert_equal("2000", worksheet.lever_graphs_h1235); end
  def test_lever_graphs_i1235; assert_equal("2005", worksheet.lever_graphs_i1235); end
  def test_lever_graphs_j1235; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1235, 0.002); end
  def test_lever_graphs_k1235; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1235, 0.002); end
  def test_lever_graphs_l1235; assert_equal("2015", worksheet.lever_graphs_l1235); end
  def test_lever_graphs_m1235; assert_equal("2020", worksheet.lever_graphs_m1235); end
  def test_lever_graphs_n1235; assert_equal("2025", worksheet.lever_graphs_n1235); end
  def test_lever_graphs_o1235; assert_equal("2030", worksheet.lever_graphs_o1235); end
  def test_lever_graphs_p1235; assert_equal("2035", worksheet.lever_graphs_p1235); end
  def test_lever_graphs_q1235; assert_equal("2040", worksheet.lever_graphs_q1235); end
  def test_lever_graphs_r1235; assert_equal("2045", worksheet.lever_graphs_r1235); end
  def test_lever_graphs_s1235; assert_equal("2050", worksheet.lever_graphs_s1235); end
  def test_lever_graphs_b1236; assert_equal("Historic data", worksheet.lever_graphs_b1236); end
  def test_lever_graphs_b1237; assert_in_delta(1.0, worksheet.lever_graphs_b1237, 0.002); end
  def test_lever_graphs_k1237; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1237, 0.002); end
  def test_lever_graphs_l1237; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1237, 0.002); end
  def test_lever_graphs_m1237; assert_in_epsilon(11767.503863833266, worksheet.lever_graphs_m1237, 0.002); end
  def test_lever_graphs_n1237; assert_in_epsilon(12367.764825479344, worksheet.lever_graphs_n1237, 0.002); end
  def test_lever_graphs_o1237; assert_in_epsilon(12838.56524661241, worksheet.lever_graphs_o1237, 0.002); end
  def test_lever_graphs_p1237; assert_in_epsilon(13162.755107456558, worksheet.lever_graphs_p1237, 0.002); end
  def test_lever_graphs_q1237; assert_in_epsilon(13328.114277746601, worksheet.lever_graphs_q1237, 0.002); end
  def test_lever_graphs_r1237; assert_in_epsilon(13495.550798483095, worksheet.lever_graphs_r1237, 0.002); end
  def test_lever_graphs_s1237; assert_in_epsilon(13665.090766706016, worksheet.lever_graphs_s1237, 0.002); end
  def test_lever_graphs_b1238; assert_in_epsilon(2.0, worksheet.lever_graphs_b1238, 0.002); end
  def test_lever_graphs_k1238; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1238, 0.002); end
  def test_lever_graphs_l1238; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1238, 0.002); end
  def test_lever_graphs_m1238; assert_in_epsilon(11204.57102372179, worksheet.lever_graphs_m1238, 0.002); end
  def test_lever_graphs_n1238; assert_in_epsilon(11776.116752990845, worksheet.lever_graphs_n1238, 0.002); end
  def test_lever_graphs_o1238; assert_in_epsilon(12224.395063975415, worksheet.lever_graphs_o1238, 0.002); end
  def test_lever_graphs_p1238; assert_in_epsilon(12533.07635807405, worksheet.lever_graphs_p1238, 0.002); end
  def test_lever_graphs_q1238; assert_in_epsilon(12690.525090564624, worksheet.lever_graphs_q1238, 0.002); end
  def test_lever_graphs_r1238; assert_in_epsilon(12754.104748237061, worksheet.lever_graphs_r1238, 0.002); end
  def test_lever_graphs_s1238; assert_in_epsilon(12818.002940630551, worksheet.lever_graphs_s1238, 0.002); end
  def test_lever_graphs_b1239; assert_in_epsilon(3.0, worksheet.lever_graphs_b1239, 0.002); end
  def test_lever_graphs_k1239; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1239, 0.002); end
  def test_lever_graphs_l1239; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1239, 0.002); end
  def test_lever_graphs_m1239; assert_in_epsilon(10931.30196914609, worksheet.lever_graphs_m1239, 0.002); end
  def test_lever_graphs_n1239; assert_in_epsilon(11347.420939972917, worksheet.lever_graphs_n1239, 0.002); end
  def test_lever_graphs_o1239; assert_in_epsilon(11691.95322375925, worksheet.lever_graphs_o1239, 0.002); end
  def test_lever_graphs_p1239; assert_in_epsilon(11868.387959471223, worksheet.lever_graphs_p1239, 0.002); end
  def test_lever_graphs_q1239; assert_in_epsilon(11987.547525005202, worksheet.lever_graphs_q1239, 0.002); end
  def test_lever_graphs_r1239; assert_in_epsilon(12047.605258040896, worksheet.lever_graphs_r1239, 0.002); end
  def test_lever_graphs_s1239; assert_in_epsilon(12077.754405262413, worksheet.lever_graphs_s1239, 0.002); end
  def test_lever_graphs_b1240; assert_in_epsilon(4.0, worksheet.lever_graphs_b1240, 0.002); end
  def test_lever_graphs_k1240; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1240, 0.002); end
  def test_lever_graphs_l1240; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1240, 0.002); end
  def test_lever_graphs_m1240; assert_in_epsilon(10796.681667214552, worksheet.lever_graphs_m1240, 0.002); end
  def test_lever_graphs_n1240; assert_in_epsilon(11069.311408937165, worksheet.lever_graphs_n1240, 0.002); end
  def test_lever_graphs_o1240; assert_in_epsilon(11264.385103519684, worksheet.lever_graphs_o1240, 0.002); end
  def test_lever_graphs_p1240; assert_in_epsilon(11405.895703643995, worksheet.lever_graphs_p1240, 0.002); end
  def test_lever_graphs_q1240; assert_in_epsilon(11463.039355235242, worksheet.lever_graphs_q1240, 0.002); end
  def test_lever_graphs_r1240; assert_in_epsilon(11474.506980723352, worksheet.lever_graphs_r1240, 0.002); end
  def test_lever_graphs_s1240; assert_in_epsilon(11485.98607842492, worksheet.lever_graphs_s1240, 0.002); end
  def test_lever_graphs_c3362; assert_equal("1975", worksheet.lever_graphs_c3362); end
  def test_lever_graphs_d3362; assert_equal("1980", worksheet.lever_graphs_d3362); end
  def test_lever_graphs_e3362; assert_equal("1985", worksheet.lever_graphs_e3362); end
  def test_lever_graphs_f3362; assert_equal("1990", worksheet.lever_graphs_f3362); end
  def test_lever_graphs_g3362; assert_equal("1995", worksheet.lever_graphs_g3362); end
  def test_lever_graphs_h3362; assert_equal("2000", worksheet.lever_graphs_h3362); end
  def test_lever_graphs_i3362; assert_equal("2005", worksheet.lever_graphs_i3362); end
  def test_lever_graphs_j3362; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3362, 0.002); end
  def test_lever_graphs_k3362; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3362, 0.002); end
  def test_lever_graphs_l3362; assert_equal("2015", worksheet.lever_graphs_l3362); end
  def test_lever_graphs_m3362; assert_equal("2020", worksheet.lever_graphs_m3362); end
  def test_lever_graphs_n3362; assert_equal("2025", worksheet.lever_graphs_n3362); end
  def test_lever_graphs_o3362; assert_equal("2030", worksheet.lever_graphs_o3362); end
  def test_lever_graphs_p3362; assert_equal("2035", worksheet.lever_graphs_p3362); end
  def test_lever_graphs_q3362; assert_equal("2040", worksheet.lever_graphs_q3362); end
  def test_lever_graphs_r3362; assert_equal("2045", worksheet.lever_graphs_r3362); end
  def test_lever_graphs_s3362; assert_equal("2050", worksheet.lever_graphs_s3362); end
  def test_lever_graphs_b3363; assert_equal("Historic data", worksheet.lever_graphs_b3363); end
  def test_lever_graphs_b3364; assert_in_delta(1.0, worksheet.lever_graphs_b3364, 0.002); end
  def test_lever_graphs_k3364; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3364, 0.002); end
  def test_lever_graphs_l3364; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3364, 0.002); end
  def test_lever_graphs_m3364; assert_in_epsilon(971.971078424184, worksheet.lever_graphs_m3364, 0.002); end
  def test_lever_graphs_n3364; assert_in_epsilon(1120.240111020011, worksheet.lever_graphs_n3364, 0.002); end
  def test_lever_graphs_o3364; assert_in_epsilon(1301.151905754007, worksheet.lever_graphs_o3364, 0.002); end
  def test_lever_graphs_p3364; assert_in_epsilon(1523.6401820699998, worksheet.lever_graphs_p3364, 0.002); end
  def test_lever_graphs_q3364; assert_in_epsilon(1799.2824634043834, worksheet.lever_graphs_q3364, 0.002); end
  def test_lever_graphs_r3364; assert_in_epsilon(2143.099060207938, worksheet.lever_graphs_r3364, 0.002); end
  def test_lever_graphs_s3364; assert_in_epsilon(2574.5945547161623, worksheet.lever_graphs_s3364, 0.002); end
  def test_lever_graphs_b3365; assert_in_epsilon(2.0, worksheet.lever_graphs_b3365, 0.002); end
  def test_lever_graphs_k3365; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3365, 0.002); end
  def test_lever_graphs_l3365; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3365, 0.002); end
  def test_lever_graphs_m3365; assert_in_epsilon(935.6219533756032, worksheet.lever_graphs_m3365, 0.002); end
  def test_lever_graphs_n3365; assert_in_epsilon(1036.0481093795418, worksheet.lever_graphs_n3365, 0.002); end
  def test_lever_graphs_o3365; assert_in_epsilon(1153.7861689802146, worksheet.lever_graphs_o3365, 0.002); end
  def test_lever_graphs_p3365; assert_in_epsilon(1292.6114027205344, worksheet.lever_graphs_p3365, 0.002); end
  def test_lever_graphs_q3365; assert_in_epsilon(1457.174809638739, worksheet.lever_graphs_q3365, 0.002); end
  def test_lever_graphs_r3365; assert_in_epsilon(1653.2082960272533, worksheet.lever_graphs_r3365, 0.002); end
  def test_lever_graphs_s3365; assert_in_epsilon(1887.777917697634, worksheet.lever_graphs_s3365, 0.002); end
  def test_lever_graphs_b3366; assert_in_epsilon(3.0, worksheet.lever_graphs_b3366, 0.002); end
  def test_lever_graphs_k3366; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3366, 0.002); end
  def test_lever_graphs_l3366; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3366, 0.002); end
  def test_lever_graphs_m3366; assert_in_epsilon(889.4511858401264, worksheet.lever_graphs_m3366, 0.002); end
  def test_lever_graphs_n3366; assert_in_epsilon(934.6917775437978, worksheet.lever_graphs_n3366, 0.002); end
  def test_lever_graphs_o3366; assert_in_epsilon(985.9791610424517, worksheet.lever_graphs_o3366, 0.002); end
  def test_lever_graphs_p3366; assert_in_epsilon(1044.2543150901697, worksheet.lever_graphs_p3366, 0.002); end
  def test_lever_graphs_q3366; assert_in_epsilon(1110.6028501805924, worksheet.lever_graphs_q3366, 0.002); end
  def test_lever_graphs_r3366; assert_in_epsilon(1186.2770152178489, worksheet.lever_graphs_r3366, 0.002); end
  def test_lever_graphs_s3366; assert_in_epsilon(1272.721039920418, worksheet.lever_graphs_s3366, 0.002); end
  def test_lever_graphs_b3367; assert_in_epsilon(4.0, worksheet.lever_graphs_b3367, 0.002); end
  def test_lever_graphs_k3367; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3367, 0.002); end
  def test_lever_graphs_l3367; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3367, 0.002); end
  def test_lever_graphs_m3367; assert_in_epsilon(830.2361013331315, worksheet.lever_graphs_m3367, 0.002); end
  def test_lever_graphs_n3367; assert_in_epsilon(814.4986396777115, worksheet.lever_graphs_n3367, 0.002); end
  def test_lever_graphs_o3367; assert_in_epsilon(802.2314807859979, worksheet.lever_graphs_o3367, 0.002); end
  def test_lever_graphs_p3367; assert_in_epsilon(793.450111109077, worksheet.lever_graphs_p3367, 0.002); end
  def test_lever_graphs_q3367; assert_in_epsilon(788.1839442782499, worksheet.lever_graphs_q3367, 0.002); end
  def test_lever_graphs_r3367; assert_in_epsilon(786.4767582649091, worksheet.lever_graphs_r3367, 0.002); end
  def test_lever_graphs_s3367; assert_in_epsilon(788.3871957697046, worksheet.lever_graphs_s3367, 0.002); end
  def test_lever_graphs_b1265; assert_equal("Level", worksheet.lever_graphs_b1265); end
  def test_lever_graphs_c1265; assert_equal("1975", worksheet.lever_graphs_c1265); end
  def test_lever_graphs_d1265; assert_equal("1980", worksheet.lever_graphs_d1265); end
  def test_lever_graphs_e1265; assert_equal("1985", worksheet.lever_graphs_e1265); end
  def test_lever_graphs_f1265; assert_equal("1990", worksheet.lever_graphs_f1265); end
  def test_lever_graphs_g1265; assert_equal("1995", worksheet.lever_graphs_g1265); end
  def test_lever_graphs_h1265; assert_equal("2000", worksheet.lever_graphs_h1265); end
  def test_lever_graphs_i1265; assert_equal("2005", worksheet.lever_graphs_i1265); end
  def test_lever_graphs_j1265; assert_equal("2010", worksheet.lever_graphs_j1265); end
  def test_lever_graphs_k1265; assert_equal("2011", worksheet.lever_graphs_k1265); end
  def test_lever_graphs_l1265; assert_equal("2015", worksheet.lever_graphs_l1265); end
  def test_lever_graphs_m1265; assert_equal("2020", worksheet.lever_graphs_m1265); end
  def test_lever_graphs_n1265; assert_equal("2025", worksheet.lever_graphs_n1265); end
  def test_lever_graphs_o1265; assert_equal("2030", worksheet.lever_graphs_o1265); end
  def test_lever_graphs_p1265; assert_equal("2035", worksheet.lever_graphs_p1265); end
  def test_lever_graphs_q1265; assert_equal("2040", worksheet.lever_graphs_q1265); end
  def test_lever_graphs_r1265; assert_equal("2045", worksheet.lever_graphs_r1265); end
  def test_lever_graphs_s1265; assert_equal("2050", worksheet.lever_graphs_s1265); end
  def test_lever_graphs_b1266; assert_equal("Historic data", worksheet.lever_graphs_b1266); end
  def test_lever_graphs_b1267; assert_in_delta(1.0, worksheet.lever_graphs_b1267, 0.002); end
  def test_lever_graphs_k1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1267, 0.002); end
  def test_lever_graphs_l1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1267, 0.002); end
  def test_lever_graphs_m1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1267, 0.002); end
  def test_lever_graphs_n1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1267, 0.002); end
  def test_lever_graphs_o1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1267, 0.002); end
  def test_lever_graphs_p1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1267, 0.002); end
  def test_lever_graphs_q1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1267, 0.002); end
  def test_lever_graphs_r1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1267, 0.002); end
  def test_lever_graphs_s1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1267, 0.002); end
  def test_lever_graphs_b1268; assert_in_epsilon(2.0, worksheet.lever_graphs_b1268, 0.002); end
  def test_lever_graphs_k1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1268, 0.002); end
  def test_lever_graphs_l1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1268, 0.002); end
  def test_lever_graphs_m1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1268, 0.002); end
  def test_lever_graphs_n1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1268, 0.002); end
  def test_lever_graphs_o1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1268, 0.002); end
  def test_lever_graphs_p1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1268, 0.002); end
  def test_lever_graphs_q1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1268, 0.002); end
  def test_lever_graphs_r1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1268, 0.002); end
  def test_lever_graphs_s1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1268, 0.002); end
  def test_lever_graphs_b1269; assert_in_epsilon(3.0, worksheet.lever_graphs_b1269, 0.002); end
  def test_lever_graphs_k1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1269, 0.002); end
  def test_lever_graphs_l1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1269, 0.002); end
  def test_lever_graphs_m1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1269, 0.002); end
  def test_lever_graphs_n1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1269, 0.002); end
  def test_lever_graphs_o1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1269, 0.002); end
  def test_lever_graphs_p1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1269, 0.002); end
  def test_lever_graphs_q1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1269, 0.002); end
  def test_lever_graphs_r1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1269, 0.002); end
  def test_lever_graphs_s1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1269, 0.002); end
  def test_lever_graphs_b1270; assert_in_epsilon(4.0, worksheet.lever_graphs_b1270, 0.002); end
  def test_lever_graphs_k1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1270, 0.002); end
  def test_lever_graphs_l1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1270, 0.002); end
  def test_lever_graphs_m1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1270, 0.002); end
  def test_lever_graphs_n1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1270, 0.002); end
  def test_lever_graphs_o1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1270, 0.002); end
  def test_lever_graphs_p1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1270, 0.002); end
  def test_lever_graphs_q1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1270, 0.002); end
  def test_lever_graphs_r1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1270, 0.002); end
  def test_lever_graphs_s1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1270, 0.002); end
  def test_lever_graphs_c3352; assert_equal("1975", worksheet.lever_graphs_c3352); end
  def test_lever_graphs_d3352; assert_equal("1980", worksheet.lever_graphs_d3352); end
  def test_lever_graphs_e3352; assert_equal("1985", worksheet.lever_graphs_e3352); end
  def test_lever_graphs_f3352; assert_equal("1990", worksheet.lever_graphs_f3352); end
  def test_lever_graphs_g3352; assert_equal("1995", worksheet.lever_graphs_g3352); end
  def test_lever_graphs_h3352; assert_equal("2000", worksheet.lever_graphs_h3352); end
  def test_lever_graphs_i3352; assert_equal("2005", worksheet.lever_graphs_i3352); end
  def test_lever_graphs_j3352; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3352, 0.002); end
  def test_lever_graphs_k3352; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3352, 0.002); end
  def test_lever_graphs_l3352; assert_equal("2015", worksheet.lever_graphs_l3352); end
  def test_lever_graphs_m3352; assert_equal("2020", worksheet.lever_graphs_m3352); end
  def test_lever_graphs_n3352; assert_equal("2025", worksheet.lever_graphs_n3352); end
  def test_lever_graphs_o3352; assert_equal("2030", worksheet.lever_graphs_o3352); end
  def test_lever_graphs_p3352; assert_equal("2035", worksheet.lever_graphs_p3352); end
  def test_lever_graphs_q3352; assert_equal("2040", worksheet.lever_graphs_q3352); end
  def test_lever_graphs_r3352; assert_equal("2045", worksheet.lever_graphs_r3352); end
  def test_lever_graphs_s3352; assert_equal("2050", worksheet.lever_graphs_s3352); end
  def test_lever_graphs_b3353; assert_equal("Historic data", worksheet.lever_graphs_b3353); end
  def test_lever_graphs_b3354; assert_in_delta(1.0, worksheet.lever_graphs_b3354, 0.002); end
  def test_lever_graphs_k3354; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3354, 0.002); end
  def test_lever_graphs_l3354; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3354, 0.002); end
  def test_lever_graphs_m3354; assert_in_epsilon(6731.433122965088, worksheet.lever_graphs_m3354, 0.002); end
  def test_lever_graphs_n3354; assert_in_epsilon(7318.53503461338, worksheet.lever_graphs_n3354, 0.002); end
  def test_lever_graphs_o3354; assert_in_epsilon(7971.936700748705, worksheet.lever_graphs_o3354, 0.002); end
  def test_lever_graphs_p3354; assert_in_epsilon(8618.835299829303, worksheet.lever_graphs_p3354, 0.002); end
  def test_lever_graphs_q3354; assert_in_epsilon(9330.666145830264, worksheet.lever_graphs_q3354, 0.002); end
  def test_lever_graphs_r3354; assert_in_epsilon(10071.038455242127, worksheet.lever_graphs_r3354, 0.002); end
  def test_lever_graphs_s3354; assert_in_epsilon(10892.240488440504, worksheet.lever_graphs_s3354, 0.002); end
  def test_lever_graphs_b3355; assert_in_epsilon(2.0, worksheet.lever_graphs_b3355, 0.002); end
  def test_lever_graphs_k3355; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3355, 0.002); end
  def test_lever_graphs_l3355; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3355, 0.002); end
  def test_lever_graphs_m3355; assert_in_epsilon(6713.516117779423, worksheet.lever_graphs_m3355, 0.002); end
  def test_lever_graphs_n3355; assert_in_epsilon(7218.278064586157, worksheet.lever_graphs_n3355, 0.002); end
  def test_lever_graphs_o3355; assert_in_epsilon(7774.584638373032, worksheet.lever_graphs_o3355, 0.002); end
  def test_lever_graphs_p3355; assert_in_epsilon(8232.523241430052, worksheet.lever_graphs_p3355, 0.002); end
  def test_lever_graphs_q3355; assert_in_epsilon(8676.29903308971, worksheet.lever_graphs_q3355, 0.002); end
  def test_lever_graphs_r3355; assert_in_epsilon(9159.006798871516, worksheet.lever_graphs_r3355, 0.002); end
  def test_lever_graphs_s3355; assert_in_epsilon(9683.895557580525, worksheet.lever_graphs_s3355, 0.002); end
  def test_lever_graphs_b3356; assert_in_epsilon(3.0, worksheet.lever_graphs_b3356, 0.002); end
  def test_lever_graphs_k3356; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3356, 0.002); end
  def test_lever_graphs_l3356; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3356, 0.002); end
  def test_lever_graphs_m3356; assert_in_epsilon(6574.96033489065, worksheet.lever_graphs_m3356, 0.002); end
  def test_lever_graphs_n3356; assert_in_epsilon(6919.457060888556, worksheet.lever_graphs_n3356, 0.002); end
  def test_lever_graphs_o3356; assert_in_epsilon(7267.6284502438675, worksheet.lever_graphs_o3356, 0.002); end
  def test_lever_graphs_p3356; assert_in_epsilon(7646.597479102077, worksheet.lever_graphs_p3356, 0.002); end
  def test_lever_graphs_q3356; assert_in_epsilon(8050.090439025464, worksheet.lever_graphs_q3356, 0.002); end
  def test_lever_graphs_r3356; assert_in_epsilon(8312.131759349428, worksheet.lever_graphs_r3356, 0.002); end
  def test_lever_graphs_s3356; assert_in_epsilon(8580.693587165293, worksheet.lever_graphs_s3356, 0.002); end
  def test_lever_graphs_b3357; assert_in_epsilon(4.0, worksheet.lever_graphs_b3357, 0.002); end
  def test_lever_graphs_k3357; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3357, 0.002); end
  def test_lever_graphs_l3357; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3357, 0.002); end
  def test_lever_graphs_m3357; assert_in_epsilon(6560.154297368244, worksheet.lever_graphs_m3357, 0.002); end
  def test_lever_graphs_n3357; assert_in_epsilon(6857.283773289915, worksheet.lever_graphs_n3357, 0.002); end
  def test_lever_graphs_o3357; assert_in_epsilon(7170.9276449112795, worksheet.lever_graphs_o3357, 0.002); end
  def test_lever_graphs_p3357; assert_in_epsilon(7518.252575058235, worksheet.lever_graphs_p3357, 0.002); end
  def test_lever_graphs_q3357; assert_in_epsilon(7748.701826664657, worksheet.lever_graphs_q3357, 0.002); end
  def test_lever_graphs_r3357; assert_in_epsilon(7839.1869271478745, worksheet.lever_graphs_r3357, 0.002); end
  def test_lever_graphs_s3357; assert_in_epsilon(7935.8040562447195, worksheet.lever_graphs_s3357, 0.002); end
  def test_lever_graphs_c1225; assert_equal("1975", worksheet.lever_graphs_c1225); end
  def test_lever_graphs_d1225; assert_equal("1980", worksheet.lever_graphs_d1225); end
  def test_lever_graphs_e1225; assert_equal("1985", worksheet.lever_graphs_e1225); end
  def test_lever_graphs_f1225; assert_equal("1990", worksheet.lever_graphs_f1225); end
  def test_lever_graphs_g1225; assert_equal("1995", worksheet.lever_graphs_g1225); end
  def test_lever_graphs_h1225; assert_equal("2000", worksheet.lever_graphs_h1225); end
  def test_lever_graphs_i1225; assert_equal("2005", worksheet.lever_graphs_i1225); end
  def test_lever_graphs_j1225; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1225, 0.002); end
  def test_lever_graphs_k1225; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1225, 0.002); end
  def test_lever_graphs_l1225; assert_equal("2015", worksheet.lever_graphs_l1225); end
  def test_lever_graphs_m1225; assert_equal("2020", worksheet.lever_graphs_m1225); end
  def test_lever_graphs_n1225; assert_equal("2025", worksheet.lever_graphs_n1225); end
  def test_lever_graphs_o1225; assert_equal("2030", worksheet.lever_graphs_o1225); end
  def test_lever_graphs_p1225; assert_equal("2035", worksheet.lever_graphs_p1225); end
  def test_lever_graphs_q1225; assert_equal("2040", worksheet.lever_graphs_q1225); end
  def test_lever_graphs_r1225; assert_equal("2045", worksheet.lever_graphs_r1225); end
  def test_lever_graphs_s1225; assert_equal("2050", worksheet.lever_graphs_s1225); end
  def test_lever_graphs_b1226; assert_equal("Historic data", worksheet.lever_graphs_b1226); end
  def test_lever_graphs_b1227; assert_in_delta(1.0, worksheet.lever_graphs_b1227, 0.002); end
  def test_lever_graphs_k1227; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1227, 0.002); end
  def test_lever_graphs_l1227; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1227, 0.002); end
  def test_lever_graphs_m1227; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_m1227, 0.002); end
  def test_lever_graphs_n1227; assert_in_epsilon(10396.742824235202, worksheet.lever_graphs_n1227, 0.002); end
  def test_lever_graphs_o1227; assert_in_epsilon(10792.512873967888, worksheet.lever_graphs_o1227, 0.002); end
  def test_lever_graphs_p1227; assert_in_epsilon(11203.348597144019, worksheet.lever_graphs_p1227, 0.002); end
  def test_lever_graphs_q1227; assert_in_epsilon(11486.247188453117, worksheet.lever_graphs_q1227, 0.002); end
  def test_lever_graphs_r1227; assert_in_epsilon(11776.28932370095, worksheet.lever_graphs_r1227, 0.002); end
  def test_lever_graphs_s1227; assert_in_epsilon(11894.524211556534, worksheet.lever_graphs_s1227, 0.002); end
  def test_lever_graphs_b1228; assert_in_epsilon(2.0, worksheet.lever_graphs_b1228, 0.002); end
  def test_lever_graphs_k1228; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1228, 0.002); end
  def test_lever_graphs_l1228; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1228, 0.002); end
  def test_lever_graphs_m1228; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_m1228, 0.002); end
  def test_lever_graphs_n1228; assert_in_epsilon(10167.63653197357, worksheet.lever_graphs_n1228, 0.002); end
  def test_lever_graphs_o1228; assert_in_epsilon(10554.685253284908, worksheet.lever_graphs_o1228, 0.002); end
  def test_lever_graphs_p1228; assert_in_epsilon(10821.204282303284, worksheet.lever_graphs_p1228, 0.002); end
  def test_lever_graphs_q1228; assert_in_epsilon(11094.453250786866, worksheet.lever_graphs_q1228, 0.002); end
  def test_lever_graphs_r1228; assert_in_epsilon(11205.842449868938, worksheet.lever_graphs_r1228, 0.002); end
  def test_lever_graphs_s1228; assert_in_epsilon(11217.052775552344, worksheet.lever_graphs_s1228, 0.002); end
  def test_lever_graphs_b1229; assert_in_epsilon(3.0, worksheet.lever_graphs_b1229, 0.002); end
  def test_lever_graphs_k1229; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1229, 0.002); end
  def test_lever_graphs_l1229; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1229, 0.002); end
  def test_lever_graphs_m1229; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_m1229, 0.002); end
  def test_lever_graphs_n1229; assert_in_epsilon(10032.93015155032, worksheet.lever_graphs_n1229, 0.002); end
  def test_lever_graphs_o1229; assert_in_epsilon(10235.200457333296, worksheet.lever_graphs_o1229, 0.002); end
  def test_lever_graphs_p1229; assert_in_epsilon(10441.548662192965, worksheet.lever_graphs_p1229, 0.002); end
  def test_lever_graphs_q1229; assert_in_epsilon(10546.382646920933, worksheet.lever_graphs_q1229, 0.002); end
  def test_lever_graphs_r1229; assert_in_epsilon(10652.26917325068, worksheet.lever_graphs_r1229, 0.002); end
  def test_lever_graphs_s1229; assert_in_epsilon(10662.925704183865, worksheet.lever_graphs_s1229, 0.002); end
  def test_lever_graphs_b1230; assert_in_epsilon(4.0, worksheet.lever_graphs_b1230, 0.002); end
  def test_lever_graphs_k1230; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1230, 0.002); end
  def test_lever_graphs_l1230; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1230, 0.002); end
  def test_lever_graphs_m1230; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_m1230, 0.002); end
  def test_lever_graphs_n1230; assert_in_epsilon(9943.563766289984, worksheet.lever_graphs_n1230, 0.002); end
  def test_lever_graphs_o1230; assert_in_epsilon(10144.032388437145, worksheet.lever_graphs_o1230, 0.002); end
  def test_lever_graphs_p1230; assert_in_epsilon(10245.879285951492, worksheet.lever_graphs_p1230, 0.002); end
  def test_lever_graphs_q1230; assert_in_epsilon(10297.211243684134, worksheet.lever_graphs_q1230, 0.002); end
  def test_lever_graphs_r1230; assert_in_epsilon(10322.980027696185, worksheet.lever_graphs_r1230, 0.002); end
  def test_lever_graphs_s1230; assert_in_epsilon(10333.307137741813, worksheet.lever_graphs_s1230, 0.002); end
  def test_lever_graphs_c3342; assert_equal("1975", worksheet.lever_graphs_c3342); end
  def test_lever_graphs_d3342; assert_equal("1980", worksheet.lever_graphs_d3342); end
  def test_lever_graphs_e3342; assert_equal("1985", worksheet.lever_graphs_e3342); end
  def test_lever_graphs_f3342; assert_equal("1990", worksheet.lever_graphs_f3342); end
  def test_lever_graphs_g3342; assert_equal("1995", worksheet.lever_graphs_g3342); end
  def test_lever_graphs_h3342; assert_equal("2000", worksheet.lever_graphs_h3342); end
  def test_lever_graphs_i3342; assert_equal("2005", worksheet.lever_graphs_i3342); end
  def test_lever_graphs_j3342; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3342, 0.002); end
  def test_lever_graphs_k3342; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3342, 0.002); end
  def test_lever_graphs_l3342; assert_equal("2015", worksheet.lever_graphs_l3342); end
  def test_lever_graphs_m3342; assert_equal("2020", worksheet.lever_graphs_m3342); end
  def test_lever_graphs_n3342; assert_equal("2025", worksheet.lever_graphs_n3342); end
  def test_lever_graphs_o3342; assert_equal("2030", worksheet.lever_graphs_o3342); end
  def test_lever_graphs_p3342; assert_equal("2035", worksheet.lever_graphs_p3342); end
  def test_lever_graphs_q3342; assert_equal("2040", worksheet.lever_graphs_q3342); end
  def test_lever_graphs_r3342; assert_equal("2045", worksheet.lever_graphs_r3342); end
  def test_lever_graphs_s3342; assert_equal("2050", worksheet.lever_graphs_s3342); end
  def test_lever_graphs_b3343; assert_equal("Historic data", worksheet.lever_graphs_b3343); end
  def test_lever_graphs_b3344; assert_in_delta(1.0, worksheet.lever_graphs_b3344, 0.002); end
  def test_lever_graphs_k3344; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3344, 0.002); end
  def test_lever_graphs_l3344; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3344, 0.002); end
  def test_lever_graphs_m3344; assert_in_epsilon(11270.80216501231, worksheet.lever_graphs_m3344, 0.002); end
  def test_lever_graphs_n3344; assert_in_epsilon(11859.577718427718, worksheet.lever_graphs_n3344, 0.002); end
  def test_lever_graphs_o3344; assert_in_epsilon(12294.142033584072, worksheet.lever_graphs_o3344, 0.002); end
  def test_lever_graphs_p3344; assert_in_epsilon(12640.149743377651, worksheet.lever_graphs_p3344, 0.002); end
  def test_lever_graphs_q3344; assert_in_epsilon(12850.008246738349, worksheet.lever_graphs_q3344, 0.002); end
  def test_lever_graphs_r3344; assert_in_epsilon(13060.574958158688, worksheet.lever_graphs_r3344, 0.002); end
  def test_lever_graphs_s3344; assert_in_epsilon(13221.141651050195, worksheet.lever_graphs_s3344, 0.002); end
  def test_lever_graphs_b3345; assert_in_epsilon(2.0, worksheet.lever_graphs_b3345, 0.002); end
  def test_lever_graphs_k3345; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3345, 0.002); end
  def test_lever_graphs_l3345; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3345, 0.002); end
  def test_lever_graphs_m3345; assert_in_epsilon(10926.981107405105, worksheet.lever_graphs_m3345, 0.002); end
  def test_lever_graphs_n3345; assert_in_epsilon(11410.151366521372, worksheet.lever_graphs_n3345, 0.002); end
  def test_lever_graphs_o3345; assert_in_epsilon(11823.886837584474, worksheet.lever_graphs_o3345, 0.002); end
  def test_lever_graphs_p3345; assert_in_epsilon(12119.451210792073, worksheet.lever_graphs_p3345, 0.002); end
  def test_lever_graphs_q3345; assert_in_epsilon(12318.711728749626, worksheet.lever_graphs_q3345, 0.002); end
  def test_lever_graphs_r3345; assert_in_epsilon(12390.044683990156, worksheet.lever_graphs_r3345, 0.002); end
  def test_lever_graphs_s3345; assert_in_epsilon(12439.171063997617, worksheet.lever_graphs_s3345, 0.002); end
  def test_lever_graphs_b3346; assert_in_epsilon(3.0, worksheet.lever_graphs_b3346, 0.002); end
  def test_lever_graphs_k3346; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3346, 0.002); end
  def test_lever_graphs_l3346; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3346, 0.002); end
  def test_lever_graphs_m3346; assert_in_epsilon(10719.871074648809, worksheet.lever_graphs_m3346, 0.002); end
  def test_lever_graphs_n3346; assert_in_epsilon(11091.185642930926, worksheet.lever_graphs_n3346, 0.002); end
  def test_lever_graphs_o3346; assert_in_epsilon(11375.240457091271, worksheet.lever_graphs_o3346, 0.002); end
  def test_lever_graphs_p3346; assert_in_epsilon(11542.475198639346, worksheet.lever_graphs_p3346, 0.002); end
  def test_lever_graphs_q3346; assert_in_epsilon(11641.467534890806, worksheet.lever_graphs_q3346, 0.002); end
  def test_lever_graphs_r3346; assert_in_epsilon(11696.086861235844, worksheet.lever_graphs_r3346, 0.002); end
  def test_lever_graphs_s3346; assert_in_epsilon(11703.622554001171, worksheet.lever_graphs_s3346, 0.002); end
  def test_lever_graphs_b3347; assert_in_epsilon(4.0, worksheet.lever_graphs_b3347, 0.002); end
  def test_lever_graphs_k3347; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3347, 0.002); end
  def test_lever_graphs_l3347; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3347, 0.002); end
  def test_lever_graphs_m3347; assert_in_epsilon(10632.404786360165, worksheet.lever_graphs_m3347, 0.002); end
  def test_lever_graphs_n3347; assert_in_epsilon(10885.49129962708, worksheet.lever_graphs_n3347, 0.002); end
  def test_lever_graphs_o3347; assert_in_epsilon(11065.799923657953, worksheet.lever_graphs_o3347, 0.002); end
  def test_lever_graphs_p3347; assert_in_epsilon(11174.487593194952, worksheet.lever_graphs_p3347, 0.002); end
  def test_lever_graphs_q3347; assert_in_epsilon(11211.13327444421, worksheet.lever_graphs_q3347, 0.002); end
  def test_lever_graphs_r3347; assert_in_epsilon(11206.465380713618, worksheet.lever_graphs_r3347, 0.002); end
  def test_lever_graphs_s3347; assert_in_epsilon(11193.482148736977, worksheet.lever_graphs_s3347, 0.002); end
  def test_lever_graphs_c2032; assert_equal("1975", worksheet.lever_graphs_c2032); end
  def test_lever_graphs_d2032; assert_equal("1980", worksheet.lever_graphs_d2032); end
  def test_lever_graphs_e2032; assert_equal("1985", worksheet.lever_graphs_e2032); end
  def test_lever_graphs_f2032; assert_equal("1990", worksheet.lever_graphs_f2032); end
  def test_lever_graphs_g2032; assert_equal("1995", worksheet.lever_graphs_g2032); end
  def test_lever_graphs_h2032; assert_equal("2000", worksheet.lever_graphs_h2032); end
  def test_lever_graphs_i2032; assert_equal("2005", worksheet.lever_graphs_i2032); end
  def test_lever_graphs_j2032; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2032, 0.002); end
  def test_lever_graphs_k2032; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2032, 0.002); end
  def test_lever_graphs_l2032; assert_equal("2015", worksheet.lever_graphs_l2032); end
  def test_lever_graphs_m2032; assert_equal("2020", worksheet.lever_graphs_m2032); end
  def test_lever_graphs_n2032; assert_equal("2025", worksheet.lever_graphs_n2032); end
  def test_lever_graphs_o2032; assert_equal("2030", worksheet.lever_graphs_o2032); end
  def test_lever_graphs_p2032; assert_equal("2035", worksheet.lever_graphs_p2032); end
  def test_lever_graphs_q2032; assert_equal("2040", worksheet.lever_graphs_q2032); end
  def test_lever_graphs_r2032; assert_equal("2045", worksheet.lever_graphs_r2032); end
  def test_lever_graphs_s2032; assert_equal("2050", worksheet.lever_graphs_s2032); end
  def test_lever_graphs_b2033; assert_equal("Historic data", worksheet.lever_graphs_b2033); end
  def test_lever_graphs_b2034; assert_in_delta(1.0, worksheet.lever_graphs_b2034, 0.002); end
  def test_lever_graphs_k2034; assert_in_epsilon(1.42, worksheet.lever_graphs_k2034, 0.002); end
  def test_lever_graphs_l2034; assert_in_epsilon(1.4343589743589742, worksheet.lever_graphs_l2034, 0.002); end
  def test_lever_graphs_m2034; assert_in_epsilon(1.4523076923076925, worksheet.lever_graphs_m2034, 0.002); end
  def test_lever_graphs_n2034; assert_in_epsilon(1.4702564102564102, worksheet.lever_graphs_n2034, 0.002); end
  def test_lever_graphs_o2034; assert_in_epsilon(1.488205128205128, worksheet.lever_graphs_o2034, 0.002); end
  def test_lever_graphs_p2034; assert_in_epsilon(1.5061538461538464, worksheet.lever_graphs_p2034, 0.002); end
  def test_lever_graphs_q2034; assert_in_epsilon(1.5241025641025643, worksheet.lever_graphs_q2034, 0.002); end
  def test_lever_graphs_r2034; assert_in_epsilon(1.5420512820512822, worksheet.lever_graphs_r2034, 0.002); end
  def test_lever_graphs_s2034; assert_in_epsilon(1.56, worksheet.lever_graphs_s2034, 0.002); end
  def test_lever_graphs_b2035; assert_in_epsilon(2.0, worksheet.lever_graphs_b2035, 0.002); end
  def test_lever_graphs_k2035; assert_in_epsilon(1.42, worksheet.lever_graphs_k2035, 0.002); end
  def test_lever_graphs_l2035; assert_in_epsilon(1.42, worksheet.lever_graphs_l2035, 0.002); end
  def test_lever_graphs_m2035; assert_in_epsilon(1.4200000000000002, worksheet.lever_graphs_m2035, 0.002); end
  def test_lever_graphs_n2035; assert_in_epsilon(1.42, worksheet.lever_graphs_n2035, 0.002); end
  def test_lever_graphs_o2035; assert_in_epsilon(1.42, worksheet.lever_graphs_o2035, 0.002); end
  def test_lever_graphs_p2035; assert_in_epsilon(1.42, worksheet.lever_graphs_p2035, 0.002); end
  def test_lever_graphs_q2035; assert_in_epsilon(1.42, worksheet.lever_graphs_q2035, 0.002); end
  def test_lever_graphs_r2035; assert_in_epsilon(1.42, worksheet.lever_graphs_r2035, 0.002); end
  def test_lever_graphs_s2035; assert_in_epsilon(1.42, worksheet.lever_graphs_s2035, 0.002); end
  def test_lever_graphs_b2036; assert_in_epsilon(3.0, worksheet.lever_graphs_b2036, 0.002); end
  def test_lever_graphs_k2036; assert_in_epsilon(1.42, worksheet.lever_graphs_k2036, 0.002); end
  def test_lever_graphs_l2036; assert_in_epsilon(1.4046153846153846, worksheet.lever_graphs_l2036, 0.002); end
  def test_lever_graphs_m2036; assert_in_epsilon(1.3853846153846154, worksheet.lever_graphs_m2036, 0.002); end
  def test_lever_graphs_n2036; assert_in_epsilon(1.3661538461538463, worksheet.lever_graphs_n2036, 0.002); end
  def test_lever_graphs_o2036; assert_in_epsilon(1.3469230769230767, worksheet.lever_graphs_o2036, 0.002); end
  def test_lever_graphs_p2036; assert_in_epsilon(1.327692307692308, worksheet.lever_graphs_p2036, 0.002); end
  def test_lever_graphs_q2036; assert_in_epsilon(1.3084615384615383, worksheet.lever_graphs_q2036, 0.002); end
  def test_lever_graphs_r2036; assert_in_epsilon(1.2892307692307692, worksheet.lever_graphs_r2036, 0.002); end
  def test_lever_graphs_s2036; assert_in_epsilon(1.27, worksheet.lever_graphs_s2036, 0.002); end
  def test_lever_graphs_b2037; assert_in_epsilon(4.0, worksheet.lever_graphs_b2037, 0.002); end
  def test_lever_graphs_k2037; assert_in_epsilon(1.42, worksheet.lever_graphs_k2037, 0.002); end
  def test_lever_graphs_l2037; assert_in_epsilon(1.3915897435897435, worksheet.lever_graphs_l2037, 0.002); end
  def test_lever_graphs_m2037; assert_in_epsilon(1.3560769230769232, worksheet.lever_graphs_m2037, 0.002); end
  def test_lever_graphs_n2037; assert_in_epsilon(1.3205641025641026, worksheet.lever_graphs_n2037, 0.002); end
  def test_lever_graphs_o2037; assert_in_epsilon(1.285051282051282, worksheet.lever_graphs_o2037, 0.002); end
  def test_lever_graphs_p2037; assert_in_epsilon(1.2495384615384615, worksheet.lever_graphs_p2037, 0.002); end
  def test_lever_graphs_q2037; assert_in_epsilon(1.214025641025641, worksheet.lever_graphs_q2037, 0.002); end
  def test_lever_graphs_r2037; assert_in_epsilon(1.1785128205128206, worksheet.lever_graphs_r2037, 0.002); end
  def test_lever_graphs_s2037; assert_in_epsilon(1.143, worksheet.lever_graphs_s2037, 0.002); end
  def test_lever_graphs_b2038; assert_equal("Comparator A", worksheet.lever_graphs_b2038); end
  def test_lever_graphs_b2039; assert_equal("Comparator B", worksheet.lever_graphs_b2039); end
  def test_lever_graphs_b2040; assert_equal("Comparator C", worksheet.lever_graphs_b2040); end
  def test_lever_graphs_c2951; assert_equal("1975", worksheet.lever_graphs_c2951); end
  def test_lever_graphs_d2951; assert_equal("1980", worksheet.lever_graphs_d2951); end
  def test_lever_graphs_e2951; assert_equal("1985", worksheet.lever_graphs_e2951); end
  def test_lever_graphs_f2951; assert_equal("1990", worksheet.lever_graphs_f2951); end
  def test_lever_graphs_g2951; assert_equal("1995", worksheet.lever_graphs_g2951); end
  def test_lever_graphs_h2951; assert_equal("2000", worksheet.lever_graphs_h2951); end
  def test_lever_graphs_i2951; assert_equal("2005", worksheet.lever_graphs_i2951); end
  def test_lever_graphs_j2951; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2951, 0.002); end
  def test_lever_graphs_k2951; assert_equal("2011", worksheet.lever_graphs_k2951); end
  def test_lever_graphs_l2951; assert_equal("2015", worksheet.lever_graphs_l2951); end
  def test_lever_graphs_m2951; assert_equal("2020", worksheet.lever_graphs_m2951); end
  def test_lever_graphs_n2951; assert_equal("2025", worksheet.lever_graphs_n2951); end
  def test_lever_graphs_o2951; assert_equal("2030", worksheet.lever_graphs_o2951); end
  def test_lever_graphs_p2951; assert_equal("2035", worksheet.lever_graphs_p2951); end
  def test_lever_graphs_q2951; assert_equal("2040", worksheet.lever_graphs_q2951); end
  def test_lever_graphs_r2951; assert_equal("2045", worksheet.lever_graphs_r2951); end
  def test_lever_graphs_s2951; assert_equal("2050", worksheet.lever_graphs_s2951); end
  def test_lever_graphs_b2952; assert_equal("Historic data", worksheet.lever_graphs_b2952); end
  def test_lever_graphs_b2953; assert_in_delta(1.0, worksheet.lever_graphs_b2953, 0.002); end
  def test_lever_graphs_k2953; assert_in_delta(0.0, (worksheet.lever_graphs_k2953||0), 0.002); end
  def test_lever_graphs_l2953; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2953, 0.002); end
  def test_lever_graphs_m2953; assert_in_delta(0.016990505052285432, worksheet.lever_graphs_m2953, 0.002); end
  def test_lever_graphs_n2953; assert_in_delta(-0.0025079124564288055, worksheet.lever_graphs_n2953, 0.002); end
  def test_lever_graphs_o2953; assert_in_delta(-0.022006329965143047, worksheet.lever_graphs_o2953, 0.002); end
  def test_lever_graphs_p2953; assert_in_delta(-0.04150474747385728, worksheet.lever_graphs_p2953, 0.002); end
  def test_lever_graphs_q2953; assert_in_delta(-0.06100316498257152, worksheet.lever_graphs_q2953, 0.002); end
  def test_lever_graphs_r2953; assert_in_delta(-0.08050158249128576, worksheet.lever_graphs_r2953, 0.002); end
  def test_lever_graphs_s2953; assert_in_delta(-0.1, worksheet.lever_graphs_s2953, 0.002); end
  def test_lever_graphs_b2954; assert_in_epsilon(2.0, worksheet.lever_graphs_b2954, 0.002); end
  def test_lever_graphs_k2954; assert_in_delta(0.0, (worksheet.lever_graphs_k2954||0), 0.002); end
  def test_lever_graphs_l2954; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2954, 0.002); end
  def test_lever_graphs_m2954; assert_in_delta(0.07413336219514258, worksheet.lever_graphs_m2954, 0.002); end
  def test_lever_graphs_n2954; assert_in_delta(0.11177780182928547, worksheet.lever_graphs_n2954, 0.002); end
  def test_lever_graphs_o2954; assert_in_delta(0.14942224146342836, worksheet.lever_graphs_o2954, 0.002); end
  def test_lever_graphs_p2954; assert_in_delta(0.18706668109757127, worksheet.lever_graphs_p2954, 0.002); end
  def test_lever_graphs_q2954; assert_in_delta(0.22471112073171418, worksheet.lever_graphs_q2954, 0.002); end
  def test_lever_graphs_r2954; assert_in_delta(0.26235556036585705, worksheet.lever_graphs_r2954, 0.002); end
  def test_lever_graphs_s2954; assert_in_delta(0.3, worksheet.lever_graphs_s2954, 0.002); end
  def test_lever_graphs_b2955; assert_in_epsilon(3.0, worksheet.lever_graphs_b2955, 0.002); end
  def test_lever_graphs_k2955; assert_in_delta(0.0, (worksheet.lever_graphs_k2955||0), 0.002); end
  def test_lever_graphs_l2955; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2955, 0.002); end
  def test_lever_graphs_m2955; assert_in_delta(0.11699050505228542, worksheet.lever_graphs_m2955, 0.002); end
  def test_lever_graphs_n2955; assert_in_delta(0.19749208754357117, worksheet.lever_graphs_n2955, 0.002); end
  def test_lever_graphs_o2955; assert_in_delta(0.2779936700348569, worksheet.lever_graphs_o2955, 0.002); end
  def test_lever_graphs_p2955; assert_in_delta(0.35849525252614267, worksheet.lever_graphs_p2955, 0.002); end
  def test_lever_graphs_q2955; assert_in_delta(0.4389968350174285, worksheet.lever_graphs_q2955, 0.002); end
  def test_lever_graphs_r2955; assert_in_delta(0.5194984175087142, worksheet.lever_graphs_r2955, 0.002); end
  def test_lever_graphs_s2955; assert_in_delta(0.6, worksheet.lever_graphs_s2955, 0.002); end
  def test_lever_graphs_b2956; assert_in_epsilon(4.0, worksheet.lever_graphs_b2956, 0.002); end
  def test_lever_graphs_k2956; assert_in_delta(0.0, (worksheet.lever_graphs_k2956||0), 0.002); end
  def test_lever_graphs_l2956; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2956, 0.002); end
  def test_lever_graphs_m2956; assert_in_delta(0.17413336219514255, worksheet.lever_graphs_m2956, 0.002); end
  def test_lever_graphs_n2956; assert_in_delta(0.31177780182928544, worksheet.lever_graphs_n2956, 0.002); end
  def test_lever_graphs_o2956; assert_in_delta(0.44942224146342835, worksheet.lever_graphs_o2956, 0.002); end
  def test_lever_graphs_p2956; assert_in_delta(0.5870666810975712, worksheet.lever_graphs_p2956, 0.002); end
  def test_lever_graphs_q2956; assert_in_delta(0.7247111207317142, worksheet.lever_graphs_q2956, 0.002); end
  def test_lever_graphs_r2956; assert_in_delta(0.862355560365857, worksheet.lever_graphs_r2956, 0.002); end
  def test_lever_graphs_s2956; assert_in_delta(1.0, worksheet.lever_graphs_s2956, 0.002); end
  def test_lever_graphs_c3143; assert_equal("1975", worksheet.lever_graphs_c3143); end
  def test_lever_graphs_d3143; assert_equal("1980", worksheet.lever_graphs_d3143); end
  def test_lever_graphs_e3143; assert_equal("1985", worksheet.lever_graphs_e3143); end
  def test_lever_graphs_f3143; assert_equal("1990", worksheet.lever_graphs_f3143); end
  def test_lever_graphs_g3143; assert_equal("1995", worksheet.lever_graphs_g3143); end
  def test_lever_graphs_h3143; assert_equal("2000", worksheet.lever_graphs_h3143); end
  def test_lever_graphs_i3143; assert_equal("2005", worksheet.lever_graphs_i3143); end
  def test_lever_graphs_j3143; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3143, 0.002); end
  def test_lever_graphs_k3143; assert_equal("2011", worksheet.lever_graphs_k3143); end
  def test_lever_graphs_l3143; assert_equal("2015", worksheet.lever_graphs_l3143); end
  def test_lever_graphs_m3143; assert_equal("2020", worksheet.lever_graphs_m3143); end
  def test_lever_graphs_n3143; assert_equal("2025", worksheet.lever_graphs_n3143); end
  def test_lever_graphs_o3143; assert_equal("2030", worksheet.lever_graphs_o3143); end
  def test_lever_graphs_p3143; assert_equal("2035", worksheet.lever_graphs_p3143); end
  def test_lever_graphs_q3143; assert_equal("2040", worksheet.lever_graphs_q3143); end
  def test_lever_graphs_r3143; assert_equal("2045", worksheet.lever_graphs_r3143); end
  def test_lever_graphs_s3143; assert_equal("2050", worksheet.lever_graphs_s3143); end
  def test_lever_graphs_b3144; assert_equal("Historic data", worksheet.lever_graphs_b3144); end
  def test_lever_graphs_b3145; assert_in_delta(1.0, worksheet.lever_graphs_b3145, 0.002); end
  def test_lever_graphs_k3145; assert_in_delta(0.1, worksheet.lever_graphs_k3145, 0.002); end
  def test_lever_graphs_l3145; assert_in_delta(0.1, worksheet.lever_graphs_l3145, 0.002); end
  def test_lever_graphs_m3145; assert_in_delta(0.1, worksheet.lever_graphs_m3145, 0.002); end
  def test_lever_graphs_n3145; assert_in_delta(0.1, worksheet.lever_graphs_n3145, 0.002); end
  def test_lever_graphs_o3145; assert_in_delta(0.1, worksheet.lever_graphs_o3145, 0.002); end
  def test_lever_graphs_p3145; assert_in_delta(0.1, worksheet.lever_graphs_p3145, 0.002); end
  def test_lever_graphs_q3145; assert_in_delta(0.1, worksheet.lever_graphs_q3145, 0.002); end
  def test_lever_graphs_r3145; assert_in_delta(0.1, worksheet.lever_graphs_r3145, 0.002); end
  def test_lever_graphs_s3145; assert_in_delta(0.1, worksheet.lever_graphs_s3145, 0.002); end
  def test_lever_graphs_b3146; assert_in_epsilon(2.0, worksheet.lever_graphs_b3146, 0.002); end
  def test_lever_graphs_k3146; assert_in_delta(0.1, worksheet.lever_graphs_k3146, 0.002); end
  def test_lever_graphs_l3146; assert_in_delta(0.1, worksheet.lever_graphs_l3146, 0.002); end
  def test_lever_graphs_m3146; assert_in_delta(0.1142857142857143, worksheet.lever_graphs_m3146, 0.002); end
  def test_lever_graphs_n3146; assert_in_delta(0.1285714285714286, worksheet.lever_graphs_n3146, 0.002); end
  def test_lever_graphs_o3146; assert_in_delta(0.14285714285714285, worksheet.lever_graphs_o3146, 0.002); end
  def test_lever_graphs_p3146; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_p3146, 0.002); end
  def test_lever_graphs_q3146; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_q3146, 0.002); end
  def test_lever_graphs_r3146; assert_in_delta(0.18571428571428572, worksheet.lever_graphs_r3146, 0.002); end
  def test_lever_graphs_s3146; assert_in_delta(0.2, worksheet.lever_graphs_s3146, 0.002); end
  def test_lever_graphs_b3147; assert_in_epsilon(3.0, worksheet.lever_graphs_b3147, 0.002); end
  def test_lever_graphs_k3147; assert_in_delta(0.1, worksheet.lever_graphs_k3147, 0.002); end
  def test_lever_graphs_l3147; assert_in_delta(0.1, worksheet.lever_graphs_l3147, 0.002); end
  def test_lever_graphs_m3147; assert_in_delta(0.12857142857142856, worksheet.lever_graphs_m3147, 0.002); end
  def test_lever_graphs_n3147; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_n3147, 0.002); end
  def test_lever_graphs_o3147; assert_in_delta(0.18571428571428572, worksheet.lever_graphs_o3147, 0.002); end
  def test_lever_graphs_p3147; assert_in_delta(0.21428571428571427, worksheet.lever_graphs_p3147, 0.002); end
  def test_lever_graphs_q3147; assert_in_delta(0.24285714285714285, worksheet.lever_graphs_q3147, 0.002); end
  def test_lever_graphs_r3147; assert_in_delta(0.2714285714285714, worksheet.lever_graphs_r3147, 0.002); end
  def test_lever_graphs_s3147; assert_in_delta(0.3, worksheet.lever_graphs_s3147, 0.002); end
  def test_lever_graphs_b3148; assert_in_epsilon(4.0, worksheet.lever_graphs_b3148, 0.002); end
  def test_lever_graphs_k3148; assert_in_delta(0.1, worksheet.lever_graphs_k3148, 0.002); end
  def test_lever_graphs_l3148; assert_in_delta(0.1, worksheet.lever_graphs_l3148, 0.002); end
  def test_lever_graphs_m3148; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_m3148, 0.002); end
  def test_lever_graphs_n3148; assert_in_delta(0.2142857142857143, worksheet.lever_graphs_n3148, 0.002); end
  def test_lever_graphs_o3148; assert_in_delta(0.27142857142857146, worksheet.lever_graphs_o3148, 0.002); end
  def test_lever_graphs_p3148; assert_in_delta(0.32857142857142857, worksheet.lever_graphs_p3148, 0.002); end
  def test_lever_graphs_q3148; assert_in_delta(0.3857142857142858, worksheet.lever_graphs_q3148, 0.002); end
  def test_lever_graphs_r3148; assert_in_delta(0.44285714285714284, worksheet.lever_graphs_r3148, 0.002); end
  def test_lever_graphs_s3148; assert_in_delta(0.5, worksheet.lever_graphs_s3148, 0.002); end
  def test_lever_graphs_d3175; assert_equal("Title", worksheet.lever_graphs_d3175); end
  def test_lever_graphs_e3175; assert_equal("Food crops", worksheet.lever_graphs_e3175); end
  def test_lever_graphs_f3175; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3175); end
  def test_lever_graphs_g3175; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3175); end
  def test_lever_graphs_h3175; assert_equal("Pigs", worksheet.lever_graphs_h3175); end
  def test_lever_graphs_i3175; assert_equal("Sheep and goats", worksheet.lever_graphs_i3175); end
  def test_lever_graphs_j3175; assert_equal("Other animals", worksheet.lever_graphs_j3175); end
  def test_lever_graphs_k3175; assert_equal("Eggs", worksheet.lever_graphs_k3175); end
  def test_lever_graphs_l3175; assert_equal("Milk products", worksheet.lever_graphs_l3175); end
  def test_lever_graphs_d3176; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3176, 0.002); end
  def test_lever_graphs_e3176; assert_in_delta(0.01, worksheet.lever_graphs_e3176, 0.002); end
  def test_lever_graphs_f3176; assert_in_delta(0.01, worksheet.lever_graphs_f3176, 0.002); end
  def test_lever_graphs_g3176; assert_in_delta(0.01, worksheet.lever_graphs_g3176, 0.002); end
  def test_lever_graphs_h3176; assert_in_delta(0.01, worksheet.lever_graphs_h3176, 0.002); end
  def test_lever_graphs_i3176; assert_in_delta(0.01, worksheet.lever_graphs_i3176, 0.002); end
  def test_lever_graphs_j3176; assert_in_delta(0.01, worksheet.lever_graphs_j3176, 0.002); end
  def test_lever_graphs_k3176; assert_in_delta(0.002, worksheet.lever_graphs_k3176, 0.002); end
  def test_lever_graphs_l3176; assert_in_delta(0.001, worksheet.lever_graphs_l3176, 0.002); end
  def test_lever_graphs_d3177; assert_equal("2050: Level 1", worksheet.lever_graphs_d3177); end
  def test_lever_graphs_e3177; assert_in_delta(0.05, worksheet.lever_graphs_e3177, 0.002); end
  def test_lever_graphs_f3177; assert_in_delta(0.05, worksheet.lever_graphs_f3177, 0.002); end
  def test_lever_graphs_g3177; assert_in_delta(0.05, worksheet.lever_graphs_g3177, 0.002); end
  def test_lever_graphs_h3177; assert_in_delta(0.05, worksheet.lever_graphs_h3177, 0.002); end
  def test_lever_graphs_i3177; assert_in_delta(0.05, worksheet.lever_graphs_i3177, 0.002); end
  def test_lever_graphs_j3177; assert_in_delta(0.05, worksheet.lever_graphs_j3177, 0.002); end
  def test_lever_graphs_k3177; assert_in_delta(0.005, worksheet.lever_graphs_k3177, 0.002); end
  def test_lever_graphs_l3177; assert_in_delta(0.005, worksheet.lever_graphs_l3177, 0.002); end
  def test_lever_graphs_d3178; assert_equal("2050: Level 2", worksheet.lever_graphs_d3178); end
  def test_lever_graphs_e3178; assert_in_delta(0.15, worksheet.lever_graphs_e3178, 0.002); end
  def test_lever_graphs_f3178; assert_in_delta(0.15, worksheet.lever_graphs_f3178, 0.002); end
  def test_lever_graphs_g3178; assert_in_delta(0.15, worksheet.lever_graphs_g3178, 0.002); end
  def test_lever_graphs_h3178; assert_in_delta(0.15, worksheet.lever_graphs_h3178, 0.002); end
  def test_lever_graphs_i3178; assert_in_delta(0.15, worksheet.lever_graphs_i3178, 0.002); end
  def test_lever_graphs_j3178; assert_in_delta(0.15, worksheet.lever_graphs_j3178, 0.002); end
  def test_lever_graphs_k3178; assert_in_delta(0.02, worksheet.lever_graphs_k3178, 0.002); end
  def test_lever_graphs_l3178; assert_in_delta(0.02, worksheet.lever_graphs_l3178, 0.002); end
  def test_lever_graphs_d3179; assert_equal("2050: Level 3", worksheet.lever_graphs_d3179); end
  def test_lever_graphs_e3179; assert_in_delta(0.2, worksheet.lever_graphs_e3179, 0.002); end
  def test_lever_graphs_f3179; assert_in_delta(0.2, worksheet.lever_graphs_f3179, 0.002); end
  def test_lever_graphs_g3179; assert_in_delta(0.2, worksheet.lever_graphs_g3179, 0.002); end
  def test_lever_graphs_h3179; assert_in_delta(0.2, worksheet.lever_graphs_h3179, 0.002); end
  def test_lever_graphs_i3179; assert_in_delta(0.2, worksheet.lever_graphs_i3179, 0.002); end
  def test_lever_graphs_j3179; assert_in_delta(0.2, worksheet.lever_graphs_j3179, 0.002); end
  def test_lever_graphs_k3179; assert_in_delta(0.05, worksheet.lever_graphs_k3179, 0.002); end
  def test_lever_graphs_l3179; assert_in_delta(0.05, worksheet.lever_graphs_l3179, 0.002); end
  def test_lever_graphs_d3180; assert_equal("2050: Level 4", worksheet.lever_graphs_d3180); end
  def test_lever_graphs_e3180; assert_in_delta(0.3, worksheet.lever_graphs_e3180, 0.002); end
  def test_lever_graphs_f3180; assert_in_delta(0.3, worksheet.lever_graphs_f3180, 0.002); end
  def test_lever_graphs_g3180; assert_in_delta(0.3, worksheet.lever_graphs_g3180, 0.002); end
  def test_lever_graphs_h3180; assert_in_delta(0.3, worksheet.lever_graphs_h3180, 0.002); end
  def test_lever_graphs_i3180; assert_in_delta(0.3, worksheet.lever_graphs_i3180, 0.002); end
  def test_lever_graphs_j3180; assert_in_delta(0.3, worksheet.lever_graphs_j3180, 0.002); end
  def test_lever_graphs_k3180; assert_in_delta(0.1, worksheet.lever_graphs_k3180, 0.002); end
  def test_lever_graphs_l3180; assert_in_delta(0.1, worksheet.lever_graphs_l3180, 0.002); end
  def test_lever_graphs_c3164; assert_equal("1975", worksheet.lever_graphs_c3164); end
  def test_lever_graphs_d3164; assert_equal("1980", worksheet.lever_graphs_d3164); end
  def test_lever_graphs_e3164; assert_equal("1985", worksheet.lever_graphs_e3164); end
  def test_lever_graphs_f3164; assert_equal("1990", worksheet.lever_graphs_f3164); end
  def test_lever_graphs_g3164; assert_equal("1995", worksheet.lever_graphs_g3164); end
  def test_lever_graphs_h3164; assert_equal("2000", worksheet.lever_graphs_h3164); end
  def test_lever_graphs_i3164; assert_equal("2005", worksheet.lever_graphs_i3164); end
  def test_lever_graphs_j3164; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3164, 0.002); end
  def test_lever_graphs_k3164; assert_equal("2011", worksheet.lever_graphs_k3164); end
  def test_lever_graphs_l3164; assert_equal("2015", worksheet.lever_graphs_l3164); end
  def test_lever_graphs_m3164; assert_equal("2020", worksheet.lever_graphs_m3164); end
  def test_lever_graphs_n3164; assert_equal("2025", worksheet.lever_graphs_n3164); end
  def test_lever_graphs_o3164; assert_equal("2030", worksheet.lever_graphs_o3164); end
  def test_lever_graphs_p3164; assert_equal("2035", worksheet.lever_graphs_p3164); end
  def test_lever_graphs_q3164; assert_equal("2040", worksheet.lever_graphs_q3164); end
  def test_lever_graphs_r3164; assert_equal("2045", worksheet.lever_graphs_r3164); end
  def test_lever_graphs_s3164; assert_equal("2050", worksheet.lever_graphs_s3164); end
  def test_lever_graphs_b3165; assert_equal("Historic data", worksheet.lever_graphs_b3165); end
  def test_lever_graphs_b3166; assert_in_delta(1.0, worksheet.lever_graphs_b3166, 0.002); end
  def test_lever_graphs_k3166; assert_in_delta(0.24, worksheet.lever_graphs_k3166, 0.002); end
  def test_lever_graphs_l3166; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3166, 0.002); end
  def test_lever_graphs_m3166; assert_in_delta(0.23648351648351648, worksheet.lever_graphs_m3166, 0.002); end
  def test_lever_graphs_n3166; assert_in_delta(0.23706959706959707, worksheet.lever_graphs_n3166, 0.002); end
  def test_lever_graphs_o3166; assert_in_delta(0.23765567765567766, worksheet.lever_graphs_o3166, 0.002); end
  def test_lever_graphs_p3166; assert_in_delta(0.23824175824175822, worksheet.lever_graphs_p3166, 0.002); end
  def test_lever_graphs_q3166; assert_in_delta(0.2388278388278388, worksheet.lever_graphs_q3166, 0.002); end
  def test_lever_graphs_r3166; assert_in_delta(0.2394139194139194, worksheet.lever_graphs_r3166, 0.002); end
  def test_lever_graphs_s3166; assert_in_delta(0.24, worksheet.lever_graphs_s3166, 0.002); end
  def test_lever_graphs_b3167; assert_in_epsilon(2.0, worksheet.lever_graphs_b3167, 0.002); end
  def test_lever_graphs_k3167; assert_in_delta(0.24, worksheet.lever_graphs_k3167, 0.002); end
  def test_lever_graphs_l3167; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3167, 0.002); end
  def test_lever_graphs_m3167; assert_in_delta(0.23076923076923075, worksheet.lever_graphs_m3167, 0.002); end
  def test_lever_graphs_n3167; assert_in_delta(0.22564102564102564, worksheet.lever_graphs_n3167, 0.002); end
  def test_lever_graphs_o3167; assert_in_delta(0.2205128205128205, worksheet.lever_graphs_o3167, 0.002); end
  def test_lever_graphs_p3167; assert_in_delta(0.2153846153846154, worksheet.lever_graphs_p3167, 0.002); end
  def test_lever_graphs_q3167; assert_in_delta(0.21025641025641026, worksheet.lever_graphs_q3167, 0.002); end
  def test_lever_graphs_r3167; assert_in_delta(0.20512820512820515, worksheet.lever_graphs_r3167, 0.002); end
  def test_lever_graphs_s3167; assert_in_delta(0.2, worksheet.lever_graphs_s3167, 0.002); end
  def test_lever_graphs_b3168; assert_in_epsilon(3.0, worksheet.lever_graphs_b3168, 0.002); end
  def test_lever_graphs_k3168; assert_in_delta(0.24, worksheet.lever_graphs_k3168, 0.002); end
  def test_lever_graphs_l3168; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3168, 0.002); end
  def test_lever_graphs_m3168; assert_in_delta(0.22505494505494505, worksheet.lever_graphs_m3168, 0.002); end
  def test_lever_graphs_n3168; assert_in_delta(0.21421245421245422, worksheet.lever_graphs_n3168, 0.002); end
  def test_lever_graphs_o3168; assert_in_delta(0.20336996336996338, worksheet.lever_graphs_o3168, 0.002); end
  def test_lever_graphs_p3168; assert_in_delta(0.19252747252747254, worksheet.lever_graphs_p3168, 0.002); end
  def test_lever_graphs_q3168; assert_in_delta(0.18168498168498168, worksheet.lever_graphs_q3168, 0.002); end
  def test_lever_graphs_r3168; assert_in_delta(0.17084249084249087, worksheet.lever_graphs_r3168, 0.002); end
  def test_lever_graphs_s3168; assert_in_delta(0.16, worksheet.lever_graphs_s3168, 0.002); end
  def test_lever_graphs_b3169; assert_in_epsilon(4.0, worksheet.lever_graphs_b3169, 0.002); end
  def test_lever_graphs_k3169; assert_in_delta(0.24, worksheet.lever_graphs_k3169, 0.002); end
  def test_lever_graphs_l3169; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3169, 0.002); end
  def test_lever_graphs_m3169; assert_in_delta(0.2164835164835165, worksheet.lever_graphs_m3169, 0.002); end
  def test_lever_graphs_n3169; assert_in_delta(0.19706959706959706, worksheet.lever_graphs_n3169, 0.002); end
  def test_lever_graphs_o3169; assert_in_delta(0.17765567765567766, worksheet.lever_graphs_o3169, 0.002); end
  def test_lever_graphs_p3169; assert_in_delta(0.15824175824175823, worksheet.lever_graphs_p3169, 0.002); end
  def test_lever_graphs_q3169; assert_in_delta(0.13882783882783883, worksheet.lever_graphs_q3169, 0.002); end
  def test_lever_graphs_r3169; assert_in_delta(0.11941391941391942, worksheet.lever_graphs_r3169, 0.002); end
  def test_lever_graphs_s3169; assert_in_delta(0.1, worksheet.lever_graphs_s3169, 0.002); end
  def test_lever_graphs_c1604; assert_equal("1975", worksheet.lever_graphs_c1604); end
  def test_lever_graphs_d1604; assert_equal("1980", worksheet.lever_graphs_d1604); end
  def test_lever_graphs_e1604; assert_equal("1985", worksheet.lever_graphs_e1604); end
  def test_lever_graphs_f1604; assert_equal("1990", worksheet.lever_graphs_f1604); end
  def test_lever_graphs_g1604; assert_equal("1995", worksheet.lever_graphs_g1604); end
  def test_lever_graphs_h1604; assert_equal("2000", worksheet.lever_graphs_h1604); end
  def test_lever_graphs_i1604; assert_equal("2005", worksheet.lever_graphs_i1604); end
  def test_lever_graphs_j1604; assert_equal("2010", worksheet.lever_graphs_j1604); end
  def test_lever_graphs_k1604; assert_equal("2011", worksheet.lever_graphs_k1604); end
  def test_lever_graphs_l1604; assert_equal("2015", worksheet.lever_graphs_l1604); end
  def test_lever_graphs_m1604; assert_equal("2020", worksheet.lever_graphs_m1604); end
  def test_lever_graphs_n1604; assert_equal("2025", worksheet.lever_graphs_n1604); end
  def test_lever_graphs_o1604; assert_equal("2030", worksheet.lever_graphs_o1604); end
  def test_lever_graphs_p1604; assert_equal("2035", worksheet.lever_graphs_p1604); end
  def test_lever_graphs_q1604; assert_equal("2040", worksheet.lever_graphs_q1604); end
  def test_lever_graphs_r1604; assert_equal("2045", worksheet.lever_graphs_r1604); end
  def test_lever_graphs_s1604; assert_equal("2050", worksheet.lever_graphs_s1604); end
  def test_lever_graphs_b1605; assert_equal("Historic data", worksheet.lever_graphs_b1605); end
  def test_lever_graphs_c1605; assert_in_epsilon(4071020000.0, worksheet.lever_graphs_c1605, 0.002); end
  def test_lever_graphs_d1605; assert_in_epsilon(4449049000.0, worksheet.lever_graphs_d1605, 0.002); end
  def test_lever_graphs_e1605; assert_in_epsilon(4863602000.0, worksheet.lever_graphs_e1605, 0.002); end
  def test_lever_graphs_f1605; assert_in_epsilon(5320817000.0, worksheet.lever_graphs_f1605, 0.002); end
  def test_lever_graphs_g1605; assert_in_epsilon(5741822000.0, worksheet.lever_graphs_g1605, 0.002); end
  def test_lever_graphs_h1605; assert_in_epsilon(6127700000.0, worksheet.lever_graphs_h1605, 0.002); end
  def test_lever_graphs_i1605; assert_in_epsilon(6514095000.0, worksheet.lever_graphs_i1605, 0.002); end
  def test_lever_graphs_j1605; assert_in_epsilon(6916183000.0, worksheet.lever_graphs_j1605, 0.002); end
  def test_lever_graphs_k1605; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1605, 0.002); end
  def test_lever_graphs_b1606; assert_in_delta(1.0, worksheet.lever_graphs_b1606, 0.002); end
  def test_lever_graphs_k1606; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1606, 0.002); end
  def test_lever_graphs_l1606; assert_in_epsilon(7392233000.0, worksheet.lever_graphs_l1606, 0.002); end
  def test_lever_graphs_m1606; assert_in_epsilon(7893904000.0, worksheet.lever_graphs_m1606, 0.002); end
  def test_lever_graphs_n1606; assert_in_epsilon(8398226000.0, worksheet.lever_graphs_n1606, 0.002); end
  def test_lever_graphs_o1606; assert_in_epsilon(8881519000.0, worksheet.lever_graphs_o1606, 0.002); end
  def test_lever_graphs_p1606; assert_in_epsilon(9359400000.0, worksheet.lever_graphs_p1606, 0.002); end
  def test_lever_graphs_q1606; assert_in_epsilon(9847909000.0, worksheet.lever_graphs_q1606, 0.002); end
  def test_lever_graphs_r1606; assert_in_epsilon(10352435000.0, worksheet.lever_graphs_r1606, 0.002); end
  def test_lever_graphs_s1606; assert_in_epsilon(10868444000.0, worksheet.lever_graphs_s1606, 0.002); end
  def test_lever_graphs_b1607; assert_in_epsilon(2.0, worksheet.lever_graphs_b1607, 0.002); end
  def test_lever_graphs_k1607; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1607, 0.002); end
  def test_lever_graphs_l1607; assert_in_epsilon(7324782000.0, worksheet.lever_graphs_l1607, 0.002); end
  def test_lever_graphs_m1607; assert_in_epsilon(7716749000.0, worksheet.lever_graphs_m1607, 0.002); end
  def test_lever_graphs_n1607; assert_in_epsilon(8083413000.0, worksheet.lever_graphs_n1607, 0.002); end
  def test_lever_graphs_o1607; assert_in_epsilon(8424937000.0, worksheet.lever_graphs_o1607, 0.002); end
  def test_lever_graphs_p1607; assert_in_epsilon(8743447000.0, worksheet.lever_graphs_p1607, 0.002); end
  def test_lever_graphs_q1607; assert_in_epsilon(9038687000.0, worksheet.lever_graphs_q1607, 0.002); end
  def test_lever_graphs_r1607; assert_in_epsilon(9308438000.0, worksheet.lever_graphs_r1607, 0.002); end
  def test_lever_graphs_s1607; assert_in_epsilon(9550945000.0, worksheet.lever_graphs_s1607, 0.002); end
  def test_lever_graphs_b1608; assert_in_epsilon(3.0, worksheet.lever_graphs_b1608, 0.002); end
  def test_lever_graphs_k1608; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1608, 0.002); end
  def test_lever_graphs_l1608; assert_in_epsilon(7256925000.0, worksheet.lever_graphs_l1608, 0.002); end
  def test_lever_graphs_m1608; assert_in_epsilon(7539163000.0, worksheet.lever_graphs_m1608, 0.002); end
  def test_lever_graphs_n1608; assert_in_epsilon(7768450000.0, worksheet.lever_graphs_n1608, 0.002); end
  def test_lever_graphs_o1608; assert_in_epsilon(7969407000.0, worksheet.lever_graphs_o1608, 0.002); end
  def test_lever_graphs_p1608; assert_in_epsilon(8135087000.0, worksheet.lever_graphs_p1608, 0.002); end
  def test_lever_graphs_q1608; assert_in_epsilon(8255351000.0, worksheet.lever_graphs_q1608, 0.002); end
  def test_lever_graphs_r1608; assert_in_epsilon(8323978000.0, worksheet.lever_graphs_r1608, 0.002); end
  def test_lever_graphs_s1608; assert_in_epsilon(8341706000.0, worksheet.lever_graphs_s1608, 0.002); end
  def test_lever_graphs_d1589; assert_equal("Title", worksheet.lever_graphs_d1589); end
  def test_lever_graphs_e1589; assert_equal("Proportion of 15 year trend", worksheet.lever_graphs_e1589); end
  def test_lever_graphs_d1590; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1590, 0.002); end
  def test_lever_graphs_e1590; assert_in_delta(0.0, (worksheet.lever_graphs_e1590||0), 0.002); end
  def test_lever_graphs_d1591; assert_equal("2050: Level 1", worksheet.lever_graphs_d1591); end
  def test_lever_graphs_e1591; assert_in_delta(0.0, (worksheet.lever_graphs_e1591||0), 0.002); end
  def test_lever_graphs_d1592; assert_equal("2050: Level 2", worksheet.lever_graphs_d1592); end
  def test_lever_graphs_e1592; assert_in_delta(0.33, worksheet.lever_graphs_e1592, 0.002); end
  def test_lever_graphs_d1593; assert_equal("2050: Level 3", worksheet.lever_graphs_d1593); end
  def test_lever_graphs_e1593; assert_in_delta(0.66, worksheet.lever_graphs_e1593, 0.002); end
  def test_lever_graphs_d1594; assert_equal("2050: Level 4", worksheet.lever_graphs_d1594); end
  def test_lever_graphs_e1594; assert_in_delta(1.0, worksheet.lever_graphs_e1594, 0.002); end
  def test_lever_graphs_d1695; assert_equal("Title", worksheet.lever_graphs_d1695); end
  def test_lever_graphs_e1695; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_e1695); end
  def test_lever_graphs_f1695; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_f1695); end
  def test_lever_graphs_g1695; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_g1695); end
  def test_lever_graphs_d1696; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1696, 0.002); end
  def test_lever_graphs_e1696; assert_in_delta(0.08, worksheet.lever_graphs_e1696, 0.002); end
  def test_lever_graphs_f1696; assert_in_delta(0.17, worksheet.lever_graphs_f1696, 0.002); end
  def test_lever_graphs_g1696; assert_in_delta(0.75, worksheet.lever_graphs_g1696, 0.002); end
  def test_lever_graphs_d1697; assert_equal("2050: Level 1", worksheet.lever_graphs_d1697); end
  def test_lever_graphs_e1697; assert_in_delta(0.1435, worksheet.lever_graphs_e1697, 0.002); end
  def test_lever_graphs_f1697; assert_in_delta(0.2315, worksheet.lever_graphs_f1697, 0.002); end
  def test_lever_graphs_g1697; assert_in_delta(0.625, worksheet.lever_graphs_g1697, 0.002); end
  def test_lever_graphs_d1698; assert_equal("2050: Level 2", worksheet.lever_graphs_d1698); end
  def test_lever_graphs_e1698; assert_in_delta(0.18, worksheet.lever_graphs_e1698, 0.002); end
  def test_lever_graphs_f1698; assert_in_delta(0.27, worksheet.lever_graphs_f1698, 0.002); end
  def test_lever_graphs_g1698; assert_in_delta(0.55, worksheet.lever_graphs_g1698, 0.002); end
  def test_lever_graphs_d1699; assert_equal("2050: Level 3", worksheet.lever_graphs_d1699); end
  def test_lever_graphs_e1699; assert_in_delta(0.204, worksheet.lever_graphs_e1699, 0.002); end
  def test_lever_graphs_f1699; assert_in_delta(0.293, worksheet.lever_graphs_f1699, 0.002); end
  def test_lever_graphs_g1699; assert_in_delta(0.5030000000000001, worksheet.lever_graphs_g1699, 0.002); end
  def test_lever_graphs_d1700; assert_equal("2050: Level 4", worksheet.lever_graphs_d1700); end
  def test_lever_graphs_e1700; assert_in_delta(0.2324, worksheet.lever_graphs_e1700, 0.002); end
  def test_lever_graphs_f1700; assert_in_delta(0.3223, worksheet.lever_graphs_f1700, 0.002); end
  def test_lever_graphs_g1700; assert_in_delta(0.4453000000000001, worksheet.lever_graphs_g1700, 0.002); end
  def test_lever_graphs_c1740; assert_equal("1975", worksheet.lever_graphs_c1740); end
  def test_lever_graphs_d1740; assert_equal("1980", worksheet.lever_graphs_d1740); end
  def test_lever_graphs_e1740; assert_equal("1985", worksheet.lever_graphs_e1740); end
  def test_lever_graphs_f1740; assert_equal("1990", worksheet.lever_graphs_f1740); end
  def test_lever_graphs_g1740; assert_equal("1995", worksheet.lever_graphs_g1740); end
  def test_lever_graphs_h1740; assert_equal("2000", worksheet.lever_graphs_h1740); end
  def test_lever_graphs_i1740; assert_equal("2005", worksheet.lever_graphs_i1740); end
  def test_lever_graphs_j1740; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1740, 0.002); end
  def test_lever_graphs_k1740; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1740, 0.002); end
  def test_lever_graphs_l1740; assert_equal("2015", worksheet.lever_graphs_l1740); end
  def test_lever_graphs_m1740; assert_equal("2020", worksheet.lever_graphs_m1740); end
  def test_lever_graphs_n1740; assert_equal("2025", worksheet.lever_graphs_n1740); end
  def test_lever_graphs_o1740; assert_equal("2030", worksheet.lever_graphs_o1740); end
  def test_lever_graphs_p1740; assert_equal("2035", worksheet.lever_graphs_p1740); end
  def test_lever_graphs_q1740; assert_equal("2040", worksheet.lever_graphs_q1740); end
  def test_lever_graphs_r1740; assert_equal("2045", worksheet.lever_graphs_r1740); end
  def test_lever_graphs_s1740; assert_equal("2050", worksheet.lever_graphs_s1740); end
  def test_lever_graphs_b1741; assert_equal("Historic data", worksheet.lever_graphs_b1741); end
  def test_lever_graphs_b1742; assert_in_delta(1.0, worksheet.lever_graphs_b1742, 0.002); end
  def test_lever_graphs_k1742; assert_in_delta(0.25, worksheet.lever_graphs_k1742, 0.002); end
  def test_lever_graphs_l1742; assert_in_delta(0.316, worksheet.lever_graphs_l1742, 0.002); end
  def test_lever_graphs_m1742; assert_in_delta(0.35, worksheet.lever_graphs_m1742, 0.002); end
  def test_lever_graphs_n1742; assert_in_delta(0.364, worksheet.lever_graphs_n1742, 0.002); end
  def test_lever_graphs_o1742; assert_in_delta(0.381, worksheet.lever_graphs_o1742, 0.002); end
  def test_lever_graphs_p1742; assert_in_delta(0.382, worksheet.lever_graphs_p1742, 0.002); end
  def test_lever_graphs_q1742; assert_in_delta(0.43000000000000005, worksheet.lever_graphs_q1742, 0.002); end
  def test_lever_graphs_r1742; assert_in_delta(0.4129, worksheet.lever_graphs_r1742, 0.002); end
  def test_lever_graphs_s1742; assert_in_delta(0.375, worksheet.lever_graphs_s1742, 0.002); end
  def test_lever_graphs_b1743; assert_in_epsilon(2.0, worksheet.lever_graphs_b1743, 0.002); end
  def test_lever_graphs_k1743; assert_in_delta(0.25, worksheet.lever_graphs_k1743, 0.002); end
  def test_lever_graphs_l1743; assert_in_delta(0.316, worksheet.lever_graphs_l1743, 0.002); end
  def test_lever_graphs_m1743; assert_in_delta(0.361, worksheet.lever_graphs_m1743, 0.002); end
  def test_lever_graphs_n1743; assert_in_delta(0.377, worksheet.lever_graphs_n1743, 0.002); end
  def test_lever_graphs_o1743; assert_in_delta(0.389, worksheet.lever_graphs_o1743, 0.002); end
  def test_lever_graphs_p1743; assert_in_delta(0.41200000000000003, worksheet.lever_graphs_p1743, 0.002); end
  def test_lever_graphs_q1743; assert_in_delta(0.45, worksheet.lever_graphs_q1743, 0.002); end
  def test_lever_graphs_r1743; assert_in_delta(0.45, worksheet.lever_graphs_r1743, 0.002); end
  def test_lever_graphs_s1743; assert_in_delta(0.45, worksheet.lever_graphs_s1743, 0.002); end
  def test_lever_graphs_b1744; assert_in_epsilon(3.0, worksheet.lever_graphs_b1744, 0.002); end
  def test_lever_graphs_k1744; assert_in_delta(0.25, worksheet.lever_graphs_k1744, 0.002); end
  def test_lever_graphs_l1744; assert_in_delta(0.316, worksheet.lever_graphs_l1744, 0.002); end
  def test_lever_graphs_m1744; assert_in_delta(0.37, worksheet.lever_graphs_m1744, 0.002); end
  def test_lever_graphs_n1744; assert_in_delta(0.394, worksheet.lever_graphs_n1744, 0.002); end
  def test_lever_graphs_o1744; assert_in_delta(0.41800000000000004, worksheet.lever_graphs_o1744, 0.002); end
  def test_lever_graphs_p1744; assert_in_delta(0.445, worksheet.lever_graphs_p1744, 0.002); end
  def test_lever_graphs_q1744; assert_in_delta(0.47000000000000003, worksheet.lever_graphs_q1744, 0.002); end
  def test_lever_graphs_r1744; assert_in_delta(0.484, worksheet.lever_graphs_r1744, 0.002); end
  def test_lever_graphs_s1744; assert_in_delta(0.497, worksheet.lever_graphs_s1744, 0.002); end
  def test_lever_graphs_b1745; assert_in_epsilon(4.0, worksheet.lever_graphs_b1745, 0.002); end
  def test_lever_graphs_k1745; assert_in_delta(0.25, worksheet.lever_graphs_k1745, 0.002); end
  def test_lever_graphs_l1745; assert_in_delta(0.316, worksheet.lever_graphs_l1745, 0.002); end
  def test_lever_graphs_m1745; assert_in_delta(0.3909, worksheet.lever_graphs_m1745, 0.002); end
  def test_lever_graphs_n1745; assert_in_delta(0.42300000000000004, worksheet.lever_graphs_n1745, 0.002); end
  def test_lever_graphs_o1745; assert_in_delta(0.465, worksheet.lever_graphs_o1745, 0.002); end
  def test_lever_graphs_p1745; assert_in_delta(0.5, worksheet.lever_graphs_p1745, 0.002); end
  def test_lever_graphs_q1745; assert_in_delta(0.5185, worksheet.lever_graphs_q1745, 0.002); end
  def test_lever_graphs_r1745; assert_in_delta(0.535, worksheet.lever_graphs_r1745, 0.002); end
  def test_lever_graphs_s1745; assert_in_delta(0.5547, worksheet.lever_graphs_s1745, 0.002); end
  def test_lever_graphs_b1746; assert_equal("Comparator A", worksheet.lever_graphs_b1746); end
  def test_lever_graphs_b1747; assert_equal("Comparator B", worksheet.lever_graphs_b1747); end
  def test_lever_graphs_b1748; assert_equal("Comparator C", worksheet.lever_graphs_b1748); end
  def test_lever_graphs_d2115; assert_equal("Title", worksheet.lever_graphs_d2115); end
  def test_lever_graphs_e2115; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2115); end
  def test_lever_graphs_f2115; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2115); end
  def test_lever_graphs_g2115; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2115); end
  def test_lever_graphs_h2115; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2115); end
  def test_lever_graphs_i2115; assert_equal("Hydrogen", worksheet.lever_graphs_i2115); end
  def test_lever_graphs_d2116; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2116, 0.002); end
  def test_lever_graphs_e2116; assert_in_delta(0.9995553411198423, worksheet.lever_graphs_e2116, 0.002); end
  def test_lever_graphs_f2116; assert_in_delta(8.937397766306532e-08, worksheet.lever_graphs_f2116, 0.002); end
  def test_lever_graphs_g2116; assert_in_delta(0.0, (worksheet.lever_graphs_g2116||0), 0.002); end
  def test_lever_graphs_h2116; assert_in_delta(0.0004445695061800071, worksheet.lever_graphs_h2116, 0.002); end
  def test_lever_graphs_i2116; assert_in_delta(0.0, (worksheet.lever_graphs_i2116||0), 0.002); end
  def test_lever_graphs_d2117; assert_equal("2050: Level 1", worksheet.lever_graphs_d2117); end
  def test_lever_graphs_e2117; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_e2117, 0.002); end
  def test_lever_graphs_f2117; assert_in_delta(0.03, worksheet.lever_graphs_f2117, 0.002); end
  def test_lever_graphs_g2117; assert_in_delta(0.03, worksheet.lever_graphs_g2117, 0.002); end
  def test_lever_graphs_h2117; assert_in_delta(0.01, worksheet.lever_graphs_h2117, 0.002); end
  def test_lever_graphs_i2117; assert_in_delta(0.0, (worksheet.lever_graphs_i2117||0), 0.002); end
  def test_lever_graphs_d2118; assert_equal("2050: Level 2", worksheet.lever_graphs_d2118); end
  def test_lever_graphs_e2118; assert_in_delta(0.7499999999999999, worksheet.lever_graphs_e2118, 0.002); end
  def test_lever_graphs_f2118; assert_in_delta(0.05, worksheet.lever_graphs_f2118, 0.002); end
  def test_lever_graphs_g2118; assert_in_delta(0.05, worksheet.lever_graphs_g2118, 0.002); end
  def test_lever_graphs_h2118; assert_in_delta(0.15, worksheet.lever_graphs_h2118, 0.002); end
  def test_lever_graphs_i2118; assert_in_delta(0.0, (worksheet.lever_graphs_i2118||0), 0.002); end
  def test_lever_graphs_d2119; assert_equal("2050: Level 3", worksheet.lever_graphs_d2119); end
  def test_lever_graphs_e2119; assert_in_delta(0.4, worksheet.lever_graphs_e2119, 0.002); end
  def test_lever_graphs_f2119; assert_in_delta(0.1, worksheet.lever_graphs_f2119, 0.002); end
  def test_lever_graphs_g2119; assert_in_delta(0.1, worksheet.lever_graphs_g2119, 0.002); end
  def test_lever_graphs_h2119; assert_in_delta(0.3, worksheet.lever_graphs_h2119, 0.002); end
  def test_lever_graphs_i2119; assert_in_delta(0.1, worksheet.lever_graphs_i2119, 0.002); end
  def test_lever_graphs_d2120; assert_equal("2050: Level 4", worksheet.lever_graphs_d2120); end
  def test_lever_graphs_e2120; assert_in_delta(0.04999999999999999, worksheet.lever_graphs_e2120, 0.002); end
  def test_lever_graphs_f2120; assert_in_delta(0.2, worksheet.lever_graphs_f2120, 0.002); end
  def test_lever_graphs_g2120; assert_in_delta(0.15, worksheet.lever_graphs_g2120, 0.002); end
  def test_lever_graphs_h2120; assert_in_delta(0.4, worksheet.lever_graphs_h2120, 0.002); end
  def test_lever_graphs_i2120; assert_in_delta(0.2, worksheet.lever_graphs_i2120, 0.002); end
  def test_lever_graphs_d2102; assert_equal("Title", worksheet.lever_graphs_d2102); end
  def test_lever_graphs_e2102; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2102); end
  def test_lever_graphs_f2102; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2102); end
  def test_lever_graphs_g2102; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2102); end
  def test_lever_graphs_h2102; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2102); end
  def test_lever_graphs_i2102; assert_equal("Hydrogen", worksheet.lever_graphs_i2102); end
  def test_lever_graphs_d2103; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2103, 0.002); end
  def test_lever_graphs_e2103; assert_in_delta(0.988235872414889, worksheet.lever_graphs_e2103, 0.002); end
  def test_lever_graphs_f2103; assert_in_delta(0.00959176661788106, worksheet.lever_graphs_f2103, 0.002); end
  def test_lever_graphs_g2103; assert_in_delta(2.834105983229307e-08, worksheet.lever_graphs_g2103, 0.002); end
  def test_lever_graphs_h2103; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_h2103, 0.002); end
  def test_lever_graphs_i2103; assert_in_delta(0.0, (worksheet.lever_graphs_i2103||0), 0.002); end
  def test_lever_graphs_d2104; assert_equal("2050: Level 1", worksheet.lever_graphs_d2104); end
  def test_lever_graphs_e2104; assert_in_delta(0.9099999999999999, worksheet.lever_graphs_e2104, 0.002); end
  def test_lever_graphs_f2104; assert_in_delta(0.02, worksheet.lever_graphs_f2104, 0.002); end
  def test_lever_graphs_g2104; assert_in_delta(0.05, worksheet.lever_graphs_g2104, 0.002); end
  def test_lever_graphs_h2104; assert_in_delta(0.02, worksheet.lever_graphs_h2104, 0.002); end
  def test_lever_graphs_i2104; assert_in_delta(0.0, (worksheet.lever_graphs_i2104||0), 0.002); end
  def test_lever_graphs_d2105; assert_equal("2050: Level 2", worksheet.lever_graphs_d2105); end
  def test_lever_graphs_e2105; assert_in_delta(0.77, worksheet.lever_graphs_e2105, 0.002); end
  def test_lever_graphs_f2105; assert_in_delta(0.03, worksheet.lever_graphs_f2105, 0.002); end
  def test_lever_graphs_g2105; assert_in_delta(0.1, worksheet.lever_graphs_g2105, 0.002); end
  def test_lever_graphs_h2105; assert_in_delta(0.1, worksheet.lever_graphs_h2105, 0.002); end
  def test_lever_graphs_i2105; assert_in_delta(0.0, (worksheet.lever_graphs_i2105||0), 0.002); end
  def test_lever_graphs_d2106; assert_equal("2050: Level 3", worksheet.lever_graphs_d2106); end
  def test_lever_graphs_e2106; assert_in_delta(0.32999999999999996, worksheet.lever_graphs_e2106, 0.002); end
  def test_lever_graphs_f2106; assert_in_delta(0.07, worksheet.lever_graphs_f2106, 0.002); end
  def test_lever_graphs_g2106; assert_in_delta(0.25, worksheet.lever_graphs_g2106, 0.002); end
  def test_lever_graphs_h2106; assert_in_delta(0.2, worksheet.lever_graphs_h2106, 0.002); end
  def test_lever_graphs_i2106; assert_in_delta(0.15, worksheet.lever_graphs_i2106, 0.002); end
  def test_lever_graphs_d2107; assert_equal("2050: Level 4", worksheet.lever_graphs_d2107); end
  def test_lever_graphs_e2107; assert_in_delta(0.020000000000000073, worksheet.lever_graphs_e2107, 0.002); end
  def test_lever_graphs_f2107; assert_in_delta(0.1, worksheet.lever_graphs_f2107, 0.002); end
  def test_lever_graphs_g2107; assert_in_delta(0.33, worksheet.lever_graphs_g2107, 0.002); end
  def test_lever_graphs_h2107; assert_in_delta(0.35, worksheet.lever_graphs_h2107, 0.002); end
  def test_lever_graphs_i2107; assert_in_delta(0.2, worksheet.lever_graphs_i2107, 0.002); end
  def test_lever_graphs_d2141; assert_equal("Title", worksheet.lever_graphs_d2141); end
  def test_lever_graphs_e2141; assert_equal("Fuel-powered plane", worksheet.lever_graphs_e2141); end
  def test_lever_graphs_f2141; assert_equal("Hydrogen-powered plane", worksheet.lever_graphs_f2141); end
  def test_lever_graphs_d2142; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2142, 0.002); end
  def test_lever_graphs_e2142; assert_in_delta(1.0, worksheet.lever_graphs_e2142, 0.002); end
  def test_lever_graphs_f2142; assert_in_delta(0.0, (worksheet.lever_graphs_f2142||0), 0.002); end
  def test_lever_graphs_d2143; assert_equal("2050: Level 1", worksheet.lever_graphs_d2143); end
  def test_lever_graphs_e2143; assert_in_delta(1.0, worksheet.lever_graphs_e2143, 0.002); end
  def test_lever_graphs_f2143; assert_in_delta(0.0, (worksheet.lever_graphs_f2143||0), 0.002); end
  def test_lever_graphs_d2144; assert_equal("2050: Level 2", worksheet.lever_graphs_d2144); end
  def test_lever_graphs_e2144; assert_in_delta(1.0, worksheet.lever_graphs_e2144, 0.002); end
  def test_lever_graphs_f2144; assert_in_delta(0.0, (worksheet.lever_graphs_f2144||0), 0.002); end
  def test_lever_graphs_d2145; assert_equal("2050: Level 3", worksheet.lever_graphs_d2145); end
  def test_lever_graphs_e2145; assert_in_delta(0.95, worksheet.lever_graphs_e2145, 0.002); end
  def test_lever_graphs_f2145; assert_in_delta(0.05, worksheet.lever_graphs_f2145, 0.002); end
  def test_lever_graphs_d2146; assert_equal("2050: Level 4", worksheet.lever_graphs_d2146); end
  def test_lever_graphs_e2146; assert_in_delta(0.9, worksheet.lever_graphs_e2146, 0.002); end
  def test_lever_graphs_f2146; assert_in_delta(0.1, worksheet.lever_graphs_f2146, 0.002); end
  def test_lever_graphs_d2128; assert_equal("Title", worksheet.lever_graphs_d2128); end
  def test_lever_graphs_e2128; assert_equal("Fuel-powered train", worksheet.lever_graphs_e2128); end
  def test_lever_graphs_f2128; assert_equal("Electric-powered train", worksheet.lever_graphs_f2128); end
  def test_lever_graphs_d2129; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2129, 0.002); end
  def test_lever_graphs_e2129; assert_in_delta(0.1, worksheet.lever_graphs_e2129, 0.002); end
  def test_lever_graphs_f2129; assert_in_delta(0.9, worksheet.lever_graphs_f2129, 0.002); end
  def test_lever_graphs_d2130; assert_equal("2050: Level 1", worksheet.lever_graphs_d2130); end
  def test_lever_graphs_e2130; assert_in_delta(0.1, worksheet.lever_graphs_e2130, 0.002); end
  def test_lever_graphs_f2130; assert_in_delta(0.9, worksheet.lever_graphs_f2130, 0.002); end
  def test_lever_graphs_d2131; assert_equal("2050: Level 2", worksheet.lever_graphs_d2131); end
  def test_lever_graphs_e2131; assert_in_delta(0.05, worksheet.lever_graphs_e2131, 0.002); end
  def test_lever_graphs_f2131; assert_in_delta(0.95, worksheet.lever_graphs_f2131, 0.002); end
  def test_lever_graphs_d2132; assert_equal("2050: Level 3", worksheet.lever_graphs_d2132); end
  def test_lever_graphs_e2132; assert_in_delta(0.03, worksheet.lever_graphs_e2132, 0.002); end
  def test_lever_graphs_f2132; assert_in_delta(0.97, worksheet.lever_graphs_f2132, 0.002); end
  def test_lever_graphs_d2133; assert_equal("2050: Level 4", worksheet.lever_graphs_d2133); end
  def test_lever_graphs_e2133; assert_in_delta(0.0, (worksheet.lever_graphs_e2133||0), 0.002); end
  def test_lever_graphs_f2133; assert_in_delta(1.0, worksheet.lever_graphs_f2133, 0.002); end
  def test_lever_graphs_c1620; assert_equal("1975", worksheet.lever_graphs_c1620); end
  def test_lever_graphs_d1620; assert_equal("1980", worksheet.lever_graphs_d1620); end
  def test_lever_graphs_e1620; assert_equal("1985", worksheet.lever_graphs_e1620); end
  def test_lever_graphs_f1620; assert_equal("1990", worksheet.lever_graphs_f1620); end
  def test_lever_graphs_g1620; assert_equal("1995", worksheet.lever_graphs_g1620); end
  def test_lever_graphs_h1620; assert_equal("2000", worksheet.lever_graphs_h1620); end
  def test_lever_graphs_i1620; assert_equal("2005", worksheet.lever_graphs_i1620); end
  def test_lever_graphs_j1620; assert_equal("2010", worksheet.lever_graphs_j1620); end
  def test_lever_graphs_k1620; assert_equal("2011", worksheet.lever_graphs_k1620); end
  def test_lever_graphs_l1620; assert_equal("2015", worksheet.lever_graphs_l1620); end
  def test_lever_graphs_m1620; assert_equal("2020", worksheet.lever_graphs_m1620); end
  def test_lever_graphs_n1620; assert_equal("2025", worksheet.lever_graphs_n1620); end
  def test_lever_graphs_o1620; assert_equal("2030", worksheet.lever_graphs_o1620); end
  def test_lever_graphs_p1620; assert_equal("2035", worksheet.lever_graphs_p1620); end
  def test_lever_graphs_q1620; assert_equal("2040", worksheet.lever_graphs_q1620); end
  def test_lever_graphs_r1620; assert_equal("2045", worksheet.lever_graphs_r1620); end
  def test_lever_graphs_s1620; assert_equal("2050", worksheet.lever_graphs_s1620); end
  def test_lever_graphs_b1621; assert_equal("Historic data", worksheet.lever_graphs_b1621); end
  def test_lever_graphs_c1621; assert_in_delta(0.377, worksheet.lever_graphs_c1621, 0.002); end
  def test_lever_graphs_d1621; assert_in_delta(0.39399999999999996, worksheet.lever_graphs_d1621, 0.002); end
  def test_lever_graphs_e1621; assert_in_delta(0.41200000000000003, worksheet.lever_graphs_e1621, 0.002); end
  def test_lever_graphs_f1621; assert_in_delta(0.43, worksheet.lever_graphs_f1621, 0.002); end
  def test_lever_graphs_g1621; assert_in_delta(0.44799999999999995, worksheet.lever_graphs_g1621, 0.002); end
  def test_lever_graphs_h1621; assert_in_delta(0.467, worksheet.lever_graphs_h1621, 0.002); end
  def test_lever_graphs_i1621; assert_in_delta(0.491, worksheet.lever_graphs_i1621, 0.002); end
  def test_lever_graphs_j1621; assert_in_delta(0.516, worksheet.lever_graphs_j1621, 0.002); end
  def test_lever_graphs_k1621; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1621, 0.002); end
  def test_lever_graphs_b1622; assert_in_delta(1.0, worksheet.lever_graphs_b1622, 0.002); end
  def test_lever_graphs_k1622; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1622, 0.002); end
  def test_lever_graphs_l1622; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1622, 0.002); end
  def test_lever_graphs_m1622; assert_in_delta(0.57, worksheet.lever_graphs_m1622, 0.002); end
  def test_lever_graphs_n1622; assert_in_delta(0.6, worksheet.lever_graphs_n1622, 0.002); end
  def test_lever_graphs_o1622; assert_in_delta(0.63, worksheet.lever_graphs_o1622, 0.002); end
  def test_lever_graphs_p1622; assert_in_delta(0.65, worksheet.lever_graphs_p1622, 0.002); end
  def test_lever_graphs_q1622; assert_in_delta(0.68, worksheet.lever_graphs_q1622, 0.002); end
  def test_lever_graphs_r1622; assert_in_delta(0.71, worksheet.lever_graphs_r1622, 0.002); end
  def test_lever_graphs_s1622; assert_in_delta(0.75, worksheet.lever_graphs_s1622, 0.002); end
  def test_lever_graphs_b1623; assert_in_epsilon(2.0, worksheet.lever_graphs_b1623, 0.002); end
  def test_lever_graphs_k1623; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1623, 0.002); end
  def test_lever_graphs_l1623; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1623, 0.002); end
  def test_lever_graphs_m1623; assert_in_delta(0.562155760202834, worksheet.lever_graphs_m1623, 0.002); end
  def test_lever_graphs_n1623; assert_in_delta(0.582151835653899, worksheet.lever_graphs_n1623, 0.002); end
  def test_lever_graphs_o1623; assert_in_delta(0.6003793471001849, worksheet.lever_graphs_o1623, 0.002); end
  def test_lever_graphs_p1623; assert_in_delta(0.61694601015062, worksheet.lever_graphs_p1623, 0.002); end
  def test_lever_graphs_q1623; assert_in_delta(0.632327785387248, worksheet.lever_graphs_q1623, 0.002); end
  def test_lever_graphs_r1623; assert_in_delta(0.647898600138288, worksheet.lever_graphs_r1623, 0.002); end
  def test_lever_graphs_s1623; assert_in_delta(0.663663288223238, worksheet.lever_graphs_s1623, 0.002); end
  def test_lever_graphs_b1624; assert_in_epsilon(3.0, worksheet.lever_graphs_b1624, 0.002); end
  def test_lever_graphs_k1624; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1624, 0.002); end
  def test_lever_graphs_l1624; assert_in_delta(0.53, worksheet.lever_graphs_l1624, 0.002); end
  def test_lever_graphs_m1624; assert_in_delta(0.54, worksheet.lever_graphs_m1624, 0.002); end
  def test_lever_graphs_n1624; assert_in_delta(0.55, worksheet.lever_graphs_n1624, 0.002); end
  def test_lever_graphs_o1624; assert_in_delta(0.56, worksheet.lever_graphs_o1624, 0.002); end
  def test_lever_graphs_p1624; assert_in_delta(0.57, worksheet.lever_graphs_p1624, 0.002); end
  def test_lever_graphs_q1624; assert_in_delta(0.57, worksheet.lever_graphs_q1624, 0.002); end
  def test_lever_graphs_r1624; assert_in_delta(0.57, worksheet.lever_graphs_r1624, 0.002); end
  def test_lever_graphs_s1624; assert_in_delta(0.58, worksheet.lever_graphs_s1624, 0.002); end
  def test_lever_graphs_b1625; assert_equal("Comparator A", worksheet.lever_graphs_b1625); end
  def test_lever_graphs_b1626; assert_equal("Comparator B", worksheet.lever_graphs_b1626); end
  def test_lever_graphs_b1627; assert_equal("Comparator C", worksheet.lever_graphs_b1627); end
  def test_lever_graphs_b2176; assert_equal("Technology code", worksheet.lever_graphs_b2176); end
  def test_lever_graphs_c2176; assert_equal("1975", worksheet.lever_graphs_c2176); end
  def test_lever_graphs_d2176; assert_equal("1980", worksheet.lever_graphs_d2176); end
  def test_lever_graphs_e2176; assert_equal("1985", worksheet.lever_graphs_e2176); end
  def test_lever_graphs_f2176; assert_equal("1990", worksheet.lever_graphs_f2176); end
  def test_lever_graphs_g2176; assert_equal("1995", worksheet.lever_graphs_g2176); end
  def test_lever_graphs_h2176; assert_equal("2000", worksheet.lever_graphs_h2176); end
  def test_lever_graphs_i2176; assert_equal("2005", worksheet.lever_graphs_i2176); end
  def test_lever_graphs_j2176; assert_equal("2010", worksheet.lever_graphs_j2176); end
  def test_lever_graphs_k2176; assert_equal("2011", worksheet.lever_graphs_k2176); end
  def test_lever_graphs_b2177; assert_equal("walk.passenger.urban", worksheet.lever_graphs_b2177); end
  def test_lever_graphs_k2177; assert_in_delta(0.0, (worksheet.lever_graphs_k2177||0), 0.002); end
  def test_lever_graphs_b2178; assert_equal("bike.passenger.urban", worksheet.lever_graphs_b2178); end
  def test_lever_graphs_k2178; assert_in_delta(0.0, (worksheet.lever_graphs_k2178||0), 0.002); end
  def test_lever_graphs_b2179; assert_equal("motorbike.passenger.urban.fuel", worksheet.lever_graphs_b2179); end
  def test_lever_graphs_k2179; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2179, 0.002); end
  def test_lever_graphs_b2180; assert_equal("motorbike.passenger.urban.elec", worksheet.lever_graphs_b2180); end
  def test_lever_graphs_k2180; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2180, 0.002); end
  def test_lever_graphs_b2181; assert_equal("car.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2181); end
  def test_lever_graphs_k2181; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2181, 0.002); end
  def test_lever_graphs_b2182; assert_equal("car.passenger.urban.ICE.gas", worksheet.lever_graphs_b2182); end
  def test_lever_graphs_k2182; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2182, 0.002); end
  def test_lever_graphs_b2183; assert_equal("car.passenger.urban.PH", worksheet.lever_graphs_b2183); end
  def test_lever_graphs_k2183; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2183, 0.002); end
  def test_lever_graphs_b2184; assert_equal("car.passenger.urban.EV", worksheet.lever_graphs_b2184); end
  def test_lever_graphs_k2184; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2184, 0.002); end
  def test_lever_graphs_b2185; assert_equal("car.passenger.urban.H2", worksheet.lever_graphs_b2185); end
  def test_lever_graphs_k2185; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2185, 0.002); end
  def test_lever_graphs_b2186; assert_equal("bus.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2186); end
  def test_lever_graphs_k2186; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2186, 0.002); end
  def test_lever_graphs_b2187; assert_equal("bus.passenger.urban.ICE.gas", worksheet.lever_graphs_b2187); end
  def test_lever_graphs_k2187; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2187, 0.002); end
  def test_lever_graphs_b2188; assert_equal("bus.passenger.urban.PH", worksheet.lever_graphs_b2188); end
  def test_lever_graphs_k2188; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2188, 0.002); end
  def test_lever_graphs_b2189; assert_equal("bus.passenger.urban.EV", worksheet.lever_graphs_b2189); end
  def test_lever_graphs_k2189; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2189, 0.002); end
  def test_lever_graphs_b2190; assert_equal("bus.passenger.urban.H2", worksheet.lever_graphs_b2190); end
  def test_lever_graphs_k2190; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2190, 0.002); end
  def test_lever_graphs_b2191; assert_equal("train.passenger.urban.fuel", worksheet.lever_graphs_b2191); end
  def test_lever_graphs_k2191; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2191, 0.002); end
  def test_lever_graphs_b2192; assert_equal("train.passenger.urban.elec", worksheet.lever_graphs_b2192); end
  def test_lever_graphs_k2192; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2192, 0.002); end
  def test_lever_graphs_b2193; assert_equal("walk.passenger.rural", worksheet.lever_graphs_b2193); end
  def test_lever_graphs_k2193; assert_in_delta(0.0, (worksheet.lever_graphs_k2193||0), 0.002); end
  def test_lever_graphs_b2194; assert_equal("bike.passenger.rural", worksheet.lever_graphs_b2194); end
  def test_lever_graphs_k2194; assert_in_delta(0.0, (worksheet.lever_graphs_k2194||0), 0.002); end
  def test_lever_graphs_b2195; assert_equal("motorbike.passenger.rural.fuel", worksheet.lever_graphs_b2195); end
  def test_lever_graphs_k2195; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2195, 0.002); end
  def test_lever_graphs_b2196; assert_equal("motorbike.passenger.rural.elec", worksheet.lever_graphs_b2196); end
  def test_lever_graphs_k2196; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2196, 0.002); end
  def test_lever_graphs_b2197; assert_equal("car.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2197); end
  def test_lever_graphs_k2197; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2197, 0.002); end
  def test_lever_graphs_b2198; assert_equal("car.passenger.rural.ICE.gas", worksheet.lever_graphs_b2198); end
  def test_lever_graphs_k2198; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2198, 0.002); end
  def test_lever_graphs_b2199; assert_equal("car.passenger.rural.PH", worksheet.lever_graphs_b2199); end
  def test_lever_graphs_k2199; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2199, 0.002); end
  def test_lever_graphs_b2200; assert_equal("car.passenger.rural.EV", worksheet.lever_graphs_b2200); end
  def test_lever_graphs_k2200; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2200, 0.002); end
  def test_lever_graphs_b2201; assert_equal("car.passenger.rural.H2", worksheet.lever_graphs_b2201); end
  def test_lever_graphs_k2201; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2201, 0.002); end
  def test_lever_graphs_b2202; assert_equal("bus.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2202); end
  def test_lever_graphs_k2202; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2202, 0.002); end
  def test_lever_graphs_b2203; assert_equal("bus.passenger.rural.ICE.gas", worksheet.lever_graphs_b2203); end
  def test_lever_graphs_k2203; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2203, 0.002); end
  def test_lever_graphs_b2204; assert_equal("bus.passenger.rural.PH", worksheet.lever_graphs_b2204); end
  def test_lever_graphs_k2204; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2204, 0.002); end
  def test_lever_graphs_b2205; assert_equal("bus.passenger.rural.EV", worksheet.lever_graphs_b2205); end
  def test_lever_graphs_k2205; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2205, 0.002); end
  def test_lever_graphs_b2206; assert_equal("bus.passenger.rural.H2", worksheet.lever_graphs_b2206); end
  def test_lever_graphs_k2206; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2206, 0.002); end
  def test_lever_graphs_b2207; assert_equal("train.passenger.rural.fuel", worksheet.lever_graphs_b2207); end
  def test_lever_graphs_k2207; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2207, 0.002); end
  def test_lever_graphs_b2208; assert_equal("train.passenger.rural.elec", worksheet.lever_graphs_b2208); end
  def test_lever_graphs_k2208; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2208, 0.002); end
  def test_lever_graphs_b2209; assert_equal("plane.passenger.international.short.fuel", worksheet.lever_graphs_b2209); end
  def test_lever_graphs_k2209; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2209, 0.002); end
  def test_lever_graphs_b2210; assert_equal("plane.passenger.international.short.H2", worksheet.lever_graphs_b2210); end
  def test_lever_graphs_k2210; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2210, 0.002); end
  def test_lever_graphs_b2211; assert_equal("plane.passenger.international.long.fuel", worksheet.lever_graphs_b2211); end
  def test_lever_graphs_k2211; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2211, 0.002); end
  def test_lever_graphs_b2212; assert_equal("plane.passenger.international.long.H2", worksheet.lever_graphs_b2212); end
  def test_lever_graphs_k2212; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2212, 0.002); end
  def test_lever_graphs_b2213; assert_equal("train.passenger.international.fuel", worksheet.lever_graphs_b2213); end
  def test_lever_graphs_k2213; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2213, 0.002); end
  def test_lever_graphs_b2214; assert_equal("train.passenger.international.elec", worksheet.lever_graphs_b2214); end
  def test_lever_graphs_k2214; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2214, 0.002); end
  def test_lever_graphs_b2248; assert_equal("Technology code", worksheet.lever_graphs_b2248); end
  def test_lever_graphs_c2248; assert_equal("1975", worksheet.lever_graphs_c2248); end
  def test_lever_graphs_d2248; assert_equal("1980", worksheet.lever_graphs_d2248); end
  def test_lever_graphs_e2248; assert_equal("1985", worksheet.lever_graphs_e2248); end
  def test_lever_graphs_f2248; assert_equal("1990", worksheet.lever_graphs_f2248); end
  def test_lever_graphs_g2248; assert_equal("1995", worksheet.lever_graphs_g2248); end
  def test_lever_graphs_h2248; assert_equal("2000", worksheet.lever_graphs_h2248); end
  def test_lever_graphs_i2248; assert_equal("2005", worksheet.lever_graphs_i2248); end
  def test_lever_graphs_j2248; assert_equal("2010", worksheet.lever_graphs_j2248); end
  def test_lever_graphs_k2248; assert_equal("2011", worksheet.lever_graphs_k2248); end
  def test_lever_graphs_b2249; assert_equal("light.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2249); end
  def test_lever_graphs_k2249; assert_in_epsilon(9.96, worksheet.lever_graphs_k2249, 0.002); end
  def test_lever_graphs_b2250; assert_equal("light.truck.domestic.ICE.gas", worksheet.lever_graphs_b2250); end
  def test_lever_graphs_k2250; assert_in_epsilon(9.96, worksheet.lever_graphs_k2250, 0.002); end
  def test_lever_graphs_b2251; assert_equal("light.truck.domestic.PH", worksheet.lever_graphs_b2251); end
  def test_lever_graphs_k2251; assert_in_epsilon(9.060000000000002, worksheet.lever_graphs_k2251, 0.002); end
  def test_lever_graphs_b2252; assert_equal("light.truck.domestic.EV", worksheet.lever_graphs_b2252); end
  def test_lever_graphs_k2252; assert_in_epsilon(3.3999999999999995, worksheet.lever_graphs_k2252, 0.002); end
  def test_lever_graphs_b2253; assert_equal("light.truck.domestic.H2", worksheet.lever_graphs_b2253); end
  def test_lever_graphs_k2253; assert_in_epsilon(7.62, worksheet.lever_graphs_k2253, 0.002); end
  def test_lever_graphs_b2254; assert_equal("heavy.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2254); end
  def test_lever_graphs_k2254; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2254, 0.002); end
  def test_lever_graphs_b2255; assert_equal("heavy.truck.domestic.ICE.gas", worksheet.lever_graphs_b2255); end
  def test_lever_graphs_k2255; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2255, 0.002); end
  def test_lever_graphs_b2256; assert_equal("heavy.truck.domestic.PH", worksheet.lever_graphs_b2256); end
  def test_lever_graphs_k2256; assert_in_epsilon(28.57, worksheet.lever_graphs_k2256, 0.002); end
  def test_lever_graphs_b2257; assert_equal("heavy.truck.domestic.EV", worksheet.lever_graphs_b2257); end
  def test_lever_graphs_k2257; assert_in_epsilon(12.37, worksheet.lever_graphs_k2257, 0.002); end
  def test_lever_graphs_b2258; assert_equal("heavy.truck.domestic.H2", worksheet.lever_graphs_b2258); end
  def test_lever_graphs_k2258; assert_in_epsilon(26.35, worksheet.lever_graphs_k2258, 0.002); end
  def test_lever_graphs_b2259; assert_equal("train.freight.domestic.fuel", worksheet.lever_graphs_b2259); end
  def test_lever_graphs_k2259; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2259, 0.002); end
  def test_lever_graphs_b2260; assert_equal("train.freight.domestic.elec", worksheet.lever_graphs_b2260); end
  def test_lever_graphs_k2260; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2260, 0.002); end
  def test_lever_graphs_b2261; assert_equal("ship.freight.domestic.fuel", worksheet.lever_graphs_b2261); end
  def test_lever_graphs_k2261; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2261, 0.002); end
  def test_lever_graphs_b2262; assert_equal("ship.freight.domestic.H2", worksheet.lever_graphs_b2262); end
  def test_lever_graphs_k2262; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2262, 0.002); end
  def test_lever_graphs_b2263; assert_equal("heavy.truck.international.ICE.liquid", worksheet.lever_graphs_b2263); end
  def test_lever_graphs_k2263; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2263, 0.002); end
  def test_lever_graphs_b2264; assert_equal("heavy.truck.international.ICE.gas", worksheet.lever_graphs_b2264); end
  def test_lever_graphs_k2264; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2264, 0.002); end
  def test_lever_graphs_b2265; assert_equal("heavy.truck.international.PH", worksheet.lever_graphs_b2265); end
  def test_lever_graphs_k2265; assert_in_epsilon(28.57, worksheet.lever_graphs_k2265, 0.002); end
  def test_lever_graphs_b2266; assert_equal("heavy.truck.international.EV", worksheet.lever_graphs_b2266); end
  def test_lever_graphs_k2266; assert_in_epsilon(12.37, worksheet.lever_graphs_k2266, 0.002); end
  def test_lever_graphs_b2267; assert_equal("heavy.truck.international.H2", worksheet.lever_graphs_b2267); end
  def test_lever_graphs_k2267; assert_in_epsilon(26.35, worksheet.lever_graphs_k2267, 0.002); end
  def test_lever_graphs_b2268; assert_equal("train.freight.international.fuel", worksheet.lever_graphs_b2268); end
  def test_lever_graphs_k2268; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2268, 0.002); end
  def test_lever_graphs_b2269; assert_equal("train.freight.international.elec", worksheet.lever_graphs_b2269); end
  def test_lever_graphs_k2269; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2269, 0.002); end
  def test_lever_graphs_b2270; assert_equal("ship.freight.international.fuel", worksheet.lever_graphs_b2270); end
  def test_lever_graphs_k2270; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2270, 0.002); end
  def test_lever_graphs_b2271; assert_equal("ship.freight.international.H2", worksheet.lever_graphs_b2271); end
  def test_lever_graphs_k2271; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2271, 0.002); end
  def test_lever_graphs_b2272; assert_equal("plane.freight.international.fuel", worksheet.lever_graphs_b2272); end
  def test_lever_graphs_k2272; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2272, 0.002); end
  def test_lever_graphs_b2273; assert_equal("plane.freight.international.H2", worksheet.lever_graphs_b2273); end
  def test_lever_graphs_k2273; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2273, 0.002); end
  def test_lever_graphs_d3245; assert_equal("Type of travel", worksheet.lever_graphs_d3245); end
  def test_lever_graphs_e3245; assert_equal("Level", worksheet.lever_graphs_e3245); end
  def test_lever_graphs_f3245; assert_equal("…", worksheet.lever_graphs_f3245); end
  def test_lever_graphs_g3245; assert_equal("….", worksheet.lever_graphs_g3245); end
  def test_lever_graphs_h3245; assert_equal("Type of city", worksheet.lever_graphs_h3245); end
  def test_lever_graphs_i3245; assert_equal("2011", worksheet.lever_graphs_i3245); end
  def test_lever_graphs_j3245; assert_equal("2015", worksheet.lever_graphs_j3245); end
  def test_lever_graphs_k3245; assert_equal("2020", worksheet.lever_graphs_k3245); end
  def test_lever_graphs_l3245; assert_equal("2025", worksheet.lever_graphs_l3245); end
  def test_lever_graphs_m3245; assert_equal("2030", worksheet.lever_graphs_m3245); end
  def test_lever_graphs_n3245; assert_equal("2035", worksheet.lever_graphs_n3245); end
  def test_lever_graphs_o3245; assert_equal("2040", worksheet.lever_graphs_o3245); end
  def test_lever_graphs_p3245; assert_equal("2045", worksheet.lever_graphs_p3245); end
  def test_lever_graphs_q3245; assert_equal("2050", worksheet.lever_graphs_q3245); end
  def test_lever_graphs_d3246; assert_equal("Urban", worksheet.lever_graphs_d3246); end
  def test_lever_graphs_e3246; assert_in_delta(1.0, worksheet.lever_graphs_e3246, 0.002); end
  def test_lever_graphs_h3246; assert_equal("Automobile city", worksheet.lever_graphs_h3246); end
  def test_lever_graphs_i3246; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3246, 0.002); end
  def test_lever_graphs_j3246; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_j3246, 0.002); end
  def test_lever_graphs_k3246; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_k3246, 0.002); end
  def test_lever_graphs_l3246; assert_in_epsilon(12600.851505289062, worksheet.lever_graphs_l3246, 0.002); end
  def test_lever_graphs_m3246; assert_in_epsilon(12721.015350442445, worksheet.lever_graphs_m3246, 0.002); end
  def test_lever_graphs_n3246; assert_in_epsilon(12842.325098289466, worksheet.lever_graphs_n3246, 0.002); end
  def test_lever_graphs_o3246; assert_in_epsilon(12964.791676351475, worksheet.lever_graphs_o3246, 0.002); end
  def test_lever_graphs_p3246; assert_in_epsilon(13088.426116356506, worksheet.lever_graphs_p3246, 0.002); end
  def test_lever_graphs_q3246; assert_in_epsilon(13101.519778890486, worksheet.lever_graphs_q3246, 0.002); end
  def test_lever_graphs_d3247; assert_equal("Urban", worksheet.lever_graphs_d3247); end
  def test_lever_graphs_e3247; assert_in_epsilon(2.0, worksheet.lever_graphs_e3247, 0.002); end
  def test_lever_graphs_h3247; assert_equal("Automobile city", worksheet.lever_graphs_h3247); end
  def test_lever_graphs_i3247; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3247, 0.002); end
  def test_lever_graphs_j3247; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_j3247, 0.002); end
  def test_lever_graphs_k3247; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_k3247, 0.002); end
  def test_lever_graphs_l3247; assert_in_epsilon(12420.058594095803, worksheet.lever_graphs_l3247, 0.002); end
  def test_lever_graphs_m3247; assert_in_epsilon(12538.498367556385, worksheet.lever_graphs_m3247, 0.002); end
  def test_lever_graphs_n3247; assert_in_epsilon(12658.067602672169, worksheet.lever_graphs_n3247, 0.002); end
  def test_lever_graphs_o3247; assert_in_epsilon(12778.777070179987, worksheet.lever_graphs_o3247, 0.002); end
  def test_lever_graphs_p3247; assert_in_epsilon(12651.499429280722, worksheet.lever_graphs_p3247, 0.002); end
  def test_lever_graphs_q3247; assert_in_epsilon(12525.489483856847, worksheet.lever_graphs_q3247, 0.002); end
  def test_lever_graphs_d3248; assert_equal("Urban", worksheet.lever_graphs_d3248); end
  def test_lever_graphs_e3248; assert_in_epsilon(3.0, worksheet.lever_graphs_e3248, 0.002); end
  def test_lever_graphs_h3248; assert_equal("Automobile city", worksheet.lever_graphs_h3248); end
  def test_lever_graphs_i3248; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3248, 0.002); end
  def test_lever_graphs_j3248; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_j3248, 0.002); end
  def test_lever_graphs_k3248; assert_in_epsilon(12180.784397392952, worksheet.lever_graphs_k3248, 0.002); end
  def test_lever_graphs_l3248; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_l3248, 0.002); end
  def test_lever_graphs_m3248; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_m3248, 0.002); end
  def test_lever_graphs_n3248; assert_in_epsilon(12150.180527616512, worksheet.lever_graphs_n3248, 0.002); end
  def test_lever_graphs_o3248; assert_in_epsilon(11969.018060318878, worksheet.lever_graphs_o3248, 0.002); end
  def test_lever_graphs_p3248; assert_in_epsilon(11731.54509713868, worksheet.lever_graphs_p3248, 0.002); end
  def test_lever_graphs_q3248; assert_in_epsilon(11441.174728177544, worksheet.lever_graphs_q3248, 0.002); end
  def test_lever_graphs_d3249; assert_equal("Urban", worksheet.lever_graphs_d3249); end
  def test_lever_graphs_e3249; assert_in_epsilon(4.0, worksheet.lever_graphs_e3249, 0.002); end
  def test_lever_graphs_h3249; assert_equal("Automobile city", worksheet.lever_graphs_h3249); end
  def test_lever_graphs_i3249; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3249, 0.002); end
  def test_lever_graphs_j3249; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_j3249, 0.002); end
  def test_lever_graphs_k3249; assert_in_epsilon(12132.274764133377, worksheet.lever_graphs_k3249, 0.002); end
  def test_lever_graphs_l3249; assert_in_epsilon(12193.057582085099, worksheet.lever_graphs_l3249, 0.002); end
  def test_lever_graphs_m3249; assert_in_epsilon(12132.214102880871, worksheet.lever_graphs_m3249, 0.002); end
  def test_lever_graphs_n3249; assert_in_epsilon(11951.319519819708, worksheet.lever_graphs_n3249, 0.002); end
  def test_lever_graphs_o3249; assert_in_epsilon(11714.197706987443, worksheet.lever_graphs_o3249, 0.002); end
  def test_lever_graphs_p3249; assert_in_epsilon(11424.256707562632, worksheet.lever_graphs_p3249, 0.002); end
  def test_lever_graphs_q3249; assert_in_epsilon(11085.617136296338, worksheet.lever_graphs_q3249, 0.002); end
  def test_lever_graphs_d3250; assert_equal("Urban", worksheet.lever_graphs_d3250); end
  def test_lever_graphs_e3250; assert_in_delta(1.0, worksheet.lever_graphs_e3250, 0.002); end
  def test_lever_graphs_h3250; assert_equal("Transit city", worksheet.lever_graphs_h3250); end
  def test_lever_graphs_i3250; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3250, 0.002); end
  def test_lever_graphs_j3250; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_j3250, 0.002); end
  def test_lever_graphs_k3250; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_k3250, 0.002); end
  def test_lever_graphs_l3250; assert_in_epsilon(10396.742824235202, worksheet.lever_graphs_l3250, 0.002); end
  def test_lever_graphs_m3250; assert_in_epsilon(10792.512873967888, worksheet.lever_graphs_m3250, 0.002); end
  def test_lever_graphs_n3250; assert_in_epsilon(11203.348597144019, worksheet.lever_graphs_n3250, 0.002); end
  def test_lever_graphs_o3250; assert_in_epsilon(11486.247188453117, worksheet.lever_graphs_o3250, 0.002); end
  def test_lever_graphs_p3250; assert_in_epsilon(11776.28932370095, worksheet.lever_graphs_p3250, 0.002); end
  def test_lever_graphs_q3250; assert_in_epsilon(11894.524211556534, worksheet.lever_graphs_q3250, 0.002); end
  def test_lever_graphs_d3251; assert_equal("Urban", worksheet.lever_graphs_d3251); end
  def test_lever_graphs_e3251; assert_in_epsilon(2.0, worksheet.lever_graphs_e3251, 0.002); end
  def test_lever_graphs_h3251; assert_equal("Transit city", worksheet.lever_graphs_h3251); end
  def test_lever_graphs_i3251; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3251, 0.002); end
  def test_lever_graphs_j3251; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_j3251, 0.002); end
  def test_lever_graphs_k3251; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_k3251, 0.002); end
  def test_lever_graphs_l3251; assert_in_epsilon(10167.63653197357, worksheet.lever_graphs_l3251, 0.002); end
  def test_lever_graphs_m3251; assert_in_epsilon(10554.685253284908, worksheet.lever_graphs_m3251, 0.002); end
  def test_lever_graphs_n3251; assert_in_epsilon(10821.204282303284, worksheet.lever_graphs_n3251, 0.002); end
  def test_lever_graphs_o3251; assert_in_epsilon(11094.453250786866, worksheet.lever_graphs_o3251, 0.002); end
  def test_lever_graphs_p3251; assert_in_epsilon(11205.842449868938, worksheet.lever_graphs_p3251, 0.002); end
  def test_lever_graphs_q3251; assert_in_epsilon(11217.052775552344, worksheet.lever_graphs_q3251, 0.002); end
  def test_lever_graphs_d3252; assert_equal("Urban", worksheet.lever_graphs_d3252); end
  def test_lever_graphs_e3252; assert_in_epsilon(3.0, worksheet.lever_graphs_e3252, 0.002); end
  def test_lever_graphs_h3252; assert_equal("Transit city", worksheet.lever_graphs_h3252); end
  def test_lever_graphs_i3252; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3252, 0.002); end
  def test_lever_graphs_j3252; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_j3252, 0.002); end
  def test_lever_graphs_k3252; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_k3252, 0.002); end
  def test_lever_graphs_l3252; assert_in_epsilon(10032.93015155032, worksheet.lever_graphs_l3252, 0.002); end
  def test_lever_graphs_m3252; assert_in_epsilon(10235.200457333296, worksheet.lever_graphs_m3252, 0.002); end
  def test_lever_graphs_n3252; assert_in_epsilon(10441.548662192965, worksheet.lever_graphs_n3252, 0.002); end
  def test_lever_graphs_o3252; assert_in_epsilon(10546.382646920933, worksheet.lever_graphs_o3252, 0.002); end
  def test_lever_graphs_p3252; assert_in_epsilon(10652.26917325068, worksheet.lever_graphs_p3252, 0.002); end
  def test_lever_graphs_q3252; assert_in_epsilon(10662.925704183865, worksheet.lever_graphs_q3252, 0.002); end
  def test_lever_graphs_d3253; assert_equal("Urban", worksheet.lever_graphs_d3253); end
  def test_lever_graphs_e3253; assert_in_epsilon(4.0, worksheet.lever_graphs_e3253, 0.002); end
  def test_lever_graphs_h3253; assert_equal("Transit city", worksheet.lever_graphs_h3253); end
  def test_lever_graphs_i3253; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3253, 0.002); end
  def test_lever_graphs_j3253; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_j3253, 0.002); end
  def test_lever_graphs_k3253; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_k3253, 0.002); end
  def test_lever_graphs_l3253; assert_in_epsilon(9943.563766289984, worksheet.lever_graphs_l3253, 0.002); end
  def test_lever_graphs_m3253; assert_in_epsilon(10144.032388437145, worksheet.lever_graphs_m3253, 0.002); end
  def test_lever_graphs_n3253; assert_in_epsilon(10245.879285951492, worksheet.lever_graphs_n3253, 0.002); end
  def test_lever_graphs_o3253; assert_in_epsilon(10297.211243684134, worksheet.lever_graphs_o3253, 0.002); end
  def test_lever_graphs_p3253; assert_in_epsilon(10322.980027696185, worksheet.lever_graphs_p3253, 0.002); end
  def test_lever_graphs_q3253; assert_in_epsilon(10333.307137741813, worksheet.lever_graphs_q3253, 0.002); end
  def test_lever_graphs_d3254; assert_equal("Urban", worksheet.lever_graphs_d3254); end
  def test_lever_graphs_e3254; assert_in_delta(1.0, worksheet.lever_graphs_e3254, 0.002); end
  def test_lever_graphs_h3254; assert_equal("Booming city", worksheet.lever_graphs_h3254); end
  def test_lever_graphs_i3254; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3254, 0.002); end
  def test_lever_graphs_j3254; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_j3254, 0.002); end
  def test_lever_graphs_k3254; assert_in_epsilon(11767.503863833266, worksheet.lever_graphs_k3254, 0.002); end
  def test_lever_graphs_l3254; assert_in_epsilon(12367.764825479344, worksheet.lever_graphs_l3254, 0.002); end
  def test_lever_graphs_m3254; assert_in_epsilon(12838.56524661241, worksheet.lever_graphs_m3254, 0.002); end
  def test_lever_graphs_n3254; assert_in_epsilon(13162.755107456558, worksheet.lever_graphs_n3254, 0.002); end
  def test_lever_graphs_o3254; assert_in_epsilon(13328.114277746601, worksheet.lever_graphs_o3254, 0.002); end
  def test_lever_graphs_p3254; assert_in_epsilon(13495.550798483095, worksheet.lever_graphs_p3254, 0.002); end
  def test_lever_graphs_q3254; assert_in_epsilon(13665.090766706016, worksheet.lever_graphs_q3254, 0.002); end
  def test_lever_graphs_d3255; assert_equal("Urban", worksheet.lever_graphs_d3255); end
  def test_lever_graphs_e3255; assert_in_epsilon(2.0, worksheet.lever_graphs_e3255, 0.002); end
  def test_lever_graphs_h3255; assert_equal("Booming city", worksheet.lever_graphs_h3255); end
  def test_lever_graphs_i3255; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3255, 0.002); end
  def test_lever_graphs_j3255; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_j3255, 0.002); end
  def test_lever_graphs_k3255; assert_in_epsilon(11204.57102372179, worksheet.lever_graphs_k3255, 0.002); end
  def test_lever_graphs_l3255; assert_in_epsilon(11776.116752990845, worksheet.lever_graphs_l3255, 0.002); end
  def test_lever_graphs_m3255; assert_in_epsilon(12224.395063975415, worksheet.lever_graphs_m3255, 0.002); end
  def test_lever_graphs_n3255; assert_in_epsilon(12533.07635807405, worksheet.lever_graphs_n3255, 0.002); end
  def test_lever_graphs_o3255; assert_in_epsilon(12690.525090564624, worksheet.lever_graphs_o3255, 0.002); end
  def test_lever_graphs_p3255; assert_in_epsilon(12754.104748237061, worksheet.lever_graphs_p3255, 0.002); end
  def test_lever_graphs_q3255; assert_in_epsilon(12818.002940630551, worksheet.lever_graphs_q3255, 0.002); end
  def test_lever_graphs_d3256; assert_equal("Urban", worksheet.lever_graphs_d3256); end
  def test_lever_graphs_e3256; assert_in_epsilon(3.0, worksheet.lever_graphs_e3256, 0.002); end
  def test_lever_graphs_h3256; assert_equal("Booming city", worksheet.lever_graphs_h3256); end
  def test_lever_graphs_i3256; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3256, 0.002); end
  def test_lever_graphs_j3256; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_j3256, 0.002); end
  def test_lever_graphs_k3256; assert_in_epsilon(10931.30196914609, worksheet.lever_graphs_k3256, 0.002); end
  def test_lever_graphs_l3256; assert_in_epsilon(11347.420939972917, worksheet.lever_graphs_l3256, 0.002); end
  def test_lever_graphs_m3256; assert_in_epsilon(11691.95322375925, worksheet.lever_graphs_m3256, 0.002); end
  def test_lever_graphs_n3256; assert_in_epsilon(11868.387959471223, worksheet.lever_graphs_n3256, 0.002); end
  def test_lever_graphs_o3256; assert_in_epsilon(11987.547525005202, worksheet.lever_graphs_o3256, 0.002); end
  def test_lever_graphs_p3256; assert_in_epsilon(12047.605258040896, worksheet.lever_graphs_p3256, 0.002); end
  def test_lever_graphs_q3256; assert_in_epsilon(12077.754405262413, worksheet.lever_graphs_q3256, 0.002); end
  def test_lever_graphs_d3257; assert_equal("Urban", worksheet.lever_graphs_d3257); end
  def test_lever_graphs_e3257; assert_in_epsilon(4.0, worksheet.lever_graphs_e3257, 0.002); end
  def test_lever_graphs_h3257; assert_equal("Booming city", worksheet.lever_graphs_h3257); end
  def test_lever_graphs_i3257; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3257, 0.002); end
  def test_lever_graphs_j3257; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_j3257, 0.002); end
  def test_lever_graphs_k3257; assert_in_epsilon(10796.681667214552, worksheet.lever_graphs_k3257, 0.002); end
  def test_lever_graphs_l3257; assert_in_epsilon(11069.311408937165, worksheet.lever_graphs_l3257, 0.002); end
  def test_lever_graphs_m3257; assert_in_epsilon(11264.385103519684, worksheet.lever_graphs_m3257, 0.002); end
  def test_lever_graphs_n3257; assert_in_epsilon(11405.895703643995, worksheet.lever_graphs_n3257, 0.002); end
  def test_lever_graphs_o3257; assert_in_epsilon(11463.039355235242, worksheet.lever_graphs_o3257, 0.002); end
  def test_lever_graphs_p3257; assert_in_epsilon(11474.506980723352, worksheet.lever_graphs_p3257, 0.002); end
  def test_lever_graphs_q3257; assert_in_epsilon(11485.98607842492, worksheet.lever_graphs_q3257, 0.002); end
  def test_lever_graphs_d3258; assert_equal("Rural", worksheet.lever_graphs_d3258); end
  def test_lever_graphs_e3258; assert_in_delta(1.0, worksheet.lever_graphs_e3258, 0.002); end
  def test_lever_graphs_h3258; assert_equal("Developed", worksheet.lever_graphs_h3258); end
  def test_lever_graphs_i3258; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3258, 0.002); end
  def test_lever_graphs_j3258; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_j3258, 0.002); end
  def test_lever_graphs_k3258; assert_in_epsilon(25126.063462143684, worksheet.lever_graphs_k3258, 0.002); end
  def test_lever_graphs_l3258; assert_in_epsilon(26316.35999020017, worksheet.lever_graphs_l3258, 0.002); end
  def test_lever_graphs_m3258; assert_in_epsilon(27563.044413114836, worksheet.lever_graphs_m3258, 0.002); end
  def test_lever_graphs_n3258; assert_in_epsilon(28868.787993561808, worksheet.lever_graphs_n3258, 0.002); end
  def test_lever_graphs_o3258; assert_in_epsilon(30236.388539891228, worksheet.lever_graphs_o3258, 0.002); end
  def test_lever_graphs_p3258; assert_in_epsilon(30999.895240592334, worksheet.lever_graphs_p3258, 0.002); end
  def test_lever_graphs_q3258; assert_in_epsilon(31782.68144225786, worksheet.lever_graphs_q3258, 0.002); end
  def test_lever_graphs_d3259; assert_equal("Rural", worksheet.lever_graphs_d3259); end
  def test_lever_graphs_e3259; assert_in_epsilon(2.0, worksheet.lever_graphs_e3259, 0.002); end
  def test_lever_graphs_h3259; assert_equal("Developed", worksheet.lever_graphs_h3259); end
  def test_lever_graphs_i3259; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3259, 0.002); end
  def test_lever_graphs_j3259; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_j3259, 0.002); end
  def test_lever_graphs_k3259; assert_in_epsilon(24902.81029151358, worksheet.lever_graphs_k3259, 0.002); end
  def test_lever_graphs_l3259; assert_in_epsilon(25850.778961526437, worksheet.lever_graphs_l3259, 0.002); end
  def test_lever_graphs_m3259; assert_in_epsilon(26834.833703304143, worksheet.lever_graphs_m3259, 0.002); end
  def test_lever_graphs_n3259; assert_in_epsilon(27856.34819576311, worksheet.lever_graphs_n3259, 0.002); end
  def test_lever_graphs_o3259; assert_in_epsilon(28206.297927970198, worksheet.lever_graphs_o3259, 0.002); end
  def test_lever_graphs_p3259; assert_in_epsilon(28560.64395843617, worksheet.lever_graphs_p3259, 0.002); end
  def test_lever_graphs_q3259; assert_in_epsilon(28919.441516345676, worksheet.lever_graphs_q3259, 0.002); end
  def test_lever_graphs_d3260; assert_equal("Rural", worksheet.lever_graphs_d3260); end
  def test_lever_graphs_e3260; assert_in_epsilon(3.0, worksheet.lever_graphs_e3260, 0.002); end
  def test_lever_graphs_h3260; assert_equal("Developed", worksheet.lever_graphs_h3260); end
  def test_lever_graphs_i3260; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3260, 0.002); end
  def test_lever_graphs_j3260; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_j3260, 0.002); end
  def test_lever_graphs_k3260; assert_in_epsilon(24595.371961101227, worksheet.lever_graphs_k3260, 0.002); end
  def test_lever_graphs_l3260; assert_in_epsilon(25216.43592427136, worksheet.lever_graphs_l3260, 0.002); end
  def test_lever_graphs_m3260; assert_in_epsilon(25533.22134556568, worksheet.lever_graphs_m3260, 0.002); end
  def test_lever_graphs_n3260; assert_in_epsilon(25853.98643327463, worksheet.lever_graphs_n3260, 0.002); end
  def test_lever_graphs_o3260; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_o3260, 0.002); end
  def test_lever_graphs_p3260; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_p3260, 0.002); end
  def test_lever_graphs_q3260; assert_in_epsilon(25853.695577236133, worksheet.lever_graphs_q3260, 0.002); end
  def test_lever_graphs_d3261; assert_equal("Rural", worksheet.lever_graphs_d3261); end
  def test_lever_graphs_e3261; assert_in_epsilon(4.0, worksheet.lever_graphs_e3261, 0.002); end
  def test_lever_graphs_h3261; assert_equal("Developed", worksheet.lever_graphs_h3261); end
  def test_lever_graphs_i3261; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3261, 0.002); end
  def test_lever_graphs_j3261; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_j3261, 0.002); end
  def test_lever_graphs_k3261; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_k3261, 0.002); end
  def test_lever_graphs_l3261; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_l3261, 0.002); end
  def test_lever_graphs_m3261; assert_in_epsilon(24228.349513908553, worksheet.lever_graphs_m3261, 0.002); end
  def test_lever_graphs_n3261; assert_in_epsilon(24047.18121332461, worksheet.lever_graphs_n3261, 0.002); end
  def test_lever_graphs_o3261; assert_in_epsilon(23867.367604818126, worksheet.lever_graphs_o3261, 0.002); end
  def test_lever_graphs_p3261; assert_in_epsilon(23688.89855863341, worksheet.lever_graphs_p3261, 0.002); end
  def test_lever_graphs_q3261; assert_in_epsilon(23511.764020760354, worksheet.lever_graphs_q3261, 0.002); end
  def test_lever_graphs_d3262; assert_equal("Rural", worksheet.lever_graphs_d3262); end
  def test_lever_graphs_e3262; assert_in_delta(1.0, worksheet.lever_graphs_e3262, 0.002); end
  def test_lever_graphs_h3262; assert_equal("Developing", worksheet.lever_graphs_h3262); end
  def test_lever_graphs_i3262; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3262, 0.002); end
  def test_lever_graphs_j3262; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_j3262, 0.002); end
  def test_lever_graphs_k3262; assert_in_epsilon(5126.373992430952, worksheet.lever_graphs_k3262, 0.002); end
  def test_lever_graphs_l3262; assert_in_epsilon(5729.633859682868, worksheet.lever_graphs_l3262, 0.002); end
  def test_lever_graphs_m3262; assert_in_epsilon(6403.883956671072, worksheet.lever_graphs_m3262, 0.002); end
  def test_lever_graphs_n3262; assert_in_epsilon(7070.405342480992, worksheet.lever_graphs_n3262, 0.002); end
  def test_lever_graphs_o3262; assert_in_epsilon(7806.298809475985, worksheet.lever_graphs_o3262, 0.002); end
  def test_lever_graphs_p3262; assert_in_epsilon(8618.78465958545, worksheet.lever_graphs_p3262, 0.002); end
  def test_lever_graphs_q3262; assert_in_epsilon(9515.834689562942, worksheet.lever_graphs_q3262, 0.002); end
  def test_lever_graphs_d3263; assert_equal("Rural", worksheet.lever_graphs_d3263); end
  def test_lever_graphs_e3263; assert_in_epsilon(2.0, worksheet.lever_graphs_e3263, 0.002); end
  def test_lever_graphs_h3263; assert_equal("Developing", worksheet.lever_graphs_h3263); end
  def test_lever_graphs_i3263; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3263, 0.002); end
  def test_lever_graphs_j3263; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_j3263, 0.002); end
  def test_lever_graphs_k3263; assert_in_epsilon(5126.373992430952, worksheet.lever_graphs_k3263, 0.002); end
  def test_lever_graphs_l3263; assert_in_epsilon(5659.931115066756, worksheet.lever_graphs_l3263, 0.002); end
  def test_lever_graphs_m3263; assert_in_epsilon(6249.021291579576, worksheet.lever_graphs_m3263, 0.002); end
  def test_lever_graphs_n3263; assert_in_epsilon(6731.97067735155, worksheet.lever_graphs_n3263, 0.002); end
  def test_lever_graphs_o3263; assert_in_epsilon(7252.244325329481, worksheet.lever_graphs_o3263, 0.002); end
  def test_lever_graphs_p3263; assert_in_epsilon(7812.726803938676, worksheet.lever_graphs_p3263, 0.002); end
  def test_lever_graphs_q3263; assert_in_epsilon(8416.525612601828, worksheet.lever_graphs_q3263, 0.002); end
  def test_lever_graphs_d3264; assert_equal("Rural", worksheet.lever_graphs_d3264); end
  def test_lever_graphs_e3264; assert_in_epsilon(3.0, worksheet.lever_graphs_e3264, 0.002); end
  def test_lever_graphs_h3264; assert_equal("Developing", worksheet.lever_graphs_h3264); end
  def test_lever_graphs_i3264; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3264, 0.002); end
  def test_lever_graphs_j3264; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_j3264, 0.002); end
  def test_lever_graphs_k3264; assert_in_epsilon(5002.554383626268, worksheet.lever_graphs_k3264, 0.002); end
  def test_lever_graphs_l3264; assert_in_epsilon(5389.171816042234, worksheet.lever_graphs_l3264, 0.002); end
  def test_lever_graphs_m3264; assert_in_epsilon(5805.668591606803, worksheet.lever_graphs_m3264, 0.002); end
  def test_lever_graphs_n3264; assert_in_epsilon(6254.353905591933, worksheet.lever_graphs_n3264, 0.002); end
  def test_lever_graphs_o3264; assert_in_epsilon(6737.715417125951, worksheet.lever_graphs_o3264, 0.002); end
  def test_lever_graphs_p3264; assert_in_epsilon(7081.4066181130875, worksheet.lever_graphs_p3264, 0.002); end
  def test_lever_graphs_q3264; assert_in_epsilon(7442.629524481507, worksheet.lever_graphs_q3264, 0.002); end
  def test_lever_graphs_d3265; assert_equal("Rural", worksheet.lever_graphs_d3265); end
  def test_lever_graphs_e3265; assert_in_epsilon(4.0, worksheet.lever_graphs_e3265, 0.002); end
  def test_lever_graphs_h3265; assert_equal("Developing", worksheet.lever_graphs_h3265); end
  def test_lever_graphs_i3265; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3265, 0.002); end
  def test_lever_graphs_j3265; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_j3265, 0.002); end
  def test_lever_graphs_k3265; assert_in_epsilon(5002.554383626268, worksheet.lever_graphs_k3265, 0.002); end
  def test_lever_graphs_l3265; assert_in_epsilon(5389.171816042234, worksheet.lever_graphs_l3265, 0.002); end
  def test_lever_graphs_m3265; assert_in_epsilon(5805.668591606803, worksheet.lever_graphs_m3265, 0.002); end
  def test_lever_graphs_n3265; assert_in_epsilon(6254.353905591933, worksheet.lever_graphs_n3265, 0.002); end
  def test_lever_graphs_o3265; assert_in_epsilon(6573.388811659307, worksheet.lever_graphs_o3265, 0.002); end
  def test_lever_graphs_p3265; assert_in_epsilon(6739.375116452095, worksheet.lever_graphs_p3265, 0.002); end
  def test_lever_graphs_q3265; assert_in_epsilon(6909.552783443009, worksheet.lever_graphs_q3265, 0.002); end
  def test_lever_graphs_d3266; assert_equal("International", worksheet.lever_graphs_d3266); end
  def test_lever_graphs_e3266; assert_in_delta(1.0, worksheet.lever_graphs_e3266, 0.002); end
  def test_lever_graphs_h3266; assert_equal("International slow growth", worksheet.lever_graphs_h3266); end
  def test_lever_graphs_i3266; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3266, 0.002); end
  def test_lever_graphs_j3266; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3266, 0.002); end
  def test_lever_graphs_k3266; assert_in_epsilon(3850.7126100605683, worksheet.lever_graphs_k3266, 0.002); end
  def test_lever_graphs_l3266; assert_in_epsilon(4255.859523652149, worksheet.lever_graphs_l3266, 0.002); end
  def test_lever_graphs_m3266; assert_in_epsilon(4703.63335808013, worksheet.lever_graphs_m3266, 0.002); end
  def test_lever_graphs_n3266; assert_in_epsilon(5198.519040463629, worksheet.lever_graphs_n3266, 0.002); end
  def test_lever_graphs_o3266; assert_in_epsilon(5745.473372757406, worksheet.lever_graphs_o3266, 0.002); end
  def test_lever_graphs_p3266; assert_in_epsilon(6349.97467935028, worksheet.lever_graphs_p3266, 0.002); end
  def test_lever_graphs_q3266; assert_in_epsilon(7018.077678260653, worksheet.lever_graphs_q3266, 0.002); end
  def test_lever_graphs_d3267; assert_equal("International", worksheet.lever_graphs_d3267); end
  def test_lever_graphs_e3267; assert_in_epsilon(2.0, worksheet.lever_graphs_e3267, 0.002); end
  def test_lever_graphs_h3267; assert_equal("International slow growth", worksheet.lever_graphs_h3267); end
  def test_lever_graphs_i3267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3267, 0.002); end
  def test_lever_graphs_j3267; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3267, 0.002); end
  def test_lever_graphs_k3267; assert_in_epsilon(3735.420476881267, worksheet.lever_graphs_k3267, 0.002); end
  def test_lever_graphs_l3267; assert_in_epsilon(4004.829768603747, worksheet.lever_graphs_l3267, 0.002); end
  def test_lever_graphs_m3267; assert_in_epsilon(4293.6696349872645, worksheet.lever_graphs_m3267, 0.002); end
  def test_lever_graphs_n3267; assert_in_epsilon(4603.341465082821, worksheet.lever_graphs_n3267, 0.002); end
  def test_lever_graphs_o3267; assert_in_epsilon(4935.347720159124, worksheet.lever_graphs_o3267, 0.002); end
  def test_lever_graphs_p3267; assert_in_epsilon(5291.299223322255, worksheet.lever_graphs_p3267, 0.002); end
  def test_lever_graphs_q3267; assert_in_epsilon(5672.922974883723, worksheet.lever_graphs_q3267, 0.002); end
  def test_lever_graphs_d3268; assert_equal("International", worksheet.lever_graphs_d3268); end
  def test_lever_graphs_e3268; assert_in_epsilon(3.0, worksheet.lever_graphs_e3268, 0.002); end
  def test_lever_graphs_h3268; assert_equal("International slow growth", worksheet.lever_graphs_h3268); end
  def test_lever_graphs_i3268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3268, 0.002); end
  def test_lever_graphs_j3268; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3268, 0.002); end
  def test_lever_graphs_k3268; assert_in_epsilon(3580.4299416660083, worksheet.lever_graphs_k3268, 0.002); end
  def test_lever_graphs_l3268; assert_in_epsilon(3679.3866707142247, worksheet.lever_graphs_l3268, 0.002); end
  def test_lever_graphs_m3268; assert_in_epsilon(3781.078388125142, worksheet.lever_graphs_m3268, 0.002); end
  def test_lever_graphs_n3268; assert_in_epsilon(3885.5806841230533, worksheet.lever_graphs_n3268, 0.002); end
  def test_lever_graphs_o3268; assert_in_epsilon(3992.9712381118948, worksheet.lever_graphs_o3268, 0.002); end
  def test_lever_graphs_p3268; assert_in_epsilon(4103.329876416461, worksheet.lever_graphs_p3268, 0.002); end
  def test_lever_graphs_q3268; assert_in_epsilon(4216.73863161949, worksheet.lever_graphs_q3268, 0.002); end
  def test_lever_graphs_d3269; assert_equal("International", worksheet.lever_graphs_d3269); end
  def test_lever_graphs_e3269; assert_in_epsilon(4.0, worksheet.lever_graphs_e3269, 0.002); end
  def test_lever_graphs_h3269; assert_equal("International slow growth", worksheet.lever_graphs_h3269); end
  def test_lever_graphs_i3269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3269, 0.002); end
  def test_lever_graphs_j3269; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3269, 0.002); end
  def test_lever_graphs_k3269; assert_in_epsilon(3339.573235999637, worksheet.lever_graphs_k3269, 0.002); end
  def test_lever_graphs_l3269; assert_in_epsilon(3201.009874466012, worksheet.lever_graphs_l3269, 0.002); end
  def test_lever_graphs_m3269; assert_in_epsilon(3068.1956921845535, worksheet.lever_graphs_m3269, 0.002); end
  def test_lever_graphs_n3269; assert_in_epsilon(2940.8921480163353, worksheet.lever_graphs_n3269, 0.002); end
  def test_lever_graphs_o3269; assert_in_epsilon(2818.870598213428, worksheet.lever_graphs_o3269, 0.002); end
  def test_lever_graphs_p3269; assert_in_epsilon(2701.9118857629023, worksheet.lever_graphs_p3269, 0.002); end
  def test_lever_graphs_q3269; assert_in_epsilon(2589.8059467695034, worksheet.lever_graphs_q3269, 0.002); end
  def test_lever_graphs_d3270; assert_equal("International", worksheet.lever_graphs_d3270); end
  def test_lever_graphs_e3270; assert_in_delta(1.0, worksheet.lever_graphs_e3270, 0.002); end
  def test_lever_graphs_h3270; assert_equal("International fast growth", worksheet.lever_graphs_h3270); end
  def test_lever_graphs_i3270; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3270, 0.002); end
  def test_lever_graphs_j3270; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3270, 0.002); end
  def test_lever_graphs_k3270; assert_in_epsilon(373.2108483170911, worksheet.lever_graphs_k3270, 0.002); end
  def test_lever_graphs_l3270; assert_in_epsilon(484.5581698391798, worksheet.lever_graphs_l3270, 0.002); end
  def test_lever_graphs_m3270; assert_in_epsilon(629.1259244383089, worksheet.lever_graphs_m3270, 0.002); end
  def test_lever_graphs_n3270; assert_in_epsilon(816.8254162997989, worksheet.lever_graphs_n3270, 0.002); end
  def test_lever_graphs_o3270; assert_in_epsilon(1060.5249836255393, worksheet.lever_graphs_o3270, 0.002); end
  def test_lever_graphs_p3270; assert_in_epsilon(1376.9322286626152, worksheet.lever_graphs_p3270, 0.002); end
  def test_lever_graphs_q3270; assert_in_epsilon(1787.7394607416759, worksheet.lever_graphs_q3270, 0.002); end
  def test_lever_graphs_d3271; assert_equal("International", worksheet.lever_graphs_d3271); end
  def test_lever_graphs_e3271; assert_in_epsilon(2.0, worksheet.lever_graphs_e3271, 0.002); end
  def test_lever_graphs_h3271; assert_equal("International fast growth", worksheet.lever_graphs_h3271); end
  def test_lever_graphs_i3271; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3271, 0.002); end
  def test_lever_graphs_j3271; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3271, 0.002); end
  def test_lever_graphs_k3271; assert_in_epsilon(353.28137511784706, worksheet.lever_graphs_k3271, 0.002); end
  def test_lever_graphs_l3271; assert_in_epsilon(434.189069830633, worksheet.lever_graphs_l3271, 0.002); end
  def test_lever_graphs_m3271; assert_in_epsilon(533.6260602402377, worksheet.lever_graphs_m3271, 0.002); end
  def test_lever_graphs_n3271; assert_in_epsilon(655.8358833827733, worksheet.lever_graphs_n3271, 0.002); end
  def test_lever_graphs_o3271; assert_in_epsilon(806.0339214670718, worksheet.lever_graphs_o3271, 0.002); end
  def test_lever_graphs_p3271; assert_in_epsilon(990.6299716394122, worksheet.lever_graphs_p3271, 0.002); end
  def test_lever_graphs_q3271; assert_in_epsilon(1217.5017881680963, worksheet.lever_graphs_q3271, 0.002); end
  def test_lever_graphs_d3272; assert_equal("International", worksheet.lever_graphs_d3272); end
  def test_lever_graphs_e3272; assert_in_epsilon(3.0, worksheet.lever_graphs_e3272, 0.002); end
  def test_lever_graphs_h3272; assert_equal("International fast growth", worksheet.lever_graphs_h3272); end
  def test_lever_graphs_i3272; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3272, 0.002); end
  def test_lever_graphs_j3272; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3272, 0.002); end
  def test_lever_graphs_k3272; assert_in_epsilon(329.7444385185951, worksheet.lever_graphs_k3272, 0.002); end
  def test_lever_graphs_l3272; assert_in_epsilon(378.26169211608646, worksheet.lever_graphs_l3272, 0.002); end
  def test_lever_graphs_m3272; assert_in_epsilon(433.9175767916894, worksheet.lever_graphs_m3272, 0.002); end
  def test_lever_graphs_n3272; assert_in_epsilon(497.76244164579106, worksheet.lever_graphs_n3272, 0.002); end
  def test_lever_graphs_o3272; assert_in_epsilon(571.0011798672197, worksheet.lever_graphs_o3272, 0.002); end
  def test_lever_graphs_p3272; assert_in_epsilon(655.0159677209424, worksheet.lever_graphs_p3272, 0.002); end
  def test_lever_graphs_q3272; assert_in_epsilon(751.3923492577945, worksheet.lever_graphs_q3272, 0.002); end
  def test_lever_graphs_d3273; assert_equal("International", worksheet.lever_graphs_d3273); end
  def test_lever_graphs_e3273; assert_in_epsilon(4.0, worksheet.lever_graphs_e3273, 0.002); end
  def test_lever_graphs_h3273; assert_equal("International fast growth", worksheet.lever_graphs_h3273); end
  def test_lever_graphs_i3273; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3273, 0.002); end
  def test_lever_graphs_j3273; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3273, 0.002); end
  def test_lever_graphs_k3273; assert_in_epsilon(308.3096749216857, worksheet.lever_graphs_k3273, 0.002); end
  def test_lever_graphs_l3273; assert_in_epsilon(330.6828780235829, worksheet.lever_graphs_l3273, 0.002); end
  def test_lever_graphs_m3273; assert_in_epsilon(354.6796442431989, worksheet.lever_graphs_m3273, 0.002); end
  def test_lever_graphs_n3273; assert_in_epsilon(380.41779118515706, worksheet.lever_graphs_n3273, 0.002); end
  def test_lever_graphs_o3273; assert_in_epsilon(408.02368616046897, worksheet.lever_graphs_o3273, 0.002); end
  def test_lever_graphs_p3273; assert_in_epsilon(437.63286661571004, worksheet.lever_graphs_p3273, 0.002); end
  def test_lever_graphs_q3273; assert_in_epsilon(469.3907055850704, worksheet.lever_graphs_q3273, 0.002); end
  def test_lever_graphs_d3215; assert_equal("Type of travel", worksheet.lever_graphs_d3215); end
  def test_lever_graphs_e3215; assert_equal("Level", worksheet.lever_graphs_e3215); end
  def test_lever_graphs_f3215; assert_equal("..", worksheet.lever_graphs_f3215); end
  def test_lever_graphs_g3215; assert_equal("…", worksheet.lever_graphs_g3215); end
  def test_lever_graphs_h3215; assert_equal("Type of city", worksheet.lever_graphs_h3215); end
  def test_lever_graphs_i3215; assert_equal("2011", worksheet.lever_graphs_i3215); end
  def test_lever_graphs_j3215; assert_equal("2015", worksheet.lever_graphs_j3215); end
  def test_lever_graphs_k3215; assert_equal("2020", worksheet.lever_graphs_k3215); end
  def test_lever_graphs_l3215; assert_equal("2025", worksheet.lever_graphs_l3215); end
  def test_lever_graphs_m3215; assert_equal("2030", worksheet.lever_graphs_m3215); end
  def test_lever_graphs_n3215; assert_equal("2035", worksheet.lever_graphs_n3215); end
  def test_lever_graphs_o3215; assert_equal("2040", worksheet.lever_graphs_o3215); end
  def test_lever_graphs_p3215; assert_equal("2045", worksheet.lever_graphs_p3215); end
  def test_lever_graphs_q3215; assert_equal("2050", worksheet.lever_graphs_q3215); end
  def test_lever_graphs_d3216; assert_equal("Urban", worksheet.lever_graphs_d3216); end
  def test_lever_graphs_e3216; assert_in_delta(1.0, worksheet.lever_graphs_e3216, 0.002); end
  def test_lever_graphs_h3216; assert_equal("Automobile city", worksheet.lever_graphs_h3216); end
  def test_lever_graphs_i3216; assert_in_delta(0.0, (worksheet.lever_graphs_i3216||0), 0.002); end
  def test_lever_graphs_j3216; assert_in_delta(0.0058, worksheet.lever_graphs_j3216, 0.002); end
  def test_lever_graphs_k3216; assert_in_delta(0.0048, worksheet.lever_graphs_k3216, 0.002); end
  def test_lever_graphs_l3216; assert_in_delta(0.0048, worksheet.lever_graphs_l3216, 0.002); end
  def test_lever_graphs_m3216; assert_in_delta(0.0019, worksheet.lever_graphs_m3216, 0.002); end
  def test_lever_graphs_n3216; assert_in_delta(0.0019, worksheet.lever_graphs_n3216, 0.002); end
  def test_lever_graphs_o3216; assert_in_delta(0.0019, worksheet.lever_graphs_o3216, 0.002); end
  def test_lever_graphs_p3216; assert_in_delta(0.0019, worksheet.lever_graphs_p3216, 0.002); end
  def test_lever_graphs_q3216; assert_in_delta(0.0002, worksheet.lever_graphs_q3216, 0.002); end
  def test_lever_graphs_d3217; assert_equal("Urban", worksheet.lever_graphs_d3217); end
  def test_lever_graphs_e3217; assert_in_epsilon(2.0, worksheet.lever_graphs_e3217, 0.002); end
  def test_lever_graphs_h3217; assert_equal("Automobile city", worksheet.lever_graphs_h3217); end
  def test_lever_graphs_i3217; assert_in_delta(0.0, (worksheet.lever_graphs_i3217||0), 0.002); end
  def test_lever_graphs_j3217; assert_in_delta(0.0058, worksheet.lever_graphs_j3217, 0.002); end
  def test_lever_graphs_k3217; assert_in_delta(0.0048, worksheet.lever_graphs_k3217, 0.002); end
  def test_lever_graphs_l3217; assert_in_delta(0.0019, worksheet.lever_graphs_l3217, 0.002); end
  def test_lever_graphs_m3217; assert_in_delta(0.0019, worksheet.lever_graphs_m3217, 0.002); end
  def test_lever_graphs_n3217; assert_in_delta(0.0019, worksheet.lever_graphs_n3217, 0.002); end
  def test_lever_graphs_o3217; assert_in_delta(0.0019, worksheet.lever_graphs_o3217, 0.002); end
  def test_lever_graphs_p3217; assert_in_delta(-0.002, worksheet.lever_graphs_p3217, 0.002); end
  def test_lever_graphs_q3217; assert_in_delta(-0.002, worksheet.lever_graphs_q3217, 0.002); end
  def test_lever_graphs_d3218; assert_equal("Urban", worksheet.lever_graphs_d3218); end
  def test_lever_graphs_e3218; assert_in_epsilon(3.0, worksheet.lever_graphs_e3218, 0.002); end
  def test_lever_graphs_h3218; assert_equal("Automobile city", worksheet.lever_graphs_h3218); end
  def test_lever_graphs_i3218; assert_in_delta(0.0, (worksheet.lever_graphs_i3218||0), 0.002); end
  def test_lever_graphs_j3218; assert_in_delta(0.0058, worksheet.lever_graphs_j3218, 0.002); end
  def test_lever_graphs_k3218; assert_in_delta(0.0028, worksheet.lever_graphs_k3218, 0.002); end
  def test_lever_graphs_l3218; assert_in_delta(0.0015, worksheet.lever_graphs_l3218, 0.002); end
  def test_lever_graphs_m3218; assert_in_delta(0.0, (worksheet.lever_graphs_m3218||0), 0.002); end
  def test_lever_graphs_n3218; assert_in_delta(-0.002, worksheet.lever_graphs_n3218, 0.002); end
  def test_lever_graphs_o3218; assert_in_delta(-0.003, worksheet.lever_graphs_o3218, 0.002); end
  def test_lever_graphs_p3218; assert_in_delta(-0.004, worksheet.lever_graphs_p3218, 0.002); end
  def test_lever_graphs_q3218; assert_in_delta(-0.005, worksheet.lever_graphs_q3218, 0.002); end
  def test_lever_graphs_d3219; assert_equal("Urban", worksheet.lever_graphs_d3219); end
  def test_lever_graphs_e3219; assert_in_epsilon(4.0, worksheet.lever_graphs_e3219, 0.002); end
  def test_lever_graphs_h3219; assert_equal("Automobile city", worksheet.lever_graphs_h3219); end
  def test_lever_graphs_i3219; assert_in_delta(0.0, (worksheet.lever_graphs_i3219||0), 0.002); end
  def test_lever_graphs_j3219; assert_in_delta(0.0058, worksheet.lever_graphs_j3219, 0.002); end
  def test_lever_graphs_k3219; assert_in_delta(0.002, worksheet.lever_graphs_k3219, 0.002); end
  def test_lever_graphs_l3219; assert_in_delta(0.001, worksheet.lever_graphs_l3219, 0.002); end
  def test_lever_graphs_m3219; assert_in_delta(-0.001, worksheet.lever_graphs_m3219, 0.002); end
  def test_lever_graphs_n3219; assert_in_delta(-0.003, worksheet.lever_graphs_n3219, 0.002); end
  def test_lever_graphs_o3219; assert_in_delta(-0.004, worksheet.lever_graphs_o3219, 0.002); end
  def test_lever_graphs_p3219; assert_in_delta(-0.005, worksheet.lever_graphs_p3219, 0.002); end
  def test_lever_graphs_q3219; assert_in_delta(-0.006, worksheet.lever_graphs_q3219, 0.002); end
  def test_lever_graphs_d3220; assert_equal("Urban", worksheet.lever_graphs_d3220); end
  def test_lever_graphs_e3220; assert_in_delta(1.0, worksheet.lever_graphs_e3220, 0.002); end
  def test_lever_graphs_h3220; assert_equal("Transit city", worksheet.lever_graphs_h3220); end
  def test_lever_graphs_i3220; assert_in_delta(0.0, (worksheet.lever_graphs_i3220||0), 0.002); end
  def test_lever_graphs_j3220; assert_in_delta(0.025, worksheet.lever_graphs_j3220, 0.002); end
  def test_lever_graphs_k3220; assert_in_delta(0.015, worksheet.lever_graphs_k3220, 0.002); end
  def test_lever_graphs_l3220; assert_in_delta(0.012, worksheet.lever_graphs_l3220, 0.002); end
  def test_lever_graphs_m3220; assert_in_delta(0.0075, worksheet.lever_graphs_m3220, 0.002); end
  def test_lever_graphs_n3220; assert_in_delta(0.0075, worksheet.lever_graphs_n3220, 0.002); end
  def test_lever_graphs_o3220; assert_in_delta(0.005, worksheet.lever_graphs_o3220, 0.002); end
  def test_lever_graphs_p3220; assert_in_delta(0.005, worksheet.lever_graphs_p3220, 0.002); end
  def test_lever_graphs_q3220; assert_in_delta(0.002, worksheet.lever_graphs_q3220, 0.002); end
  def test_lever_graphs_d3221; assert_equal("Urban", worksheet.lever_graphs_d3221); end
  def test_lever_graphs_e3221; assert_in_epsilon(2.0, worksheet.lever_graphs_e3221, 0.002); end
  def test_lever_graphs_h3221; assert_equal("Transit city", worksheet.lever_graphs_h3221); end
  def test_lever_graphs_i3221; assert_in_delta(0.0, (worksheet.lever_graphs_i3221||0), 0.002); end
  def test_lever_graphs_j3221; assert_in_delta(0.025, worksheet.lever_graphs_j3221, 0.002); end
  def test_lever_graphs_k3221; assert_in_delta(0.015, worksheet.lever_graphs_k3221, 0.002); end
  def test_lever_graphs_l3221; assert_in_delta(0.0075, worksheet.lever_graphs_l3221, 0.002); end
  def test_lever_graphs_m3221; assert_in_delta(0.0075, worksheet.lever_graphs_m3221, 0.002); end
  def test_lever_graphs_n3221; assert_in_delta(0.005, worksheet.lever_graphs_n3221, 0.002); end
  def test_lever_graphs_o3221; assert_in_delta(0.005, worksheet.lever_graphs_o3221, 0.002); end
  def test_lever_graphs_p3221; assert_in_delta(0.002, worksheet.lever_graphs_p3221, 0.002); end
  def test_lever_graphs_q3221; assert_in_delta(0.0002, worksheet.lever_graphs_q3221, 0.002); end
  def test_lever_graphs_d3222; assert_equal("Urban", worksheet.lever_graphs_d3222); end
  def test_lever_graphs_e3222; assert_in_epsilon(3.0, worksheet.lever_graphs_e3222, 0.002); end
  def test_lever_graphs_h3222; assert_equal("Transit city", worksheet.lever_graphs_h3222); end
  def test_lever_graphs_i3222; assert_in_delta(0.0, (worksheet.lever_graphs_i3222||0), 0.002); end
  def test_lever_graphs_j3222; assert_in_delta(0.025, worksheet.lever_graphs_j3222, 0.002); end
  def test_lever_graphs_k3222; assert_in_delta(0.013, worksheet.lever_graphs_k3222, 0.002); end
  def test_lever_graphs_l3222; assert_in_delta(0.0068, worksheet.lever_graphs_l3222, 0.002); end
  def test_lever_graphs_m3222; assert_in_delta(0.004, worksheet.lever_graphs_m3222, 0.002); end
  def test_lever_graphs_n3222; assert_in_delta(0.004, worksheet.lever_graphs_n3222, 0.002); end
  def test_lever_graphs_o3222; assert_in_delta(0.002, worksheet.lever_graphs_o3222, 0.002); end
  def test_lever_graphs_p3222; assert_in_delta(0.002, worksheet.lever_graphs_p3222, 0.002); end
  def test_lever_graphs_q3222; assert_in_delta(0.0002, worksheet.lever_graphs_q3222, 0.002); end
  def test_lever_graphs_d3223; assert_equal("Urban", worksheet.lever_graphs_d3223); end
  def test_lever_graphs_e3223; assert_in_epsilon(4.0, worksheet.lever_graphs_e3223, 0.002); end
  def test_lever_graphs_h3223; assert_equal("Transit city", worksheet.lever_graphs_h3223); end
  def test_lever_graphs_i3223; assert_in_delta(0.0, (worksheet.lever_graphs_i3223||0), 0.002); end
  def test_lever_graphs_j3223; assert_in_delta(0.025, worksheet.lever_graphs_j3223, 0.002); end
  def test_lever_graphs_k3223; assert_in_delta(0.013, worksheet.lever_graphs_k3223, 0.002); end
  def test_lever_graphs_l3223; assert_in_delta(0.005, worksheet.lever_graphs_l3223, 0.002); end
  def test_lever_graphs_m3223; assert_in_delta(0.004, worksheet.lever_graphs_m3223, 0.002); end
  def test_lever_graphs_n3223; assert_in_delta(0.002, worksheet.lever_graphs_n3223, 0.002); end
  def test_lever_graphs_o3223; assert_in_delta(0.001, worksheet.lever_graphs_o3223, 0.002); end
  def test_lever_graphs_p3223; assert_in_delta(0.0005, worksheet.lever_graphs_p3223, 0.002); end
  def test_lever_graphs_q3223; assert_in_delta(0.0002, worksheet.lever_graphs_q3223, 0.002); end
  def test_lever_graphs_d3224; assert_equal("Urban", worksheet.lever_graphs_d3224); end
  def test_lever_graphs_e3224; assert_in_delta(1.0, worksheet.lever_graphs_e3224, 0.002); end
  def test_lever_graphs_h3224; assert_equal("Booming city", worksheet.lever_graphs_h3224); end
  def test_lever_graphs_i3224; assert_in_delta(0.0, (worksheet.lever_graphs_i3224||0), 0.002); end
  def test_lever_graphs_j3224; assert_in_delta(0.0312, worksheet.lever_graphs_j3224, 0.002); end
  def test_lever_graphs_k3224; assert_in_delta(0.025, worksheet.lever_graphs_k3224, 0.002); end
  def test_lever_graphs_l3224; assert_in_delta(0.01, worksheet.lever_graphs_l3224, 0.002); end
  def test_lever_graphs_m3224; assert_in_delta(0.0075, worksheet.lever_graphs_m3224, 0.002); end
  def test_lever_graphs_n3224; assert_in_delta(0.005, worksheet.lever_graphs_n3224, 0.002); end
  def test_lever_graphs_o3224; assert_in_delta(0.0025, worksheet.lever_graphs_o3224, 0.002); end
  def test_lever_graphs_p3224; assert_in_delta(0.0025, worksheet.lever_graphs_p3224, 0.002); end
  def test_lever_graphs_q3224; assert_in_delta(0.0025, worksheet.lever_graphs_q3224, 0.002); end
  def test_lever_graphs_d3225; assert_equal("Urban", worksheet.lever_graphs_d3225); end
  def test_lever_graphs_e3225; assert_in_epsilon(2.0, worksheet.lever_graphs_e3225, 0.002); end
  def test_lever_graphs_h3225; assert_equal("Booming city", worksheet.lever_graphs_h3225); end
  def test_lever_graphs_i3225; assert_in_delta(0.0, (worksheet.lever_graphs_i3225||0), 0.002); end
  def test_lever_graphs_j3225; assert_in_delta(0.0312, worksheet.lever_graphs_j3225, 0.002); end
  def test_lever_graphs_k3225; assert_in_delta(0.015, worksheet.lever_graphs_k3225, 0.002); end
  def test_lever_graphs_l3225; assert_in_delta(0.01, worksheet.lever_graphs_l3225, 0.002); end
  def test_lever_graphs_m3225; assert_in_delta(0.0075, worksheet.lever_graphs_m3225, 0.002); end
  def test_lever_graphs_n3225; assert_in_delta(0.005, worksheet.lever_graphs_n3225, 0.002); end
  def test_lever_graphs_o3225; assert_in_delta(0.0025, worksheet.lever_graphs_o3225, 0.002); end
  def test_lever_graphs_p3225; assert_in_delta(0.001, worksheet.lever_graphs_p3225, 0.002); end
  def test_lever_graphs_q3225; assert_in_delta(0.001, worksheet.lever_graphs_q3225, 0.002); end
  def test_lever_graphs_d3226; assert_equal("Urban", worksheet.lever_graphs_d3226); end
  def test_lever_graphs_e3226; assert_in_epsilon(3.0, worksheet.lever_graphs_e3226, 0.002); end
  def test_lever_graphs_h3226; assert_equal("Booming city", worksheet.lever_graphs_h3226); end
  def test_lever_graphs_i3226; assert_in_delta(0.0, (worksheet.lever_graphs_i3226||0), 0.002); end
  def test_lever_graphs_j3226; assert_in_delta(0.0312, worksheet.lever_graphs_j3226, 0.002); end
  def test_lever_graphs_k3226; assert_in_delta(0.01, worksheet.lever_graphs_k3226, 0.002); end
  def test_lever_graphs_l3226; assert_in_delta(0.0075, worksheet.lever_graphs_l3226, 0.002); end
  def test_lever_graphs_m3226; assert_in_delta(0.006, worksheet.lever_graphs_m3226, 0.002); end
  def test_lever_graphs_n3226; assert_in_delta(0.003, worksheet.lever_graphs_n3226, 0.002); end
  def test_lever_graphs_o3226; assert_in_delta(0.002, worksheet.lever_graphs_o3226, 0.002); end
  def test_lever_graphs_p3226; assert_in_delta(0.001, worksheet.lever_graphs_p3226, 0.002); end
  def test_lever_graphs_q3226; assert_in_delta(0.0005, worksheet.lever_graphs_q3226, 0.002); end
  def test_lever_graphs_d3227; assert_equal("Urban", worksheet.lever_graphs_d3227); end
  def test_lever_graphs_e3227; assert_in_epsilon(4.0, worksheet.lever_graphs_e3227, 0.002); end
  def test_lever_graphs_h3227; assert_equal("Booming city", worksheet.lever_graphs_h3227); end
  def test_lever_graphs_i3227; assert_in_delta(0.0, (worksheet.lever_graphs_i3227||0), 0.002); end
  def test_lever_graphs_j3227; assert_in_delta(0.0312, worksheet.lever_graphs_j3227, 0.002); end
  def test_lever_graphs_k3227; assert_in_delta(0.0075, worksheet.lever_graphs_k3227, 0.002); end
  def test_lever_graphs_l3227; assert_in_delta(0.005, worksheet.lever_graphs_l3227, 0.002); end
  def test_lever_graphs_m3227; assert_in_delta(0.0035, worksheet.lever_graphs_m3227, 0.002); end
  def test_lever_graphs_n3227; assert_in_delta(0.0025, worksheet.lever_graphs_n3227, 0.002); end
  def test_lever_graphs_o3227; assert_in_delta(0.001, worksheet.lever_graphs_o3227, 0.002); end
  def test_lever_graphs_p3227; assert_in_delta(0.0002, worksheet.lever_graphs_p3227, 0.002); end
  def test_lever_graphs_q3227; assert_in_delta(0.0002, worksheet.lever_graphs_q3227, 0.002); end
  def test_lever_graphs_d3228; assert_equal("Rural", worksheet.lever_graphs_d3228); end
  def test_lever_graphs_e3228; assert_in_delta(1.0, worksheet.lever_graphs_e3228, 0.002); end
  def test_lever_graphs_h3228; assert_equal("Developed", worksheet.lever_graphs_h3228); end
  def test_lever_graphs_i3228; assert_in_delta(0.0, (worksheet.lever_graphs_i3228||0), 0.002); end
  def test_lever_graphs_j3228; assert_in_delta(0.0085, worksheet.lever_graphs_j3228, 0.002); end
  def test_lever_graphs_k3228; assert_in_delta(0.0093, worksheet.lever_graphs_k3228, 0.002); end
  def test_lever_graphs_l3228; assert_in_delta(0.0093, worksheet.lever_graphs_l3228, 0.002); end
  def test_lever_graphs_m3228; assert_in_delta(0.0093, worksheet.lever_graphs_m3228, 0.002); end
  def test_lever_graphs_n3228; assert_in_delta(0.0093, worksheet.lever_graphs_n3228, 0.002); end
  def test_lever_graphs_o3228; assert_in_delta(0.0093, worksheet.lever_graphs_o3228, 0.002); end
  def test_lever_graphs_p3228; assert_in_delta(0.005, worksheet.lever_graphs_p3228, 0.002); end
  def test_lever_graphs_q3228; assert_in_delta(0.005, worksheet.lever_graphs_q3228, 0.002); end
  def test_lever_graphs_d3229; assert_equal("Rural", worksheet.lever_graphs_d3229); end
  def test_lever_graphs_e3229; assert_in_epsilon(2.0, worksheet.lever_graphs_e3229, 0.002); end
  def test_lever_graphs_h3229; assert_equal("Developed", worksheet.lever_graphs_h3229); end
  def test_lever_graphs_i3229; assert_in_delta(0.0, (worksheet.lever_graphs_i3229||0), 0.002); end
  def test_lever_graphs_j3229; assert_in_delta(0.0085, worksheet.lever_graphs_j3229, 0.002); end
  def test_lever_graphs_k3229; assert_in_delta(0.0075, worksheet.lever_graphs_k3229, 0.002); end
  def test_lever_graphs_l3229; assert_in_delta(0.0075, worksheet.lever_graphs_l3229, 0.002); end
  def test_lever_graphs_m3229; assert_in_delta(0.0075, worksheet.lever_graphs_m3229, 0.002); end
  def test_lever_graphs_n3229; assert_in_delta(0.0075, worksheet.lever_graphs_n3229, 0.002); end
  def test_lever_graphs_o3229; assert_in_delta(0.0025, worksheet.lever_graphs_o3229, 0.002); end
  def test_lever_graphs_p3229; assert_in_delta(0.0025, worksheet.lever_graphs_p3229, 0.002); end
  def test_lever_graphs_q3229; assert_in_delta(0.0025, worksheet.lever_graphs_q3229, 0.002); end
  def test_lever_graphs_d3230; assert_equal("Rural", worksheet.lever_graphs_d3230); end
  def test_lever_graphs_e3230; assert_in_epsilon(3.0, worksheet.lever_graphs_e3230, 0.002); end
  def test_lever_graphs_h3230; assert_equal("Developed", worksheet.lever_graphs_h3230); end
  def test_lever_graphs_i3230; assert_in_delta(0.0, (worksheet.lever_graphs_i3230||0), 0.002); end
  def test_lever_graphs_j3230; assert_in_delta(0.0085, worksheet.lever_graphs_j3230, 0.002); end
  def test_lever_graphs_k3230; assert_in_delta(0.005, worksheet.lever_graphs_k3230, 0.002); end
  def test_lever_graphs_l3230; assert_in_delta(0.005, worksheet.lever_graphs_l3230, 0.002); end
  def test_lever_graphs_m3230; assert_in_delta(0.0025, worksheet.lever_graphs_m3230, 0.002); end
  def test_lever_graphs_n3230; assert_in_delta(0.0025, worksheet.lever_graphs_n3230, 0.002); end
  def test_lever_graphs_o3230; assert_in_delta(0.0015, worksheet.lever_graphs_o3230, 0.002); end
  def test_lever_graphs_p3230; assert_in_delta(0.0, (worksheet.lever_graphs_p3230||0), 0.002); end
  def test_lever_graphs_q3230; assert_in_delta(-0.0015, worksheet.lever_graphs_q3230, 0.002); end
  def test_lever_graphs_d3231; assert_equal("Rural", worksheet.lever_graphs_d3231); end
  def test_lever_graphs_e3231; assert_in_epsilon(4.0, worksheet.lever_graphs_e3231, 0.002); end
  def test_lever_graphs_h3231; assert_equal("Developing", worksheet.lever_graphs_h3231); end
  def test_lever_graphs_i3231; assert_in_delta(0.0, (worksheet.lever_graphs_i3231||0), 0.002); end
  def test_lever_graphs_j3231; assert_in_delta(0.0312, worksheet.lever_graphs_j3231, 0.002); end
  def test_lever_graphs_k3231; assert_in_delta(0.02, worksheet.lever_graphs_k3231, 0.002); end
  def test_lever_graphs_l3231; assert_in_delta(0.015, worksheet.lever_graphs_l3231, 0.002); end
  def test_lever_graphs_m3231; assert_in_delta(0.015, worksheet.lever_graphs_m3231, 0.002); end
  def test_lever_graphs_n3231; assert_in_delta(0.015, worksheet.lever_graphs_n3231, 0.002); end
  def test_lever_graphs_o3231; assert_in_delta(0.01, worksheet.lever_graphs_o3231, 0.002); end
  def test_lever_graphs_p3231; assert_in_delta(0.005, worksheet.lever_graphs_p3231, 0.002); end
  def test_lever_graphs_q3231; assert_in_delta(0.005, worksheet.lever_graphs_q3231, 0.002); end
  def test_lever_graphs_d3232; assert_equal("International", worksheet.lever_graphs_d3232); end
  def test_lever_graphs_e3232; assert_in_delta(1.0, worksheet.lever_graphs_e3232, 0.002); end
  def test_lever_graphs_h3232; assert_equal("International slow growth", worksheet.lever_graphs_h3232); end
  def test_lever_graphs_i3232; assert_in_delta(0.0, (worksheet.lever_graphs_i3232||0), 0.002); end
  def test_lever_graphs_j3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3232, 0.002); end
  def test_lever_graphs_k3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_k3232, 0.002); end
  def test_lever_graphs_l3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3232, 0.002); end
  def test_lever_graphs_m3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_m3232, 0.002); end
  def test_lever_graphs_n3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_n3232, 0.002); end
  def test_lever_graphs_o3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_o3232, 0.002); end
  def test_lever_graphs_p3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_p3232, 0.002); end
  def test_lever_graphs_q3232; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_q3232, 0.002); end
  def test_lever_graphs_d3233; assert_equal("International", worksheet.lever_graphs_d3233); end
  def test_lever_graphs_e3233; assert_in_epsilon(2.0, worksheet.lever_graphs_e3233, 0.002); end
  def test_lever_graphs_h3233; assert_equal("International slow growth", worksheet.lever_graphs_h3233); end
  def test_lever_graphs_i3233; assert_in_delta(0.0, (worksheet.lever_graphs_i3233||0), 0.002); end
  def test_lever_graphs_j3233; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3233, 0.002); end
  def test_lever_graphs_k3233; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_k3233, 0.002); end
  def test_lever_graphs_l3233; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_l3233, 0.002); end
  def test_lever_graphs_m3233; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_m3233, 0.002); end
  def test_lever_graphs_n3233; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_n3233, 0.002); end
  def test_lever_graphs_o3233; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_o3233, 0.002); end
  def test_lever_graphs_p3233; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_p3233, 0.002); end
  def test_lever_graphs_q3233; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_q3233, 0.002); end
  def test_lever_graphs_d3234; assert_equal("International", worksheet.lever_graphs_d3234); end
  def test_lever_graphs_e3234; assert_in_epsilon(3.0, worksheet.lever_graphs_e3234, 0.002); end
  def test_lever_graphs_h3234; assert_equal("International slow growth", worksheet.lever_graphs_h3234); end
  def test_lever_graphs_i3234; assert_in_delta(0.0, (worksheet.lever_graphs_i3234||0), 0.002); end
  def test_lever_graphs_j3234; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3234, 0.002); end
  def test_lever_graphs_k3234; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_k3234, 0.002); end
  def test_lever_graphs_l3234; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_l3234, 0.002); end
  def test_lever_graphs_m3234; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_m3234, 0.002); end
  def test_lever_graphs_n3234; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_n3234, 0.002); end
  def test_lever_graphs_o3234; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_o3234, 0.002); end
  def test_lever_graphs_p3234; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_p3234, 0.002); end
  def test_lever_graphs_q3234; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_q3234, 0.002); end
  def test_lever_graphs_d3235; assert_equal("International", worksheet.lever_graphs_d3235); end
  def test_lever_graphs_e3235; assert_in_epsilon(4.0, worksheet.lever_graphs_e3235, 0.002); end
  def test_lever_graphs_h3235; assert_equal("International slow growth", worksheet.lever_graphs_h3235); end
  def test_lever_graphs_i3235; assert_in_delta(0.0, (worksheet.lever_graphs_i3235||0), 0.002); end
  def test_lever_graphs_j3235; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3235, 0.002); end
  def test_lever_graphs_k3235; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_k3235, 0.002); end
  def test_lever_graphs_l3235; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_l3235, 0.002); end
  def test_lever_graphs_m3235; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_m3235, 0.002); end
  def test_lever_graphs_n3235; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_n3235, 0.002); end
  def test_lever_graphs_o3235; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_o3235, 0.002); end
  def test_lever_graphs_p3235; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_p3235, 0.002); end
  def test_lever_graphs_q3235; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_q3235, 0.002); end
  def test_lever_graphs_d3236; assert_equal("International", worksheet.lever_graphs_d3236); end
  def test_lever_graphs_e3236; assert_in_delta(1.0, worksheet.lever_graphs_e3236, 0.002); end
  def test_lever_graphs_h3236; assert_equal("International fast growth", worksheet.lever_graphs_h3236); end
  def test_lever_graphs_i3236; assert_in_delta(0.0, (worksheet.lever_graphs_i3236||0), 0.002); end
  def test_lever_graphs_j3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3236, 0.002); end
  def test_lever_graphs_k3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_k3236, 0.002); end
  def test_lever_graphs_l3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3236, 0.002); end
  def test_lever_graphs_m3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_m3236, 0.002); end
  def test_lever_graphs_n3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_n3236, 0.002); end
  def test_lever_graphs_o3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_o3236, 0.002); end
  def test_lever_graphs_p3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_p3236, 0.002); end
  def test_lever_graphs_q3236; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_q3236, 0.002); end
  def test_lever_graphs_d3237; assert_equal("International", worksheet.lever_graphs_d3237); end
  def test_lever_graphs_e3237; assert_in_epsilon(2.0, worksheet.lever_graphs_e3237, 0.002); end
  def test_lever_graphs_h3237; assert_equal("International fast growth", worksheet.lever_graphs_h3237); end
  def test_lever_graphs_i3237; assert_in_delta(0.0, (worksheet.lever_graphs_i3237||0), 0.002); end
  def test_lever_graphs_j3237; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3237, 0.002); end
  def test_lever_graphs_k3237; assert_in_delta(0.042105358044495, worksheet.lever_graphs_k3237, 0.002); end
  def test_lever_graphs_l3237; assert_in_delta(0.042105358044495, worksheet.lever_graphs_l3237, 0.002); end
  def test_lever_graphs_m3237; assert_in_delta(0.042105358044495, worksheet.lever_graphs_m3237, 0.002); end
  def test_lever_graphs_n3237; assert_in_delta(0.042105358044495, worksheet.lever_graphs_n3237, 0.002); end
  def test_lever_graphs_o3237; assert_in_delta(0.042105358044495, worksheet.lever_graphs_o3237, 0.002); end
  def test_lever_graphs_p3237; assert_in_delta(0.042105358044495, worksheet.lever_graphs_p3237, 0.002); end
  def test_lever_graphs_q3237; assert_in_delta(0.042105358044495, worksheet.lever_graphs_q3237, 0.002); end
  def test_lever_graphs_d3238; assert_equal("International", worksheet.lever_graphs_d3238); end
  def test_lever_graphs_e3238; assert_in_epsilon(3.0, worksheet.lever_graphs_e3238, 0.002); end
  def test_lever_graphs_h3238; assert_equal("International fast growth", worksheet.lever_graphs_h3238); end
  def test_lever_graphs_i3238; assert_in_delta(0.0, (worksheet.lever_graphs_i3238||0), 0.002); end
  def test_lever_graphs_j3238; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3238, 0.002); end
  def test_lever_graphs_k3238; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_k3238, 0.002); end
  def test_lever_graphs_l3238; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_l3238, 0.002); end
  def test_lever_graphs_m3238; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_m3238, 0.002); end
  def test_lever_graphs_n3238; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_n3238, 0.002); end
  def test_lever_graphs_o3238; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_o3238, 0.002); end
  def test_lever_graphs_p3238; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_p3238, 0.002); end
  def test_lever_graphs_q3238; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_q3238, 0.002); end
  def test_lever_graphs_d3239; assert_equal("International", worksheet.lever_graphs_d3239); end
  def test_lever_graphs_e3239; assert_in_epsilon(4.0, worksheet.lever_graphs_e3239, 0.002); end
  def test_lever_graphs_h3239; assert_equal("International fast growth", worksheet.lever_graphs_h3239); end
  def test_lever_graphs_i3239; assert_in_delta(0.0, (worksheet.lever_graphs_i3239||0), 0.002); end
  def test_lever_graphs_j3239; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3239, 0.002); end
  def test_lever_graphs_k3239; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_k3239, 0.002); end
  def test_lever_graphs_l3239; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_l3239, 0.002); end
  def test_lever_graphs_m3239; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_m3239, 0.002); end
  def test_lever_graphs_n3239; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_n3239, 0.002); end
  def test_lever_graphs_o3239; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_o3239, 0.002); end
  def test_lever_graphs_p3239; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_p3239, 0.002); end
  def test_lever_graphs_q3239; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_q3239, 0.002); end
  def test_lever_graphs_d3277; assert_equal("Type of travel", worksheet.lever_graphs_d3277); end
  def test_lever_graphs_e3277; assert_equal("Level", worksheet.lever_graphs_e3277); end
  def test_lever_graphs_f3277; assert_equal("Notes", worksheet.lever_graphs_f3277); end
  def test_lever_graphs_g3277; assert_equal("…", worksheet.lever_graphs_g3277); end
  def test_lever_graphs_h3277; assert_equal("Type of city", worksheet.lever_graphs_h3277); end
  def test_lever_graphs_i3277; assert_equal("2011", worksheet.lever_graphs_i3277); end
  def test_lever_graphs_j3277; assert_equal("2015", worksheet.lever_graphs_j3277); end
  def test_lever_graphs_k3277; assert_equal("2020", worksheet.lever_graphs_k3277); end
  def test_lever_graphs_l3277; assert_equal("2025", worksheet.lever_graphs_l3277); end
  def test_lever_graphs_m3277; assert_equal("2030", worksheet.lever_graphs_m3277); end
  def test_lever_graphs_n3277; assert_equal("2035", worksheet.lever_graphs_n3277); end
  def test_lever_graphs_o3277; assert_equal("2040", worksheet.lever_graphs_o3277); end
  def test_lever_graphs_p3277; assert_equal("2045", worksheet.lever_graphs_p3277); end
  def test_lever_graphs_q3277; assert_equal("2050", worksheet.lever_graphs_q3277); end
  def test_lever_graphs_d3278; assert_equal("Urban", worksheet.lever_graphs_d3278); end
  def test_lever_graphs_e3278; assert_in_delta(1.0, worksheet.lever_graphs_e3278, 0.002); end
  def test_lever_graphs_h3278; assert_equal("Automobile city", worksheet.lever_graphs_h3278); end
  def test_lever_graphs_i3278; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3278, 0.002); end
  def test_lever_graphs_j3278; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_j3278, 0.002); end
  def test_lever_graphs_k3278; assert_in_epsilon(5770006285828.047, worksheet.lever_graphs_k3278, 0.002); end
  def test_lever_graphs_l3278; assert_in_epsilon(6370751046993.881, worksheet.lever_graphs_l3278, 0.002); end
  def test_lever_graphs_m3278; assert_in_epsilon(6869623077074.309, worksheet.lever_graphs_m3278, 0.002); end
  def test_lever_graphs_n3278; assert_in_epsilon(7349094693207.585, worksheet.lever_graphs_n3278, 0.002); end
  def test_lever_graphs_o3278; assert_in_epsilon(7810835330229.266, worksheet.lever_graphs_o3278, 0.002); end
  def test_lever_graphs_p3278; assert_in_epsilon(8267262538186.196, worksheet.lever_graphs_p3278, 0.002); end
  def test_lever_graphs_q3278; assert_in_epsilon(8641602846371.22, worksheet.lever_graphs_q3278, 0.002); end
  def test_lever_graphs_d3279; assert_equal("Urban", worksheet.lever_graphs_d3279); end
  def test_lever_graphs_e3279; assert_in_epsilon(2.0, worksheet.lever_graphs_e3279, 0.002); end
  def test_lever_graphs_h3279; assert_equal("Automobile city", worksheet.lever_graphs_h3279); end
  def test_lever_graphs_i3279; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3279, 0.002); end
  def test_lever_graphs_j3279; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_j3279, 0.002); end
  def test_lever_graphs_k3279; assert_in_epsilon(5770006285828.047, worksheet.lever_graphs_k3279, 0.002); end
  def test_lever_graphs_l3279; assert_in_epsilon(6279345586990.636, worksheet.lever_graphs_l3279, 0.002); end
  def test_lever_graphs_m3279; assert_in_epsilon(6771059963749.519, worksheet.lever_graphs_m3279, 0.002); end
  def test_lever_graphs_n3279; assert_in_epsilon(7243652277378.604, worksheet.lever_graphs_n3279, 0.002); end
  def test_lever_graphs_o3279; assert_in_epsilon(7698768010206.44, worksheet.lever_graphs_o3279, 0.002); end
  def test_lever_graphs_p3279; assert_in_epsilon(7991279192298.541, worksheet.lever_graphs_p3279, 0.002); end
  def test_lever_graphs_q3279; assert_in_epsilon(8261660280839.308, worksheet.lever_graphs_q3279, 0.002); end
  def test_lever_graphs_d3280; assert_equal("Urban", worksheet.lever_graphs_d3280); end
  def test_lever_graphs_e3280; assert_in_epsilon(3.0, worksheet.lever_graphs_e3280, 0.002); end
  def test_lever_graphs_h3280; assert_equal("Automobile city", worksheet.lever_graphs_h3280); end
  def test_lever_graphs_i3280; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3280, 0.002); end
  def test_lever_graphs_j3280; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_j3280, 0.002); end
  def test_lever_graphs_k3280; assert_in_epsilon(5712810006069.065, worksheet.lever_graphs_k3280, 0.002); end
  def test_lever_graphs_l3280; assert_in_epsilon(6204699670096.028, worksheet.lever_graphs_l3280, 0.002); end
  def test_lever_graphs_m3280; assert_in_epsilon(6627369067665.72, worksheet.lever_graphs_m3280, 0.002); end
  def test_lever_graphs_n3280; assert_in_epsilon(6953010965974.846, worksheet.lever_graphs_n3280, 0.002); end
  def test_lever_graphs_o3280; assert_in_epsilon(7210916416360.04, worksheet.lever_graphs_o3280, 0.002); end
  def test_lever_graphs_p3280; assert_in_epsilon(7410192977703.536, worksheet.lever_graphs_p3280, 0.002); end
  def test_lever_graphs_q3280; assert_in_epsilon(7546459476873.182, worksheet.lever_graphs_q3280, 0.002); end
  def test_lever_graphs_d3281; assert_equal("Urban", worksheet.lever_graphs_d3281); end
  def test_lever_graphs_e3281; assert_in_epsilon(4.0, worksheet.lever_graphs_e3281, 0.002); end
  def test_lever_graphs_h3281; assert_equal("Automobile city", worksheet.lever_graphs_h3281); end
  def test_lever_graphs_i3281; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3281, 0.002); end
  def test_lever_graphs_j3281; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_j3281, 0.002); end
  def test_lever_graphs_k3281; assert_in_epsilon(5690058899963.342, worksheet.lever_graphs_k3281, 0.002); end
  def test_lever_graphs_l3281; assert_in_epsilon(6164578189380.335, worksheet.lever_graphs_l3281, 0.002); end
  def test_lever_graphs_m3281; assert_in_epsilon(6551657684640.563, worksheet.lever_graphs_m3281, 0.002); end
  def test_lever_graphs_n3281; assert_in_epsilon(6839211605975.7705, worksheet.lever_graphs_n3281, 0.002); end
  def test_lever_graphs_o3281; assert_in_epsilon(7057396030660.884, worksheet.lever_graphs_o3281, 0.002); end
  def test_lever_graphs_p3281; assert_in_epsilon(7216095248230.405, worksheet.lever_graphs_p3281, 0.002); end
  def test_lever_graphs_q3281; assert_in_epsilon(7311938020591.433, worksheet.lever_graphs_q3281, 0.002); end
  def test_lever_graphs_d3282; assert_equal("Urban", worksheet.lever_graphs_d3282); end
  def test_lever_graphs_e3282; assert_in_delta(1.0, worksheet.lever_graphs_e3282, 0.002); end
  def test_lever_graphs_h3282; assert_equal("Transit city", worksheet.lever_graphs_h3282); end
  def test_lever_graphs_i3282; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3282, 0.002); end
  def test_lever_graphs_j3282; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_j3282, 0.002); end
  def test_lever_graphs_k3282; assert_in_epsilon(11944684415846.242, worksheet.lever_graphs_k3282, 0.002); end
  def test_lever_graphs_l3282; assert_in_epsilon(13235827530101.955, worksheet.lever_graphs_l3282, 0.002); end
  def test_lever_graphs_m3282; assert_in_epsilon(14190784947728.174, worksheet.lever_graphs_m3282, 0.002); end
  def test_lever_graphs_n3282; assert_in_epsilon(15070141029144.732, worksheet.lever_graphs_n3282, 0.002); end
  def test_lever_graphs_o3282; assert_in_epsilon(15675831359910.969, worksheet.lever_graphs_o3282, 0.002); end
  def test_lever_graphs_p3282; assert_in_epsilon(16207211361196.072, worksheet.lever_graphs_p3282, 0.002); end
  def test_lever_graphs_q3282; assert_in_epsilon(16407151742107.824, worksheet.lever_graphs_q3282, 0.002); end
  def test_lever_graphs_d3283; assert_equal("Urban", worksheet.lever_graphs_d3283); end
  def test_lever_graphs_e3283; assert_in_epsilon(2.0, worksheet.lever_graphs_e3283, 0.002); end
  def test_lever_graphs_h3283; assert_equal("Transit city", worksheet.lever_graphs_h3283); end
  def test_lever_graphs_i3283; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3283, 0.002); end
  def test_lever_graphs_j3283; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_j3283, 0.002); end
  def test_lever_graphs_k3283; assert_in_epsilon(11944684415846.242, worksheet.lever_graphs_k3283, 0.002); end
  def test_lever_graphs_l3283; assert_in_epsilon(12944158165792.258, worksheet.lever_graphs_l3283, 0.002); end
  def test_lever_graphs_m3283; assert_in_epsilon(13878071804908.338, worksheet.lever_graphs_m3283, 0.002); end
  def test_lever_graphs_n3283; assert_in_epsilon(14556101082230.662, worksheet.lever_graphs_n3283, 0.002); end
  def test_lever_graphs_o3283; assert_in_epsilon(15141131418848.78, worksheet.lever_graphs_o3283, 0.002); end
  def test_lever_graphs_p3283; assert_in_epsilon(15422129337445.027, worksheet.lever_graphs_p3283, 0.002); end
  def test_lever_graphs_q3283; assert_in_epsilon(15472656469008.55, worksheet.lever_graphs_q3283, 0.002); end
  def test_lever_graphs_d3284; assert_equal("Urban", worksheet.lever_graphs_d3284); end
  def test_lever_graphs_e3284; assert_in_epsilon(3.0, worksheet.lever_graphs_e3284, 0.002); end
  def test_lever_graphs_h3284; assert_equal("Transit city", worksheet.lever_graphs_h3284); end
  def test_lever_graphs_i3284; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3284, 0.002); end
  def test_lever_graphs_j3284; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_j3284, 0.002); end
  def test_lever_graphs_k3284; assert_in_epsilon(11827465652983.773, worksheet.lever_graphs_k3284, 0.002); end
  def test_lever_graphs_l3284; assert_in_epsilon(12772666916212.598, worksheet.lever_graphs_l3284, 0.002); end
  def test_lever_graphs_m3284; assert_in_epsilon(13457989838237.373, worksheet.lever_graphs_m3284, 0.002); end
  def test_lever_graphs_n3284; assert_in_epsilon(14045408793406.547, worksheet.lever_graphs_n3284, 0.002); end
  def test_lever_graphs_o3284; assert_in_epsilon(14393153230797.615, worksheet.lever_graphs_o3284, 0.002); end
  def test_lever_graphs_p3284; assert_in_epsilon(14660269735371.121, worksheet.lever_graphs_p3284, 0.002); end
  def test_lever_graphs_q3284; assert_in_epsilon(14708300805625.299, worksheet.lever_graphs_q3284, 0.002); end
  def test_lever_graphs_d3285; assert_equal("Urban", worksheet.lever_graphs_d3285); end
  def test_lever_graphs_e3285; assert_in_epsilon(4.0, worksheet.lever_graphs_e3285, 0.002); end
  def test_lever_graphs_h3285; assert_equal("Transit city", worksheet.lever_graphs_h3285); end
  def test_lever_graphs_i3285; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3285, 0.002); end
  def test_lever_graphs_j3285; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_j3285, 0.002); end
  def test_lever_graphs_k3285; assert_in_epsilon(11827465652983.773, worksheet.lever_graphs_k3285, 0.002); end
  def test_lever_graphs_l3285; assert_in_epsilon(12658896855503.084, worksheet.lever_graphs_l3285, 0.002); end
  def test_lever_graphs_m3285; assert_in_epsilon(13338115396120.604, worksheet.lever_graphs_m3285, 0.002); end
  def test_lever_graphs_n3285; assert_in_epsilon(13782204888835.062, worksheet.lever_graphs_n3285, 0.002); end
  def test_lever_graphs_o3285; assert_in_epsilon(14053097089503.79, worksheet.lever_graphs_o3285, 0.002); end
  def test_lever_graphs_p3285; assert_in_epsilon(14207082943313.594, worksheet.lever_graphs_p3285, 0.002); end
  def test_lever_graphs_q3285; assert_in_epsilon(14253629249164.355, worksheet.lever_graphs_q3285, 0.002); end
  def test_lever_graphs_d3286; assert_equal("Urban", worksheet.lever_graphs_d3286); end
  def test_lever_graphs_e3286; assert_in_delta(1.0, worksheet.lever_graphs_e3286, 0.002); end
  def test_lever_graphs_h3286; assert_equal("Booming city", worksheet.lever_graphs_h3286); end
  def test_lever_graphs_i3286; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3286, 0.002); end
  def test_lever_graphs_j3286; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_j3286, 0.002); end
  def test_lever_graphs_k3286; assert_in_epsilon(31178217029490.883, worksheet.lever_graphs_k3286, 0.002); end
  def test_lever_graphs_l3286; assert_in_epsilon(36201910536681.73, worksheet.lever_graphs_l3286, 0.002); end
  def test_lever_graphs_m3286; assert_in_epsilon(41125307012147.8, worksheet.lever_graphs_m3286, 0.002); end
  def test_lever_graphs_n3286; assert_in_epsilon(45764699162571.23, worksheet.lever_graphs_n3286, 0.002); end
  def test_lever_graphs_o3286; assert_in_epsilon(49956436639087.61, worksheet.lever_graphs_o3286, 0.002); end
  def test_lever_graphs_p3286; assert_in_epsilon(54292860412290.055, worksheet.lever_graphs_p3286, 0.002); end
  def test_lever_graphs_q3286; assert_in_epsilon(58754926774635.62, worksheet.lever_graphs_q3286, 0.002); end
  def test_lever_graphs_d3287; assert_equal("Urban", worksheet.lever_graphs_d3287); end
  def test_lever_graphs_e3287; assert_in_epsilon(2.0, worksheet.lever_graphs_e3287, 0.002); end
  def test_lever_graphs_h3287; assert_equal("Booming city", worksheet.lever_graphs_h3287); end
  def test_lever_graphs_i3287; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3287, 0.002); end
  def test_lever_graphs_j3287; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_j3287, 0.002); end
  def test_lever_graphs_k3287; assert_in_epsilon(29686716158523.164, worksheet.lever_graphs_k3287, 0.002); end
  def test_lever_graphs_l3287; assert_in_epsilon(34470086646781.824, worksheet.lever_graphs_l3287, 0.002); end
  def test_lever_graphs_m3287; assert_in_epsilon(39157958104113.24, worksheet.lever_graphs_m3287, 0.002); end
  def test_lever_graphs_n3287; assert_in_epsilon(43575411410934.03, worksheet.lever_graphs_n3287, 0.002); end
  def test_lever_graphs_o3287; assert_in_epsilon(47566624909726.52, worksheet.lever_graphs_o3287, 0.002); end
  def test_lever_graphs_p3287; assert_in_epsilon(51310008692464.26, worksheet.lever_graphs_p3287, 0.002); end
  def test_lever_graphs_q3287; assert_in_epsilon(55112756807202.13, worksheet.lever_graphs_q3287, 0.002); end
  def test_lever_graphs_d3288; assert_equal("Urban", worksheet.lever_graphs_d3288); end
  def test_lever_graphs_e3288; assert_in_epsilon(3.0, worksheet.lever_graphs_e3288, 0.002); end
  def test_lever_graphs_h3288; assert_equal("Booming city", worksheet.lever_graphs_h3288); end
  def test_lever_graphs_i3288; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3288, 0.002); end
  def test_lever_graphs_j3288; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_j3288, 0.002); end
  def test_lever_graphs_k3288; assert_in_epsilon(28962684793027.652, worksheet.lever_graphs_k3288, 0.002); end
  def test_lever_graphs_l3288; assert_in_epsilon(33215243294784.016, worksheet.lever_graphs_l3288, 0.002); end
  def test_lever_graphs_m3288; assert_in_epsilon(37452406609503.63, worksheet.lever_graphs_m3288, 0.002); end
  def test_lever_graphs_n3288; assert_in_epsilon(41264400961330.1, worksheet.lever_graphs_n3288, 0.002); end
  def test_lever_graphs_o3288; assert_in_epsilon(44931724466893.08, worksheet.lever_graphs_o3288, 0.002); end
  def test_lever_graphs_p3288; assert_in_epsilon(48467747655820.54, worksheet.lever_graphs_p3288, 0.002); end
  def test_lever_graphs_q3288; assert_in_epsilon(51929956982955.5, worksheet.lever_graphs_q3288, 0.002); end
  def test_lever_graphs_d3289; assert_equal("Urban", worksheet.lever_graphs_d3289); end
  def test_lever_graphs_e3289; assert_in_epsilon(4.0, worksheet.lever_graphs_e3289, 0.002); end
  def test_lever_graphs_h3289; assert_equal("Booming city", worksheet.lever_graphs_h3289); end
  def test_lever_graphs_i3289; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3289, 0.002); end
  def test_lever_graphs_j3289; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_j3289, 0.002); end
  def test_lever_graphs_k3289; assert_in_epsilon(28606005837255.477, worksheet.lever_graphs_k3289, 0.002); end
  def test_lever_graphs_l3289; assert_in_epsilon(32401183801898.68, worksheet.lever_graphs_l3289, 0.002); end
  def test_lever_graphs_m3289; assert_in_epsilon(36082793270653.43, worksheet.lever_graphs_m3289, 0.002); end
  def test_lever_graphs_n3289; assert_in_epsilon(39656392700129.39, worksheet.lever_graphs_n3289, 0.002); end
  def test_lever_graphs_o3289; assert_in_epsilon(42965762995993.46, worksheet.lever_graphs_o3289, 0.002); end
  def test_lever_graphs_p3289; assert_in_epsilon(46162162264194.836, worksheet.lever_graphs_p3289, 0.002); end
  def test_lever_graphs_q3289; assert_in_epsilon(49385568123453.85, worksheet.lever_graphs_q3289, 0.002); end
  def test_lever_graphs_d3290; assert_equal("Rural", worksheet.lever_graphs_d3290); end
  def test_lever_graphs_e3290; assert_in_delta(1.0, worksheet.lever_graphs_e3290, 0.002); end
  def test_lever_graphs_h3290; assert_equal("Developed", worksheet.lever_graphs_h3290); end
  def test_lever_graphs_i3290; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3290, 0.002); end
  def test_lever_graphs_j3290; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_j3290, 0.002); end
  def test_lever_graphs_k3290; assert_in_epsilon(6813123340819.391, worksheet.lever_graphs_k3290, 0.002); end
  def test_lever_graphs_l3290; assert_in_epsilon(6860388098157.445, worksheet.lever_graphs_l3290, 0.002); end
  def test_lever_graphs_m3290; assert_in_epsilon(6877078896253.531, worksheet.lever_graphs_m3290, 0.002); end
  def test_lever_graphs_n3290; assert_in_epsilon(6868130148301.212, worksheet.lever_graphs_n3290, 0.002); end
  def test_lever_graphs_o3290; assert_in_epsilon(6828962049884.475, worksheet.lever_graphs_o3290, 0.002); end
  def test_lever_graphs_p3290; assert_in_epsilon(6592735854237.43, worksheet.lever_graphs_p3290, 0.002); end
  def test_lever_graphs_q3290; assert_in_epsilon(6311010846238.058, worksheet.lever_graphs_q3290, 0.002); end
  def test_lever_graphs_d3291; assert_equal("Rural", worksheet.lever_graphs_d3291); end
  def test_lever_graphs_e3291; assert_in_epsilon(2.0, worksheet.lever_graphs_e3291, 0.002); end
  def test_lever_graphs_h3291; assert_equal("Developed", worksheet.lever_graphs_h3291); end
  def test_lever_graphs_i3291; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3291, 0.002); end
  def test_lever_graphs_j3291; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_j3291, 0.002); end
  def test_lever_graphs_k3291; assert_in_epsilon(6752586544435.684, worksheet.lever_graphs_k3291, 0.002); end
  def test_lever_graphs_l3291; assert_in_epsilon(6739016200637.021, worksheet.lever_graphs_l3291, 0.002); end
  def test_lever_graphs_m3291; assert_in_epsilon(6695387700266.412, worksheet.lever_graphs_m3291, 0.002); end
  def test_lever_graphs_n3291; assert_in_epsilon(6627262111161.863, worksheet.lever_graphs_n3291, 0.002); end
  def test_lever_graphs_o3291; assert_in_epsilon(6370461137040.822, worksheet.lever_graphs_o3291, 0.002); end
  def test_lever_graphs_p3291; assert_in_epsilon(6073981217792.462, worksheet.lever_graphs_p3291, 0.002); end
  def test_lever_graphs_q3291; assert_in_epsilon(5742464159557.68, worksheet.lever_graphs_q3291, 0.002); end
  def test_lever_graphs_d3292; assert_equal("Rural", worksheet.lever_graphs_d3292); end
  def test_lever_graphs_e3292; assert_in_epsilon(3.0, worksheet.lever_graphs_e3292, 0.002); end
  def test_lever_graphs_h3292; assert_equal("Developed", worksheet.lever_graphs_h3292); end
  def test_lever_graphs_i3292; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3292, 0.002); end
  def test_lever_graphs_j3292; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_j3292, 0.002); end
  def test_lever_graphs_k3292; assert_in_epsilon(6669222301248.492, worksheet.lever_graphs_k3292, 0.002); end
  def test_lever_graphs_l3292; assert_in_epsilon(6573649887645.622, worksheet.lever_graphs_l3292, 0.002); end
  def test_lever_graphs_m3292; assert_in_epsilon(6370630727040.085, worksheet.lever_graphs_m3292, 0.002); end
  def test_lever_graphs_n3292; assert_in_epsilon(6150883220859.31, worksheet.lever_graphs_n3292, 0.002); end
  def test_lever_graphs_o3292; assert_in_epsilon(5883111325236.978, worksheet.lever_graphs_o3292, 0.002); end
  def test_lever_graphs_p3292; assert_in_epsilon(5539718977244.4, worksheet.lever_graphs_p3292, 0.002); end
  def test_lever_graphs_q3292; assert_in_epsilon(5133706339400.762, worksheet.lever_graphs_q3292, 0.002); end
  def test_lever_graphs_d3293; assert_equal("Rural", worksheet.lever_graphs_d3293); end
  def test_lever_graphs_e3293; assert_in_epsilon(4.0, worksheet.lever_graphs_e3293, 0.002); end
  def test_lever_graphs_h3293; assert_equal("Developed", worksheet.lever_graphs_h3293); end
  def test_lever_graphs_i3293; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3293, 0.002); end
  def test_lever_graphs_j3293; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_j3293, 0.002); end
  def test_lever_graphs_k3293; assert_in_epsilon(6619196637391.429, worksheet.lever_graphs_k3293, 0.002); end
  def test_lever_graphs_l3293; assert_in_epsilon(6363650949055.589, worksheet.lever_graphs_l3293, 0.002); end
  def test_lever_graphs_m3293; assert_in_epsilon(6045060503326.514, worksheet.lever_graphs_m3293, 0.002); end
  def test_lever_graphs_n3293; assert_in_epsilon(5721028894934.223, worksheet.lever_graphs_n3293, 0.002); end
  def test_lever_graphs_o3293; assert_in_epsilon(5390503147851.514, worksheet.lever_graphs_o3293, 0.002); end
  def test_lever_graphs_p3293; assert_in_epsilon(5037908988492.173, worksheet.lever_graphs_p3293, 0.002); end
  def test_lever_graphs_q3293; assert_in_epsilon(4668674605658.669, worksheet.lever_graphs_q3293, 0.002); end
  def test_lever_graphs_d3294; assert_equal("Rural", worksheet.lever_graphs_d3294); end
  def test_lever_graphs_e3294; assert_in_delta(1.0, worksheet.lever_graphs_e3294, 0.002); end
  def test_lever_graphs_h3294; assert_equal("Developing", worksheet.lever_graphs_h3294); end
  def test_lever_graphs_i3294; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3294, 0.002); end
  def test_lever_graphs_j3294; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_j3294, 0.002); end
  def test_lever_graphs_k3294; assert_in_epsilon(15930599290990.635, worksheet.lever_graphs_k3294, 0.002); end
  def test_lever_graphs_l3294; assert_in_epsilon(17858983333897.76, worksheet.lever_graphs_l3294, 0.002); end
  def test_lever_graphs_m3294; assert_in_epsilon(19962668778717.836, worksheet.lever_graphs_m3294, 0.002); end
  def test_lever_graphs_n3294; assert_in_epsilon(21998178690902.17, worksheet.lever_graphs_n3294, 0.002); end
  def test_lever_graphs_o3294; assert_in_epsilon(24179398775550.055, worksheet.lever_graphs_o3294, 0.002); end
  def test_lever_graphs_p3294; assert_in_epsilon(26415234184191.64, worksheet.lever_graphs_p3294, 0.002); end
  def test_lever_graphs_q3294; assert_in_epsilon(28678497464036.676, worksheet.lever_graphs_q3294, 0.002); end
  def test_lever_graphs_d3295; assert_equal("Rural", worksheet.lever_graphs_d3295); end
  def test_lever_graphs_e3295; assert_in_epsilon(2.0, worksheet.lever_graphs_e3295, 0.002); end
  def test_lever_graphs_h3295; assert_equal("Developing", worksheet.lever_graphs_h3295); end
  def test_lever_graphs_i3295; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3295, 0.002); end
  def test_lever_graphs_j3295; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_j3295, 0.002); end
  def test_lever_graphs_k3295; assert_in_epsilon(15930599290990.635, worksheet.lever_graphs_k3295, 0.002); end
  def test_lever_graphs_l3295; assert_in_epsilon(17641723350989.363, worksheet.lever_graphs_l3295, 0.002); end
  def test_lever_graphs_m3295; assert_in_epsilon(19479919230111.387, worksheet.lever_graphs_m3295, 0.002); end
  def test_lever_graphs_n3295; assert_in_epsilon(20945205646488.188, worksheet.lever_graphs_n3295, 0.002); end
  def test_lever_graphs_o3295; assert_in_epsilon(22463258432664.656, worksheet.lever_graphs_o3295, 0.002); end
  def test_lever_graphs_p3295; assert_in_epsilon(23944792252539.88, worksheet.lever_graphs_p3295, 0.002); end
  def test_lever_graphs_q3295; assert_in_epsilon(25365437327504.418, worksheet.lever_graphs_q3295, 0.002); end
  def test_lever_graphs_d3296; assert_equal("Rural", worksheet.lever_graphs_d3296); end
  def test_lever_graphs_e3296; assert_in_epsilon(3.0, worksheet.lever_graphs_e3296, 0.002); end
  def test_lever_graphs_h3296; assert_equal("Developing", worksheet.lever_graphs_h3296); end
  def test_lever_graphs_i3296; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3296, 0.002); end
  def test_lever_graphs_j3296; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_j3296, 0.002); end
  def test_lever_graphs_k3296; assert_in_epsilon(15545820385833.295, worksheet.lever_graphs_k3296, 0.002); end
  def test_lever_graphs_l3296; assert_in_epsilon(16797780103096.658, worksheet.lever_graphs_l3296, 0.002); end
  def test_lever_graphs_m3296; assert_in_epsilon(18097866844154.742, worksheet.lever_graphs_m3296, 0.002); end
  def test_lever_graphs_n3296; assert_in_epsilon(19459194791097.383, worksheet.lever_graphs_n3296, 0.002); end
  def test_lever_graphs_o3296; assert_in_epsilon(20869545463606.957, worksheet.lever_graphs_o3296, 0.002); end
  def test_lever_graphs_p3296; assert_in_epsilon(21703409652183.94, worksheet.lever_graphs_p3296, 0.002); end
  def test_lever_graphs_q3296; assert_in_epsilon(22430342571809.72, worksheet.lever_graphs_q3296, 0.002); end
  def test_lever_graphs_d3297; assert_equal("Rural", worksheet.lever_graphs_d3297); end
  def test_lever_graphs_e3297; assert_in_epsilon(4.0, worksheet.lever_graphs_e3297, 0.002); end
  def test_lever_graphs_h3297; assert_equal("Developing", worksheet.lever_graphs_h3297); end
  def test_lever_graphs_i3297; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3297, 0.002); end
  def test_lever_graphs_j3297; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_j3297, 0.002); end
  def test_lever_graphs_k3297; assert_in_epsilon(15545820385833.295, worksheet.lever_graphs_k3297, 0.002); end
  def test_lever_graphs_l3297; assert_in_epsilon(16797780103096.658, worksheet.lever_graphs_l3297, 0.002); end
  def test_lever_graphs_m3297; assert_in_epsilon(18097866844154.742, worksheet.lever_graphs_m3297, 0.002); end
  def test_lever_graphs_n3297; assert_in_epsilon(19459194791097.383, worksheet.lever_graphs_n3297, 0.002); end
  def test_lever_graphs_o3297; assert_in_epsilon(20360556681600.906, worksheet.lever_graphs_o3297, 0.002); end
  def test_lever_graphs_p3297; assert_in_epsilon(20655136308366.53, worksheet.lever_graphs_p3297, 0.002); end
  def test_lever_graphs_q3297; assert_in_epsilon(20823774103068.1, worksheet.lever_graphs_q3297, 0.002); end
  def test_lever_graphs_d3298; assert_equal("International", worksheet.lever_graphs_d3298); end
  def test_lever_graphs_e3298; assert_in_delta(1.0, worksheet.lever_graphs_e3298, 0.002); end
  def test_lever_graphs_h3298; assert_equal("International slow growth", worksheet.lever_graphs_h3298); end
  def test_lever_graphs_i3298; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3298, 0.002); end
  def test_lever_graphs_j3298; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_j3298, 0.002); end
  def test_lever_graphs_k3298; assert_in_epsilon(5116359699546.063, worksheet.lever_graphs_k3298, 0.002); end
  def test_lever_graphs_l3298; assert_in_epsilon(5798700654526.816, worksheet.lever_graphs_l3298, 0.002); end
  def test_lever_graphs_m3298; assert_in_epsilon(6535985392974.534, worksheet.lever_graphs_m3298, 0.002); end
  def test_lever_graphs_n3298; assert_in_epsilon(7332058590767.87, worksheet.lever_graphs_n3298, 0.002); end
  def test_lever_graphs_o3298; assert_in_epsilon(8188950461781.942, worksheet.lever_graphs_o3298, 0.002); end
  def test_lever_graphs_p3298; assert_in_epsilon(9106468388033.11, worksheet.lever_graphs_p3298, 0.002); end
  def test_lever_graphs_q3298; assert_in_epsilon(10083922574157.883, worksheet.lever_graphs_q3298, 0.002); end
  def test_lever_graphs_d3299; assert_equal("International", worksheet.lever_graphs_d3299); end
  def test_lever_graphs_e3299; assert_in_epsilon(2.0, worksheet.lever_graphs_e3299, 0.002); end
  def test_lever_graphs_h3299; assert_equal("International slow growth", worksheet.lever_graphs_h3299); end
  def test_lever_graphs_i3299; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3299, 0.002); end
  def test_lever_graphs_j3299; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_j3299, 0.002); end
  def test_lever_graphs_k3299; assert_in_epsilon(4963173501663.59, worksheet.lever_graphs_k3299, 0.002); end
  def test_lever_graphs_l3299; assert_in_epsilon(5456667183540.511, worksheet.lever_graphs_l3299, 0.002); end
  def test_lever_graphs_m3299; assert_in_epsilon(5966315798897.56, worksheet.lever_graphs_m3299, 0.002); end
  def test_lever_graphs_n3299; assert_in_epsilon(6492612429152.186, worksheet.lever_graphs_n3299, 0.002); end
  def test_lever_graphs_o3299; assert_in_epsilon(7034288625143.366, worksheet.lever_graphs_o3299, 0.002); end
  def test_lever_graphs_p3299; assert_in_epsilon(7588226968133.119, worksheet.lever_graphs_p3299, 0.002); end
  def test_lever_graphs_q3299; assert_in_epsilon(8151137486706.55, worksheet.lever_graphs_q3299, 0.002); end
  def test_lever_graphs_d3300; assert_equal("International", worksheet.lever_graphs_d3300); end
  def test_lever_graphs_e3300; assert_in_epsilon(3.0, worksheet.lever_graphs_e3300, 0.002); end
  def test_lever_graphs_h3300; assert_equal("International slow growth", worksheet.lever_graphs_h3300); end
  def test_lever_graphs_i3300; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3300, 0.002); end
  def test_lever_graphs_j3300; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_j3300, 0.002); end
  def test_lever_graphs_k3300; assert_in_epsilon(4757240883863.283, worksheet.lever_graphs_k3300, 0.002); end
  def test_lever_graphs_l3300; assert_in_epsilon(5013243923384.648, worksheet.lever_graphs_l3300, 0.002); end
  def test_lever_graphs_m3300; assert_in_epsilon(5254039002003.484, worksheet.lever_graphs_m3300, 0.002); end
  def test_lever_graphs_n3300; assert_in_epsilon(5480273326575.201, worksheet.lever_graphs_n3300, 0.002); end
  def test_lever_graphs_o3300; assert_in_epsilon(5691131355557.158, worksheet.lever_graphs_o3300, 0.002); end
  def test_lever_graphs_p3300; assert_in_epsilon(5884565796265.762, worksheet.lever_graphs_p3300, 0.002); end
  def test_lever_graphs_q3300; assert_in_epsilon(6058819498169.161, worksheet.lever_graphs_q3300, 0.002); end
  def test_lever_graphs_d3301; assert_equal("International", worksheet.lever_graphs_d3301); end
  def test_lever_graphs_e3301; assert_in_epsilon(4.0, worksheet.lever_graphs_e3301, 0.002); end
  def test_lever_graphs_h3301; assert_equal("International slow growth", worksheet.lever_graphs_h3301); end
  def test_lever_graphs_i3301; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3301, 0.002); end
  def test_lever_graphs_j3301; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_j3301, 0.002); end
  def test_lever_graphs_k3301; assert_in_epsilon(4437219717127.221, worksheet.lever_graphs_k3301, 0.002); end
  def test_lever_graphs_l3301; assert_in_epsilon(4361445191283.9976, worksheet.lever_graphs_l3301, 0.002); end
  def test_lever_graphs_m3301; assert_in_epsilon(4263445022230.834, worksheet.lever_graphs_m3301, 0.002); end
  def test_lever_graphs_n3301; assert_in_epsilon(4147872378757.677, worksheet.lever_graphs_n3301, 0.002); end
  def test_lever_graphs_o3301; assert_in_epsilon(4017700577361.6455, worksheet.lever_graphs_o3301, 0.002); end
  def test_lever_graphs_p3301; assert_in_epsilon(3874798942894.1045, worksheet.lever_graphs_p3301, 0.002); end
  def test_lever_graphs_q3301; assert_in_epsilon(3721161811903.7007, worksheet.lever_graphs_q3301, 0.002); end
  def test_lever_graphs_d3302; assert_equal("International", worksheet.lever_graphs_d3302); end
  def test_lever_graphs_e3302; assert_in_delta(1.0, worksheet.lever_graphs_e3302, 0.002); end
  def test_lever_graphs_h3302; assert_equal("International fast growth", worksheet.lever_graphs_h3302); end
  def test_lever_graphs_i3302; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3302, 0.002); end
  def test_lever_graphs_j3302; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_j3302, 0.002); end
  def test_lever_graphs_k3302; assert_in_epsilon(2384097147912.68, worksheet.lever_graphs_k3302, 0.002); end
  def test_lever_graphs_l3302; assert_in_epsilon(3256662822013.7827, worksheet.lever_graphs_l3302, 0.002); end
  def test_lever_graphs_m3302; assert_in_epsilon(4426137440432.912, worksheet.lever_graphs_m3302, 0.002); end
  def test_lever_graphs_n3302; assert_in_epsilon(5989808588231.523, worksheet.lever_graphs_n3302, 0.002); end
  def test_lever_graphs_o3302; assert_in_epsilon(8074200549519.234, worksheet.lever_graphs_o3302, 0.002); end
  def test_lever_graphs_p3302; assert_in_epsilon(10842436341770.746, worksheet.lever_graphs_p3302, 0.002); end
  def test_lever_graphs_q3302; assert_in_epsilon(14505888415235.67, worksheet.lever_graphs_q3302, 0.002); end
  def test_lever_graphs_d3303; assert_equal("International", worksheet.lever_graphs_d3303); end
  def test_lever_graphs_e3303; assert_in_epsilon(2.0, worksheet.lever_graphs_e3303, 0.002); end
  def test_lever_graphs_h3303; assert_equal("International fast growth", worksheet.lever_graphs_h3303); end
  def test_lever_graphs_i3303; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3303, 0.002); end
  def test_lever_graphs_j3303; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_j3303, 0.002); end
  def test_lever_graphs_k3303; assert_in_epsilon(2256786271425.642, worksheet.lever_graphs_k3303, 0.002); end
  def test_lever_graphs_l3303; assert_in_epsilon(2918137572443.4985, worksheet.lever_graphs_l3303, 0.002); end
  def test_lever_graphs_m3303; assert_in_epsilon(3754259986232.103, worksheet.lever_graphs_m3303, 0.002); end
  def test_lever_graphs_n3303; assert_in_epsilon(4809266862130.464, worksheet.lever_graphs_n3303, 0.002); end
  def test_lever_graphs_o3303; assert_in_epsilon(6136658383465.779, worksheet.lever_graphs_o3303, 0.002); end
  def test_lever_graphs_p3303; assert_in_epsilon(7800559956522.215, worksheet.lever_graphs_p3303, 0.002); end
  def test_lever_graphs_q3303; assert_in_epsilon(9878925577438.08, worksheet.lever_graphs_q3303, 0.002); end
  def test_lever_graphs_d3304; assert_equal("International", worksheet.lever_graphs_d3304); end
  def test_lever_graphs_e3304; assert_in_epsilon(3.0, worksheet.lever_graphs_e3304, 0.002); end
  def test_lever_graphs_h3304; assert_equal("International fast growth", worksheet.lever_graphs_h3304); end
  def test_lever_graphs_i3304; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3304, 0.002); end
  def test_lever_graphs_j3304; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_j3304, 0.002); end
  def test_lever_graphs_k3304; assert_in_epsilon(2106430665017.3262, worksheet.lever_graphs_k3304, 0.002); end
  def test_lever_graphs_l3304; assert_in_epsilon(2542255742205.995, worksheet.lever_graphs_l3304, 0.002); end
  def test_lever_graphs_m3304; assert_in_epsilon(3052773313092.0254, worksheet.lever_graphs_m3304, 0.002); end
  def test_lever_graphs_n3304; assert_in_epsilon(3650108931936.997, worksheet.lever_graphs_n3304, 0.002); end
  def test_lever_graphs_o3304; assert_in_epsilon(4347260188533.1104, worksheet.lever_graphs_o3304, 0.002); end
  def test_lever_graphs_p3304; assert_in_epsilon(5157820250714.642, worksheet.lever_graphs_p3304, 0.002); end
  def test_lever_graphs_q3304; assert_in_epsilon(6096869154453.556, worksheet.lever_graphs_q3304, 0.002); end
  def test_lever_graphs_d3305; assert_equal("International", worksheet.lever_graphs_d3305); end
  def test_lever_graphs_e3305; assert_in_epsilon(4.0, worksheet.lever_graphs_e3305, 0.002); end
  def test_lever_graphs_h3305; assert_equal("International fast growth", worksheet.lever_graphs_h3305); end
  def test_lever_graphs_i3305; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3305, 0.002); end
  def test_lever_graphs_j3305; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_j3305, 0.002); end
  def test_lever_graphs_k3305; assert_in_epsilon(1969503887599.12, worksheet.lever_graphs_k3305, 0.002); end
  def test_lever_graphs_l3305; assert_in_epsilon(2222483701169.1313, worksheet.lever_graphs_l3305, 0.002); end
  def test_lever_graphs_m3305; assert_in_epsilon(2495304662807.9087, worksheet.lever_graphs_m3305, 0.002); end
  def test_lever_graphs_n3305; assert_in_epsilon(2789616614868.6494, worksheet.lever_graphs_n3305, 0.002); end
  def test_lever_graphs_o3305; assert_in_epsilon(3106447393394.8965, worksheet.lever_graphs_o3305, 0.002); end
  def test_lever_graphs_p3305; assert_in_epsilon(3446071199855.789, worksheet.lever_graphs_p3305, 0.002); end
  def test_lever_graphs_q3305; assert_in_epsilon(3808680933596.9814, worksheet.lever_graphs_q3305, 0.002); end
  def test_lever_graphs_d3308; assert_equal("Type of travel", worksheet.lever_graphs_d3308); end
  def test_lever_graphs_e3308; assert_equal("Level", worksheet.lever_graphs_e3308); end
  def test_lever_graphs_f3308; assert_equal("Notes", worksheet.lever_graphs_f3308); end
  def test_lever_graphs_g3308; assert_equal("…", worksheet.lever_graphs_g3308); end
  def test_lever_graphs_h3308; assert_equal("…2", worksheet.lever_graphs_h3308); end
  def test_lever_graphs_i3308; assert_equal("2011", worksheet.lever_graphs_i3308); end
  def test_lever_graphs_j3308; assert_equal("2015", worksheet.lever_graphs_j3308); end
  def test_lever_graphs_k3308; assert_equal("2020", worksheet.lever_graphs_k3308); end
  def test_lever_graphs_l3308; assert_equal("2025", worksheet.lever_graphs_l3308); end
  def test_lever_graphs_m3308; assert_equal("2030", worksheet.lever_graphs_m3308); end
  def test_lever_graphs_n3308; assert_equal("2035", worksheet.lever_graphs_n3308); end
  def test_lever_graphs_o3308; assert_equal("2040", worksheet.lever_graphs_o3308); end
  def test_lever_graphs_p3308; assert_equal("2045", worksheet.lever_graphs_p3308); end
  def test_lever_graphs_q3308; assert_equal("2050", worksheet.lever_graphs_q3308); end
  def test_lever_graphs_d3309; assert_equal("Urban", worksheet.lever_graphs_d3309); end
  def test_lever_graphs_e3309; assert_in_delta(1.0, worksheet.lever_graphs_e3309, 0.002); end
  def test_lever_graphs_i3309; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3309, 0.002); end
  def test_lever_graphs_j3309; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_j3309, 0.002); end
  def test_lever_graphs_k3309; assert_in_epsilon(48892907731165.17, worksheet.lever_graphs_k3309, 0.002); end
  def test_lever_graphs_l3309; assert_in_epsilon(55808489113777.56, worksheet.lever_graphs_l3309, 0.002); end
  def test_lever_graphs_m3309; assert_in_epsilon(62185715036950.28, worksheet.lever_graphs_m3309, 0.002); end
  def test_lever_graphs_n3309; assert_in_epsilon(68183934884923.55, worksheet.lever_graphs_n3309, 0.002); end
  def test_lever_graphs_o3309; assert_in_epsilon(73443103329227.84, worksheet.lever_graphs_o3309, 0.002); end
  def test_lever_graphs_p3309; assert_in_epsilon(78767334311672.33, worksheet.lever_graphs_p3309, 0.002); end
  def test_lever_graphs_q3309; assert_in_epsilon(83803681363114.66, worksheet.lever_graphs_q3309, 0.002); end
  def test_lever_graphs_d3310; assert_equal("Urban", worksheet.lever_graphs_d3310); end
  def test_lever_graphs_e3310; assert_in_epsilon(2.0, worksheet.lever_graphs_e3310, 0.002); end
  def test_lever_graphs_i3310; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3310, 0.002); end
  def test_lever_graphs_j3310; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_j3310, 0.002); end
  def test_lever_graphs_k3310; assert_in_epsilon(47401406860197.45, worksheet.lever_graphs_k3310, 0.002); end
  def test_lever_graphs_l3310; assert_in_epsilon(53693590399564.72, worksheet.lever_graphs_l3310, 0.002); end
  def test_lever_graphs_m3310; assert_in_epsilon(59807089872771.09, worksheet.lever_graphs_m3310, 0.002); end
  def test_lever_graphs_n3310; assert_in_epsilon(65375164770543.3, worksheet.lever_graphs_n3310, 0.002); end
  def test_lever_graphs_o3310; assert_in_epsilon(70406524338781.75, worksheet.lever_graphs_o3310, 0.002); end
  def test_lever_graphs_p3310; assert_in_epsilon(74723417222207.83, worksheet.lever_graphs_p3310, 0.002); end
  def test_lever_graphs_q3310; assert_in_epsilon(78847073557050.0, worksheet.lever_graphs_q3310, 0.002); end
  def test_lever_graphs_d3311; assert_equal("Urban", worksheet.lever_graphs_d3311); end
  def test_lever_graphs_e3311; assert_in_epsilon(3.0, worksheet.lever_graphs_e3311, 0.002); end
  def test_lever_graphs_i3311; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3311, 0.002); end
  def test_lever_graphs_j3311; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_j3311, 0.002); end
  def test_lever_graphs_k3311; assert_in_epsilon(46502960452080.49, worksheet.lever_graphs_k3311, 0.002); end
  def test_lever_graphs_l3311; assert_in_epsilon(52192609881092.64, worksheet.lever_graphs_l3311, 0.002); end
  def test_lever_graphs_m3311; assert_in_epsilon(57537765515406.73, worksheet.lever_graphs_m3311, 0.002); end
  def test_lever_graphs_n3311; assert_in_epsilon(62262820720711.49, worksheet.lever_graphs_n3311, 0.002); end
  def test_lever_graphs_o3311; assert_in_epsilon(66535794114050.734, worksheet.lever_graphs_o3311, 0.002); end
  def test_lever_graphs_p3311; assert_in_epsilon(70538210368895.19, worksheet.lever_graphs_p3311, 0.002); end
  def test_lever_graphs_q3311; assert_in_epsilon(74184717265453.98, worksheet.lever_graphs_q3311, 0.002); end
  def test_lever_graphs_d3312; assert_equal("Urban", worksheet.lever_graphs_d3312); end
  def test_lever_graphs_e3312; assert_in_epsilon(4.0, worksheet.lever_graphs_e3312, 0.002); end
  def test_lever_graphs_i3312; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3312, 0.002); end
  def test_lever_graphs_j3312; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_j3312, 0.002); end
  def test_lever_graphs_k3312; assert_in_epsilon(46123530390202.59, worksheet.lever_graphs_k3312, 0.002); end
  def test_lever_graphs_l3312; assert_in_epsilon(51224658846782.09, worksheet.lever_graphs_l3312, 0.002); end
  def test_lever_graphs_m3312; assert_in_epsilon(55972566351414.59, worksheet.lever_graphs_m3312, 0.002); end
  def test_lever_graphs_n3312; assert_in_epsilon(60277809194940.22, worksheet.lever_graphs_n3312, 0.002); end
  def test_lever_graphs_o3312; assert_in_epsilon(64076256116158.13, worksheet.lever_graphs_o3312, 0.002); end
  def test_lever_graphs_p3312; assert_in_epsilon(67585340455738.836, worksheet.lever_graphs_p3312, 0.002); end
  def test_lever_graphs_q3312; assert_in_epsilon(70951135393209.64, worksheet.lever_graphs_q3312, 0.002); end
  def test_lever_graphs_d3313; assert_equal("Rural", worksheet.lever_graphs_d3313); end
  def test_lever_graphs_e3313; assert_in_delta(1.0, worksheet.lever_graphs_e3313, 0.002); end
  def test_lever_graphs_i3313; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3313, 0.002); end
  def test_lever_graphs_j3313; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_j3313, 0.002); end
  def test_lever_graphs_k3313; assert_in_epsilon(22743722631810.023, worksheet.lever_graphs_k3313, 0.002); end
  def test_lever_graphs_l3313; assert_in_epsilon(24719371432055.207, worksheet.lever_graphs_l3313, 0.002); end
  def test_lever_graphs_m3313; assert_in_epsilon(26839747674971.367, worksheet.lever_graphs_m3313, 0.002); end
  def test_lever_graphs_n3313; assert_in_epsilon(28866308839203.383, worksheet.lever_graphs_n3313, 0.002); end
  def test_lever_graphs_o3313; assert_in_epsilon(31008360825434.53, worksheet.lever_graphs_o3313, 0.002); end
  def test_lever_graphs_p3313; assert_in_epsilon(33007970038429.07, worksheet.lever_graphs_p3313, 0.002); end
  def test_lever_graphs_q3313; assert_in_epsilon(34989508310274.734, worksheet.lever_graphs_q3313, 0.002); end
  def test_lever_graphs_d3314; assert_equal("Rural", worksheet.lever_graphs_d3314); end
  def test_lever_graphs_e3314; assert_in_epsilon(2.0, worksheet.lever_graphs_e3314, 0.002); end
  def test_lever_graphs_i3314; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3314, 0.002); end
  def test_lever_graphs_j3314; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_j3314, 0.002); end
  def test_lever_graphs_k3314; assert_in_epsilon(22683185835426.32, worksheet.lever_graphs_k3314, 0.002); end
  def test_lever_graphs_l3314; assert_in_epsilon(24380739551626.383, worksheet.lever_graphs_l3314, 0.002); end
  def test_lever_graphs_m3314; assert_in_epsilon(26175306930377.797, worksheet.lever_graphs_m3314, 0.002); end
  def test_lever_graphs_n3314; assert_in_epsilon(27572467757650.05, worksheet.lever_graphs_n3314, 0.002); end
  def test_lever_graphs_o3314; assert_in_epsilon(28833719569705.477, worksheet.lever_graphs_o3314, 0.002); end
  def test_lever_graphs_p3314; assert_in_epsilon(30018773470332.34, worksheet.lever_graphs_p3314, 0.002); end
  def test_lever_graphs_q3314; assert_in_epsilon(31107901487062.098, worksheet.lever_graphs_q3314, 0.002); end
  def test_lever_graphs_d3315; assert_equal("Rural", worksheet.lever_graphs_d3315); end
  def test_lever_graphs_e3315; assert_in_epsilon(3.0, worksheet.lever_graphs_e3315, 0.002); end
  def test_lever_graphs_i3315; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3315, 0.002); end
  def test_lever_graphs_j3315; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_j3315, 0.002); end
  def test_lever_graphs_k3315; assert_in_epsilon(22215042687081.79, worksheet.lever_graphs_k3315, 0.002); end
  def test_lever_graphs_l3315; assert_in_epsilon(23371429990742.28, worksheet.lever_graphs_l3315, 0.002); end
  def test_lever_graphs_m3315; assert_in_epsilon(24468497571194.83, worksheet.lever_graphs_m3315, 0.002); end
  def test_lever_graphs_n3315; assert_in_epsilon(25610078011956.69, worksheet.lever_graphs_n3315, 0.002); end
  def test_lever_graphs_o3315; assert_in_epsilon(26752656788843.934, worksheet.lever_graphs_o3315, 0.002); end
  def test_lever_graphs_p3315; assert_in_epsilon(27243128629428.344, worksheet.lever_graphs_p3315, 0.002); end
  def test_lever_graphs_q3315; assert_in_epsilon(27564048911210.48, worksheet.lever_graphs_q3315, 0.002); end
  def test_lever_graphs_d3316; assert_equal("Rural", worksheet.lever_graphs_d3316); end
  def test_lever_graphs_e3316; assert_in_epsilon(4.0, worksheet.lever_graphs_e3316, 0.002); end
  def test_lever_graphs_i3316; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3316, 0.002); end
  def test_lever_graphs_j3316; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_j3316, 0.002); end
  def test_lever_graphs_k3316; assert_in_epsilon(22165017023224.723, worksheet.lever_graphs_k3316, 0.002); end
  def test_lever_graphs_l3316; assert_in_epsilon(23161431052152.246, worksheet.lever_graphs_l3316, 0.002); end
  def test_lever_graphs_m3316; assert_in_epsilon(24142927347481.258, worksheet.lever_graphs_m3316, 0.002); end
  def test_lever_graphs_n3316; assert_in_epsilon(25180223686031.605, worksheet.lever_graphs_n3316, 0.002); end
  def test_lever_graphs_o3316; assert_in_epsilon(25751059829452.42, worksheet.lever_graphs_o3316, 0.002); end
  def test_lever_graphs_p3316; assert_in_epsilon(25693045296858.703, worksheet.lever_graphs_p3316, 0.002); end
  def test_lever_graphs_q3316; assert_in_epsilon(25492448708726.77, worksheet.lever_graphs_q3316, 0.002); end
  def test_lever_graphs_d3317; assert_equal("International", worksheet.lever_graphs_d3317); end
  def test_lever_graphs_e3317; assert_in_delta(1.0, worksheet.lever_graphs_e3317, 0.002); end
  def test_lever_graphs_i3317; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3317, 0.002); end
  def test_lever_graphs_j3317; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_j3317, 0.002); end
  def test_lever_graphs_k3317; assert_in_epsilon(7500456847458.744, worksheet.lever_graphs_k3317, 0.002); end
  def test_lever_graphs_l3317; assert_in_epsilon(9055363476540.6, worksheet.lever_graphs_l3317, 0.002); end
  def test_lever_graphs_m3317; assert_in_epsilon(10962122833407.445, worksheet.lever_graphs_m3317, 0.002); end
  def test_lever_graphs_n3317; assert_in_epsilon(13321867178999.395, worksheet.lever_graphs_n3317, 0.002); end
  def test_lever_graphs_o3317; assert_in_epsilon(16263151011301.176, worksheet.lever_graphs_o3317, 0.002); end
  def test_lever_graphs_p3317; assert_in_epsilon(19948904729803.855, worksheet.lever_graphs_p3317, 0.002); end
  def test_lever_graphs_q3317; assert_in_epsilon(24589810989393.555, worksheet.lever_graphs_q3317, 0.002); end
  def test_lever_graphs_d3318; assert_equal("International", worksheet.lever_graphs_d3318); end
  def test_lever_graphs_e3318; assert_in_epsilon(2.0, worksheet.lever_graphs_e3318, 0.002); end
  def test_lever_graphs_i3318; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3318, 0.002); end
  def test_lever_graphs_j3318; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_j3318, 0.002); end
  def test_lever_graphs_k3318; assert_in_epsilon(7219959773089.232, worksheet.lever_graphs_k3318, 0.002); end
  def test_lever_graphs_l3318; assert_in_epsilon(8374804755984.01, worksheet.lever_graphs_l3318, 0.002); end
  def test_lever_graphs_m3318; assert_in_epsilon(9720575785129.662, worksheet.lever_graphs_m3318, 0.002); end
  def test_lever_graphs_n3318; assert_in_epsilon(11301879291282.648, worksheet.lever_graphs_n3318, 0.002); end
  def test_lever_graphs_o3318; assert_in_epsilon(13170947008609.145, worksheet.lever_graphs_o3318, 0.002); end
  def test_lever_graphs_p3318; assert_in_epsilon(15388786924655.334, worksheet.lever_graphs_p3318, 0.002); end
  def test_lever_graphs_q3318; assert_in_epsilon(18030063064144.63, worksheet.lever_graphs_q3318, 0.002); end
  def test_lever_graphs_d3319; assert_equal("International", worksheet.lever_graphs_d3319); end
  def test_lever_graphs_e3319; assert_in_epsilon(3.0, worksheet.lever_graphs_e3319, 0.002); end
  def test_lever_graphs_i3319; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3319, 0.002); end
  def test_lever_graphs_j3319; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_j3319, 0.002); end
  def test_lever_graphs_k3319; assert_in_epsilon(6863671548880.609, worksheet.lever_graphs_k3319, 0.002); end
  def test_lever_graphs_l3319; assert_in_epsilon(7555499665590.644, worksheet.lever_graphs_l3319, 0.002); end
  def test_lever_graphs_m3319; assert_in_epsilon(8306812315095.51, worksheet.lever_graphs_m3319, 0.002); end
  def test_lever_graphs_n3319; assert_in_epsilon(9130382258512.2, worksheet.lever_graphs_n3319, 0.002); end
  def test_lever_graphs_o3319; assert_in_epsilon(10038391544090.27, worksheet.lever_graphs_o3319, 0.002); end
  def test_lever_graphs_p3319; assert_in_epsilon(11042386046980.402, worksheet.lever_graphs_p3319, 0.002); end
  def test_lever_graphs_q3319; assert_in_epsilon(12155688652622.717, worksheet.lever_graphs_q3319, 0.002); end
  def test_lever_graphs_d3320; assert_equal("International", worksheet.lever_graphs_d3320); end
  def test_lever_graphs_e3320; assert_in_epsilon(4.0, worksheet.lever_graphs_e3320, 0.002); end
  def test_lever_graphs_i3320; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3320, 0.002); end
  def test_lever_graphs_j3320; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_j3320, 0.002); end
  def test_lever_graphs_k3320; assert_in_epsilon(6406723604726.341, worksheet.lever_graphs_k3320, 0.002); end
  def test_lever_graphs_l3320; assert_in_epsilon(6583928892453.129, worksheet.lever_graphs_l3320, 0.002); end
  def test_lever_graphs_m3320; assert_in_epsilon(6758749685038.742, worksheet.lever_graphs_m3320, 0.002); end
  def test_lever_graphs_n3320; assert_in_epsilon(6937488993626.326, worksheet.lever_graphs_n3320, 0.002); end
  def test_lever_graphs_o3320; assert_in_epsilon(7124147970756.542, worksheet.lever_graphs_o3320, 0.002); end
  def test_lever_graphs_p3320; assert_in_epsilon(7320870142749.894, worksheet.lever_graphs_p3320, 0.002); end
  def test_lever_graphs_q3320; assert_in_epsilon(7529842745500.682, worksheet.lever_graphs_q3320, 0.002); end
  def test_lever_graphs_d3323; assert_equal("Type of travel", worksheet.lever_graphs_d3323); end
  def test_lever_graphs_e3323; assert_equal("Level", worksheet.lever_graphs_e3323); end
  def test_lever_graphs_f3323; assert_equal("Notes", worksheet.lever_graphs_f3323); end
  def test_lever_graphs_g3323; assert_equal("…", worksheet.lever_graphs_g3323); end
  def test_lever_graphs_h3323; assert_equal("…2", worksheet.lever_graphs_h3323); end
  def test_lever_graphs_i3323; assert_equal("2011", worksheet.lever_graphs_i3323); end
  def test_lever_graphs_j3323; assert_equal("2015", worksheet.lever_graphs_j3323); end
  def test_lever_graphs_k3323; assert_equal("2020", worksheet.lever_graphs_k3323); end
  def test_lever_graphs_l3323; assert_equal("2025", worksheet.lever_graphs_l3323); end
  def test_lever_graphs_m3323; assert_equal("2030", worksheet.lever_graphs_m3323); end
  def test_lever_graphs_n3323; assert_equal("2035", worksheet.lever_graphs_n3323); end
  def test_lever_graphs_o3323; assert_equal("2040", worksheet.lever_graphs_o3323); end
  def test_lever_graphs_p3323; assert_equal("2045", worksheet.lever_graphs_p3323); end
  def test_lever_graphs_q3323; assert_equal("2050", worksheet.lever_graphs_q3323); end
  def test_lever_graphs_d3324; assert_equal("Urban", worksheet.lever_graphs_d3324); end
  def test_lever_graphs_e3324; assert_in_delta(1.0, worksheet.lever_graphs_e3324, 0.002); end
  def test_lever_graphs_i3324; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3324, 0.002); end
  def test_lever_graphs_j3324; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_j3324, 0.002); end
  def test_lever_graphs_k3324; assert_in_epsilon(11270.80216501231, worksheet.lever_graphs_k3324, 0.002); end
  def test_lever_graphs_l3324; assert_in_epsilon(11859.577718427718, worksheet.lever_graphs_l3324, 0.002); end
  def test_lever_graphs_m3324; assert_in_epsilon(12294.142033584072, worksheet.lever_graphs_m3324, 0.002); end
  def test_lever_graphs_n3324; assert_in_epsilon(12640.149743377651, worksheet.lever_graphs_n3324, 0.002); end
  def test_lever_graphs_o3324; assert_in_epsilon(12850.008246738349, worksheet.lever_graphs_o3324, 0.002); end
  def test_lever_graphs_p3324; assert_in_epsilon(13060.574958158688, worksheet.lever_graphs_p3324, 0.002); end
  def test_lever_graphs_q3324; assert_in_epsilon(13221.141651050195, worksheet.lever_graphs_q3324, 0.002); end
  def test_lever_graphs_d3325; assert_equal("Urban", worksheet.lever_graphs_d3325); end
  def test_lever_graphs_e3325; assert_in_epsilon(2.0, worksheet.lever_graphs_e3325, 0.002); end
  def test_lever_graphs_i3325; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3325, 0.002); end
  def test_lever_graphs_j3325; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_j3325, 0.002); end
  def test_lever_graphs_k3325; assert_in_epsilon(10926.981107405105, worksheet.lever_graphs_k3325, 0.002); end
  def test_lever_graphs_l3325; assert_in_epsilon(11410.151366521372, worksheet.lever_graphs_l3325, 0.002); end
  def test_lever_graphs_m3325; assert_in_epsilon(11823.886837584474, worksheet.lever_graphs_m3325, 0.002); end
  def test_lever_graphs_n3325; assert_in_epsilon(12119.451210792073, worksheet.lever_graphs_n3325, 0.002); end
  def test_lever_graphs_o3325; assert_in_epsilon(12318.711728749626, worksheet.lever_graphs_o3325, 0.002); end
  def test_lever_graphs_p3325; assert_in_epsilon(12390.044683990156, worksheet.lever_graphs_p3325, 0.002); end
  def test_lever_graphs_q3325; assert_in_epsilon(12439.171063997617, worksheet.lever_graphs_q3325, 0.002); end
  def test_lever_graphs_d3326; assert_equal("Urban", worksheet.lever_graphs_d3326); end
  def test_lever_graphs_e3326; assert_in_epsilon(3.0, worksheet.lever_graphs_e3326, 0.002); end
  def test_lever_graphs_i3326; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3326, 0.002); end
  def test_lever_graphs_j3326; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_j3326, 0.002); end
  def test_lever_graphs_k3326; assert_in_epsilon(10719.871074648809, worksheet.lever_graphs_k3326, 0.002); end
  def test_lever_graphs_l3326; assert_in_epsilon(11091.185642930926, worksheet.lever_graphs_l3326, 0.002); end
  def test_lever_graphs_m3326; assert_in_epsilon(11375.240457091271, worksheet.lever_graphs_m3326, 0.002); end
  def test_lever_graphs_n3326; assert_in_epsilon(11542.475198639346, worksheet.lever_graphs_n3326, 0.002); end
  def test_lever_graphs_o3326; assert_in_epsilon(11641.467534890806, worksheet.lever_graphs_o3326, 0.002); end
  def test_lever_graphs_p3326; assert_in_epsilon(11696.086861235844, worksheet.lever_graphs_p3326, 0.002); end
  def test_lever_graphs_q3326; assert_in_epsilon(11703.622554001171, worksheet.lever_graphs_q3326, 0.002); end
  def test_lever_graphs_d3327; assert_equal("Urban", worksheet.lever_graphs_d3327); end
  def test_lever_graphs_e3327; assert_in_epsilon(4.0, worksheet.lever_graphs_e3327, 0.002); end
  def test_lever_graphs_i3327; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3327, 0.002); end
  def test_lever_graphs_j3327; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_j3327, 0.002); end
  def test_lever_graphs_k3327; assert_in_epsilon(10632.404786360165, worksheet.lever_graphs_k3327, 0.002); end
  def test_lever_graphs_l3327; assert_in_epsilon(10885.49129962708, worksheet.lever_graphs_l3327, 0.002); end
  def test_lever_graphs_m3327; assert_in_epsilon(11065.799923657953, worksheet.lever_graphs_m3327, 0.002); end
  def test_lever_graphs_n3327; assert_in_epsilon(11174.487593194952, worksheet.lever_graphs_n3327, 0.002); end
  def test_lever_graphs_o3327; assert_in_epsilon(11211.13327444421, worksheet.lever_graphs_o3327, 0.002); end
  def test_lever_graphs_p3327; assert_in_epsilon(11206.465380713618, worksheet.lever_graphs_p3327, 0.002); end
  def test_lever_graphs_q3327; assert_in_epsilon(11193.482148736977, worksheet.lever_graphs_q3327, 0.002); end
  def test_lever_graphs_d3328; assert_equal("Rural", worksheet.lever_graphs_d3328); end
  def test_lever_graphs_e3328; assert_in_delta(1.0, worksheet.lever_graphs_e3328, 0.002); end
  def test_lever_graphs_i3328; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3328, 0.002); end
  def test_lever_graphs_j3328; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_j3328, 0.002); end
  def test_lever_graphs_k3328; assert_in_epsilon(6731.433122965088, worksheet.lever_graphs_k3328, 0.002); end
  def test_lever_graphs_l3328; assert_in_epsilon(7318.53503461338, worksheet.lever_graphs_l3328, 0.002); end
  def test_lever_graphs_m3328; assert_in_epsilon(7971.936700748705, worksheet.lever_graphs_m3328, 0.002); end
  def test_lever_graphs_n3328; assert_in_epsilon(8618.835299829303, worksheet.lever_graphs_n3328, 0.002); end
  def test_lever_graphs_o3328; assert_in_epsilon(9330.666145830264, worksheet.lever_graphs_o3328, 0.002); end
  def test_lever_graphs_p3328; assert_in_epsilon(10071.038455242127, worksheet.lever_graphs_p3328, 0.002); end
  def test_lever_graphs_q3328; assert_in_epsilon(10892.240488440504, worksheet.lever_graphs_q3328, 0.002); end
  def test_lever_graphs_d3329; assert_equal("Rural", worksheet.lever_graphs_d3329); end
  def test_lever_graphs_e3329; assert_in_epsilon(2.0, worksheet.lever_graphs_e3329, 0.002); end
  def test_lever_graphs_i3329; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3329, 0.002); end
  def test_lever_graphs_j3329; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_j3329, 0.002); end
  def test_lever_graphs_k3329; assert_in_epsilon(6713.516117779423, worksheet.lever_graphs_k3329, 0.002); end
  def test_lever_graphs_l3329; assert_in_epsilon(7218.278064586157, worksheet.lever_graphs_l3329, 0.002); end
  def test_lever_graphs_m3329; assert_in_epsilon(7774.584638373032, worksheet.lever_graphs_m3329, 0.002); end
  def test_lever_graphs_n3329; assert_in_epsilon(8232.523241430052, worksheet.lever_graphs_n3329, 0.002); end
  def test_lever_graphs_o3329; assert_in_epsilon(8676.29903308971, worksheet.lever_graphs_o3329, 0.002); end
  def test_lever_graphs_p3329; assert_in_epsilon(9159.006798871516, worksheet.lever_graphs_p3329, 0.002); end
  def test_lever_graphs_q3329; assert_in_epsilon(9683.895557580525, worksheet.lever_graphs_q3329, 0.002); end
  def test_lever_graphs_d3330; assert_equal("Rural", worksheet.lever_graphs_d3330); end
  def test_lever_graphs_e3330; assert_in_epsilon(3.0, worksheet.lever_graphs_e3330, 0.002); end
  def test_lever_graphs_i3330; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3330, 0.002); end
  def test_lever_graphs_j3330; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_j3330, 0.002); end
  def test_lever_graphs_k3330; assert_in_epsilon(6574.96033489065, worksheet.lever_graphs_k3330, 0.002); end
  def test_lever_graphs_l3330; assert_in_epsilon(6919.457060888556, worksheet.lever_graphs_l3330, 0.002); end
  def test_lever_graphs_m3330; assert_in_epsilon(7267.6284502438675, worksheet.lever_graphs_m3330, 0.002); end
  def test_lever_graphs_n3330; assert_in_epsilon(7646.597479102077, worksheet.lever_graphs_n3330, 0.002); end
  def test_lever_graphs_o3330; assert_in_epsilon(8050.090439025464, worksheet.lever_graphs_o3330, 0.002); end
  def test_lever_graphs_p3330; assert_in_epsilon(8312.131759349428, worksheet.lever_graphs_p3330, 0.002); end
  def test_lever_graphs_q3330; assert_in_epsilon(8580.693587165293, worksheet.lever_graphs_q3330, 0.002); end
  def test_lever_graphs_d3331; assert_equal("Rural", worksheet.lever_graphs_d3331); end
  def test_lever_graphs_e3331; assert_in_epsilon(4.0, worksheet.lever_graphs_e3331, 0.002); end
  def test_lever_graphs_i3331; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3331, 0.002); end
  def test_lever_graphs_j3331; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_j3331, 0.002); end
  def test_lever_graphs_k3331; assert_in_epsilon(6560.154297368244, worksheet.lever_graphs_k3331, 0.002); end
  def test_lever_graphs_l3331; assert_in_epsilon(6857.283773289915, worksheet.lever_graphs_l3331, 0.002); end
  def test_lever_graphs_m3331; assert_in_epsilon(7170.9276449112795, worksheet.lever_graphs_m3331, 0.002); end
  def test_lever_graphs_n3331; assert_in_epsilon(7518.252575058235, worksheet.lever_graphs_n3331, 0.002); end
  def test_lever_graphs_o3331; assert_in_epsilon(7748.701826664657, worksheet.lever_graphs_o3331, 0.002); end
  def test_lever_graphs_p3331; assert_in_epsilon(7839.1869271478745, worksheet.lever_graphs_p3331, 0.002); end
  def test_lever_graphs_q3331; assert_in_epsilon(7935.8040562447195, worksheet.lever_graphs_q3331, 0.002); end
  def test_lever_graphs_d3332; assert_equal("International", worksheet.lever_graphs_d3332); end
  def test_lever_graphs_e3332; assert_in_delta(1.0, worksheet.lever_graphs_e3332, 0.002); end
  def test_lever_graphs_i3332; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3332, 0.002); end
  def test_lever_graphs_j3332; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_j3332, 0.002); end
  def test_lever_graphs_k3332; assert_in_epsilon(971.971078424184, worksheet.lever_graphs_k3332, 0.002); end
  def test_lever_graphs_l3332; assert_in_epsilon(1120.240111020011, worksheet.lever_graphs_l3332, 0.002); end
  def test_lever_graphs_m3332; assert_in_epsilon(1301.151905754007, worksheet.lever_graphs_m3332, 0.002); end
  def test_lever_graphs_n3332; assert_in_epsilon(1523.6401820699998, worksheet.lever_graphs_n3332, 0.002); end
  def test_lever_graphs_o3332; assert_in_epsilon(1799.2824634043834, worksheet.lever_graphs_o3332, 0.002); end
  def test_lever_graphs_p3332; assert_in_epsilon(2143.099060207938, worksheet.lever_graphs_p3332, 0.002); end
  def test_lever_graphs_q3332; assert_in_epsilon(2574.5945547161623, worksheet.lever_graphs_q3332, 0.002); end
  def test_lever_graphs_d3333; assert_equal("International", worksheet.lever_graphs_d3333); end
  def test_lever_graphs_e3333; assert_in_epsilon(2.0, worksheet.lever_graphs_e3333, 0.002); end
  def test_lever_graphs_i3333; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3333, 0.002); end
  def test_lever_graphs_j3333; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_j3333, 0.002); end
  def test_lever_graphs_k3333; assert_in_epsilon(935.6219533756032, worksheet.lever_graphs_k3333, 0.002); end
  def test_lever_graphs_l3333; assert_in_epsilon(1036.0481093795418, worksheet.lever_graphs_l3333, 0.002); end
  def test_lever_graphs_m3333; assert_in_epsilon(1153.7861689802146, worksheet.lever_graphs_m3333, 0.002); end
  def test_lever_graphs_n3333; assert_in_epsilon(1292.6114027205344, worksheet.lever_graphs_n3333, 0.002); end
  def test_lever_graphs_o3333; assert_in_epsilon(1457.174809638739, worksheet.lever_graphs_o3333, 0.002); end
  def test_lever_graphs_p3333; assert_in_epsilon(1653.2082960272533, worksheet.lever_graphs_p3333, 0.002); end
  def test_lever_graphs_q3333; assert_in_epsilon(1887.777917697634, worksheet.lever_graphs_q3333, 0.002); end
  def test_lever_graphs_d3334; assert_equal("International", worksheet.lever_graphs_d3334); end
  def test_lever_graphs_e3334; assert_in_epsilon(3.0, worksheet.lever_graphs_e3334, 0.002); end
  def test_lever_graphs_i3334; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3334, 0.002); end
  def test_lever_graphs_j3334; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_j3334, 0.002); end
  def test_lever_graphs_k3334; assert_in_epsilon(889.4511858401264, worksheet.lever_graphs_k3334, 0.002); end
  def test_lever_graphs_l3334; assert_in_epsilon(934.6917775437978, worksheet.lever_graphs_l3334, 0.002); end
  def test_lever_graphs_m3334; assert_in_epsilon(985.9791610424517, worksheet.lever_graphs_m3334, 0.002); end
  def test_lever_graphs_n3334; assert_in_epsilon(1044.2543150901697, worksheet.lever_graphs_n3334, 0.002); end
  def test_lever_graphs_o3334; assert_in_epsilon(1110.6028501805924, worksheet.lever_graphs_o3334, 0.002); end
  def test_lever_graphs_p3334; assert_in_epsilon(1186.2770152178489, worksheet.lever_graphs_p3334, 0.002); end
  def test_lever_graphs_q3334; assert_in_epsilon(1272.721039920418, worksheet.lever_graphs_q3334, 0.002); end
  def test_lever_graphs_d3335; assert_equal("International", worksheet.lever_graphs_d3335); end
  def test_lever_graphs_e3335; assert_in_epsilon(4.0, worksheet.lever_graphs_e3335, 0.002); end
  def test_lever_graphs_i3335; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3335, 0.002); end
  def test_lever_graphs_j3335; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_j3335, 0.002); end
  def test_lever_graphs_k3335; assert_in_epsilon(830.2361013331315, worksheet.lever_graphs_k3335, 0.002); end
  def test_lever_graphs_l3335; assert_in_epsilon(814.4986396777115, worksheet.lever_graphs_l3335, 0.002); end
  def test_lever_graphs_m3335; assert_in_epsilon(802.2314807859979, worksheet.lever_graphs_m3335, 0.002); end
  def test_lever_graphs_n3335; assert_in_epsilon(793.450111109077, worksheet.lever_graphs_n3335, 0.002); end
  def test_lever_graphs_o3335; assert_in_epsilon(788.1839442782499, worksheet.lever_graphs_o3335, 0.002); end
  def test_lever_graphs_p3335; assert_in_epsilon(786.4767582649091, worksheet.lever_graphs_p3335, 0.002); end
  def test_lever_graphs_q3335; assert_in_epsilon(788.3871957697046, worksheet.lever_graphs_q3335, 0.002); end
  def test_lever_graphs_b1245; assert_equal("Level", worksheet.lever_graphs_b1245); end
  def test_lever_graphs_c1245; assert_equal("1975", worksheet.lever_graphs_c1245); end
  def test_lever_graphs_d1245; assert_equal("1980", worksheet.lever_graphs_d1245); end
  def test_lever_graphs_e1245; assert_equal("1985", worksheet.lever_graphs_e1245); end
  def test_lever_graphs_f1245; assert_equal("1990", worksheet.lever_graphs_f1245); end
  def test_lever_graphs_g1245; assert_equal("1995", worksheet.lever_graphs_g1245); end
  def test_lever_graphs_h1245; assert_equal("2000", worksheet.lever_graphs_h1245); end
  def test_lever_graphs_i1245; assert_equal("2005", worksheet.lever_graphs_i1245); end
  def test_lever_graphs_j1245; assert_equal("2010", worksheet.lever_graphs_j1245); end
  def test_lever_graphs_k1245; assert_equal("2011", worksheet.lever_graphs_k1245); end
  def test_lever_graphs_l1245; assert_equal("2015", worksheet.lever_graphs_l1245); end
  def test_lever_graphs_m1245; assert_equal("2020", worksheet.lever_graphs_m1245); end
  def test_lever_graphs_n1245; assert_equal("2025", worksheet.lever_graphs_n1245); end
  def test_lever_graphs_o1245; assert_equal("2030", worksheet.lever_graphs_o1245); end
  def test_lever_graphs_p1245; assert_equal("2035", worksheet.lever_graphs_p1245); end
  def test_lever_graphs_q1245; assert_equal("2040", worksheet.lever_graphs_q1245); end
  def test_lever_graphs_r1245; assert_equal("2045", worksheet.lever_graphs_r1245); end
  def test_lever_graphs_s1245; assert_equal("2050", worksheet.lever_graphs_s1245); end
  def test_lever_graphs_b1246; assert_equal("Historic data", worksheet.lever_graphs_b1246); end
  def test_lever_graphs_b1247; assert_in_delta(1.0, worksheet.lever_graphs_b1247, 0.002); end
  def test_lever_graphs_k1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1247, 0.002); end
  def test_lever_graphs_l1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1247, 0.002); end
  def test_lever_graphs_m1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1247, 0.002); end
  def test_lever_graphs_n1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1247, 0.002); end
  def test_lever_graphs_o1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1247, 0.002); end
  def test_lever_graphs_p1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1247, 0.002); end
  def test_lever_graphs_q1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1247, 0.002); end
  def test_lever_graphs_r1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1247, 0.002); end
  def test_lever_graphs_s1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1247, 0.002); end
  def test_lever_graphs_b1248; assert_in_epsilon(2.0, worksheet.lever_graphs_b1248, 0.002); end
  def test_lever_graphs_k1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1248, 0.002); end
  def test_lever_graphs_l1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1248, 0.002); end
  def test_lever_graphs_m1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1248, 0.002); end
  def test_lever_graphs_n1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1248, 0.002); end
  def test_lever_graphs_o1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1248, 0.002); end
  def test_lever_graphs_p1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1248, 0.002); end
  def test_lever_graphs_q1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1248, 0.002); end
  def test_lever_graphs_r1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1248, 0.002); end
  def test_lever_graphs_s1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1248, 0.002); end
  def test_lever_graphs_b1249; assert_in_epsilon(3.0, worksheet.lever_graphs_b1249, 0.002); end
  def test_lever_graphs_k1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1249, 0.002); end
  def test_lever_graphs_l1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1249, 0.002); end
  def test_lever_graphs_m1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1249, 0.002); end
  def test_lever_graphs_n1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1249, 0.002); end
  def test_lever_graphs_o1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1249, 0.002); end
  def test_lever_graphs_p1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1249, 0.002); end
  def test_lever_graphs_q1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1249, 0.002); end
  def test_lever_graphs_r1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1249, 0.002); end
  def test_lever_graphs_s1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1249, 0.002); end
  def test_lever_graphs_b1250; assert_in_epsilon(4.0, worksheet.lever_graphs_b1250, 0.002); end
  def test_lever_graphs_k1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1250, 0.002); end
  def test_lever_graphs_l1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1250, 0.002); end
  def test_lever_graphs_m1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1250, 0.002); end
  def test_lever_graphs_n1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1250, 0.002); end
  def test_lever_graphs_o1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1250, 0.002); end
  def test_lever_graphs_p1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1250, 0.002); end
  def test_lever_graphs_q1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1250, 0.002); end
  def test_lever_graphs_r1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1250, 0.002); end
  def test_lever_graphs_s1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1250, 0.002); end
  def test_lever_graphs_b1255; assert_equal("Level", worksheet.lever_graphs_b1255); end
  def test_lever_graphs_c1255; assert_equal("1975", worksheet.lever_graphs_c1255); end
  def test_lever_graphs_d1255; assert_equal("1980", worksheet.lever_graphs_d1255); end
  def test_lever_graphs_e1255; assert_equal("1985", worksheet.lever_graphs_e1255); end
  def test_lever_graphs_f1255; assert_equal("1990", worksheet.lever_graphs_f1255); end
  def test_lever_graphs_g1255; assert_equal("1995", worksheet.lever_graphs_g1255); end
  def test_lever_graphs_h1255; assert_equal("2000", worksheet.lever_graphs_h1255); end
  def test_lever_graphs_i1255; assert_equal("2005", worksheet.lever_graphs_i1255); end
  def test_lever_graphs_j1255; assert_equal("2010", worksheet.lever_graphs_j1255); end
  def test_lever_graphs_k1255; assert_equal("2011", worksheet.lever_graphs_k1255); end
  def test_lever_graphs_l1255; assert_equal("2015", worksheet.lever_graphs_l1255); end
  def test_lever_graphs_m1255; assert_equal("2020", worksheet.lever_graphs_m1255); end
  def test_lever_graphs_n1255; assert_equal("2025", worksheet.lever_graphs_n1255); end
  def test_lever_graphs_o1255; assert_equal("2030", worksheet.lever_graphs_o1255); end
  def test_lever_graphs_p1255; assert_equal("2035", worksheet.lever_graphs_p1255); end
  def test_lever_graphs_q1255; assert_equal("2040", worksheet.lever_graphs_q1255); end
  def test_lever_graphs_r1255; assert_equal("2045", worksheet.lever_graphs_r1255); end
  def test_lever_graphs_s1255; assert_equal("2050", worksheet.lever_graphs_s1255); end
  def test_lever_graphs_b1256; assert_equal("Historic data", worksheet.lever_graphs_b1256); end
  def test_lever_graphs_b1257; assert_in_delta(1.0, worksheet.lever_graphs_b1257, 0.002); end
  def test_lever_graphs_k1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1257, 0.002); end
  def test_lever_graphs_l1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1257, 0.002); end
  def test_lever_graphs_m1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1257, 0.002); end
  def test_lever_graphs_n1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1257, 0.002); end
  def test_lever_graphs_o1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1257, 0.002); end
  def test_lever_graphs_p1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1257, 0.002); end
  def test_lever_graphs_q1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1257, 0.002); end
  def test_lever_graphs_r1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1257, 0.002); end
  def test_lever_graphs_s1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1257, 0.002); end
  def test_lever_graphs_b1258; assert_in_epsilon(2.0, worksheet.lever_graphs_b1258, 0.002); end
  def test_lever_graphs_k1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1258, 0.002); end
  def test_lever_graphs_l1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1258, 0.002); end
  def test_lever_graphs_m1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1258, 0.002); end
  def test_lever_graphs_n1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1258, 0.002); end
  def test_lever_graphs_o1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1258, 0.002); end
  def test_lever_graphs_p1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1258, 0.002); end
  def test_lever_graphs_q1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1258, 0.002); end
  def test_lever_graphs_r1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1258, 0.002); end
  def test_lever_graphs_s1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1258, 0.002); end
  def test_lever_graphs_b1259; assert_in_epsilon(3.0, worksheet.lever_graphs_b1259, 0.002); end
  def test_lever_graphs_k1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1259, 0.002); end
  def test_lever_graphs_l1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1259, 0.002); end
  def test_lever_graphs_m1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1259, 0.002); end
  def test_lever_graphs_n1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1259, 0.002); end
  def test_lever_graphs_o1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1259, 0.002); end
  def test_lever_graphs_p1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1259, 0.002); end
  def test_lever_graphs_q1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1259, 0.002); end
  def test_lever_graphs_r1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1259, 0.002); end
  def test_lever_graphs_s1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1259, 0.002); end
  def test_lever_graphs_b1260; assert_in_epsilon(4.0, worksheet.lever_graphs_b1260, 0.002); end
  def test_lever_graphs_k1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1260, 0.002); end
  def test_lever_graphs_l1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1260, 0.002); end
  def test_lever_graphs_m1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1260, 0.002); end
  def test_lever_graphs_n1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1260, 0.002); end
  def test_lever_graphs_o1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1260, 0.002); end
  def test_lever_graphs_p1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1260, 0.002); end
  def test_lever_graphs_q1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1260, 0.002); end
  def test_lever_graphs_r1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1260, 0.002); end
  def test_lever_graphs_s1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1260, 0.002); end
  def test_lever_graphs_b1275; assert_equal("Level", worksheet.lever_graphs_b1275); end
  def test_lever_graphs_c1275; assert_equal("1975", worksheet.lever_graphs_c1275); end
  def test_lever_graphs_d1275; assert_equal("1980", worksheet.lever_graphs_d1275); end
  def test_lever_graphs_e1275; assert_equal("1985", worksheet.lever_graphs_e1275); end
  def test_lever_graphs_f1275; assert_equal("1990", worksheet.lever_graphs_f1275); end
  def test_lever_graphs_g1275; assert_equal("1995", worksheet.lever_graphs_g1275); end
  def test_lever_graphs_h1275; assert_equal("2000", worksheet.lever_graphs_h1275); end
  def test_lever_graphs_i1275; assert_equal("2005", worksheet.lever_graphs_i1275); end
  def test_lever_graphs_j1275; assert_equal("2010", worksheet.lever_graphs_j1275); end
  def test_lever_graphs_k1275; assert_equal("2011", worksheet.lever_graphs_k1275); end
  def test_lever_graphs_l1275; assert_equal("2015", worksheet.lever_graphs_l1275); end
  def test_lever_graphs_m1275; assert_equal("2020", worksheet.lever_graphs_m1275); end
  def test_lever_graphs_n1275; assert_equal("2025", worksheet.lever_graphs_n1275); end
  def test_lever_graphs_o1275; assert_equal("2030", worksheet.lever_graphs_o1275); end
  def test_lever_graphs_p1275; assert_equal("2035", worksheet.lever_graphs_p1275); end
  def test_lever_graphs_q1275; assert_equal("2040", worksheet.lever_graphs_q1275); end
  def test_lever_graphs_r1275; assert_equal("2045", worksheet.lever_graphs_r1275); end
  def test_lever_graphs_s1275; assert_equal("2050", worksheet.lever_graphs_s1275); end
  def test_lever_graphs_b1276; assert_equal("Historic data", worksheet.lever_graphs_b1276); end
  def test_lever_graphs_b1277; assert_in_delta(1.0, worksheet.lever_graphs_b1277, 0.002); end
  def test_lever_graphs_k1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1277, 0.002); end
  def test_lever_graphs_l1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1277, 0.002); end
  def test_lever_graphs_m1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1277, 0.002); end
  def test_lever_graphs_n1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1277, 0.002); end
  def test_lever_graphs_o1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1277, 0.002); end
  def test_lever_graphs_p1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1277, 0.002); end
  def test_lever_graphs_q1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1277, 0.002); end
  def test_lever_graphs_r1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1277, 0.002); end
  def test_lever_graphs_s1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1277, 0.002); end
  def test_lever_graphs_b1278; assert_in_epsilon(2.0, worksheet.lever_graphs_b1278, 0.002); end
  def test_lever_graphs_k1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1278, 0.002); end
  def test_lever_graphs_l1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1278, 0.002); end
  def test_lever_graphs_m1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1278, 0.002); end
  def test_lever_graphs_n1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1278, 0.002); end
  def test_lever_graphs_o1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1278, 0.002); end
  def test_lever_graphs_p1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1278, 0.002); end
  def test_lever_graphs_q1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1278, 0.002); end
  def test_lever_graphs_r1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1278, 0.002); end
  def test_lever_graphs_s1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1278, 0.002); end
  def test_lever_graphs_b1279; assert_in_epsilon(3.0, worksheet.lever_graphs_b1279, 0.002); end
  def test_lever_graphs_k1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1279, 0.002); end
  def test_lever_graphs_l1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1279, 0.002); end
  def test_lever_graphs_m1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1279, 0.002); end
  def test_lever_graphs_n1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1279, 0.002); end
  def test_lever_graphs_o1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1279, 0.002); end
  def test_lever_graphs_p1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1279, 0.002); end
  def test_lever_graphs_q1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1279, 0.002); end
  def test_lever_graphs_r1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1279, 0.002); end
  def test_lever_graphs_s1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1279, 0.002); end
  def test_lever_graphs_b1280; assert_in_epsilon(4.0, worksheet.lever_graphs_b1280, 0.002); end
  def test_lever_graphs_k1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1280, 0.002); end
  def test_lever_graphs_l1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1280, 0.002); end
  def test_lever_graphs_m1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1280, 0.002); end
  def test_lever_graphs_n1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1280, 0.002); end
  def test_lever_graphs_o1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1280, 0.002); end
  def test_lever_graphs_p1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1280, 0.002); end
  def test_lever_graphs_q1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1280, 0.002); end
  def test_lever_graphs_r1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1280, 0.002); end
  def test_lever_graphs_s1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1280, 0.002); end
  def test_webtool_graphs_b39; assert_equal("Area", worksheet.webtool_graphs_b39); end
  def test_webtool_graphs_c39; assert_equal("Description", worksheet.webtool_graphs_c39); end
  def test_webtool_graphs_d39; assert_equal("1975", worksheet.webtool_graphs_d39); end
  def test_webtool_graphs_e39; assert_equal("1980", worksheet.webtool_graphs_e39); end
  def test_webtool_graphs_f39; assert_equal("1985", worksheet.webtool_graphs_f39); end
  def test_webtool_graphs_g39; assert_equal("1990", worksheet.webtool_graphs_g39); end
  def test_webtool_graphs_h39; assert_equal("1995", worksheet.webtool_graphs_h39); end
  def test_webtool_graphs_i39; assert_equal("2000", worksheet.webtool_graphs_i39); end
  def test_webtool_graphs_j39; assert_equal("2005", worksheet.webtool_graphs_j39); end
  def test_webtool_graphs_k39; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k39, 0.002); end
  def test_webtool_graphs_l39; assert_equal("2011", worksheet.webtool_graphs_l39); end
  def test_webtool_graphs_m39; assert_equal("2015", worksheet.webtool_graphs_m39); end
  def test_webtool_graphs_n39; assert_equal("2020", worksheet.webtool_graphs_n39); end
  def test_webtool_graphs_o39; assert_equal("2025", worksheet.webtool_graphs_o39); end
  def test_webtool_graphs_p39; assert_equal("2030", worksheet.webtool_graphs_p39); end
  def test_webtool_graphs_q39; assert_equal("2035", worksheet.webtool_graphs_q39); end
  def test_webtool_graphs_r39; assert_equal("2040", worksheet.webtool_graphs_r39); end
  def test_webtool_graphs_s39; assert_equal("2045", worksheet.webtool_graphs_s39); end
  def test_webtool_graphs_t39; assert_equal("2050", worksheet.webtool_graphs_t39); end
  def test_webtool_graphs_b40; assert_equal("Urban", worksheet.webtool_graphs_b40); end
  def test_webtool_graphs_c40; assert_equal("urban", worksheet.webtool_graphs_c40); end
  def test_webtool_graphs_l40; assert_in_epsilon(5.958364024436915, worksheet.webtool_graphs_l40, 0.002); end
  def test_webtool_graphs_m40; assert_in_epsilon(6.195, worksheet.webtool_graphs_m40, 0.002); end
  def test_webtool_graphs_n40; assert_in_epsilon(6.661853981013381, worksheet.webtool_graphs_n40, 0.002); end
  def test_webtool_graphs_o40; assert_in_epsilon(7.128707962026763, worksheet.webtool_graphs_o40, 0.002); end
  def test_webtool_graphs_p40; assert_in_epsilon(7.595561943040145, worksheet.webtool_graphs_p40, 0.002); end
  def test_webtool_graphs_q40; assert_in_epsilon(8.062415924053527, worksheet.webtool_graphs_q40, 0.002); end
  def test_webtool_graphs_r40; assert_in_epsilon(8.529269905066908, worksheet.webtool_graphs_r40, 0.002); end
  def test_webtool_graphs_s40; assert_in_epsilon(8.996123886080289, worksheet.webtool_graphs_s40, 0.002); end
  def test_webtool_graphs_t40; assert_in_epsilon(9.462977867093672, worksheet.webtool_graphs_t40, 0.002); end
  def test_webtool_graphs_b41; assert_equal("Rural", worksheet.webtool_graphs_b41); end
  def test_webtool_graphs_c41; assert_equal("rural", worksheet.webtool_graphs_c41); end
  def test_webtool_graphs_l41; assert_in_epsilon(3.4791820122184576, worksheet.webtool_graphs_l41, 0.002); end
  def test_webtool_graphs_m41; assert_in_epsilon(5.098, worksheet.webtool_graphs_m41, 0.002); end
  def test_webtool_graphs_n41; assert_in_epsilon(5.442575801867429, worksheet.webtool_graphs_n41, 0.002); end
  def test_webtool_graphs_o41; assert_in_epsilon(5.787151603734858, worksheet.webtool_graphs_o41, 0.002); end
  def test_webtool_graphs_p41; assert_in_epsilon(6.131727405602287, worksheet.webtool_graphs_p41, 0.002); end
  def test_webtool_graphs_q41; assert_in_epsilon(6.476303207469717, worksheet.webtool_graphs_q41, 0.002); end
  def test_webtool_graphs_r41; assert_in_epsilon(6.820879009337146, worksheet.webtool_graphs_r41, 0.002); end
  def test_webtool_graphs_s41; assert_in_epsilon(7.165454811204575, worksheet.webtool_graphs_s41, 0.002); end
  def test_webtool_graphs_t41; assert_in_epsilon(7.510030613072004, worksheet.webtool_graphs_t41, 0.002); end
  def test_webtool_graphs_b389; assert_equal("Type of city", worksheet.webtool_graphs_b389); end
  def test_webtool_graphs_c389; assert_equal("Energy description", worksheet.webtool_graphs_c389); end
  def test_webtool_graphs_d389; assert_equal("1975", worksheet.webtool_graphs_d389); end
  def test_webtool_graphs_e389; assert_equal("1980", worksheet.webtool_graphs_e389); end
  def test_webtool_graphs_f389; assert_equal("1985", worksheet.webtool_graphs_f389); end
  def test_webtool_graphs_g389; assert_equal("1990", worksheet.webtool_graphs_g389); end
  def test_webtool_graphs_h389; assert_equal("1995", worksheet.webtool_graphs_h389); end
  def test_webtool_graphs_i389; assert_equal("2000", worksheet.webtool_graphs_i389); end
  def test_webtool_graphs_j389; assert_equal("2005", worksheet.webtool_graphs_j389); end
  def test_webtool_graphs_k389; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k389, 0.002); end
  def test_webtool_graphs_l389; assert_equal("2011", worksheet.webtool_graphs_l389); end
  def test_webtool_graphs_m389; assert_equal("2015", worksheet.webtool_graphs_m389); end
  def test_webtool_graphs_n389; assert_equal("2020", worksheet.webtool_graphs_n389); end
  def test_webtool_graphs_o389; assert_equal("2025", worksheet.webtool_graphs_o389); end
  def test_webtool_graphs_p389; assert_equal("2030", worksheet.webtool_graphs_p389); end
  def test_webtool_graphs_q389; assert_equal("2035", worksheet.webtool_graphs_q389); end
  def test_webtool_graphs_r389; assert_equal("2040", worksheet.webtool_graphs_r389); end
  def test_webtool_graphs_s389; assert_equal("2045", worksheet.webtool_graphs_s389); end
  def test_webtool_graphs_t389; assert_equal("2050", worksheet.webtool_graphs_t389); end
  def test_webtool_graphs_b390; assert_equal("All", worksheet.webtool_graphs_b390); end
  def test_webtool_graphs_c390; assert_equal("Global Heating", worksheet.webtool_graphs_c390); end
  def test_webtool_graphs_j390; assert_equal("", worksheet.webtool_graphs_j390); end
  def test_webtool_graphs_l390; assert_in_epsilon(33.96364333779204, worksheet.webtool_graphs_l390, 0.002); end
  def test_webtool_graphs_m390; assert_in_epsilon(31.355372749840036, worksheet.webtool_graphs_m390, 0.002); end
  def test_webtool_graphs_n390; assert_in_epsilon(33.0570671078048, worksheet.webtool_graphs_n390, 0.002); end
  def test_webtool_graphs_o390; assert_in_epsilon(34.388515979711855, worksheet.webtool_graphs_o390, 0.002); end
  def test_webtool_graphs_p390; assert_in_epsilon(35.46660363705696, worksheet.webtool_graphs_p390, 0.002); end
  def test_webtool_graphs_q390; assert_in_epsilon(36.515974703689665, worksheet.webtool_graphs_q390, 0.002); end
  def test_webtool_graphs_r390; assert_in_epsilon(37.33836282249499, worksheet.webtool_graphs_r390, 0.002); end
  def test_webtool_graphs_s390; assert_in_epsilon(38.21365298261706, worksheet.webtool_graphs_s390, 0.002); end
  def test_webtool_graphs_t390; assert_in_epsilon(38.88227505570427, worksheet.webtool_graphs_t390, 0.002); end
  def test_webtool_graphs_b391; assert_equal("All", worksheet.webtool_graphs_b391); end
  def test_webtool_graphs_c391; assert_equal("Global Cooling", worksheet.webtool_graphs_c391); end
  def test_webtool_graphs_l391; assert_in_epsilon(4.628649152766226, worksheet.webtool_graphs_l391, 0.002); end
  def test_webtool_graphs_m391; assert_in_epsilon(4.733500132737597, worksheet.webtool_graphs_m391, 0.002); end
  def test_webtool_graphs_n391; assert_in_epsilon(5.8114375044466975, worksheet.webtool_graphs_n391, 0.002); end
  def test_webtool_graphs_o391; assert_in_epsilon(7.003732554526101, worksheet.webtool_graphs_o391, 0.002); end
  def test_webtool_graphs_p391; assert_in_epsilon(8.295046104900655, worksheet.webtool_graphs_p391, 0.002); end
  def test_webtool_graphs_q391; assert_in_epsilon(9.651026024833872, worksheet.webtool_graphs_q391, 0.002); end
  def test_webtool_graphs_r391; assert_in_epsilon(11.08090371247726, worksheet.webtool_graphs_r391, 0.002); end
  def test_webtool_graphs_s391; assert_in_epsilon(12.539491726292201, worksheet.webtool_graphs_s391, 0.002); end
  def test_webtool_graphs_t391; assert_in_epsilon(14.041843084049491, worksheet.webtool_graphs_t391, 0.002); end
  def test_webtool_graphs_b392; assert_equal("All", worksheet.webtool_graphs_b392); end
  def test_webtool_graphs_c392; assert_equal("Global Hot water", worksheet.webtool_graphs_c392); end
  def test_webtool_graphs_l392; assert_in_epsilon(20.64814831202377, worksheet.webtool_graphs_l392, 0.002); end
  def test_webtool_graphs_m392; assert_in_epsilon(22.394160941356258, worksheet.webtool_graphs_m392, 0.002); end
  def test_webtool_graphs_n392; assert_in_epsilon(23.809462170898207, worksheet.webtool_graphs_n392, 0.002); end
  def test_webtool_graphs_o392; assert_in_epsilon(25.180011942796575, worksheet.webtool_graphs_o392, 0.002); end
  def test_webtool_graphs_p392; assert_in_epsilon(26.425609593733085, worksheet.webtool_graphs_p392, 0.002); end
  def test_webtool_graphs_q392; assert_in_epsilon(27.44134495679853, worksheet.webtool_graphs_q392, 0.002); end
  def test_webtool_graphs_r392; assert_in_epsilon(28.333726832663665, worksheet.webtool_graphs_r392, 0.002); end
  def test_webtool_graphs_s392; assert_in_epsilon(29.00192841973617, worksheet.webtool_graphs_s392, 0.002); end
  def test_webtool_graphs_t392; assert_in_epsilon(29.537460218560643, worksheet.webtool_graphs_t392, 0.002); end
  def test_webtool_graphs_b393; assert_equal("All", worksheet.webtool_graphs_b393); end
  def test_webtool_graphs_c393; assert_equal("Global Appliances", worksheet.webtool_graphs_c393); end
  def test_webtool_graphs_l393; assert_in_epsilon(21.626193072260964, worksheet.webtool_graphs_l393, 0.002); end
  def test_webtool_graphs_m393; assert_in_epsilon(24.597267154647966, worksheet.webtool_graphs_m393, 0.002); end
  def test_webtool_graphs_n393; assert_in_epsilon(27.464653880880952, worksheet.webtool_graphs_n393, 0.002); end
  def test_webtool_graphs_o393; assert_in_epsilon(30.401204252677516, worksheet.webtool_graphs_o393, 0.002); end
  def test_webtool_graphs_p393; assert_in_epsilon(33.347431297387175, worksheet.webtool_graphs_p393, 0.002); end
  def test_webtool_graphs_q393; assert_in_epsilon(36.212746963099804, worksheet.webtool_graphs_q393, 0.002); end
  def test_webtool_graphs_r393; assert_in_epsilon(39.045544772446675, worksheet.webtool_graphs_r393, 0.002); end
  def test_webtool_graphs_s393; assert_in_epsilon(41.74099347291039, worksheet.webtool_graphs_s393, 0.002); end
  def test_webtool_graphs_t393; assert_in_epsilon(44.35627746384395, worksheet.webtool_graphs_t393, 0.002); end
  def test_webtool_graphs_b394; assert_equal("All", worksheet.webtool_graphs_b394); end
  def test_webtool_graphs_c394; assert_equal("Global Cooking", worksheet.webtool_graphs_c394); end
  def test_webtool_graphs_l394; assert_in_epsilon(24.331916753204318, worksheet.webtool_graphs_l394, 0.002); end
  def test_webtool_graphs_m394; assert_in_epsilon(23.78985015284648, worksheet.webtool_graphs_m394, 0.002); end
  def test_webtool_graphs_n394; assert_in_epsilon(22.825288390673876, worksheet.webtool_graphs_n394, 0.002); end
  def test_webtool_graphs_o394; assert_in_epsilon(21.93248291795023, worksheet.webtool_graphs_o394, 0.002); end
  def test_webtool_graphs_p394; assert_in_epsilon(21.103522000612053, worksheet.webtool_graphs_p394, 0.002); end
  def test_webtool_graphs_q394; assert_in_epsilon(20.356658027715085, worksheet.webtool_graphs_q394, 0.002); end
  def test_webtool_graphs_r394; assert_in_epsilon(19.627932509029222, worksheet.webtool_graphs_r394, 0.002); end
  def test_webtool_graphs_s394; assert_in_epsilon(18.945968264694844, worksheet.webtool_graphs_s394, 0.002); end
  def test_webtool_graphs_t394; assert_in_epsilon(18.252208482333142, worksheet.webtool_graphs_t394, 0.002); end
  def test_webtool_graphs_b395; assert_equal("All", worksheet.webtool_graphs_b395); end
  def test_webtool_graphs_c395; assert_equal("Global Lighting", worksheet.webtool_graphs_c395); end
  def test_webtool_graphs_l395; assert_in_epsilon(7.473070166508138, worksheet.webtool_graphs_l395, 0.002); end
  def test_webtool_graphs_m395; assert_in_epsilon(8.566262925209225, worksheet.webtool_graphs_m395, 0.002); end
  def test_webtool_graphs_n395; assert_in_epsilon(9.627049346996357, worksheet.webtool_graphs_n395, 0.002); end
  def test_webtool_graphs_o395; assert_in_epsilon(10.710751306578809, worksheet.webtool_graphs_o395, 0.002); end
  def test_webtool_graphs_p395; assert_in_epsilon(11.797724260686579, worksheet.webtool_graphs_p395, 0.002); end
  def test_webtool_graphs_q395; assert_in_epsilon(12.858201700364296, worksheet.webtool_graphs_q395, 0.002); end
  def test_webtool_graphs_r395; assert_in_epsilon(13.904740452088125, worksheet.webtool_graphs_r395, 0.002); end
  def test_webtool_graphs_s395; assert_in_epsilon(14.90287894096976, worksheet.webtool_graphs_s395, 0.002); end
  def test_webtool_graphs_t395; assert_in_epsilon(15.868389385155682, worksheet.webtool_graphs_t395, 0.002); end
  def test_webtool_graphs_b396; assert_equal("All", worksheet.webtool_graphs_b396); end
  def test_webtool_graphs_c396; assert_equal("Global Other", worksheet.webtool_graphs_c396); end
  def test_webtool_graphs_l396; assert_in_epsilon(3.616434616787921, worksheet.webtool_graphs_l396, 0.002); end
  def test_webtool_graphs_m396; assert_in_epsilon(3.8144569151957914, worksheet.webtool_graphs_m396, 0.002); end
  def test_webtool_graphs_n396; assert_in_epsilon(4.151933354506528, worksheet.webtool_graphs_n396, 0.002); end
  def test_webtool_graphs_o396; assert_in_epsilon(4.472052915944775, worksheet.webtool_graphs_o396, 0.002); end
  def test_webtool_graphs_p396; assert_in_epsilon(4.771444696110382, worksheet.webtool_graphs_p396, 0.002); end
  def test_webtool_graphs_q396; assert_in_epsilon(5.048192424952835, worksheet.webtool_graphs_q396, 0.002); end
  def test_webtool_graphs_r396; assert_in_epsilon(5.299371729251174, worksheet.webtool_graphs_r396, 0.002); end
  def test_webtool_graphs_s396; assert_in_epsilon(5.521173219440348, worksheet.webtool_graphs_s396, 0.002); end
  def test_webtool_graphs_t396; assert_in_epsilon(5.710312798479741, worksheet.webtool_graphs_t396, 0.002); end
  def test_webtool_graphs_b397; assert_equal("All", worksheet.webtool_graphs_b397); end
  def test_webtool_graphs_c397; assert_equal("Global Heat (delivered to end user)", worksheet.webtool_graphs_c397); end
  def test_webtool_graphs_l397; assert_in_epsilon(6.045102447345095, worksheet.webtool_graphs_l397, 0.002); end
  def test_webtool_graphs_m397; assert_in_epsilon(6.382292391174033, worksheet.webtool_graphs_m397, 0.002); end
  def test_webtool_graphs_n397; assert_in_epsilon(6.980135153596999, worksheet.webtool_graphs_n397, 0.002); end
  def test_webtool_graphs_o397; assert_in_epsilon(7.719022103474754, worksheet.webtool_graphs_o397, 0.002); end
  def test_webtool_graphs_p397; assert_in_epsilon(8.46911532812693, worksheet.webtool_graphs_p397, 0.002); end
  def test_webtool_graphs_q397; assert_in_epsilon(9.214138094237825, worksheet.webtool_graphs_q397, 0.002); end
  def test_webtool_graphs_r397; assert_in_epsilon(10.001320852422639, worksheet.webtool_graphs_r397, 0.002); end
  def test_webtool_graphs_s397; assert_in_epsilon(10.78801321463473, worksheet.webtool_graphs_s397, 0.002); end
  def test_webtool_graphs_t397; assert_in_epsilon(11.618122331732444, worksheet.webtool_graphs_t397, 0.002); end
  def test_webtool_graphs_b398; assert_equal("All", worksheet.webtool_graphs_b398); end
  def test_webtool_graphs_c398; assert_equal("Global Distribution losses and own use", worksheet.webtool_graphs_c398); end
  def test_webtool_graphs_l398; assert_in_delta(0.7166873527496946, worksheet.webtool_graphs_l398, 0.002); end
  def test_webtool_graphs_m398; assert_in_delta(0.7169381437252085, worksheet.webtool_graphs_m398, 0.002); end
  def test_webtool_graphs_n398; assert_in_delta(0.7772218376207594, worksheet.webtool_graphs_n398, 0.002); end
  def test_webtool_graphs_o398; assert_in_delta(0.8435144039378262, worksheet.webtool_graphs_o398, 0.002); end
  def test_webtool_graphs_p398; assert_in_delta(0.9069130666805432, worksheet.webtool_graphs_p398, 0.002); end
  def test_webtool_graphs_q398; assert_in_delta(0.9649259586391103, worksheet.webtool_graphs_q398, 0.002); end
  def test_webtool_graphs_r398; assert_in_epsilon(1.0211497523794435, worksheet.webtool_graphs_r398, 0.002); end
  def test_webtool_graphs_s398; assert_in_epsilon(1.0714017662432838, worksheet.webtool_graphs_s398, 0.002); end
  def test_webtool_graphs_t398; assert_in_epsilon(1.1195056073582563, worksheet.webtool_graphs_t398, 0.002); end
  def test_webtool_graphs_b399; assert_equal("All", worksheet.webtool_graphs_b399); end
  def test_webtool_graphs_c399; assert_equal("Global Conversion losses", worksheet.webtool_graphs_c399); end
  def test_webtool_graphs_l399; assert_in_delta(0.39594228845936885, worksheet.webtool_graphs_l399, 0.002); end
  def test_webtool_graphs_m399; assert_in_delta(0.3865402159714818, worksheet.webtool_graphs_m399, 0.002); end
  def test_webtool_graphs_n399; assert_in_delta(0.39780582399918796, worksheet.webtool_graphs_n399, 0.002); end
  def test_webtool_graphs_o399; assert_in_delta(0.4093020400120777, worksheet.webtool_graphs_o399, 0.002); end
  def test_webtool_graphs_p399; assert_in_delta(0.4165982128162774, worksheet.webtool_graphs_p399, 0.002); end
  def test_webtool_graphs_q399; assert_in_delta(0.4189675001424309, worksheet.webtool_graphs_q399, 0.002); end
  def test_webtool_graphs_r399; assert_in_delta(0.41840756876064056, worksheet.webtool_graphs_r399, 0.002); end
  def test_webtool_graphs_s399; assert_in_delta(0.41354738355472564, worksheet.webtool_graphs_s399, 0.002); end
  def test_webtool_graphs_t399; assert_in_delta(0.4062985560071066, worksheet.webtool_graphs_t399, 0.002); end
  def test_webtool_graphs_b400; assert_equal("TOTAL", worksheet.webtool_graphs_b400); end
  def test_webtool_graphs_c400; assert_equal("TOTAL", worksheet.webtool_graphs_c400); end
  def test_webtool_graphs_l400; assert_in_epsilon(123.44578749989753, worksheet.webtool_graphs_l400, 0.002); end
  def test_webtool_graphs_m400; assert_in_epsilon(126.73664172270409, worksheet.webtool_graphs_m400, 0.002); end
  def test_webtool_graphs_n400; assert_in_epsilon(134.90205457142437, worksheet.webtool_graphs_n400, 0.002); end
  def test_webtool_graphs_o400; assert_in_epsilon(143.0605904176105, worksheet.webtool_graphs_o400, 0.002); end
  def test_webtool_graphs_p400; assert_in_epsilon(151.00000819811063, worksheet.webtool_graphs_p400, 0.002); end
  def test_webtool_graphs_q400; assert_in_epsilon(158.68217635447346, worksheet.webtool_graphs_q400, 0.002); end
  def test_webtool_graphs_r400; assert_in_epsilon(166.07146100401386, worksheet.webtool_graphs_r400, 0.002); end
  def test_webtool_graphs_s400; assert_in_epsilon(173.13904939109352, worksheet.webtool_graphs_s400, 0.002); end
  def test_webtool_graphs_t400; assert_in_epsilon(179.79269298322475, worksheet.webtool_graphs_t400, 0.002); end
  def test_webtool_graphs_b64; assert_equal("Area", worksheet.webtool_graphs_b64); end
  def test_webtool_graphs_c64; assert_equal("calculation from table above", worksheet.webtool_graphs_c64); end
  def test_webtool_graphs_d64; assert_equal("1975", worksheet.webtool_graphs_d64); end
  def test_webtool_graphs_e64; assert_equal("1980", worksheet.webtool_graphs_e64); end
  def test_webtool_graphs_f64; assert_equal("1985", worksheet.webtool_graphs_f64); end
  def test_webtool_graphs_g64; assert_equal("1990", worksheet.webtool_graphs_g64); end
  def test_webtool_graphs_h64; assert_equal("1995", worksheet.webtool_graphs_h64); end
  def test_webtool_graphs_i64; assert_equal("2000", worksheet.webtool_graphs_i64); end
  def test_webtool_graphs_j64; assert_equal("2005", worksheet.webtool_graphs_j64); end
  def test_webtool_graphs_k64; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k64, 0.002); end
  def test_webtool_graphs_l64; assert_equal("2011", worksheet.webtool_graphs_l64); end
  def test_webtool_graphs_m64; assert_equal("2015", worksheet.webtool_graphs_m64); end
  def test_webtool_graphs_n64; assert_equal("2020", worksheet.webtool_graphs_n64); end
  def test_webtool_graphs_o64; assert_equal("2025", worksheet.webtool_graphs_o64); end
  def test_webtool_graphs_p64; assert_equal("2030", worksheet.webtool_graphs_p64); end
  def test_webtool_graphs_q64; assert_equal("2035", worksheet.webtool_graphs_q64); end
  def test_webtool_graphs_r64; assert_equal("2040", worksheet.webtool_graphs_r64); end
  def test_webtool_graphs_s64; assert_equal("2045", worksheet.webtool_graphs_s64); end
  def test_webtool_graphs_t64; assert_equal("2050", worksheet.webtool_graphs_t64); end
  def test_webtool_graphs_b65; assert_equal("Urban", worksheet.webtool_graphs_b65); end
  def test_webtool_graphs_c65; assert_equal("Urban", worksheet.webtool_graphs_c65); end
  def test_webtool_graphs_l65; assert_in_epsilon(11195.511648122409, worksheet.webtool_graphs_l65, 0.002); end
  def test_webtool_graphs_m65; assert_in_epsilon(10512.213495943803, worksheet.webtool_graphs_m65, 0.002); end
  def test_webtool_graphs_n65; assert_in_epsilon(10243.281580526575, worksheet.webtool_graphs_n65, 0.002); end
  def test_webtool_graphs_o65; assert_in_epsilon(9997.367234590789, worksheet.webtool_graphs_o65, 0.002); end
  def test_webtool_graphs_p65; assert_in_epsilon(9773.20935025678, worksheet.webtool_graphs_p65, 0.002); end
  def test_webtool_graphs_q65; assert_in_epsilon(9570.38821160335, worksheet.webtool_graphs_q65, 0.002); end
  def test_webtool_graphs_r65; assert_in_epsilon(9378.001291543449, worksheet.webtool_graphs_r65, 0.002); end
  def test_webtool_graphs_s65; assert_in_epsilon(9196.677910004997, worksheet.webtool_graphs_s65, 0.002); end
  def test_webtool_graphs_t65; assert_in_epsilon(9018.045284128832, worksheet.webtool_graphs_t65, 0.002); end
  def test_webtool_graphs_b66; assert_equal("Rural", worksheet.webtool_graphs_b66); end
  def test_webtool_graphs_c66; assert_equal("Rural", worksheet.webtool_graphs_c66); end
  def test_webtool_graphs_l66; assert_in_epsilon(9232.336409801414, worksheet.webtool_graphs_l66, 0.002); end
  def test_webtool_graphs_m66; assert_in_epsilon(9097.70314163586, worksheet.webtool_graphs_m66, 0.002); end
  def test_webtool_graphs_n66; assert_in_epsilon(8738.261740540742, worksheet.webtool_graphs_n66, 0.002); end
  def test_webtool_graphs_o66; assert_in_epsilon(8454.872352379729, worksheet.webtool_graphs_o66, 0.002); end
  def test_webtool_graphs_p66; assert_in_epsilon(8223.554891292748, worksheet.webtool_graphs_p66, 0.002); end
  def test_webtool_graphs_q66; assert_in_epsilon(8025.493592024972, worksheet.webtool_graphs_q66, 0.002); end
  def test_webtool_graphs_r66; assert_in_epsilon(7854.602152968806, worksheet.webtool_graphs_r66, 0.002); end
  def test_webtool_graphs_s66; assert_in_epsilon(7703.356718481983, worksheet.webtool_graphs_s66, 0.002); end
  def test_webtool_graphs_t66; assert_in_epsilon(7565.925307732077, worksheet.webtool_graphs_t66, 0.002); end
  def test_webtool_graphs_b55; assert_equal("Area", worksheet.webtool_graphs_b55); end
  def test_webtool_graphs_c55; assert_equal("Tech description", worksheet.webtool_graphs_c55); end
  def test_webtool_graphs_d55; assert_equal("1975", worksheet.webtool_graphs_d55); end
  def test_webtool_graphs_e55; assert_equal("1980", worksheet.webtool_graphs_e55); end
  def test_webtool_graphs_f55; assert_equal("1985", worksheet.webtool_graphs_f55); end
  def test_webtool_graphs_g55; assert_equal("1990", worksheet.webtool_graphs_g55); end
  def test_webtool_graphs_h55; assert_equal("1995", worksheet.webtool_graphs_h55); end
  def test_webtool_graphs_i55; assert_equal("2000", worksheet.webtool_graphs_i55); end
  def test_webtool_graphs_j55; assert_equal("2005", worksheet.webtool_graphs_j55); end
  def test_webtool_graphs_k55; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k55, 0.002); end
  def test_webtool_graphs_l55; assert_equal("2011", worksheet.webtool_graphs_l55); end
  def test_webtool_graphs_m55; assert_equal("2015", worksheet.webtool_graphs_m55); end
  def test_webtool_graphs_n55; assert_equal("2020", worksheet.webtool_graphs_n55); end
  def test_webtool_graphs_o55; assert_equal("2025", worksheet.webtool_graphs_o55); end
  def test_webtool_graphs_p55; assert_equal("2030", worksheet.webtool_graphs_p55); end
  def test_webtool_graphs_q55; assert_equal("2035", worksheet.webtool_graphs_q55); end
  def test_webtool_graphs_r55; assert_equal("2040", worksheet.webtool_graphs_r55); end
  def test_webtool_graphs_s55; assert_equal("2045", worksheet.webtool_graphs_s55); end
  def test_webtool_graphs_t55; assert_equal("2050", worksheet.webtool_graphs_t55); end
  def test_webtool_graphs_b56; assert_equal("Urban", worksheet.webtool_graphs_b56); end
  def test_webtool_graphs_c56; assert_equal("Urban", worksheet.webtool_graphs_c56); end
  def test_webtool_graphs_l56; assert_in_epsilon(58.55019171635433, worksheet.webtool_graphs_l56, 0.002); end
  def test_webtool_graphs_m56; assert_in_epsilon(60.65021017125791, worksheet.webtool_graphs_m56, 0.002); end
  def test_webtool_graphs_n56; assert_in_epsilon(65.80955000822115, worksheet.webtool_graphs_n56, 0.002); end
  def test_webtool_graphs_o56; assert_in_epsilon(70.79492877006408, worksheet.webtool_graphs_o56, 0.002); end
  def test_webtool_graphs_p56; assert_in_epsilon(75.605612244262, worksheet.webtool_graphs_p56, 0.002); end
  def test_webtool_graphs_q56; assert_in_epsilon(80.26731837961074, worksheet.webtool_graphs_q56, 0.002); end
  def test_webtool_graphs_r56; assert_in_epsilon(84.74460182502922, worksheet.webtool_graphs_r56, 0.002); end
  def test_webtool_graphs_s56; assert_in_epsilon(89.20058299095291, worksheet.webtool_graphs_s56, 0.002); end
  def test_webtool_graphs_t56; assert_in_epsilon(93.53763184207816, worksheet.webtool_graphs_t56, 0.002); end
  def test_webtool_graphs_b57; assert_equal("Rural", worksheet.webtool_graphs_b57); end
  def test_webtool_graphs_c57; assert_equal("Rural", worksheet.webtool_graphs_c57); end
  def test_webtool_graphs_l57; assert_in_epsilon(27.707866917741953, worksheet.webtool_graphs_l57, 0.002); end
  def test_webtool_graphs_m57; assert_in_epsilon(27.930928954331527, worksheet.webtool_graphs_m57, 0.002); end
  def test_webtool_graphs_n57; assert_in_epsilon(27.361099096619395, worksheet.webtool_graphs_n57, 0.002); end
  def test_webtool_graphs_o57; assert_in_epsilon(26.909223241942627, worksheet.webtool_graphs_o57, 0.002); end
  def test_webtool_graphs_p57; assert_in_epsilon(26.534057488714602, worksheet.webtool_graphs_p57, 0.002); end
  def test_webtool_graphs_q57; assert_in_epsilon(26.207104480062746, worksheet.webtool_graphs_q57, 0.002); end
  def test_webtool_graphs_r57; assert_in_epsilon(25.900074823347886, worksheet.webtool_graphs_r57, 0.002); end
  def test_webtool_graphs_s57; assert_in_epsilon(25.502154871089598, worksheet.webtool_graphs_s57, 0.002); end
  def test_webtool_graphs_t57; assert_in_epsilon(24.99868269024611, worksheet.webtool_graphs_t57, 0.002); end
  def test_webtool_graphs_b58; assert_equal("Non residential", worksheet.webtool_graphs_b58); end
  def test_webtool_graphs_c58; assert_equal("Non residential", worksheet.webtool_graphs_c58); end
  def test_webtool_graphs_l58; assert_in_epsilon(30.0299967772471, worksheet.webtool_graphs_l58, 0.002); end
  def test_webtool_graphs_m58; assert_in_epsilon(30.669731846243916, worksheet.webtool_graphs_m58, 0.002); end
  def test_webtool_graphs_n58; assert_in_epsilon(33.576242651366854, worksheet.webtool_graphs_n58, 0.002); end
  def test_webtool_graphs_o58; assert_in_epsilon(36.384599858179136, worksheet.webtool_graphs_o58, 0.002); end
  def test_webtool_graphs_p58; assert_in_epsilon(39.067711857510275, worksheet.webtool_graphs_p58, 0.002); end
  def test_webtool_graphs_q58; assert_in_epsilon(41.6097219417806, worksheet.webtool_graphs_q58, 0.002); end
  def test_webtool_graphs_r58; assert_in_epsilon(43.985906182074004, worksheet.webtool_graphs_r58, 0.002); end
  def test_webtool_graphs_s58; assert_in_epsilon(46.16334916461826, worksheet.webtool_graphs_s58, 0.002); end
  def test_webtool_graphs_t58; assert_in_epsilon(48.11245195580266, worksheet.webtool_graphs_t58, 0.002); end
  def test_webtool_graphs_b374; assert_equal("Type of city", worksheet.webtool_graphs_b374); end
  def test_webtool_graphs_c374; assert_equal("Energy description", worksheet.webtool_graphs_c374); end
  def test_webtool_graphs_d374; assert_equal("1975", worksheet.webtool_graphs_d374); end
  def test_webtool_graphs_e374; assert_equal("1980", worksheet.webtool_graphs_e374); end
  def test_webtool_graphs_f374; assert_equal("1985", worksheet.webtool_graphs_f374); end
  def test_webtool_graphs_g374; assert_equal("1990", worksheet.webtool_graphs_g374); end
  def test_webtool_graphs_h374; assert_equal("1995", worksheet.webtool_graphs_h374); end
  def test_webtool_graphs_i374; assert_equal("2000", worksheet.webtool_graphs_i374); end
  def test_webtool_graphs_j374; assert_equal("2005", worksheet.webtool_graphs_j374); end
  def test_webtool_graphs_k374; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k374, 0.002); end
  def test_webtool_graphs_l374; assert_equal("2011", worksheet.webtool_graphs_l374); end
  def test_webtool_graphs_m374; assert_equal("2015", worksheet.webtool_graphs_m374); end
  def test_webtool_graphs_n374; assert_equal("2020", worksheet.webtool_graphs_n374); end
  def test_webtool_graphs_o374; assert_equal("2025", worksheet.webtool_graphs_o374); end
  def test_webtool_graphs_p374; assert_equal("2030", worksheet.webtool_graphs_p374); end
  def test_webtool_graphs_q374; assert_equal("2035", worksheet.webtool_graphs_q374); end
  def test_webtool_graphs_r374; assert_equal("2040", worksheet.webtool_graphs_r374); end
  def test_webtool_graphs_s374; assert_equal("2045", worksheet.webtool_graphs_s374); end
  def test_webtool_graphs_t374; assert_equal("2050", worksheet.webtool_graphs_t374); end
  def test_webtool_graphs_b375; assert_equal("All", worksheet.webtool_graphs_b375); end
  def test_webtool_graphs_c375; assert_equal("Global Solar", worksheet.webtool_graphs_c375); end
  def test_webtool_graphs_j375; assert_equal("", worksheet.webtool_graphs_j375); end
  def test_webtool_graphs_l375; assert_in_epsilon(1.402397457347961, worksheet.webtool_graphs_l375, 0.002); end
  def test_webtool_graphs_m375; assert_in_epsilon(1.4922285947692704, worksheet.webtool_graphs_m375, 0.002); end
  def test_webtool_graphs_n375; assert_in_epsilon(1.8188556810669994, worksheet.webtool_graphs_n375, 0.002); end
  def test_webtool_graphs_o375; assert_in_epsilon(2.174449723030273, worksheet.webtool_graphs_o375, 0.002); end
  def test_webtool_graphs_p375; assert_in_epsilon(2.551292566471683, worksheet.webtool_graphs_p375, 0.002); end
  def test_webtool_graphs_q375; assert_in_epsilon(2.937542448524272, worksheet.webtool_graphs_q375, 0.002); end
  def test_webtool_graphs_r375; assert_in_epsilon(3.3409309273770154, worksheet.webtool_graphs_r375, 0.002); end
  def test_webtool_graphs_s375; assert_in_epsilon(3.7471843361414687, worksheet.webtool_graphs_s375, 0.002); end
  def test_webtool_graphs_t375; assert_in_epsilon(4.163835550881484, worksheet.webtool_graphs_t375, 0.002); end
  def test_webtool_graphs_b376; assert_equal("All", worksheet.webtool_graphs_b376); end
  def test_webtool_graphs_c376; assert_equal("Global Environmental heat", worksheet.webtool_graphs_c376); end
  def test_webtool_graphs_l376; assert_in_epsilon(4.838497586627763, worksheet.webtool_graphs_l376, 0.002); end
  def test_webtool_graphs_m376; assert_in_epsilon(4.9596343712826405, worksheet.webtool_graphs_m376, 0.002); end
  def test_webtool_graphs_n376; assert_in_epsilon(5.903603044430923, worksheet.webtool_graphs_n376, 0.002); end
  def test_webtool_graphs_o376; assert_in_epsilon(6.927936888455828, worksheet.webtool_graphs_o376, 0.002); end
  def test_webtool_graphs_p376; assert_in_epsilon(8.017223803373263, worksheet.webtool_graphs_p376, 0.002); end
  def test_webtool_graphs_q376; assert_in_epsilon(9.144127512910707, worksheet.webtool_graphs_q376, 0.002); end
  def test_webtool_graphs_r376; assert_in_epsilon(10.317894221251619, worksheet.webtool_graphs_r376, 0.002); end
  def test_webtool_graphs_s376; assert_in_epsilon(11.504032063018018, worksheet.webtool_graphs_s376, 0.002); end
  def test_webtool_graphs_t376; assert_in_epsilon(12.715755364974981, worksheet.webtool_graphs_t376, 0.002); end
  def test_webtool_graphs_b377; assert_equal("All", worksheet.webtool_graphs_b377); end
  def test_webtool_graphs_c377; assert_equal("Global Heat (supplied to grid)", worksheet.webtool_graphs_c377); end
  def test_webtool_graphs_l377; assert_in_epsilon(9.643214837702256, worksheet.webtool_graphs_l377, 0.002); end
  def test_webtool_graphs_m377; assert_in_epsilon(9.697327437793524, worksheet.webtool_graphs_m377, 0.002); end
  def test_webtool_graphs_n377; assert_in_epsilon(10.589143444309371, worksheet.webtool_graphs_n377, 0.002); end
  def test_webtool_graphs_o377; assert_in_epsilon(11.575271491999048, worksheet.webtool_graphs_o377, 0.002); end
  def test_webtool_graphs_p377; assert_in_epsilon(12.53443876737915, worksheet.webtool_graphs_p377, 0.002); end
  def test_webtool_graphs_q377; assert_in_epsilon(13.431106599531393, worksheet.webtool_graphs_q377, 0.002); end
  def test_webtool_graphs_r377; assert_in_epsilon(14.31410323082802, worksheet.webtool_graphs_r377, 0.002); end
  def test_webtool_graphs_s377; assert_in_epsilon(15.123858402460773, worksheet.webtool_graphs_s377, 0.002); end
  def test_webtool_graphs_t377; assert_in_epsilon(15.912960470669134, worksheet.webtool_graphs_t377, 0.002); end
  def test_webtool_graphs_b378; assert_equal("All", worksheet.webtool_graphs_b378); end
  def test_webtool_graphs_c378; assert_equal("Global Liquid hydrocarbons", worksheet.webtool_graphs_c378); end
  def test_webtool_graphs_l378; assert_in_epsilon(10.013419080141805, worksheet.webtool_graphs_l378, 0.002); end
  def test_webtool_graphs_m378; assert_in_epsilon(9.980037210791183, worksheet.webtool_graphs_m378, 0.002); end
  def test_webtool_graphs_n378; assert_in_epsilon(10.281349180017564, worksheet.webtool_graphs_n378, 0.002); end
  def test_webtool_graphs_o378; assert_in_epsilon(10.50699801245702, worksheet.webtool_graphs_o378, 0.002); end
  def test_webtool_graphs_p378; assert_in_epsilon(10.631320472070666, worksheet.webtool_graphs_p378, 0.002); end
  def test_webtool_graphs_q378; assert_in_epsilon(10.628617488433495, worksheet.webtool_graphs_q378, 0.002); end
  def test_webtool_graphs_r378; assert_in_epsilon(10.539939441337966, worksheet.webtool_graphs_r378, 0.002); end
  def test_webtool_graphs_s378; assert_in_epsilon(10.341323870132795, worksheet.webtool_graphs_s378, 0.002); end
  def test_webtool_graphs_t378; assert_in_epsilon(10.07338796533191, worksheet.webtool_graphs_t378, 0.002); end
  def test_webtool_graphs_b379; assert_equal("All", worksheet.webtool_graphs_b379); end
  def test_webtool_graphs_c379; assert_equal("Global Solid hydrocarbons", worksheet.webtool_graphs_c379); end
  def test_webtool_graphs_j379; assert_equal("", worksheet.webtool_graphs_j379); end
  def test_webtool_graphs_l379; assert_in_epsilon(16.515138578626978, worksheet.webtool_graphs_l379, 0.002); end
  def test_webtool_graphs_m379; assert_in_epsilon(16.77611901917947, worksheet.webtool_graphs_m379, 0.002); end
  def test_webtool_graphs_n379; assert_in_epsilon(17.029302185149728, worksheet.webtool_graphs_n379, 0.002); end
  def test_webtool_graphs_o379; assert_in_epsilon(17.181472118639046, worksheet.webtool_graphs_o379, 0.002); end
  def test_webtool_graphs_p379; assert_in_epsilon(17.181955304792393, worksheet.webtool_graphs_p379, 0.002); end
  def test_webtool_graphs_q379; assert_in_epsilon(17.020906360490876, worksheet.webtool_graphs_q379, 0.002); end
  def test_webtool_graphs_r379; assert_in_epsilon(16.73648083811443, worksheet.webtool_graphs_r379, 0.002); end
  def test_webtool_graphs_s379; assert_in_epsilon(16.330368000120433, worksheet.webtool_graphs_s379, 0.002); end
  def test_webtool_graphs_t379; assert_in_epsilon(15.796844948063224, worksheet.webtool_graphs_t379, 0.002); end
  def test_webtool_graphs_b380; assert_equal("All", worksheet.webtool_graphs_b380); end
  def test_webtool_graphs_c380; assert_equal("Global Traditional biomass", worksheet.webtool_graphs_c380); end
  def test_webtool_graphs_l380; assert_in_epsilon(21.54205008268555, worksheet.webtool_graphs_l380, 0.002); end
  def test_webtool_graphs_m380; assert_in_epsilon(19.417905886918405, worksheet.webtool_graphs_m380, 0.002); end
  def test_webtool_graphs_n380; assert_in_epsilon(17.681185082088057, worksheet.webtool_graphs_n380, 0.002); end
  def test_webtool_graphs_o380; assert_in_epsilon(15.818153570726505, worksheet.webtool_graphs_o380, 0.002); end
  def test_webtool_graphs_p380; assert_in_epsilon(14.011196140535764, worksheet.webtool_graphs_p380, 0.002); end
  def test_webtool_graphs_q380; assert_in_epsilon(12.59982524615583, worksheet.webtool_graphs_q380, 0.002); end
  def test_webtool_graphs_r380; assert_in_epsilon(11.236222032036096, worksheet.webtool_graphs_r380, 0.002); end
  def test_webtool_graphs_s380; assert_in_epsilon(10.314536999972441, worksheet.webtool_graphs_s380, 0.002); end
  def test_webtool_graphs_t380; assert_in_epsilon(9.430794806278675, worksheet.webtool_graphs_t380, 0.002); end
  def test_webtool_graphs_b381; assert_equal("All", worksheet.webtool_graphs_b381); end
  def test_webtool_graphs_c381; assert_equal("Global Gaseous hydrocarbons", worksheet.webtool_graphs_c381); end
  def test_webtool_graphs_l381; assert_in_epsilon(22.695227630580543, worksheet.webtool_graphs_l381, 0.002); end
  def test_webtool_graphs_m381; assert_in_epsilon(22.932003692020853, worksheet.webtool_graphs_m381, 0.002); end
  def test_webtool_graphs_n381; assert_in_epsilon(24.666733755978118, worksheet.webtool_graphs_n381, 0.002); end
  def test_webtool_graphs_o381; assert_in_epsilon(26.30357984808916, worksheet.webtool_graphs_o381, 0.002); end
  def test_webtool_graphs_p381; assert_in_epsilon(27.7798397730927, worksheet.webtool_graphs_p381, 0.002); end
  def test_webtool_graphs_q381; assert_in_epsilon(29.005369167960886, worksheet.webtool_graphs_q381, 0.002); end
  def test_webtool_graphs_r381; assert_in_epsilon(30.067790442352354, worksheet.webtool_graphs_r381, 0.002); end
  def test_webtool_graphs_s381; assert_in_epsilon(30.879386788391553, worksheet.webtool_graphs_s381, 0.002); end
  def test_webtool_graphs_t381; assert_in_epsilon(31.543411222148535, worksheet.webtool_graphs_t381, 0.002); end
  def test_webtool_graphs_b382; assert_equal("All", worksheet.webtool_graphs_b382); end
  def test_webtool_graphs_c382; assert_equal("Global Electricity (delivered to end user)", worksheet.webtool_graphs_c382); end
  def test_webtool_graphs_l382; assert_in_epsilon(36.79584224618469, worksheet.webtool_graphs_l382, 0.002); end
  def test_webtool_graphs_m382; assert_in_epsilon(41.481385509948744, worksheet.webtool_graphs_m382, 0.002); end
  def test_webtool_graphs_n382; assert_in_epsilon(46.93188219838359, worksheet.webtool_graphs_n382, 0.002); end
  def test_webtool_graphs_o382; assert_in_epsilon(52.57272876421361, worksheet.webtool_graphs_o382, 0.002); end
  def test_webtool_graphs_p382; assert_in_epsilon(58.292741370395014, worksheet.webtool_graphs_p382, 0.002); end
  def test_webtool_graphs_q382; assert_in_epsilon(63.91468153046602, worksheet.webtool_graphs_q382, 0.002); end
  def test_webtool_graphs_r382; assert_in_epsilon(69.5180998707163, worksheet.webtool_graphs_r382, 0.002); end
  def test_webtool_graphs_s382; assert_in_epsilon(74.89835893085606, worksheet.webtool_graphs_s382, 0.002); end
  def test_webtool_graphs_t382; assert_in_epsilon(80.15570265487679, worksheet.webtool_graphs_t382, 0.002); end
  def test_webtool_graphs_b383; assert_equal("TOTAL", worksheet.webtool_graphs_b383); end
  def test_webtool_graphs_c383; assert_equal("TOTAL", worksheet.webtool_graphs_c383); end
  def test_webtool_graphs_l383; assert_in_epsilon(123.44578749989755, worksheet.webtool_graphs_l383, 0.002); end
  def test_webtool_graphs_m383; assert_in_epsilon(126.73664172270409, worksheet.webtool_graphs_m383, 0.002); end
  def test_webtool_graphs_n383; assert_in_epsilon(134.90205457142434, worksheet.webtool_graphs_n383, 0.002); end
  def test_webtool_graphs_o383; assert_in_epsilon(143.06059041761048, worksheet.webtool_graphs_o383, 0.002); end
  def test_webtool_graphs_p383; assert_in_epsilon(151.00000819811063, worksheet.webtool_graphs_p383, 0.002); end
  def test_webtool_graphs_q383; assert_in_epsilon(158.68217635447348, worksheet.webtool_graphs_q383, 0.002); end
  def test_webtool_graphs_r383; assert_in_epsilon(166.0714610040138, worksheet.webtool_graphs_r383, 0.002); end
  def test_webtool_graphs_s383; assert_in_epsilon(173.13904939109355, worksheet.webtool_graphs_s383, 0.002); end
  def test_webtool_graphs_t383; assert_in_epsilon(179.79269298322475, worksheet.webtool_graphs_t383, 0.002); end
  def test_webtool_graphs_b27; assert_equal("Type of city", worksheet.webtool_graphs_b27); end
  def test_webtool_graphs_c27; assert_equal("Description", worksheet.webtool_graphs_c27); end
  def test_webtool_graphs_d27; assert_equal("1975", worksheet.webtool_graphs_d27); end
  def test_webtool_graphs_e27; assert_equal("1980", worksheet.webtool_graphs_e27); end
  def test_webtool_graphs_f27; assert_equal("1985", worksheet.webtool_graphs_f27); end
  def test_webtool_graphs_g27; assert_equal("1990", worksheet.webtool_graphs_g27); end
  def test_webtool_graphs_h27; assert_equal("1995", worksheet.webtool_graphs_h27); end
  def test_webtool_graphs_i27; assert_equal("2000", worksheet.webtool_graphs_i27); end
  def test_webtool_graphs_j27; assert_equal("2005", worksheet.webtool_graphs_j27); end
  def test_webtool_graphs_k27; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k27, 0.002); end
  def test_webtool_graphs_l27; assert_equal("2011", worksheet.webtool_graphs_l27); end
  def test_webtool_graphs_m27; assert_equal("2015", worksheet.webtool_graphs_m27); end
  def test_webtool_graphs_n27; assert_equal("2020", worksheet.webtool_graphs_n27); end
  def test_webtool_graphs_o27; assert_equal("2025", worksheet.webtool_graphs_o27); end
  def test_webtool_graphs_p27; assert_equal("2030", worksheet.webtool_graphs_p27); end
  def test_webtool_graphs_q27; assert_equal("2035", worksheet.webtool_graphs_q27); end
  def test_webtool_graphs_r27; assert_equal("2040", worksheet.webtool_graphs_r27); end
  def test_webtool_graphs_s27; assert_equal("2045", worksheet.webtool_graphs_s27); end
  def test_webtool_graphs_t27; assert_equal("2050", worksheet.webtool_graphs_t27); end
  def test_webtool_graphs_b28; assert_equal("All", worksheet.webtool_graphs_b28); end
  def test_webtool_graphs_c28; assert_equal("Global urban house size", worksheet.webtool_graphs_c28); end
  def test_webtool_graphs_j28; assert_equal("", worksheet.webtool_graphs_j28); end
  def test_webtool_graphs_l28; assert_in_epsilon(92.0, worksheet.webtool_graphs_l28, 0.002); end
  def test_webtool_graphs_m28; assert_in_epsilon(93.2, worksheet.webtool_graphs_m28, 0.002); end
  def test_webtool_graphs_n28; assert_in_epsilon(94.74285714285713, worksheet.webtool_graphs_n28, 0.002); end
  def test_webtool_graphs_o28; assert_in_epsilon(96.28571428571429, worksheet.webtool_graphs_o28, 0.002); end
  def test_webtool_graphs_p28; assert_in_epsilon(97.82857142857142, worksheet.webtool_graphs_p28, 0.002); end
  def test_webtool_graphs_q28; assert_in_epsilon(99.37142857142855, worksheet.webtool_graphs_q28, 0.002); end
  def test_webtool_graphs_r28; assert_in_epsilon(100.91428571428571, worksheet.webtool_graphs_r28, 0.002); end
  def test_webtool_graphs_s28; assert_in_epsilon(102.45714285714286, worksheet.webtool_graphs_s28, 0.002); end
  def test_webtool_graphs_t28; assert_in_epsilon(103.99999999999999, worksheet.webtool_graphs_t28, 0.002); end
  def test_webtool_graphs_b29; assert_equal("All", worksheet.webtool_graphs_b29); end
  def test_webtool_graphs_c29; assert_equal("Global rural house size", worksheet.webtool_graphs_c29); end
  def test_webtool_graphs_l29; assert_in_epsilon(78.0, worksheet.webtool_graphs_l29, 0.002); end
  def test_webtool_graphs_m29; assert_in_epsilon(79.0, worksheet.webtool_graphs_m29, 0.002); end
  def test_webtool_graphs_n29; assert_in_epsilon(81.14285714285712, worksheet.webtool_graphs_n29, 0.002); end
  def test_webtool_graphs_o29; assert_in_epsilon(83.28571428571428, worksheet.webtool_graphs_o29, 0.002); end
  def test_webtool_graphs_p29; assert_in_epsilon(85.42857142857142, worksheet.webtool_graphs_p29, 0.002); end
  def test_webtool_graphs_q29; assert_in_epsilon(87.57142857142857, worksheet.webtool_graphs_q29, 0.002); end
  def test_webtool_graphs_r29; assert_in_epsilon(89.71428571428572, worksheet.webtool_graphs_r29, 0.002); end
  def test_webtool_graphs_s29; assert_in_epsilon(91.85714285714285, worksheet.webtool_graphs_s29, 0.002); end
  def test_webtool_graphs_t29; assert_in_epsilon(94.0, worksheet.webtool_graphs_t29, 0.002); end
  def test_webtool_graphs_b30; assert_equal("Weighted average", worksheet.webtool_graphs_b30); end
  def test_webtool_graphs_c30; assert_equal("Average household size", worksheet.webtool_graphs_c30); end
  def test_webtool_graphs_l30; assert_in_epsilon(86.89531887762217, worksheet.webtool_graphs_l30, 0.002); end
  def test_webtool_graphs_m30; assert_in_epsilon(88.268159816611, worksheet.webtool_graphs_m30, 0.002); end
  def test_webtool_graphs_n30; assert_in_epsilon(90.28651417286284, worksheet.webtool_graphs_n30, 0.002); end
  def test_webtool_graphs_o30; assert_in_epsilon(92.25465775019146, worksheet.webtool_graphs_o30, 0.002); end
  def test_webtool_graphs_p30; assert_in_epsilon(94.1789128653509, worksheet.webtool_graphs_p30, 0.002); end
  def test_webtool_graphs_q30; assert_in_epsilon(96.06462029240203, worksheet.webtool_graphs_q30, 0.002); end
  def test_webtool_graphs_r30; assert_in_epsilon(97.92000897071844, worksheet.webtool_graphs_r30, 0.002); end
  def test_webtool_graphs_s30; assert_in_epsilon(99.75981323724046, worksheet.webtool_graphs_s30, 0.002); end
  def test_webtool_graphs_t30; assert_in_epsilon(101.5840737884767, worksheet.webtool_graphs_t30, 0.002); end
  def test_webtool_graphs_b8; assert_equal("Type of city", worksheet.webtool_graphs_b8); end
  def test_webtool_graphs_c8; assert_equal("Description", worksheet.webtool_graphs_c8); end
  def test_webtool_graphs_d8; assert_equal("1975", worksheet.webtool_graphs_d8); end
  def test_webtool_graphs_e8; assert_equal("1980", worksheet.webtool_graphs_e8); end
  def test_webtool_graphs_f8; assert_equal("1985", worksheet.webtool_graphs_f8); end
  def test_webtool_graphs_g8; assert_equal("1990", worksheet.webtool_graphs_g8); end
  def test_webtool_graphs_h8; assert_equal("1995", worksheet.webtool_graphs_h8); end
  def test_webtool_graphs_i8; assert_equal("2000", worksheet.webtool_graphs_i8); end
  def test_webtool_graphs_j8; assert_equal("2005", worksheet.webtool_graphs_j8); end
  def test_webtool_graphs_k8; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k8, 0.002); end
  def test_webtool_graphs_l8; assert_equal("2011", worksheet.webtool_graphs_l8); end
  def test_webtool_graphs_m8; assert_equal("2015", worksheet.webtool_graphs_m8); end
  def test_webtool_graphs_n8; assert_equal("2020", worksheet.webtool_graphs_n8); end
  def test_webtool_graphs_o8; assert_equal("2025", worksheet.webtool_graphs_o8); end
  def test_webtool_graphs_p8; assert_equal("2030", worksheet.webtool_graphs_p8); end
  def test_webtool_graphs_q8; assert_equal("2035", worksheet.webtool_graphs_q8); end
  def test_webtool_graphs_r8; assert_equal("2040", worksheet.webtool_graphs_r8); end
  def test_webtool_graphs_s8; assert_equal("2045", worksheet.webtool_graphs_s8); end
  def test_webtool_graphs_t8; assert_equal("2050", worksheet.webtool_graphs_t8); end
  def test_webtool_graphs_b9; assert_equal("All", worksheet.webtool_graphs_b9); end
  def test_webtool_graphs_c9; assert_equal("Global urban heating season temperature", worksheet.webtool_graphs_c9); end
  def test_webtool_graphs_j9; assert_equal("", worksheet.webtool_graphs_j9); end
  def test_webtool_graphs_l9; assert_in_epsilon(17.5, worksheet.webtool_graphs_l9, 0.002); end
  def test_webtool_graphs_m9; assert_in_epsilon(17.653846153846153, worksheet.webtool_graphs_m9, 0.002); end
  def test_webtool_graphs_n9; assert_in_epsilon(17.903296703296704, worksheet.webtool_graphs_n9, 0.002); end
  def test_webtool_graphs_o9; assert_in_epsilon(18.152747252747254, worksheet.webtool_graphs_o9, 0.002); end
  def test_webtool_graphs_p9; assert_in_epsilon(18.4021978021978, worksheet.webtool_graphs_p9, 0.002); end
  def test_webtool_graphs_q9; assert_in_epsilon(18.651648351648348, worksheet.webtool_graphs_q9, 0.002); end
  def test_webtool_graphs_r9; assert_in_epsilon(18.901098901098898, worksheet.webtool_graphs_r9, 0.002); end
  def test_webtool_graphs_s9; assert_in_epsilon(19.15054945054945, worksheet.webtool_graphs_s9, 0.002); end
  def test_webtool_graphs_t9; assert_in_epsilon(19.4, worksheet.webtool_graphs_t9, 0.002); end
  def test_webtool_graphs_b10; assert_equal("All", worksheet.webtool_graphs_b10); end
  def test_webtool_graphs_c10; assert_equal("Global rural heating season temperature", worksheet.webtool_graphs_c10); end
  def test_webtool_graphs_l10; assert_in_epsilon(13.0, worksheet.webtool_graphs_l10, 0.002); end
  def test_webtool_graphs_m10; assert_in_epsilon(13.410256410256412, worksheet.webtool_graphs_m10, 0.002); end
  def test_webtool_graphs_n10; assert_in_epsilon(13.837362637362638, worksheet.webtool_graphs_n10, 0.002); end
  def test_webtool_graphs_o10; assert_in_epsilon(14.264468864468867, worksheet.webtool_graphs_o10, 0.002); end
  def test_webtool_graphs_p10; assert_in_epsilon(14.691575091575093, worksheet.webtool_graphs_p10, 0.002); end
  def test_webtool_graphs_q10; assert_in_epsilon(15.118681318681318, worksheet.webtool_graphs_q10, 0.002); end
  def test_webtool_graphs_r10; assert_in_epsilon(15.545787545787546, worksheet.webtool_graphs_r10, 0.002); end
  def test_webtool_graphs_s10; assert_in_epsilon(15.972893772893773, worksheet.webtool_graphs_s10, 0.002); end
  def test_webtool_graphs_t10; assert_in_epsilon(16.4, worksheet.webtool_graphs_t10, 0.002); end
  def test_webtool_graphs_b11; assert_equal("All", worksheet.webtool_graphs_b11); end
  def test_webtool_graphs_c11; assert_equal("Global non residential heating season temperature", worksheet.webtool_graphs_c11); end
  def test_webtool_graphs_l11; assert_in_epsilon(20.0, worksheet.webtool_graphs_l11, 0.002); end
  def test_webtool_graphs_m11; assert_in_epsilon(20.102564102564102, worksheet.webtool_graphs_m11, 0.002); end
  def test_webtool_graphs_n11; assert_in_epsilon(20.345054945054944, worksheet.webtool_graphs_n11, 0.002); end
  def test_webtool_graphs_o11; assert_in_epsilon(20.587545787545785, worksheet.webtool_graphs_o11, 0.002); end
  def test_webtool_graphs_p11; assert_in_epsilon(20.83003663003663, worksheet.webtool_graphs_p11, 0.002); end
  def test_webtool_graphs_q11; assert_in_epsilon(21.072527472527472, worksheet.webtool_graphs_q11, 0.002); end
  def test_webtool_graphs_r11; assert_in_epsilon(21.315018315018314, worksheet.webtool_graphs_r11, 0.002); end
  def test_webtool_graphs_s11; assert_in_epsilon(21.557509157509156, worksheet.webtool_graphs_s11, 0.002); end
  def test_webtool_graphs_t11; assert_in_epsilon(21.799999999999997, worksheet.webtool_graphs_t11, 0.002); end
  def test_webtool_graphs_b12; assert_equal("All", worksheet.webtool_graphs_b12); end
  def test_webtool_graphs_c12; assert_equal("Global urban cooling season temperature", worksheet.webtool_graphs_c12); end
  def test_webtool_graphs_j12; assert_equal("", worksheet.webtool_graphs_j12); end
  def test_webtool_graphs_l12; assert_in_epsilon(26.5, worksheet.webtool_graphs_l12, 0.002); end
  def test_webtool_graphs_m12; assert_in_epsilon(26.346153846153847, worksheet.webtool_graphs_m12, 0.002); end
  def test_webtool_graphs_n12; assert_in_epsilon(26.096703296703296, worksheet.webtool_graphs_n12, 0.002); end
  def test_webtool_graphs_o12; assert_in_epsilon(25.84725274725275, worksheet.webtool_graphs_o12, 0.002); end
  def test_webtool_graphs_p12; assert_in_epsilon(25.597802197802196, worksheet.webtool_graphs_p12, 0.002); end
  def test_webtool_graphs_q12; assert_in_epsilon(25.348351648351645, worksheet.webtool_graphs_q12, 0.002); end
  def test_webtool_graphs_r12; assert_in_epsilon(25.098901098901102, worksheet.webtool_graphs_r12, 0.002); end
  def test_webtool_graphs_s12; assert_in_epsilon(24.849450549450548, worksheet.webtool_graphs_s12, 0.002); end
  def test_webtool_graphs_t12; assert_in_epsilon(24.6, worksheet.webtool_graphs_t12, 0.002); end
  def test_webtool_graphs_b13; assert_equal("All", worksheet.webtool_graphs_b13); end
  def test_webtool_graphs_c13; assert_equal("Global rural cooling season temperature", worksheet.webtool_graphs_c13); end
  def test_webtool_graphs_l13; assert_in_epsilon(29.0, worksheet.webtool_graphs_l13, 0.002); end
  def test_webtool_graphs_m13; assert_in_epsilon(28.58974358974359, worksheet.webtool_graphs_m13, 0.002); end
  def test_webtool_graphs_n13; assert_in_epsilon(28.019780219780216, worksheet.webtool_graphs_n13, 0.002); end
  def test_webtool_graphs_o13; assert_in_epsilon(27.449816849816848, worksheet.webtool_graphs_o13, 0.002); end
  def test_webtool_graphs_p13; assert_in_epsilon(26.87985347985348, worksheet.webtool_graphs_p13, 0.002); end
  def test_webtool_graphs_q13; assert_in_epsilon(26.30989010989011, worksheet.webtool_graphs_q13, 0.002); end
  def test_webtool_graphs_r13; assert_in_epsilon(25.73992673992674, worksheet.webtool_graphs_r13, 0.002); end
  def test_webtool_graphs_s13; assert_in_epsilon(25.16996336996337, worksheet.webtool_graphs_s13, 0.002); end
  def test_webtool_graphs_t13; assert_in_epsilon(24.6, worksheet.webtool_graphs_t13, 0.002); end
  def test_webtool_graphs_b14; assert_equal("All", worksheet.webtool_graphs_b14); end
  def test_webtool_graphs_c14; assert_equal("Global non residential cooling season temperature", worksheet.webtool_graphs_c14); end
  def test_webtool_graphs_l14; assert_in_epsilon(23.0, worksheet.webtool_graphs_l14, 0.002); end
  def test_webtool_graphs_m14; assert_in_epsilon(23.102564102564102, worksheet.webtool_graphs_m14, 0.002); end
  def test_webtool_graphs_n14; assert_in_epsilon(23.17362637362637, worksheet.webtool_graphs_n14, 0.002); end
  def test_webtool_graphs_o14; assert_in_epsilon(23.244688644688644, worksheet.webtool_graphs_o14, 0.002); end
  def test_webtool_graphs_p14; assert_in_epsilon(23.315750915750915, worksheet.webtool_graphs_p14, 0.002); end
  def test_webtool_graphs_q14; assert_in_epsilon(23.386813186813185, worksheet.webtool_graphs_q14, 0.002); end
  def test_webtool_graphs_r14; assert_in_epsilon(23.45787545787546, worksheet.webtool_graphs_r14, 0.002); end
  def test_webtool_graphs_s14; assert_in_epsilon(23.528937728937727, worksheet.webtool_graphs_s14, 0.002); end
  def test_webtool_graphs_t14; assert_in_epsilon(23.6, worksheet.webtool_graphs_t14, 0.002); end
  def test_webtool_graphs_b47; assert_equal("Area", worksheet.webtool_graphs_b47); end
  def test_webtool_graphs_c47; assert_equal("Description", worksheet.webtool_graphs_c47); end
  def test_webtool_graphs_d47; assert_equal("1975", worksheet.webtool_graphs_d47); end
  def test_webtool_graphs_e47; assert_equal("1980", worksheet.webtool_graphs_e47); end
  def test_webtool_graphs_f47; assert_equal("1985", worksheet.webtool_graphs_f47); end
  def test_webtool_graphs_g47; assert_equal("1990", worksheet.webtool_graphs_g47); end
  def test_webtool_graphs_h47; assert_equal("1995", worksheet.webtool_graphs_h47); end
  def test_webtool_graphs_i47; assert_equal("2000", worksheet.webtool_graphs_i47); end
  def test_webtool_graphs_j47; assert_equal("2005", worksheet.webtool_graphs_j47); end
  def test_webtool_graphs_k47; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k47, 0.002); end
  def test_webtool_graphs_l47; assert_equal("2011", worksheet.webtool_graphs_l47); end
  def test_webtool_graphs_m47; assert_equal("2015", worksheet.webtool_graphs_m47); end
  def test_webtool_graphs_n47; assert_equal("2020", worksheet.webtool_graphs_n47); end
  def test_webtool_graphs_o47; assert_equal("2025", worksheet.webtool_graphs_o47); end
  def test_webtool_graphs_p47; assert_equal("2030", worksheet.webtool_graphs_p47); end
  def test_webtool_graphs_q47; assert_equal("2035", worksheet.webtool_graphs_q47); end
  def test_webtool_graphs_r47; assert_equal("2040", worksheet.webtool_graphs_r47); end
  def test_webtool_graphs_s47; assert_equal("2045", worksheet.webtool_graphs_s47); end
  def test_webtool_graphs_t47; assert_equal("2050", worksheet.webtool_graphs_t47); end
  def test_webtool_graphs_b48; assert_equal("Urban", worksheet.webtool_graphs_b48); end
  def test_webtool_graphs_c48; assert_equal("Urban lighting", worksheet.webtool_graphs_c48); end
  def test_webtool_graphs_l48; assert_in_epsilon(24.0, worksheet.webtool_graphs_l48, 0.002); end
  def test_webtool_graphs_m48; assert_in_epsilon(25.641025641025642, worksheet.webtool_graphs_m48, 0.002); end
  def test_webtool_graphs_n48; assert_in_epsilon(26.906593406593405, worksheet.webtool_graphs_n48, 0.002); end
  def test_webtool_graphs_o48; assert_in_epsilon(28.172161172161175, worksheet.webtool_graphs_o48, 0.002); end
  def test_webtool_graphs_p48; assert_in_epsilon(29.437728937728934, worksheet.webtool_graphs_p48, 0.002); end
  def test_webtool_graphs_q48; assert_in_epsilon(30.7032967032967, worksheet.webtool_graphs_q48, 0.002); end
  def test_webtool_graphs_r48; assert_in_epsilon(31.96886446886447, worksheet.webtool_graphs_r48, 0.002); end
  def test_webtool_graphs_s48; assert_in_epsilon(33.234432234432234, worksheet.webtool_graphs_s48, 0.002); end
  def test_webtool_graphs_t48; assert_in_epsilon(34.5, worksheet.webtool_graphs_t48, 0.002); end
  def test_webtool_graphs_b49; assert_equal("Rural", worksheet.webtool_graphs_b49); end
  def test_webtool_graphs_c49; assert_equal("Rural lighting", worksheet.webtool_graphs_c49); end
  def test_webtool_graphs_l49; assert_in_epsilon(12.0, worksheet.webtool_graphs_l49, 0.002); end
  def test_webtool_graphs_m49; assert_in_epsilon(13.846153846153847, worksheet.webtool_graphs_m49, 0.002); end
  def test_webtool_graphs_n49; assert_in_epsilon(15.368131868131869, worksheet.webtool_graphs_n49, 0.002); end
  def test_webtool_graphs_o49; assert_in_epsilon(16.89010989010989, worksheet.webtool_graphs_o49, 0.002); end
  def test_webtool_graphs_p49; assert_in_epsilon(18.412087912087912, worksheet.webtool_graphs_p49, 0.002); end
  def test_webtool_graphs_q49; assert_in_epsilon(19.93406593406593, worksheet.webtool_graphs_q49, 0.002); end
  def test_webtool_graphs_r49; assert_in_epsilon(21.456043956043956, worksheet.webtool_graphs_r49, 0.002); end
  def test_webtool_graphs_s49; assert_in_epsilon(22.978021978021975, worksheet.webtool_graphs_s49, 0.002); end
  def test_webtool_graphs_t49; assert_in_epsilon(24.5, worksheet.webtool_graphs_t49, 0.002); end
  def test_webtool_graphs_b352; assert_equal("Area", worksheet.webtool_graphs_b352); end
  def test_webtool_graphs_c352; assert_equal("Technology code", worksheet.webtool_graphs_c352); end
  def test_webtool_graphs_d352; assert_equal("1975", worksheet.webtool_graphs_d352); end
  def test_webtool_graphs_e352; assert_equal("1980", worksheet.webtool_graphs_e352); end
  def test_webtool_graphs_f352; assert_equal("1985", worksheet.webtool_graphs_f352); end
  def test_webtool_graphs_g352; assert_equal("1990", worksheet.webtool_graphs_g352); end
  def test_webtool_graphs_h352; assert_equal("1995", worksheet.webtool_graphs_h352); end
  def test_webtool_graphs_i352; assert_equal("2000", worksheet.webtool_graphs_i352); end
  def test_webtool_graphs_j352; assert_equal("2005", worksheet.webtool_graphs_j352); end
  def test_webtool_graphs_k352; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k352, 0.002); end
  def test_webtool_graphs_l352; assert_equal("2011", worksheet.webtool_graphs_l352); end
  def test_webtool_graphs_m352; assert_equal("2015", worksheet.webtool_graphs_m352); end
  def test_webtool_graphs_n352; assert_equal("2020", worksheet.webtool_graphs_n352); end
  def test_webtool_graphs_o352; assert_equal("2025", worksheet.webtool_graphs_o352); end
  def test_webtool_graphs_p352; assert_equal("2030", worksheet.webtool_graphs_p352); end
  def test_webtool_graphs_q352; assert_equal("2035", worksheet.webtool_graphs_q352); end
  def test_webtool_graphs_r352; assert_equal("2040", worksheet.webtool_graphs_r352); end
  def test_webtool_graphs_s352; assert_equal("2045", worksheet.webtool_graphs_s352); end
  def test_webtool_graphs_t352; assert_equal("2050", worksheet.webtool_graphs_t352); end
  def test_webtool_graphs_b353; assert_equal("Rural", worksheet.webtool_graphs_b353); end
  def test_webtool_graphs_c353; assert_equal("heater.solar.rural.space", worksheet.webtool_graphs_c353); end
  def test_webtool_graphs_l353; assert_in_delta(0.0, (worksheet.webtool_graphs_l353||0), 0.002); end
  def test_webtool_graphs_m353; assert_in_delta(0.0, (worksheet.webtool_graphs_m353||0), 0.002); end
  def test_webtool_graphs_n353; assert_in_delta(0.0014285714285714281, worksheet.webtool_graphs_n353, 0.002); end
  def test_webtool_graphs_o353; assert_in_delta(0.0028571428571428563, worksheet.webtool_graphs_o353, 0.002); end
  def test_webtool_graphs_p353; assert_in_delta(0.004285714285714285, worksheet.webtool_graphs_p353, 0.002); end
  def test_webtool_graphs_q353; assert_in_delta(0.0057142857142857125, worksheet.webtool_graphs_q353, 0.002); end
  def test_webtool_graphs_r353; assert_in_delta(0.007142857142857143, worksheet.webtool_graphs_r353, 0.002); end
  def test_webtool_graphs_s353; assert_in_delta(0.00857142857142857, worksheet.webtool_graphs_s353, 0.002); end
  def test_webtool_graphs_t353; assert_in_delta(0.009999999999999998, worksheet.webtool_graphs_t353, 0.002); end
  def test_webtool_graphs_b354; assert_equal("Rural", worksheet.webtool_graphs_b354); end
  def test_webtool_graphs_c354; assert_equal("heater.heatpump.rural.space", worksheet.webtool_graphs_c354); end
  def test_webtool_graphs_l354; assert_in_delta(0.005, worksheet.webtool_graphs_l354, 0.002); end
  def test_webtool_graphs_m354; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_m354, 0.002); end
  def test_webtool_graphs_n354; assert_in_delta(0.00914285714285714, worksheet.webtool_graphs_n354, 0.002); end
  def test_webtool_graphs_o354; assert_in_delta(0.013285714285714283, worksheet.webtool_graphs_o354, 0.002); end
  def test_webtool_graphs_p354; assert_in_delta(0.017428571428571425, worksheet.webtool_graphs_p354, 0.002); end
  def test_webtool_graphs_q354; assert_in_delta(0.021571428571428564, worksheet.webtool_graphs_q354, 0.002); end
  def test_webtool_graphs_r354; assert_in_delta(0.02571428571428571, worksheet.webtool_graphs_r354, 0.002); end
  def test_webtool_graphs_s354; assert_in_delta(0.02985714285714285, worksheet.webtool_graphs_s354, 0.002); end
  def test_webtool_graphs_t354; assert_in_delta(0.03399999999999999, worksheet.webtool_graphs_t354, 0.002); end
  def test_webtool_graphs_b355; assert_equal("Rural", worksheet.webtool_graphs_b355); end
  def test_webtool_graphs_c355; assert_equal("heater.electricity.rural.space", worksheet.webtool_graphs_c355); end
  def test_webtool_graphs_l355; assert_in_delta(0.01, worksheet.webtool_graphs_l355, 0.002); end
  def test_webtool_graphs_m355; assert_in_delta(0.02435897435897436, worksheet.webtool_graphs_m355, 0.002); end
  def test_webtool_graphs_n355; assert_in_delta(0.039450549450549446, worksheet.webtool_graphs_n355, 0.002); end
  def test_webtool_graphs_o355; assert_in_delta(0.054542124542124544, worksheet.webtool_graphs_o355, 0.002); end
  def test_webtool_graphs_p355; assert_in_delta(0.06963369963369964, worksheet.webtool_graphs_p355, 0.002); end
  def test_webtool_graphs_q355; assert_in_delta(0.08472527472527473, worksheet.webtool_graphs_q355, 0.002); end
  def test_webtool_graphs_r355; assert_in_delta(0.09981684981684982, worksheet.webtool_graphs_r355, 0.002); end
  def test_webtool_graphs_s355; assert_in_delta(0.11490842490842489, worksheet.webtool_graphs_s355, 0.002); end
  def test_webtool_graphs_t355; assert_in_delta(0.13, worksheet.webtool_graphs_t355, 0.002); end
  def test_webtool_graphs_c356; assert_equal("% of rural space heating that is low-carbon", worksheet.webtool_graphs_c356); end
  def test_webtool_graphs_l356; assert_in_delta(0.005, worksheet.webtool_graphs_l356, 0.002); end
  def test_webtool_graphs_m356; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_m356, 0.002); end
  def test_webtool_graphs_n356; assert_in_delta(0.010571428571428568, worksheet.webtool_graphs_n356, 0.002); end
  def test_webtool_graphs_o356; assert_in_delta(0.01614285714285714, worksheet.webtool_graphs_o356, 0.002); end
  def test_webtool_graphs_p356; assert_in_delta(0.02171428571428571, worksheet.webtool_graphs_p356, 0.002); end
  def test_webtool_graphs_q356; assert_in_delta(0.027285714285714278, worksheet.webtool_graphs_q356, 0.002); end
  def test_webtool_graphs_r356; assert_in_delta(0.032857142857142856, worksheet.webtool_graphs_r356, 0.002); end
  def test_webtool_graphs_s356; assert_in_delta(0.03842857142857142, worksheet.webtool_graphs_s356, 0.002); end
  def test_webtool_graphs_t356; assert_in_delta(0.043999999999999984, worksheet.webtool_graphs_t356, 0.002); end
  def test_webtool_graphs_c357; assert_equal("% of rural space heating by zero carbon and electric technologies", worksheet.webtool_graphs_c357); end
  def test_webtool_graphs_l357; assert_in_delta(0.015, worksheet.webtool_graphs_l357, 0.002); end
  def test_webtool_graphs_m357; assert_in_delta(0.02935897435897436, worksheet.webtool_graphs_m357, 0.002); end
  def test_webtool_graphs_n357; assert_in_delta(0.05002197802197801, worksheet.webtool_graphs_n357, 0.002); end
  def test_webtool_graphs_o357; assert_in_delta(0.07068498168498169, worksheet.webtool_graphs_o357, 0.002); end
  def test_webtool_graphs_p357; assert_in_delta(0.09134798534798536, worksheet.webtool_graphs_p357, 0.002); end
  def test_webtool_graphs_q357; assert_in_delta(0.112010989010989, worksheet.webtool_graphs_q357, 0.002); end
  def test_webtool_graphs_r357; assert_in_delta(0.13267399267399269, worksheet.webtool_graphs_r357, 0.002); end
  def test_webtool_graphs_s357; assert_in_delta(0.15333699633699632, worksheet.webtool_graphs_s357, 0.002); end
  def test_webtool_graphs_t357; assert_in_delta(0.174, worksheet.webtool_graphs_t357, 0.002); end
  def test_webtool_graphs_b340; assert_equal("Type of city", worksheet.webtool_graphs_b340); end
  def test_webtool_graphs_c340; assert_equal("Technology code", worksheet.webtool_graphs_c340); end
  def test_webtool_graphs_d340; assert_equal("1975", worksheet.webtool_graphs_d340); end
  def test_webtool_graphs_e340; assert_equal("1980", worksheet.webtool_graphs_e340); end
  def test_webtool_graphs_f340; assert_equal("1985", worksheet.webtool_graphs_f340); end
  def test_webtool_graphs_g340; assert_equal("1990", worksheet.webtool_graphs_g340); end
  def test_webtool_graphs_h340; assert_equal("1995", worksheet.webtool_graphs_h340); end
  def test_webtool_graphs_i340; assert_equal("2000", worksheet.webtool_graphs_i340); end
  def test_webtool_graphs_j340; assert_equal("2005", worksheet.webtool_graphs_j340); end
  def test_webtool_graphs_k340; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k340, 0.002); end
  def test_webtool_graphs_l340; assert_equal("2011", worksheet.webtool_graphs_l340); end
  def test_webtool_graphs_m340; assert_equal("2015", worksheet.webtool_graphs_m340); end
  def test_webtool_graphs_n340; assert_equal("2020", worksheet.webtool_graphs_n340); end
  def test_webtool_graphs_o340; assert_equal("2025", worksheet.webtool_graphs_o340); end
  def test_webtool_graphs_p340; assert_equal("2030", worksheet.webtool_graphs_p340); end
  def test_webtool_graphs_q340; assert_equal("2035", worksheet.webtool_graphs_q340); end
  def test_webtool_graphs_r340; assert_equal("2040", worksheet.webtool_graphs_r340); end
  def test_webtool_graphs_s340; assert_equal("2045", worksheet.webtool_graphs_s340); end
  def test_webtool_graphs_t340; assert_equal("2050", worksheet.webtool_graphs_t340); end
  def test_webtool_graphs_b341; assert_equal("Urban", worksheet.webtool_graphs_b341); end
  def test_webtool_graphs_c341; assert_equal("heater.solar.urban.space", worksheet.webtool_graphs_c341); end
  def test_webtool_graphs_l341; assert_in_delta(0.0, (worksheet.webtool_graphs_l341||0), 0.002); end
  def test_webtool_graphs_m341; assert_in_delta(0.0, (worksheet.webtool_graphs_m341||0), 0.002); end
  def test_webtool_graphs_n341; assert_in_delta(0.0014285714285714281, worksheet.webtool_graphs_n341, 0.002); end
  def test_webtool_graphs_o341; assert_in_delta(0.0028571428571428563, worksheet.webtool_graphs_o341, 0.002); end
  def test_webtool_graphs_p341; assert_in_delta(0.004285714285714285, worksheet.webtool_graphs_p341, 0.002); end
  def test_webtool_graphs_q341; assert_in_delta(0.0057142857142857125, worksheet.webtool_graphs_q341, 0.002); end
  def test_webtool_graphs_r341; assert_in_delta(0.007142857142857143, worksheet.webtool_graphs_r341, 0.002); end
  def test_webtool_graphs_s341; assert_in_delta(0.00857142857142857, worksheet.webtool_graphs_s341, 0.002); end
  def test_webtool_graphs_t341; assert_in_delta(0.009999999999999998, worksheet.webtool_graphs_t341, 0.002); end
  def test_webtool_graphs_b342; assert_equal("Urban", worksheet.webtool_graphs_b342); end
  def test_webtool_graphs_c342; assert_equal("heater.heatpump.urban.space", worksheet.webtool_graphs_c342); end
  def test_webtool_graphs_l342; assert_in_delta(0.02, worksheet.webtool_graphs_l342, 0.002); end
  def test_webtool_graphs_m342; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_m342, 0.002); end
  def test_webtool_graphs_n342; assert_in_delta(0.023714285714285712, worksheet.webtool_graphs_n342, 0.002); end
  def test_webtool_graphs_o342; assert_in_delta(0.027428571428571427, worksheet.webtool_graphs_o342, 0.002); end
  def test_webtool_graphs_p342; assert_in_delta(0.031142857142857142, worksheet.webtool_graphs_p342, 0.002); end
  def test_webtool_graphs_q342; assert_in_delta(0.03485714285714285, worksheet.webtool_graphs_q342, 0.002); end
  def test_webtool_graphs_r342; assert_in_delta(0.03857142857142857, worksheet.webtool_graphs_r342, 0.002); end
  def test_webtool_graphs_s342; assert_in_delta(0.04228571428571428, worksheet.webtool_graphs_s342, 0.002); end
  def test_webtool_graphs_t342; assert_in_delta(0.04599999999999999, worksheet.webtool_graphs_t342, 0.002); end
  def test_webtool_graphs_b343; assert_equal("Urban", worksheet.webtool_graphs_b343); end
  def test_webtool_graphs_c343; assert_equal("heater.electricity.urban.space", worksheet.webtool_graphs_c343); end
  def test_webtool_graphs_l343; assert_in_delta(0.03, worksheet.webtool_graphs_l343, 0.002); end
  def test_webtool_graphs_m343; assert_in_delta(0.03512820512820513, worksheet.webtool_graphs_m343, 0.002); end
  def test_webtool_graphs_n343; assert_in_delta(0.040681318681318676, worksheet.webtool_graphs_n343, 0.002); end
  def test_webtool_graphs_o343; assert_in_delta(0.04623443223443224, worksheet.webtool_graphs_o343, 0.002); end
  def test_webtool_graphs_p343; assert_in_delta(0.05178754578754579, worksheet.webtool_graphs_p343, 0.002); end
  def test_webtool_graphs_q343; assert_in_delta(0.057340659340659336, worksheet.webtool_graphs_q343, 0.002); end
  def test_webtool_graphs_r343; assert_in_delta(0.0628937728937729, worksheet.webtool_graphs_r343, 0.002); end
  def test_webtool_graphs_s343; assert_in_delta(0.06844688644688646, worksheet.webtool_graphs_s343, 0.002); end
  def test_webtool_graphs_t343; assert_in_delta(0.074, worksheet.webtool_graphs_t343, 0.002); end
  def test_webtool_graphs_c344; assert_equal("% of urban space heating that is zero-carbon", worksheet.webtool_graphs_c344); end
  def test_webtool_graphs_l344; assert_in_delta(0.02, worksheet.webtool_graphs_l344, 0.002); end
  def test_webtool_graphs_m344; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_m344, 0.002); end
  def test_webtool_graphs_n344; assert_in_delta(0.02514285714285714, worksheet.webtool_graphs_n344, 0.002); end
  def test_webtool_graphs_o344; assert_in_delta(0.030285714285714284, worksheet.webtool_graphs_o344, 0.002); end
  def test_webtool_graphs_p344; assert_in_delta(0.03542857142857143, worksheet.webtool_graphs_p344, 0.002); end
  def test_webtool_graphs_q344; assert_in_delta(0.040571428571428564, worksheet.webtool_graphs_q344, 0.002); end
  def test_webtool_graphs_r344; assert_in_delta(0.045714285714285714, worksheet.webtool_graphs_r344, 0.002); end
  def test_webtool_graphs_s344; assert_in_delta(0.05085714285714285, worksheet.webtool_graphs_s344, 0.002); end
  def test_webtool_graphs_t344; assert_in_delta(0.055999999999999994, worksheet.webtool_graphs_t344, 0.002); end
  def test_webtool_graphs_c345; assert_equal("% of urban space heating by zero carbon and electric technologies", worksheet.webtool_graphs_c345); end
  def test_webtool_graphs_l345; assert_in_delta(0.05, worksheet.webtool_graphs_l345, 0.002); end
  def test_webtool_graphs_m345; assert_in_delta(0.055128205128205134, worksheet.webtool_graphs_m345, 0.002); end
  def test_webtool_graphs_n345; assert_in_delta(0.06582417582417582, worksheet.webtool_graphs_n345, 0.002); end
  def test_webtool_graphs_o345; assert_in_delta(0.07652014652014652, worksheet.webtool_graphs_o345, 0.002); end
  def test_webtool_graphs_p345; assert_in_delta(0.08721611721611722, worksheet.webtool_graphs_p345, 0.002); end
  def test_webtool_graphs_q345; assert_in_delta(0.0979120879120879, worksheet.webtool_graphs_q345, 0.002); end
  def test_webtool_graphs_r345; assert_in_delta(0.10860805860805861, worksheet.webtool_graphs_r345, 0.002); end
  def test_webtool_graphs_s345; assert_in_delta(0.11930402930402931, worksheet.webtool_graphs_s345, 0.002); end
  def test_webtool_graphs_t345; assert_in_delta(0.13, worksheet.webtool_graphs_t345, 0.002); end
  def test_webtool_graphs_b496; assert_equal("Type of city", worksheet.webtool_graphs_b496); end
  def test_webtool_graphs_c496; assert_equal("Tech description", worksheet.webtool_graphs_c496); end
  def test_webtool_graphs_d496; assert_equal("1975", worksheet.webtool_graphs_d496); end
  def test_webtool_graphs_e496; assert_equal("1980", worksheet.webtool_graphs_e496); end
  def test_webtool_graphs_f496; assert_equal("1985", worksheet.webtool_graphs_f496); end
  def test_webtool_graphs_g496; assert_equal("1990", worksheet.webtool_graphs_g496); end
  def test_webtool_graphs_h496; assert_equal("1995", worksheet.webtool_graphs_h496); end
  def test_webtool_graphs_i496; assert_equal("2000", worksheet.webtool_graphs_i496); end
  def test_webtool_graphs_j496; assert_equal("2005", worksheet.webtool_graphs_j496); end
  def test_webtool_graphs_k496; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k496, 0.002); end
  def test_webtool_graphs_l496; assert_equal("2011", worksheet.webtool_graphs_l496); end
  def test_webtool_graphs_m496; assert_equal("2015", worksheet.webtool_graphs_m496); end
  def test_webtool_graphs_n496; assert_equal("2020", worksheet.webtool_graphs_n496); end
  def test_webtool_graphs_o496; assert_equal("2025", worksheet.webtool_graphs_o496); end
  def test_webtool_graphs_p496; assert_equal("2030", worksheet.webtool_graphs_p496); end
  def test_webtool_graphs_q496; assert_equal("2035", worksheet.webtool_graphs_q496); end
  def test_webtool_graphs_r496; assert_equal("2040", worksheet.webtool_graphs_r496); end
  def test_webtool_graphs_s496; assert_equal("2045", worksheet.webtool_graphs_s496); end
  def test_webtool_graphs_t496; assert_equal("2050", worksheet.webtool_graphs_t496); end
  def test_webtool_graphs_b497; assert_equal("All", worksheet.webtool_graphs_b497); end
  def test_webtool_graphs_c497; assert_equal("Global urban incandescent light bulb", worksheet.webtool_graphs_c497); end
  def test_webtool_graphs_l497; assert_in_epsilon(4810296518.840451, worksheet.webtool_graphs_l497, 0.002); end
  def test_webtool_graphs_m497; assert_in_epsilon(5414549311.174678, worksheet.webtool_graphs_m497, 0.002); end
  def test_webtool_graphs_n497; assert_in_epsilon(5666430556.916148, worksheet.webtool_graphs_n497, 0.002); end
  def test_webtool_graphs_o497; assert_in_epsilon(6166189686.095522, worksheet.webtool_graphs_o497, 0.002); end
  def test_webtool_graphs_p497; assert_in_epsilon(6606186668.571757, worksheet.webtool_graphs_p497, 0.002); end
  def test_webtool_graphs_q497; assert_in_epsilon(6936325966.559736, worksheet.webtool_graphs_q497, 0.002); end
  def test_webtool_graphs_r497; assert_in_epsilon(7229429186.933518, worksheet.webtool_graphs_r497, 0.002); end
  def test_webtool_graphs_s497; assert_in_epsilon(7393586875.176228, worksheet.webtool_graphs_s497, 0.002); end
  def test_webtool_graphs_t497; assert_in_epsilon(7518077335.990926, worksheet.webtool_graphs_t497, 0.002); end
  def test_webtool_graphs_b498; assert_equal("All", worksheet.webtool_graphs_b498); end
  def test_webtool_graphs_c498; assert_equal("Global urban halogens light bulb", worksheet.webtool_graphs_c498); end
  def test_webtool_graphs_l498; assert_in_epsilon(169065325.99887288, worksheet.webtool_graphs_l498, 0.002); end
  def test_webtool_graphs_m498; assert_in_epsilon(192344055.99089646, worksheet.webtool_graphs_m498, 0.002); end
  def test_webtool_graphs_n498; assert_in_epsilon(204246969.92040837, worksheet.webtool_graphs_n498, 0.002); end
  def test_webtool_graphs_o498; assert_in_epsilon(230382516.46129128, worksheet.webtool_graphs_o498, 0.002); end
  def test_webtool_graphs_p498; assert_in_epsilon(256623809.58411905, worksheet.webtool_graphs_p498, 0.002); end
  def test_webtool_graphs_q498; assert_in_epsilon(281052647.13623255, worksheet.webtool_graphs_q498, 0.002); end
  def test_webtool_graphs_r498; assert_in_epsilon(307159918.99399143, worksheet.webtool_graphs_r498, 0.002); end
  def test_webtool_graphs_s498; assert_in_epsilon(330874684.0044938, worksheet.webtool_graphs_s498, 0.002); end
  def test_webtool_graphs_t498; assert_in_epsilon(356809194.0853862, worksheet.webtool_graphs_t498, 0.002); end
  def test_webtool_graphs_b499; assert_equal("All", worksheet.webtool_graphs_b499); end
  def test_webtool_graphs_c499; assert_equal("Global urban compact fluorescent lamp", worksheet.webtool_graphs_c499); end
  def test_webtool_graphs_l499; assert_in_epsilon(1404064225.1034694, worksheet.webtool_graphs_l499, 0.002); end
  def test_webtool_graphs_m499; assert_in_epsilon(1639002272.4386554, worksheet.webtool_graphs_m499, 0.002); end
  def test_webtool_graphs_n499; assert_in_epsilon(2054936041.377726, worksheet.webtool_graphs_n499, 0.002); end
  def test_webtool_graphs_o499; assert_in_epsilon(2589821573.7117643, worksheet.webtool_graphs_o499, 0.002); end
  def test_webtool_graphs_p499; assert_in_epsilon(3199698137.654212, worksheet.webtool_graphs_p499, 0.002); end
  def test_webtool_graphs_q499; assert_in_epsilon(3863415343.342865, worksheet.webtool_graphs_q499, 0.002); end
  def test_webtool_graphs_r499; assert_in_epsilon(4629199343.6785, worksheet.webtool_graphs_r499, 0.002); end
  def test_webtool_graphs_s499; assert_in_epsilon(5443952750.602952, worksheet.webtool_graphs_s499, 0.002); end
  def test_webtool_graphs_t499; assert_in_epsilon(6383908450.511433, worksheet.webtool_graphs_t499, 0.002); end
  def test_webtool_graphs_b500; assert_equal("All", worksheet.webtool_graphs_b500); end
  def test_webtool_graphs_c500; assert_equal("Global urban LEDs bulb", worksheet.webtool_graphs_c500); end
  def test_webtool_graphs_l500; assert_in_epsilon(16533880.618812757, worksheet.webtool_graphs_l500, 0.002); end
  def test_webtool_graphs_m500; assert_in_epsilon(18860593.8144567, worksheet.webtool_graphs_m500, 0.002); end
  def test_webtool_graphs_n500; assert_in_epsilon(53279690.22611955, worksheet.webtool_graphs_n500, 0.002); end
  def test_webtool_graphs_o500; assert_in_epsilon(76162479.2744333, worksheet.webtool_graphs_o500, 0.002); end
  def test_webtool_graphs_p500; assert_in_epsilon(103142802.94523005, worksheet.webtool_graphs_p500, 0.002); end
  def test_webtool_graphs_q500; assert_in_epsilon(133412817.61204483, worksheet.webtool_graphs_q500, 0.002); end
  def test_webtool_graphs_r500; assert_in_epsilon(168691903.61642396, worksheet.webtool_graphs_r500, 0.002); end
  def test_webtool_graphs_s500; assert_in_epsilon(206879265.75967303, worksheet.webtool_graphs_s500, 0.002); end
  def test_webtool_graphs_t500; assert_in_epsilon(251367699.07949758, worksheet.webtool_graphs_t500, 0.002); end
  def test_webtool_graphs_b501; assert_equal("All", worksheet.webtool_graphs_b501); end
  def test_webtool_graphs_c501; assert_equal("Global rural incandescent light bulb", worksheet.webtool_graphs_c501); end
  def test_webtool_graphs_l501; assert_in_epsilon(1072934914.0831571, worksheet.webtool_graphs_l501, 0.002); end
  def test_webtool_graphs_m501; assert_in_epsilon(1246279154.9939184, worksheet.webtool_graphs_m501, 0.002); end
  def test_webtool_graphs_n501; assert_in_epsilon(1284963868.3011427, worksheet.webtool_graphs_n501, 0.002); end
  def test_webtool_graphs_o501; assert_in_epsilon(1439210211.038774, worksheet.webtool_graphs_o501, 0.002); end
  def test_webtool_graphs_p501; assert_in_epsilon(1587748109.5796514, worksheet.webtool_graphs_p501, 0.002); end
  def test_webtool_graphs_q501; assert_in_epsilon(1723214509.9013858, worksheet.webtool_graphs_q501, 0.002); end
  def test_webtool_graphs_r501; assert_in_epsilon(1862933625.571416, worksheet.webtool_graphs_r501, 0.002); end
  def test_webtool_graphs_s501; assert_in_epsilon(1985197194.059354, worksheet.webtool_graphs_s501, 0.002); end
  def test_webtool_graphs_t501; assert_in_epsilon(2093097251.764745, worksheet.webtool_graphs_t501, 0.002); end
  def test_webtool_graphs_b502; assert_equal("All", worksheet.webtool_graphs_b502); end
  def test_webtool_graphs_c502; assert_equal("Global rural halogens light bulb", worksheet.webtool_graphs_c502); end
  def test_webtool_graphs_l502; assert_in_epsilon(36389342.08802943, worksheet.webtool_graphs_l502, 0.002); end
  def test_webtool_graphs_m502; assert_in_epsilon(41829014.91995709, worksheet.webtool_graphs_m502, 0.002); end
  def test_webtool_graphs_n502; assert_in_epsilon(41653331.39335215, worksheet.webtool_graphs_n502, 0.002); end
  def test_webtool_graphs_o502; assert_in_epsilon(46346021.055849366, worksheet.webtool_graphs_o502, 0.002); end
  def test_webtool_graphs_p502; assert_in_epsilon(50729892.49758542, worksheet.webtool_graphs_p502, 0.002); end
  def test_webtool_graphs_q502; assert_in_epsilon(54574792.29541275, worksheet.webtool_graphs_q502, 0.002); end
  def test_webtool_graphs_r502; assert_in_epsilon(58553334.38334369, worksheet.webtool_graphs_r502, 0.002); end
  def test_webtool_graphs_s502; assert_in_epsilon(61852778.00352492, worksheet.webtool_graphs_s502, 0.002); end
  def test_webtool_graphs_t502; assert_in_epsilon(64634937.76190281, worksheet.webtool_graphs_t502, 0.002); end
  def test_webtool_graphs_b503; assert_equal("All", worksheet.webtool_graphs_b503); end
  def test_webtool_graphs_c503; assert_equal("Global rural compact fluorescent lamp", worksheet.webtool_graphs_c503); end
  def test_webtool_graphs_l503; assert_in_epsilon(260727856.6932884, worksheet.webtool_graphs_l503, 0.002); end
  def test_webtool_graphs_m503; assert_in_epsilon(296992342.23947275, worksheet.webtool_graphs_m503, 0.002); end
  def test_webtool_graphs_n503; assert_in_epsilon(330882926.2676715, worksheet.webtool_graphs_n503, 0.002); end
  def test_webtool_graphs_o503; assert_in_epsilon(389154523.0529012, worksheet.webtool_graphs_o503, 0.002); end
  def test_webtool_graphs_p503; assert_in_epsilon(449744339.5457608, worksheet.webtool_graphs_p503, 0.002); end
  def test_webtool_graphs_q503; assert_in_epsilon(510334663.40828466, worksheet.webtool_graphs_q503, 0.002); end
  def test_webtool_graphs_r503; assert_in_epsilon(577337454.649124, worksheet.webtool_graphs_r503, 0.002); end
  def test_webtool_graphs_s503; assert_in_epsilon(642523504.9412434, worksheet.webtool_graphs_s503, 0.002); end
  def test_webtool_graphs_t503; assert_in_epsilon(707021619.8900256, worksheet.webtool_graphs_t503, 0.002); end
  def test_webtool_graphs_b504; assert_equal("All", worksheet.webtool_graphs_b504); end
  def test_webtool_graphs_c504; assert_equal("Global rural LEDs bulb", worksheet.webtool_graphs_c504); end
  def test_webtool_graphs_l504; assert_in_epsilon(2108334.4233524976, worksheet.webtool_graphs_l504, 0.002); end
  def test_webtool_graphs_m504; assert_in_epsilon(2325921.336629604, worksheet.webtool_graphs_m504, 0.002); end
  def test_webtool_graphs_n504; assert_in_epsilon(5397766.089205553, worksheet.webtool_graphs_n504, 0.002); end
  def test_webtool_graphs_o504; assert_in_epsilon(7248043.488041148, worksheet.webtool_graphs_o504, 0.002); end
  def test_webtool_graphs_p504; assert_in_epsilon(9325429.27826825, worksheet.webtool_graphs_p504, 0.002); end
  def test_webtool_graphs_q504; assert_in_epsilon(11551397.598591706, worksheet.webtool_graphs_q504, 0.002); end
  def test_webtool_graphs_r504; assert_in_epsilon(14068345.376755022, worksheet.webtool_graphs_r504, 0.002); end
  def test_webtool_graphs_s504; assert_in_epsilon(16653858.988690551, worksheet.webtool_graphs_s504, 0.002); end
  def test_webtool_graphs_t504; assert_in_epsilon(19314191.06422948, worksheet.webtool_graphs_t504, 0.002); end
  def test_webtool_graphs_b505; assert_equal("TOTAL", worksheet.webtool_graphs_b505); end
  def test_webtool_graphs_c505; assert_equal("TOTAL", worksheet.webtool_graphs_c505); end
  def test_webtool_graphs_l505; assert_in_epsilon(7772120397.849433, worksheet.webtool_graphs_l505, 0.002); end
  def test_webtool_graphs_m505; assert_in_epsilon(8852182666.908665, worksheet.webtool_graphs_m505, 0.002); end
  def test_webtool_graphs_n505; assert_in_epsilon(9641791150.491776, worksheet.webtool_graphs_n505, 0.002); end
  def test_webtool_graphs_o505; assert_in_epsilon(10944515054.178576, worksheet.webtool_graphs_o505, 0.002); end
  def test_webtool_graphs_p505; assert_in_epsilon(12263199189.656586, worksheet.webtool_graphs_p505, 0.002); end
  def test_webtool_graphs_q505; assert_in_epsilon(13513882137.854553, worksheet.webtool_graphs_q505, 0.002); end
  def test_webtool_graphs_r505; assert_in_epsilon(14847373113.203072, worksheet.webtool_graphs_r505, 0.002); end
  def test_webtool_graphs_s505; assert_in_epsilon(16081520911.53616, worksheet.webtool_graphs_s505, 0.002); end
  def test_webtool_graphs_t505; assert_in_epsilon(17394230680.148148, worksheet.webtool_graphs_t505, 0.002); end
  def test_webtool_graphs_b488; assert_equal("Type of city", worksheet.webtool_graphs_b488); end
  def test_webtool_graphs_c488; assert_equal("Technology code", worksheet.webtool_graphs_c488); end
  def test_webtool_graphs_d488; assert_equal("1975", worksheet.webtool_graphs_d488); end
  def test_webtool_graphs_e488; assert_equal("1980", worksheet.webtool_graphs_e488); end
  def test_webtool_graphs_f488; assert_equal("1985", worksheet.webtool_graphs_f488); end
  def test_webtool_graphs_g488; assert_equal("1990", worksheet.webtool_graphs_g488); end
  def test_webtool_graphs_h488; assert_equal("1995", worksheet.webtool_graphs_h488); end
  def test_webtool_graphs_i488; assert_equal("2000", worksheet.webtool_graphs_i488); end
  def test_webtool_graphs_j488; assert_equal("2005", worksheet.webtool_graphs_j488); end
  def test_webtool_graphs_k488; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k488, 0.002); end
  def test_webtool_graphs_l488; assert_equal("2011", worksheet.webtool_graphs_l488); end
  def test_webtool_graphs_m488; assert_equal("2015", worksheet.webtool_graphs_m488); end
  def test_webtool_graphs_n488; assert_equal("2020", worksheet.webtool_graphs_n488); end
  def test_webtool_graphs_o488; assert_equal("2025", worksheet.webtool_graphs_o488); end
  def test_webtool_graphs_p488; assert_equal("2030", worksheet.webtool_graphs_p488); end
  def test_webtool_graphs_q488; assert_equal("2035", worksheet.webtool_graphs_q488); end
  def test_webtool_graphs_r488; assert_equal("2040", worksheet.webtool_graphs_r488); end
  def test_webtool_graphs_s488; assert_equal("2045", worksheet.webtool_graphs_s488); end
  def test_webtool_graphs_t488; assert_equal("2050", worksheet.webtool_graphs_t488); end
  def test_webtool_graphs_b489; assert_equal("All", worksheet.webtool_graphs_b489); end
  def test_webtool_graphs_c489; assert_equal("appliances.refrigerator.urban", worksheet.webtool_graphs_c489); end
  def test_webtool_graphs_l489; assert_in_epsilon(132969809.14237256, worksheet.webtool_graphs_l489, 0.002); end
  def test_webtool_graphs_m489; assert_in_epsilon(145301691.58197936, worksheet.webtool_graphs_m489, 0.002); end
  def test_webtool_graphs_n489; assert_in_epsilon(169127126.2113824, worksheet.webtool_graphs_n489, 0.002); end
  def test_webtool_graphs_o489; assert_in_epsilon(198868979.0374685, worksheet.webtool_graphs_o489, 0.002); end
  def test_webtool_graphs_p489; assert_in_epsilon(231952597.67824894, worksheet.webtool_graphs_p489, 0.002); end
  def test_webtool_graphs_q489; assert_in_epsilon(267118782.15794617, worksheet.webtool_graphs_q489, 0.002); end
  def test_webtool_graphs_r489; assert_in_epsilon(309495761.9788562, worksheet.webtool_graphs_r489, 0.002); end
  def test_webtool_graphs_s489; assert_in_epsilon(355259256.8381138, worksheet.webtool_graphs_s489, 0.002); end
  def test_webtool_graphs_t489; assert_in_epsilon(411594604.81859636, worksheet.webtool_graphs_t489, 0.002); end
  def test_webtool_graphs_b490; assert_equal("All", worksheet.webtool_graphs_b490); end
  def test_webtool_graphs_c490; assert_equal("appliances.refrigerator.rural", worksheet.webtool_graphs_c490); end
  def test_webtool_graphs_l490; assert_in_epsilon(26336578.36666131, worksheet.webtool_graphs_l490, 0.002); end
  def test_webtool_graphs_m490; assert_in_epsilon(28543951.61180577, worksheet.webtool_graphs_m490, 0.002); end
  def test_webtool_graphs_n490; assert_in_epsilon(33905691.763643235, worksheet.webtool_graphs_n490, 0.002); end
  def test_webtool_graphs_o490; assert_in_epsilon(39765023.787794426, worksheet.webtool_graphs_o490, 0.002); end
  def test_webtool_graphs_p490; assert_in_epsilon(45982793.25374581, worksheet.webtool_graphs_p490, 0.002); end
  def test_webtool_graphs_q490; assert_in_epsilon(52461984.640945256, worksheet.webtool_graphs_q490, 0.002); end
  def test_webtool_graphs_r490; assert_in_epsilon(60155275.62724385, worksheet.webtool_graphs_r490, 0.002); end
  def test_webtool_graphs_s490; assert_in_epsilon(68242262.08113423, worksheet.webtool_graphs_s490, 0.002); end
  def test_webtool_graphs_t490; assert_in_epsilon(77116153.26704738, worksheet.webtool_graphs_t490, 0.002); end
  def test_webtool_graphs_b491; assert_equal("TOTAL", worksheet.webtool_graphs_b491); end
  def test_webtool_graphs_c491; assert_equal("TOTAL", worksheet.webtool_graphs_c491); end
  def test_webtool_graphs_l491; assert_in_epsilon(159306387.50903386, worksheet.webtool_graphs_l491, 0.002); end
  def test_webtool_graphs_m491; assert_in_epsilon(173845643.19378513, worksheet.webtool_graphs_m491, 0.002); end
  def test_webtool_graphs_n491; assert_in_epsilon(203032817.97502562, worksheet.webtool_graphs_n491, 0.002); end
  def test_webtool_graphs_o491; assert_in_epsilon(238634002.8252629, worksheet.webtool_graphs_o491, 0.002); end
  def test_webtool_graphs_p491; assert_in_epsilon(277935390.93199474, worksheet.webtool_graphs_p491, 0.002); end
  def test_webtool_graphs_q491; assert_in_epsilon(319580766.7988914, worksheet.webtool_graphs_q491, 0.002); end
  def test_webtool_graphs_r491; assert_in_epsilon(369651037.6061001, worksheet.webtool_graphs_r491, 0.002); end
  def test_webtool_graphs_s491; assert_in_epsilon(423501518.919248, worksheet.webtool_graphs_s491, 0.002); end
  def test_webtool_graphs_t491; assert_in_epsilon(488710758.08564377, worksheet.webtool_graphs_t491, 0.002); end
  def test_webtool_graphs_b480; assert_equal("Type of city", worksheet.webtool_graphs_b480); end
  def test_webtool_graphs_c480; assert_equal("Technology code", worksheet.webtool_graphs_c480); end
  def test_webtool_graphs_d480; assert_equal("1975", worksheet.webtool_graphs_d480); end
  def test_webtool_graphs_e480; assert_equal("1980", worksheet.webtool_graphs_e480); end
  def test_webtool_graphs_f480; assert_equal("1985", worksheet.webtool_graphs_f480); end
  def test_webtool_graphs_g480; assert_equal("1990", worksheet.webtool_graphs_g480); end
  def test_webtool_graphs_h480; assert_equal("1995", worksheet.webtool_graphs_h480); end
  def test_webtool_graphs_i480; assert_equal("2000", worksheet.webtool_graphs_i480); end
  def test_webtool_graphs_j480; assert_equal("2005", worksheet.webtool_graphs_j480); end
  def test_webtool_graphs_k480; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k480, 0.002); end
  def test_webtool_graphs_l480; assert_equal("2011", worksheet.webtool_graphs_l480); end
  def test_webtool_graphs_m480; assert_equal("2015", worksheet.webtool_graphs_m480); end
  def test_webtool_graphs_n480; assert_equal("2020", worksheet.webtool_graphs_n480); end
  def test_webtool_graphs_o480; assert_equal("2025", worksheet.webtool_graphs_o480); end
  def test_webtool_graphs_p480; assert_equal("2030", worksheet.webtool_graphs_p480); end
  def test_webtool_graphs_q480; assert_equal("2035", worksheet.webtool_graphs_q480); end
  def test_webtool_graphs_r480; assert_equal("2040", worksheet.webtool_graphs_r480); end
  def test_webtool_graphs_s480; assert_equal("2045", worksheet.webtool_graphs_s480); end
  def test_webtool_graphs_t480; assert_equal("2050", worksheet.webtool_graphs_t480); end
  def test_webtool_graphs_b481; assert_equal("All", worksheet.webtool_graphs_b481); end
  def test_webtool_graphs_c481; assert_equal("appliances.tv.urban", worksheet.webtool_graphs_c481); end
  def test_webtool_graphs_l481; assert_in_epsilon(391117887.95654863, worksheet.webtool_graphs_l481, 0.002); end
  def test_webtool_graphs_m481; assert_in_epsilon(433206539.8105667, worksheet.webtool_graphs_m481, 0.002); end
  def test_webtool_graphs_n481; assert_in_epsilon(519175972.06891614, worksheet.webtool_graphs_n481, 0.002); end
  def test_webtool_graphs_o481; assert_in_epsilon(615661940.5245456, worksheet.webtool_graphs_o481, 0.002); end
  def test_webtool_graphs_p481; assert_in_epsilon(723865130.6965346, worksheet.webtool_graphs_p481, 0.002); end
  def test_webtool_graphs_q481; assert_in_epsilon(840816281.9371569, worksheet.webtool_graphs_q481, 0.002); end
  def test_webtool_graphs_r481; assert_in_epsilon(977115563.5398353, worksheet.webtool_graphs_r481, 0.002); end
  def test_webtool_graphs_s481; assert_in_epsilon(1125204664.6958318, worksheet.webtool_graphs_s481, 0.002); end
  def test_webtool_graphs_t481; assert_in_epsilon(1300105195.4494324, worksheet.webtool_graphs_t481, 0.002); end
  def test_webtool_graphs_b482; assert_equal("All", worksheet.webtool_graphs_b482); end
  def test_webtool_graphs_c482; assert_equal("appliances.tv.rural", worksheet.webtool_graphs_c482); end
  def test_webtool_graphs_l482; assert_in_epsilon(81555587.42768046, worksheet.webtool_graphs_l482, 0.002); end
  def test_webtool_graphs_m482; assert_in_epsilon(90384069.77152127, worksheet.webtool_graphs_m482, 0.002); end
  def test_webtool_graphs_n482; assert_in_epsilon(108323746.71805769, worksheet.webtool_graphs_n482, 0.002); end
  def test_webtool_graphs_o482; assert_in_epsilon(128524006.47703604, worksheet.webtool_graphs_o482, 0.002); end
  def test_webtool_graphs_p482; assert_in_epsilon(150511678.3588423, worksheet.webtool_graphs_p482, 0.002); end
  def test_webtool_graphs_q482; assert_in_epsilon(173886141.8337614, worksheet.webtool_graphs_q482, 0.002); end
  def test_webtool_graphs_r482; assert_in_epsilon(200650893.95814252, worksheet.webtool_graphs_r482, 0.002); end
  def test_webtool_graphs_s482; assert_in_epsilon(229050619.78502536, worksheet.webtool_graphs_s482, 0.002); end
  def test_webtool_graphs_t482; assert_in_epsilon(259681092.01757938, worksheet.webtool_graphs_t482, 0.002); end
  def test_webtool_graphs_b483; assert_equal("TOTAL", worksheet.webtool_graphs_b483); end
  def test_webtool_graphs_c483; assert_equal("TOTAL", worksheet.webtool_graphs_c483); end
  def test_webtool_graphs_l483; assert_in_epsilon(472673475.38422906, worksheet.webtool_graphs_l483, 0.002); end
  def test_webtool_graphs_m483; assert_in_epsilon(523590609.582088, worksheet.webtool_graphs_m483, 0.002); end
  def test_webtool_graphs_n483; assert_in_epsilon(627499718.7869738, worksheet.webtool_graphs_n483, 0.002); end
  def test_webtool_graphs_o483; assert_in_epsilon(744185947.0015815, worksheet.webtool_graphs_o483, 0.002); end
  def test_webtool_graphs_p483; assert_in_epsilon(874376809.055377, worksheet.webtool_graphs_p483, 0.002); end
  def test_webtool_graphs_q483; assert_in_epsilon(1014702423.7709184, worksheet.webtool_graphs_q483, 0.002); end
  def test_webtool_graphs_r483; assert_in_epsilon(1177766457.4979777, worksheet.webtool_graphs_r483, 0.002); end
  def test_webtool_graphs_s483; assert_in_epsilon(1354255284.4808571, worksheet.webtool_graphs_s483, 0.002); end
  def test_webtool_graphs_t483; assert_in_epsilon(1559786287.4670117, worksheet.webtool_graphs_t483, 0.002); end
  def test_webtool_graphs_c523; assert_equal("Fuel type", worksheet.webtool_graphs_c523); end
  def test_webtool_graphs_d523; assert_equal("1980", worksheet.webtool_graphs_d523); end
  def test_webtool_graphs_e523; assert_equal("1985", worksheet.webtool_graphs_e523); end
  def test_webtool_graphs_f523; assert_equal("1990", worksheet.webtool_graphs_f523); end
  def test_webtool_graphs_g523; assert_equal("1995", worksheet.webtool_graphs_g523); end
  def test_webtool_graphs_h523; assert_equal("2000", worksheet.webtool_graphs_h523); end
  def test_webtool_graphs_i523; assert_equal("2005", worksheet.webtool_graphs_i523); end
  def test_webtool_graphs_j523; assert_in_epsilon(2010.0, worksheet.webtool_graphs_j523, 0.002); end
  def test_webtool_graphs_k523; assert_equal("2011", worksheet.webtool_graphs_k523); end
  def test_webtool_graphs_l523; assert_equal("2015", worksheet.webtool_graphs_l523); end
  def test_webtool_graphs_m523; assert_equal("2020", worksheet.webtool_graphs_m523); end
  def test_webtool_graphs_n523; assert_equal("2025", worksheet.webtool_graphs_n523); end
  def test_webtool_graphs_o523; assert_equal("2030", worksheet.webtool_graphs_o523); end
  def test_webtool_graphs_p523; assert_equal("2035", worksheet.webtool_graphs_p523); end
  def test_webtool_graphs_q523; assert_equal("2040", worksheet.webtool_graphs_q523); end
  def test_webtool_graphs_r523; assert_equal("2045", worksheet.webtool_graphs_r523); end
  def test_webtool_graphs_s523; assert_equal("2050", worksheet.webtool_graphs_s523); end
  def test_webtool_graphs_c524; assert_equal("CO2e", worksheet.webtool_graphs_c524); end
  def test_webtool_graphs_k524; assert_in_epsilon(530.9739364153546, worksheet.webtool_graphs_k524, 0.002); end
  def test_webtool_graphs_l524; assert_in_epsilon(467.2287323155961, worksheet.webtool_graphs_l524, 0.002); end
  def test_webtool_graphs_m524; assert_in_epsilon(469.85543152430654, worksheet.webtool_graphs_m524, 0.002); end
  def test_webtool_graphs_n524; assert_in_epsilon(480.06517173665634, worksheet.webtool_graphs_n524, 0.002); end
  def test_webtool_graphs_o524; assert_in_epsilon(489.3572695222054, worksheet.webtool_graphs_o524, 0.002); end
  def test_webtool_graphs_p524; assert_in_epsilon(487.63230043193477, worksheet.webtool_graphs_p524, 0.002); end
  def test_webtool_graphs_q524; assert_in_epsilon(480.7200659593124, worksheet.webtool_graphs_q524, 0.002); end
  def test_webtool_graphs_r524; assert_in_epsilon(459.8210863210648, worksheet.webtool_graphs_r524, 0.002); end
  def test_webtool_graphs_s524; assert_in_epsilon(442.7967436484718, worksheet.webtool_graphs_s524, 0.002); end
  def test_webtool_graphs_c327; assert_equal("Description", worksheet.webtool_graphs_c327); end
  def test_webtool_graphs_d327; assert_equal("1980", worksheet.webtool_graphs_d327); end
  def test_webtool_graphs_e327; assert_equal("1985", worksheet.webtool_graphs_e327); end
  def test_webtool_graphs_f327; assert_equal("1990", worksheet.webtool_graphs_f327); end
  def test_webtool_graphs_g327; assert_equal("1995", worksheet.webtool_graphs_g327); end
  def test_webtool_graphs_h327; assert_equal("2000", worksheet.webtool_graphs_h327); end
  def test_webtool_graphs_i327; assert_equal("2005", worksheet.webtool_graphs_i327); end
  def test_webtool_graphs_j327; assert_in_epsilon(2010.0, worksheet.webtool_graphs_j327, 0.002); end
  def test_webtool_graphs_k327; assert_equal("2011", worksheet.webtool_graphs_k327); end
  def test_webtool_graphs_l327; assert_equal("2015", worksheet.webtool_graphs_l327); end
  def test_webtool_graphs_m327; assert_equal("2020", worksheet.webtool_graphs_m327); end
  def test_webtool_graphs_n327; assert_equal("2025", worksheet.webtool_graphs_n327); end
  def test_webtool_graphs_o327; assert_equal("2030", worksheet.webtool_graphs_o327); end
  def test_webtool_graphs_p327; assert_equal("2035", worksheet.webtool_graphs_p327); end
  def test_webtool_graphs_q327; assert_equal("2040", worksheet.webtool_graphs_q327); end
  def test_webtool_graphs_r327; assert_equal("2045", worksheet.webtool_graphs_r327); end
  def test_webtool_graphs_s327; assert_equal("2050", worksheet.webtool_graphs_s327); end
  def test_webtool_graphs_c328; assert_equal("Coal", worksheet.webtool_graphs_c328); end
  def test_webtool_graphs_k328; assert_in_delta(1.0, worksheet.webtool_graphs_k328, 0.002); end
  def test_webtool_graphs_l328; assert_in_epsilon(1.116015079384488, worksheet.webtool_graphs_l328, 0.002); end
  def test_webtool_graphs_m328; assert_in_epsilon(1.2610339286150982, worksheet.webtool_graphs_m328, 0.002); end
  def test_webtool_graphs_n328; assert_in_epsilon(1.4106083519044137, worksheet.webtool_graphs_n328, 0.002); end
  def test_webtool_graphs_o328; assert_in_epsilon(1.552698727545777, worksheet.webtool_graphs_o328, 0.002); end
  def test_webtool_graphs_p328; assert_in_epsilon(1.6699201334603253, worksheet.webtool_graphs_p328, 0.002); end
  def test_webtool_graphs_q328; assert_in_epsilon(1.7630283551124333, worksheet.webtool_graphs_q328, 0.002); end
  def test_webtool_graphs_r328; assert_in_epsilon(1.7855729404306342, worksheet.webtool_graphs_r328, 0.002); end
  def test_webtool_graphs_s328; assert_in_epsilon(1.7725764605699947, worksheet.webtool_graphs_s328, 0.002); end
  def test_webtool_graphs_c329; assert_equal("Oil", worksheet.webtool_graphs_c329); end
  def test_webtool_graphs_k329; assert_in_delta(1.0, worksheet.webtool_graphs_k329, 0.002); end
  def test_webtool_graphs_l329; assert_in_epsilon(1.040349320526117, worksheet.webtool_graphs_l329, 0.002); end
  def test_webtool_graphs_m329; assert_in_epsilon(1.0907859711837633, worksheet.webtool_graphs_m329, 0.002); end
  def test_webtool_graphs_n329; assert_in_epsilon(1.0798251153342118, worksheet.webtool_graphs_n329, 0.002); end
  def test_webtool_graphs_o329; assert_in_epsilon(1.0704663248719983, worksheet.webtool_graphs_o329, 0.002); end
  def test_webtool_graphs_p329; assert_in_epsilon(1.055144261237868, worksheet.webtool_graphs_p329, 0.002); end
  def test_webtool_graphs_q329; assert_in_epsilon(1.0523455545134064, worksheet.webtool_graphs_q329, 0.002); end
  def test_webtool_graphs_r329; assert_in_epsilon(1.1040440879272309, worksheet.webtool_graphs_r329, 0.002); end
  def test_webtool_graphs_s329; assert_in_epsilon(1.1585120751402371, worksheet.webtool_graphs_s329, 0.002); end
  def test_webtool_graphs_c330; assert_equal("Iron and Steel", worksheet.webtool_graphs_c330); end
  def test_webtool_graphs_k330; assert_in_delta(1.0, worksheet.webtool_graphs_k330, 0.002); end
  def test_webtool_graphs_l330; assert_in_epsilon(1.0514776646917123, worksheet.webtool_graphs_l330, 0.002); end
  def test_webtool_graphs_m330; assert_in_epsilon(1.147101195361384, worksheet.webtool_graphs_m330, 0.002); end
  def test_webtool_graphs_n330; assert_in_epsilon(1.2348512467870196, worksheet.webtool_graphs_n330, 0.002); end
  def test_webtool_graphs_o330; assert_in_epsilon(1.320125939413087, worksheet.webtool_graphs_o330, 0.002); end
  def test_webtool_graphs_p330; assert_in_epsilon(1.4002874540406183, worksheet.webtool_graphs_p330, 0.002); end
  def test_webtool_graphs_q330; assert_in_epsilon(1.4863400581226882, worksheet.webtool_graphs_q330, 0.002); end
  def test_webtool_graphs_r330; assert_in_epsilon(1.5767818911392517, worksheet.webtool_graphs_r330, 0.002); end
  def test_webtool_graphs_s330; assert_in_epsilon(1.6712735464477928, worksheet.webtool_graphs_s330, 0.002); end
  def test_webtool_graphs_c362; assert_equal("Description", worksheet.webtool_graphs_c362); end
  def test_webtool_graphs_d362; assert_equal("1980", worksheet.webtool_graphs_d362); end
  def test_webtool_graphs_e362; assert_equal("1985", worksheet.webtool_graphs_e362); end
  def test_webtool_graphs_f362; assert_equal("1990", worksheet.webtool_graphs_f362); end
  def test_webtool_graphs_g362; assert_equal("1995", worksheet.webtool_graphs_g362); end
  def test_webtool_graphs_h362; assert_equal("2000", worksheet.webtool_graphs_h362); end
  def test_webtool_graphs_i362; assert_equal("2005", worksheet.webtool_graphs_i362); end
  def test_webtool_graphs_j362; assert_in_epsilon(2010.0, worksheet.webtool_graphs_j362, 0.002); end
  def test_webtool_graphs_k362; assert_equal("2011", worksheet.webtool_graphs_k362); end
  def test_webtool_graphs_l362; assert_equal("2015", worksheet.webtool_graphs_l362); end
  def test_webtool_graphs_m362; assert_equal("2020", worksheet.webtool_graphs_m362); end
  def test_webtool_graphs_n362; assert_equal("2025", worksheet.webtool_graphs_n362); end
  def test_webtool_graphs_o362; assert_equal("2030", worksheet.webtool_graphs_o362); end
  def test_webtool_graphs_p362; assert_equal("2035", worksheet.webtool_graphs_p362); end
  def test_webtool_graphs_q362; assert_equal("2040", worksheet.webtool_graphs_q362); end
  def test_webtool_graphs_r362; assert_equal("2045", worksheet.webtool_graphs_r362); end
  def test_webtool_graphs_s362; assert_equal("2050", worksheet.webtool_graphs_s362); end
  def test_webtool_graphs_c363; assert_equal("Global urban insulation", worksheet.webtool_graphs_c363); end
  def test_webtool_graphs_k363; assert_in_epsilon(16.9, worksheet.webtool_graphs_k363, 0.002); end
  def test_webtool_graphs_l363; assert_in_epsilon(14.399999999999999, worksheet.webtool_graphs_l363, 0.002); end
  def test_webtool_graphs_m363; assert_in_epsilon(13.97142857142857, worksheet.webtool_graphs_m363, 0.002); end
  def test_webtool_graphs_n363; assert_in_epsilon(13.542857142857143, worksheet.webtool_graphs_n363, 0.002); end
  def test_webtool_graphs_o363; assert_in_epsilon(13.114285714285714, worksheet.webtool_graphs_o363, 0.002); end
  def test_webtool_graphs_p363; assert_in_epsilon(12.685714285714285, worksheet.webtool_graphs_p363, 0.002); end
  def test_webtool_graphs_q363; assert_in_epsilon(12.257142857142858, worksheet.webtool_graphs_q363, 0.002); end
  def test_webtool_graphs_r363; assert_in_epsilon(11.828571428571427, worksheet.webtool_graphs_r363, 0.002); end
  def test_webtool_graphs_s363; assert_in_epsilon(11.4, worksheet.webtool_graphs_s363, 0.002); end
  def test_webtool_graphs_c364; assert_equal("Global rural insulation", worksheet.webtool_graphs_c364); end
  def test_webtool_graphs_k364; assert_in_epsilon(18.700000000000003, worksheet.webtool_graphs_k364, 0.002); end
  def test_webtool_graphs_l364; assert_in_epsilon(17.1, worksheet.webtool_graphs_l364, 0.002); end
  def test_webtool_graphs_m364; assert_in_epsilon(16.28571428571429, worksheet.webtool_graphs_m364, 0.002); end
  def test_webtool_graphs_n364; assert_in_epsilon(15.471428571428573, worksheet.webtool_graphs_n364, 0.002); end
  def test_webtool_graphs_o364; assert_in_epsilon(14.657142857142858, worksheet.webtool_graphs_o364, 0.002); end
  def test_webtool_graphs_p364; assert_in_epsilon(13.842857142857145, worksheet.webtool_graphs_p364, 0.002); end
  def test_webtool_graphs_q364; assert_in_epsilon(13.028571428571428, worksheet.webtool_graphs_q364, 0.002); end
  def test_webtool_graphs_r364; assert_in_epsilon(12.214285714285714, worksheet.webtool_graphs_r364, 0.002); end
  def test_webtool_graphs_s364; assert_in_epsilon(11.4, worksheet.webtool_graphs_s364, 0.002); end
  def test_webtool_graphs_c365; assert_equal("Global non residential insulation", worksheet.webtool_graphs_c365); end
  def test_webtool_graphs_k365; assert_in_epsilon(14.8, worksheet.webtool_graphs_k365, 0.002); end
  def test_webtool_graphs_l365; assert_in_epsilon(12.6, worksheet.webtool_graphs_l365, 0.002); end
  def test_webtool_graphs_m365; assert_in_epsilon(12.428571428571427, worksheet.webtool_graphs_m365, 0.002); end
  def test_webtool_graphs_n365; assert_in_epsilon(12.257142857142856, worksheet.webtool_graphs_n365, 0.002); end
  def test_webtool_graphs_o365; assert_in_epsilon(12.085714285714285, worksheet.webtool_graphs_o365, 0.002); end
  def test_webtool_graphs_p365; assert_in_epsilon(11.914285714285715, worksheet.webtool_graphs_p365, 0.002); end
  def test_webtool_graphs_q365; assert_in_epsilon(11.742857142857142, worksheet.webtool_graphs_q365, 0.002); end
  def test_webtool_graphs_r365; assert_in_epsilon(11.571428571428571, worksheet.webtool_graphs_r365, 0.002); end
  def test_webtool_graphs_s365; assert_in_epsilon(11.4, worksheet.webtool_graphs_s365, 0.002); end
  def test_webtool_graphs_b430; assert_equal("Energy description", worksheet.webtool_graphs_b430); end
  def test_webtool_graphs_c430; assert_equal("Technology code", worksheet.webtool_graphs_c430); end
  def test_webtool_graphs_d430; assert_equal("1975", worksheet.webtool_graphs_d430); end
  def test_webtool_graphs_e430; assert_equal("1980", worksheet.webtool_graphs_e430); end
  def test_webtool_graphs_f430; assert_equal("1985", worksheet.webtool_graphs_f430); end
  def test_webtool_graphs_g430; assert_equal("1990", worksheet.webtool_graphs_g430); end
  def test_webtool_graphs_h430; assert_equal("1995", worksheet.webtool_graphs_h430); end
  def test_webtool_graphs_i430; assert_equal("2000", worksheet.webtool_graphs_i430); end
  def test_webtool_graphs_j430; assert_equal("2005", worksheet.webtool_graphs_j430); end
  def test_webtool_graphs_k430; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k430, 0.002); end
  def test_webtool_graphs_l430; assert_equal("2011", worksheet.webtool_graphs_l430); end
  def test_webtool_graphs_m430; assert_equal("2015", worksheet.webtool_graphs_m430); end
  def test_webtool_graphs_n430; assert_equal("2020", worksheet.webtool_graphs_n430); end
  def test_webtool_graphs_o430; assert_equal("2025", worksheet.webtool_graphs_o430); end
  def test_webtool_graphs_p430; assert_equal("2030", worksheet.webtool_graphs_p430); end
  def test_webtool_graphs_q430; assert_equal("2035", worksheet.webtool_graphs_q430); end
  def test_webtool_graphs_r430; assert_equal("2040", worksheet.webtool_graphs_r430); end
  def test_webtool_graphs_s430; assert_equal("2045", worksheet.webtool_graphs_s430); end
  def test_webtool_graphs_t430; assert_equal("2050", worksheet.webtool_graphs_t430); end
  def test_webtool_graphs_b431; assert_equal("Global Materials", worksheet.webtool_graphs_b431); end
  def test_webtool_graphs_c431; assert_equal("Aluminium.Alumina", worksheet.webtool_graphs_c431); end
  def test_webtool_graphs_j431; assert_equal("", worksheet.webtool_graphs_j431); end
  def test_webtool_graphs_l431; assert_in_epsilon(1.3689321930948124, worksheet.webtool_graphs_l431, 0.002); end
  def test_webtool_graphs_m431; assert_in_epsilon(1.5133365266199588, worksheet.webtool_graphs_m431, 0.002); end
  def test_webtool_graphs_n431; assert_in_epsilon(1.7084396286904329, worksheet.webtool_graphs_n431, 0.002); end
  def test_webtool_graphs_o431; assert_in_epsilon(1.9605942776022762, worksheet.webtool_graphs_o431, 0.002); end
  def test_webtool_graphs_p431; assert_in_epsilon(2.2289844417436173, worksheet.webtool_graphs_p431, 0.002); end
  def test_webtool_graphs_q431; assert_in_epsilon(2.5037690774617336, worksheet.webtool_graphs_q431, 0.002); end
  def test_webtool_graphs_r431; assert_in_epsilon(2.8114413096069635, worksheet.webtool_graphs_r431, 0.002); end
  def test_webtool_graphs_s431; assert_in_epsilon(3.1453847516772777, worksheet.webtool_graphs_s431, 0.002); end
  def test_webtool_graphs_t431; assert_in_epsilon(3.521011364395237, worksheet.webtool_graphs_t431, 0.002); end
  def test_webtool_graphs_b432; assert_equal("Global Materials", worksheet.webtool_graphs_b432); end
  def test_webtool_graphs_c432; assert_equal("Aluminium.Primary", worksheet.webtool_graphs_c432); end
  def test_webtool_graphs_l432; assert_in_epsilon(2.7584780625440373, worksheet.webtool_graphs_l432, 0.002); end
  def test_webtool_graphs_m432; assert_in_epsilon(3.033836041196668, worksheet.webtool_graphs_m432, 0.002); end
  def test_webtool_graphs_n432; assert_in_epsilon(3.4078299634890867, worksheet.webtool_graphs_n432, 0.002); end
  def test_webtool_graphs_o432; assert_in_epsilon(3.89113860056518, worksheet.webtool_graphs_o432, 0.002); end
  def test_webtool_graphs_p432; assert_in_epsilon(4.40144809965011, worksheet.webtool_graphs_p432, 0.002); end
  def test_webtool_graphs_q432; assert_in_epsilon(4.918936017803093, worksheet.webtool_graphs_q432, 0.002); end
  def test_webtool_graphs_r432; assert_in_epsilon(5.495192857531394, worksheet.webtool_graphs_r432, 0.002); end
  def test_webtool_graphs_s432; assert_in_epsilon(6.116363009067477, worksheet.webtool_graphs_s432, 0.002); end
  def test_webtool_graphs_t432; assert_in_epsilon(6.8114706118797725, worksheet.webtool_graphs_t432, 0.002); end
  def test_webtool_graphs_b433; assert_equal("Global Materials", worksheet.webtool_graphs_b433); end
  def test_webtool_graphs_c433; assert_equal("Aluminium.Secondary", worksheet.webtool_graphs_c433); end
  def test_webtool_graphs_l433; assert_in_delta(0.26361993307490655, worksheet.webtool_graphs_l433, 0.002); end
  def test_webtool_graphs_m433; assert_in_delta(0.26915007332586927, worksheet.webtool_graphs_m433, 0.002); end
  def test_webtool_graphs_n433; assert_in_delta(0.26554724373097355, worksheet.webtool_graphs_n433, 0.002); end
  def test_webtool_graphs_o433; assert_in_delta(0.2640206817677008, worksheet.webtool_graphs_o433, 0.002); end
  def test_webtool_graphs_p433; assert_in_delta(0.25719069661546934, worksheet.webtool_graphs_p433, 0.002); end
  def test_webtool_graphs_q433; assert_in_delta(0.24400654414493472, worksheet.webtool_graphs_q433, 0.002); end
  def test_webtool_graphs_r433; assert_in_delta(0.22703347644747893, worksheet.webtool_graphs_r433, 0.002); end
  def test_webtool_graphs_s433; assert_in_delta(0.20498232353572401, worksheet.webtool_graphs_s433, 0.002); end
  def test_webtool_graphs_t433; assert_in_delta(0.1781878211705702, worksheet.webtool_graphs_t433, 0.002); end
  def test_webtool_graphs_b434; assert_equal("TOTAL", worksheet.webtool_graphs_b434); end
  def test_webtool_graphs_c434; assert_equal("TOTAL", worksheet.webtool_graphs_c434); end
  def test_webtool_graphs_l434; assert_in_epsilon(4.391030188713756, worksheet.webtool_graphs_l434, 0.002); end
  def test_webtool_graphs_m434; assert_in_epsilon(4.816322641142496, worksheet.webtool_graphs_m434, 0.002); end
  def test_webtool_graphs_n434; assert_in_epsilon(5.381816835910493, worksheet.webtool_graphs_n434, 0.002); end
  def test_webtool_graphs_o434; assert_in_epsilon(6.115753559935157, worksheet.webtool_graphs_o434, 0.002); end
  def test_webtool_graphs_p434; assert_in_epsilon(6.887623238009196, worksheet.webtool_graphs_p434, 0.002); end
  def test_webtool_graphs_q434; assert_in_epsilon(7.666711639409761, worksheet.webtool_graphs_q434, 0.002); end
  def test_webtool_graphs_r434; assert_in_epsilon(8.533667643585837, worksheet.webtool_graphs_r434, 0.002); end
  def test_webtool_graphs_s434; assert_in_epsilon(9.466730084280478, worksheet.webtool_graphs_s434, 0.002); end
  def test_webtool_graphs_t434; assert_in_epsilon(10.51066979744558, worksheet.webtool_graphs_t434, 0.002); end
  def test_webtool_graphs_b469; assert_equal("Energy description", worksheet.webtool_graphs_b469); end
  def test_webtool_graphs_c469; assert_equal("Technology code", worksheet.webtool_graphs_c469); end
  def test_webtool_graphs_d469; assert_equal("1975", worksheet.webtool_graphs_d469); end
  def test_webtool_graphs_e469; assert_equal("1980", worksheet.webtool_graphs_e469); end
  def test_webtool_graphs_f469; assert_equal("1985", worksheet.webtool_graphs_f469); end
  def test_webtool_graphs_g469; assert_equal("1990", worksheet.webtool_graphs_g469); end
  def test_webtool_graphs_h469; assert_equal("1995", worksheet.webtool_graphs_h469); end
  def test_webtool_graphs_i469; assert_equal("2000", worksheet.webtool_graphs_i469); end
  def test_webtool_graphs_j469; assert_equal("2005", worksheet.webtool_graphs_j469); end
  def test_webtool_graphs_k469; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k469, 0.002); end
  def test_webtool_graphs_l469; assert_equal("2011", worksheet.webtool_graphs_l469); end
  def test_webtool_graphs_m469; assert_equal("2015", worksheet.webtool_graphs_m469); end
  def test_webtool_graphs_n469; assert_equal("2020", worksheet.webtool_graphs_n469); end
  def test_webtool_graphs_o469; assert_equal("2025", worksheet.webtool_graphs_o469); end
  def test_webtool_graphs_p469; assert_equal("2030", worksheet.webtool_graphs_p469); end
  def test_webtool_graphs_q469; assert_equal("2035", worksheet.webtool_graphs_q469); end
  def test_webtool_graphs_r469; assert_equal("2040", worksheet.webtool_graphs_r469); end
  def test_webtool_graphs_s469; assert_equal("2045", worksheet.webtool_graphs_s469); end
  def test_webtool_graphs_t469; assert_equal("2050", worksheet.webtool_graphs_t469); end
  def test_webtool_graphs_b470; assert_equal("Global Materials", worksheet.webtool_graphs_b470); end
  def test_webtool_graphs_c470; assert_equal("Cement", worksheet.webtool_graphs_c470); end
  def test_webtool_graphs_j470; assert_equal("", worksheet.webtool_graphs_j470); end
  def test_webtool_graphs_l470; assert_in_epsilon(10.600379598268718, worksheet.webtool_graphs_l470, 0.002); end
  def test_webtool_graphs_m470; assert_in_epsilon(10.77487038670087, worksheet.webtool_graphs_m470, 0.002); end
  def test_webtool_graphs_n470; assert_in_epsilon(12.333097859636151, worksheet.webtool_graphs_n470, 0.002); end
  def test_webtool_graphs_o470; assert_in_epsilon(12.876666660632749, worksheet.webtool_graphs_o470, 0.002); end
  def test_webtool_graphs_p470; assert_in_epsilon(13.35167580278241, worksheet.webtool_graphs_p470, 0.002); end
  def test_webtool_graphs_q470; assert_in_epsilon(13.795126978487955, worksheet.webtool_graphs_q470, 0.002); end
  def test_webtool_graphs_r470; assert_in_epsilon(14.139734368402186, worksheet.webtool_graphs_r470, 0.002); end
  def test_webtool_graphs_s470; assert_in_epsilon(14.463678409479034, worksheet.webtool_graphs_s470, 0.002); end
  def test_webtool_graphs_t470; assert_in_epsilon(14.803771037818967, worksheet.webtool_graphs_t470, 0.002); end
  def test_webtool_graphs_b471; assert_equal("TOTAL", worksheet.webtool_graphs_b471); end
  def test_webtool_graphs_c471; assert_equal("TOTAL", worksheet.webtool_graphs_c471); end
  def test_webtool_graphs_l471; assert_in_epsilon(10.600379598268718, worksheet.webtool_graphs_l471, 0.002); end
  def test_webtool_graphs_m471; assert_in_epsilon(10.77487038670087, worksheet.webtool_graphs_m471, 0.002); end
  def test_webtool_graphs_n471; assert_in_epsilon(12.333097859636151, worksheet.webtool_graphs_n471, 0.002); end
  def test_webtool_graphs_o471; assert_in_epsilon(12.876666660632749, worksheet.webtool_graphs_o471, 0.002); end
  def test_webtool_graphs_p471; assert_in_epsilon(13.35167580278241, worksheet.webtool_graphs_p471, 0.002); end
  def test_webtool_graphs_q471; assert_in_epsilon(13.795126978487955, worksheet.webtool_graphs_q471, 0.002); end
  def test_webtool_graphs_r471; assert_in_epsilon(14.139734368402186, worksheet.webtool_graphs_r471, 0.002); end
  def test_webtool_graphs_s471; assert_in_epsilon(14.463678409479034, worksheet.webtool_graphs_s471, 0.002); end
  def test_webtool_graphs_t471; assert_in_epsilon(14.803771037818967, worksheet.webtool_graphs_t471, 0.002); end
  def test_webtool_graphs_b443; assert_equal("Energy description", worksheet.webtool_graphs_b443); end
  def test_webtool_graphs_c443; assert_equal("Technology code", worksheet.webtool_graphs_c443); end
  def test_webtool_graphs_d443; assert_equal("1975", worksheet.webtool_graphs_d443); end
  def test_webtool_graphs_e443; assert_equal("1980", worksheet.webtool_graphs_e443); end
  def test_webtool_graphs_f443; assert_equal("1985", worksheet.webtool_graphs_f443); end
  def test_webtool_graphs_g443; assert_equal("1990", worksheet.webtool_graphs_g443); end
  def test_webtool_graphs_h443; assert_equal("1995", worksheet.webtool_graphs_h443); end
  def test_webtool_graphs_i443; assert_equal("2000", worksheet.webtool_graphs_i443); end
  def test_webtool_graphs_j443; assert_equal("2005", worksheet.webtool_graphs_j443); end
  def test_webtool_graphs_k443; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k443, 0.002); end
  def test_webtool_graphs_l443; assert_equal("2011", worksheet.webtool_graphs_l443); end
  def test_webtool_graphs_m443; assert_equal("2015", worksheet.webtool_graphs_m443); end
  def test_webtool_graphs_n443; assert_equal("2020", worksheet.webtool_graphs_n443); end
  def test_webtool_graphs_o443; assert_equal("2025", worksheet.webtool_graphs_o443); end
  def test_webtool_graphs_p443; assert_equal("2030", worksheet.webtool_graphs_p443); end
  def test_webtool_graphs_q443; assert_equal("2035", worksheet.webtool_graphs_q443); end
  def test_webtool_graphs_r443; assert_equal("2040", worksheet.webtool_graphs_r443); end
  def test_webtool_graphs_s443; assert_equal("2045", worksheet.webtool_graphs_s443); end
  def test_webtool_graphs_t443; assert_equal("2050", worksheet.webtool_graphs_t443); end
  def test_webtool_graphs_b444; assert_equal("Global Materials", worksheet.webtool_graphs_b444); end
  def test_webtool_graphs_c444; assert_equal("Chemicals & petrochemicals.HVC", worksheet.webtool_graphs_c444); end
  def test_webtool_graphs_j444; assert_equal("", worksheet.webtool_graphs_j444); end
  def test_webtool_graphs_l444; assert_in_epsilon(19.460745993692754, worksheet.webtool_graphs_l444, 0.002); end
  def test_webtool_graphs_m444; assert_in_epsilon(20.87272820727851, worksheet.webtool_graphs_m444, 0.002); end
  def test_webtool_graphs_n444; assert_in_epsilon(22.27983060639609, worksheet.webtool_graphs_n444, 0.002); end
  def test_webtool_graphs_o444; assert_in_epsilon(25.25522959448173, worksheet.webtool_graphs_o444, 0.002); end
  def test_webtool_graphs_p444; assert_in_epsilon(28.449420584158588, worksheet.webtool_graphs_p444, 0.002); end
  def test_webtool_graphs_q444; assert_in_epsilon(31.756734783029465, worksheet.webtool_graphs_q444, 0.002); end
  def test_webtool_graphs_r444; assert_in_epsilon(35.586676972924266, worksheet.webtool_graphs_r444, 0.002); end
  def test_webtool_graphs_s444; assert_in_epsilon(39.63277541917666, worksheet.webtool_graphs_s444, 0.002); end
  def test_webtool_graphs_t444; assert_in_epsilon(44.278896475938815, worksheet.webtool_graphs_t444, 0.002); end
  def test_webtool_graphs_b445; assert_equal("Global Materials", worksheet.webtool_graphs_b445); end
  def test_webtool_graphs_c445; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.webtool_graphs_c445); end
  def test_webtool_graphs_l445; assert_in_epsilon(5.957349170600305, worksheet.webtool_graphs_l445, 0.002); end
  def test_webtool_graphs_m445; assert_in_epsilon(6.258306959238412, worksheet.webtool_graphs_m445, 0.002); end
  def test_webtool_graphs_n445; assert_in_epsilon(6.594540871274918, worksheet.webtool_graphs_n445, 0.002); end
  def test_webtool_graphs_o445; assert_in_epsilon(6.9192576170334545, worksheet.webtool_graphs_o445, 0.002); end
  def test_webtool_graphs_p445; assert_in_epsilon(7.258802297147687, worksheet.webtool_graphs_p445, 0.002); end
  def test_webtool_graphs_q445; assert_in_epsilon(7.624306833918459, worksheet.webtool_graphs_q445, 0.002); end
  def test_webtool_graphs_r445; assert_in_epsilon(7.973049158203093, worksheet.webtool_graphs_r445, 0.002); end
  def test_webtool_graphs_s445; assert_in_epsilon(8.254965871378753, worksheet.webtool_graphs_s445, 0.002); end
  def test_webtool_graphs_t445; assert_in_epsilon(8.488932738975024, worksheet.webtool_graphs_t445, 0.002); end
  def test_webtool_graphs_b446; assert_equal("Global Materials", worksheet.webtool_graphs_b446); end
  def test_webtool_graphs_c446; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.webtool_graphs_c446); end
  def test_webtool_graphs_l446; assert_in_epsilon(1.6638113188620842, worksheet.webtool_graphs_l446, 0.002); end
  def test_webtool_graphs_m446; assert_in_epsilon(1.7694763425479956, worksheet.webtool_graphs_m446, 0.002); end
  def test_webtool_graphs_n446; assert_in_epsilon(1.894744905388335, worksheet.webtool_graphs_n446, 0.002); end
  def test_webtool_graphs_o446; assert_in_epsilon(2.150624155607988, worksheet.webtool_graphs_o446, 0.002); end
  def test_webtool_graphs_p446; assert_in_epsilon(2.425156951964546, worksheet.webtool_graphs_p446, 0.002); end
  def test_webtool_graphs_q446; assert_in_epsilon(2.7083200746511, worksheet.webtool_graphs_q446, 0.002); end
  def test_webtool_graphs_r446; assert_in_epsilon(3.036970425653016, worksheet.webtool_graphs_r446, 0.002); end
  def test_webtool_graphs_s446; assert_in_epsilon(3.381832763611387, worksheet.webtool_graphs_s446, 0.002); end
  def test_webtool_graphs_t446; assert_in_epsilon(3.7815367541428113, worksheet.webtool_graphs_t446, 0.002); end
  def test_webtool_graphs_b447; assert_equal("Global Materials", worksheet.webtool_graphs_b447); end
  def test_webtool_graphs_c447; assert_equal("Chemicals & petrochemicals.Others", worksheet.webtool_graphs_c447); end
  def test_webtool_graphs_l447; assert_in_epsilon(12.7269993633999, worksheet.webtool_graphs_l447, 0.002); end
  def test_webtool_graphs_m447; assert_in_epsilon(13.47704002837681, worksheet.webtool_graphs_m447, 0.002); end
  def test_webtool_graphs_n447; assert_in_epsilon(14.440034035265223, worksheet.webtool_graphs_n447, 0.002); end
  def test_webtool_graphs_o447; assert_in_epsilon(16.40021775532128, worksheet.webtool_graphs_o447, 0.002); end
  def test_webtool_graphs_p447; assert_in_epsilon(18.505144755966928, worksheet.webtool_graphs_p447, 0.002); end
  def test_webtool_graphs_q447; assert_in_epsilon(20.678549925380437, worksheet.webtool_graphs_q447, 0.002); end
  def test_webtool_graphs_r447; assert_in_epsilon(23.202139057014847, worksheet.webtool_graphs_r447, 0.002); end
  def test_webtool_graphs_s447; assert_in_epsilon(25.852757663457126, worksheet.webtool_graphs_s447, 0.002); end
  def test_webtool_graphs_t447; assert_in_epsilon(28.926126007824237, worksheet.webtool_graphs_t447, 0.002); end
  def test_webtool_graphs_b448; assert_equal("TOTAL", worksheet.webtool_graphs_b448); end
  def test_webtool_graphs_c448; assert_equal("TOTAL", worksheet.webtool_graphs_c448); end
  def test_webtool_graphs_l448; assert_in_epsilon(39.80890584655504, worksheet.webtool_graphs_l448, 0.002); end
  def test_webtool_graphs_m448; assert_in_epsilon(42.37755153744173, worksheet.webtool_graphs_m448, 0.002); end
  def test_webtool_graphs_n448; assert_in_epsilon(45.20915041832457, worksheet.webtool_graphs_n448, 0.002); end
  def test_webtool_graphs_o448; assert_in_epsilon(50.72532912244445, worksheet.webtool_graphs_o448, 0.002); end
  def test_webtool_graphs_p448; assert_in_epsilon(56.63852458923775, worksheet.webtool_graphs_p448, 0.002); end
  def test_webtool_graphs_q448; assert_in_epsilon(62.76791161697946, worksheet.webtool_graphs_q448, 0.002); end
  def test_webtool_graphs_r448; assert_in_epsilon(69.79883561379523, worksheet.webtool_graphs_r448, 0.002); end
  def test_webtool_graphs_s448; assert_in_epsilon(77.12233171762392, worksheet.webtool_graphs_s448, 0.002); end
  def test_webtool_graphs_t448; assert_in_epsilon(85.47549197688089, worksheet.webtool_graphs_t448, 0.002); end
  def test_webtool_graphs_b457; assert_equal("Energy description", worksheet.webtool_graphs_b457); end
  def test_webtool_graphs_c457; assert_equal("Technology code", worksheet.webtool_graphs_c457); end
  def test_webtool_graphs_d457; assert_equal("1975", worksheet.webtool_graphs_d457); end
  def test_webtool_graphs_e457; assert_equal("1980", worksheet.webtool_graphs_e457); end
  def test_webtool_graphs_f457; assert_equal("1985", worksheet.webtool_graphs_f457); end
  def test_webtool_graphs_g457; assert_equal("1990", worksheet.webtool_graphs_g457); end
  def test_webtool_graphs_h457; assert_equal("1995", worksheet.webtool_graphs_h457); end
  def test_webtool_graphs_i457; assert_equal("2000", worksheet.webtool_graphs_i457); end
  def test_webtool_graphs_j457; assert_equal("2005", worksheet.webtool_graphs_j457); end
  def test_webtool_graphs_k457; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k457, 0.002); end
  def test_webtool_graphs_l457; assert_equal("2011", worksheet.webtool_graphs_l457); end
  def test_webtool_graphs_m457; assert_equal("2015", worksheet.webtool_graphs_m457); end
  def test_webtool_graphs_n457; assert_equal("2020", worksheet.webtool_graphs_n457); end
  def test_webtool_graphs_o457; assert_equal("2025", worksheet.webtool_graphs_o457); end
  def test_webtool_graphs_p457; assert_equal("2030", worksheet.webtool_graphs_p457); end
  def test_webtool_graphs_q457; assert_equal("2035", worksheet.webtool_graphs_q457); end
  def test_webtool_graphs_r457; assert_equal("2040", worksheet.webtool_graphs_r457); end
  def test_webtool_graphs_s457; assert_equal("2045", worksheet.webtool_graphs_s457); end
  def test_webtool_graphs_t457; assert_equal("2050", worksheet.webtool_graphs_t457); end
  def test_webtool_graphs_b458; assert_equal("Global Materials", worksheet.webtool_graphs_b458); end
  def test_webtool_graphs_c458; assert_equal("Pulp & paper.Pulp", worksheet.webtool_graphs_c458); end
  def test_webtool_graphs_j458; assert_equal("", worksheet.webtool_graphs_j458); end
  def test_webtool_graphs_l458; assert_in_epsilon(3.020565131792657, worksheet.webtool_graphs_l458, 0.002); end
  def test_webtool_graphs_m458; assert_in_epsilon(3.129066746045473, worksheet.webtool_graphs_m458, 0.002); end
  def test_webtool_graphs_n458; assert_in_epsilon(3.258617343360762, worksheet.webtool_graphs_n458, 0.002); end
  def test_webtool_graphs_o458; assert_in_epsilon(3.5207041929794993, worksheet.webtool_graphs_o458, 0.002); end
  def test_webtool_graphs_p458; assert_in_epsilon(3.7834356192898815, worksheet.webtool_graphs_p458, 0.002); end
  def test_webtool_graphs_q458; assert_in_epsilon(4.037663392449593, worksheet.webtool_graphs_q458, 0.002); end
  def test_webtool_graphs_r458; assert_in_epsilon(4.316948460802045, worksheet.webtool_graphs_r458, 0.002); end
  def test_webtool_graphs_s458; assert_in_epsilon(4.589758159514734, worksheet.webtool_graphs_s458, 0.002); end
  def test_webtool_graphs_t458; assert_in_epsilon(4.89096054175361, worksheet.webtool_graphs_t458, 0.002); end
  def test_webtool_graphs_b459; assert_equal("Global Materials", worksheet.webtool_graphs_b459); end
  def test_webtool_graphs_c459; assert_equal("Pulp & paper.Virgin", worksheet.webtool_graphs_c459); end
  def test_webtool_graphs_l459; assert_in_epsilon(3.059951650403277, worksheet.webtool_graphs_l459, 0.002); end
  def test_webtool_graphs_m459; assert_in_epsilon(3.1698859816764147, worksheet.webtool_graphs_m459, 0.002); end
  def test_webtool_graphs_n459; assert_in_epsilon(3.301147311423536, worksheet.webtool_graphs_n459, 0.002); end
  def test_webtool_graphs_o459; assert_in_epsilon(3.566677184838945, worksheet.webtool_graphs_o459, 0.002); end
  def test_webtool_graphs_p459; assert_in_epsilon(3.8328633878720053, worksheet.webtool_graphs_p459, 0.002); end
  def test_webtool_graphs_q459; assert_in_epsilon(4.09043812977436, worksheet.webtool_graphs_q459, 0.002); end
  def test_webtool_graphs_r459; assert_in_epsilon(4.373401072026435, worksheet.webtool_graphs_r459, 0.002); end
  def test_webtool_graphs_s459; assert_in_epsilon(4.64980747526486, worksheet.webtool_graphs_s459, 0.002); end
  def test_webtool_graphs_t459; assert_in_epsilon(4.95498168079409, worksheet.webtool_graphs_t459, 0.002); end
  def test_webtool_graphs_b460; assert_equal("Global Materials", worksheet.webtool_graphs_b460); end
  def test_webtool_graphs_c460; assert_equal("Pulp & paper.Recycled", worksheet.webtool_graphs_c460); end
  def test_webtool_graphs_l460; assert_in_delta(0.5308491227739531, worksheet.webtool_graphs_l460, 0.002); end
  def test_webtool_graphs_m460; assert_in_delta(0.5651260021075912, worksheet.webtool_graphs_m460, 0.002); end
  def test_webtool_graphs_n460; assert_in_delta(0.5884716683994224, worksheet.webtool_graphs_n460, 0.002); end
  def test_webtool_graphs_o460; assert_in_delta(0.6357457440100623, worksheet.webtool_graphs_o460, 0.002); end
  def test_webtool_graphs_p460; assert_in_delta(0.6831278646805511, worksheet.webtool_graphs_p460, 0.002); end
  def test_webtool_graphs_q460; assert_in_delta(0.7289663638635333, worksheet.webtool_graphs_q460, 0.002); end
  def test_webtool_graphs_r460; assert_in_delta(0.7793202627027243, worksheet.webtool_graphs_r460, 0.002); end
  def test_webtool_graphs_s460; assert_in_delta(0.8284964102469774, worksheet.webtool_graphs_s460, 0.002); end
  def test_webtool_graphs_t460; assert_in_delta(0.8827885874289227, worksheet.webtool_graphs_t460, 0.002); end
  def test_webtool_graphs_b461; assert_equal("TOTAL", worksheet.webtool_graphs_b461); end
  def test_webtool_graphs_c461; assert_equal("TOTAL", worksheet.webtool_graphs_c461); end
  def test_webtool_graphs_l461; assert_in_epsilon(6.611365904969887, worksheet.webtool_graphs_l461, 0.002); end
  def test_webtool_graphs_m461; assert_in_epsilon(6.86407872982948, worksheet.webtool_graphs_m461, 0.002); end
  def test_webtool_graphs_n461; assert_in_epsilon(7.1482363231837205, worksheet.webtool_graphs_n461, 0.002); end
  def test_webtool_graphs_o461; assert_in_epsilon(7.723127121828506, worksheet.webtool_graphs_o461, 0.002); end
  def test_webtool_graphs_p461; assert_in_epsilon(8.299426871842439, worksheet.webtool_graphs_p461, 0.002); end
  def test_webtool_graphs_q461; assert_in_epsilon(8.857067886087487, worksheet.webtool_graphs_q461, 0.002); end
  def test_webtool_graphs_r461; assert_in_epsilon(9.469669795531205, worksheet.webtool_graphs_r461, 0.002); end
  def test_webtool_graphs_s461; assert_in_epsilon(10.068062045026572, worksheet.webtool_graphs_s461, 0.002); end
  def test_webtool_graphs_t461; assert_in_epsilon(10.728730809976621, worksheet.webtool_graphs_t461, 0.002); end
  def test_webtool_graphs_b416; assert_equal("Energy description", worksheet.webtool_graphs_b416); end
  def test_webtool_graphs_c416; assert_equal("Technology code", worksheet.webtool_graphs_c416); end
  def test_webtool_graphs_d416; assert_equal("1975", worksheet.webtool_graphs_d416); end
  def test_webtool_graphs_e416; assert_equal("1980", worksheet.webtool_graphs_e416); end
  def test_webtool_graphs_f416; assert_equal("1985", worksheet.webtool_graphs_f416); end
  def test_webtool_graphs_g416; assert_equal("1990", worksheet.webtool_graphs_g416); end
  def test_webtool_graphs_h416; assert_equal("1995", worksheet.webtool_graphs_h416); end
  def test_webtool_graphs_i416; assert_equal("2000", worksheet.webtool_graphs_i416); end
  def test_webtool_graphs_j416; assert_equal("2005", worksheet.webtool_graphs_j416); end
  def test_webtool_graphs_k416; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k416, 0.002); end
  def test_webtool_graphs_l416; assert_equal("2011", worksheet.webtool_graphs_l416); end
  def test_webtool_graphs_m416; assert_equal("2015", worksheet.webtool_graphs_m416); end
  def test_webtool_graphs_n416; assert_equal("2020", worksheet.webtool_graphs_n416); end
  def test_webtool_graphs_o416; assert_equal("2025", worksheet.webtool_graphs_o416); end
  def test_webtool_graphs_p416; assert_equal("2030", worksheet.webtool_graphs_p416); end
  def test_webtool_graphs_q416; assert_equal("2035", worksheet.webtool_graphs_q416); end
  def test_webtool_graphs_r416; assert_equal("2040", worksheet.webtool_graphs_r416); end
  def test_webtool_graphs_s416; assert_equal("2045", worksheet.webtool_graphs_s416); end
  def test_webtool_graphs_t416; assert_equal("2050", worksheet.webtool_graphs_t416); end
  def test_webtool_graphs_b417; assert_equal("Global Materials", worksheet.webtool_graphs_b417); end
  def test_webtool_graphs_c417; assert_equal("Steel.Oxygen", worksheet.webtool_graphs_c417); end
  def test_webtool_graphs_j417; assert_equal("", worksheet.webtool_graphs_j417); end
  def test_webtool_graphs_l417; assert_in_epsilon(21.619770962298666, worksheet.webtool_graphs_l417, 0.002); end
  def test_webtool_graphs_m417; assert_in_epsilon(21.91434549988721, worksheet.webtool_graphs_m417, 0.002); end
  def test_webtool_graphs_n417; assert_in_epsilon(23.498908395569767, worksheet.webtool_graphs_n417, 0.002); end
  def test_webtool_graphs_o417; assert_in_epsilon(24.85711098528896, worksheet.webtool_graphs_o417, 0.002); end
  def test_webtool_graphs_p417; assert_in_epsilon(26.104143158708048, worksheet.webtool_graphs_p417, 0.002); end
  def test_webtool_graphs_q417; assert_in_epsilon(27.191464291486447, worksheet.webtool_graphs_q417, 0.002); end
  def test_webtool_graphs_r417; assert_in_epsilon(28.33434099600031, worksheet.webtool_graphs_r417, 0.002); end
  def test_webtool_graphs_s417; assert_in_epsilon(29.498436323399087, worksheet.webtool_graphs_s417, 0.002); end
  def test_webtool_graphs_t417; assert_in_epsilon(30.672885545530654, worksheet.webtool_graphs_t417, 0.002); end
  def test_webtool_graphs_b418; assert_equal("Global Materials", worksheet.webtool_graphs_b418); end
  def test_webtool_graphs_c418; assert_equal("Steel.OxygenHisarna", worksheet.webtool_graphs_c418); end
  def test_webtool_graphs_l418; assert_in_delta(0.0, (worksheet.webtool_graphs_l418||0), 0.002); end
  def test_webtool_graphs_m418; assert_in_delta(0.37861466923642695, worksheet.webtool_graphs_m418, 0.002); end
  def test_webtool_graphs_n418; assert_in_delta(0.8141391355695241, worksheet.webtool_graphs_n418, 0.002); end
  def test_webtool_graphs_o418; assert_in_epsilon(1.3080312397859446, worksheet.webtool_graphs_o418, 0.002); end
  def test_webtool_graphs_p418; assert_in_epsilon(1.859604495560463, worksheet.webtool_graphs_p418, 0.002); end
  def test_webtool_graphs_q418; assert_in_epsilon(2.461593532271687, worksheet.webtool_graphs_q418, 0.002); end
  def test_webtool_graphs_r418; assert_in_epsilon(3.1317957184138465, worksheet.webtool_graphs_r418, 0.002); end
  def test_webtool_graphs_s418; assert_in_epsilon(3.8726587114880933, worksheet.webtool_graphs_s418, 0.002); end
  def test_webtool_graphs_t418; assert_in_epsilon(4.687790290712915, worksheet.webtool_graphs_t418, 0.002); end
  def test_webtool_graphs_b419; assert_equal("Global Materials", worksheet.webtool_graphs_b419); end
  def test_webtool_graphs_c419; assert_equal("Steel.Electric", worksheet.webtool_graphs_c419); end
  def test_webtool_graphs_l419; assert_in_epsilon(2.6697592633263763, worksheet.webtool_graphs_l419, 0.002); end
  def test_webtool_graphs_m419; assert_in_epsilon(2.90649989368204, worksheet.webtool_graphs_m419, 0.002); end
  def test_webtool_graphs_n419; assert_in_epsilon(3.139947407830456, worksheet.webtool_graphs_n419, 0.002); end
  def test_webtool_graphs_o419; assert_in_epsilon(3.3469173963665826, worksheet.webtool_graphs_o419, 0.002); end
  def test_webtool_graphs_p419; assert_in_epsilon(3.542533359922462, worksheet.webtool_graphs_p419, 0.002); end
  def test_webtool_graphs_q419; assert_in_epsilon(3.7199895610401175, worksheet.webtool_graphs_q419, 0.002); end
  def test_webtool_graphs_r419; assert_in_epsilon(3.908638479322855, worksheet.webtool_graphs_r419, 0.002); end
  def test_webtool_graphs_s419; assert_in_epsilon(4.10409803753735, worksheet.webtool_graphs_s419, 0.002); end
  def test_webtool_graphs_t419; assert_in_epsilon(4.305142290546906, worksheet.webtool_graphs_t419, 0.002); end
  def test_webtool_graphs_b420; assert_equal("Global Materials", worksheet.webtool_graphs_b420); end
  def test_webtool_graphs_c420; assert_equal("Steel.ElectricDRI", worksheet.webtool_graphs_c420); end
  def test_webtool_graphs_l420; assert_in_delta(0.48100793205535164, worksheet.webtool_graphs_l420, 0.002); end
  def test_webtool_graphs_m420; assert_in_delta(0.5668811052198529, worksheet.webtool_graphs_m420, 0.002); end
  def test_webtool_graphs_n420; assert_in_delta(0.6596795937420019, worksheet.webtool_graphs_n420, 0.002); end
  def test_webtool_graphs_o420; assert_in_delta(0.7558259356527803, worksheet.webtool_graphs_o420, 0.002); end
  def test_webtool_graphs_p420; assert_in_delta(0.8582284214292121, worksheet.webtool_graphs_p420, 0.002); end
  def test_webtool_graphs_q420; assert_in_delta(0.9650515420257482, worksheet.webtool_graphs_q420, 0.002); end
  def test_webtool_graphs_r420; assert_in_epsilon(1.0839700445572118, worksheet.webtool_graphs_r420, 0.002); end
  def test_webtool_graphs_s420; assert_in_epsilon(1.2148026114790824, worksheet.webtool_graphs_s420, 0.002); end
  def test_webtool_graphs_t420; assert_in_epsilon(1.358095619878188, worksheet.webtool_graphs_t420, 0.002); end
  def test_webtool_graphs_b421; assert_equal("Global Materials", worksheet.webtool_graphs_b421); end
  def test_webtool_graphs_c421; assert_equal("Steel.Others", worksheet.webtool_graphs_c421); end
  def test_webtool_graphs_j421; assert_equal("", worksheet.webtool_graphs_j421); end
  def test_webtool_graphs_l421; assert_in_epsilon(6.671485699703609, worksheet.webtool_graphs_l421, 0.002); end
  def test_webtool_graphs_m421; assert_in_epsilon(6.85649174817387, worksheet.webtool_graphs_m421, 0.002); end
  def test_webtool_graphs_n421; assert_in_epsilon(7.453560179101458, worksheet.webtool_graphs_n421, 0.002); end
  def test_webtool_graphs_o421; assert_in_epsilon(7.9951032655092495, worksheet.webtool_graphs_o421, 0.002); end
  def test_webtool_graphs_p421; assert_in_epsilon(8.516465106801723, worksheet.webtool_graphs_p421, 0.002); end
  def test_webtool_graphs_q421; assert_in_epsilon(9.000835802459559, worksheet.webtool_graphs_q421, 0.002); end
  def test_webtool_graphs_r421; assert_in_epsilon(9.519023698790585, worksheet.webtool_graphs_r421, 0.002); end
  def test_webtool_graphs_s421; assert_in_epsilon(10.06100278260691, worksheet.webtool_graphs_s421, 0.002); end
  def test_webtool_graphs_t421; assert_in_epsilon(10.624275536760782, worksheet.webtool_graphs_t421, 0.002); end
  def test_webtool_graphs_b422; assert_equal("TOTAL", worksheet.webtool_graphs_b422); end
  def test_webtool_graphs_c422; assert_equal("TOTAL", worksheet.webtool_graphs_c422); end
  def test_webtool_graphs_l422; assert_in_epsilon(31.442023857384005, worksheet.webtool_graphs_l422, 0.002); end
  def test_webtool_graphs_m422; assert_in_epsilon(32.6228329161994, worksheet.webtool_graphs_m422, 0.002); end
  def test_webtool_graphs_n422; assert_in_epsilon(35.5662347118132, worksheet.webtool_graphs_n422, 0.002); end
  def test_webtool_graphs_o422; assert_in_epsilon(38.26298882260351, worksheet.webtool_graphs_o422, 0.002); end
  def test_webtool_graphs_p422; assert_in_epsilon(40.88097454242191, worksheet.webtool_graphs_p422, 0.002); end
  def test_webtool_graphs_q422; assert_in_epsilon(43.33893472928355, worksheet.webtool_graphs_q422, 0.002); end
  def test_webtool_graphs_r422; assert_in_epsilon(45.97776893708481, worksheet.webtool_graphs_r422, 0.002); end
  def test_webtool_graphs_s422; assert_in_epsilon(48.750998466510524, worksheet.webtool_graphs_s422, 0.002); end
  def test_webtool_graphs_t422; assert_in_epsilon(51.648189283429446, worksheet.webtool_graphs_t422, 0.002); end
  def test_webtool_graphs_b169; assert_equal("Type of city", worksheet.webtool_graphs_b169); end
  def test_webtool_graphs_c169; assert_equal("Level", worksheet.webtool_graphs_c169); end
  def test_webtool_graphs_d169; assert_equal("1975", worksheet.webtool_graphs_d169); end
  def test_webtool_graphs_e169; assert_equal("1980", worksheet.webtool_graphs_e169); end
  def test_webtool_graphs_f169; assert_equal("1985", worksheet.webtool_graphs_f169); end
  def test_webtool_graphs_g169; assert_equal("1990", worksheet.webtool_graphs_g169); end
  def test_webtool_graphs_h169; assert_equal("1995", worksheet.webtool_graphs_h169); end
  def test_webtool_graphs_i169; assert_equal("2000", worksheet.webtool_graphs_i169); end
  def test_webtool_graphs_j169; assert_equal("2005", worksheet.webtool_graphs_j169); end
  def test_webtool_graphs_k169; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k169, 0.002); end
  def test_webtool_graphs_l169; assert_equal("2011", worksheet.webtool_graphs_l169); end
  def test_webtool_graphs_m169; assert_equal("2015", worksheet.webtool_graphs_m169); end
  def test_webtool_graphs_n169; assert_equal("2020", worksheet.webtool_graphs_n169); end
  def test_webtool_graphs_o169; assert_equal("2025", worksheet.webtool_graphs_o169); end
  def test_webtool_graphs_p169; assert_equal("2030", worksheet.webtool_graphs_p169); end
  def test_webtool_graphs_q169; assert_equal("2035", worksheet.webtool_graphs_q169); end
  def test_webtool_graphs_r169; assert_equal("2040", worksheet.webtool_graphs_r169); end
  def test_webtool_graphs_s169; assert_equal("2045", worksheet.webtool_graphs_s169); end
  def test_webtool_graphs_t169; assert_equal("2050", worksheet.webtool_graphs_t169); end
  def test_webtool_graphs_b170; assert_equal("Total", worksheet.webtool_graphs_b170); end
  def test_webtool_graphs_c170; assert_equal("Historic data", worksheet.webtool_graphs_c170); end
  def test_webtool_graphs_b171; assert_equal("Total", worksheet.webtool_graphs_b171); end
  def test_webtool_graphs_c171; assert_equal("Urban", worksheet.webtool_graphs_c171); end
  def test_webtool_graphs_l171; assert_in_delta(0.14693270333150854, worksheet.webtool_graphs_l171, 0.002); end
  def test_webtool_graphs_m171; assert_in_delta(0.15976660450997304, worksheet.webtool_graphs_m171, 0.002); end
  def test_webtool_graphs_n171; assert_in_delta(0.16932082530829196, worksheet.webtool_graphs_n171, 0.002); end
  def test_webtool_graphs_o171; assert_in_delta(0.17602940837573194, worksheet.webtool_graphs_o171, 0.002); end
  def test_webtool_graphs_p171; assert_in_delta(0.18241412274638386, worksheet.webtool_graphs_p171, 0.002); end
  def test_webtool_graphs_q171; assert_in_delta(0.18767013623860426, worksheet.webtool_graphs_q171, 0.002); end
  def test_webtool_graphs_r171; assert_in_delta(0.19213167581815127, worksheet.webtool_graphs_r171, 0.002); end
  def test_webtool_graphs_s171; assert_in_delta(0.19521877183228234, worksheet.webtool_graphs_s171, 0.002); end
  def test_webtool_graphs_t171; assert_in_delta(0.1981300893438245, worksheet.webtool_graphs_t171, 0.002); end
  def test_webtool_graphs_b172; assert_equal("Total", worksheet.webtool_graphs_b172); end
  def test_webtool_graphs_c172; assert_equal("Rural", worksheet.webtool_graphs_c172); end
  def test_webtool_graphs_l172; assert_in_delta(0.09451208719370718, worksheet.webtool_graphs_l172, 0.002); end
  def test_webtool_graphs_m172; assert_in_delta(0.09763075245048859, worksheet.webtool_graphs_m172, 0.002); end
  def test_webtool_graphs_n172; assert_in_delta(0.10648603917728229, worksheet.webtool_graphs_n172, 0.002); end
  def test_webtool_graphs_o172; assert_in_delta(0.11575495934783771, worksheet.webtool_graphs_o172, 0.002); end
  def test_webtool_graphs_p172; assert_in_delta(0.1263828313791194, worksheet.webtool_graphs_p172, 0.002); end
  def test_webtool_graphs_q172; assert_in_delta(0.137252497854104, worksheet.webtool_graphs_q172, 0.002); end
  def test_webtool_graphs_r172; assert_in_delta(0.1486612838156978, worksheet.webtool_graphs_r172, 0.002); end
  def test_webtool_graphs_s172; assert_in_delta(0.16077746028414264, worksheet.webtool_graphs_s172, 0.002); end
  def test_webtool_graphs_t172; assert_in_delta(0.17438734162612796, worksheet.webtool_graphs_t172, 0.002); end
  def test_webtool_graphs_b173; assert_equal("Total", worksheet.webtool_graphs_b173); end
  def test_webtool_graphs_c173; assert_equal("Average", worksheet.webtool_graphs_c173); end
  def test_webtool_graphs_l173; assert_in_delta(0.12184041896087834, worksheet.webtool_graphs_l173, 0.002); end
  def test_webtool_graphs_m173; assert_in_delta(0.13120025234438923, worksheet.webtool_graphs_m173, 0.002); end
  def test_webtool_graphs_n173; assert_in_delta(0.14180897614194252, worksheet.webtool_graphs_n173, 0.002); end
  def test_webtool_graphs_o173; assert_in_delta(0.1508438404924537, worksheet.webtool_graphs_o173, 0.002); end
  def test_webtool_graphs_p173; assert_in_delta(0.16002286150737785, worksheet.webtool_graphs_p173, 0.002); end
  def test_webtool_graphs_q173; assert_in_delta(0.16835745869663818, worksheet.webtool_graphs_q173, 0.002); end
  def test_webtool_graphs_r173; assert_in_delta(0.17614882052052472, worksheet.webtool_graphs_r173, 0.002); end
  def test_webtool_graphs_s173; assert_in_delta(0.183091937823109, worksheet.webtool_graphs_s173, 0.002); end
  def test_webtool_graphs_t173; assert_in_delta(0.19014453164790923, worksheet.webtool_graphs_t173, 0.002); end
  def test_webtool_graphs_b125; assert_equal("Type of city", worksheet.webtool_graphs_b125); end
  def test_webtool_graphs_c125; assert_equal(".", worksheet.webtool_graphs_c125); end
  def test_webtool_graphs_d125; assert_equal("1975", worksheet.webtool_graphs_d125); end
  def test_webtool_graphs_e125; assert_equal("1980", worksheet.webtool_graphs_e125); end
  def test_webtool_graphs_f125; assert_equal("1985", worksheet.webtool_graphs_f125); end
  def test_webtool_graphs_g125; assert_equal("1990", worksheet.webtool_graphs_g125); end
  def test_webtool_graphs_h125; assert_equal("1995", worksheet.webtool_graphs_h125); end
  def test_webtool_graphs_i125; assert_equal("2000", worksheet.webtool_graphs_i125); end
  def test_webtool_graphs_j125; assert_equal("2005", worksheet.webtool_graphs_j125); end
  def test_webtool_graphs_k125; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k125, 0.002); end
  def test_webtool_graphs_l125; assert_equal("2011", worksheet.webtool_graphs_l125); end
  def test_webtool_graphs_m125; assert_equal("2015", worksheet.webtool_graphs_m125); end
  def test_webtool_graphs_n125; assert_equal("2020", worksheet.webtool_graphs_n125); end
  def test_webtool_graphs_o125; assert_equal("2025", worksheet.webtool_graphs_o125); end
  def test_webtool_graphs_p125; assert_equal("2030", worksheet.webtool_graphs_p125); end
  def test_webtool_graphs_q125; assert_equal("2035", worksheet.webtool_graphs_q125); end
  def test_webtool_graphs_r125; assert_equal("2040", worksheet.webtool_graphs_r125); end
  def test_webtool_graphs_s125; assert_equal("2045", worksheet.webtool_graphs_s125); end
  def test_webtool_graphs_t125; assert_equal("2050", worksheet.webtool_graphs_t125); end
  def test_webtool_graphs_b126; assert_equal("Automobile city", worksheet.webtool_graphs_b126); end
  def test_webtool_graphs_l126; assert_in_epsilon(8918.930449006788, worksheet.webtool_graphs_l126, 0.002); end
  def test_webtool_graphs_m126; assert_in_epsilon(9279.509571150937, worksheet.webtool_graphs_m126, 0.002); end
  def test_webtool_graphs_n126; assert_in_epsilon(9300.000013329567, worksheet.webtool_graphs_n126, 0.002); end
  def test_webtool_graphs_o126; assert_in_epsilon(9205.469953626982, worksheet.webtool_graphs_o126, 0.002); end
  def test_webtool_graphs_p126; assert_in_epsilon(9088.069981057359, worksheet.webtool_graphs_p126, 0.002); end
  def test_webtool_graphs_q126; assert_in_epsilon(8941.857003924295, worksheet.webtool_graphs_q126, 0.002); end
  def test_webtool_graphs_r126; assert_in_epsilon(8781.279526186001, worksheet.webtool_graphs_r126, 0.002); end
  def test_webtool_graphs_s126; assert_in_epsilon(8490.22147748848, worksheet.webtool_graphs_s126, 0.002); end
  def test_webtool_graphs_t126; assert_in_epsilon(8192.890509650273, worksheet.webtool_graphs_t126, 0.002); end
  def test_webtool_graphs_b127; assert_equal("Transit city", worksheet.webtool_graphs_b127); end
  def test_webtool_graphs_l127; assert_in_epsilon(4297.810771691249, worksheet.webtool_graphs_l127, 0.002); end
  def test_webtool_graphs_m127; assert_in_epsilon(4743.9789312597795, worksheet.webtool_graphs_m127, 0.002); end
  def test_webtool_graphs_n127; assert_in_epsilon(5141.620626995414, worksheet.webtool_graphs_n127, 0.002); end
  def test_webtool_graphs_o127; assert_in_epsilon(5379.585434248696, worksheet.webtool_graphs_o127, 0.002); end
  def test_webtool_graphs_p127; assert_in_epsilon(5604.6914371627945, worksheet.webtool_graphs_p127, 0.002); end
  def test_webtool_graphs_q127; assert_in_epsilon(5788.1784024098615, worksheet.webtool_graphs_q127, 0.002); end
  def test_webtool_graphs_r127; assert_in_epsilon(5959.390309410566, worksheet.webtool_graphs_r127, 0.002); end
  def test_webtool_graphs_s127; assert_in_epsilon(6071.318164667681, worksheet.webtool_graphs_s127, 0.002); end
  def test_webtool_graphs_t127; assert_in_epsilon(6129.539127109365, worksheet.webtool_graphs_t127, 0.002); end
  def test_webtool_graphs_b128; assert_equal("Booming city", worksheet.webtool_graphs_b128); end
  def test_webtool_graphs_l128; assert_in_epsilon(2135.8170176364983, worksheet.webtool_graphs_l128, 0.002); end
  def test_webtool_graphs_m128; assert_in_epsilon(2403.7224224815955, worksheet.webtool_graphs_m128, 0.002); end
  def test_webtool_graphs_n128; assert_in_epsilon(2960.574269281936, worksheet.webtool_graphs_n128, 0.002); end
  def test_webtool_graphs_o128; assert_in_epsilon(3508.5996140912325, worksheet.webtool_graphs_o128, 0.002); end
  def test_webtool_graphs_p128; assert_in_epsilon(4057.181654579542, worksheet.webtool_graphs_p128, 0.002); end
  def test_webtool_graphs_q128; assert_in_epsilon(4579.767821921155, worksheet.webtool_graphs_q128, 0.002); end
  def test_webtool_graphs_r128; assert_in_epsilon(5071.479122668045, worksheet.webtool_graphs_r128, 0.002); end
  def test_webtool_graphs_s128; assert_in_epsilon(5536.725408333205, worksheet.webtool_graphs_s128, 0.002); end
  def test_webtool_graphs_t128; assert_in_epsilon(6002.0071452589755, worksheet.webtool_graphs_t128, 0.002); end
  def test_webtool_graphs_b129; assert_equal("Developed", worksheet.webtool_graphs_b129); end
  def test_webtool_graphs_l129; assert_in_epsilon(19691.47987657908, worksheet.webtool_graphs_l129, 0.002); end
  def test_webtool_graphs_m129; assert_in_epsilon(18907.590899986488, worksheet.webtool_graphs_m129, 0.002); end
  def test_webtool_graphs_n129; assert_in_epsilon(19321.872027115547, worksheet.webtool_graphs_n129, 0.002); end
  def test_webtool_graphs_o129; assert_in_epsilon(19742.370859199727, worksheet.webtool_graphs_o129, 0.002); end
  def test_webtool_graphs_p129; assert_in_epsilon(20094.01309074264, worksheet.webtool_graphs_p129, 0.002); end
  def test_webtool_graphs_q129; assert_in_epsilon(20448.808837462402, worksheet.webtool_graphs_q129, 0.002); end
  def test_webtool_graphs_r129; assert_in_epsilon(20416.614906560568, worksheet.webtool_graphs_r129, 0.002); end
  def test_webtool_graphs_s129; assert_in_epsilon(20335.497417994047, worksheet.webtool_graphs_s129, 0.002); end
  def test_webtool_graphs_t129; assert_in_epsilon(20205.936108935803, worksheet.webtool_graphs_t129, 0.002); end
  def test_webtool_graphs_b130; assert_equal("Developing", worksheet.webtool_graphs_b130); end
  def test_webtool_graphs_l130; assert_in_epsilon(943.5087023952483, worksheet.webtool_graphs_l130, 0.002); end
  def test_webtool_graphs_m130; assert_in_epsilon(1156.9095703351338, worksheet.webtool_graphs_m130, 0.002); end
  def test_webtool_graphs_n130; assert_in_epsilon(1501.7844918630103, worksheet.webtool_graphs_n130, 0.002); end
  def test_webtool_graphs_o130; assert_in_epsilon(1867.7598538766367, worksheet.webtool_graphs_o130, 0.002); end
  def test_webtool_graphs_p130; assert_in_epsilon(2290.1560079874666, worksheet.webtool_graphs_p130, 0.002); end
  def test_webtool_graphs_q130; assert_in_epsilon(2729.0540602494075, worksheet.webtool_graphs_q130, 0.002); end
  def test_webtool_graphs_r130; assert_in_epsilon(3222.1130267387057, worksheet.webtool_graphs_r130, 0.002); end
  def test_webtool_graphs_s130; assert_in_epsilon(3747.2706179198626, worksheet.webtool_graphs_s130, 0.002); end
  def test_webtool_graphs_t130; assert_in_epsilon(4329.769416946532, worksheet.webtool_graphs_t130, 0.002); end
  def test_webtool_graphs_b131; assert_equal("International slow growth", worksheet.webtool_graphs_b131); end
  def test_webtool_graphs_l131; assert_in_delta(0.0, (worksheet.webtool_graphs_l131||0), 0.002); end
  def test_webtool_graphs_m131; assert_in_delta(0.0, (worksheet.webtool_graphs_m131||0), 0.002); end
  def test_webtool_graphs_n131; assert_in_delta(0.0, (worksheet.webtool_graphs_n131||0), 0.002); end
  def test_webtool_graphs_o131; assert_in_delta(0.0, (worksheet.webtool_graphs_o131||0), 0.002); end
  def test_webtool_graphs_p131; assert_in_delta(0.0, (worksheet.webtool_graphs_p131||0), 0.002); end
  def test_webtool_graphs_q131; assert_in_delta(0.0, (worksheet.webtool_graphs_q131||0), 0.002); end
  def test_webtool_graphs_r131; assert_in_delta(0.0, (worksheet.webtool_graphs_r131||0), 0.002); end
  def test_webtool_graphs_s131; assert_in_delta(0.0, (worksheet.webtool_graphs_s131||0), 0.002); end
  def test_webtool_graphs_t131; assert_in_delta(0.0, (worksheet.webtool_graphs_t131||0), 0.002); end
  def test_webtool_graphs_b132; assert_equal("International fast growth", worksheet.webtool_graphs_b132); end
  def test_webtool_graphs_l132; assert_in_delta(0.0, (worksheet.webtool_graphs_l132||0), 0.002); end
  def test_webtool_graphs_m132; assert_in_delta(0.0, (worksheet.webtool_graphs_m132||0), 0.002); end
  def test_webtool_graphs_n132; assert_in_delta(0.0, (worksheet.webtool_graphs_n132||0), 0.002); end
  def test_webtool_graphs_o132; assert_in_delta(0.0, (worksheet.webtool_graphs_o132||0), 0.002); end
  def test_webtool_graphs_p132; assert_in_delta(0.0, (worksheet.webtool_graphs_p132||0), 0.002); end
  def test_webtool_graphs_q132; assert_in_delta(0.0, (worksheet.webtool_graphs_q132||0), 0.002); end
  def test_webtool_graphs_r132; assert_in_delta(0.0, (worksheet.webtool_graphs_r132||0), 0.002); end
  def test_webtool_graphs_s132; assert_in_delta(0.0, (worksheet.webtool_graphs_s132||0), 0.002); end
  def test_webtool_graphs_t132; assert_in_delta(0.0, (worksheet.webtool_graphs_t132||0), 0.002); end
  def test_webtool_graphs_b143; assert_equal("Type of city", worksheet.webtool_graphs_b143); end
  def test_webtool_graphs_c143; assert_equal(".", worksheet.webtool_graphs_c143); end
  def test_webtool_graphs_d143; assert_equal("1975", worksheet.webtool_graphs_d143); end
  def test_webtool_graphs_e143; assert_equal("1980", worksheet.webtool_graphs_e143); end
  def test_webtool_graphs_f143; assert_equal("1985", worksheet.webtool_graphs_f143); end
  def test_webtool_graphs_g143; assert_equal("1990", worksheet.webtool_graphs_g143); end
  def test_webtool_graphs_h143; assert_equal("1995", worksheet.webtool_graphs_h143); end
  def test_webtool_graphs_i143; assert_equal("2000", worksheet.webtool_graphs_i143); end
  def test_webtool_graphs_j143; assert_equal("2005", worksheet.webtool_graphs_j143); end
  def test_webtool_graphs_k143; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k143, 0.002); end
  def test_webtool_graphs_l143; assert_equal("2011", worksheet.webtool_graphs_l143); end
  def test_webtool_graphs_m143; assert_equal("2015", worksheet.webtool_graphs_m143); end
  def test_webtool_graphs_n143; assert_equal("2020", worksheet.webtool_graphs_n143); end
  def test_webtool_graphs_o143; assert_equal("2025", worksheet.webtool_graphs_o143); end
  def test_webtool_graphs_p143; assert_equal("2030", worksheet.webtool_graphs_p143); end
  def test_webtool_graphs_q143; assert_equal("2035", worksheet.webtool_graphs_q143); end
  def test_webtool_graphs_r143; assert_equal("2040", worksheet.webtool_graphs_r143); end
  def test_webtool_graphs_s143; assert_equal("2045", worksheet.webtool_graphs_s143); end
  def test_webtool_graphs_t143; assert_equal("2050", worksheet.webtool_graphs_t143); end
  def test_webtool_graphs_b144; assert_equal("Urban", worksheet.webtool_graphs_b144); end
  def test_webtool_graphs_l144; assert_in_epsilon(3526.3848799562056, worksheet.webtool_graphs_l144, 0.002); end
  def test_webtool_graphs_m144; assert_in_epsilon(3834.398508239353, worksheet.webtool_graphs_m144, 0.002); end
  def test_webtool_graphs_n144; assert_in_epsilon(4259.089128750681, worksheet.webtool_graphs_n144, 0.002); end
  def test_webtool_graphs_o144; assert_in_epsilon(4626.828818485852, worksheet.webtool_graphs_o144, 0.002); end
  def test_webtool_graphs_p144; assert_in_epsilon(4996.568522678582, worksheet.webtool_graphs_p144, 0.002); end
  def test_webtool_graphs_q144; assert_in_epsilon(5343.864999363672, worksheet.webtool_graphs_q144, 0.002); end
  def test_webtool_graphs_r144; assert_in_epsilon(5674.550229469969, worksheet.webtool_graphs_r144, 0.002); end
  def test_webtool_graphs_s144; assert_in_epsilon(5968.052993967543, worksheet.webtool_graphs_s144, 0.002); end
  def test_webtool_graphs_t144; assert_in_epsilon(6257.740741835357, worksheet.webtool_graphs_t144, 0.002); end
  def test_webtool_graphs_b145; assert_equal("Rural", worksheet.webtool_graphs_b145); end
  def test_webtool_graphs_l145; assert_in_epsilon(2551.826354230094, worksheet.webtool_graphs_l145, 0.002); end
  def test_webtool_graphs_m145; assert_in_epsilon(2636.0303161631928, worksheet.webtool_graphs_m145, 0.002); end
  def test_webtool_graphs_n145; assert_in_epsilon(2931.9214071730994, worksheet.webtool_graphs_n145, 0.002); end
  def test_webtool_graphs_o145; assert_in_epsilon(3247.337657929838, worksheet.webtool_graphs_o145, 0.002); end
  def test_webtool_graphs_p145; assert_in_epsilon(3609.555565982612, worksheet.webtool_graphs_p145, 0.002); end
  def test_webtool_graphs_q145; assert_in_epsilon(3987.7620833669857, worksheet.webtool_graphs_q145, 0.002); end
  def test_webtool_graphs_r145; assert_in_epsilon(4390.665508940366, worksheet.webtool_graphs_r145, 0.002); end
  def test_webtool_graphs_s145; assert_in_epsilon(4823.638801099529, worksheet.webtool_graphs_s145, 0.002); end
  def test_webtool_graphs_t145; assert_in_epsilon(5311.140876565352, worksheet.webtool_graphs_t145, 0.002); end
  def test_webtool_graphs_b146; assert_equal("Average", worksheet.webtool_graphs_b146); end
  def test_webtool_graphs_l146; assert_in_epsilon(3059.8909417877144, worksheet.webtool_graphs_l146, 0.002); end
  def test_webtool_graphs_m146; assert_in_epsilon(3283.4604159104783, worksheet.webtool_graphs_m146, 0.002); end
  def test_webtool_graphs_n146; assert_in_epsilon(3677.996386613208, worksheet.webtool_graphs_n146, 0.002); end
  def test_webtool_graphs_o146; assert_in_epsilon(4050.410969315848, worksheet.webtool_graphs_o146, 0.002); end
  def test_webtool_graphs_p146; assert_in_epsilon(4442.289499343236, worksheet.webtool_graphs_p146, 0.002); end
  def test_webtool_graphs_q146; assert_in_epsilon(4824.404366744764, worksheet.webtool_graphs_q146, 0.002); end
  def test_webtool_graphs_r146; assert_in_epsilon(5202.5014909653755, worksheet.webtool_graphs_r146, 0.002); end
  def test_webtool_graphs_s146; assert_in_epsilon(5565.103154637105, worksheet.webtool_graphs_s146, 0.002); end
  def test_webtool_graphs_t146; assert_in_epsilon(5939.364455782118, worksheet.webtool_graphs_t146, 0.002); end
  def test_webtool_graphs_b103; assert_equal("Automobile city", worksheet.webtool_graphs_b103); end
  def test_webtool_graphs_l103; assert_in_epsilon(11737.0, worksheet.webtool_graphs_l103, 0.002); end
  def test_webtool_graphs_m103; assert_in_epsilon(12011.67656948035, worksheet.webtool_graphs_m103, 0.002); end
  def test_webtool_graphs_n103; assert_in_epsilon(12266.04955510127, worksheet.webtool_graphs_n103, 0.002); end
  def test_webtool_graphs_o103; assert_in_epsilon(12375.60672604644, worksheet.webtool_graphs_o103, 0.002); end
  def test_webtool_graphs_p103; assert_in_epsilon(12458.123714228803, worksheet.webtool_graphs_p103, 0.002); end
  def test_webtool_graphs_q103; assert_in_epsilon(12503.662303608913, worksheet.webtool_graphs_q103, 0.002); end
  def test_webtool_graphs_r103; assert_in_epsilon(12530.568306776691, worksheet.webtool_graphs_r103, 0.002); end
  def test_webtool_graphs_s103; assert_in_epsilon(12368.515785695039, worksheet.webtool_graphs_s103, 0.002); end
  def test_webtool_graphs_t103; assert_in_epsilon(12190.209486794192, worksheet.webtool_graphs_t103, 0.002); end
  def test_webtool_graphs_b104; assert_equal("Transit city", worksheet.webtool_graphs_b104); end
  def test_webtool_graphs_l104; assert_in_epsilon(8237.0, worksheet.webtool_graphs_l104, 0.002); end
  def test_webtool_graphs_m104; assert_in_epsilon(9092.106780078124, worksheet.webtool_graphs_m104, 0.002); end
  def test_webtool_graphs_n104; assert_in_epsilon(9765.865310065976, worksheet.webtool_graphs_n104, 0.002); end
  def test_webtool_graphs_o104; assert_in_epsilon(10127.05905491678, worksheet.webtool_graphs_o104, 0.002); end
  def test_webtool_graphs_p104; assert_in_epsilon(10457.897081490017, worksheet.webtool_graphs_p104, 0.002); end
  def test_webtool_graphs_q104; assert_in_epsilon(10705.978695612404, worksheet.webtool_graphs_q104, 0.002); end
  def test_webtool_graphs_r104; assert_in_epsilon(10927.25832769744, worksheet.webtool_graphs_r104, 0.002); end
  def test_webtool_graphs_s104; assert_in_epsilon(11036.968876362718, worksheet.webtool_graphs_s104, 0.002); end
  def test_webtool_graphs_t104; assert_in_epsilon(11048.010260909676, worksheet.webtool_graphs_t104, 0.002); end
  def test_webtool_graphs_b105; assert_equal("Booming city", worksheet.webtool_graphs_b105); end
  def test_webtool_graphs_l105; assert_in_epsilon(9198.0, worksheet.webtool_graphs_l105, 0.002); end
  def test_webtool_graphs_m105; assert_in_epsilon(10400.758744510593, worksheet.webtool_graphs_m105, 0.002); end
  def test_webtool_graphs_n105; assert_in_epsilon(11122.022972217885, worksheet.webtool_graphs_n105, 0.002); end
  def test_webtool_graphs_o105; assert_in_epsilon(11646.021249058504, worksheet.webtool_graphs_o105, 0.002); end
  def test_webtool_graphs_p105; assert_in_epsilon(12062.372813814192, worksheet.webtool_graphs_p105, 0.002); end
  def test_webtool_graphs_q105; assert_in_epsilon(12330.090588931875, worksheet.webtool_graphs_q105, 0.002); end
  def test_webtool_graphs_r105; assert_in_epsilon(12475.651684669445, worksheet.webtool_graphs_r105, 0.002); end
  def test_webtool_graphs_s105; assert_in_epsilon(12538.154824428539, worksheet.webtool_graphs_s105, 0.002); end
  def test_webtool_graphs_t105; assert_in_epsilon(12591.53264763364, worksheet.webtool_graphs_t105, 0.002); end
  def test_webtool_graphs_b106; assert_equal("Developed", worksheet.webtool_graphs_b106); end
  def test_webtool_graphs_l106; assert_in_epsilon(23191.0, worksheet.webtool_graphs_l106, 0.002); end
  def test_webtool_graphs_m106; assert_in_epsilon(23989.60438824997, worksheet.webtool_graphs_m106, 0.002); end
  def test_webtool_graphs_n106; assert_in_epsilon(24810.257828472648, worksheet.webtool_graphs_n106, 0.002); end
  def test_webtool_graphs_o106; assert_in_epsilon(25658.984764950197, worksheet.webtool_graphs_o106, 0.002); end
  def test_webtool_graphs_p106; assert_in_epsilon(26438.04713229092, worksheet.webtool_graphs_p106, 0.002); end
  def test_webtool_graphs_q106; assert_in_epsilon(27240.763520933207, worksheet.webtool_graphs_q106, 0.002); end
  def test_webtool_graphs_r106; assert_in_epsilon(27541.733276406438, worksheet.webtool_graphs_r106, 0.002); end
  def test_webtool_graphs_s106; assert_in_epsilon(27783.56838551335, worksheet.webtool_graphs_s106, 0.002); end
  def test_webtool_graphs_t106; assert_in_epsilon(27964.63173312677, worksheet.webtool_graphs_t106, 0.002); end
  def test_webtool_graphs_b107; assert_equal("Developing", worksheet.webtool_graphs_b107); end
  def test_webtool_graphs_l107; assert_in_epsilon(4007.0, worksheet.webtool_graphs_l107, 0.002); end
  def test_webtool_graphs_m107; assert_in_epsilon(4530.9676331000155, worksheet.webtool_graphs_m107, 0.002); end
  def test_webtool_graphs_n107; assert_in_epsilon(5088.973563806325, worksheet.webtool_graphs_n107, 0.002); end
  def test_webtool_graphs_o107; assert_in_epsilon(5577.445836716928, worksheet.webtool_graphs_o107, 0.002); end
  def test_webtool_graphs_p107; assert_in_epsilon(6112.804806603019, worksheet.webtool_graphs_p107, 0.002); end
  def test_webtool_graphs_q107; assert_in_epsilon(6585.226837020949, worksheet.webtool_graphs_q107, 0.002); end
  def test_webtool_graphs_r107; assert_in_epsilon(7094.159533472762, worksheet.webtool_graphs_r107, 0.002); end
  def test_webtool_graphs_s107; assert_in_epsilon(7586.120132005357, worksheet.webtool_graphs_s107, 0.002); end
  def test_webtool_graphs_t107; assert_in_epsilon(8112.196855128412, worksheet.webtool_graphs_t107, 0.002); end
  def test_webtool_graphs_b108; assert_equal("International slow growth", worksheet.webtool_graphs_b108); end
  def test_webtool_graphs_l108; assert_in_epsilon(3216.16253150423, worksheet.webtool_graphs_l108, 0.002); end
  def test_webtool_graphs_m108; assert_in_epsilon(3484.134643747568, worksheet.webtool_graphs_m108, 0.002); end
  def test_webtool_graphs_n108; assert_in_epsilon(3688.3706771357956, worksheet.webtool_graphs_n108, 0.002); end
  def test_webtool_graphs_o108; assert_in_epsilon(3904.578795876411, worksheet.webtool_graphs_o108, 0.002); end
  def test_webtool_graphs_p108; assert_in_epsilon(4133.4607900762185, worksheet.webtool_graphs_p108, 0.002); end
  def test_webtool_graphs_q108; assert_in_epsilon(4375.759587984587, worksheet.webtool_graphs_q108, 0.002); end
  def test_webtool_graphs_r108; assert_in_epsilon(4632.26166746485, worksheet.webtool_graphs_r108, 0.002); end
  def test_webtool_graphs_s108; assert_in_epsilon(4903.7996088234395, worksheet.webtool_graphs_s108, 0.002); end
  def test_webtool_graphs_t108; assert_in_epsilon(5191.254797282972, worksheet.webtool_graphs_t108, 0.002); end
  def test_webtool_graphs_b109; assert_equal("International fast growth", worksheet.webtool_graphs_b109); end
  def test_webtool_graphs_l109; assert_in_epsilon(233.26483269454, worksheet.webtool_graphs_l109, 0.002); end
  def test_webtool_graphs_m109; assert_in_epsilon(287.4501885868328, worksheet.webtool_graphs_m109, 0.002); end
  def test_webtool_graphs_n109; assert_in_epsilon(346.0836144827904, worksheet.webtool_graphs_n109, 0.002); end
  def test_webtool_graphs_o109; assert_in_epsilon(416.6769512391238, worksheet.webtool_graphs_o109, 0.002); end
  def test_webtool_graphs_p109; assert_in_epsilon(501.6697538639603, worksheet.webtool_graphs_p109, 0.002); end
  def test_webtool_graphs_q109; assert_in_epsilon(603.9991921643295, worksheet.webtool_graphs_q109, 0.002); end
  def test_webtool_graphs_r109; assert_in_epsilon(727.2015530641119, worksheet.webtool_graphs_r109, 0.002); end
  def test_webtool_graphs_s109; assert_in_epsilon(875.5344471304858, worksheet.webtool_graphs_s109, 0.002); end
  def test_webtool_graphs_t109; assert_in_epsilon(1054.1239425055292, worksheet.webtool_graphs_t109, 0.002); end
  def test_webtool_graphs_b113; assert_equal("Type of city", worksheet.webtool_graphs_b113); end
  def test_webtool_graphs_c113; assert_equal(".", worksheet.webtool_graphs_c113); end
  def test_webtool_graphs_d113; assert_equal("1975", worksheet.webtool_graphs_d113); end
  def test_webtool_graphs_e113; assert_equal("1980", worksheet.webtool_graphs_e113); end
  def test_webtool_graphs_f113; assert_equal("1985", worksheet.webtool_graphs_f113); end
  def test_webtool_graphs_g113; assert_equal("1990", worksheet.webtool_graphs_g113); end
  def test_webtool_graphs_h113; assert_equal("1995", worksheet.webtool_graphs_h113); end
  def test_webtool_graphs_i113; assert_equal("2000", worksheet.webtool_graphs_i113); end
  def test_webtool_graphs_j113; assert_equal("2005", worksheet.webtool_graphs_j113); end
  def test_webtool_graphs_k113; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k113, 0.002); end
  def test_webtool_graphs_l113; assert_equal("2011", worksheet.webtool_graphs_l113); end
  def test_webtool_graphs_m113; assert_equal("2015", worksheet.webtool_graphs_m113); end
  def test_webtool_graphs_n113; assert_equal("2020", worksheet.webtool_graphs_n113); end
  def test_webtool_graphs_o113; assert_equal("2025", worksheet.webtool_graphs_o113); end
  def test_webtool_graphs_p113; assert_equal("2030", worksheet.webtool_graphs_p113); end
  def test_webtool_graphs_q113; assert_equal("2035", worksheet.webtool_graphs_q113); end
  def test_webtool_graphs_r113; assert_equal("2040", worksheet.webtool_graphs_r113); end
  def test_webtool_graphs_s113; assert_equal("2045", worksheet.webtool_graphs_s113); end
  def test_webtool_graphs_t113; assert_equal("2050", worksheet.webtool_graphs_t113); end
  def test_webtool_graphs_b114; assert_equal("Urban", worksheet.webtool_graphs_b114); end
  def test_webtool_graphs_l114; assert_in_epsilon(9187.12956717257, worksheet.webtool_graphs_l114, 0.002); end
  def test_webtool_graphs_m114; assert_in_epsilon(10194.274948810013, worksheet.webtool_graphs_m114, 0.002); end
  def test_webtool_graphs_n114; assert_in_epsilon(10864.468156676125, worksheet.webtool_graphs_n114, 0.002); end
  def test_webtool_graphs_o114; assert_in_epsilon(11313.475001700785, worksheet.webtool_graphs_o114, 0.002); end
  def test_webtool_graphs_p114; assert_in_epsilon(11687.539150543824, worksheet.webtool_graphs_p114, 0.002); end
  def test_webtool_graphs_q114; assert_in_epsilon(11943.503702211865, worksheet.webtool_graphs_q114, 0.002); end
  def test_webtool_graphs_r114; assert_in_epsilon(12111.709270532288, worksheet.webtool_graphs_r114, 0.002); end
  def test_webtool_graphs_s114; assert_in_epsilon(12177.81683740558, worksheet.webtool_graphs_s114, 0.002); end
  def test_webtool_graphs_t114; assert_in_epsilon(12213.875409001868, worksheet.webtool_graphs_t114, 0.002); end
  def test_webtool_graphs_b115; assert_equal("Rural", worksheet.webtool_graphs_b115); end
  def test_webtool_graphs_l115; assert_in_epsilon(5652.722918290269, worksheet.webtool_graphs_l115, 0.002); end
  def test_webtool_graphs_m115; assert_in_epsilon(6152.408116175827, worksheet.webtool_graphs_m115, 0.002); end
  def test_webtool_graphs_n115; assert_in_epsilon(6671.689506611237, worksheet.webtool_graphs_n115, 0.002); end
  def test_webtool_graphs_o115; assert_in_epsilon(7127.356230200211, worksheet.webtool_graphs_o115, 0.002); end
  def test_webtool_graphs_p115; assert_in_epsilon(7619.057952536879, worksheet.webtool_graphs_p115, 0.002); end
  def test_webtool_graphs_q115; assert_in_epsilon(8052.475682883874, worksheet.webtool_graphs_q115, 0.002); end
  def test_webtool_graphs_r115; assert_in_epsilon(8483.793453624112, worksheet.webtool_graphs_r115, 0.002); end
  def test_webtool_graphs_s115; assert_in_epsilon(8896.681588845126, worksheet.webtool_graphs_s115, 0.002); end
  def test_webtool_graphs_t115; assert_in_epsilon(9339.357880279356, worksheet.webtool_graphs_t115, 0.002); end
  def test_webtool_graphs_b116; assert_equal("International", worksheet.webtool_graphs_b116); end
  def test_webtool_graphs_l116; assert_in_epsilon(766.3185363489457, worksheet.webtool_graphs_l116, 0.002); end
  def test_webtool_graphs_m116; assert_in_epsilon(849.4419294600638, worksheet.webtool_graphs_m116, 0.002); end
  def test_webtool_graphs_n116; assert_in_epsilon(921.5624230728797, worksheet.webtool_graphs_n116, 0.002); end
  def test_webtool_graphs_o116; assert_in_epsilon(1004.5897185404, worksheet.webtool_graphs_o116, 0.002); end
  def test_webtool_graphs_p116; assert_in_epsilon(1100.6766215143705, worksheet.webtool_graphs_p116, 0.002); end
  def test_webtool_graphs_q116; assert_in_epsilon(1212.4251044670784, worksheet.webtool_graphs_q116, 0.002); end
  def test_webtool_graphs_r116; assert_in_epsilon(1342.9804536795255, worksheet.webtool_graphs_r116, 0.002); end
  def test_webtool_graphs_s116; assert_in_epsilon(1496.1451067342307, worksheet.webtool_graphs_s116, 0.002); end
  def test_webtool_graphs_t116; assert_in_epsilon(1676.516291171811, worksheet.webtool_graphs_t116, 0.002); end
  def test_webtool_graphs_b117; assert_equal("Average (urban and rural - excluding international)", worksheet.webtool_graphs_b117); end
  def test_webtool_graphs_l117; assert_in_epsilon(7495.307851798881, worksheet.webtool_graphs_l117, 0.002); end
  def test_webtool_graphs_m117; assert_in_epsilon(8336.06608033121, worksheet.webtool_graphs_m117, 0.002); end
  def test_webtool_graphs_n117; assert_in_epsilon(9028.684176000677, worksheet.webtool_graphs_n117, 0.002); end
  def test_webtool_graphs_o117; assert_in_epsilon(9564.312957294514, worksheet.webtool_graphs_o117, 0.002); end
  def test_webtool_graphs_p117; assert_in_epsilon(10061.690037885668, worksheet.webtool_graphs_p117, 0.002); end
  def test_webtool_graphs_q117; assert_in_epsilon(10453.02989479255, worksheet.webtool_graphs_q117, 0.002); end
  def test_webtool_graphs_r117; assert_in_epsilon(10777.825427701027, worksheet.webtool_graphs_r117, 0.002); end
  def test_webtool_graphs_s117; assert_in_epsilon(11022.524523251837, worksheet.webtool_graphs_s117, 0.002); end
  def test_webtool_graphs_t117; assert_in_epsilon(11247.069635446673, worksheet.webtool_graphs_t117, 0.002); end
  def test_webtool_graphs_b75; assert_equal("Type of city", worksheet.webtool_graphs_b75); end
  def test_webtool_graphs_c75; assert_equal(".", worksheet.webtool_graphs_c75); end
  def test_webtool_graphs_d75; assert_equal("1975", worksheet.webtool_graphs_d75); end
  def test_webtool_graphs_e75; assert_equal("1980", worksheet.webtool_graphs_e75); end
  def test_webtool_graphs_f75; assert_equal("1985", worksheet.webtool_graphs_f75); end
  def test_webtool_graphs_g75; assert_equal("1990", worksheet.webtool_graphs_g75); end
  def test_webtool_graphs_h75; assert_equal("1995", worksheet.webtool_graphs_h75); end
  def test_webtool_graphs_i75; assert_equal("2000", worksheet.webtool_graphs_i75); end
  def test_webtool_graphs_j75; assert_equal("2005", worksheet.webtool_graphs_j75); end
  def test_webtool_graphs_k75; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k75, 0.002); end
  def test_webtool_graphs_l75; assert_equal("2011", worksheet.webtool_graphs_l75); end
  def test_webtool_graphs_m75; assert_equal("2015", worksheet.webtool_graphs_m75); end
  def test_webtool_graphs_n75; assert_equal("2020", worksheet.webtool_graphs_n75); end
  def test_webtool_graphs_o75; assert_equal("2025", worksheet.webtool_graphs_o75); end
  def test_webtool_graphs_p75; assert_equal("2030", worksheet.webtool_graphs_p75); end
  def test_webtool_graphs_q75; assert_equal("2035", worksheet.webtool_graphs_q75); end
  def test_webtool_graphs_r75; assert_equal("2040", worksheet.webtool_graphs_r75); end
  def test_webtool_graphs_s75; assert_equal("2045", worksheet.webtool_graphs_s75); end
  def test_webtool_graphs_t75; assert_equal("2050", worksheet.webtool_graphs_t75); end
  def test_webtool_graphs_b76; assert_equal("Automobile city", worksheet.webtool_graphs_b76); end
  def test_webtool_graphs_l76; assert_in_delta(0.7598986494851144, worksheet.webtool_graphs_l76, 0.002); end
  def test_webtool_graphs_m76; assert_in_delta(0.772540745455019, worksheet.webtool_graphs_m76, 0.002); end
  def test_webtool_graphs_n76; assert_in_delta(0.7581903180443156, worksheet.webtool_graphs_n76, 0.002); end
  def test_webtool_graphs_o76; assert_in_delta(0.7438398906336123, worksheet.webtool_graphs_o76, 0.002); end
  def test_webtool_graphs_p76; assert_in_delta(0.7294894632229088, worksheet.webtool_graphs_p76, 0.002); end
  def test_webtool_graphs_q76; assert_in_delta(0.7151390358122052, worksheet.webtool_graphs_q76, 0.002); end
  def test_webtool_graphs_r76; assert_in_delta(0.7007886084015019, worksheet.webtool_graphs_r76, 0.002); end
  def test_webtool_graphs_s76; assert_in_delta(0.6864381809907985, worksheet.webtool_graphs_s76, 0.002); end
  def test_webtool_graphs_t76; assert_in_delta(0.6720877535800951, worksheet.webtool_graphs_t76, 0.002); end
  def test_webtool_graphs_b77; assert_equal("Transit city", worksheet.webtool_graphs_b77); end
  def test_webtool_graphs_l77; assert_in_delta(0.5217689415674699, worksheet.webtool_graphs_l77, 0.002); end
  def test_webtool_graphs_m77; assert_in_delta(0.5217689415674699, worksheet.webtool_graphs_m77, 0.002); end
  def test_webtool_graphs_n77; assert_in_delta(0.5264889964943289, worksheet.webtool_graphs_n77, 0.002); end
  def test_webtool_graphs_o77; assert_in_delta(0.5312090514211881, worksheet.webtool_graphs_o77, 0.002); end
  def test_webtool_graphs_p77; assert_in_delta(0.5359291063480471, worksheet.webtool_graphs_p77, 0.002); end
  def test_webtool_graphs_q77; assert_in_delta(0.5406491612749063, worksheet.webtool_graphs_q77, 0.002); end
  def test_webtool_graphs_r77; assert_in_delta(0.5453692162017654, worksheet.webtool_graphs_r77, 0.002); end
  def test_webtool_graphs_s77; assert_in_delta(0.5500892711286245, worksheet.webtool_graphs_s77, 0.002); end
  def test_webtool_graphs_t77; assert_in_delta(0.5548093260554836, worksheet.webtool_graphs_t77, 0.002); end
  def test_webtool_graphs_b78; assert_equal("Booming city", worksheet.webtool_graphs_b78); end
  def test_webtool_graphs_l78; assert_in_delta(0.2322045028959011, worksheet.webtool_graphs_l78, 0.002); end
  def test_webtool_graphs_m78; assert_in_delta(0.2311102950782561, worksheet.webtool_graphs_m78, 0.002); end
  def test_webtool_graphs_n78; assert_in_delta(0.2661902674250237, worksheet.webtool_graphs_n78, 0.002); end
  def test_webtool_graphs_o78; assert_in_delta(0.30127023977179135, worksheet.webtool_graphs_o78, 0.002); end
  def test_webtool_graphs_p78; assert_in_delta(0.3363502121185589, worksheet.webtool_graphs_p78, 0.002); end
  def test_webtool_graphs_q78; assert_in_delta(0.37143018446532666, worksheet.webtool_graphs_q78, 0.002); end
  def test_webtool_graphs_r78; assert_in_delta(0.40651015681209435, worksheet.webtool_graphs_r78, 0.002); end
  def test_webtool_graphs_s78; assert_in_delta(0.44159012915886187, worksheet.webtool_graphs_s78, 0.002); end
  def test_webtool_graphs_t78; assert_in_delta(0.47667010150562955, worksheet.webtool_graphs_t78, 0.002); end
  def test_webtool_graphs_b79; assert_equal("Developed", worksheet.webtool_graphs_b79); end
  def test_webtool_graphs_l79; assert_in_delta(0.8491000766064025, worksheet.webtool_graphs_l79, 0.002); end
  def test_webtool_graphs_m79; assert_in_delta(0.7881576783836988, worksheet.webtool_graphs_m79, 0.002); end
  def test_webtool_graphs_n79; assert_in_delta(0.7787856200728982, worksheet.webtool_graphs_n79, 0.002); end
  def test_webtool_graphs_o79; assert_in_delta(0.7694135617620975, worksheet.webtool_graphs_o79, 0.002); end
  def test_webtool_graphs_p79; assert_in_delta(0.7600415034512968, worksheet.webtool_graphs_p79, 0.002); end
  def test_webtool_graphs_q79; assert_in_delta(0.7506694451404963, worksheet.webtool_graphs_q79, 0.002); end
  def test_webtool_graphs_r79; assert_in_delta(0.7412973868296958, worksheet.webtool_graphs_r79, 0.002); end
  def test_webtool_graphs_s79; assert_in_delta(0.7319253285188951, worksheet.webtool_graphs_s79, 0.002); end
  def test_webtool_graphs_t79; assert_in_delta(0.7225532702080946, worksheet.webtool_graphs_t79, 0.002); end
  def test_webtool_graphs_b80; assert_equal("Developing", worksheet.webtool_graphs_b80); end
  def test_webtool_graphs_l80; assert_in_delta(0.2354651116534186, worksheet.webtool_graphs_l80, 0.002); end
  def test_webtool_graphs_m80; assert_in_delta(0.255333885389862, worksheet.webtool_graphs_m80, 0.002); end
  def test_webtool_graphs_n80; assert_in_delta(0.2951055793537553, worksheet.webtool_graphs_n80, 0.002); end
  def test_webtool_graphs_o80; assert_in_delta(0.3348772733176487, worksheet.webtool_graphs_o80, 0.002); end
  def test_webtool_graphs_p80; assert_in_delta(0.37464896728154196, worksheet.webtool_graphs_p80, 0.002); end
  def test_webtool_graphs_q80; assert_in_delta(0.41442066124543525, worksheet.webtool_graphs_q80, 0.002); end
  def test_webtool_graphs_r80; assert_in_delta(0.4541923552093286, worksheet.webtool_graphs_r80, 0.002); end
  def test_webtool_graphs_s80; assert_in_delta(0.4939640491732219, worksheet.webtool_graphs_s80, 0.002); end
  def test_webtool_graphs_t80; assert_in_delta(0.5337357431371152, worksheet.webtool_graphs_t80, 0.002); end
  def test_webtool_graphs_b81; assert_equal("International slow growth", worksheet.webtool_graphs_b81); end
  def test_webtool_graphs_l81; assert_in_delta(0.0, (worksheet.webtool_graphs_l81||0), 0.002); end
  def test_webtool_graphs_m81; assert_in_delta(0.0, (worksheet.webtool_graphs_m81||0), 0.002); end
  def test_webtool_graphs_n81; assert_in_delta(0.0, (worksheet.webtool_graphs_n81||0), 0.002); end
  def test_webtool_graphs_o81; assert_in_delta(0.0, (worksheet.webtool_graphs_o81||0), 0.002); end
  def test_webtool_graphs_p81; assert_in_delta(0.0, (worksheet.webtool_graphs_p81||0), 0.002); end
  def test_webtool_graphs_q81; assert_in_delta(0.0, (worksheet.webtool_graphs_q81||0), 0.002); end
  def test_webtool_graphs_r81; assert_in_delta(0.0, (worksheet.webtool_graphs_r81||0), 0.002); end
  def test_webtool_graphs_s81; assert_in_delta(0.0, (worksheet.webtool_graphs_s81||0), 0.002); end
  def test_webtool_graphs_t81; assert_in_delta(0.0, (worksheet.webtool_graphs_t81||0), 0.002); end
  def test_webtool_graphs_b82; assert_equal("International fast growth", worksheet.webtool_graphs_b82); end
  def test_webtool_graphs_l82; assert_in_delta(0.0, (worksheet.webtool_graphs_l82||0), 0.002); end
  def test_webtool_graphs_m82; assert_in_delta(0.0, (worksheet.webtool_graphs_m82||0), 0.002); end
  def test_webtool_graphs_n82; assert_in_delta(0.0, (worksheet.webtool_graphs_n82||0), 0.002); end
  def test_webtool_graphs_o82; assert_in_delta(0.0, (worksheet.webtool_graphs_o82||0), 0.002); end
  def test_webtool_graphs_p82; assert_in_delta(0.0, (worksheet.webtool_graphs_p82||0), 0.002); end
  def test_webtool_graphs_q82; assert_in_delta(0.0, (worksheet.webtool_graphs_q82||0), 0.002); end
  def test_webtool_graphs_r82; assert_in_delta(0.0, (worksheet.webtool_graphs_r82||0), 0.002); end
  def test_webtool_graphs_s82; assert_in_delta(0.0, (worksheet.webtool_graphs_s82||0), 0.002); end
  def test_webtool_graphs_t82; assert_in_delta(0.0, (worksheet.webtool_graphs_t82||0), 0.002); end
  def test_webtool_graphs_b136; assert_equal("Type of city", worksheet.webtool_graphs_b136); end
  def test_webtool_graphs_c136; assert_equal(".", worksheet.webtool_graphs_c136); end
  def test_webtool_graphs_d136; assert_equal("1975", worksheet.webtool_graphs_d136); end
  def test_webtool_graphs_e136; assert_equal("1980", worksheet.webtool_graphs_e136); end
  def test_webtool_graphs_f136; assert_equal("1985", worksheet.webtool_graphs_f136); end
  def test_webtool_graphs_g136; assert_equal("1990", worksheet.webtool_graphs_g136); end
  def test_webtool_graphs_h136; assert_equal("1995", worksheet.webtool_graphs_h136); end
  def test_webtool_graphs_i136; assert_equal("2000", worksheet.webtool_graphs_i136); end
  def test_webtool_graphs_j136; assert_equal("2005", worksheet.webtool_graphs_j136); end
  def test_webtool_graphs_k136; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k136, 0.002); end
  def test_webtool_graphs_l136; assert_equal("2011", worksheet.webtool_graphs_l136); end
  def test_webtool_graphs_m136; assert_equal("2015", worksheet.webtool_graphs_m136); end
  def test_webtool_graphs_n136; assert_equal("2020", worksheet.webtool_graphs_n136); end
  def test_webtool_graphs_o136; assert_equal("2025", worksheet.webtool_graphs_o136); end
  def test_webtool_graphs_p136; assert_equal("2030", worksheet.webtool_graphs_p136); end
  def test_webtool_graphs_q136; assert_equal("2035", worksheet.webtool_graphs_q136); end
  def test_webtool_graphs_r136; assert_equal("2040", worksheet.webtool_graphs_r136); end
  def test_webtool_graphs_s136; assert_equal("2045", worksheet.webtool_graphs_s136); end
  def test_webtool_graphs_t136; assert_equal("2050", worksheet.webtool_graphs_t136); end
  def test_webtool_graphs_b137; assert_equal("Urban", worksheet.webtool_graphs_b137); end
  def test_webtool_graphs_l137; assert_in_delta(0.383839680737352, worksheet.webtool_graphs_l137, 0.002); end
  def test_webtool_graphs_m137; assert_in_delta(0.37613253786989, worksheet.webtool_graphs_m137, 0.002); end
  def test_webtool_graphs_n137; assert_in_delta(0.39202002963518345, worksheet.webtool_graphs_n137, 0.002); end
  def test_webtool_graphs_o137; assert_in_delta(0.4089661945414904, worksheet.webtool_graphs_o137, 0.002); end
  def test_webtool_graphs_p137; assert_in_delta(0.42751245222105544, worksheet.webtool_graphs_p137, 0.002); end
  def test_webtool_graphs_q137; assert_in_delta(0.44742858817668557, worksheet.webtool_graphs_q137, 0.002); end
  def test_webtool_graphs_r137; assert_in_delta(0.46851770486896627, worksheet.webtool_graphs_r137, 0.002); end
  def test_webtool_graphs_s137; assert_in_delta(0.4900757725010262, worksheet.webtool_graphs_s137, 0.002); end
  def test_webtool_graphs_t137; assert_in_delta(0.5123468622598916, worksheet.webtool_graphs_t137, 0.002); end
  def test_webtool_graphs_b138; assert_equal("Rural", worksheet.webtool_graphs_b138); end
  def test_webtool_graphs_l138; assert_in_delta(0.451433121898344, worksheet.webtool_graphs_l138, 0.002); end
  def test_webtool_graphs_m138; assert_in_delta(0.4284550482326714, worksheet.webtool_graphs_m138, 0.002); end
  def test_webtool_graphs_n138; assert_in_delta(0.43945711266505194, worksheet.webtool_graphs_n138, 0.002); end
  def test_webtool_graphs_o138; assert_in_delta(0.45561601708220195, worksheet.webtool_graphs_o138, 0.002); end
  def test_webtool_graphs_p138; assert_in_delta(0.47375352549730326, worksheet.webtool_graphs_p138, 0.002); end
  def test_webtool_graphs_q138; assert_in_delta(0.4952218721806594, worksheet.webtool_graphs_q138, 0.002); end
  def test_webtool_graphs_r138; assert_in_delta(0.5175356440419655, worksheet.webtool_graphs_r138, 0.002); end
  def test_webtool_graphs_s138; assert_in_delta(0.5421840438964932, worksheet.webtool_graphs_s138, 0.002); end
  def test_webtool_graphs_t138; assert_in_delta(0.5686837301502453, worksheet.webtool_graphs_t138, 0.002); end
  def test_webtool_graphs_b139; assert_equal("Average", worksheet.webtool_graphs_b139); end
  def test_webtool_graphs_l139; assert_in_delta(0.4082408624554811, worksheet.webtool_graphs_l139, 0.002); end
  def test_webtool_graphs_m139; assert_in_delta(0.3938860829879625, worksheet.webtool_graphs_m139, 0.002); end
  def test_webtool_graphs_n139; assert_in_delta(0.4073679303557613, worksheet.webtool_graphs_n139, 0.002); end
  def test_webtool_graphs_o139; assert_in_delta(0.42349209895172646, worksheet.webtool_graphs_o139, 0.002); end
  def test_webtool_graphs_p139; assert_in_delta(0.4415053020532845, worksheet.webtool_graphs_p139, 0.002); end
  def test_webtool_graphs_q139; assert_in_delta(0.46153167218513047, worksheet.webtool_graphs_q139, 0.002); end
  def test_webtool_graphs_r139; assert_in_delta(0.4827041898075259, worksheet.webtool_graphs_r139, 0.002); end
  def test_webtool_graphs_s139; assert_in_delta(0.5048846244703389, worksheet.webtool_graphs_s139, 0.002); end
  def test_webtool_graphs_t139; assert_in_delta(0.5280810600712742, worksheet.webtool_graphs_t139, 0.002); end
  def test_webtool_graphs_b250; assert_equal("Type of city", worksheet.webtool_graphs_b250); end
  def test_webtool_graphs_c250; assert_equal("Technology code", worksheet.webtool_graphs_c250); end
  def test_webtool_graphs_d250; assert_equal("1975", worksheet.webtool_graphs_d250); end
  def test_webtool_graphs_e250; assert_equal("1980", worksheet.webtool_graphs_e250); end
  def test_webtool_graphs_f250; assert_equal("1985", worksheet.webtool_graphs_f250); end
  def test_webtool_graphs_g250; assert_equal("1990", worksheet.webtool_graphs_g250); end
  def test_webtool_graphs_h250; assert_equal("1995", worksheet.webtool_graphs_h250); end
  def test_webtool_graphs_i250; assert_equal("2000", worksheet.webtool_graphs_i250); end
  def test_webtool_graphs_j250; assert_equal("2005", worksheet.webtool_graphs_j250); end
  def test_webtool_graphs_k250; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k250, 0.002); end
  def test_webtool_graphs_l250; assert_equal("2011", worksheet.webtool_graphs_l250); end
  def test_webtool_graphs_m250; assert_equal("2012", worksheet.webtool_graphs_m250); end
  def test_webtool_graphs_n250; assert_equal("2013", worksheet.webtool_graphs_n250); end
  def test_webtool_graphs_o250; assert_equal("2014", worksheet.webtool_graphs_o250); end
  def test_webtool_graphs_p250; assert_equal("2015", worksheet.webtool_graphs_p250); end
  def test_webtool_graphs_q250; assert_equal("2016", worksheet.webtool_graphs_q250); end
  def test_webtool_graphs_r250; assert_equal("2017", worksheet.webtool_graphs_r250); end
  def test_webtool_graphs_s250; assert_equal("2018", worksheet.webtool_graphs_s250); end
  def test_webtool_graphs_t250; assert_equal("2019", worksheet.webtool_graphs_t250); end
  def test_webtool_graphs_b251; assert_equal("Total", worksheet.webtool_graphs_b251); end
  def test_webtool_graphs_c251; assert_equal("Historic data", worksheet.webtool_graphs_c251); end
  def test_webtool_graphs_b252; assert_equal("Total", worksheet.webtool_graphs_b252); end
  def test_webtool_graphs_c252; assert_equal("Hydrogen", worksheet.webtool_graphs_c252); end
  def test_webtool_graphs_l252; assert_in_delta(0.0, (worksheet.webtool_graphs_l252||0), 0.002); end
  def test_webtool_graphs_m252; assert_in_delta(0.0, (worksheet.webtool_graphs_m252||0), 0.002); end
  def test_webtool_graphs_n252; assert_in_delta(0.0, (worksheet.webtool_graphs_n252||0), 0.002); end
  def test_webtool_graphs_o252; assert_in_delta(0.0, (worksheet.webtool_graphs_o252||0), 0.002); end
  def test_webtool_graphs_p252; assert_in_delta(0.0, (worksheet.webtool_graphs_p252||0), 0.002); end
  def test_webtool_graphs_q252; assert_in_delta(0.0, (worksheet.webtool_graphs_q252||0), 0.002); end
  def test_webtool_graphs_r252; assert_in_delta(0.0, (worksheet.webtool_graphs_r252||0), 0.002); end
  def test_webtool_graphs_s252; assert_in_delta(0.0, (worksheet.webtool_graphs_s252||0), 0.002); end
  def test_webtool_graphs_t252; assert_in_delta(0.0, (worksheet.webtool_graphs_t252||0), 0.002); end
  def test_webtool_graphs_b253; assert_equal("Total", worksheet.webtool_graphs_b253); end
  def test_webtool_graphs_c253; assert_equal("Electric", worksheet.webtool_graphs_c253); end
  def test_webtool_graphs_l253; assert_in_epsilon(1843862.7539329836, worksheet.webtool_graphs_l253, 0.002); end
  def test_webtool_graphs_m253; assert_in_epsilon(11730069.583635401, worksheet.webtool_graphs_m253, 0.002); end
  def test_webtool_graphs_n253; assert_in_epsilon(14575450.910626655, worksheet.webtool_graphs_n253, 0.002); end
  def test_webtool_graphs_o253; assert_in_epsilon(17598407.22097186, worksheet.webtool_graphs_o253, 0.002); end
  def test_webtool_graphs_p253; assert_in_epsilon(20959184.175383262, worksheet.webtool_graphs_p253, 0.002); end
  def test_webtool_graphs_q253; assert_in_epsilon(24523469.73300957, worksheet.webtool_graphs_q253, 0.002); end
  def test_webtool_graphs_r253; assert_in_epsilon(28297553.9491689, worksheet.webtool_graphs_r253, 0.002); end
  def test_webtool_graphs_s253; assert_in_epsilon(32188368.04903021, worksheet.webtool_graphs_s253, 0.002); end
  def test_webtool_graphs_t253; assert_in_epsilon(36321199.27639881, worksheet.webtool_graphs_t253, 0.002); end
  def test_webtool_graphs_b254; assert_equal("Total", worksheet.webtool_graphs_b254); end
  def test_webtool_graphs_c254; assert_equal("ICEs", worksheet.webtool_graphs_c254); end
  def test_webtool_graphs_l254; assert_in_epsilon(846950046.366128, worksheet.webtool_graphs_l254, 0.002); end
  def test_webtool_graphs_m254; assert_in_epsilon(939426606.6206264, worksheet.webtool_graphs_m254, 0.002); end
  def test_webtool_graphs_n254; assert_in_epsilon(1062292083.599866, worksheet.webtool_graphs_n254, 0.002); end
  def test_webtool_graphs_o254; assert_in_epsilon(1175382745.1628435, worksheet.webtool_graphs_o254, 0.002); end
  def test_webtool_graphs_p254; assert_in_epsilon(1290432261.3619988, worksheet.webtool_graphs_p254, 0.002); end
  def test_webtool_graphs_q254; assert_in_epsilon(1398972750.6042855, worksheet.webtool_graphs_q254, 0.002); end
  def test_webtool_graphs_r254; assert_in_epsilon(1502328190.8897102, worksheet.webtool_graphs_r254, 0.002); end
  def test_webtool_graphs_s254; assert_in_epsilon(1596573008.0046117, worksheet.webtool_graphs_s254, 0.002); end
  def test_webtool_graphs_t254; assert_in_epsilon(1688935766.3525445, worksheet.webtool_graphs_t254, 0.002); end
  def test_webtool_graphs_b255; assert_equal("Total", worksheet.webtool_graphs_b255); end
  def test_webtool_graphs_c255; assert_equal("PHs", worksheet.webtool_graphs_c255); end
  def test_webtool_graphs_l255; assert_in_epsilon(24.055719645422165, worksheet.webtool_graphs_l255, 0.002); end
  def test_webtool_graphs_m255; assert_in_epsilon(9856570.563378038, worksheet.webtool_graphs_m255, 0.002); end
  def test_webtool_graphs_n255; assert_in_epsilon(17436740.32386621, worksheet.webtool_graphs_n255, 0.002); end
  def test_webtool_graphs_o255; assert_in_epsilon(26351908.822811596, worksheet.webtool_graphs_o255, 0.002); end
  def test_webtool_graphs_p255; assert_in_epsilon(36791081.22200162, worksheet.webtool_graphs_p255, 0.002); end
  def test_webtool_graphs_q255; assert_in_epsilon(48528296.831450075, worksheet.webtool_graphs_q255, 0.002); end
  def test_webtool_graphs_r255; assert_in_epsilon(61528309.26532103, worksheet.webtool_graphs_r255, 0.002); end
  def test_webtool_graphs_s255; assert_in_epsilon(75538575.47262326, worksheet.webtool_graphs_s255, 0.002); end
  def test_webtool_graphs_t255; assert_in_epsilon(90802998.19099703, worksheet.webtool_graphs_t255, 0.002); end
  def test_webtool_graphs_c256; assert_equal("Total cars", worksheet.webtool_graphs_c256); end
  def test_webtool_graphs_l256; assert_in_epsilon(848793933.1757805, worksheet.webtool_graphs_l256, 0.002); end
  def test_webtool_graphs_m256; assert_in_epsilon(961013246.76764, worksheet.webtool_graphs_m256, 0.002); end
  def test_webtool_graphs_n256; assert_in_epsilon(1094304274.834359, worksheet.webtool_graphs_n256, 0.002); end
  def test_webtool_graphs_o256; assert_in_epsilon(1219333061.206627, worksheet.webtool_graphs_o256, 0.002); end
  def test_webtool_graphs_p256; assert_in_epsilon(1348182526.7593837, worksheet.webtool_graphs_p256, 0.002); end
  def test_webtool_graphs_q256; assert_in_epsilon(1472024517.168745, worksheet.webtool_graphs_q256, 0.002); end
  def test_webtool_graphs_r256; assert_in_epsilon(1592154054.1042001, worksheet.webtool_graphs_r256, 0.002); end
  def test_webtool_graphs_s256; assert_in_epsilon(1704299951.5262654, worksheet.webtool_graphs_s256, 0.002); end
  def test_webtool_graphs_t256; assert_in_epsilon(1816059963.8199406, worksheet.webtool_graphs_t256, 0.002); end
  def test_webtool_graphs_b266; assert_equal("Type of city", worksheet.webtool_graphs_b266); end
  def test_webtool_graphs_c266; assert_equal("Notes", worksheet.webtool_graphs_c266); end
  def test_webtool_graphs_d266; assert_equal("1975", worksheet.webtool_graphs_d266); end
  def test_webtool_graphs_e266; assert_equal("1980", worksheet.webtool_graphs_e266); end
  def test_webtool_graphs_f266; assert_equal("1985", worksheet.webtool_graphs_f266); end
  def test_webtool_graphs_g266; assert_equal("1990", worksheet.webtool_graphs_g266); end
  def test_webtool_graphs_h266; assert_equal("1995", worksheet.webtool_graphs_h266); end
  def test_webtool_graphs_i266; assert_equal("2000", worksheet.webtool_graphs_i266); end
  def test_webtool_graphs_j266; assert_equal("2005", worksheet.webtool_graphs_j266); end
  def test_webtool_graphs_k266; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k266, 0.002); end
  def test_webtool_graphs_l266; assert_equal("2011", worksheet.webtool_graphs_l266); end
  def test_webtool_graphs_m266; assert_equal("2015", worksheet.webtool_graphs_m266); end
  def test_webtool_graphs_n266; assert_equal("2020", worksheet.webtool_graphs_n266); end
  def test_webtool_graphs_o266; assert_equal("2025", worksheet.webtool_graphs_o266); end
  def test_webtool_graphs_p266; assert_equal("2030", worksheet.webtool_graphs_p266); end
  def test_webtool_graphs_q266; assert_equal("2035", worksheet.webtool_graphs_q266); end
  def test_webtool_graphs_r266; assert_equal("2040", worksheet.webtool_graphs_r266); end
  def test_webtool_graphs_s266; assert_equal("2045", worksheet.webtool_graphs_s266); end
  def test_webtool_graphs_t266; assert_equal("2050", worksheet.webtool_graphs_t266); end
  def test_webtool_graphs_b267; assert_equal("Passenger", worksheet.webtool_graphs_b267); end
  def test_webtool_graphs_c267; assert_equal("Light road", worksheet.webtool_graphs_c267); end
  def test_webtool_graphs_j267; assert_equal("", worksheet.webtool_graphs_j267); end
  def test_webtool_graphs_l267; assert_in_epsilon(43.16580477080003, worksheet.webtool_graphs_l267, 0.002); end
  def test_webtool_graphs_m267; assert_in_epsilon(44.86003086902215, worksheet.webtool_graphs_m267, 0.002); end
  def test_webtool_graphs_n267; assert_in_epsilon(49.4564457605737, worksheet.webtool_graphs_n267, 0.002); end
  def test_webtool_graphs_o267; assert_in_epsilon(52.638957650423116, worksheet.webtool_graphs_o267, 0.002); end
  def test_webtool_graphs_p267; assert_in_epsilon(56.01176699544957, worksheet.webtool_graphs_p267, 0.002); end
  def test_webtool_graphs_q267; assert_in_epsilon(59.68786477094962, worksheet.webtool_graphs_q267, 0.002); end
  def test_webtool_graphs_r267; assert_in_epsilon(63.57931298799955, worksheet.webtool_graphs_r267, 0.002); end
  def test_webtool_graphs_s267; assert_in_epsilon(67.55216735353426, worksheet.webtool_graphs_s267, 0.002); end
  def test_webtool_graphs_t267; assert_in_epsilon(72.01382268084511, worksheet.webtool_graphs_t267, 0.002); end
  def test_webtool_graphs_b268; assert_equal("Passenger", worksheet.webtool_graphs_b268); end
  def test_webtool_graphs_c268; assert_equal("Heavy road", worksheet.webtool_graphs_c268); end
  def test_webtool_graphs_l268; assert_in_epsilon(4.7790467678844175, worksheet.webtool_graphs_l268, 0.002); end
  def test_webtool_graphs_m268; assert_in_epsilon(5.172402640660147, worksheet.webtool_graphs_m268, 0.002); end
  def test_webtool_graphs_n268; assert_in_epsilon(5.6505586194987725, worksheet.webtool_graphs_n268, 0.002); end
  def test_webtool_graphs_o268; assert_in_epsilon(5.897939196298457, worksheet.webtool_graphs_o268, 0.002); end
  def test_webtool_graphs_p268; assert_in_epsilon(6.10200159870247, worksheet.webtool_graphs_p268, 0.002); end
  def test_webtool_graphs_q268; assert_in_epsilon(6.283361370651991, worksheet.webtool_graphs_q268, 0.002); end
  def test_webtool_graphs_r268; assert_in_epsilon(6.43745315736667, worksheet.webtool_graphs_r268, 0.002); end
  def test_webtool_graphs_s268; assert_in_epsilon(6.563424291613629, worksheet.webtool_graphs_s268, 0.002); end
  def test_webtool_graphs_t268; assert_in_epsilon(6.697510237864741, worksheet.webtool_graphs_t268, 0.002); end
  def test_webtool_graphs_b269; assert_equal("Passenger", worksheet.webtool_graphs_b269); end
  def test_webtool_graphs_c269; assert_equal("Rail", worksheet.webtool_graphs_c269); end
  def test_webtool_graphs_l269; assert_in_delta(0.7574403961036694, worksheet.webtool_graphs_l269, 0.002); end
  def test_webtool_graphs_m269; assert_in_epsilon(1.0362631940722669, worksheet.webtool_graphs_m269, 0.002); end
  def test_webtool_graphs_n269; assert_in_epsilon(1.055876776708488, worksheet.webtool_graphs_n269, 0.002); end
  def test_webtool_graphs_o269; assert_in_epsilon(1.0354010878633724, worksheet.webtool_graphs_o269, 0.002); end
  def test_webtool_graphs_p269; assert_in_epsilon(1.0192389510555109, worksheet.webtool_graphs_p269, 0.002); end
  def test_webtool_graphs_q269; assert_in_delta(0.9996144159872971, worksheet.webtool_graphs_q269, 0.002); end
  def test_webtool_graphs_r269; assert_in_delta(0.9809873350679338, worksheet.webtool_graphs_r269, 0.002); end
  def test_webtool_graphs_s269; assert_in_delta(0.9595889244908175, worksheet.webtool_graphs_s269, 0.002); end
  def test_webtool_graphs_t269; assert_in_delta(0.9426375715936485, worksheet.webtool_graphs_t269, 0.002); end
  def test_webtool_graphs_b270; assert_equal("Passenger", worksheet.webtool_graphs_b270); end
  def test_webtool_graphs_c270; assert_equal("Plane", worksheet.webtool_graphs_c270); end
  def test_webtool_graphs_l270; assert_in_epsilon(11.200783672219371, worksheet.webtool_graphs_l270, 0.002); end
  def test_webtool_graphs_m270; assert_in_epsilon(11.803731380515712, worksheet.webtool_graphs_m270, 0.002); end
  def test_webtool_graphs_n270; assert_in_epsilon(12.294377416295871, worksheet.webtool_graphs_n270, 0.002); end
  def test_webtool_graphs_o270; assert_in_epsilon(12.567990128758947, worksheet.webtool_graphs_o270, 0.002); end
  def test_webtool_graphs_p270; assert_in_epsilon(13.038277938716199, worksheet.webtool_graphs_p270, 0.002); end
  def test_webtool_graphs_q270; assert_in_epsilon(13.753849594291081, worksheet.webtool_graphs_q270, 0.002); end
  def test_webtool_graphs_r270; assert_in_epsilon(14.671413829731794, worksheet.webtool_graphs_r270, 0.002); end
  def test_webtool_graphs_s270; assert_in_epsilon(15.813006909079231, worksheet.webtool_graphs_s270, 0.002); end
  def test_webtool_graphs_t270; assert_in_epsilon(17.223441487623536, worksheet.webtool_graphs_t270, 0.002); end
  def test_webtool_graphs_b271; assert_equal("Passenger", worksheet.webtool_graphs_b271); end
  def test_webtool_graphs_c271; assert_equal("Ship", worksheet.webtool_graphs_c271); end
  def test_webtool_graphs_l271; assert_in_delta(0.0, (worksheet.webtool_graphs_l271||0), 0.002); end
  def test_webtool_graphs_m271; assert_in_delta(0.0, (worksheet.webtool_graphs_m271||0), 0.002); end
  def test_webtool_graphs_n271; assert_in_delta(0.0, (worksheet.webtool_graphs_n271||0), 0.002); end
  def test_webtool_graphs_o271; assert_in_delta(0.0, (worksheet.webtool_graphs_o271||0), 0.002); end
  def test_webtool_graphs_p271; assert_in_delta(0.0, (worksheet.webtool_graphs_p271||0), 0.002); end
  def test_webtool_graphs_q271; assert_in_delta(0.0, (worksheet.webtool_graphs_q271||0), 0.002); end
  def test_webtool_graphs_r271; assert_in_delta(0.0, (worksheet.webtool_graphs_r271||0), 0.002); end
  def test_webtool_graphs_s271; assert_in_delta(0.0, (worksheet.webtool_graphs_s271||0), 0.002); end
  def test_webtool_graphs_t271; assert_in_delta(0.0, (worksheet.webtool_graphs_t271||0), 0.002); end
  def test_webtool_graphs_b272; assert_equal("Freight", worksheet.webtool_graphs_b272); end
  def test_webtool_graphs_c272; assert_equal("Light road", worksheet.webtool_graphs_c272); end
  def test_webtool_graphs_l272; assert_in_epsilon(8.268555700992671, worksheet.webtool_graphs_l272, 0.002); end
  def test_webtool_graphs_m272; assert_in_epsilon(9.018862594875108, worksheet.webtool_graphs_m272, 0.002); end
  def test_webtool_graphs_n272; assert_in_epsilon(10.418622206701487, worksheet.webtool_graphs_n272, 0.002); end
  def test_webtool_graphs_o272; assert_in_epsilon(11.728043364730372, worksheet.webtool_graphs_o272, 0.002); end
  def test_webtool_graphs_p272; assert_in_epsilon(12.582573821057586, worksheet.webtool_graphs_p272, 0.002); end
  def test_webtool_graphs_q272; assert_in_epsilon(13.120601467845423, worksheet.webtool_graphs_q272, 0.002); end
  def test_webtool_graphs_r272; assert_in_epsilon(13.329950536355385, worksheet.webtool_graphs_r272, 0.002); end
  def test_webtool_graphs_s272; assert_in_epsilon(13.372431446333795, worksheet.webtool_graphs_s272, 0.002); end
  def test_webtool_graphs_t272; assert_in_epsilon(13.253460616372328, worksheet.webtool_graphs_t272, 0.002); end
  def test_webtool_graphs_b273; assert_equal("Freight", worksheet.webtool_graphs_b273); end
  def test_webtool_graphs_c273; assert_equal("Heavy road", worksheet.webtool_graphs_c273); end
  def test_webtool_graphs_l273; assert_in_epsilon(20.117802797248675, worksheet.webtool_graphs_l273, 0.002); end
  def test_webtool_graphs_m273; assert_in_epsilon(22.156129529990302, worksheet.webtool_graphs_m273, 0.002); end
  def test_webtool_graphs_n273; assert_in_epsilon(25.253870204087942, worksheet.webtool_graphs_n273, 0.002); end
  def test_webtool_graphs_o273; assert_in_epsilon(28.246684340618213, worksheet.webtool_graphs_o273, 0.002); end
  def test_webtool_graphs_p273; assert_in_epsilon(30.325970377398523, worksheet.webtool_graphs_p273, 0.002); end
  def test_webtool_graphs_q273; assert_in_epsilon(31.245393419766664, worksheet.webtool_graphs_q273, 0.002); end
  def test_webtool_graphs_r273; assert_in_epsilon(31.386255055821216, worksheet.webtool_graphs_r273, 0.002); end
  def test_webtool_graphs_s273; assert_in_epsilon(31.228709815453815, worksheet.webtool_graphs_s273, 0.002); end
  def test_webtool_graphs_t273; assert_in_epsilon(30.63809952155225, worksheet.webtool_graphs_t273, 0.002); end
  def test_webtool_graphs_b274; assert_equal("Freight", worksheet.webtool_graphs_b274); end
  def test_webtool_graphs_c274; assert_equal("Rail", worksheet.webtool_graphs_c274); end
  def test_webtool_graphs_l274; assert_in_epsilon(1.8915190729369558, worksheet.webtool_graphs_l274, 0.002); end
  def test_webtool_graphs_m274; assert_in_epsilon(2.008035739777773, worksheet.webtool_graphs_m274, 0.002); end
  def test_webtool_graphs_n274; assert_in_epsilon(2.2316998827891483, worksheet.webtool_graphs_n274, 0.002); end
  def test_webtool_graphs_o274; assert_in_epsilon(2.4242059721078286, worksheet.webtool_graphs_o274, 0.002); end
  def test_webtool_graphs_p274; assert_in_epsilon(2.5173417956884077, worksheet.webtool_graphs_p274, 0.002); end
  def test_webtool_graphs_q274; assert_in_epsilon(2.534112665121823, worksheet.webtool_graphs_q274, 0.002); end
  def test_webtool_graphs_r274; assert_in_epsilon(2.487897652502629, worksheet.webtool_graphs_r274, 0.002); end
  def test_webtool_graphs_s274; assert_in_epsilon(2.4157346718013475, worksheet.webtool_graphs_s274, 0.002); end
  def test_webtool_graphs_t274; assert_in_epsilon(2.317860093709185, worksheet.webtool_graphs_t274, 0.002); end
  def test_webtool_graphs_b275; assert_equal("Freight", worksheet.webtool_graphs_b275); end
  def test_webtool_graphs_c275; assert_equal("Plane", worksheet.webtool_graphs_c275); end
  def test_webtool_graphs_l275; assert_in_delta(0.6868555598518657, worksheet.webtool_graphs_l275, 0.002); end
  def test_webtool_graphs_m275; assert_in_delta(0.7614456715585979, worksheet.webtool_graphs_m275, 0.002); end
  def test_webtool_graphs_n275; assert_in_delta(0.8737995875819948, worksheet.webtool_graphs_n275, 0.002); end
  def test_webtool_graphs_o275; assert_in_delta(0.9997841009272522, worksheet.webtool_graphs_o275, 0.002); end
  def test_webtool_graphs_p275; assert_in_epsilon(1.1158959443485532, worksheet.webtool_graphs_p275, 0.002); end
  def test_webtool_graphs_q275; assert_in_epsilon(1.1564808679036513, worksheet.webtool_graphs_q275, 0.002); end
  def test_webtool_graphs_r275; assert_in_epsilon(1.1686506202776068, worksheet.webtool_graphs_r275, 0.002); end
  def test_webtool_graphs_s275; assert_in_epsilon(1.1775021860941348, worksheet.webtool_graphs_s275, 0.002); end
  def test_webtool_graphs_t275; assert_in_epsilon(1.1625117109887613, worksheet.webtool_graphs_t275, 0.002); end
  def test_webtool_graphs_b276; assert_equal("Freight", worksheet.webtool_graphs_b276); end
  def test_webtool_graphs_c276; assert_equal("Ship", worksheet.webtool_graphs_c276); end
  def test_webtool_graphs_l276; assert_in_epsilon(9.498632856887696, worksheet.webtool_graphs_l276, 0.002); end
  def test_webtool_graphs_m276; assert_in_epsilon(10.496828748247585, worksheet.webtool_graphs_m276, 0.002); end
  def test_webtool_graphs_n276; assert_in_epsilon(11.878677131833642, worksheet.webtool_graphs_n276, 0.002); end
  def test_webtool_graphs_o276; assert_in_epsilon(13.399716202800555, worksheet.webtool_graphs_o276, 0.002); end
  def test_webtool_graphs_p276; assert_in_epsilon(14.743563478139112, worksheet.webtool_graphs_p276, 0.002); end
  def test_webtool_graphs_q276; assert_in_epsilon(15.093568838862375, worksheet.webtool_graphs_q276, 0.002); end
  def test_webtool_graphs_r276; assert_in_epsilon(15.07330452563907, worksheet.webtool_graphs_r276, 0.002); end
  def test_webtool_graphs_s276; assert_in_epsilon(15.012147520072642, worksheet.webtool_graphs_s276, 0.002); end
  def test_webtool_graphs_t276; assert_in_epsilon(14.659622638639128, worksheet.webtool_graphs_t276, 0.002); end
  def test_webtool_graphs_c277; assert_equal("TOTAL", worksheet.webtool_graphs_c277); end
  def test_webtool_graphs_l277; assert_in_epsilon(100.36644159492535, worksheet.webtool_graphs_l277, 0.002); end
  def test_webtool_graphs_m277; assert_in_epsilon(107.31373036871963, worksheet.webtool_graphs_m277, 0.002); end
  def test_webtool_graphs_n277; assert_in_epsilon(119.11392758607104, worksheet.webtool_graphs_n277, 0.002); end
  def test_webtool_graphs_o277; assert_in_epsilon(128.9387220445281, worksheet.webtool_graphs_o277, 0.002); end
  def test_webtool_graphs_p277; assert_in_epsilon(137.45663090055595, worksheet.webtool_graphs_p277, 0.002); end
  def test_webtool_graphs_q277; assert_in_epsilon(143.87484741137993, worksheet.webtool_graphs_q277, 0.002); end
  def test_webtool_graphs_r277; assert_in_epsilon(149.11522570076184, worksheet.webtool_graphs_r277, 0.002); end
  def test_webtool_graphs_s277; assert_in_epsilon(154.09471311847366, worksheet.webtool_graphs_s277, 0.002); end
  def test_webtool_graphs_t277; assert_in_epsilon(158.90896655918866, worksheet.webtool_graphs_t277, 0.002); end
  def test_webtool_graphs_b286; assert_equal("Energy description", worksheet.webtool_graphs_b286); end
  def test_webtool_graphs_c286; assert_equal(".", worksheet.webtool_graphs_c286); end
  def test_webtool_graphs_d286; assert_equal("1975", worksheet.webtool_graphs_d286); end
  def test_webtool_graphs_e286; assert_equal("1980", worksheet.webtool_graphs_e286); end
  def test_webtool_graphs_f286; assert_equal("1985", worksheet.webtool_graphs_f286); end
  def test_webtool_graphs_g286; assert_equal("1990", worksheet.webtool_graphs_g286); end
  def test_webtool_graphs_h286; assert_equal("1995", worksheet.webtool_graphs_h286); end
  def test_webtool_graphs_i286; assert_equal("2000", worksheet.webtool_graphs_i286); end
  def test_webtool_graphs_j286; assert_equal("2005", worksheet.webtool_graphs_j286); end
  def test_webtool_graphs_k286; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k286, 0.002); end
  def test_webtool_graphs_l286; assert_equal("2011", worksheet.webtool_graphs_l286); end
  def test_webtool_graphs_m286; assert_equal("2015", worksheet.webtool_graphs_m286); end
  def test_webtool_graphs_n286; assert_equal("2020", worksheet.webtool_graphs_n286); end
  def test_webtool_graphs_o286; assert_equal("2025", worksheet.webtool_graphs_o286); end
  def test_webtool_graphs_p286; assert_equal("2030", worksheet.webtool_graphs_p286); end
  def test_webtool_graphs_q286; assert_equal("2035", worksheet.webtool_graphs_q286); end
  def test_webtool_graphs_r286; assert_equal("2040", worksheet.webtool_graphs_r286); end
  def test_webtool_graphs_s286; assert_equal("2045", worksheet.webtool_graphs_s286); end
  def test_webtool_graphs_t286; assert_equal("2050", worksheet.webtool_graphs_t286); end
  def test_webtool_graphs_b287; assert_equal("Global Liquid hydrocarbons", worksheet.webtool_graphs_b287); end
  def test_webtool_graphs_j287; assert_equal("", worksheet.webtool_graphs_j287); end
  def test_webtool_graphs_l287; assert_in_epsilon(98.39193426009439, worksheet.webtool_graphs_l287, 0.002); end
  def test_webtool_graphs_m287; assert_in_epsilon(103.85856672439022, worksheet.webtool_graphs_m287, 0.002); end
  def test_webtool_graphs_n287; assert_in_epsilon(114.71142578329119, worksheet.webtool_graphs_n287, 0.002); end
  def test_webtool_graphs_o287; assert_in_epsilon(123.5331112630968, worksheet.webtool_graphs_o287, 0.002); end
  def test_webtool_graphs_p287; assert_in_epsilon(131.03952627484628, worksheet.webtool_graphs_p287, 0.002); end
  def test_webtool_graphs_q287; assert_in_epsilon(136.46720775712245, worksheet.webtool_graphs_q287, 0.002); end
  def test_webtool_graphs_r287; assert_in_epsilon(140.72884293589868, worksheet.webtool_graphs_r287, 0.002); end
  def test_webtool_graphs_s287; assert_in_epsilon(144.7221613610436, worksheet.webtool_graphs_s287, 0.002); end
  def test_webtool_graphs_t287; assert_in_epsilon(148.5362205496292, worksheet.webtool_graphs_t287, 0.002); end
  def test_webtool_graphs_b288; assert_equal("Global Electricity (delivered to end user)", worksheet.webtool_graphs_b288); end
  def test_webtool_graphs_l288; assert_in_epsilon(1.6273077307043442, worksheet.webtool_graphs_l288, 0.002); end
  def test_webtool_graphs_m288; assert_in_epsilon(2.507990817822011, worksheet.webtool_graphs_m288, 0.002); end
  def test_webtool_graphs_n288; assert_in_epsilon(3.0861670924285844, worksheet.webtool_graphs_n288, 0.002); end
  def test_webtool_graphs_o288; assert_in_epsilon(3.6851385774225873, worksheet.webtool_graphs_o288, 0.002); end
  def test_webtool_graphs_p288; assert_in_epsilon(4.282454553395991, worksheet.webtool_graphs_p288, 0.002); end
  def test_webtool_graphs_q288; assert_in_epsilon(4.866759534158247, worksheet.webtool_graphs_q288, 0.002); end
  def test_webtool_graphs_r288; assert_in_epsilon(5.455214613686766, worksheet.webtool_graphs_r288, 0.002); end
  def test_webtool_graphs_s288; assert_in_epsilon(6.056752590712628, worksheet.webtool_graphs_s288, 0.002); end
  def test_webtool_graphs_t288; assert_in_epsilon(6.683329962992672, worksheet.webtool_graphs_t288, 0.002); end
  def test_webtool_graphs_b289; assert_equal("Global Gaseous hydrocarbons", worksheet.webtool_graphs_b289); end
  def test_webtool_graphs_l289; assert_in_delta(0.34719953575088347, worksheet.webtool_graphs_l289, 0.002); end
  def test_webtool_graphs_m289; assert_in_delta(0.7883292217013735, worksheet.webtool_graphs_m289, 0.002); end
  def test_webtool_graphs_n289; assert_in_epsilon(1.1587097007214104, worksheet.webtool_graphs_n289, 0.002); end
  def test_webtool_graphs_o289; assert_in_epsilon(1.571282097695053, worksheet.webtool_graphs_o289, 0.002); end
  def test_webtool_graphs_p289; assert_in_epsilon(2.0068267705883334, worksheet.webtool_graphs_p289, 0.002); end
  def test_webtool_graphs_q289; assert_in_epsilon(2.4415620807931178, worksheet.webtool_graphs_q289, 0.002); end
  def test_webtool_graphs_r289; assert_in_epsilon(2.863579460680197, worksheet.webtool_graphs_r289, 0.002); end
  def test_webtool_graphs_s289; assert_in_epsilon(3.281432792399711, worksheet.webtool_graphs_s289, 0.002); end
  def test_webtool_graphs_t289; assert_in_epsilon(3.6894160465668127, worksheet.webtool_graphs_t289, 0.002); end
  def test_webtool_graphs_b290; assert_equal("Global H2", worksheet.webtool_graphs_b290); end
  def test_webtool_graphs_l290; assert_in_delta(6.837572495941478e-08, worksheet.webtool_graphs_l290, 0.002); end
  def test_webtool_graphs_m290; assert_in_delta(0.15884360480604995, worksheet.webtool_graphs_m290, 0.002); end
  def test_webtool_graphs_n290; assert_in_delta(0.15762500962982265, worksheet.webtool_graphs_n290, 0.002); end
  def test_webtool_graphs_o290; assert_in_delta(0.14919010631367216, worksheet.webtool_graphs_o290, 0.002); end
  def test_webtool_graphs_p290; assert_in_delta(0.127823301725339, worksheet.webtool_graphs_p290, 0.002); end
  def test_webtool_graphs_q290; assert_in_delta(0.09931803930611245, worksheet.webtool_graphs_q290, 0.002); end
  def test_webtool_graphs_r290; assert_in_delta(0.06758869049620075, worksheet.webtool_graphs_r290, 0.002); end
  def test_webtool_graphs_s290; assert_in_delta(0.034366374317751046, worksheet.webtool_graphs_s290, 0.002); end
  def test_webtool_graphs_t290; assert_in_delta(0.0, (worksheet.webtool_graphs_t290||0), 0.002); end
  def test_webtool_graphs_b291; assert_equal("TOTAL", worksheet.webtool_graphs_b291); end
  def test_webtool_graphs_l291; assert_in_epsilon(100.36644159492535, worksheet.webtool_graphs_l291, 0.002); end
  def test_webtool_graphs_m291; assert_in_epsilon(107.31373036871965, worksheet.webtool_graphs_m291, 0.002); end
  def test_webtool_graphs_n291; assert_in_epsilon(119.11392758607101, worksheet.webtool_graphs_n291, 0.002); end
  def test_webtool_graphs_o291; assert_in_epsilon(128.93872204452813, worksheet.webtool_graphs_o291, 0.002); end
  def test_webtool_graphs_p291; assert_in_epsilon(137.45663090055592, worksheet.webtool_graphs_p291, 0.002); end
  def test_webtool_graphs_q291; assert_in_epsilon(143.87484741137993, worksheet.webtool_graphs_q291, 0.002); end
  def test_webtool_graphs_r291; assert_in_epsilon(149.11522570076184, worksheet.webtool_graphs_r291, 0.002); end
  def test_webtool_graphs_s291; assert_in_epsilon(154.09471311847366, worksheet.webtool_graphs_s291, 0.002); end
  def test_webtool_graphs_t291; assert_in_epsilon(158.90896655918868, worksheet.webtool_graphs_t291, 0.002); end
  def test_outputs_summary_table_d190; assert_equal("Unit", worksheet.outputs_summary_table_d190); end
  def test_outputs_summary_table_e190; assert_equal("2011", worksheet.outputs_summary_table_e190); end
  def test_outputs_summary_table_f190; assert_equal("2050", worksheet.outputs_summary_table_f190); end
  def test_outputs_summary_table_g190; assert_equal("% increase", worksheet.outputs_summary_table_g190); end
  def test_outputs_summary_table_c192; assert_equal("Petrol/diesel fueled cars", worksheet.outputs_summary_table_c192); end
  def test_outputs_summary_table_d192; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d192); end
  def test_outputs_summary_table_e192; assert_equal("846,950,046", worksheet.outputs_summary_table_e192); end
  def test_outputs_summary_table_f192; assert_equal("1,688,935,766", worksheet.outputs_summary_table_f192); end
  def test_outputs_summary_table_g192; assert_equal("99%", worksheet.outputs_summary_table_g192); end
  def test_outputs_summary_table_c193; assert_equal("Hybrids", worksheet.outputs_summary_table_c193); end
  def test_outputs_summary_table_d193; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d193); end
  def test_outputs_summary_table_e193; assert_equal("24", worksheet.outputs_summary_table_e193); end
  def test_outputs_summary_table_f193; assert_equal("90,802,998", worksheet.outputs_summary_table_f193); end
  def test_outputs_summary_table_g193; assert_equal("377469373%", worksheet.outputs_summary_table_g193); end
  def test_outputs_summary_table_c194; assert_equal("Electric vehicles", worksheet.outputs_summary_table_c194); end
  def test_outputs_summary_table_d194; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d194); end
  def test_outputs_summary_table_e194; assert_equal("1,843,863", worksheet.outputs_summary_table_e194); end
  def test_outputs_summary_table_f194; assert_equal("36,321,199", worksheet.outputs_summary_table_f194); end
  def test_outputs_summary_table_g194; assert_equal("1870%", worksheet.outputs_summary_table_g194); end
  def test_outputs_summary_table_c195; assert_equal("Hydrogen", worksheet.outputs_summary_table_c195); end
  def test_outputs_summary_table_d195; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d195); end
  def test_outputs_summary_table_e195; assert_equal("0", worksheet.outputs_summary_table_e195); end
  def test_outputs_summary_table_f195; assert_equal("0", worksheet.outputs_summary_table_f195); end
  def test_outputs_summary_table_g195; assert_equal("", worksheet.outputs_summary_table_g195); end
  def test_outputs_summary_table_c5; assert_equal("Supertable", worksheet.outputs_summary_table_c5); end
  def test_outputs_summary_table_d5; assert_equal("webtool.supertable", worksheet.outputs_summary_table_d5); end
  def test_outputs_summary_table_e5; assert_equal("Formatted numbers", worksheet.outputs_summary_table_e5); end
  def test_outputs_summary_table_f6; assert_equal("User’s pathway", worksheet.outputs_summary_table_f6); end
  def test_outputs_summary_table_g6; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g6); end
  def test_outputs_summary_table_c7; assert_equal("Name", worksheet.outputs_summary_table_c7); end
  def test_outputs_summary_table_d7; assert_equal("Unit", worksheet.outputs_summary_table_d7); end
  def test_outputs_summary_table_e7; assert_equal("2011", worksheet.outputs_summary_table_e7); end
  def test_outputs_summary_table_f7; assert_equal("2050", worksheet.outputs_summary_table_f7); end
  def test_outputs_summary_table_g7; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g7); end
  def test_outputs_summary_table_b8; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b8); end
  def test_outputs_summary_table_c8; assert_equal("GHG emissions (t CO2e) per capita", worksheet.outputs_summary_table_c8); end
  def test_outputs_summary_table_d8; assert_equal("t CO2e / capita", worksheet.outputs_summary_table_d8); end
  def test_outputs_summary_table_e8; assert_equal("6.3", worksheet.outputs_summary_table_e8); end
  def test_outputs_summary_table_f8; assert_equal("6.9", worksheet.outputs_summary_table_f8); end
  def test_outputs_summary_table_g8; assert_equal("10%", worksheet.outputs_summary_table_g8); end
  def test_outputs_summary_table_c9; assert_equal("Cumulative emissions by 2100 (Gt CO2e)", worksheet.outputs_summary_table_c9); end
  def test_outputs_summary_table_d9; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d9); end
  def test_outputs_summary_table_e9; assert_equal("6,329", worksheet.outputs_summary_table_e9); end
  def test_outputs_summary_table_c10; assert_equal("Temperature change in 2100 (⁰C)", worksheet.outputs_summary_table_c10); end
  def test_outputs_summary_table_d10; assert_equal("⁰C", worksheet.outputs_summary_table_d10); end
  def test_outputs_summary_table_e10; assert_equal("1.8⁰C to 5.6⁰C higher", worksheet.outputs_summary_table_e10); end
  def test_outputs_summary_table_b12; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b12); end
  def test_outputs_summary_table_c12; assert_equal("Population (billions of people)", worksheet.outputs_summary_table_c12); end
  def test_outputs_summary_table_d12; assert_equal("billions of people", worksheet.outputs_summary_table_d12); end
  def test_outputs_summary_table_e12; assert_equal("7.0", worksheet.outputs_summary_table_e12); end
  def test_outputs_summary_table_f12; assert_equal("9.6", worksheet.outputs_summary_table_f12); end
  def test_outputs_summary_table_g12; assert_equal("37%", worksheet.outputs_summary_table_g12); end
  def test_outputs_summary_table_c13; assert_equal("% population in urban areas", worksheet.outputs_summary_table_c13); end
  def test_outputs_summary_table_d13; assert_equal("%", worksheet.outputs_summary_table_d13); end
  def test_outputs_summary_table_e13; assert_equal("52.1%", worksheet.outputs_summary_table_e13); end
  def test_outputs_summary_table_f13; assert_equal("66.4%", worksheet.outputs_summary_table_f13); end
  def test_outputs_summary_table_g13; assert_equal("27%", worksheet.outputs_summary_table_g13); end
  def test_outputs_summary_table_b15; assert_equal("Energy", worksheet.outputs_summary_table_b15); end
  def test_outputs_summary_table_c15; assert_equal("Total energy supply (EJ / year)", worksheet.outputs_summary_table_c15); end
  def test_outputs_summary_table_d15; assert_equal("EJ / year", worksheet.outputs_summary_table_d15); end
  def test_outputs_summary_table_e15; assert_equal("581", worksheet.outputs_summary_table_e15); end
  def test_outputs_summary_table_f15; assert_equal("972", worksheet.outputs_summary_table_f15); end
  def test_outputs_summary_table_g15; assert_equal("67%", worksheet.outputs_summary_table_g15); end
  def test_outputs_summary_table_c16; assert_equal("Total energy supply (EJ / year)", worksheet.outputs_summary_table_c16); end
  def test_outputs_summary_table_d16; assert_equal("EJ / year", worksheet.outputs_summary_table_d16); end
  def test_outputs_summary_table_e16; assert_equal("372", worksheet.outputs_summary_table_e16); end
  def test_outputs_summary_table_f16; assert_equal("611", worksheet.outputs_summary_table_f16); end
  def test_outputs_summary_table_g16; assert_equal("64%", worksheet.outputs_summary_table_g16); end
  def test_outputs_summary_table_c17; assert_equal("Energy demand (kWh / capita)", worksheet.outputs_summary_table_c17); end
  def test_outputs_summary_table_d17; assert_equal("kWh / capita", worksheet.outputs_summary_table_d17); end
  def test_outputs_summary_table_e17; assert_equal("14,850", worksheet.outputs_summary_table_e17); end
  def test_outputs_summary_table_f17; assert_equal("17,773", worksheet.outputs_summary_table_f17); end
  def test_outputs_summary_table_g17; assert_equal("20%", worksheet.outputs_summary_table_g17); end
  def test_outputs_summary_table_c18; assert_equal("Proportion of primary energy from fossil fuels ", worksheet.outputs_summary_table_c18); end
  def test_outputs_summary_table_d18; assert_equal("%", worksheet.outputs_summary_table_d18); end
  def test_outputs_summary_table_e18; assert_equal("81.5%", worksheet.outputs_summary_table_e18); end
  def test_outputs_summary_table_f18; assert_equal("82.6%", worksheet.outputs_summary_table_f18); end
  def test_outputs_summary_table_g18; assert_equal("1%", worksheet.outputs_summary_table_g18); end
  def test_outputs_summary_table_c19; assert_equal("Bioenergy supply (EJ / year)", worksheet.outputs_summary_table_c19); end
  def test_outputs_summary_table_d19; assert_equal("EJ / year", worksheet.outputs_summary_table_d19); end
  def test_outputs_summary_table_e19; assert_equal("57.3", worksheet.outputs_summary_table_e19); end
  def test_outputs_summary_table_f19; assert_equal("66.5", worksheet.outputs_summary_table_f19); end
  def test_outputs_summary_table_g19; assert_equal("16%", worksheet.outputs_summary_table_g19); end
  def test_outputs_summary_table_c20; assert_equal("% of oil reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c20); end
  def test_outputs_summary_table_d20; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d20); end
  def test_outputs_summary_table_e20; assert_equal("100%", worksheet.outputs_summary_table_e20); end
  def test_outputs_summary_table_f20; assert_equal("12% to 22%", worksheet.outputs_summary_table_f20); end
  def test_outputs_summary_table_c21; assert_equal("% of gas reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c21); end
  def test_outputs_summary_table_d21; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d21); end
  def test_outputs_summary_table_e21; assert_equal("100%", worksheet.outputs_summary_table_e21); end
  def test_outputs_summary_table_f21; assert_equal("28% to 30%", worksheet.outputs_summary_table_f21); end
  def test_outputs_summary_table_c22; assert_equal("% of coal reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c22); end
  def test_outputs_summary_table_d22; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d22); end
  def test_outputs_summary_table_e22; assert_equal("100%", worksheet.outputs_summary_table_e22); end
  def test_outputs_summary_table_f22; assert_equal("67% to 70%", worksheet.outputs_summary_table_f22); end
  def test_outputs_summary_table_b24; assert_equal("Electricity", worksheet.outputs_summary_table_b24); end
  def test_outputs_summary_table_c24; assert_equal("Electricity demand (kWh / capita)", worksheet.outputs_summary_table_c24); end
  def test_outputs_summary_table_d24; assert_equal("kWh / capita", worksheet.outputs_summary_table_d24); end
  def test_outputs_summary_table_e24; assert_equal("2,857", worksheet.outputs_summary_table_e24); end
  def test_outputs_summary_table_f24; assert_equal("4,293", worksheet.outputs_summary_table_f24); end
  def test_outputs_summary_table_g24; assert_equal("50%", worksheet.outputs_summary_table_g24); end
  def test_outputs_summary_table_c25; assert_equal("Wind capacity (GW)", worksheet.outputs_summary_table_c25); end
  def test_outputs_summary_table_d25; assert_equal("GW", worksheet.outputs_summary_table_d25); end
  def test_outputs_summary_table_e25; assert_equal("238", worksheet.outputs_summary_table_e25); end
  def test_outputs_summary_table_f25; assert_equal("463", worksheet.outputs_summary_table_f25); end
  def test_outputs_summary_table_g25; assert_equal("95%", worksheet.outputs_summary_table_g25); end
  def test_outputs_summary_table_c26; assert_equal("Solar capacity (GW)", worksheet.outputs_summary_table_c26); end
  def test_outputs_summary_table_d26; assert_equal("GW", worksheet.outputs_summary_table_d26); end
  def test_outputs_summary_table_e26; assert_equal("71", worksheet.outputs_summary_table_e26); end
  def test_outputs_summary_table_f26; assert_equal("441", worksheet.outputs_summary_table_f26); end
  def test_outputs_summary_table_g26; assert_equal("518%", worksheet.outputs_summary_table_g26); end
  def test_outputs_summary_table_c27; assert_equal("Nuclear capacity (GW)", worksheet.outputs_summary_table_c27); end
  def test_outputs_summary_table_d27; assert_equal("GW", worksheet.outputs_summary_table_d27); end
  def test_outputs_summary_table_e27; assert_equal("364", worksheet.outputs_summary_table_e27); end
  def test_outputs_summary_table_f27; assert_equal("480", worksheet.outputs_summary_table_f27); end
  def test_outputs_summary_table_g27; assert_equal("32%", worksheet.outputs_summary_table_g27); end
  def test_outputs_summary_table_c28; assert_equal("Hydro-electric capacity (GW)", worksheet.outputs_summary_table_c28); end
  def test_outputs_summary_table_d28; assert_equal("GW", worksheet.outputs_summary_table_d28); end
  def test_outputs_summary_table_e28; assert_equal("970", worksheet.outputs_summary_table_e28); end
  def test_outputs_summary_table_f28; assert_equal("1,694", worksheet.outputs_summary_table_f28); end
  def test_outputs_summary_table_g28; assert_equal("75%", worksheet.outputs_summary_table_g28); end
  def test_outputs_summary_table_c29; assert_equal("CCS for power (GW)", worksheet.outputs_summary_table_c29); end
  def test_outputs_summary_table_d29; assert_equal("GW", worksheet.outputs_summary_table_d29); end
  def test_outputs_summary_table_e29; assert_equal("0", worksheet.outputs_summary_table_e29); end
  def test_outputs_summary_table_f29; assert_equal("16", worksheet.outputs_summary_table_f29); end
  def test_outputs_summary_table_g29; assert_equal("", worksheet.outputs_summary_table_g29); end
  def test_outputs_summary_table_c30; assert_equal("Unabated fossil fuel capacity (GW)", worksheet.outputs_summary_table_c30); end
  def test_outputs_summary_table_d30; assert_equal("GW", worksheet.outputs_summary_table_d30); end
  def test_outputs_summary_table_e30; assert_equal("3,705", worksheet.outputs_summary_table_e30); end
  def test_outputs_summary_table_f30; assert_equal("17,804", worksheet.outputs_summary_table_f30); end
  def test_outputs_summary_table_g30; assert_equal("381%", worksheet.outputs_summary_table_g30); end
  def test_outputs_summary_table_c31; assert_equal("Storage capacity (GW)", worksheet.outputs_summary_table_c31); end
  def test_outputs_summary_table_d31; assert_equal("GW", worksheet.outputs_summary_table_d31); end
  def test_outputs_summary_table_e31; assert_equal("120", worksheet.outputs_summary_table_e31); end
  def test_outputs_summary_table_f31; assert_equal("328", worksheet.outputs_summary_table_f31); end
  def test_outputs_summary_table_g31; assert_equal("173%", worksheet.outputs_summary_table_g31); end
  def test_outputs_summary_table_c32; assert_equal("Efficiency of unabated fossil fuel power generation", worksheet.outputs_summary_table_c32); end
  def test_outputs_summary_table_d32; assert_equal("% efficiency", worksheet.outputs_summary_table_d32); end
  def test_outputs_summary_table_e32; assert_equal("39%", worksheet.outputs_summary_table_e32); end
  def test_outputs_summary_table_f32; assert_equal("41%", worksheet.outputs_summary_table_f32); end
  def test_outputs_summary_table_g32; assert_equal("5%", worksheet.outputs_summary_table_g32); end
  def test_outputs_summary_table_c33; assert_equal("Efficiency of CCS fossil fuel power generation", worksheet.outputs_summary_table_c33); end
  def test_outputs_summary_table_d33; assert_equal("% efficiency", worksheet.outputs_summary_table_d33); end
  def test_outputs_summary_table_e33; assert_equal("n / a", worksheet.outputs_summary_table_e33); end
  def test_outputs_summary_table_f33; assert_equal("45%", worksheet.outputs_summary_table_f33); end
  def test_outputs_summary_table_g33; assert_equal("", worksheet.outputs_summary_table_g33); end
  def test_outputs_summary_table_c34; assert_equal("Emissions intensity (global average g CO2e / kWh)", worksheet.outputs_summary_table_c34); end
  def test_outputs_summary_table_d34; assert_equal("g CO2e / kWh", worksheet.outputs_summary_table_d34); end
  def test_outputs_summary_table_e34; assert_equal("531", worksheet.outputs_summary_table_e34); end
  def test_outputs_summary_table_f34; assert_equal("443", worksheet.outputs_summary_table_f34); end
  def test_outputs_summary_table_g34; assert_equal("-17%", worksheet.outputs_summary_table_g34); end
  def test_outputs_summary_table_b37; assert_equal("Transport", worksheet.outputs_summary_table_b37); end
  def test_outputs_summary_table_c37; assert_equal("Number of passenger vehicles on the road (thousands)", worksheet.outputs_summary_table_c37); end
  def test_outputs_summary_table_d37; assert_equal("000's", worksheet.outputs_summary_table_d37); end
  def test_outputs_summary_table_e37; assert_equal("1,471,639", worksheet.outputs_summary_table_e37); end
  def test_outputs_summary_table_f37; assert_equal("3,153,377", worksheet.outputs_summary_table_f37); end
  def test_outputs_summary_table_g37; assert_equal("114%", worksheet.outputs_summary_table_g37); end
  def test_outputs_summary_table_c38; assert_equal("% urban cars that are zero emission (electric/hydrogen)", worksheet.outputs_summary_table_c38); end
  def test_outputs_summary_table_d38; assert_equal("% of urban cars", worksheet.outputs_summary_table_d38); end
  def test_outputs_summary_table_e38; assert_equal("0.2%", worksheet.outputs_summary_table_e38); end
  def test_outputs_summary_table_f38; assert_equal("2.0%", worksheet.outputs_summary_table_f38); end
  def test_outputs_summary_table_g38; assert_equal("821%", worksheet.outputs_summary_table_g38); end
  def test_outputs_summary_table_c39; assert_equal("Efficiency of urban ICE cars (lge per 100km)", worksheet.outputs_summary_table_c39); end
  def test_outputs_summary_table_d39; assert_equal("lge per 100km", worksheet.outputs_summary_table_d39); end
  def test_outputs_summary_table_e39; assert_equal("8.6", worksheet.outputs_summary_table_e39); end
  def test_outputs_summary_table_f39; assert_equal("5.5", worksheet.outputs_summary_table_f39); end
  def test_outputs_summary_table_g39; assert_equal("-36%", worksheet.outputs_summary_table_g39); end
  def test_outputs_summary_table_c40; assert_equal("Total passenger vehicle km travelled per capita", worksheet.outputs_summary_table_c40); end
  def test_outputs_summary_table_d40; assert_equal("Passenger km / capita", worksheet.outputs_summary_table_d40); end
  def test_outputs_summary_table_e40; assert_equal("7,495", worksheet.outputs_summary_table_e40); end
  def test_outputs_summary_table_f40; assert_equal("11,247", worksheet.outputs_summary_table_f40); end
  def test_outputs_summary_table_g40; assert_equal("50%", worksheet.outputs_summary_table_g40); end
  def test_outputs_summary_table_c41; assert_equal("% of passenger km travelled using cars (excludes international & plane travel)", worksheet.outputs_summary_table_c41); end
  def test_outputs_summary_table_d41; assert_equal("% of total passenger km", worksheet.outputs_summary_table_d41); end
  def test_outputs_summary_table_e41; assert_equal("41.6%", worksheet.outputs_summary_table_e41); end
  def test_outputs_summary_table_f41; assert_equal("53.1%", worksheet.outputs_summary_table_f41); end
  def test_outputs_summary_table_g41; assert_equal("28%", worksheet.outputs_summary_table_g41); end
  def test_outputs_summary_table_c42; assert_equal("Distance travelled per person by air (global average)", worksheet.outputs_summary_table_c42); end
  def test_outputs_summary_table_d42; assert_equal("average km per year / capita", worksheet.outputs_summary_table_d42); end
  def test_outputs_summary_table_e42; assert_equal("766", worksheet.outputs_summary_table_e42); end
  def test_outputs_summary_table_f42; assert_equal("1,447", worksheet.outputs_summary_table_f42); end
  def test_outputs_summary_table_g42; assert_equal("89%", worksheet.outputs_summary_table_g42); end
  def test_outputs_summary_table_c43; assert_equal("Domestic freight (Tonne km / capita)", worksheet.outputs_summary_table_c43); end
  def test_outputs_summary_table_d43; assert_equal("Tonne km / capita", worksheet.outputs_summary_table_d43); end
  def test_outputs_summary_table_e43; assert_equal("2,647", worksheet.outputs_summary_table_e43); end
  def test_outputs_summary_table_f43; assert_equal("3,447", worksheet.outputs_summary_table_f43); end
  def test_outputs_summary_table_g43; assert_equal("30%", worksheet.outputs_summary_table_g43); end
  def test_outputs_summary_table_c44; assert_equal("International freight (Tonne km / capita)", worksheet.outputs_summary_table_c44); end
  def test_outputs_summary_table_d44; assert_equal("Tonne km / capita", worksheet.outputs_summary_table_d44); end
  def test_outputs_summary_table_e44; assert_equal("9,577", worksheet.outputs_summary_table_e44); end
  def test_outputs_summary_table_f44; assert_equal("13,874", worksheet.outputs_summary_table_f44); end
  def test_outputs_summary_table_g44; assert_equal("45%", worksheet.outputs_summary_table_g44); end
  def test_outputs_summary_table_c45; assert_equal("Air freight (as % of international freight tonne-km)", worksheet.outputs_summary_table_c45); end
  def test_outputs_summary_table_d45; assert_equal("% of international freight tonne-km", worksheet.outputs_summary_table_d45); end
  def test_outputs_summary_table_e45; assert_equal("0.27%", worksheet.outputs_summary_table_e45); end
  def test_outputs_summary_table_f45; assert_equal("0.31%", worksheet.outputs_summary_table_f45); end
  def test_outputs_summary_table_g45; assert_equal("16%", worksheet.outputs_summary_table_g45); end
  def test_outputs_summary_table_b47; assert_equal("Buildings", worksheet.outputs_summary_table_b47); end
  def test_outputs_summary_table_c47; assert_equal("Number of appliances per household", worksheet.outputs_summary_table_c47); end
  def test_outputs_summary_table_d47; assert_equal("No. of appliances", worksheet.outputs_summary_table_d47); end
  def test_outputs_summary_table_e47; assert_equal("5.1", worksheet.outputs_summary_table_e47); end
  def test_outputs_summary_table_f47; assert_equal("9.0", worksheet.outputs_summary_table_f47); end
  def test_outputs_summary_table_g47; assert_equal("78%", worksheet.outputs_summary_table_g47); end
  def test_outputs_summary_table_c48; assert_equal("Number of refrigerators in an average urban household", worksheet.outputs_summary_table_c48); end
  def test_outputs_summary_table_d48; assert_equal("products per urban household", worksheet.outputs_summary_table_d48); end
  def test_outputs_summary_table_e48; assert_equal("1.0", worksheet.outputs_summary_table_e48); end
  def test_outputs_summary_table_f48; assert_equal("1.2", worksheet.outputs_summary_table_f48); end
  def test_outputs_summary_table_g48; assert_equal("29%", worksheet.outputs_summary_table_g48); end
  def test_outputs_summary_table_c49; assert_equal("Refrigerator average power (W) in urban areas", worksheet.outputs_summary_table_c49); end
  def test_outputs_summary_table_d49; assert_equal("Average power (W)", worksheet.outputs_summary_table_d49); end
  def test_outputs_summary_table_e49; assert_equal("66", worksheet.outputs_summary_table_e49); end
  def test_outputs_summary_table_f49; assert_equal("52", worksheet.outputs_summary_table_f49); end
  def test_outputs_summary_table_g49; assert_equal("-21%", worksheet.outputs_summary_table_g49); end
  def test_outputs_summary_table_c50; assert_equal("Building temperature in warm months (⁰C)", worksheet.outputs_summary_table_c50); end
  def test_outputs_summary_table_d50; assert_equal("⁰C", worksheet.outputs_summary_table_d50); end
  def test_outputs_summary_table_e50; assert_equal("27.4", worksheet.outputs_summary_table_e50); end
  def test_outputs_summary_table_f50; assert_equal("24.6", worksheet.outputs_summary_table_f50); end
  def test_outputs_summary_table_g50; assert_equal("-10%", worksheet.outputs_summary_table_g50); end
  def test_outputs_summary_table_c51; assert_equal("Building temperature in cold months (⁰C)", worksheet.outputs_summary_table_c51); end
  def test_outputs_summary_table_d51; assert_equal("⁰C", worksheet.outputs_summary_table_d51); end
  def test_outputs_summary_table_e51; assert_equal("15.9", worksheet.outputs_summary_table_e51); end
  def test_outputs_summary_table_f51; assert_equal("18.7", worksheet.outputs_summary_table_f51); end
  def test_outputs_summary_table_g51; assert_equal("18%", worksheet.outputs_summary_table_g51); end
  def test_outputs_summary_table_c52; assert_equal("Home/building insulation  (rate of heat loss in GW / M ha*℃)", worksheet.outputs_summary_table_c52); end
  def test_outputs_summary_table_d52; assert_equal("GW / M ha*℃", worksheet.outputs_summary_table_d52); end
  def test_outputs_summary_table_e52; assert_equal("17.6", worksheet.outputs_summary_table_e52); end
  def test_outputs_summary_table_f52; assert_equal("11.4", worksheet.outputs_summary_table_f52); end
  def test_outputs_summary_table_g52; assert_equal("-35%", worksheet.outputs_summary_table_g52); end
  def test_outputs_summary_table_c53; assert_equal("% urban households using zero-carbon space heating", worksheet.outputs_summary_table_c53); end
  def test_outputs_summary_table_d53; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d53); end
  def test_outputs_summary_table_e53; assert_equal("5.0%", worksheet.outputs_summary_table_e53); end
  def test_outputs_summary_table_f53; assert_equal("12.0%", worksheet.outputs_summary_table_f53); end
  def test_outputs_summary_table_g53; assert_equal("140%", worksheet.outputs_summary_table_g53); end
  def test_outputs_summary_table_c54; assert_equal("% urban households using heat-pumps for space heating", worksheet.outputs_summary_table_c54); end
  def test_outputs_summary_table_d54; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d54); end
  def test_outputs_summary_table_e54; assert_equal("2.0%", worksheet.outputs_summary_table_e54); end
  def test_outputs_summary_table_f54; assert_equal("4.6%", worksheet.outputs_summary_table_f54); end
  def test_outputs_summary_table_g54; assert_equal("130%", worksheet.outputs_summary_table_g54); end
  def test_outputs_summary_table_c55; assert_equal("% urban households using electric-powered space heating", worksheet.outputs_summary_table_c55); end
  def test_outputs_summary_table_d55; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d55); end
  def test_outputs_summary_table_e55; assert_equal("3.0%", worksheet.outputs_summary_table_e55); end
  def test_outputs_summary_table_f55; assert_equal("7.4%", worksheet.outputs_summary_table_f55); end
  def test_outputs_summary_table_g55; assert_equal("147%", worksheet.outputs_summary_table_g55); end
  def test_outputs_summary_table_c56; assert_equal("% urban households using solar-powered space heating", worksheet.outputs_summary_table_c56); end
  def test_outputs_summary_table_d56; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d56); end
  def test_outputs_summary_table_e56; assert_equal("0.0%", worksheet.outputs_summary_table_e56); end
  def test_outputs_summary_table_f56; assert_equal("1.0%", worksheet.outputs_summary_table_f56); end
  def test_outputs_summary_table_g56; assert_equal("", worksheet.outputs_summary_table_g56); end
  def test_outputs_summary_table_c57; assert_equal("% urban households that have access to electricity", worksheet.outputs_summary_table_c57); end
  def test_outputs_summary_table_d57; assert_equal("% of urban households", worksheet.outputs_summary_table_d57); end
  def test_outputs_summary_table_e57; assert_equal("93.7%", worksheet.outputs_summary_table_e57); end
  def test_outputs_summary_table_f57; assert_equal("98.0%", worksheet.outputs_summary_table_f57); end
  def test_outputs_summary_table_g57; assert_equal("5%", worksheet.outputs_summary_table_g57); end
  def test_outputs_summary_table_c58; assert_equal("% rural households that have access to electricity", worksheet.outputs_summary_table_c58); end
  def test_outputs_summary_table_d58; assert_equal("% of rural households", worksheet.outputs_summary_table_d58); end
  def test_outputs_summary_table_e58; assert_equal("68.0%", worksheet.outputs_summary_table_e58); end
  def test_outputs_summary_table_f58; assert_equal("81.0%", worksheet.outputs_summary_table_f58); end
  def test_outputs_summary_table_g58; assert_equal("19%", worksheet.outputs_summary_table_g58); end
  def test_outputs_summary_table_b60; assert_equal("Manufacturing", worksheet.outputs_summary_table_b60); end
  def test_outputs_summary_table_c60; assert_equal("Iron, steel and aluminium output (Gt)", worksheet.outputs_summary_table_c60); end
  def test_outputs_summary_table_d60; assert_equal("Gt", worksheet.outputs_summary_table_d60); end
  def test_outputs_summary_table_e60; assert_equal("1.8", worksheet.outputs_summary_table_e60); end
  def test_outputs_summary_table_f60; assert_equal("3.0", worksheet.outputs_summary_table_f60); end
  def test_outputs_summary_table_g60; assert_equal("67%", worksheet.outputs_summary_table_g60); end
  def test_outputs_summary_table_c61; assert_equal("Paper and other output (Gt)", worksheet.outputs_summary_table_c61); end
  def test_outputs_summary_table_d61; assert_equal("Gt", worksheet.outputs_summary_table_d61); end
  def test_outputs_summary_table_e61; assert_equal("0.6", worksheet.outputs_summary_table_e61); end
  def test_outputs_summary_table_f61; assert_equal("1.3", worksheet.outputs_summary_table_f61); end
  def test_outputs_summary_table_g61; assert_equal("109%", worksheet.outputs_summary_table_g61); end
  def test_outputs_summary_table_c62; assert_equal("Chemicals output (Gt)", worksheet.outputs_summary_table_c62); end
  def test_outputs_summary_table_d62; assert_equal("Gt", worksheet.outputs_summary_table_d62); end
  def test_outputs_summary_table_e62; assert_equal("0.8", worksheet.outputs_summary_table_e62); end
  def test_outputs_summary_table_f62; assert_equal("1.6", worksheet.outputs_summary_table_f62); end
  def test_outputs_summary_table_g62; assert_equal("109%", worksheet.outputs_summary_table_g62); end
  def test_outputs_summary_table_c63; assert_equal("Cement output (Gt)", worksheet.outputs_summary_table_c63); end
  def test_outputs_summary_table_d63; assert_equal("Gt", worksheet.outputs_summary_table_d63); end
  def test_outputs_summary_table_e63; assert_equal("3.6", worksheet.outputs_summary_table_e63); end
  def test_outputs_summary_table_f63; assert_equal("5.6", worksheet.outputs_summary_table_f63); end
  def test_outputs_summary_table_g63; assert_equal("54%", worksheet.outputs_summary_table_g63); end
  def test_outputs_summary_table_c64; assert_equal("Timber output (Gt)", worksheet.outputs_summary_table_c64); end
  def test_outputs_summary_table_d64; assert_equal("Gt", worksheet.outputs_summary_table_d64); end
  def test_outputs_summary_table_e64; assert_equal("0.8", worksheet.outputs_summary_table_e64); end
  def test_outputs_summary_table_f64; assert_equal("1.5", worksheet.outputs_summary_table_f64); end
  def test_outputs_summary_table_g64; assert_equal("84%", worksheet.outputs_summary_table_g64); end
  def test_outputs_summary_table_c65; assert_equal("Global Oxygen steel technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c65); end
  def test_outputs_summary_table_d65; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d65); end
  def test_outputs_summary_table_e65; assert_equal("0.0%", worksheet.outputs_summary_table_e65); end
  def test_outputs_summary_table_f65; assert_equal("4.0%", worksheet.outputs_summary_table_f65); end
  def test_outputs_summary_table_g65; assert_equal("", worksheet.outputs_summary_table_g65); end
  def test_outputs_summary_table_c66; assert_equal("Global Pulp & paper: Pulp technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c66); end
  def test_outputs_summary_table_d66; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d66); end
  def test_outputs_summary_table_e66; assert_equal("0.0%", worksheet.outputs_summary_table_e66); end
  def test_outputs_summary_table_f66; assert_equal("18.0%", worksheet.outputs_summary_table_f66); end
  def test_outputs_summary_table_g66; assert_equal("", worksheet.outputs_summary_table_g66); end
  def test_outputs_summary_table_c67; assert_equal("Global Chemicals: High Value Chemicals  technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c67); end
  def test_outputs_summary_table_d67; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d67); end
  def test_outputs_summary_table_e67; assert_equal("0.0%", worksheet.outputs_summary_table_e67); end
  def test_outputs_summary_table_f67; assert_equal("0.0%", worksheet.outputs_summary_table_f67); end
  def test_outputs_summary_table_g67; assert_equal("", worksheet.outputs_summary_table_g67); end
  def test_outputs_summary_table_c68; assert_equal("Global Cement technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c68); end
  def test_outputs_summary_table_d68; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d68); end
  def test_outputs_summary_table_e68; assert_equal("0.0%", worksheet.outputs_summary_table_e68); end
  def test_outputs_summary_table_f68; assert_equal("7.4%", worksheet.outputs_summary_table_f68); end
  def test_outputs_summary_table_g68; assert_equal("", worksheet.outputs_summary_table_g68); end
  def test_outputs_summary_table_c69; assert_equal("% of manufacturing emissions captured by CCS", worksheet.outputs_summary_table_c69); end
  def test_outputs_summary_table_d69; assert_equal("%", worksheet.outputs_summary_table_d69); end
  def test_outputs_summary_table_e69; assert_equal("0.0%", worksheet.outputs_summary_table_e69); end
  def test_outputs_summary_table_f69; assert_equal("0.0%", worksheet.outputs_summary_table_f69); end
  def test_outputs_summary_table_g69; assert_equal("", worksheet.outputs_summary_table_g69); end
  def test_outputs_summary_table_c70; assert_equal("Demand for consumer packaging (% of 2011 tonne demand)", worksheet.outputs_summary_table_c70); end
  def test_outputs_summary_table_d70; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d70); end
  def test_outputs_summary_table_e70; assert_equal("100.0%", worksheet.outputs_summary_table_e70); end
  def test_outputs_summary_table_f70; assert_equal("281.6%", worksheet.outputs_summary_table_f70); end
  def test_outputs_summary_table_g70; assert_equal("182%", worksheet.outputs_summary_table_g70); end
  def test_outputs_summary_table_c71; assert_equal("Demand for electrical equipment (% of 2011 tonne demand)", worksheet.outputs_summary_table_c71); end
  def test_outputs_summary_table_d71; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d71); end
  def test_outputs_summary_table_e71; assert_equal("100.0%", worksheet.outputs_summary_table_e71); end
  def test_outputs_summary_table_f71; assert_equal("239.9%", worksheet.outputs_summary_table_f71); end
  def test_outputs_summary_table_g71; assert_equal("140%", worksheet.outputs_summary_table_g71); end
  def test_outputs_summary_table_c72; assert_equal("Lifespan of refrigerator (years) in urban areas", worksheet.outputs_summary_table_c72); end
  def test_outputs_summary_table_d72; assert_equal("Refrigerator lifespan (years)", worksheet.outputs_summary_table_d72); end
  def test_outputs_summary_table_e72; assert_equal("15", worksheet.outputs_summary_table_e72); end
  def test_outputs_summary_table_f72; assert_equal("10", worksheet.outputs_summary_table_f72); end
  def test_outputs_summary_table_g72; assert_equal("-33%", worksheet.outputs_summary_table_g72); end
  def test_outputs_summary_table_b74; assert_equal("Land", worksheet.outputs_summary_table_b74); end
  def test_outputs_summary_table_c74; assert_equal("Crop yields (EJ per M ha)", worksheet.outputs_summary_table_c74); end
  def test_outputs_summary_table_d74; assert_equal("EJ per M ha", worksheet.outputs_summary_table_d74); end
  def test_outputs_summary_table_e74; assert_equal("0.03", worksheet.outputs_summary_table_e74); end
  def test_outputs_summary_table_f74; assert_equal("0.04", worksheet.outputs_summary_table_f74); end
  def test_outputs_summary_table_g74; assert_equal("22%", worksheet.outputs_summary_table_g74); end
  def test_outputs_summary_table_c75; assert_equal("Livestock yields for cows and other bovines (% increase from 2011 in non-intensive animal yields and carrying capacity of pasture)", worksheet.outputs_summary_table_c75); end
  def test_outputs_summary_table_d75; assert_equal("% increase from 2011 in non-intensive animal yields (animals per area) and carrying capacity of pasture", worksheet.outputs_summary_table_d75); end
  def test_outputs_summary_table_e75; assert_equal("0.0%", worksheet.outputs_summary_table_e75); end
  def test_outputs_summary_table_f75; assert_equal("33.0%", worksheet.outputs_summary_table_f75); end
  def test_outputs_summary_table_g75; assert_equal("", worksheet.outputs_summary_table_g75); end
  def test_outputs_summary_table_c76; assert_equal("Bioenergy yields (Increase in energy crop yields (NPP) and change in crop mix from base year)", worksheet.outputs_summary_table_c76); end
  def test_outputs_summary_table_d76; assert_equal("Increase in energy crop yields (NPP) and change in crop mix from base year", worksheet.outputs_summary_table_d76); end
  def test_outputs_summary_table_e76; assert_equal("12.1%", worksheet.outputs_summary_table_e76); end
  def test_outputs_summary_table_f76; assert_equal("21.6%", worksheet.outputs_summary_table_f76); end
  def test_outputs_summary_table_g76; assert_equal("78%", worksheet.outputs_summary_table_g76); end
  def test_outputs_summary_table_c77; assert_equal("% of productive land used for bioenergy", worksheet.outputs_summary_table_c77); end
  def test_outputs_summary_table_d77; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d77); end
  def test_outputs_summary_table_e77; assert_equal("1.1%", worksheet.outputs_summary_table_e77); end
  def test_outputs_summary_table_f77; assert_equal("1.5%", worksheet.outputs_summary_table_f77); end
  def test_outputs_summary_table_g77; assert_equal("38%", worksheet.outputs_summary_table_g77); end
  def test_outputs_summary_table_c78; assert_equal("% of productive land used for food (livestock and food crops)", worksheet.outputs_summary_table_c78); end
  def test_outputs_summary_table_d78; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d78); end
  def test_outputs_summary_table_e78; assert_equal("52.0%", worksheet.outputs_summary_table_e78); end
  def test_outputs_summary_table_f78; assert_equal("47.4%", worksheet.outputs_summary_table_f78); end
  def test_outputs_summary_table_g78; assert_equal("-9%", worksheet.outputs_summary_table_g78); end
  def test_outputs_summary_table_c79; assert_equal("% of productive land used for commercial forestry", worksheet.outputs_summary_table_c79); end
  def test_outputs_summary_table_d79; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d79); end
  def test_outputs_summary_table_e79; assert_equal("3.0%", worksheet.outputs_summary_table_e79); end
  def test_outputs_summary_table_f79; assert_equal("5.6%", worksheet.outputs_summary_table_f79); end
  def test_outputs_summary_table_g79; assert_equal("89%", worksheet.outputs_summary_table_g79); end
  def test_outputs_summary_table_c80; assert_equal("% of productive land used for native forest", worksheet.outputs_summary_table_c80); end
  def test_outputs_summary_table_d80; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d80); end
  def test_outputs_summary_table_e80; assert_equal("40.6%", worksheet.outputs_summary_table_e80); end
  def test_outputs_summary_table_f80; assert_equal("40.9%", worksheet.outputs_summary_table_f80); end
  def test_outputs_summary_table_g80; assert_equal("1%", worksheet.outputs_summary_table_g80); end
  def test_outputs_summary_table_b82; assert_equal("Food", worksheet.outputs_summary_table_b82); end
  def test_outputs_summary_table_c82; assert_equal("Calories consumed per head (kCal)", worksheet.outputs_summary_table_c82); end
  def test_outputs_summary_table_d82; assert_equal("kCal", worksheet.outputs_summary_table_d82); end
  def test_outputs_summary_table_e82; assert_equal("2,170", worksheet.outputs_summary_table_e82); end
  def test_outputs_summary_table_f82; assert_equal("2,330", worksheet.outputs_summary_table_f82); end
  def test_outputs_summary_table_g82; assert_equal("7%", worksheet.outputs_summary_table_g82); end
  def test_outputs_summary_table_c83; assert_equal("Calories from meat (kCal)", worksheet.outputs_summary_table_c83); end
  def test_outputs_summary_table_d83; assert_equal("kCal", worksheet.outputs_summary_table_d83); end
  def test_outputs_summary_table_e83; assert_equal("191", worksheet.outputs_summary_table_e83); end
  def test_outputs_summary_table_f83; assert_equal("209", worksheet.outputs_summary_table_f83); end
  def test_outputs_summary_table_g83; assert_equal("9%", worksheet.outputs_summary_table_g83); end
  def test_outputs_summary_table_b85; assert_equal("Cost", worksheet.outputs_summary_table_b85); end
  def test_outputs_summary_table_c85; assert_equal("Cost in 2050 - point estimate ($bn)", worksheet.outputs_summary_table_c85); end
  def test_outputs_summary_table_d85; assert_equal("$bn", worksheet.outputs_summary_table_d85); end
  def test_outputs_summary_table_e85; assert_equal("n / a", worksheet.outputs_summary_table_e85); end
  def test_outputs_summary_table_f85; assert_equal("49321.9", worksheet.outputs_summary_table_f85); end
  def test_outputs_summary_table_g85; assert_equal("", worksheet.outputs_summary_table_g85); end
  def test_outputs_summary_table_c86; assert_equal("Cost in 2050 - high estimate ($bn)", worksheet.outputs_summary_table_c86); end
  def test_outputs_summary_table_d86; assert_equal("$bn", worksheet.outputs_summary_table_d86); end
  def test_outputs_summary_table_e86; assert_equal("n / a", worksheet.outputs_summary_table_e86); end
  def test_outputs_summary_table_f86; assert_equal("77002.0", worksheet.outputs_summary_table_f86); end
  def test_outputs_summary_table_g86; assert_equal("", worksheet.outputs_summary_table_g86); end
  def test_outputs_summary_table_c87; assert_equal("Cost in 2050 - low estimate ($bn)", worksheet.outputs_summary_table_c87); end
  def test_outputs_summary_table_d87; assert_equal("$bn", worksheet.outputs_summary_table_d87); end
  def test_outputs_summary_table_e87; assert_equal("n / a", worksheet.outputs_summary_table_e87); end
  def test_outputs_summary_table_f87; assert_equal("35528.7", worksheet.outputs_summary_table_f87); end
  def test_outputs_summary_table_g87; assert_equal("", worksheet.outputs_summary_table_g87); end
  def test_outputs_summary_table_c88; assert_equal("Fuel costs as % of total costs", worksheet.outputs_summary_table_c88); end
  def test_outputs_summary_table_d88; assert_equal("% ($bn)", worksheet.outputs_summary_table_d88); end
  def test_outputs_summary_table_e88; assert_equal("n / a", worksheet.outputs_summary_table_e88); end
  def test_outputs_summary_table_f88; assert_equal("9.4%", worksheet.outputs_summary_table_f88); end
  def test_outputs_summary_table_g88; assert_equal("", worksheet.outputs_summary_table_g88); end
  def test_outputs_summary_table_c89; assert_equal("Tax levied by fossil fuel exporters in 2050 ($bn)", worksheet.outputs_summary_table_c89); end
  def test_outputs_summary_table_d89; assert_equal("$bn", worksheet.outputs_summary_table_d89); end
  def test_outputs_summary_table_e89; assert_equal("n / a", worksheet.outputs_summary_table_e89); end
  def test_outputs_summary_table_f89; assert_equal("6744.7", worksheet.outputs_summary_table_f89); end
  def test_outputs_summary_table_g89; assert_equal("", worksheet.outputs_summary_table_g89); end
  def test_outputs_summary_table_b91; assert_equal("Emissions saved", worksheet.outputs_summary_table_b91); end
  def test_outputs_summary_table_c91; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2e)", worksheet.outputs_summary_table_c91); end
  def test_outputs_summary_table_d91; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d91); end
  def test_outputs_summary_table_e91; assert_equal("0.000", worksheet.outputs_summary_table_e91); end
  def test_outputs_summary_table_f91; assert_equal("0.000", worksheet.outputs_summary_table_f91); end
  def test_outputs_summary_table_g91; assert_equal("", worksheet.outputs_summary_table_g91); end
  def test_outputs_summary_table_d96; assert_equal("Unit", worksheet.outputs_summary_table_d96); end
  def test_outputs_summary_table_e96; assert_equal("2011", worksheet.outputs_summary_table_e96); end
  def test_outputs_summary_table_f96; assert_equal("2050", worksheet.outputs_summary_table_f96); end
  def test_outputs_summary_table_g96; assert_equal("% increase", worksheet.outputs_summary_table_g96); end
  def test_outputs_summary_table_b97; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b97); end
  def test_outputs_summary_table_c97; assert_equal("Cumulative emissions by each year (Gt CO2e)", worksheet.outputs_summary_table_c97); end
  def test_outputs_summary_table_d97; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d97); end
  def test_outputs_summary_table_e97; assert_equal("1,890", worksheet.outputs_summary_table_e97); end
  def test_outputs_summary_table_f97; assert_equal("3,654", worksheet.outputs_summary_table_f97); end
  def test_outputs_summary_table_g97; assert_equal("", worksheet.outputs_summary_table_g97); end
  def test_outputs_summary_table_c98; assert_equal("Post-2050 emissions trajectory", worksheet.outputs_summary_table_c98); end
  def test_outputs_summary_table_d98; assert_equal("% emissions increase every year: a proportion of average yearly change for the previous 15 year period", worksheet.outputs_summary_table_d98); end
  def test_outputs_summary_table_e98; assert_equal("16.5%", worksheet.outputs_summary_table_e98); end
  def test_outputs_summary_table_g98; assert_equal("", worksheet.outputs_summary_table_g98); end
  def test_outputs_summary_table_b100; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b100); end
  def test_outputs_summary_table_c100; assert_equal("Urban population (billions of people)", worksheet.outputs_summary_table_c100); end
  def test_outputs_summary_table_d100; assert_equal("billions of people", worksheet.outputs_summary_table_d100); end
  def test_outputs_summary_table_e100; assert_equal("3.6", worksheet.outputs_summary_table_e100); end
  def test_outputs_summary_table_f100; assert_equal("6.3", worksheet.outputs_summary_table_f100); end
  def test_outputs_summary_table_g100; assert_equal("75%", worksheet.outputs_summary_table_g100); end
  def test_outputs_summary_table_c101; assert_equal("Rural population (billions of people)", worksheet.outputs_summary_table_c101); end
  def test_outputs_summary_table_d101; assert_equal("billions of people", worksheet.outputs_summary_table_d101); end
  def test_outputs_summary_table_e101; assert_equal("3.3", worksheet.outputs_summary_table_e101); end
  def test_outputs_summary_table_f101; assert_equal("3.2", worksheet.outputs_summary_table_f101); end
  def test_outputs_summary_table_g101; assert_equal("-4%", worksheet.outputs_summary_table_g101); end
  def test_outputs_summary_table_b103; assert_equal("Electricity", worksheet.outputs_summary_table_b103); end
  def test_outputs_summary_table_c103; assert_equal("Electricity demand (kWh per capita)", worksheet.outputs_summary_table_c103); end
  def test_outputs_summary_table_d103; assert_equal("kWh per capita", worksheet.outputs_summary_table_d103); end
  def test_outputs_summary_table_e103; assert_equal("2,857", worksheet.outputs_summary_table_e103); end
  def test_outputs_summary_table_f103; assert_equal("4,293", worksheet.outputs_summary_table_f103); end
  def test_outputs_summary_table_g103; assert_equal("50%", worksheet.outputs_summary_table_g103); end
  def test_outputs_summary_table_c104; assert_equal("Offshore wind capacity (GW)", worksheet.outputs_summary_table_c104); end
  def test_outputs_summary_table_d104; assert_equal("GW", worksheet.outputs_summary_table_d104); end
  def test_outputs_summary_table_e104; assert_equal("4", worksheet.outputs_summary_table_e104); end
  def test_outputs_summary_table_f104; assert_equal("91", worksheet.outputs_summary_table_f104); end
  def test_outputs_summary_table_g104; assert_equal("2120%", worksheet.outputs_summary_table_g104); end
  def test_outputs_summary_table_c105; assert_equal("Onshore wind capacity (GW)", worksheet.outputs_summary_table_c105); end
  def test_outputs_summary_table_d105; assert_equal("GW", worksheet.outputs_summary_table_d105); end
  def test_outputs_summary_table_e105; assert_equal("234", worksheet.outputs_summary_table_e105); end
  def test_outputs_summary_table_f105; assert_equal("372", worksheet.outputs_summary_table_f105); end
  def test_outputs_summary_table_g105; assert_equal("59%", worksheet.outputs_summary_table_g105); end
  def test_outputs_summary_table_c106; assert_equal("Solar PV capacity (GW)", worksheet.outputs_summary_table_c106); end
  def test_outputs_summary_table_d106; assert_equal("GW", worksheet.outputs_summary_table_d106); end
  def test_outputs_summary_table_e106; assert_equal("70", worksheet.outputs_summary_table_e106); end
  def test_outputs_summary_table_f106; assert_equal("363", worksheet.outputs_summary_table_f106); end
  def test_outputs_summary_table_g106; assert_equal("421%", worksheet.outputs_summary_table_g106); end
  def test_outputs_summary_table_c107; assert_equal("CSP capacity (GW)", worksheet.outputs_summary_table_c107); end
  def test_outputs_summary_table_d107; assert_equal("GW", worksheet.outputs_summary_table_d107); end
  def test_outputs_summary_table_e107; assert_equal("2", worksheet.outputs_summary_table_e107); end
  def test_outputs_summary_table_f107; assert_equal("78", worksheet.outputs_summary_table_f107); end
  def test_outputs_summary_table_g107; assert_equal("4750%", worksheet.outputs_summary_table_g107); end
  def test_outputs_summary_table_c108; assert_equal("Unabated (GW)", worksheet.outputs_summary_table_c108); end
  def test_outputs_summary_table_d108; assert_equal("GW", worksheet.outputs_summary_table_d108); end
  def test_outputs_summary_table_e108; assert_equal("3,705", worksheet.outputs_summary_table_e108); end
  def test_outputs_summary_table_f108; assert_equal("17,804", worksheet.outputs_summary_table_f108); end
  def test_outputs_summary_table_g108; assert_equal("381%", worksheet.outputs_summary_table_g108); end
  def test_outputs_summary_table_c109; assert_equal("Emissions intensity", worksheet.outputs_summary_table_c109); end
  def test_outputs_summary_table_d109; assert_equal("g CO2e / kWh", worksheet.outputs_summary_table_d109); end
  def test_outputs_summary_table_e109; assert_equal("531", worksheet.outputs_summary_table_e109); end
  def test_outputs_summary_table_f109; assert_equal("443", worksheet.outputs_summary_table_f109); end
  def test_outputs_summary_table_g109; assert_equal("-17%", worksheet.outputs_summary_table_g109); end
  def test_outputs_summary_table_b111; assert_equal("Transport", worksheet.outputs_summary_table_b111); end
  def test_outputs_summary_table_c111; assert_equal("Light road (number of vehicles)", worksheet.outputs_summary_table_c111); end
  def test_outputs_summary_table_d111; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d111); end
  def test_outputs_summary_table_e111; assert_equal("1,456,126,459", worksheet.outputs_summary_table_e111); end
  def test_outputs_summary_table_f111; assert_equal("3,119,035,773", worksheet.outputs_summary_table_f111); end
  def test_outputs_summary_table_g111; assert_equal("114%", worksheet.outputs_summary_table_g111); end
  def test_outputs_summary_table_c112; assert_equal("Heavy road (number of vehicles)", worksheet.outputs_summary_table_c112); end
  def test_outputs_summary_table_d112; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d112); end
  def test_outputs_summary_table_e112; assert_equal("15,512,285", worksheet.outputs_summary_table_e112); end
  def test_outputs_summary_table_f112; assert_equal("34,341,400", worksheet.outputs_summary_table_f112); end
  def test_outputs_summary_table_g112; assert_equal("121%", worksheet.outputs_summary_table_g112); end
  def test_outputs_summary_table_c113; assert_equal("Rail (number of vehicles)", worksheet.outputs_summary_table_c113); end
  def test_outputs_summary_table_d113; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d113); end
  def test_outputs_summary_table_e113; assert_equal("82,247", worksheet.outputs_summary_table_e113); end
  def test_outputs_summary_table_f113; assert_equal("139,882", worksheet.outputs_summary_table_f113); end
  def test_outputs_summary_table_g113; assert_equal("70%", worksheet.outputs_summary_table_g113); end
  def test_outputs_summary_table_c114; assert_equal("Plane (number of vehicles)", worksheet.outputs_summary_table_c114); end
  def test_outputs_summary_table_d114; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d114); end
  def test_outputs_summary_table_e114; assert_equal("24,997", worksheet.outputs_summary_table_e114); end
  def test_outputs_summary_table_f114; assert_equal("62,215", worksheet.outputs_summary_table_f114); end
  def test_outputs_summary_table_g114; assert_equal("149%", worksheet.outputs_summary_table_g114); end
  def test_outputs_summary_table_c115; assert_equal("Air freight (as % of international freight tonne-km)", worksheet.outputs_summary_table_c115); end
  def test_outputs_summary_table_d115; assert_equal("% of international freight tonne-km", worksheet.outputs_summary_table_d115); end
  def test_outputs_summary_table_e115; assert_equal("0.3%", worksheet.outputs_summary_table_e115); end
  def test_outputs_summary_table_f115; assert_equal("0.3%", worksheet.outputs_summary_table_f115); end
  def test_outputs_summary_table_g115; assert_equal("16%", worksheet.outputs_summary_table_g115); end
  def test_outputs_summary_table_c116; assert_equal("car.passenger.urban.ICE.liquid", worksheet.outputs_summary_table_c116); end
  def test_outputs_summary_table_d116; assert_equal("% of urban cars", worksheet.outputs_summary_table_d116); end
  def test_outputs_summary_table_e116; assert_equal("98.8%", worksheet.outputs_summary_table_e116); end
  def test_outputs_summary_table_f116; assert_equal("91.0%", worksheet.outputs_summary_table_f116); end
  def test_outputs_summary_table_g116; assert_equal("", worksheet.outputs_summary_table_g116); end
  def test_outputs_summary_table_c117; assert_equal("car.passenger.urban.ICE.gas", worksheet.outputs_summary_table_c117); end
  def test_outputs_summary_table_d117; assert_equal("% of urban cars", worksheet.outputs_summary_table_d117); end
  def test_outputs_summary_table_e117; assert_equal("1.0%", worksheet.outputs_summary_table_e117); end
  def test_outputs_summary_table_f117; assert_equal("2.0%", worksheet.outputs_summary_table_f117); end
  def test_outputs_summary_table_g117; assert_equal("", worksheet.outputs_summary_table_g117); end
  def test_outputs_summary_table_c118; assert_equal("car.passenger.urban.PH", worksheet.outputs_summary_table_c118); end
  def test_outputs_summary_table_d118; assert_equal("% of urban cars", worksheet.outputs_summary_table_d118); end
  def test_outputs_summary_table_e118; assert_equal("0.0%", worksheet.outputs_summary_table_e118); end
  def test_outputs_summary_table_f118; assert_equal("5.0%", worksheet.outputs_summary_table_f118); end
  def test_outputs_summary_table_g118; assert_equal("", worksheet.outputs_summary_table_g118); end
  def test_outputs_summary_table_c119; assert_equal("car.passenger.urban.EV", worksheet.outputs_summary_table_c119); end
  def test_outputs_summary_table_d119; assert_equal("% of urban cars", worksheet.outputs_summary_table_d119); end
  def test_outputs_summary_table_e119; assert_equal("0.2%", worksheet.outputs_summary_table_e119); end
  def test_outputs_summary_table_f119; assert_equal("2.0%", worksheet.outputs_summary_table_f119); end
  def test_outputs_summary_table_g119; assert_equal("", worksheet.outputs_summary_table_g119); end
  def test_outputs_summary_table_c120; assert_equal("car.passenger.urban.H2", worksheet.outputs_summary_table_c120); end
  def test_outputs_summary_table_d120; assert_equal("% of urban cars", worksheet.outputs_summary_table_d120); end
  def test_outputs_summary_table_e120; assert_equal("0.0%", worksheet.outputs_summary_table_e120); end
  def test_outputs_summary_table_f120; assert_equal("0.0%", worksheet.outputs_summary_table_f120); end
  def test_outputs_summary_table_g120; assert_equal("", worksheet.outputs_summary_table_g120); end
  def test_outputs_summary_table_c121; assert_equal("Distance travelled per person by air (global average)", worksheet.outputs_summary_table_c121); end
  def test_outputs_summary_table_d121; assert_equal("average km per year / capita", worksheet.outputs_summary_table_d121); end
  def test_outputs_summary_table_e121; assert_equal("766", worksheet.outputs_summary_table_e121); end
  def test_outputs_summary_table_f121; assert_equal("1,447", worksheet.outputs_summary_table_f121); end
  def test_outputs_summary_table_g121; assert_equal("89%", worksheet.outputs_summary_table_g121); end
  def test_outputs_summary_table_c122; assert_equal("Distance travelled: Plane short haul - traditional", worksheet.outputs_summary_table_c122); end
  def test_outputs_summary_table_d122; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d122); end
  def test_outputs_summary_table_e122; assert_equal("1,913,806", worksheet.outputs_summary_table_e122); end
  def test_outputs_summary_table_f122; assert_equal("3,811,485", worksheet.outputs_summary_table_f122); end
  def test_outputs_summary_table_g122; assert_equal("99%", worksheet.outputs_summary_table_g122); end
  def test_outputs_summary_table_c123; assert_equal("Distance travelled: Plane short haul - hydrogen", worksheet.outputs_summary_table_c123); end
  def test_outputs_summary_table_d123; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d123); end
  def test_outputs_summary_table_e123; assert_equal("0", worksheet.outputs_summary_table_e123); end
  def test_outputs_summary_table_f123; assert_equal("0", worksheet.outputs_summary_table_f123); end
  def test_outputs_summary_table_g123; assert_equal("", worksheet.outputs_summary_table_g123); end
  def test_outputs_summary_table_c124; assert_equal("Distance travelled: Plane long haul - traditional", worksheet.outputs_summary_table_c124); end
  def test_outputs_summary_table_d124; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d124); end
  def test_outputs_summary_table_e124; assert_equal("3,424,706", worksheet.outputs_summary_table_e124); end
  def test_outputs_summary_table_f124; assert_equal("10,007,371", worksheet.outputs_summary_table_f124); end
  def test_outputs_summary_table_g124; assert_equal("192%", worksheet.outputs_summary_table_g124); end
  def test_outputs_summary_table_c125; assert_equal("Distance travelled: Plane long haul - hydrogen", worksheet.outputs_summary_table_c125); end
  def test_outputs_summary_table_d125; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d125); end
  def test_outputs_summary_table_e125; assert_equal("0", worksheet.outputs_summary_table_e125); end
  def test_outputs_summary_table_f125; assert_equal("0", worksheet.outputs_summary_table_f125); end
  def test_outputs_summary_table_g125; assert_equal("", worksheet.outputs_summary_table_g125); end
  def test_outputs_summary_table_b128; assert_equal("Buildings", worksheet.outputs_summary_table_b128); end
  def test_outputs_summary_table_c128; assert_equal("Global Urban solid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c128); end
  def test_outputs_summary_table_d128; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d128); end
  def test_outputs_summary_table_e128; assert_equal("7%", worksheet.outputs_summary_table_e128); end
  def test_outputs_summary_table_f128; assert_equal("2%", worksheet.outputs_summary_table_f128); end
  def test_outputs_summary_table_g128; assert_equal("-74%", worksheet.outputs_summary_table_g128); end
  def test_outputs_summary_table_c129; assert_equal("Global urban liquid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c129); end
  def test_outputs_summary_table_d129; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d129); end
  def test_outputs_summary_table_e129; assert_equal("14%", worksheet.outputs_summary_table_e129); end
  def test_outputs_summary_table_f129; assert_equal("11%", worksheet.outputs_summary_table_f129); end
  def test_outputs_summary_table_g129; assert_equal("-19%", worksheet.outputs_summary_table_g129); end
  def test_outputs_summary_table_c130; assert_equal("Global urban gas boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c130); end
  def test_outputs_summary_table_d130; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d130); end
  def test_outputs_summary_table_e130; assert_equal("55%", worksheet.outputs_summary_table_e130); end
  def test_outputs_summary_table_f130; assert_equal("46%", worksheet.outputs_summary_table_f130); end
  def test_outputs_summary_table_g130; assert_equal("-16%", worksheet.outputs_summary_table_g130); end
  def test_outputs_summary_table_c131; assert_equal("Global urban heat pump used by people with access to electricity for space heating", worksheet.outputs_summary_table_c131); end
  def test_outputs_summary_table_d131; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d131); end
  def test_outputs_summary_table_e131; assert_equal("2%", worksheet.outputs_summary_table_e131); end
  def test_outputs_summary_table_f131; assert_equal("5%", worksheet.outputs_summary_table_f131); end
  def test_outputs_summary_table_g131; assert_equal("130%", worksheet.outputs_summary_table_g131); end
  def test_outputs_summary_table_c132; assert_equal("Global urban electricity heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c132); end
  def test_outputs_summary_table_d132; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d132); end
  def test_outputs_summary_table_e132; assert_equal("3%", worksheet.outputs_summary_table_e132); end
  def test_outputs_summary_table_f132; assert_equal("7%", worksheet.outputs_summary_table_f132); end
  def test_outputs_summary_table_g132; assert_equal("147%", worksheet.outputs_summary_table_g132); end
  def test_outputs_summary_table_c133; assert_equal("Global urban solar heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c133); end
  def test_outputs_summary_table_d133; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d133); end
  def test_outputs_summary_table_e133; assert_equal("0%", worksheet.outputs_summary_table_e133); end
  def test_outputs_summary_table_f133; assert_equal("1%", worksheet.outputs_summary_table_f133); end
  def test_outputs_summary_table_g133; assert_equal("", worksheet.outputs_summary_table_g133); end
  def test_outputs_summary_table_c134; assert_equal("Global urban chp used by people with access to electricity for space heating", worksheet.outputs_summary_table_c134); end
  def test_outputs_summary_table_d134; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d134); end
  def test_outputs_summary_table_e134; assert_equal("2%", worksheet.outputs_summary_table_e134); end
  def test_outputs_summary_table_f134; assert_equal("3%", worksheet.outputs_summary_table_f134); end
  def test_outputs_summary_table_g134; assert_equal("60%", worksheet.outputs_summary_table_g134); end
  def test_outputs_summary_table_c135; assert_equal("Global urban district heating used by people with access to electricity for space heating", worksheet.outputs_summary_table_c135); end
  def test_outputs_summary_table_d135; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d135); end
  def test_outputs_summary_table_e135; assert_equal("17%", worksheet.outputs_summary_table_e135); end
  def test_outputs_summary_table_f135; assert_equal("25%", worksheet.outputs_summary_table_f135); end
  def test_outputs_summary_table_g135; assert_equal("45%", worksheet.outputs_summary_table_g135); end
  def test_outputs_summary_table_c136; assert_equal("% urban households using hydrocarbons (and all district heating) for space heating", worksheet.outputs_summary_table_c136); end
  def test_outputs_summary_table_d136; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d136); end
  def test_outputs_summary_table_e136; assert_equal("95%", worksheet.outputs_summary_table_e136); end
  def test_outputs_summary_table_f136; assert_equal("87%", worksheet.outputs_summary_table_f136); end
  def test_outputs_summary_table_g136; assert_equal("-8%", worksheet.outputs_summary_table_g136); end
  def test_outputs_summary_table_c137; assert_equal("Global Urban households with access to electricity", worksheet.outputs_summary_table_c137); end
  def test_outputs_summary_table_d137; assert_equal("% of urban households", worksheet.outputs_summary_table_d137); end
  def test_outputs_summary_table_e137; assert_equal("94%", worksheet.outputs_summary_table_e137); end
  def test_outputs_summary_table_f137; assert_equal("98%", worksheet.outputs_summary_table_f137); end
  def test_outputs_summary_table_g137; assert_equal("5%", worksheet.outputs_summary_table_g137); end
  def test_outputs_summary_table_c138; assert_equal("Global Rural households with access to electricity", worksheet.outputs_summary_table_c138); end
  def test_outputs_summary_table_d138; assert_equal("% of rural households", worksheet.outputs_summary_table_d138); end
  def test_outputs_summary_table_e138; assert_equal("68%", worksheet.outputs_summary_table_e138); end
  def test_outputs_summary_table_f138; assert_equal("81%", worksheet.outputs_summary_table_f138); end
  def test_outputs_summary_table_g138; assert_equal("19%", worksheet.outputs_summary_table_g138); end
  def test_outputs_summary_table_c139; assert_equal("Global Urban households with no access to electricity", worksheet.outputs_summary_table_c139); end
  def test_outputs_summary_table_d139; assert_equal("% of urban households", worksheet.outputs_summary_table_d139); end
  def test_outputs_summary_table_e139; assert_equal("6%", worksheet.outputs_summary_table_e139); end
  def test_outputs_summary_table_f139; assert_equal("2%", worksheet.outputs_summary_table_f139); end
  def test_outputs_summary_table_g139; assert_equal("-68%", worksheet.outputs_summary_table_g139); end
  def test_outputs_summary_table_c140; assert_equal("Global Rural households with no access to electricity", worksheet.outputs_summary_table_c140); end
  def test_outputs_summary_table_d140; assert_equal("% of rural households", worksheet.outputs_summary_table_d140); end
  def test_outputs_summary_table_e140; assert_equal("32%", worksheet.outputs_summary_table_e140); end
  def test_outputs_summary_table_f140; assert_equal("19%", worksheet.outputs_summary_table_f140); end
  def test_outputs_summary_table_g140; assert_equal("-41%", worksheet.outputs_summary_table_g140); end
  def test_outputs_summary_table_c141; assert_equal("% urban space heating from heat pumps", worksheet.outputs_summary_table_c141); end
  def test_outputs_summary_table_d141; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d141); end
  def test_outputs_summary_table_e141; assert_equal("2.0%", worksheet.outputs_summary_table_e141); end
  def test_outputs_summary_table_f141; assert_equal("4.6%", worksheet.outputs_summary_table_f141); end
  def test_outputs_summary_table_g141; assert_equal("130%", worksheet.outputs_summary_table_g141); end
  def test_outputs_summary_table_c142; assert_equal("% urban space heating from solar", worksheet.outputs_summary_table_c142); end
  def test_outputs_summary_table_d142; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d142); end
  def test_outputs_summary_table_e142; assert_equal("0.0%", worksheet.outputs_summary_table_e142); end
  def test_outputs_summary_table_f142; assert_equal("1.0%", worksheet.outputs_summary_table_f142); end
  def test_outputs_summary_table_g142; assert_equal("", worksheet.outputs_summary_table_g142); end
  def test_outputs_summary_table_c143; assert_equal("% urban space heating from district heating", worksheet.outputs_summary_table_c143); end
  def test_outputs_summary_table_d143; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d143); end
  def test_outputs_summary_table_e143; assert_equal("17.0%", worksheet.outputs_summary_table_e143); end
  def test_outputs_summary_table_f143; assert_equal("24.6%", worksheet.outputs_summary_table_f143); end
  def test_outputs_summary_table_g143; assert_equal("45%", worksheet.outputs_summary_table_g143); end
  def test_outputs_summary_table_b145; assert_equal("Manufacturing", worksheet.outputs_summary_table_b145); end
  def test_outputs_summary_table_c145; assert_equal("Electrical equipment (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c145); end
  def test_outputs_summary_table_d145; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d145); end
  def test_outputs_summary_table_e145; assert_equal("100%", worksheet.outputs_summary_table_e145); end
  def test_outputs_summary_table_f145; assert_equal("240%", worksheet.outputs_summary_table_f145); end
  def test_outputs_summary_table_g145; assert_equal("140%", worksheet.outputs_summary_table_g145); end
  def test_outputs_summary_table_c146; assert_equal("Consumer packaging (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c146); end
  def test_outputs_summary_table_d146; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d146); end
  def test_outputs_summary_table_e146; assert_equal("100%", worksheet.outputs_summary_table_e146); end
  def test_outputs_summary_table_f146; assert_equal("282%", worksheet.outputs_summary_table_f146); end
  def test_outputs_summary_table_g146; assert_equal("182%", worksheet.outputs_summary_table_g146); end
  def test_outputs_summary_table_c147; assert_equal("Metal goods (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c147); end
  def test_outputs_summary_table_d147; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d147); end
  def test_outputs_summary_table_e147; assert_equal("100%", worksheet.outputs_summary_table_e147); end
  def test_outputs_summary_table_f147; assert_equal("282%", worksheet.outputs_summary_table_f147); end
  def test_outputs_summary_table_g147; assert_equal("182%", worksheet.outputs_summary_table_g147); end
  def test_outputs_summary_table_c148; assert_equal("IPCC emissions sector G.X2.A (Gt CO2)", worksheet.outputs_summary_table_c148); end
  def test_outputs_summary_table_d148; assert_equal("Gt CO2", worksheet.outputs_summary_table_d148); end
  def test_outputs_summary_table_e148; assert_equal("0.0", worksheet.outputs_summary_table_e148); end
  def test_outputs_summary_table_f148; assert_equal("0.0", worksheet.outputs_summary_table_f148); end
  def test_outputs_summary_table_g148; assert_equal("", worksheet.outputs_summary_table_g148); end
  def test_outputs_summary_table_c149; assert_equal("IPCC emissions sector G.X2.B (Gt CO2)", worksheet.outputs_summary_table_c149); end
  def test_outputs_summary_table_d149; assert_equal("Gt CO2", worksheet.outputs_summary_table_d149); end
  def test_outputs_summary_table_e149; assert_equal("0.0", worksheet.outputs_summary_table_e149); end
  def test_outputs_summary_table_f149; assert_equal("0.0", worksheet.outputs_summary_table_f149); end
  def test_outputs_summary_table_g149; assert_equal("", worksheet.outputs_summary_table_g149); end
  def test_outputs_summary_table_c150; assert_equal("IPCC emissions sector G.1A (Gt CO2)", worksheet.outputs_summary_table_c150); end
  def test_outputs_summary_table_d150; assert_equal("Gt CO2", worksheet.outputs_summary_table_d150); end
  def test_outputs_summary_table_e150; assert_equal("4.3", worksheet.outputs_summary_table_e150); end
  def test_outputs_summary_table_f150; assert_equal("7.8", worksheet.outputs_summary_table_f150); end
  def test_outputs_summary_table_g150; assert_equal("80%", worksheet.outputs_summary_table_g150); end
  def test_outputs_summary_table_c151; assert_equal("IPCC emissions sector G.2 (Gt CO2)", worksheet.outputs_summary_table_c151); end
  def test_outputs_summary_table_d151; assert_equal("Gt CO2", worksheet.outputs_summary_table_d151); end
  def test_outputs_summary_table_e151; assert_equal("2.4", worksheet.outputs_summary_table_e151); end
  def test_outputs_summary_table_f151; assert_equal("4.3", worksheet.outputs_summary_table_f151); end
  def test_outputs_summary_table_g151; assert_equal("81%", worksheet.outputs_summary_table_g151); end
  def test_outputs_summary_table_b153; assert_equal("Land", worksheet.outputs_summary_table_b153); end
  def test_outputs_summary_table_c153; assert_equal("Productive land for forest", worksheet.outputs_summary_table_c153); end
  def test_outputs_summary_table_d153; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d153); end
  def test_outputs_summary_table_e153; assert_equal("34%", worksheet.outputs_summary_table_e153); end
  def test_outputs_summary_table_f153; assert_equal("34%", worksheet.outputs_summary_table_f153); end
  def test_outputs_summary_table_g153; assert_equal("0%", worksheet.outputs_summary_table_g153); end
  def test_outputs_summary_table_c154; assert_equal("Productive land for bioenergy", worksheet.outputs_summary_table_c154); end
  def test_outputs_summary_table_d154; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d154); end
  def test_outputs_summary_table_e154; assert_equal("58%", worksheet.outputs_summary_table_e154); end
  def test_outputs_summary_table_f154; assert_equal("58%", worksheet.outputs_summary_table_f154); end
  def test_outputs_summary_table_g154; assert_equal("0%", worksheet.outputs_summary_table_g154); end
  def test_outputs_summary_table_c155; assert_equal("Land for animals (M ha)", worksheet.outputs_summary_table_c155); end
  def test_outputs_summary_table_d155; assert_equal("M ha", worksheet.outputs_summary_table_d155); end
  def test_outputs_summary_table_e155; assert_equal("3,363", worksheet.outputs_summary_table_e155); end
  def test_outputs_summary_table_f155; assert_equal("2,695", worksheet.outputs_summary_table_f155); end
  def test_outputs_summary_table_g155; assert_equal("-20%", worksheet.outputs_summary_table_g155); end
  def test_outputs_summary_table_c156; assert_equal("Land for food crops (M ha)", worksheet.outputs_summary_table_c156); end
  def test_outputs_summary_table_d156; assert_equal("M ha", worksheet.outputs_summary_table_d156); end
  def test_outputs_summary_table_e156; assert_equal("1,443", worksheet.outputs_summary_table_e156); end
  def test_outputs_summary_table_f156; assert_equal("1,683", worksheet.outputs_summary_table_f156); end
  def test_outputs_summary_table_g156; assert_equal("17%", worksheet.outputs_summary_table_g156); end
  def test_outputs_summary_table_c157; assert_equal("Land for non-food crops  (M ha)", worksheet.outputs_summary_table_c157); end
  def test_outputs_summary_table_d157; assert_equal("M ha", worksheet.outputs_summary_table_d157); end
  def test_outputs_summary_table_e157; assert_equal("60", worksheet.outputs_summary_table_e157); end
  def test_outputs_summary_table_f157; assert_equal("58", worksheet.outputs_summary_table_f157); end
  def test_outputs_summary_table_g157; assert_equal("-3%", worksheet.outputs_summary_table_g157); end
  def test_outputs_summary_table_c158; assert_equal("Native forest (M ha)", worksheet.outputs_summary_table_c158); end
  def test_outputs_summary_table_d158; assert_equal("M ha", worksheet.outputs_summary_table_d158); end
  def test_outputs_summary_table_e158; assert_equal("3,753", worksheet.outputs_summary_table_e158); end
  def test_outputs_summary_table_f158; assert_equal("3,779", worksheet.outputs_summary_table_f158); end
  def test_outputs_summary_table_g158; assert_equal("1%", worksheet.outputs_summary_table_g158); end
  def test_outputs_summary_table_c159; assert_equal("Commercial forest (M ha)", worksheet.outputs_summary_table_c159); end
  def test_outputs_summary_table_d159; assert_equal("M ha", worksheet.outputs_summary_table_d159); end
  def test_outputs_summary_table_e159; assert_equal("274", worksheet.outputs_summary_table_e159); end
  def test_outputs_summary_table_f159; assert_equal("517", worksheet.outputs_summary_table_f159); end
  def test_outputs_summary_table_g159; assert_equal("89%", worksheet.outputs_summary_table_g159); end
  def test_outputs_summary_table_c160; assert_equal("Land for bioenergy (M ha)", worksheet.outputs_summary_table_c160); end
  def test_outputs_summary_table_d160; assert_equal("M ha", worksheet.outputs_summary_table_d160); end
  def test_outputs_summary_table_e160; assert_equal("98", worksheet.outputs_summary_table_e160); end
  def test_outputs_summary_table_f160; assert_equal("135", worksheet.outputs_summary_table_f160); end
  def test_outputs_summary_table_g160; assert_equal("38%", worksheet.outputs_summary_table_g160); end
  def test_outputs_summary_table_c161; assert_equal("Natural grassland (M ha)", worksheet.outputs_summary_table_c161); end
  def test_outputs_summary_table_d161; assert_equal("M ha", worksheet.outputs_summary_table_d161); end
  def test_outputs_summary_table_e161; assert_equal("0", worksheet.outputs_summary_table_e161); end
  def test_outputs_summary_table_f161; assert_equal("1", worksheet.outputs_summary_table_f161); end
  def test_outputs_summary_table_g161; assert_equal("", worksheet.outputs_summary_table_g161); end
  def test_outputs_summary_table_c162; assert_equal("Settlements and infrastructure (M ha)", worksheet.outputs_summary_table_c162); end
  def test_outputs_summary_table_d162; assert_equal("M ha", worksheet.outputs_summary_table_d162); end
  def test_outputs_summary_table_e162; assert_equal("245", worksheet.outputs_summary_table_e162); end
  def test_outputs_summary_table_f162; assert_equal("368", worksheet.outputs_summary_table_f162); end
  def test_outputs_summary_table_g162; assert_equal("50%", worksheet.outputs_summary_table_g162); end
  def test_outputs_summary_table_c163; assert_equal("Desert, ice etc (M ha)", worksheet.outputs_summary_table_c163); end
  def test_outputs_summary_table_d163; assert_equal("M ha", worksheet.outputs_summary_table_d163); end
  def test_outputs_summary_table_e163; assert_equal("3,836", worksheet.outputs_summary_table_e163); end
  def test_outputs_summary_table_f163; assert_equal("3,836", worksheet.outputs_summary_table_f163); end
  def test_outputs_summary_table_g163; assert_equal("0%", worksheet.outputs_summary_table_g163); end
  def test_outputs_summary_table_c164; assert_equal("Total productive land (all excluding desert, ice) (M ha)", worksheet.outputs_summary_table_c164); end
  def test_outputs_summary_table_d164; assert_equal("M ha", worksheet.outputs_summary_table_d164); end
  def test_outputs_summary_table_e164; assert_equal("9,236", worksheet.outputs_summary_table_e164); end
  def test_outputs_summary_table_f164; assert_equal("9,236", worksheet.outputs_summary_table_f164); end
  def test_outputs_summary_table_g164; assert_equal("0%", worksheet.outputs_summary_table_g164); end
  def test_outputs_summary_table_c165; assert_equal("% of land used for food (livestock)", worksheet.outputs_summary_table_c165); end
  def test_outputs_summary_table_d165; assert_equal("% of all productive land ()", worksheet.outputs_summary_table_d165); end
  def test_outputs_summary_table_e165; assert_equal("36.4%", worksheet.outputs_summary_table_e165); end
  def test_outputs_summary_table_f165; assert_equal("29.2%", worksheet.outputs_summary_table_f165); end
  def test_outputs_summary_table_g165; assert_equal("-20%", worksheet.outputs_summary_table_g165); end
  def test_outputs_summary_table_c166; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2)", worksheet.outputs_summary_table_c166); end
  def test_outputs_summary_table_d166; assert_equal("Gt CO2", worksheet.outputs_summary_table_d166); end
  def test_outputs_summary_table_e166; assert_equal("0.0", worksheet.outputs_summary_table_e166); end
  def test_outputs_summary_table_f166; assert_equal("0.0", worksheet.outputs_summary_table_f166); end
  def test_outputs_summary_table_g166; assert_equal("", worksheet.outputs_summary_table_g166); end
  def test_outputs_summary_table_b169; assert_equal("Cost", worksheet.outputs_summary_table_b169); end
  def test_outputs_summary_table_c169; assert_equal("Cost in 2050 - point estimate ($bn)", worksheet.outputs_summary_table_c169); end
  def test_outputs_summary_table_d169; assert_equal("$bn", worksheet.outputs_summary_table_d169); end
  def test_outputs_summary_table_e169; assert_equal("n / a", worksheet.outputs_summary_table_e169); end
  def test_outputs_summary_table_f169; assert_equal("4618.9", worksheet.outputs_summary_table_f169); end
  def test_outputs_summary_table_g169; assert_equal("", worksheet.outputs_summary_table_g169); end
  def test_outputs_summary_table_c170; assert_equal("Fuel tax rate - coal", worksheet.outputs_summary_table_c170); end
  def test_outputs_summary_table_d170; assert_equal("%", worksheet.outputs_summary_table_d170); end
  def test_outputs_summary_table_e170; assert_equal("n / a", worksheet.outputs_summary_table_e170); end
  def test_outputs_summary_table_f170; assert_equal("39.0%", worksheet.outputs_summary_table_f170); end
  def test_outputs_summary_table_g170; assert_equal("", worksheet.outputs_summary_table_g170); end
  def test_outputs_summary_table_c171; assert_equal("Fuel tax rate - oil", worksheet.outputs_summary_table_c171); end
  def test_outputs_summary_table_d171; assert_equal("%", worksheet.outputs_summary_table_d171); end
  def test_outputs_summary_table_e171; assert_equal("n / a", worksheet.outputs_summary_table_e171); end
  def test_outputs_summary_table_f171; assert_equal("67.0%", worksheet.outputs_summary_table_f171); end
  def test_outputs_summary_table_g171; assert_equal("", worksheet.outputs_summary_table_g171); end
  def test_outputs_summary_table_c172; assert_equal("Fuel tax rate - gas", worksheet.outputs_summary_table_c172); end
  def test_outputs_summary_table_d172; assert_equal("%", worksheet.outputs_summary_table_d172); end
  def test_outputs_summary_table_e172; assert_equal("n / a", worksheet.outputs_summary_table_e172); end
  def test_outputs_summary_table_f172; assert_equal("60.0%", worksheet.outputs_summary_table_f172); end
  def test_outputs_summary_table_g172; assert_equal("", worksheet.outputs_summary_table_g172); end
  def test_outputs_summary_table_c173; assert_equal("Fuel cost (excluding tax) - coal", worksheet.outputs_summary_table_c173); end
  def test_outputs_summary_table_d173; assert_equal("$bn", worksheet.outputs_summary_table_d173); end
  def test_outputs_summary_table_e173; assert_equal("n / a", worksheet.outputs_summary_table_e173); end
  def test_outputs_summary_table_f173; assert_equal("726.1", worksheet.outputs_summary_table_f173); end
  def test_outputs_summary_table_g173; assert_equal("", worksheet.outputs_summary_table_g173); end
  def test_outputs_summary_table_c174; assert_equal("Fuel cost (excluding tax) - oil", worksheet.outputs_summary_table_c174); end
  def test_outputs_summary_table_d174; assert_equal("$bn", worksheet.outputs_summary_table_d174); end
  def test_outputs_summary_table_e174; assert_equal("n / a", worksheet.outputs_summary_table_e174); end
  def test_outputs_summary_table_f174; assert_equal("2364.2", worksheet.outputs_summary_table_f174); end
  def test_outputs_summary_table_g174; assert_equal("", worksheet.outputs_summary_table_g174); end
  def test_outputs_summary_table_c175; assert_equal("Fuel cost (excluding tax) - gas", worksheet.outputs_summary_table_c175); end
  def test_outputs_summary_table_d175; assert_equal("$bn", worksheet.outputs_summary_table_d175); end
  def test_outputs_summary_table_e175; assert_equal("n / a", worksheet.outputs_summary_table_e175); end
  def test_outputs_summary_table_f175; assert_equal("987.0", worksheet.outputs_summary_table_f175); end
  def test_outputs_summary_table_g175; assert_equal("", worksheet.outputs_summary_table_g175); end
  def test_outputs_summary_table_c176; assert_equal("Tax amount paid to exporters - coal", worksheet.outputs_summary_table_c176); end
  def test_outputs_summary_table_d176; assert_equal("$bn", worksheet.outputs_summary_table_d176); end
  def test_outputs_summary_table_e176; assert_equal("n / a", worksheet.outputs_summary_table_e176); end
  def test_outputs_summary_table_f176; assert_equal("464.2", worksheet.outputs_summary_table_f176); end
  def test_outputs_summary_table_g176; assert_equal("", worksheet.outputs_summary_table_g176); end
  def test_outputs_summary_table_c177; assert_equal("Tax amount paid to exporters - oil", worksheet.outputs_summary_table_c177); end
  def test_outputs_summary_table_d177; assert_equal("$bn", worksheet.outputs_summary_table_d177); end
  def test_outputs_summary_table_e177; assert_equal("n / a", worksheet.outputs_summary_table_e177); end
  def test_outputs_summary_table_f177; assert_equal("4799.9", worksheet.outputs_summary_table_f177); end
  def test_outputs_summary_table_g177; assert_equal("", worksheet.outputs_summary_table_g177); end
  def test_outputs_summary_table_c178; assert_equal("Tax amount paid to exporters - gas", worksheet.outputs_summary_table_c178); end
  def test_outputs_summary_table_d178; assert_equal("$bn", worksheet.outputs_summary_table_d178); end
  def test_outputs_summary_table_e178; assert_equal("n / a", worksheet.outputs_summary_table_e178); end
  def test_outputs_summary_table_f178; assert_equal("1480.5", worksheet.outputs_summary_table_f178); end
  def test_outputs_summary_table_g178; assert_equal("", worksheet.outputs_summary_table_g178); end
  def test_outputs_summary_table_c179; assert_equal("Checking calculations below", worksheet.outputs_summary_table_c179); end
  def test_outputs_summary_table_c180; assert_equal("Fuel amount paid (if tax added back in) - coal", worksheet.outputs_summary_table_c180); end
  def test_outputs_summary_table_d180; assert_equal("$bn", worksheet.outputs_summary_table_d180); end
  def test_outputs_summary_table_f180; assert_equal("1190.4", worksheet.outputs_summary_table_f180); end
  def test_outputs_summary_table_c181; assert_equal("Fuel amount paid (if tax added back in) - oil", worksheet.outputs_summary_table_c181); end
  def test_outputs_summary_table_d181; assert_equal("$bn", worksheet.outputs_summary_table_d181); end
  def test_outputs_summary_table_f181; assert_equal("7164.1", worksheet.outputs_summary_table_f181); end
  def test_outputs_summary_table_c182; assert_equal("Fuel amount paid (if tax added back in) - gas", worksheet.outputs_summary_table_c182); end
  def test_outputs_summary_table_d182; assert_equal("$bn", worksheet.outputs_summary_table_d182); end
  def test_outputs_summary_table_f182; assert_equal("2467.5", worksheet.outputs_summary_table_f182); end
  def test_outputs_summary_table_c183; assert_equal("Checking - coal", worksheet.outputs_summary_table_c183); end
  def test_outputs_summary_table_d183; assert_equal("%", worksheet.outputs_summary_table_d183); end
  def test_outputs_summary_table_f183; assert_equal("0.4", worksheet.outputs_summary_table_f183); end
  def test_outputs_summary_table_c184; assert_equal("Checking - oil", worksheet.outputs_summary_table_c184); end
  def test_outputs_summary_table_d184; assert_equal("%", worksheet.outputs_summary_table_d184); end
  def test_outputs_summary_table_f184; assert_equal("0.7", worksheet.outputs_summary_table_f184); end
  def test_outputs_summary_table_c185; assert_equal("Checking - gas", worksheet.outputs_summary_table_c185); end
  def test_outputs_summary_table_d185; assert_equal("%", worksheet.outputs_summary_table_d185); end
  def test_outputs_summary_table_f185; assert_equal("0.6", worksheet.outputs_summary_table_f185); end
  def test_outputs_energy_d62; assert_equal("Transport", worksheet.outputs_energy_d62); end
  def test_outputs_energy_f62; assert_equal("Excludes pipeline transport", worksheet.outputs_energy_f62); end
  def test_outputs_energy_h62; assert_in_epsilon(45.51369989, worksheet.outputs_energy_h62, 0.002); end
  def test_outputs_energy_i62; assert_in_epsilon(51.52193813, worksheet.outputs_energy_i62, 0.002); end
  def test_outputs_energy_j62; assert_in_epsilon(54.43186451, worksheet.outputs_energy_j62, 0.002); end
  def test_outputs_energy_k62; assert_in_epsilon(63.75351718, worksheet.outputs_energy_k62, 0.002); end
  def test_outputs_energy_l62; assert_in_epsilon(69.78995546, worksheet.outputs_energy_l62, 0.002); end
  def test_outputs_energy_m62; assert_in_epsilon(79.59210571, worksheet.outputs_energy_m62, 0.002); end
  def test_outputs_energy_n62; assert_in_epsilon(89.33971209, worksheet.outputs_energy_n62, 0.002); end
  def test_outputs_energy_o62; assert_in_epsilon(98.25619647, worksheet.outputs_energy_o62, 0.002); end
  def test_outputs_energy_p62; assert_in_epsilon(99.72109669, worksheet.outputs_energy_p62, 0.002); end
  def test_outputs_energy_r62; assert_in_epsilon(100.36644159492536, worksheet.outputs_energy_r62, 0.002); end
  def test_outputs_energy_s62; assert_in_epsilon(107.31373036871965, worksheet.outputs_energy_s62, 0.002); end
  def test_outputs_energy_t62; assert_in_epsilon(119.11392758607104, worksheet.outputs_energy_t62, 0.002); end
  def test_outputs_energy_u62; assert_in_epsilon(128.9387220445281, worksheet.outputs_energy_u62, 0.002); end
  def test_outputs_energy_v62; assert_in_epsilon(137.45663090055592, worksheet.outputs_energy_v62, 0.002); end
  def test_outputs_energy_w62; assert_in_epsilon(143.8748474113799, worksheet.outputs_energy_w62, 0.002); end
  def test_outputs_energy_x62; assert_in_epsilon(149.11522570076184, worksheet.outputs_energy_x62, 0.002); end
  def test_outputs_energy_y62; assert_in_epsilon(154.09471311847366, worksheet.outputs_energy_y62, 0.002); end
  def test_outputs_energy_z62; assert_in_epsilon(158.90896655918868, worksheet.outputs_energy_z62, 0.002); end
  def test_outputs_energy_d64; assert_equal("Residential, public and commercial", worksheet.outputs_energy_d64); end
  def test_outputs_energy_h64; assert_in_epsilon(64.751263, worksheet.outputs_energy_h64, 0.002); end
  def test_outputs_energy_i64; assert_in_epsilon(71.065102, worksheet.outputs_energy_i64, 0.002); end
  def test_outputs_energy_j64; assert_in_epsilon(78.65053599999999, worksheet.outputs_energy_j64, 0.002); end
  def test_outputs_energy_k64; assert_in_epsilon(83.372944, worksheet.outputs_energy_k64, 0.002); end
  def test_outputs_energy_l64; assert_in_epsilon(93.688429, worksheet.outputs_energy_l64, 0.002); end
  def test_outputs_energy_m64; assert_in_epsilon(99.817678, worksheet.outputs_energy_m64, 0.002); end
  def test_outputs_energy_n64; assert_in_epsilon(108.462211, worksheet.outputs_energy_n64, 0.002); end
  def test_outputs_energy_o64; assert_in_epsilon(116.897329, worksheet.outputs_energy_o64, 0.002); end
  def test_outputs_energy_p64; assert_in_epsilon(116.729656, worksheet.outputs_energy_p64, 0.002); end
  def test_outputs_energy_r64; assert_in_epsilon(116.28805541134336, worksheet.outputs_energy_r64, 0.002); end
  def test_outputs_energy_s64; assert_in_epsilon(119.25087097183336, worksheet.outputs_energy_s64, 0.002); end
  def test_outputs_energy_t64; assert_in_epsilon(126.74689175620739, worksheet.outputs_energy_t64, 0.002); end
  def test_outputs_energy_u64; assert_in_epsilon(134.08875187018586, worksheet.outputs_energy_u64, 0.002); end
  def test_outputs_energy_v64; assert_in_epsilon(141.20738159048688, worksheet.outputs_energy_v64, 0.002); end
  def test_outputs_energy_w64; assert_in_epsilon(148.0841448014541, worksheet.outputs_energy_w64, 0.002); end
  def test_outputs_energy_x64; assert_in_epsilon(154.6305828304511, worksheet.outputs_energy_x64, 0.002); end
  def test_outputs_energy_y64; assert_in_epsilon(160.86608702666075, worksheet.outputs_energy_y64, 0.002); end
  def test_outputs_energy_z64; assert_in_epsilon(166.64876648812694, worksheet.outputs_energy_z64, 0.002); end
  def test_outputs_energy_d66; assert_equal("Manufacturing", worksheet.outputs_energy_d66); end
  def test_outputs_energy_h66; assert_in_epsilon(77.74494084, worksheet.outputs_energy_h66, 0.002); end
  def test_outputs_energy_i66; assert_in_epsilon(90.57849988, worksheet.outputs_energy_i66, 0.002); end
  def test_outputs_energy_j66; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j66, 0.002); end
  def test_outputs_energy_k66; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k66, 0.002); end
  def test_outputs_energy_l66; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l66, 0.002); end
  def test_outputs_energy_m66; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m66, 0.002); end
  def test_outputs_energy_n66; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n66, 0.002); end
  def test_outputs_energy_o66; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o66, 0.002); end
  def test_outputs_energy_p66; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p66, 0.002); end
  def test_outputs_energy_r66; assert_in_epsilon(143.34762076351507, worksheet.outputs_energy_r66, 0.002); end
  def test_outputs_energy_s66; assert_in_epsilon(151.49963900104734, worksheet.outputs_energy_s66, 0.002); end
  def test_outputs_energy_t66; assert_in_epsilon(166.25906496315287, worksheet.outputs_energy_t66, 0.002); end
  def test_outputs_energy_u66; assert_in_epsilon(182.70409185086723, worksheet.outputs_energy_u66, 0.002); end
  def test_outputs_energy_v66; assert_in_epsilon(199.2875612413517, worksheet.outputs_energy_v66, 0.002); end
  def test_outputs_energy_w66; assert_in_epsilon(215.69706490547424, worksheet.outputs_energy_w66, 0.002); end
  def test_outputs_energy_x66; assert_in_epsilon(232.98622089315992, worksheet.outputs_energy_x66, 0.002); end
  def test_outputs_energy_y66; assert_in_epsilon(250.4232864090772, worksheet.outputs_energy_y66, 0.002); end
  def test_outputs_energy_z66; assert_in_epsilon(268.8114502458568, worksheet.outputs_energy_z66, 0.002); end
  def test_outputs_energy_d68; assert_equal("Other end uses", worksheet.outputs_energy_d68); end
  def test_outputs_energy_h68; assert_in_epsilon(11.382796, worksheet.outputs_energy_h68, 0.002); end
  def test_outputs_energy_i68; assert_in_epsilon(12.904924, worksheet.outputs_energy_i68, 0.002); end
  def test_outputs_energy_j68; assert_in_epsilon(13.314676, worksheet.outputs_energy_j68, 0.002); end
  def test_outputs_energy_k68; assert_in_epsilon(18.042997, worksheet.outputs_energy_k68, 0.002); end
  def test_outputs_energy_l68; assert_in_epsilon(11.223171, worksheet.outputs_energy_l68, 0.002); end
  def test_outputs_energy_m68; assert_in_epsilon(9.567384, worksheet.outputs_energy_m68, 0.002); end
  def test_outputs_energy_n68; assert_in_epsilon(11.61567, worksheet.outputs_energy_n68, 0.002); end
  def test_outputs_energy_o68; assert_in_epsilon(12.64839, worksheet.outputs_energy_o68, 0.002); end
  def test_outputs_energy_p68; assert_in_epsilon(12.784689, worksheet.outputs_energy_p68, 0.002); end
  def test_outputs_energy_r68; assert_in_epsilon(12.417000000000002, worksheet.outputs_energy_r68, 0.002); end
  def test_outputs_energy_s68; assert_in_epsilon(12.853527785807515, worksheet.outputs_energy_s68, 0.002); end
  def test_outputs_energy_t68; assert_in_epsilon(13.49559847689319, worksheet.outputs_energy_t68, 0.002); end
  def test_outputs_energy_u68; assert_in_epsilon(14.107638898634557, worksheet.outputs_energy_u68, 0.002); end
  def test_outputs_energy_v68; assert_in_epsilon(14.7102726737228, worksheet.outputs_energy_v68, 0.002); end
  def test_outputs_energy_w68; assert_in_epsilon(15.301157710141613, worksheet.outputs_energy_w68, 0.002); end
  def test_outputs_energy_x68; assert_in_epsilon(15.855626721815685, worksheet.outputs_energy_x68, 0.002); end
  def test_outputs_energy_y68; assert_in_epsilon(16.323873800934678, worksheet.outputs_energy_y68, 0.002); end
  def test_outputs_energy_z68; assert_in_epsilon(16.74151736067139, worksheet.outputs_energy_z68, 0.002); end
  def test_outputs_energy_d70; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_d70); end
  def test_outputs_energy_h70; assert_in_delta(0.0, (worksheet.outputs_energy_h70||0), 0.002); end
  def test_outputs_energy_i70; assert_in_delta(0.0, (worksheet.outputs_energy_i70||0), 0.002); end
  def test_outputs_energy_j70; assert_in_delta(0.0, (worksheet.outputs_energy_j70||0), 0.002); end
  def test_outputs_energy_k70; assert_in_delta(0.0, (worksheet.outputs_energy_k70||0), 0.002); end
  def test_outputs_energy_l70; assert_in_delta(0.0, (worksheet.outputs_energy_l70||0), 0.002); end
  def test_outputs_energy_m70; assert_in_delta(0.0, (worksheet.outputs_energy_m70||0), 0.002); end
  def test_outputs_energy_n70; assert_in_delta(0.0, (worksheet.outputs_energy_n70||0), 0.002); end
  def test_outputs_energy_o70; assert_in_delta(0.0, (worksheet.outputs_energy_o70||0), 0.002); end
  def test_outputs_energy_p70; assert_in_delta(0.0, (worksheet.outputs_energy_p70||0), 0.002); end
  def test_outputs_energy_r70; assert_in_delta(0.0, (worksheet.outputs_energy_r70||0), 0.002); end
  def test_outputs_energy_s70; assert_in_delta(0.0, (worksheet.outputs_energy_s70||0), 0.002); end
  def test_outputs_energy_t70; assert_in_delta(0.0, (worksheet.outputs_energy_t70||0), 0.002); end
  def test_outputs_energy_u70; assert_in_delta(0.0, (worksheet.outputs_energy_u70||0), 0.002); end
  def test_outputs_energy_v70; assert_in_delta(0.0, (worksheet.outputs_energy_v70||0), 0.002); end
  def test_outputs_energy_w70; assert_in_delta(0.0, (worksheet.outputs_energy_w70||0), 0.002); end
  def test_outputs_energy_x70; assert_in_delta(0.0, (worksheet.outputs_energy_x70||0), 0.002); end
  def test_outputs_energy_y70; assert_in_delta(0.0, (worksheet.outputs_energy_y70||0), 0.002); end
  def test_outputs_energy_z70; assert_in_delta(0.0, (worksheet.outputs_energy_z70||0), 0.002); end
  def test_outputs_energy_d110; assert_equal("Description", worksheet.outputs_energy_d110); end
  def test_outputs_energy_f110; assert_equal("Notes", worksheet.outputs_energy_f110); end
  def test_outputs_energy_h110; assert_equal("1975", worksheet.outputs_energy_h110); end
  def test_outputs_energy_i110; assert_equal("1980", worksheet.outputs_energy_i110); end
  def test_outputs_energy_j110; assert_equal("1985", worksheet.outputs_energy_j110); end
  def test_outputs_energy_k110; assert_equal("1990", worksheet.outputs_energy_k110); end
  def test_outputs_energy_l110; assert_equal("1995", worksheet.outputs_energy_l110); end
  def test_outputs_energy_m110; assert_equal("2000", worksheet.outputs_energy_m110); end
  def test_outputs_energy_n110; assert_equal("2005", worksheet.outputs_energy_n110); end
  def test_outputs_energy_o110; assert_in_epsilon(2010.0, worksheet.outputs_energy_o110, 0.002); end
  def test_outputs_energy_p110; assert_in_epsilon(2011.0, worksheet.outputs_energy_p110, 0.002); end
  def test_outputs_energy_r110; assert_in_epsilon(2011.0, worksheet.outputs_energy_r110, 0.002); end
  def test_outputs_energy_s110; assert_equal("2015", worksheet.outputs_energy_s110); end
  def test_outputs_energy_t110; assert_equal("2020", worksheet.outputs_energy_t110); end
  def test_outputs_energy_u110; assert_equal("2025", worksheet.outputs_energy_u110); end
  def test_outputs_energy_v110; assert_equal("2030", worksheet.outputs_energy_v110); end
  def test_outputs_energy_w110; assert_equal("2035", worksheet.outputs_energy_w110); end
  def test_outputs_energy_x110; assert_equal("2040", worksheet.outputs_energy_x110); end
  def test_outputs_energy_y110; assert_equal("2045", worksheet.outputs_energy_y110); end
  def test_outputs_energy_z110; assert_equal("2050", worksheet.outputs_energy_z110); end
  def test_outputs_energy_d111; assert_equal("Global nuclear fission", worksheet.outputs_energy_d111); end
  def test_outputs_energy_h111; assert_in_epsilon(4.19362582, worksheet.outputs_energy_h111, 0.002); end
  def test_outputs_energy_i111; assert_in_epsilon(7.8046283700000005, worksheet.outputs_energy_i111, 0.002); end
  def test_outputs_energy_j111; assert_in_epsilon(16.30822419, worksheet.outputs_energy_j111, 0.002); end
  def test_outputs_energy_k111; assert_in_epsilon(22.00642022, worksheet.outputs_energy_k111, 0.002); end
  def test_outputs_energy_l111; assert_in_epsilon(25.464435710000004, worksheet.outputs_energy_l111, 0.002); end
  def test_outputs_energy_m111; assert_in_epsilon(28.28553115, worksheet.outputs_energy_m111, 0.002); end
  def test_outputs_energy_n111; assert_in_epsilon(30.221805240000002, worksheet.outputs_energy_n111, 0.002); end
  def test_outputs_energy_o111; assert_in_epsilon(30.10136047, worksheet.outputs_energy_o111, 0.002); end
  def test_outputs_energy_p111; assert_in_epsilon(28.219279020000002, worksheet.outputs_energy_p111, 0.002); end
  def test_outputs_energy_r111; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_r111, 0.002); end
  def test_outputs_energy_s111; assert_in_epsilon(32.24522588695181, worksheet.outputs_energy_s111, 0.002); end
  def test_outputs_energy_t111; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_t111, 0.002); end
  def test_outputs_energy_u111; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_u111, 0.002); end
  def test_outputs_energy_v111; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_v111, 0.002); end
  def test_outputs_energy_w111; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_w111, 0.002); end
  def test_outputs_energy_x111; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_x111, 0.002); end
  def test_outputs_energy_y111; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_y111, 0.002); end
  def test_outputs_energy_z111; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_z111, 0.002); end
  def test_outputs_energy_d113; assert_equal("Global solar, wind, wave and tidal", worksheet.outputs_energy_d113); end
  def test_outputs_energy_h113; assert_in_delta(0.0020015000000000002, worksheet.outputs_energy_h113, 0.002); end
  def test_outputs_energy_i113; assert_in_delta(0.00299071, worksheet.outputs_energy_i113, 0.002); end
  def test_outputs_energy_j113; assert_in_delta(0.01511665, worksheet.outputs_energy_j113, 0.002); end
  def test_outputs_energy_k113; assert_in_delta(0.09888171, worksheet.outputs_energy_k113, 0.002); end
  def test_outputs_energy_l113; assert_in_delta(0.13671401, worksheet.outputs_energy_l113, 0.002); end
  def test_outputs_energy_m113; assert_in_delta(0.33011757999999997, worksheet.outputs_energy_m113, 0.002); end
  def test_outputs_energy_n113; assert_in_delta(0.6894200899999999, worksheet.outputs_energy_n113, 0.002); end
  def test_outputs_energy_o113; assert_in_epsilon(1.98106908, worksheet.outputs_energy_o113, 0.002); end
  def test_outputs_energy_p113; assert_in_epsilon(2.55947734, worksheet.outputs_energy_p113, 0.002); end
  def test_outputs_energy_r113; assert_in_epsilon(1.835384616144, worksheet.outputs_energy_r113, 0.002); end
  def test_outputs_energy_s113; assert_in_epsilon(3.446450807984755, worksheet.outputs_energy_s113, 0.002); end
  def test_outputs_energy_t113; assert_in_epsilon(4.435826167076694, worksheet.outputs_energy_t113, 0.002); end
  def test_outputs_energy_u113; assert_in_epsilon(5.075782974158291, worksheet.outputs_energy_u113, 0.002); end
  def test_outputs_energy_v113; assert_in_epsilon(5.411762193297449, worksheet.outputs_energy_v113, 0.002); end
  def test_outputs_energy_w113; assert_in_epsilon(4.873570487771148, worksheet.outputs_energy_w113, 0.002); end
  def test_outputs_energy_x113; assert_in_epsilon(5.7255696711834405, worksheet.outputs_energy_x113, 0.002); end
  def test_outputs_energy_y113; assert_in_epsilon(8.944207940911523, worksheet.outputs_energy_y113, 0.002); end
  def test_outputs_energy_z113; assert_in_epsilon(11.457227449909787, worksheet.outputs_energy_z113, 0.002); end
  def test_outputs_energy_d115; assert_equal("Global geothermal", worksheet.outputs_energy_d115); end
  def test_outputs_energy_h115; assert_in_delta(0.30633308, worksheet.outputs_energy_h115, 0.002); end
  def test_outputs_energy_i115; assert_in_delta(0.51899125, worksheet.outputs_energy_i115, 0.002); end
  def test_outputs_energy_j115; assert_in_delta(0.87833525, worksheet.outputs_energy_j115, 0.002); end
  def test_outputs_energy_k115; assert_in_epsilon(1.42030705, worksheet.outputs_energy_k115, 0.002); end
  def test_outputs_energy_l115; assert_in_epsilon(1.64006674, worksheet.outputs_energy_l115, 0.002); end
  def test_outputs_energy_m115; assert_in_epsilon(2.1821505699999997, worksheet.outputs_energy_m115, 0.002); end
  def test_outputs_energy_n115; assert_in_epsilon(2.25915872, worksheet.outputs_energy_n115, 0.002); end
  def test_outputs_energy_o115; assert_in_epsilon(2.70416419, worksheet.outputs_energy_o115, 0.002); end
  def test_outputs_energy_p115; assert_in_epsilon(2.75792299, worksheet.outputs_energy_p115, 0.002); end
  def test_outputs_energy_r115; assert_in_epsilon(2.6331345863999998, worksheet.outputs_energy_r115, 0.002); end
  def test_outputs_energy_s115; assert_in_epsilon(3.333192775560331, worksheet.outputs_energy_s115, 0.002); end
  def test_outputs_energy_t115; assert_in_epsilon(4.05129719053816, worksheet.outputs_energy_t115, 0.002); end
  def test_outputs_energy_u115; assert_in_epsilon(4.604258176820889, worksheet.outputs_energy_u115, 0.002); end
  def test_outputs_energy_v115; assert_in_epsilon(5.397928321023374, worksheet.outputs_energy_v115, 0.002); end
  def test_outputs_energy_w115; assert_in_epsilon(8.324611130012148, worksheet.outputs_energy_w115, 0.002); end
  def test_outputs_energy_x115; assert_in_epsilon(10.340892269938646, worksheet.outputs_energy_x115, 0.002); end
  def test_outputs_energy_y115; assert_in_epsilon(14.435253893337357, worksheet.outputs_energy_y115, 0.002); end
  def test_outputs_energy_z115; assert_in_epsilon(18.07530311459353, worksheet.outputs_energy_z115, 0.002); end
  def test_outputs_energy_d117; assert_equal("Global hydro", worksheet.outputs_energy_d117); end
  def test_outputs_energy_h117; assert_in_epsilon(5.19828432, worksheet.outputs_energy_h117, 0.002); end
  def test_outputs_energy_i117; assert_in_epsilon(6.1818085300000005, worksheet.outputs_energy_i117, 0.002); end
  def test_outputs_energy_j117; assert_in_epsilon(7.10472662, worksheet.outputs_energy_j117, 0.002); end
  def test_outputs_energy_k117; assert_in_epsilon(7.721542830000001, worksheet.outputs_energy_k117, 0.002); end
  def test_outputs_energy_l117; assert_in_epsilon(8.93036678, worksheet.outputs_energy_l117, 0.002); end
  def test_outputs_energy_m117; assert_in_epsilon(9.43535406, worksheet.outputs_energy_m117, 0.002); end
  def test_outputs_energy_n117; assert_in_epsilon(10.548209940000001, worksheet.outputs_energy_n117, 0.002); end
  def test_outputs_energy_o117; assert_in_epsilon(12.39218819, worksheet.outputs_energy_o117, 0.002); end
  def test_outputs_energy_p117; assert_in_epsilon(12.56761896, worksheet.outputs_energy_p117, 0.002); end
  def test_outputs_energy_r117; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r117, 0.002); end
  def test_outputs_energy_s117; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s117, 0.002); end
  def test_outputs_energy_t117; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t117, 0.002); end
  def test_outputs_energy_u117; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u117, 0.002); end
  def test_outputs_energy_v117; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v117, 0.002); end
  def test_outputs_energy_w117; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w117, 0.002); end
  def test_outputs_energy_x117; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x117, 0.002); end
  def test_outputs_energy_y117; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y117, 0.002); end
  def test_outputs_energy_z117; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z117, 0.002); end
  def test_outputs_energy_d119; assert_equal("Global bioenergy and waste", worksheet.outputs_energy_d119); end
  def test_outputs_energy_f119; assert_equal("Includes non-renewable waste", worksheet.outputs_energy_f119); end
  def test_outputs_energy_h119; assert_in_epsilon(27.98767366, worksheet.outputs_energy_h119, 0.002); end
  def test_outputs_energy_i119; assert_in_epsilon(31.29700324, worksheet.outputs_energy_i119, 0.002); end
  def test_outputs_energy_j119; assert_in_epsilon(34.98284341, worksheet.outputs_energy_j119, 0.002); end
  def test_outputs_energy_k119; assert_in_epsilon(37.95396458, worksheet.outputs_energy_k119, 0.002); end
  def test_outputs_energy_l119; assert_in_epsilon(40.54645287, worksheet.outputs_energy_l119, 0.002); end
  def test_outputs_energy_m119; assert_in_epsilon(43.24484074, worksheet.outputs_energy_m119, 0.002); end
  def test_outputs_energy_n119; assert_in_epsilon(47.20029634, worksheet.outputs_energy_n119, 0.002); end
  def test_outputs_energy_o119; assert_in_epsilon(54.22172151, worksheet.outputs_energy_o119, 0.002); end
  def test_outputs_energy_p119; assert_in_epsilon(54.93713229, worksheet.outputs_energy_p119, 0.002); end
  def test_outputs_energy_r119; assert_in_epsilon(58.797381534610764, worksheet.outputs_energy_r119, 0.002); end
  def test_outputs_energy_s119; assert_in_epsilon(57.04544509278239, worksheet.outputs_energy_s119, 0.002); end
  def test_outputs_energy_t119; assert_in_epsilon(56.99533212169929, worksheet.outputs_energy_t119, 0.002); end
  def test_outputs_energy_u119; assert_in_epsilon(56.89375450237851, worksheet.outputs_energy_u119, 0.002); end
  def test_outputs_energy_v119; assert_in_epsilon(56.829056142117125, worksheet.outputs_energy_v119, 0.002); end
  def test_outputs_energy_w119; assert_in_epsilon(57.12109444168682, worksheet.outputs_energy_w119, 0.002); end
  def test_outputs_energy_x119; assert_in_epsilon(57.559693083437395, worksheet.outputs_energy_x119, 0.002); end
  def test_outputs_energy_y119; assert_in_epsilon(58.66364902533523, worksheet.outputs_energy_y119, 0.002); end
  def test_outputs_energy_z119; assert_in_epsilon(68.03252199635332, worksheet.outputs_energy_z119, 0.002); end
  def test_outputs_energy_d121; assert_equal("Global heat", worksheet.outputs_energy_d121); end
  def test_outputs_energy_h121; assert_in_delta(0.0, (worksheet.outputs_energy_h121||0), 0.002); end
  def test_outputs_energy_i121; assert_in_delta(0.0, (worksheet.outputs_energy_i121||0), 0.002); end
  def test_outputs_energy_j121; assert_in_delta(0.0, (worksheet.outputs_energy_j121||0), 0.002); end
  def test_outputs_energy_k121; assert_in_delta(0.00596866, worksheet.outputs_energy_k121, 0.002); end
  def test_outputs_energy_l121; assert_in_delta(0.01832307, worksheet.outputs_energy_l121, 0.002); end
  def test_outputs_energy_m121; assert_in_delta(0.0302848, worksheet.outputs_energy_m121, 0.002); end
  def test_outputs_energy_n121; assert_in_delta(0.03805726, worksheet.outputs_energy_n121, 0.002); end
  def test_outputs_energy_o121; assert_in_delta(0.04253198, worksheet.outputs_energy_o121, 0.002); end
  def test_outputs_energy_p121; assert_in_delta(0.04491708, worksheet.outputs_energy_p121, 0.002); end
  def test_outputs_energy_r121; assert_in_epsilon(4.838497586627763, worksheet.outputs_energy_r121, 0.002); end
  def test_outputs_energy_s121; assert_in_epsilon(4.959634371282641, worksheet.outputs_energy_s121, 0.002); end
  def test_outputs_energy_t121; assert_in_epsilon(5.903603044430923, worksheet.outputs_energy_t121, 0.002); end
  def test_outputs_energy_u121; assert_in_epsilon(6.927936888455828, worksheet.outputs_energy_u121, 0.002); end
  def test_outputs_energy_v121; assert_in_epsilon(8.01722380337326, worksheet.outputs_energy_v121, 0.002); end
  def test_outputs_energy_w121; assert_in_epsilon(9.144127512910707, worksheet.outputs_energy_w121, 0.002); end
  def test_outputs_energy_x121; assert_in_epsilon(10.317894221251617, worksheet.outputs_energy_x121, 0.002); end
  def test_outputs_energy_y121; assert_in_epsilon(11.504032063018018, worksheet.outputs_energy_y121, 0.002); end
  def test_outputs_energy_z121; assert_in_epsilon(12.715755364974981, worksheet.outputs_energy_z121, 0.002); end
  def test_outputs_energy_d123; assert_equal("Global coal and peat", worksheet.outputs_energy_d123); end
  def test_outputs_energy_h123; assert_in_epsilon(64.46762364, worksheet.outputs_energy_h123, 0.002); end
  def test_outputs_energy_i123; assert_in_epsilon(74.84613603, worksheet.outputs_energy_i123, 0.002); end
  def test_outputs_energy_j123; assert_in_epsilon(84.35058561, worksheet.outputs_energy_j123, 0.002); end
  def test_outputs_energy_k123; assert_in_epsilon(93.38481894, worksheet.outputs_energy_k123, 0.002); end
  def test_outputs_energy_l123; assert_in_epsilon(93.03324736, worksheet.outputs_energy_l123, 0.002); end
  def test_outputs_energy_m123; assert_in_epsilon(98.72034811, worksheet.outputs_energy_m123, 0.002); end
  def test_outputs_energy_n123; assert_in_epsilon(124.50467193, worksheet.outputs_energy_n123, 0.002); end
  def test_outputs_energy_o123; assert_in_epsilon(150.53606094, worksheet.outputs_energy_o123, 0.002); end
  def test_outputs_energy_p123; assert_in_epsilon(158.09611592, worksheet.outputs_energy_p123, 0.002); end
  def test_outputs_energy_r123; assert_in_epsilon(175.90304080898272, worksheet.outputs_energy_r123, 0.002); end
  def test_outputs_energy_s123; assert_in_epsilon(175.78205509139954, worksheet.outputs_energy_s123, 0.002); end
  def test_outputs_energy_t123; assert_in_epsilon(192.53479301863854, worksheet.outputs_energy_t123, 0.002); end
  def test_outputs_energy_u123; assert_in_epsilon(217.8301614143161, worksheet.outputs_energy_u123, 0.002); end
  def test_outputs_energy_v123; assert_in_epsilon(236.23134223158613, worksheet.outputs_energy_v123, 0.002); end
  def test_outputs_energy_w123; assert_in_epsilon(252.89206992929917, worksheet.outputs_energy_w123, 0.002); end
  def test_outputs_energy_x123; assert_in_epsilon(264.89870894824907, worksheet.outputs_energy_x123, 0.002); end
  def test_outputs_energy_y123; assert_in_epsilon(263.0223991533689, worksheet.outputs_energy_y123, 0.002); end
  def test_outputs_energy_z123; assert_in_epsilon(261.0768931043875, worksheet.outputs_energy_z123, 0.002); end
  def test_outputs_energy_d125; assert_equal("Global oil ", worksheet.outputs_energy_d125); end
  def test_outputs_energy_h125; assert_in_epsilon(116.5233284, worksheet.outputs_energy_h125, 0.002); end
  def test_outputs_energy_i125; assert_in_epsilon(131.85643926000003, worksheet.outputs_energy_i125, 0.002); end
  def test_outputs_energy_j125; assert_in_epsilon(122.84000791, worksheet.outputs_energy_j125, 0.002); end
  def test_outputs_energy_k125; assert_in_epsilon(137.87919456, worksheet.outputs_energy_k125, 0.002); end
  def test_outputs_energy_l125; assert_in_epsilon(143.51359745, worksheet.outputs_energy_l125, 0.002); end
  def test_outputs_energy_m125; assert_in_epsilon(156.74377747, worksheet.outputs_energy_m125, 0.002); end
  def test_outputs_energy_n125; assert_in_epsilon(171.78327319000002, worksheet.outputs_energy_n125, 0.002); end
  def test_outputs_energy_o125; assert_in_epsilon(175.91941010000002, worksheet.outputs_energy_o125, 0.002); end
  def test_outputs_energy_p125; assert_in_epsilon(176.66494085000002, worksheet.outputs_energy_p125, 0.002); end
  def test_outputs_energy_r125; assert_in_epsilon(177.65094462909968, worksheet.outputs_energy_r125, 0.002); end
  def test_outputs_energy_s125; assert_in_epsilon(185.5125760085881, worksheet.outputs_energy_s125, 0.002); end
  def test_outputs_energy_t125; assert_in_epsilon(213.70723328917296, worksheet.outputs_energy_t125, 0.002); end
  def test_outputs_energy_u125; assert_in_epsilon(231.68794379940942, worksheet.outputs_energy_u125, 0.002); end
  def test_outputs_energy_v125; assert_in_epsilon(253.71987719867275, worksheet.outputs_energy_v125, 0.002); end
  def test_outputs_energy_w125; assert_in_epsilon(264.1044291253037, worksheet.outputs_energy_w125, 0.002); end
  def test_outputs_energy_x125; assert_in_epsilon(279.9211073628609, worksheet.outputs_energy_x125, 0.002); end
  def test_outputs_energy_y125; assert_in_epsilon(297.84875361510325, worksheet.outputs_energy_y125, 0.002); end
  def test_outputs_energy_z125; assert_in_epsilon(306.51481807485186, worksheet.outputs_energy_z125, 0.002); end
  def test_outputs_energy_d127; assert_equal("Global gas ", worksheet.outputs_energy_d127); end
  def test_outputs_energy_h127; assert_in_epsilon(41.88575614, worksheet.outputs_energy_h127, 0.002); end
  def test_outputs_energy_i127; assert_in_epsilon(51.657453589999996, worksheet.outputs_energy_i127, 0.002); end
  def test_outputs_energy_j127; assert_in_epsilon(59.13014466, worksheet.outputs_energy_j127, 0.002); end
  def test_outputs_energy_k127; assert_in_epsilon(69.82757047999999, worksheet.outputs_energy_k127, 0.002); end
  def test_outputs_energy_l127; assert_in_epsilon(75.88166314, worksheet.outputs_energy_l127, 0.002); end
  def test_outputs_energy_m127; assert_in_epsilon(86.75456712, worksheet.outputs_energy_m127, 0.002); end
  def test_outputs_energy_n127; assert_in_epsilon(99.02950624, worksheet.outputs_energy_n127, 0.002); end
  def test_outputs_energy_o127; assert_in_epsilon(114.72290836, worksheet.outputs_energy_o127, 0.002); end
  def test_outputs_energy_p127; assert_in_epsilon(116.68415746000001, worksheet.outputs_energy_p127, 0.002); end
  def test_outputs_energy_r127; assert_in_epsilon(119.92193161322383, worksheet.outputs_energy_r127, 0.002); end
  def test_outputs_energy_s127; assert_in_epsilon(121.6790424762989, worksheet.outputs_energy_s127, 0.002); end
  def test_outputs_energy_t127; assert_in_epsilon(134.57461369841306, worksheet.outputs_energy_t127, 0.002); end
  def test_outputs_energy_u127; assert_in_epsilon(147.7677043564773, worksheet.outputs_energy_u127, 0.002); end
  def test_outputs_energy_v127; assert_in_epsilon(160.3301675153424, worksheet.outputs_energy_v127, 0.002); end
  def test_outputs_energy_w127; assert_in_epsilon(174.48985834288388, worksheet.outputs_energy_w127, 0.002); end
  def test_outputs_energy_x127; assert_in_epsilon(192.53224923884153, worksheet.outputs_energy_x127, 0.002); end
  def test_outputs_energy_y127; assert_in_epsilon(213.15854100631574, worksheet.outputs_energy_y127, 0.002); end
  def test_outputs_energy_z127; assert_in_epsilon(235.38393059229364, worksheet.outputs_energy_z127, 0.002); end
  def test_outputs_energy_c478; assert_equal("Description", worksheet.outputs_energy_c478); end
  def test_outputs_energy_r478; assert_in_epsilon(2011.0, worksheet.outputs_energy_r478, 0.002); end
  def test_outputs_energy_s478; assert_equal("2015", worksheet.outputs_energy_s478); end
  def test_outputs_energy_t478; assert_equal("2020", worksheet.outputs_energy_t478); end
  def test_outputs_energy_u478; assert_equal("2025", worksheet.outputs_energy_u478); end
  def test_outputs_energy_v478; assert_equal("2030", worksheet.outputs_energy_v478); end
  def test_outputs_energy_w478; assert_equal("2035", worksheet.outputs_energy_w478); end
  def test_outputs_energy_x478; assert_equal("2040", worksheet.outputs_energy_x478); end
  def test_outputs_energy_y478; assert_equal("2045", worksheet.outputs_energy_y478); end
  def test_outputs_energy_z478; assert_equal("2050", worksheet.outputs_energy_z478); end
  def test_outputs_energy_c479; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_c479); end
  def test_outputs_energy_i479; assert_equal("G.M.02", worksheet.outputs_energy_i479); end
  def test_outputs_energy_r479; assert_in_epsilon(1.3689321930948124, worksheet.outputs_energy_r479, 0.002); end
  def test_outputs_energy_s479; assert_in_epsilon(1.5133365266199588, worksheet.outputs_energy_s479, 0.002); end
  def test_outputs_energy_t479; assert_in_epsilon(1.7084396286904329, worksheet.outputs_energy_t479, 0.002); end
  def test_outputs_energy_u479; assert_in_epsilon(1.9605942776022762, worksheet.outputs_energy_u479, 0.002); end
  def test_outputs_energy_v479; assert_in_epsilon(2.2289844417436173, worksheet.outputs_energy_v479, 0.002); end
  def test_outputs_energy_w479; assert_in_epsilon(2.5037690774617336, worksheet.outputs_energy_w479, 0.002); end
  def test_outputs_energy_x479; assert_in_epsilon(2.8114413096069635, worksheet.outputs_energy_x479, 0.002); end
  def test_outputs_energy_y479; assert_in_epsilon(3.1453847516772777, worksheet.outputs_energy_y479, 0.002); end
  def test_outputs_energy_z479; assert_in_epsilon(3.521011364395237, worksheet.outputs_energy_z479, 0.002); end
  def test_outputs_energy_c480; assert_equal("Aluminium.Primary", worksheet.outputs_energy_c480); end
  def test_outputs_energy_i480; assert_equal("G.M.02", worksheet.outputs_energy_i480); end
  def test_outputs_energy_r480; assert_in_epsilon(2.7584780625440373, worksheet.outputs_energy_r480, 0.002); end
  def test_outputs_energy_s480; assert_in_epsilon(3.033836041196668, worksheet.outputs_energy_s480, 0.002); end
  def test_outputs_energy_t480; assert_in_epsilon(3.4078299634890867, worksheet.outputs_energy_t480, 0.002); end
  def test_outputs_energy_u480; assert_in_epsilon(3.89113860056518, worksheet.outputs_energy_u480, 0.002); end
  def test_outputs_energy_v480; assert_in_epsilon(4.40144809965011, worksheet.outputs_energy_v480, 0.002); end
  def test_outputs_energy_w480; assert_in_epsilon(4.918936017803093, worksheet.outputs_energy_w480, 0.002); end
  def test_outputs_energy_x480; assert_in_epsilon(5.495192857531394, worksheet.outputs_energy_x480, 0.002); end
  def test_outputs_energy_y480; assert_in_epsilon(6.116363009067477, worksheet.outputs_energy_y480, 0.002); end
  def test_outputs_energy_z480; assert_in_epsilon(6.8114706118797725, worksheet.outputs_energy_z480, 0.002); end
  def test_outputs_energy_c481; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_c481); end
  def test_outputs_energy_i481; assert_equal("G.M.02", worksheet.outputs_energy_i481); end
  def test_outputs_energy_r481; assert_in_delta(0.26361993307490655, worksheet.outputs_energy_r481, 0.002); end
  def test_outputs_energy_s481; assert_in_delta(0.26915007332586927, worksheet.outputs_energy_s481, 0.002); end
  def test_outputs_energy_t481; assert_in_delta(0.26554724373097355, worksheet.outputs_energy_t481, 0.002); end
  def test_outputs_energy_u481; assert_in_delta(0.2640206817677008, worksheet.outputs_energy_u481, 0.002); end
  def test_outputs_energy_v481; assert_in_delta(0.25719069661546934, worksheet.outputs_energy_v481, 0.002); end
  def test_outputs_energy_w481; assert_in_delta(0.24400654414493472, worksheet.outputs_energy_w481, 0.002); end
  def test_outputs_energy_x481; assert_in_delta(0.22703347644747893, worksheet.outputs_energy_x481, 0.002); end
  def test_outputs_energy_y481; assert_in_delta(0.20498232353572401, worksheet.outputs_energy_y481, 0.002); end
  def test_outputs_energy_z481; assert_in_delta(0.1781878211705702, worksheet.outputs_energy_z481, 0.002); end
  def test_outputs_energy_c482; assert_equal("Total", worksheet.outputs_energy_c482); end
  def test_outputs_energy_r482; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r482, 0.002); end
  def test_outputs_energy_s482; assert_in_epsilon(4.816322641142496, worksheet.outputs_energy_s482, 0.002); end
  def test_outputs_energy_t482; assert_in_epsilon(5.381816835910493, worksheet.outputs_energy_t482, 0.002); end
  def test_outputs_energy_u482; assert_in_epsilon(6.115753559935157, worksheet.outputs_energy_u482, 0.002); end
  def test_outputs_energy_v482; assert_in_epsilon(6.887623238009196, worksheet.outputs_energy_v482, 0.002); end
  def test_outputs_energy_w482; assert_in_epsilon(7.666711639409761, worksheet.outputs_energy_w482, 0.002); end
  def test_outputs_energy_x482; assert_in_epsilon(8.533667643585837, worksheet.outputs_energy_x482, 0.002); end
  def test_outputs_energy_y482; assert_in_epsilon(9.466730084280478, worksheet.outputs_energy_y482, 0.002); end
  def test_outputs_energy_z482; assert_in_epsilon(10.51066979744558, worksheet.outputs_energy_z482, 0.002); end
  def test_outputs_energy_r138; assert_in_epsilon(4.622463534610763, worksheet.outputs_energy_r138, 0.002); end
  def test_outputs_energy_r140; assert_in_epsilon(19.257949917314463, worksheet.outputs_energy_r140, 0.002); end
  def test_outputs_energy_r142; assert_in_epsilon(11.875, worksheet.outputs_energy_r142, 0.002); end
  def test_outputs_energy_r144; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_r144, 0.002); end
  def test_outputs_energy_z138; assert_in_epsilon(7.616454766616348, worksheet.outputs_energy_z138, 0.002); end
  def test_outputs_energy_z140; assert_in_epsilon(19.39113240044841, worksheet.outputs_energy_z140, 0.002); end
  def test_outputs_energy_z142; assert_in_epsilon(30.0942220230099, worksheet.outputs_energy_z142, 0.002); end
  def test_outputs_energy_z144; assert_in_epsilon(9.430794806278676, worksheet.outputs_energy_z144, 0.002); end
  def test_outputs_energy_d154; assert_equal("Losses", worksheet.outputs_energy_d154); end
  def test_outputs_energy_r154; assert_in_epsilon(3.992862237113767, worksheet.outputs_energy_r154, 0.002); end
  def test_outputs_energy_s154; assert_in_epsilon(4.012793138580779, worksheet.outputs_energy_s154, 0.002); end
  def test_outputs_energy_t154; assert_in_epsilon(4.204106074479915, worksheet.outputs_energy_t154, 0.002); end
  def test_outputs_energy_u154; assert_in_epsilon(4.3591940358519246, worksheet.outputs_energy_u154, 0.002); end
  def test_outputs_energy_v154; assert_in_epsilon(4.484712055934293, worksheet.outputs_energy_v154, 0.002); end
  def test_outputs_energy_w154; assert_in_epsilon(4.583224312700315, worksheet.outputs_energy_w154, 0.002); end
  def test_outputs_energy_x154; assert_in_epsilon(4.6421409754577345, worksheet.outputs_energy_x154, 0.002); end
  def test_outputs_energy_y154; assert_in_epsilon(4.646595104461887, worksheet.outputs_energy_y154, 0.002); end
  def test_outputs_energy_z154; assert_in_epsilon(5.431454818084989, worksheet.outputs_energy_z154, 0.002); end
  def test_outputs_energy_d155; assert_equal("Oversupply", worksheet.outputs_energy_d155); end
  def test_outputs_energy_r155; assert_in_delta(0.0, (worksheet.outputs_energy_r155||0), 0.002); end
  def test_outputs_energy_s155; assert_in_delta(0.0, (worksheet.outputs_energy_s155||0), 0.002); end
  def test_outputs_energy_t155; assert_in_delta(0.0, (worksheet.outputs_energy_t155||0), 0.002); end
  def test_outputs_energy_u155; assert_in_delta(0.0, (worksheet.outputs_energy_u155||0), 0.002); end
  def test_outputs_energy_v155; assert_in_delta(0.0, (worksheet.outputs_energy_v155||0), 0.002); end
  def test_outputs_energy_w155; assert_in_delta(0.0, (worksheet.outputs_energy_w155||0), 0.002); end
  def test_outputs_energy_x155; assert_in_delta(0.0, (worksheet.outputs_energy_x155||0), 0.002); end
  def test_outputs_energy_y155; assert_in_delta(0.0, (worksheet.outputs_energy_y155||0), 0.002); end
  def test_outputs_energy_z155; assert_in_delta(0.0, (worksheet.outputs_energy_z155||0), 0.002); end
  def test_outputs_energy_d156; assert_equal("Transport", worksheet.outputs_energy_d156); end
  def test_outputs_energy_r156; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r156, 0.002); end
  def test_outputs_energy_s156; assert_in_epsilon(4.310361671639778, worksheet.outputs_energy_s156, 0.002); end
  def test_outputs_energy_t156; assert_in_epsilon(5.404846698151712, worksheet.outputs_energy_t156, 0.002); end
  def test_outputs_energy_u156; assert_in_epsilon(6.64615821174558, worksheet.outputs_energy_u156, 0.002); end
  def test_outputs_energy_v156; assert_in_epsilon(8.04109983924148, worksheet.outputs_energy_v156, 0.002); end
  def test_outputs_energy_w156; assert_in_epsilon(9.596593875369164, worksheet.outputs_energy_w156, 0.002); end
  def test_outputs_energy_x156; assert_in_epsilon(11.319683881335393, worksheet.outputs_energy_x156, 0.002); end
  def test_outputs_energy_y156; assert_in_epsilon(13.217537351975222, worksheet.outputs_energy_y156, 0.002); end
  def test_outputs_energy_z156; assert_in_epsilon(21.12614386015295, worksheet.outputs_energy_z156, 0.002); end
  def test_outputs_energy_d157; assert_equal("Electricity (unabated thermal)", worksheet.outputs_energy_d157); end
  def test_outputs_energy_r157; assert_in_epsilon(5.572869444525576, worksheet.outputs_energy_r157, 0.002); end
  def test_outputs_energy_s157; assert_in_epsilon(5.55040082229666, worksheet.outputs_energy_s157, 0.002); end
  def test_outputs_energy_t157; assert_in_epsilon(5.618569979230491, worksheet.outputs_energy_t157, 0.002); end
  def test_outputs_energy_u157; assert_in_epsilon(5.709275013023725, worksheet.outputs_energy_u157, 0.002); end
  def test_outputs_energy_v157; assert_in_epsilon(5.770401483515758, worksheet.outputs_energy_v157, 0.002); end
  def test_outputs_energy_w157; assert_in_epsilon(5.799817938741521, worksheet.outputs_energy_w157, 0.002); end
  def test_outputs_energy_x157; assert_in_epsilon(5.824948531914729, worksheet.outputs_energy_x157, 0.002); end
  def test_outputs_energy_y157; assert_in_epsilon(5.868711673516285, worksheet.outputs_energy_y157, 0.002); end
  def test_outputs_energy_z157; assert_in_epsilon(6.186784775826658, worksheet.outputs_energy_z157, 0.002); end
  def test_outputs_energy_d158; assert_equal("Electricity (carbon capture and storage)", worksheet.outputs_energy_d158); end
  def test_outputs_energy_r158; assert_in_delta(0.0, (worksheet.outputs_energy_r158||0), 0.002); end
  def test_outputs_energy_s158; assert_in_delta(0.004635657645330676, worksheet.outputs_energy_s158, 0.002); end
  def test_outputs_energy_t158; assert_in_delta(0.02908999152410228, worksheet.outputs_energy_t158, 0.002); end
  def test_outputs_energy_u158; assert_in_delta(0.024216606280035094, worksheet.outputs_energy_u158, 0.002); end
  def test_outputs_energy_v158; assert_in_delta(0.022158864568470393, worksheet.outputs_energy_v158, 0.002); end
  def test_outputs_energy_w158; assert_in_delta(0.019804696181512472, worksheet.outputs_energy_w158, 0.002); end
  def test_outputs_energy_x158; assert_in_delta(0.016030335601002445, worksheet.outputs_energy_x158, 0.002); end
  def test_outputs_energy_y158; assert_in_delta(0.01174707011302526, worksheet.outputs_energy_y158, 0.002); end
  def test_outputs_energy_z158; assert_in_delta(0.009240607541435198, worksheet.outputs_energy_z158, 0.002); end
  def test_outputs_energy_d159; assert_equal("Buildings", worksheet.outputs_energy_d159); end
  def test_outputs_energy_r159; assert_in_epsilon(37.300436260119945, worksheet.outputs_energy_r159, 0.002); end
  def test_outputs_energy_s159; assert_in_epsilon(35.070064395152706, worksheet.outputs_energy_s159, 0.002); end
  def test_outputs_energy_t159; assert_in_epsilon(33.54324844188829, worksheet.outputs_energy_t159, 0.002); end
  def test_outputs_energy_u159; assert_in_epsilon(31.86955285775414, worksheet.outputs_energy_u159, 0.002); end
  def test_outputs_energy_v159; assert_in_epsilon(30.168959039621832, worksheet.outputs_energy_v159, 0.002); end
  def test_outputs_energy_w159; assert_in_epsilon(28.763849297390347, worksheet.outputs_energy_w159, 0.002); end
  def test_outputs_energy_x159; assert_in_epsilon(27.389903019981084, worksheet.outputs_energy_x159, 0.002); end
  def test_outputs_energy_y159; assert_in_epsilon(26.519046625079397, worksheet.outputs_energy_y159, 0.002); end
  def test_outputs_energy_z159; assert_in_epsilon(26.50791117062457, worksheet.outputs_energy_z159, 0.002); end
  def test_outputs_energy_d160; assert_equal("Manufacturing", worksheet.outputs_energy_d160); end
  def test_outputs_energy_r160; assert_in_epsilon(6.631295592851479, worksheet.outputs_energy_r160, 0.002); end
  def test_outputs_energy_s160; assert_in_epsilon(6.597271407467136, worksheet.outputs_energy_s160, 0.002); end
  def test_outputs_energy_t160; assert_in_epsilon(6.695552936424777, worksheet.outputs_energy_t160, 0.002); end
  def test_outputs_energy_u160; assert_in_epsilon(6.7854397777231075, worksheet.outputs_energy_u160, 0.002); end
  def test_outputs_energy_v160; assert_in_epsilon(6.841806859235295, worksheet.outputs_energy_v160, 0.002); end
  def test_outputs_energy_w160; assert_in_epsilon(6.857886321303954, worksheet.outputs_energy_w160, 0.002); end
  def test_outputs_energy_x160; assert_in_epsilon(6.8670683391474485, worksheet.outputs_energy_x160, 0.002); end
  def test_outputs_energy_y160; assert_in_epsilon(6.900093200189412, worksheet.outputs_energy_y160, 0.002); end
  def test_outputs_energy_z160; assert_in_epsilon(7.27106876412273, worksheet.outputs_energy_z160, 0.002); end
  def test_outputs_energy_d137; assert_equal("Bioenergy", worksheet.outputs_energy_d137); end
  def test_outputs_energy_r137; assert_in_epsilon(2011.0, worksheet.outputs_energy_r137, 0.002); end
  def test_outputs_energy_s137; assert_equal("2015", worksheet.outputs_energy_s137); end
  def test_outputs_energy_t137; assert_equal("2020", worksheet.outputs_energy_t137); end
  def test_outputs_energy_u137; assert_equal("2025", worksheet.outputs_energy_u137); end
  def test_outputs_energy_v137; assert_equal("2030", worksheet.outputs_energy_v137); end
  def test_outputs_energy_w137; assert_equal("2035", worksheet.outputs_energy_w137); end
  def test_outputs_energy_x137; assert_equal("2040", worksheet.outputs_energy_x137); end
  def test_outputs_energy_y137; assert_equal("2045", worksheet.outputs_energy_y137); end
  def test_outputs_energy_z137; assert_equal("2050", worksheet.outputs_energy_z137); end
  def test_outputs_energy_d138; assert_equal("Waste", worksheet.outputs_energy_d138); end
  def test_outputs_energy_s138; assert_in_epsilon(4.941677880645339, worksheet.outputs_energy_s138, 0.002); end
  def test_outputs_energy_t138; assert_in_epsilon(5.317589301093684, worksheet.outputs_energy_t138, 0.002); end
  def test_outputs_energy_u138; assert_in_epsilon(5.691921907177739, worksheet.outputs_energy_u138, 0.002); end
  def test_outputs_energy_v138; assert_in_epsilon(6.085788339231919, worksheet.outputs_energy_v138, 0.002); end
  def test_outputs_energy_w138; assert_in_epsilon(6.508987591952654, worksheet.outputs_energy_w138, 0.002); end
  def test_outputs_energy_x138; assert_in_epsilon(6.925379360156088, worksheet.outputs_energy_x138, 0.002); end
  def test_outputs_energy_y138; assert_in_epsilon(7.289936589156823, worksheet.outputs_energy_y138, 0.002); end
  def test_outputs_energy_d140; assert_equal("Forest residues", worksheet.outputs_energy_d140); end
  def test_outputs_energy_s140; assert_in_epsilon(19.067353581628904, worksheet.outputs_energy_s140, 0.002); end
  def test_outputs_energy_t140; assert_in_epsilon(19.031928338009877, worksheet.outputs_energy_t140, 0.002); end
  def test_outputs_energy_u140; assert_in_epsilon(19.061290027651687, worksheet.outputs_energy_u140, 0.002); end
  def test_outputs_energy_v140; assert_in_epsilon(19.040133550285915, worksheet.outputs_energy_v140, 0.002); end
  def test_outputs_energy_w140; assert_in_epsilon(18.938850633989777, worksheet.outputs_energy_w140, 0.002); end
  def test_outputs_energy_x140; assert_in_epsilon(18.931067196766456, worksheet.outputs_energy_x140, 0.002); end
  def test_outputs_energy_y140; assert_in_epsilon(19.186297063245593, worksheet.outputs_energy_y140, 0.002); end
  def test_outputs_energy_d142; assert_equal("Bioenergy crops", worksheet.outputs_energy_d142); end
  def test_outputs_energy_s142; assert_in_epsilon(12.118589743589743, worksheet.outputs_energy_s142, 0.002); end
  def test_outputs_energy_t142; assert_in_epsilon(13.464711400507667, worksheet.outputs_energy_t142, 0.002); end
  def test_outputs_energy_u142; assert_in_epsilon(14.822470996822583, worksheet.outputs_energy_u142, 0.002); end
  def test_outputs_energy_v142; assert_in_epsilon(16.192020112063528, worksheet.outputs_energy_v142, 0.002); end
  def test_outputs_energy_w142; assert_in_epsilon(17.573512969588556, worksheet.outputs_energy_w142, 0.002); end
  def test_outputs_energy_x142; assert_in_epsilon(18.967106494478756, worksheet.outputs_energy_x142, 0.002); end
  def test_outputs_energy_y142; assert_in_epsilon(20.37296037296037, worksheet.outputs_energy_y142, 0.002); end
  def test_outputs_energy_d144; assert_equal("Traditional biomass", worksheet.outputs_energy_d144); end
  def test_outputs_energy_s144; assert_in_epsilon(19.417905886918405, worksheet.outputs_energy_s144, 0.002); end
  def test_outputs_energy_t144; assert_in_epsilon(17.68118508208806, worksheet.outputs_energy_t144, 0.002); end
  def test_outputs_energy_u144; assert_in_epsilon(15.818153570726505, worksheet.outputs_energy_u144, 0.002); end
  def test_outputs_energy_v144; assert_in_epsilon(14.011196140535764, worksheet.outputs_energy_v144, 0.002); end
  def test_outputs_energy_w144; assert_in_epsilon(12.59982524615583, worksheet.outputs_energy_w144, 0.002); end
  def test_outputs_energy_x144; assert_in_epsilon(11.236222032036094, worksheet.outputs_energy_x144, 0.002); end
  def test_outputs_energy_y144; assert_in_epsilon(10.314536999972441, worksheet.outputs_energy_y144, 0.002); end
  def test_outputs_energy_d145; assert_equal("Total", worksheet.outputs_energy_d145); end
  def test_outputs_energy_r145; assert_in_epsilon(57.29746353461076, worksheet.outputs_energy_r145, 0.002); end
  def test_outputs_energy_s145; assert_in_epsilon(55.54552709278239, worksheet.outputs_energy_s145, 0.002); end
  def test_outputs_energy_t145; assert_in_epsilon(55.495414121699284, worksheet.outputs_energy_t145, 0.002); end
  def test_outputs_energy_u145; assert_in_epsilon(55.39383650237852, worksheet.outputs_energy_u145, 0.002); end
  def test_outputs_energy_v145; assert_in_epsilon(55.329138142117124, worksheet.outputs_energy_v145, 0.002); end
  def test_outputs_energy_w145; assert_in_epsilon(55.62117644168681, worksheet.outputs_energy_w145, 0.002); end
  def test_outputs_energy_x145; assert_in_epsilon(56.059775083437394, worksheet.outputs_energy_x145, 0.002); end
  def test_outputs_energy_y145; assert_in_epsilon(57.16373102533523, worksheet.outputs_energy_y145, 0.002); end
  def test_outputs_energy_z145; assert_in_epsilon(66.53260399635333, worksheet.outputs_energy_z145, 0.002); end
  def test_outputs_energy_d146; assert_equal("Biocrops unused", worksheet.outputs_energy_d146); end
  def test_outputs_energy_r146; assert_in_delta(0.0, (worksheet.outputs_energy_r146||0), 0.002); end
  def test_outputs_energy_s146; assert_in_delta(0.0, (worksheet.outputs_energy_s146||0), 0.002); end
  def test_outputs_energy_t146; assert_in_delta(0.0, (worksheet.outputs_energy_t146||0), 0.002); end
  def test_outputs_energy_u146; assert_in_delta(0.0, (worksheet.outputs_energy_u146||0), 0.002); end
  def test_outputs_energy_v146; assert_in_delta(0.0, (worksheet.outputs_energy_v146||0), 0.002); end
  def test_outputs_energy_w146; assert_in_delta(0.0, (worksheet.outputs_energy_w146||0), 0.002); end
  def test_outputs_energy_x146; assert_in_delta(0.0, (worksheet.outputs_energy_x146||0), 0.002); end
  def test_outputs_energy_y146; assert_in_delta(0.0, (worksheet.outputs_energy_y146||0), 0.002); end
  def test_outputs_energy_z146; assert_in_delta(0.0, (worksheet.outputs_energy_z146||0), 0.002); end
  def test_outputs_energy_c448; assert_equal("Description", worksheet.outputs_energy_c448); end
  def test_outputs_energy_d448; assert_equal(".", worksheet.outputs_energy_d448); end
  def test_outputs_energy_e448; assert_equal("Notes", worksheet.outputs_energy_e448); end
  def test_outputs_energy_g448; assert_equal("..", worksheet.outputs_energy_g448); end
  def test_outputs_energy_h448; assert_equal("…", worksheet.outputs_energy_h448); end
  def test_outputs_energy_i448; assert_equal("….", worksheet.outputs_energy_i448); end
  def test_outputs_energy_j448; assert_equal("…..", worksheet.outputs_energy_j448); end
  def test_outputs_energy_k448; assert_equal("……", worksheet.outputs_energy_k448); end
  def test_outputs_energy_l448; assert_equal("…….", worksheet.outputs_energy_l448); end
  def test_outputs_energy_m448; assert_equal("……..", worksheet.outputs_energy_m448); end
  def test_outputs_energy_n448; assert_equal("……….", worksheet.outputs_energy_n448); end
  def test_outputs_energy_o448; assert_equal("………..", worksheet.outputs_energy_o448); end
  def test_outputs_energy_r448; assert_equal("2011", worksheet.outputs_energy_r448); end
  def test_outputs_energy_s448; assert_equal("2015", worksheet.outputs_energy_s448); end
  def test_outputs_energy_t448; assert_equal("2020", worksheet.outputs_energy_t448); end
  def test_outputs_energy_u448; assert_equal("2025", worksheet.outputs_energy_u448); end
  def test_outputs_energy_v448; assert_equal("2030", worksheet.outputs_energy_v448); end
  def test_outputs_energy_w448; assert_equal("2035", worksheet.outputs_energy_w448); end
  def test_outputs_energy_x448; assert_equal("2040", worksheet.outputs_energy_x448); end
  def test_outputs_energy_y448; assert_equal("2045", worksheet.outputs_energy_y448); end
  def test_outputs_energy_z448; assert_equal("2050", worksheet.outputs_energy_z448); end
  def test_outputs_energy_c449; assert_equal("Solid", worksheet.outputs_energy_c449); end
  def test_outputs_energy_r449; assert_in_epsilon(46.50000000000001, worksheet.outputs_energy_r449, 0.002); end
  def test_outputs_energy_s449; assert_in_epsilon(43.99406281991871, worksheet.outputs_energy_s449, 0.002); end
  def test_outputs_energy_t449; assert_in_epsilon(42.390759951594845, worksheet.outputs_energy_t449, 0.002); end
  def test_outputs_energy_u449; assert_in_epsilon(40.62335088654071, worksheet.outputs_energy_u449, 0.002); end
  def test_outputs_energy_v449; assert_in_epsilon(38.75268794669053, worksheet.outputs_energy_v449, 0.002); end
  def test_outputs_energy_w449; assert_in_epsilon(37.08233933242197, worksheet.outputs_energy_w449, 0.002); end
  def test_outputs_energy_x449; assert_in_epsilon(35.43166512853704, worksheet.outputs_energy_x449, 0.002); end
  def test_outputs_energy_y449; assert_in_epsilon(34.35776924725381, worksheet.outputs_energy_y449, 0.002); end
  def test_outputs_energy_z449; assert_in_epsilon(34.78058316728305, worksheet.outputs_energy_z449, 0.002); end
  def test_outputs_energy_c450; assert_equal("Liquid bioenergy", worksheet.outputs_energy_c450); end
  def test_outputs_energy_r450; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r450, 0.002); end
  def test_outputs_energy_s450; assert_in_epsilon(4.310361671639778, worksheet.outputs_energy_s450, 0.002); end
  def test_outputs_energy_t450; assert_in_epsilon(5.404846698151712, worksheet.outputs_energy_t450, 0.002); end
  def test_outputs_energy_u450; assert_in_epsilon(6.64615821174558, worksheet.outputs_energy_u450, 0.002); end
  def test_outputs_energy_v450; assert_in_epsilon(8.04109983924148, worksheet.outputs_energy_v450, 0.002); end
  def test_outputs_energy_w450; assert_in_epsilon(9.596593875369164, worksheet.outputs_energy_w450, 0.002); end
  def test_outputs_energy_x450; assert_in_epsilon(11.319683881335393, worksheet.outputs_energy_x450, 0.002); end
  def test_outputs_energy_y450; assert_in_epsilon(13.217537351975222, worksheet.outputs_energy_y450, 0.002); end
  def test_outputs_energy_z450; assert_in_epsilon(21.12614386015295, worksheet.outputs_energy_z450, 0.002); end
  def test_outputs_energy_c451; assert_equal("Gas", worksheet.outputs_energy_c451); end
  def test_outputs_energy_r451; assert_in_epsilon(3.0046012974969964, worksheet.outputs_energy_r451, 0.002); end
  def test_outputs_energy_s451; assert_in_epsilon(3.2283094626431263, worksheet.outputs_energy_s451, 0.002); end
  def test_outputs_energy_t451; assert_in_epsilon(3.495701397472817, worksheet.outputs_energy_t451, 0.002); end
  def test_outputs_energy_u451; assert_in_epsilon(3.76513336824029, worksheet.outputs_energy_u451, 0.002); end
  def test_outputs_energy_v451; assert_in_epsilon(4.050638300250824, worksheet.outputs_energy_v451, 0.002); end
  def test_outputs_energy_w451; assert_in_epsilon(4.3590189211953705, worksheet.outputs_energy_w451, 0.002); end
  def test_outputs_energy_x451; assert_in_epsilon(4.666285098107223, worksheet.outputs_energy_x451, 0.002); end
  def test_outputs_energy_y451; assert_in_epsilon(4.94182932164431, worksheet.outputs_energy_y451, 0.002); end
  def test_outputs_energy_z451; assert_in_epsilon(5.194422150832349, worksheet.outputs_energy_z451, 0.002); end
  def test_outputs_energy_c452; assert_equal("Losses", worksheet.outputs_energy_c452); end
  def test_outputs_energy_r452; assert_in_epsilon(3.992862237113762, worksheet.outputs_energy_r452, 0.002); end
  def test_outputs_energy_s452; assert_in_epsilon(4.012793138580783, worksheet.outputs_energy_s452, 0.002); end
  def test_outputs_energy_t452; assert_in_epsilon(4.20410607447991, worksheet.outputs_energy_t452, 0.002); end
  def test_outputs_energy_u452; assert_in_epsilon(4.359194035851935, worksheet.outputs_energy_u452, 0.002); end
  def test_outputs_energy_v452; assert_in_epsilon(4.484712055934288, worksheet.outputs_energy_v452, 0.002); end
  def test_outputs_energy_w452; assert_in_epsilon(4.58322431270031, worksheet.outputs_energy_w452, 0.002); end
  def test_outputs_energy_x452; assert_in_epsilon(4.642140975457735, worksheet.outputs_energy_x452, 0.002); end
  def test_outputs_energy_y452; assert_in_epsilon(4.646595104461888, worksheet.outputs_energy_y452, 0.002); end
  def test_outputs_energy_z452; assert_in_epsilon(5.431454818084987, worksheet.outputs_energy_z452, 0.002); end
  def test_outputs_energy_c453; assert_equal("Solid oversupply", worksheet.outputs_energy_c453); end
  def test_outputs_energy_e453; assert_equal("solid global oversupply", worksheet.outputs_energy_e453); end
  def test_outputs_energy_r453; assert_in_delta(0.0, (worksheet.outputs_energy_r453||0), 0.002); end
  def test_outputs_energy_s453; assert_in_delta(0.0, (worksheet.outputs_energy_s453||0), 0.002); end
  def test_outputs_energy_t453; assert_in_delta(0.0, (worksheet.outputs_energy_t453||0), 0.002); end
  def test_outputs_energy_u453; assert_in_delta(0.0, (worksheet.outputs_energy_u453||0), 0.002); end
  def test_outputs_energy_v453; assert_in_delta(0.0, (worksheet.outputs_energy_v453||0), 0.002); end
  def test_outputs_energy_w453; assert_in_delta(0.0, (worksheet.outputs_energy_w453||0), 0.002); end
  def test_outputs_energy_x453; assert_in_delta(0.0, (worksheet.outputs_energy_x453||0), 0.002); end
  def test_outputs_energy_y453; assert_in_delta(0.0, (worksheet.outputs_energy_y453||0), 0.002); end
  def test_outputs_energy_z453; assert_in_delta(0.0, (worksheet.outputs_energy_z453||0), 0.002); end
  def test_outputs_energy_c454; assert_equal("Liquid oversupply", worksheet.outputs_energy_c454); end
  def test_outputs_energy_e454; assert_equal("liquid global oversupply", worksheet.outputs_energy_e454); end
  def test_outputs_energy_r454; assert_in_delta(0.0, (worksheet.outputs_energy_r454||0), 0.002); end
  def test_outputs_energy_s454; assert_in_delta(0.0, (worksheet.outputs_energy_s454||0), 0.002); end
  def test_outputs_energy_t454; assert_in_delta(0.0, (worksheet.outputs_energy_t454||0), 0.002); end
  def test_outputs_energy_u454; assert_in_delta(0.0, (worksheet.outputs_energy_u454||0), 0.002); end
  def test_outputs_energy_v454; assert_in_delta(0.0, (worksheet.outputs_energy_v454||0), 0.002); end
  def test_outputs_energy_w454; assert_in_delta(0.0, (worksheet.outputs_energy_w454||0), 0.002); end
  def test_outputs_energy_x454; assert_in_delta(0.0, (worksheet.outputs_energy_x454||0), 0.002); end
  def test_outputs_energy_y454; assert_in_delta(0.0, (worksheet.outputs_energy_y454||0), 0.002); end
  def test_outputs_energy_z454; assert_in_delta(0.0, (worksheet.outputs_energy_z454||0), 0.002); end
  def test_outputs_energy_d34; assert_equal("RESIDENTIAL", worksheet.outputs_energy_d34); end
  def test_outputs_energy_d35; assert_equal("Global Heating", worksheet.outputs_energy_d35); end
  def test_outputs_energy_p35; assert_in_epsilon(25.25, worksheet.outputs_energy_p35, 0.002); end
  def test_outputs_energy_r35; assert_in_epsilon(25.292160061938944, worksheet.outputs_energy_r35, 0.002); end
  def test_outputs_energy_s35; assert_in_epsilon(23.532309670532094, worksheet.outputs_energy_s35, 0.002); end
  def test_outputs_energy_t35; assert_in_epsilon(24.512109361586067, worksheet.outputs_energy_t35, 0.002); end
  def test_outputs_energy_u35; assert_in_epsilon(25.154199399093876, worksheet.outputs_energy_u35, 0.002); end
  def test_outputs_energy_v35; assert_in_epsilon(25.583984088662103, worksheet.outputs_energy_v35, 0.002); end
  def test_outputs_energy_w35; assert_in_epsilon(26.031944462431333, worksheet.outputs_energy_w35, 0.002); end
  def test_outputs_energy_x35; assert_in_epsilon(26.308050366279318, worksheet.outputs_energy_x35, 0.002); end
  def test_outputs_energy_y35; assert_in_epsilon(26.7025844958444, worksheet.outputs_energy_y35, 0.002); end
  def test_outputs_energy_z35; assert_in_epsilon(26.96558556858042, worksheet.outputs_energy_z35, 0.002); end
  def test_outputs_energy_d36; assert_equal("Global Cooling", worksheet.outputs_energy_d36); end
  def test_outputs_energy_p36; assert_in_epsilon(2.44, worksheet.outputs_energy_p36, 0.002); end
  def test_outputs_energy_r36; assert_in_epsilon(2.6984428076468663, worksheet.outputs_energy_r36, 0.002); end
  def test_outputs_energy_s36; assert_in_epsilon(2.941233232069486, worksheet.outputs_energy_s36, 0.002); end
  def test_outputs_energy_t36; assert_in_epsilon(3.7750755184570406, worksheet.outputs_energy_t36, 0.002); end
  def test_outputs_energy_u36; assert_in_epsilon(4.713826349834436, worksheet.outputs_energy_u36, 0.002); end
  def test_outputs_energy_v36; assert_in_epsilon(5.743645341161662, worksheet.outputs_energy_v36, 0.002); end
  def test_outputs_energy_w36; assert_in_epsilon(6.8311056813306035, worksheet.outputs_energy_w36, 0.002); end
  def test_outputs_energy_x36; assert_in_epsilon(7.987075025611469, worksheet.outputs_energy_x36, 0.002); end
  def test_outputs_energy_y36; assert_in_epsilon(9.168787739389032, worksheet.outputs_energy_y36, 0.002); end
  def test_outputs_energy_z36; assert_in_epsilon(10.393764173748288, worksheet.outputs_energy_z36, 0.002); end
  def test_outputs_energy_d37; assert_equal("Global Hot water", worksheet.outputs_energy_d37); end
  def test_outputs_energy_p37; assert_in_epsilon(22.61, worksheet.outputs_energy_p37, 0.002); end
  def test_outputs_energy_r37; assert_in_epsilon(20.64814831202377, worksheet.outputs_energy_r37, 0.002); end
  def test_outputs_energy_s37; assert_in_epsilon(22.39416094135626, worksheet.outputs_energy_s37, 0.002); end
  def test_outputs_energy_t37; assert_in_epsilon(23.809462170898207, worksheet.outputs_energy_t37, 0.002); end
  def test_outputs_energy_u37; assert_in_epsilon(25.180011942796572, worksheet.outputs_energy_u37, 0.002); end
  def test_outputs_energy_v37; assert_in_epsilon(26.425609593733085, worksheet.outputs_energy_v37, 0.002); end
  def test_outputs_energy_w37; assert_in_epsilon(27.44134495679853, worksheet.outputs_energy_w37, 0.002); end
  def test_outputs_energy_x37; assert_in_epsilon(28.333726832663665, worksheet.outputs_energy_x37, 0.002); end
  def test_outputs_energy_y37; assert_in_epsilon(29.001928419736174, worksheet.outputs_energy_y37, 0.002); end
  def test_outputs_energy_z37; assert_in_epsilon(29.53746021856065, worksheet.outputs_energy_z37, 0.002); end
  def test_outputs_energy_d38; assert_equal("Global Appliances", worksheet.outputs_energy_d38); end
  def test_outputs_energy_p38; assert_in_epsilon(10.0, worksheet.outputs_energy_p38, 0.002); end
  def test_outputs_energy_r38; assert_in_epsilon(10.049316153808602, worksheet.outputs_energy_r38, 0.002); end
  def test_outputs_energy_s38; assert_in_epsilon(12.121796717015723, worksheet.outputs_energy_s38, 0.002); end
  def test_outputs_energy_t38; assert_in_epsilon(13.909339100249376, worksheet.outputs_energy_t38, 0.002); end
  def test_outputs_energy_u38; assert_in_epsilon(15.824323268532442, worksheet.outputs_energy_u38, 0.002); end
  def test_outputs_energy_v38; assert_in_epsilon(17.81726135918837, worksheet.outputs_energy_v38, 0.002); end
  def test_outputs_energy_w38; assert_in_epsilon(19.802741037213167, worksheet.outputs_energy_w38, 0.002); end
  def test_outputs_energy_x38; assert_in_epsilon(21.83754529053455, worksheet.outputs_energy_x38, 0.002); end
  def test_outputs_energy_y38; assert_in_epsilon(23.82804030938562, worksheet.outputs_energy_y38, 0.002); end
  def test_outputs_energy_z38; assert_in_epsilon(25.84085180148337, worksheet.outputs_energy_z38, 0.002); end
  def test_outputs_energy_d39; assert_equal("Global Cooking", worksheet.outputs_energy_d39); end
  def test_outputs_energy_p39; assert_in_epsilon(24.16, worksheet.outputs_energy_p39, 0.002); end
  def test_outputs_energy_r39; assert_in_epsilon(24.331916753204318, worksheet.outputs_energy_r39, 0.002); end
  def test_outputs_energy_s39; assert_in_epsilon(23.78985015284648, worksheet.outputs_energy_s39, 0.002); end
  def test_outputs_energy_t39; assert_in_epsilon(22.825288390673876, worksheet.outputs_energy_t39, 0.002); end
  def test_outputs_energy_u39; assert_in_epsilon(21.93248291795023, worksheet.outputs_energy_u39, 0.002); end
  def test_outputs_energy_v39; assert_in_epsilon(21.103522000612053, worksheet.outputs_energy_v39, 0.002); end
  def test_outputs_energy_w39; assert_in_epsilon(20.35665802771509, worksheet.outputs_energy_w39, 0.002); end
  def test_outputs_energy_x39; assert_in_epsilon(19.627932509029222, worksheet.outputs_energy_x39, 0.002); end
  def test_outputs_energy_y39; assert_in_epsilon(18.945968264694848, worksheet.outputs_energy_y39, 0.002); end
  def test_outputs_energy_z39; assert_in_epsilon(18.252208482333142, worksheet.outputs_energy_z39, 0.002); end
  def test_outputs_energy_d40; assert_equal("Global Lighting", worksheet.outputs_energy_d40); end
  def test_outputs_energy_p40; assert_in_epsilon(3.24, worksheet.outputs_energy_p40, 0.002); end
  def test_outputs_energy_r40; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_r40, 0.002); end
  def test_outputs_energy_s40; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_s40, 0.002); end
  def test_outputs_energy_t40; assert_in_epsilon(4.339374562975979, worksheet.outputs_energy_t40, 0.002); end
  def test_outputs_energy_u40; assert_in_epsilon(4.899308133799163, worksheet.outputs_energy_u40, 0.002); end
  def test_outputs_energy_v40; assert_in_epsilon(5.4656473496193305, worksheet.outputs_energy_v40, 0.002); end
  def test_outputs_energy_w40; assert_in_epsilon(6.010628694184774, worksheet.outputs_energy_w40, 0.002); end
  def test_outputs_energy_x40; assert_in_epsilon(6.550346624258883, worksheet.outputs_energy_x40, 0.002); end
  def test_outputs_energy_y40; assert_in_epsilon(7.055428632992439, worksheet.outputs_energy_y40, 0.002); end
  def test_outputs_energy_z40; assert_in_epsilon(7.546444287618396, worksheet.outputs_energy_z40, 0.002); end
  def test_outputs_energy_d42; assert_equal("NON-RESIDENTIAL", worksheet.outputs_energy_d42); end
  def test_outputs_energy_d43; assert_equal("Global Heating", worksheet.outputs_energy_d43); end
  def test_outputs_energy_f43; assert_equal("Non-residential", worksheet.outputs_energy_f43); end
  def test_outputs_energy_p43; assert_in_epsilon(8.27, worksheet.outputs_energy_p43, 0.002); end
  def test_outputs_energy_r43; assert_in_epsilon(8.671483275853106, worksheet.outputs_energy_r43, 0.002); end
  def test_outputs_energy_s43; assert_in_epsilon(7.823063079307941, worksheet.outputs_energy_s43, 0.002); end
  def test_outputs_energy_t43; assert_in_epsilon(8.544957746218717, worksheet.outputs_energy_t43, 0.002); end
  def test_outputs_energy_u43; assert_in_epsilon(9.234316580617977, worksheet.outputs_energy_u43, 0.002); end
  def test_outputs_energy_v43; assert_in_epsilon(9.88261954839486, worksheet.outputs_energy_v43, 0.002); end
  def test_outputs_energy_w43; assert_in_epsilon(10.484030241258326, worksheet.outputs_energy_w43, 0.002); end
  def test_outputs_energy_x43; assert_in_epsilon(11.030312456215668, worksheet.outputs_energy_x43, 0.002); end
  def test_outputs_energy_y43; assert_in_epsilon(11.511068486772658, worksheet.outputs_energy_y43, 0.002); end
  def test_outputs_energy_z43; assert_in_epsilon(11.91668948712385, worksheet.outputs_energy_z43, 0.002); end
  def test_outputs_energy_d44; assert_equal("Global Cooling", worksheet.outputs_energy_d44); end
  def test_outputs_energy_f44; assert_equal("Non-residential", worksheet.outputs_energy_f44); end
  def test_outputs_energy_p44; assert_in_epsilon(1.96, worksheet.outputs_energy_p44, 0.002); end
  def test_outputs_energy_r44; assert_in_epsilon(1.9302063451193594, worksheet.outputs_energy_r44, 0.002); end
  def test_outputs_energy_s44; assert_in_epsilon(1.7922669006681125, worksheet.outputs_energy_s44, 0.002); end
  def test_outputs_energy_t44; assert_in_epsilon(2.036361985989657, worksheet.outputs_energy_t44, 0.002); end
  def test_outputs_energy_u44; assert_in_epsilon(2.2899062046916643, worksheet.outputs_energy_u44, 0.002); end
  def test_outputs_energy_v44; assert_in_epsilon(2.551400763738992, worksheet.outputs_energy_v44, 0.002); end
  def test_outputs_energy_w44; assert_in_epsilon(2.819920343503267, worksheet.outputs_energy_w44, 0.002); end
  def test_outputs_energy_x44; assert_in_epsilon(3.0938286868657916, worksheet.outputs_energy_x44, 0.002); end
  def test_outputs_energy_y44; assert_in_epsilon(3.3707039869031665, worksheet.outputs_energy_y44, 0.002); end
  def test_outputs_energy_z44; assert_in_epsilon(3.648078910301205, worksheet.outputs_energy_z44, 0.002); end
  def test_outputs_energy_d45; assert_equal("Global Appliances", worksheet.outputs_energy_d45); end
  def test_outputs_energy_f45; assert_equal("Non-residential", worksheet.outputs_energy_f45); end
  def test_outputs_energy_p45; assert_in_epsilon(12.36, worksheet.outputs_energy_p45, 0.002); end
  def test_outputs_energy_r45; assert_in_epsilon(11.576876918452358, worksheet.outputs_energy_r45, 0.002); end
  def test_outputs_energy_s45; assert_in_epsilon(12.475470437632243, worksheet.outputs_energy_s45, 0.002); end
  def test_outputs_energy_t45; assert_in_epsilon(13.555314780631576, worksheet.outputs_energy_t45, 0.002); end
  def test_outputs_energy_u45; assert_in_epsilon(14.576880984145074, worksheet.outputs_energy_u45, 0.002); end
  def test_outputs_energy_v45; assert_in_epsilon(15.530169938198796, worksheet.outputs_energy_v45, 0.002); end
  def test_outputs_energy_w45; assert_in_epsilon(16.410005925886644, worksheet.outputs_energy_w45, 0.002); end
  def test_outputs_energy_x45; assert_in_epsilon(17.207999481912125, worksheet.outputs_energy_x45, 0.002); end
  def test_outputs_energy_y45; assert_in_epsilon(17.91295316352477, worksheet.outputs_energy_y45, 0.002); end
  def test_outputs_energy_z45; assert_in_epsilon(18.51542566236058, worksheet.outputs_energy_z45, 0.002); end
  def test_outputs_energy_d46; assert_equal("Global Lighting", worksheet.outputs_energy_d46); end
  def test_outputs_energy_f46; assert_equal("Non-residential", worksheet.outputs_energy_f46); end
  def test_outputs_energy_p46; assert_in_epsilon(4.21, worksheet.outputs_energy_p46, 0.002); end
  def test_outputs_energy_r46; assert_in_epsilon(4.234995621034355, worksheet.outputs_energy_r46, 0.002); end
  def test_outputs_energy_s46; assert_in_epsilon(4.76447451343983, worksheet.outputs_energy_s46, 0.002); end
  def test_outputs_energy_t46; assert_in_epsilon(5.287674784020376, worksheet.outputs_energy_t46, 0.002); end
  def test_outputs_energy_u46; assert_in_epsilon(5.811443172779645, worksheet.outputs_energy_u46, 0.002); end
  def test_outputs_energy_v46; assert_in_epsilon(6.332076911067248, worksheet.outputs_energy_v46, 0.002); end
  def test_outputs_energy_w46; assert_in_epsilon(6.8475730061795215, worksheet.outputs_energy_w46, 0.002); end
  def test_outputs_energy_x46; assert_in_epsilon(7.354393827829241, worksheet.outputs_energy_x46, 0.002); end
  def test_outputs_energy_y46; assert_in_epsilon(7.847450307977323, worksheet.outputs_energy_y46, 0.002); end
  def test_outputs_energy_z46; assert_in_epsilon(8.321945097537288, worksheet.outputs_energy_z46, 0.002); end
  def test_outputs_energy_d47; assert_equal("Global Other", worksheet.outputs_energy_d47); end
  def test_outputs_energy_f47; assert_equal("Non-residential", worksheet.outputs_energy_f47); end
  def test_outputs_energy_p47; assert_in_epsilon(3.57, worksheet.outputs_energy_p47, 0.002); end
  def test_outputs_energy_r47; assert_in_epsilon(3.616434616787921, worksheet.outputs_energy_r47, 0.002); end
  def test_outputs_energy_s47; assert_in_epsilon(3.8144569151957914, worksheet.outputs_energy_s47, 0.002); end
  def test_outputs_energy_t47; assert_in_epsilon(4.151933354506528, worksheet.outputs_energy_t47, 0.002); end
  def test_outputs_energy_u47; assert_in_epsilon(4.472052915944775, worksheet.outputs_energy_u47, 0.002); end
  def test_outputs_energy_v47; assert_in_epsilon(4.771444696110382, worksheet.outputs_energy_v47, 0.002); end
  def test_outputs_energy_w47; assert_in_epsilon(5.048192424952835, worksheet.outputs_energy_w47, 0.002); end
  def test_outputs_energy_x47; assert_in_epsilon(5.299371729251174, worksheet.outputs_energy_x47, 0.002); end
  def test_outputs_energy_y47; assert_in_epsilon(5.521173219440348, worksheet.outputs_energy_y47, 0.002); end
  def test_outputs_energy_z47; assert_in_epsilon(5.710312798479741, worksheet.outputs_energy_z47, 0.002); end
  def test_outputs_energy_p379; assert_in_epsilon(2011.0, worksheet.outputs_energy_p379, 0.002); end
  def test_outputs_energy_r379; assert_in_epsilon(2011.0, worksheet.outputs_energy_r379, 0.002); end
  def test_outputs_energy_s379; assert_equal("2015", worksheet.outputs_energy_s379); end
  def test_outputs_energy_t379; assert_equal("2020", worksheet.outputs_energy_t379); end
  def test_outputs_energy_u379; assert_equal("2025", worksheet.outputs_energy_u379); end
  def test_outputs_energy_v379; assert_equal("2030", worksheet.outputs_energy_v379); end
  def test_outputs_energy_w379; assert_equal("2035", worksheet.outputs_energy_w379); end
  def test_outputs_energy_x379; assert_equal("2040", worksheet.outputs_energy_x379); end
  def test_outputs_energy_y379; assert_equal("2045", worksheet.outputs_energy_y379); end
  def test_outputs_energy_z379; assert_equal("2050", worksheet.outputs_energy_z379); end
  def test_outputs_energy_c380; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c380); end
  def test_outputs_energy_d380; assert_equal("G.C.01", worksheet.outputs_energy_d380); end
  def test_outputs_energy_e380; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e380); end
  def test_outputs_energy_i380; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i380); end
  def test_outputs_energy_j380; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j380); end
  def test_outputs_energy_k380; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k380); end
  def test_outputs_energy_l380; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l380); end
  def test_outputs_energy_m380; assert_equal("non-residential", worksheet.outputs_energy_m380); end
  def test_outputs_energy_p380; assert_in_epsilon(16.66424835831506, worksheet.outputs_energy_p380, 0.002); end
  def test_outputs_energy_r380; assert_in_epsilon(15.060656702653787, worksheet.outputs_energy_r380, 0.002); end
  def test_outputs_energy_s380; assert_in_epsilon(15.321128175206292, worksheet.outputs_energy_s380, 0.002); end
  def test_outputs_energy_t380; assert_in_epsilon(15.47711060054811, worksheet.outputs_energy_t380, 0.002); end
  def test_outputs_energy_u380; assert_in_epsilon(15.52408261664484, worksheet.outputs_energy_u380, 0.002); end
  def test_outputs_energy_v380; assert_in_epsilon(15.429137496362618, worksheet.outputs_energy_v380, 0.002); end
  def test_outputs_energy_w380; assert_in_epsilon(15.18686720958663, worksheet.outputs_energy_w380, 0.002); end
  def test_outputs_energy_x380; assert_in_epsilon(14.828170330308179, worksheet.outputs_energy_x380, 0.002); end
  def test_outputs_energy_y380; assert_in_epsilon(14.362230850238163, worksheet.outputs_energy_y380, 0.002); end
  def test_outputs_energy_z380; assert_in_epsilon(13.775837888963792, worksheet.outputs_energy_z380, 0.002); end
  def test_outputs_energy_c381; assert_equal("Traditional biomass", worksheet.outputs_energy_c381); end
  def test_outputs_energy_d381; assert_equal("G.BM.13", worksheet.outputs_energy_d381); end
  def test_outputs_energy_e381; assert_equal("Global Traditional biomass", worksheet.outputs_energy_e381); end
  def test_outputs_energy_i381; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i381); end
  def test_outputs_energy_j381; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j381); end
  def test_outputs_energy_k381; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k381); end
  def test_outputs_energy_l381; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l381); end
  def test_outputs_energy_m381; assert_equal("non-residential", worksheet.outputs_energy_m381); end
  def test_outputs_energy_p381; assert_in_epsilon(23.83575164168494, worksheet.outputs_energy_p381, 0.002); end
  def test_outputs_energy_r381; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_r381, 0.002); end
  def test_outputs_energy_s381; assert_in_epsilon(19.417905886918405, worksheet.outputs_energy_s381, 0.002); end
  def test_outputs_energy_t381; assert_in_epsilon(17.68118508208806, worksheet.outputs_energy_t381, 0.002); end
  def test_outputs_energy_u381; assert_in_epsilon(15.818153570726505, worksheet.outputs_energy_u381, 0.002); end
  def test_outputs_energy_v381; assert_in_epsilon(14.011196140535764, worksheet.outputs_energy_v381, 0.002); end
  def test_outputs_energy_w381; assert_in_epsilon(12.59982524615583, worksheet.outputs_energy_w381, 0.002); end
  def test_outputs_energy_x381; assert_in_epsilon(11.236222032036094, worksheet.outputs_energy_x381, 0.002); end
  def test_outputs_energy_y381; assert_in_epsilon(10.314536999972441, worksheet.outputs_energy_y381, 0.002); end
  def test_outputs_energy_z381; assert_in_epsilon(9.430794806278676, worksheet.outputs_energy_z381, 0.002); end
  def test_outputs_energy_c382; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c382); end
  def test_outputs_energy_d382; assert_equal("G.C.02", worksheet.outputs_energy_d382); end
  def test_outputs_energy_e382; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e382); end
  def test_outputs_energy_i382; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i382); end
  def test_outputs_energy_j382; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j382); end
  def test_outputs_energy_k382; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k382); end
  def test_outputs_energy_l382; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l382); end
  def test_outputs_energy_m382; assert_equal("non-residential", worksheet.outputs_energy_m382); end
  def test_outputs_energy_p382; assert_in_epsilon(12.95, worksheet.outputs_energy_p382, 0.002); end
  def test_outputs_energy_r382; assert_in_epsilon(9.286178142155208, worksheet.outputs_energy_r382, 0.002); end
  def test_outputs_energy_s382; assert_in_epsilon(9.282387754834815, worksheet.outputs_energy_s382, 0.002); end
  def test_outputs_energy_t382; assert_in_epsilon(9.580180807575449, worksheet.outputs_energy_t382, 0.002); end
  def test_outputs_energy_u382; assert_in_epsilon(9.8056697699465, worksheet.outputs_energy_u382, 0.002); end
  def test_outputs_energy_v382; assert_in_epsilon(9.941194577959472, worksheet.outputs_energy_v382, 0.002); end
  def test_outputs_energy_w382; assert_in_epsilon(9.962121675785543, worksheet.outputs_energy_w382, 0.002); end
  def test_outputs_energy_x382; assert_in_epsilon(9.906094294366422, worksheet.outputs_energy_x382, 0.002); end
  def test_outputs_energy_y382; assert_in_epsilon(9.75104042846538, worksheet.outputs_energy_y382, 0.002); end
  def test_outputs_energy_z382; assert_in_epsilon(9.534452749572061, worksheet.outputs_energy_z382, 0.002); end
  def test_outputs_energy_c383; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c383); end
  def test_outputs_energy_d383; assert_equal("G.C.03", worksheet.outputs_energy_d383); end
  def test_outputs_energy_e383; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e383); end
  def test_outputs_energy_i383; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i383); end
  def test_outputs_energy_j383; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j383); end
  def test_outputs_energy_k383; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k383); end
  def test_outputs_energy_l383; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l383); end
  def test_outputs_energy_m383; assert_equal("non-residential", worksheet.outputs_energy_m383); end
  def test_outputs_energy_p383; assert_in_epsilon(24.88, worksheet.outputs_energy_p383, 0.002); end
  def test_outputs_energy_r383; assert_in_epsilon(22.00838896692654, worksheet.outputs_energy_r383, 0.002); end
  def test_outputs_energy_s383; assert_in_epsilon(22.275357483475894, worksheet.outputs_energy_s383, 0.002); end
  def test_outputs_energy_t383; assert_in_epsilon(23.987564717051672, worksheet.outputs_energy_t383, 0.002); end
  def test_outputs_energy_u383; assert_in_epsilon(25.601639461105925, worksheet.outputs_energy_u383, 0.002); end
  def test_outputs_energy_v383; assert_in_epsilon(27.06260058034855, worksheet.outputs_energy_v383, 0.002); end
  def test_outputs_energy_w383; assert_in_epsilon(28.281747183061924, worksheet.outputs_energy_w383, 0.002); end
  def test_outputs_energy_x383; assert_in_epsilon(29.34342945602571, worksheet.outputs_energy_x383, 0.002); end
  def test_outputs_energy_y383; assert_in_epsilon(30.162455208526286, worksheet.outputs_energy_y383, 0.002); end
  def test_outputs_energy_z383; assert_in_epsilon(30.838901846754315, worksheet.outputs_energy_z383, 0.002); end
  def test_outputs_energy_c384; assert_equal("Electricity grid", worksheet.outputs_energy_c384); end
  def test_outputs_energy_d384; assert_equal("G.E.01", worksheet.outputs_energy_d384); end
  def test_outputs_energy_e384; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e384); end
  def test_outputs_energy_i384; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i384); end
  def test_outputs_energy_j384; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j384); end
  def test_outputs_energy_k384; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k384); end
  def test_outputs_energy_l384; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l384); end
  def test_outputs_energy_m384; assert_equal("non-residential", worksheet.outputs_energy_m384); end
  def test_outputs_energy_p384; assert_in_epsilon(34.28, worksheet.outputs_energy_p384, 0.002); end
  def test_outputs_energy_r384; assert_in_epsilon(36.79584224618469, worksheet.outputs_energy_r384, 0.002); end
  def test_outputs_energy_s384; assert_in_epsilon(41.48138550994874, worksheet.outputs_energy_s384, 0.002); end
  def test_outputs_energy_t384; assert_in_epsilon(46.93188219838358, worksheet.outputs_energy_t384, 0.002); end
  def test_outputs_energy_u384; assert_in_epsilon(52.57272876421362, worksheet.outputs_energy_u384, 0.002); end
  def test_outputs_energy_v384; assert_in_epsilon(58.29274137039502, worksheet.outputs_energy_v384, 0.002); end
  def test_outputs_energy_w384; assert_in_epsilon(63.91468153046599, worksheet.outputs_energy_w384, 0.002); end
  def test_outputs_energy_x384; assert_in_epsilon(69.51809987071633, worksheet.outputs_energy_x384, 0.002); end
  def test_outputs_energy_y384; assert_in_epsilon(74.89835893085603, worksheet.outputs_energy_y384, 0.002); end
  def test_outputs_energy_z384; assert_in_epsilon(80.15570265487679, worksheet.outputs_energy_z384, 0.002); end
  def test_outputs_energy_c385; assert_equal("Heat network", worksheet.outputs_energy_c385); end
  def test_outputs_energy_d385; assert_equal("G.H.01", worksheet.outputs_energy_d385); end
  def test_outputs_energy_e385; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e385); end
  def test_outputs_energy_i385; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i385); end
  def test_outputs_energy_j385; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j385); end
  def test_outputs_energy_k385; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k385); end
  def test_outputs_energy_l385; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l385); end
  def test_outputs_energy_m385; assert_equal("non-residential", worksheet.outputs_energy_m385); end
  def test_outputs_energy_p385; assert_in_epsilon(5.46, worksheet.outputs_energy_p385, 0.002); end
  def test_outputs_energy_r385; assert_in_epsilon(5.601306145677334, worksheet.outputs_energy_r385, 0.002); end
  def test_outputs_energy_s385; assert_in_epsilon(5.268191638872745, worksheet.outputs_energy_s385, 0.002); end
  def test_outputs_energy_t385; assert_in_epsilon(5.6499790149063625, worksheet.outputs_energy_t385, 0.002); end
  def test_outputs_energy_u385; assert_in_epsilon(5.98836838509539, worksheet.outputs_energy_u385, 0.002); end
  def test_outputs_energy_v385; assert_in_epsilon(6.268524581923936, worksheet.outputs_energy_v385, 0.002); end
  def test_outputs_energy_w385; assert_in_epsilon(6.466230665178259, worksheet.outputs_energy_w385, 0.002); end
  def test_outputs_energy_x385; assert_in_epsilon(6.592703313409463, worksheet.outputs_energy_x385, 0.002); end
  def test_outputs_energy_y385; assert_in_epsilon(6.6226229422351635, worksheet.outputs_energy_y385, 0.002); end
  def test_outputs_energy_z385; assert_in_epsilon(6.574217292303878, worksheet.outputs_energy_z385, 0.002); end
  def test_outputs_energy_c386; assert_equal("Solar", worksheet.outputs_energy_c386); end
  def test_outputs_energy_d386; assert_equal("G.R.01", worksheet.outputs_energy_d386); end
  def test_outputs_energy_e386; assert_equal("Global Solar", worksheet.outputs_energy_e386); end
  def test_outputs_energy_f386; assert_equal("G.R.07", worksheet.outputs_energy_f386); end
  def test_outputs_energy_g386; assert_equal("Global Environmental heat", worksheet.outputs_energy_g386); end
  def test_outputs_energy_i386; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i386); end
  def test_outputs_energy_j386; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j386); end
  def test_outputs_energy_k386; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k386); end
  def test_outputs_energy_l386; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l386); end
  def test_outputs_energy_m386; assert_equal("non-residential", worksheet.outputs_energy_m386); end
  def test_outputs_energy_r386; assert_in_epsilon(5.993633125060281, worksheet.outputs_energy_r386, 0.002); end
  def test_outputs_energy_s386; assert_in_epsilon(6.204514522576471, worksheet.outputs_energy_s386, 0.002); end
  def test_outputs_energy_t386; assert_in_epsilon(7.438989335654156, worksheet.outputs_energy_t386, 0.002); end
  def test_outputs_energy_u386; assert_in_epsilon(8.778109302453066, worksheet.outputs_energy_u386, 0.002); end
  def test_outputs_energy_v386; assert_in_epsilon(10.201986842961523, worksheet.outputs_energy_v386, 0.002); end
  def test_outputs_energy_w386; assert_in_epsilon(11.67267129121991, worksheet.outputs_energy_w386, 0.002); end
  def test_outputs_energy_x386; assert_in_epsilon(13.205863533588907, worksheet.outputs_energy_x386, 0.002); end
  def test_outputs_energy_y386; assert_in_epsilon(14.754841666367303, worksheet.outputs_energy_y386, 0.002); end
  def test_outputs_energy_z386; assert_in_epsilon(16.338859249377418, worksheet.outputs_energy_z386, 0.002); end
  def test_outputs_energy_c491; assert_equal("Description", worksheet.outputs_energy_c491); end
  def test_outputs_energy_r491; assert_in_epsilon(2011.0, worksheet.outputs_energy_r491, 0.002); end
  def test_outputs_energy_s491; assert_equal("2015", worksheet.outputs_energy_s491); end
  def test_outputs_energy_t491; assert_equal("2020", worksheet.outputs_energy_t491); end
  def test_outputs_energy_u491; assert_equal("2025", worksheet.outputs_energy_u491); end
  def test_outputs_energy_v491; assert_equal("2030", worksheet.outputs_energy_v491); end
  def test_outputs_energy_w491; assert_equal("2035", worksheet.outputs_energy_w491); end
  def test_outputs_energy_x491; assert_equal("2040", worksheet.outputs_energy_x491); end
  def test_outputs_energy_y491; assert_equal("2045", worksheet.outputs_energy_y491); end
  def test_outputs_energy_z491; assert_equal("2050", worksheet.outputs_energy_z491); end
  def test_outputs_energy_c492; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_c492); end
  def test_outputs_energy_i492; assert_equal("G.M.02", worksheet.outputs_energy_i492); end
  def test_outputs_energy_r492; assert_in_epsilon(19.460745993692754, worksheet.outputs_energy_r492, 0.002); end
  def test_outputs_energy_s492; assert_in_epsilon(20.87272820727851, worksheet.outputs_energy_s492, 0.002); end
  def test_outputs_energy_t492; assert_in_epsilon(22.27983060639609, worksheet.outputs_energy_t492, 0.002); end
  def test_outputs_energy_u492; assert_in_epsilon(25.25522959448173, worksheet.outputs_energy_u492, 0.002); end
  def test_outputs_energy_v492; assert_in_epsilon(28.449420584158588, worksheet.outputs_energy_v492, 0.002); end
  def test_outputs_energy_w492; assert_in_epsilon(31.756734783029465, worksheet.outputs_energy_w492, 0.002); end
  def test_outputs_energy_x492; assert_in_epsilon(35.586676972924266, worksheet.outputs_energy_x492, 0.002); end
  def test_outputs_energy_y492; assert_in_epsilon(39.63277541917666, worksheet.outputs_energy_y492, 0.002); end
  def test_outputs_energy_z492; assert_in_epsilon(44.278896475938815, worksheet.outputs_energy_z492, 0.002); end
  def test_outputs_energy_c493; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_c493); end
  def test_outputs_energy_i493; assert_equal("G.M.02", worksheet.outputs_energy_i493); end
  def test_outputs_energy_r493; assert_in_epsilon(5.957349170600305, worksheet.outputs_energy_r493, 0.002); end
  def test_outputs_energy_s493; assert_in_epsilon(6.258306959238412, worksheet.outputs_energy_s493, 0.002); end
  def test_outputs_energy_t493; assert_in_epsilon(6.594540871274918, worksheet.outputs_energy_t493, 0.002); end
  def test_outputs_energy_u493; assert_in_epsilon(6.9192576170334545, worksheet.outputs_energy_u493, 0.002); end
  def test_outputs_energy_v493; assert_in_epsilon(7.258802297147687, worksheet.outputs_energy_v493, 0.002); end
  def test_outputs_energy_w493; assert_in_epsilon(7.624306833918459, worksheet.outputs_energy_w493, 0.002); end
  def test_outputs_energy_x493; assert_in_epsilon(7.973049158203093, worksheet.outputs_energy_x493, 0.002); end
  def test_outputs_energy_y493; assert_in_epsilon(8.254965871378753, worksheet.outputs_energy_y493, 0.002); end
  def test_outputs_energy_z493; assert_in_epsilon(8.488932738975024, worksheet.outputs_energy_z493, 0.002); end
  def test_outputs_energy_c494; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_c494); end
  def test_outputs_energy_i494; assert_equal("G.M.02", worksheet.outputs_energy_i494); end
  def test_outputs_energy_r494; assert_in_epsilon(1.6638113188620842, worksheet.outputs_energy_r494, 0.002); end
  def test_outputs_energy_s494; assert_in_epsilon(1.7694763425479956, worksheet.outputs_energy_s494, 0.002); end
  def test_outputs_energy_t494; assert_in_epsilon(1.894744905388335, worksheet.outputs_energy_t494, 0.002); end
  def test_outputs_energy_u494; assert_in_epsilon(2.150624155607988, worksheet.outputs_energy_u494, 0.002); end
  def test_outputs_energy_v494; assert_in_epsilon(2.425156951964546, worksheet.outputs_energy_v494, 0.002); end
  def test_outputs_energy_w494; assert_in_epsilon(2.7083200746511, worksheet.outputs_energy_w494, 0.002); end
  def test_outputs_energy_x494; assert_in_epsilon(3.036970425653016, worksheet.outputs_energy_x494, 0.002); end
  def test_outputs_energy_y494; assert_in_epsilon(3.381832763611387, worksheet.outputs_energy_y494, 0.002); end
  def test_outputs_energy_z494; assert_in_epsilon(3.7815367541428113, worksheet.outputs_energy_z494, 0.002); end
  def test_outputs_energy_c495; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_c495); end
  def test_outputs_energy_i495; assert_equal("G.M.02", worksheet.outputs_energy_i495); end
  def test_outputs_energy_r495; assert_in_epsilon(12.7269993633999, worksheet.outputs_energy_r495, 0.002); end
  def test_outputs_energy_s495; assert_in_epsilon(13.47704002837681, worksheet.outputs_energy_s495, 0.002); end
  def test_outputs_energy_t495; assert_in_epsilon(14.440034035265223, worksheet.outputs_energy_t495, 0.002); end
  def test_outputs_energy_u495; assert_in_epsilon(16.40021775532128, worksheet.outputs_energy_u495, 0.002); end
  def test_outputs_energy_v495; assert_in_epsilon(18.505144755966928, worksheet.outputs_energy_v495, 0.002); end
  def test_outputs_energy_w495; assert_in_epsilon(20.678549925380437, worksheet.outputs_energy_w495, 0.002); end
  def test_outputs_energy_x495; assert_in_epsilon(23.202139057014847, worksheet.outputs_energy_x495, 0.002); end
  def test_outputs_energy_y495; assert_in_epsilon(25.852757663457126, worksheet.outputs_energy_y495, 0.002); end
  def test_outputs_energy_z495; assert_in_epsilon(28.926126007824237, worksheet.outputs_energy_z495, 0.002); end
  def test_outputs_energy_c496; assert_equal("Total", worksheet.outputs_energy_c496); end
  def test_outputs_energy_r496; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r496, 0.002); end
  def test_outputs_energy_s496; assert_in_epsilon(42.37755153744173, worksheet.outputs_energy_s496, 0.002); end
  def test_outputs_energy_t496; assert_in_epsilon(45.20915041832457, worksheet.outputs_energy_t496, 0.002); end
  def test_outputs_energy_u496; assert_in_epsilon(50.72532912244445, worksheet.outputs_energy_u496, 0.002); end
  def test_outputs_energy_v496; assert_in_epsilon(56.63852458923775, worksheet.outputs_energy_v496, 0.002); end
  def test_outputs_energy_w496; assert_in_epsilon(62.76791161697946, worksheet.outputs_energy_w496, 0.002); end
  def test_outputs_energy_x496; assert_in_epsilon(69.79883561379523, worksheet.outputs_energy_x496, 0.002); end
  def test_outputs_energy_y496; assert_in_epsilon(77.12233171762392, worksheet.outputs_energy_y496, 0.002); end
  def test_outputs_energy_z496; assert_in_epsilon(85.47549197688089, worksheet.outputs_energy_z496, 0.002); end
  def test_outputs_energy_d208; assert_in_epsilon(946.0, worksheet.outputs_energy_d208, 0.002); end
  def test_outputs_energy_d209; assert_in_epsilon(861.0, worksheet.outputs_energy_d209, 0.002); end
  def test_outputs_energy_d238; assert_in_epsilon(14500.0, worksheet.outputs_energy_d238, 0.002); end
  def test_outputs_energy_d239; assert_in_epsilon(10800.0, worksheet.outputs_energy_d239, 0.002); end
  def test_outputs_energy_d240; assert_in_epsilon(12650.0, worksheet.outputs_energy_d240, 0.002); end
  def test_outputs_energy_h208; assert_in_epsilon(280.8189044437036, worksheet.outputs_energy_h208, 0.002); end
  def test_outputs_energy_h221; assert_in_epsilon(134.7819097290222, worksheet.outputs_energy_h221, 0.002); end
  def test_outputs_energy_h214; assert_in_epsilon(206809639346162.5, worksheet.outputs_energy_h214, 0.002); end
  def test_outputs_energy_h228; assert_in_delta(0.00265146048046949, worksheet.outputs_energy_h228, 0.002); end
  def test_outputs_energy_z60; assert_in_epsilon(380.07236630934995, worksheet.outputs_energy_z60, 0.002); end
  def test_outputs_energy_d316; assert_equal("Technology description", worksheet.outputs_energy_d316); end
  def test_outputs_energy_h316; assert_equal("1975", worksheet.outputs_energy_h316); end
  def test_outputs_energy_i316; assert_equal("1980", worksheet.outputs_energy_i316); end
  def test_outputs_energy_j316; assert_equal("1985", worksheet.outputs_energy_j316); end
  def test_outputs_energy_k316; assert_equal("1990", worksheet.outputs_energy_k316); end
  def test_outputs_energy_l316; assert_equal("1995", worksheet.outputs_energy_l316); end
  def test_outputs_energy_m316; assert_equal("2000", worksheet.outputs_energy_m316); end
  def test_outputs_energy_n316; assert_equal("2005", worksheet.outputs_energy_n316); end
  def test_outputs_energy_o316; assert_in_epsilon(2010.0, worksheet.outputs_energy_o316, 0.002); end
  def test_outputs_energy_p316; assert_in_epsilon(2011.0, worksheet.outputs_energy_p316, 0.002); end
  def test_outputs_energy_r316; assert_in_epsilon(2011.0, worksheet.outputs_energy_r316, 0.002); end
  def test_outputs_energy_s316; assert_equal("2015", worksheet.outputs_energy_s316); end
  def test_outputs_energy_t316; assert_equal("2020", worksheet.outputs_energy_t316); end
  def test_outputs_energy_u316; assert_equal("2025", worksheet.outputs_energy_u316); end
  def test_outputs_energy_v316; assert_equal("2030", worksheet.outputs_energy_v316); end
  def test_outputs_energy_w316; assert_equal("2035", worksheet.outputs_energy_w316); end
  def test_outputs_energy_x316; assert_equal("2040", worksheet.outputs_energy_x316); end
  def test_outputs_energy_y316; assert_equal("2045", worksheet.outputs_energy_y316); end
  def test_outputs_energy_z316; assert_equal("2050", worksheet.outputs_energy_z316); end
  def test_outputs_energy_d317; assert_equal("Unabated solid fuel power plants", worksheet.outputs_energy_d317); end
  def test_outputs_energy_h317; assert_in_epsilon(8.6961132, worksheet.outputs_energy_h317, 0.002); end
  def test_outputs_energy_i317; assert_in_epsilon(11.4665868, worksheet.outputs_energy_i317, 0.002); end
  def test_outputs_energy_j317; assert_in_epsilon(13.906404, worksheet.outputs_energy_j317, 0.002); end
  def test_outputs_energy_k317; assert_in_epsilon(16.4052396, worksheet.outputs_energy_k317, 0.002); end
  def test_outputs_energy_l317; assert_in_epsilon(18.456966, worksheet.outputs_energy_l317, 0.002); end
  def test_outputs_energy_m317; assert_in_epsilon(22.2185448, worksheet.outputs_energy_m317, 0.002); end
  def test_outputs_energy_n317; assert_in_epsilon(27.2447424, worksheet.outputs_energy_n317, 0.002); end
  def test_outputs_energy_o317; assert_in_epsilon(32.5517508, worksheet.outputs_energy_o317, 0.002); end
  def test_outputs_energy_p317; assert_in_epsilon(34.4380896, worksheet.outputs_energy_p317, 0.002); end
  def test_outputs_energy_r317; assert_in_epsilon(35.62864790191822, worksheet.outputs_energy_r317, 0.002); end
  def test_outputs_energy_s317; assert_in_epsilon(35.13938961114719, worksheet.outputs_energy_s317, 0.002); end
  def test_outputs_energy_t317; assert_in_epsilon(37.36070279728297, worksheet.outputs_energy_t317, 0.002); end
  def test_outputs_energy_u317; assert_in_epsilon(43.01981805181389, worksheet.outputs_energy_u317, 0.002); end
  def test_outputs_energy_v317; assert_in_epsilon(47.38234446253935, worksheet.outputs_energy_v317, 0.002); end
  def test_outputs_energy_w317; assert_in_epsilon(50.75415123739191, worksheet.outputs_energy_w317, 0.002); end
  def test_outputs_energy_x317; assert_in_epsilon(52.75569703636098, worksheet.outputs_energy_x317, 0.002); end
  def test_outputs_energy_y317; assert_in_epsilon(50.493845709577606, worksheet.outputs_energy_y317, 0.002); end
  def test_outputs_energy_z317; assert_in_epsilon(48.95546141128811, worksheet.outputs_energy_z317, 0.002); end
  def test_outputs_energy_d318; assert_equal("Unabated liquid fuel power plants", worksheet.outputs_energy_d318); end
  def test_outputs_energy_h318; assert_in_epsilon(5.200236, worksheet.outputs_energy_h318, 0.002); end
  def test_outputs_energy_i318; assert_in_epsilon(5.9519628, worksheet.outputs_energy_i318, 0.002); end
  def test_outputs_energy_j318; assert_in_epsilon(4.2661512, worksheet.outputs_energy_j318, 0.002); end
  def test_outputs_energy_k318; assert_in_epsilon(4.7950164, worksheet.outputs_energy_k318, 0.002); end
  def test_outputs_energy_l318; assert_in_epsilon(4.4350452, worksheet.outputs_energy_l318, 0.002); end
  def test_outputs_energy_m318; assert_in_epsilon(4.320846, worksheet.outputs_energy_m318, 0.002); end
  def test_outputs_energy_n318; assert_in_epsilon(4.1088132, worksheet.outputs_energy_n318, 0.002); end
  def test_outputs_energy_o318; assert_in_epsilon(3.4785432, worksheet.outputs_energy_o318, 0.002); end
  def test_outputs_energy_p318; assert_in_epsilon(3.808314, worksheet.outputs_energy_p318, 0.002); end
  def test_outputs_energy_r318; assert_in_epsilon(3.9503709465581016, worksheet.outputs_energy_r318, 0.002); end
  def test_outputs_energy_s318; assert_in_epsilon(4.03238897177099, worksheet.outputs_energy_s318, 0.002); end
  def test_outputs_energy_t318; assert_in_epsilon(8.005864885132064, worksheet.outputs_energy_t318, 0.002); end
  def test_outputs_energy_u318; assert_in_epsilon(9.218532439674405, worksheet.outputs_energy_u318, 0.002); end
  def test_outputs_energy_v318; assert_in_epsilon(12.28431152732502, worksheet.outputs_energy_v318, 0.002); end
  def test_outputs_energy_w318; assert_in_epsilon(14.640620549247666, worksheet.outputs_energy_w318, 0.002); end
  def test_outputs_energy_x318; assert_in_epsilon(17.2263500526893, worksheet.outputs_energy_x318, 0.002); end
  def test_outputs_energy_y318; assert_in_epsilon(20.6565732448272, worksheet.outputs_energy_y318, 0.002); end
  def test_outputs_energy_z318; assert_in_epsilon(23.253844170361855, worksheet.outputs_energy_z318, 0.002); end
  def test_outputs_energy_d319; assert_equal("Unabated gas fuel power plants", worksheet.outputs_energy_d319); end
  def test_outputs_energy_h319; assert_in_epsilon(2.9048472, worksheet.outputs_energy_h319, 0.002); end
  def test_outputs_energy_i319; assert_in_epsilon(3.597156, worksheet.outputs_energy_i319, 0.002); end
  def test_outputs_energy_j319; assert_in_epsilon(4.4971236, worksheet.outputs_energy_j319, 0.002); end
  def test_outputs_energy_k319; assert_in_epsilon(6.229368, worksheet.outputs_energy_k319, 0.002); end
  def test_outputs_energy_l319; assert_in_epsilon(7.2358848, worksheet.outputs_energy_l319, 0.002); end
  def test_outputs_energy_m319; assert_in_epsilon(9.8646876, worksheet.outputs_energy_m319, 0.002); end
  def test_outputs_energy_n319; assert_in_epsilon(13.20507, worksheet.outputs_energy_n319, 0.002); end
  def test_outputs_energy_o319; assert_in_epsilon(17.210952, worksheet.outputs_energy_o319, 0.002); end
  def test_outputs_energy_p319; assert_in_epsilon(17.4675924, worksheet.outputs_energy_p319, 0.002); end
  def test_outputs_energy_r319; assert_in_epsilon(18.641963883263593, worksheet.outputs_energy_r319, 0.002); end
  def test_outputs_energy_s319; assert_in_epsilon(18.43377815666738, worksheet.outputs_energy_s319, 0.002); end
  def test_outputs_energy_t319; assert_in_epsilon(21.348973027018832, worksheet.outputs_energy_t319, 0.002); end
  def test_outputs_energy_u319; assert_in_epsilon(24.582753172465075, worksheet.outputs_energy_u319, 0.002); end
  def test_outputs_energy_v319; assert_in_epsilon(28.078426348171465, worksheet.outputs_energy_v319, 0.002); end
  def test_outputs_energy_w319; assert_in_epsilon(32.209365208344856, worksheet.outputs_energy_w319, 0.002); end
  def test_outputs_energy_x319; assert_in_epsilon(37.68264074025784, worksheet.outputs_energy_x319, 0.002); end
  def test_outputs_energy_y319; assert_in_epsilon(43.60832129463521, worksheet.outputs_energy_y319, 0.002); end
  def test_outputs_energy_z319; assert_in_epsilon(50.17934794657031, worksheet.outputs_energy_z319, 0.002); end
  def test_outputs_energy_d320; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_d320); end
  def test_outputs_energy_h320; assert_in_delta(0.0, (worksheet.outputs_energy_h320||0), 0.002); end
  def test_outputs_energy_i320; assert_in_delta(0.0, (worksheet.outputs_energy_i320||0), 0.002); end
  def test_outputs_energy_j320; assert_in_delta(0.0, (worksheet.outputs_energy_j320||0), 0.002); end
  def test_outputs_energy_k320; assert_in_delta(0.0, (worksheet.outputs_energy_k320||0), 0.002); end
  def test_outputs_energy_l320; assert_in_delta(0.0, (worksheet.outputs_energy_l320||0), 0.002); end
  def test_outputs_energy_m320; assert_in_delta(0.0, (worksheet.outputs_energy_m320||0), 0.002); end
  def test_outputs_energy_n320; assert_in_delta(0.0, (worksheet.outputs_energy_n320||0), 0.002); end
  def test_outputs_energy_o320; assert_in_delta(0.0, (worksheet.outputs_energy_o320||0), 0.002); end
  def test_outputs_energy_p320; assert_in_delta(0.0, (worksheet.outputs_energy_p320||0), 0.002); end
  def test_outputs_energy_r320; assert_in_delta(0.0, (worksheet.outputs_energy_r320||0), 0.002); end
  def test_outputs_energy_s320; assert_in_delta(0.049229855999999995, worksheet.outputs_energy_s320, 0.002); end
  def test_outputs_energy_t320; assert_in_delta(0.35344512, worksheet.outputs_energy_t320, 0.002); end
  def test_outputs_energy_u320; assert_in_delta(0.3332482559999999, worksheet.outputs_energy_u320, 0.002); end
  def test_outputs_energy_v320; assert_in_delta(0.34460899199999995, worksheet.outputs_energy_v320, 0.002); end
  def test_outputs_energy_w320; assert_in_delta(0.34082208, worksheet.outputs_energy_w320, 0.002); end
  def test_outputs_energy_x320; assert_in_delta(0.30295296000000005, worksheet.outputs_energy_x320, 0.002); end
  def test_outputs_energy_y320; assert_in_delta(0.234788544, worksheet.outputs_energy_y320, 0.002); end
  def test_outputs_energy_z320; assert_in_delta(0.186820992, worksheet.outputs_energy_z320, 0.002); end
  def test_outputs_energy_d321; assert_equal("Nuclear", worksheet.outputs_energy_d321); end
  def test_outputs_energy_h321; assert_in_epsilon(1.3810068, worksheet.outputs_energy_h321, 0.002); end
  def test_outputs_energy_i321; assert_in_epsilon(2.56815, worksheet.outputs_energy_i321, 0.002); end
  def test_outputs_energy_j321; assert_in_epsilon(5.3715528, worksheet.outputs_energy_j321, 0.002); end
  def test_outputs_energy_k321; assert_in_epsilon(7.2464472, worksheet.outputs_energy_k321, 0.002); end
  def test_outputs_energy_l321; assert_in_epsilon(8.3950236, worksheet.outputs_energy_l321, 0.002); end
  def test_outputs_energy_m321; assert_in_epsilon(9.3262428, worksheet.outputs_energy_m321, 0.002); end
  def test_outputs_energy_n321; assert_in_epsilon(9.9646272, worksheet.outputs_energy_n321, 0.002); end
  def test_outputs_energy_o321; assert_in_epsilon(9.9226368, worksheet.outputs_energy_o321, 0.002); end
  def test_outputs_energy_p321; assert_in_epsilon(9.3012444, worksheet.outputs_energy_p321, 0.002); end
  def test_outputs_energy_r321; assert_in_epsilon(8.730094464, worksheet.outputs_energy_r321, 0.002); end
  def test_outputs_energy_s321; assert_in_epsilon(10.744731648000002, worksheet.outputs_energy_s321, 0.002); end
  def test_outputs_energy_t321; assert_in_epsilon(10.85265864, worksheet.outputs_energy_t321, 0.002); end
  def test_outputs_energy_u321; assert_in_epsilon(11.072930688, worksheet.outputs_energy_u321, 0.002); end
  def test_outputs_energy_v321; assert_in_epsilon(10.881060480000002, worksheet.outputs_energy_v321, 0.002); end
  def test_outputs_energy_w321; assert_in_epsilon(12.161983463999999, worksheet.outputs_energy_w321, 0.002); end
  def test_outputs_energy_x321; assert_in_epsilon(12.089558772, worksheet.outputs_energy_x321, 0.002); end
  def test_outputs_energy_y321; assert_in_epsilon(12.475823796, worksheet.outputs_energy_y321, 0.002); end
  def test_outputs_energy_z321; assert_in_epsilon(12.862088819999997, worksheet.outputs_energy_z321, 0.002); end
  def test_outputs_energy_d322; assert_equal("Wind, solar, marine", worksheet.outputs_energy_d322); end
  def test_outputs_energy_h322; assert_in_delta(0.0018612, worksheet.outputs_energy_h322, 0.002); end
  def test_outputs_energy_i322; assert_in_delta(0.0018216, worksheet.outputs_energy_i322, 0.002); end
  def test_outputs_energy_j322; assert_in_delta(0.0025236, worksheet.outputs_energy_j322, 0.002); end
  def test_outputs_energy_k322; assert_in_delta(0.0188136, worksheet.outputs_energy_k322, 0.002); end
  def test_outputs_energy_l322; assert_in_delta(0.0368568, worksheet.outputs_energy_l322, 0.002); end
  def test_outputs_energy_m322; assert_in_delta(0.1244772, worksheet.outputs_energy_m322, 0.002); end
  def test_outputs_energy_n322; assert_in_delta(0.4177584, worksheet.outputs_energy_n322, 0.002); end
  def test_outputs_energy_o322; assert_in_epsilon(1.370574, worksheet.outputs_energy_o322, 0.002); end
  def test_outputs_energy_p322; assert_in_epsilon(1.8177696, worksheet.outputs_energy_p322, 0.002); end
  def test_outputs_energy_r322; assert_in_epsilon(1.8149072401439998, worksheet.outputs_energy_r322, 0.002); end
  def test_outputs_energy_s322; assert_in_epsilon(3.3442219871999996, worksheet.outputs_energy_s322, 0.002); end
  def test_outputs_energy_t322; assert_in_epsilon(3.7862240443199995, worksheet.outputs_energy_t322, 0.002); end
  def test_outputs_energy_u322; assert_in_epsilon(4.13805025944, worksheet.outputs_energy_u322, 0.002); end
  def test_outputs_energy_v322; assert_in_epsilon(4.171763243519999, worksheet.outputs_energy_v322, 0.002); end
  def test_outputs_energy_w322; assert_in_epsilon(3.4584289415999994, worksheet.outputs_energy_w322, 0.002); end
  def test_outputs_energy_x322; assert_in_epsilon(4.373895983039999, worksheet.outputs_energy_x322, 0.002); end
  def test_outputs_energy_y322; assert_in_epsilon(6.8422714955999995, worksheet.outputs_energy_y322, 0.002); end
  def test_outputs_energy_z322; assert_in_epsilon(8.848293454799997, worksheet.outputs_energy_z322, 0.002); end
  def test_outputs_energy_d323; assert_equal("Hydro", worksheet.outputs_energy_d323); end
  def test_outputs_energy_h323; assert_in_epsilon(5.1973488, worksheet.outputs_energy_h323, 0.002); end
  def test_outputs_energy_i323; assert_in_epsilon(6.180696, worksheet.outputs_energy_i323, 0.002); end
  def test_outputs_energy_j323; assert_in_epsilon(7.103448, worksheet.outputs_energy_j323, 0.002); end
  def test_outputs_energy_k323; assert_in_epsilon(7.7201532, worksheet.outputs_energy_k323, 0.002); end
  def test_outputs_energy_l323; assert_in_epsilon(8.9287596, worksheet.outputs_energy_l323, 0.002); end
  def test_outputs_energy_m323; assert_in_epsilon(9.433656, worksheet.outputs_energy_m323, 0.002); end
  def test_outputs_energy_n323; assert_in_epsilon(10.5463116, worksheet.outputs_energy_n323, 0.002); end
  def test_outputs_energy_o323; assert_in_epsilon(12.389958, worksheet.outputs_energy_o323, 0.002); end
  def test_outputs_energy_p323; assert_in_epsilon(12.5653572, worksheet.outputs_energy_p323, 0.002); end
  def test_outputs_energy_r323; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r323, 0.002); end
  def test_outputs_energy_s323; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s323, 0.002); end
  def test_outputs_energy_t323; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t323, 0.002); end
  def test_outputs_energy_u323; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u323, 0.002); end
  def test_outputs_energy_v323; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v323, 0.002); end
  def test_outputs_energy_w323; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w323, 0.002); end
  def test_outputs_energy_x323; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x323, 0.002); end
  def test_outputs_energy_y323; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y323, 0.002); end
  def test_outputs_energy_z323; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z323, 0.002); end
  def test_outputs_energy_d324; assert_equal("Geothermal", worksheet.outputs_energy_d324); end
  def test_outputs_energy_h324; assert_in_delta(0.0288324, worksheet.outputs_energy_h324, 0.002); end
  def test_outputs_energy_i324; assert_in_delta(0.0491184, worksheet.outputs_energy_i324, 0.002); end
  def test_outputs_energy_j324; assert_in_delta(0.0825156, worksheet.outputs_energy_j324, 0.002); end
  def test_outputs_energy_k324; assert_in_delta(0.1309248, worksheet.outputs_energy_k324, 0.002); end
  def test_outputs_energy_l324; assert_in_delta(0.143226, worksheet.outputs_energy_l324, 0.002); end
  def test_outputs_energy_m324; assert_in_delta(0.1867716, worksheet.outputs_energy_m324, 0.002); end
  def test_outputs_energy_n324; assert_in_delta(0.2097468, worksheet.outputs_energy_n324, 0.002); end
  def test_outputs_energy_o324; assert_in_delta(0.2452896, worksheet.outputs_energy_o324, 0.002); end
  def test_outputs_energy_p324; assert_in_delta(0.2491632, worksheet.outputs_energy_p324, 0.002); end
  def test_outputs_energy_r324; assert_in_delta(0.26331345864, worksheet.outputs_energy_r324, 0.002); end
  def test_outputs_energy_s324; assert_in_delta(0.334037196, worksheet.outputs_energy_s324, 0.002); end
  def test_outputs_energy_t324; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_t324, 0.002); end
  def test_outputs_energy_u324; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_u324, 0.002); end
  def test_outputs_energy_v324; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_v324, 0.002); end
  def test_outputs_energy_w324; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_w324, 0.002); end
  def test_outputs_energy_x324; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_x324, 0.002); end
  def test_outputs_energy_y324; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_y324, 0.002); end
  def test_outputs_energy_z324; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_z324, 0.002); end
  def test_outputs_energy_d325; assert_equal("Total", worksheet.outputs_energy_d325); end
  def test_outputs_energy_h325; assert_in_epsilon(23.4102456, worksheet.outputs_energy_h325, 0.002); end
  def test_outputs_energy_i325; assert_in_epsilon(29.815491599999998, worksheet.outputs_energy_i325, 0.002); end
  def test_outputs_energy_j325; assert_in_epsilon(35.2297188, worksheet.outputs_energy_j325, 0.002); end
  def test_outputs_energy_k325; assert_in_epsilon(42.545962800000005, worksheet.outputs_energy_k325, 0.002); end
  def test_outputs_energy_l325; assert_in_epsilon(47.631762, worksheet.outputs_energy_l325, 0.002); end
  def test_outputs_energy_m325; assert_in_epsilon(55.475226000000006, worksheet.outputs_energy_m325, 0.002); end
  def test_outputs_energy_n325; assert_in_epsilon(65.6970696, worksheet.outputs_energy_n325, 0.002); end
  def test_outputs_energy_o325; assert_in_epsilon(77.1697044, worksheet.outputs_energy_o325, 0.002); end
  def test_outputs_energy_p325; assert_in_epsilon(79.6475304, worksheet.outputs_energy_p325, 0.002); end
  def test_outputs_energy_r325; assert_in_epsilon(82.19197285452391, worksheet.outputs_energy_r325, 0.002); end
  def test_outputs_energy_s325; assert_in_epsilon(90.39696422678556, worksheet.outputs_energy_s325, 0.002); end
  def test_outputs_energy_t325; assert_in_epsilon(101.20762512975386, worksheet.outputs_energy_t325, 0.002); end
  def test_outputs_energy_u325; assert_in_epsilon(112.58681179539339, worksheet.outputs_energy_u325, 0.002); end
  def test_outputs_energy_v325; assert_in_epsilon(124.11711610555584, worksheet.outputs_energy_v325, 0.002); end
  def test_outputs_energy_w325; assert_in_epsilon(135.50957979258445, worksheet.outputs_energy_w325, 0.002); end
  def test_outputs_energy_x325; assert_in_epsilon(146.9392066107481, worksheet.outputs_energy_x325, 0.002); end
  def test_outputs_energy_y325; assert_in_epsilon(157.97221870304003, worksheet.outputs_energy_y325, 0.002); end
  def test_outputs_energy_z325; assert_in_epsilon(169.11581828142025, worksheet.outputs_energy_z325, 0.002); end
  def test_outputs_energy_d326; assert_equal("Demand for electricity to grid", worksheet.outputs_energy_d326); end
  def test_outputs_energy_f326; assert_equal("Net balance", worksheet.outputs_energy_f326); end
  def test_outputs_energy_g326; assert_equal("G.E.02", worksheet.outputs_energy_g326); end
  def test_outputs_energy_r326; assert_in_epsilon(82.19197285452391, worksheet.outputs_energy_r326, 0.002); end
  def test_outputs_energy_s326; assert_in_epsilon(90.39696422678557, worksheet.outputs_energy_s326, 0.002); end
  def test_outputs_energy_t326; assert_in_epsilon(101.20762512975386, worksheet.outputs_energy_t326, 0.002); end
  def test_outputs_energy_u326; assert_in_epsilon(112.5868117953934, worksheet.outputs_energy_u326, 0.002); end
  def test_outputs_energy_v326; assert_in_epsilon(124.11711610555585, worksheet.outputs_energy_v326, 0.002); end
  def test_outputs_energy_w326; assert_in_epsilon(135.50957979258445, worksheet.outputs_energy_w326, 0.002); end
  def test_outputs_energy_x326; assert_in_epsilon(146.93920661074813, worksheet.outputs_energy_x326, 0.002); end
  def test_outputs_energy_y326; assert_in_epsilon(157.97221870304, worksheet.outputs_energy_y326, 0.002); end
  def test_outputs_energy_z326; assert_in_epsilon(169.11581828142025, worksheet.outputs_energy_z326, 0.002); end
  def test_outputs_energy_d221; assert_in_epsilon(193.88275276125742, worksheet.outputs_energy_d221, 0.002); end
  def test_outputs_energy_d222; assert_in_epsilon(187.29999999999998, worksheet.outputs_energy_d222, 0.002); end
  def test_outputs_energy_d223; assert_in_epsilon(191.07196261682242, worksheet.outputs_energy_d223, 0.002); end
  def test_outputs_energy_d252; assert_in_epsilon(511000.0, worksheet.outputs_energy_d252, 0.002); end
  def test_outputs_energy_d253; assert_in_epsilon(1300.0, worksheet.outputs_energy_d253, 0.002); end
  def test_outputs_energy_d254; assert_in_epsilon(400.0, worksheet.outputs_energy_d254, 0.002); end
  def test_outputs_energy_d255; assert_in_epsilon(346.99999999999994, worksheet.outputs_energy_d255, 0.002); end
  def test_outputs_energy_c335; assert_equal("Description", worksheet.outputs_energy_c335); end
  def test_outputs_energy_d335; assert_equal("Note for lookups", worksheet.outputs_energy_d335); end
  def test_outputs_energy_e335; assert_equal("Note for lookups 2", worksheet.outputs_energy_e335); end
  def test_outputs_energy_f335; assert_equal("Note for lookups 3", worksheet.outputs_energy_f335); end
  def test_outputs_energy_g335; assert_equal("Note for lookups 4", worksheet.outputs_energy_g335); end
  def test_outputs_energy_j335; assert_equal("1985", worksheet.outputs_energy_j335); end
  def test_outputs_energy_k335; assert_equal("1990", worksheet.outputs_energy_k335); end
  def test_outputs_energy_l335; assert_equal("1995", worksheet.outputs_energy_l335); end
  def test_outputs_energy_m335; assert_equal("2000", worksheet.outputs_energy_m335); end
  def test_outputs_energy_n335; assert_equal("2005", worksheet.outputs_energy_n335); end
  def test_outputs_energy_o335; assert_in_epsilon(2010.0, worksheet.outputs_energy_o335, 0.002); end
  def test_outputs_energy_p335; assert_in_epsilon(2011.0, worksheet.outputs_energy_p335, 0.002); end
  def test_outputs_energy_r335; assert_in_epsilon(2011.0, worksheet.outputs_energy_r335, 0.002); end
  def test_outputs_energy_s335; assert_equal("2015", worksheet.outputs_energy_s335); end
  def test_outputs_energy_t335; assert_equal("2020", worksheet.outputs_energy_t335); end
  def test_outputs_energy_u335; assert_equal("2025", worksheet.outputs_energy_u335); end
  def test_outputs_energy_v335; assert_equal("2030", worksheet.outputs_energy_v335); end
  def test_outputs_energy_w335; assert_equal("2035", worksheet.outputs_energy_w335); end
  def test_outputs_energy_x335; assert_equal("2040", worksheet.outputs_energy_x335); end
  def test_outputs_energy_y335; assert_equal("2045", worksheet.outputs_energy_y335); end
  def test_outputs_energy_z335; assert_equal("2050", worksheet.outputs_energy_z335); end
  def test_outputs_energy_c336; assert_equal("Iron and steel", worksheet.outputs_energy_c336); end
  def test_outputs_energy_d336; assert_equal("Steel.Oxygen", worksheet.outputs_energy_d336); end
  def test_outputs_energy_e336; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_e336); end
  def test_outputs_energy_f336; assert_equal("Steel.Electric", worksheet.outputs_energy_f336); end
  def test_outputs_energy_g336; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_g336); end
  def test_outputs_energy_h336; assert_equal("Steel.others", worksheet.outputs_energy_h336); end
  def test_outputs_energy_i336; assert_equal("G.M.02", worksheet.outputs_energy_i336); end
  def test_outputs_energy_r336; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r336, 0.002); end
  def test_outputs_energy_s336; assert_in_epsilon(32.6228329161994, worksheet.outputs_energy_s336, 0.002); end
  def test_outputs_energy_t336; assert_in_epsilon(35.5662347118132, worksheet.outputs_energy_t336, 0.002); end
  def test_outputs_energy_u336; assert_in_epsilon(38.26298882260351, worksheet.outputs_energy_u336, 0.002); end
  def test_outputs_energy_v336; assert_in_epsilon(40.88097454242191, worksheet.outputs_energy_v336, 0.002); end
  def test_outputs_energy_w336; assert_in_epsilon(43.33893472928355, worksheet.outputs_energy_w336, 0.002); end
  def test_outputs_energy_x336; assert_in_epsilon(45.97776893708481, worksheet.outputs_energy_x336, 0.002); end
  def test_outputs_energy_y336; assert_in_epsilon(48.750998466510524, worksheet.outputs_energy_y336, 0.002); end
  def test_outputs_energy_z336; assert_in_epsilon(51.648189283429446, worksheet.outputs_energy_z336, 0.002); end
  def test_outputs_energy_c337; assert_equal("Aluminium", worksheet.outputs_energy_c337); end
  def test_outputs_energy_d337; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_d337); end
  def test_outputs_energy_e337; assert_equal("Aluminium.Primary", worksheet.outputs_energy_e337); end
  def test_outputs_energy_f337; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_f337); end
  def test_outputs_energy_i337; assert_equal("G.M.02", worksheet.outputs_energy_i337); end
  def test_outputs_energy_r337; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r337, 0.002); end
  def test_outputs_energy_s337; assert_in_epsilon(4.816322641142496, worksheet.outputs_energy_s337, 0.002); end
  def test_outputs_energy_t337; assert_in_epsilon(5.381816835910493, worksheet.outputs_energy_t337, 0.002); end
  def test_outputs_energy_u337; assert_in_epsilon(6.115753559935157, worksheet.outputs_energy_u337, 0.002); end
  def test_outputs_energy_v337; assert_in_epsilon(6.887623238009196, worksheet.outputs_energy_v337, 0.002); end
  def test_outputs_energy_w337; assert_in_epsilon(7.666711639409761, worksheet.outputs_energy_w337, 0.002); end
  def test_outputs_energy_x337; assert_in_epsilon(8.533667643585837, worksheet.outputs_energy_x337, 0.002); end
  def test_outputs_energy_y337; assert_in_epsilon(9.466730084280478, worksheet.outputs_energy_y337, 0.002); end
  def test_outputs_energy_z337; assert_in_epsilon(10.51066979744558, worksheet.outputs_energy_z337, 0.002); end
  def test_outputs_energy_c338; assert_equal("Chemicals", worksheet.outputs_energy_c338); end
  def test_outputs_energy_d338; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_d338); end
  def test_outputs_energy_e338; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_e338); end
  def test_outputs_energy_f338; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_f338); end
  def test_outputs_energy_g338; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_g338); end
  def test_outputs_energy_i338; assert_equal("G.M.02", worksheet.outputs_energy_i338); end
  def test_outputs_energy_r338; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r338, 0.002); end
  def test_outputs_energy_s338; assert_in_epsilon(42.37755153744173, worksheet.outputs_energy_s338, 0.002); end
  def test_outputs_energy_t338; assert_in_epsilon(45.20915041832457, worksheet.outputs_energy_t338, 0.002); end
  def test_outputs_energy_u338; assert_in_epsilon(50.72532912244445, worksheet.outputs_energy_u338, 0.002); end
  def test_outputs_energy_v338; assert_in_epsilon(56.63852458923775, worksheet.outputs_energy_v338, 0.002); end
  def test_outputs_energy_w338; assert_in_epsilon(62.76791161697946, worksheet.outputs_energy_w338, 0.002); end
  def test_outputs_energy_x338; assert_in_epsilon(69.79883561379523, worksheet.outputs_energy_x338, 0.002); end
  def test_outputs_energy_y338; assert_in_epsilon(77.12233171762392, worksheet.outputs_energy_y338, 0.002); end
  def test_outputs_energy_z338; assert_in_epsilon(85.47549197688089, worksheet.outputs_energy_z338, 0.002); end
  def test_outputs_energy_c339; assert_equal("Pulp and paper", worksheet.outputs_energy_c339); end
  def test_outputs_energy_d339; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_d339); end
  def test_outputs_energy_e339; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_e339); end
  def test_outputs_energy_f339; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_f339); end
  def test_outputs_energy_i339; assert_equal("G.M.02", worksheet.outputs_energy_i339); end
  def test_outputs_energy_r339; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r339, 0.002); end
  def test_outputs_energy_s339; assert_in_epsilon(6.86407872982948, worksheet.outputs_energy_s339, 0.002); end
  def test_outputs_energy_t339; assert_in_epsilon(7.1482363231837205, worksheet.outputs_energy_t339, 0.002); end
  def test_outputs_energy_u339; assert_in_epsilon(7.723127121828506, worksheet.outputs_energy_u339, 0.002); end
  def test_outputs_energy_v339; assert_in_epsilon(8.299426871842439, worksheet.outputs_energy_v339, 0.002); end
  def test_outputs_energy_w339; assert_in_epsilon(8.857067886087487, worksheet.outputs_energy_w339, 0.002); end
  def test_outputs_energy_x339; assert_in_epsilon(9.469669795531205, worksheet.outputs_energy_x339, 0.002); end
  def test_outputs_energy_y339; assert_in_epsilon(10.068062045026572, worksheet.outputs_energy_y339, 0.002); end
  def test_outputs_energy_z339; assert_in_epsilon(10.728730809976621, worksheet.outputs_energy_z339, 0.002); end
  def test_outputs_energy_c340; assert_equal("Cement", worksheet.outputs_energy_c340); end
  def test_outputs_energy_d340; assert_equal("Cement", worksheet.outputs_energy_d340); end
  def test_outputs_energy_i340; assert_equal("G.M.02", worksheet.outputs_energy_i340); end
  def test_outputs_energy_r340; assert_in_epsilon(10.600379598268718, worksheet.outputs_energy_r340, 0.002); end
  def test_outputs_energy_s340; assert_in_epsilon(10.77487038670087, worksheet.outputs_energy_s340, 0.002); end
  def test_outputs_energy_t340; assert_in_epsilon(12.333097859636151, worksheet.outputs_energy_t340, 0.002); end
  def test_outputs_energy_u340; assert_in_epsilon(12.876666660632749, worksheet.outputs_energy_u340, 0.002); end
  def test_outputs_energy_v340; assert_in_epsilon(13.35167580278241, worksheet.outputs_energy_v340, 0.002); end
  def test_outputs_energy_w340; assert_in_epsilon(13.795126978487955, worksheet.outputs_energy_w340, 0.002); end
  def test_outputs_energy_x340; assert_in_epsilon(14.139734368402186, worksheet.outputs_energy_x340, 0.002); end
  def test_outputs_energy_y340; assert_in_epsilon(14.463678409479034, worksheet.outputs_energy_y340, 0.002); end
  def test_outputs_energy_z340; assert_in_epsilon(14.803771037818967, worksheet.outputs_energy_z340, 0.002); end
  def test_outputs_energy_c341; assert_equal("Other", worksheet.outputs_energy_c341); end
  def test_outputs_energy_d341; assert_equal("Other industries", worksheet.outputs_energy_d341); end
  def test_outputs_energy_i341; assert_equal("G.M.02", worksheet.outputs_energy_i341); end
  def test_outputs_energy_r341; assert_in_epsilon(44.35126743259007, worksheet.outputs_energy_r341, 0.002); end
  def test_outputs_energy_s341; assert_in_epsilon(47.52653874409059, worksheet.outputs_energy_s341, 0.002); end
  def test_outputs_energy_t341; assert_in_epsilon(53.551308221448906, worksheet.outputs_energy_t341, 0.002); end
  def test_outputs_energy_u341; assert_in_epsilon(59.511425898491254, worksheet.outputs_energy_u341, 0.002); end
  def test_outputs_energy_v341; assert_in_epsilon(65.34456512835911, worksheet.outputs_energy_v341, 0.002); end
  def test_outputs_energy_w341; assert_in_epsilon(71.00891873692127, worksheet.outputs_energy_w341, 0.002); end
  def test_outputs_energy_x341; assert_in_epsilon(76.44970761564754, worksheet.outputs_energy_x341, 0.002); end
  def test_outputs_energy_y341; assert_in_epsilon(81.59857737900425, worksheet.outputs_energy_y341, 0.002); end
  def test_outputs_energy_z341; assert_in_epsilon(86.39288383397617, worksheet.outputs_energy_z341, 0.002); end
  def test_outputs_energy_c342; assert_equal("Timber", worksheet.outputs_energy_c342); end
  def test_outputs_energy_d342; assert_equal("Timber", worksheet.outputs_energy_d342); end
  def test_outputs_energy_i342; assert_equal("G.M.02", worksheet.outputs_energy_i342); end
  def test_outputs_energy_r342; assert_in_epsilon(6.142647935033603, worksheet.outputs_energy_r342, 0.002); end
  def test_outputs_energy_s342; assert_in_epsilon(6.517444045642774, worksheet.outputs_energy_s342, 0.002); end
  def test_outputs_energy_t342; assert_in_epsilon(7.069220592835804, worksheet.outputs_energy_t342, 0.002); end
  def test_outputs_energy_u342; assert_in_epsilon(7.488800664931583, worksheet.outputs_energy_u342, 0.002); end
  def test_outputs_energy_v342; assert_in_epsilon(7.8847710686989, worksheet.outputs_energy_v342, 0.002); end
  def test_outputs_energy_w342; assert_in_epsilon(8.262393318304746, worksheet.outputs_energy_w342, 0.002); end
  def test_outputs_energy_x342; assert_in_epsilon(8.616836919113114, worksheet.outputs_energy_x342, 0.002); end
  def test_outputs_energy_y342; assert_in_epsilon(8.952908307152398, worksheet.outputs_energy_y342, 0.002); end
  def test_outputs_energy_z342; assert_in_epsilon(9.251713506329185, worksheet.outputs_energy_z342, 0.002); end
  def test_outputs_energy_c343; assert_equal("Total", worksheet.outputs_energy_c343); end
  def test_outputs_energy_j343; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j343, 0.002); end
  def test_outputs_energy_k343; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k343, 0.002); end
  def test_outputs_energy_l343; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l343, 0.002); end
  def test_outputs_energy_m343; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m343, 0.002); end
  def test_outputs_energy_n343; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n343, 0.002); end
  def test_outputs_energy_o343; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o343, 0.002); end
  def test_outputs_energy_p343; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p343, 0.002); end
  def test_outputs_energy_r343; assert_in_epsilon(143.3476207635151, worksheet.outputs_energy_r343, 0.002); end
  def test_outputs_energy_s343; assert_in_epsilon(151.49963900104734, worksheet.outputs_energy_s343, 0.002); end
  def test_outputs_energy_t343; assert_in_epsilon(166.25906496315284, worksheet.outputs_energy_t343, 0.002); end
  def test_outputs_energy_u343; assert_in_epsilon(182.70409185086723, worksheet.outputs_energy_u343, 0.002); end
  def test_outputs_energy_v343; assert_in_epsilon(199.28756124135174, worksheet.outputs_energy_v343, 0.002); end
  def test_outputs_energy_w343; assert_in_epsilon(215.69706490547424, worksheet.outputs_energy_w343, 0.002); end
  def test_outputs_energy_x343; assert_in_epsilon(232.98622089315992, worksheet.outputs_energy_x343, 0.002); end
  def test_outputs_energy_y343; assert_in_epsilon(250.42328640907718, worksheet.outputs_energy_y343, 0.002); end
  def test_outputs_energy_z343; assert_in_epsilon(268.8114502458568, worksheet.outputs_energy_z343, 0.002); end
  def test_outputs_energy_c365; assert_equal("Description", worksheet.outputs_energy_c365); end
  def test_outputs_energy_p365; assert_in_epsilon(2011.0, worksheet.outputs_energy_p365, 0.002); end
  def test_outputs_energy_r365; assert_in_epsilon(2011.0, worksheet.outputs_energy_r365, 0.002); end
  def test_outputs_energy_s365; assert_equal("2015", worksheet.outputs_energy_s365); end
  def test_outputs_energy_t365; assert_equal("2020", worksheet.outputs_energy_t365); end
  def test_outputs_energy_u365; assert_equal("2025", worksheet.outputs_energy_u365); end
  def test_outputs_energy_v365; assert_equal("2030", worksheet.outputs_energy_v365); end
  def test_outputs_energy_w365; assert_equal("2035", worksheet.outputs_energy_w365); end
  def test_outputs_energy_x365; assert_equal("2040", worksheet.outputs_energy_x365); end
  def test_outputs_energy_y365; assert_equal("2045", worksheet.outputs_energy_y365); end
  def test_outputs_energy_z365; assert_equal("2050", worksheet.outputs_energy_z365); end
  def test_outputs_energy_c366; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c366); end
  def test_outputs_energy_d366; assert_equal("G.C.01", worksheet.outputs_energy_d366); end
  def test_outputs_energy_e366; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e366); end
  def test_outputs_energy_f366; assert_equal("G.FF.01", worksheet.outputs_energy_f366); end
  def test_outputs_energy_g366; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_g366); end
  def test_outputs_energy_k366; assert_equal("Global manufacturing", worksheet.outputs_energy_k366); end
  def test_outputs_energy_p366; assert_in_epsilon(50.46, worksheet.outputs_energy_p366, 0.002); end
  def test_outputs_energy_r366; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_r366, 0.002); end
  def test_outputs_energy_s366; assert_in_epsilon(52.84927420772798, worksheet.outputs_energy_s366, 0.002); end
  def test_outputs_energy_t366; assert_in_epsilon(58.215728983159906, worksheet.outputs_energy_t366, 0.002); end
  def test_outputs_energy_u366; assert_in_epsilon(62.91737038824205, worksheet.outputs_energy_u366, 0.002); end
  def test_outputs_energy_v366; assert_in_epsilon(67.34339298117615, worksheet.outputs_energy_v366, 0.002); end
  def test_outputs_energy_w366; assert_in_epsilon(71.57758787480697, worksheet.outputs_energy_w366, 0.002); end
  def test_outputs_energy_x366; assert_in_epsilon(75.88929878654899, worksheet.outputs_energy_x366, 0.002); end
  def test_outputs_energy_y366; assert_in_epsilon(80.20794643763047, worksheet.outputs_energy_y366, 0.002); end
  def test_outputs_energy_z366; assert_in_epsilon(84.61287548208202, worksheet.outputs_energy_z366, 0.002); end
  def test_outputs_energy_c367; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c367); end
  def test_outputs_energy_d367; assert_equal("G.C.02", worksheet.outputs_energy_d367); end
  def test_outputs_energy_e367; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e367); end
  def test_outputs_energy_f367; assert_equal("G.FF.02", worksheet.outputs_energy_f367); end
  def test_outputs_energy_g367; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_g367); end
  def test_outputs_energy_k367; assert_equal("Global manufacturing", worksheet.outputs_energy_k367); end
  def test_outputs_energy_p367; assert_in_epsilon(30.59, worksheet.outputs_energy_p367, 0.002); end
  def test_outputs_energy_r367; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_r367, 0.002); end
  def test_outputs_energy_s367; assert_in_epsilon(32.920734252110826, worksheet.outputs_energy_s367, 0.002); end
  def test_outputs_energy_t367; assert_in_epsilon(35.81484496856289, worksheet.outputs_energy_t367, 0.002); end
  def test_outputs_energy_u367; assert_in_epsilon(40.16136855631997, worksheet.outputs_energy_u367, 0.002); end
  def test_outputs_energy_v367; assert_in_epsilon(44.69477459871425, worksheet.outputs_energy_v367, 0.002); end
  def test_outputs_energy_w367; assert_in_epsilon(49.30051594467047, worksheet.outputs_energy_w367, 0.002); end
  def test_outputs_energy_x367; assert_in_epsilon(54.385776709346196, worksheet.outputs_energy_x367, 0.002); end
  def test_outputs_energy_y367; assert_in_epsilon(59.63591585852211, worksheet.outputs_energy_y367, 0.002); end
  def test_outputs_energy_z367; assert_in_epsilon(65.43106569116492, worksheet.outputs_energy_z367, 0.002); end
  def test_outputs_energy_c368; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c368); end
  def test_outputs_energy_d368; assert_equal("G.C.03", worksheet.outputs_energy_d368); end
  def test_outputs_energy_e368; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e368); end
  def test_outputs_energy_f368; assert_equal("G.FF.03", worksheet.outputs_energy_f368); end
  def test_outputs_energy_g368; assert_equal("Global Natural gas", worksheet.outputs_energy_g368); end
  def test_outputs_energy_k368; assert_equal("Global manufacturing", worksheet.outputs_energy_k368); end
  def test_outputs_energy_p368; assert_in_epsilon(27.89, worksheet.outputs_energy_p368, 0.002); end
  def test_outputs_energy_r368; assert_in_epsilon(27.233246077496677, worksheet.outputs_energy_r368, 0.002); end
  def test_outputs_energy_s368; assert_in_epsilon(29.068327867515183, worksheet.outputs_energy_s368, 0.002); end
  def test_outputs_energy_t368; assert_in_epsilon(31.864071763470935, worksheet.outputs_energy_t368, 0.002); end
  def test_outputs_energy_u368; assert_in_epsilon(35.13577318427337, worksheet.outputs_energy_u368, 0.002); end
  def test_outputs_energy_v368; assert_in_epsilon(38.47041638804997, worksheet.outputs_energy_v368, 0.002); end
  def test_outputs_energy_w368; assert_in_epsilon(41.815146961355126, worksheet.outputs_energy_w368, 0.002); end
  def test_outputs_energy_x368; assert_in_epsilon(45.31471978896505, worksheet.outputs_energy_x368, 0.002); end
  def test_outputs_energy_y368; assert_in_epsilon(48.78308609463202, worksheet.outputs_energy_y368, 0.002); end
  def test_outputs_energy_z368; assert_in_epsilon(52.390675534396834, worksheet.outputs_energy_z368, 0.002); end
  def test_outputs_energy_c369; assert_equal("Electricity grid", worksheet.outputs_energy_c369); end
  def test_outputs_energy_d369; assert_equal("G.E.01", worksheet.outputs_energy_d369); end
  def test_outputs_energy_e369; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e369); end
  def test_outputs_energy_k369; assert_equal("Global manufacturing", worksheet.outputs_energy_k369); end
  def test_outputs_energy_p369; assert_in_epsilon(28.68, worksheet.outputs_energy_p369, 0.002); end
  def test_outputs_energy_r369; assert_in_epsilon(29.285413529720426, worksheet.outputs_energy_r369, 0.002); end
  def test_outputs_energy_s369; assert_in_epsilon(31.039849689990398, worksheet.outputs_energy_s369, 0.002); end
  def test_outputs_energy_t369; assert_in_epsilon(34.18312961908761, worksheet.outputs_energy_t369, 0.002); end
  def test_outputs_energy_u369; assert_in_epsilon(37.6056316775485, worksheet.outputs_energy_u369, 0.002); end
  def test_outputs_energy_v369; assert_in_epsilon(41.01090341777539, worksheet.outputs_energy_v369, 0.002); end
  def test_outputs_energy_w369; assert_in_epsilon(44.33421447884265, worksheet.outputs_energy_w369, 0.002); end
  def test_outputs_energy_x369; assert_in_epsilon(47.756723433292585, worksheet.outputs_energy_x369, 0.002); end
  def test_outputs_energy_y369; assert_in_epsilon(51.15592311259907, worksheet.outputs_energy_y369, 0.002); end
  def test_outputs_energy_z369; assert_in_epsilon(54.66156737803842, worksheet.outputs_energy_z369, 0.002); end
  def test_outputs_energy_c370; assert_equal("Heat network", worksheet.outputs_energy_c370); end
  def test_outputs_energy_d370; assert_equal("G.H.01", worksheet.outputs_energy_d370); end
  def test_outputs_energy_e370; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e370); end
  def test_outputs_energy_k370; assert_equal("Global manufacturing", worksheet.outputs_energy_k370); end
  def test_outputs_energy_p370; assert_in_epsilon(5.31, worksheet.outputs_energy_p370, 0.002); end
  def test_outputs_energy_r370; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_r370, 0.002); end
  def test_outputs_energy_s370; assert_in_epsilon(5.621452983702943, worksheet.outputs_energy_s370, 0.002); end
  def test_outputs_energy_t370; assert_in_epsilon(6.181289628871501, worksheet.outputs_energy_t370, 0.002); end
  def test_outputs_energy_u370; assert_in_epsilon(6.883948044483339, worksheet.outputs_energy_u370, 0.002); end
  def test_outputs_energy_v370; assert_in_epsilon(7.59836954289811, worksheet.outputs_energy_v370, 0.002); end
  def test_outputs_energy_w370; assert_in_epsilon(8.308416026350727, worksheet.outputs_energy_w370, 0.002); end
  def test_outputs_energy_x370; assert_in_epsilon(9.06277807715208, worksheet.outputs_energy_x370, 0.002); end
  def test_outputs_energy_y370; assert_in_epsilon(9.821753470438308, worksheet.outputs_energy_y370, 0.002); end
  def test_outputs_energy_z370; assert_in_epsilon(10.627140994848054, worksheet.outputs_energy_z370, 0.002); end
  def test_outputs_energy_d214; assert_in_epsilon(242607775716314.97, worksheet.outputs_energy_d214, 0.002); end
  def test_outputs_energy_d215; assert_in_epsilon(265349795354999.97, worksheet.outputs_energy_d215, 0.002); end
  def test_outputs_energy_d216; assert_in_epsilon(234824234714999.97, worksheet.outputs_energy_d216, 0.002); end
  def test_outputs_energy_d245; assert_in_epsilon(636000000000000.0, worksheet.outputs_energy_d245, 0.002); end
  def test_outputs_energy_d246; assert_in_epsilon(477000000000000.0, worksheet.outputs_energy_d246, 0.002); end
  def test_outputs_energy_d247; assert_in_epsilon(365700000000000.0, worksheet.outputs_energy_d247, 0.002); end
  def test_outputs_energy_c505; assert_equal("Description", worksheet.outputs_energy_c505); end
  def test_outputs_energy_r505; assert_in_epsilon(2011.0, worksheet.outputs_energy_r505, 0.002); end
  def test_outputs_energy_s505; assert_equal("2015", worksheet.outputs_energy_s505); end
  def test_outputs_energy_t505; assert_equal("2020", worksheet.outputs_energy_t505); end
  def test_outputs_energy_u505; assert_equal("2025", worksheet.outputs_energy_u505); end
  def test_outputs_energy_v505; assert_equal("2030", worksheet.outputs_energy_v505); end
  def test_outputs_energy_w505; assert_equal("2035", worksheet.outputs_energy_w505); end
  def test_outputs_energy_x505; assert_equal("2040", worksheet.outputs_energy_x505); end
  def test_outputs_energy_y505; assert_equal("2045", worksheet.outputs_energy_y505); end
  def test_outputs_energy_z505; assert_equal("2050", worksheet.outputs_energy_z505); end
  def test_outputs_energy_c506; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_c506); end
  def test_outputs_energy_i506; assert_equal("G.M.02", worksheet.outputs_energy_i506); end
  def test_outputs_energy_r506; assert_in_epsilon(3.020565131792657, worksheet.outputs_energy_r506, 0.002); end
  def test_outputs_energy_s506; assert_in_epsilon(3.129066746045473, worksheet.outputs_energy_s506, 0.002); end
  def test_outputs_energy_t506; assert_in_epsilon(3.258617343360762, worksheet.outputs_energy_t506, 0.002); end
  def test_outputs_energy_u506; assert_in_epsilon(3.5207041929794993, worksheet.outputs_energy_u506, 0.002); end
  def test_outputs_energy_v506; assert_in_epsilon(3.7834356192898815, worksheet.outputs_energy_v506, 0.002); end
  def test_outputs_energy_w506; assert_in_epsilon(4.037663392449593, worksheet.outputs_energy_w506, 0.002); end
  def test_outputs_energy_x506; assert_in_epsilon(4.316948460802045, worksheet.outputs_energy_x506, 0.002); end
  def test_outputs_energy_y506; assert_in_epsilon(4.589758159514734, worksheet.outputs_energy_y506, 0.002); end
  def test_outputs_energy_z506; assert_in_epsilon(4.89096054175361, worksheet.outputs_energy_z506, 0.002); end
  def test_outputs_energy_c507; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_c507); end
  def test_outputs_energy_i507; assert_equal("G.M.02", worksheet.outputs_energy_i507); end
  def test_outputs_energy_r507; assert_in_epsilon(3.059951650403277, worksheet.outputs_energy_r507, 0.002); end
  def test_outputs_energy_s507; assert_in_epsilon(3.1698859816764147, worksheet.outputs_energy_s507, 0.002); end
  def test_outputs_energy_t507; assert_in_epsilon(3.301147311423536, worksheet.outputs_energy_t507, 0.002); end
  def test_outputs_energy_u507; assert_in_epsilon(3.566677184838945, worksheet.outputs_energy_u507, 0.002); end
  def test_outputs_energy_v507; assert_in_epsilon(3.8328633878720053, worksheet.outputs_energy_v507, 0.002); end
  def test_outputs_energy_w507; assert_in_epsilon(4.09043812977436, worksheet.outputs_energy_w507, 0.002); end
  def test_outputs_energy_x507; assert_in_epsilon(4.373401072026435, worksheet.outputs_energy_x507, 0.002); end
  def test_outputs_energy_y507; assert_in_epsilon(4.64980747526486, worksheet.outputs_energy_y507, 0.002); end
  def test_outputs_energy_z507; assert_in_epsilon(4.95498168079409, worksheet.outputs_energy_z507, 0.002); end
  def test_outputs_energy_c508; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_c508); end
  def test_outputs_energy_i508; assert_equal("G.M.02", worksheet.outputs_energy_i508); end
  def test_outputs_energy_r508; assert_in_delta(0.5308491227739531, worksheet.outputs_energy_r508, 0.002); end
  def test_outputs_energy_s508; assert_in_delta(0.5651260021075912, worksheet.outputs_energy_s508, 0.002); end
  def test_outputs_energy_t508; assert_in_delta(0.5884716683994224, worksheet.outputs_energy_t508, 0.002); end
  def test_outputs_energy_u508; assert_in_delta(0.6357457440100623, worksheet.outputs_energy_u508, 0.002); end
  def test_outputs_energy_v508; assert_in_delta(0.6831278646805511, worksheet.outputs_energy_v508, 0.002); end
  def test_outputs_energy_w508; assert_in_delta(0.7289663638635333, worksheet.outputs_energy_w508, 0.002); end
  def test_outputs_energy_x508; assert_in_delta(0.7793202627027243, worksheet.outputs_energy_x508, 0.002); end
  def test_outputs_energy_y508; assert_in_delta(0.8284964102469774, worksheet.outputs_energy_y508, 0.002); end
  def test_outputs_energy_z508; assert_in_delta(0.8827885874289227, worksheet.outputs_energy_z508, 0.002); end
  def test_outputs_energy_c509; assert_equal("Total", worksheet.outputs_energy_c509); end
  def test_outputs_energy_r509; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r509, 0.002); end
  def test_outputs_energy_s509; assert_in_epsilon(6.86407872982948, worksheet.outputs_energy_s509, 0.002); end
  def test_outputs_energy_t509; assert_in_epsilon(7.1482363231837205, worksheet.outputs_energy_t509, 0.002); end
  def test_outputs_energy_u509; assert_in_epsilon(7.723127121828506, worksheet.outputs_energy_u509, 0.002); end
  def test_outputs_energy_v509; assert_in_epsilon(8.299426871842439, worksheet.outputs_energy_v509, 0.002); end
  def test_outputs_energy_w509; assert_in_epsilon(8.857067886087487, worksheet.outputs_energy_w509, 0.002); end
  def test_outputs_energy_x509; assert_in_epsilon(9.469669795531205, worksheet.outputs_energy_x509, 0.002); end
  def test_outputs_energy_y509; assert_in_epsilon(10.068062045026572, worksheet.outputs_energy_y509, 0.002); end
  def test_outputs_energy_z509; assert_in_epsilon(10.728730809976621, worksheet.outputs_energy_z509, 0.002); end
  def test_outputs_energy_c409; assert_equal("Description", worksheet.outputs_energy_c409); end
  def test_outputs_energy_r409; assert_in_epsilon(2011.0, worksheet.outputs_energy_r409, 0.002); end
  def test_outputs_energy_s409; assert_equal("2015", worksheet.outputs_energy_s409); end
  def test_outputs_energy_t409; assert_equal("2020", worksheet.outputs_energy_t409); end
  def test_outputs_energy_u409; assert_equal("2025", worksheet.outputs_energy_u409); end
  def test_outputs_energy_v409; assert_equal("2030", worksheet.outputs_energy_v409); end
  def test_outputs_energy_w409; assert_equal("2035", worksheet.outputs_energy_w409); end
  def test_outputs_energy_x409; assert_equal("2040", worksheet.outputs_energy_x409); end
  def test_outputs_energy_y409; assert_equal("2045", worksheet.outputs_energy_y409); end
  def test_outputs_energy_z409; assert_equal("2050", worksheet.outputs_energy_z409); end
  def test_outputs_energy_c410; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c410); end
  def test_outputs_energy_e410; assert_equal("G.C.01", worksheet.outputs_energy_e410); end
  def test_outputs_energy_f410; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f410); end
  def test_outputs_energy_k410; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k410); end
  def test_outputs_energy_r410; assert_in_epsilon(99.97450275052698, worksheet.outputs_energy_r410, 0.002); end
  def test_outputs_energy_s410; assert_in_epsilon(97.08435000378675, worksheet.outputs_energy_s410, 0.002); end
  def test_outputs_energy_t410; assert_in_epsilon(102.11850527226846, worksheet.outputs_energy_t410, 0.002); end
  def test_outputs_energy_u410; assert_in_epsilon(115.86012300256212, worksheet.outputs_energy_u410, 0.002); end
  def test_outputs_energy_v410; assert_in_epsilon(125.83169073904297, worksheet.outputs_energy_v410, 0.002); end
  def test_outputs_energy_w410; assert_in_epsilon(132.69447737550513, worksheet.outputs_energy_w410, 0.002); end
  def test_outputs_energy_x410; assert_in_epsilon(135.32779421391479, worksheet.outputs_energy_x410, 0.002); end
  def test_outputs_energy_y410; assert_in_epsilon(127.8791490780895, worksheet.outputs_energy_y410, 0.002); end
  def test_outputs_energy_z410; assert_in_epsilon(122.46828170675526, worksheet.outputs_energy_z410, 0.002); end
  def test_outputs_energy_c411; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c411); end
  def test_outputs_energy_e411; assert_equal("G.C.02", worksheet.outputs_energy_e411); end
  def test_outputs_energy_f411; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f411); end
  def test_outputs_energy_k411; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k411); end
  def test_outputs_energy_r411; assert_in_epsilon(11.604214655514422, worksheet.outputs_energy_r411, 0.002); end
  def test_outputs_energy_s411; assert_in_epsilon(11.655165269978276, worksheet.outputs_energy_s411, 0.002); end
  def test_outputs_energy_t411; assert_in_epsilon(22.755887553479223, worksheet.outputs_energy_t411, 0.002); end
  def test_outputs_energy_u411; assert_in_epsilon(25.85570176779357, worksheet.outputs_energy_u411, 0.002); end
  def test_outputs_energy_v411; assert_in_epsilon(33.84340297254414, worksheet.outputs_energy_v411, 0.002); end
  def test_outputs_energy_w411; assert_in_epsilon(39.501030775670685, worksheet.outputs_energy_w411, 0.002); end
  def test_outputs_energy_x411; assert_in_epsilon(45.70624054082497, worksheet.outputs_energy_x411, 0.002); end
  def test_outputs_energy_y411; assert_in_epsilon(54.20800305640467, worksheet.outputs_energy_y411, 0.002); end
  def test_outputs_energy_z411; assert_in_epsilon(60.25882014939446, worksheet.outputs_energy_z411, 0.002); end
  def test_outputs_energy_c412; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c412); end
  def test_outputs_energy_e412; assert_equal("G.C.03", worksheet.outputs_energy_e412); end
  def test_outputs_energy_f412; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f412); end
  def test_outputs_energy_k412; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k412); end
  def test_outputs_energy_r412; assert_in_epsilon(41.9353235799253, worksheet.outputs_energy_r412, 0.002); end
  def test_outputs_energy_s412; assert_in_epsilon(40.731991330516806, worksheet.outputs_energy_s412, 0.002); end
  def test_outputs_energy_t412; assert_in_epsilon(45.74115678762878, worksheet.outputs_energy_t412, 0.002); end
  def test_outputs_energy_u412; assert_in_epsilon(50.843027470300164, worksheet.outputs_energy_u412, 0.002); end
  def test_outputs_energy_v412; assert_in_epsilon(57.06294775544611, worksheet.outputs_energy_v412, 0.002); end
  def test_outputs_energy_w412; assert_in_epsilon(64.42765328443873, worksheet.outputs_energy_w412, 0.002); end
  def test_outputs_energy_x412; assert_in_epsilon(74.29417441486953, worksheet.outputs_energy_x412, 0.002); end
  def test_outputs_energy_y412; assert_in_epsilon(85.75430074511515, worksheet.outputs_energy_y412, 0.002); end
  def test_outputs_energy_z412; assert_in_epsilon(98.42987094619825, worksheet.outputs_energy_z412, 0.002); end
  def test_outputs_energy_n208; assert_in_epsilon(665.1810955562964, worksheet.outputs_energy_n208, 0.002); end
  def test_outputs_energy_n209; assert_in_epsilon(580.1810955562964, worksheet.outputs_energy_n209, 0.002); end
  def test_outputs_energy_n221; assert_in_epsilon(59.10084303223522, worksheet.outputs_energy_n221, 0.002); end
  def test_outputs_energy_n222; assert_in_epsilon(52.51809027097778, worksheet.outputs_energy_n222, 0.002); end
  def test_outputs_energy_n223; assert_in_epsilon(56.290052887800215, worksheet.outputs_energy_n223, 0.002); end
  def test_outputs_energy_n214; assert_in_epsilon(35798136370152.47, worksheet.outputs_energy_n214, 0.002); end
  def test_outputs_energy_n215; assert_in_epsilon(58540156008837.47, worksheet.outputs_energy_n215, 0.002); end
  def test_outputs_energy_n216; assert_in_epsilon(28014595368837.47, worksheet.outputs_energy_n216, 0.002); end
  def test_outputs_energy_c463; assert_equal("Description", worksheet.outputs_energy_c463); end
  def test_outputs_energy_r463; assert_in_epsilon(2011.0, worksheet.outputs_energy_r463, 0.002); end
  def test_outputs_energy_s463; assert_equal("2015", worksheet.outputs_energy_s463); end
  def test_outputs_energy_t463; assert_equal("2020", worksheet.outputs_energy_t463); end
  def test_outputs_energy_u463; assert_equal("2025", worksheet.outputs_energy_u463); end
  def test_outputs_energy_v463; assert_equal("2030", worksheet.outputs_energy_v463); end
  def test_outputs_energy_w463; assert_equal("2035", worksheet.outputs_energy_w463); end
  def test_outputs_energy_x463; assert_equal("2040", worksheet.outputs_energy_x463); end
  def test_outputs_energy_y463; assert_equal("2045", worksheet.outputs_energy_y463); end
  def test_outputs_energy_z463; assert_equal("2050", worksheet.outputs_energy_z463); end
  def test_outputs_energy_c464; assert_equal("Steel.Oxygen", worksheet.outputs_energy_c464); end
  def test_outputs_energy_i464; assert_equal("G.M.02", worksheet.outputs_energy_i464); end
  def test_outputs_energy_r464; assert_in_epsilon(21.619770962298666, worksheet.outputs_energy_r464, 0.002); end
  def test_outputs_energy_s464; assert_in_epsilon(21.91434549988721, worksheet.outputs_energy_s464, 0.002); end
  def test_outputs_energy_t464; assert_in_epsilon(23.498908395569767, worksheet.outputs_energy_t464, 0.002); end
  def test_outputs_energy_u464; assert_in_epsilon(24.85711098528896, worksheet.outputs_energy_u464, 0.002); end
  def test_outputs_energy_v464; assert_in_epsilon(26.104143158708048, worksheet.outputs_energy_v464, 0.002); end
  def test_outputs_energy_w464; assert_in_epsilon(27.191464291486447, worksheet.outputs_energy_w464, 0.002); end
  def test_outputs_energy_x464; assert_in_epsilon(28.33434099600031, worksheet.outputs_energy_x464, 0.002); end
  def test_outputs_energy_y464; assert_in_epsilon(29.498436323399087, worksheet.outputs_energy_y464, 0.002); end
  def test_outputs_energy_z464; assert_in_epsilon(30.672885545530654, worksheet.outputs_energy_z464, 0.002); end
  def test_outputs_energy_c465; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_c465); end
  def test_outputs_energy_i465; assert_equal("G.M.02", worksheet.outputs_energy_i465); end
  def test_outputs_energy_r465; assert_in_delta(0.0, (worksheet.outputs_energy_r465||0), 0.002); end
  def test_outputs_energy_s465; assert_in_delta(0.37861466923642695, worksheet.outputs_energy_s465, 0.002); end
  def test_outputs_energy_t465; assert_in_delta(0.8141391355695241, worksheet.outputs_energy_t465, 0.002); end
  def test_outputs_energy_u465; assert_in_epsilon(1.3080312397859446, worksheet.outputs_energy_u465, 0.002); end
  def test_outputs_energy_v465; assert_in_epsilon(1.859604495560463, worksheet.outputs_energy_v465, 0.002); end
  def test_outputs_energy_w465; assert_in_epsilon(2.461593532271687, worksheet.outputs_energy_w465, 0.002); end
  def test_outputs_energy_x465; assert_in_epsilon(3.1317957184138465, worksheet.outputs_energy_x465, 0.002); end
  def test_outputs_energy_y465; assert_in_epsilon(3.8726587114880933, worksheet.outputs_energy_y465, 0.002); end
  def test_outputs_energy_z465; assert_in_epsilon(4.687790290712915, worksheet.outputs_energy_z465, 0.002); end
  def test_outputs_energy_c466; assert_equal("Steel.Electric", worksheet.outputs_energy_c466); end
  def test_outputs_energy_i466; assert_equal("G.M.02", worksheet.outputs_energy_i466); end
  def test_outputs_energy_r466; assert_in_epsilon(2.6697592633263763, worksheet.outputs_energy_r466, 0.002); end
  def test_outputs_energy_s466; assert_in_epsilon(2.90649989368204, worksheet.outputs_energy_s466, 0.002); end
  def test_outputs_energy_t466; assert_in_epsilon(3.139947407830456, worksheet.outputs_energy_t466, 0.002); end
  def test_outputs_energy_u466; assert_in_epsilon(3.3469173963665826, worksheet.outputs_energy_u466, 0.002); end
  def test_outputs_energy_v466; assert_in_epsilon(3.542533359922462, worksheet.outputs_energy_v466, 0.002); end
  def test_outputs_energy_w466; assert_in_epsilon(3.7199895610401175, worksheet.outputs_energy_w466, 0.002); end
  def test_outputs_energy_x466; assert_in_epsilon(3.908638479322855, worksheet.outputs_energy_x466, 0.002); end
  def test_outputs_energy_y466; assert_in_epsilon(4.10409803753735, worksheet.outputs_energy_y466, 0.002); end
  def test_outputs_energy_z466; assert_in_epsilon(4.305142290546906, worksheet.outputs_energy_z466, 0.002); end
  def test_outputs_energy_c467; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_c467); end
  def test_outputs_energy_i467; assert_equal("G.M.02", worksheet.outputs_energy_i467); end
  def test_outputs_energy_r467; assert_in_delta(0.48100793205535164, worksheet.outputs_energy_r467, 0.002); end
  def test_outputs_energy_s467; assert_in_delta(0.5668811052198529, worksheet.outputs_energy_s467, 0.002); end
  def test_outputs_energy_t467; assert_in_delta(0.6596795937420019, worksheet.outputs_energy_t467, 0.002); end
  def test_outputs_energy_u467; assert_in_delta(0.7558259356527803, worksheet.outputs_energy_u467, 0.002); end
  def test_outputs_energy_v467; assert_in_delta(0.8582284214292121, worksheet.outputs_energy_v467, 0.002); end
  def test_outputs_energy_w467; assert_in_delta(0.9650515420257482, worksheet.outputs_energy_w467, 0.002); end
  def test_outputs_energy_x467; assert_in_epsilon(1.0839700445572118, worksheet.outputs_energy_x467, 0.002); end
  def test_outputs_energy_y467; assert_in_epsilon(1.2148026114790824, worksheet.outputs_energy_y467, 0.002); end
  def test_outputs_energy_z467; assert_in_epsilon(1.358095619878188, worksheet.outputs_energy_z467, 0.002); end
  def test_outputs_energy_c468; assert_equal("Steel.others", worksheet.outputs_energy_c468); end
  def test_outputs_energy_i468; assert_equal("G.M.02", worksheet.outputs_energy_i468); end
  def test_outputs_energy_r468; assert_in_epsilon(6.671485699703609, worksheet.outputs_energy_r468, 0.002); end
  def test_outputs_energy_s468; assert_in_epsilon(6.85649174817387, worksheet.outputs_energy_s468, 0.002); end
  def test_outputs_energy_t468; assert_in_epsilon(7.453560179101458, worksheet.outputs_energy_t468, 0.002); end
  def test_outputs_energy_u468; assert_in_epsilon(7.9951032655092495, worksheet.outputs_energy_u468, 0.002); end
  def test_outputs_energy_v468; assert_in_epsilon(8.516465106801723, worksheet.outputs_energy_v468, 0.002); end
  def test_outputs_energy_w468; assert_in_epsilon(9.000835802459559, worksheet.outputs_energy_w468, 0.002); end
  def test_outputs_energy_x468; assert_in_epsilon(9.519023698790585, worksheet.outputs_energy_x468, 0.002); end
  def test_outputs_energy_y468; assert_in_epsilon(10.06100278260691, worksheet.outputs_energy_y468, 0.002); end
  def test_outputs_energy_z468; assert_in_epsilon(10.624275536760782, worksheet.outputs_energy_z468, 0.002); end
  def test_outputs_energy_c469; assert_equal("Total", worksheet.outputs_energy_c469); end
  def test_outputs_energy_r469; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r469, 0.002); end
  def test_outputs_energy_s469; assert_in_epsilon(32.6228329161994, worksheet.outputs_energy_s469, 0.002); end
  def test_outputs_energy_t469; assert_in_epsilon(35.5662347118132, worksheet.outputs_energy_t469, 0.002); end
  def test_outputs_energy_u469; assert_in_epsilon(38.26298882260351, worksheet.outputs_energy_u469, 0.002); end
  def test_outputs_energy_v469; assert_in_epsilon(40.88097454242191, worksheet.outputs_energy_v469, 0.002); end
  def test_outputs_energy_w469; assert_in_epsilon(43.33893472928355, worksheet.outputs_energy_w469, 0.002); end
  def test_outputs_energy_x469; assert_in_epsilon(45.97776893708481, worksheet.outputs_energy_x469, 0.002); end
  def test_outputs_energy_y469; assert_in_epsilon(48.750998466510524, worksheet.outputs_energy_y469, 0.002); end
  def test_outputs_energy_z469; assert_in_epsilon(51.648189283429446, worksheet.outputs_energy_z469, 0.002); end
  def test_outputs_energy_c352; assert_equal("Description", worksheet.outputs_energy_c352); end
  def test_outputs_energy_r352; assert_in_epsilon(2011.0, worksheet.outputs_energy_r352, 0.002); end
  def test_outputs_energy_s352; assert_equal("2015", worksheet.outputs_energy_s352); end
  def test_outputs_energy_t352; assert_equal("2020", worksheet.outputs_energy_t352); end
  def test_outputs_energy_u352; assert_equal("2025", worksheet.outputs_energy_u352); end
  def test_outputs_energy_v352; assert_equal("2030", worksheet.outputs_energy_v352); end
  def test_outputs_energy_w352; assert_equal("2035", worksheet.outputs_energy_w352); end
  def test_outputs_energy_x352; assert_equal("2040", worksheet.outputs_energy_x352); end
  def test_outputs_energy_y352; assert_equal("2045", worksheet.outputs_energy_y352); end
  def test_outputs_energy_z352; assert_equal("2050", worksheet.outputs_energy_z352); end
  def test_outputs_energy_c353; assert_equal("G.T.01", worksheet.outputs_energy_c353); end
  def test_outputs_energy_d353; assert_equal("Global Road transport", worksheet.outputs_energy_d353); end
  def test_outputs_energy_r353; assert_in_epsilon(76.33121003692581, worksheet.outputs_energy_r353, 0.002); end
  def test_outputs_energy_s353; assert_in_epsilon(81.2074256345477, worksheet.outputs_energy_s353, 0.002); end
  def test_outputs_energy_t353; assert_in_epsilon(90.7794967908619, worksheet.outputs_energy_t353, 0.002); end
  def test_outputs_energy_u353; assert_in_epsilon(98.51162455207015, worksheet.outputs_energy_u353, 0.002); end
  def test_outputs_energy_v353; assert_in_epsilon(105.02231279260816, worksheet.outputs_energy_v353, 0.002); end
  def test_outputs_energy_w353; assert_in_epsilon(110.33722102921368, worksheet.outputs_energy_w353, 0.002); end
  def test_outputs_energy_x353; assert_in_epsilon(114.73297173754281, worksheet.outputs_energy_x353, 0.002); end
  def test_outputs_energy_y353; assert_in_epsilon(118.71673290693549, worksheet.outputs_energy_y353, 0.002); end
  def test_outputs_energy_z353; assert_in_epsilon(122.60289305663443, worksheet.outputs_energy_z353, 0.002); end
  def test_outputs_energy_c354; assert_equal("G.T.02", worksheet.outputs_energy_c354); end
  def test_outputs_energy_d354; assert_equal("Global Rail transport", worksheet.outputs_energy_d354); end
  def test_outputs_energy_r354; assert_in_epsilon(2.648959469040625, worksheet.outputs_energy_r354, 0.002); end
  def test_outputs_energy_s354; assert_in_epsilon(3.04429893385004, worksheet.outputs_energy_s354, 0.002); end
  def test_outputs_energy_t354; assert_in_epsilon(3.287576659497636, worksheet.outputs_energy_t354, 0.002); end
  def test_outputs_energy_u354; assert_in_epsilon(3.459607059971201, worksheet.outputs_energy_u354, 0.002); end
  def test_outputs_energy_v354; assert_in_epsilon(3.5365807467439185, worksheet.outputs_energy_v354, 0.002); end
  def test_outputs_energy_w354; assert_in_epsilon(3.5337270811091197, worksheet.outputs_energy_w354, 0.002); end
  def test_outputs_energy_x354; assert_in_epsilon(3.468884987570563, worksheet.outputs_energy_x354, 0.002); end
  def test_outputs_energy_y354; assert_in_epsilon(3.3753235962921653, worksheet.outputs_energy_y354, 0.002); end
  def test_outputs_energy_z354; assert_in_epsilon(3.2604976653028337, worksheet.outputs_energy_z354, 0.002); end
  def test_outputs_energy_c355; assert_equal("G.T.03", worksheet.outputs_energy_c355); end
  def test_outputs_energy_d355; assert_equal("Global Aviation transport", worksheet.outputs_energy_d355); end
  def test_outputs_energy_r355; assert_in_epsilon(11.887639232071237, worksheet.outputs_energy_r355, 0.002); end
  def test_outputs_energy_s355; assert_in_epsilon(12.56517705207431, worksheet.outputs_energy_s355, 0.002); end
  def test_outputs_energy_t355; assert_in_epsilon(13.168177003877867, worksheet.outputs_energy_t355, 0.002); end
  def test_outputs_energy_u355; assert_in_epsilon(13.567774229686199, worksheet.outputs_energy_u355, 0.002); end
  def test_outputs_energy_v355; assert_in_epsilon(14.154173883064752, worksheet.outputs_energy_v355, 0.002); end
  def test_outputs_energy_w355; assert_in_epsilon(14.910330462194732, worksheet.outputs_energy_w355, 0.002); end
  def test_outputs_energy_x355; assert_in_epsilon(15.8400644500094, worksheet.outputs_energy_x355, 0.002); end
  def test_outputs_energy_y355; assert_in_epsilon(16.990509095173365, worksheet.outputs_energy_y355, 0.002); end
  def test_outputs_energy_z355; assert_in_epsilon(18.385953198612295, worksheet.outputs_energy_z355, 0.002); end
  def test_outputs_energy_c356; assert_equal("G.T.04", worksheet.outputs_energy_c356); end
  def test_outputs_energy_d356; assert_equal("Global Water transport", worksheet.outputs_energy_d356); end
  def test_outputs_energy_r356; assert_in_epsilon(9.498632856887696, worksheet.outputs_energy_r356, 0.002); end
  def test_outputs_energy_s356; assert_in_epsilon(10.496828748247585, worksheet.outputs_energy_s356, 0.002); end
  def test_outputs_energy_t356; assert_in_epsilon(11.878677131833642, worksheet.outputs_energy_t356, 0.002); end
  def test_outputs_energy_u356; assert_in_epsilon(13.399716202800555, worksheet.outputs_energy_u356, 0.002); end
  def test_outputs_energy_v356; assert_in_epsilon(14.743563478139112, worksheet.outputs_energy_v356, 0.002); end
  def test_outputs_energy_w356; assert_in_epsilon(15.093568838862375, worksheet.outputs_energy_w356, 0.002); end
  def test_outputs_energy_x356; assert_in_epsilon(15.07330452563907, worksheet.outputs_energy_x356, 0.002); end
  def test_outputs_energy_y356; assert_in_epsilon(15.012147520072642, worksheet.outputs_energy_y356, 0.002); end
  def test_outputs_energy_z356; assert_in_epsilon(14.659622638639128, worksheet.outputs_energy_z356, 0.002); end
  def test_outputs_energy_c395; assert_equal("Description", worksheet.outputs_energy_c395); end
  def test_outputs_energy_p395; assert_in_epsilon(2011.0, worksheet.outputs_energy_p395, 0.002); end
  def test_outputs_energy_r395; assert_in_epsilon(2011.0, worksheet.outputs_energy_r395, 0.002); end
  def test_outputs_energy_s395; assert_equal("2015", worksheet.outputs_energy_s395); end
  def test_outputs_energy_t395; assert_equal("2020", worksheet.outputs_energy_t395); end
  def test_outputs_energy_u395; assert_equal("2025", worksheet.outputs_energy_u395); end
  def test_outputs_energy_v395; assert_equal("2030", worksheet.outputs_energy_v395); end
  def test_outputs_energy_w395; assert_equal("2035", worksheet.outputs_energy_w395); end
  def test_outputs_energy_x395; assert_equal("2040", worksheet.outputs_energy_x395); end
  def test_outputs_energy_y395; assert_equal("2045", worksheet.outputs_energy_y395); end
  def test_outputs_energy_z395; assert_equal("2050", worksheet.outputs_energy_z395); end
  def test_outputs_energy_c396; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c396); end
  def test_outputs_energy_e396; assert_equal("G.C.01", worksheet.outputs_energy_e396); end
  def test_outputs_energy_f396; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f396); end
  def test_outputs_energy_k396; assert_equal("Global transport", worksheet.outputs_energy_k396); end
  def test_outputs_energy_p396; assert_in_delta(0.01, worksheet.outputs_energy_p396, 0.002); end
  def test_outputs_energy_r396; assert_in_delta(0.0, (worksheet.outputs_energy_r396||0), 0.002); end
  def test_outputs_energy_s396; assert_in_delta(0.0, (worksheet.outputs_energy_s396||0), 0.002); end
  def test_outputs_energy_t396; assert_in_delta(0.0, (worksheet.outputs_energy_t396||0), 0.002); end
  def test_outputs_energy_u396; assert_in_delta(0.0, (worksheet.outputs_energy_u396||0), 0.002); end
  def test_outputs_energy_v396; assert_in_delta(0.0, (worksheet.outputs_energy_v396||0), 0.002); end
  def test_outputs_energy_w396; assert_in_delta(0.0, (worksheet.outputs_energy_w396||0), 0.002); end
  def test_outputs_energy_x396; assert_in_delta(0.0, (worksheet.outputs_energy_x396||0), 0.002); end
  def test_outputs_energy_y396; assert_in_delta(0.0, (worksheet.outputs_energy_y396||0), 0.002); end
  def test_outputs_energy_z396; assert_in_delta(0.0, (worksheet.outputs_energy_z396||0), 0.002); end
  def test_outputs_energy_c397; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c397); end
  def test_outputs_energy_e397; assert_equal("G.C.02", worksheet.outputs_energy_e397); end
  def test_outputs_energy_f397; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f397); end
  def test_outputs_energy_k397; assert_equal("Global transport", worksheet.outputs_energy_k397); end
  def test_outputs_energy_p397; assert_in_epsilon(97.66, worksheet.outputs_energy_p397, 0.002); end
  def test_outputs_energy_r397; assert_in_epsilon(98.3919342600944, worksheet.outputs_energy_r397, 0.002); end
  def test_outputs_energy_s397; assert_in_epsilon(103.85856672439019, worksheet.outputs_energy_s397, 0.002); end
  def test_outputs_energy_t397; assert_in_epsilon(114.71142578329122, worksheet.outputs_energy_t397, 0.002); end
  def test_outputs_energy_u397; assert_in_epsilon(123.5331112630968, worksheet.outputs_energy_u397, 0.002); end
  def test_outputs_energy_v397; assert_in_epsilon(131.03952627484625, worksheet.outputs_energy_v397, 0.002); end
  def test_outputs_energy_w397; assert_in_epsilon(136.46720775712245, worksheet.outputs_energy_w397, 0.002); end
  def test_outputs_energy_x397; assert_in_epsilon(140.72884293589868, worksheet.outputs_energy_x397, 0.002); end
  def test_outputs_energy_y397; assert_in_epsilon(144.72216136104356, worksheet.outputs_energy_y397, 0.002); end
  def test_outputs_energy_z397; assert_in_epsilon(148.5362205496292, worksheet.outputs_energy_z397, 0.002); end
  def test_outputs_energy_c398; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c398); end
  def test_outputs_energy_e398; assert_equal("G.C.03", worksheet.outputs_energy_e398); end
  def test_outputs_energy_f398; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f398); end
  def test_outputs_energy_k398; assert_equal("Global transport", worksheet.outputs_energy_k398); end
  def test_outputs_energy_p398; assert_in_delta(0.8, worksheet.outputs_energy_p398, 0.002); end
  def test_outputs_energy_r398; assert_in_delta(0.3471995357508835, worksheet.outputs_energy_r398, 0.002); end
  def test_outputs_energy_s398; assert_in_delta(0.7883292217013735, worksheet.outputs_energy_s398, 0.002); end
  def test_outputs_energy_t398; assert_in_epsilon(1.1587097007214104, worksheet.outputs_energy_t398, 0.002); end
  def test_outputs_energy_u398; assert_in_epsilon(1.571282097695053, worksheet.outputs_energy_u398, 0.002); end
  def test_outputs_energy_v398; assert_in_epsilon(2.0068267705883334, worksheet.outputs_energy_v398, 0.002); end
  def test_outputs_energy_w398; assert_in_epsilon(2.4415620807931178, worksheet.outputs_energy_w398, 0.002); end
  def test_outputs_energy_x398; assert_in_epsilon(2.8635794606801968, worksheet.outputs_energy_x398, 0.002); end
  def test_outputs_energy_y398; assert_in_epsilon(3.281432792399711, worksheet.outputs_energy_y398, 0.002); end
  def test_outputs_energy_z398; assert_in_epsilon(3.6894160465668127, worksheet.outputs_energy_z398, 0.002); end
  def test_outputs_energy_c399; assert_equal("Electricity grid", worksheet.outputs_energy_c399); end
  def test_outputs_energy_e399; assert_equal("G.E.01", worksheet.outputs_energy_e399); end
  def test_outputs_energy_f399; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_f399); end
  def test_outputs_energy_k399; assert_equal("Global transport", worksheet.outputs_energy_k399); end
  def test_outputs_energy_p399; assert_in_delta(0.75, worksheet.outputs_energy_p399, 0.002); end
  def test_outputs_energy_r399; assert_in_epsilon(1.6273077307043442, worksheet.outputs_energy_r399, 0.002); end
  def test_outputs_energy_s399; assert_in_epsilon(2.507990817822011, worksheet.outputs_energy_s399, 0.002); end
  def test_outputs_energy_t399; assert_in_epsilon(3.086167092428585, worksheet.outputs_energy_t399, 0.002); end
  def test_outputs_energy_u399; assert_in_epsilon(3.685138577422587, worksheet.outputs_energy_u399, 0.002); end
  def test_outputs_energy_v399; assert_in_epsilon(4.282454553395991, worksheet.outputs_energy_v399, 0.002); end
  def test_outputs_energy_w399; assert_in_epsilon(4.866759534158247, worksheet.outputs_energy_w399, 0.002); end
  def test_outputs_energy_x399; assert_in_epsilon(5.455214613686765, worksheet.outputs_energy_x399, 0.002); end
  def test_outputs_energy_y399; assert_in_epsilon(6.056752590712627, worksheet.outputs_energy_y399, 0.002); end
  def test_outputs_energy_z399; assert_in_epsilon(6.683329962992671, worksheet.outputs_energy_z399, 0.002); end
  def test_outputs_energy_c400; assert_equal("Hydrogen", worksheet.outputs_energy_c400); end
  def test_outputs_energy_e400; assert_equal("G.HY.01", worksheet.outputs_energy_e400); end
  def test_outputs_energy_f400; assert_equal("Global H2", worksheet.outputs_energy_f400); end
  def test_outputs_energy_k400; assert_equal("Global transport", worksheet.outputs_energy_k400); end
  def test_outputs_energy_p400; assert_in_delta(0.0, (worksheet.outputs_energy_p400||0), 0.002); end
  def test_outputs_energy_r400; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_r400, 0.002); end
  def test_outputs_energy_s400; assert_in_delta(0.15884360480604995, worksheet.outputs_energy_s400, 0.002); end
  def test_outputs_energy_t400; assert_in_delta(0.15762500962982265, worksheet.outputs_energy_t400, 0.002); end
  def test_outputs_energy_u400; assert_in_delta(0.14919010631367213, worksheet.outputs_energy_u400, 0.002); end
  def test_outputs_energy_v400; assert_in_delta(0.127823301725339, worksheet.outputs_energy_v400, 0.002); end
  def test_outputs_energy_w400; assert_in_delta(0.09931803930611244, worksheet.outputs_energy_w400, 0.002); end
  def test_outputs_energy_x400; assert_in_delta(0.06758869049620075, worksheet.outputs_energy_x400, 0.002); end
  def test_outputs_energy_y400; assert_in_delta(0.034366374317751046, worksheet.outputs_energy_y400, 0.002); end
  def test_outputs_energy_z400; assert_in_delta(0.0, (worksheet.outputs_energy_z400||0), 0.002); end
  def test_outputs_energy_d228; assert_in_delta(0.0063, worksheet.outputs_energy_d228, 0.002); end
  def test_outputs_energy_d229; assert_in_delta(0.016, worksheet.outputs_energy_d229, 0.002); end
  def test_outputs_energy_d230; assert_in_delta(0.038, worksheet.outputs_energy_d230, 0.002); end
  def test_outputs_energy_d260; assert_in_epsilon(4.0, worksheet.outputs_energy_d260, 0.002); end
  def test_outputs_energy_c180; assert_equal("Column1", worksheet.outputs_energy_c180); end
  def test_outputs_energy_d180; assert_equal("Description", worksheet.outputs_energy_d180); end
  def test_outputs_energy_e180; assert_equal("Column2", worksheet.outputs_energy_e180); end
  def test_outputs_energy_f180; assert_equal("Column3", worksheet.outputs_energy_f180); end
  def test_outputs_energy_g180; assert_equal("Notes", worksheet.outputs_energy_g180); end
  def test_outputs_energy_h180; assert_equal("Column4", worksheet.outputs_energy_h180); end
  def test_outputs_energy_i180; assert_equal("Column5", worksheet.outputs_energy_i180); end
  def test_outputs_energy_j180; assert_equal("Column6", worksheet.outputs_energy_j180); end
  def test_outputs_energy_k180; assert_equal("Column7", worksheet.outputs_energy_k180); end
  def test_outputs_energy_l180; assert_equal("Column8", worksheet.outputs_energy_l180); end
  def test_outputs_energy_m180; assert_equal("Column9", worksheet.outputs_energy_m180); end
  def test_outputs_energy_n180; assert_equal("Column10", worksheet.outputs_energy_n180); end
  def test_outputs_energy_o180; assert_equal("Column11", worksheet.outputs_energy_o180); end
  def test_outputs_energy_p180; assert_equal("Column12", worksheet.outputs_energy_p180); end
  def test_outputs_energy_q180; assert_equal("Column13", worksheet.outputs_energy_q180); end
  def test_outputs_energy_r180; assert_equal("2011", worksheet.outputs_energy_r180); end
  def test_outputs_energy_s180; assert_equal("2015", worksheet.outputs_energy_s180); end
  def test_outputs_energy_t180; assert_equal("2020", worksheet.outputs_energy_t180); end
  def test_outputs_energy_u180; assert_equal("2025", worksheet.outputs_energy_u180); end
  def test_outputs_energy_v180; assert_equal("2030", worksheet.outputs_energy_v180); end
  def test_outputs_energy_w180; assert_equal("2035", worksheet.outputs_energy_w180); end
  def test_outputs_energy_x180; assert_equal("2040", worksheet.outputs_energy_x180); end
  def test_outputs_energy_y180; assert_equal("2045", worksheet.outputs_energy_y180); end
  def test_outputs_energy_z180; assert_equal("2050", worksheet.outputs_energy_z180); end
  def test_outputs_energy_c181; assert_equal("G.Q.01", worksheet.outputs_energy_c181); end
  def test_outputs_energy_d181; assert_equal("Global Coal reserves ", worksheet.outputs_energy_d181); end
  def test_outputs_energy_g181; assert_equal("Gt", worksheet.outputs_energy_g181); end
  def test_outputs_energy_r181; assert_in_epsilon(6.739580107623858, worksheet.outputs_energy_r181, 0.002); end
  def test_outputs_energy_s181; assert_in_epsilon(26.949049494282168, worksheet.outputs_energy_s181, 0.002); end
  def test_outputs_energy_t181; assert_in_epsilon(55.49349643618622, worksheet.outputs_energy_t181, 0.002); end
  def test_outputs_energy_u181; assert_in_epsilon(87.42367241564017, worksheet.outputs_energy_u181, 0.002); end
  def test_outputs_energy_v181; assert_in_epsilon(122.57017041182559, worksheet.outputs_energy_v181, 0.002); end
  def test_outputs_energy_w181; assert_in_epsilon(160.37006267889942, worksheet.outputs_energy_w181, 0.002); end
  def test_outputs_energy_x181; assert_in_epsilon(200.2775292407604, worksheet.outputs_energy_x181, 0.002); end
  def test_outputs_energy_y181; assert_in_epsilon(240.69530936741924, worksheet.outputs_energy_y181, 0.002); end
  def test_outputs_energy_z181; assert_in_epsilon(280.8189044437036, worksheet.outputs_energy_z181, 0.002); end
  def test_outputs_energy_c182; assert_equal("G.Q.02", worksheet.outputs_energy_c182); end
  def test_outputs_energy_d182; assert_equal("Global Oil reserves ", worksheet.outputs_energy_d182); end
  def test_outputs_energy_g182; assert_equal("l", worksheet.outputs_energy_g182); end
  def test_outputs_energy_r182; assert_in_epsilon(4630203793569.728, worksheet.outputs_energy_r182, 0.002); end
  def test_outputs_energy_s182; assert_in_epsilon(18930618291430.38, worksheet.outputs_energy_s182, 0.002); end
  def test_outputs_energy_t182; assert_in_epsilon(40108167689558.23, worksheet.outputs_energy_t182, 0.002); end
  def test_outputs_energy_u182; assert_in_epsilon(63559594097069.64, worksheet.outputs_energy_u182, 0.002); end
  def test_outputs_energy_v182; assert_in_epsilon(89149553377732.44, worksheet.outputs_energy_v182, 0.002); end
  def test_outputs_energy_w182; assert_in_epsilon(116277500493421.27, worksheet.outputs_energy_w182, 0.002); end
  def test_outputs_energy_x182; assert_in_epsilon(144842028748960.84, worksheet.outputs_energy_x182, 0.002); end
  def test_outputs_energy_y182; assert_in_epsilon(175193056396584.7, worksheet.outputs_energy_y182, 0.002); end
  def test_outputs_energy_z182; assert_in_epsilon(206809639346162.5, worksheet.outputs_energy_z182, 0.002); end
  def test_outputs_energy_c183; assert_equal("G.Q.03", worksheet.outputs_energy_c183); end
  def test_outputs_energy_d183; assert_equal("Global Gas reserves ", worksheet.outputs_energy_d183); end
  def test_outputs_energy_g183; assert_equal("T.m3", worksheet.outputs_energy_g183); end
  def test_outputs_energy_r183; assert_in_epsilon(3.023669654453691, worksheet.outputs_energy_r183, 0.002); end
  def test_outputs_energy_s183; assert_in_epsilon(12.183284975713109, worksheet.outputs_energy_s183, 0.002); end
  def test_outputs_energy_t183; assert_in_epsilon(25.26803736936217, worksheet.outputs_energy_t183, 0.002); end
  def test_outputs_energy_u183; assert_in_epsilon(39.67212133665639, worksheet.outputs_energy_u183, 0.002); end
  def test_outputs_energy_v183; assert_in_epsilon(55.36703815096281, worksheet.outputs_energy_v183, 0.002); end
  def test_outputs_energy_w183; assert_in_epsilon(72.4296170303381, worksheet.outputs_energy_w183, 0.002); end
  def test_outputs_energy_x183; assert_in_epsilon(91.16500848972815, worksheet.outputs_energy_x183, 0.002); end
  def test_outputs_energy_y183; assert_in_epsilon(111.88293202497479, worksheet.outputs_energy_y183, 0.002); end
  def test_outputs_energy_z183; assert_in_epsilon(134.7819097290222, worksheet.outputs_energy_z183, 0.002); end
  def test_outputs_climate_impacts_c545; assert_equal("In order to avoid the most dangerous impacts of global climate change the international community agreed limiting global average temperature increase to no more than 2°C above pre-industrial levels (UNFCCC Cancun 2010).", worksheet.outputs_climate_impacts_c545); end
  def test_outputs_climate_impacts_h67; assert_in_epsilon(3200000.0, worksheet.outputs_climate_impacts_h67, 0.002); end
  def test_outputs_climate_impacts_i67; assert_in_epsilon(7600000.0, worksheet.outputs_climate_impacts_i67, 0.002); end
  def test_outputs_climate_impacts_i72; assert_in_epsilon(610000.0, worksheet.outputs_climate_impacts_i72, 0.002); end
  def test_outputs_climate_impacts_i77; assert_in_epsilon(1.7, worksheet.outputs_climate_impacts_i77, 0.002); end
  def test_outputs_climate_impacts_i82; assert_in_delta(0.36, worksheet.outputs_climate_impacts_i82, 0.002); end
  def test_outputs_climate_impacts_d11; assert_in_epsilon(3.595582854656916, worksheet.outputs_climate_impacts_d11, 0.002); end
  def test_outputs_climate_impacts_d12; assert_in_delta(0.7885079227417864, worksheet.outputs_climate_impacts_d12, 0.002); end
  def test_outputs_climate_impacts_e11; assert_in_epsilon(5.574587736425975, worksheet.outputs_climate_impacts_e11, 0.002); end
  def test_outputs_climate_impacts_e12; assert_in_epsilon(1.7521659774440548, worksheet.outputs_climate_impacts_e12, 0.002); end
  def test_outputs_climate_impacts_d26; assert_in_epsilon(1870.0, worksheet.outputs_climate_impacts_d26, 0.002); end
  def test_outputs_climate_impacts_e26; assert_in_epsilon(1880.0, worksheet.outputs_climate_impacts_e26, 0.002); end
  def test_outputs_climate_impacts_f26; assert_in_epsilon(1890.0, worksheet.outputs_climate_impacts_f26, 0.002); end
  def test_outputs_climate_impacts_g26; assert_in_epsilon(1900.0, worksheet.outputs_climate_impacts_g26, 0.002); end
  def test_outputs_climate_impacts_h26; assert_in_epsilon(1910.0, worksheet.outputs_climate_impacts_h26, 0.002); end
  def test_outputs_climate_impacts_i26; assert_in_epsilon(1920.0, worksheet.outputs_climate_impacts_i26, 0.002); end
  def test_outputs_climate_impacts_j26; assert_in_epsilon(1930.0, worksheet.outputs_climate_impacts_j26, 0.002); end
  def test_outputs_climate_impacts_k26; assert_in_epsilon(1940.0, worksheet.outputs_climate_impacts_k26, 0.002); end
  def test_outputs_climate_impacts_l26; assert_in_epsilon(1950.0, worksheet.outputs_climate_impacts_l26, 0.002); end
  def test_outputs_climate_impacts_m26; assert_in_epsilon(1960.0, worksheet.outputs_climate_impacts_m26, 0.002); end
  def test_outputs_climate_impacts_n26; assert_in_epsilon(1970.0, worksheet.outputs_climate_impacts_n26, 0.002); end
  def test_outputs_climate_impacts_o26; assert_in_epsilon(1980.0, worksheet.outputs_climate_impacts_o26, 0.002); end
  def test_outputs_climate_impacts_p26; assert_in_epsilon(1990.0, worksheet.outputs_climate_impacts_p26, 0.002); end
  def test_outputs_climate_impacts_q26; assert_in_epsilon(2000.0, worksheet.outputs_climate_impacts_q26, 0.002); end
  def test_outputs_climate_impacts_r26; assert_in_epsilon(2005.0, worksheet.outputs_climate_impacts_r26, 0.002); end
  def test_outputs_climate_impacts_s26; assert_in_epsilon(2010.0, worksheet.outputs_climate_impacts_s26, 0.002); end
  def test_outputs_climate_impacts_t26; assert_in_epsilon(2011.0, worksheet.outputs_climate_impacts_t26, 0.002); end
  def test_outputs_climate_impacts_u26; assert_in_epsilon(2013.0, worksheet.outputs_climate_impacts_u26, 0.002); end
  def test_outputs_climate_impacts_v26; assert_in_epsilon(2015.0, worksheet.outputs_climate_impacts_v26, 0.002); end
  def test_outputs_climate_impacts_w26; assert_in_epsilon(2020.0, worksheet.outputs_climate_impacts_w26, 0.002); end
  def test_outputs_climate_impacts_x26; assert_in_epsilon(2025.0, worksheet.outputs_climate_impacts_x26, 0.002); end
  def test_outputs_climate_impacts_y26; assert_in_epsilon(2030.0, worksheet.outputs_climate_impacts_y26, 0.002); end
  def test_outputs_climate_impacts_z26; assert_in_epsilon(2035.0, worksheet.outputs_climate_impacts_z26, 0.002); end
  def test_outputs_climate_impacts_aa26; assert_in_epsilon(2040.0, worksheet.outputs_climate_impacts_aa26, 0.002); end
  def test_outputs_climate_impacts_ab26; assert_in_epsilon(2045.0, worksheet.outputs_climate_impacts_ab26, 0.002); end
  def test_outputs_climate_impacts_ac26; assert_in_epsilon(2050.0, worksheet.outputs_climate_impacts_ac26, 0.002); end
  def test_outputs_climate_impacts_ad26; assert_in_epsilon(2055.0, worksheet.outputs_climate_impacts_ad26, 0.002); end
  def test_outputs_climate_impacts_ae26; assert_in_epsilon(2060.0, worksheet.outputs_climate_impacts_ae26, 0.002); end
  def test_outputs_climate_impacts_af26; assert_in_epsilon(2065.0, worksheet.outputs_climate_impacts_af26, 0.002); end
  def test_outputs_climate_impacts_ag26; assert_in_epsilon(2070.0, worksheet.outputs_climate_impacts_ag26, 0.002); end
  def test_outputs_climate_impacts_ah26; assert_in_epsilon(2075.0, worksheet.outputs_climate_impacts_ah26, 0.002); end
  def test_outputs_climate_impacts_ai26; assert_in_epsilon(2080.0, worksheet.outputs_climate_impacts_ai26, 0.002); end
  def test_outputs_climate_impacts_aj26; assert_in_epsilon(2085.0, worksheet.outputs_climate_impacts_aj26, 0.002); end
  def test_outputs_climate_impacts_ak26; assert_in_epsilon(2090.0, worksheet.outputs_climate_impacts_ak26, 0.002); end
  def test_outputs_climate_impacts_al26; assert_in_epsilon(2095.0, worksheet.outputs_climate_impacts_al26, 0.002); end
  def test_outputs_climate_impacts_am26; assert_in_epsilon(2100.0, worksheet.outputs_climate_impacts_am26, 0.002); end
  def test_outputs_climate_impacts_c27; assert_equal("High estimate", worksheet.outputs_climate_impacts_c27); end
  def test_outputs_climate_impacts_w27; assert_in_epsilon(2.2093450357002533, worksheet.outputs_climate_impacts_w27, 0.002); end
  def test_outputs_climate_impacts_x27; assert_in_epsilon(2.4022127126441277, worksheet.outputs_climate_impacts_x27, 0.002); end
  def test_outputs_climate_impacts_y27; assert_in_epsilon(2.61523240609863, worksheet.outputs_climate_impacts_y27, 0.002); end
  def test_outputs_climate_impacts_z27; assert_in_epsilon(2.8461468706121513, worksheet.outputs_climate_impacts_z27, 0.002); end
  def test_outputs_climate_impacts_aa27; assert_in_epsilon(3.09021476162095, worksheet.outputs_climate_impacts_aa27, 0.002); end
  def test_outputs_climate_impacts_ab27; assert_in_epsilon(3.3412256374338205, worksheet.outputs_climate_impacts_ab27, 0.002); end
  def test_outputs_climate_impacts_ac27; assert_in_epsilon(3.595582854656916, worksheet.outputs_climate_impacts_ac27, 0.002); end
  def test_outputs_climate_impacts_ad27; assert_in_epsilon(3.8517817711003834, worksheet.outputs_climate_impacts_ad27, 0.002); end
  def test_outputs_climate_impacts_ae27; assert_in_epsilon(4.051610683612185, worksheet.outputs_climate_impacts_ae27, 0.002); end
  def test_outputs_climate_impacts_af27; assert_in_epsilon(4.24182608694663, worksheet.outputs_climate_impacts_af27, 0.002); end
  def test_outputs_climate_impacts_ag27; assert_in_epsilon(4.432156646847778, worksheet.outputs_climate_impacts_ag27, 0.002); end
  def test_outputs_climate_impacts_ah27; assert_in_epsilon(4.622533780664345, worksheet.outputs_climate_impacts_ah27, 0.002); end
  def test_outputs_climate_impacts_ai27; assert_in_epsilon(4.812932909476883, worksheet.outputs_climate_impacts_ai27, 0.002); end
  def test_outputs_climate_impacts_aj27; assert_in_epsilon(5.003342143190717, worksheet.outputs_climate_impacts_aj27, 0.002); end
  def test_outputs_climate_impacts_ak27; assert_in_epsilon(5.193755703964247, worksheet.outputs_climate_impacts_ak27, 0.002); end
  def test_outputs_climate_impacts_al27; assert_in_epsilon(5.3841712682204115, worksheet.outputs_climate_impacts_al27, 0.002); end
  def test_outputs_climate_impacts_am27; assert_in_epsilon(5.574587736425975, worksheet.outputs_climate_impacts_am27, 0.002); end
  def test_outputs_climate_impacts_c28; assert_equal("Actual (NASA)", worksheet.outputs_climate_impacts_c28); end
  def test_outputs_climate_impacts_f28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_f28, 0.002); end
  def test_outputs_climate_impacts_g28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_g28, 0.002); end
  def test_outputs_climate_impacts_h28; assert_in_delta(-0.231, worksheet.outputs_climate_impacts_h28, 0.002); end
  def test_outputs_climate_impacts_i28; assert_in_delta(-0.061000000000000026, worksheet.outputs_climate_impacts_i28, 0.002); end
  def test_outputs_climate_impacts_j28; assert_in_delta(0.059, worksheet.outputs_climate_impacts_j28, 0.002); end
  def test_outputs_climate_impacts_k28; assert_in_delta(0.259, worksheet.outputs_climate_impacts_k28, 0.002); end
  def test_outputs_climate_impacts_l28; assert_in_delta(0.119, worksheet.outputs_climate_impacts_l28, 0.002); end
  def test_outputs_climate_impacts_m28; assert_in_delta(0.22899999999999998, worksheet.outputs_climate_impacts_m28, 0.002); end
  def test_outputs_climate_impacts_n28; assert_in_delta(0.209, worksheet.outputs_climate_impacts_n28, 0.002); end
  def test_outputs_climate_impacts_o28; assert_in_delta(0.359, worksheet.outputs_climate_impacts_o28, 0.002); end
  def test_outputs_climate_impacts_p28; assert_in_delta(0.519, worksheet.outputs_climate_impacts_p28, 0.002); end
  def test_outputs_climate_impacts_q28; assert_in_delta(0.719, worksheet.outputs_climate_impacts_q28, 0.002); end
  def test_outputs_climate_impacts_r28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_r28, 0.002); end
  def test_outputs_climate_impacts_s28; assert_in_delta(0.7789999999999999, worksheet.outputs_climate_impacts_s28, 0.002); end
  def test_outputs_climate_impacts_t28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_t28, 0.002); end
  def test_outputs_climate_impacts_u28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_u28, 0.002); end
  def test_outputs_climate_impacts_c29; assert_equal("Actual (HadCRUT3)", worksheet.outputs_climate_impacts_c29); end
  def test_outputs_climate_impacts_d29; assert_in_delta(-0.0020333333333333314, worksheet.outputs_climate_impacts_d29, 0.002); end
  def test_outputs_climate_impacts_e29; assert_in_delta(0.08556666666666674, worksheet.outputs_climate_impacts_e29, 0.002); end
  def test_outputs_climate_impacts_f29; assert_in_delta(-0.08383333333333326, worksheet.outputs_climate_impacts_f29, 0.002); end
  def test_outputs_climate_impacts_g29; assert_in_delta(-0.06043333333333328, worksheet.outputs_climate_impacts_g29, 0.002); end
  def test_outputs_climate_impacts_h29; assert_in_delta(-0.2668333333333333, worksheet.outputs_climate_impacts_h29, 0.002); end
  def test_outputs_climate_impacts_i29; assert_in_delta(-0.052633333333333254, worksheet.outputs_climate_impacts_i29, 0.002); end
  def test_outputs_climate_impacts_j29; assert_in_delta(0.06776666666666673, worksheet.outputs_climate_impacts_j29, 0.002); end
  def test_outputs_climate_impacts_k29; assert_in_delta(0.29756666666666676, worksheet.outputs_climate_impacts_k29, 0.002); end
  def test_outputs_climate_impacts_l29; assert_in_delta(0.08816666666666673, worksheet.outputs_climate_impacts_l29, 0.002); end
  def test_outputs_climate_impacts_m29; assert_in_delta(0.23116666666666674, worksheet.outputs_climate_impacts_m29, 0.002); end
  def test_outputs_climate_impacts_n29; assert_in_delta(0.18496666666666672, worksheet.outputs_climate_impacts_n29, 0.002); end
  def test_outputs_climate_impacts_o29; assert_in_delta(0.3201666666666667, worksheet.outputs_climate_impacts_o29, 0.002); end
  def test_outputs_climate_impacts_p29; assert_in_delta(0.44456666666666667, worksheet.outputs_climate_impacts_p29, 0.002); end
  def test_outputs_climate_impacts_q29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_q29, 0.002); end
  def test_outputs_climate_impacts_r29; assert_in_delta(0.7283666666666667, worksheet.outputs_climate_impacts_r29, 0.002); end
  def test_outputs_climate_impacts_s29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_s29, 0.002); end
  def test_outputs_climate_impacts_t29; assert_in_delta(0.7063666666666668, worksheet.outputs_climate_impacts_t29, 0.002); end
  def test_outputs_climate_impacts_u29; assert_in_delta(0.7391666666666667, worksheet.outputs_climate_impacts_u29, 0.002); end
  def test_outputs_climate_impacts_c30; assert_equal("Actual (HadCRUT4)", worksheet.outputs_climate_impacts_c30); end
  def test_outputs_climate_impacts_d30; assert_in_delta(0.024, worksheet.outputs_climate_impacts_d30, 0.002); end
  def test_outputs_climate_impacts_e30; assert_in_delta(0.117, worksheet.outputs_climate_impacts_e30, 0.002); end
  def test_outputs_climate_impacts_f30; assert_in_delta(-0.052, worksheet.outputs_climate_impacts_f30, 0.002); end
  def test_outputs_climate_impacts_g30; assert_in_delta(-0.027, worksheet.outputs_climate_impacts_g30, 0.002); end
  def test_outputs_climate_impacts_h30; assert_in_delta(-0.224, worksheet.outputs_climate_impacts_h30, 0.002); end
  def test_outputs_climate_impacts_i30; assert_in_delta(0.012, worksheet.outputs_climate_impacts_i30, 0.002); end
  def test_outputs_climate_impacts_j30; assert_in_delta(0.103, worksheet.outputs_climate_impacts_j30, 0.002); end
  def test_outputs_climate_impacts_k30; assert_in_delta(0.278, worksheet.outputs_climate_impacts_k30, 0.002); end
  def test_outputs_climate_impacts_l30; assert_in_delta(0.227, worksheet.outputs_climate_impacts_l30, 0.002); end
  def test_outputs_climate_impacts_m30; assert_in_delta(0.302, worksheet.outputs_climate_impacts_m30, 0.002); end
  def test_outputs_climate_impacts_n30; assert_in_delta(0.214, worksheet.outputs_climate_impacts_n30, 0.002); end
  def test_outputs_climate_impacts_o30; assert_in_delta(0.336, worksheet.outputs_climate_impacts_o30, 0.002); end
  def test_outputs_climate_impacts_p30; assert_in_delta(0.481, worksheet.outputs_climate_impacts_p30, 0.002); end
  def test_outputs_climate_impacts_q30; assert_in_delta(0.698, worksheet.outputs_climate_impacts_q30, 0.002); end
  def test_outputs_climate_impacts_r30; assert_in_delta(0.78, worksheet.outputs_climate_impacts_r30, 0.002); end
  def test_outputs_climate_impacts_s30; assert_in_delta(0.744, worksheet.outputs_climate_impacts_s30, 0.002); end
  def test_outputs_climate_impacts_t30; assert_in_delta(0.764, worksheet.outputs_climate_impacts_t30, 0.002); end
  def test_outputs_climate_impacts_u30; assert_in_delta(0.774, worksheet.outputs_climate_impacts_u30, 0.002); end
  def test_outputs_climate_impacts_c31; assert_equal("Low estimate", worksheet.outputs_climate_impacts_c31); end
  def test_outputs_climate_impacts_w31; assert_in_delta(0.34714149785314574, worksheet.outputs_climate_impacts_w31, 0.002); end
  def test_outputs_climate_impacts_x31; assert_in_delta(0.40854893883132093, worksheet.outputs_climate_impacts_x31, 0.002); end
  def test_outputs_climate_impacts_y31; assert_in_delta(0.47637261182968893, worksheet.outputs_climate_impacts_y31, 0.002); end
  def test_outputs_climate_impacts_z31; assert_in_delta(0.549893828942432, worksheet.outputs_climate_impacts_z31, 0.002); end
  def test_outputs_climate_impacts_aa31; assert_in_delta(0.6276029860665251, worksheet.outputs_climate_impacts_aa31, 0.002); end
  def test_outputs_climate_impacts_ab31; assert_in_delta(0.7075227309693708, worksheet.outputs_climate_impacts_ab31, 0.002); end
  def test_outputs_climate_impacts_ac31; assert_in_delta(0.7885079227417864, worksheet.outputs_climate_impacts_ac31, 0.002); end
  def test_outputs_climate_impacts_ad31; assert_in_delta(0.8700794960062528, worksheet.outputs_climate_impacts_ad31, 0.002); end
  def test_outputs_climate_impacts_ae31; assert_in_delta(0.9657723870972743, worksheet.outputs_climate_impacts_ae31, 0.002); end
  def test_outputs_climate_impacts_af31; assert_in_epsilon(1.0639906587981312, worksheet.outputs_climate_impacts_af31, 0.002); end
  def test_outputs_climate_impacts_ag31; assert_in_epsilon(1.1622683919240793, worksheet.outputs_climate_impacts_ag31, 0.002); end
  def test_outputs_climate_impacts_ah31; assert_in_epsilon(1.2605701736254777, worksheet.outputs_climate_impacts_ah31, 0.002); end
  def test_outputs_climate_impacts_ai31; assert_in_epsilon(1.3588833125064337, worksheet.outputs_climate_impacts_ai31, 0.002); end
  def test_outputs_climate_impacts_aj31; assert_in_epsilon(1.4572016690822949, worksheet.outputs_climate_impacts_aj31, 0.002); end
  def test_outputs_climate_impacts_ak31; assert_in_epsilon(1.5555222599479013, worksheet.outputs_climate_impacts_ak31, 0.002); end
  def test_outputs_climate_impacts_al31; assert_in_epsilon(1.6538438853175395, worksheet.outputs_climate_impacts_al31, 0.002); end
  def test_outputs_climate_impacts_am31; assert_in_epsilon(1.7521659774440548, worksheet.outputs_climate_impacts_am31, 0.002); end
  def test_outputs_climate_impacts_i9; assert_equal("no warning", worksheet.outputs_climate_impacts_i9); end
  def test_conversions_b66; assert_equal("Unit", worksheet.conversions_b66); end
  def test_conversions_c66; assert_equal("Name", worksheet.conversions_c66); end
  def test_conversions_d66; assert_equal("Name in formulae", worksheet.conversions_d66); end
  def test_conversions_e66; assert_equal("m^2", worksheet.conversions_e66); end
  def test_conversions_f66; assert_equal("M ha", worksheet.conversions_f66); end
  def test_conversions_b67; assert_equal("ha", worksheet.conversions_b67); end
  def test_conversions_c67; assert_equal("Hectares", worksheet.conversions_c67); end
  def test_conversions_d67; assert_equal("Unit.ha", worksheet.conversions_d67); end
  def test_conversions_e67; assert_in_epsilon(10000.0, worksheet.conversions_e67, 0.002); end
  def test_conversions_f67; assert_in_delta(1.0e-06, worksheet.conversions_f67, 0.002); end
  def test_conversions_b68; assert_equal("M ha", worksheet.conversions_b68); end
  def test_conversions_c68; assert_equal("Million hectares", worksheet.conversions_c68); end
  def test_conversions_d68; assert_equal("Unit.Mha", worksheet.conversions_d68); end
  def test_conversions_e68; assert_in_epsilon(10000000000.0, worksheet.conversions_e68, 0.002); end
  def test_conversions_f68; assert_in_delta(1.0, worksheet.conversions_f68, 0.002); end
  def test_conversions_b69; assert_equal("acres", worksheet.conversions_b69); end
  def test_conversions_c69; assert_equal("Acres", worksheet.conversions_c69); end
  def test_conversions_d69; assert_equal("Unit.acre", worksheet.conversions_d69); end
  def test_conversions_e69; assert_in_epsilon(4046.8564224, worksheet.conversions_e69, 0.002); end
  def test_conversions_f69; assert_in_delta(4.0468564224000004e-07, worksheet.conversions_f69, 0.002); end
  def test_conversions_b70; assert_equal("km^2", worksheet.conversions_b70); end
  def test_conversions_c70; assert_equal("Square kilometres", worksheet.conversions_c70); end
  def test_conversions_d70; assert_equal("Unit.km2", worksheet.conversions_d70); end
  def test_conversions_e70; assert_in_epsilon(1000000.0, worksheet.conversions_e70, 0.002); end
  def test_conversions_f70; assert_in_delta(0.0001, worksheet.conversions_f70, 0.002); end
  def test_conversions_b71; assert_equal("m^2", worksheet.conversions_b71); end
  def test_conversions_c71; assert_equal("Square metres", worksheet.conversions_c71); end
  def test_conversions_d71; assert_equal("Unit.m2", worksheet.conversions_d71); end
  def test_conversions_e71; assert_in_delta(1.0, worksheet.conversions_e71, 0.002); end
  def test_conversions_f71; assert_in_delta(1.0e-10, worksheet.conversions_f71, 0.002); end
  def test_conversions_b72; assert_equal("Football pitch", worksheet.conversions_b72); end
  def test_conversions_c72; assert_equal("Football pitch", worksheet.conversions_c72); end
  def test_conversions_d72; assert_equal("unit.footballpitch", worksheet.conversions_d72); end
  def test_conversions_e72; assert_in_epsilon(7140.0, worksheet.conversions_e72, 0.002); end
  def test_conversions_f72; assert_in_delta(7.14e-07, worksheet.conversions_f72, 0.002); end
  def test_conversions_b73; assert_equal("Australia", worksheet.conversions_b73); end
  def test_conversions_c73; assert_equal("Australia", worksheet.conversions_c73); end
  def test_conversions_d73; assert_equal("Unit.Australia", worksheet.conversions_d73); end
  def test_conversions_e73; assert_in_epsilon(7686850000000.0, worksheet.conversions_e73, 0.002); end
  def test_conversions_f73; assert_in_epsilon(768.685, worksheet.conversions_f73, 0.002); end
  def test_conversions_b74; assert_equal("India", worksheet.conversions_b74); end
  def test_conversions_c74; assert_equal("India", worksheet.conversions_c74); end
  def test_conversions_d74; assert_equal("Unit.India", worksheet.conversions_d74); end
  def test_conversions_e74; assert_in_epsilon(3287263000000.0, worksheet.conversions_e74, 0.002); end
  def test_conversions_f74; assert_in_epsilon(328.7263, worksheet.conversions_f74, 0.002); end
  def test_conversions_b75; assert_equal("Brazil", worksheet.conversions_b75); end
  def test_conversions_c75; assert_equal("Brazil", worksheet.conversions_c75); end
  def test_conversions_d75; assert_equal("Unit.Brazil", worksheet.conversions_d75); end
  def test_conversions_e75; assert_in_epsilon(8515767000000.0, worksheet.conversions_e75, 0.002); end
  def test_conversions_f75; assert_in_epsilon(851.5767, worksheet.conversions_f75, 0.002); end
  def test_conversions_b76; assert_equal("China", worksheet.conversions_b76); end
  def test_conversions_c76; assert_equal("China", worksheet.conversions_c76); end
  def test_conversions_d76; assert_equal("Unit.China", worksheet.conversions_d76); end
  def test_conversions_e76; assert_in_epsilon(9706961000000.0, worksheet.conversions_e76, 0.002); end
  def test_conversions_f76; assert_in_epsilon(970.6961, worksheet.conversions_f76, 0.002); end
  def test_conversions_b77; assert_equal("South Africa", worksheet.conversions_b77); end
  def test_conversions_c77; assert_equal("South Africa", worksheet.conversions_c77); end
  def test_conversions_d77; assert_equal("Unit.SouthAfrica", worksheet.conversions_d77); end
  def test_conversions_e77; assert_in_epsilon(1221037000000.0, worksheet.conversions_e77, 0.002); end
  def test_conversions_f77; assert_in_epsilon(122.1037, worksheet.conversions_f77, 0.002); end
  def test_conversions_b6; assert_equal("Unit", worksheet.conversions_b6); end
  def test_conversions_c6; assert_equal("Name", worksheet.conversions_c6); end
  def test_conversions_d6; assert_equal("Name in formulae", worksheet.conversions_d6); end
  def test_conversions_e6; assert_equal("Joules", worksheet.conversions_e6); end
  def test_conversions_f6; assert_equal("EJ", worksheet.conversions_f6); end
  def test_conversions_b7; assert_equal("EJ", worksheet.conversions_b7); end
  def test_conversions_c7; assert_equal("Exajoules", worksheet.conversions_c7); end
  def test_conversions_d7; assert_equal("Unit.EJ", worksheet.conversions_d7); end
  def test_conversions_e7; assert_in_epsilon(1.0e+18, worksheet.conversions_e7, 0.002); end
  def test_conversions_f7; assert_in_delta(1.0, worksheet.conversions_f7, 0.002); end
  def test_conversions_b8; assert_equal("PJ", worksheet.conversions_b8); end
  def test_conversions_c8; assert_equal("Petajoules", worksheet.conversions_c8); end
  def test_conversions_d8; assert_equal("Unit.PJ", worksheet.conversions_d8); end
  def test_conversions_e8; assert_in_epsilon(1.0e+15, worksheet.conversions_e8, 0.002); end
  def test_conversions_f8; assert_in_delta(0.001, worksheet.conversions_f8, 0.002); end
  def test_conversions_b9; assert_equal("TJ", worksheet.conversions_b9); end
  def test_conversions_c9; assert_equal("Terajoules", worksheet.conversions_c9); end
  def test_conversions_d9; assert_equal("Unit.TJ", worksheet.conversions_d9); end
  def test_conversions_e9; assert_in_epsilon(1000000000000.0, worksheet.conversions_e9, 0.002); end
  def test_conversions_f9; assert_in_delta(1.0e-06, worksheet.conversions_f9, 0.002); end
  def test_conversions_b10; assert_equal("GJ", worksheet.conversions_b10); end
  def test_conversions_c10; assert_equal("Gigajoules", worksheet.conversions_c10); end
  def test_conversions_d10; assert_equal("Unit.GJ", worksheet.conversions_d10); end
  def test_conversions_e10; assert_in_epsilon(1000000000.0, worksheet.conversions_e10, 0.002); end
  def test_conversions_f10; assert_in_delta(1.0e-09, worksheet.conversions_f10, 0.002); end
  def test_conversions_b11; assert_equal("MJ", worksheet.conversions_b11); end
  def test_conversions_c11; assert_equal("Megajoules", worksheet.conversions_c11); end
  def test_conversions_d11; assert_equal("Unit.MJ", worksheet.conversions_d11); end
  def test_conversions_e11; assert_in_epsilon(1000000.0, worksheet.conversions_e11, 0.002); end
  def test_conversions_f11; assert_in_delta(1.0e-12, worksheet.conversions_f11, 0.002); end
  def test_conversions_b12; assert_equal("J", worksheet.conversions_b12); end
  def test_conversions_c12; assert_equal("Joules", worksheet.conversions_c12); end
  def test_conversions_d12; assert_equal("Unit.J", worksheet.conversions_d12); end
  def test_conversions_e12; assert_in_delta(1.0, worksheet.conversions_e12, 0.002); end
  def test_conversions_f12; assert_in_delta(1.0e-18, worksheet.conversions_f12, 0.002); end
  def test_conversions_b13; assert_equal("TWh", worksheet.conversions_b13); end
  def test_conversions_c13; assert_equal("Terawatt-hours", worksheet.conversions_c13); end
  def test_conversions_d13; assert_equal("Unit.TWh", worksheet.conversions_d13); end
  def test_conversions_e13; assert_in_epsilon(3.6e+15, worksheet.conversions_e13, 0.002); end
  def test_conversions_f13; assert_in_delta(0.0036, worksheet.conversions_f13, 0.002); end
  def test_conversions_b14; assert_equal("GWh", worksheet.conversions_b14); end
  def test_conversions_c14; assert_equal("Gigawatt-hours", worksheet.conversions_c14); end
  def test_conversions_d14; assert_equal("Unit.GWh", worksheet.conversions_d14); end
  def test_conversions_e14; assert_in_epsilon(3600000000000.0, worksheet.conversions_e14, 0.002); end
  def test_conversions_f14; assert_in_delta(3.6e-06, worksheet.conversions_f14, 0.002); end
  def test_conversions_b15; assert_equal("MWh", worksheet.conversions_b15); end
  def test_conversions_c15; assert_equal("Megawatt-hours", worksheet.conversions_c15); end
  def test_conversions_d15; assert_equal("Unit.MWh", worksheet.conversions_d15); end
  def test_conversions_e15; assert_in_epsilon(3600000000.0, worksheet.conversions_e15, 0.002); end
  def test_conversions_f15; assert_in_delta(3.6e-09, worksheet.conversions_f15, 0.002); end
  def test_conversions_b16; assert_equal("kWh", worksheet.conversions_b16); end
  def test_conversions_c16; assert_equal("Kilowatt-hours", worksheet.conversions_c16); end
  def test_conversions_d16; assert_equal("Unit.kWh", worksheet.conversions_d16); end
  def test_conversions_e16; assert_in_epsilon(3600000.0, worksheet.conversions_e16, 0.002); end
  def test_conversions_f16; assert_in_delta(3.6e-12, worksheet.conversions_f16, 0.002); end
  def test_conversions_b17; assert_equal("boe", worksheet.conversions_b17); end
  def test_conversions_c17; assert_equal("Barrel of oil equivalent", worksheet.conversions_c17); end
  def test_conversions_d17; assert_equal("Unit.boe", worksheet.conversions_d17); end
  def test_conversions_e17; assert_in_epsilon(5861520000.0, worksheet.conversions_e17, 0.002); end
  def test_conversions_f17; assert_in_delta(5.86152e-09, worksheet.conversions_f17, 0.002); end
  def test_conversions_b18; assert_equal("Mboe", worksheet.conversions_b18); end
  def test_conversions_c18; assert_equal("Million barrels of oil equivalent", worksheet.conversions_c18); end
  def test_conversions_d18; assert_equal("Unit.Mboe", worksheet.conversions_d18); end
  def test_conversions_e18; assert_in_epsilon(5.86152e+15, worksheet.conversions_e18, 0.002); end
  def test_conversions_f18; assert_in_delta(0.00586152, worksheet.conversions_f18, 0.002); end
  def test_conversions_b19; assert_equal("toe", worksheet.conversions_b19); end
  def test_conversions_c19; assert_equal("Tonnes of oil equivalent", worksheet.conversions_c19); end
  def test_conversions_d19; assert_equal("Unit.toe", worksheet.conversions_d19); end
  def test_conversions_e19; assert_in_epsilon(41868000000.0, worksheet.conversions_e19, 0.002); end
  def test_conversions_f19; assert_in_delta(4.1868e-08, worksheet.conversions_f19, 0.002); end
  def test_conversions_b20; assert_equal("ktoe", worksheet.conversions_b20); end
  def test_conversions_c20; assert_equal("Kilotonnes of oil equivalent", worksheet.conversions_c20); end
  def test_conversions_d20; assert_equal("Unit.ktoe", worksheet.conversions_d20); end
  def test_conversions_e20; assert_in_epsilon(41868000000000.0, worksheet.conversions_e20, 0.002); end
  def test_conversions_f20; assert_in_delta(4.1868e-05, worksheet.conversions_f20, 0.002); end
  def test_conversions_b21; assert_equal("Mtoe", worksheet.conversions_b21); end
  def test_conversions_c21; assert_equal("Megatonnes of oil equivalent", worksheet.conversions_c21); end
  def test_conversions_d21; assert_equal("Unit.Mtoe", worksheet.conversions_d21); end
  def test_conversions_e21; assert_in_epsilon(4.1868e+16, worksheet.conversions_e21, 0.002); end
  def test_conversions_f21; assert_in_delta(0.041868, worksheet.conversions_f21, 0.002); end
  def test_conversions_b22; assert_equal("tce", worksheet.conversions_b22); end
  def test_conversions_c22; assert_equal("Tonnes of coal equivalent", worksheet.conversions_c22); end
  def test_conversions_d22; assert_equal("unit.tce", worksheet.conversions_d22); end
  def test_conversions_e22; assert_in_epsilon(29307600000.0, worksheet.conversions_e22, 0.002); end
  def test_conversions_f22; assert_in_delta(0.0293076, worksheet.conversions_f22, 0.002); end
  def test_conversions_b23; assert_equal("Mtce", worksheet.conversions_b23); end
  def test_conversions_c23; assert_equal("Million tonnes of coal equivalent", worksheet.conversions_c23); end
  def test_conversions_d23; assert_equal("unit.Mtce", worksheet.conversions_d23); end
  def test_conversions_e23; assert_in_epsilon(2.93076e+16, worksheet.conversions_e23, 0.002); end
  def test_conversions_f23; assert_in_delta(0.0293076, worksheet.conversions_f23, 0.002); end
  def test_conversions_b24; assert_equal("therm", worksheet.conversions_b24); end
  def test_conversions_c24; assert_equal("Therms", worksheet.conversions_c24); end
  def test_conversions_d24; assert_equal("Unit.therm", worksheet.conversions_d24); end
  def test_conversions_e24; assert_in_epsilon(105506136.12882091, worksheet.conversions_e24, 0.002); end
  def test_conversions_f24; assert_in_delta(1.055061361288209e-10, worksheet.conversions_f24, 0.002); end
  def test_conversions_b25; assert_equal("Btu", worksheet.conversions_b25); end
  def test_conversions_c25; assert_equal("British Thermal Unit", worksheet.conversions_c25); end
  def test_conversions_d25; assert_equal("Unit.Btu", worksheet.conversions_d25); end
  def test_conversions_e25; assert_in_epsilon(1055.0613612882091, worksheet.conversions_e25, 0.002); end
  def test_conversions_f25; assert_in_delta(1.055061361288209e-15, worksheet.conversions_f25, 0.002); end
  def test_conversions_b26; assert_equal("Mbtu", worksheet.conversions_b26); end
  def test_conversions_c26; assert_equal("Million British Thermal Units", worksheet.conversions_c26); end
  def test_conversions_d26; assert_equal("Unit.Mbtu", worksheet.conversions_d26); end
  def test_conversions_e26; assert_in_epsilon(1055061361.2882091, worksheet.conversions_e26, 0.002); end
  def test_conversions_f26; assert_in_delta(1.055061361288209e-09, worksheet.conversions_f26, 0.002); end
  def test_conversions_b27; assert_equal("calorie", worksheet.conversions_b27); end
  def test_conversions_c27; assert_equal("Calorie (NOT food calorie)", worksheet.conversions_c27); end
  def test_conversions_d27; assert_equal("Unit.calorie.not.food", worksheet.conversions_d27); end
  def test_conversions_e27; assert_in_epsilon(4.184, worksheet.conversions_e27, 0.002); end
  def test_conversions_f27; assert_in_delta(4.184e-18, worksheet.conversions_f27, 0.002); end
  def test_conversions_b28; assert_equal("kcal", worksheet.conversions_b28); end
  def test_conversions_c28; assert_equal("Food calories", worksheet.conversions_c28); end
  def test_conversions_d28; assert_equal("unit.kcal.food", worksheet.conversions_d28); end
  def test_conversions_e28; assert_in_epsilon(4184.0, worksheet.conversions_e28, 0.002); end
  def test_conversions_f28; assert_in_delta(4.184e-15, worksheet.conversions_f28, 0.002); end
  def test_conversions_b29; assert_equal("GW y", worksheet.conversions_b29); end
  def test_conversions_c29; assert_equal("Gigawatt-years", worksheet.conversions_c29); end
  def test_conversions_d29; assert_equal("Unit.GWyear", worksheet.conversions_d29); end
  def test_conversions_e29; assert_in_epsilon(3.15576e+16, worksheet.conversions_e29, 0.002); end
  def test_conversions_f29; assert_in_delta(0.0315576, worksheet.conversions_f29, 0.002); end
  def test_conversions_b33; assert_equal("Unit", worksheet.conversions_b33); end
  def test_conversions_c33; assert_equal("Name", worksheet.conversions_c33); end
  def test_conversions_d33; assert_equal("Name in formulae", worksheet.conversions_d33); end
  def test_conversions_e33; assert_equal("Watts", worksheet.conversions_e33); end
  def test_conversions_f33; assert_equal("GW", worksheet.conversions_f33); end
  def test_conversions_b34; assert_equal("GW", worksheet.conversions_b34); end
  def test_conversions_c34; assert_equal("Gigawatts", worksheet.conversions_c34); end
  def test_conversions_d34; assert_equal("Unit.GW", worksheet.conversions_d34); end
  def test_conversions_e34; assert_in_epsilon(1000000000.0, worksheet.conversions_e34, 0.002); end
  def test_conversions_f34; assert_in_delta(1.0, worksheet.conversions_f34, 0.002); end
  def test_conversions_b35; assert_equal("MW", worksheet.conversions_b35); end
  def test_conversions_c35; assert_equal("Megawatts", worksheet.conversions_c35); end
  def test_conversions_d35; assert_equal("Unit.MW", worksheet.conversions_d35); end
  def test_conversions_e35; assert_in_epsilon(1000000.0, worksheet.conversions_e35, 0.002); end
  def test_conversions_f35; assert_in_delta(0.001, worksheet.conversions_f35, 0.002); end
  def test_conversions_b36; assert_equal("kW", worksheet.conversions_b36); end
  def test_conversions_c36; assert_equal("Kilowatts", worksheet.conversions_c36); end
  def test_conversions_d36; assert_equal("Unit.kW", worksheet.conversions_d36); end
  def test_conversions_e36; assert_in_epsilon(1000.0, worksheet.conversions_e36, 0.002); end
  def test_conversions_f36; assert_in_delta(1.0e-06, worksheet.conversions_f36, 0.002); end
  def test_conversions_b37; assert_equal("W", worksheet.conversions_b37); end
  def test_conversions_c37; assert_equal("Watts", worksheet.conversions_c37); end
  def test_conversions_d37; assert_equal("Unit.W", worksheet.conversions_d37); end
  def test_conversions_e37; assert_in_delta(1.0, worksheet.conversions_e37, 0.002); end
  def test_conversions_f37; assert_in_delta(1.0e-09, worksheet.conversions_f37, 0.002); end
  def test_conversions_b38; assert_equal("mcm/d", worksheet.conversions_b38); end
  def test_conversions_c38; assert_equal("mcm/d natural gas", worksheet.conversions_c38); end
  def test_conversions_d38; assert_equal("Unit.mcm.d", worksheet.conversions_d38); end
  def test_conversions_e38; assert_in_epsilon(335648148.1481481, worksheet.conversions_e38, 0.002); end
  def test_conversions_f38; assert_in_delta(0.33564814814814814, worksheet.conversions_f38, 0.002); end
  def test_conversions_b39; assert_equal("Mtoe/y", worksheet.conversions_b39); end
  def test_conversions_c39; assert_equal("Mtoe per year", worksheet.conversions_c39); end
  def test_conversions_d39; assert_equal("Unit.Mtoe.y", worksheet.conversions_d39); end
  def test_conversions_e39; assert_in_epsilon(1326716860.597764, worksheet.conversions_e39, 0.002); end
  def test_conversions_f39; assert_in_epsilon(1.326716860597764, worksheet.conversions_f39, 0.002); end
  def test_outputs_physical_implications_q111; assert_in_epsilon(1881.6728723518381, worksheet.outputs_physical_implications_q111, 0.002); end
  def test_outputs_physical_implications_q112; assert_in_epsilon(371.4823547734559, worksheet.outputs_physical_implications_q112, 0.002); end
  def test_outputs_physical_implications_q113; assert_in_epsilon(1451.758150386523, worksheet.outputs_physical_implications_q113, 0.002); end
  def test_outputs_physical_implications_q114; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q114||0), 0.002); end
  def test_outputs_physical_implications_q115; assert_in_epsilon(364.0, worksheet.outputs_physical_implications_q115, 0.002); end
  def test_outputs_physical_implications_q116; assert_in_epsilon(237.67, worksheet.outputs_physical_implications_q116, 0.002); end
  def test_outputs_physical_implications_q117; assert_in_epsilon(970.0, worksheet.outputs_physical_implications_q117, 0.002); end
  def test_outputs_physical_implications_q118; assert_in_delta(0.527, worksheet.outputs_physical_implications_q118, 0.002); end
  def test_outputs_physical_implications_q119; assert_in_epsilon(71.28999999999999, worksheet.outputs_physical_implications_q119, 0.002); end
  def test_outputs_physical_implications_q120; assert_in_epsilon(11.43, worksheet.outputs_physical_implications_q120, 0.002); end
  def test_outputs_physical_implications_q121; assert_in_epsilon(120.0, worksheet.outputs_physical_implications_q121, 0.002); end
  def test_outputs_physical_implications_y111; assert_in_epsilon(5667.6926720074125, worksheet.outputs_physical_implications_y111, 0.002); end
  def test_outputs_physical_implications_y112; assert_in_epsilon(4106.2072730290465, worksheet.outputs_physical_implications_y112, 0.002); end
  def test_outputs_physical_implications_y113; assert_in_epsilon(8029.942300117246, worksheet.outputs_physical_implications_y113, 0.002); end
  def test_outputs_physical_implications_y114; assert_in_epsilon(16.0, worksheet.outputs_physical_implications_y114, 0.002); end
  def test_outputs_physical_implications_y115; assert_in_epsilon(479.49999999999994, worksheet.outputs_physical_implications_y115, 0.002); end
  def test_outputs_physical_implications_y116; assert_in_epsilon(463.3999999999999, worksheet.outputs_physical_implications_y116, 0.002); end
  def test_outputs_physical_implications_y117; assert_in_epsilon(1693.8, worksheet.outputs_physical_implications_y117, 0.002); end
  def test_outputs_physical_implications_y118; assert_in_epsilon(34.7, worksheet.outputs_physical_implications_y118, 0.002); end
  def test_outputs_physical_implications_y119; assert_in_epsilon(440.86199999999985, worksheet.outputs_physical_implications_y119, 0.002); end
  def test_outputs_physical_implications_y120; assert_in_epsilon(68.79999999999998, worksheet.outputs_physical_implications_y120, 0.002); end
  def test_outputs_physical_implications_y121; assert_in_epsilon(327.7, worksheet.outputs_physical_implications_y121, 0.002); end
  def test_outputs_physical_implications_q89; assert_in_epsilon(33.043, worksheet.outputs_physical_implications_q89, 0.002); end
  def test_outputs_physical_implications_q90; assert_in_epsilon(44.694, worksheet.outputs_physical_implications_q90, 0.002); end
  def test_outputs_physical_implications_q91; assert_in_epsilon(101.61200000000001, worksheet.outputs_physical_implications_q91, 0.002); end
  def test_outputs_physical_implications_q92; assert_in_epsilon(9.168000000000003, worksheet.outputs_physical_implications_q92, 0.002); end
  def test_outputs_physical_implications_q93; assert_in_epsilon(2.482999999999989, worksheet.outputs_physical_implications_q93, 0.002); end
  def test_outputs_physical_implications_q94; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q94, 0.002); end
  def test_outputs_physical_implications_q95; assert_in_epsilon(7.0, worksheet.outputs_physical_implications_q95, 0.002); end
  def test_outputs_physical_implications_q96; assert_in_epsilon(26.768, worksheet.outputs_physical_implications_q96, 0.002); end
  def test_outputs_physical_implications_q97; assert_in_epsilon(26.768, worksheet.outputs_physical_implications_q97, 0.002); end
  def test_outputs_physical_implications_q98; assert_in_epsilon(99.424, worksheet.outputs_physical_implications_q98, 0.002); end
  def test_outputs_physical_implications_q99; assert_in_epsilon(1759.04, worksheet.outputs_physical_implications_q99, 0.002); end
  def test_outputs_physical_implications_y89; assert_in_epsilon(27.504399999999997, worksheet.outputs_physical_implications_y89, 0.002); end
  def test_outputs_physical_implications_y90; assert_in_epsilon(87.00670000000001, worksheet.outputs_physical_implications_y90, 0.002); end
  def test_outputs_physical_implications_y91; assert_in_epsilon(84.28969999999998, worksheet.outputs_physical_implications_y91, 0.002); end
  def test_outputs_physical_implications_y92; assert_in_epsilon(7.4822, worksheet.outputs_physical_implications_y92, 0.002); end
  def test_outputs_physical_implications_y93; assert_in_epsilon(2.7169999999999987, worksheet.outputs_physical_implications_y93, 0.002); end
  def test_outputs_physical_implications_y94; assert_in_epsilon(65.65445026178011, worksheet.outputs_physical_implications_y94, 0.002); end
  def test_outputs_physical_implications_y95; assert_in_epsilon(7.659685863874345, worksheet.outputs_physical_implications_y95, 0.002); end
  def test_outputs_physical_implications_y96; assert_in_epsilon(43.00140314136125, worksheet.outputs_physical_implications_y96, 0.002); end
  def test_outputs_physical_implications_y97; assert_in_epsilon(38.90603141361256, worksheet.outputs_physical_implications_y97, 0.002); end
  def test_outputs_physical_implications_y98; assert_in_epsilon(135.1472670157068, worksheet.outputs_physical_implications_y98, 0.002); end
  def test_outputs_physical_implications_y99; assert_in_epsilon(1830.6311623036647, worksheet.outputs_physical_implications_y99, 0.002); end
  def test_outputs_physical_implications_c292; assert_equal("Technology category", worksheet.outputs_physical_implications_c292); end
  def test_outputs_physical_implications_q292; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q292, 0.002); end
  def test_outputs_physical_implications_r292; assert_equal("2015", worksheet.outputs_physical_implications_r292); end
  def test_outputs_physical_implications_s292; assert_equal("2020", worksheet.outputs_physical_implications_s292); end
  def test_outputs_physical_implications_t292; assert_equal("2025", worksheet.outputs_physical_implications_t292); end
  def test_outputs_physical_implications_u292; assert_equal("2030", worksheet.outputs_physical_implications_u292); end
  def test_outputs_physical_implications_v292; assert_equal("2035", worksheet.outputs_physical_implications_v292); end
  def test_outputs_physical_implications_w292; assert_equal("2040", worksheet.outputs_physical_implications_w292); end
  def test_outputs_physical_implications_x292; assert_equal("2045", worksheet.outputs_physical_implications_x292); end
  def test_outputs_physical_implications_y292; assert_equal("2050", worksheet.outputs_physical_implications_y292); end
  def test_outputs_physical_implications_c293; assert_equal("Light road", worksheet.outputs_physical_implications_c293); end
  def test_outputs_physical_implications_q293; assert_in_epsilon(104512.00105377422, worksheet.outputs_physical_implications_q293, 0.002); end
  def test_outputs_physical_implications_r293; assert_in_epsilon(120487.78000985197, worksheet.outputs_physical_implications_r293, 0.002); end
  def test_outputs_physical_implications_s293; assert_in_epsilon(145130.01099997535, worksheet.outputs_physical_implications_s293, 0.002); end
  def test_outputs_physical_implications_t293; assert_in_epsilon(170352.01715448254, worksheet.outputs_physical_implications_t293, 0.002); end
  def test_outputs_physical_implications_u293; assert_in_epsilon(190596.39732429, worksheet.outputs_physical_implications_u293, 0.002); end
  def test_outputs_physical_implications_v293; assert_in_epsilon(207265.30116387567, worksheet.outputs_physical_implications_v293, 0.002); end
  def test_outputs_physical_implications_w293; assert_in_epsilon(219603.10781703348, worksheet.outputs_physical_implications_w293, 0.002); end
  def test_outputs_physical_implications_x293; assert_in_epsilon(229765.3439890666, worksheet.outputs_physical_implications_x293, 0.002); end
  def test_outputs_physical_implications_y293; assert_in_epsilon(237521.2795184268, worksheet.outputs_physical_implications_y293, 0.002); end
  def test_outputs_physical_implications_c294; assert_equal("Heavy road", worksheet.outputs_physical_implications_c294); end
  def test_outputs_physical_implications_q294; assert_in_epsilon(52118.56449426207, worksheet.outputs_physical_implications_q294, 0.002); end
  def test_outputs_physical_implications_r294; assert_in_epsilon(60541.53739912379, worksheet.outputs_physical_implications_r294, 0.002); end
  def test_outputs_physical_implications_s294; assert_in_epsilon(71984.63377013437, worksheet.outputs_physical_implications_s294, 0.002); end
  def test_outputs_physical_implications_t294; assert_in_epsilon(83993.30620831045, worksheet.outputs_physical_implications_t294, 0.002); end
  def test_outputs_physical_implications_u294; assert_in_epsilon(94079.32920316499, worksheet.outputs_physical_implications_u294, 0.002); end
  def test_outputs_physical_implications_v294; assert_in_epsilon(101128.60414151712, worksheet.outputs_physical_implications_v294, 0.002); end
  def test_outputs_physical_implications_w294; assert_in_epsilon(105984.4690259122, worksheet.outputs_physical_implications_w294, 0.002); end
  def test_outputs_physical_implications_x294; assert_in_epsilon(110024.74449566995, worksheet.outputs_physical_implications_x294, 0.002); end
  def test_outputs_physical_implications_y294; assert_in_epsilon(112630.77316995343, worksheet.outputs_physical_implications_y294, 0.002); end
  def test_outputs_physical_implications_c295; assert_equal("Rail", worksheet.outputs_physical_implications_c295); end
  def test_outputs_physical_implications_q295; assert_in_epsilon(84.04510232546681, worksheet.outputs_physical_implications_q295, 0.002); end
  def test_outputs_physical_implications_r295; assert_in_epsilon(92.86788094668749, worksheet.outputs_physical_implications_r295, 0.002); end
  def test_outputs_physical_implications_s295; assert_in_epsilon(105.91931845787686, worksheet.outputs_physical_implications_s295, 0.002); end
  def test_outputs_physical_implications_t295; assert_in_epsilon(118.07604873951773, worksheet.outputs_physical_implications_t295, 0.002); end
  def test_outputs_physical_implications_u295; assert_in_epsilon(125.83311400308364, worksheet.outputs_physical_implications_u295, 0.002); end
  def test_outputs_physical_implications_v295; assert_in_epsilon(130.00098190779, worksheet.outputs_physical_implications_v295, 0.002); end
  def test_outputs_physical_implications_w295; assert_in_epsilon(130.98712481799305, worksheet.outputs_physical_implications_w295, 0.002); end
  def test_outputs_physical_implications_x295; assert_in_epsilon(130.53533473145373, worksheet.outputs_physical_implications_x295, 0.002); end
  def test_outputs_physical_implications_y295; assert_in_epsilon(128.54528089789002, worksheet.outputs_physical_implications_y295, 0.002); end
  def test_outputs_physical_implications_c296; assert_equal("Ship", worksheet.outputs_physical_implications_c296); end
  def test_outputs_physical_implications_q296; assert_in_epsilon(84.8437433279107, worksheet.outputs_physical_implications_q296, 0.002); end
  def test_outputs_physical_implications_r296; assert_in_epsilon(95.63713243396812, worksheet.outputs_physical_implications_r296, 0.002); end
  def test_outputs_physical_implications_s296; assert_in_epsilon(109.77242156841535, worksheet.outputs_physical_implications_s296, 0.002); end
  def test_outputs_physical_implications_t296; assert_in_epsilon(125.08348552007662, worksheet.outputs_physical_implications_t296, 0.002); end
  def test_outputs_physical_implications_u296; assert_in_epsilon(138.550584298381, worksheet.outputs_physical_implications_u296, 0.002); end
  def test_outputs_physical_implications_v296; assert_in_epsilon(143.98128767669033, worksheet.outputs_physical_implications_v296, 0.002); end
  def test_outputs_physical_implications_w296; assert_in_epsilon(145.94735232715203, worksheet.outputs_physical_implications_w296, 0.002); end
  def test_outputs_physical_implications_x296; assert_in_epsilon(147.33606053265007, worksheet.outputs_physical_implications_x296, 0.002); end
  def test_outputs_physical_implications_y296; assert_in_epsilon(146.02400400774312, worksheet.outputs_physical_implications_y296, 0.002); end
  def test_outputs_physical_implications_c297; assert_equal("Plane", worksheet.outputs_physical_implications_c297); end
  def test_outputs_physical_implications_q297; assert_in_epsilon(1.8014330268291616, worksheet.outputs_physical_implications_q297, 0.002); end
  def test_outputs_physical_implications_r297; assert_in_epsilon(2.0671530350011533, worksheet.outputs_physical_implications_r297, 0.002); end
  def test_outputs_physical_implications_s297; assert_in_epsilon(2.460764424293898, worksheet.outputs_physical_implications_s297, 0.002); end
  def test_outputs_physical_implications_t297; assert_in_epsilon(2.9207188216509867, worksheet.outputs_physical_implications_t297, 0.002); end
  def test_outputs_physical_implications_u297; assert_in_epsilon(3.3816866379736696, worksheet.outputs_physical_implications_u297, 0.002); end
  def test_outputs_physical_implications_v297; assert_in_epsilon(3.635591434277365, worksheet.outputs_physical_implications_v297, 0.002); end
  def test_outputs_physical_implications_w297; assert_in_epsilon(3.811088949221765, worksheet.outputs_physical_implications_w297, 0.002); end
  def test_outputs_physical_implications_x297; assert_in_epsilon(3.9834071512584877, worksheet.outputs_physical_implications_x297, 0.002); end
  def test_outputs_physical_implications_y297; assert_in_epsilon(4.079619975356877, worksheet.outputs_physical_implications_y297, 0.002); end
  def test_outputs_physical_implications_c298; assert_equal("Total", worksheet.outputs_physical_implications_c298); end
  def test_outputs_physical_implications_q298; assert_in_epsilon(156801.25582671652, worksheet.outputs_physical_implications_q298, 0.002); end
  def test_outputs_physical_implications_r298; assert_in_epsilon(181219.8895753914, worksheet.outputs_physical_implications_r298, 0.002); end
  def test_outputs_physical_implications_s298; assert_in_epsilon(217332.79727456035, worksheet.outputs_physical_implications_s298, 0.002); end
  def test_outputs_physical_implications_t298; assert_in_epsilon(254591.4036158742, worksheet.outputs_physical_implications_t298, 0.002); end
  def test_outputs_physical_implications_u298; assert_in_epsilon(284943.4919123945, worksheet.outputs_physical_implications_u298, 0.002); end
  def test_outputs_physical_implications_v298; assert_in_epsilon(308671.5231664115, worksheet.outputs_physical_implications_v298, 0.002); end
  def test_outputs_physical_implications_w298; assert_in_epsilon(325868.32240904, worksheet.outputs_physical_implications_w298, 0.002); end
  def test_outputs_physical_implications_x298; assert_in_epsilon(340071.9432871519, worksheet.outputs_physical_implications_x298, 0.002); end
  def test_outputs_physical_implications_y298; assert_in_epsilon(350430.7015932612, worksheet.outputs_physical_implications_y298, 0.002); end
  def test_outputs_physical_implications_c56; assert_equal("Type of land", worksheet.outputs_physical_implications_c56); end
  def test_outputs_physical_implications_l56; assert_in_epsilon(1990.0, worksheet.outputs_physical_implications_l56, 0.002); end
  def test_outputs_physical_implications_m56; assert_in_epsilon(1995.0, worksheet.outputs_physical_implications_m56, 0.002); end
  def test_outputs_physical_implications_n56; assert_in_epsilon(2000.0, worksheet.outputs_physical_implications_n56, 0.002); end
  def test_outputs_physical_implications_o56; assert_in_epsilon(2005.0, worksheet.outputs_physical_implications_o56, 0.002); end
  def test_outputs_physical_implications_p56; assert_in_epsilon(2010.0, worksheet.outputs_physical_implications_p56, 0.002); end
  def test_outputs_physical_implications_q56; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q56, 0.002); end
  def test_outputs_physical_implications_r56; assert_equal("2015", worksheet.outputs_physical_implications_r56); end
  def test_outputs_physical_implications_s56; assert_equal("2020", worksheet.outputs_physical_implications_s56); end
  def test_outputs_physical_implications_t56; assert_equal("2025", worksheet.outputs_physical_implications_t56); end
  def test_outputs_physical_implications_u56; assert_equal("2030", worksheet.outputs_physical_implications_u56); end
  def test_outputs_physical_implications_v56; assert_equal("2035", worksheet.outputs_physical_implications_v56); end
  def test_outputs_physical_implications_w56; assert_equal("2040", worksheet.outputs_physical_implications_w56); end
  def test_outputs_physical_implications_x56; assert_equal("2045", worksheet.outputs_physical_implications_x56); end
  def test_outputs_physical_implications_y56; assert_equal("2050", worksheet.outputs_physical_implications_y56); end
  def test_outputs_physical_implications_c57; assert_equal("Land for animals", worksheet.outputs_physical_implications_c57); end
  def test_outputs_physical_implications_l57; assert_in_epsilon(3305.27405, worksheet.outputs_physical_implications_l57, 0.002); end
  def test_outputs_physical_implications_m57; assert_in_epsilon(3394.7165, worksheet.outputs_physical_implications_m57, 0.002); end
  def test_outputs_physical_implications_n57; assert_in_epsilon(3417.6424, worksheet.outputs_physical_implications_n57, 0.002); end
  def test_outputs_physical_implications_o57; assert_in_epsilon(3388.2637000000004, worksheet.outputs_physical_implications_o57, 0.002); end
  def test_outputs_physical_implications_p57; assert_in_epsilon(3358.24029, worksheet.outputs_physical_implications_p57, 0.002); end
  def test_outputs_physical_implications_q57; assert_in_epsilon(3362.6790000000005, worksheet.outputs_physical_implications_q57, 0.002); end
  def test_outputs_physical_implications_r57; assert_in_epsilon(3325.6907842651726, worksheet.outputs_physical_implications_r57, 0.002); end
  def test_outputs_physical_implications_s57; assert_in_epsilon(3250.4089075366046, worksheet.outputs_physical_implications_s57, 0.002); end
  def test_outputs_physical_implications_t57; assert_in_epsilon(3165.097328755216, worksheet.outputs_physical_implications_t57, 0.002); end
  def test_outputs_physical_implications_u57; assert_in_epsilon(3088.2190579072635, worksheet.outputs_physical_implications_u57, 0.002); end
  def test_outputs_physical_implications_v57; assert_in_epsilon(3023.3306990994506, worksheet.outputs_physical_implications_v57, 0.002); end
  def test_outputs_physical_implications_w57; assert_in_epsilon(2944.360189979973, worksheet.outputs_physical_implications_w57, 0.002); end
  def test_outputs_physical_implications_x57; assert_in_epsilon(2829.205001262312, worksheet.outputs_physical_implications_x57, 0.002); end
  def test_outputs_physical_implications_y57; assert_in_epsilon(2694.663510082697, worksheet.outputs_physical_implications_y57, 0.002); end
  def test_outputs_physical_implications_c58; assert_equal("Land for food crops", worksheet.outputs_physical_implications_c58); end
  def test_outputs_physical_implications_l58; assert_in_epsilon(1435.159, worksheet.outputs_physical_implications_l58, 0.002); end
  def test_outputs_physical_implications_m58; assert_in_epsilon(1435.5399510204102, worksheet.outputs_physical_implications_m58, 0.002); end
  def test_outputs_physical_implications_n58; assert_in_epsilon(1428.67608979592, worksheet.outputs_physical_implications_n58, 0.002); end
  def test_outputs_physical_implications_o58; assert_in_epsilon(1446.4106385714301, worksheet.outputs_physical_implications_o58, 0.002); end
  def test_outputs_physical_implications_p58; assert_in_epsilon(1438.53226734694, worksheet.outputs_physical_implications_p58, 0.002); end
  def test_outputs_physical_implications_q58; assert_in_epsilon(1443.0301900000002, worksheet.outputs_physical_implications_q58, 0.002); end
  def test_outputs_physical_implications_r58; assert_in_epsilon(1480.7328249495831, worksheet.outputs_physical_implications_r58, 0.002); end
  def test_outputs_physical_implications_s58; assert_in_epsilon(1518.1406552913656, worksheet.outputs_physical_implications_s58, 0.002); end
  def test_outputs_physical_implications_t58; assert_in_epsilon(1551.030244934723, worksheet.outputs_physical_implications_t58, 0.002); end
  def test_outputs_physical_implications_u58; assert_in_epsilon(1585.523225224307, worksheet.outputs_physical_implications_u58, 0.002); end
  def test_outputs_physical_implications_v58; assert_in_epsilon(1623.8921578554184, worksheet.outputs_physical_implications_v58, 0.002); end
  def test_outputs_physical_implications_w58; assert_in_epsilon(1656.9993094329984, worksheet.outputs_physical_implications_w58, 0.002); end
  def test_outputs_physical_implications_x58; assert_in_epsilon(1675.0835370624209, worksheet.outputs_physical_implications_x58, 0.002); end
  def test_outputs_physical_implications_y58; assert_in_epsilon(1682.9486603832158, worksheet.outputs_physical_implications_y58, 0.002); end
  def test_outputs_physical_implications_c59; assert_equal("Land for non-food crops ", worksheet.outputs_physical_implications_c59); end
  def test_outputs_physical_implications_l59; assert_in_epsilon(48.0, worksheet.outputs_physical_implications_l59, 0.002); end
  def test_outputs_physical_implications_m59; assert_in_epsilon(50.8571428571429, worksheet.outputs_physical_implications_m59, 0.002); end
  def test_outputs_physical_implications_n59; assert_in_epsilon(53.7142857142857, worksheet.outputs_physical_implications_n59, 0.002); end
  def test_outputs_physical_implications_o59; assert_in_epsilon(56.571428571428605, worksheet.outputs_physical_implications_o59, 0.002); end
  def test_outputs_physical_implications_p59; assert_in_epsilon(59.4285714285714, worksheet.outputs_physical_implications_p59, 0.002); end
  def test_outputs_physical_implications_q59; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q59, 0.002); end
  def test_outputs_physical_implications_r59; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_r59, 0.002); end
  def test_outputs_physical_implications_s59; assert_in_epsilon(59.74285714285715, worksheet.outputs_physical_implications_s59, 0.002); end
  def test_outputs_physical_implications_t59; assert_in_epsilon(59.48571428571429, worksheet.outputs_physical_implications_t59, 0.002); end
  def test_outputs_physical_implications_u59; assert_in_epsilon(59.22857142857143, worksheet.outputs_physical_implications_u59, 0.002); end
  def test_outputs_physical_implications_v59; assert_in_epsilon(58.971428571428575, worksheet.outputs_physical_implications_v59, 0.002); end
  def test_outputs_physical_implications_w59; assert_in_epsilon(58.71428571428572, worksheet.outputs_physical_implications_w59, 0.002); end
  def test_outputs_physical_implications_x59; assert_in_epsilon(58.457142857142856, worksheet.outputs_physical_implications_x59, 0.002); end
  def test_outputs_physical_implications_y59; assert_in_epsilon(58.199999999999996, worksheet.outputs_physical_implications_y59, 0.002); end
  def test_outputs_physical_implications_c60; assert_equal("Native forest", worksheet.outputs_physical_implications_c60); end
  def test_outputs_physical_implications_l60; assert_in_epsilon(3949.19954, worksheet.outputs_physical_implications_l60, 0.002); end
  def test_outputs_physical_implications_m60; assert_in_epsilon(3894.5365409523797, worksheet.outputs_physical_implications_m60, 0.002); end
  def test_outputs_physical_implications_n60; assert_in_epsilon(3839.87336190476, worksheet.outputs_physical_implications_n60, 0.002); end
  def test_outputs_physical_implications_o60; assert_in_epsilon(3802.6219428571403, worksheet.outputs_physical_implications_o60, 0.002); end
  def test_outputs_physical_implications_p60; assert_in_epsilon(3761.66904380952, worksheet.outputs_physical_implications_p60, 0.002); end
  def test_outputs_physical_implications_q60; assert_in_epsilon(3753.47833, worksheet.outputs_physical_implications_q60, 0.002); end
  def test_outputs_physical_implications_r60; assert_in_epsilon(3716.330075962329, worksheet.outputs_physical_implications_r60, 0.002); end
  def test_outputs_physical_implications_s60; assert_in_epsilon(3709.4255048719533, worksheet.outputs_physical_implications_s60, 0.002); end
  def test_outputs_physical_implications_t60; assert_in_epsilon(3715.1482565810347, worksheet.outputs_physical_implications_t60, 0.002); end
  def test_outputs_physical_implications_u60; assert_in_epsilon(3711.0247450093193, worksheet.outputs_physical_implications_u60, 0.002); end
  def test_outputs_physical_implications_v60; assert_in_epsilon(3691.284158230923, worksheet.outputs_physical_implications_v60, 0.002); end
  def test_outputs_physical_implications_w60; assert_in_epsilon(3689.767124326687, worksheet.outputs_physical_implications_w60, 0.002); end
  def test_outputs_physical_implications_x60; assert_in_epsilon(3739.512802195384, worksheet.outputs_physical_implications_x60, 0.002); end
  def test_outputs_physical_implications_y60; assert_in_epsilon(3779.4363144440977, worksheet.outputs_physical_implications_y60, 0.002); end
  def test_outputs_physical_implications_c61; assert_equal("Commercial forest", worksheet.outputs_physical_implications_c61); end
  def test_outputs_physical_implications_l61; assert_in_epsilon(219.20000000000002, worksheet.outputs_physical_implications_l61, 0.002); end
  def test_outputs_physical_implications_m61; assert_in_epsilon(232.247619047619, worksheet.outputs_physical_implications_m61, 0.002); end
  def test_outputs_physical_implications_n61; assert_in_epsilon(245.295238095238, worksheet.outputs_physical_implications_n61, 0.002); end
  def test_outputs_physical_implications_o61; assert_in_epsilon(258.34285714285704, worksheet.outputs_physical_implications_o61, 0.002); end
  def test_outputs_physical_implications_p61; assert_in_epsilon(271.39047619047597, worksheet.outputs_physical_implications_p61, 0.002); end
  def test_outputs_physical_implications_q61; assert_in_epsilon(274.0, worksheet.outputs_physical_implications_q61, 0.002); end
  def test_outputs_physical_implications_r61; assert_in_epsilon(293.4491799708585, worksheet.outputs_physical_implications_r61, 0.002); end
  def test_outputs_physical_implications_s61; assert_in_epsilon(319.9065463189167, worksheet.outputs_physical_implications_s61, 0.002); end
  def test_outputs_physical_implications_t61; assert_in_epsilon(349.4838404763986, worksheet.outputs_physical_implications_t61, 0.002); end
  def test_outputs_physical_implications_u61; assert_in_epsilon(380.06228134272186, worksheet.outputs_physical_implications_u61, 0.002); end
  def test_outputs_physical_implications_v61; assert_in_epsilon(411.48274720769706, worksheet.outputs_physical_implications_v61, 0.002); end
  def test_outputs_physical_implications_w61; assert_in_epsilon(445.12653958755135, worksheet.outputs_physical_implications_w61, 0.002); end
  def test_outputs_physical_implications_x61; assert_in_epsilon(479.9233475989773, worksheet.outputs_physical_implications_x61, 0.002); end
  def test_outputs_physical_implications_y61; assert_in_epsilon(517.0170977977295, worksheet.outputs_physical_implications_y61, 0.002); end
  def test_outputs_physical_implications_c62; assert_equal("Land for bioenergy", worksheet.outputs_physical_implications_c62); end
  def test_outputs_physical_implications_l62; assert_in_epsilon(36.0, worksheet.outputs_physical_implications_l62, 0.002); end
  def test_outputs_physical_implications_m62; assert_in_epsilon(36.429306122449, worksheet.outputs_physical_implications_m62, 0.002); end
  def test_outputs_physical_implications_n62; assert_in_epsilon(36.430224489795904, worksheet.outputs_physical_implications_n62, 0.002); end
  def test_outputs_physical_implications_o62; assert_in_epsilon(36.431142857142795, worksheet.outputs_physical_implications_o62, 0.002); end
  def test_outputs_physical_implications_p62; assert_in_epsilon(36.4320612244898, worksheet.outputs_physical_implications_p62, 0.002); end
  def test_outputs_physical_implications_q62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_q62, 0.002); end
  def test_outputs_physical_implications_r62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_r62, 0.002); end
  def test_outputs_physical_implications_s62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_s62, 0.002); end
  def test_outputs_physical_implications_t62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_t62, 0.002); end
  def test_outputs_physical_implications_u62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_u62, 0.002); end
  def test_outputs_physical_implications_v62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_v62, 0.002); end
  def test_outputs_physical_implications_w62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_w62, 0.002); end
  def test_outputs_physical_implications_x62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_x62, 0.002); end
  def test_outputs_physical_implications_y62; assert_in_epsilon(135.34035460708793, worksheet.outputs_physical_implications_y62, 0.002); end
  def test_outputs_physical_implications_c63; assert_equal("Natural grassland", worksheet.outputs_physical_implications_c63); end
  def test_outputs_physical_implications_l63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_l63||0), 0.002); end
  def test_outputs_physical_implications_m63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_m63||0), 0.002); end
  def test_outputs_physical_implications_n63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_n63||0), 0.002); end
  def test_outputs_physical_implications_o63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_o63||0), 0.002); end
  def test_outputs_physical_implications_p63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_p63||0), 0.002); end
  def test_outputs_physical_implications_q63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q63||0), 0.002); end
  def test_outputs_physical_implications_r63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_r63||0), 0.002); end
  def test_outputs_physical_implications_s63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_s63||0), 0.002); end
  def test_outputs_physical_implications_t63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_t63||0), 0.002); end
  def test_outputs_physical_implications_u63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_u63||0), 0.002); end
  def test_outputs_physical_implications_v63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_v63||0), 0.002); end
  def test_outputs_physical_implications_w63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_w63||0), 0.002); end
  def test_outputs_physical_implications_x63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_x63||0), 0.002); end
  def test_outputs_physical_implications_y63; assert_in_epsilon(1.0815826851703036, worksheet.outputs_physical_implications_y63, 0.002); end
  def test_outputs_physical_implications_c64; assert_equal("Settlements and infrastructure", worksheet.outputs_physical_implications_c64); end
  def test_outputs_physical_implications_l64; assert_in_epsilon(196.0, worksheet.outputs_physical_implications_l64, 0.002); end
  def test_outputs_physical_implications_m64; assert_in_epsilon(207.666666666667, worksheet.outputs_physical_implications_m64, 0.002); end
  def test_outputs_physical_implications_n64; assert_in_epsilon(219.333333333333, worksheet.outputs_physical_implications_n64, 0.002); end
  def test_outputs_physical_implications_o64; assert_in_epsilon(231.0, worksheet.outputs_physical_implications_o64, 0.002); end
  def test_outputs_physical_implications_p64; assert_in_epsilon(242.666666666667, worksheet.outputs_physical_implications_p64, 0.002); end
  def test_outputs_physical_implications_q64; assert_in_epsilon(245.0, worksheet.outputs_physical_implications_q64, 0.002); end
  def test_outputs_physical_implications_r64; assert_in_epsilon(261.98465485205844, worksheet.outputs_physical_implications_r64, 0.002); end
  def test_outputs_physical_implications_s64; assert_in_epsilon(280.56304883830444, worksheet.outputs_physical_implications_s64, 0.002); end
  def test_outputs_physical_implications_t64; assert_in_epsilon(297.94213496691447, worksheet.outputs_physical_implications_t64, 0.002); end
  def test_outputs_physical_implications_u64; assert_in_epsilon(314.1296390878191, worksheet.outputs_physical_implications_u64, 0.002); end
  def test_outputs_physical_implications_v64; assert_in_epsilon(329.22632903508304, worksheet.outputs_physical_implications_v64, 0.002); end
  def test_outputs_physical_implications_w64; assert_in_epsilon(343.22007095850836, worksheet.outputs_physical_implications_w64, 0.002); end
  def test_outputs_physical_implications_x64; assert_in_epsilon(356.0056890237634, worksheet.outputs_physical_implications_x64, 0.002); end
  def test_outputs_physical_implications_y64; assert_in_epsilon(367.5, worksheet.outputs_physical_implications_y64, 0.002); end
  def test_outputs_physical_implications_c65; assert_equal("Desert, ice etc", worksheet.outputs_physical_implications_c65); end
  def test_outputs_physical_implications_l65; assert_in_epsilon(3878.6295800000003, worksheet.outputs_physical_implications_l65, 0.002); end
  def test_outputs_physical_implications_m65; assert_in_epsilon(3768.11670333333, worksheet.outputs_physical_implications_m65, 0.002); end
  def test_outputs_physical_implications_n65; assert_in_epsilon(3781.4923166666704, worksheet.outputs_physical_implications_n65, 0.002); end
  def test_outputs_physical_implications_o65; assert_in_epsilon(3802.21538, worksheet.outputs_physical_implications_o65, 0.002); end
  def test_outputs_physical_implications_p65; assert_in_epsilon(3850.9266033333297, worksheet.outputs_physical_implications_p65, 0.002); end
  def test_outputs_physical_implications_q65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_q65, 0.002); end
  def test_outputs_physical_implications_r65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_r65, 0.002); end
  def test_outputs_physical_implications_s65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_s65, 0.002); end
  def test_outputs_physical_implications_t65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_t65, 0.002); end
  def test_outputs_physical_implications_u65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_u65, 0.002); end
  def test_outputs_physical_implications_v65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_v65, 0.002); end
  def test_outputs_physical_implications_w65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_w65, 0.002); end
  def test_outputs_physical_implications_x65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_x65, 0.002); end
  def test_outputs_physical_implications_y65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_y65, 0.002); end
  def test_outputs_physical_implications_c283; assert_equal("Technology category", worksheet.outputs_physical_implications_c283); end
  def test_outputs_physical_implications_q283; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q283, 0.002); end
  def test_outputs_physical_implications_r283; assert_equal("2015", worksheet.outputs_physical_implications_r283); end
  def test_outputs_physical_implications_s283; assert_equal("2020", worksheet.outputs_physical_implications_s283); end
  def test_outputs_physical_implications_t283; assert_equal("2025", worksheet.outputs_physical_implications_t283); end
  def test_outputs_physical_implications_u283; assert_equal("2030", worksheet.outputs_physical_implications_u283); end
  def test_outputs_physical_implications_v283; assert_equal("2035", worksheet.outputs_physical_implications_v283); end
  def test_outputs_physical_implications_w283; assert_equal("2040", worksheet.outputs_physical_implications_w283); end
  def test_outputs_physical_implications_x283; assert_equal("2045", worksheet.outputs_physical_implications_x283); end
  def test_outputs_physical_implications_y283; assert_equal("2050", worksheet.outputs_physical_implications_y283); end
  def test_outputs_physical_implications_c284; assert_equal("Light road", worksheet.outputs_physical_implications_c284); end
  def test_outputs_physical_implications_q284; assert_in_epsilon(1456126.4593140536, worksheet.outputs_physical_implications_q284, 0.002); end
  def test_outputs_physical_implications_r284; assert_in_epsilon(1670431.196865501, worksheet.outputs_physical_implications_r284, 0.002); end
  def test_outputs_physical_implications_s284; assert_in_epsilon(1912933.2987012255, worksheet.outputs_physical_implications_s284, 0.002); end
  def test_outputs_physical_implications_t284; assert_in_epsilon(2135136.2669321694, worksheet.outputs_physical_implications_t284, 0.002); end
  def test_outputs_physical_implications_u284; assert_in_epsilon(2359705.0538019044, worksheet.outputs_physical_implications_u284, 0.002); end
  def test_outputs_physical_implications_v284; assert_in_epsilon(2567352.4947359604, worksheet.outputs_physical_implications_v284, 0.002); end
  def test_outputs_physical_implications_w284; assert_in_epsilon(2764907.5981583903, worksheet.outputs_physical_implications_w284, 0.002); end
  def test_outputs_physical_implications_x284; assert_in_epsilon(2944299.5607168903, worksheet.outputs_physical_implications_x284, 0.002); end
  def test_outputs_physical_implications_y284; assert_in_epsilon(3119035.773486961, worksheet.outputs_physical_implications_y284, 0.002); end
  def test_outputs_physical_implications_c285; assert_equal("Heavy road", worksheet.outputs_physical_implications_c285); end
  def test_outputs_physical_implications_q285; assert_in_epsilon(15512.285452212032, worksheet.outputs_physical_implications_q285, 0.002); end
  def test_outputs_physical_implications_r285; assert_in_epsilon(18334.096668677477, worksheet.outputs_physical_implications_r285, 0.002); end
  def test_outputs_physical_implications_s285; assert_in_epsilon(21419.572670793503, worksheet.outputs_physical_implications_s285, 0.002); end
  def test_outputs_physical_implications_t285; assert_in_epsilon(24176.674459664588, worksheet.outputs_physical_implications_t285, 0.002); end
  def test_outputs_physical_implications_u285; assert_in_epsilon(26803.352295162014, worksheet.outputs_physical_implications_u285, 0.002); end
  def test_outputs_physical_implications_v285; assert_in_epsilon(29102.05191756031, worksheet.outputs_physical_implications_v285, 0.002); end
  def test_outputs_physical_implications_w285; assert_in_epsilon(31123.44840145341, worksheet.outputs_physical_implications_w285, 0.002); end
  def test_outputs_physical_implications_x285; assert_in_epsilon(32826.65311257663, worksheet.outputs_physical_implications_x285, 0.002); end
  def test_outputs_physical_implications_y285; assert_in_epsilon(34341.39951617111, worksheet.outputs_physical_implications_y285, 0.002); end
  def test_outputs_physical_implications_c286; assert_equal("Rail", worksheet.outputs_physical_implications_c286); end
  def test_outputs_physical_implications_q286; assert_in_epsilon(82.2471593129048, worksheet.outputs_physical_implications_q286, 0.002); end
  def test_outputs_physical_implications_r286; assert_in_epsilon(119.02483769096241, worksheet.outputs_physical_implications_r286, 0.002); end
  def test_outputs_physical_implications_s286; assert_in_epsilon(127.9144978735053, worksheet.outputs_physical_implications_s286, 0.002); end
  def test_outputs_physical_implications_t286; assert_in_epsilon(133.56255576336423, worksheet.outputs_physical_implications_t286, 0.002); end
  def test_outputs_physical_implications_u286; assert_in_epsilon(138.02775873825132, worksheet.outputs_physical_implications_u286, 0.002); end
  def test_outputs_physical_implications_v286; assert_in_epsilon(140.2481913148598, worksheet.outputs_physical_implications_v286, 0.002); end
  def test_outputs_physical_implications_w286; assert_in_epsilon(141.23810065641422, worksheet.outputs_physical_implications_w286, 0.002); end
  def test_outputs_physical_implications_x286; assert_in_epsilon(140.76223309269534, worksheet.outputs_physical_implications_x286, 0.002); end
  def test_outputs_physical_implications_y286; assert_in_epsilon(139.88201387749888, worksheet.outputs_physical_implications_y286, 0.002); end
  def test_outputs_physical_implications_c287; assert_equal("Plane", worksheet.outputs_physical_implications_c287); end
  def test_outputs_physical_implications_q287; assert_in_epsilon(24.99654391376603, worksheet.outputs_physical_implications_q287, 0.002); end
  def test_outputs_physical_implications_r287; assert_in_epsilon(28.47456088280125, worksheet.outputs_physical_implications_r287, 0.002); end
  def test_outputs_physical_implications_s287; assert_in_epsilon(31.832873399716124, worksheet.outputs_physical_implications_s287, 0.002); end
  def test_outputs_physical_implications_t287; assert_in_epsilon(35.54045508603261, worksheet.outputs_physical_implications_t287, 0.002); end
  def test_outputs_physical_implications_u287; assert_in_epsilon(39.66558882866668, worksheet.outputs_physical_implications_u287, 0.002); end
  def test_outputs_physical_implications_v287; assert_in_epsilon(44.29848296689177, worksheet.outputs_physical_implications_v287, 0.002); end
  def test_outputs_physical_implications_w287; assert_in_epsilon(49.533200559070956, worksheet.outputs_physical_implications_w287, 0.002); end
  def test_outputs_physical_implications_x287; assert_in_epsilon(55.46757623442601, worksheet.outputs_physical_implications_x287, 0.002); end
  def test_outputs_physical_implications_y287; assert_in_epsilon(62.21548748122321, worksheet.outputs_physical_implications_y287, 0.002); end
  def test_outputs_physical_implications_c288; assert_equal("Total", worksheet.outputs_physical_implications_c288); end
  def test_outputs_physical_implications_q288; assert_in_epsilon(1471745.9884694924, worksheet.outputs_physical_implications_q288, 0.002); end
  def test_outputs_physical_implications_r288; assert_in_epsilon(1688912.7929327523, worksheet.outputs_physical_implications_r288, 0.002); end
  def test_outputs_physical_implications_s288; assert_in_epsilon(1934512.618743292, worksheet.outputs_physical_implications_s288, 0.002); end
  def test_outputs_physical_implications_t288; assert_in_epsilon(2159482.0444026836, worksheet.outputs_physical_implications_t288, 0.002); end
  def test_outputs_physical_implications_u288; assert_in_epsilon(2386686.0994446333, worksheet.outputs_physical_implications_u288, 0.002); end
  def test_outputs_physical_implications_v288; assert_in_epsilon(2596639.0933278026, worksheet.outputs_physical_implications_v288, 0.002); end
  def test_outputs_physical_implications_w288; assert_in_epsilon(2796221.817861059, worksheet.outputs_physical_implications_w288, 0.002); end
  def test_outputs_physical_implications_x288; assert_in_epsilon(2977322.4436387946, worksheet.outputs_physical_implications_x288, 0.002); end
  def test_outputs_physical_implications_y288; assert_in_epsilon(3153579.270504491, worksheet.outputs_physical_implications_y288, 0.002); end
  def test_outputs_physical_implications_q48; assert_in_delta(0.8432926393963501, worksheet.outputs_physical_implications_q48, 0.002); end
  def test_outputs_physical_implications_y48; assert_in_delta(0.9389292544041041, worksheet.outputs_physical_implications_y48, 0.002); end
  def test_outputs_physical_implications_q9; assert_in_epsilon(6966439712.0, worksheet.outputs_physical_implications_q9, 0.002); end
  def test_outputs_physical_implications_y9; assert_in_epsilon(9550945000.0, worksheet.outputs_physical_implications_y9, 0.002); end
  def test_outputs_physical_implications_q35; assert_in_epsilon(833660013.8618993, worksheet.outputs_physical_implications_q35, 0.002); end
  def test_outputs_physical_implications_y35; assert_in_epsilon(917809553.0459162, worksheet.outputs_physical_implications_y35, 0.002); end
  def test_outputs_physical_implications_q30; assert_in_epsilon(1452719862.6209612, worksheet.outputs_physical_implications_q30, 0.002); end
  def test_outputs_physical_implications_y30; assert_in_epsilon(2881187074.6996784, worksheet.outputs_physical_implications_y30, 0.002); end
  def test_outputs_physical_implications_q21; assert_in_delta(0.5213279389034929, worksheet.outputs_physical_implications_q21, 0.002); end
  def test_outputs_physical_implications_y21; assert_in_delta(0.663663288223238, worksheet.outputs_physical_implications_y21, 0.002); end
  def test_outputs_physical_implications_c151; assert_equal("Description", worksheet.outputs_physical_implications_c151); end
  def test_outputs_physical_implications_d151; assert_equal("Column1", worksheet.outputs_physical_implications_d151); end
  def test_outputs_physical_implications_e151; assert_equal("Column2", worksheet.outputs_physical_implications_e151); end
  def test_outputs_physical_implications_f151; assert_equal("Column3", worksheet.outputs_physical_implications_f151); end
  def test_outputs_physical_implications_g151; assert_equal("Column4", worksheet.outputs_physical_implications_g151); end
  def test_outputs_physical_implications_h151; assert_equal("Column5", worksheet.outputs_physical_implications_h151); end
  def test_outputs_physical_implications_i151; assert_equal("Column6", worksheet.outputs_physical_implications_i151); end
  def test_outputs_physical_implications_j151; assert_equal("Column7", worksheet.outputs_physical_implications_j151); end
  def test_outputs_physical_implications_k151; assert_equal("Column8", worksheet.outputs_physical_implications_k151); end
  def test_outputs_physical_implications_l151; assert_equal("Column9", worksheet.outputs_physical_implications_l151); end
  def test_outputs_physical_implications_m151; assert_equal("Column10", worksheet.outputs_physical_implications_m151); end
  def test_outputs_physical_implications_n151; assert_equal("Column11", worksheet.outputs_physical_implications_n151); end
  def test_outputs_physical_implications_o151; assert_equal("Column12", worksheet.outputs_physical_implications_o151); end
  def test_outputs_physical_implications_p151; assert_equal("Column13", worksheet.outputs_physical_implications_p151); end
  def test_outputs_physical_implications_q151; assert_equal("2011", worksheet.outputs_physical_implications_q151); end
  def test_outputs_physical_implications_r151; assert_equal("2015", worksheet.outputs_physical_implications_r151); end
  def test_outputs_physical_implications_s151; assert_equal("2020", worksheet.outputs_physical_implications_s151); end
  def test_outputs_physical_implications_t151; assert_equal("2025", worksheet.outputs_physical_implications_t151); end
  def test_outputs_physical_implications_u151; assert_equal("2030", worksheet.outputs_physical_implications_u151); end
  def test_outputs_physical_implications_v151; assert_equal("2035", worksheet.outputs_physical_implications_v151); end
  def test_outputs_physical_implications_w151; assert_equal("2040", worksheet.outputs_physical_implications_w151); end
  def test_outputs_physical_implications_x151; assert_equal("2045", worksheet.outputs_physical_implications_x151); end
  def test_outputs_physical_implications_y151; assert_equal("2050", worksheet.outputs_physical_implications_y151); end
  def test_outputs_physical_implications_c152; assert_equal("Iron and steel", worksheet.outputs_physical_implications_c152); end
  def test_outputs_physical_implications_e152; assert_equal("Steel.Oxygen", worksheet.outputs_physical_implications_e152); end
  def test_outputs_physical_implications_f152; assert_equal("Steel.OxygenHisarna", worksheet.outputs_physical_implications_f152); end
  def test_outputs_physical_implications_g152; assert_equal("Steel.Electric", worksheet.outputs_physical_implications_g152); end
  def test_outputs_physical_implications_h152; assert_equal("Steel.ElectricDRI", worksheet.outputs_physical_implications_h152); end
  def test_outputs_physical_implications_q152; assert_in_epsilon(1.5183, worksheet.outputs_physical_implications_q152, 0.002); end
  def test_outputs_physical_implications_r152; assert_in_epsilon(1.5964585383014267, worksheet.outputs_physical_implications_r152, 0.002); end
  def test_outputs_physical_implications_s152; assert_in_epsilon(1.7416437449171893, worksheet.outputs_physical_implications_s152, 0.002); end
  def test_outputs_physical_implications_t152; assert_in_epsilon(1.8748746479967318, worksheet.outputs_physical_implications_t152, 0.002); end
  def test_outputs_physical_implications_u152; assert_in_epsilon(2.00434721381089, worksheet.outputs_physical_implications_u152, 0.002); end
  def test_outputs_physical_implications_v152; assert_in_epsilon(2.1260564414698706, worksheet.outputs_physical_implications_v152, 0.002); end
  def test_outputs_physical_implications_w152; assert_in_epsilon(2.2567101102476776, worksheet.outputs_physical_implications_w152, 0.002); end
  def test_outputs_physical_implications_x152; assert_in_epsilon(2.3940279453167257, worksheet.outputs_physical_implications_x152, 0.002); end
  def test_outputs_physical_implications_y152; assert_in_epsilon(2.537494625571684, worksheet.outputs_physical_implications_y152, 0.002); end
  def test_outputs_physical_implications_c153; assert_equal("Aluminium", worksheet.outputs_physical_implications_c153); end
  def test_outputs_physical_implications_f153; assert_equal("Aluminium.Primary", worksheet.outputs_physical_implications_f153); end
  def test_outputs_physical_implications_g153; assert_equal("Aluminium.Secondary", worksheet.outputs_physical_implications_g153); end
  def test_outputs_physical_implications_q153; assert_in_delta(0.06769999999999998, worksheet.outputs_physical_implications_q153, 0.002); end
  def test_outputs_physical_implications_r153; assert_in_delta(0.0734202224165199, worksheet.outputs_physical_implications_r153, 0.002); end
  def test_outputs_physical_implications_s153; assert_in_delta(0.08021606265459663, worksheet.outputs_physical_implications_s153, 0.002); end
  def test_outputs_physical_implications_t153; assert_in_delta(0.08919791286045252, worksheet.outputs_physical_implications_t153, 0.002); end
  def test_outputs_physical_implications_u153; assert_in_delta(0.09837136431780887, worksheet.outputs_physical_implications_u153, 0.002); end
  def test_outputs_physical_implications_v153; assert_in_delta(0.10730230446927981, worksheet.outputs_physical_implications_v153, 0.002); end
  def test_outputs_physical_implications_w153; assert_in_delta(0.11711895956283053, worksheet.outputs_physical_implications_w153, 0.002); end
  def test_outputs_physical_implications_x153; assert_in_delta(0.1274852809973559, worksheet.outputs_physical_implications_x153, 0.002); end
  def test_outputs_physical_implications_y153; assert_in_delta(0.1389706496088825, worksheet.outputs_physical_implications_y153, 0.002); end
  def test_outputs_physical_implications_c154; assert_equal("Chemicals", worksheet.outputs_physical_implications_c154); end
  def test_outputs_physical_implications_e154; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_physical_implications_e154); end
  def test_outputs_physical_implications_f154; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_physical_implications_f154); end
  def test_outputs_physical_implications_g154; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_physical_implications_g154); end
  def test_outputs_physical_implications_h154; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_physical_implications_h154); end
  def test_outputs_physical_implications_q154; assert_in_delta(0.7504088224854855, worksheet.outputs_physical_implications_q154, 0.002); end
  def test_outputs_physical_implications_r154; assert_in_delta(0.8007993318439715, worksheet.outputs_physical_implications_r154, 0.002); end
  def test_outputs_physical_implications_s154; assert_in_delta(0.85308566268847, worksheet.outputs_physical_implications_s154, 0.002); end
  def test_outputs_physical_implications_t154; assert_in_delta(0.951813234555004, worksheet.outputs_physical_implications_t154, 0.002); end
  def test_outputs_physical_implications_u154; assert_in_epsilon(1.057473204817052, worksheet.outputs_physical_implications_u154, 0.002); end
  def test_outputs_physical_implications_v154; assert_in_epsilon(1.1670171707783035, worksheet.outputs_physical_implications_v154, 0.002); end
  def test_outputs_physical_implications_w154; assert_in_epsilon(1.2919132456315046, worksheet.outputs_physical_implications_w154, 0.002); end
  def test_outputs_physical_implications_x154; assert_in_epsilon(1.4210329912085011, worksheet.outputs_physical_implications_x154, 0.002); end
  def test_outputs_physical_implications_y154; assert_in_epsilon(1.5673928626261049, worksheet.outputs_physical_implications_y154, 0.002); end
  def test_outputs_physical_implications_c155; assert_equal("Pulp and paper", worksheet.outputs_physical_implications_c155); end
  def test_outputs_physical_implications_f155; assert_equal("Pulp & paper.Virgin", worksheet.outputs_physical_implications_f155); end
  def test_outputs_physical_implications_g155; assert_equal("Pulp & paper.Recycled", worksheet.outputs_physical_implications_g155); end
  def test_outputs_physical_implications_q155; assert_in_delta(0.6111514610000001, worksheet.outputs_physical_implications_q155, 0.002); end
  def test_outputs_physical_implications_r155; assert_in_delta(0.6557965839190023, worksheet.outputs_physical_implications_r155, 0.002); end
  def test_outputs_physical_implications_s155; assert_in_delta(0.7031992682141481, worksheet.outputs_physical_implications_s155, 0.002); end
  def test_outputs_physical_implications_t155; assert_in_delta(0.7827554291514061, worksheet.outputs_physical_implications_t155, 0.002); end
  def test_outputs_physical_implications_u155; assert_in_delta(0.8671765530895665, worksheet.outputs_physical_implications_u155, 0.002); end
  def test_outputs_physical_implications_v155; assert_in_delta(0.9546898498678591, worksheet.outputs_physical_implications_v155, 0.002); end
  def test_outputs_physical_implications_w155; assert_in_epsilon(1.0537091576921505, worksheet.outputs_physical_implications_w155, 0.002); end
  def test_outputs_physical_implications_x155; assert_in_epsilon(1.1573414098193255, worksheet.outputs_physical_implications_x155, 0.002); end
  def test_outputs_physical_implications_y155; assert_in_epsilon(1.2750477004842442, worksheet.outputs_physical_implications_y155, 0.002); end
  def test_outputs_physical_implications_c156; assert_equal("Cement", worksheet.outputs_physical_implications_c156); end
  def test_outputs_physical_implications_e156; assert_equal("Cement", worksheet.outputs_physical_implications_e156); end
  def test_outputs_physical_implications_q156; assert_in_epsilon(3.6351730407050002, worksheet.outputs_physical_implications_q156, 0.002); end
  def test_outputs_physical_implications_r156; assert_in_epsilon(3.7446745120157563, worksheet.outputs_physical_implications_r156, 0.002); end
  def test_outputs_physical_implications_s156; assert_in_epsilon(4.338911195225878, worksheet.outputs_physical_implications_s156, 0.002); end
  def test_outputs_physical_implications_t156; assert_in_epsilon(4.586285323950359, worksheet.outputs_physical_implications_t156, 0.002); end
  def test_outputs_physical_implications_u156; assert_in_epsilon(4.814882103926513, worksheet.outputs_physical_implications_u156, 0.002); end
  def test_outputs_physical_implications_v156; assert_in_epsilon(5.037462854145653, worksheet.outputs_physical_implications_v156, 0.002); end
  def test_outputs_physical_implications_w156; assert_in_epsilon(5.228877875517739, worksheet.outputs_physical_implications_w156, 0.002); end
  def test_outputs_physical_implications_x156; assert_in_epsilon(5.417173497596142, worksheet.outputs_physical_implications_x156, 0.002); end
  def test_outputs_physical_implications_y156; assert_in_epsilon(5.61616149293798, worksheet.outputs_physical_implications_y156, 0.002); end
  def test_outputs_physical_implications_c157; assert_equal("Timber", worksheet.outputs_physical_implications_c157); end
  def test_outputs_physical_implications_e157; assert_equal("Timber", worksheet.outputs_physical_implications_e157); end
  def test_outputs_physical_implications_q157; assert_in_delta(0.8091999999999999, worksheet.outputs_physical_implications_q157, 0.002); end
  def test_outputs_physical_implications_r157; assert_in_delta(0.8765315165012615, worksheet.outputs_physical_implications_r157, 0.002); end
  def test_outputs_physical_implications_s157; assert_in_delta(0.973353798492706, worksheet.outputs_physical_implications_s157, 0.002); end
  def test_outputs_physical_implications_t157; assert_in_epsilon(1.0562502293674918, worksheet.outputs_physical_implications_t157, 0.002); end
  def test_outputs_physical_implications_u157; assert_in_epsilon(1.139875813937123, worksheet.outputs_physical_implications_u157, 0.002); end
  def test_outputs_physical_implications_v157; assert_in_epsilon(1.225067083764539, worksheet.outputs_physical_implications_v157, 0.002); end
  def test_outputs_physical_implications_w157; assert_in_epsilon(1.311212868547404, worksheet.outputs_physical_implications_w157, 0.002); end
  def test_outputs_physical_implications_x157; assert_in_epsilon(1.3991420349084784, worksheet.outputs_physical_implications_x157, 0.002); end
  def test_outputs_physical_implications_y157; assert_in_epsilon(1.4859688272807345, worksheet.outputs_physical_implications_y157, 0.002); end
  def test_outputs_costs_c7; assert_equal("Sector", worksheet.outputs_costs_c7); end
  def test_outputs_costs_d7; assert_equal("Sector number", worksheet.outputs_costs_d7); end
  def test_outputs_costs_f7; assert_equal("Low", worksheet.outputs_costs_f7); end
  def test_outputs_costs_g7; assert_equal("Point", worksheet.outputs_costs_g7); end
  def test_outputs_costs_h7; assert_equal("High", worksheet.outputs_costs_h7); end
  def test_outputs_costs_c8; assert_equal("Transport", worksheet.outputs_costs_c8); end
  def test_outputs_costs_d8; assert_in_epsilon(10.0, worksheet.outputs_costs_d8, 0.002); end
  def test_outputs_costs_f8; assert_in_epsilon(20317.326727684056, worksheet.outputs_costs_f8, 0.002); end
  def test_outputs_costs_g8; assert_in_epsilon(28910.00020287646, worksheet.outputs_costs_g8, 0.002); end
  def test_outputs_costs_h8; assert_in_epsilon(50621.07337643863, worksheet.outputs_costs_h8, 0.002); end
  def test_outputs_costs_c9; assert_equal("Buildings", worksheet.outputs_costs_c9); end
  def test_outputs_costs_d9; assert_in_epsilon(20.0, worksheet.outputs_costs_d9, 0.002); end
  def test_outputs_costs_f9; assert_in_epsilon(8122.956285261332, worksheet.outputs_costs_f9, 0.002); end
  def test_outputs_costs_g9; assert_in_epsilon(10017.790946095127, worksheet.outputs_costs_g9, 0.002); end
  def test_outputs_costs_h9; assert_in_epsilon(11929.204384298648, worksheet.outputs_costs_h9, 0.002); end
  def test_outputs_costs_c10; assert_equal("Manufacturing", worksheet.outputs_costs_c10); end
  def test_outputs_costs_d10; assert_in_epsilon(30.0, worksheet.outputs_costs_d10, 0.002); end
  def test_outputs_costs_f10; assert_in_epsilon(454.3433212595786, worksheet.outputs_costs_f10, 0.002); end
  def test_outputs_costs_g10; assert_in_epsilon(720.7592498897203, worksheet.outputs_costs_g10, 0.002); end
  def test_outputs_costs_h10; assert_in_epsilon(985.6996424436395, worksheet.outputs_costs_h10, 0.002); end
  def test_outputs_costs_c11; assert_equal("Power", worksheet.outputs_costs_c11); end
  def test_outputs_costs_d11; assert_in_epsilon(40.0, worksheet.outputs_costs_d11, 0.002); end
  def test_outputs_costs_f11; assert_in_epsilon(4253.150680420129, worksheet.outputs_costs_f11, 0.002); end
  def test_outputs_costs_g11; assert_in_epsilon(5054.422750099012, worksheet.outputs_costs_g11, 0.002); end
  def test_outputs_costs_h11; assert_in_epsilon(5855.694819777896, worksheet.outputs_costs_h11, 0.002); end
  def test_outputs_costs_c12; assert_equal("Total capital and operating costs", worksheet.outputs_costs_c12); end
  def test_outputs_costs_f12; assert_in_epsilon(33147.77701462512, worksheet.outputs_costs_f12, 0.002); end
  def test_outputs_costs_g12; assert_in_epsilon(44702.97314896036, worksheet.outputs_costs_g12, 0.002); end
  def test_outputs_costs_h12; assert_in_epsilon(69391.67222295882, worksheet.outputs_costs_h12, 0.002); end
  def test_outputs_costs_j713; assert_equal("2011", worksheet.outputs_costs_j713); end
  def test_outputs_costs_k713; assert_equal("2015", worksheet.outputs_costs_k713); end
  def test_outputs_costs_l713; assert_equal("2020", worksheet.outputs_costs_l713); end
  def test_outputs_costs_m713; assert_equal("2025", worksheet.outputs_costs_m713); end
  def test_outputs_costs_n713; assert_equal("2030", worksheet.outputs_costs_n713); end
  def test_outputs_costs_o713; assert_equal("2035", worksheet.outputs_costs_o713); end
  def test_outputs_costs_p713; assert_equal("2040", worksheet.outputs_costs_p713); end
  def test_outputs_costs_q713; assert_equal("2045", worksheet.outputs_costs_q713); end
  def test_outputs_costs_r713; assert_equal("2050", worksheet.outputs_costs_r713); end
  def test_outputs_costs_c714; assert_equal("Capital costs (including finance)", worksheet.outputs_costs_c714); end
  def test_outputs_costs_j714; assert_in_epsilon(16951.77326358443, worksheet.outputs_costs_j714, 0.002); end
  def test_outputs_costs_k714; assert_in_epsilon(23299.103049110483, worksheet.outputs_costs_k714, 0.002); end
  def test_outputs_costs_l714; assert_in_epsilon(29566.066172042178, worksheet.outputs_costs_l714, 0.002); end
  def test_outputs_costs_m714; assert_in_epsilon(36105.41752228791, worksheet.outputs_costs_m714, 0.002); end
  def test_outputs_costs_n714; assert_in_epsilon(41451.93617161082, worksheet.outputs_costs_n714, 0.002); end
  def test_outputs_costs_o714; assert_in_epsilon(46411.770346098434, worksheet.outputs_costs_o714, 0.002); end
  def test_outputs_costs_p714; assert_in_epsilon(52416.90743339358, worksheet.outputs_costs_p714, 0.002); end
  def test_outputs_costs_q714; assert_in_epsilon(58549.887369223885, worksheet.outputs_costs_q714, 0.002); end
  def test_outputs_costs_r714; assert_in_epsilon(65954.37593987165, worksheet.outputs_costs_r714, 0.002); end
  def test_outputs_costs_c715; assert_equal("Operating costs", worksheet.outputs_costs_c715); end
  def test_outputs_costs_j715; assert_in_epsilon(1393.1732601632948, worksheet.outputs_costs_j715, 0.002); end
  def test_outputs_costs_k715; assert_in_epsilon(1610.9530414278881, worksheet.outputs_costs_k715, 0.002); end
  def test_outputs_costs_l715; assert_in_epsilon(1858.4632548908123, worksheet.outputs_costs_l715, 0.002); end
  def test_outputs_costs_m715; assert_in_epsilon(2094.7235834812664, worksheet.outputs_costs_m715, 0.002); end
  def test_outputs_costs_n715; assert_in_epsilon(2361.1800817474013, worksheet.outputs_costs_n715, 0.002); end
  def test_outputs_costs_o715; assert_in_epsilon(2585.646861191882, worksheet.outputs_costs_o715, 0.002); end
  def test_outputs_costs_p715; assert_in_epsilon(2834.192710450317, worksheet.outputs_costs_p715, 0.002); end
  def test_outputs_costs_q715; assert_in_epsilon(3101.123717506173, worksheet.outputs_costs_q715, 0.002); end
  def test_outputs_costs_r715; assert_in_epsilon(3437.296283087189, worksheet.outputs_costs_r715, 0.002); end
  def test_outputs_costs_c716; assert_equal("Fuel costs", worksheet.outputs_costs_c716); end
  def test_outputs_costs_j716; assert_in_epsilon(2404.3397903807772, worksheet.outputs_costs_j716, 0.002); end
  def test_outputs_costs_k716; assert_in_epsilon(2682.784740447487, worksheet.outputs_costs_k716, 0.002); end
  def test_outputs_costs_l716; assert_in_epsilon(3304.4114276263717, worksheet.outputs_costs_l716, 0.002); end
  def test_outputs_costs_m716; assert_in_epsilon(3933.5934131583267, worksheet.outputs_costs_m716, 0.002); end
  def test_outputs_costs_n716; assert_in_epsilon(4636.018337576812, worksheet.outputs_costs_n716, 0.002); end
  def test_outputs_costs_o716; assert_in_epsilon(5268.839405684412, worksheet.outputs_costs_o716, 0.002); end
  def test_outputs_costs_p716; assert_in_epsilon(6009.934274516096, worksheet.outputs_costs_p716, 0.002); end
  def test_outputs_costs_q716; assert_in_epsilon(6797.990390995038, worksheet.outputs_costs_q716, 0.002); end
  def test_outputs_costs_r716; assert_in_epsilon(7610.299713318409, worksheet.outputs_costs_r716, 0.002); end
  def test_outputs_costs_c717; assert_equal("Total", worksheet.outputs_costs_c717); end
  def test_outputs_costs_j717; assert_in_epsilon(20749.2863141285, worksheet.outputs_costs_j717, 0.002); end
  def test_outputs_costs_k717; assert_in_epsilon(27592.840830985857, worksheet.outputs_costs_k717, 0.002); end
  def test_outputs_costs_l717; assert_in_epsilon(34728.94085455936, worksheet.outputs_costs_l717, 0.002); end
  def test_outputs_costs_m717; assert_in_epsilon(42133.73451892751, worksheet.outputs_costs_m717, 0.002); end
  def test_outputs_costs_n717; assert_in_epsilon(48449.13459093503, worksheet.outputs_costs_n717, 0.002); end
  def test_outputs_costs_o717; assert_in_epsilon(54266.25661297473, worksheet.outputs_costs_o717, 0.002); end
  def test_outputs_costs_p717; assert_in_epsilon(61261.034418359995, worksheet.outputs_costs_p717, 0.002); end
  def test_outputs_costs_q717; assert_in_epsilon(68449.0014777251, worksheet.outputs_costs_q717, 0.002); end
  def test_outputs_costs_r717; assert_in_epsilon(77001.97193627724, worksheet.outputs_costs_r717, 0.002); end
  def test_outputs_costs_j735; assert_equal("2011", worksheet.outputs_costs_j735); end
  def test_outputs_costs_k735; assert_equal("2015", worksheet.outputs_costs_k735); end
  def test_outputs_costs_l735; assert_equal("2020", worksheet.outputs_costs_l735); end
  def test_outputs_costs_m735; assert_equal("2025", worksheet.outputs_costs_m735); end
  def test_outputs_costs_n735; assert_equal("2030", worksheet.outputs_costs_n735); end
  def test_outputs_costs_o735; assert_equal("2035", worksheet.outputs_costs_o735); end
  def test_outputs_costs_p735; assert_equal("2040", worksheet.outputs_costs_p735); end
  def test_outputs_costs_q735; assert_equal("2045", worksheet.outputs_costs_q735); end
  def test_outputs_costs_r735; assert_equal("2050", worksheet.outputs_costs_r735); end
  def test_outputs_costs_c736; assert_equal("Capital costs (including finance)", worksheet.outputs_costs_c736); end
  def test_outputs_costs_j736; assert_in_epsilon(16935.89087928558, worksheet.outputs_costs_j736, 0.002); end
  def test_outputs_costs_k736; assert_in_epsilon(21357.697311897704, worksheet.outputs_costs_k736, 0.002); end
  def test_outputs_costs_l736; assert_in_epsilon(24499.31671458784, worksheet.outputs_costs_l736, 0.002); end
  def test_outputs_costs_m736; assert_in_epsilon(27213.552817180014, worksheet.outputs_costs_m736, 0.002); end
  def test_outputs_costs_n736; assert_in_epsilon(28118.33838310461, worksheet.outputs_costs_n736, 0.002); end
  def test_outputs_costs_o736; assert_in_epsilon(28441.3872309174, worksheet.outputs_costs_o736, 0.002); end
  def test_outputs_costs_p736; assert_in_epsilon(29320.66283145721, worksheet.outputs_costs_p736, 0.002); end
  def test_outputs_costs_q736; assert_in_epsilon(29875.01542078903, worksheet.outputs_costs_q736, 0.002); end
  def test_outputs_costs_r736; assert_in_epsilon(30871.811830983585, worksheet.outputs_costs_r736, 0.002); end
  def test_outputs_costs_c737; assert_equal("Operating costs", worksheet.outputs_costs_c737); end
  def test_outputs_costs_j737; assert_in_epsilon(1358.0457776325134, worksheet.outputs_costs_j737, 0.002); end
  def test_outputs_costs_k737; assert_in_epsilon(1516.4695594343887, worksheet.outputs_costs_k737, 0.002); end
  def test_outputs_costs_l737; assert_in_epsilon(1670.877850508225, worksheet.outputs_costs_l737, 0.002); end
  def test_outputs_costs_m737; assert_in_epsilon(1795.8486685256812, worksheet.outputs_costs_m737, 0.002); end
  def test_outputs_costs_n737; assert_in_epsilon(1928.572867484992, worksheet.outputs_costs_n737, 0.002); end
  def test_outputs_costs_o737; assert_in_epsilon(2008.4517159864329, worksheet.outputs_costs_o737, 0.002); end
  def test_outputs_costs_p737; assert_in_epsilon(2090.952187719954, worksheet.outputs_costs_p737, 0.002); end
  def test_outputs_costs_q737; assert_in_epsilon(2169.505479489398, worksheet.outputs_costs_q737, 0.002); end
  def test_outputs_costs_r737; assert_in_epsilon(2275.9651836415114, worksheet.outputs_costs_r737, 0.002); end
  def test_outputs_costs_c738; assert_equal("Fuel costs", worksheet.outputs_costs_c738); end
  def test_outputs_costs_j738; assert_in_epsilon(2404.3397903807772, worksheet.outputs_costs_j738, 0.002); end
  def test_outputs_costs_k738; assert_in_epsilon(2354.840182680595, worksheet.outputs_costs_k738, 0.002); end
  def test_outputs_costs_l738; assert_in_epsilon(2468.8061753960123, worksheet.outputs_costs_l738, 0.002); end
  def test_outputs_costs_m738; assert_in_epsilon(2518.706838715111, worksheet.outputs_costs_m738, 0.002); end
  def test_outputs_costs_n738; assert_in_epsilon(2544.8416752477006, worksheet.outputs_costs_n738, 0.002); end
  def test_outputs_costs_o738; assert_in_epsilon(2499.7564216585824, worksheet.outputs_costs_o738, 0.002); end
  def test_outputs_costs_p738; assert_in_epsilon(2462.356241538434, worksheet.outputs_costs_p738, 0.002); end
  def test_outputs_costs_q738; assert_in_epsilon(2404.626584273267, worksheet.outputs_costs_q738, 0.002); end
  def test_outputs_costs_r738; assert_in_epsilon(2380.947205546391, worksheet.outputs_costs_r738, 0.002); end
  def test_outputs_costs_c739; assert_equal("Total", worksheet.outputs_costs_c739); end
  def test_outputs_costs_j739; assert_in_epsilon(20698.27644729887, worksheet.outputs_costs_j739, 0.002); end
  def test_outputs_costs_k739; assert_in_epsilon(25229.00705401269, worksheet.outputs_costs_k739, 0.002); end
  def test_outputs_costs_l739; assert_in_epsilon(28639.00074049208, worksheet.outputs_costs_l739, 0.002); end
  def test_outputs_costs_m739; assert_in_epsilon(31528.10832442081, worksheet.outputs_costs_m739, 0.002); end
  def test_outputs_costs_n739; assert_in_epsilon(32591.752925837303, worksheet.outputs_costs_n739, 0.002); end
  def test_outputs_costs_o739; assert_in_epsilon(32949.59536856242, worksheet.outputs_costs_o739, 0.002); end
  def test_outputs_costs_p739; assert_in_epsilon(33873.9712607156, worksheet.outputs_costs_p739, 0.002); end
  def test_outputs_costs_q739; assert_in_epsilon(34449.14748455169, worksheet.outputs_costs_q739, 0.002); end
  def test_outputs_costs_r739; assert_in_epsilon(35528.72422017149, worksheet.outputs_costs_r739, 0.002); end
  def test_outputs_costs_j724; assert_equal("2011", worksheet.outputs_costs_j724); end
  def test_outputs_costs_k724; assert_equal("2015", worksheet.outputs_costs_k724); end
  def test_outputs_costs_l724; assert_equal("2020", worksheet.outputs_costs_l724); end
  def test_outputs_costs_m724; assert_equal("2025", worksheet.outputs_costs_m724); end
  def test_outputs_costs_n724; assert_equal("2030", worksheet.outputs_costs_n724); end
  def test_outputs_costs_o724; assert_equal("2035", worksheet.outputs_costs_o724); end
  def test_outputs_costs_p724; assert_equal("2040", worksheet.outputs_costs_p724); end
  def test_outputs_costs_q724; assert_equal("2045", worksheet.outputs_costs_q724); end
  def test_outputs_costs_r724; assert_equal("2050", worksheet.outputs_costs_r724); end
  def test_outputs_costs_c725; assert_equal("Capital costs (including finance)", worksheet.outputs_costs_c725); end
  def test_outputs_costs_j725; assert_in_epsilon(16941.432688962457, worksheet.outputs_costs_j725, 0.002); end
  def test_outputs_costs_k725; assert_in_epsilon(21930.43330026985, worksheet.outputs_costs_k725, 0.002); end
  def test_outputs_costs_l725; assert_in_epsilon(25990.259390511186, worksheet.outputs_costs_l725, 0.002); end
  def test_outputs_costs_m725; assert_in_epsilon(29850.964790997612, worksheet.outputs_costs_m725, 0.002); end
  def test_outputs_costs_n725; assert_in_epsilon(32121.546302167135, worksheet.outputs_costs_n725, 0.002); end
  def test_outputs_costs_o725; assert_in_epsilon(33859.12472625961, worksheet.outputs_costs_o725, 0.002); end
  def test_outputs_costs_p725; assert_in_epsilon(36365.31174095966, worksheet.outputs_costs_p725, 0.002); end
  def test_outputs_costs_q725; assert_in_epsilon(38725.455053842335, worksheet.outputs_costs_q725, 0.002); end
  def test_outputs_costs_r725; assert_in_epsilon(41847.80348765148, worksheet.outputs_costs_r725, 0.002); end
  def test_outputs_costs_c726; assert_equal("Operating costs", worksheet.outputs_costs_c726); end
  def test_outputs_costs_j726; assert_in_epsilon(1374.3853481706092, worksheet.outputs_costs_j726, 0.002); end
  def test_outputs_costs_k726; assert_in_epsilon(1562.4997439520512, worksheet.outputs_costs_k726, 0.002); end
  def test_outputs_costs_l726; assert_in_epsilon(1763.4114124598775, worksheet.outputs_costs_l726, 0.002); end
  def test_outputs_costs_m726; assert_in_epsilon(1943.976024898921, worksheet.outputs_costs_m726, 0.002); end
  def test_outputs_costs_n726; assert_in_epsilon(2143.521913692719, worksheet.outputs_costs_n726, 0.002); end
  def test_outputs_costs_o726; assert_in_epsilon(2295.6590786473275, worksheet.outputs_costs_o726, 0.002); end
  def test_outputs_costs_p726; assert_in_epsilon(2461.151330034147, worksheet.outputs_costs_p726, 0.002); end
  def test_outputs_costs_q726; assert_in_epsilon(2633.87123720448, worksheet.outputs_costs_q726, 0.002); end
  def test_outputs_costs_r726; assert_in_epsilon(2855.169661308842, worksheet.outputs_costs_r726, 0.002); end
  def test_outputs_costs_c727; assert_equal("Fuel costs", worksheet.outputs_costs_c727); end
  def test_outputs_costs_j727; assert_in_epsilon(2404.3397903807772, worksheet.outputs_costs_j727, 0.002); end
  def test_outputs_costs_k727; assert_in_epsilon(2494.375330935784, worksheet.outputs_costs_k727, 0.002); end
  def test_outputs_costs_l727; assert_in_epsilon(2823.857023999559, worksheet.outputs_costs_l727, 0.002); end
  def test_outputs_costs_m727; assert_in_epsilon(3122.1381972181975, worksheet.outputs_costs_m727, 0.002); end
  def test_outputs_costs_n727; assert_in_epsilon(3437.1549009351716, worksheet.outputs_costs_n727, 0.002); end
  def test_outputs_costs_o727; assert_in_epsilon(3685.3774987784145, worksheet.outputs_costs_o727, 0.002); end
  def test_outputs_costs_p727; assert_in_epsilon(3983.765054929481, worksheet.outputs_costs_p727, 0.002); end
  def test_outputs_costs_q727; assert_in_epsilon(4286.850970138915, worksheet.outputs_costs_q727, 0.002); end
  def test_outputs_costs_r727; assert_in_epsilon(4618.919016261377, worksheet.outputs_costs_r727, 0.002); end
  def test_outputs_costs_c728; assert_equal("Total", worksheet.outputs_costs_c728); end
  def test_outputs_costs_j728; assert_in_epsilon(20720.157827513845, worksheet.outputs_costs_j728, 0.002); end
  def test_outputs_costs_k728; assert_in_epsilon(25987.30837515769, worksheet.outputs_costs_k728, 0.002); end
  def test_outputs_costs_l728; assert_in_epsilon(30577.527826970625, worksheet.outputs_costs_l728, 0.002); end
  def test_outputs_costs_m728; assert_in_epsilon(34917.07901311473, worksheet.outputs_costs_m728, 0.002); end
  def test_outputs_costs_n728; assert_in_epsilon(37702.22311679502, worksheet.outputs_costs_n728, 0.002); end
  def test_outputs_costs_o728; assert_in_epsilon(39840.161303685345, worksheet.outputs_costs_o728, 0.002); end
  def test_outputs_costs_p728; assert_in_epsilon(42810.228125923284, worksheet.outputs_costs_p728, 0.002); end
  def test_outputs_costs_q728; assert_in_epsilon(45646.17726118573, worksheet.outputs_costs_q728, 0.002); end
  def test_outputs_costs_r728; assert_in_epsilon(49321.892165221696, worksheet.outputs_costs_r728, 0.002); end
  def test_outputs_costs_c746; assert_equal("Year", worksheet.outputs_costs_c746); end
  def test_outputs_costs_j746; assert_equal("2011", worksheet.outputs_costs_j746); end
  def test_outputs_costs_k746; assert_equal("2015", worksheet.outputs_costs_k746); end
  def test_outputs_costs_l746; assert_equal("2020", worksheet.outputs_costs_l746); end
  def test_outputs_costs_m746; assert_equal("2025", worksheet.outputs_costs_m746); end
  def test_outputs_costs_n746; assert_equal("2030", worksheet.outputs_costs_n746); end
  def test_outputs_costs_o746; assert_equal("2035", worksheet.outputs_costs_o746); end
  def test_outputs_costs_p746; assert_equal("2040", worksheet.outputs_costs_p746); end
  def test_outputs_costs_q746; assert_equal("2045", worksheet.outputs_costs_q746); end
  def test_outputs_costs_r746; assert_equal("2050", worksheet.outputs_costs_r746); end
  def test_outputs_costs_c747; assert_equal("High", worksheet.outputs_costs_c747); end
  def test_outputs_costs_j747; assert_in_epsilon(20749.2863141285, worksheet.outputs_costs_j747, 0.002); end
  def test_outputs_costs_k747; assert_in_epsilon(27592.840830985857, worksheet.outputs_costs_k747, 0.002); end
  def test_outputs_costs_l747; assert_in_epsilon(34728.94085455936, worksheet.outputs_costs_l747, 0.002); end
  def test_outputs_costs_m747; assert_in_epsilon(42133.73451892751, worksheet.outputs_costs_m747, 0.002); end
  def test_outputs_costs_n747; assert_in_epsilon(48449.13459093503, worksheet.outputs_costs_n747, 0.002); end
  def test_outputs_costs_o747; assert_in_epsilon(54266.25661297473, worksheet.outputs_costs_o747, 0.002); end
  def test_outputs_costs_p747; assert_in_epsilon(61261.034418359995, worksheet.outputs_costs_p747, 0.002); end
  def test_outputs_costs_q747; assert_in_epsilon(68449.0014777251, worksheet.outputs_costs_q747, 0.002); end
  def test_outputs_costs_r747; assert_in_epsilon(77001.97193627724, worksheet.outputs_costs_r747, 0.002); end
  def test_outputs_costs_c748; assert_equal("Point", worksheet.outputs_costs_c748); end
  def test_outputs_costs_j748; assert_in_epsilon(20720.157827513845, worksheet.outputs_costs_j748, 0.002); end
  def test_outputs_costs_k748; assert_in_epsilon(25987.30837515769, worksheet.outputs_costs_k748, 0.002); end
  def test_outputs_costs_l748; assert_in_epsilon(30577.527826970625, worksheet.outputs_costs_l748, 0.002); end
  def test_outputs_costs_m748; assert_in_epsilon(34917.07901311473, worksheet.outputs_costs_m748, 0.002); end
  def test_outputs_costs_n748; assert_in_epsilon(37702.22311679502, worksheet.outputs_costs_n748, 0.002); end
  def test_outputs_costs_o748; assert_in_epsilon(39840.161303685345, worksheet.outputs_costs_o748, 0.002); end
  def test_outputs_costs_p748; assert_in_epsilon(42810.228125923284, worksheet.outputs_costs_p748, 0.002); end
  def test_outputs_costs_q748; assert_in_epsilon(45646.17726118573, worksheet.outputs_costs_q748, 0.002); end
  def test_outputs_costs_r748; assert_in_epsilon(49321.892165221696, worksheet.outputs_costs_r748, 0.002); end
  def test_outputs_costs_c749; assert_equal("Low", worksheet.outputs_costs_c749); end
  def test_outputs_costs_j749; assert_in_epsilon(20698.27644729887, worksheet.outputs_costs_j749, 0.002); end
  def test_outputs_costs_k749; assert_in_epsilon(25229.00705401269, worksheet.outputs_costs_k749, 0.002); end
  def test_outputs_costs_l749; assert_in_epsilon(28639.00074049208, worksheet.outputs_costs_l749, 0.002); end
  def test_outputs_costs_m749; assert_in_epsilon(31528.10832442081, worksheet.outputs_costs_m749, 0.002); end
  def test_outputs_costs_n749; assert_in_epsilon(32591.752925837303, worksheet.outputs_costs_n749, 0.002); end
  def test_outputs_costs_o749; assert_in_epsilon(32949.59536856242, worksheet.outputs_costs_o749, 0.002); end
  def test_outputs_costs_p749; assert_in_epsilon(33873.9712607156, worksheet.outputs_costs_p749, 0.002); end
  def test_outputs_costs_q749; assert_in_epsilon(34449.14748455169, worksheet.outputs_costs_q749, 0.002); end
  def test_outputs_costs_r749; assert_in_epsilon(35528.72422017149, worksheet.outputs_costs_r749, 0.002); end
  def test_outputs_costs_br654; assert_in_epsilon(636.0872666372201, worksheet.outputs_costs_br654, 0.002); end
  def test_outputs_costs_br655; assert_in_epsilon(1744.6102356477863, worksheet.outputs_costs_br655, 0.002); end
  def test_outputs_costs_br656; assert_in_epsilon(618.7981912781077, worksheet.outputs_costs_br656, 0.002); end
  def test_outputs_costs_br657; assert_in_epsilon(283.9170486030375, worksheet.outputs_costs_br657, 0.002); end
  def test_outputs_costs_br658; assert_in_epsilon(109.7067213732335, worksheet.outputs_costs_br658, 0.002); end
  def test_outputs_costs_br659; assert_in_epsilon(20.39218850993517, worksheet.outputs_costs_br659, 0.002); end
  def test_outputs_costs_br660; assert_in_epsilon(2.656655864050795, worksheet.outputs_costs_br660, 0.002); end
  def test_outputs_costs_br669; assert_in_epsilon(778.74817511705, worksheet.outputs_costs_br669, 0.002); end
  def test_outputs_costs_br670; assert_in_epsilon(2768.108853878927, worksheet.outputs_costs_br670, 0.002); end
  def test_outputs_costs_br671; assert_in_epsilon(697.2427140870151, worksheet.outputs_costs_br671, 0.002); end
  def test_outputs_costs_br672; assert_in_epsilon(322.82249626391535, worksheet.outputs_costs_br672, 0.002); end
  def test_outputs_costs_br673; assert_in_epsilon(131.3810725056135, worksheet.outputs_costs_br673, 0.002); end
  def test_outputs_costs_br674; assert_in_epsilon(23.745145467457064, worksheet.outputs_costs_br674, 0.002); end
  def test_outputs_costs_br675; assert_in_epsilon(3.2304196542504866, worksheet.outputs_costs_br675, 0.002); end
  def test_outputs_costs_br699; assert_in_epsilon(453.4813037830378, worksheet.outputs_costs_br699, 0.002); end
  def test_outputs_costs_br700; assert_in_epsilon(1100.1851797244753, worksheet.outputs_costs_br700, 0.002); end
  def test_outputs_costs_br701; assert_in_epsilon(488.6515966178752, worksheet.outputs_costs_br701, 0.002); end
  def test_outputs_costs_br702; assert_in_epsilon(270.9485660494116, worksheet.outputs_costs_br702, 0.002); end
  def test_outputs_costs_br703; assert_in_epsilon(102.48193766244016, worksheet.outputs_costs_br703, 0.002); end
  def test_outputs_costs_br704; assert_in_epsilon(19.274536190761204, worksheet.outputs_costs_br704, 0.002); end
  def test_outputs_costs_br705; assert_in_epsilon(2.4654012673175645, worksheet.outputs_costs_br705, 0.002); end
  def test_outputs_costs_br684; assert_in_epsilon(636.0872666372201, worksheet.outputs_costs_br684, 0.002); end
  def test_outputs_costs_br685; assert_in_epsilon(1744.6102356477863, worksheet.outputs_costs_br685, 0.002); end
  def test_outputs_costs_br686; assert_in_epsilon(618.7981912781077, worksheet.outputs_costs_br686, 0.002); end
  def test_outputs_costs_br687; assert_in_epsilon(283.9170486030375, worksheet.outputs_costs_br687, 0.002); end
  def test_outputs_costs_br688; assert_in_epsilon(109.7067213732335, worksheet.outputs_costs_br688, 0.002); end
  def test_outputs_costs_br689; assert_in_epsilon(20.39218850993517, worksheet.outputs_costs_br689, 0.002); end
  def test_outputs_costs_br690; assert_in_epsilon(2.656655864050795, worksheet.outputs_costs_br690, 0.002); end
  def test_outputs_costs_c18; assert_equal("Cost", worksheet.outputs_costs_c18); end
  def test_outputs_costs_e18; assert_equal("Chosen cost", worksheet.outputs_costs_e18); end
  def test_outputs_costs_f18; assert_equal("Low", worksheet.outputs_costs_f18); end
  def test_outputs_costs_g18; assert_equal("Point", worksheet.outputs_costs_g18); end
  def test_outputs_costs_h18; assert_equal("High", worksheet.outputs_costs_h18); end
  def test_outputs_costs_c19; assert_equal("Fuel", worksheet.outputs_costs_c19); end
  def test_outputs_costs_e19; assert_in_epsilon(3416.1683079133713, worksheet.outputs_costs_e19, 0.002); end
  def test_outputs_costs_f19; assert_in_epsilon(2437.488521295319, worksheet.outputs_costs_f19, 0.002); end
  def test_outputs_costs_g19; assert_in_epsilon(3416.1683079133713, worksheet.outputs_costs_g19, 0.002); end
  def test_outputs_costs_h19; assert_in_epsilon(4725.278876974229, worksheet.outputs_costs_h19, 0.002); end
  def test_outputs_costs_c25; assert_equal("Scenario", worksheet.outputs_costs_c25); end
  def test_outputs_costs_j25; assert_equal("2011", worksheet.outputs_costs_j25); end
  def test_outputs_costs_k25; assert_equal("2015", worksheet.outputs_costs_k25); end
  def test_outputs_costs_l25; assert_equal("2020", worksheet.outputs_costs_l25); end
  def test_outputs_costs_m25; assert_equal("2025", worksheet.outputs_costs_m25); end
  def test_outputs_costs_n25; assert_equal("2030", worksheet.outputs_costs_n25); end
  def test_outputs_costs_o25; assert_equal("2035", worksheet.outputs_costs_o25); end
  def test_outputs_costs_p25; assert_equal("2040", worksheet.outputs_costs_p25); end
  def test_outputs_costs_q25; assert_equal("2045", worksheet.outputs_costs_q25); end
  def test_outputs_costs_r25; assert_equal("2050", worksheet.outputs_costs_r25); end
  def test_outputs_costs_c26; assert_equal("Global GDP", worksheet.outputs_costs_c26); end
  def test_outputs_costs_j26; assert_in_epsilon(67175.5376197859, worksheet.outputs_costs_j26, 0.002); end
  def test_outputs_costs_k26; assert_in_epsilon(76371.7262877051, worksheet.outputs_costs_k26, 0.002); end
  def test_outputs_costs_l26; assert_in_epsilon(91376.4988938779, worksheet.outputs_costs_l26, 0.002); end
  def test_outputs_costs_m26; assert_in_epsilon(107214.416539545, worksheet.outputs_costs_m26, 0.002); end
  def test_outputs_costs_n26; assert_in_epsilon(124607.262631566, worksheet.outputs_costs_n26, 0.002); end
  def test_outputs_costs_o26; assert_in_epsilon(143612.795634057, worksheet.outputs_costs_o26, 0.002); end
  def test_outputs_costs_p26; assert_in_epsilon(163745.90956641, worksheet.outputs_costs_p26, 0.002); end
  def test_outputs_costs_q26; assert_in_epsilon(184019.80808994902, worksheet.outputs_costs_q26, 0.002); end
  def test_outputs_costs_r26; assert_in_epsilon(204480.970522059, worksheet.outputs_costs_r26, 0.002); end
  def test_outputs_costs_j27; assert_in_epsilon(409.0, worksheet.outputs_costs_j27, 0.002); end
  def test_outputs_costs_nb38; assert_in_epsilon(171.16693489029342, worksheet.outputs_costs_nb38, 0.002); end
  def test_outputs_costs_nb39; assert_in_epsilon(371.92502005428497, worksheet.outputs_costs_nb39, 0.002); end
  def test_outputs_costs_nb40; assert_in_epsilon(314.10099167143443, worksheet.outputs_costs_nb40, 0.002); end
  def test_outputs_costs_nb41; assert_in_epsilon(4844.2071523759405, worksheet.outputs_costs_nb41, 0.002); end
  def test_outputs_costs_nb42; assert_in_epsilon(113.04900718006498, worksheet.outputs_costs_nb42, 0.002); end
  def test_outputs_costs_nb43; assert_in_epsilon(501.43603973198196, worksheet.outputs_costs_nb43, 0.002); end
  def test_outputs_costs_nb44; assert_in_epsilon(251.59592198808127, worksheet.outputs_costs_nb44, 0.002); end
  def test_outputs_costs_nb45; assert_in_delta(0.0, (worksheet.outputs_costs_nb45||0), 0.002); end
  def test_outputs_costs_nb46; assert_in_epsilon(809.0189139154145, worksheet.outputs_costs_nb46, 0.002); end
  def test_outputs_costs_nb47; assert_in_epsilon(32.5955936597932, worksheet.outputs_costs_nb47, 0.002); end
  def test_outputs_costs_nb48; assert_in_epsilon(41.167493231696525, worksheet.outputs_costs_nb48, 0.002); end
  def test_outputs_costs_nb49; assert_in_epsilon(12.127201906124625, worksheet.outputs_costs_nb49, 0.002); end
  def test_outputs_costs_nb50; assert_in_delta(0.0, (worksheet.outputs_costs_nb50||0), 0.002); end
  def test_outputs_costs_nb51; assert_in_epsilon(9.350511815786167, worksheet.outputs_costs_nb51, 0.002); end
  def test_outputs_costs_nb52; assert_in_epsilon(84.63173311711745, worksheet.outputs_costs_nb52, 0.002); end
  def test_outputs_costs_nb53; assert_in_epsilon(66.60609652548784, worksheet.outputs_costs_nb53, 0.002); end
  def test_outputs_costs_nb54; assert_in_epsilon(203.56848628972173, worksheet.outputs_costs_nb54, 0.002); end
  def test_outputs_costs_nb55; assert_in_epsilon(165.09088577085814, worksheet.outputs_costs_nb55, 0.002); end
  def test_outputs_costs_nb56; assert_in_epsilon(2052.974010143529, worksheet.outputs_costs_nb56, 0.002); end
  def test_outputs_costs_nb57; assert_in_epsilon(50.186632324613726, worksheet.outputs_costs_nb57, 0.002); end
  def test_outputs_costs_nb58; assert_in_epsilon(187.31012129676992, worksheet.outputs_costs_nb58, 0.002); end
  def test_outputs_costs_nb59; assert_in_epsilon(89.82028215051474, worksheet.outputs_costs_nb59, 0.002); end
  def test_outputs_costs_nb60; assert_in_delta(0.0, (worksheet.outputs_costs_nb60||0), 0.002); end
  def test_outputs_costs_nb61; assert_in_epsilon(133.69164605535147, worksheet.outputs_costs_nb61, 0.002); end
  def test_outputs_costs_nb62; assert_in_epsilon(5.313825644123052, worksheet.outputs_costs_nb62, 0.002); end
  def test_outputs_costs_nb63; assert_in_epsilon(6.695204741239072, worksheet.outputs_costs_nb63, 0.002); end
  def test_outputs_costs_nb64; assert_in_epsilon(1.9203288873252649, worksheet.outputs_costs_nb64, 0.002); end
  def test_outputs_costs_nb65; assert_in_delta(0.0, (worksheet.outputs_costs_nb65||0), 0.002); end
  def test_outputs_costs_nb66; assert_in_epsilon(60.968651876266435, worksheet.outputs_costs_nb66, 0.002); end
  def test_outputs_costs_nb67; assert_in_epsilon(124.09926242278257, worksheet.outputs_costs_nb67, 0.002); end
  def test_outputs_costs_nb68; assert_in_epsilon(363.8938483798761, worksheet.outputs_costs_nb68, 0.002); end
  def test_outputs_costs_nb69; assert_in_delta(0.0, (worksheet.outputs_costs_nb69||0), 0.002); end
  def test_outputs_costs_nb70; assert_in_epsilon(1771.5599336643745, worksheet.outputs_costs_nb70, 0.002); end
  def test_outputs_costs_nb71; assert_in_delta(0.0, (worksheet.outputs_costs_nb71||0), 0.002); end
  def test_outputs_costs_nb72; assert_in_epsilon(81.65491549458389, worksheet.outputs_costs_nb72, 0.002); end
  def test_outputs_costs_nb73; assert_in_epsilon(83.46765469289224, worksheet.outputs_costs_nb73, 0.002); end
  def test_outputs_costs_nb74; assert_in_epsilon(1001.3711476105127, worksheet.outputs_costs_nb74, 0.002); end
  def test_outputs_costs_nb75; assert_in_epsilon(69.99019738107597, worksheet.outputs_costs_nb75, 0.002); end
  def test_outputs_costs_nb76; assert_in_epsilon(91.91128988777685, worksheet.outputs_costs_nb76, 0.002); end
  def test_outputs_costs_nb77; assert_in_delta(0.4197091692639975, worksheet.outputs_costs_nb77, 0.002); end
  def test_outputs_costs_nb78; assert_in_delta(0.4174590422882326, worksheet.outputs_costs_nb78, 0.002); end
  def test_outputs_costs_nb79; assert_in_epsilon(834.24221331326, worksheet.outputs_costs_nb79, 0.002); end
  def test_outputs_costs_nb80; assert_in_epsilon(75.09850327781592, worksheet.outputs_costs_nb80, 0.002); end
  def test_outputs_costs_nb81; assert_in_epsilon(91.82698708429024, worksheet.outputs_costs_nb81, 0.002); end
  def test_outputs_costs_nb82; assert_in_delta(0.1977990751804706, worksheet.outputs_costs_nb82, 0.002); end
  def test_outputs_costs_nb83; assert_in_delta(0.38088309224395345, worksheet.outputs_costs_nb83, 0.002); end
  def test_outputs_costs_nb84; assert_in_epsilon(137.62761241552403, worksheet.outputs_costs_nb84, 0.002); end
  def test_outputs_costs_nb85; assert_in_epsilon(206.13097540621087, worksheet.outputs_costs_nb85, 0.002); end
  def test_outputs_costs_nb86; assert_in_epsilon(344.9162475462317, worksheet.outputs_costs_nb86, 0.002); end
  def test_outputs_costs_nb87; assert_in_epsilon(10.08516511743225, worksheet.outputs_costs_nb87, 0.002); end
  def test_outputs_costs_nb88; assert_in_epsilon(307.81347135199985, worksheet.outputs_costs_nb88, 0.002); end
  def test_outputs_costs_nb89; assert_in_epsilon(27.94384321645773, worksheet.outputs_costs_nb89, 0.002); end
  def test_outputs_costs_nb90; assert_in_epsilon(34.182723458688024, worksheet.outputs_costs_nb90, 0.002); end
  def test_outputs_costs_nb91; assert_in_delta(0.0003510418936593062, worksheet.outputs_costs_nb91, 0.002); end
  def test_outputs_costs_nb92; assert_in_delta(0.1482424912571756, worksheet.outputs_costs_nb92, 0.002); end
  def test_outputs_costs_nb93; assert_in_epsilon(11.158638592748243, worksheet.outputs_costs_nb93, 0.002); end
  def test_outputs_costs_nb94; assert_in_epsilon(16.846610250547144, worksheet.outputs_costs_nb94, 0.002); end
  def test_outputs_costs_nb95; assert_in_epsilon(1845.5540779412897, worksheet.outputs_costs_nb95, 0.002); end
  def test_outputs_costs_nb96; assert_in_delta(0.0, (worksheet.outputs_costs_nb96||0), 0.002); end
  def test_outputs_costs_nb97; assert_in_epsilon(149.34707005050512, worksheet.outputs_costs_nb97, 0.002); end
  def test_outputs_costs_nb98; assert_in_delta(0.3681632553313568, worksheet.outputs_costs_nb98, 0.002); end
  def test_outputs_costs_nb99; assert_in_epsilon(24698.598686099496, worksheet.outputs_costs_nb99, 0.002); end
  def test_outputs_costs_nb100; assert_in_epsilon(2134.220599831966, worksheet.outputs_costs_nb100, 0.002); end
  def test_outputs_costs_nb101; assert_in_epsilon(5525.080407539014, worksheet.outputs_costs_nb101, 0.002); end
  def test_outputs_costs_nb102; assert_in_epsilon(45.9907322602361, worksheet.outputs_costs_nb102, 0.002); end
  def test_outputs_costs_nb103; assert_in_epsilon(306.79988650277596, worksheet.outputs_costs_nb103, 0.002); end
  def test_outputs_costs_nb104; assert_in_epsilon(1282.1785860533455, worksheet.outputs_costs_nb104, 0.002); end
  def test_outputs_costs_nb105; assert_in_epsilon(137.48032944099054, worksheet.outputs_costs_nb105, 0.002); end
  def test_outputs_costs_nb106; assert_in_epsilon(150.72638185276696, worksheet.outputs_costs_nb106, 0.002); end
  def test_outputs_costs_nb107; assert_in_epsilon(26.0390361874694, worksheet.outputs_costs_nb107, 0.002); end
  def test_outputs_costs_nb108; assert_in_epsilon(3.7336026536510127, worksheet.outputs_costs_nb108, 0.002); end
  def test_outputs_costs_nb109; assert_in_epsilon(227.94652171484734, worksheet.outputs_costs_nb109, 0.002); end
  def test_outputs_costs_nb110; assert_in_epsilon(62.168688298049105, worksheet.outputs_costs_nb110, 0.002); end
  def test_outputs_costs_nb111; assert_in_epsilon(184.82992694735879, worksheet.outputs_costs_nb111, 0.002); end
  def test_outputs_costs_nb112; assert_in_epsilon(26.25966297159266, worksheet.outputs_costs_nb112, 0.002); end
  def test_outputs_costs_nb113; assert_in_epsilon(69.0642155838394, worksheet.outputs_costs_nb113, 0.002); end
  def test_outputs_costs_nb114; assert_in_epsilon(6.291945769406434, worksheet.outputs_costs_nb114, 0.002); end
  def test_outputs_costs_nb115; assert_in_delta(0.0, (worksheet.outputs_costs_nb115||0), 0.002); end
  def test_outputs_costs_nb116; assert_in_epsilon(633.2821113962096, worksheet.outputs_costs_nb116, 0.002); end
  def test_outputs_costs_nb117; assert_in_epsilon(22.591403591388893, worksheet.outputs_costs_nb117, 0.002); end
  def test_outputs_costs_nb118; assert_in_epsilon(52.056133925307215, worksheet.outputs_costs_nb118, 0.002); end
  def test_outputs_costs_nb119; assert_in_epsilon(145.95622313212257, worksheet.outputs_costs_nb119, 0.002); end
  def test_outputs_costs_nb120; assert_in_epsilon(5.560720609970565, worksheet.outputs_costs_nb120, 0.002); end
  def test_outputs_costs_nb121; assert_in_epsilon(12.810166056233976, worksheet.outputs_costs_nb121, 0.002); end
  def test_outputs_costs_nb122; assert_in_epsilon(129.56664684336673, worksheet.outputs_costs_nb122, 0.002); end
  def test_outputs_costs_nb123; assert_in_epsilon(213.9131534980457, worksheet.outputs_costs_nb123, 0.002); end
  def test_outputs_costs_nb124; assert_in_epsilon(273.71848209616115, worksheet.outputs_costs_nb124, 0.002); end
  def test_outputs_costs_nb125; assert_in_epsilon(449.7345238776102, worksheet.outputs_costs_nb125, 0.002); end
  def test_outputs_costs_nb126; assert_in_epsilon(120.69315890124243, worksheet.outputs_costs_nb126, 0.002); end
  def test_outputs_costs_nb127; assert_in_epsilon(121.95807394086549, worksheet.outputs_costs_nb127, 0.002); end
  def test_outputs_costs_nb128; assert_in_delta(0.4812180723207777, worksheet.outputs_costs_nb128, 0.002); end
  def test_outputs_costs_nb129; assert_in_epsilon(395.56283396224, worksheet.outputs_costs_nb129, 0.002); end
  def test_outputs_costs_nb130; assert_in_epsilon(25.5833612983685, worksheet.outputs_costs_nb130, 0.002); end
  def test_outputs_costs_nb131; assert_in_epsilon(1.3075454343851964, worksheet.outputs_costs_nb131, 0.002); end
  def test_outputs_costs_nb132; assert_in_epsilon(22.794857113767662, worksheet.outputs_costs_nb132, 0.002); end
  def test_outputs_costs_nb133; assert_in_epsilon(18.30317738954858, worksheet.outputs_costs_nb133, 0.002); end
  def test_outputs_costs_nb134; assert_in_epsilon(55.237920042297915, worksheet.outputs_costs_nb134, 0.002); end
  def test_outputs_costs_nb135; assert_in_delta(0.0, (worksheet.outputs_costs_nb135||0), 0.002); end
  def test_outputs_costs_nb136; assert_in_epsilon(339.8255782359237, worksheet.outputs_costs_nb136, 0.002); end
  def test_outputs_costs_nb137; assert_in_epsilon(239.96877270390576, worksheet.outputs_costs_nb137, 0.002); end
  def test_outputs_costs_nb138; assert_in_epsilon(327.07230312572, worksheet.outputs_costs_nb138, 0.002); end
  def test_outputs_costs_nb139; assert_in_epsilon(175.85430532842088, worksheet.outputs_costs_nb139, 0.002); end
  def test_outputs_costs_nb140; assert_in_epsilon(1163.5169388529553, worksheet.outputs_costs_nb140, 0.002); end
  def test_outputs_costs_nb141; assert_in_epsilon(1771.0682255627564, worksheet.outputs_costs_nb141, 0.002); end
  def test_outputs_costs_nb142; assert_in_epsilon(64.14056740792535, worksheet.outputs_costs_nb142, 0.002); end
  def test_outputs_costs_nb143; assert_in_epsilon(29.582717362418364, worksheet.outputs_costs_nb143, 0.002); end
  def test_outputs_costs_nb144; assert_in_epsilon(80.19352871065105, worksheet.outputs_costs_nb144, 0.002); end
  def test_outputs_costs_nb145; assert_in_epsilon(21.663928336519746, worksheet.outputs_costs_nb145, 0.002); end
  def test_outputs_costs_nb146; assert_in_epsilon(232.8648614121768, worksheet.outputs_costs_nb146, 0.002); end
  def test_outputs_costs_nb147; assert_in_epsilon(396.7975928608555, worksheet.outputs_costs_nb147, 0.002); end
  def test_outputs_costs_nb148; assert_in_epsilon(13.48466134801448, worksheet.outputs_costs_nb148, 0.002); end
  def test_outputs_costs_nb149; assert_in_epsilon(52.77511753199989, worksheet.outputs_costs_nb149, 0.002); end
  def test_outputs_costs_nb150; assert_in_epsilon(154.23218468510953, worksheet.outputs_costs_nb150, 0.002); end
  def test_outputs_costs_nb151; assert_in_epsilon(143.86853827132686, worksheet.outputs_costs_nb151, 0.002); end
  def test_outputs_costs_nb152; assert_in_epsilon(23.728870418142975, worksheet.outputs_costs_nb152, 0.002); end
  def test_outputs_costs_nb153; assert_in_epsilon(3.696336537292656, worksheet.outputs_costs_nb153, 0.002); end
  def test_outputs_costs_nb154; assert_in_epsilon(8.147209169497865, worksheet.outputs_costs_nb154, 0.002); end
  def test_outputs_costs_nb155; assert_in_epsilon(4.514114874773746, worksheet.outputs_costs_nb155, 0.002); end
  def test_outputs_costs_nb156; assert_in_epsilon(9.14606813808529, worksheet.outputs_costs_nb156, 0.002); end
  def test_outputs_costs_nb157; assert_in_epsilon(37.71728033482103, worksheet.outputs_costs_nb157, 0.002); end
  def test_outputs_costs_nb158; assert_in_epsilon(35.276175267203, worksheet.outputs_costs_nb158, 0.002); end
  def test_outputs_costs_nb159; assert_in_epsilon(1.3699946537299867, worksheet.outputs_costs_nb159, 0.002); end
  def test_outputs_costs_nb160; assert_in_epsilon(23.57230612519552, worksheet.outputs_costs_nb160, 0.002); end
  def test_outputs_costs_nb161; assert_in_epsilon(2.9467226723099893, worksheet.outputs_costs_nb161, 0.002); end
  def test_outputs_costs_nb162; assert_in_epsilon(6.697957764203364, worksheet.outputs_costs_nb162, 0.002); end
  def test_outputs_costs_nb163; assert_in_delta(0.23688345318647522, worksheet.outputs_costs_nb163, 0.002); end
  def test_outputs_costs_nb164; assert_in_epsilon(2.5410875570560125, worksheet.outputs_costs_nb164, 0.002); end
  def test_outputs_costs_nb165; assert_in_delta(0.22908739044941034, worksheet.outputs_costs_nb165, 0.002); end
  def test_outputs_costs_nb166; assert_in_epsilon(10.163892640458553, worksheet.outputs_costs_nb166, 0.002); end
  def test_outputs_costs_nb167; assert_in_epsilon(40.65557056183421, worksheet.outputs_costs_nb167, 0.002); end
  def test_outputs_costs_nb168; assert_in_epsilon(26.680824107248952, worksheet.outputs_costs_nb168, 0.002); end
  def test_outputs_costs_nb169; assert_in_epsilon(106.72329642899581, worksheet.outputs_costs_nb169, 0.002); end
  def test_outputs_costs_nb170; assert_in_epsilon(4.515568586309428, worksheet.outputs_costs_nb170, 0.002); end
  def test_outputs_costs_nb171; assert_in_epsilon(12.366209467739923, worksheet.outputs_costs_nb171, 0.002); end
  def test_outputs_costs_nb172; assert_in_delta(0.41805407151141366, worksheet.outputs_costs_nb172, 0.002); end
  def test_outputs_costs_nb173; assert_in_epsilon(6.0439140848905275, worksheet.outputs_costs_nb173, 0.002); end
  def test_outputs_costs_nb174; assert_in_epsilon(36.15394219974902, worksheet.outputs_costs_nb174, 0.002); end
  def test_outputs_costs_nb175; assert_in_epsilon(30.550979612218814, worksheet.outputs_costs_nb175, 0.002); end
  def test_outputs_costs_nb176; assert_in_delta(0.0, (worksheet.outputs_costs_nb176||0), 0.002); end
  def test_outputs_costs_nb177; assert_in_delta(0.35780261685697484, worksheet.outputs_costs_nb177, 0.002); end
  def test_outputs_costs_nb178; assert_in_delta(0.28522061549539535, worksheet.outputs_costs_nb178, 0.002); end
  def test_outputs_costs_nb179; assert_in_epsilon(9.812887606767385, worksheet.outputs_costs_nb179, 0.002); end
  def test_outputs_costs_nb180; assert_in_delta(0.0037402053045011946, worksheet.outputs_costs_nb180, 0.002); end
  def test_outputs_costs_nb181; assert_in_delta(0.01198193341861251, worksheet.outputs_costs_nb181, 0.002); end
  def test_outputs_costs_nb182; assert_in_epsilon(22.430107780962953, worksheet.outputs_costs_nb182, 0.002); end
  def test_outputs_costs_nb183; assert_in_epsilon(1.4094032191530799, worksheet.outputs_costs_nb183, 0.002); end
  def test_outputs_costs_nb184; assert_in_epsilon(7.964513280154369, worksheet.outputs_costs_nb184, 0.002); end
  def test_outputs_costs_nb185; assert_in_epsilon(3.2247517911906387, worksheet.outputs_costs_nb185, 0.002); end
  def test_outputs_costs_nb186; assert_in_epsilon(935.2147945167626, worksheet.outputs_costs_nb186, 0.002); end
  def test_outputs_costs_nb187; assert_in_epsilon(28.821109353299434, worksheet.outputs_costs_nb187, 0.002); end
  def test_outputs_costs_nb188; assert_in_epsilon(7.427959610801773, worksheet.outputs_costs_nb188, 0.002); end
  def test_outputs_costs_nb189; assert_in_epsilon(7.748772622196139, worksheet.outputs_costs_nb189, 0.002); end
  def test_outputs_costs_nb190; assert_in_epsilon(14.829433395778107, worksheet.outputs_costs_nb190, 0.002); end
  def test_outputs_costs_nb191; assert_in_epsilon(18.038510479137237, worksheet.outputs_costs_nb191, 0.002); end
  def test_outputs_costs_nb192; assert_in_epsilon(7.327025497361715, worksheet.outputs_costs_nb192, 0.002); end
  def test_outputs_costs_nb193; assert_in_epsilon(123.31840725921097, worksheet.outputs_costs_nb193, 0.002); end
  def test_outputs_costs_nb194; assert_in_epsilon(38.8349186949772, worksheet.outputs_costs_nb194, 0.002); end
  def test_outputs_costs_nb195; assert_in_epsilon(-4.079933092468417, worksheet.outputs_costs_nb195, 0.002); end
  def test_outputs_costs_nb196; assert_in_epsilon(4.899938203319011, worksheet.outputs_costs_nb196, 0.002); end
  def test_outputs_costs_nb197; assert_in_epsilon(2.1561728159547315, worksheet.outputs_costs_nb197, 0.002); end
  def test_outputs_costs_nb198; assert_in_epsilon(16.324663201516394, worksheet.outputs_costs_nb198, 0.002); end
  def test_outputs_costs_nb199; assert_in_delta(0.18093004963908044, worksheet.outputs_costs_nb199, 0.002); end
  def test_outputs_costs_nb200; assert_in_delta(0.013157045408854215, worksheet.outputs_costs_nb200, 0.002); end
  def test_outputs_costs_nb201; assert_in_delta(0.0018078165727436557, worksheet.outputs_costs_nb201, 0.002); end
  def test_outputs_costs_nb202; assert_in_delta(0.0016054754359398516, worksheet.outputs_costs_nb202, 0.002); end
  def test_outputs_costs_nb203; assert_in_delta(0.026306982574063168, worksheet.outputs_costs_nb203, 0.002); end
  def test_outputs_costs_nb204; assert_in_epsilon(31.940147971183897, worksheet.outputs_costs_nb204, 0.002); end
  def test_outputs_costs_nb205; assert_in_epsilon(34.62826996363587, worksheet.outputs_costs_nb205, 0.002); end
  def test_outputs_costs_nb206; assert_in_epsilon(7.279678116945579, worksheet.outputs_costs_nb206, 0.002); end
  def test_outputs_costs_nb207; assert_in_epsilon(34.02773869711868, worksheet.outputs_costs_nb207, 0.002); end
  def test_outputs_costs_nb208; assert_in_epsilon(51.56082506863464, worksheet.outputs_costs_nb208, 0.002); end
  def test_outputs_costs_nb209; assert_in_epsilon(637.2579826766184, worksheet.outputs_costs_nb209, 0.002); end
  def test_outputs_costs_nb210; assert_in_epsilon(152.92160670810205, worksheet.outputs_costs_nb210, 0.002); end
  def test_outputs_costs_nb211; assert_in_epsilon(382.73320523195025, worksheet.outputs_costs_nb211, 0.002); end
  def test_outputs_costs_nb212; assert_in_epsilon(2210.8903638720503, worksheet.outputs_costs_nb212, 0.002); end
  def test_outputs_costs_nb213; assert_in_epsilon(41.44087926708124, worksheet.outputs_costs_nb213, 0.002); end
  def test_outputs_costs_nb214; assert_in_epsilon(304.20705977497937, worksheet.outputs_costs_nb214, 0.002); end
  def test_outputs_costs_nb215; assert_in_epsilon(842.7643722266661, worksheet.outputs_costs_nb215, 0.002); end
  def test_outputs_costs_nb216; assert_in_epsilon(194.9046708724639, worksheet.outputs_costs_nb216, 0.002); end
  def test_outputs_costs_nb217; assert_in_epsilon(6.830853537359419, worksheet.outputs_costs_nb217, 0.002); end
  def test_outputs_costs_nb218; assert_in_epsilon(2.982833078426335, worksheet.outputs_costs_nb218, 0.002); end
  def test_outputs_costs_nb219; assert_in_delta(0.0, (worksheet.outputs_costs_nb219||0), 0.002); end
  def test_outputs_costs_nb220; assert_in_delta(0.0, (worksheet.outputs_costs_nb220||0), 0.002); end
  def test_outputs_costs_nb221; assert_in_delta(0.0, (worksheet.outputs_costs_nb221||0), 0.002); end
  def test_outputs_costs_nb222; assert_in_epsilon(1.5372254398064262, worksheet.outputs_costs_nb222, 0.002); end
  def test_outputs_costs_nb223; assert_in_delta(0.0, (worksheet.outputs_costs_nb223||0), 0.002); end
  def test_outputs_costs_nb224; assert_in_epsilon(340.881326259252, worksheet.outputs_costs_nb224, 0.002); end
  def test_outputs_costs_nb225; assert_in_epsilon(105.23501266473936, worksheet.outputs_costs_nb225, 0.002); end
  def test_outputs_costs_nb226; assert_in_epsilon(40.55224883073059, worksheet.outputs_costs_nb226, 0.002); end
  def test_outputs_costs_nb227; assert_in_epsilon(853.5199342274198, worksheet.outputs_costs_nb227, 0.002); end
  def test_outputs_costs_nb228; assert_in_epsilon(9.709967018760075, worksheet.outputs_costs_nb228, 0.002); end
  def test_outputs_costs_nb229; assert_in_epsilon(25.820217869359592, worksheet.outputs_costs_nb229, 0.002); end
  def test_outputs_costs_nb230; assert_in_epsilon(86.8292007794889, worksheet.outputs_costs_nb230, 0.002); end
  def test_outputs_costs_nb231; assert_in_epsilon(35.95286225779378, worksheet.outputs_costs_nb231, 0.002); end
  def test_outputs_costs_nb232; assert_in_epsilon(48.536284185965016, worksheet.outputs_costs_nb232, 0.002); end
  def test_outputs_costs_nb233; assert_in_epsilon(167.44469567550036, worksheet.outputs_costs_nb233, 0.002); end
  def test_outputs_costs_nb449; assert_in_epsilon(116.56709349479098, worksheet.outputs_costs_nb449, 0.002); end
  def test_outputs_costs_nb450; assert_in_epsilon(251.6271504233443, worksheet.outputs_costs_nb450, 0.002); end
  def test_outputs_costs_nb451; assert_in_epsilon(211.99554028779045, worksheet.outputs_costs_nb451, 0.002); end
  def test_outputs_costs_nb452; assert_in_epsilon(2765.5885385344745, worksheet.outputs_costs_nb452, 0.002); end
  def test_outputs_costs_nb453; assert_in_epsilon(76.37294086863193, worksheet.outputs_costs_nb453, 0.002); end
  def test_outputs_costs_nb454; assert_in_epsilon(266.2910854206573, worksheet.outputs_costs_nb454, 0.002); end
  def test_outputs_costs_nb455; assert_in_epsilon(130.2929798671439, worksheet.outputs_costs_nb455, 0.002); end
  def test_outputs_costs_nb456; assert_in_delta(0.0, (worksheet.outputs_costs_nb456||0), 0.002); end
  def test_outputs_costs_nb457; assert_in_epsilon(554.7747034908616, worksheet.outputs_costs_nb457, 0.002); end
  def test_outputs_costs_nb458; assert_in_epsilon(22.29390149113765, worksheet.outputs_costs_nb458, 0.002); end
  def test_outputs_costs_nb459; assert_in_epsilon(28.80545600300456, worksheet.outputs_costs_nb459, 0.002); end
  def test_outputs_costs_nb460; assert_in_epsilon(8.931986195102663, worksheet.outputs_costs_nb460, 0.002); end
  def test_outputs_costs_nb461; assert_in_delta(0.0, (worksheet.outputs_costs_nb461||0), 0.002); end
  def test_outputs_costs_nb462; assert_in_epsilon(7.02955834541004, worksheet.outputs_costs_nb462, 0.002); end
  def test_outputs_costs_nb463; assert_in_epsilon(63.65184794856575, worksheet.outputs_costs_nb463, 0.002); end
  def test_outputs_costs_nb464; assert_in_epsilon(45.611305348974724, worksheet.outputs_costs_nb464, 0.002); end
  def test_outputs_costs_nb465; assert_in_epsilon(137.78132338440315, worksheet.outputs_costs_nb465, 0.002); end
  def test_outputs_costs_nb466; assert_in_epsilon(111.4890912601894, worksheet.outputs_costs_nb466, 0.002); end
  def test_outputs_costs_nb467; assert_in_epsilon(1388.5022703248874, worksheet.outputs_costs_nb467, 0.002); end
  def test_outputs_costs_nb468; assert_in_epsilon(33.904242324210195, worksheet.outputs_costs_nb468, 0.002); end
  def test_outputs_costs_nb469; assert_in_epsilon(127.17711802095947, worksheet.outputs_costs_nb469, 0.002); end
  def test_outputs_costs_nb470; assert_in_epsilon(61.37513442537017, worksheet.outputs_costs_nb470, 0.002); end
  def test_outputs_costs_nb471; assert_in_delta(0.0, (worksheet.outputs_costs_nb471||0), 0.002); end
  def test_outputs_costs_nb472; assert_in_epsilon(91.56143550201168, worksheet.outputs_costs_nb472, 0.002); end
  def test_outputs_costs_nb473; assert_in_epsilon(3.630012682244342, worksheet.outputs_costs_nb473, 0.002); end
  def test_outputs_costs_nb474; assert_in_epsilon(4.674628174090337, worksheet.outputs_costs_nb474, 0.002); end
  def test_outputs_costs_nb475; assert_in_epsilon(1.4129633725346267, worksheet.outputs_costs_nb475, 0.002); end
  def test_outputs_costs_nb476; assert_in_delta(0.0, (worksheet.outputs_costs_nb476||0), 0.002); end
  def test_outputs_costs_nb477; assert_in_epsilon(45.58076729168283, worksheet.outputs_costs_nb477, 0.002); end
  def test_outputs_costs_nb478; assert_in_epsilon(92.79004703276019, worksheet.outputs_costs_nb478, 0.002); end
  def test_outputs_costs_nb479; assert_in_epsilon(254.11284263986462, worksheet.outputs_costs_nb479, 0.002); end
  def test_outputs_costs_nb480; assert_in_delta(0.0, (worksheet.outputs_costs_nb480||0), 0.002); end
  def test_outputs_costs_nb481; assert_in_epsilon(1229.9137688309897, worksheet.outputs_costs_nb481, 0.002); end
  def test_outputs_costs_nb482; assert_in_delta(0.0, (worksheet.outputs_costs_nb482||0), 0.002); end
  def test_outputs_costs_nb483; assert_in_epsilon(57.34364017687719, worksheet.outputs_costs_nb483, 0.002); end
  def test_outputs_costs_nb484; assert_in_epsilon(58.37128507004636, worksheet.outputs_costs_nb484, 0.002); end
  def test_outputs_costs_nb485; assert_in_epsilon(677.750720394979, worksheet.outputs_costs_nb485, 0.002); end
  def test_outputs_costs_nb486; assert_in_epsilon(47.28429572606742, worksheet.outputs_costs_nb486, 0.002); end
  def test_outputs_costs_nb487; assert_in_epsilon(62.445646908387815, worksheet.outputs_costs_nb487, 0.002); end
  def test_outputs_costs_nb488; assert_in_delta(0.32139517553098795, worksheet.outputs_costs_nb488, 0.002); end
  def test_outputs_costs_nb489; assert_in_delta(0.34001119202616337, worksheet.outputs_costs_nb489, 0.002); end
  def test_outputs_costs_nb490; assert_in_epsilon(565.226073528081, worksheet.outputs_costs_nb490, 0.002); end
  def test_outputs_costs_nb491; assert_in_epsilon(50.777661732534625, worksheet.outputs_costs_nb491, 0.002); end
  def test_outputs_costs_nb492; assert_in_epsilon(62.64197715185111, worksheet.outputs_costs_nb492, 0.002); end
  def test_outputs_costs_nb493; assert_in_delta(0.14983920915493354, worksheet.outputs_costs_nb493, 0.002); end
  def test_outputs_costs_nb494; assert_in_delta(0.3102481741142105, worksheet.outputs_costs_nb494, 0.002); end
  def test_outputs_costs_nb495; assert_in_epsilon(103.0076070847376, worksheet.outputs_costs_nb495, 0.002); end
  def test_outputs_costs_nb496; assert_in_epsilon(154.45527935854057, worksheet.outputs_costs_nb496, 0.002); end
  def test_outputs_costs_nb497; assert_in_epsilon(274.7348308789374, worksheet.outputs_costs_nb497, 0.002); end
  def test_outputs_costs_nb498; assert_in_epsilon(9.654502291135644, worksheet.outputs_costs_nb498, 0.002); end
  def test_outputs_costs_nb499; assert_in_epsilon(208.61286573735552, worksheet.outputs_costs_nb499, 0.002); end
  def test_outputs_costs_nb500; assert_in_epsilon(18.9001086052125, worksheet.outputs_costs_nb500, 0.002); end
  def test_outputs_costs_nb501; assert_in_epsilon(23.330241894761027, worksheet.outputs_costs_nb501, 0.002); end
  def test_outputs_costs_nb502; assert_in_delta(0.0002659651010903937, worksheet.outputs_costs_nb502, 0.002); end
  def test_outputs_costs_nb503; assert_in_delta(0.12077161626807748, worksheet.outputs_costs_nb503, 0.002); end
  def test_outputs_costs_nb504; assert_in_epsilon(8.37723946836969, worksheet.outputs_costs_nb504, 0.002); end
  def test_outputs_costs_nb505; assert_in_epsilon(12.659131983955362, worksheet.outputs_costs_nb505, 0.002); end
  def test_outputs_costs_nb506; assert_in_epsilon(1457.5642995821936, worksheet.outputs_costs_nb506, 0.002); end
  def test_outputs_costs_nb507; assert_in_delta(0.0, (worksheet.outputs_costs_nb507||0), 0.002); end
  def test_outputs_costs_nb508; assert_in_epsilon(105.29894279149173, worksheet.outputs_costs_nb508, 0.002); end
  def test_outputs_costs_nb509; assert_in_delta(0.295465224239521, worksheet.outputs_costs_nb509, 0.002); end
  def test_outputs_costs_nb510; assert_in_epsilon(6108.403491914746, worksheet.outputs_costs_nb510, 0.002); end
  def test_outputs_costs_nb511; assert_in_epsilon(676.3499352593608, worksheet.outputs_costs_nb511, 0.002); end
  def test_outputs_costs_nb512; assert_in_epsilon(1438.8592206019148, worksheet.outputs_costs_nb512, 0.002); end
  def test_outputs_costs_nb513; assert_in_epsilon(33.976298551980804, worksheet.outputs_costs_nb513, 0.002); end
  def test_outputs_costs_nb514; assert_in_epsilon(211.4671722039406, worksheet.outputs_costs_nb514, 0.002); end
  def test_outputs_costs_nb515; assert_in_epsilon(882.8319986444601, worksheet.outputs_costs_nb515, 0.002); end
  def test_outputs_costs_nb516; assert_in_epsilon(93.37991872136436, worksheet.outputs_costs_nb516, 0.002); end
  def test_outputs_costs_nb517; assert_in_epsilon(102.10103880397003, worksheet.outputs_costs_nb517, 0.002); end
  def test_outputs_costs_nb518; assert_in_epsilon(17.852574516234558, worksheet.outputs_costs_nb518, 0.002); end
  def test_outputs_costs_nb519; assert_in_epsilon(2.4890684357673423, worksheet.outputs_costs_nb519, 0.002); end
  def test_outputs_costs_nb520; assert_in_epsilon(164.9548317458233, worksheet.outputs_costs_nb520, 0.002); end
  def test_outputs_costs_nb521; assert_in_epsilon(42.95205114856948, worksheet.outputs_costs_nb521, 0.002); end
  def test_outputs_costs_nb522; assert_in_epsilon(127.4647100425221, worksheet.outputs_costs_nb522, 0.002); end
  def test_outputs_costs_nb523; assert_in_epsilon(17.852360352835937, worksheet.outputs_costs_nb523, 0.002); end
  def test_outputs_costs_nb524; assert_in_epsilon(46.8112996058574, worksheet.outputs_costs_nb524, 0.002); end
  def test_outputs_costs_nb525; assert_in_epsilon(4.329093560939724, worksheet.outputs_costs_nb525, 0.002); end
  def test_outputs_costs_nb526; assert_in_delta(0.0, (worksheet.outputs_costs_nb526||0), 0.002); end
  def test_outputs_costs_nb527; assert_in_epsilon(429.6332846866211, worksheet.outputs_costs_nb527, 0.002); end
  def test_outputs_costs_nb528; assert_in_epsilon(15.291773842185263, worksheet.outputs_costs_nb528, 0.002); end
  def test_outputs_costs_nb529; assert_in_epsilon(35.23650571953122, worksheet.outputs_costs_nb529, 0.002); end
  def test_outputs_costs_nb530; assert_in_epsilon(99.17585341162297, worksheet.outputs_costs_nb530, 0.002); end
  def test_outputs_costs_nb531; assert_in_epsilon(3.768446609537321, worksheet.outputs_costs_nb531, 0.002); end
  def test_outputs_costs_nb532; assert_in_epsilon(8.681449831400807, worksheet.outputs_costs_nb532, 0.002); end
  def test_outputs_costs_nb533; assert_in_epsilon(93.20811993348542, worksheet.outputs_costs_nb533, 0.002); end
  def test_outputs_costs_nb534; assert_in_epsilon(147.46675379226616, worksheet.outputs_costs_nb534, 0.002); end
  def test_outputs_costs_nb535; assert_in_epsilon(189.09533106630192, worksheet.outputs_costs_nb535, 0.002); end
  def test_outputs_costs_nb536; assert_in_epsilon(324.20661244717326, worksheet.outputs_costs_nb536, 0.002); end
  def test_outputs_costs_nb537; assert_in_epsilon(83.16322516825197, worksheet.outputs_costs_nb537, 0.002); end
  def test_outputs_costs_nb538; assert_in_epsilon(83.86810582515655, worksheet.outputs_costs_nb538, 0.002); end
  def test_outputs_costs_nb539; assert_in_delta(0.32081204821385184, worksheet.outputs_costs_nb539, 0.002); end
  def test_outputs_costs_nb540; assert_in_epsilon(285.7766425189217, worksheet.outputs_costs_nb540, 0.002); end
  def test_outputs_costs_nb541; assert_in_epsilon(17.658496426022555, worksheet.outputs_costs_nb541, 0.002); end
  def test_outputs_costs_nb542; assert_in_delta(0.9066271769422574, worksheet.outputs_costs_nb542, 0.002); end
  def test_outputs_costs_nb543; assert_in_epsilon(16.25809010478993, worksheet.outputs_costs_nb543, 0.002); end
  def test_outputs_costs_nb544; assert_in_epsilon(12.614477541463586, worksheet.outputs_costs_nb544, 0.002); end
  def test_outputs_costs_nb545; assert_in_epsilon(38.07471355331408, worksheet.outputs_costs_nb545, 0.002); end
  def test_outputs_costs_nb546; assert_in_delta(0.0, (worksheet.outputs_costs_nb546||0), 0.002); end
  def test_outputs_costs_nb547; assert_in_epsilon(230.1115637058198, worksheet.outputs_costs_nb547, 0.002); end
  def test_outputs_costs_nb548; assert_in_epsilon(162.40001269388418, worksheet.outputs_costs_nb548, 0.002); end
  def test_outputs_costs_nb549; assert_in_epsilon(221.30507238504154, worksheet.outputs_costs_nb549, 0.002); end
  def test_outputs_costs_nb550; assert_in_epsilon(118.89304743779844, worksheet.outputs_costs_nb550, 0.002); end
  def test_outputs_costs_nb551; assert_in_epsilon(780.1085779727796, worksheet.outputs_costs_nb551, 0.002); end
  def test_outputs_costs_nb552; assert_in_epsilon(1187.4225457473167, worksheet.outputs_costs_nb552, 0.002); end
  def test_outputs_costs_nb553; assert_in_epsilon(43.449616094884185, worksheet.outputs_costs_nb553, 0.002); end
  def test_outputs_costs_nb554; assert_in_epsilon(19.838862444847386, worksheet.outputs_costs_nb554, 0.002); end
  def test_outputs_costs_nb555; assert_in_epsilon(54.26563354433152, worksheet.outputs_costs_nb555, 0.002); end
  def test_outputs_costs_nb556; assert_in_epsilon(14.852785688658074, worksheet.outputs_costs_nb556, 0.002); end
  def test_outputs_costs_nb557; assert_in_epsilon(156.14515327766105, worksheet.outputs_costs_nb557, 0.002); end
  def test_outputs_costs_nb558; assert_in_epsilon(266.09889204840124, worksheet.outputs_costs_nb558, 0.002); end
  def test_outputs_costs_nb559; assert_in_epsilon(9.215984498695436, worksheet.outputs_costs_nb559, 0.002); end
  def test_outputs_costs_nb560; assert_in_epsilon(36.15543198380884, worksheet.outputs_costs_nb560, 0.002); end
  def test_outputs_costs_nb561; assert_in_epsilon(105.61438026397622, worksheet.outputs_costs_nb561, 0.002); end
  def test_outputs_costs_nb562; assert_in_epsilon(96.43330107026017, worksheet.outputs_costs_nb562, 0.002); end
  def test_outputs_costs_nb563; assert_in_epsilon(16.180558860348395, worksheet.outputs_costs_nb563, 0.002); end
  def test_outputs_costs_nb564; assert_in_epsilon(2.5252626006880425, worksheet.outputs_costs_nb564, 0.002); end
  def test_outputs_costs_nb565; assert_in_epsilon(5.594998713770229, worksheet.outputs_costs_nb565, 0.002); end
  def test_outputs_costs_nb566; assert_in_epsilon(3.09272823497985, worksheet.outputs_costs_nb566, 0.002); end
  def test_outputs_costs_nb567; assert_in_epsilon(6.131535403897494, worksheet.outputs_costs_nb567, 0.002); end
  def test_outputs_costs_nb568; assert_in_epsilon(25.761509478506476, worksheet.outputs_costs_nb568, 0.002); end
  def test_outputs_costs_nb569; assert_in_epsilon(23.559664756057888, worksheet.outputs_costs_nb569, 0.002); end
  def test_outputs_costs_nb570; assert_in_delta(0.9183210978633487, worksheet.outputs_costs_nb570, 0.002); end
  def test_outputs_costs_nb571; assert_in_epsilon(15.799568662338642, worksheet.outputs_costs_nb571, 0.002); end
  def test_outputs_costs_nb572; assert_in_epsilon(2.0132877617408185, worksheet.outputs_costs_nb572, 0.002); end
  def test_outputs_costs_nb573; assert_in_epsilon(4.476639899464739, worksheet.outputs_costs_nb573, 0.002); end
  def test_outputs_costs_nb574; assert_in_delta(0.15885536700225578, worksheet.outputs_costs_nb574, 0.002); end
  def test_outputs_costs_nb575; assert_in_epsilon(1.7040548577301955, worksheet.outputs_costs_nb575, 0.002); end
  def test_outputs_costs_nb576; assert_in_delta(0.15683013847238134, worksheet.outputs_costs_nb576, 0.002); end
  def test_outputs_costs_nb577; assert_in_epsilon(7.265849066535193, worksheet.outputs_costs_nb577, 0.002); end
  def test_outputs_costs_nb578; assert_in_epsilon(29.06339626614077, worksheet.outputs_costs_nb578, 0.002); end
  def test_outputs_costs_nb579; assert_in_epsilon(19.428049556344032, worksheet.outputs_costs_nb579, 0.002); end
  def test_outputs_costs_nb580; assert_in_epsilon(77.71219822537613, worksheet.outputs_costs_nb580, 0.002); end
  def test_outputs_costs_nb581; assert_in_epsilon(3.0734157361130334, worksheet.outputs_costs_nb581, 0.002); end
  def test_outputs_costs_nb582; assert_in_epsilon(8.471346617984661, worksheet.outputs_costs_nb582, 0.002); end
  def test_outputs_costs_nb583; assert_in_delta(0.28261324965077905, worksheet.outputs_costs_nb583, 0.002); end
  def test_outputs_costs_nb584; assert_in_epsilon(4.036701463569193, worksheet.outputs_costs_nb584, 0.002); end
  def test_outputs_costs_nb585; assert_in_epsilon(24.130748695612787, worksheet.outputs_costs_nb585, 0.002); end
  def test_outputs_costs_nb586; assert_in_epsilon(20.39278779399575, worksheet.outputs_costs_nb586, 0.002); end
  def test_outputs_costs_nb587; assert_in_delta(0.0, (worksheet.outputs_costs_nb587||0), 0.002); end
  def test_outputs_costs_nb588; assert_in_delta(0.2389317916082533, worksheet.outputs_costs_nb588, 0.002); end
  def test_outputs_costs_nb589; assert_in_delta(0.1901470769969303, worksheet.outputs_costs_nb589, 0.002); end
  def test_outputs_costs_nb590; assert_in_epsilon(6.552989733411391, worksheet.outputs_costs_nb590, 0.002); end
  def test_outputs_costs_nb591; assert_in_delta(0.0027211652947285686, worksheet.outputs_costs_nb591, 0.002); end
  def test_outputs_costs_nb592; assert_in_delta(0.008108082987936893, worksheet.outputs_costs_nb592, 0.002); end
  def test_outputs_costs_nb593; assert_in_epsilon(14.958082057249788, worksheet.outputs_costs_nb593, 0.002); end
  def test_outputs_costs_nb594; assert_in_delta(0.9506818234336349, worksheet.outputs_costs_nb594, 0.002); end
  def test_outputs_costs_nb595; assert_in_epsilon(5.388658602127814, worksheet.outputs_costs_nb595, 0.002); end
  def test_outputs_costs_nb596; assert_in_epsilon(2.200215621588986, worksheet.outputs_costs_nb596, 0.002); end
  def test_outputs_costs_nb597; assert_in_epsilon(634.6364630967322, worksheet.outputs_costs_nb597, 0.002); end
  def test_outputs_costs_nb598; assert_in_epsilon(9.122062531354345, worksheet.outputs_costs_nb598, 0.002); end
  def test_outputs_costs_nb599; assert_in_epsilon(2.347797772242762, worksheet.outputs_costs_nb599, 0.002); end
  def test_outputs_costs_nb600; assert_in_epsilon(3.1084949035366263, worksheet.outputs_costs_nb600, 0.002); end
  def test_outputs_costs_nb601; assert_in_epsilon(2.797558329031987, worksheet.outputs_costs_nb601, 0.002); end
  def test_outputs_costs_nb602; assert_in_epsilon(3.3438512739167017, worksheet.outputs_costs_nb602, 0.002); end
  def test_outputs_costs_nb603; assert_in_epsilon(3.688969271249253, worksheet.outputs_costs_nb603, 0.002); end
  def test_outputs_costs_nb604; assert_in_epsilon(86.0150575650477, worksheet.outputs_costs_nb604, 0.002); end
  def test_outputs_costs_nb605; assert_in_epsilon(27.08930033280368, worksheet.outputs_costs_nb605, 0.002); end
  def test_outputs_costs_nb606; assert_in_epsilon(-2.8459576225124463, worksheet.outputs_costs_nb606, 0.002); end
  def test_outputs_costs_nb607; assert_in_epsilon(1.796819962348017, worksheet.outputs_costs_nb607, 0.002); end
  def test_outputs_costs_nb608; assert_in_delta(0.6198781179792547, worksheet.outputs_costs_nb608, 0.002); end
  def test_outputs_costs_nb609; assert_in_epsilon(8.494546190693896, worksheet.outputs_costs_nb609, 0.002); end
  def test_outputs_costs_nb610; assert_in_delta(0.07255222617798854, worksheet.outputs_costs_nb610, 0.002); end
  def test_outputs_costs_nb611; assert_in_delta(0.0031672516890125235, worksheet.outputs_costs_nb611, 0.002); end
  def test_outputs_costs_nb612; assert_in_delta(0.0008102610532042643, worksheet.outputs_costs_nb612, 0.002); end
  def test_outputs_costs_nb613; assert_in_delta(0.0007537498933881892, worksheet.outputs_costs_nb613, 0.002); end
  def test_outputs_costs_nb614; assert_in_delta(0.015618864947942021, worksheet.outputs_costs_nb614, 0.002); end
  def test_outputs_costs_nb615; assert_in_epsilon(16.032292755778442, worksheet.outputs_costs_nb615, 0.002); end
  def test_outputs_costs_nb616; assert_in_epsilon(17.081899729911527, worksheet.outputs_costs_nb616, 0.002); end
  def test_outputs_costs_nb617; assert_in_epsilon(3.4582923005499104, worksheet.outputs_costs_nb617, 0.002); end
  def test_outputs_costs_nb618; assert_in_epsilon(11.00533463101199, worksheet.outputs_costs_nb618, 0.002); end
  def test_outputs_costs_nb619; assert_in_epsilon(24.974202200074917, worksheet.outputs_costs_nb619, 0.002); end
  def test_outputs_costs_nb620; assert_in_epsilon(256.83978347088095, worksheet.outputs_costs_nb620, 0.002); end
  def test_outputs_costs_nb621; assert_in_epsilon(118.27097941116305, worksheet.outputs_costs_nb621, 0.002); end
  def test_outputs_costs_nb622; assert_in_epsilon(275.69912473489626, worksheet.outputs_costs_nb622, 0.002); end
  def test_outputs_costs_nb623; assert_in_epsilon(1553.0667624052294, worksheet.outputs_costs_nb623, 0.002); end
  def test_outputs_costs_nb624; assert_in_epsilon(28.76247776033469, worksheet.outputs_costs_nb624, 0.002); end
  def test_outputs_costs_nb625; assert_in_epsilon(209.4491182627131, worksheet.outputs_costs_nb625, 0.002); end
  def test_outputs_costs_nb626; assert_in_epsilon(571.2662932970065, worksheet.outputs_costs_nb626, 0.002); end
  def test_outputs_costs_nb627; assert_in_epsilon(143.26957389375568, worksheet.outputs_costs_nb627, 0.002); end
  def test_outputs_costs_nb628; assert_in_epsilon(5.964453646195006, worksheet.outputs_costs_nb628, 0.002); end
  def test_outputs_costs_nb629; assert_in_epsilon(2.352689056761987, worksheet.outputs_costs_nb629, 0.002); end
  def test_outputs_costs_nb630; assert_in_delta(0.0, (worksheet.outputs_costs_nb630||0), 0.002); end
  def test_outputs_costs_nb631; assert_in_delta(0.0, (worksheet.outputs_costs_nb631||0), 0.002); end
  def test_outputs_costs_nb632; assert_in_delta(0.0, (worksheet.outputs_costs_nb632||0), 0.002); end
  def test_outputs_costs_nb633; assert_in_epsilon(1.078755745090536, worksheet.outputs_costs_nb633, 0.002); end
  def test_outputs_costs_nb634; assert_in_delta(0.0, (worksheet.outputs_costs_nb634||0), 0.002); end
  def test_outputs_costs_nb635; assert_in_epsilon(274.3192579518429, worksheet.outputs_costs_nb635, 0.002); end
  def test_outputs_costs_nb636; assert_in_epsilon(72.38786328670611, worksheet.outputs_costs_nb636, 0.002); end
  def test_outputs_costs_nb637; assert_in_epsilon(28.14147973773245, worksheet.outputs_costs_nb637, 0.002); end
  def test_outputs_costs_nb638; assert_in_epsilon(706.2509757529257, worksheet.outputs_costs_nb638, 0.002); end
  def test_outputs_costs_nb639; assert_in_epsilon(6.788149051897553, worksheet.outputs_costs_nb639, 0.002); end
  def test_outputs_costs_nb640; assert_in_epsilon(17.66577666981854, worksheet.outputs_costs_nb640, 0.002); end
  def test_outputs_costs_nb641; assert_in_epsilon(61.689863535443145, worksheet.outputs_costs_nb641, 0.002); end
  def test_outputs_costs_nb642; assert_in_epsilon(26.712582870947493, worksheet.outputs_costs_nb642, 0.002); end
  def test_outputs_costs_nb643; assert_in_epsilon(35.01129607172801, worksheet.outputs_costs_nb643, 0.002); end
  def test_outputs_costs_nb644; assert_in_epsilon(115.00320727794102, worksheet.outputs_costs_nb644, 0.002); end
  def test_outputs_costs_nb242; assert_in_epsilon(143.8670141925422, worksheet.outputs_costs_nb242, 0.002); end
  def test_outputs_costs_nb243; assert_in_epsilon(311.77608523881463, worksheet.outputs_costs_nb243, 0.002); end
  def test_outputs_costs_nb244; assert_in_epsilon(263.04826597961244, worksheet.outputs_costs_nb244, 0.002); end
  def test_outputs_costs_nb245; assert_in_epsilon(3881.2171980300473, worksheet.outputs_costs_nb245, 0.002); end
  def test_outputs_costs_nb246; assert_in_epsilon(94.71097402434846, worksheet.outputs_costs_nb246, 0.002); end
  def test_outputs_costs_nb247; assert_in_epsilon(353.9252059303799, worksheet.outputs_costs_nb247, 0.002); end
  def test_outputs_costs_nb248; assert_in_epsilon(170.31783001286854, worksheet.outputs_costs_nb248, 0.002); end
  def test_outputs_costs_nb249; assert_in_delta(0.0, (worksheet.outputs_costs_nb249||0), 0.002); end
  def test_outputs_costs_nb250; assert_in_epsilon(681.896808703138, worksheet.outputs_costs_nb250, 0.002); end
  def test_outputs_costs_nb251; assert_in_epsilon(27.444747575465428, worksheet.outputs_costs_nb251, 0.002); end
  def test_outputs_costs_nb252; assert_in_epsilon(34.986474617350545, worksheet.outputs_costs_nb252, 0.002); end
  def test_outputs_costs_nb253; assert_in_epsilon(10.529594050613646, worksheet.outputs_costs_nb253, 0.002); end
  def test_outputs_costs_nb254; assert_in_delta(0.0, (worksheet.outputs_costs_nb254||0), 0.002); end
  def test_outputs_costs_nb255; assert_in_epsilon(8.1900350805981, worksheet.outputs_costs_nb255, 0.002); end
  def test_outputs_costs_nb256; assert_in_epsilon(74.1417905328416, worksheet.outputs_costs_nb256, 0.002); end
  def test_outputs_costs_nb257; assert_in_epsilon(56.10870093723129, worksheet.outputs_costs_nb257, 0.002); end
  def test_outputs_costs_nb258; assert_in_epsilon(170.67490483706243, worksheet.outputs_costs_nb258, 0.002); end
  def test_outputs_costs_nb259; assert_in_epsilon(138.28998851552376, worksheet.outputs_costs_nb259, 0.002); end
  def test_outputs_costs_nb260; assert_in_epsilon(1720.7381402342082, worksheet.outputs_costs_nb260, 0.002); end
  def test_outputs_costs_nb261; assert_in_epsilon(42.045437324411964, worksheet.outputs_costs_nb261, 0.002); end
  def test_outputs_costs_nb262; assert_in_epsilon(157.2436196588647, worksheet.outputs_costs_nb262, 0.002); end
  def test_outputs_costs_nb263; assert_in_epsilon(75.59770828794245, worksheet.outputs_costs_nb263, 0.002); end
  def test_outputs_costs_nb264; assert_in_delta(0.0, (worksheet.outputs_costs_nb264||0), 0.002); end
  def test_outputs_costs_nb265; assert_in_epsilon(112.62654077868157, worksheet.outputs_costs_nb265, 0.002); end
  def test_outputs_costs_nb266; assert_in_epsilon(4.4719191631836965, worksheet.outputs_costs_nb266, 0.002); end
  def test_outputs_costs_nb267; assert_in_epsilon(5.684916457664705, worksheet.outputs_costs_nb267, 0.002); end
  def test_outputs_costs_nb268; assert_in_epsilon(1.6666461299299458, worksheet.outputs_costs_nb268, 0.002); end
  def test_outputs_costs_nb269; assert_in_delta(0.0, (worksheet.outputs_costs_nb269||0), 0.002); end
  def test_outputs_costs_nb270; assert_in_epsilon(53.274709583974634, worksheet.outputs_costs_nb270, 0.002); end
  def test_outputs_costs_nb271; assert_in_epsilon(108.4446547277714, worksheet.outputs_costs_nb271, 0.002); end
  def test_outputs_costs_nb272; assert_in_epsilon(309.0033455098703, worksheet.outputs_costs_nb272, 0.002); end
  def test_outputs_costs_nb273; assert_in_delta(0.0, (worksheet.outputs_costs_nb273||0), 0.002); end
  def test_outputs_costs_nb274; assert_in_epsilon(1500.7368512476824, worksheet.outputs_costs_nb274, 0.002); end
  def test_outputs_costs_nb275; assert_in_delta(0.0, (worksheet.outputs_costs_nb275||0), 0.002); end
  def test_outputs_costs_nb276; assert_in_epsilon(69.49927783573054, worksheet.outputs_costs_nb276, 0.002); end
  def test_outputs_costs_nb277; assert_in_epsilon(70.91946988146931, worksheet.outputs_costs_nb277, 0.002); end
  def test_outputs_costs_nb278; assert_in_epsilon(839.5609340027459, worksheet.outputs_costs_nb278, 0.002); end
  def test_outputs_costs_nb279; assert_in_epsilon(58.63724655357169, worksheet.outputs_costs_nb279, 0.002); end
  def test_outputs_costs_nb280; assert_in_epsilon(77.17846839808234, worksheet.outputs_costs_nb280, 0.002); end
  def test_outputs_costs_nb281; assert_in_delta(0.3705521723974928, worksheet.outputs_costs_nb281, 0.002); end
  def test_outputs_costs_nb282; assert_in_delta(0.3787351171571979, worksheet.outputs_costs_nb282, 0.002); end
  def test_outputs_costs_nb283; assert_in_epsilon(699.7341434206705, worksheet.outputs_costs_nb283, 0.002); end
  def test_outputs_costs_nb284; assert_in_epsilon(62.93808250517528, worksheet.outputs_costs_nb284, 0.002); end
  def test_outputs_costs_nb285; assert_in_epsilon(77.23448211807067, worksheet.outputs_costs_nb285, 0.002); end
  def test_outputs_costs_nb286; assert_in_delta(0.173819142167702, worksheet.outputs_costs_nb286, 0.002); end
  def test_outputs_costs_nb287; assert_in_delta(0.34556563317908195, worksheet.outputs_costs_nb287, 0.002); end
  def test_outputs_costs_nb288; assert_in_epsilon(120.31760975013083, worksheet.outputs_costs_nb288, 0.002); end
  def test_outputs_costs_nb289; assert_in_epsilon(180.29312738237573, worksheet.outputs_costs_nb289, 0.002); end
  def test_outputs_costs_nb290; assert_in_epsilon(309.82553921258454, worksheet.outputs_costs_nb290, 0.002); end
  def test_outputs_costs_nb291; assert_in_epsilon(9.869833704283948, worksheet.outputs_costs_nb291, 0.002); end
  def test_outputs_costs_nb292; assert_in_epsilon(258.2131685446777, worksheet.outputs_costs_nb292, 0.002); end
  def test_outputs_costs_nb293; assert_in_epsilon(23.421975910835112, worksheet.outputs_costs_nb293, 0.002); end
  def test_outputs_costs_nb294; assert_in_epsilon(28.756482676724527, worksheet.outputs_costs_nb294, 0.002); end
  def test_outputs_costs_nb295; assert_in_delta(0.00030850349737485003, worksheet.outputs_costs_nb295, 0.002); end
  def test_outputs_costs_nb296; assert_in_delta(0.1345070537626265, worksheet.outputs_costs_nb296, 0.002); end
  def test_outputs_costs_nb297; assert_in_epsilon(9.767939030558967, worksheet.outputs_costs_nb297, 0.002); end
  def test_outputs_costs_nb298; assert_in_epsilon(14.752871117251253, worksheet.outputs_costs_nb298, 0.002); end
  def test_outputs_costs_nb299; assert_in_epsilon(1651.5591887617416, worksheet.outputs_costs_nb299, 0.002); end
  def test_outputs_costs_nb300; assert_in_delta(0.0, (worksheet.outputs_costs_nb300||0), 0.002); end
  def test_outputs_costs_nb301; assert_in_epsilon(127.32300642099844, worksheet.outputs_costs_nb301, 0.002); end
  def test_outputs_costs_nb302; assert_in_delta(0.33181423978543895, worksheet.outputs_costs_nb302, 0.002); end
  def test_outputs_costs_nb303; assert_in_epsilon(10149.750273259258, worksheet.outputs_costs_nb303, 0.002); end
  def test_outputs_costs_nb304; assert_in_epsilon(949.7006848667241, worksheet.outputs_costs_nb304, 0.002); end
  def test_outputs_costs_nb305; assert_in_epsilon(2606.3509882982294, worksheet.outputs_costs_nb305, 0.002); end
  def test_outputs_costs_nb306; assert_in_epsilon(39.98351540610845, worksheet.outputs_costs_nb306, 0.002); end
  def test_outputs_costs_nb307; assert_in_epsilon(259.1335293533583, worksheet.outputs_costs_nb307, 0.002); end
  def test_outputs_costs_nb308; assert_in_epsilon(1082.505292348903, worksheet.outputs_costs_nb308, 0.002); end
  def test_outputs_costs_nb309; assert_in_epsilon(115.43012408117745, worksheet.outputs_costs_nb309, 0.002); end
  def test_outputs_costs_nb310; assert_in_epsilon(126.4137103283685, worksheet.outputs_costs_nb310, 0.002); end
  def test_outputs_costs_nb311; assert_in_epsilon(21.94580535185198, worksheet.outputs_costs_nb311, 0.002); end
  def test_outputs_costs_nb312; assert_in_epsilon(3.1113355447091773, worksheet.outputs_costs_nb312, 0.002); end
  def test_outputs_costs_nb313; assert_in_epsilon(196.45067673033532, worksheet.outputs_costs_nb313, 0.002); end
  def test_outputs_costs_nb314; assert_in_epsilon(52.5603697233093, worksheet.outputs_costs_nb314, 0.002); end
  def test_outputs_costs_nb315; assert_in_epsilon(156.1473184949404, worksheet.outputs_costs_nb315, 0.002); end
  def test_outputs_costs_nb316; assert_in_epsilon(22.0560116622143, worksheet.outputs_costs_nb316, 0.002); end
  def test_outputs_costs_nb317; assert_in_epsilon(57.93775759484841, worksheet.outputs_costs_nb317, 0.002); end
  def test_outputs_costs_nb318; assert_in_epsilon(5.310519665173079, worksheet.outputs_costs_nb318, 0.002); end
  def test_outputs_costs_nb319; assert_in_delta(0.0, (worksheet.outputs_costs_nb319||0), 0.002); end
  def test_outputs_costs_nb320; assert_in_epsilon(531.4576980414154, worksheet.outputs_costs_nb320, 0.002); end
  def test_outputs_costs_nb321; assert_in_epsilon(18.94158871678708, worksheet.outputs_costs_nb321, 0.002); end
  def test_outputs_costs_nb322; assert_in_epsilon(43.64631982241922, worksheet.outputs_costs_nb322, 0.002); end
  def test_outputs_costs_nb323; assert_in_epsilon(122.56603827187277, worksheet.outputs_costs_nb323, 0.002); end
  def test_outputs_costs_nb324; assert_in_epsilon(4.664583609753943, worksheet.outputs_costs_nb324, 0.002); end
  def test_outputs_costs_nb325; assert_in_epsilon(10.745807943817393, worksheet.outputs_costs_nb325, 0.002); end
  def test_outputs_costs_nb326; assert_in_epsilon(111.38738338842609, worksheet.outputs_costs_nb326, 0.002); end
  def test_outputs_costs_nb327; assert_in_epsilon(180.6899536451559, worksheet.outputs_costs_nb327, 0.002); end
  def test_outputs_costs_nb328; assert_in_epsilon(231.40690658123157, worksheet.outputs_costs_nb328, 0.002); end
  def test_outputs_costs_nb329; assert_in_epsilon(386.9705681623917, worksheet.outputs_costs_nb329, 0.002); end
  def test_outputs_costs_nb330; assert_in_epsilon(101.92819203474718, worksheet.outputs_costs_nb330, 0.002); end
  def test_outputs_costs_nb331; assert_in_epsilon(102.91308988301103, worksheet.outputs_costs_nb331, 0.002); end
  def test_outputs_costs_nb332; assert_in_delta(0.40101506026731476, worksheet.outputs_costs_nb332, 0.002); end
  def test_outputs_costs_nb333; assert_in_epsilon(340.66973824058084, worksheet.outputs_costs_nb333, 0.002); end
  def test_outputs_costs_nb334; assert_in_epsilon(21.620928862195527, worksheet.outputs_costs_nb334, 0.002); end
  def test_outputs_costs_nb335; assert_in_epsilon(1.1070863056637268, worksheet.outputs_costs_nb335, 0.002); end
  def test_outputs_costs_nb336; assert_in_epsilon(19.526473609278796, worksheet.outputs_costs_nb336, 0.002); end
  def test_outputs_costs_nb337; assert_in_epsilon(15.458827465506085, worksheet.outputs_costs_nb337, 0.002); end
  def test_outputs_costs_nb338; assert_in_epsilon(46.656316797806, worksheet.outputs_costs_nb338, 0.002); end
  def test_outputs_costs_nb339; assert_in_delta(0.0, (worksheet.outputs_costs_nb339||0), 0.002); end
  def test_outputs_costs_nb340; assert_in_epsilon(284.9685709708718, worksheet.outputs_costs_nb340, 0.002); end
  def test_outputs_costs_nb341; assert_in_epsilon(201.18439269889498, worksheet.outputs_costs_nb341, 0.002); end
  def test_outputs_costs_nb342; assert_in_epsilon(274.1886877553808, worksheet.outputs_costs_nb342, 0.002); end
  def test_outputs_costs_nb343; assert_in_epsilon(147.37367638310968, worksheet.outputs_costs_nb343, 0.002); end
  def test_outputs_costs_nb344; assert_in_epsilon(971.8127584128674, worksheet.outputs_costs_nb344, 0.002); end
  def test_outputs_costs_nb345; assert_in_epsilon(1479.245385655037, worksheet.outputs_costs_nb345, 0.002); end
  def test_outputs_costs_nb346; assert_in_epsilon(53.795091751404776, worksheet.outputs_costs_nb346, 0.002); end
  def test_outputs_costs_nb347; assert_in_epsilon(24.71078990363288, worksheet.outputs_costs_nb347, 0.002); end
  def test_outputs_costs_nb348; assert_in_epsilon(67.22958112749129, worksheet.outputs_costs_nb348, 0.002); end
  def test_outputs_costs_nb349; assert_in_epsilon(18.25835701258891, worksheet.outputs_costs_nb349, 0.002); end
  def test_outputs_costs_nb350; assert_in_epsilon(194.50500734491897, worksheet.outputs_costs_nb350, 0.002); end
  def test_outputs_costs_nb351; assert_in_epsilon(331.44824245462837, worksheet.outputs_costs_nb351, 0.002); end
  def test_outputs_costs_nb352; assert_in_epsilon(11.350322923354959, worksheet.outputs_costs_nb352, 0.002); end
  def test_outputs_costs_nb353; assert_in_epsilon(44.46527475790436, worksheet.outputs_costs_nb353, 0.002); end
  def test_outputs_costs_nb354; assert_in_epsilon(129.92328247454287, worksheet.outputs_costs_nb354, 0.002); end
  def test_outputs_costs_nb355; assert_in_epsilon(120.15091967079351, worksheet.outputs_costs_nb355, 0.002); end
  def test_outputs_costs_nb356; assert_in_epsilon(19.954714639245687, worksheet.outputs_costs_nb356, 0.002); end
  def test_outputs_costs_nb357; assert_in_epsilon(3.110799568990349, worksheet.outputs_costs_nb357, 0.002); end
  def test_outputs_costs_nb358; assert_in_epsilon(6.871103941634047, worksheet.outputs_costs_nb358, 0.002); end
  def test_outputs_costs_nb359; assert_in_epsilon(3.803421554876798, worksheet.outputs_costs_nb359, 0.002); end
  def test_outputs_costs_nb360; assert_in_epsilon(7.6388017709913925, worksheet.outputs_costs_nb360, 0.002); end
  def test_outputs_costs_nb361; assert_in_epsilon(31.73939490666375, worksheet.outputs_costs_nb361, 0.002); end
  def test_outputs_costs_nb362; assert_in_epsilon(29.417920011630446, worksheet.outputs_costs_nb362, 0.002); end
  def test_outputs_costs_nb363; assert_in_epsilon(1.1441578757966677, worksheet.outputs_costs_nb363, 0.002); end
  def test_outputs_costs_nb364; assert_in_epsilon(19.68593739376708, worksheet.outputs_costs_nb364, 0.002); end
  def test_outputs_costs_nb365; assert_in_epsilon(2.480005217025404, worksheet.outputs_costs_nb365, 0.002); end
  def test_outputs_costs_nb366; assert_in_epsilon(5.587298831834052, worksheet.outputs_costs_nb366, 0.002); end
  def test_outputs_costs_nb367; assert_in_delta(0.19786941009436548, worksheet.outputs_costs_nb367, 0.002); end
  def test_outputs_costs_nb368; assert_in_epsilon(2.122571207393104, worksheet.outputs_costs_nb368, 0.002); end
  def test_outputs_costs_nb369; assert_in_delta(0.19295876446089585, worksheet.outputs_costs_nb369, 0.002); end
  def test_outputs_costs_nb370; assert_in_epsilon(8.714870853496874, worksheet.outputs_costs_nb370, 0.002); end
  def test_outputs_costs_nb371; assert_in_epsilon(34.8594834139875, worksheet.outputs_costs_nb371, 0.002); end
  def test_outputs_costs_nb372; assert_in_epsilon(23.054436831796494, worksheet.outputs_costs_nb372, 0.002); end
  def test_outputs_costs_nb373; assert_in_epsilon(92.21774732718598, worksheet.outputs_costs_nb373, 0.002); end
  def test_outputs_costs_nb374; assert_in_epsilon(3.794492161211231, worksheet.outputs_costs_nb374, 0.002); end
  def test_outputs_costs_nb375; assert_in_epsilon(10.418778042862293, worksheet.outputs_costs_nb375, 0.002); end
  def test_outputs_costs_nb376; assert_in_delta(0.35033366058109633, worksheet.outputs_costs_nb376, 0.002); end
  def test_outputs_costs_nb377; assert_in_epsilon(5.04030777422986, worksheet.outputs_costs_nb377, 0.002); end
  def test_outputs_costs_nb378; assert_in_epsilon(30.142345447680906, worksheet.outputs_costs_nb378, 0.002); end
  def test_outputs_costs_nb379; assert_in_epsilon(25.471883703107284, worksheet.outputs_costs_nb379, 0.002); end
  def test_outputs_costs_nb380; assert_in_delta(0.0, (worksheet.outputs_costs_nb380||0), 0.002); end
  def test_outputs_costs_nb381; assert_in_delta(0.2983672042326141, worksheet.outputs_costs_nb381, 0.002); end
  def test_outputs_costs_nb382; assert_in_delta(0.23768384624616282, worksheet.outputs_costs_nb382, 0.002); end
  def test_outputs_costs_nb383; assert_in_epsilon(8.182938670089388, worksheet.outputs_costs_nb383, 0.002); end
  def test_outputs_costs_nb384; assert_in_delta(0.003230685299614881, worksheet.outputs_costs_nb384, 0.002); end
  def test_outputs_costs_nb385; assert_in_delta(0.010045008203274702, worksheet.outputs_costs_nb385, 0.002); end
  def test_outputs_costs_nb386; assert_in_epsilon(18.69409491910637, worksheet.outputs_costs_nb386, 0.002); end
  def test_outputs_costs_nb387; assert_in_epsilon(1.1800425212933572, worksheet.outputs_costs_nb387, 0.002); end
  def test_outputs_costs_nb388; assert_in_epsilon(6.676585941141092, worksheet.outputs_costs_nb388, 0.002); end
  def test_outputs_costs_nb389; assert_in_epsilon(2.712483706389812, worksheet.outputs_costs_nb389, 0.002); end
  def test_outputs_costs_nb390; assert_in_epsilon(784.9256288067475, worksheet.outputs_costs_nb390, 0.002); end
  def test_outputs_costs_nb391; assert_in_epsilon(16.14189774670216, worksheet.outputs_costs_nb391, 0.002); end
  def test_outputs_costs_nb392; assert_in_epsilon(4.159124696461734, worksheet.outputs_costs_nb392, 0.002); end
  def test_outputs_costs_nb393; assert_in_epsilon(4.785611145188319, worksheet.outputs_costs_nb393, 0.002); end
  def test_outputs_costs_nb394; assert_in_epsilon(7.053229680693313, worksheet.outputs_costs_nb394, 0.002); end
  def test_outputs_costs_nb395; assert_in_epsilon(8.363523181743773, worksheet.outputs_costs_nb395, 0.002); end
  def test_outputs_costs_nb396; assert_in_epsilon(5.6203759256434225, worksheet.outputs_costs_nb396, 0.002); end
  def test_outputs_costs_nb397; assert_in_epsilon(104.66673241212933, worksheet.outputs_costs_nb397, 0.002); end
  def test_outputs_costs_nb398; assert_in_epsilon(32.96210951389044, worksheet.outputs_costs_nb398, 0.002); end
  def test_outputs_costs_nb399; assert_in_epsilon(-3.4629453574904323, worksheet.outputs_costs_nb399, 0.002); end
  def test_outputs_costs_nb400; assert_in_epsilon(3.52627196737222, worksheet.outputs_costs_nb400, 0.002); end
  def test_outputs_costs_nb401; assert_in_epsilon(1.3314751173799344, worksheet.outputs_costs_nb401, 0.002); end
  def test_outputs_costs_nb402; assert_in_epsilon(13.070569249337133, worksheet.outputs_costs_nb402, 0.002); end
  def test_outputs_costs_nb403; assert_in_delta(0.1426029804113989, worksheet.outputs_costs_nb403, 0.002); end
  def test_outputs_costs_nb404; assert_in_delta(0.007052528319499753, worksheet.outputs_costs_nb404, 0.002); end
  def test_outputs_costs_nb405; assert_in_delta(0.0013830894133990506, worksheet.outputs_costs_nb405, 0.002); end
  def test_outputs_costs_nb406; assert_in_delta(0.001247506368810747, worksheet.outputs_costs_nb406, 0.002); end
  def test_outputs_costs_nb407; assert_in_delta(0.022252659110844286, worksheet.outputs_costs_nb407, 0.002); end
  def test_outputs_costs_nb408; assert_in_epsilon(24.02971061472054, worksheet.outputs_costs_nb408, 0.002); end
  def test_outputs_costs_nb409; assert_in_epsilon(26.44436454824875, worksheet.outputs_costs_nb409, 0.002); end
  def test_outputs_costs_nb410; assert_in_epsilon(5.609497122026768, worksheet.outputs_costs_nb410, 0.002); end
  def test_outputs_costs_nb411; assert_in_epsilon(22.83294606356484, worksheet.outputs_costs_nb411, 0.002); end
  def test_outputs_costs_nb412; assert_in_epsilon(39.19224334679578, worksheet.outputs_costs_nb412, 0.002); end
  def test_outputs_costs_nb413; assert_in_epsilon(444.7613606024777, worksheet.outputs_costs_nb413, 0.002); end
  def test_outputs_costs_nb414; assert_in_epsilon(135.59629305963256, worksheet.outputs_costs_nb414, 0.002); end
  def test_outputs_costs_nb415; assert_in_epsilon(329.21616498342325, worksheet.outputs_costs_nb415, 0.002); end
  def test_outputs_costs_nb416; assert_in_epsilon(1881.9785631386399, worksheet.outputs_costs_nb416, 0.002); end
  def test_outputs_costs_nb417; assert_in_epsilon(35.10167851370797, worksheet.outputs_costs_nb417, 0.002); end
  def test_outputs_costs_nb418; assert_in_epsilon(256.82808901884624, worksheet.outputs_costs_nb418, 0.002); end
  def test_outputs_costs_nb419; assert_in_epsilon(707.0153327618364, worksheet.outputs_costs_nb419, 0.002); end
  def test_outputs_costs_nb420; assert_in_epsilon(169.08712238310983, worksheet.outputs_costs_nb420, 0.002); end
  def test_outputs_costs_nb421; assert_in_epsilon(6.397653591777212, worksheet.outputs_costs_nb421, 0.002); end
  def test_outputs_costs_nb422; assert_in_epsilon(2.667761067594161, worksheet.outputs_costs_nb422, 0.002); end
  def test_outputs_costs_nb423; assert_in_delta(0.0, (worksheet.outputs_costs_nb423||0), 0.002); end
  def test_outputs_costs_nb424; assert_in_delta(0.0, (worksheet.outputs_costs_nb424||0), 0.002); end
  def test_outputs_costs_nb425; assert_in_delta(0.0, (worksheet.outputs_costs_nb425||0), 0.002); end
  def test_outputs_costs_nb426; assert_in_epsilon(1.3079905924484811, worksheet.outputs_costs_nb426, 0.002); end
  def test_outputs_costs_nb427; assert_in_delta(0.0, (worksheet.outputs_costs_nb427||0), 0.002); end
  def test_outputs_costs_nb428; assert_in_epsilon(307.6002921055474, worksheet.outputs_costs_nb428, 0.002); end
  def test_outputs_costs_nb429; assert_in_epsilon(88.81143797572273, worksheet.outputs_costs_nb429, 0.002); end
  def test_outputs_costs_nb430; assert_in_epsilon(34.346864284231515, worksheet.outputs_costs_nb430, 0.002); end
  def test_outputs_costs_nb431; assert_in_epsilon(779.8854549901728, worksheet.outputs_costs_nb431, 0.002); end
  def test_outputs_costs_nb432; assert_in_epsilon(8.249058035328815, worksheet.outputs_costs_nb432, 0.002); end
  def test_outputs_costs_nb433; assert_in_epsilon(21.74299726958907, worksheet.outputs_costs_nb433, 0.002); end
  def test_outputs_costs_nb434; assert_in_epsilon(74.25953215746601, worksheet.outputs_costs_nb434, 0.002); end
  def test_outputs_costs_nb435; assert_in_epsilon(31.332722564370638, worksheet.outputs_costs_nb435, 0.002); end
  def test_outputs_costs_nb436; assert_in_epsilon(41.77379012884651, worksheet.outputs_costs_nb436, 0.002); end
  def test_outputs_costs_nb437; assert_in_epsilon(141.22395147672069, worksheet.outputs_costs_nb437, 0.002); end
  def test_outputs_emissions_p232; assert_in_delta(0.09722222222222222, worksheet.outputs_emissions_p232, 0.002); end
  def test_outputs_emissions_h145; assert_in_delta(0.21613567908999795, worksheet.outputs_emissions_h145, 0.002); end
  def test_outputs_emissions_i145; assert_in_delta(0.21394604776644002, worksheet.outputs_emissions_i145, 0.002); end
  def test_outputs_emissions_j145; assert_in_delta(0.21806406453805793, worksheet.outputs_emissions_j145, 0.002); end
  def test_outputs_emissions_k145; assert_in_delta(0.2350098363903014, worksheet.outputs_emissions_k145, 0.002); end
  def test_outputs_emissions_l145; assert_in_delta(0.24810553785709447, worksheet.outputs_emissions_l145, 0.002); end
  def test_outputs_emissions_p145; assert_in_delta(0.25394025170135714, worksheet.outputs_emissions_p145, 0.002); end
  def test_outputs_emissions_q145; assert_in_delta(0.2616646332272438, worksheet.outputs_emissions_q145, 0.002); end
  def test_outputs_emissions_r145; assert_in_delta(0.27549979674317915, worksheet.outputs_emissions_r145, 0.002); end
  def test_outputs_emissions_s145; assert_in_delta(0.2894005935862552, worksheet.outputs_emissions_s145, 0.002); end
  def test_outputs_emissions_t145; assert_in_delta(0.3026779267700413, worksheet.outputs_emissions_t145, 0.002); end
  def test_outputs_emissions_u145; assert_in_delta(0.3155843067817794, worksheet.outputs_emissions_u145, 0.002); end
  def test_outputs_emissions_v145; assert_in_delta(0.3282122677501315, worksheet.outputs_emissions_v145, 0.002); end
  def test_outputs_emissions_w145; assert_in_delta(0.33691584841545413, worksheet.outputs_emissions_w145, 0.002); end
  def test_outputs_emissions_x145; assert_in_delta(0.34418755366778714, worksheet.outputs_emissions_x145, 0.002); end
  def test_outputs_emissions_y145; assert_in_delta(0.34576073224651754, worksheet.outputs_emissions_y145, 0.002); end
  def test_outputs_emissions_z145; assert_in_delta(0.3467258977938188, worksheet.outputs_emissions_z145, 0.002); end
  def test_outputs_emissions_aa145; assert_in_delta(0.34726545050962887, worksheet.outputs_emissions_aa145, 0.002); end
  def test_outputs_emissions_ab145; assert_in_delta(0.3474347348359302, worksheet.outputs_emissions_ab145, 0.002); end
  def test_outputs_emissions_ac145; assert_in_delta(0.34752680497834787, worksheet.outputs_emissions_ac145, 0.002); end
  def test_outputs_emissions_ad145; assert_in_delta(0.347570854873497, worksheet.outputs_emissions_ad145, 0.002); end
  def test_outputs_emissions_ae145; assert_in_delta(0.3475876521135097, worksheet.outputs_emissions_ae145, 0.002); end
  def test_outputs_emissions_af145; assert_in_delta(0.3475960625637766, worksheet.outputs_emissions_af145, 0.002); end
  def test_outputs_emissions_ag145; assert_in_delta(0.3475998717309752, worksheet.outputs_emissions_ag145, 0.002); end
  def test_outputs_emissions_ah145; assert_in_delta(0.3476014676581365, worksheet.outputs_emissions_ah145, 0.002); end
  def test_outputs_emissions_h100; assert_in_epsilon(25.34891757, worksheet.outputs_emissions_h100, 0.002); end
  def test_outputs_emissions_i100; assert_in_epsilon(26.374524320000003, worksheet.outputs_emissions_i100, 0.002); end
  def test_outputs_emissions_j100; assert_in_epsilon(28.35797029, worksheet.outputs_emissions_j100, 0.002); end
  def test_outputs_emissions_k100; assert_in_epsilon(31.52379656, worksheet.outputs_emissions_k100, 0.002); end
  def test_outputs_emissions_l100; assert_in_epsilon(35.02307894, worksheet.outputs_emissions_l100, 0.002); end
  def test_outputs_emissions_p100; assert_in_epsilon(34.36521746783598, worksheet.outputs_emissions_p100, 0.002); end
  def test_outputs_emissions_q100; assert_in_epsilon(35.45544940039368, worksheet.outputs_emissions_q100, 0.002); end
  def test_outputs_emissions_r100; assert_in_epsilon(37.93405511729462, worksheet.outputs_emissions_r100, 0.002); end
  def test_outputs_emissions_s100; assert_in_epsilon(42.27158207868922, worksheet.outputs_emissions_s100, 0.002); end
  def test_outputs_emissions_t100; assert_in_epsilon(46.3144397967304, worksheet.outputs_emissions_t100, 0.002); end
  def test_outputs_emissions_u100; assert_in_epsilon(49.71327235052565, worksheet.outputs_emissions_u100, 0.002); end
  def test_outputs_emissions_v100; assert_in_epsilon(51.78440226053486, worksheet.outputs_emissions_v100, 0.002); end
  def test_outputs_emissions_w100; assert_in_epsilon(52.600570673793946, worksheet.outputs_emissions_w100, 0.002); end
  def test_outputs_emissions_x100; assert_in_epsilon(53.17600633507604, worksheet.outputs_emissions_x100, 0.002); end
  def test_outputs_emissions_y100; assert_in_epsilon(53.36645670422631, worksheet.outputs_emissions_y100, 0.002); end
  def test_outputs_emissions_z100; assert_in_epsilon(53.45346969862934, worksheet.outputs_emissions_z100, 0.002); end
  def test_outputs_emissions_aa100; assert_in_epsilon(53.500379144995286, worksheet.outputs_emissions_aa100, 0.002); end
  def test_outputs_emissions_ab100; assert_in_epsilon(53.518219649540846, worksheet.outputs_emissions_ab100, 0.002); end
  def test_outputs_emissions_ac100; assert_in_epsilon(53.52656661153315, worksheet.outputs_emissions_ac100, 0.002); end
  def test_outputs_emissions_ad100; assert_in_epsilon(53.53058694174286, worksheet.outputs_emissions_ad100, 0.002); end
  def test_outputs_emissions_ae100; assert_in_epsilon(53.53224837056398, worksheet.outputs_emissions_ae100, 0.002); end
  def test_outputs_emissions_af100; assert_in_epsilon(53.53301995022025, worksheet.outputs_emissions_af100, 0.002); end
  def test_outputs_emissions_ag100; assert_in_epsilon(53.53337488384804, worksheet.outputs_emissions_ag100, 0.002); end
  def test_outputs_emissions_ah100; assert_in_epsilon(53.533528220663825, worksheet.outputs_emissions_ah100, 0.002); end
  def test_outputs_emissions_d4; assert_equal("2260 Gt CO2", worksheet.outputs_emissions_d4); end
  def test_outputs_emissions_d5; assert_equal("3010 Gt CO2", worksheet.outputs_emissions_d5); end
  def test_outputs_emissions_c91; assert_equal("Column1", worksheet.outputs_emissions_c91); end
  def test_outputs_emissions_d91; assert_equal("IPCC Sector", worksheet.outputs_emissions_d91); end
  def test_outputs_emissions_h91; assert_equal("1990", worksheet.outputs_emissions_h91); end
  def test_outputs_emissions_i91; assert_equal("1995", worksheet.outputs_emissions_i91); end
  def test_outputs_emissions_j91; assert_equal("2000", worksheet.outputs_emissions_j91); end
  def test_outputs_emissions_k91; assert_equal("2005", worksheet.outputs_emissions_k91); end
  def test_outputs_emissions_l91; assert_equal("2010", worksheet.outputs_emissions_l91); end
  def test_outputs_emissions_n91; assert_equal("2011 historic", worksheet.outputs_emissions_n91); end
  def test_outputs_emissions_p91; assert_equal("2011", worksheet.outputs_emissions_p91); end
  def test_outputs_emissions_q91; assert_equal("2015", worksheet.outputs_emissions_q91); end
  def test_outputs_emissions_r91; assert_equal("2020", worksheet.outputs_emissions_r91); end
  def test_outputs_emissions_s91; assert_equal("2025", worksheet.outputs_emissions_s91); end
  def test_outputs_emissions_t91; assert_equal("2030", worksheet.outputs_emissions_t91); end
  def test_outputs_emissions_u91; assert_equal("2035", worksheet.outputs_emissions_u91); end
  def test_outputs_emissions_v91; assert_equal("2040", worksheet.outputs_emissions_v91); end
  def test_outputs_emissions_w91; assert_equal("2045", worksheet.outputs_emissions_w91); end
  def test_outputs_emissions_x91; assert_equal("2050", worksheet.outputs_emissions_x91); end
  def test_outputs_emissions_y91; assert_equal("2055", worksheet.outputs_emissions_y91); end
  def test_outputs_emissions_z91; assert_equal("2060", worksheet.outputs_emissions_z91); end
  def test_outputs_emissions_aa91; assert_equal("2065", worksheet.outputs_emissions_aa91); end
  def test_outputs_emissions_ab91; assert_equal("2070", worksheet.outputs_emissions_ab91); end
  def test_outputs_emissions_ac91; assert_equal("2075", worksheet.outputs_emissions_ac91); end
  def test_outputs_emissions_ad91; assert_equal("2080", worksheet.outputs_emissions_ad91); end
  def test_outputs_emissions_ae91; assert_equal("2085", worksheet.outputs_emissions_ae91); end
  def test_outputs_emissions_af91; assert_equal("2090", worksheet.outputs_emissions_af91); end
  def test_outputs_emissions_ag91; assert_equal("2095", worksheet.outputs_emissions_ag91); end
  def test_outputs_emissions_ah91; assert_equal("2100", worksheet.outputs_emissions_ah91); end
  def test_outputs_emissions_c92; assert_equal("G.1A", worksheet.outputs_emissions_c92); end
  def test_outputs_emissions_d92; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d92); end
  def test_outputs_emissions_h92; assert_in_epsilon(20.98869, worksheet.outputs_emissions_h92, 0.002); end
  def test_outputs_emissions_i92; assert_in_epsilon(21.850990000000003, worksheet.outputs_emissions_i92, 0.002); end
  def test_outputs_emissions_j92; assert_in_epsilon(23.75862, worksheet.outputs_emissions_j92, 0.002); end
  def test_outputs_emissions_k92; assert_in_epsilon(27.50138, worksheet.outputs_emissions_k92, 0.002); end
  def test_outputs_emissions_l92; assert_in_epsilon(30.509400000000003, worksheet.outputs_emissions_l92, 0.002); end
  def test_outputs_emissions_p92; assert_in_epsilon(29.288823482186938, worksheet.outputs_emissions_p92, 0.002); end
  def test_outputs_emissions_q92; assert_in_epsilon(29.663627148735102, worksheet.outputs_emissions_q92, 0.002); end
  def test_outputs_emissions_r92; assert_in_epsilon(33.24711966878774, worksheet.outputs_emissions_r92, 0.002); end
  def test_outputs_emissions_s92; assert_in_epsilon(36.90265805031779, worksheet.outputs_emissions_s92, 0.002); end
  def test_outputs_emissions_t92; assert_in_epsilon(40.184399091699596, worksheet.outputs_emissions_t92, 0.002); end
  def test_outputs_emissions_u92; assert_in_epsilon(42.656741019056724, worksheet.outputs_emissions_u92, 0.002); end
  def test_outputs_emissions_v92; assert_in_epsilon(45.245375151770844, worksheet.outputs_emissions_v92, 0.002); end
  def test_outputs_emissions_w92; assert_in_epsilon(46.888497895304106, worksheet.outputs_emissions_w92, 0.002); end
  def test_outputs_emissions_x92; assert_in_epsilon(47.96904691217341, worksheet.outputs_emissions_x92, 0.002); end
  def test_outputs_emissions_c93; assert_equal("G.1B", worksheet.outputs_emissions_c93); end
  def test_outputs_emissions_d93; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d93); end
  def test_outputs_emissions_h93; assert_in_delta(0.16401936, worksheet.outputs_emissions_h93, 0.002); end
  def test_outputs_emissions_i93; assert_in_delta(0.20241883000000002, worksheet.outputs_emissions_i93, 0.002); end
  def test_outputs_emissions_j93; assert_in_delta(0.17221180000000003, worksheet.outputs_emissions_j93, 0.002); end
  def test_outputs_emissions_k93; assert_in_delta(0.21541402, worksheet.outputs_emissions_k93, 0.002); end
  def test_outputs_emissions_l93; assert_in_delta(0.22069656, worksheet.outputs_emissions_l93, 0.002); end
  def test_outputs_emissions_p93; assert_in_delta(0.05052010862228322, worksheet.outputs_emissions_p93, 0.002); end
  def test_outputs_emissions_q93; assert_in_delta(0.051413803323601376, worksheet.outputs_emissions_q93, 0.002); end
  def test_outputs_emissions_r93; assert_in_delta(0.05711551912993146, worksheet.outputs_emissions_r93, 0.002); end
  def test_outputs_emissions_s93; assert_in_delta(0.0626356522721067, worksheet.outputs_emissions_s93, 0.002); end
  def test_outputs_emissions_t93; assert_in_delta(0.06803041033783257, worksheet.outputs_emissions_t93, 0.002); end
  def test_outputs_emissions_u93; assert_in_delta(0.07367188303289762, worksheet.outputs_emissions_u93, 0.002); end
  def test_outputs_emissions_v93; assert_in_delta(0.08092368051299567, worksheet.outputs_emissions_v93, 0.002); end
  def test_outputs_emissions_w93; assert_in_delta(0.08918561715549493, worksheet.outputs_emissions_w93, 0.002); end
  def test_outputs_emissions_x93; assert_in_delta(0.09776901075582513, worksheet.outputs_emissions_x93, 0.002); end
  def test_outputs_emissions_c94; assert_equal("G.2", worksheet.outputs_emissions_c94); end
  def test_outputs_emissions_d94; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d94); end
  def test_outputs_emissions_h94; assert_in_delta(0.5752480000000001, worksheet.outputs_emissions_h94, 0.002); end
  def test_outputs_emissions_i94; assert_in_delta(0.721808, worksheet.outputs_emissions_i94, 0.002); end
  def test_outputs_emissions_j94; assert_in_delta(0.828064, worksheet.outputs_emissions_j94, 0.002); end
  def test_outputs_emissions_k94; assert_in_epsilon(1.17248, worksheet.outputs_emissions_k94, 0.002); end
  def test_outputs_emissions_l94; assert_in_epsilon(1.65306856, worksheet.outputs_emissions_l94, 0.002); end
  def test_outputs_emissions_p94; assert_in_epsilon(2.3859600570267654, worksheet.outputs_emissions_p94, 0.002); end
  def test_outputs_emissions_q94; assert_in_epsilon(2.5111652015992223, worksheet.outputs_emissions_q94, 0.002); end
  def test_outputs_emissions_r94; assert_in_epsilon(2.7967559488520193, worksheet.outputs_emissions_r94, 0.002); end
  def test_outputs_emissions_s94; assert_in_epsilon(3.0416972117366603, worksheet.outputs_emissions_s94, 0.002); end
  def test_outputs_emissions_t94; assert_in_epsilon(3.2877997529925596, worksheet.outputs_emissions_t94, 0.002); end
  def test_outputs_emissions_u94; assert_in_epsilon(3.5334883358671014, worksheet.outputs_emissions_u94, 0.002); end
  def test_outputs_emissions_v94; assert_in_epsilon(3.788256192863864, worksheet.outputs_emissions_v94, 0.002); end
  def test_outputs_emissions_w94; assert_in_epsilon(4.04805717731347, worksheet.outputs_emissions_w94, 0.002); end
  def test_outputs_emissions_x94; assert_in_epsilon(4.322331676841045, worksheet.outputs_emissions_x94, 0.002); end
  def test_outputs_emissions_c95; assert_equal("G.3", worksheet.outputs_emissions_c95); end
  def test_outputs_emissions_d95; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d95); end
  def test_outputs_emissions_h95; assert_in_delta(0.0, (worksheet.outputs_emissions_h95||0), 0.002); end
  def test_outputs_emissions_i95; assert_in_delta(0.0, (worksheet.outputs_emissions_i95||0), 0.002); end
  def test_outputs_emissions_j95; assert_in_delta(0.0, (worksheet.outputs_emissions_j95||0), 0.002); end
  def test_outputs_emissions_k95; assert_in_delta(0.0, (worksheet.outputs_emissions_k95||0), 0.002); end
  def test_outputs_emissions_l95; assert_in_delta(0.0, (worksheet.outputs_emissions_l95||0), 0.002); end
  def test_outputs_emissions_p95; assert_in_delta(0.0, (worksheet.outputs_emissions_p95||0), 0.002); end
  def test_outputs_emissions_q95; assert_in_delta(0.0, (worksheet.outputs_emissions_q95||0), 0.002); end
  def test_outputs_emissions_r95; assert_in_delta(0.0, (worksheet.outputs_emissions_r95||0), 0.002); end
  def test_outputs_emissions_s95; assert_in_delta(0.0, (worksheet.outputs_emissions_s95||0), 0.002); end
  def test_outputs_emissions_t95; assert_in_delta(0.0, (worksheet.outputs_emissions_t95||0), 0.002); end
  def test_outputs_emissions_u95; assert_in_delta(0.0, (worksheet.outputs_emissions_u95||0), 0.002); end
  def test_outputs_emissions_v95; assert_in_delta(0.0, (worksheet.outputs_emissions_v95||0), 0.002); end
  def test_outputs_emissions_w95; assert_in_delta(0.0, (worksheet.outputs_emissions_w95||0), 0.002); end
  def test_outputs_emissions_x95; assert_in_delta(0.0, (worksheet.outputs_emissions_x95||0), 0.002); end
  def test_outputs_emissions_c96; assert_equal("G.4", worksheet.outputs_emissions_c96); end
  def test_outputs_emissions_d96; assert_equal("Global Agriculture", worksheet.outputs_emissions_d96); end
  def test_outputs_emissions_h96; assert_in_delta(0.0, (worksheet.outputs_emissions_h96||0), 0.002); end
  def test_outputs_emissions_i96; assert_in_delta(0.0, (worksheet.outputs_emissions_i96||0), 0.002); end
  def test_outputs_emissions_j96; assert_in_delta(0.0, (worksheet.outputs_emissions_j96||0), 0.002); end
  def test_outputs_emissions_k96; assert_in_delta(0.0, (worksheet.outputs_emissions_k96||0), 0.002); end
  def test_outputs_emissions_l96; assert_in_delta(0.0, (worksheet.outputs_emissions_l96||0), 0.002); end
  def test_outputs_emissions_p96; assert_in_delta(0.0, (worksheet.outputs_emissions_p96||0), 0.002); end
  def test_outputs_emissions_q96; assert_in_delta(0.0, (worksheet.outputs_emissions_q96||0), 0.002); end
  def test_outputs_emissions_r96; assert_in_delta(0.0, (worksheet.outputs_emissions_r96||0), 0.002); end
  def test_outputs_emissions_s96; assert_in_delta(0.0, (worksheet.outputs_emissions_s96||0), 0.002); end
  def test_outputs_emissions_t96; assert_in_delta(0.0, (worksheet.outputs_emissions_t96||0), 0.002); end
  def test_outputs_emissions_u96; assert_in_delta(0.0, (worksheet.outputs_emissions_u96||0), 0.002); end
  def test_outputs_emissions_v96; assert_in_delta(0.0, (worksheet.outputs_emissions_v96||0), 0.002); end
  def test_outputs_emissions_w96; assert_in_delta(0.0, (worksheet.outputs_emissions_w96||0), 0.002); end
  def test_outputs_emissions_x96; assert_in_delta(0.0, (worksheet.outputs_emissions_x96||0), 0.002); end
  def test_outputs_emissions_c97; assert_equal("G.5", worksheet.outputs_emissions_c97); end
  def test_outputs_emissions_d97; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d97); end
  def test_outputs_emissions_h97; assert_in_epsilon(3.6209602100000002, worksheet.outputs_emissions_h97, 0.002); end
  def test_outputs_emissions_i97; assert_in_epsilon(3.59930749, worksheet.outputs_emissions_i97, 0.002); end
  def test_outputs_emissions_j97; assert_in_epsilon(3.59907449, worksheet.outputs_emissions_j97, 0.002); end
  def test_outputs_emissions_k97; assert_in_epsilon(2.63452254, worksheet.outputs_emissions_k97, 0.002); end
  def test_outputs_emissions_l97; assert_in_epsilon(2.6399138200000003, worksheet.outputs_emissions_l97, 0.002); end
  def test_outputs_emissions_p97; assert_in_epsilon(2.63991382, worksheet.outputs_emissions_p97, 0.002); end
  def test_outputs_emissions_q97; assert_in_epsilon(3.229243246735753, worksheet.outputs_emissions_q97, 0.002); end
  def test_outputs_emissions_r97; assert_in_epsilon(1.8330639805249316, worksheet.outputs_emissions_r97, 0.002); end
  def test_outputs_emissions_s97; assert_in_epsilon(2.264591164362663, worksheet.outputs_emissions_s97, 0.002); end
  def test_outputs_emissions_t97; assert_in_epsilon(2.7742105417004033, worksheet.outputs_emissions_t97, 0.002); end
  def test_outputs_emissions_u97; assert_in_epsilon(3.4493711125689184, worksheet.outputs_emissions_u97, 0.002); end
  def test_outputs_emissions_v97; assert_in_epsilon(2.6698472353871567, worksheet.outputs_emissions_v97, 0.002); end
  def test_outputs_emissions_w97; assert_in_epsilon(1.5748299840208797, worksheet.outputs_emissions_w97, 0.002); end
  def test_outputs_emissions_x97; assert_in_delta(0.7868587353057583, worksheet.outputs_emissions_x97, 0.002); end
  def test_outputs_emissions_c98; assert_equal("G.6", worksheet.outputs_emissions_c98); end
  def test_outputs_emissions_d98; assert_equal("Global Waste", worksheet.outputs_emissions_d98); end
  def test_outputs_emissions_h98; assert_in_delta(0.0, (worksheet.outputs_emissions_h98||0), 0.002); end
  def test_outputs_emissions_i98; assert_in_delta(0.0, (worksheet.outputs_emissions_i98||0), 0.002); end
  def test_outputs_emissions_j98; assert_in_delta(0.0, (worksheet.outputs_emissions_j98||0), 0.002); end
  def test_outputs_emissions_k98; assert_in_delta(0.0, (worksheet.outputs_emissions_k98||0), 0.002); end
  def test_outputs_emissions_l98; assert_in_delta(0.0, (worksheet.outputs_emissions_l98||0), 0.002); end
  def test_outputs_emissions_p98; assert_in_delta(0.0, (worksheet.outputs_emissions_p98||0), 0.002); end
  def test_outputs_emissions_q98; assert_in_delta(0.0, (worksheet.outputs_emissions_q98||0), 0.002); end
  def test_outputs_emissions_r98; assert_in_delta(0.0, (worksheet.outputs_emissions_r98||0), 0.002); end
  def test_outputs_emissions_s98; assert_in_delta(0.0, (worksheet.outputs_emissions_s98||0), 0.002); end
  def test_outputs_emissions_t98; assert_in_delta(0.0, (worksheet.outputs_emissions_t98||0), 0.002); end
  def test_outputs_emissions_u98; assert_in_delta(0.0, (worksheet.outputs_emissions_u98||0), 0.002); end
  def test_outputs_emissions_v98; assert_in_delta(0.0, (worksheet.outputs_emissions_v98||0), 0.002); end
  def test_outputs_emissions_w98; assert_in_delta(0.0, (worksheet.outputs_emissions_w98||0), 0.002); end
  def test_outputs_emissions_x98; assert_in_delta(0.0, (worksheet.outputs_emissions_x98||0), 0.002); end
  def test_outputs_emissions_c99; assert_equal("G.7", worksheet.outputs_emissions_c99); end
  def test_outputs_emissions_d99; assert_equal("Global Other", worksheet.outputs_emissions_d99); end
  def test_outputs_emissions_h99; assert_in_delta(0.0, (worksheet.outputs_emissions_h99||0), 0.002); end
  def test_outputs_emissions_i99; assert_in_delta(0.0, (worksheet.outputs_emissions_i99||0), 0.002); end
  def test_outputs_emissions_j99; assert_in_delta(0.0, (worksheet.outputs_emissions_j99||0), 0.002); end
  def test_outputs_emissions_k99; assert_in_delta(0.0, (worksheet.outputs_emissions_k99||0), 0.002); end
  def test_outputs_emissions_l99; assert_in_delta(0.0, (worksheet.outputs_emissions_l99||0), 0.002); end
  def test_outputs_emissions_p99; assert_in_delta(0.0, (worksheet.outputs_emissions_p99||0), 0.002); end
  def test_outputs_emissions_q99; assert_in_delta(0.0, (worksheet.outputs_emissions_q99||0), 0.002); end
  def test_outputs_emissions_r99; assert_in_delta(0.0, (worksheet.outputs_emissions_r99||0), 0.002); end
  def test_outputs_emissions_s99; assert_in_delta(0.0, (worksheet.outputs_emissions_s99||0), 0.002); end
  def test_outputs_emissions_t99; assert_in_delta(0.0, (worksheet.outputs_emissions_t99||0), 0.002); end
  def test_outputs_emissions_u99; assert_in_delta(0.0, (worksheet.outputs_emissions_u99||0), 0.002); end
  def test_outputs_emissions_v99; assert_in_delta(0.0, (worksheet.outputs_emissions_v99||0), 0.002); end
  def test_outputs_emissions_w99; assert_in_delta(0.0, (worksheet.outputs_emissions_w99||0), 0.002); end
  def test_outputs_emissions_x99; assert_in_delta(0.0, (worksheet.outputs_emissions_x99||0), 0.002); end
  def test_outputs_emissions_d100; assert_equal("Total", worksheet.outputs_emissions_d100); end
  def test_outputs_emissions_d101; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d101); end
  def test_outputs_emissions_h101; assert_in_epsilon(805.0, worksheet.outputs_emissions_h101, 0.002); end
  def test_outputs_emissions_i101; assert_in_epsilon(920.0, worksheet.outputs_emissions_i101, 0.002); end
  def test_outputs_emissions_j101; assert_in_epsilon(1041.0, worksheet.outputs_emissions_j101, 0.002); end
  def test_outputs_emissions_k101; assert_in_epsilon(1178.0, worksheet.outputs_emissions_k101, 0.002); end
  def test_outputs_emissions_l101; assert_in_epsilon(1855.634782532164, worksheet.outputs_emissions_l101, 0.002); end
  def test_outputs_emissions_n101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_n101, 0.002); end
  def test_outputs_emissions_p101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_p101, 0.002); end
  def test_outputs_emissions_q101; assert_in_epsilon(2029.6413337364593, worksheet.outputs_emissions_q101, 0.002); end
  def test_outputs_emissions_r101; assert_in_epsilon(2213.11509503068, worksheet.outputs_emissions_r101, 0.002); end
  def test_outputs_emissions_s101; assert_in_epsilon(2413.6291880206395, worksheet.outputs_emissions_s101, 0.002); end
  def test_outputs_emissions_t101; assert_in_epsilon(2635.0942427091886, worksheet.outputs_emissions_t101, 0.002); end
  def test_outputs_emissions_u101; assert_in_epsilon(2875.1635230773286, worksheet.outputs_emissions_u101, 0.002); end
  def test_outputs_emissions_v101; assert_in_epsilon(3128.90770960498, worksheet.outputs_emissions_v101, 0.002); end
  def test_outputs_emissions_w101; assert_in_epsilon(3389.870141940802, worksheet.outputs_emissions_w101, 0.002); end
  def test_outputs_emissions_x101; assert_in_epsilon(3654.311584462977, worksheet.outputs_emissions_x101, 0.002); end
  def test_outputs_emissions_y101; assert_in_epsilon(3920.6677420612327, worksheet.outputs_emissions_y101, 0.002); end
  def test_outputs_emissions_z101; assert_in_epsilon(4187.7175580683715, worksheet.outputs_emissions_z101, 0.002); end
  def test_outputs_emissions_aa101; assert_in_epsilon(4455.102180177433, worksheet.outputs_emissions_aa101, 0.002); end
  def test_outputs_emissions_ab101; assert_in_epsilon(4722.648677163774, worksheet.outputs_emissions_ab101, 0.002); end
  def test_outputs_emissions_ac101; assert_in_epsilon(4990.260642816459, worksheet.outputs_emissions_ac101, 0.002); end
  def test_outputs_emissions_ad101; assert_in_epsilon(5257.903526699649, worksheet.outputs_emissions_ad101, 0.002); end
  def test_outputs_emissions_ae101; assert_in_epsilon(5525.560614980416, worksheet.outputs_emissions_ae101, 0.002); end
  def test_outputs_emissions_af101; assert_in_epsilon(5793.223785782377, worksheet.outputs_emissions_af101, 0.002); end
  def test_outputs_emissions_ag101; assert_in_epsilon(6060.889772867547, worksheet.outputs_emissions_ag101, 0.002); end
  def test_outputs_emissions_ah101; assert_in_epsilon(6328.557030628827, worksheet.outputs_emissions_ah101, 0.002); end
  def test_outputs_emissions_d63; assert_equal("Gas", worksheet.outputs_emissions_d63); end
  def test_outputs_emissions_h63; assert_in_epsilon(1990.0, worksheet.outputs_emissions_h63, 0.002); end
  def test_outputs_emissions_i63; assert_in_epsilon(1995.0, worksheet.outputs_emissions_i63, 0.002); end
  def test_outputs_emissions_j63; assert_in_epsilon(2000.0, worksheet.outputs_emissions_j63, 0.002); end
  def test_outputs_emissions_k63; assert_in_epsilon(2005.0, worksheet.outputs_emissions_k63, 0.002); end
  def test_outputs_emissions_l63; assert_in_epsilon(2010.0, worksheet.outputs_emissions_l63, 0.002); end
  def test_outputs_emissions_p63; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p63, 0.002); end
  def test_outputs_emissions_q63; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q63, 0.002); end
  def test_outputs_emissions_r63; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r63, 0.002); end
  def test_outputs_emissions_s63; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s63, 0.002); end
  def test_outputs_emissions_t63; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t63, 0.002); end
  def test_outputs_emissions_u63; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u63, 0.002); end
  def test_outputs_emissions_v63; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v63, 0.002); end
  def test_outputs_emissions_w63; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w63, 0.002); end
  def test_outputs_emissions_x63; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x63, 0.002); end
  def test_outputs_emissions_y63; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y63, 0.002); end
  def test_outputs_emissions_z63; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z63, 0.002); end
  def test_outputs_emissions_aa63; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa63, 0.002); end
  def test_outputs_emissions_ab63; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab63, 0.002); end
  def test_outputs_emissions_ac63; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac63, 0.002); end
  def test_outputs_emissions_ad63; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad63, 0.002); end
  def test_outputs_emissions_ae63; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae63, 0.002); end
  def test_outputs_emissions_af63; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af63, 0.002); end
  def test_outputs_emissions_ag63; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag63, 0.002); end
  def test_outputs_emissions_ah63; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah63, 0.002); end
  def test_outputs_emissions_d64; assert_equal("CO2", worksheet.outputs_emissions_d64); end
  def test_outputs_emissions_h64; assert_in_epsilon(25.34891757, worksheet.outputs_emissions_h64, 0.002); end
  def test_outputs_emissions_i64; assert_in_epsilon(26.374524320000003, worksheet.outputs_emissions_i64, 0.002); end
  def test_outputs_emissions_j64; assert_in_epsilon(28.35797029, worksheet.outputs_emissions_j64, 0.002); end
  def test_outputs_emissions_k64; assert_in_epsilon(31.52379656, worksheet.outputs_emissions_k64, 0.002); end
  def test_outputs_emissions_l64; assert_in_epsilon(35.02307894, worksheet.outputs_emissions_l64, 0.002); end
  def test_outputs_emissions_p64; assert_in_epsilon(34.36521746783598, worksheet.outputs_emissions_p64, 0.002); end
  def test_outputs_emissions_q64; assert_in_epsilon(35.45544940039368, worksheet.outputs_emissions_q64, 0.002); end
  def test_outputs_emissions_r64; assert_in_epsilon(37.93405511729462, worksheet.outputs_emissions_r64, 0.002); end
  def test_outputs_emissions_s64; assert_in_epsilon(42.27158207868922, worksheet.outputs_emissions_s64, 0.002); end
  def test_outputs_emissions_t64; assert_in_epsilon(46.3144397967304, worksheet.outputs_emissions_t64, 0.002); end
  def test_outputs_emissions_u64; assert_in_epsilon(49.71327235052565, worksheet.outputs_emissions_u64, 0.002); end
  def test_outputs_emissions_v64; assert_in_epsilon(51.78440226053486, worksheet.outputs_emissions_v64, 0.002); end
  def test_outputs_emissions_w64; assert_in_epsilon(52.600570673793946, worksheet.outputs_emissions_w64, 0.002); end
  def test_outputs_emissions_x64; assert_in_epsilon(53.17600633507604, worksheet.outputs_emissions_x64, 0.002); end
  def test_outputs_emissions_y64; assert_in_epsilon(53.36645670422631, worksheet.outputs_emissions_y64, 0.002); end
  def test_outputs_emissions_z64; assert_in_epsilon(53.45346969862934, worksheet.outputs_emissions_z64, 0.002); end
  def test_outputs_emissions_aa64; assert_in_epsilon(53.500379144995286, worksheet.outputs_emissions_aa64, 0.002); end
  def test_outputs_emissions_ab64; assert_in_epsilon(53.518219649540846, worksheet.outputs_emissions_ab64, 0.002); end
  def test_outputs_emissions_ac64; assert_in_epsilon(53.52656661153315, worksheet.outputs_emissions_ac64, 0.002); end
  def test_outputs_emissions_ad64; assert_in_epsilon(53.53058694174286, worksheet.outputs_emissions_ad64, 0.002); end
  def test_outputs_emissions_ae64; assert_in_epsilon(53.53224837056398, worksheet.outputs_emissions_ae64, 0.002); end
  def test_outputs_emissions_af64; assert_in_epsilon(53.53301995022025, worksheet.outputs_emissions_af64, 0.002); end
  def test_outputs_emissions_ag64; assert_in_epsilon(53.53337488384804, worksheet.outputs_emissions_ag64, 0.002); end
  def test_outputs_emissions_ah64; assert_in_epsilon(53.533528220663825, worksheet.outputs_emissions_ah64, 0.002); end
  def test_outputs_emissions_d65; assert_equal("CH4", worksheet.outputs_emissions_d65); end
  def test_outputs_emissions_h65; assert_in_epsilon(6.2679346936099405, worksheet.outputs_emissions_h65, 0.002); end
  def test_outputs_emissions_i65; assert_in_epsilon(6.204435385226761, worksheet.outputs_emissions_i65, 0.002); end
  def test_outputs_emissions_j65; assert_in_epsilon(6.32385787160368, worksheet.outputs_emissions_j65, 0.002); end
  def test_outputs_emissions_k65; assert_in_epsilon(6.815285255318741, worksheet.outputs_emissions_k65, 0.002); end
  def test_outputs_emissions_l65; assert_in_epsilon(7.19506059785574, worksheet.outputs_emissions_l65, 0.002); end
  def test_outputs_emissions_p65; assert_in_epsilon(7.364267299339357, worksheet.outputs_emissions_p65, 0.002); end
  def test_outputs_emissions_q65; assert_in_epsilon(7.58827436359007, worksheet.outputs_emissions_q65, 0.002); end
  def test_outputs_emissions_r65; assert_in_epsilon(7.989494105552195, worksheet.outputs_emissions_r65, 0.002); end
  def test_outputs_emissions_s65; assert_in_epsilon(8.392617214001401, worksheet.outputs_emissions_s65, 0.002); end
  def test_outputs_emissions_t65; assert_in_epsilon(8.777659876331198, worksheet.outputs_emissions_t65, 0.002); end
  def test_outputs_emissions_u65; assert_in_epsilon(9.151944896671603, worksheet.outputs_emissions_u65, 0.002); end
  def test_outputs_emissions_v65; assert_in_epsilon(9.518155764753814, worksheet.outputs_emissions_v65, 0.002); end
  def test_outputs_emissions_w65; assert_in_epsilon(9.77055960404817, worksheet.outputs_emissions_w65, 0.002); end
  def test_outputs_emissions_x65; assert_in_epsilon(9.981439056365828, worksheet.outputs_emissions_x65, 0.002); end
  def test_outputs_emissions_y65; assert_in_epsilon(10.02706123514901, worksheet.outputs_emissions_y65, 0.002); end
  def test_outputs_emissions_z65; assert_in_epsilon(10.055051036020744, worksheet.outputs_emissions_z65, 0.002); end
  def test_outputs_emissions_aa65; assert_in_epsilon(10.070698064779236, worksheet.outputs_emissions_aa65, 0.002); end
  def test_outputs_emissions_ab65; assert_in_epsilon(10.075607310241976, worksheet.outputs_emissions_ab65, 0.002); end
  def test_outputs_emissions_ac65; assert_in_epsilon(10.078277344372088, worksheet.outputs_emissions_ac65, 0.002); end
  def test_outputs_emissions_ad65; assert_in_epsilon(10.079554791331413, worksheet.outputs_emissions_ad65, 0.002); end
  def test_outputs_emissions_ae65; assert_in_epsilon(10.080041911291783, worksheet.outputs_emissions_ae65, 0.002); end
  def test_outputs_emissions_af65; assert_in_epsilon(10.080285814349523, worksheet.outputs_emissions_af65, 0.002); end
  def test_outputs_emissions_ag65; assert_in_epsilon(10.08039628019828, worksheet.outputs_emissions_ag65, 0.002); end
  def test_outputs_emissions_ah65; assert_in_epsilon(10.080442562085958, worksheet.outputs_emissions_ah65, 0.002); end
  def test_outputs_emissions_d66; assert_equal("N2O", worksheet.outputs_emissions_d66); end
  def test_outputs_emissions_h66; assert_in_epsilon(3.2380841507989895, worksheet.outputs_emissions_h66, 0.002); end
  def test_outputs_emissions_i66; assert_in_epsilon(3.1897596536509, worksheet.outputs_emissions_i66, 0.002); end
  def test_outputs_emissions_j66; assert_in_epsilon(3.13992066945797, worksheet.outputs_emissions_j66, 0.002); end
  def test_outputs_emissions_k66; assert_in_epsilon(3.3631391265087096, worksheet.outputs_emissions_k66, 0.002); end
  def test_outputs_emissions_l66; assert_in_epsilon(3.5161561617384898, worksheet.outputs_emissions_l66, 0.002); end
  def test_outputs_emissions_p66; assert_in_epsilon(2.3696417602460067, worksheet.outputs_emissions_p66, 0.002); end
  def test_outputs_emissions_q66; assert_in_epsilon(2.4520754631418584, worksheet.outputs_emissions_q66, 0.002); end
  def test_outputs_emissions_r66; assert_in_epsilon(2.553609307248557, worksheet.outputs_emissions_r66, 0.002); end
  def test_outputs_emissions_s66; assert_in_epsilon(2.6551625999935307, worksheet.outputs_emissions_s66, 0.002); end
  def test_outputs_emissions_t66; assert_in_epsilon(2.75493072003148, worksheet.outputs_emissions_t66, 0.002); end
  def test_outputs_emissions_u66; assert_in_epsilon(2.8548077574011237, worksheet.outputs_emissions_u66, 0.002); end
  def test_outputs_emissions_v66; assert_in_epsilon(2.9552950639318554, worksheet.outputs_emissions_v66, 0.002); end
  def test_outputs_emissions_w66; assert_in_epsilon(3.029918176410811, worksheet.outputs_emissions_w66, 0.002); end
  def test_outputs_emissions_x66; assert_in_epsilon(3.108102662716212, worksheet.outputs_emissions_x66, 0.002); end
  def test_outputs_emissions_y66; assert_in_epsilon(3.122033882508542, worksheet.outputs_emissions_y66, 0.002); end
  def test_outputs_emissions_z66; assert_in_epsilon(3.1312045175302594, worksheet.outputs_emissions_z66, 0.002); end
  def test_outputs_emissions_aa66; assert_in_epsilon(3.1367752662918287, worksheet.outputs_emissions_aa66, 0.002); end
  def test_outputs_emissions_ab66; assert_in_epsilon(3.1383522594884874, worksheet.outputs_emissions_ab66, 0.002); end
  def test_outputs_emissions_ac66; assert_in_epsilon(3.139249770222385, worksheet.outputs_emissions_ac66, 0.002); end
  def test_outputs_emissions_ad66; assert_in_epsilon(3.139692259120452, worksheet.outputs_emissions_ad66, 0.002); end
  def test_outputs_emissions_ae66; assert_in_epsilon(3.139852693726026, worksheet.outputs_emissions_ae66, 0.002); end
  def test_outputs_emissions_af66; assert_in_epsilon(3.1399352176090907, worksheet.outputs_emissions_af66, 0.002); end
  def test_outputs_emissions_ag66; assert_in_epsilon(3.1399729172153594, worksheet.outputs_emissions_ag66, 0.002); end
  def test_outputs_emissions_ah66; assert_in_epsilon(3.1399883534105792, worksheet.outputs_emissions_ah66, 0.002); end
  def test_outputs_emissions_d67; assert_equal("Total", worksheet.outputs_emissions_d67); end
  def test_outputs_emissions_h67; assert_in_epsilon(34.85493641440893, worksheet.outputs_emissions_h67, 0.002); end
  def test_outputs_emissions_i67; assert_in_epsilon(35.76871935887767, worksheet.outputs_emissions_i67, 0.002); end
  def test_outputs_emissions_j67; assert_in_epsilon(37.821748831061655, worksheet.outputs_emissions_j67, 0.002); end
  def test_outputs_emissions_k67; assert_in_epsilon(41.70222094182745, worksheet.outputs_emissions_k67, 0.002); end
  def test_outputs_emissions_l67; assert_in_epsilon(45.73429569959423, worksheet.outputs_emissions_l67, 0.002); end
  def test_outputs_emissions_p67; assert_in_epsilon(44.09912652742134, worksheet.outputs_emissions_p67, 0.002); end
  def test_outputs_emissions_q67; assert_in_epsilon(45.49579922712561, worksheet.outputs_emissions_q67, 0.002); end
  def test_outputs_emissions_r67; assert_in_epsilon(48.47715853009537, worksheet.outputs_emissions_r67, 0.002); end
  def test_outputs_emissions_s67; assert_in_epsilon(53.31936189268416, worksheet.outputs_emissions_s67, 0.002); end
  def test_outputs_emissions_t67; assert_in_epsilon(57.84703039309308, worksheet.outputs_emissions_t67, 0.002); end
  def test_outputs_emissions_u67; assert_in_epsilon(61.72002500459838, worksheet.outputs_emissions_u67, 0.002); end
  def test_outputs_emissions_v67; assert_in_epsilon(64.25785308922053, worksheet.outputs_emissions_v67, 0.002); end
  def test_outputs_emissions_w67; assert_in_epsilon(65.40104845425293, worksheet.outputs_emissions_w67, 0.002); end
  def test_outputs_emissions_x67; assert_in_epsilon(66.26554805415807, worksheet.outputs_emissions_x67, 0.002); end
  def test_outputs_emissions_y67; assert_in_epsilon(66.51555182188386, worksheet.outputs_emissions_y67, 0.002); end
  def test_outputs_emissions_z67; assert_in_epsilon(66.63972525218034, worksheet.outputs_emissions_z67, 0.002); end
  def test_outputs_emissions_aa67; assert_in_epsilon(66.70785247606635, worksheet.outputs_emissions_aa67, 0.002); end
  def test_outputs_emissions_ab67; assert_in_epsilon(66.73217921927132, worksheet.outputs_emissions_ab67, 0.002); end
  def test_outputs_emissions_ac67; assert_in_epsilon(66.74409372612763, worksheet.outputs_emissions_ac67, 0.002); end
  def test_outputs_emissions_ad67; assert_in_epsilon(66.74983399219472, worksheet.outputs_emissions_ad67, 0.002); end
  def test_outputs_emissions_ae67; assert_in_epsilon(66.75214297558179, worksheet.outputs_emissions_ae67, 0.002); end
  def test_outputs_emissions_af67; assert_in_epsilon(66.75324098217887, worksheet.outputs_emissions_af67, 0.002); end
  def test_outputs_emissions_ag67; assert_in_epsilon(66.75374408126167, worksheet.outputs_emissions_ag67, 0.002); end
  def test_outputs_emissions_ah67; assert_in_epsilon(66.75395913616036, worksheet.outputs_emissions_ah67, 0.002); end
  def test_outputs_emissions_c45; assert_equal("Column1", worksheet.outputs_emissions_c45); end
  def test_outputs_emissions_d45; assert_equal("IPCC Sector", worksheet.outputs_emissions_d45); end
  def test_outputs_emissions_h45; assert_equal("1990", worksheet.outputs_emissions_h45); end
  def test_outputs_emissions_i45; assert_equal("1995", worksheet.outputs_emissions_i45); end
  def test_outputs_emissions_j45; assert_equal("2000", worksheet.outputs_emissions_j45); end
  def test_outputs_emissions_k45; assert_equal("2005", worksheet.outputs_emissions_k45); end
  def test_outputs_emissions_l45; assert_equal("2010", worksheet.outputs_emissions_l45); end
  def test_outputs_emissions_m45; assert_equal("….", worksheet.outputs_emissions_m45); end
  def test_outputs_emissions_p45; assert_equal("2011", worksheet.outputs_emissions_p45); end
  def test_outputs_emissions_q45; assert_equal("2015", worksheet.outputs_emissions_q45); end
  def test_outputs_emissions_r45; assert_equal("2020", worksheet.outputs_emissions_r45); end
  def test_outputs_emissions_s45; assert_equal("2025", worksheet.outputs_emissions_s45); end
  def test_outputs_emissions_t45; assert_equal("2030", worksheet.outputs_emissions_t45); end
  def test_outputs_emissions_u45; assert_equal("2035", worksheet.outputs_emissions_u45); end
  def test_outputs_emissions_v45; assert_equal("2040", worksheet.outputs_emissions_v45); end
  def test_outputs_emissions_w45; assert_equal("2045", worksheet.outputs_emissions_w45); end
  def test_outputs_emissions_x45; assert_equal("2050", worksheet.outputs_emissions_x45); end
  def test_outputs_emissions_y45; assert_equal("2055", worksheet.outputs_emissions_y45); end
  def test_outputs_emissions_z45; assert_equal("2060", worksheet.outputs_emissions_z45); end
  def test_outputs_emissions_aa45; assert_equal("2065", worksheet.outputs_emissions_aa45); end
  def test_outputs_emissions_ab45; assert_equal("2070", worksheet.outputs_emissions_ab45); end
  def test_outputs_emissions_ac45; assert_equal("2075", worksheet.outputs_emissions_ac45); end
  def test_outputs_emissions_ad45; assert_equal("2080", worksheet.outputs_emissions_ad45); end
  def test_outputs_emissions_ae45; assert_equal("2085", worksheet.outputs_emissions_ae45); end
  def test_outputs_emissions_af45; assert_equal("2090", worksheet.outputs_emissions_af45); end
  def test_outputs_emissions_ag45; assert_equal("2095", worksheet.outputs_emissions_ag45); end
  def test_outputs_emissions_ah45; assert_equal("2100", worksheet.outputs_emissions_ah45); end
  def test_outputs_emissions_c46; assert_equal("G.1A", worksheet.outputs_emissions_c46); end
  def test_outputs_emissions_d46; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d46); end
  def test_outputs_emissions_h46; assert_in_epsilon(21.62825807111542, worksheet.outputs_emissions_h46, 0.002); end
  def test_outputs_emissions_i46; assert_in_epsilon(22.511665420052775, worksheet.outputs_emissions_i46, 0.002); end
  def test_outputs_emissions_j46; assert_in_epsilon(24.432527742912075, worksheet.outputs_emissions_j46, 0.002); end
  def test_outputs_emissions_k46; assert_in_epsilon(28.22731050431886, worksheet.outputs_emissions_k46, 0.002); end
  def test_outputs_emissions_l46; assert_in_epsilon(31.28377980273924, worksheet.outputs_emissions_l46, 0.002); end
  def test_outputs_emissions_p46; assert_in_epsilon(29.609261262708937, worksheet.outputs_emissions_p46, 0.002); end
  def test_outputs_emissions_q46; assert_in_epsilon(29.997486308196308, worksheet.outputs_emissions_q46, 0.002); end
  def test_outputs_emissions_r46; assert_in_epsilon(33.62152943906316, worksheet.outputs_emissions_r46, 0.002); end
  def test_outputs_emissions_s46; assert_in_epsilon(37.314104590739795, worksheet.outputs_emissions_s46, 0.002); end
  def test_outputs_emissions_t46; assert_in_epsilon(40.62571151457028, worksheet.outputs_emissions_t46, 0.002); end
  def test_outputs_emissions_u46; assert_in_epsilon(43.119458861027965, worksheet.outputs_emissions_u46, 0.002); end
  def test_outputs_emissions_v46; assert_in_epsilon(45.7345690949792, worksheet.outputs_emissions_v46, 0.002); end
  def test_outputs_emissions_w46; assert_in_epsilon(47.397754683816835, worksheet.outputs_emissions_w46, 0.002); end
  def test_outputs_emissions_x46; assert_in_epsilon(48.48746364600954, worksheet.outputs_emissions_x46, 0.002); end
  def test_outputs_emissions_c47; assert_equal("G.1B", worksheet.outputs_emissions_c47); end
  def test_outputs_emissions_d47; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d47); end
  def test_outputs_emissions_h47; assert_in_epsilon(1.97211881029452, worksheet.outputs_emissions_h47, 0.002); end
  def test_outputs_emissions_i47; assert_in_epsilon(1.92072397186996, worksheet.outputs_emissions_i47, 0.002); end
  def test_outputs_emissions_j47; assert_in_epsilon(2.0150954274728803, worksheet.outputs_emissions_j47, 0.002); end
  def test_outputs_emissions_k47; assert_in_epsilon(2.27969998630441, worksheet.outputs_emissions_k47, 0.002); end
  def test_outputs_emissions_l47; assert_in_epsilon(2.48650439282281, worksheet.outputs_emissions_l47, 0.002); end
  def test_outputs_emissions_p47; assert_in_epsilon(2.055726760518614, worksheet.outputs_emissions_p47, 0.002); end
  def test_outputs_emissions_q47; assert_in_epsilon(2.085922601550736, worksheet.outputs_emissions_q47, 0.002); end
  def test_outputs_emissions_r47; assert_in_epsilon(2.3192479347478914, worksheet.outputs_emissions_r47, 0.002); end
  def test_outputs_emissions_s47; assert_in_epsilon(2.570321628906296, worksheet.outputs_emissions_s47, 0.002); end
  def test_outputs_emissions_t47; assert_in_epsilon(2.79411149112664, worksheet.outputs_emissions_t47, 0.002); end
  def test_outputs_emissions_u47; assert_in_epsilon(2.990399105312899, worksheet.outputs_emissions_u47, 0.002); end
  def test_outputs_emissions_v47; assert_in_epsilon(3.2022472512274165, worksheet.outputs_emissions_v47, 0.002); end
  def test_outputs_emissions_w47; assert_in_epsilon(3.3683718619934813, worksheet.outputs_emissions_w47, 0.002); end
  def test_outputs_emissions_x47; assert_in_epsilon(3.5210840442888425, worksheet.outputs_emissions_x47, 0.002); end
  def test_outputs_emissions_c48; assert_equal("G.2", worksheet.outputs_emissions_c48); end
  def test_outputs_emissions_d48; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d48); end
  def test_outputs_emissions_h48; assert_in_delta(0.8635527545553001, worksheet.outputs_emissions_h48, 0.002); end
  def test_outputs_emissions_i48; assert_in_epsilon(1.0090538613606506, worksheet.outputs_emissions_i48, 0.002); end
  def test_outputs_emissions_j48; assert_in_epsilon(1.05186394402772, worksheet.outputs_emissions_j48, 0.002); end
  def test_outputs_emissions_k48; assert_in_epsilon(1.3834269715517598, worksheet.outputs_emissions_k48, 0.002); end
  def test_outputs_emissions_l48; assert_in_epsilon(1.8539335657936016, worksheet.outputs_emissions_l48, 0.002); end
  def test_outputs_emissions_p48; assert_in_epsilon(2.5111122709267653, worksheet.outputs_emissions_p48, 0.002); end
  def test_outputs_emissions_q48; assert_in_epsilon(2.64511619769537, worksheet.outputs_emissions_q48, 0.002); end
  def test_outputs_emissions_r48; assert_in_epsilon(2.9402426388420717, worksheet.outputs_emissions_r48, 0.002); end
  def test_outputs_emissions_s48; assert_in_epsilon(3.2042752288951206, worksheet.outputs_emissions_s48, 0.002); end
  def test_outputs_emissions_t48; assert_in_epsilon(3.470816835952868, worksheet.outputs_emissions_t48, 0.002); end
  def test_outputs_emissions_u48; assert_in_epsilon(3.7375857717154677, worksheet.outputs_emissions_u48, 0.002); end
  def test_outputs_emissions_v48; assert_in_epsilon(4.016707507889106, worksheet.outputs_emissions_v48, 0.002); end
  def test_outputs_emissions_w48; assert_in_epsilon(4.302089704792923, worksheet.outputs_emissions_w48, 0.002); end
  def test_outputs_emissions_x48; assert_in_epsilon(4.605800096566327, worksheet.outputs_emissions_x48, 0.002); end
  def test_outputs_emissions_c49; assert_equal("G.3", worksheet.outputs_emissions_c49); end
  def test_outputs_emissions_d49; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d49); end
  def test_outputs_emissions_h49; assert_in_delta(0.0, (worksheet.outputs_emissions_h49||0), 0.002); end
  def test_outputs_emissions_i49; assert_in_delta(0.0, (worksheet.outputs_emissions_i49||0), 0.002); end
  def test_outputs_emissions_j49; assert_in_delta(0.0, (worksheet.outputs_emissions_j49||0), 0.002); end
  def test_outputs_emissions_k49; assert_in_delta(0.0, (worksheet.outputs_emissions_k49||0), 0.002); end
  def test_outputs_emissions_l49; assert_in_delta(0.0, (worksheet.outputs_emissions_l49||0), 0.002); end
  def test_outputs_emissions_p49; assert_in_delta(0.0, (worksheet.outputs_emissions_p49||0), 0.002); end
  def test_outputs_emissions_q49; assert_in_delta(0.0, (worksheet.outputs_emissions_q49||0), 0.002); end
  def test_outputs_emissions_r49; assert_in_delta(0.0, (worksheet.outputs_emissions_r49||0), 0.002); end
  def test_outputs_emissions_s49; assert_in_delta(0.0, (worksheet.outputs_emissions_s49||0), 0.002); end
  def test_outputs_emissions_t49; assert_in_delta(0.0, (worksheet.outputs_emissions_t49||0), 0.002); end
  def test_outputs_emissions_u49; assert_in_delta(0.0, (worksheet.outputs_emissions_u49||0), 0.002); end
  def test_outputs_emissions_v49; assert_in_delta(0.0, (worksheet.outputs_emissions_v49||0), 0.002); end
  def test_outputs_emissions_w49; assert_in_delta(0.0, (worksheet.outputs_emissions_w49||0), 0.002); end
  def test_outputs_emissions_x49; assert_in_delta(0.0, (worksheet.outputs_emissions_x49||0), 0.002); end
  def test_outputs_emissions_c50; assert_equal("G.4", worksheet.outputs_emissions_c50); end
  def test_outputs_emissions_d50; assert_equal("Global Agriculture", worksheet.outputs_emissions_d50); end
  def test_outputs_emissions_h50; assert_in_epsilon(5.62178989983279, worksheet.outputs_emissions_h50, 0.002); end
  def test_outputs_emissions_i50; assert_in_epsilon(5.501831340352361, worksheet.outputs_emissions_i50, 0.002); end
  def test_outputs_emissions_j50; assert_in_epsilon(5.42376971473413, worksheet.outputs_emissions_j50, 0.002); end
  def test_outputs_emissions_k50; assert_in_epsilon(5.79845056426927, worksheet.outputs_emissions_k50, 0.002); end
  def test_outputs_emissions_l50; assert_in_epsilon(5.99880140697078, worksheet.outputs_emissions_l50, 0.002); end
  def test_outputs_emissions_p50; assert_in_epsilon(5.811749701999231, worksheet.outputs_emissions_p50, 0.002); end
  def test_outputs_emissions_q50; assert_in_epsilon(6.014671897161786, worksheet.outputs_emissions_q50, 0.002); end
  def test_outputs_emissions_r50; assert_in_epsilon(6.211435133043767, worksheet.outputs_emissions_r50, 0.002); end
  def test_outputs_emissions_s50; assert_in_epsilon(6.3926360429767595, worksheet.outputs_emissions_s50, 0.002); end
  def test_outputs_emissions_t50; assert_in_epsilon(6.587468170365656, worksheet.outputs_emissions_t50, 0.002); end
  def test_outputs_emissions_u50; assert_in_epsilon(6.805568089219404, worksheet.outputs_emissions_u50, 0.002); end
  def test_outputs_emissions_v50; assert_in_epsilon(7.00099322775619, worksheet.outputs_emissions_v50, 0.002); end
  def test_outputs_emissions_w50; assert_in_epsilon(7.124742734765876, worksheet.outputs_emissions_w50, 0.002); end
  def test_outputs_emissions_x50; assert_in_epsilon(7.242501620238741, worksheet.outputs_emissions_x50, 0.002); end
  def test_outputs_emissions_c51; assert_equal("G.5", worksheet.outputs_emissions_c51); end
  def test_outputs_emissions_d51; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d51); end
  def test_outputs_emissions_h51; assert_in_epsilon(3.6209602100000002, worksheet.outputs_emissions_h51, 0.002); end
  def test_outputs_emissions_i51; assert_in_epsilon(3.59930749, worksheet.outputs_emissions_i51, 0.002); end
  def test_outputs_emissions_j51; assert_in_epsilon(3.59907449, worksheet.outputs_emissions_j51, 0.002); end
  def test_outputs_emissions_k51; assert_in_epsilon(2.63452254, worksheet.outputs_emissions_k51, 0.002); end
  def test_outputs_emissions_l51; assert_in_epsilon(2.6399138200000003, worksheet.outputs_emissions_l51, 0.002); end
  def test_outputs_emissions_p51; assert_in_epsilon(2.63991382, worksheet.outputs_emissions_p51, 0.002); end
  def test_outputs_emissions_q51; assert_in_epsilon(3.229243246735753, worksheet.outputs_emissions_q51, 0.002); end
  def test_outputs_emissions_r51; assert_in_epsilon(1.8330639805249316, worksheet.outputs_emissions_r51, 0.002); end
  def test_outputs_emissions_s51; assert_in_epsilon(2.264591164362663, worksheet.outputs_emissions_s51, 0.002); end
  def test_outputs_emissions_t51; assert_in_epsilon(2.7742105417004033, worksheet.outputs_emissions_t51, 0.002); end
  def test_outputs_emissions_u51; assert_in_epsilon(3.4493711125689184, worksheet.outputs_emissions_u51, 0.002); end
  def test_outputs_emissions_v51; assert_in_epsilon(2.6698472353871567, worksheet.outputs_emissions_v51, 0.002); end
  def test_outputs_emissions_w51; assert_in_epsilon(1.5748299840208797, worksheet.outputs_emissions_w51, 0.002); end
  def test_outputs_emissions_x51; assert_in_delta(0.7868587353057583, worksheet.outputs_emissions_x51, 0.002); end
  def test_outputs_emissions_c52; assert_equal("G.6", worksheet.outputs_emissions_c52); end
  def test_outputs_emissions_d52; assert_equal("Global Waste", worksheet.outputs_emissions_d52); end
  def test_outputs_emissions_h52; assert_in_epsilon(1.1482566686108997, worksheet.outputs_emissions_h52, 0.002); end
  def test_outputs_emissions_i52; assert_in_epsilon(1.2261372752419115, worksheet.outputs_emissions_i52, 0.002); end
  def test_outputs_emissions_j52; assert_in_epsilon(1.2994175119148552, worksheet.outputs_emissions_j52, 0.002); end
  def test_outputs_emissions_k52; assert_in_epsilon(1.3788103753831609, worksheet.outputs_emissions_k52, 0.002); end
  def test_outputs_emissions_l52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_l52, 0.002); end
  def test_outputs_emissions_p52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_p52, 0.002); end
  def test_outputs_emissions_q52; assert_in_epsilon(1.523358975785654, worksheet.outputs_emissions_q52, 0.002); end
  def test_outputs_emissions_r52; assert_in_epsilon(1.5516394038735488, worksheet.outputs_emissions_r52, 0.002); end
  def test_outputs_emissions_s52; assert_in_epsilon(1.5734332368035222, worksheet.outputs_emissions_s52, 0.002); end
  def test_outputs_emissions_t52; assert_in_epsilon(1.5947118393772275, worksheet.outputs_emissions_t52, 0.002); end
  def test_outputs_emissions_u52; assert_in_epsilon(1.6176420647537106, worksheet.outputs_emissions_u52, 0.002); end
  def test_outputs_emissions_v52; assert_in_epsilon(1.6334887719814617, worksheet.outputs_emissions_v52, 0.002); end
  def test_outputs_emissions_w52; assert_in_epsilon(1.6332594848629325, worksheet.outputs_emissions_w52, 0.002); end
  def test_outputs_emissions_x52; assert_in_epsilon(1.6218399117488747, worksheet.outputs_emissions_x52, 0.002); end
  def test_outputs_emissions_c53; assert_equal("G.7", worksheet.outputs_emissions_c53); end
  def test_outputs_emissions_d53; assert_equal("Global Other", worksheet.outputs_emissions_d53); end
  def test_outputs_emissions_h53; assert_in_delta(0.0, (worksheet.outputs_emissions_h53||0), 0.002); end
  def test_outputs_emissions_i53; assert_in_delta(0.0, (worksheet.outputs_emissions_i53||0), 0.002); end
  def test_outputs_emissions_j53; assert_in_delta(0.0, (worksheet.outputs_emissions_j53||0), 0.002); end
  def test_outputs_emissions_k53; assert_in_delta(0.0, (worksheet.outputs_emissions_k53||0), 0.002); end
  def test_outputs_emissions_l53; assert_in_delta(0.0, (worksheet.outputs_emissions_l53||0), 0.002); end
  def test_outputs_emissions_p53; assert_in_delta(0.0, (worksheet.outputs_emissions_p53||0), 0.002); end
  def test_outputs_emissions_q53; assert_in_delta(0.0, (worksheet.outputs_emissions_q53||0), 0.002); end
  def test_outputs_emissions_r53; assert_in_delta(0.0, (worksheet.outputs_emissions_r53||0), 0.002); end
  def test_outputs_emissions_s53; assert_in_delta(0.0, (worksheet.outputs_emissions_s53||0), 0.002); end
  def test_outputs_emissions_t53; assert_in_delta(0.0, (worksheet.outputs_emissions_t53||0), 0.002); end
  def test_outputs_emissions_u53; assert_in_delta(0.0, (worksheet.outputs_emissions_u53||0), 0.002); end
  def test_outputs_emissions_v53; assert_in_delta(0.0, (worksheet.outputs_emissions_v53||0), 0.002); end
  def test_outputs_emissions_w53; assert_in_delta(0.0, (worksheet.outputs_emissions_w53||0), 0.002); end
  def test_outputs_emissions_x53; assert_in_delta(0.0, (worksheet.outputs_emissions_x53||0), 0.002); end
  def test_outputs_emissions_d54; assert_equal("Total", worksheet.outputs_emissions_d54); end
  def test_outputs_emissions_h54; assert_in_epsilon(34.85493641440893, worksheet.outputs_emissions_h54, 0.002); end
  def test_outputs_emissions_i54; assert_in_epsilon(35.76871935887767, worksheet.outputs_emissions_i54, 0.002); end
  def test_outputs_emissions_j54; assert_in_epsilon(37.821748831061655, worksheet.outputs_emissions_j54, 0.002); end
  def test_outputs_emissions_k54; assert_in_epsilon(41.70222094182745, worksheet.outputs_emissions_k54, 0.002); end
  def test_outputs_emissions_l54; assert_in_epsilon(45.73429569959423, worksheet.outputs_emissions_l54, 0.002); end
  def test_outputs_emissions_p54; assert_in_epsilon(44.09912652742134, worksheet.outputs_emissions_p54, 0.002); end
  def test_outputs_emissions_q54; assert_in_epsilon(45.49579922712561, worksheet.outputs_emissions_q54, 0.002); end
  def test_outputs_emissions_r54; assert_in_epsilon(48.47715853009537, worksheet.outputs_emissions_r54, 0.002); end
  def test_outputs_emissions_s54; assert_in_epsilon(53.31936189268416, worksheet.outputs_emissions_s54, 0.002); end
  def test_outputs_emissions_t54; assert_in_epsilon(57.84703039309308, worksheet.outputs_emissions_t54, 0.002); end
  def test_outputs_emissions_u54; assert_in_epsilon(61.72002500459838, worksheet.outputs_emissions_u54, 0.002); end
  def test_outputs_emissions_v54; assert_in_epsilon(64.25785308922053, worksheet.outputs_emissions_v54, 0.002); end
  def test_outputs_emissions_w54; assert_in_epsilon(65.40104845425293, worksheet.outputs_emissions_w54, 0.002); end
  def test_outputs_emissions_x54; assert_in_epsilon(66.26554805415807, worksheet.outputs_emissions_x54, 0.002); end
  def test_outputs_emissions_y54; assert_in_epsilon(66.51555182188386, worksheet.outputs_emissions_y54, 0.002); end
  def test_outputs_emissions_z54; assert_in_epsilon(66.63972525218034, worksheet.outputs_emissions_z54, 0.002); end
  def test_outputs_emissions_aa54; assert_in_epsilon(66.70785247606635, worksheet.outputs_emissions_aa54, 0.002); end
  def test_outputs_emissions_ab54; assert_in_epsilon(66.73217921927132, worksheet.outputs_emissions_ab54, 0.002); end
  def test_outputs_emissions_ac54; assert_in_epsilon(66.74409372612763, worksheet.outputs_emissions_ac54, 0.002); end
  def test_outputs_emissions_ad54; assert_in_epsilon(66.74983399219472, worksheet.outputs_emissions_ad54, 0.002); end
  def test_outputs_emissions_ae54; assert_in_epsilon(66.75214297558179, worksheet.outputs_emissions_ae54, 0.002); end
  def test_outputs_emissions_af54; assert_in_epsilon(66.75324098217887, worksheet.outputs_emissions_af54, 0.002); end
  def test_outputs_emissions_ag54; assert_in_epsilon(66.75374408126167, worksheet.outputs_emissions_ag54, 0.002); end
  def test_outputs_emissions_ah54; assert_in_epsilon(66.75395913616036, worksheet.outputs_emissions_ah54, 0.002); end
  def test_outputs_emissions_d13; assert_equal("IPCC Sector", worksheet.outputs_emissions_d13); end
  def test_outputs_emissions_p13; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p13, 0.002); end
  def test_outputs_emissions_q13; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q13, 0.002); end
  def test_outputs_emissions_r13; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r13, 0.002); end
  def test_outputs_emissions_s13; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s13, 0.002); end
  def test_outputs_emissions_t13; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t13, 0.002); end
  def test_outputs_emissions_u13; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u13, 0.002); end
  def test_outputs_emissions_v13; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v13, 0.002); end
  def test_outputs_emissions_w13; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w13, 0.002); end
  def test_outputs_emissions_x13; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x13, 0.002); end
  def test_outputs_emissions_y13; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y13, 0.002); end
  def test_outputs_emissions_z13; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z13, 0.002); end
  def test_outputs_emissions_aa13; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa13, 0.002); end
  def test_outputs_emissions_ab13; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab13, 0.002); end
  def test_outputs_emissions_ac13; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac13, 0.002); end
  def test_outputs_emissions_ad13; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad13, 0.002); end
  def test_outputs_emissions_ae13; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae13, 0.002); end
  def test_outputs_emissions_af13; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af13, 0.002); end
  def test_outputs_emissions_ag13; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag13, 0.002); end
  def test_outputs_emissions_ah13; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah13, 0.002); end
  def test_outputs_emissions_c14; assert_equal("G.1A", worksheet.outputs_emissions_c14); end
  def test_outputs_emissions_d14; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d14); end
  def test_outputs_emissions_p14; assert_in_epsilon(4.250271657659748, worksheet.outputs_emissions_p14, 0.002); end
  def test_outputs_emissions_q14; assert_in_epsilon(4.095341855661548, worksheet.outputs_emissions_q14, 0.002); end
  def test_outputs_emissions_r14; assert_in_epsilon(4.356955168434681, worksheet.outputs_emissions_r14, 0.002); end
  def test_outputs_emissions_s14; assert_in_epsilon(4.616132392436189, worksheet.outputs_emissions_s14, 0.002); end
  def test_outputs_emissions_t14; assert_in_epsilon(4.822078968017242, worksheet.outputs_emissions_t14, 0.002); end
  def test_outputs_emissions_u14; assert_in_epsilon(4.93163152484689, worksheet.outputs_emissions_u14, 0.002); end
  def test_outputs_emissions_v14; assert_in_epsilon(5.0598686617845265, worksheet.outputs_emissions_v14, 0.002); end
  def test_outputs_emissions_w14; assert_in_epsilon(5.09191280898222, worksheet.outputs_emissions_w14, 0.002); end
  def test_outputs_emissions_x14; assert_in_epsilon(5.07671896822875, worksheet.outputs_emissions_x14, 0.002); end
  def test_outputs_emissions_c15; assert_equal("G.1B", worksheet.outputs_emissions_c15); end
  def test_outputs_emissions_d15; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d15); end
  def test_outputs_emissions_p15; assert_in_delta(0.29509000946028907, worksheet.outputs_emissions_p15, 0.002); end
  def test_outputs_emissions_q15; assert_in_delta(0.28477606590213, worksheet.outputs_emissions_q15, 0.002); end
  def test_outputs_emissions_r15; assert_in_delta(0.30054728160108507, worksheet.outputs_emissions_r15, 0.002); end
  def test_outputs_emissions_s15; assert_in_delta(0.3179747996182177, worksheet.outputs_emissions_s15, 0.002); end
  def test_outputs_emissions_t15; assert_in_delta(0.33164776082321323, worksheet.outputs_emissions_t15, 0.002); end
  def test_outputs_emissions_u15; assert_in_delta(0.34201603844718204, worksheet.outputs_emissions_u15, 0.002); end
  def test_outputs_emissions_v15; assert_in_delta(0.35428234778208567, worksheet.outputs_emissions_v15, 0.002); end
  def test_outputs_emissions_w15; assert_in_delta(0.36186220093999455, worksheet.outputs_emissions_w15, 0.002); end
  def test_outputs_emissions_x15; assert_in_delta(0.36866341961856575, worksheet.outputs_emissions_x15, 0.002); end
  def test_outputs_emissions_c16; assert_equal("G.2", worksheet.outputs_emissions_c16); end
  def test_outputs_emissions_d16; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d16); end
  def test_outputs_emissions_p16; assert_in_delta(0.36045848019057186, worksheet.outputs_emissions_p16, 0.002); end
  def test_outputs_emissions_q16; assert_in_delta(0.361118760625964, worksheet.outputs_emissions_q16, 0.002); end
  def test_outputs_emissions_r16; assert_in_delta(0.3810208986766411, worksheet.outputs_emissions_r16, 0.002); end
  def test_outputs_emissions_s16; assert_in_delta(0.39640127615589116, worksheet.outputs_emissions_s16, 0.002); end
  def test_outputs_emissions_t16; assert_in_delta(0.4119694706266489, worksheet.outputs_emissions_t16, 0.002); end
  def test_outputs_emissions_u16; assert_in_delta(0.42747280011138256, worksheet.outputs_emissions_u16, 0.002); end
  def test_outputs_emissions_v16; assert_in_delta(0.4443905965422971, worksheet.outputs_emissions_v16, 0.002); end
  def test_outputs_emissions_w16; assert_in_delta(0.4621709576615242, worksheet.outputs_emissions_w16, 0.002); end
  def test_outputs_emissions_x16; assert_in_delta(0.48223501408146796, worksheet.outputs_emissions_x16, 0.002); end
  def test_outputs_emissions_c17; assert_equal("G.3", worksheet.outputs_emissions_c17); end
  def test_outputs_emissions_d17; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d17); end
  def test_outputs_emissions_p17; assert_in_delta(0.0, (worksheet.outputs_emissions_p17||0), 0.002); end
  def test_outputs_emissions_q17; assert_in_delta(0.0, (worksheet.outputs_emissions_q17||0), 0.002); end
  def test_outputs_emissions_r17; assert_in_delta(0.0, (worksheet.outputs_emissions_r17||0), 0.002); end
  def test_outputs_emissions_s17; assert_in_delta(0.0, (worksheet.outputs_emissions_s17||0), 0.002); end
  def test_outputs_emissions_t17; assert_in_delta(0.0, (worksheet.outputs_emissions_t17||0), 0.002); end
  def test_outputs_emissions_u17; assert_in_delta(0.0, (worksheet.outputs_emissions_u17||0), 0.002); end
  def test_outputs_emissions_v17; assert_in_delta(0.0, (worksheet.outputs_emissions_v17||0), 0.002); end
  def test_outputs_emissions_w17; assert_in_delta(0.0, (worksheet.outputs_emissions_w17||0), 0.002); end
  def test_outputs_emissions_x17; assert_in_delta(0.0, (worksheet.outputs_emissions_x17||0), 0.002); end
  def test_outputs_emissions_c18; assert_equal("G.4", worksheet.outputs_emissions_c18); end
  def test_outputs_emissions_d18; assert_equal("Global Agriculture", worksheet.outputs_emissions_d18); end
  def test_outputs_emissions_p18; assert_in_delta(0.8342496228006158, worksheet.outputs_emissions_p18, 0.002); end
  def test_outputs_emissions_q18; assert_in_delta(0.8211400553848271, worksheet.outputs_emissions_q18, 0.002); end
  def test_outputs_emissions_r18; assert_in_delta(0.8049290100071632, worksheet.outputs_emissions_r18, 0.002); end
  def test_outputs_emissions_s18; assert_in_delta(0.7908337781301981, worksheet.outputs_emissions_s18, 0.002); end
  def test_outputs_emissions_t18; assert_in_delta(0.7819011786516215, worksheet.outputs_emissions_t18, 0.002); end
  def test_outputs_emissions_u18; assert_in_delta(0.7783621367201522, worksheet.outputs_emissions_u18, 0.002); end
  def test_outputs_emissions_v18; assert_in_delta(0.7745586530163274, worksheet.outputs_emissions_v18, 0.002); end
  def test_outputs_emissions_w18; assert_in_delta(0.7654069065901149, worksheet.outputs_emissions_w18, 0.002); end
  def test_outputs_emissions_x18; assert_in_delta(0.7583020968332181, worksheet.outputs_emissions_x18, 0.002); end
  def test_outputs_emissions_c19; assert_equal("G.5", worksheet.outputs_emissions_c19); end
  def test_outputs_emissions_d19; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d19); end
  def test_outputs_emissions_p19; assert_in_delta(0.3789473431389396, worksheet.outputs_emissions_p19, 0.002); end
  def test_outputs_emissions_q19; assert_in_delta(0.4408654410104974, worksheet.outputs_emissions_q19, 0.002); end
  def test_outputs_emissions_r19; assert_in_delta(0.2375435537069991, worksheet.outputs_emissions_r19, 0.002); end
  def test_outputs_emissions_s19; assert_in_delta(0.2801528468683541, worksheet.outputs_emissions_s19, 0.002); end
  def test_outputs_emissions_t19; assert_in_delta(0.3292856126639764, worksheet.outputs_emissions_t19, 0.002); end
  def test_outputs_emissions_u19; assert_in_delta(0.39450929508338284, worksheet.outputs_emissions_u19, 0.002); end
  def test_outputs_emissions_v19; assert_in_delta(0.29537998554293965, worksheet.outputs_emissions_v19, 0.002); end
  def test_outputs_emissions_w19; assert_in_delta(0.1691830556341332, worksheet.outputs_emissions_w19, 0.002); end
  def test_outputs_emissions_x19; assert_in_delta(0.08238543257298186, worksheet.outputs_emissions_x19, 0.002); end
  def test_outputs_emissions_c20; assert_equal("G.6", worksheet.outputs_emissions_c20); end
  def test_outputs_emissions_d20; assert_equal("Global Waste", worksheet.outputs_emissions_d20); end
  def test_outputs_emissions_p20; assert_in_delta(0.21120726972391873, worksheet.outputs_emissions_p20, 0.002); end
  def test_outputs_emissions_q20; assert_in_delta(0.20797328518250155, worksheet.outputs_emissions_q20, 0.002); end
  def test_outputs_emissions_r20; assert_in_delta(0.20107423526067114, worksheet.outputs_emissions_r20, 0.002); end
  def test_outputs_emissions_s20; assert_in_delta(0.1946496160475188, worksheet.outputs_emissions_s20, 0.002); end
  def test_outputs_emissions_t20; assert_in_delta(0.1892847197999495, worksheet.outputs_emissions_t20, 0.002); end
  def test_outputs_emissions_u20; assert_in_delta(0.18501193691157625, worksheet.outputs_emissions_u20, 0.002); end
  def test_outputs_emissions_v20; assert_in_delta(0.18072190927525883, worksheet.outputs_emissions_v20, 0.002); end
  def test_outputs_emissions_w20; assert_in_delta(0.1754601024213657, worksheet.outputs_emissions_w20, 0.002); end
  def test_outputs_emissions_x20; assert_in_delta(0.16980936564380536, worksheet.outputs_emissions_x20, 0.002); end
  def test_outputs_emissions_c21; assert_equal("G.7", worksheet.outputs_emissions_c21); end
  def test_outputs_emissions_d21; assert_equal("Global Other", worksheet.outputs_emissions_d21); end
  def test_outputs_emissions_p21; assert_in_delta(0.0, (worksheet.outputs_emissions_p21||0), 0.002); end
  def test_outputs_emissions_q21; assert_in_delta(0.0, (worksheet.outputs_emissions_q21||0), 0.002); end
  def test_outputs_emissions_r21; assert_in_delta(0.0, (worksheet.outputs_emissions_r21||0), 0.002); end
  def test_outputs_emissions_s21; assert_in_delta(0.0, (worksheet.outputs_emissions_s21||0), 0.002); end
  def test_outputs_emissions_t21; assert_in_delta(0.0, (worksheet.outputs_emissions_t21||0), 0.002); end
  def test_outputs_emissions_u21; assert_in_delta(0.0, (worksheet.outputs_emissions_u21||0), 0.002); end
  def test_outputs_emissions_v21; assert_in_delta(0.0, (worksheet.outputs_emissions_v21||0), 0.002); end
  def test_outputs_emissions_w21; assert_in_delta(0.0, (worksheet.outputs_emissions_w21||0), 0.002); end
  def test_outputs_emissions_x21; assert_in_delta(0.0, (worksheet.outputs_emissions_x21||0), 0.002); end
  def test_outputs_emissions_d22; assert_equal("Total", worksheet.outputs_emissions_d22); end
  def test_outputs_emissions_p22; assert_in_epsilon(6.330224382974083, worksheet.outputs_emissions_p22, 0.002); end
  def test_outputs_emissions_q22; assert_in_epsilon(6.211215463767468, worksheet.outputs_emissions_q22, 0.002); end
  def test_outputs_emissions_r22; assert_in_epsilon(6.282070147687241, worksheet.outputs_emissions_r22, 0.002); end
  def test_outputs_emissions_s22; assert_in_epsilon(6.596144709256368, worksheet.outputs_emissions_s22, 0.002); end
  def test_outputs_emissions_t22; assert_in_epsilon(6.866167710582651, worksheet.outputs_emissions_t22, 0.002); end
  def test_outputs_emissions_u22; assert_in_epsilon(7.059003732120566, worksheet.outputs_emissions_u22, 0.002); end
  def test_outputs_emissions_v22; assert_in_epsilon(7.109202153943434, worksheet.outputs_emissions_v22, 0.002); end
  def test_outputs_emissions_w22; assert_in_epsilon(7.025996032229352, worksheet.outputs_emissions_w22, 0.002); end
  def test_outputs_emissions_x22; assert_in_epsilon(6.93811429697879, worksheet.outputs_emissions_x22, 0.002); end
  def test_outputs_emissions_p233; assert_in_delta(0.20277777777777778, worksheet.outputs_emissions_p233, 0.002); end
  def test_outputs_emissions_p230; assert_in_delta(0.1474927601153763, worksheet.outputs_emissions_p230, 0.002); end
  def test_outputs_emissions_q230; assert_in_delta(0.12978575897655448, worksheet.outputs_emissions_q230, 0.002); end
  def test_outputs_emissions_r230; assert_in_delta(0.1305153976456407, worksheet.outputs_emissions_r230, 0.002); end
  def test_outputs_emissions_s230; assert_in_delta(0.13335143659351564, worksheet.outputs_emissions_s230, 0.002); end
  def test_outputs_emissions_t230; assert_in_delta(0.13593257486727928, worksheet.outputs_emissions_t230, 0.002); end
  def test_outputs_emissions_u230; assert_in_delta(0.13545341678664855, worksheet.outputs_emissions_u230, 0.002); end
  def test_outputs_emissions_v230; assert_in_delta(0.13353335165536456, worksheet.outputs_emissions_v230, 0.002); end
  def test_outputs_emissions_w230; assert_in_delta(0.1277280795336291, worksheet.outputs_emissions_w230, 0.002); end
  def test_outputs_emissions_x230; assert_in_delta(0.12299909545790884, worksheet.outputs_emissions_x230, 0.002); end
  def test_outputs_emissions_p235; assert_in_delta(0.0, (worksheet.outputs_emissions_p235||0), 0.002); end
  def test_outputs_emissions_q235; assert_in_delta(-0.12005335804259479, worksheet.outputs_emissions_q235, 0.002); end
  def test_outputs_emissions_r235; assert_in_delta(-0.11510641238563186, worksheet.outputs_emissions_r235, 0.002); end
  def test_outputs_emissions_s235; assert_in_delta(-0.09587808588569766, worksheet.outputs_emissions_s235, 0.002); end
  def test_outputs_emissions_t235; assert_in_delta(-0.07837798437736235, worksheet.outputs_emissions_t235, 0.002); end
  def test_outputs_emissions_u235; assert_in_delta(-0.08162667319609426, worksheet.outputs_emissions_u235, 0.002); end
  def test_outputs_emissions_v235; assert_in_delta(-0.0946447028931588, worksheet.outputs_emissions_v235, 0.002); end
  def test_outputs_emissions_w235; assert_in_delta(-0.1340044119201936, worksheet.outputs_emissions_w235, 0.002); end
  def test_outputs_emissions_x235; assert_in_delta(-0.16606689466186186, worksheet.outputs_emissions_x235, 0.002); end
  def test_outputs_emissions_c213; assert_equal("Method", worksheet.outputs_emissions_c213); end
  def test_outputs_emissions_p213; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p213, 0.002); end
  def test_outputs_emissions_q213; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q213, 0.002); end
  def test_outputs_emissions_r213; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r213, 0.002); end
  def test_outputs_emissions_s213; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s213, 0.002); end
  def test_outputs_emissions_t213; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t213, 0.002); end
  def test_outputs_emissions_u213; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u213, 0.002); end
  def test_outputs_emissions_v213; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v213, 0.002); end
  def test_outputs_emissions_w213; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w213, 0.002); end
  def test_outputs_emissions_x213; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x213, 0.002); end
  def test_outputs_emissions_c214; assert_equal("Biochar", worksheet.outputs_emissions_c214); end
  def test_outputs_emissions_d214; assert_equal("GGR.biochar", worksheet.outputs_emissions_d214); end
  def test_outputs_emissions_g214; assert_equal("G.X2.C", worksheet.outputs_emissions_g214); end
  def test_outputs_emissions_p214; assert_in_delta(0.0, (worksheet.outputs_emissions_p214||0), 0.002); end
  def test_outputs_emissions_q214; assert_in_delta(0.0, (worksheet.outputs_emissions_q214||0), 0.002); end
  def test_outputs_emissions_r214; assert_in_delta(0.0, (worksheet.outputs_emissions_r214||0), 0.002); end
  def test_outputs_emissions_s214; assert_in_delta(0.0, (worksheet.outputs_emissions_s214||0), 0.002); end
  def test_outputs_emissions_t214; assert_in_delta(0.0, (worksheet.outputs_emissions_t214||0), 0.002); end
  def test_outputs_emissions_u214; assert_in_delta(0.0, (worksheet.outputs_emissions_u214||0), 0.002); end
  def test_outputs_emissions_v214; assert_in_delta(0.0, (worksheet.outputs_emissions_v214||0), 0.002); end
  def test_outputs_emissions_w214; assert_in_delta(0.0, (worksheet.outputs_emissions_w214||0), 0.002); end
  def test_outputs_emissions_x214; assert_in_delta(0.0, (worksheet.outputs_emissions_x214||0), 0.002); end
  def test_outputs_emissions_c215; assert_equal("Air capture", worksheet.outputs_emissions_c215); end
  def test_outputs_emissions_d215; assert_equal("GGR.air.capture", worksheet.outputs_emissions_d215); end
  def test_outputs_emissions_g215; assert_equal("G.X2.C", worksheet.outputs_emissions_g215); end
  def test_outputs_emissions_p215; assert_in_delta(0.0, (worksheet.outputs_emissions_p215||0), 0.002); end
  def test_outputs_emissions_q215; assert_in_delta(0.0, (worksheet.outputs_emissions_q215||0), 0.002); end
  def test_outputs_emissions_r215; assert_in_delta(0.0, (worksheet.outputs_emissions_r215||0), 0.002); end
  def test_outputs_emissions_s215; assert_in_delta(0.0, (worksheet.outputs_emissions_s215||0), 0.002); end
  def test_outputs_emissions_t215; assert_in_delta(0.0, (worksheet.outputs_emissions_t215||0), 0.002); end
  def test_outputs_emissions_u215; assert_in_delta(0.0, (worksheet.outputs_emissions_u215||0), 0.002); end
  def test_outputs_emissions_v215; assert_in_delta(0.0, (worksheet.outputs_emissions_v215||0), 0.002); end
  def test_outputs_emissions_w215; assert_in_delta(0.0, (worksheet.outputs_emissions_w215||0), 0.002); end
  def test_outputs_emissions_x215; assert_in_delta(0.0, (worksheet.outputs_emissions_x215||0), 0.002); end
  def test_outputs_emissions_c216; assert_equal("Ocean fertilisation", worksheet.outputs_emissions_c216); end
  def test_outputs_emissions_d216; assert_equal("GGR.ocean.fertilisation", worksheet.outputs_emissions_d216); end
  def test_outputs_emissions_g216; assert_equal("G.X2.C", worksheet.outputs_emissions_g216); end
  def test_outputs_emissions_p216; assert_in_delta(0.0, (worksheet.outputs_emissions_p216||0), 0.002); end
  def test_outputs_emissions_q216; assert_in_delta(0.0, (worksheet.outputs_emissions_q216||0), 0.002); end
  def test_outputs_emissions_r216; assert_in_delta(0.0, (worksheet.outputs_emissions_r216||0), 0.002); end
  def test_outputs_emissions_s216; assert_in_delta(0.0, (worksheet.outputs_emissions_s216||0), 0.002); end
  def test_outputs_emissions_t216; assert_in_delta(0.0, (worksheet.outputs_emissions_t216||0), 0.002); end
  def test_outputs_emissions_u216; assert_in_delta(0.0, (worksheet.outputs_emissions_u216||0), 0.002); end
  def test_outputs_emissions_v216; assert_in_delta(0.0, (worksheet.outputs_emissions_v216||0), 0.002); end
  def test_outputs_emissions_w216; assert_in_delta(0.0, (worksheet.outputs_emissions_w216||0), 0.002); end
  def test_outputs_emissions_x216; assert_in_delta(0.0, (worksheet.outputs_emissions_x216||0), 0.002); end
  def test_outputs_emissions_c217; assert_equal("Enhanced weathering ocean", worksheet.outputs_emissions_c217); end
  def test_outputs_emissions_d217; assert_equal("GGR.enhanced.weathering.ocean", worksheet.outputs_emissions_d217); end
  def test_outputs_emissions_g217; assert_equal("G.X2.C", worksheet.outputs_emissions_g217); end
  def test_outputs_emissions_p217; assert_in_delta(0.0, (worksheet.outputs_emissions_p217||0), 0.002); end
  def test_outputs_emissions_q217; assert_in_delta(0.0, (worksheet.outputs_emissions_q217||0), 0.002); end
  def test_outputs_emissions_r217; assert_in_delta(0.0, (worksheet.outputs_emissions_r217||0), 0.002); end
  def test_outputs_emissions_s217; assert_in_delta(0.0, (worksheet.outputs_emissions_s217||0), 0.002); end
  def test_outputs_emissions_t217; assert_in_delta(0.0, (worksheet.outputs_emissions_t217||0), 0.002); end
  def test_outputs_emissions_u217; assert_in_delta(0.0, (worksheet.outputs_emissions_u217||0), 0.002); end
  def test_outputs_emissions_v217; assert_in_delta(0.0, (worksheet.outputs_emissions_v217||0), 0.002); end
  def test_outputs_emissions_w217; assert_in_delta(0.0, (worksheet.outputs_emissions_w217||0), 0.002); end
  def test_outputs_emissions_x217; assert_in_delta(0.0, (worksheet.outputs_emissions_x217||0), 0.002); end
  def test_outputs_emissions_c218; assert_equal("Enhanced weathering terrestrial", worksheet.outputs_emissions_c218); end
  def test_outputs_emissions_d218; assert_equal("GGR.enhanced.weathering.terrestrial", worksheet.outputs_emissions_d218); end
  def test_outputs_emissions_g218; assert_equal("G.X2.C", worksheet.outputs_emissions_g218); end
  def test_outputs_emissions_p218; assert_in_delta(0.0, (worksheet.outputs_emissions_p218||0), 0.002); end
  def test_outputs_emissions_q218; assert_in_delta(0.0, (worksheet.outputs_emissions_q218||0), 0.002); end
  def test_outputs_emissions_r218; assert_in_delta(0.0, (worksheet.outputs_emissions_r218||0), 0.002); end
  def test_outputs_emissions_s218; assert_in_delta(0.0, (worksheet.outputs_emissions_s218||0), 0.002); end
  def test_outputs_emissions_t218; assert_in_delta(0.0, (worksheet.outputs_emissions_t218||0), 0.002); end
  def test_outputs_emissions_u218; assert_in_delta(0.0, (worksheet.outputs_emissions_u218||0), 0.002); end
  def test_outputs_emissions_v218; assert_in_delta(0.0, (worksheet.outputs_emissions_v218||0), 0.002); end
  def test_outputs_emissions_w218; assert_in_delta(0.0, (worksheet.outputs_emissions_w218||0), 0.002); end
  def test_outputs_emissions_x218; assert_in_delta(0.0, (worksheet.outputs_emissions_x218||0), 0.002); end
  def test_outputs_emissions_h183; assert_in_delta(0.012219185474713169, worksheet.outputs_emissions_h183, 0.002); end
  def test_outputs_emissions_i183; assert_in_delta(0.01203682888170151, worksheet.outputs_emissions_i183, 0.002); end
  def test_outputs_emissions_j183; assert_in_delta(0.011848757243237622, worksheet.outputs_emissions_j183, 0.002); end
  def test_outputs_emissions_k183; assert_in_delta(0.012691091043429093, worksheet.outputs_emissions_k183, 0.002); end
  def test_outputs_emissions_l183; assert_in_delta(0.013268513817881094, worksheet.outputs_emissions_l183, 0.002); end
  def test_outputs_emissions_p183; assert_in_delta(0.008942044378286818, worksheet.outputs_emissions_p183, 0.002); end
  def test_outputs_emissions_q183; assert_in_delta(0.009253114955252295, worksheet.outputs_emissions_q183, 0.002); end
  def test_outputs_emissions_r183; assert_in_delta(0.009636261536787007, worksheet.outputs_emissions_r183, 0.002); end
  def test_outputs_emissions_s183; assert_in_delta(0.01001948150940955, worksheet.outputs_emissions_s183, 0.002); end
  def test_outputs_emissions_t183; assert_in_delta(0.010395964981250868, worksheet.outputs_emissions_t183, 0.002); end
  def test_outputs_emissions_u183; assert_in_delta(0.010772859461891033, worksheet.outputs_emissions_u183, 0.002); end
  def test_outputs_emissions_v183; assert_in_delta(0.01115205684502587, worksheet.outputs_emissions_v183, 0.002); end
  def test_outputs_emissions_w183; assert_in_delta(0.011433653495889854, worksheet.outputs_emissions_w183, 0.002); end
  def test_outputs_emissions_x183; assert_in_delta(0.011728689293268724, worksheet.outputs_emissions_x183, 0.002); end
  def test_outputs_emissions_y183; assert_in_delta(0.011781259933994497, worksheet.outputs_emissions_y183, 0.002); end
  def test_outputs_emissions_z183; assert_in_delta(0.011815866103887771, worksheet.outputs_emissions_z183, 0.002); end
  def test_outputs_emissions_aa183; assert_in_delta(0.011836887797327656, worksheet.outputs_emissions_aa183, 0.002); end
  def test_outputs_emissions_ab183; assert_in_delta(0.011842838715050897, worksheet.outputs_emissions_ab183, 0.002); end
  def test_outputs_emissions_ac183; assert_in_delta(0.011846225548009, worksheet.outputs_emissions_ac183, 0.002); end
  def test_outputs_emissions_ad183; assert_in_delta(0.011847895317435667, worksheet.outputs_emissions_ad183, 0.002); end
  def test_outputs_emissions_ae183; assert_in_delta(0.011848500731041607, worksheet.outputs_emissions_ae183, 0.002); end
  def test_outputs_emissions_af183; assert_in_delta(0.011848812141921097, worksheet.outputs_emissions_af183, 0.002); end
  def test_outputs_emissions_ag183; assert_in_delta(0.011848954404586262, worksheet.outputs_emissions_ag183, 0.002); end
  def test_outputs_emissions_ah183; assert_in_delta(0.011849012654379544, worksheet.outputs_emissions_ah183, 0.002); end
  def test_outputs_emissions_c174; assert_equal("Column1", worksheet.outputs_emissions_c174); end
  def test_outputs_emissions_d174; assert_equal("IPCC Sector", worksheet.outputs_emissions_d174); end
  def test_outputs_emissions_h174; assert_equal("1990", worksheet.outputs_emissions_h174); end
  def test_outputs_emissions_i174; assert_equal("1995", worksheet.outputs_emissions_i174); end
  def test_outputs_emissions_j174; assert_equal("2000", worksheet.outputs_emissions_j174); end
  def test_outputs_emissions_k174; assert_equal("2005", worksheet.outputs_emissions_k174); end
  def test_outputs_emissions_l174; assert_equal("2010", worksheet.outputs_emissions_l174); end
  def test_outputs_emissions_p174; assert_equal("2011", worksheet.outputs_emissions_p174); end
  def test_outputs_emissions_q174; assert_equal("2015", worksheet.outputs_emissions_q174); end
  def test_outputs_emissions_r174; assert_equal("2020", worksheet.outputs_emissions_r174); end
  def test_outputs_emissions_s174; assert_equal("2025", worksheet.outputs_emissions_s174); end
  def test_outputs_emissions_t174; assert_equal("2030", worksheet.outputs_emissions_t174); end
  def test_outputs_emissions_u174; assert_equal("2035", worksheet.outputs_emissions_u174); end
  def test_outputs_emissions_v174; assert_equal("2040", worksheet.outputs_emissions_v174); end
  def test_outputs_emissions_w174; assert_equal("2045", worksheet.outputs_emissions_w174); end
  def test_outputs_emissions_x174; assert_equal("2050", worksheet.outputs_emissions_x174); end
  def test_outputs_emissions_y174; assert_equal("2055", worksheet.outputs_emissions_y174); end
  def test_outputs_emissions_z174; assert_equal("2060", worksheet.outputs_emissions_z174); end
  def test_outputs_emissions_aa174; assert_equal("2065", worksheet.outputs_emissions_aa174); end
  def test_outputs_emissions_ab174; assert_equal("2070", worksheet.outputs_emissions_ab174); end
  def test_outputs_emissions_ac174; assert_equal("2075", worksheet.outputs_emissions_ac174); end
  def test_outputs_emissions_ad174; assert_equal("2080", worksheet.outputs_emissions_ad174); end
  def test_outputs_emissions_ae174; assert_equal("2085", worksheet.outputs_emissions_ae174); end
  def test_outputs_emissions_af174; assert_equal("2090", worksheet.outputs_emissions_af174); end
  def test_outputs_emissions_ag174; assert_equal("2095", worksheet.outputs_emissions_ag174); end
  def test_outputs_emissions_ah174; assert_equal("2100", worksheet.outputs_emissions_ah174); end
  def test_outputs_emissions_c175; assert_equal("G.1A", worksheet.outputs_emissions_c175); end
  def test_outputs_emissions_d175; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d175); end
  def test_outputs_emissions_h175; assert_in_delta(0.0009130686233989812, worksheet.outputs_emissions_h175, 0.002); end
  def test_outputs_emissions_i175; assert_in_delta(0.0009965133809872679, worksheet.outputs_emissions_i175, 0.002); end
  def test_outputs_emissions_j175; assert_in_delta(0.001054643547268351, worksheet.outputs_emissions_j175, 0.002); end
  def test_outputs_emissions_k175; assert_in_delta(0.001146013024618166, worksheet.outputs_emissions_k175, 0.002); end
  def test_outputs_emissions_l175; assert_in_delta(0.0012359546542829699, worksheet.outputs_emissions_l175, 0.002); end
  def test_outputs_emissions_p175; assert_in_delta(0.0010191776769563842, worksheet.outputs_emissions_p175, 0.002); end
  def test_outputs_emissions_q175; assert_in_delta(0.0010673526485956003, worksheet.outputs_emissions_q175, 0.002); end
  def test_outputs_emissions_r175; assert_in_delta(0.0011968846476129863, worksheet.outputs_emissions_r175, 0.002); end
  def test_outputs_emissions_s175; assert_in_delta(0.001312934275453616, worksheet.outputs_emissions_s175, 0.002); end
  def test_outputs_emissions_t175; assert_in_delta(0.001404340890952219, worksheet.outputs_emissions_t175, 0.002); end
  def test_outputs_emissions_u175; assert_in_delta(0.0014690840136536746, worksheet.outputs_emissions_u175, 0.002); end
  def test_outputs_emissions_v175; assert_in_delta(0.0015522343237913871, worksheet.outputs_emissions_v175, 0.002); end
  def test_outputs_emissions_w175; assert_in_delta(0.0016173382638788715, worksheet.outputs_emissions_w175, 0.002); end
  def test_outputs_emissions_x175; assert_in_delta(0.0016449337165852743, worksheet.outputs_emissions_x175, 0.002); end
  def test_outputs_emissions_c176; assert_equal("G.1B", worksheet.outputs_emissions_c176); end
  def test_outputs_emissions_d176; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d176); end
  def test_outputs_emissions_h176; assert_in_delta(0.0, (worksheet.outputs_emissions_h176||0), 0.002); end
  def test_outputs_emissions_i176; assert_in_delta(0.0, (worksheet.outputs_emissions_i176||0), 0.002); end
  def test_outputs_emissions_j176; assert_in_delta(0.0, (worksheet.outputs_emissions_j176||0), 0.002); end
  def test_outputs_emissions_k176; assert_in_delta(0.0, (worksheet.outputs_emissions_k176||0), 0.002); end
  def test_outputs_emissions_l176; assert_in_delta(0.0, (worksheet.outputs_emissions_l176||0), 0.002); end
  def test_outputs_emissions_p176; assert_in_delta(0.0, (worksheet.outputs_emissions_p176||0), 0.002); end
  def test_outputs_emissions_q176; assert_in_delta(0.0, (worksheet.outputs_emissions_q176||0), 0.002); end
  def test_outputs_emissions_r176; assert_in_delta(0.0, (worksheet.outputs_emissions_r176||0), 0.002); end
  def test_outputs_emissions_s176; assert_in_delta(0.0, (worksheet.outputs_emissions_s176||0), 0.002); end
  def test_outputs_emissions_t176; assert_in_delta(0.0, (worksheet.outputs_emissions_t176||0), 0.002); end
  def test_outputs_emissions_u176; assert_in_delta(0.0, (worksheet.outputs_emissions_u176||0), 0.002); end
  def test_outputs_emissions_v176; assert_in_delta(0.0, (worksheet.outputs_emissions_v176||0), 0.002); end
  def test_outputs_emissions_w176; assert_in_delta(0.0, (worksheet.outputs_emissions_w176||0), 0.002); end
  def test_outputs_emissions_x176; assert_in_delta(0.0, (worksheet.outputs_emissions_x176||0), 0.002); end
  def test_outputs_emissions_c177; assert_equal("G.2", worksheet.outputs_emissions_c177); end
  def test_outputs_emissions_d177; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d177); end
  def test_outputs_emissions_h177; assert_in_delta(0.0010588904336770641, worksheet.outputs_emissions_h177, 0.002); end
  def test_outputs_emissions_i177; assert_in_delta(0.001058384026600717, worksheet.outputs_emissions_i177, 0.002); end
  def test_outputs_emissions_j177; assert_in_delta(0.0008160774983504037, worksheet.outputs_emissions_j177, 0.002); end
  def test_outputs_emissions_k177; assert_in_delta(0.0007678739913186566, worksheet.outputs_emissions_k177, 0.002); end
  def test_outputs_emissions_l177; assert_in_delta(0.0007341236710068264, worksheet.outputs_emissions_l177, 0.002); end
  def test_outputs_emissions_p177; assert_in_delta(0.00044470400000000014, worksheet.outputs_emissions_p177, 0.002); end
  def test_outputs_emissions_q177; assert_in_delta(0.00047616819853373645, worksheet.outputs_emissions_q177, 0.002); end
  def test_outputs_emissions_r177; assert_in_delta(0.0005099323914434328, worksheet.outputs_emissions_r177, 0.002); end
  def test_outputs_emissions_s177; assert_in_delta(0.0005782916059063269, worksheet.outputs_emissions_s177, 0.002); end
  def test_outputs_emissions_t177; assert_in_delta(0.0006515350412998875, worksheet.outputs_emissions_t177, 0.002); end
  def test_outputs_emissions_u177; assert_in_delta(0.0007271255114767611, worksheet.outputs_emissions_u177, 0.002); end
  def test_outputs_emissions_v177; assert_in_delta(0.0008145093067547947, worksheet.outputs_emissions_v177, 0.002); end
  def test_outputs_emissions_w177; assert_in_delta(0.0009063084125758411, worksheet.outputs_emissions_w177, 0.002); end
  def test_outputs_emissions_x177; assert_in_delta(0.001012018031998082, worksheet.outputs_emissions_x177, 0.002); end
  def test_outputs_emissions_c178; assert_equal("G.3", worksheet.outputs_emissions_c178); end
  def test_outputs_emissions_d178; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d178); end
  def test_outputs_emissions_h178; assert_in_delta(0.0, (worksheet.outputs_emissions_h178||0), 0.002); end
  def test_outputs_emissions_i178; assert_in_delta(0.0, (worksheet.outputs_emissions_i178||0), 0.002); end
  def test_outputs_emissions_j178; assert_in_delta(0.0, (worksheet.outputs_emissions_j178||0), 0.002); end
  def test_outputs_emissions_k178; assert_in_delta(0.0, (worksheet.outputs_emissions_k178||0), 0.002); end
  def test_outputs_emissions_l178; assert_in_delta(0.0, (worksheet.outputs_emissions_l178||0), 0.002); end
  def test_outputs_emissions_p178; assert_in_delta(0.0, (worksheet.outputs_emissions_p178||0), 0.002); end
  def test_outputs_emissions_q178; assert_in_delta(0.0, (worksheet.outputs_emissions_q178||0), 0.002); end
  def test_outputs_emissions_r178; assert_in_delta(0.0, (worksheet.outputs_emissions_r178||0), 0.002); end
  def test_outputs_emissions_s178; assert_in_delta(0.0, (worksheet.outputs_emissions_s178||0), 0.002); end
  def test_outputs_emissions_t178; assert_in_delta(0.0, (worksheet.outputs_emissions_t178||0), 0.002); end
  def test_outputs_emissions_u178; assert_in_delta(0.0, (worksheet.outputs_emissions_u178||0), 0.002); end
  def test_outputs_emissions_v178; assert_in_delta(0.0, (worksheet.outputs_emissions_v178||0), 0.002); end
  def test_outputs_emissions_w178; assert_in_delta(0.0, (worksheet.outputs_emissions_w178||0), 0.002); end
  def test_outputs_emissions_x178; assert_in_delta(0.0, (worksheet.outputs_emissions_x178||0), 0.002); end
  def test_outputs_emissions_c179; assert_equal("G.4", worksheet.outputs_emissions_c179); end
  def test_outputs_emissions_d179; assert_equal("Global Agriculture", worksheet.outputs_emissions_d179); end
  def test_outputs_emissions_h179; assert_in_delta(0.009956991391139623, worksheet.outputs_emissions_h179, 0.002); end
  def test_outputs_emissions_i179; assert_in_delta(0.009679164975862868, worksheet.outputs_emissions_i179, 0.002); end
  def test_outputs_emissions_j179; assert_in_delta(0.009651220745010868, worksheet.outputs_emissions_j179, 0.002); end
  def test_outputs_emissions_k179; assert_in_delta(0.01042663335693185, worksheet.outputs_emissions_k179, 0.002); end
  def test_outputs_emissions_l179; assert_in_delta(0.010931037319002792, worksheet.outputs_emissions_l179, 0.002); end
  def test_outputs_emissions_p179; assert_in_delta(0.0071107645277419355, worksheet.outputs_emissions_p179, 0.002); end
  def test_outputs_emissions_q179; assert_in_delta(0.007329212505995057, worksheet.outputs_emissions_q179, 0.002); end
  def test_outputs_emissions_r179; assert_in_delta(0.007542001293763641, worksheet.outputs_emissions_r179, 0.002); end
  def test_outputs_emissions_s179; assert_in_delta(0.007735370520225341, worksheet.outputs_emissions_s179, 0.002); end
  def test_outputs_emissions_t179; assert_in_delta(0.00794189068995355, worksheet.outputs_emissions_t179, 0.002); end
  def test_outputs_emissions_u179; assert_in_delta(0.008172725917510205, worksheet.outputs_emissions_u179, 0.002); end
  def test_outputs_emissions_v179; assert_in_delta(0.008377432284232244, worksheet.outputs_emissions_v179, 0.002); end
  def test_outputs_emissions_w179; assert_in_delta(0.008502183142010494, worksheet.outputs_emissions_w179, 0.002); end
  def test_outputs_emissions_x179; assert_in_delta(0.00866676532616554, worksheet.outputs_emissions_x179, 0.002); end
  def test_outputs_emissions_c180; assert_equal("G.5", worksheet.outputs_emissions_c180); end
  def test_outputs_emissions_d180; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d180); end
  def test_outputs_emissions_h180; assert_in_delta(0.0, (worksheet.outputs_emissions_h180||0), 0.002); end
  def test_outputs_emissions_i180; assert_in_delta(0.0, (worksheet.outputs_emissions_i180||0), 0.002); end
  def test_outputs_emissions_j180; assert_in_delta(0.0, (worksheet.outputs_emissions_j180||0), 0.002); end
  def test_outputs_emissions_k180; assert_in_delta(0.0, (worksheet.outputs_emissions_k180||0), 0.002); end
  def test_outputs_emissions_l180; assert_in_delta(0.0, (worksheet.outputs_emissions_l180||0), 0.002); end
  def test_outputs_emissions_p180; assert_in_delta(0.0, (worksheet.outputs_emissions_p180||0), 0.002); end
  def test_outputs_emissions_q180; assert_in_delta(0.0, (worksheet.outputs_emissions_q180||0), 0.002); end
  def test_outputs_emissions_r180; assert_in_delta(0.0, (worksheet.outputs_emissions_r180||0), 0.002); end
  def test_outputs_emissions_s180; assert_in_delta(0.0, (worksheet.outputs_emissions_s180||0), 0.002); end
  def test_outputs_emissions_t180; assert_in_delta(0.0, (worksheet.outputs_emissions_t180||0), 0.002); end
  def test_outputs_emissions_u180; assert_in_delta(0.0, (worksheet.outputs_emissions_u180||0), 0.002); end
  def test_outputs_emissions_v180; assert_in_delta(0.0, (worksheet.outputs_emissions_v180||0), 0.002); end
  def test_outputs_emissions_w180; assert_in_delta(0.0, (worksheet.outputs_emissions_w180||0), 0.002); end
  def test_outputs_emissions_x180; assert_in_delta(0.0, (worksheet.outputs_emissions_x180||0), 0.002); end
  def test_outputs_emissions_c181; assert_equal("G.6", worksheet.outputs_emissions_c181); end
  def test_outputs_emissions_d181; assert_equal("Global Waste", worksheet.outputs_emissions_d181); end
  def test_outputs_emissions_h181; assert_in_delta(0.0002902350264975083, worksheet.outputs_emissions_h181, 0.002); end
  def test_outputs_emissions_i181; assert_in_delta(0.0003027664982506464, worksheet.outputs_emissions_i181, 0.002); end
  def test_outputs_emissions_j181; assert_in_delta(0.0003268154526079815, worksheet.outputs_emissions_j181, 0.002); end
  def test_outputs_emissions_k181; assert_in_delta(0.0003505706705604558, worksheet.outputs_emissions_k181, 0.002); end
  def test_outputs_emissions_l181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_l181, 0.002); end
  def test_outputs_emissions_p181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_p181, 0.002); end
  def test_outputs_emissions_q181; assert_in_delta(0.00038038160212789984, worksheet.outputs_emissions_q181, 0.002); end
  def test_outputs_emissions_r181; assert_in_delta(0.00038744320396694653, worksheet.outputs_emissions_r181, 0.002); end
  def test_outputs_emissions_s181; assert_in_delta(0.0003928851078242665, worksheet.outputs_emissions_s181, 0.002); end
  def test_outputs_emissions_t181; assert_in_delta(0.0003981983590452104, worksheet.outputs_emissions_t181, 0.002); end
  def test_outputs_emissions_u181; assert_in_delta(0.0004039240192503909, worksheet.outputs_emissions_u181, 0.002); end
  def test_outputs_emissions_v181; assert_in_delta(0.0004078809302474427, worksheet.outputs_emissions_v181, 0.002); end
  def test_outputs_emissions_w181; assert_in_delta(0.0004078236774246479, worksheet.outputs_emissions_w181, 0.002); end
  def test_outputs_emissions_x181; assert_in_delta(0.0004049722185198276, worksheet.outputs_emissions_x181, 0.002); end
  def test_outputs_emissions_c182; assert_equal("G.7", worksheet.outputs_emissions_c182); end
  def test_outputs_emissions_d182; assert_equal("Global Other", worksheet.outputs_emissions_d182); end
  def test_outputs_emissions_h182; assert_in_delta(0.0, (worksheet.outputs_emissions_h182||0), 0.002); end
  def test_outputs_emissions_i182; assert_in_delta(0.0, (worksheet.outputs_emissions_i182||0), 0.002); end
  def test_outputs_emissions_j182; assert_in_delta(0.0, (worksheet.outputs_emissions_j182||0), 0.002); end
  def test_outputs_emissions_k182; assert_in_delta(0.0, (worksheet.outputs_emissions_k182||0), 0.002); end
  def test_outputs_emissions_l182; assert_in_delta(0.0, (worksheet.outputs_emissions_l182||0), 0.002); end
  def test_outputs_emissions_p182; assert_in_delta(0.0, (worksheet.outputs_emissions_p182||0), 0.002); end
  def test_outputs_emissions_q182; assert_in_delta(0.0, (worksheet.outputs_emissions_q182||0), 0.002); end
  def test_outputs_emissions_r182; assert_in_delta(0.0, (worksheet.outputs_emissions_r182||0), 0.002); end
  def test_outputs_emissions_s182; assert_in_delta(0.0, (worksheet.outputs_emissions_s182||0), 0.002); end
  def test_outputs_emissions_t182; assert_in_delta(0.0, (worksheet.outputs_emissions_t182||0), 0.002); end
  def test_outputs_emissions_u182; assert_in_delta(0.0, (worksheet.outputs_emissions_u182||0), 0.002); end
  def test_outputs_emissions_v182; assert_in_delta(0.0, (worksheet.outputs_emissions_v182||0), 0.002); end
  def test_outputs_emissions_w182; assert_in_delta(0.0, (worksheet.outputs_emissions_w182||0), 0.002); end
  def test_outputs_emissions_x182; assert_in_delta(0.0, (worksheet.outputs_emissions_x182||0), 0.002); end
  def test_outputs_emissions_d183; assert_equal("Total", worksheet.outputs_emissions_d183); end
  def test_outputs_emissions_d184; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d184); end
  def test_outputs_emissions_p184; assert_in_delta(0.008942044378286818, worksheet.outputs_emissions_p184, 0.002); end
  def test_outputs_emissions_q184; assert_in_delta(0.018195159333539115, worksheet.outputs_emissions_q184, 0.002); end
  def test_outputs_emissions_r184; assert_in_delta(0.027831420870326123, worksheet.outputs_emissions_r184, 0.002); end
  def test_outputs_emissions_s184; assert_in_delta(0.03785090237973567, worksheet.outputs_emissions_s184, 0.002); end
  def test_outputs_emissions_t184; assert_in_delta(0.04824686736098654, worksheet.outputs_emissions_t184, 0.002); end
  def test_outputs_emissions_u184; assert_in_delta(0.05901972682287757, worksheet.outputs_emissions_u184, 0.002); end
  def test_outputs_emissions_v184; assert_in_delta(0.07017178366790344, worksheet.outputs_emissions_v184, 0.002); end
  def test_outputs_emissions_w184; assert_in_delta(0.0816054371637933, worksheet.outputs_emissions_w184, 0.002); end
  def test_outputs_emissions_x184; assert_in_delta(0.09333412645706203, worksheet.outputs_emissions_x184, 0.002); end
  def test_outputs_emissions_c229; assert_equal("Fuel type", worksheet.outputs_emissions_c229); end
  def test_outputs_emissions_d229; assert_equal("…", worksheet.outputs_emissions_d229); end
  def test_outputs_emissions_e229; assert_equal("Notes", worksheet.outputs_emissions_e229); end
  def test_outputs_emissions_f229; assert_equal("..", worksheet.outputs_emissions_f229); end
  def test_outputs_emissions_g229; assert_equal("..2", worksheet.outputs_emissions_g229); end
  def test_outputs_emissions_h229; assert_equal("….", worksheet.outputs_emissions_h229); end
  def test_outputs_emissions_i229; assert_equal("Column1", worksheet.outputs_emissions_i229); end
  def test_outputs_emissions_j229; assert_equal("Column2", worksheet.outputs_emissions_j229); end
  def test_outputs_emissions_k229; assert_equal("Column3", worksheet.outputs_emissions_k229); end
  def test_outputs_emissions_l229; assert_equal("Column4", worksheet.outputs_emissions_l229); end
  def test_outputs_emissions_m229; assert_equal("Column5", worksheet.outputs_emissions_m229); end
  def test_outputs_emissions_n229; assert_equal("Column6", worksheet.outputs_emissions_n229); end
  def test_outputs_emissions_o229; assert_equal("Column7", worksheet.outputs_emissions_o229); end
  def test_outputs_emissions_p229; assert_equal("2011", worksheet.outputs_emissions_p229); end
  def test_outputs_emissions_q229; assert_equal("2015", worksheet.outputs_emissions_q229); end
  def test_outputs_emissions_r229; assert_equal("2020", worksheet.outputs_emissions_r229); end
  def test_outputs_emissions_s229; assert_equal("2025", worksheet.outputs_emissions_s229); end
  def test_outputs_emissions_t229; assert_equal("2030", worksheet.outputs_emissions_t229); end
  def test_outputs_emissions_u229; assert_equal("2035", worksheet.outputs_emissions_u229); end
  def test_outputs_emissions_v229; assert_equal("2040", worksheet.outputs_emissions_v229); end
  def test_outputs_emissions_w229; assert_equal("2045", worksheet.outputs_emissions_w229); end
  def test_outputs_emissions_x229; assert_equal("2050", worksheet.outputs_emissions_x229); end
  def test_outputs_emissions_c230; assert_equal("CO2e", worksheet.outputs_emissions_c230); end
  def test_outputs_emissions_e230; assert_equal("Total", worksheet.outputs_emissions_e230); end
  def test_detailed_lever_guides_b69; assert_equal("Lever", worksheet.detailed_lever_guides_b69); end
  def test_detailed_lever_guides_c69; assert_equal("What is it", worksheet.detailed_lever_guides_c69); end
  def test_detailed_lever_guides_d69; assert_equal("Key constraints", worksheet.detailed_lever_guides_d69); end
  def test_detailed_lever_guides_e69; assert_equal("State of development of this technique", worksheet.detailed_lever_guides_e69); end
  def test_detailed_lever_guides_b70; assert_equal("Biochar", worksheet.detailed_lever_guides_b70); end
  def test_detailed_lever_guides_c70; assert_equal("Biomass contains carbon taken from the carbon dioxide air through the process of photosynthesis. Heating biomass in an oxygen-deficient environment results in incomplete combustion and the production of a char that has high carbon content, some of which is ‘recalcitrant’ (meaning resistant to decomposing and being re-released back into the atmosphere). If this char is buried, then this carbon is sequestered away from the atmosphere. ", worksheet.detailed_lever_guides_c70); end
  def test_detailed_lever_guides_d70; assert_equal("• Carbon stability: the proportion of recalcitrant carbon in a biochar is a function of many factors: the biomass feedstock, the method of producing the biochar, and the characteristics of the soil into which the biochar is placed. \r• Dispute for natural resources: the availability of biomass to produce the biochar.\r• Impacts on human health: Biochar dust poses a potential hazard to human health.\r• Impacts on soil biota: The addition of biochar alters the property of the soil. In many cases it can lead to enhanced crop yields. However, it can also lead to increased production of methane, and cause impacts on the biological diversity of the soil.\r• Albedo effect: the addition of large amounts of biochar to soils may result in reduced albedo (ability of the surface of the earth to reflect heat energy from the sun), thereby counteracting some of the cooling benefit of removing carbon dioxide.\r• Fire impacts: if a land area into which biochar has been added is affected by fire (e.g. fire use as an agronomical practice, accidental fire, or even as the result of a warming climate), then the carbon stored may be released back into the atmosphere.", worksheet.detailed_lever_guides_d70); end
  def test_detailed_lever_guides_e70; assert_equal("Biochar is produced from the pyrolysis of biomass, similar to the production of charcoal. Research is underway to enhance the understanding of the long-term behaviour of biochar as a means of storing carbon away from the atmosphere (sequestration potential). Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e70); end
  def test_detailed_lever_guides_b71; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b71); end
  def test_detailed_lever_guides_c71; assert_equal("Direct air capture (DAC) involves using chemical processes to directly capture carbon dioxide from ambient air. Typically this will involve using an alkaline material (such as sodium hydroxide) which reacts with carbon dioxide, or a material which adsorbs the carbon dioxide. The carbon dioxide is then stored underground in suitable geological formations. DAC differs from carbon capture and storage (CCS), in that CCS involves capturing carbon dioxide from large stationary sources, such as power plants or cement plants (4-30% concentration) rather than from ambient air (~0.04% concentration). ", worksheet.detailed_lever_guides_c71); end
  def test_detailed_lever_guides_d71; assert_equal("• Energy penalty: this is the amount of energy that is required to run such systems, which may counteract the carbon savings made through the DAC process.\r• Physical constraints: given the low initial concentration of carbon dioxide in ambient air, it is necessary to treat 1.4 million cubic metres of air to remove a single tonne of carbon dioxide. These volumes indicate that the scale of the machinery is likely to be large with significant resource implications.\r• Water: many, but not all, DAC techniques have a significant water requirement.\r• Costs: it is unlikely that DAC from ambient air will be cost competitive with CCS, as the starting concentration of the carbon dioxide feedstock is so much lower. It would make economic sense to first exhaust all potential CCS opportunities before applying DAC. The exception to this would be if large quantities of extra low-carbon energy ¬¬¬(known as “stranded energy”) were available in locations close to geological storage sites.\r• Geological storage: DAC will compete with geological storage space with CCS from large stationary plants.", worksheet.detailed_lever_guides_d71); end
  def test_detailed_lever_guides_e71; assert_equal("There are about a dozen proposed Direct Air Capture (DAC) technologies that have been demonstrated at small scales. Technically the process works – in fact, the removal of carbon dioxide from ambient air in submarines and spacecraft has been practised for decades. The real questions are around the carbon balance of the systems and the economics. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e71); end
  def test_detailed_lever_guides_b72; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b72); end
  def test_detailed_lever_guides_c72; assert_equal("Ocean fertilisation (OF) involves enhancing the biological capacity of the oceans to draw down more carbon dioxide from the atmosphere. Photosynthesising organisms incorporate carbon dioxide from the air into their cells as they grow and multiply. Some of this carbon will eventually end up in the deep ocean where it will be effectively stored away from the atmosphere. Some parts of the ocean are deficient in micronutrients such as iron, which organisms need to grow. By adding iron filings, more photosynthesis can occur and more carbon can be transported from the atmosphere to the deep ocean. ", worksheet.detailed_lever_guides_c72); end
  def test_detailed_lever_guides_d72; assert_equal("• Biological constraints: The effectiveness of OF is limited by the area of ocean that is deficient in micronutrients. Once iron is no longer a constraint, photosynthetic activity can increase up to the point that the next constraining factor limits growth (typically the availability of nitrate).\r• Logistics: some proponents of OF have suggested that it may be possible to boost macronutrients such as nitrate as a means of enhancing photosynthetic capacity. While that may be possible, the quantity of material that is required to boost photosynthesis may be impractical.\r• Impacts on marine biodiversity: serious environmental concerns have been raised about OF. The introduction of micronutrients into the ocean will alter its ecology, favouring certain types of organism over others that thrive in low-iron waters. In addition, increased photosynthetic activity could lead to increased ocean acidification and a decrease in dissolved oxygen.\r• Efficacy: it is not sufficient for photosynthetic activity to just increase – for the technique to have a positive impact on the climate, the carbon must be transferred from the atmosphere to the deep ocean. Some studies show that a large fraction of the carbon is released back into the atmosphere as the algae die or enter the food chain, so the efficacy of the technique has been questioned. \r• Governance: the governance issues relating to OF are complicated. Rules established by the London Convention/London Protocol (LC/LP) restrict activities to small-scale scientific experiments, while the Convention on Biological Diversity also seeks to restrict such activities.", worksheet.detailed_lever_guides_d72); end
  def test_detailed_lever_guides_e72; assert_equal("A small number of Ocean fertilisation (OF) experiments have been undertaken, most with the approval of national research establishments, but some without such approval. Those experiments conducted without approval have been highly controversial. The results of the officially approved experiments have indicated, at least in some instances, that there has been a net carbon drawdown, but there are still many unanswered questions as to the long-term effects of this technique. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e72); end
  def test_detailed_lever_guides_b73; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b73); end
  def test_detailed_lever_guides_c73; assert_equal("Enhanced weathering – oceanic (EW-O) seeks to enhance the chemical capacity of the oceans to draw down carbon dioxide by introducing alkaline materials that increase the pH of the ocean and allow more carbon to be stored as dissolved inorganic carbon (DIC) in the ocean. Various proposed methods have been suggested – adding limestone (calcium carbonate), hydrated lime (calcium hydroxide) or finely ground olivine (magnesium silicate), or by electrolysis of seawater.", worksheet.detailed_lever_guides_c73); end
  def test_detailed_lever_guides_d73; assert_equal("• Impacts on ocean biota: The increase in pH will affect ecosystems as certain organisms will be more suited to it than others. However, adding alkaline materials could counteract the ocean acidification process that has been caused by higher levels of carbon dioxide in the atmosphere and affects some species. Calcium and magnesium ion concentrations will become higher than historical levels, though.\r• Energy penalty and costs: the process for obtaining alkaline materials is likely to be costly both in economic and energy terms. There are few naturally occurring deposits of alkaline materials that could be added to the ocean, but it may be possible to manufacture such materials.\r• Logistics: to have a real impact on the concentration of carbon dioxide in the atmosphere would require a massive mining, mineral processing and distribution industry.\r• Governance: the application of EW-O would involve governance challenges, as the ocean is a global commons (an international global resource). An amendment (currently in progress) to the LC/LP would permit small scale research activities, but deployment would require further amendments. ", worksheet.detailed_lever_guides_d73); end
  def test_detailed_lever_guides_e73; assert_equal("Enhanced weathering (oceanic) (EW-O) has been studied in the laboratory and has been modelled, but it has not been researched in the open environment. The processes required to generate alkaline materials are well established at an industrial scale. However, the environmental impacts of adding them into the oceans are not known. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e73); end
  def test_detailed_lever_guides_b74; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b74); end
  def test_detailed_lever_guides_c74; assert_equal("As silicate minerals weather, they absorb carbon dioxide from the atmosphere and store it in carbonate minerals. Enhanced weathering – terrestrial (EW-T) seeks to accelerate this natural process, which is usually very slow. The main proposed method involves grinding minerals like olivine (magnesium silicate) into a fine dust, which will react more quickly because of the higher surface-area-to-volume ratio.", worksheet.detailed_lever_guides_c74); end
  def test_detailed_lever_guides_d74; assert_equal("• Energy penalty and costs: the energy and cost requirements for grinding appropriate minerals sufficiently are high.\r• Impacts on human health: the particle size to which such minerals need to be ground to is often smaller than 10 microns in diameter - a size which can cause harm to health.\r• Geological constraints: there is an upper limit as to the amount of carbon dioxide that can be sequestered via this method, based on the saturation state of silicic acid that is produced when the magnesium silicate reacts.\r• Land use impacts: this technique will affect soils, for example by introducing trace metals present in the olivine, changing the pH. The places currently identified as most suitable for enhanced weathering (tropical areas that have high rainfall and high temperatures) are also some of the most important areas for biodiversity globally. \r• Transboundary effects: while EW-T would occur on territory under the jurisdiction of individual states, runoff from EW-T could have transboundary effects by altering the pH of river systems and potentially enhancing the saturation state of silicic acid in coastal waters. ", worksheet.detailed_lever_guides_d74); end
  def test_detailed_lever_guides_e74; assert_equal("Enhanced weathering (terrestrial) (EW-T) has been studied in the laboratory and has been modelled, but it has had little research in the open environment (although proponents of EW-T have marketed ground olivine as a soil additive already). Technical and theoretical modelling of the particle sizes indicate that while there would be some carbon dioxide drawdown, it is far less than has been claimed. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e74); end
  def test_detailed_lever_guides_y5; assert_equal("Lever controls", worksheet.detailed_lever_guides_y5); end
  def test_detailed_lever_guides_z5; assert_equal("One-pager context", worksheet.detailed_lever_guides_z5); end
  def test_detailed_lever_guides_aa5; assert_equal("Things to consider", worksheet.detailed_lever_guides_aa5); end
  def test_detailed_lever_guides_ab5; assert_equal("1-pager Level 1", worksheet.detailed_lever_guides_ab5); end
  def test_detailed_lever_guides_ac5; assert_equal("1-pager Level 2", worksheet.detailed_lever_guides_ac5); end
  def test_detailed_lever_guides_ad5; assert_equal("1-pager Level 3", worksheet.detailed_lever_guides_ad5); end
  def test_detailed_lever_guides_y31; assert_equal("This lever controls total world nuclear power capacity (GW).  \r\r\r\r", worksheet.detailed_lever_guides_y31); end
  def test_detailed_lever_guides_z31; assert_equal("Nuclear power is a form of thermal electricity generation that uses the heat produced from nuclear reactions rather than from the combustion of fossil fuels. These reactions do not produce greenhouse gases like carbon dioxide, so it is a low-carbon source of electricity. \rNuclear power stations was first used commercially in the 1950s. In 2011 operating power stations had 369 GW of capacity, producing around 13% of the world’s electricity. The country with the highest proportion of nuclear generation is France, with around 80%. Build rates have slowed in the last few years, but are expected to increase in the next decade. ", worksheet.detailed_lever_guides_z31); end
  def test_detailed_lever_guides_aa31; assert_equal("Nuclear has some benefits compared to many other low-carbon electricity sources. It can produce a reliable supply of power, unlike some renewables such as wind and solar which are intermittent. Once built, a reactor has a lifespan of around 40 years and perhaps longer. If power plants are located close to buildings with heat demand, then the waste heat produced in the generating process can be used in district heating systems rather than being released into the atmosphere. This reduces the need for high-carbon sources of heat like gas. \rHowever, nuclear power has disadvantages too. Nuclear accidents, though rare, can have serious and long-term consequences. The safe disposal and storage of the radioactive waste produced by nuclear processes is also a serious challenge, as some of the substances have a half-life of many thousand – and even millions – of years. These concerns mean that some countries and organisations do not support the use of this technology.  Even in countries that support the use of nuclear power, the planning process can be long and difficult, as local residents may object to having a power plant near their homes. The meltdown of three reactors at the Fukushima Daiichi plant in Japan in 2011 has increased safety concerns, and led to more countries closing nuclear power plants before their natural lifespan has come to an end.\rWhen choosing levels 3 or 4, you should consider that building this amount of nuclear power is likely to result in many planning challenges and may be difficult in terms of public acceptability.  ", worksheet.detailed_lever_guides_aa31); end
  def test_detailed_lever_guides_ab31; assert_equal("No new power stations are built, and all existing plant are switched off by 2050. It is likely that some reactors would have to retire early, before the end of their technical and economic lifespan. This represents a future that has turned away from nuclear power. \r", worksheet.detailed_lever_guides_ab31); end
  def test_detailed_lever_guides_ac31; assert_equal("Current global build rates for nuclear plants continue for the next few decades, meaning that there would be 558 GW in total by 2050. \r", worksheet.detailed_lever_guides_ac31); end
  def test_detailed_lever_guides_ad31; assert_equal("The increased build rate planned from 2011 to 2020 is sustained until 2050, meaning that there would be 989 GW in total. \r", worksheet.detailed_lever_guides_ad31); end
  def test_detailed_lever_guides_b5; assert_equal("Lever", worksheet.detailed_lever_guides_b5); end
  def test_detailed_lever_guides_c5; assert_equal("Code", worksheet.detailed_lever_guides_c5); end
  def test_detailed_lever_guides_d5; assert_equal("Situation today", worksheet.detailed_lever_guides_d5); end
  def test_detailed_lever_guides_e5; assert_equal("Chosen level description", worksheet.detailed_lever_guides_e5); end
  def test_detailed_lever_guides_f5; assert_equal("Energy supply / demand from choice by 2050", worksheet.detailed_lever_guides_f5); end
  def test_detailed_lever_guides_g5; assert_equal("Interactions with other levers", worksheet.detailed_lever_guides_g5); end
  def test_detailed_lever_guides_h5; assert_equal("Level 1 short description", worksheet.detailed_lever_guides_h5); end
  def test_detailed_lever_guides_i5; assert_equal("Level 1 longer description", worksheet.detailed_lever_guides_i5); end
  def test_detailed_lever_guides_j5; assert_equal("Level 2 short description", worksheet.detailed_lever_guides_j5); end
  def test_detailed_lever_guides_k5; assert_equal("Level 2 longer description", worksheet.detailed_lever_guides_k5); end
  def test_detailed_lever_guides_l5; assert_equal("Level 3 short description", worksheet.detailed_lever_guides_l5); end
  def test_detailed_lever_guides_m5; assert_equal("Level 3 longer description", worksheet.detailed_lever_guides_m5); end
  def test_detailed_lever_guides_n5; assert_equal("Level 4 short description", worksheet.detailed_lever_guides_n5); end
  def test_detailed_lever_guides_o5; assert_equal("Level 4 longer description", worksheet.detailed_lever_guides_o5); end
  def test_detailed_lever_guides_b6; assert_equal("Global population", worksheet.detailed_lever_guides_b6); end
  def test_detailed_lever_guides_d6; assert_equal("How many people will there be in 2050? In 2011 there were 6.97 billion.", worksheet.detailed_lever_guides_d6); end
  def test_detailed_lever_guides_g6; assert_equal("This lever also drives the total food consumption, total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g6); end
  def test_detailed_lever_guides_h6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_h6); end
  def test_detailed_lever_guides_i6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_i6); end
  def test_detailed_lever_guides_j6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_j6); end
  def test_detailed_lever_guides_k6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_k6); end
  def test_detailed_lever_guides_l6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_l6); end
  def test_detailed_lever_guides_m6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_m6); end
  def test_detailed_lever_guides_n6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_n6); end
  def test_detailed_lever_guides_o6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_o6); end
  def test_detailed_lever_guides_b7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_b7); end
  def test_detailed_lever_guides_d7; assert_equal("What percentage of people will live in urban areas? In 2011 it was 52%.", worksheet.detailed_lever_guides_d7); end
  def test_detailed_lever_guides_g7; assert_equal("This lever also drives the total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g7); end
  def test_detailed_lever_guides_h7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_h7); end
  def test_detailed_lever_guides_i7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_i7); end
  def test_detailed_lever_guides_j7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_j7); end
  def test_detailed_lever_guides_k7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_k7); end
  def test_detailed_lever_guides_l7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_l7); end
  def test_detailed_lever_guides_m7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_m7); end
  def test_detailed_lever_guides_n7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_n7); end
  def test_detailed_lever_guides_o7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_o7); end
  def test_detailed_lever_guides_b8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_b8); end
  def test_detailed_lever_guides_d8; assert_equal("How far will we travel? For example, in 2011 the average urban person travelled 9,200 km/year domestically.", worksheet.detailed_lever_guides_d8); end
  def test_detailed_lever_guides_g8; assert_equal("Passenger demand is very dependent on mode and occupancy. If more car trips are shifted to walking, cycling, transit, rail and 2-3 wheelers through better city design then number as well as distance of trips will likely be reduced. ", worksheet.detailed_lever_guides_g8); end
  def test_detailed_lever_guides_h8; assert_equal("13,200 km/year (44% increase from 2011)", worksheet.detailed_lever_guides_h8); end
  def test_detailed_lever_guides_i8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing sharply.", worksheet.detailed_lever_guides_i8); end
  def test_detailed_lever_guides_j8; assert_equal("12,400 km/year (35% increase from 2011)", worksheet.detailed_lever_guides_j8); end
  def test_detailed_lever_guides_k8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing.", worksheet.detailed_lever_guides_k8); end
  def test_detailed_lever_guides_l8; assert_equal("11,700 km/year (27% increase from 2011)", worksheet.detailed_lever_guides_l8); end
  def test_detailed_lever_guides_m8; assert_equal("Cities with established development patterns as well as growing cities pursue initiatives to reduce the need for travel throughout the city. Global distance travelled per person increases but less dramatically.", worksheet.detailed_lever_guides_m8); end
  def test_detailed_lever_guides_n8; assert_equal("11,200 km/year (22% increase from 2011)", worksheet.detailed_lever_guides_n8); end
  def test_detailed_lever_guides_o8; assert_equal("Cities make a significant effort to develop as transit-oriented, multi-use cities along with significant advances in communication technologies. Total distance travelled per person increases moderately.", worksheet.detailed_lever_guides_o8); end
  def test_detailed_lever_guides_b9; assert_equal("Freight distance", worksheet.detailed_lever_guides_b9); end
  def test_detailed_lever_guides_d9; assert_equal("How far will our freight travel? In 2011 freight travelled 85 trillion tonne-kms.", worksheet.detailed_lever_guides_d9); end
  def test_detailed_lever_guides_g9; assert_equal("Freight demand’s impact on reducing CO2 emissions is highly dependent on vehicle load factors and the modes by which freight growth is accommodated.", worksheet.detailed_lever_guides_g9); end
  def test_detailed_lever_guides_h9; assert_equal("Freight increases by 222%", worksheet.detailed_lever_guides_h9); end
  def test_detailed_lever_guides_i9; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing dramatically.", worksheet.detailed_lever_guides_i9); end
  def test_detailed_lever_guides_j9; assert_equal("Freight increases by 191%", worksheet.detailed_lever_guides_j9); end
  def test_detailed_lever_guides_k9; assert_equal("Growth in freight tonne-kms is at a slower rate than GDP. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_k9); end
  def test_detailed_lever_guides_l9; assert_equal("Freight increases by 165%", worksheet.detailed_lever_guides_l9); end
  def test_detailed_lever_guides_m9; assert_equal("Growth in freight tonne-kms is decoupled from GDP. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_m9); end
  def test_detailed_lever_guides_n9; assert_equal("Freight increases by 139%", worksheet.detailed_lever_guides_n9); end
  def test_detailed_lever_guides_o9; assert_equal("Growth in freight tonne-kms is significantly decoupled from GDP. This could be due to significant reduction in demand as well major technological improvements.", worksheet.detailed_lever_guides_o9); end
  def test_detailed_lever_guides_b10; assert_equal("Mode", worksheet.detailed_lever_guides_b10); end
  def test_detailed_lever_guides_d10; assert_equal("Do we use cars, or do we switch to public transport, cycling and walking? In 2011, between 60 and 80% of trips are made by car in developed countries. For developing countries, this number is often less than 20%. The global average is around 40%. Roughly 83% of freight tonne-kms are made by truck or ship. The mode of travel will have a big impact on reducing overall vehicle kilometres travelled and reducing emissions from person and freight travel. This lever includes a switch between all modes including flights.", worksheet.detailed_lever_guides_d10); end
  def test_detailed_lever_guides_g10; assert_equal("The effectiveness of mode shifts will also be impacted by the total quantity of demand. The modes also impact vehicle types, thereby impacting the results from the efficiency and electrification levers. ", worksheet.detailed_lever_guides_g10); end
  def test_detailed_lever_guides_h10; assert_equal("By 2050 cars are the dominant mode of travel in cities around the world (around 65%). Most new ground freight is shipped by road.", worksheet.detailed_lever_guides_h10); end
  def test_detailed_lever_guides_i10; assert_equal("Cities continue to grow in a sprawled pattern of development. Similar to the UK in 2011, 80% of passenger-kms (pkm) globally are by private vehicles. There is no significant effort to use more rail transport for freight or to improve logistics by 2050, and 65% of ground freight is by road, similar to Latin America in 2011.", worksheet.detailed_lever_guides_i10); end
  def test_detailed_lever_guides_j10; assert_equal("By 2050, cars still dominate the mode share for urban areas (50%) but with larger shares of transit and 2-3 wheelers. Focus on rail shipping allows rail to maintain its current share of ground shipping.", worksheet.detailed_lever_guides_j10); end
  def test_detailed_lever_guides_k10; assert_equal("Cities focus on shifting trips to walking, cycling, and transit instead of using private automobiles. Similar to the Middle East in 2011, 75% of pkm globally are by private vehicles. With some effort in logistics and growth in rail infrastructure in developing countries, by 2050 60% of ground freight is by road, similar to the global total in 2011.", worksheet.detailed_lever_guides_k10); end
  def test_detailed_lever_guides_l10; assert_equal("By 2050, car travel accounts for the same mode share for urban areas as in 2011 (around 40%). Transit and 2-3 wheelers take a significant share of travel along with biking and walking, those cars are still significant. Rail and waterborne freight take portions of ground shipping.", worksheet.detailed_lever_guides_l10); end
  def test_detailed_lever_guides_m10; assert_equal("Cities focus on shifting trips to walking, cycling, transit and 2-3 wheelers. Similar to Russia and Eastern Europe in 2011, 63% of pkm globally are by private vehicles. With significant effort in logistics and rail infrastructure, only 45% of ground freight is by road in 2050, similar to combined OECD countries in 2011.", worksheet.detailed_lever_guides_m10); end
  def test_detailed_lever_guides_n10; assert_equal("By 2050, car travel accounts for a lower proportion of the mode share for urban areas than 2011 (at around 30%). Transit, 2-3 wheelers, cycling and walking are the dominant modes of transport. Rail and waterborne freight take larger portions of ground shipping.", worksheet.detailed_lever_guides_n10); end
  def test_detailed_lever_guides_o10; assert_equal("Cities make a robust effort to shift people from private automobiles to walking, cycling, transit, and 2-3 wheelers. Similar to Brazil in 2011, 50% of pkm globally are by private vehicles. With significant effort in logistics and rail infrastructure, only 36% of ground freight is by road in 2050, similar to historical US rates.", worksheet.detailed_lever_guides_o10); end
  def test_detailed_lever_guides_b11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_b11); end
  def test_detailed_lever_guides_d11; assert_equal("Can each vehicle carry more people or heavier loads? For example, in 2011 the average urban car carried 1.6 people.", worksheet.detailed_lever_guides_d11); end
  def test_detailed_lever_guides_g11; assert_equal("The impact of changes to occupancy will depend on the other transport levers.", worksheet.detailed_lever_guides_g11); end
  def test_detailed_lever_guides_h11; assert_equal("1.4 people (10% lower than 2011)", worksheet.detailed_lever_guides_h11); end
  def test_detailed_lever_guides_i11; assert_equal("1.4 people (10% lower than 2011)", worksheet.detailed_lever_guides_i11); end
  def test_detailed_lever_guides_j11; assert_equal("1.6 people (equal to 2011)", worksheet.detailed_lever_guides_j11); end
  def test_detailed_lever_guides_k11; assert_equal("1.6 people (equal to 2011)", worksheet.detailed_lever_guides_k11); end
  def test_detailed_lever_guides_l11; assert_equal("1.8 people (10% higher than 2011)", worksheet.detailed_lever_guides_l11); end
  def test_detailed_lever_guides_m11; assert_equal("1.8 people (10% higher than 2011)", worksheet.detailed_lever_guides_m11); end
  def test_detailed_lever_guides_n11; assert_equal("1.9 people (20% higher than 2011)", worksheet.detailed_lever_guides_n11); end
  def test_detailed_lever_guides_o11; assert_equal("1.9 people (20% higher than 2011)", worksheet.detailed_lever_guides_o11); end
  def test_detailed_lever_guides_b12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_b12); end
  def test_detailed_lever_guides_d12; assert_equal("Will people move away from owning private cars, towards either hired or self-driving vehicles?", worksheet.detailed_lever_guides_d12); end
  def test_detailed_lever_guides_h12; assert_equal("Very low car hire rates (twice as many cars needed per vehicle-km travelled, compared to 2011).", worksheet.detailed_lever_guides_h12); end
  def test_detailed_lever_guides_j12; assert_equal("Car ownership rate same as today (identical to 2011 figure).", worksheet.detailed_lever_guides_j12); end
  def test_detailed_lever_guides_l12; assert_equal("Medium car hire rates (50% as many cars needed per vehicle-km travelled, compared to 2011).", worksheet.detailed_lever_guides_l12); end
  def test_detailed_lever_guides_n12; assert_equal("High car hire rates (just 25% as many cars needed per vehicle-km travelled, compared to 2011).", worksheet.detailed_lever_guides_n12); end
  def test_detailed_lever_guides_b13; assert_equal("Efficiency", worksheet.detailed_lever_guides_b13); end
  def test_detailed_lever_guides_d13; assert_equal("How efficient will our vehicles be? The efficiency of vehicles in 2011 applies to different vehicle types and fuels used in the calculator. In 2011 light-duty vehicles had an efficiency of 10 litres gasoline equivalent (lpe) per 100km and heavy-duty vehicles, 32 lge/100km. The rate of improvement is 1 to 2% globally per year. Though many improvements in efficiency can take place by implementing existing technology globally, additional improvements will depend on the development of new technologies and making attractive, affordable vehicles with these technologies.", worksheet.detailed_lever_guides_d13); end
  def test_detailed_lever_guides_g13; assert_equal("The efficiency lever will depend on the mode and occupancy lever. The more vehicles in the fleet, the more effective efficiency improvements will be in reducing emissions.", worksheet.detailed_lever_guides_g13); end
  def test_detailed_lever_guides_h13; assert_equal("Limited improvement, with most transport modes decreasing their energy intensity by 0.5% annually.", worksheet.detailed_lever_guides_h13); end
  def test_detailed_lever_guides_i13; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.detailed_lever_guides_i13); end
  def test_detailed_lever_guides_j13; assert_equal("The pace of improvement doubles from level 1, with most transport modes decreasing their energy intensity by 1% annually or ~33% over 40 years.", worksheet.detailed_lever_guides_j13); end
  def test_detailed_lever_guides_k13; assert_equal("Up to 2050 most transport modes decrease their energy intensity by 1% annually to roughly 7 lge/100km for LDVs and 22 lge/100km for HDVs.", worksheet.detailed_lever_guides_k13); end
  def test_detailed_lever_guides_l13; assert_equal("The pace of improvement is significant, with most transport modes decreasing their energy intensity by ~2% annually or ~50% over 40 years.", worksheet.detailed_lever_guides_l13); end
  def test_detailed_lever_guides_m13; assert_equal("Most transport modes decrease their energy intensity by 2% annually to roughly 4.5 lge/100km for LDVs and 15 lge/100km for HDVs by 2050.", worksheet.detailed_lever_guides_m13); end
  def test_detailed_lever_guides_n13; assert_equal("The pace of improvement is extreme, with most transport modes decreasing their energy intensity by ~3% annually or ~70% over 40 years.", worksheet.detailed_lever_guides_n13); end
  def test_detailed_lever_guides_o13; assert_equal("Most transport modes decrease their energy intensity by 3% annually to roughly 3 lge/100km for LDVs and 10 lge/100km for HDVs.", worksheet.detailed_lever_guides_o13); end
  def test_detailed_lever_guides_b14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_b14); end
  def test_detailed_lever_guides_d14; assert_equal("Will we switch to lower emission vehicles, such as hybrid, electric or hydrogen vehicles? For example, in 2011 only 0.0% of passenger cars were electric and very few used hydrogen.", worksheet.detailed_lever_guides_d14); end
  def test_detailed_lever_guides_g14; assert_equal("The impact of the electrification lever depends on the distribution of modes as well as the passenger and freight demand. The more vehicles in the fleet, the greater the impact of electrification in reducing emissions.", worksheet.detailed_lever_guides_g14); end
  def test_detailed_lever_guides_h14; assert_equal("By 2050, 0.0% of passenger cars are electric/hydrogen-powered", worksheet.detailed_lever_guides_h14); end
  def test_detailed_lever_guides_i14; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.detailed_lever_guides_i14); end
  def test_detailed_lever_guides_j14; assert_equal("By 2050, 0.0% of passenger cars are electric/hydrogen-powered", worksheet.detailed_lever_guides_j14); end
  def test_detailed_lever_guides_k14; assert_equal("By 2050, there is an increased share of new technologies in the vehicle fleet. The percentage of hybrid and electric vehicles increases (10% and 10%) for passenger cars, heavy duty vehicles (10% and 3%), and 2-3 wheelers (60% electric). Some new technologies are adopted for ships or airplanes (20% hydrogen).", worksheet.detailed_lever_guides_k14); end
  def test_detailed_lever_guides_l14; assert_equal("By 2050, 0.0% of passenger cars are electric/hydrogen-powered", worksheet.detailed_lever_guides_l14); end
  def test_detailed_lever_guides_m14; assert_equal("By 2050 there is significant adoption of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (20%, 20%, and 15%) for passenger cars, heavy duty vehicles (15%, 6%, and 10%), and 2-3 wheelers (70% electric). Some new technologies are adopted for ships or airplanes (40% hydrogen).", worksheet.detailed_lever_guides_m14); end
  def test_detailed_lever_guides_n14; assert_equal("By 2050, 0.0% of passenger cars are electric/hydrogen-powered", worksheet.detailed_lever_guides_n14); end
  def test_detailed_lever_guides_o14; assert_equal("By 2050 there is major deployment of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (33%, 35%, and 20%) for passenger cars, heavy duty vehicles (20% ,10%, and 20%), and 2-3 wheelers (80% electric). Many new technologies are adopted for ships or airplanes (60% hydrogen).", worksheet.detailed_lever_guides_o14); end
  def test_detailed_lever_guides_b15; assert_equal("Building size", worksheet.detailed_lever_guides_b15); end
  def test_detailed_lever_guides_d15; assert_equal("How big will our buildings be? For example, in 2011 the average area of an urban household was 92 m<sup>2</sup>.", worksheet.detailed_lever_guides_d15); end
  def test_detailed_lever_guides_e15; assert_equal("The average urban home will have a floor area of 104 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_e15); end
  def test_detailed_lever_guides_h15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_h15); end
  def test_detailed_lever_guides_i15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050. This is the same level as in western Europe today.", worksheet.detailed_lever_guides_i15); end
  def test_detailed_lever_guides_j15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_j15); end
  def test_detailed_lever_guides_k15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.. This is a little lower than the level of western Europe today.", worksheet.detailed_lever_guides_k15); end
  def test_detailed_lever_guides_l15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_l15); end
  def test_detailed_lever_guides_m15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.. This is the same level as countries in  southern Europe today, such as Spain.", worksheet.detailed_lever_guides_m15); end
  def test_detailed_lever_guides_n15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_n15); end
  def test_detailed_lever_guides_o15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050. This is the current OECD average, and the same as Japan today.", worksheet.detailed_lever_guides_o15); end
  def test_detailed_lever_guides_b16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_b16); end
  def test_detailed_lever_guides_d16; assert_equal("How comfortable will our home temperatures be? For example, in 2011 the average urban home temperature was 17.5&deg;C in winter and 26.5&deg;C in summer.", worksheet.detailed_lever_guides_d16); end
  def test_detailed_lever_guides_e16; assert_equal("In 2050 the average urban home will have an inside temperature of 19 &deg;C in winter and 25 &deg;C in summer.", worksheet.detailed_lever_guides_e16); end
  def test_detailed_lever_guides_h16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_h16); end
  def test_detailed_lever_guides_i16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_i16); end
  def test_detailed_lever_guides_j16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_j16); end
  def test_detailed_lever_guides_k16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_k16); end
  def test_detailed_lever_guides_l16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_l16); end
  def test_detailed_lever_guides_m16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_m16); end
  def test_detailed_lever_guides_n16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_n16); end
  def test_detailed_lever_guides_o16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_o16); end
  def test_detailed_lever_guides_b17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_b17); end
  def test_detailed_lever_guides_d17; assert_equal("How much technology will we have in our homes? In 2011 the average urban household had 1 refrigerator, 0.3 dishwashers, 0.8 clothes washers, 0.3 clothes dryers, 1.6 TVs and had 24 light bulbs.", worksheet.detailed_lever_guides_d17); end
  def test_detailed_lever_guides_e17; assert_equal("In 2050 the average urban household will have 1.2 refrigerator, 0.6 dishwasher, 0.9 clothes washers, 0.5 clothes dryers, 2.1 TV, 4.1 miscellaneous appliances. And will have 34.5 bulbs.", worksheet.detailed_lever_guides_e17); end
  def test_detailed_lever_guides_h17; assert_equal("In 2050 the average urban household will have 1.4 refrigerators, 0.7 dishwashers, 1 clothes washers, 0.6 clothes dryers, 2.4 TVs, 5 miscellaneous appliances and will have 40 light bulbs.", worksheet.detailed_lever_guides_h17); end
  def test_detailed_lever_guides_i17; assert_equal("In 2050 the average urban household will have 1.4 refrigerators, 0.7 dishwashers, 1 clothes washers, 0.6 clothes dryers, 2.4 TVs, 5 miscellaneous appliances and will have 40 light bulbs.", worksheet.detailed_lever_guides_i17); end
  def test_detailed_lever_guides_j17; assert_equal("In 2050 the average urban household will have 1.2 refrigerators, 0.6 dishwashers, 0.9 clothes washers, 0.5 clothes dryers, 2.1 TVs, 4.2 miscellaneous appliances and will have 35 light bulbs.", worksheet.detailed_lever_guides_j17); end
  def test_detailed_lever_guides_k17; assert_equal("In 2050 the average urban household will have 1.2 refrigerators, 0.6 dishwashers, 0.9 clothes washers, 0.5 clothes dryers, 2.1 TVs, 4.2 miscellaneous appliances and will have 35 light bulbs.", worksheet.detailed_lever_guides_k17); end
  def test_detailed_lever_guides_l17; assert_equal("In 2050 the average urban household will have 1.1 refrigerator, 0.5 dishwashers, 0.9 clothes washers, 0.4 clothes dryers, 2 TVs, 3.6 miscellaneous appliances and will have 30 bulbs.", worksheet.detailed_lever_guides_l17); end
  def test_detailed_lever_guides_m17; assert_equal("In 2050 the average urban household will have 1.1 refrigerator, 0.5 dishwashers, 0.9 clothes washers, 0.4 clothes dryers, 2 TVs, 3.6 miscellaneous appliances and will have 30 bulbs.", worksheet.detailed_lever_guides_m17); end
  def test_detailed_lever_guides_n17; assert_equal("In 2050 the average urban household will have 1 refrigerators, 0.3 dishwashers, 0.8 clothes washers, 0.3 clothes dryers, 1.6 TVs, 3 miscellaneous appliances and will have 25 light bulbs.", worksheet.detailed_lever_guides_n17); end
  def test_detailed_lever_guides_o17; assert_equal("In 2050 the average urban household will have 1 refrigerators, 0.3 dishwashers, 0.8 clothes washers, 0.3 clothes dryers, 1.6 TVs, 3 miscellaneous appliances and will have 25 light bulbs.", worksheet.detailed_lever_guides_o17); end
  def test_detailed_lever_guides_b18; assert_equal("Building insulation", worksheet.detailed_lever_guides_b18); end
  def test_detailed_lever_guides_d18; assert_equal("How insulated will our buildings be? For example, in 2011 the average heat loss coefficient of an urban residential building was 16.9 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_d18); end
  def test_detailed_lever_guides_e18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 33% by 2050. The average heat loss coefficient of these buildings will be 11.4 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_e18); end
  def test_detailed_lever_guides_h18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29%.", worksheet.detailed_lever_guides_h18); end
  def test_detailed_lever_guides_i18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29%.", worksheet.detailed_lever_guides_i18); end
  def test_detailed_lever_guides_j18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 47%.", worksheet.detailed_lever_guides_j18); end
  def test_detailed_lever_guides_k18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 47%.", worksheet.detailed_lever_guides_k18); end
  def test_detailed_lever_guides_l18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 64%.", worksheet.detailed_lever_guides_l18); end
  def test_detailed_lever_guides_m18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 64%.", worksheet.detailed_lever_guides_m18); end
  def test_detailed_lever_guides_n18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 76%.", worksheet.detailed_lever_guides_n18); end
  def test_detailed_lever_guides_o18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 76%.", worksheet.detailed_lever_guides_o18); end
  def test_detailed_lever_guides_b19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_b19); end
  def test_detailed_lever_guides_d19; assert_equal("How will we heat, cool and light our buildings, and how will we cook our food? For example, in 2011, 2% of urban heating used low-carbon technologies like heat pumps and solar heaters. All cooling used air conditioning, with 0% low-carbon options like solar cooling.", worksheet.detailed_lever_guides_d19); end
  def test_detailed_lever_guides_e19; assert_equal("In 2050 the heating technology structure will be 2% solid boiler, 11% liquid boiler, 46% gas boiler, 5% heat pumps, 7% electricity heater, 1% solar heater, 3% micro-CHP, 25% district heating. The cooling structure will be 91% air-conditioning, 3% chiller, 6% solar cooling. The cooking technology structure will be 7% solid stoves, 14% liquid stoves, 39% gas stoves, 30% electric stoves, 11% traditional biomass stoves. ", worksheet.detailed_lever_guides_e19); end
  def test_detailed_lever_guides_h19; assert_equal("2% of heating is from either solar or heat pumps, and 5% of cooling is solar. ", worksheet.detailed_lever_guides_h19); end
  def test_detailed_lever_guides_i19; assert_equal("Technology mix remains the same in 2050 as today. HEATING: 2% solid boiler, 14% liquid boiler, 55% gas boiler, 2% heat pumps, 8% electricity heater, 0% solar heater, 2% micro-CHP, 17% district heating. COOLING: 93% air-conditioning 2% chiller, 5% solar cooling. COOKING: 8% solid stoves, 15% liquid stoves, 40% gas stoves, 25% electric stoves, 12% traditional biomass stoves. LIGHTING: 51% incandescents, 3% halogens, 45% CFLs, 1% LEDs. ", worksheet.detailed_lever_guides_i19); end
  def test_detailed_lever_guides_j19; assert_equal("20% of heating is from either solar or heat pumps, and 10% of cooling is solar. ", worksheet.detailed_lever_guides_j19); end
  def test_detailed_lever_guides_k19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 1% liquid boiler, 10% gas boiler, 15% heat pumps, 5% electricity heater, 5% solar heater, 8% micro-CHP, 55% district heating. COOLING: 85% air-conditioning 5% chiller, 10% solar cooling. COOKING: 1% solid stoves, 8% liquid stoves, 35% gas stoves, 50% electric stoves, 6% traditional biomass stoves. LIGHTING: 20% incandescents, 1% halogens, 69% CFLs, 10% LEDs.", worksheet.detailed_lever_guides_k19); end
  def test_detailed_lever_guides_l19; assert_equal("45% of heating is from either solar or heat pumps, and 15% of cooling is solar. ", worksheet.detailed_lever_guides_l19); end
  def test_detailed_lever_guides_m19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 0% liquid boiler, 30% gas boiler, 35% heat pumps, 5% electricity heater, 10% solar heater, 9% micro-CHP, 10% district heating. COOLING: 75% air-conditioning 10% chiller, 15% solar cooling. COOKING: 0% solid stoves, 1% liquid stoves, 30% gas stoves, 68% electric stoves, 1% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 50% CFLs, 50% LEDs.", worksheet.detailed_lever_guides_m19); end
  def test_detailed_lever_guides_n19; assert_equal("70% of heating is from either solar or heat pumps, and 20% of cooling is solar. ", worksheet.detailed_lever_guides_n19); end
  def test_detailed_lever_guides_o19; assert_equal("In 2050 the technology mix will be: HEATING: 0% solid boiler, 0% liquid boiler, 10% gas boiler, 50% heat pumps, 2% electricity heater, 20% solar heater, 11% micro-CHP, 7% district heating. COOLING: 65% air-conditioning 15% chiller, 20% solar cooling. COOKING: 0% solid stoves, 0% liquid stoves, 25% gas stoves, 75% electric stoves, 0% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 20% CFLs, 80% LEDs.", worksheet.detailed_lever_guides_o19); end
  def test_detailed_lever_guides_b20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_b20); end
  def test_detailed_lever_guides_d20; assert_equal("How efficient will our appliances be? For example, the average urban TV in 2011 had a power of 250W. For the last 20 years, average appliance efficiency in Europe has improved by around 20%. ", worksheet.detailed_lever_guides_d20); end
  def test_detailed_lever_guides_e20; assert_equal("Average TV uses has a power of 236W in 2050.", worksheet.detailed_lever_guides_e20); end
  def test_detailed_lever_guides_h20; assert_equal("Average TV uses uses 3% less power.", worksheet.detailed_lever_guides_h20); end
  def test_detailed_lever_guides_i20; assert_equal("Average TV uses uses 3% less power.", worksheet.detailed_lever_guides_i20); end
  def test_detailed_lever_guides_j20; assert_equal("Average TV uses uses 17% less power.", worksheet.detailed_lever_guides_j20); end
  def test_detailed_lever_guides_k20; assert_equal("Average TV uses uses 17% less power.", worksheet.detailed_lever_guides_k20); end
  def test_detailed_lever_guides_l20; assert_equal("Average TV uses uses 23% less power.", worksheet.detailed_lever_guides_l20); end
  def test_detailed_lever_guides_m20; assert_equal("Average TV uses uses 23% less power.", worksheet.detailed_lever_guides_m20); end
  def test_detailed_lever_guides_n20; assert_equal("Average TV uses uses 30% less power.", worksheet.detailed_lever_guides_n20); end
  def test_detailed_lever_guides_o20; assert_equal("Average TV uses uses 30% less power.", worksheet.detailed_lever_guides_o20); end
  def test_detailed_lever_guides_b21; assert_equal("Product lifespan & demand", worksheet.detailed_lever_guides_b21); end
  def test_detailed_lever_guides_d21; assert_equal("How long will our products last? Demand for products leads to the production of 8.7Gt of materials, that is: 1.8Gt of crude steel, 0.1Gt of aluminium, 0.8Gt of chemicals, 0.6Gt of paper, 0.8Gt of timber, 1Gt of other materials, & 3.6Gt of cement.", worksheet.detailed_lever_guides_d21); end
  def test_detailed_lever_guides_e21; assert_equal("Demand for products leads to the production of 15.8Gt of materials, that is: 3.1Gt of crude steel, 0.1Gt of aluminium, 1.7Gt of chemicals, 1.3Gt of paper, 1.5Gt of timber, 2.4Gt of other materials, & 5.7Gt of cement.", worksheet.detailed_lever_guides_e21); end
  def test_detailed_lever_guides_f21; assert_equal("Demand for these products leads to the production of 17.5Gt of materials, that is: 3.1Gt of crude steel, 0.2Gt of aluminium, 1.4Gt of chemicals, 0.9Gt of paper, 1.4Gt of timber, 2.4Gt of other materials, & 1.4Gt of cement", worksheet.detailed_lever_guides_f21); end
  def test_detailed_lever_guides_g21; assert_equal("Product demand is defined by the activity in the other sectors whenever possible (e.g. amount of buildings, infrastructure and transport demand are defined in their respective sectors). Product demand is defined by this lever when there is no link with the activity in the other sectors (e.g. packaging and paper demand are defined by this lever). This lever also specifies the lifetime of all the consumer products (and therefore the need for new products to answer a specified stock requirement at a given time).", worksheet.detailed_lever_guides_g21); end
  def test_detailed_lever_guides_h21; assert_equal("By 2050 the demand for consumer goods per head increases, with product demand correlated to GDP growth projection. Buildings, infrastructure & transport product demand are defined by the other sectors and transport lifespan is unchanged from 2011 levels. There is no development in product reuse or recycling.", worksheet.detailed_lever_guides_h21); end
  def test_detailed_lever_guides_i21; assert_equal("To 2050, product demand is in line with historical trends and  the GDP growth projection. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods increase (paper+10%, metal goods +20% and packaging +10%).There is no development in product reuse nor recycling (product lifetime for cars is 12.5 years, for TVs 5 years, and for appliances 10 years).", worksheet.detailed_lever_guides_i21); end
  def test_detailed_lever_guides_j21; assert_equal("Consumer product demand per head worldwide reaches current EU levels then flattens. Buildings, infrastructure & transport product demand are defined by the other sectors and transport lifespan increases 10% from 2011 levels by 2050. Consumer goods stabilize.\rModerate development in product reuse and recycling.", worksheet.detailed_lever_guides_j21); end
  def test_detailed_lever_guides_k21; assert_equal("Consumer product demand worldwide reaches current EU levels then flattens. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods stabilize (paper+0%, metal goods +10%, packaging +0%). Moderate development in product reuse and recycling (product lifetime for cars is 13.7 years, for TVs 7 years, and for appliances 15 years).", worksheet.detailed_lever_guides_k21); end
  def test_detailed_lever_guides_l21; assert_equal("Consumer product demand remains constant (increases in some parts of the world balance decreases in other). Buildings, infrastructure & transport product demand are defined by the other sectors and transport technology lifespan increases by 20% by 2050 from 2011 levels. Significant development in product reuse and recycling.", worksheet.detailed_lever_guides_l21); end
  def test_detailed_lever_guides_m21; assert_equal("Consumer product demand remains constant (increases in some parts of the world balance decreases in others). Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods decrease (paper-10%, metal goods -10% and packaging -10%). Significant development in product reuse and recycling (product lifetime for cars is 15 years, for TV 10 years, and for appliances 20 years).", worksheet.detailed_lever_guides_m21); end
  def test_detailed_lever_guides_n21; assert_equal("Consumers buy fewer goods (e.g. they are higher value but less resource intensive). Buildings, infrastructure & transport product demand are defined by the other sectors and transport technology lifespan increases 30% from 2011 levels by 2050. Consumer goods decrease as product demand is not correlated to GDP increase.", worksheet.detailed_lever_guides_n21); end
  def test_detailed_lever_guides_o21; assert_equal("Consumers buy fewer goods (e.g. they are higher value but less resource intensive). Buildings, infrastructure & transport product demand are defined by the other sectors. Consumer goods decrease (paper-20%, metals goods -20%, packaging -20%).Product demand not correlated to GDP increase (product life time of cars is 16.2 years, of TV 15 years, of appliances 30 years).", worksheet.detailed_lever_guides_o21); end
  def test_detailed_lever_guides_b22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_b22); end
  def test_detailed_lever_guides_d22; assert_equal("How efficiently will we use materials, and will we recycle more? Demand for products leads to the production of 8.7Gt of materials per year.", worksheet.detailed_lever_guides_d22); end
  def test_detailed_lever_guides_e22; assert_equal("Product design leads to the reduction of -1% of materials in 2050.", worksheet.detailed_lever_guides_e22); end
  def test_detailed_lever_guides_h22; assert_equal("No product & material design improvements that would lead to less material needed to make products. No switch to less CO2 intensive materials. Stable level of recycled products & materials (slight increase in chemicals, decrease in aluminium).", worksheet.detailed_lever_guides_h22); end
  def test_detailed_lever_guides_i22; assert_equal("No product & material design improvements (leading to less materials to make products by 2050). No switch to materials which are less CO2 intensive over the product lifetime.Recycling levels the same as today (36% recycled steel, 8% non-recycled chemicals becomes recycled, -29% non-recycled aluminium becomes recycled).", worksheet.detailed_lever_guides_i22); end
  def test_detailed_lever_guides_j22; assert_equal("Ambitious product & material design improvements, resulting in -10% less material to make products. Minor switches to materials which are less CO2 intensive over product lifetimes. Minor increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_j22); end
  def test_detailed_lever_guides_k22; assert_equal("Ambitious product and material design improvements, leading to -10% less materials needed to make products. Minor material switches (5% steel to timber in buildings, 5% cement to timber in buildings, 5% steel to aluminium in cars and trucks, 5% steel to carbon fibres [plastics] in cars and trucks, 1.25% cement to insulation materials [plastics] in buildings and infrastructure). Minor increase by 2050 in recycling (44% steel, 16% chemicals, -21% aluminium, 9% paper).", worksheet.detailed_lever_guides_k22); end
  def test_detailed_lever_guides_l22; assert_equal("Very ambitious product & material design improvements result in -20% less material needed to make products. Significant switches to materials which are less CO2 intensive over product lifetimes. Significant increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_l22); end
  def test_detailed_lever_guides_m22; assert_equal("Very ambitious product and material design improvements, leading to -20% less material needed to make products. Significant material switches (10% steel to timber in buildings, 10% cement to timber in buildings, 10% steel to aluminium in cars and trucks, 10% steel to carbon fibres [plastics] in cars and trucks, 2,5% cement to insulation materials [plastics] in buildings and infrastructure). Significant increase in non recycled which will get recycled (56% steel, 24% chemicals, -14% aluminium, 24% paper).", worksheet.detailed_lever_guides_m22); end
  def test_detailed_lever_guides_n22; assert_equal("Extreme improvements in product & material design, resulting in -30% less material to make products by 2050. which are less CO2 intensive over product lifetimes. Extreme increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_n22); end
  def test_detailed_lever_guides_o22; assert_equal("Extreme improvements in product and material design, leading to -30% less material needed to make products by 2050. Major material switches (20% steel to timber in buildings, 10% cement to timber in buildings, 20% steel to aluminium in cars and trucks, 20% steel to carbon fibres [plastics] in cars and trucks, 5% cement to insulation materials [plastics] in buildings and infrastructure). Major increase in recycling (75% steel, 32% chemicals, -7% aluminium, 39% paper).", worksheet.detailed_lever_guides_o22); end
  def test_detailed_lever_guides_b23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_b23); end
  def test_detailed_lever_guides_d23; assert_equal("How much will emissions reduce from iron, steel and aluminium production? Current emissions in the production of metals are 0.6 GtCO2 per Gt of steel and 1 GtCO2 per Gt of aluminium.", worksheet.detailed_lever_guides_d23); end
  def test_detailed_lever_guides_e23; assert_equal("Specific emissions for Steel reduce/increase by -4.2% and for Aluminium by -3%.", worksheet.detailed_lever_guides_e23); end
  def test_detailed_lever_guides_h23; assert_equal("Continued use of current processes & technologies. Continued use of fuels. Minimal improvements in energy efficiency. No change in emissions per tonne of steel and aluminium.", worksheet.detailed_lever_guides_h23); end
  def test_detailed_lever_guides_i23; assert_equal("Continued use of current processes and technologies. Steel: 70% classic blast oxygen furnaces (using 21% scrap), 0% HIsarna, 5% electric arc furnace DRI (using 9% scrap), 25% electric arc furnace scrap (using 70% of scrap). Aluminium: 0% decrease in consumption per tonne for primary aluminium and 0% for secondary aluminium. Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne of steel and aluminium are unchanged by 2050 (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i23); end
  def test_detailed_lever_guides_j23; assert_equal("Moderate decrease in classic blast oxygen furnaces, increase in electric arc furnaces and new oxygen furnace technologies. Moderate improvements in aluminium. Equivalent to the development of recent programmes for some sectors. Emissions per tonne decrease by 2% for steel and by 3% for aluminium.", worksheet.detailed_lever_guides_j23); end
  def test_detailed_lever_guides_k23; assert_equal("Moderate process and technology change. Steel: 61% classic blast oxygen furnaces (using 19% of scrap), 2% HIsarna (using 0.2% of scrap), 6% EAF DRI (using 10% scrap), 31% EAF scrap (using 71% scrap). Aluminium: 5% decrease in consumption per tonne for primary aluminium and 5% for secondary aluminium. Some fuel switches in blast oxygen furnaces (2% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap & EAF DRI), some in primary aluminium (2% coal to biomass potential), none in secondary aluminium. Significant energy efficiency improvements (5% in blast oxygen furnaces, none in other technologies and no additional CHP development) Emissions per tonne decrease by 2% for steel and by 3% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k23); end
  def test_detailed_lever_guides_l23; assert_equal("Significant technology progress. Fuel switch towards biomass and electrification, and energy efficiency requiring significant financial investments. Emissions per tonne decrease by 1% for steel and by 7% for aluminium.", worksheet.detailed_lever_guides_l23); end
  def test_detailed_lever_guides_m23; assert_equal("Significant technology progress. Steel: 48% classic blast oxygen furnaces (using 18% scrap), 5% HIsarna (using 1% scrap), 8% EAF DRI (using 9% scrap), 40% EAF scrap (using 72% scrap). Aluminium: (10% decrease in consumption per tonne for primary aluminium and 10% for secondary aluminium.Important fuel switches in blast oxygen furnaces (3% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (3% coal to biomass potential), none in secondary aluminium. Significant energy efficiency increases (7% in blast oxygen furnaces, none in other technologies and no additional CHP development).  Emissions per tonne decrease by 1% for steel and by 7% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m23); end
  def test_detailed_lever_guides_n23; assert_equal("Very important technology progress, fuel switch (towards biomass & electrification) & energy efficiency close to technical and physical constraints (but limited breakthrough technologies).\rEmissions per tonne decrease by 1% for steel and by 13% for aluminium.", worksheet.detailed_lever_guides_n23); end
  def test_detailed_lever_guides_o23; assert_equal("Extreme technology progress. Steel: 25% classic blast oxygen furnaces (using 13% scrap), 10% HIsarna (using 4% scrap), 10% EAF DRI (using 10% scrap), 55% EAF scrap (using 73% scrap). Aluminium: 20% decrease in consumption per tonne for primary aluminium and 20% for secondary aluminium. Major fuel switches in blast oxygen furnaces (5% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (5% coal to biomass potential), none in secondary aluminium. Energy efficiency improvements close to technical and physical constraints (10% in blast oxygen furnaces, none in other technologies and no additional CHP development). Emissions per tonne reduce by 1% for steel & by 13% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o23); end
  def test_detailed_lever_guides_b24; assert_equal("Chemicals", worksheet.detailed_lever_guides_b24); end
  def test_detailed_lever_guides_d24; assert_equal("How much will emissions reduce from chemical production? Specific emissions for chemicals are 1.5GtCO2 per Gt.", worksheet.detailed_lever_guides_d24); end
  def test_detailed_lever_guides_e24; assert_equal("Specific emissions for chemicals reduce/increase by 0%", worksheet.detailed_lever_guides_e24); end
  def test_detailed_lever_guides_h24; assert_equal("1% increase in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_h24); end
  def test_detailed_lever_guides_i24; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (5% of electricity produced by CHP as now).  Emissions per tonne increase by 1% for chemicals (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i24); end
  def test_detailed_lever_guides_j24; assert_equal("3% decrease in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_j24); end
  def test_detailed_lever_guides_k24; assert_equal("Moderate process and technology changes: 5% decrease in consumption per ton for high value chemicals (HVC), 0% in ammonia, 0% in methanol, 5% in other chemicals. Some fuel switches in HVC (10% coal to gas,10% oil to gas), some switches across all chemical technologies (5% coal to biomass potential). Significant energy efficiency improvements (5% for HVC, 8% for ammonia, 8% for methanol & 5% for other chemicals. 10% of electricity produced by CHP)  Emissions per tonne decrease by 3% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k24); end
  def test_detailed_lever_guides_l24; assert_equal("7% decrease in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_l24); end
  def test_detailed_lever_guides_m24; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 10% for other chemicals. Important fuel switches in HVCs (20% coal to gas,20% oil to gas), some switches across all chemical technologies (10% coal to biomass potential). Significant energy efficiency improvements (10% for HVC, 15% for ammonia, 15% for methanol & 10% for other chemicals & 15% of electricity produced by CHP).  Emissions per tonne decrease by 7% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m24); end
  def test_detailed_lever_guides_n24; assert_equal("15% decrease in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_n24); end
  def test_detailed_lever_guides_o24; assert_equal("Very important process and technology changes: 20% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 20% for other chemicals.Major fuel switches in HVCs (30% coal to gas,30% oil to gas), some switches across all chemical technologies (20% coal to biomass potential). Energy efficiency improvements close to technical and physical constraints (20% for HVC, 30% for ammonia, 30% for methanol & 20% for other chemicals & 20% of electricity produced by CHP).  Emissions per tonne decrease by 15% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o24); end
  def test_detailed_lever_guides_b25; assert_equal("Paper and other", worksheet.detailed_lever_guides_b25); end
  def test_detailed_lever_guides_d25; assert_equal("How efficiently do we produce paper? Specific emissions for pulp & paper are 0.5 GtCO2 per Gt and for other materials of are 2.3 GtCO2 per Gt.", worksheet.detailed_lever_guides_d25); end
  def test_detailed_lever_guides_e25; assert_equal("Specific emissions for pulp & paper change by -21% and for other materials by -14%.", worksheet.detailed_lever_guides_e25); end
  def test_detailed_lever_guides_h25; assert_equal("1% increase in CO<sub>2</sub> per tonne of pulp and paper produced, and 2% increase for other materials", worksheet.detailed_lever_guides_h25); end
  def test_detailed_lever_guides_i25; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (No additional CHP ( 5% of electricity produced by CHP for paper, 5% for timber & 5% for other industries). )Emissions per tonne increase by 1% for paper and 2% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i25); end
  def test_detailed_lever_guides_j25; assert_equal("20% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, 20% decrease for other materials.", worksheet.detailed_lever_guides_j25); end
  def test_detailed_lever_guides_k25; assert_equal("Moderate process and technology changes: paper (5% decrease in consumption per tonne for paper pulp, 5% for virgin paper, 5% for recycled paper), 0% for timber & 0% for other industries. Some fuel switches (coal to biomass potential) inpPaper (2%), timber(2%), and other industries (2%) Significant energy efficiency (20% for paper, 20% for timber, 20% for other industries. 10% of electricity produced by CHP for paper, 10% for timber & 10% for other industries). Emissions per tonne decrease by 20% for pulp and paper and by 20% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k25); end
  def test_detailed_lever_guides_l25; assert_equal("32% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, and 31% decrease for other materials", worksheet.detailed_lever_guides_l25); end
  def test_detailed_lever_guides_m25; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for paper pulp, 10% for virgin paper, 10% for recycled paper), 0% for timber & 0% for other industries. Significant fuel switches (coal to biomass potential) in paper (3%), timber (3%), and other industries (3%). Significant energy efficiency (30% for paper, 30% for timber, 30% for other industries. 15% of electricity produced by CHP for paper, 15% for timber & 15% for other industries).  Emissions per tonne decrease by 32% for pulp and paper, and by 31% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m25); end
  def test_detailed_lever_guides_n25; assert_equal("45% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, 42% decrease for other materials", worksheet.detailed_lever_guides_n25); end
  def test_detailed_lever_guides_o25; assert_equal("Very important process and technology changes: paper (20% decrease in consumption per ton for paper pulp, 20% for virgin paper, 20% for recycled paper), % for timber and % in other industries), 0% for timber and 0% for other industries. Major fuel switches (coal to biomass potential) in paper (5%), timber(5%), and other industries (5%). Energy efficiency close to technical and physical constraints (40% for paper, 40% for timber, 40% for other industries. 20% of electricity produced by CHP for paper, 20% for timber & 20% for other industries).  Emissions per tonne reduce by 45% for pulp and paper, and by 42% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o25); end
  def test_detailed_lever_guides_b26; assert_equal("Cement", worksheet.detailed_lever_guides_b26); end
  def test_detailed_lever_guides_d26; assert_equal("How efficiently do we produce cement? In 2011, 0.4 Gt of CO2  were emitted per Gt of cement produced.", worksheet.detailed_lever_guides_d26); end
  def test_detailed_lever_guides_e26; assert_equal("Specific emissions for cement reduce/increase by -5%.", worksheet.detailed_lever_guides_e26); end
  def test_detailed_lever_guides_h26; assert_equal("2% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_h26); end
  def test_detailed_lever_guides_i26; assert_equal("Continued use of current processes and technologies (28% clinker in cement). Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne decrease by 2% for cement (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i26); end
  def test_detailed_lever_guides_j26; assert_equal("4% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_j26); end
  def test_detailed_lever_guides_k26; assert_equal("Moderate process and technology changes: 4% decrease in consumption per tonne (31% clinker in cement). Some fuel switches (6% coal to biomass potential) Significant energy efficiency (9%). No additional CHP developments.  Emissions per tonne decrease by 4% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k26); end
  def test_detailed_lever_guides_l26; assert_equal("8% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_l26); end
  def test_detailed_lever_guides_m26; assert_equal("Significant process and technology changes: 8% decrease in consumption per tonne (34% clinker in cement). Significant fuel switches (46% coal to biomass potential). Significant energy efficiency (18%). No additional CHP developments.  Emissions per tonne decrease by 8% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m26); end
  def test_detailed_lever_guides_n26; assert_equal("31% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_n26); end
  def test_detailed_lever_guides_o26; assert_equal("Very important process and technology changes: 86% decrease in consumption per tonne (90% clinker in cement).Major fuel switches (100% coal to biomass potential). Energy efficiency close to technical & physical constraints (30%). No additional CHP developments.  Emissions per tonne reduce by 31% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o26); end
  def test_detailed_lever_guides_b27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_b27); end
  def test_detailed_lever_guides_d27; assert_equal("Will we use CCS in industry to capture process and combustion emissions? CCS is not implemented in industry in 2011.", worksheet.detailed_lever_guides_d27); end
  def test_detailed_lever_guides_e27; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.detailed_lever_guides_e27); end
  def test_detailed_lever_guides_h27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_h27); end
  def test_detailed_lever_guides_i27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_i27); end
  def test_detailed_lever_guides_j27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions . It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_j27); end
  def test_detailed_lever_guides_k27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_k27); end
  def test_detailed_lever_guides_l27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_l27); end
  def test_detailed_lever_guides_m27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_m27); end
  def test_detailed_lever_guides_n27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_n27); end
  def test_detailed_lever_guides_o27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_o27); end
  def test_detailed_lever_guides_b28; assert_equal("Coal (incl. biomass) / oil / gas", worksheet.detailed_lever_guides_b28); end
  def test_detailed_lever_guides_c28; assert_equal("SLG.elec", worksheet.detailed_lever_guides_c28); end
  def test_detailed_lever_guides_d28; assert_equal("In thermal power plants, do we use solid fuel (coal or wood) or gaseous fuel (natural gas or biogas)? For example, in 2011 61% of fuel was solid, 7% liquid and 32% gas.", worksheet.detailed_lever_guides_d28); end
  def test_detailed_lever_guides_e28; assert_equal("In 2050 out of total fossil energy supplied it is 40% of solid, 19% of liquid and 41% of gas power.", worksheet.detailed_lever_guides_e28); end
  def test_detailed_lever_guides_g28; assert_equal("If the user supplies bioenergy from the land and food choices, some of this is allocated to thermal power plants.", worksheet.detailed_lever_guides_g28); end
  def test_detailed_lever_guides_h28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.", worksheet.detailed_lever_guides_h28); end
  def test_detailed_lever_guides_i28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a slight move away from gas to liquid based power.", worksheet.detailed_lever_guides_i28); end
  def test_detailed_lever_guides_j28; assert_equal("40% of fuel for thermal power plants is solid, and 41% is gas.", worksheet.detailed_lever_guides_j28); end
  def test_detailed_lever_guides_k28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a slight move away from solid to gas and liquid based power.", worksheet.detailed_lever_guides_k28); end
  def test_detailed_lever_guides_l28; assert_equal("32% of fuel for thermal power plants is solid, and 62% is gas.", worksheet.detailed_lever_guides_l28); end
  def test_detailed_lever_guides_m28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a strong move away from solid to gas based power.", worksheet.detailed_lever_guides_m28); end
  def test_detailed_lever_guides_n28; assert_equal("26% of fuel for thermal power plants is solid, and 72% is gas.", worksheet.detailed_lever_guides_n28); end
  def test_detailed_lever_guides_o28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a significant move away from coal and liquid based power toward gas based power.", worksheet.detailed_lever_guides_o28); end
  def test_detailed_lever_guides_b29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_b29); end
  def test_detailed_lever_guides_d29; assert_equal("How efficient will power stations be? In 2011:\rSOLID FUELED POWER: 8% by ultrasupercritical, 17% supercritical, 75% sub-critical\rLIQUID FUELED POWER: 30% are efficient plants (over 50% efficient), 70% are inefficient plants (under 50% efficient)\rGAS FUELED POWER: 35% open cycle gas turbines and 65% by combined cycle gas turbines.", worksheet.detailed_lever_guides_d29); end
  def test_detailed_lever_guides_e29; assert_equal("In 2050 out of fossil energy supplied it is 18% by solid USC, 27% by solid SC, 54% by solid Sub-C, 51% by eff. liquid, 49% by ineff. liquid, 42% by OCGT and 59% by CCGT plant.", worksheet.detailed_lever_guides_e29); end
  def test_detailed_lever_guides_h29; assert_equal("By 2050:SOLID FUELED POWER 14% by solid ultrasupercritical, 23% by solid supercritical, 63% by solid subcritical. LIQUID FUELED POWER: 33% by efficient (plants that are over 50% efficient), 67% by inefficient (plants that less than 50% efficient). GAS FUELED POWER: 61% open cycle gas turbine, 39% combined cycle gas turbines.", worksheet.detailed_lever_guides_h29); end
  def test_detailed_lever_guides_i29; assert_equal("By 2050:SOLID FUELED POWER 14% by solid ultrasupercritical, 23% by solid supercritical, 63% by solid subcritical. LIQUID FUELED POWER: 33% by efficient (plants that are over 50% efficient), 67% by inefficient (plants that less than 50% efficient). GAS FUELED POWER: 61% open cycle gas turbine, 39% combined cycle gas turbines.", worksheet.detailed_lever_guides_i29); end
  def test_detailed_lever_guides_j29; assert_equal("By 2050:SOLID FUELED POWER:18% by solid ultrasupercritical, 27% by solid supercritical, 55% by solid subcritical. LIQUID FUELED: 47% by efficient (plants that are over 50% efficient), 53% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 48% open cycle gas turbine 53% combined cycle gas turbines.", worksheet.detailed_lever_guides_j29); end
  def test_detailed_lever_guides_k29; assert_equal("By 2050:SOLID FUELED POWER:18% by solid ultrasupercritical, 27% by solid supercritical, 55% by solid subcritical. LIQUID FUELED: 47% by efficient (plants that are over 50% efficient), 53% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 48% open cycle gas turbine 53% combined cycle gas turbines.", worksheet.detailed_lever_guides_k29); end
  def test_detailed_lever_guides_l29; assert_equal("By 2050:SOLID FUELED POWER: 20% by solid ultrasupercritical, 29% by solid supercritical, 50% by solid subcritical.LIQUID FUELED POWER: 65% by efficient (plants that are over 50% efficient), 35% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 18% open cycle gas turbine 83% combined cycle gas turbines.", worksheet.detailed_lever_guides_l29); end
  def test_detailed_lever_guides_m29; assert_equal("By 2050:SOLID FUELED POWER: 20% by solid ultrasupercritical, 29% by solid supercritical, 50% by solid subcritical.LIQUID FUELED POWER: 65% by efficient (plants that are over 50% efficient), 35% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 18% open cycle gas turbine 83% combined cycle gas turbines.", worksheet.detailed_lever_guides_m29); end
  def test_detailed_lever_guides_n29; assert_equal("By 2050: SOLID FUELED POWER: 23% by solid ultrasupercritical, 32% by solid supercritical, 45% by solid subcritical.LIQUID FUELED POWER: 71% by efficient (plants that are over 50% efficient), 29% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 7% open cycle gas turbine 93% combined cycle gas turbines.", worksheet.detailed_lever_guides_n29); end
  def test_detailed_lever_guides_o29; assert_equal("By 2050: SOLID FUELED POWER: 23% by solid ultrasupercritical, 32% by solid supercritical, 45% by solid subcritical.LIQUID FUELED POWER: 71% by efficient (plants that are over 50% efficient), 29% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 7% open cycle gas turbine 93% combined cycle gas turbines.", worksheet.detailed_lever_guides_o29); end
  def test_detailed_lever_guides_b30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_b30); end
  def test_detailed_lever_guides_c30; assert_equal("CCS.elec", worksheet.detailed_lever_guides_c30); end
  def test_detailed_lever_guides_d30; assert_equal("Do we use carbon capture and storage in electricity generation? In 2011, most of the CCS projects implemented in the power sector were demonstration projects of kW and MW scale. There was no commercial deployment of CCS in power in 2011. However, there is a pipeline of CCS projects being developed by OECD countries (mainly USA and EU). These are not expected until the early 2020s.", worksheet.detailed_lever_guides_d30); end
  def test_detailed_lever_guides_e30; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_e30); end
  def test_detailed_lever_guides_h30; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_h30); end
  def test_detailed_lever_guides_i30; assert_equal("By 2050 there will be 16 GW of power plants with CCS. No new CCS plants will be commissioned beyond 2020 and the plants commissioned between 2015-2020 will be operating by 2050.", worksheet.detailed_lever_guides_i30); end
  def test_detailed_lever_guides_j30; assert_equal("490 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_j30); end
  def test_detailed_lever_guides_k30; assert_equal("490 GW of CCS installed power capacity by 2050. This could be interpreted as expansion mostly driven by the US and EU and no/low participation from non-OECD countries. 10% of total fossil fuel plants will have CCS by 2050.", worksheet.detailed_lever_guides_k30); end
  def test_detailed_lever_guides_l30; assert_equal("1,487 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_l30); end
  def test_detailed_lever_guides_m30; assert_equal("1,487 GW of CCS installed power capacity by 2050. This could be interpreted as moderate penetration of CCS in OECD countries and emerging economies and low expansion in developing countries. 30% of total fossil fuel-based plants have adopted CCS technology by 2050.", worksheet.detailed_lever_guides_m30); end
  def test_detailed_lever_guides_n30; assert_equal("3,700 GW of CCS installed power capacity by 2050", worksheet.detailed_lever_guides_n30); end
  def test_detailed_lever_guides_o30; assert_equal("3,700 GW of CCS installed power capacity by 2050 High CCS expansion worldwide.", worksheet.detailed_lever_guides_o30); end
  def test_detailed_lever_guides_b31; assert_equal("Nuclear", worksheet.detailed_lever_guides_b31); end
  def test_detailed_lever_guides_c31; assert_equal("nuclear.elec", worksheet.detailed_lever_guides_c31); end
  def test_detailed_lever_guides_d31; assert_equal("Do we use nuclear power? In 2011, global capacity was 364 GW.", worksheet.detailed_lever_guides_d31); end
  def test_detailed_lever_guides_e31; assert_equal("480 GW of installed nuclear power capacity by 2050.", worksheet.detailed_lever_guides_e31); end
  def test_detailed_lever_guides_h31; assert_equal("0 GW", worksheet.detailed_lever_guides_h31); end
  def test_detailed_lever_guides_i31; assert_equal("0 GW", worksheet.detailed_lever_guides_i31); end
  def test_detailed_lever_guides_j31; assert_equal("685 GW", worksheet.detailed_lever_guides_j31); end
  def test_detailed_lever_guides_k31; assert_equal("685 GW This is equivalent to current global build rates continuing up to 2050.", worksheet.detailed_lever_guides_k31); end
  def test_detailed_lever_guides_l31; assert_equal("1,030 GW", worksheet.detailed_lever_guides_l31); end
  def test_detailed_lever_guides_m31; assert_equal("1,030 GW This is equivalent to global planned build rates over the next decade (until 2020) continuing up to 2050.", worksheet.detailed_lever_guides_m31); end
  def test_detailed_lever_guides_n31; assert_equal("1,870 GW", worksheet.detailed_lever_guides_n31); end
  def test_detailed_lever_guides_o31; assert_equal("1,870 GW This is equivalent to implementation of all planned projects over the next decade, followed by expansion of the technology at the highest achievable build rate until 2050.", worksheet.detailed_lever_guides_o31); end
  def test_detailed_lever_guides_b32; assert_equal("Wind", worksheet.detailed_lever_guides_b32); end
  def test_detailed_lever_guides_c32; assert_equal("onshore.wind.elec, offshore.wind.elec", worksheet.detailed_lever_guides_c32); end
  def test_detailed_lever_guides_d32; assert_equal("Do we use wind power? In 2011 there was around 234 GW of onshore wind capacity, in 83 countries. There was also 4 GW of offshore power installed.", worksheet.detailed_lever_guides_d32); end
  def test_detailed_lever_guides_e32; assert_equal("463 GW of installed wind power capacity by 2050.", worksheet.detailed_lever_guides_e32); end
  def test_detailed_lever_guides_h32; assert_equal("0 GW", worksheet.detailed_lever_guides_h32); end
  def test_detailed_lever_guides_i32; assert_equal("By 2050 there is 0 GW of onshore wind energy. It builds at a rate of 19.64% till 2013, 8% till 2015, 5% till 2020 with decommissioning in tandem. by 2050 the offshore wind energy is also 0 GW with a build rate of 34.06% by 2015. After this, the rate of build up and decommissioning matches each other until 2020 after which it serves its technical lifespan. ", worksheet.detailed_lever_guides_i32); end
  def test_detailed_lever_guides_j32; assert_equal("2,317 GW", worksheet.detailed_lever_guides_j32); end
  def test_detailed_lever_guides_k32; assert_equal("By 2050 there is 1862 GW of onshore wind energy and 455 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_k32); end
  def test_detailed_lever_guides_l32; assert_equal("4,710 GW", worksheet.detailed_lever_guides_l32); end
  def test_detailed_lever_guides_m32; assert_equal("by 2050 there is 3800 GW of onshore wind energy and 910 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_m32); end
  def test_detailed_lever_guides_n32; assert_equal("6,466 GW", worksheet.detailed_lever_guides_n32); end
  def test_detailed_lever_guides_o32; assert_equal("By 2050 there is 5058 GW of onshore wind energy. It builds at a rate of 21% by 2015, 16% by 2020, 8% by 2030, 6% until 2040 and 2% until 2050. There is 1408 GW of offshore wind energy which builds at a rate of 34.06% until 2020, 20% until 2030, 8% by 2040 and 4% by 2050. ", worksheet.detailed_lever_guides_o32); end
  def test_detailed_lever_guides_b33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_b33); end
  def test_detailed_lever_guides_c33; assert_equal("hydro.elec", worksheet.detailed_lever_guides_c33); end
  def test_detailed_lever_guides_d33; assert_equal("Do we use hydroelectric power? In 2011 global capacity was 970 GW.", worksheet.detailed_lever_guides_d33); end
  def test_detailed_lever_guides_e33; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.detailed_lever_guides_e33); end
  def test_detailed_lever_guides_h33; assert_equal("1,188 GW", worksheet.detailed_lever_guides_h33); end
  def test_detailed_lever_guides_i33; assert_equal("1,188 GW This is equivalent to all current capacity plus all projects already under construction or that have been commissioned.", worksheet.detailed_lever_guides_i33); end
  def test_detailed_lever_guides_j33; assert_equal("1,750 GW", worksheet.detailed_lever_guides_j33); end
  def test_detailed_lever_guides_k33; assert_equal("1,750 GW This is equivalent to steady growth of 1.5% a year.", worksheet.detailed_lever_guides_k33); end
  def test_detailed_lever_guides_l33; assert_equal("2,101 GW", worksheet.detailed_lever_guides_l33); end
  def test_detailed_lever_guides_m33; assert_equal("2,101 GW This is equivalent to steady growth of 2% a year, with continued investment in large hydro and technology upgrading.", worksheet.detailed_lever_guides_m33); end
  def test_detailed_lever_guides_n33; assert_equal("2,375 GW", worksheet.detailed_lever_guides_n33); end
  def test_detailed_lever_guides_o33; assert_equal("2,375 GW This is equivalent to a growth rate of 3% per year. Considering a limiting build rate of 3.55% to realize the entire hydro potential by 2050.", worksheet.detailed_lever_guides_o33); end
  def test_detailed_lever_guides_b34; assert_equal("Marine", worksheet.detailed_lever_guides_b34); end
  def test_detailed_lever_guides_c34; assert_equal("tidal.elec, wave.elec", worksheet.detailed_lever_guides_c34); end
  def test_detailed_lever_guides_d34; assert_equal("Do we use wave and tidal power? In 2011, global capacity was 0.5 GW of marine in total  (0.5 GW of tidal power and 0 GW of wave power).", worksheet.detailed_lever_guides_d34); end
  def test_detailed_lever_guides_e34; assert_equal("34.7 GW of installed marine power capacity by 2050.", worksheet.detailed_lever_guides_e34); end
  def test_detailed_lever_guides_h34; assert_equal("8 GW", worksheet.detailed_lever_guides_h34); end
  def test_detailed_lever_guides_i34; assert_equal("By 2050 there is 0 GW of tidal energy if not harnessed as the present installation would serve its technical lifespan whereas there will be 8 GW of wave energy.", worksheet.detailed_lever_guides_i34); end
  def test_detailed_lever_guides_j34; assert_equal("97 GW", worksheet.detailed_lever_guides_j34); end
  def test_detailed_lever_guides_k34; assert_equal("By 2050, there is 35 GW of tidal electricity and 62 GW of wave. ", worksheet.detailed_lever_guides_k34); end
  def test_detailed_lever_guides_l34; assert_equal("237 GW", worksheet.detailed_lever_guides_l34); end
  def test_detailed_lever_guides_m34; assert_equal("by 2050 there is 49 GW of tidal electricity. Build up rate enhanced considering construction time, global technological and environmental factors whereas there will be 105 GW of wave energy based on similar analysis.", worksheet.detailed_lever_guides_m34); end
  def test_detailed_lever_guides_n34; assert_equal("436 GW", worksheet.detailed_lever_guides_n34); end
  def test_detailed_lever_guides_o34; assert_equal("By 2050 there is 64 GW of tidal energy and 143 GW of wave energy. Different build up rate computed considering technical maturity and potential acceptance. ", worksheet.detailed_lever_guides_o34); end
  def test_detailed_lever_guides_b35; assert_equal("Solar", worksheet.detailed_lever_guides_b35); end
  def test_detailed_lever_guides_c35; assert_equal("concentrated.solar.elec, solarpv.elec", worksheet.detailed_lever_guides_c35); end
  def test_detailed_lever_guides_d35; assert_equal("Do we use solar power? In 2011, global capacity was 71.3 GW in total (69.7 GW of photovoltaic power and 1.6 GW of concentrated solar power). ", worksheet.detailed_lever_guides_d35); end
  def test_detailed_lever_guides_e35; assert_equal("441 GW of installed solar power capacity by 2050.", worksheet.detailed_lever_guides_e35); end
  def test_detailed_lever_guides_h35; assert_equal("0 GW", worksheet.detailed_lever_guides_h35); end
  def test_detailed_lever_guides_i35; assert_equal("By 2050 there is 0 GW of concentrated solar power. The average build up rate is 44.45% till 2015, 43.09% by 2020 after which the rate of decommissioning and technical lifespan will exceed build up rate. by 2050 there is 0 GW of photovoltaic which builds by 18.34% by 2015, 16.58% by 2020 post which rate of decommission & technical life span takes over.", worksheet.detailed_lever_guides_i35); end
  def test_detailed_lever_guides_j35; assert_equal("2,204 GW", worksheet.detailed_lever_guides_j35); end
  def test_detailed_lever_guides_k35; assert_equal("By 2050 there is 388 GW of concentrated solar power and 811 GW of photovoltaic. Build up rates computed by analysing various technologies, barriers and country specific factors.", worksheet.detailed_lever_guides_k35); end
  def test_detailed_lever_guides_l35; assert_equal("4,149 GW", worksheet.detailed_lever_guides_l35); end
  def test_detailed_lever_guides_m35; assert_equal("by 2050 there is 879 GW of concentrated solar power and 1860 GW of photovoltaic. Build up rates computed by analysing various factors.", worksheet.detailed_lever_guides_m35); end
  def test_detailed_lever_guides_n35; assert_equal("7,547 GW", worksheet.detailed_lever_guides_n35); end
  def test_detailed_lever_guides_o35; assert_equal("By 2050 there is 1067 GW of concentrated solar energy. The average build rate is 58% up to 2020 where CSP landscape will change to average 8% by 2030 and 6% by 2050. by 2050 there is 3750 GW of photovoltaic with 22.76% till 2020, 15.3% by 2030, 8.75% by 2040 and 6% till 2050. ", worksheet.detailed_lever_guides_o35); end
  def test_detailed_lever_guides_b36; assert_equal("Geothermal", worksheet.detailed_lever_guides_b36); end
  def test_detailed_lever_guides_c36; assert_equal("geothermal.elec", worksheet.detailed_lever_guides_c36); end
  def test_detailed_lever_guides_d36; assert_equal("Do we use geothermal power? In 2011, global capacity was 11 GW, centred in 24 countries. Maximum potential exists in the 'ring of fire' around the Pacific Ocean.", worksheet.detailed_lever_guides_d36); end
  def test_detailed_lever_guides_e36; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.detailed_lever_guides_e36); end
  def test_detailed_lever_guides_h36; assert_equal("0 GW", worksheet.detailed_lever_guides_h36); end
  def test_detailed_lever_guides_i36; assert_equal("By 2050 there is 0 GW of geothermal electricity. Technological lifespan and depreciating CAGR was arrived by analysis of various intertwined factors.", worksheet.detailed_lever_guides_i36); end
  def test_detailed_lever_guides_j36; assert_equal("172 GW", worksheet.detailed_lever_guides_j36); end
  def test_detailed_lever_guides_k36; assert_equal("By 2050 there is 172 GW of geothermal electricity. Different build up rate were arrived for different timespans with emphasis on ring of fire countries.", worksheet.detailed_lever_guides_k36); end
  def test_detailed_lever_guides_l36; assert_equal("289 GW", worksheet.detailed_lever_guides_l36); end
  def test_detailed_lever_guides_m36; assert_equal("by 2050 there is 289 GW of geothermal electricity. Average growth rate is arrived by considering various global factors.", worksheet.detailed_lever_guides_m36); end
  def test_detailed_lever_guides_n36; assert_equal("404 GW", worksheet.detailed_lever_guides_n36); end
  def test_detailed_lever_guides_o36; assert_equal("By 2050 there is 404 GW of geothermal electricity. The average built up rate is 9% till 2020, whereas 11.55% till 2040 and 6% up till 2050. For developing the levels different variables were mapped and interdependence of factors was analysed.", worksheet.detailed_lever_guides_o36); end
  def test_detailed_lever_guides_b37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_b37); end
  def test_detailed_lever_guides_c37; assert_equal("storage.elec", worksheet.detailed_lever_guides_c37); end
  def test_detailed_lever_guides_d37; assert_equal("How much electricity storage will we have? This is important in a grid using intermittent renewable technologies (like solar and wind) to make sure that peak demand is met. In 2011, there were 120 GW of electricity storage plants.", worksheet.detailed_lever_guides_d37); end
  def test_detailed_lever_guides_e37; assert_equal("328 GW of electricity storage capacity by 2050.", worksheet.detailed_lever_guides_e37); end
  def test_detailed_lever_guides_h37; assert_equal("152 GW", worksheet.detailed_lever_guides_h37); end
  def test_detailed_lever_guides_i37; assert_equal("By 2050, around 152 GW of peak demand is met by energy storage. The storage has an annual growth rate of 3%.", worksheet.detailed_lever_guides_i37); end
  def test_detailed_lever_guides_j37; assert_equal("403 GW", worksheet.detailed_lever_guides_j37); end
  def test_detailed_lever_guides_k37; assert_equal("By 2050 there is 600 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_k37); end
  def test_detailed_lever_guides_l37; assert_equal("800 GW", worksheet.detailed_lever_guides_l37); end
  def test_detailed_lever_guides_m37; assert_equal("By 2050 there is 800 GW of energy storage system by 2050.", worksheet.detailed_lever_guides_m37); end
  def test_detailed_lever_guides_n37; assert_equal("1,200 GW", worksheet.detailed_lever_guides_n37); end
  def test_detailed_lever_guides_o37; assert_equal("High adoption of storage technologies across the globe, with 1200 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_o37); end
  def test_detailed_lever_guides_b38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_b38); end
  def test_detailed_lever_guides_d38; assert_equal("How much food will we eat? In 2011, the global average calorie consumption was 2,170 kcal/person/day. This value represents the effective calorie intake by person and excludes losses along the supply chain (24% in terms of food energy content) and accounts for extremes, such as undernourishment and obesity. Currently, approximately 805 million people in the world do not have enough food to lead a healthy active life (FAO, 2014). In 2010, more than 1.4 billion adults were overweight (BMI >25) of which 500 million were obese (BMI >30) (WHO, 2014).", worksheet.detailed_lever_guides_d38); end
  def test_detailed_lever_guides_h38; assert_equal("High global average calorie consumption by 2050, reflecting the current European level (2,560 kcal/person/day).", worksheet.detailed_lever_guides_h38); end
  def test_detailed_lever_guides_i38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day to the current European level, i.e., 2,560 kcal/person/day, by 2050. This represents and extreme scenario, where the entire world would reach European levels of food consumption with high risks of obesity, diabetes and cardiovascular problems. More land would have to be allocated to agricultural production.", worksheet.detailed_lever_guides_i38); end
  def test_detailed_lever_guides_j38; assert_equal("Global average calorie consumption increases to 2,430 kcal/person/day by 2050 (2000-2010 annual average growth rate).", worksheet.detailed_lever_guides_j38); end
  def test_detailed_lever_guides_k38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day in 2011 to 2,430 kcal/person/day by 2050 based on the growth rate of the past decade (2000-2010). Therefore, this pathway corresponds to approximately the same changes in food consumption observed in the last 10 years, in which some developing countries (e.g., China and India) have substantially increased their calorie intake.", worksheet.detailed_lever_guides_k38); end
  def test_detailed_lever_guides_l38; assert_equal("Global average calorie consumption rises to 2,330 kcal/person/day by 2050 based on trend forecast by the UN’s Food and Agricultural Organisation (FAO).", worksheet.detailed_lever_guides_l38); end
  def test_detailed_lever_guides_m38; assert_equal("Global average calorie consumption increases  from 2,140 kcal/capita/day in 2011 to approximately 2,330 kcal/capita/day by 2050, which is similar to the UN's Food and Agricultural Organisation (FAO) forecast by Alexandratos and Bruinsma (2012) (adjusted to exclude food losses). In this trajectory, there will be still a significant increase of food consumption globally, but the current trend would be slightly reduced by population and consumption peaks in some countries.", worksheet.detailed_lever_guides_m38); end
  def test_detailed_lever_guides_n38; assert_equal("Global average calorie consumption meets the target for a healthy diet by 2050 (2,100 kcal/person/day).", worksheet.detailed_lever_guides_n38); end
  def test_detailed_lever_guides_o38; assert_equal("Global average calorie consumption reduces slightly from 2,170 kcal/person/day in 2011 to 2,100 kcal/person/day by 2050, which is the target for a healthy diet (2,200 kcal/person/day for men, and 2,000 kcal/person/day for women). However, this scenario may also see a redistribution of calorie intakes, where some developing countries could increase food consumption (e.g., by reducing poverty), whilst some developed countries could reduce their consumption (by tackling obesity issues). Overall, this is an extreme target, given that values below this global average would result in more cases of undernourishment.", worksheet.detailed_lever_guides_o38); end
  def test_detailed_lever_guides_b39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_b39); end
  def test_detailed_lever_guides_d39; assert_equal("How much meat will we eat? The current global average meat consumption is 191 kcal/person/day, but growing incomes in developing countries tend to promote an increase in meat consumption. This value represents the effective calorie intake by person and excludes losses along the supply chain (19% in terms of meat energy content). People in developing countries on average consume 32 kg of meat a year (88 g/person/day), compared to 80 kg/person/year (219 g/person/day) in industrialised countries (Worldwatch, 2011).  As meat production is, on average, associated with significantly higher GHG emissions than the production of grains, fruit and vegetables per unit of output, a shift from a high meat diet to lower levels of meat consumption can help in the reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_d39); end
  def test_detailed_lever_guides_h39; assert_equal("Very high global average meat consumption by 2050 (278 kcal/person/day), reflecting the 2011 average meat consumption in Europe.", worksheet.detailed_lever_guides_h39); end
  def test_detailed_lever_guides_i39; assert_equal("Very high consumption of meat with an increase from 191 kcal/person/day in 2011 to 278 kcal/person/day by 2050. This level assumes the total meat consumption per person in Europe in 2011 as a global target for 2050. This represents a very risky pathway, given that a significant amount of land would be necessary to meet this extreme demand for meat.", worksheet.detailed_lever_guides_i39); end
  def test_detailed_lever_guides_j39; assert_equal("Global average meat consumption stabilises at 191 kcal/person/day by 2050.", worksheet.detailed_lever_guides_j39); end
  def test_detailed_lever_guides_k39; assert_equal("The current global average meat consumption of 191 kcal/person/day stabilises and continues until 2050. In this pathway, there is no significant change in average meat calorie consumption.", worksheet.detailed_lever_guides_k39); end
  def test_detailed_lever_guides_l39; assert_equal("Low global average meat consumption by 2050 at 162 kcal/person/day, based on the WHO reference for a healthy diet (90g meat/ day).", worksheet.detailed_lever_guides_l39); end
  def test_detailed_lever_guides_m39; assert_equal("WHO recommended meat consumption of 90 g meat/day (162 kcal/person/day) for a healthy diet by 2050.", worksheet.detailed_lever_guides_m39); end
  def test_detailed_lever_guides_n39; assert_equal("Extremely low global average meat consumption (14 kcal/person/day) akin to the Indian level in 2011, including vegetarian diets and meat alternatives.", worksheet.detailed_lever_guides_n39); end
  def test_detailed_lever_guides_o39; assert_equal("Extremely low global average meat consumption of 14 kcal/person/day by 2050, which reflects India’s 2011 average meat consumption.  This lever considers vegetarian diets and meat alternatives (e.g., soy meat substitutes, yeast-based meat and potential stem cell-based technologies). It represents an extreme situation and assumes an unprecedented change in dietary preferences worldwide.", worksheet.detailed_lever_guides_o39); end
  def test_detailed_lever_guides_b40; assert_equal("Type of meat", worksheet.detailed_lever_guides_b40); end
  def test_detailed_lever_guides_d40; assert_equal("Do we eat more meat from ruminants or non-ruminants? Currently, the meat from non-ruminants (monograstric animals) constitutes the dominant share of meat consumed globally (78%), while only 22% is meat from ruminants (2011). Meat from ruminants includes beef, and mutton (sheep) and goat, with respective shares of 17% and 5% (2011). Meat from non-ruminants includes pork (53%) and poultry (23%). As the production of ruminants is, on average, associated with significantly higher GHG emissions per kg of meat than meat from non-ruminant animals, a shift from a ruminant to a predominantly non-rumanant diet can help in significantly reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_d40); end
  def test_detailed_lever_guides_h40; assert_equal("Increase in the consumption of meat from ruminant animals from 22% in 2011 to 24% in 2050, reflecting the current USA levels.  ", worksheet.detailed_lever_guides_h40); end
  def test_detailed_lever_guides_i40; assert_equal("Increase in the consumption of meat from ruminants (24% on average, with 23.7% beef, 0.7% mutton and goat, respectively) and a decrease in the consumption of meat from non-ruminants (76% on average, with 47% poultry and 29% pork) by 2050. These shares assume the current consumption of meat types in the USA as a reference.", worksheet.detailed_lever_guides_i40); end
  def test_detailed_lever_guides_j40; assert_equal("World mix of meat types stabilised by 2050, i.e., 22% meat from ruminants and 78% meat from non-ruminants. This proportion is also similar to the current share in Europe.", worksheet.detailed_lever_guides_j40); end
  def test_detailed_lever_guides_k40; assert_equal("Current world meat mix stabilised by 2050. Meat from ruminants accounts for 22% (17% beef, 5% mutton and goat, and others) and from non-ruminants for approximately 78% (23% poultry, 53% pork, and others). These proportions are also similar to the current share of meat types consumed in Europe.", worksheet.detailed_lever_guides_k40); end
  def test_detailed_lever_guides_l40; assert_equal("Decrease in the consumption of meat from ruminants from 22% in 2011 to 20% in 2050, reflecting the current UK levels.  ", worksheet.detailed_lever_guides_l40); end
  def test_detailed_lever_guides_m40; assert_equal("Decrease in the consumption of meat from ruminant animals by 2050 (20%, with 12% beef, 7% mutton and goat, and others). Meat from non-ruminant would account for 80%, with 25% poultry and 54% pork, and others) by 2050. This entails a small shift from rumiants to non-rumiants from the current (2011) global share of meat types (78% non-ruminants and 22% ruminants) consumed by 2050. These shares assume the current consumption of meat types in the United Kingdom as a reference.", worksheet.detailed_lever_guides_m40); end
  def test_detailed_lever_guides_n40; assert_equal("Extremely reduced consumption of meat from ruminants (10%) and a high consumption of meat from non-ruminant animals (90%) by 2050, reflecting the current Chinese levels. ", worksheet.detailed_lever_guides_n40); end
  def test_detailed_lever_guides_o40; assert_equal("Extremely reduced global consumption of meat from ruminants (10%, with 6% beef, 4% mutton and goat) and a high increase in consumption of meat from non-ruminants (90%, with 14% poultry and 76% pork) by 2050. This entails an extreme shift from ruminants to non-rumiants from the current (2011) global share of meat types (78% non-ruminants and 22% ruminants) consumed by 2050. These shares assume the current consumption of meat types in China as a reference.", worksheet.detailed_lever_guides_o40); end
  def test_detailed_lever_guides_b41; assert_equal("Crop yields", worksheet.detailed_lever_guides_b41); end
  def test_detailed_lever_guides_d41; assert_equal("Can we increase crop yields? Globally, crop yields are continuing to increase, although a lower rates than historically. There is a large potential, particularly in developing countries with significant productivity gaps (the difference between actual and potential yields based on agro-ecological parameters), to increase yields substantially to levels achieved in industrialised countries. From 1987-2007 global average annual crop yield growth was approximately 1.9% (FAO, 2012).", worksheet.detailed_lever_guides_d41); end
  def test_detailed_lever_guides_h41; assert_equal("Negative crop yields, potentially due to adverse climate change impacts on agriculture (yields fall 10% by 2050).", worksheet.detailed_lever_guides_h41); end
  def test_detailed_lever_guides_i41; assert_equal("A severe crop productivity decrease of -10% overall by 2050, potentially due to negative impacts of climate change on agriculture or scarcity of key resources, e.g., water and fertilisers.", worksheet.detailed_lever_guides_i41); end
  def test_detailed_lever_guides_j41; assert_equal("Moderate crop yield growth (40% increase from 2011 by 2050).", worksheet.detailed_lever_guides_j41); end
  def test_detailed_lever_guides_k41; assert_equal("Moderate crop yield growth of approximately 40% by 2050, as suggested by the UN's Food and Agriculture Organisation (FAO) as a likely trend (assuming grains as a reference).", worksheet.detailed_lever_guides_k41); end
  def test_detailed_lever_guides_l41; assert_equal("High crop yield growth (60% increase from 2011 by 2050).", worksheet.detailed_lever_guides_l41); end
  def test_detailed_lever_guides_m41; assert_equal("Global yields increase by approximately 60% by 2050. This increase represents a linear extrapolation of past yield growths, taking grains as a reference. This level assumes a significant contribution from improved crop varieties, more irrigation, higher use of fertilisers, improved farm management, technology transfer and capacity development programmes to reduce the yield gap and low levels of adverse climate change impacts on agricultural productivity.", worksheet.detailed_lever_guides_m41); end
  def test_detailed_lever_guides_n41; assert_equal("High crop yield growth (100% increase from 2011 by 2050).", worksheet.detailed_lever_guides_n41); end
  def test_detailed_lever_guides_o41; assert_equal("Extreme yield growth of 100% by 2050. This ambitious level of effort assumes a substantial increase globally in the use of mechanisation, irrigation, fertilisers, biotechnology, a high increase in photosynthetic efficiencies, technology transfer, and potentially positive climate change impacts on crop productivity.", worksheet.detailed_lever_guides_o41); end
  def test_detailed_lever_guides_b42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_b42); end
  def test_detailed_lever_guides_d42; assert_equal("Can we use smarter land-use techniques to increase productivity? The efficiency of land use can be increased by using land for multiple purposes (e.g., multi-cropping, co-cropping, and integrated agro-livestock-forestry schemes). These techniques can decrease the land area needed per unit of output.  Conversely, an overexploitation of land resources due to inappropriate integrations and mismanagement, can lead to land degradation. Generally, land use integration is associated with benefits to the farmers and the environment.", worksheet.detailed_lever_guides_d42); end
  def test_detailed_lever_guides_h42; assert_equal("Mismanaged land use. It assumes that 10% more agricultural land would be necessary to achieve the selected food/livestock/bioenergy production.", worksheet.detailed_lever_guides_h42); end
  def test_detailed_lever_guides_i42; assert_equal("This level assumes that 10% more agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It reflects mismanaged land use, which can cause soil degradation, soil loss or desertification, e.g. through erosion, water scarcity or salinisation.", worksheet.detailed_lever_guides_i42); end
  def test_detailed_lever_guides_j42; assert_equal("Current world pattern of agricultural system stabilised until 2050 (no change from 2011).", worksheet.detailed_lever_guides_j42); end
  def test_detailed_lever_guides_k42; assert_equal("No land use efficiency improvements. This level assumes that the current global pattern of agricultural systems and practices remains stable until 2050. No further improvements or damages from land multi-use would be expected by 2050.", worksheet.detailed_lever_guides_k42); end
  def test_detailed_lever_guides_l42; assert_equal("10% less agricultural land is necessary to achieve the selected food/livestock/bioenergy production by 2050.", worksheet.detailed_lever_guides_l42); end
  def test_detailed_lever_guides_m42; assert_equal("10% improvement in efficiency, i.e., 10% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails an increase in agro-forestry-pasture synergies and best farming practices, e.g., crop rotations, dual cropping, co-cropping and no tillage technologies. ", worksheet.detailed_lever_guides_m42); end
  def test_detailed_lever_guides_n42; assert_equal("30% less agricultural land would be necessary to achieve the selected food/livestock/bioenergy productions by 2050.", worksheet.detailed_lever_guides_n42); end
  def test_detailed_lever_guides_o42; assert_equal("30% improvement in efficiency, i.e., 30% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails a substantial increase in agro-forestry-pasture synergies and best farming practices and high uptake of climate-smart agriculture and integrated agricultural land use management (e.g., dual/triple cropping).", worksheet.detailed_lever_guides_o42); end
  def test_detailed_lever_guides_b43; assert_equal("Livestock intensification", worksheet.detailed_lever_guides_b43); end
  def test_detailed_lever_guides_d43; assert_equal("The production of meat to meet future demands poses a major challenge. The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the intensification of animals traditionally raised on pasture land in confined systems, i.e., cattle, sheep and goats and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems already and therefore these are not considered in this lever.  Currently, globally, only 2% cattle and 4% of sheep and goats are raised in confined systems, although the percentage is much higher in some regions, for example, North America and EU. On average, modern feedlots are generally associated with higher meat yields, appropriate no pasture land and have fewer emissions per kg of meat produced than free range animals (although significant amounts of crop land are required to produce the necessary animal feed).", worksheet.detailed_lever_guides_d43); end
  def test_detailed_lever_guides_h43; assert_equal("No increase in feedlot systems by 2050 and a 5% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_h43); end
  def test_detailed_lever_guides_i43; assert_equal("No increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems remains at current levels (2% of cattle and 4% of sheep and goats, respectively). The feed conversion ratio (kg of meat produced per kg of animal feed) increases slightly by 5%.", worksheet.detailed_lever_guides_i43); end
  def test_detailed_lever_guides_j43; assert_equal("Low increase in feedlot systems in 2050 and a 10% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_j43); end
  def test_detailed_lever_guides_k43; assert_equal("Low increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems increases from 2% (2011) to 5% for cattle and from 4% to 6% for sheep and goats, respectively, by 2050. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 10%.", worksheet.detailed_lever_guides_k43); end
  def test_detailed_lever_guides_l43; assert_equal("Moderate increase in feedlot systems and a 15% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_l43); end
  def test_detailed_lever_guides_m43; assert_equal("Moderate increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems increases from 2% (2011) to 15% for cattle and from 4% to 8% for sheep and goats, respectively, by 2050. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 15%. This entails a higher use of conventional animal genetic improvements and technology transfer and capacity development programmes.", worksheet.detailed_lever_guides_m43); end
  def test_detailed_lever_guides_n43; assert_equal("High increase in feedlot systems and a 20% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_n43); end
  def test_detailed_lever_guides_o43; assert_equal("High increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems increases from 2% (2011) to 30% for cattle and from 4% to 15% for sheep and goats, respectively, by 2050. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 20%.This entails a high use of conventional animal genetic improvements and improved pasture rotation management and capacity development programmes. Furthermore, it involves the extensive use of biotechnology, and strong technology transfer from developed to developing countries to leap-frog the learning curves to achieve higher levels of productivity.", worksheet.detailed_lever_guides_o43); end
  def test_detailed_lever_guides_b44; assert_equal("Extensive livestock yields", worksheet.detailed_lever_guides_b44); end
  def test_detailed_lever_guides_d44; assert_equal("The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the increase of pasture intensity, i.e. the number of animals / ha of pasture (through improved animal husbandry schemes) and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems and therefore these are not considered in this lever. Increasing the number of animals per ha of land results in a higher production of meat per unit of pasture land and reduced emissions per kg of meat produced.", worksheet.detailed_lever_guides_d44); end
  def test_detailed_lever_guides_h44; assert_equal("Low increase in pasture animal density (10% by 2050) and a 5% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_h44); end
  def test_detailed_lever_guides_i44; assert_equal("Low increase in pasture animal density (10% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases slightly by 5%.", worksheet.detailed_lever_guides_i44); end
  def test_detailed_lever_guides_j44; assert_equal("Moderate in pasture animal density (30% by 2050) and a 10% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_j44); end
  def test_detailed_lever_guides_k44; assert_equal("Moderate increase in pasture animal density (30% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 10%.", worksheet.detailed_lever_guides_k44); end
  def test_detailed_lever_guides_l44; assert_equal("High increase in pasture animal density (50% by 2050) and a 15% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_l44); end
  def test_detailed_lever_guides_m44; assert_equal("High increase in pasture animal density (50% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 15%. This entails a higher use of conventional animal genetic improvements and technology transfer and capacity development programmes.", worksheet.detailed_lever_guides_m44); end
  def test_detailed_lever_guides_n44; assert_equal("Extreme increase in pasture animal density (80% by 2050) and a 20% increase in feed conversion ratio.", worksheet.detailed_lever_guides_n44); end
  def test_detailed_lever_guides_o44; assert_equal("Extreme increase in pasture animal density (80% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 20%. This entails a high use of conventional animal genetic improvements and improved pasture rotation management and capacity development programmes. Furthermore, it involves the extensive use of biotechnology, and strong technology transfer from developed to developing countries to leap-frog the learning curves to achieve higher levels of productivity.", worksheet.detailed_lever_guides_o44); end
  def test_detailed_lever_guides_b45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_b45); end
  def test_detailed_lever_guides_d45; assert_equal("Could we get more usable energy out of each hectare of biocrops, for example by using more efficient crop types and introducing better conversion technology? Bioenergy (solid, gaseous and liquid) represents approximately 60 EJ of the world energy mix (IPCC, 2011). Bioenergy yields are affected by (a) yields of bioenergy feedstocks (b) energy content of these crops, and (c) advances in conversion technologies. Currently, liquid bioenergy, i.e., biofuels, are primarily produced from crop-based feedstocks (e.g., wheat, maize, sugarcane, oilseed rape, etc.), but increasingly advanced biofuel technologies (based on lignocellulosic feedstocks, such as high-yielding energy crops and agricultural and forestry residues) and biorefineries (co-production of energy (fuel, heat, electricity), feed and chemicals) are deployed at commercial scales. Main producers of biofuels include the USA, Brazil, EU and China. Solid biomass is used mainly for cooking and heating, but could play a larger role in the future by displacing coal in thermal power plants and industrial uses. Biogas, produced by anaerobic decomposition of agricultural residues, manure and the organic fraction of municipal solid waste is used for cooking, heating,  transportation and industrial application (e.g., drying).", worksheet.detailed_lever_guides_d45); end
  def test_detailed_lever_guides_h45; assert_equal("Low yield increase of energy production per unit of land area, without significant changes in the energy crop mix and/or conversion technologies. Total increase: 20% by 2050.", worksheet.detailed_lever_guides_h45); end
  def test_detailed_lever_guides_i45; assert_equal("Low yield increase of energy production per unit of area of 20% by 2050 (approximately 0.5% CAGR). This is below the current crop yield growth trend, and relies primarily on the use of crops with low energy balance (e.g., corn-based ethanol, oilseed rape-based biodiesel) for biofuels and on low efficiency solid biomass for power, heating and cooking.", worksheet.detailed_lever_guides_i45); end
  def test_detailed_lever_guides_j45; assert_equal("Moderate increase in energy production per unit of land area, and changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient conversion technologies. Total increase: 50% by 2050.", worksheet.detailed_lever_guides_j45); end
  def test_detailed_lever_guides_k45; assert_equal("Moderate increase in energy production per unit of land area of 50% by 2050 (approximately 1.0% CAGR) with associated changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient technologies, such as lignocellulosic fuels, anaerobic digestion and high-efficiency biomass boilers. ", worksheet.detailed_lever_guides_k45); end
  def test_detailed_lever_guides_l45; assert_equal("High increase in energy production per unit of land area, with substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies. Total increase: 120% by 2050.", worksheet.detailed_lever_guides_l45); end
  def test_detailed_lever_guides_m45; assert_equal("High increase in energy production per unit of land area of 120% by 2050 (approximately 2.0% CAGR) with associated substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies (including lignocellulosic bioethanol and Fischer-Tropsch biodiesel).", worksheet.detailed_lever_guides_m45); end
  def test_detailed_lever_guides_n45; assert_equal("Extreme increase in energy production per unit of land area relying on highly energy-efficient feedstocks and very efficient conversion technologies. Total increase: 200% by 2050.", worksheet.detailed_lever_guides_n45); end
  def test_detailed_lever_guides_o45; assert_equal("Extreme increase in energy production per unit of land area of 200% by 2050 (approximately 3.0% CAGR) with a reliance on  highly energy-efficient feedstocks and very efficient conversion technologies , including advanced fuel technologies and boilers, biorefineries and biotechnology and state-of-the-art farm management. This level assumes that highly energy-efficient dedicated energy crops (e.g., sugarcane, oil palm, switchgrass, napier grass and miscanthus) would dominate the market.", worksheet.detailed_lever_guides_o45); end
  def test_detailed_lever_guides_b46; assert_equal("Solid or liquid", worksheet.detailed_lever_guides_b46); end
  def test_detailed_lever_guides_d46; assert_equal("Should we use solid or liquid biofuels? Currently 60% of modern biofuels are solid (e.g. wood chips) and 40% are liquid (bioethanol and biodiesel).", worksheet.detailed_lever_guides_d46); end
  def test_detailed_lever_guides_e46; assert_equal("78% liquid", worksheet.detailed_lever_guides_e46); end
  def test_detailed_lever_guides_h46; assert_equal("Reduced use of liquid biofuels. 20% liquid", worksheet.detailed_lever_guides_h46); end
  def test_detailed_lever_guides_i46; assert_equal("Liquid biofuels are reduced from 40% in 2011 to 20% by 2050, and therefore 80% of the bioenergy produced would be consumed in solid form, such as wood pellets and chips. This level assumes that technology changes, particularly in transport (i.e., electrification), would result a reduction of liquid biofuels.", worksheet.detailed_lever_guides_i46); end
  def test_detailed_lever_guides_j46; assert_equal("40% liquid", worksheet.detailed_lever_guides_j46); end
  def test_detailed_lever_guides_k46; assert_equal("The current share of solid and liquid bioenergy (60% solid biomass and 40% liquid biofuels in 2011) remains the constant until 2050. This level assumes no substantial changes in the current pattern of bioenergy production and consumption.", worksheet.detailed_lever_guides_k46); end
  def test_detailed_lever_guides_l46; assert_equal("60% liquid", worksheet.detailed_lever_guides_l46); end
  def test_detailed_lever_guides_m46; assert_equal("Increase in liquid biofuels from 40% to 60% by 2050, while solid biomass would decrease from 60% in 2011 to 40% in 2050. Biofuels would increase their relevance as a renewable energy source, mainly for the transport sector as new technologies enhance the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquids (Fischer-Tropschs).  ", worksheet.detailed_lever_guides_m46); end
  def test_detailed_lever_guides_n46; assert_equal("80% liquid", worksheet.detailed_lever_guides_n46); end
  def test_detailed_lever_guides_o46; assert_equal("Extreme shift towards liquid biofuels from currently 40% to 80% in 2050, while solid biomass decreases its share from 60% to 20%, respectively. Liquid biofuel would be mainly used in the transport sector, including shipping and aviation. To achieve this level of liquid biofuel penetration, it is expected that new technologies would substantially increase the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquid (Fischer-Tropsch). In contrast, the use of traditional biomass would substantially decrease worldwide.", worksheet.detailed_lever_guides_o46); end
  def test_detailed_lever_guides_b47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_b47); end
  def test_detailed_lever_guides_d47; assert_equal("After accounting for food production, do we use surplus land for growing biocrops, or for the regeneration of forests and grassland? In 2011, around 6 million ha of land were deforested, not only due to livestock and agricultural expansions, but also because of timber operations and land speculations. This lever allows you to decide how any land you have freed up in your pathway is used. The size of the potential surplus land can be increased through climate-smart dietary choices (calories and meat consumed), increased yields (crops, livestock and bioenergy), and enhanced land-use efficiencies. Depending on the levels selected, more or less land will be allocated to forests and natural regeneration and/or the production of dedicated energy crops. Land occupied by settlements (which can increase according to population growth) or unsuitable for production (e.g., deserts, ice sheets, degraded lands) is pre-allocated and does not factor in the allocation of surplus land.", worksheet.detailed_lever_guides_d47); end
  def test_detailed_lever_guides_h47; assert_equal("20% of surplus land is used for biocrops, with 80% for forests (including natural regeneration and planted forests)", worksheet.detailed_lever_guides_h47); end
  def test_detailed_lever_guides_i47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 80% forests (including natural regeneration and planted forests), and 20% restoration of natural grasslands. 0% of the surplus land will be used for the production of dedicated bioenergy crops. ", worksheet.detailed_lever_guides_i47); end
  def test_detailed_lever_guides_j47; assert_equal("40% of surplus land is used for biocrops, with 60% for forests", worksheet.detailed_lever_guides_j47); end
  def test_detailed_lever_guides_k47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 60% forest and restoration of natural grasslands.  40% of the surplus land will be used for the limited expansion of dedicated bioenergy crops. ", worksheet.detailed_lever_guides_k47); end
  def test_detailed_lever_guides_l47; assert_equal("60% of surplus land is used for biocrops.", worksheet.detailed_lever_guides_l47); end
  def test_detailed_lever_guides_m47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 40% forest and restoration of natural grasslands and 60% to a limited expansion of energy crops. ", worksheet.detailed_lever_guides_m47); end
  def test_detailed_lever_guides_n47; assert_equal("80% of surplus land is used for biocrops.", worksheet.detailed_lever_guides_n47); end
  def test_detailed_lever_guides_o47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated 80% to a substantial expansion of dedicated energy crops and the remaining 20% to forest and restoration of natural grasslands. This choice results in a maximum expansion of bioenergy in the Global Calculator based on a growth rate for meeting approximately 350 EJ of bioenergy production by 2050 (when all levers are set in level 4), based on the technical capacity of the market to cope with such an extreme level of investments in the timeframe. This level of bioenergy production is considered to be an extreme global bioenergy potential by IPCC as well.", worksheet.detailed_lever_guides_o47); end
  def test_detailed_lever_guides_b48; assert_equal("Biochar", worksheet.detailed_lever_guides_b48); end
  def test_detailed_lever_guides_d48; assert_equal("Do we use biochar technology to remove CO<sub>2</sub> from the atmosphere? In 2011, biochar was not used.", worksheet.detailed_lever_guides_d48); end
  def test_detailed_lever_guides_e48; assert_equal("Biochar technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e48); end
  def test_detailed_lever_guides_h48; assert_equal("Biochar technology is still not used in 2050 ", worksheet.detailed_lever_guides_h48); end
  def test_detailed_lever_guides_j48; assert_equal("Biochar technology removes 0.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j48); end
  def test_detailed_lever_guides_l48; assert_equal("Biochar technology removes 0.8 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_l48); end
  def test_detailed_lever_guides_n48; assert_equal("Biochar technology removes 3.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_n48); end
  def test_detailed_lever_guides_b49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b49); end
  def test_detailed_lever_guides_d49; assert_equal("Do we use direct air capture  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, direct air capture was not used.", worksheet.detailed_lever_guides_d49); end
  def test_detailed_lever_guides_e49; assert_equal("Direct air capture technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e49); end
  def test_detailed_lever_guides_h49; assert_equal("Direct air capture technology is still not used in 2050 ", worksheet.detailed_lever_guides_h49); end
  def test_detailed_lever_guides_j49; assert_equal("Direct air capture technology removes 1.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j49); end
  def test_detailed_lever_guides_l49; assert_equal("Direct air capture technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_l49); end
  def test_detailed_lever_guides_n49; assert_equal("Direct air capture technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_n49); end
  def test_detailed_lever_guides_b50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b50); end
  def test_detailed_lever_guides_d50; assert_equal("Do we use ocean fertilisation  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, ocean fertilisation was not used.", worksheet.detailed_lever_guides_d50); end
  def test_detailed_lever_guides_e50; assert_equal("Ocean fertilisation technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e50); end
  def test_detailed_lever_guides_h50; assert_equal("Ocean fertilisation technology is still not used in 2050 ", worksheet.detailed_lever_guides_h50); end
  def test_detailed_lever_guides_j50; assert_equal("Ocean fertilisation technology removes 0.1 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j50); end
  def test_detailed_lever_guides_l50; assert_equal("Ocean fertilisation technology removes 0.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_l50); end
  def test_detailed_lever_guides_n50; assert_equal("Ocean fertilisation technology removes 1.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_n50); end
  def test_detailed_lever_guides_b51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b51); end
  def test_detailed_lever_guides_d51; assert_equal("Do we use enhanced weathering (oceanic)  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, it was not used.", worksheet.detailed_lever_guides_d51); end
  def test_detailed_lever_guides_e51; assert_equal("Enhanced weathering (oceanic) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e51); end
  def test_detailed_lever_guides_h51; assert_equal("Enhanced weather (oceanic) technology is still not used in 2050", worksheet.detailed_lever_guides_h51); end
  def test_detailed_lever_guides_j51; assert_equal("Enhanced weather (oceanic) technology removes 1.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j51); end
  def test_detailed_lever_guides_l51; assert_equal("Enhanced weather (oceanic) technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_l51); end
  def test_detailed_lever_guides_n51; assert_equal("Enhanced weather (oceanic) technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_n51); end
  def test_detailed_lever_guides_b52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b52); end
  def test_detailed_lever_guides_d52; assert_equal("Do we use enhanced weathering (terrestrial)  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, it was not used.", worksheet.detailed_lever_guides_d52); end
  def test_detailed_lever_guides_e52; assert_equal("Enhanced weathering (terrestial) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e52); end
  def test_detailed_lever_guides_h52; assert_equal("Enhanced weather (terrestrial) technology is still not used in 2050 ", worksheet.detailed_lever_guides_h52); end
  def test_detailed_lever_guides_j52; assert_equal("Enhanced weather (terrestial) technology removes 0.4 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j52); end
  def test_detailed_lever_guides_l52; assert_equal("Enhanced weather (terrestial) technology removes 0.9 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_l52); end
  def test_detailed_lever_guides_n52; assert_equal("Enhanced weather (terrestial) technology removes 3.7 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_n52); end
  def test_detailed_lever_guides_b53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_b53); end
  def test_detailed_lever_guides_d53; assert_equal("How much is wasted on farms, and how much food is wasted? For example, in 2011, 24% of crop energy content was wasted after leaving the farm (e.g. through damage in transit, improper storage, or consumers throwing it away).", worksheet.detailed_lever_guides_d53); end
  def test_detailed_lever_guides_e53; assert_equal("21% of crop energy is wasted after leaving the farm by 2050", worksheet.detailed_lever_guides_e53); end
  def test_detailed_lever_guides_h53; assert_equal("24% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_h53); end
  def test_detailed_lever_guides_i53; assert_equal("No increase in the collection of on-farm residues and no increase in the production of post-farm wastes and residues, but with a low increase in post-farm wastes and residues collection for energy and feed, i.e.,  plant-based food and meat from 1% to 5%; eggs from 0.2% to 0.5%; and milk from 0.1% to 0.5%, respectively, from 2011 to 2050.", worksheet.detailed_lever_guides_i53); end
  def test_detailed_lever_guides_j53; assert_equal("20% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_j53); end
  def test_detailed_lever_guides_k53; assert_equal("Moderate increase in the collection of on-farm residues (from 10% in 2011 to 20% in 2050), accompanied by a moderate reduction in the production of post-farm residues and wastes (plant-based food 24% to 20%; meat 19% to 15%; eggs 10% to 8%; milk 18% to 15%, respectively, from 2011 to 2050) and a moderate increase in their collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% to 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_k53); end
  def test_detailed_lever_guides_l53; assert_equal("16% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_l53); end
  def test_detailed_lever_guides_m53; assert_equal("High increase in the collection of on-farm residues (from 10% in 2011 to 30% in 2050), accompanied by a significant reduction in the production of post-farm residues and wastes (plant-based food 24% to 16%; meat 19% to 10%; eggs 10% to 6%; milk 18% to 10%, respectively, from 2011 to 2050), as well as a significant increase in collection for energy and feed (plant-based food and meat from 1% to 20%; eggs from 0.2% to 5%; and milk from 0.1% to 5%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_m53); end
  def test_detailed_lever_guides_n53; assert_equal("10% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_n53); end
  def test_detailed_lever_guides_o53; assert_equal("Extreme increase in the collection of on-farm residues (from 10% in 2011 to 50% in 2050) , accompanied by a reduction in the production of post-farm residues and wastes (plant-based food 24% to 10%; meat 19% to 5%; eggs 10% to 5%; milk 18% to 5%, respectively, from 2011 to 2050), as well as a moderate increase in collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_o53); end
  def test_detailed_lever_guides_b54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_b54); end
  def test_detailed_lever_guides_h54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_h54); end
  def test_detailed_lever_guides_i54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_i54); end
  def test_detailed_lever_guides_j54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_j54); end
  def test_detailed_lever_guides_k54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_k54); end
  def test_detailed_lever_guides_l54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_l54); end
  def test_detailed_lever_guides_m54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_m54); end
  def test_detailed_lever_guides_n54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_n54); end
  def test_detailed_lever_guides_o54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_o54); end
  def test_detailed_lever_guides_b55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_b55); end
  def test_detailed_lever_guides_c55; assert_equal("atm.fraction", worksheet.detailed_lever_guides_c55); end
  def test_detailed_lever_guides_d55; assert_equal("What proportion of emitted CO<sub>2</sub> remains in the atmosphere? In 2011, this was assumed to be 44% (plus or minus 6%) , and it is expected to rise if emissions continue to increase.", worksheet.detailed_lever_guides_d55); end
  def test_detailed_lever_guides_h55; assert_equal("Decreases to 30% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_h55); end
  def test_detailed_lever_guides_i55; assert_equal("Land and ocean sinks increase relative to the present day; by 2100, only 30% of emitted CO2 remains in atmosphere. Such a low atmospheric fraction is only expected for trajectories with very low rates of CO2 emissions.", worksheet.detailed_lever_guides_i55); end
  def test_detailed_lever_guides_j55; assert_equal("Remains at 44% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_j55); end
  def test_detailed_lever_guides_k55; assert_equal(" Land and ocean sinks remain similar to today; 44% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_k55); end
  def test_detailed_lever_guides_l55; assert_equal("Increases over time to 60% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_l55); end
  def test_detailed_lever_guides_m55; assert_equal("Land and ocean sinks decrease slightly; by 2100, 60% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_m55); end
  def test_detailed_lever_guides_n55; assert_equal("Increases over time to 74% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_n55); end
  def test_detailed_lever_guides_o55; assert_equal("Land and ocean sinks decrease significantly: by 2100, 74% of emitted CO2 remains in atmosphere. Such a high atmospheric fraction is only expected for trajectories with very high rates of CO2 emissions.", worksheet.detailed_lever_guides_o55); end
  def test_detailed_lever_guides_b56; assert_equal("Confidence in climate models", worksheet.detailed_lever_guides_b56); end
  def test_detailed_lever_guides_c56; assert_equal("model.unc", worksheet.detailed_lever_guides_c56); end
  def test_detailed_lever_guides_d56; assert_equal("How confident are you about the ability of computer models to simulate the climate?  Do you want to use the raw data from climate models, or do you want to show an uncertainty range to reflect phenomena that are not included in the model? If you do not have confidence in climate models, please visit the basic physics page below to see some simple calculations based on your pathway.", worksheet.detailed_lever_guides_d56); end
  def test_detailed_lever_guides_h56; assert_equal("Over-confident in model ability: show only the raw output from climate models.", worksheet.detailed_lever_guides_h56); end
  def test_detailed_lever_guides_i56; assert_equal("Display only the range of model-generated outputs with no additional range to account for unmodelled phenomena. This level is provided for comparison purposes only.", worksheet.detailed_lever_guides_i56); end
  def test_detailed_lever_guides_j56; assert_equal("IPCC approach: generate an uncertainty range to take into account phenomena that were not included in the model. ", worksheet.detailed_lever_guides_j56); end
  def test_detailed_lever_guides_k56; assert_equal("Generate an uncertainty range based on model output, using a method similar to the most recent IPCC report, to account for unmodelled phenomena. This method takes the \"very likely\" range generated by computer models and downgrades that to a \"likely\" range, so that the effect in the Calculator is to widen the range of projected temperatures. See documentation for further details.", worksheet.detailed_lever_guides_k56); end
  def test_detailed_lever_guides_l56; assert_equal("n/a", worksheet.detailed_lever_guides_l56); end
  def test_detailed_lever_guides_m56; assert_equal("n/a", worksheet.detailed_lever_guides_m56); end
  def test_detailed_lever_guides_n56; assert_equal("n/a", worksheet.detailed_lever_guides_n56); end
  def test_detailed_lever_guides_o56; assert_equal("n/a", worksheet.detailed_lever_guides_o56); end
  def test_detailed_lever_guides_b57; assert_equal("Region factor", worksheet.detailed_lever_guides_b57); end
  def test_detailed_lever_guides_h57; assert_equal("US costs", worksheet.detailed_lever_guides_h57); end
  def test_detailed_lever_guides_b58; assert_equal("Coal", worksheet.detailed_lever_guides_b58); end
  def test_detailed_lever_guides_b59; assert_equal("Oil", worksheet.detailed_lever_guides_b59); end
  def test_detailed_lever_guides_b60; assert_equal("Gas", worksheet.detailed_lever_guides_b60); end
  def test_detailed_lever_guides_b61; assert_equal("Solid bioenergy", worksheet.detailed_lever_guides_b61); end
  def test_detailed_lever_guides_b62; assert_equal("Liquid bioenergy", worksheet.detailed_lever_guides_b62); end
  def test_detailed_lever_guides_b63; assert_equal("Gaseous bioenergy", worksheet.detailed_lever_guides_b63); end
  def test_detailed_lever_guides_b64; assert_equal("Hydrogen", worksheet.detailed_lever_guides_b64); end
  def test_detailed_lever_guides_q5; assert_equal("Lever", worksheet.detailed_lever_guides_q5); end
  def test_detailed_lever_guides_r5; assert_equal("Question for key number", worksheet.detailed_lever_guides_r5); end
  def test_detailed_lever_guides_s5; assert_equal("Metric - key unit", worksheet.detailed_lever_guides_s5); end
  def test_detailed_lever_guides_t5; assert_equal("Metric - 2011", worksheet.detailed_lever_guides_t5); end
  def test_detailed_lever_guides_u5; assert_equal("Metric - L1", worksheet.detailed_lever_guides_u5); end
  def test_detailed_lever_guides_v5; assert_equal("Metric - L2", worksheet.detailed_lever_guides_v5); end
  def test_detailed_lever_guides_w5; assert_equal("Metric - L3", worksheet.detailed_lever_guides_w5); end
  def test_detailed_lever_guides_x5; assert_equal("Metric - L4", worksheet.detailed_lever_guides_x5); end
  def test_detailed_lever_guides_q6; assert_equal("Global population", worksheet.detailed_lever_guides_q6); end
  def test_detailed_lever_guides_r6; assert_equal("How many people will there be?", worksheet.detailed_lever_guides_r6); end
  def test_detailed_lever_guides_s6; assert_equal("Number of people globally", worksheet.detailed_lever_guides_s6); end
  def test_detailed_lever_guides_t6; assert_equal("6,970,000,000", worksheet.detailed_lever_guides_t6); end
  def test_detailed_lever_guides_u6; assert_equal("10,900,000,000", worksheet.detailed_lever_guides_u6); end
  def test_detailed_lever_guides_v6; assert_equal("9,600,000,000", worksheet.detailed_lever_guides_v6); end
  def test_detailed_lever_guides_w6; assert_equal("8,300,000,000", worksheet.detailed_lever_guides_w6); end
  def test_detailed_lever_guides_x6; assert_equal("(no level 4)", worksheet.detailed_lever_guides_x6); end
  def test_detailed_lever_guides_q7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_q7); end
  def test_detailed_lever_guides_r7; assert_equal("How many people will live in urban areas?", worksheet.detailed_lever_guides_r7); end
  def test_detailed_lever_guides_s7; assert_equal("% of population living in urban areas", worksheet.detailed_lever_guides_s7); end
  def test_detailed_lever_guides_t7; assert_in_epsilon(52.0, worksheet.detailed_lever_guides_t7, 0.002); end
  def test_detailed_lever_guides_u7; assert_in_epsilon(75.0, worksheet.detailed_lever_guides_u7, 0.002); end
  def test_detailed_lever_guides_v7; assert_in_epsilon(66.0, worksheet.detailed_lever_guides_v7, 0.002); end
  def test_detailed_lever_guides_w7; assert_in_epsilon(58.0, worksheet.detailed_lever_guides_w7, 0.002); end
  def test_detailed_lever_guides_x7; assert_equal("(no level 4)", worksheet.detailed_lever_guides_x7); end
  def test_detailed_lever_guides_q8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_q8); end
  def test_detailed_lever_guides_r8; assert_equal("How far will the average urban person travel?", worksheet.detailed_lever_guides_r8); end
  def test_detailed_lever_guides_s8; assert_equal("average domestic urban distance travelled in km/person/year", worksheet.detailed_lever_guides_s8); end
  def test_detailed_lever_guides_t8; assert_equal("9,200", worksheet.detailed_lever_guides_t8); end
  def test_detailed_lever_guides_u8; assert_equal("13,200", worksheet.detailed_lever_guides_u8); end
  def test_detailed_lever_guides_v8; assert_equal("12,400", worksheet.detailed_lever_guides_v8); end
  def test_detailed_lever_guides_w8; assert_equal("11,700", worksheet.detailed_lever_guides_w8); end
  def test_detailed_lever_guides_x8; assert_equal("11,200", worksheet.detailed_lever_guides_x8); end
  def test_detailed_lever_guides_q9; assert_equal("Freight distance", worksheet.detailed_lever_guides_q9); end
  def test_detailed_lever_guides_r9; assert_equal("How far will our stuff travel?", worksheet.detailed_lever_guides_r9); end
  def test_detailed_lever_guides_s9; assert_equal("trillion tonne-km per year (2011), then % increase", worksheet.detailed_lever_guides_s9); end
  def test_detailed_lever_guides_t9; assert_equal("85", worksheet.detailed_lever_guides_t9); end
  def test_detailed_lever_guides_u9; assert_equal("222%", worksheet.detailed_lever_guides_u9); end
  def test_detailed_lever_guides_v9; assert_equal("191%", worksheet.detailed_lever_guides_v9); end
  def test_detailed_lever_guides_w9; assert_equal("165%", worksheet.detailed_lever_guides_w9); end
  def test_detailed_lever_guides_x9; assert_equal("139%", worksheet.detailed_lever_guides_x9); end
  def test_detailed_lever_guides_q10; assert_equal("Mode", worksheet.detailed_lever_guides_q10); end
  def test_detailed_lever_guides_r10; assert_equal("What proportion of km travelled were by car?", worksheet.detailed_lever_guides_r10); end
  def test_detailed_lever_guides_s10; assert_equal("% of km travelled by car", worksheet.detailed_lever_guides_s10); end
  def test_detailed_lever_guides_t10; assert_in_delta(0.4, worksheet.detailed_lever_guides_t10, 0.002); end
  def test_detailed_lever_guides_u10; assert_in_delta(0.65, worksheet.detailed_lever_guides_u10, 0.002); end
  def test_detailed_lever_guides_v10; assert_in_delta(0.5, worksheet.detailed_lever_guides_v10, 0.002); end
  def test_detailed_lever_guides_w10; assert_in_delta(0.4, worksheet.detailed_lever_guides_w10, 0.002); end
  def test_detailed_lever_guides_x10; assert_in_delta(0.3, worksheet.detailed_lever_guides_x10, 0.002); end
  def test_detailed_lever_guides_q11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_q11); end
  def test_detailed_lever_guides_r11; assert_equal("Can each vehicle carry more people or heavier loads?", worksheet.detailed_lever_guides_r11); end
  def test_detailed_lever_guides_s11; assert_equal("Occupancy (number of people) per average urban car (2011), then % increase", worksheet.detailed_lever_guides_s11); end
  def test_detailed_lever_guides_t11; assert_equal("1.6", worksheet.detailed_lever_guides_t11); end
  def test_detailed_lever_guides_u11; assert_equal("-10%", worksheet.detailed_lever_guides_u11); end
  def test_detailed_lever_guides_v11; assert_equal("0%", worksheet.detailed_lever_guides_v11); end
  def test_detailed_lever_guides_w11; assert_equal("10%", worksheet.detailed_lever_guides_w11); end
  def test_detailed_lever_guides_x11; assert_equal("20%", worksheet.detailed_lever_guides_x11); end
  def test_detailed_lever_guides_q12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_q12); end
  def test_detailed_lever_guides_r12; assert_equal("TO ADD", worksheet.detailed_lever_guides_r12); end
  def test_detailed_lever_guides_s12; assert_equal("TO ADD", worksheet.detailed_lever_guides_s12); end
  def test_detailed_lever_guides_t12; assert_equal("TO ADD", worksheet.detailed_lever_guides_t12); end
  def test_detailed_lever_guides_u12; assert_equal("TO ADD", worksheet.detailed_lever_guides_u12); end
  def test_detailed_lever_guides_v12; assert_equal("TO ADD", worksheet.detailed_lever_guides_v12); end
  def test_detailed_lever_guides_w12; assert_equal("TO ADD", worksheet.detailed_lever_guides_w12); end
  def test_detailed_lever_guides_x12; assert_equal("TO ADD", worksheet.detailed_lever_guides_x12); end
  def test_detailed_lever_guides_q13; assert_equal("Efficiency", worksheet.detailed_lever_guides_q13); end
  def test_detailed_lever_guides_r13; assert_equal("TO ADD", worksheet.detailed_lever_guides_r13); end
  def test_detailed_lever_guides_s13; assert_equal("TO ADD", worksheet.detailed_lever_guides_s13); end
  def test_detailed_lever_guides_t13; assert_equal("TO ADD", worksheet.detailed_lever_guides_t13); end
  def test_detailed_lever_guides_u13; assert_equal("TO ADD", worksheet.detailed_lever_guides_u13); end
  def test_detailed_lever_guides_v13; assert_equal("TO ADD", worksheet.detailed_lever_guides_v13); end
  def test_detailed_lever_guides_w13; assert_equal("TO ADD", worksheet.detailed_lever_guides_w13); end
  def test_detailed_lever_guides_x13; assert_equal("TO ADD", worksheet.detailed_lever_guides_x13); end
  def test_detailed_lever_guides_q14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_q14); end
  def test_detailed_lever_guides_r14; assert_equal("How many vehicles will be either electric or hydrogen powered?", worksheet.detailed_lever_guides_r14); end
  def test_detailed_lever_guides_s14; assert_equal("% of passenger cars that are electric or hydrogen powered", worksheet.detailed_lever_guides_s14); end
  def test_detailed_lever_guides_t14; assert_in_delta(0.002, worksheet.detailed_lever_guides_t14, 0.002); end
  def test_detailed_lever_guides_u14; assert_in_delta(0.02, worksheet.detailed_lever_guides_u14, 0.002); end
  def test_detailed_lever_guides_v14; assert_in_delta(0.1, worksheet.detailed_lever_guides_v14, 0.002); end
  def test_detailed_lever_guides_w14; assert_in_delta(0.35, worksheet.detailed_lever_guides_w14, 0.002); end
  def test_detailed_lever_guides_x14; assert_in_delta(0.55, worksheet.detailed_lever_guides_x14, 0.002); end
  def test_detailed_lever_guides_q15; assert_equal("Building size", worksheet.detailed_lever_guides_q15); end
  def test_detailed_lever_guides_r15; assert_equal("How big will the average urban home be?", worksheet.detailed_lever_guides_r15); end
  def test_detailed_lever_guides_s15; assert_equal("Area of average urban household (square metres)", worksheet.detailed_lever_guides_s15); end
  def test_detailed_lever_guides_t15; assert_in_epsilon(92.0, worksheet.detailed_lever_guides_t15, 0.002); end
  def test_detailed_lever_guides_u15; assert_in_epsilon(110.0, worksheet.detailed_lever_guides_u15, 0.002); end
  def test_detailed_lever_guides_v15; assert_in_epsilon(105.0, worksheet.detailed_lever_guides_v15, 0.002); end
  def test_detailed_lever_guides_w15; assert_in_epsilon(100.0, worksheet.detailed_lever_guides_w15, 0.002); end
  def test_detailed_lever_guides_x15; assert_in_epsilon(95.0, worksheet.detailed_lever_guides_x15, 0.002); end
  def test_detailed_lever_guides_q16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_q16); end
  def test_detailed_lever_guides_r16; assert_equal("How comfortable will our home temperatures be?", worksheet.detailed_lever_guides_r16); end
  def test_detailed_lever_guides_s16; assert_equal("average urban home temperature in winter and summer", worksheet.detailed_lever_guides_s16); end
  def test_detailed_lever_guides_t16; assert_equal("17.5&deg;C in winter, 26.5&deg;C in summer", worksheet.detailed_lever_guides_t16); end
  def test_detailed_lever_guides_u16; assert_equal("20 and 24", worksheet.detailed_lever_guides_u16); end
  def test_detailed_lever_guides_v16; assert_equal("19 and 25", worksheet.detailed_lever_guides_v16); end
  def test_detailed_lever_guides_w16; assert_equal("18 and 26", worksheet.detailed_lever_guides_w16); end
  def test_detailed_lever_guides_x16; assert_equal("17 and 27", worksheet.detailed_lever_guides_x16); end
  def test_detailed_lever_guides_q17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_q17); end
  def test_detailed_lever_guides_r17; assert_equal("How many appliances will we have in our homes?", worksheet.detailed_lever_guides_r17); end
  def test_detailed_lever_guides_s17; assert_equal("TO ADD", worksheet.detailed_lever_guides_s17); end
  def test_detailed_lever_guides_t17; assert_equal("TO ADD", worksheet.detailed_lever_guides_t17); end
  def test_detailed_lever_guides_u17; assert_equal("TO ADD", worksheet.detailed_lever_guides_u17); end
  def test_detailed_lever_guides_v17; assert_equal("TO ADD", worksheet.detailed_lever_guides_v17); end
  def test_detailed_lever_guides_w17; assert_equal("TO ADD", worksheet.detailed_lever_guides_w17); end
  def test_detailed_lever_guides_x17; assert_equal("TO ADD", worksheet.detailed_lever_guides_x17); end
  def test_detailed_lever_guides_q18; assert_equal("Building insulation", worksheet.detailed_lever_guides_q18); end
  def test_detailed_lever_guides_r18; assert_equal("How much will insulation of buildings reduce heat loss?", worksheet.detailed_lever_guides_r18); end
  def test_detailed_lever_guides_s18; assert_equal("Rate of heat loss GW/(M ha*&deg;C)", worksheet.detailed_lever_guides_s18); end
  def test_detailed_lever_guides_t18; assert_equal("15 GW/(M ha*&deg;C)", worksheet.detailed_lever_guides_t18); end
  def test_detailed_lever_guides_u18; assert_equal("29%.", worksheet.detailed_lever_guides_u18); end
  def test_detailed_lever_guides_v18; assert_equal("47%.", worksheet.detailed_lever_guides_v18); end
  def test_detailed_lever_guides_w18; assert_equal("64%.", worksheet.detailed_lever_guides_w18); end
  def test_detailed_lever_guides_x18; assert_equal("76%.", worksheet.detailed_lever_guides_x18); end
  def test_detailed_lever_guides_q19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_q19); end
  def test_detailed_lever_guides_r19; assert_equal("How much will we use low-carbon technologies to heat and cool our buildings?", worksheet.detailed_lever_guides_r19); end
  def test_detailed_lever_guides_s19; assert_equal("% of urban space heating technologies that are low-carbon (solar and heat pumps)", worksheet.detailed_lever_guides_s19); end
  def test_detailed_lever_guides_t19; assert_equal("TO ADD", worksheet.detailed_lever_guides_t19); end
  def test_detailed_lever_guides_u19; assert_equal("TO ADD", worksheet.detailed_lever_guides_u19); end
  def test_detailed_lever_guides_v19; assert_equal("TO ADD", worksheet.detailed_lever_guides_v19); end
  def test_detailed_lever_guides_w19; assert_equal("TO ADD", worksheet.detailed_lever_guides_w19); end
  def test_detailed_lever_guides_x19; assert_equal("TO ADD", worksheet.detailed_lever_guides_x19); end
  def test_detailed_lever_guides_q20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_q20); end
  def test_detailed_lever_guides_r20; assert_equal("% reduction in power needed by average appliance", worksheet.detailed_lever_guides_r20); end
  def test_detailed_lever_guides_s20; assert_equal("Power (W) required by average global urban TVs", worksheet.detailed_lever_guides_s20); end
  def test_detailed_lever_guides_t20; assert_equal("250W", worksheet.detailed_lever_guides_t20); end
  def test_detailed_lever_guides_u20; assert_equal("243W", worksheet.detailed_lever_guides_u20); end
  def test_detailed_lever_guides_v20; assert_equal("208W", worksheet.detailed_lever_guides_v20); end
  def test_detailed_lever_guides_w20; assert_equal("192W", worksheet.detailed_lever_guides_w20); end
  def test_detailed_lever_guides_x20; assert_equal("174W", worksheet.detailed_lever_guides_x20); end
  def test_detailed_lever_guides_q21; assert_equal("Product lifespan & demand", worksheet.detailed_lever_guides_q21); end
  def test_detailed_lever_guides_r21; assert_equal("How frequently will we replace products?", worksheet.detailed_lever_guides_r21); end
  def test_detailed_lever_guides_s21; assert_equal("Lifespan of TV (years)", worksheet.detailed_lever_guides_s21); end
  def test_detailed_lever_guides_t21; assert_in_epsilon(7.0, worksheet.detailed_lever_guides_t21, 0.002); end
  def test_detailed_lever_guides_u21; assert_in_epsilon(5.0, worksheet.detailed_lever_guides_u21, 0.002); end
  def test_detailed_lever_guides_v21; assert_in_epsilon(7.0, worksheet.detailed_lever_guides_v21, 0.002); end
  def test_detailed_lever_guides_w21; assert_in_epsilon(10.0, worksheet.detailed_lever_guides_w21, 0.002); end
  def test_detailed_lever_guides_x21; assert_in_epsilon(15.0, worksheet.detailed_lever_guides_x21, 0.002); end
  def test_detailed_lever_guides_q22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_q22); end
  def test_detailed_lever_guides_r22; assert_equal("% reduction in material needed for a given product between 2011 and 2050", worksheet.detailed_lever_guides_r22); end
  def test_detailed_lever_guides_s22; assert_equal("% reduction in material used to make a given product between 2011 and 2050", worksheet.detailed_lever_guides_s22); end
  def test_detailed_lever_guides_t22; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t22||0), 0.002); end
  def test_detailed_lever_guides_u22; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u22||0), 0.002); end
  def test_detailed_lever_guides_v22; assert_in_delta(0.1, worksheet.detailed_lever_guides_v22, 0.002); end
  def test_detailed_lever_guides_w22; assert_in_delta(0.2, worksheet.detailed_lever_guides_w22, 0.002); end
  def test_detailed_lever_guides_x22; assert_in_delta(0.3, worksheet.detailed_lever_guides_x22, 0.002); end
  def test_detailed_lever_guides_q23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_q23); end
  def test_detailed_lever_guides_r23; assert_equal("How many tonnes of CO2 are produced per tonne of steel?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r23); end
  def test_detailed_lever_guides_s23; assert_equal("Change in emissions per tonne of steel from now to 2050 ", worksheet.detailed_lever_guides_s23); end
  def test_detailed_lever_guides_t23; assert_equal("2 tonnes of CO2 currently produced per tonne of steel. ", worksheet.detailed_lever_guides_t23); end
  def test_detailed_lever_guides_u23; assert_equal("TO ADD", worksheet.detailed_lever_guides_u23); end
  def test_detailed_lever_guides_v23; assert_equal("TO ADD", worksheet.detailed_lever_guides_v23); end
  def test_detailed_lever_guides_w23; assert_equal("TO ADD", worksheet.detailed_lever_guides_w23); end
  def test_detailed_lever_guides_x23; assert_equal("TO ADD", worksheet.detailed_lever_guides_x23); end
  def test_detailed_lever_guides_q24; assert_equal("Chemicals", worksheet.detailed_lever_guides_q24); end
  def test_detailed_lever_guides_r24; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r24); end
  def test_detailed_lever_guides_s24; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_s24); end
  def test_detailed_lever_guides_t24; assert_equal("1.7 tonnes of CO2 produced per tonne of chemicals on average", worksheet.detailed_lever_guides_t24); end
  def test_detailed_lever_guides_u24; assert_in_delta(0.01, worksheet.detailed_lever_guides_u24, 0.002); end
  def test_detailed_lever_guides_v24; assert_in_delta(-0.03, worksheet.detailed_lever_guides_v24, 0.002); end
  def test_detailed_lever_guides_w24; assert_in_delta(-0.07, worksheet.detailed_lever_guides_w24, 0.002); end
  def test_detailed_lever_guides_x24; assert_in_delta(-0.15, worksheet.detailed_lever_guides_x24, 0.002); end
  def test_detailed_lever_guides_q25; assert_equal("Paper and other", worksheet.detailed_lever_guides_q25); end
  def test_detailed_lever_guides_r25; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on paper on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r25); end
  def test_detailed_lever_guides_s25; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_s25); end
  def test_detailed_lever_guides_t25; assert_equal("0.5 tonnes of CO2 produced per tonne of paper", worksheet.detailed_lever_guides_t25); end
  def test_detailed_lever_guides_u25; assert_in_delta(0.01, worksheet.detailed_lever_guides_u25, 0.002); end
  def test_detailed_lever_guides_v25; assert_in_delta(-0.2, worksheet.detailed_lever_guides_v25, 0.002); end
  def test_detailed_lever_guides_w25; assert_in_delta(-0.32, worksheet.detailed_lever_guides_w25, 0.002); end
  def test_detailed_lever_guides_x25; assert_in_delta(-0.45, worksheet.detailed_lever_guides_x25, 0.002); end
  def test_detailed_lever_guides_q26; assert_equal("Cement", worksheet.detailed_lever_guides_q26); end
  def test_detailed_lever_guides_r26; assert_equal("How many tonnes of CO2 are produced per tonne of cement?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r26); end
  def test_detailed_lever_guides_s26; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_s26); end
  def test_detailed_lever_guides_t26; assert_equal("0.4 tonnes of CO2 produced per tonne of cement", worksheet.detailed_lever_guides_t26); end
  def test_detailed_lever_guides_u26; assert_in_delta(0.02, worksheet.detailed_lever_guides_u26, 0.002); end
  def test_detailed_lever_guides_v26; assert_in_delta(0.04, worksheet.detailed_lever_guides_v26, 0.002); end
  def test_detailed_lever_guides_w26; assert_in_delta(0.08, worksheet.detailed_lever_guides_w26, 0.002); end
  def test_detailed_lever_guides_x26; assert_in_delta(0.31, worksheet.detailed_lever_guides_x26, 0.002); end
  def test_detailed_lever_guides_q27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_q27); end
  def test_detailed_lever_guides_r27; assert_equal("Do we use CCS in industry to capture process and combustion emissions? ", worksheet.detailed_lever_guides_r27); end
  def test_detailed_lever_guides_s27; assert_equal("tonnes of CO2 captured within industry", worksheet.detailed_lever_guides_s27); end
  def test_detailed_lever_guides_t27; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t27||0), 0.002); end
  def test_detailed_lever_guides_u27; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u27||0), 0.002); end
  def test_detailed_lever_guides_v27; assert_equal("TO ADD", worksheet.detailed_lever_guides_v27); end
  def test_detailed_lever_guides_w27; assert_equal("TO ADD", worksheet.detailed_lever_guides_w27); end
  def test_detailed_lever_guides_x27; assert_equal("TO ADD", worksheet.detailed_lever_guides_x27); end
  def test_detailed_lever_guides_q28; assert_equal("Coal (incl. biomass) / oil / gas", worksheet.detailed_lever_guides_q28); end
  def test_detailed_lever_guides_r28; assert_equal("Thermal power plants: % that is supplied by solid fuel", worksheet.detailed_lever_guides_r28); end
  def test_detailed_lever_guides_s28; assert_equal("% solid", worksheet.detailed_lever_guides_s28); end
  def test_detailed_lever_guides_t28; assert_equal("61%", worksheet.detailed_lever_guides_t28); end
  def test_detailed_lever_guides_u28; assert_equal("61%", worksheet.detailed_lever_guides_u28); end
  def test_detailed_lever_guides_v28; assert_equal("40%", worksheet.detailed_lever_guides_v28); end
  def test_detailed_lever_guides_w28; assert_equal("32%", worksheet.detailed_lever_guides_w28); end
  def test_detailed_lever_guides_x28; assert_equal("26%", worksheet.detailed_lever_guides_x28); end
  def test_detailed_lever_guides_q29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_q29); end
  def test_detailed_lever_guides_r29; assert_equal("How many coal power stations use the most efficient technologies (ultra- or super- critical)?", worksheet.detailed_lever_guides_r29); end
  def test_detailed_lever_guides_s29; assert_equal("% of coal power stations using most efficient technologies (ultra- or super- critical)", worksheet.detailed_lever_guides_s29); end
  def test_detailed_lever_guides_t29; assert_in_delta(0.25, worksheet.detailed_lever_guides_t29, 0.002); end
  def test_detailed_lever_guides_u29; assert_in_delta(0.38, worksheet.detailed_lever_guides_u29, 0.002); end
  def test_detailed_lever_guides_v29; assert_in_delta(0.45, worksheet.detailed_lever_guides_v29, 0.002); end
  def test_detailed_lever_guides_w29; assert_in_delta(0.5, worksheet.detailed_lever_guides_w29, 0.002); end
  def test_detailed_lever_guides_x29; assert_in_delta(0.55, worksheet.detailed_lever_guides_x29, 0.002); end
  def test_detailed_lever_guides_q30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_q30); end
  def test_detailed_lever_guides_r30; assert_equal("How much do we use carbon capture and storage for electricity generation?", worksheet.detailed_lever_guides_r30); end
  def test_detailed_lever_guides_s30; assert_equal("GW of CCS power capacity", worksheet.detailed_lever_guides_s30); end
  def test_detailed_lever_guides_t30; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t30||0), 0.002); end
  def test_detailed_lever_guides_u30; assert_in_epsilon(16.0, worksheet.detailed_lever_guides_u30, 0.002); end
  def test_detailed_lever_guides_v30; assert_in_epsilon(490.0, worksheet.detailed_lever_guides_v30, 0.002); end
  def test_detailed_lever_guides_w30; assert_in_epsilon(1487.0, worksheet.detailed_lever_guides_w30, 0.002); end
  def test_detailed_lever_guides_x30; assert_in_epsilon(3700.0, worksheet.detailed_lever_guides_x30, 0.002); end
  def test_detailed_lever_guides_q31; assert_equal("Nuclear", worksheet.detailed_lever_guides_q31); end
  def test_detailed_lever_guides_r31; assert_equal("How much do we use nuclear power?", worksheet.detailed_lever_guides_r31); end
  def test_detailed_lever_guides_s31; assert_equal("GW of nuclear power capacity", worksheet.detailed_lever_guides_s31); end
  def test_detailed_lever_guides_t31; assert_in_epsilon(369.0, worksheet.detailed_lever_guides_t31, 0.002); end
  def test_detailed_lever_guides_u31; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u31||0), 0.002); end
  def test_detailed_lever_guides_v31; assert_in_epsilon(558.0, worksheet.detailed_lever_guides_v31, 0.002); end
  def test_detailed_lever_guides_w31; assert_in_epsilon(989.0, worksheet.detailed_lever_guides_w31, 0.002); end
  def test_detailed_lever_guides_x31; assert_in_epsilon(1870.0, worksheet.detailed_lever_guides_x31, 0.002); end
  def test_detailed_lever_guides_q32; assert_equal("Wind", worksheet.detailed_lever_guides_q32); end
  def test_detailed_lever_guides_r32; assert_equal("How much do we use wind power?", worksheet.detailed_lever_guides_r32); end
  def test_detailed_lever_guides_s32; assert_equal("total GW of onshore and offshore wind power capacity", worksheet.detailed_lever_guides_s32); end
  def test_detailed_lever_guides_t32; assert_in_epsilon(242.0, worksheet.detailed_lever_guides_t32, 0.002); end
  def test_detailed_lever_guides_u32; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u32||0), 0.002); end
  def test_detailed_lever_guides_v32; assert_in_epsilon(2317.0, worksheet.detailed_lever_guides_v32, 0.002); end
  def test_detailed_lever_guides_w32; assert_in_epsilon(4710.0, worksheet.detailed_lever_guides_w32, 0.002); end
  def test_detailed_lever_guides_x32; assert_in_epsilon(6466.0, worksheet.detailed_lever_guides_x32, 0.002); end
  def test_detailed_lever_guides_q33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_q33); end
  def test_detailed_lever_guides_r33; assert_equal("How much do we use hydroelectric power?", worksheet.detailed_lever_guides_r33); end
  def test_detailed_lever_guides_s33; assert_equal("GW of hydroelectric capacity", worksheet.detailed_lever_guides_s33); end
  def test_detailed_lever_guides_t33; assert_in_epsilon(970.0, worksheet.detailed_lever_guides_t33, 0.002); end
  def test_detailed_lever_guides_u33; assert_in_epsilon(1324.0, worksheet.detailed_lever_guides_u33, 0.002); end
  def test_detailed_lever_guides_v33; assert_in_epsilon(1697.0, worksheet.detailed_lever_guides_v33, 0.002); end
  def test_detailed_lever_guides_w33; assert_in_epsilon(1912.0, worksheet.detailed_lever_guides_w33, 0.002); end
  def test_detailed_lever_guides_x33; assert_in_epsilon(2342.0, worksheet.detailed_lever_guides_x33, 0.002); end
  def test_detailed_lever_guides_q34; assert_equal("Marine", worksheet.detailed_lever_guides_q34); end
  def test_detailed_lever_guides_r34; assert_equal("How much do we use wave and tidal power?", worksheet.detailed_lever_guides_r34); end
  def test_detailed_lever_guides_s34; assert_equal("total GW of marine capacity (wave and tidal)", worksheet.detailed_lever_guides_s34); end
  def test_detailed_lever_guides_t34; assert_in_epsilon(1.01, worksheet.detailed_lever_guides_t34, 0.002); end
  def test_detailed_lever_guides_u34; assert_in_epsilon(8.0, worksheet.detailed_lever_guides_u34, 0.002); end
  def test_detailed_lever_guides_v34; assert_in_epsilon(97.0, worksheet.detailed_lever_guides_v34, 0.002); end
  def test_detailed_lever_guides_w34; assert_in_epsilon(367.0, worksheet.detailed_lever_guides_w34, 0.002); end
  def test_detailed_lever_guides_x34; assert_in_epsilon(436.0, worksheet.detailed_lever_guides_x34, 0.002); end
  def test_detailed_lever_guides_q35; assert_equal("Solar", worksheet.detailed_lever_guides_q35); end
  def test_detailed_lever_guides_r35; assert_equal("How much do we use solar power?", worksheet.detailed_lever_guides_r35); end
  def test_detailed_lever_guides_s35; assert_equal("total GW of solar power capacity", worksheet.detailed_lever_guides_s35); end
  def test_detailed_lever_guides_t35; assert_in_epsilon(30.0, worksheet.detailed_lever_guides_t35, 0.002); end
  def test_detailed_lever_guides_u35; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u35||0), 0.002); end
  def test_detailed_lever_guides_v35; assert_in_epsilon(1199.0, worksheet.detailed_lever_guides_v35, 0.002); end
  def test_detailed_lever_guides_w35; assert_in_epsilon(3854.0, worksheet.detailed_lever_guides_w35, 0.002); end
  def test_detailed_lever_guides_x35; assert_in_epsilon(7547.0, worksheet.detailed_lever_guides_x35, 0.002); end
  def test_detailed_lever_guides_q36; assert_equal("Geothermal", worksheet.detailed_lever_guides_q36); end
  def test_detailed_lever_guides_r36; assert_equal("How much do we use geothermal power?", worksheet.detailed_lever_guides_r36); end
  def test_detailed_lever_guides_s36; assert_equal("total GW of geothermal capacity", worksheet.detailed_lever_guides_s36); end
  def test_detailed_lever_guides_t36; assert_in_epsilon(11.56, worksheet.detailed_lever_guides_t36, 0.002); end
  def test_detailed_lever_guides_u36; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u36||0), 0.002); end
  def test_detailed_lever_guides_v36; assert_in_epsilon(172.0, worksheet.detailed_lever_guides_v36, 0.002); end
  def test_detailed_lever_guides_w36; assert_in_epsilon(289.0, worksheet.detailed_lever_guides_w36, 0.002); end
  def test_detailed_lever_guides_x36; assert_in_epsilon(404.0, worksheet.detailed_lever_guides_x36, 0.002); end
  def test_detailed_lever_guides_q37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_q37); end
  def test_detailed_lever_guides_r37; assert_equal("How much electricity storage will we have?", worksheet.detailed_lever_guides_r37); end
  def test_detailed_lever_guides_s37; assert_equal("GW of electricity storage plants.", worksheet.detailed_lever_guides_s37); end
  def test_detailed_lever_guides_t37; assert_in_epsilon(120.0, worksheet.detailed_lever_guides_t37, 0.002); end
  def test_detailed_lever_guides_u37; assert_in_epsilon(152.0, worksheet.detailed_lever_guides_u37, 0.002); end
  def test_detailed_lever_guides_v37; assert_in_epsilon(403.0, worksheet.detailed_lever_guides_v37, 0.002); end
  def test_detailed_lever_guides_w37; assert_in_epsilon(800.0, worksheet.detailed_lever_guides_w37, 0.002); end
  def test_detailed_lever_guides_x37; assert_in_epsilon(1200.0, worksheet.detailed_lever_guides_x37, 0.002); end
  def test_detailed_lever_guides_q38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_q38); end
  def test_detailed_lever_guides_r38; assert_equal("How much food will we eat?", worksheet.detailed_lever_guides_r38); end
  def test_detailed_lever_guides_s38; assert_equal("Global average food consumption (kcals/person/day)", worksheet.detailed_lever_guides_s38); end
  def test_detailed_lever_guides_t38; assert_in_epsilon(2140.0, worksheet.detailed_lever_guides_t38, 0.002); end
  def test_detailed_lever_guides_u38; assert_in_epsilon(2520.0, worksheet.detailed_lever_guides_u38, 0.002); end
  def test_detailed_lever_guides_v38; assert_in_epsilon(2400.0, worksheet.detailed_lever_guides_v38, 0.002); end
  def test_detailed_lever_guides_w38; assert_in_epsilon(2330.0, worksheet.detailed_lever_guides_w38, 0.002); end
  def test_detailed_lever_guides_x38; assert_in_epsilon(2100.0, worksheet.detailed_lever_guides_x38, 0.002); end
  def test_detailed_lever_guides_q39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_q39); end
  def test_detailed_lever_guides_r39; assert_equal("How much meat will we eat?", worksheet.detailed_lever_guides_r39); end
  def test_detailed_lever_guides_s39; assert_equal("Global average meat consumption (kcals meat/person/day)", worksheet.detailed_lever_guides_s39); end
  def test_detailed_lever_guides_t39; assert_equal("TO ADD", worksheet.detailed_lever_guides_t39); end
  def test_detailed_lever_guides_u39; assert_equal("TO ADD", worksheet.detailed_lever_guides_u39); end
  def test_detailed_lever_guides_v39; assert_equal("TO ADD", worksheet.detailed_lever_guides_v39); end
  def test_detailed_lever_guides_w39; assert_equal("TO ADD", worksheet.detailed_lever_guides_w39); end
  def test_detailed_lever_guides_x39; assert_equal("TO ADD", worksheet.detailed_lever_guides_x39); end
  def test_detailed_lever_guides_q40; assert_equal("Type of meat", worksheet.detailed_lever_guides_q40); end
  def test_detailed_lever_guides_r40; assert_equal("TO ADD", worksheet.detailed_lever_guides_r40); end
  def test_detailed_lever_guides_s40; assert_equal("TO ADD", worksheet.detailed_lever_guides_s40); end
  def test_detailed_lever_guides_t40; assert_equal("TO ADD", worksheet.detailed_lever_guides_t40); end
  def test_detailed_lever_guides_u40; assert_equal("TO ADD", worksheet.detailed_lever_guides_u40); end
  def test_detailed_lever_guides_v40; assert_equal("TO ADD", worksheet.detailed_lever_guides_v40); end
  def test_detailed_lever_guides_w40; assert_equal("TO ADD", worksheet.detailed_lever_guides_w40); end
  def test_detailed_lever_guides_x40; assert_equal("TO ADD", worksheet.detailed_lever_guides_x40); end
  def test_detailed_lever_guides_q41; assert_equal("Crop yields", worksheet.detailed_lever_guides_q41); end
  def test_detailed_lever_guides_r41; assert_equal("Will crop yields increase?", worksheet.detailed_lever_guides_r41); end
  def test_detailed_lever_guides_s41; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_s41); end
  def test_detailed_lever_guides_t41; assert_equal("Baseline", worksheet.detailed_lever_guides_t41); end
  def test_detailed_lever_guides_u41; assert_in_delta(-0.1, worksheet.detailed_lever_guides_u41, 0.002); end
  def test_detailed_lever_guides_v41; assert_in_delta(0.4, worksheet.detailed_lever_guides_v41, 0.002); end
  def test_detailed_lever_guides_w41; assert_in_delta(0.6, worksheet.detailed_lever_guides_w41, 0.002); end
  def test_detailed_lever_guides_x41; assert_in_epsilon(1.2, worksheet.detailed_lever_guides_x41, 0.002); end
  def test_detailed_lever_guides_q42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_q42); end
  def test_detailed_lever_guides_r42; assert_in_delta(0.0, (worksheet.detailed_lever_guides_r42||0), 0.002); end
  def test_detailed_lever_guides_s42; assert_equal("% more land which is needed to get the same yield", worksheet.detailed_lever_guides_s42); end
  def test_detailed_lever_guides_t42; assert_equal("Baseline", worksheet.detailed_lever_guides_t42); end
  def test_detailed_lever_guides_u42; assert_in_delta(0.1, worksheet.detailed_lever_guides_u42, 0.002); end
  def test_detailed_lever_guides_v42; assert_in_delta(0.0, (worksheet.detailed_lever_guides_v42||0), 0.002); end
  def test_detailed_lever_guides_w42; assert_in_delta(-0.1, worksheet.detailed_lever_guides_w42, 0.002); end
  def test_detailed_lever_guides_x42; assert_in_delta(-0.3, worksheet.detailed_lever_guides_x42, 0.002); end
  def test_detailed_lever_guides_q43; assert_equal("Livestock intensification", worksheet.detailed_lever_guides_q43); end
  def test_detailed_lever_guides_r43; assert_equal("TO ADD", worksheet.detailed_lever_guides_r43); end
  def test_detailed_lever_guides_s43; assert_equal("TO ADD", worksheet.detailed_lever_guides_s43); end
  def test_detailed_lever_guides_t43; assert_equal("TO ADD", worksheet.detailed_lever_guides_t43); end
  def test_detailed_lever_guides_u43; assert_equal("TO ADD", worksheet.detailed_lever_guides_u43); end
  def test_detailed_lever_guides_v43; assert_equal("TO ADD", worksheet.detailed_lever_guides_v43); end
  def test_detailed_lever_guides_w43; assert_equal("TO ADD", worksheet.detailed_lever_guides_w43); end
  def test_detailed_lever_guides_x43; assert_equal("TO ADD", worksheet.detailed_lever_guides_x43); end
  def test_detailed_lever_guides_q44; assert_equal("Extensive livestock yields", worksheet.detailed_lever_guides_q44); end
  def test_detailed_lever_guides_r44; assert_in_delta(0.0, (worksheet.detailed_lever_guides_r44||0), 0.002); end
  def test_detailed_lever_guides_s44; assert_equal("Yields (but measured how?) Need to check which thing has the most impact. Or increase in yield overall if you choose each level. Is this possible?", worksheet.detailed_lever_guides_s44); end
  def test_detailed_lever_guides_t44; assert_equal("TO ADD", worksheet.detailed_lever_guides_t44); end
  def test_detailed_lever_guides_u44; assert_equal("TO ADD", worksheet.detailed_lever_guides_u44); end
  def test_detailed_lever_guides_v44; assert_equal("TO ADD", worksheet.detailed_lever_guides_v44); end
  def test_detailed_lever_guides_w44; assert_equal("TO ADD", worksheet.detailed_lever_guides_w44); end
  def test_detailed_lever_guides_x44; assert_equal("TO ADD", worksheet.detailed_lever_guides_x44); end
  def test_detailed_lever_guides_q45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_q45); end
  def test_detailed_lever_guides_r45; assert_equal("Increase in bioenergy crop yields between 2011 and 2050", worksheet.detailed_lever_guides_r45); end
  def test_detailed_lever_guides_s45; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_s45); end
  def test_detailed_lever_guides_t45; assert_equal("TO ADD", worksheet.detailed_lever_guides_t45); end
  def test_detailed_lever_guides_u45; assert_in_delta(0.2, worksheet.detailed_lever_guides_u45, 0.002); end
  def test_detailed_lever_guides_v45; assert_in_delta(0.5, worksheet.detailed_lever_guides_v45, 0.002); end
  def test_detailed_lever_guides_w45; assert_in_epsilon(1.2, worksheet.detailed_lever_guides_w45, 0.002); end
  def test_detailed_lever_guides_x45; assert_in_epsilon(2.2, worksheet.detailed_lever_guides_x45, 0.002); end
  def test_detailed_lever_guides_q46; assert_equal("Solid or liquid", worksheet.detailed_lever_guides_q46); end
  def test_detailed_lever_guides_r46; assert_equal("How much do we use liquid biofuels?", worksheet.detailed_lever_guides_r46); end
  def test_detailed_lever_guides_s46; assert_equal("% of biofuels that are liquid", worksheet.detailed_lever_guides_s46); end
  def test_detailed_lever_guides_t46; assert_equal("40% liquid", worksheet.detailed_lever_guides_t46); end
  def test_detailed_lever_guides_u46; assert_equal("20% liquid", worksheet.detailed_lever_guides_u46); end
  def test_detailed_lever_guides_v46; assert_equal("40% liquid", worksheet.detailed_lever_guides_v46); end
  def test_detailed_lever_guides_w46; assert_equal("60% liquid", worksheet.detailed_lever_guides_w46); end
  def test_detailed_lever_guides_x46; assert_equal("80% liquid", worksheet.detailed_lever_guides_x46); end
  def test_detailed_lever_guides_q47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_q47); end
  def test_detailed_lever_guides_r47; assert_equal("Percentage of surplus land that is used for biocrops", worksheet.detailed_lever_guides_r47); end
  def test_detailed_lever_guides_s47; assert_equal("% of 2050's surplus land (if any) used for biocrops", worksheet.detailed_lever_guides_s47); end
  def test_detailed_lever_guides_t47; assert_equal("Historic data", worksheet.detailed_lever_guides_t47); end
  def test_detailed_lever_guides_u47; assert_in_delta(0.2, worksheet.detailed_lever_guides_u47, 0.002); end
  def test_detailed_lever_guides_v47; assert_in_delta(0.4, worksheet.detailed_lever_guides_v47, 0.002); end
  def test_detailed_lever_guides_w47; assert_in_delta(0.6, worksheet.detailed_lever_guides_w47, 0.002); end
  def test_detailed_lever_guides_x47; assert_in_delta(0.8, worksheet.detailed_lever_guides_x47, 0.002); end
  def test_detailed_lever_guides_q48; assert_equal("Biochar", worksheet.detailed_lever_guides_q48); end
  def test_detailed_lever_guides_r48; assert_equal("How much CO2 do we capture through biochar technology?", worksheet.detailed_lever_guides_r48); end
  def test_detailed_lever_guides_s48; assert_equal("Removal rate through biochar(GtCO2/year)", worksheet.detailed_lever_guides_s48); end
  def test_detailed_lever_guides_t48; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t48); end
  def test_detailed_lever_guides_u48; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_u48); end
  def test_detailed_lever_guides_v48; assert_equal("0.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_v48); end
  def test_detailed_lever_guides_w48; assert_equal("0.8 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_w48); end
  def test_detailed_lever_guides_x48; assert_equal("3.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_x48); end
  def test_detailed_lever_guides_q49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_q49); end
  def test_detailed_lever_guides_r49; assert_equal("How much CO2 do we capture through direct air capture technology?", worksheet.detailed_lever_guides_r49); end
  def test_detailed_lever_guides_s49; assert_equal("Removal rate through air-capture (GtCO2/year)", worksheet.detailed_lever_guides_s49); end
  def test_detailed_lever_guides_t49; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t49); end
  def test_detailed_lever_guides_u49; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_u49); end
  def test_detailed_lever_guides_v49; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_v49); end
  def test_detailed_lever_guides_w49; assert_equal("2.5 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_w49); end
  def test_detailed_lever_guides_x49; assert_equal("10.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_x49); end
  def test_detailed_lever_guides_q50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_q50); end
  def test_detailed_lever_guides_r50; assert_equal("How much CO2 do we capture through ocean fertilisation technology?", worksheet.detailed_lever_guides_r50); end
  def test_detailed_lever_guides_s50; assert_equal("Removal rate through ocean fertilisation (GtCO2/year)", worksheet.detailed_lever_guides_s50); end
  def test_detailed_lever_guides_t50; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t50); end
  def test_detailed_lever_guides_u50; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_u50); end
  def test_detailed_lever_guides_v50; assert_equal("0.1 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_v50); end
  def test_detailed_lever_guides_w50; assert_equal("0.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_w50); end
  def test_detailed_lever_guides_x50; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_x50); end
  def test_detailed_lever_guides_q51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_q51); end
  def test_detailed_lever_guides_r51; assert_equal("How much CO2 do we capture through enhanced weather (oceanic) technology?", worksheet.detailed_lever_guides_r51); end
  def test_detailed_lever_guides_s51; assert_equal("Removal rate through enhanced weathering (oceanic)", worksheet.detailed_lever_guides_s51); end
  def test_detailed_lever_guides_t51; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t51); end
  def test_detailed_lever_guides_u51; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_u51); end
  def test_detailed_lever_guides_v51; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_v51); end
  def test_detailed_lever_guides_w51; assert_equal("2.5 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_w51); end
  def test_detailed_lever_guides_x51; assert_equal("10.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_x51); end
  def test_detailed_lever_guides_q52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_q52); end
  def test_detailed_lever_guides_r52; assert_equal("How much CO2 do we capture through enhanced weather (terrestrial) technology?", worksheet.detailed_lever_guides_r52); end
  def test_detailed_lever_guides_s52; assert_equal("Removal rate through enhanced weathering (terrestial)", worksheet.detailed_lever_guides_s52); end
  def test_detailed_lever_guides_t52; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t52); end
  def test_detailed_lever_guides_u52; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_u52); end
  def test_detailed_lever_guides_v52; assert_equal("0.4 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_v52); end
  def test_detailed_lever_guides_w52; assert_equal("0.9 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_w52); end
  def test_detailed_lever_guides_x52; assert_equal("3.7 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_x52); end
  def test_detailed_lever_guides_q53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_q53); end
  def test_detailed_lever_guides_r53; assert_equal("How much food is wasted after leaving the farm?", worksheet.detailed_lever_guides_r53); end
  def test_detailed_lever_guides_s53; assert_equal("% of crop energy content that is wasted after leaving the farm", worksheet.detailed_lever_guides_s53); end
  def test_detailed_lever_guides_t53; assert_equal("24%", worksheet.detailed_lever_guides_t53); end
  def test_detailed_lever_guides_u53; assert_equal("24%", worksheet.detailed_lever_guides_u53); end
  def test_detailed_lever_guides_v53; assert_equal("20%", worksheet.detailed_lever_guides_v53); end
  def test_detailed_lever_guides_w53; assert_equal("16%", worksheet.detailed_lever_guides_w53); end
  def test_detailed_lever_guides_x53; assert_equal("10%", worksheet.detailed_lever_guides_x53); end
  def test_detailed_lever_guides_q54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_q54); end
  def test_detailed_lever_guides_r54; assert_equal("TO ADD", worksheet.detailed_lever_guides_r54); end
  def test_detailed_lever_guides_s54; assert_equal("Emissions change every year between 2050 and 2100 ", worksheet.detailed_lever_guides_s54); end
  def test_detailed_lever_guides_t54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t54||0), 0.002); end
  def test_detailed_lever_guides_u54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u54||0), 0.002); end
  def test_detailed_lever_guides_v54; assert_in_delta(0.3333333333333333, worksheet.detailed_lever_guides_v54, 0.002); end
  def test_detailed_lever_guides_w54; assert_in_delta(0.6666666666666666, worksheet.detailed_lever_guides_w54, 0.002); end
  def test_detailed_lever_guides_x54; assert_in_epsilon(1.16, worksheet.detailed_lever_guides_x54, 0.002); end
  def test_detailed_lever_guides_q55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_q55); end
  def test_detailed_lever_guides_r55; assert_equal("TO ADD", worksheet.detailed_lever_guides_r55); end
  def test_detailed_lever_guides_s55; assert_equal("By 2100, % of historically -emitted CO2 that remains in atmosphere", worksheet.detailed_lever_guides_s55); end
  def test_detailed_lever_guides_t55; assert_in_delta(0.44, worksheet.detailed_lever_guides_t55, 0.002); end
  def test_detailed_lever_guides_u55; assert_in_delta(0.3, worksheet.detailed_lever_guides_u55, 0.002); end
  def test_detailed_lever_guides_v55; assert_in_delta(0.44, worksheet.detailed_lever_guides_v55, 0.002); end
  def test_detailed_lever_guides_w55; assert_in_delta(0.6, worksheet.detailed_lever_guides_w55, 0.002); end
  def test_detailed_lever_guides_x55; assert_in_delta(0.74, worksheet.detailed_lever_guides_x55, 0.002); end
  def test_g_60_data__c1250; assert_equal("Cows and other bovines ", worksheet.g_60_data__c1250); end
  def test_g_60_data__d1250; assert_in_epsilon(21.26319176319176, worksheet.g_60_data__d1250, 0.002); end
  def test_g_60_data__e1250; assert_in_epsilon(17.6990990990991, worksheet.g_60_data__e1250, 0.002); end
  def test_g_60_data__f1250; assert_in_epsilon(33.043, worksheet.g_60_data__f1250, 0.002); end
  def test_g_60_data__g1250; assert_in_epsilon(27.5044, worksheet.g_60_data__g1250, 0.002); end
  def test_g_60_data__c1251; assert_equal("Chickens and other poultry", worksheet.g_60_data__c1251); end
  def test_g_60_data__d1251; assert_in_epsilon(30.90871369294606, worksheet.g_60_data__d1251, 0.002); end
  def test_g_60_data__e1251; assert_in_epsilon(60.17060857538037, worksheet.g_60_data__e1251, 0.002); end
  def test_g_60_data__f1251; assert_in_epsilon(44.694, worksheet.g_60_data__f1251, 0.002); end
  def test_g_60_data__g1251; assert_in_epsilon(87.00670000000001, worksheet.g_60_data__g1251, 0.002); end
  def test_g_60_data__c1252; assert_equal("Pigs", worksheet.g_60_data__c1252); end
  def test_g_60_data__d1252; assert_in_epsilon(35.93069306930693, worksheet.g_60_data__d1252, 0.002); end
  def test_g_60_data__e1252; assert_in_epsilon(29.805410183875527, worksheet.g_60_data__e1252, 0.002); end
  def test_g_60_data__f1252; assert_in_epsilon(101.612, worksheet.g_60_data__f1252, 0.002); end
  def test_g_60_data__g1252; assert_in_epsilon(84.28969999999998, worksheet.g_60_data__g1252, 0.002); end
  def test_g_60_data__c1253; assert_equal("Sheep and goats", worksheet.g_60_data__c1253); end
  def test_g_60_data__d1253; assert_in_epsilon(4.334751773049646, worksheet.g_60_data__d1253, 0.002); end
  def test_g_60_data__e1253; assert_in_epsilon(3.5376832151300235, worksheet.g_60_data__e1253, 0.002); end
  def test_g_60_data__f1253; assert_in_epsilon(9.168000000000001, worksheet.g_60_data__f1253, 0.002); end
  def test_g_60_data__g1253; assert_in_epsilon(7.4822, worksheet.g_60_data__g1253, 0.002); end
  def test_g_60_data__c1254; assert_equal("Other animals", worksheet.g_60_data__c1254); end
  def test_g_60_data__d1254; assert_in_delta(0.8780056577086242, worksheet.g_60_data__d1254, 0.002); end
  def test_g_60_data__e1254; assert_in_delta(0.9607496463932103, worksheet.g_60_data__e1254, 0.002); end
  def test_g_60_data__f1254; assert_in_epsilon(2.482999999999989, worksheet.g_60_data__f1254, 0.002); end
  def test_g_60_data__g1254; assert_in_epsilon(2.7169999999999983, worksheet.g_60_data__g1254, 0.002); end
  def test_g_60_data__c1255; assert_equal("Animal fats", worksheet.g_60_data__c1255); end
  def test_g_60_data__d1255; assert_in_epsilon(8.886255924170616, worksheet.g_60_data__d1255, 0.002); end
  def test_g_60_data__e1255; assert_in_epsilon(9.723704126448476, worksheet.g_60_data__e1255, 0.002); end
  def test_g_60_data__f1255; assert_in_epsilon(60.0, worksheet.g_60_data__f1255, 0.002); end
  def test_g_60_data__g1255; assert_in_epsilon(65.65445026178011, worksheet.g_60_data__g1255, 0.002); end
  def test_g_60_data__c1256; assert_equal("Offals", worksheet.g_60_data__c1256); end
  def test_g_60_data__d1256; assert_in_epsilon(6.024096385542169, worksheet.g_60_data__d1256, 0.002); end
  def test_g_60_data__e1256; assert_in_epsilon(6.5918122752791275, worksheet.g_60_data__e1256, 0.002); end
  def test_g_60_data__f1256; assert_in_epsilon(7.0, worksheet.g_60_data__f1256, 0.002); end
  def test_g_60_data__g1256; assert_in_epsilon(7.659685863874345, worksheet.g_60_data__g1256, 0.002); end
  def test_g_60_data__c1257; assert_equal("Fish, seafood and other aquatic products", worksheet.g_60_data__c1257); end
  def test_g_60_data__d1257; assert_in_epsilon(40.74277016742771, worksheet.g_60_data__d1257, 0.002); end
  def test_g_60_data__e1257; assert_in_epsilon(65.45114633388319, worksheet.g_60_data__e1257, 0.002); end
  def test_g_60_data__f1257; assert_in_epsilon(26.768000000000004, worksheet.g_60_data__f1257, 0.002); end
  def test_g_60_data__g1257; assert_in_epsilon(43.00140314136125, worksheet.g_60_data__g1257, 0.002); end
  def test_g_60_data__c1258; assert_equal("Eggs", worksheet.g_60_data__c1258); end
  def test_g_60_data__d1258; assert_in_epsilon(18.640668523676883, worksheet.g_60_data__d1258, 0.002); end
  def test_g_60_data__e1258; assert_in_epsilon(27.093336639005965, worksheet.g_60_data__e1258, 0.002); end
  def test_g_60_data__f1258; assert_in_epsilon(26.768000000000004, worksheet.g_60_data__f1258, 0.002); end
  def test_g_60_data__g1258; assert_in_epsilon(38.90603141361257, worksheet.g_60_data__g1258, 0.002); end
  def test_g_60_data__c1259; assert_equal("Milk products", worksheet.g_60_data__c1259); end
  def test_g_60_data__d1259; assert_in_epsilon(176.91103202846978, worksheet.g_60_data__d1259, 0.002); end
  def test_g_60_data__e1259; assert_in_epsilon(240.47556408488757, worksheet.g_60_data__e1259, 0.002); end
  def test_g_60_data__f1259; assert_in_epsilon(99.42400000000002, worksheet.g_60_data__f1259, 0.002); end
  def test_g_60_data__g1259; assert_in_epsilon(135.1472670157068, worksheet.g_60_data__g1259, 0.002); end
  def test_g_60_data__c1260; assert_equal("Grains and cereals", worksheet.g_60_data__c1260); end
  def test_g_60_data__d1260; assert_in_epsilon(307.0118159203981, worksheet.g_60_data__d1260, 0.002); end
  def test_g_60_data__e1260; assert_in_epsilon(307.0118159203981, worksheet.g_60_data__e1260, 0.002); end
  def test_g_60_data__f1260; assert_in_epsilon(987.3500000000001, worksheet.g_60_data__f1260, 0.002); end
  def test_g_60_data__g1260; assert_in_epsilon(987.3500000000001, worksheet.g_60_data__g1260, 0.002); end
  def test_g_60_data__c1261; assert_equal("Sugar", worksheet.g_60_data__c1261); end
  def test_g_60_data__d1261; assert_in_epsilon(49.813486370157804, worksheet.g_60_data__d1261, 0.002); end
  def test_g_60_data__e1261; assert_in_epsilon(54.43477910122516, worksheet.g_60_data__e1261, 0.002); end
  def test_g_60_data__f1261; assert_in_epsilon(173.59999999999997, worksheet.g_60_data__f1261, 0.002); end
  def test_g_60_data__g1261; assert_in_epsilon(189.70520516776972, worksheet.g_60_data__g1261, 0.002); end
  def test_g_60_data__c1262; assert_equal("Roots and tubers", worksheet.g_60_data__c1262); end
  def test_g_60_data__d1262; assert_in_epsilon(131.2716049382716, worksheet.g_60_data__d1262, 0.002); end
  def test_g_60_data__e1262; assert_in_epsilon(143.44992366081348, worksheet.g_60_data__e1262, 0.002); end
  def test_g_60_data__f1262; assert_in_epsilon(106.32999999999998, worksheet.g_60_data__f1262, 0.002); end
  def test_g_60_data__g1262; assert_in_epsilon(116.19443816525894, worksheet.g_60_data__g1262, 0.002); end
  def test_g_60_data__c1263; assert_equal("Pulses", worksheet.g_60_data__c1263); end
  def test_g_60_data__d1263; assert_in_epsilon(14.517161140197786, worksheet.g_60_data__d1263, 0.002); end
  def test_g_60_data__e1263; assert_in_epsilon(15.863946040062183, worksheet.g_60_data__e1263, 0.002); end
  def test_g_60_data__f1263; assert_in_epsilon(49.90999999999999, worksheet.g_60_data__f1263, 0.002); end
  def test_g_60_data__g1263; assert_in_epsilon(54.54024648573379, worksheet.g_60_data__g1263, 0.002); end
  def test_g_60_data__c1264; assert_equal("Vegetable oil", worksheet.g_60_data__c1264); end
  def test_g_60_data__d1264; assert_in_epsilon(24.329024139114516, worksheet.g_60_data__d1264, 0.002); end
  def test_g_60_data__e1264; assert_in_epsilon(26.586074400013487, worksheet.g_60_data__e1264, 0.002); end
  def test_g_60_data__f1264; assert_in_epsilon(212.65999999999997, worksheet.g_60_data__f1264, 0.002); end
  def test_g_60_data__g1264; assert_in_epsilon(232.3888763305179, worksheet.g_60_data__g1264, 0.002); end
  def test_g_60_data__c1265; assert_equal("Fruit and Veg", worksheet.g_60_data__c1265); end
  def test_g_60_data__d1265; assert_in_epsilon(435.22598870056487, worksheet.g_60_data__d1265, 0.002); end
  def test_g_60_data__e1265; assert_in_epsilon(475.60273894462034, worksheet.g_60_data__e1265, 0.002); end
  def test_g_60_data__f1265; assert_in_epsilon(154.06999999999996, worksheet.g_60_data__f1265, 0.002); end
  def test_g_60_data__g1265; assert_in_epsilon(168.3633695863956, worksheet.g_60_data__g1265, 0.002); end
  def test_g_60_data__c1266; assert_equal("Other", worksheet.g_60_data__c1266); end
  def test_g_60_data__d1266; assert_in_epsilon(22.486529634803432, worksheet.g_60_data__d1266, 0.002); end
  def test_g_60_data__e1266; assert_in_epsilon(24.5726481444788, worksheet.g_60_data__e1266, 0.002); end
  def test_g_60_data__f1266; assert_in_epsilon(75.12, worksheet.g_60_data__f1266, 0.002); end
  def test_g_60_data__g1266; assert_in_epsilon(82.08902656798884, worksheet.g_60_data__g1266, 0.002); end
  def test_g_60_data__c1319; assert_equal("Cows and other bovines ", worksheet.g_60_data__c1319); end
  def test_g_60_data__d1319; assert_equal("extensive", worksheet.g_60_data__d1319); end
  def test_g_60_data__e1319; assert_equal("kg", worksheet.g_60_data__e1319); end
  def test_g_60_data__f1319; assert_in_epsilon(16.909680013080028, worksheet.g_60_data__f1319, 0.002); end
  def test_g_60_data__g1319; assert_in_epsilon(23.185437543707668, worksheet.g_60_data__g1319, 0.002); end
  def test_g_60_data__c1320; assert_equal("Sheep and goats", worksheet.g_60_data__c1320); end
  def test_g_60_data__d1320; assert_equal("extensive", worksheet.g_60_data__d1320); end
  def test_g_60_data__e1320; assert_equal("kg", worksheet.g_60_data__e1320); end
  def test_g_60_data__f1320; assert_in_epsilon(14.522403480132324, worksheet.g_60_data__f1320, 0.002); end
  def test_g_60_data__g1320; assert_in_epsilon(19.912161472758754, worksheet.g_60_data__g1320, 0.002); end
  def test_g_60_data__c1321; assert_equal("Cows and other bovines ", worksheet.g_60_data__c1321); end
  def test_g_60_data__d1321; assert_equal("intensive", worksheet.g_60_data__d1321); end
  def test_g_60_data__e1321; assert_equal("kg", worksheet.g_60_data__e1321); end
  def test_g_60_data__f1321; assert_in_epsilon(247.9285468662731, worksheet.g_60_data__f1321, 0.002); end
  def test_g_60_data__g1321; assert_in_epsilon(343.01042257168916, worksheet.g_60_data__g1321, 0.002); end
  def test_g_60_data__c1322; assert_equal("Chickens and other poultry", worksheet.g_60_data__c1322); end
  def test_g_60_data__d1322; assert_equal("intensive", worksheet.g_60_data__d1322); end
  def test_g_60_data__e1322; assert_equal("kg", worksheet.g_60_data__e1322); end
  def test_g_60_data__f1322; assert_in_epsilon(1014.4859457307286, worksheet.g_60_data__f1322, 0.002); end
  def test_g_60_data__g1322; assert_in_epsilon(1380.537575633569, worksheet.g_60_data__g1322, 0.002); end
  def test_g_60_data__c1323; assert_equal("Pigs", worksheet.g_60_data__c1323); end
  def test_g_60_data__d1323; assert_equal("intensive", worksheet.g_60_data__d1323); end
  def test_g_60_data__e1323; assert_equal("kg", worksheet.g_60_data__e1323); end
  def test_g_60_data__f1323; assert_in_epsilon(609.6173634563546, worksheet.g_60_data__f1323, 0.002); end
  def test_g_60_data__g1323; assert_in_epsilon(840.2965552355748, worksheet.g_60_data__g1323, 0.002); end
  def test_g_60_data__c1324; assert_equal("Sheep and goats", worksheet.g_60_data__c1324); end
  def test_g_60_data__d1324; assert_equal("intensive", worksheet.g_60_data__d1324); end
  def test_g_60_data__e1324; assert_equal("kg", worksheet.g_60_data__e1324); end
  def test_g_60_data__f1324; assert_in_epsilon(182.1659393996163, worksheet.g_60_data__f1324, 0.002); end
  def test_g_60_data__g1324; assert_in_epsilon(252.02751615905674, worksheet.g_60_data__g1324, 0.002); end
  def test_g_60_data__c1325; assert_equal("Eggs", worksheet.g_60_data__c1325); end
  def test_g_60_data__d1325; assert_equal("intensive", worksheet.g_60_data__d1325); end
  def test_g_60_data__e1325; assert_equal("kg", worksheet.g_60_data__e1325); end
  def test_g_60_data__f1325; assert_in_epsilon(544.2687682042056, worksheet.g_60_data__f1325, 0.002); end
  def test_g_60_data__g1325; assert_in_epsilon(752.9986463196329, worksheet.g_60_data__g1325, 0.002); end
  def test_g_60_data__c1326; assert_equal("Milk products", worksheet.g_60_data__c1326); end
  def test_g_60_data__d1326; assert_equal("intensive", worksheet.g_60_data__d1326); end
  def test_g_60_data__e1326; assert_equal("kg", worksheet.g_60_data__e1326); end
  def test_g_60_data__f1326; assert_in_epsilon(1069.4631680695622, worksheet.g_60_data__f1326, 0.002); end
  def test_g_60_data__g1326; assert_in_epsilon(1517.5464674061352, worksheet.g_60_data__g1326, 0.002); end
  def test_g_60_data__c1327; assert_equal("Grains and cereals", worksheet.g_60_data__c1327); end
  def test_g_60_data__d1327; assert_equal("intensive", worksheet.g_60_data__d1327); end
  def test_g_60_data__e1327; assert_equal("kg", worksheet.g_60_data__e1327); end
  def test_g_60_data__f1327; assert_in_epsilon(1701.17837624026, worksheet.g_60_data__f1327, 0.002); end
  def test_g_60_data__g1327; assert_in_epsilon(2139.6264113537286, worksheet.g_60_data__g1327, 0.002); end
  def test_g_60_data__c1328; assert_equal("Sugar", worksheet.g_60_data__c1328); end
  def test_g_60_data__d1328; assert_equal("intensive", worksheet.g_60_data__d1328); end
  def test_g_60_data__e1328; assert_equal("kg", worksheet.g_60_data__e1328); end
  def test_g_60_data__f1328; assert_in_epsilon(1569.8679076007677, worksheet.g_60_data__f1328, 0.002); end
  def test_g_60_data__g1328; assert_in_epsilon(1974.4730384257075, worksheet.g_60_data__g1328, 0.002); end
  def test_g_60_data__c1329; assert_equal("Roots and tubers", worksheet.g_60_data__c1329); end
  def test_g_60_data__d1329; assert_equal("intensive", worksheet.g_60_data__d1329); end
  def test_g_60_data__e1329; assert_equal("kg", worksheet.g_60_data__e1329); end
  def test_g_60_data__f1329; assert_in_epsilon(6754.308219739105, worksheet.g_60_data__f1329, 0.002); end
  def test_g_60_data__g1329; assert_in_epsilon(8495.109307300729, worksheet.g_60_data__g1329, 0.002); end
  def test_g_60_data__c1330; assert_equal("Pulses", worksheet.g_60_data__c1330); end
  def test_g_60_data__d1330; assert_equal("intensive", worksheet.g_60_data__d1330); end
  def test_g_60_data__e1330; assert_equal("kg", worksheet.g_60_data__e1330); end
  def test_g_60_data__f1330; assert_in_epsilon(1591.3291617186374, worksheet.g_60_data__f1330, 0.002); end
  def test_g_60_data__g1330; assert_in_epsilon(2001.4655436048838, worksheet.g_60_data__g1330, 0.002); end
  def test_g_60_data__c1331; assert_equal("Vegetable oil", worksheet.g_60_data__c1331); end
  def test_g_60_data__d1331; assert_equal("intensive", worksheet.g_60_data__d1331); end
  def test_g_60_data__e1331; assert_equal("kg", worksheet.g_60_data__e1331); end
  def test_g_60_data__f1331; assert_in_epsilon(625.8997435063123, worksheet.g_60_data__f1331, 0.002); end
  def test_g_60_data__g1331; assert_in_epsilon(787.2141103893824, worksheet.g_60_data__g1331, 0.002); end
  def test_g_60_data__c1332; assert_equal("Fruit and Veg", worksheet.g_60_data__c1332); end
  def test_g_60_data__d1332; assert_equal("intensive", worksheet.g_60_data__d1332); end
  def test_g_60_data__e1332; assert_equal("kg", worksheet.g_60_data__e1332); end
  def test_g_60_data__f1332; assert_in_epsilon(15454.77304516575, worksheet.g_60_data__f1332, 0.002); end
  def test_g_60_data__g1332; assert_in_epsilon(19437.96197433218, worksheet.g_60_data__g1332, 0.002); end
  def test_g_60_data__c1333; assert_equal("Bioenergy", worksheet.g_60_data__c1333); end
  def test_g_60_data__e1333; assert_equal("kwh", worksheet.g_60_data__e1333); end
  def test_g_60_data__f1333; assert_in_epsilon(19508.92857142857, worksheet.g_60_data__f1333, 0.002); end
  def test_g_60_data__g1333; assert_in_epsilon(40274.87573637703, worksheet.g_60_data__g1333, 0.002); end
  def test_user_inputs_h6; assert_equal("IEA \"2DS\" (approx)", worksheet.user_inputs_h6); end
  def test_user_inputs_i6; assert_equal("IEA \"4DS\" (approx)", worksheet.user_inputs_i6); end
  def test_user_inputs_j6; assert_equal("IEA \"6DS\" (approx)", worksheet.user_inputs_j6); end
  def test_user_inputs_k6; assert_equal("Tom Bain example", worksheet.user_inputs_k6); end
  def test_user_inputs_l6; assert_equal("Low electrification", worksheet.user_inputs_l6); end
  def test_user_inputs_m6; assert_equal("Low CCS", worksheet.user_inputs_m6); end
  def test_user_inputs_n6; assert_equal("Low nuclear", worksheet.user_inputs_n6); end
  def test_user_inputs_o6; assert_equal("Low food yields", worksheet.user_inputs_o6); end
  def test_user_inputs_p6; assert_equal("Healthy eating", worksheet.user_inputs_p6); end
  def test_user_inputs_q6; assert_equal("UCL TIAM 2DS (approx)", worksheet.user_inputs_q6); end
  def test_user_inputs_r6; assert_equal("UCL TIAM 4DS (approx)", worksheet.user_inputs_r6); end
  def test_user_inputs_h7; assert_in_epsilon(2.0, worksheet.user_inputs_h7, 0.002); end
  def test_user_inputs_i7; assert_in_epsilon(2.0, worksheet.user_inputs_i7, 0.002); end
  def test_user_inputs_j7; assert_in_epsilon(2.0, worksheet.user_inputs_j7, 0.002); end
  def test_user_inputs_k7; assert_in_epsilon(2.0, worksheet.user_inputs_k7, 0.002); end
  def test_user_inputs_l7; assert_in_epsilon(2.0, worksheet.user_inputs_l7, 0.002); end
  def test_user_inputs_m7; assert_in_epsilon(2.0, worksheet.user_inputs_m7, 0.002); end
  def test_user_inputs_n7; assert_in_epsilon(2.0, worksheet.user_inputs_n7, 0.002); end
  def test_user_inputs_o7; assert_in_epsilon(2.0, worksheet.user_inputs_o7, 0.002); end
  def test_user_inputs_p7; assert_in_epsilon(2.0, worksheet.user_inputs_p7, 0.002); end
  def test_user_inputs_q7; assert_in_epsilon(2.1, worksheet.user_inputs_q7, 0.002); end
  def test_user_inputs_r7; assert_in_epsilon(2.1, worksheet.user_inputs_r7, 0.002); end
  def test_user_inputs_h8; assert_in_epsilon(2.0, worksheet.user_inputs_h8, 0.002); end
  def test_user_inputs_i8; assert_in_epsilon(2.0, worksheet.user_inputs_i8, 0.002); end
  def test_user_inputs_j8; assert_in_epsilon(2.0, worksheet.user_inputs_j8, 0.002); end
  def test_user_inputs_k8; assert_in_epsilon(2.0, worksheet.user_inputs_k8, 0.002); end
  def test_user_inputs_l8; assert_in_epsilon(2.0, worksheet.user_inputs_l8, 0.002); end
  def test_user_inputs_m8; assert_in_epsilon(2.0, worksheet.user_inputs_m8, 0.002); end
  def test_user_inputs_n8; assert_in_epsilon(2.0, worksheet.user_inputs_n8, 0.002); end
  def test_user_inputs_o8; assert_in_epsilon(2.0, worksheet.user_inputs_o8, 0.002); end
  def test_user_inputs_p8; assert_in_epsilon(2.0, worksheet.user_inputs_p8, 0.002); end
  def test_user_inputs_q8; assert_in_epsilon(2.0, worksheet.user_inputs_q8, 0.002); end
  def test_user_inputs_r8; assert_in_epsilon(2.0, worksheet.user_inputs_r8, 0.002); end
  def test_user_inputs_h9; assert_in_epsilon(2.5, worksheet.user_inputs_h9, 0.002); end
  def test_user_inputs_i9; assert_in_epsilon(2.3, worksheet.user_inputs_i9, 0.002); end
  def test_user_inputs_j9; assert_in_epsilon(2.3, worksheet.user_inputs_j9, 0.002); end
  def test_user_inputs_k9; assert_in_delta(1.0, worksheet.user_inputs_k9, 0.002); end
  def test_user_inputs_l9; assert_in_epsilon(2.0, worksheet.user_inputs_l9, 0.002); end
  def test_user_inputs_m9; assert_in_epsilon(2.0, worksheet.user_inputs_m9, 0.002); end
  def test_user_inputs_n9; assert_in_epsilon(2.0, worksheet.user_inputs_n9, 0.002); end
  def test_user_inputs_o9; assert_in_epsilon(2.0, worksheet.user_inputs_o9, 0.002); end
  def test_user_inputs_p9; assert_in_epsilon(2.0, worksheet.user_inputs_p9, 0.002); end
  def test_user_inputs_q9; assert_in_epsilon(3.2, worksheet.user_inputs_q9, 0.002); end
  def test_user_inputs_r9; assert_in_epsilon(3.0, worksheet.user_inputs_r9, 0.002); end
  def test_user_inputs_h10; assert_in_epsilon(1.9, worksheet.user_inputs_h10, 0.002); end
  def test_user_inputs_i10; assert_in_epsilon(1.9, worksheet.user_inputs_i10, 0.002); end
  def test_user_inputs_j10; assert_in_epsilon(1.9, worksheet.user_inputs_j10, 0.002); end
  def test_user_inputs_k10; assert_in_epsilon(1.5, worksheet.user_inputs_k10, 0.002); end
  def test_user_inputs_l10; assert_in_epsilon(2.0, worksheet.user_inputs_l10, 0.002); end
  def test_user_inputs_m10; assert_in_epsilon(2.0, worksheet.user_inputs_m10, 0.002); end
  def test_user_inputs_n10; assert_in_epsilon(2.0, worksheet.user_inputs_n10, 0.002); end
  def test_user_inputs_o10; assert_in_epsilon(2.0, worksheet.user_inputs_o10, 0.002); end
  def test_user_inputs_p10; assert_in_epsilon(2.0, worksheet.user_inputs_p10, 0.002); end
  def test_user_inputs_q10; assert_in_epsilon(3.5, worksheet.user_inputs_q10, 0.002); end
  def test_user_inputs_r10; assert_in_epsilon(3.3, worksheet.user_inputs_r10, 0.002); end
  def test_user_inputs_h11; assert_in_epsilon(3.2, worksheet.user_inputs_h11, 0.002); end
  def test_user_inputs_i11; assert_in_epsilon(2.2, worksheet.user_inputs_i11, 0.002); end
  def test_user_inputs_j11; assert_in_epsilon(2.2, worksheet.user_inputs_j11, 0.002); end
  def test_user_inputs_k11; assert_in_epsilon(2.5, worksheet.user_inputs_k11, 0.002); end
  def test_user_inputs_l11; assert_in_epsilon(2.5, worksheet.user_inputs_l11, 0.002); end
  def test_user_inputs_m11; assert_in_epsilon(2.0, worksheet.user_inputs_m11, 0.002); end
  def test_user_inputs_n11; assert_in_epsilon(3.1, worksheet.user_inputs_n11, 0.002); end
  def test_user_inputs_o11; assert_in_epsilon(2.0, worksheet.user_inputs_o11, 0.002); end
  def test_user_inputs_p11; assert_in_epsilon(2.8, worksheet.user_inputs_p11, 0.002); end
  def test_user_inputs_q11; assert_in_epsilon(1.2, worksheet.user_inputs_q11, 0.002); end
  def test_user_inputs_r11; assert_in_delta(1.0, worksheet.user_inputs_r11, 0.002); end
  def test_user_inputs_h12; assert_in_epsilon(1.7, worksheet.user_inputs_h12, 0.002); end
  def test_user_inputs_i12; assert_in_epsilon(1.4, worksheet.user_inputs_i12, 0.002); end
  def test_user_inputs_j12; assert_in_epsilon(1.4, worksheet.user_inputs_j12, 0.002); end
  def test_user_inputs_k12; assert_in_delta(1.0, worksheet.user_inputs_k12, 0.002); end
  def test_user_inputs_l12; assert_in_epsilon(2.8, worksheet.user_inputs_l12, 0.002); end
  def test_user_inputs_m12; assert_in_epsilon(2.0, worksheet.user_inputs_m12, 0.002); end
  def test_user_inputs_n12; assert_in_epsilon(3.0, worksheet.user_inputs_n12, 0.002); end
  def test_user_inputs_o12; assert_in_epsilon(2.0, worksheet.user_inputs_o12, 0.002); end
  def test_user_inputs_p12; assert_in_epsilon(2.8, worksheet.user_inputs_p12, 0.002); end
  def test_user_inputs_q12; assert_in_epsilon(1.2, worksheet.user_inputs_q12, 0.002); end
  def test_user_inputs_r12; assert_in_delta(1.0, worksheet.user_inputs_r12, 0.002); end
  def test_user_inputs_h13; assert_in_epsilon(2.6, worksheet.user_inputs_h13, 0.002); end
  def test_user_inputs_i13; assert_in_epsilon(2.4, worksheet.user_inputs_i13, 0.002); end
  def test_user_inputs_j13; assert_in_epsilon(2.4, worksheet.user_inputs_j13, 0.002); end
  def test_user_inputs_k13; assert_in_epsilon(3.0, worksheet.user_inputs_k13, 0.002); end
  def test_user_inputs_l13; assert_in_epsilon(2.8, worksheet.user_inputs_l13, 0.002); end
  def test_user_inputs_m13; assert_in_epsilon(2.8, worksheet.user_inputs_m13, 0.002); end
  def test_user_inputs_n13; assert_in_epsilon(1.3, worksheet.user_inputs_n13, 0.002); end
  def test_user_inputs_o13; assert_in_epsilon(2.8, worksheet.user_inputs_o13, 0.002); end
  def test_user_inputs_p13; assert_in_epsilon(2.8, worksheet.user_inputs_p13, 0.002); end
  def test_user_inputs_q13; assert_in_epsilon(1.2, worksheet.user_inputs_q13, 0.002); end
  def test_user_inputs_r13; assert_in_delta(1.0, worksheet.user_inputs_r13, 0.002); end
  def test_user_inputs_h14; assert_in_epsilon(3.0, worksheet.user_inputs_h14, 0.002); end
  def test_user_inputs_i14; assert_in_epsilon(1.9, worksheet.user_inputs_i14, 0.002); end
  def test_user_inputs_j14; assert_in_epsilon(1.6, worksheet.user_inputs_j14, 0.002); end
  def test_user_inputs_k14; assert_in_epsilon(3.0, worksheet.user_inputs_k14, 0.002); end
  def test_user_inputs_l14; assert_in_epsilon(3.0, worksheet.user_inputs_l14, 0.002); end
  def test_user_inputs_m14; assert_in_epsilon(3.0, worksheet.user_inputs_m14, 0.002); end
  def test_user_inputs_n14; assert_in_epsilon(3.4, worksheet.user_inputs_n14, 0.002); end
  def test_user_inputs_o14; assert_in_epsilon(3.4, worksheet.user_inputs_o14, 0.002); end
  def test_user_inputs_p14; assert_in_epsilon(2.8, worksheet.user_inputs_p14, 0.002); end
  def test_user_inputs_q14; assert_in_epsilon(3.8, worksheet.user_inputs_q14, 0.002); end
  def test_user_inputs_r14; assert_in_epsilon(2.6, worksheet.user_inputs_r14, 0.002); end
  def test_user_inputs_h15; assert_in_epsilon(2.0, worksheet.user_inputs_h15, 0.002); end
  def test_user_inputs_i15; assert_in_epsilon(1.1, worksheet.user_inputs_i15, 0.002); end
  def test_user_inputs_j15; assert_in_delta(1.0, worksheet.user_inputs_j15, 0.002); end
  def test_user_inputs_k15; assert_in_epsilon(3.0, worksheet.user_inputs_k15, 0.002); end
  def test_user_inputs_l15; assert_in_delta(1.0, worksheet.user_inputs_l15, 0.002); end
  def test_user_inputs_m15; assert_in_epsilon(3.0, worksheet.user_inputs_m15, 0.002); end
  def test_user_inputs_n15; assert_in_epsilon(3.4, worksheet.user_inputs_n15, 0.002); end
  def test_user_inputs_o15; assert_in_epsilon(3.2, worksheet.user_inputs_o15, 0.002); end
  def test_user_inputs_p15; assert_in_epsilon(2.5, worksheet.user_inputs_p15, 0.002); end
  def test_user_inputs_q15; assert_in_epsilon(3.7, worksheet.user_inputs_q15, 0.002); end
  def test_user_inputs_r15; assert_in_epsilon(2.5, worksheet.user_inputs_r15, 0.002); end
  def test_user_inputs_h16; assert_in_epsilon(2.2, worksheet.user_inputs_h16, 0.002); end
  def test_user_inputs_i16; assert_in_epsilon(2.2, worksheet.user_inputs_i16, 0.002); end
  def test_user_inputs_j16; assert_in_epsilon(2.2, worksheet.user_inputs_j16, 0.002); end
  def test_user_inputs_k16; assert_in_delta(1.0, worksheet.user_inputs_k16, 0.002); end
  def test_user_inputs_l16; assert_in_epsilon(2.0, worksheet.user_inputs_l16, 0.002); end
  def test_user_inputs_m16; assert_in_epsilon(2.0, worksheet.user_inputs_m16, 0.002); end
  def test_user_inputs_n16; assert_in_epsilon(2.0, worksheet.user_inputs_n16, 0.002); end
  def test_user_inputs_o16; assert_in_epsilon(2.0, worksheet.user_inputs_o16, 0.002); end
  def test_user_inputs_p16; assert_in_epsilon(2.0, worksheet.user_inputs_p16, 0.002); end
  def test_user_inputs_q16; assert_in_epsilon(2.5, worksheet.user_inputs_q16, 0.002); end
  def test_user_inputs_r16; assert_in_epsilon(1.8, worksheet.user_inputs_r16, 0.002); end
  def test_user_inputs_h17; assert_in_epsilon(1.6, worksheet.user_inputs_h17, 0.002); end
  def test_user_inputs_i17; assert_in_epsilon(1.6, worksheet.user_inputs_i17, 0.002); end
  def test_user_inputs_j17; assert_in_epsilon(1.6, worksheet.user_inputs_j17, 0.002); end
  def test_user_inputs_k17; assert_in_delta(1.0, worksheet.user_inputs_k17, 0.002); end
  def test_user_inputs_l17; assert_in_epsilon(2.0, worksheet.user_inputs_l17, 0.002); end
  def test_user_inputs_m17; assert_in_epsilon(2.0, worksheet.user_inputs_m17, 0.002); end
  def test_user_inputs_n17; assert_in_epsilon(2.0, worksheet.user_inputs_n17, 0.002); end
  def test_user_inputs_o17; assert_in_epsilon(2.0, worksheet.user_inputs_o17, 0.002); end
  def test_user_inputs_p17; assert_in_epsilon(2.0, worksheet.user_inputs_p17, 0.002); end
  def test_user_inputs_q17; assert_in_epsilon(2.5, worksheet.user_inputs_q17, 0.002); end
  def test_user_inputs_r17; assert_in_epsilon(2.0, worksheet.user_inputs_r17, 0.002); end
  def test_user_inputs_h18; assert_in_epsilon(2.1, worksheet.user_inputs_h18, 0.002); end
  def test_user_inputs_i18; assert_in_epsilon(2.1, worksheet.user_inputs_i18, 0.002); end
  def test_user_inputs_j18; assert_in_epsilon(2.1, worksheet.user_inputs_j18, 0.002); end
  def test_user_inputs_k18; assert_in_delta(1.0, worksheet.user_inputs_k18, 0.002); end
  def test_user_inputs_l18; assert_in_epsilon(2.0, worksheet.user_inputs_l18, 0.002); end
  def test_user_inputs_m18; assert_in_epsilon(2.0, worksheet.user_inputs_m18, 0.002); end
  def test_user_inputs_n18; assert_in_epsilon(2.0, worksheet.user_inputs_n18, 0.002); end
  def test_user_inputs_o18; assert_in_epsilon(2.0, worksheet.user_inputs_o18, 0.002); end
  def test_user_inputs_p18; assert_in_epsilon(2.0, worksheet.user_inputs_p18, 0.002); end
  def test_user_inputs_q18; assert_in_epsilon(3.0, worksheet.user_inputs_q18, 0.002); end
  def test_user_inputs_r18; assert_in_epsilon(2.5, worksheet.user_inputs_r18, 0.002); end
  def test_user_inputs_h19; assert_in_epsilon(2.2, worksheet.user_inputs_h19, 0.002); end
  def test_user_inputs_i19; assert_in_epsilon(1.4, worksheet.user_inputs_i19, 0.002); end
  def test_user_inputs_j19; assert_in_epsilon(1.2, worksheet.user_inputs_j19, 0.002); end
  def test_user_inputs_k19; assert_in_epsilon(3.0, worksheet.user_inputs_k19, 0.002); end
  def test_user_inputs_l19; assert_in_epsilon(3.0, worksheet.user_inputs_l19, 0.002); end
  def test_user_inputs_m19; assert_in_epsilon(3.1, worksheet.user_inputs_m19, 0.002); end
  def test_user_inputs_n19; assert_in_epsilon(3.3, worksheet.user_inputs_n19, 0.002); end
  def test_user_inputs_o19; assert_in_epsilon(3.3, worksheet.user_inputs_o19, 0.002); end
  def test_user_inputs_p19; assert_in_epsilon(2.8, worksheet.user_inputs_p19, 0.002); end
  def test_user_inputs_q19; assert_in_epsilon(2.5, worksheet.user_inputs_q19, 0.002); end
  def test_user_inputs_r19; assert_in_epsilon(2.0, worksheet.user_inputs_r19, 0.002); end
  def test_user_inputs_h20; assert_in_epsilon(2.1, worksheet.user_inputs_h20, 0.002); end
  def test_user_inputs_i20; assert_in_epsilon(1.3, worksheet.user_inputs_i20, 0.002); end
  def test_user_inputs_j20; assert_in_epsilon(1.2, worksheet.user_inputs_j20, 0.002); end
  def test_user_inputs_k20; assert_in_epsilon(3.0, worksheet.user_inputs_k20, 0.002); end
  def test_user_inputs_l20; assert_in_epsilon(1.5, worksheet.user_inputs_l20, 0.002); end
  def test_user_inputs_m20; assert_in_epsilon(3.1, worksheet.user_inputs_m20, 0.002); end
  def test_user_inputs_n20; assert_in_epsilon(3.3, worksheet.user_inputs_n20, 0.002); end
  def test_user_inputs_o20; assert_in_epsilon(3.3, worksheet.user_inputs_o20, 0.002); end
  def test_user_inputs_p20; assert_in_epsilon(3.0, worksheet.user_inputs_p20, 0.002); end
  def test_user_inputs_q20; assert_in_epsilon(3.8, worksheet.user_inputs_q20, 0.002); end
  def test_user_inputs_r20; assert_in_epsilon(1.5, worksheet.user_inputs_r20, 0.002); end
  def test_user_inputs_h21; assert_in_epsilon(2.2, worksheet.user_inputs_h21, 0.002); end
  def test_user_inputs_i21; assert_in_epsilon(1.4, worksheet.user_inputs_i21, 0.002); end
  def test_user_inputs_j21; assert_in_epsilon(1.2, worksheet.user_inputs_j21, 0.002); end
  def test_user_inputs_k21; assert_in_epsilon(3.0, worksheet.user_inputs_k21, 0.002); end
  def test_user_inputs_l21; assert_in_epsilon(3.0, worksheet.user_inputs_l21, 0.002); end
  def test_user_inputs_m21; assert_in_epsilon(3.1, worksheet.user_inputs_m21, 0.002); end
  def test_user_inputs_n21; assert_in_epsilon(3.3, worksheet.user_inputs_n21, 0.002); end
  def test_user_inputs_o21; assert_in_epsilon(3.3, worksheet.user_inputs_o21, 0.002); end
  def test_user_inputs_p21; assert_in_epsilon(3.0, worksheet.user_inputs_p21, 0.002); end
  def test_user_inputs_q21; assert_in_epsilon(3.0, worksheet.user_inputs_q21, 0.002); end
  def test_user_inputs_r21; assert_in_delta(1.0, worksheet.user_inputs_r21, 0.002); end
  def test_user_inputs_h22; assert_in_delta(1.0, worksheet.user_inputs_h22, 0.002); end
  def test_user_inputs_i22; assert_in_delta(1.0, worksheet.user_inputs_i22, 0.002); end
  def test_user_inputs_j22; assert_in_delta(1.0, worksheet.user_inputs_j22, 0.002); end
  def test_user_inputs_k22; assert_in_epsilon(2.5, worksheet.user_inputs_k22, 0.002); end
  def test_user_inputs_l22; assert_in_epsilon(1.7, worksheet.user_inputs_l22, 0.002); end
  def test_user_inputs_m22; assert_in_epsilon(2.0, worksheet.user_inputs_m22, 0.002); end
  def test_user_inputs_n22; assert_in_epsilon(3.3, worksheet.user_inputs_n22, 0.002); end
  def test_user_inputs_o22; assert_in_epsilon(3.3, worksheet.user_inputs_o22, 0.002); end
  def test_user_inputs_p22; assert_in_epsilon(1.7, worksheet.user_inputs_p22, 0.002); end
  def test_user_inputs_q22; assert_in_epsilon(1.5, worksheet.user_inputs_q22, 0.002); end
  def test_user_inputs_r22; assert_in_epsilon(1.2, worksheet.user_inputs_r22, 0.002); end
  def test_user_inputs_h23; assert_in_epsilon(2.0, worksheet.user_inputs_h23, 0.002); end
  def test_user_inputs_i23; assert_in_epsilon(1.1, worksheet.user_inputs_i23, 0.002); end
  def test_user_inputs_j23; assert_in_epsilon(1.1, worksheet.user_inputs_j23, 0.002); end
  def test_user_inputs_k23; assert_in_epsilon(2.5, worksheet.user_inputs_k23, 0.002); end
  def test_user_inputs_l23; assert_in_epsilon(2.6, worksheet.user_inputs_l23, 0.002); end
  def test_user_inputs_m23; assert_in_epsilon(3.0, worksheet.user_inputs_m23, 0.002); end
  def test_user_inputs_n23; assert_in_epsilon(3.3, worksheet.user_inputs_n23, 0.002); end
  def test_user_inputs_o23; assert_in_epsilon(3.3, worksheet.user_inputs_o23, 0.002); end
  def test_user_inputs_p23; assert_in_epsilon(1.7, worksheet.user_inputs_p23, 0.002); end
  def test_user_inputs_q23; assert_in_epsilon(1.5, worksheet.user_inputs_q23, 0.002); end
  def test_user_inputs_r23; assert_in_delta(1.0, worksheet.user_inputs_r23, 0.002); end
  def test_user_inputs_h24; assert_in_epsilon(3.0, worksheet.user_inputs_h24, 0.002); end
  def test_user_inputs_i24; assert_in_epsilon(2.5, worksheet.user_inputs_i24, 0.002); end
  def test_user_inputs_j24; assert_in_epsilon(1.8, worksheet.user_inputs_j24, 0.002); end
  def test_user_inputs_k24; assert_in_epsilon(3.0, worksheet.user_inputs_k24, 0.002); end
  def test_user_inputs_l24; assert_in_epsilon(2.0, worksheet.user_inputs_l24, 0.002); end
  def test_user_inputs_m24; assert_in_epsilon(3.0, worksheet.user_inputs_m24, 0.002); end
  def test_user_inputs_n24; assert_in_epsilon(3.3, worksheet.user_inputs_n24, 0.002); end
  def test_user_inputs_o24; assert_in_epsilon(3.3, worksheet.user_inputs_o24, 0.002); end
  def test_user_inputs_p24; assert_in_epsilon(2.9, worksheet.user_inputs_p24, 0.002); end
  def test_user_inputs_q24; assert_in_epsilon(3.9, worksheet.user_inputs_q24, 0.002); end
  def test_user_inputs_r24; assert_in_epsilon(1.5, worksheet.user_inputs_r24, 0.002); end
  def test_user_inputs_h25; assert_in_epsilon(1.4, worksheet.user_inputs_h25, 0.002); end
  def test_user_inputs_i25; assert_in_delta(1.0, worksheet.user_inputs_i25, 0.002); end
  def test_user_inputs_j25; assert_in_delta(1.0, worksheet.user_inputs_j25, 0.002); end
  def test_user_inputs_k25; assert_in_epsilon(3.0, worksheet.user_inputs_k25, 0.002); end
  def test_user_inputs_l25; assert_in_epsilon(2.0, worksheet.user_inputs_l25, 0.002); end
  def test_user_inputs_m25; assert_in_epsilon(3.0, worksheet.user_inputs_m25, 0.002); end
  def test_user_inputs_n25; assert_in_epsilon(3.3, worksheet.user_inputs_n25, 0.002); end
  def test_user_inputs_o25; assert_in_epsilon(3.3, worksheet.user_inputs_o25, 0.002); end
  def test_user_inputs_p25; assert_in_epsilon(2.4, worksheet.user_inputs_p25, 0.002); end
  def test_user_inputs_q25; assert_in_epsilon(3.2, worksheet.user_inputs_q25, 0.002); end
  def test_user_inputs_r25; assert_in_epsilon(2.5, worksheet.user_inputs_r25, 0.002); end
  def test_user_inputs_h26; assert_in_epsilon(3.6, worksheet.user_inputs_h26, 0.002); end
  def test_user_inputs_i26; assert_in_epsilon(2.9, worksheet.user_inputs_i26, 0.002); end
  def test_user_inputs_j26; assert_in_epsilon(1.9, worksheet.user_inputs_j26, 0.002); end
  def test_user_inputs_k26; assert_in_epsilon(3.0, worksheet.user_inputs_k26, 0.002); end
  def test_user_inputs_l26; assert_in_epsilon(2.0, worksheet.user_inputs_l26, 0.002); end
  def test_user_inputs_m26; assert_in_epsilon(3.0, worksheet.user_inputs_m26, 0.002); end
  def test_user_inputs_n26; assert_in_epsilon(3.3, worksheet.user_inputs_n26, 0.002); end
  def test_user_inputs_o26; assert_in_epsilon(3.3, worksheet.user_inputs_o26, 0.002); end
  def test_user_inputs_p26; assert_in_epsilon(2.9, worksheet.user_inputs_p26, 0.002); end
  def test_user_inputs_q26; assert_in_epsilon(2.8, worksheet.user_inputs_q26, 0.002); end
  def test_user_inputs_r26; assert_in_epsilon(2.2, worksheet.user_inputs_r26, 0.002); end
  def test_user_inputs_h27; assert_in_epsilon(1.8, worksheet.user_inputs_h27, 0.002); end
  def test_user_inputs_i27; assert_in_epsilon(1.8, worksheet.user_inputs_i27, 0.002); end
  def test_user_inputs_j27; assert_in_epsilon(1.6, worksheet.user_inputs_j27, 0.002); end
  def test_user_inputs_k27; assert_in_epsilon(3.0, worksheet.user_inputs_k27, 0.002); end
  def test_user_inputs_l27; assert_in_epsilon(2.0, worksheet.user_inputs_l27, 0.002); end
  def test_user_inputs_m27; assert_in_epsilon(3.0, worksheet.user_inputs_m27, 0.002); end
  def test_user_inputs_n27; assert_in_epsilon(3.3, worksheet.user_inputs_n27, 0.002); end
  def test_user_inputs_o27; assert_in_epsilon(3.3, worksheet.user_inputs_o27, 0.002); end
  def test_user_inputs_p27; assert_in_epsilon(3.0, worksheet.user_inputs_p27, 0.002); end
  def test_user_inputs_q27; assert_in_epsilon(4.0, worksheet.user_inputs_q27, 0.002); end
  def test_user_inputs_r27; assert_in_epsilon(2.0, worksheet.user_inputs_r27, 0.002); end
  def test_user_inputs_h28; assert_in_epsilon(1.9, worksheet.user_inputs_h28, 0.002); end
  def test_user_inputs_i28; assert_in_epsilon(1.2, worksheet.user_inputs_i28, 0.002); end
  def test_user_inputs_j28; assert_in_delta(1.0, worksheet.user_inputs_j28, 0.002); end
  def test_user_inputs_k28; assert_in_delta(1.0, worksheet.user_inputs_k28, 0.002); end
  def test_user_inputs_l28; assert_in_epsilon(3.5, worksheet.user_inputs_l28, 0.002); end
  def test_user_inputs_m28; assert_in_epsilon(1.3, worksheet.user_inputs_m28, 0.002); end
  def test_user_inputs_n28; assert_in_epsilon(3.0, worksheet.user_inputs_n28, 0.002); end
  def test_user_inputs_o28; assert_in_epsilon(3.1, worksheet.user_inputs_o28, 0.002); end
  def test_user_inputs_p28; assert_in_epsilon(2.7, worksheet.user_inputs_p28, 0.002); end
  def test_user_inputs_q28; assert_in_epsilon(3.8, worksheet.user_inputs_q28, 0.002); end
  def test_user_inputs_r28; assert_in_delta(1.0, worksheet.user_inputs_r28, 0.002); end
  def test_user_inputs_h29; assert_in_epsilon(2.1, worksheet.user_inputs_h29, 0.002); end
  def test_user_inputs_i29; assert_in_epsilon(2.1, worksheet.user_inputs_i29, 0.002); end
  def test_user_inputs_j29; assert_in_epsilon(2.0, worksheet.user_inputs_j29, 0.002); end
  def test_user_inputs_k29; assert_in_epsilon(3.0, worksheet.user_inputs_k29, 0.002); end
  def test_user_inputs_l29; assert_in_epsilon(2.1, worksheet.user_inputs_l29, 0.002); end
  def test_user_inputs_m29; assert_in_epsilon(3.0, worksheet.user_inputs_m29, 0.002); end
  def test_user_inputs_n29; assert_in_epsilon(3.0, worksheet.user_inputs_n29, 0.002); end
  def test_user_inputs_o29; assert_in_epsilon(3.3, worksheet.user_inputs_o29, 0.002); end
  def test_user_inputs_p29; assert_in_epsilon(2.1, worksheet.user_inputs_p29, 0.002); end
  def test_user_inputs_q29; assert_in_epsilon(3.1, worksheet.user_inputs_q29, 0.002); end
  def test_user_inputs_r29; assert_in_delta(1.0, worksheet.user_inputs_r29, 0.002); end
  def test_user_inputs_h30; assert_in_epsilon(3.0, worksheet.user_inputs_h30, 0.002); end
  def test_user_inputs_i30; assert_in_epsilon(2.3, worksheet.user_inputs_i30, 0.002); end
  def test_user_inputs_j30; assert_in_epsilon(2.2, worksheet.user_inputs_j30, 0.002); end
  def test_user_inputs_k30; assert_in_epsilon(3.0, worksheet.user_inputs_k30, 0.002); end
  def test_user_inputs_l30; assert_in_epsilon(3.3, worksheet.user_inputs_l30, 0.002); end
  def test_user_inputs_m30; assert_in_epsilon(3.0, worksheet.user_inputs_m30, 0.002); end
  def test_user_inputs_n30; assert_in_epsilon(3.3, worksheet.user_inputs_n30, 0.002); end
  def test_user_inputs_o30; assert_in_epsilon(3.3, worksheet.user_inputs_o30, 0.002); end
  def test_user_inputs_p30; assert_in_epsilon(3.3, worksheet.user_inputs_p30, 0.002); end
  def test_user_inputs_q30; assert_in_delta(1.0, worksheet.user_inputs_q30, 0.002); end
  def test_user_inputs_r30; assert_in_epsilon(2.1, worksheet.user_inputs_r30, 0.002); end
  def test_user_inputs_h31; assert_in_epsilon(3.0, worksheet.user_inputs_h31, 0.002); end
  def test_user_inputs_i31; assert_in_epsilon(1.4, worksheet.user_inputs_i31, 0.002); end
  def test_user_inputs_j31; assert_in_delta(1.0, worksheet.user_inputs_j31, 0.002); end
  def test_user_inputs_k31; assert_in_delta(1.0, worksheet.user_inputs_k31, 0.002); end
  def test_user_inputs_l31; assert_in_epsilon(3.5, worksheet.user_inputs_l31, 0.002); end
  def test_user_inputs_m31; assert_in_epsilon(1.3, worksheet.user_inputs_m31, 0.002); end
  def test_user_inputs_n31; assert_in_epsilon(2.6, worksheet.user_inputs_n31, 0.002); end
  def test_user_inputs_o31; assert_in_epsilon(3.0, worksheet.user_inputs_o31, 0.002); end
  def test_user_inputs_p31; assert_in_epsilon(2.7, worksheet.user_inputs_p31, 0.002); end
  def test_user_inputs_q31; assert_in_epsilon(2.1, worksheet.user_inputs_q31, 0.002); end
  def test_user_inputs_r31; assert_in_delta(1.0, worksheet.user_inputs_r31, 0.002); end
  def test_user_inputs_h32; assert_in_epsilon(3.0, worksheet.user_inputs_h32, 0.002); end
  def test_user_inputs_i32; assert_in_epsilon(2.0, worksheet.user_inputs_i32, 0.002); end
  def test_user_inputs_j32; assert_in_epsilon(1.7, worksheet.user_inputs_j32, 0.002); end
  def test_user_inputs_k32; assert_in_epsilon(2.0, worksheet.user_inputs_k32, 0.002); end
  def test_user_inputs_l32; assert_in_epsilon(2.0, worksheet.user_inputs_l32, 0.002); end
  def test_user_inputs_m32; assert_in_epsilon(2.5, worksheet.user_inputs_m32, 0.002); end
  def test_user_inputs_n32; assert_in_epsilon(1.6, worksheet.user_inputs_n32, 0.002); end
  def test_user_inputs_o32; assert_in_epsilon(2.0, worksheet.user_inputs_o32, 0.002); end
  def test_user_inputs_p32; assert_in_epsilon(3.1, worksheet.user_inputs_p32, 0.002); end
  def test_user_inputs_q32; assert_in_epsilon(3.2, worksheet.user_inputs_q32, 0.002); end
  def test_user_inputs_r32; assert_in_epsilon(2.2, worksheet.user_inputs_r32, 0.002); end
  def test_user_inputs_h33; assert_in_epsilon(2.0, worksheet.user_inputs_h33, 0.002); end
  def test_user_inputs_i33; assert_in_epsilon(1.7, worksheet.user_inputs_i33, 0.002); end
  def test_user_inputs_j33; assert_in_epsilon(1.2, worksheet.user_inputs_j33, 0.002); end
  def test_user_inputs_k33; assert_in_epsilon(3.0, worksheet.user_inputs_k33, 0.002); end
  def test_user_inputs_l33; assert_in_epsilon(2.0, worksheet.user_inputs_l33, 0.002); end
  def test_user_inputs_m33; assert_in_epsilon(2.8, worksheet.user_inputs_m33, 0.002); end
  def test_user_inputs_n33; assert_in_epsilon(3.2, worksheet.user_inputs_n33, 0.002); end
  def test_user_inputs_o33; assert_in_epsilon(2.1, worksheet.user_inputs_o33, 0.002); end
  def test_user_inputs_p33; assert_in_epsilon(2.4, worksheet.user_inputs_p33, 0.002); end
  def test_user_inputs_q33; assert_in_epsilon(1.8, worksheet.user_inputs_q33, 0.002); end
  def test_user_inputs_r33; assert_in_epsilon(1.2, worksheet.user_inputs_r33, 0.002); end
  def test_user_inputs_h34; assert_in_epsilon(2.3, worksheet.user_inputs_h34, 0.002); end
  def test_user_inputs_i34; assert_in_epsilon(2.1, worksheet.user_inputs_i34, 0.002); end
  def test_user_inputs_j34; assert_in_epsilon(1.9, worksheet.user_inputs_j34, 0.002); end
  def test_user_inputs_k34; assert_in_epsilon(1.5, worksheet.user_inputs_k34, 0.002); end
  def test_user_inputs_l34; assert_in_delta(1.0, worksheet.user_inputs_l34, 0.002); end
  def test_user_inputs_m34; assert_in_epsilon(2.8, worksheet.user_inputs_m34, 0.002); end
  def test_user_inputs_n34; assert_in_epsilon(1.6, worksheet.user_inputs_n34, 0.002); end
  def test_user_inputs_o34; assert_in_epsilon(1.4, worksheet.user_inputs_o34, 0.002); end
  def test_user_inputs_p34; assert_in_epsilon(2.8, worksheet.user_inputs_p34, 0.002); end
  def test_user_inputs_q34; assert_in_epsilon(2.5, worksheet.user_inputs_q34, 0.002); end
  def test_user_inputs_r34; assert_in_delta(1.0, worksheet.user_inputs_r34, 0.002); end
  def test_user_inputs_h35; assert_in_epsilon(1.3, worksheet.user_inputs_h35, 0.002); end
  def test_user_inputs_i35; assert_in_epsilon(1.3, worksheet.user_inputs_i35, 0.002); end
  def test_user_inputs_j35; assert_in_epsilon(1.3, worksheet.user_inputs_j35, 0.002); end
  def test_user_inputs_k35; assert_in_delta(1.0, worksheet.user_inputs_k35, 0.002); end
  def test_user_inputs_l35; assert_in_delta(1.0, worksheet.user_inputs_l35, 0.002); end
  def test_user_inputs_m35; assert_in_epsilon(2.5, worksheet.user_inputs_m35, 0.002); end
  def test_user_inputs_n35; assert_in_epsilon(1.1, worksheet.user_inputs_n35, 0.002); end
  def test_user_inputs_o35; assert_in_epsilon(2.0, worksheet.user_inputs_o35, 0.002); end
  def test_user_inputs_p35; assert_in_epsilon(2.6, worksheet.user_inputs_p35, 0.002); end
  def test_user_inputs_q35; assert_in_delta(1.0, worksheet.user_inputs_q35, 0.002); end
  def test_user_inputs_r35; assert_in_delta(1.0, worksheet.user_inputs_r35, 0.002); end
  def test_user_inputs_h36; assert_in_epsilon(2.5, worksheet.user_inputs_h36, 0.002); end
  def test_user_inputs_i36; assert_in_epsilon(1.6, worksheet.user_inputs_i36, 0.002); end
  def test_user_inputs_j36; assert_in_epsilon(1.2, worksheet.user_inputs_j36, 0.002); end
  def test_user_inputs_k36; assert_in_epsilon(3.0, worksheet.user_inputs_k36, 0.002); end
  def test_user_inputs_l36; assert_in_delta(1.0, worksheet.user_inputs_l36, 0.002); end
  def test_user_inputs_m36; assert_in_epsilon(2.8, worksheet.user_inputs_m36, 0.002); end
  def test_user_inputs_n36; assert_in_epsilon(3.2, worksheet.user_inputs_n36, 0.002); end
  def test_user_inputs_o36; assert_in_epsilon(2.6, worksheet.user_inputs_o36, 0.002); end
  def test_user_inputs_p36; assert_in_epsilon(2.7, worksheet.user_inputs_p36, 0.002); end
  def test_user_inputs_q36; assert_in_epsilon(3.5, worksheet.user_inputs_q36, 0.002); end
  def test_user_inputs_r36; assert_in_epsilon(2.5, worksheet.user_inputs_r36, 0.002); end
  def test_user_inputs_h37; assert_in_epsilon(1.9, worksheet.user_inputs_h37, 0.002); end
  def test_user_inputs_i37; assert_in_epsilon(1.5, worksheet.user_inputs_i37, 0.002); end
  def test_user_inputs_j37; assert_in_epsilon(1.4, worksheet.user_inputs_j37, 0.002); end
  def test_user_inputs_k37; assert_in_epsilon(1.5, worksheet.user_inputs_k37, 0.002); end
  def test_user_inputs_l37; assert_in_delta(1.0, worksheet.user_inputs_l37, 0.002); end
  def test_user_inputs_m37; assert_in_epsilon(2.8, worksheet.user_inputs_m37, 0.002); end
  def test_user_inputs_n37; assert_in_delta(1.0, worksheet.user_inputs_n37, 0.002); end
  def test_user_inputs_o37; assert_in_epsilon(2.6, worksheet.user_inputs_o37, 0.002); end
  def test_user_inputs_p37; assert_in_epsilon(2.0, worksheet.user_inputs_p37, 0.002); end
  def test_user_inputs_q37; assert_in_epsilon(4.0, worksheet.user_inputs_q37, 0.002); end
  def test_user_inputs_r37; assert_in_epsilon(1.6, worksheet.user_inputs_r37, 0.002); end
  def test_user_inputs_h38; assert_in_epsilon(1.7, worksheet.user_inputs_h38, 0.002); end
  def test_user_inputs_i38; assert_in_epsilon(1.7, worksheet.user_inputs_i38, 0.002); end
  def test_user_inputs_j38; assert_in_epsilon(1.7, worksheet.user_inputs_j38, 0.002); end
  def test_user_inputs_k38; assert_in_epsilon(2.5, worksheet.user_inputs_k38, 0.002); end
  def test_user_inputs_l38; assert_in_delta(1.0, worksheet.user_inputs_l38, 0.002); end
  def test_user_inputs_m38; assert_in_epsilon(2.9, worksheet.user_inputs_m38, 0.002); end
  def test_user_inputs_n38; assert_in_epsilon(3.0, worksheet.user_inputs_n38, 0.002); end
  def test_user_inputs_o38; assert_in_epsilon(2.6, worksheet.user_inputs_o38, 0.002); end
  def test_user_inputs_p38; assert_in_epsilon(2.5, worksheet.user_inputs_p38, 0.002); end
  def test_user_inputs_q38; assert_in_delta(1.0, worksheet.user_inputs_q38, 0.002); end
  def test_user_inputs_r38; assert_in_delta(1.0, worksheet.user_inputs_r38, 0.002); end
  def test_user_inputs_h39; assert_in_epsilon(3.0, worksheet.user_inputs_h39, 0.002); end
  def test_user_inputs_i39; assert_in_epsilon(3.0, worksheet.user_inputs_i39, 0.002); end
  def test_user_inputs_j39; assert_in_epsilon(3.0, worksheet.user_inputs_j39, 0.002); end
  def test_user_inputs_k39; assert_in_epsilon(2.0, worksheet.user_inputs_k39, 0.002); end
  def test_user_inputs_l39; assert_in_epsilon(2.5, worksheet.user_inputs_l39, 0.002); end
  def test_user_inputs_m39; assert_in_epsilon(2.5, worksheet.user_inputs_m39, 0.002); end
  def test_user_inputs_n39; assert_in_epsilon(2.5, worksheet.user_inputs_n39, 0.002); end
  def test_user_inputs_o39; assert_in_epsilon(2.5, worksheet.user_inputs_o39, 0.002); end
  def test_user_inputs_p39; assert_in_epsilon(3.9, worksheet.user_inputs_p39, 0.002); end
  def test_user_inputs_q39; assert_in_epsilon(3.0, worksheet.user_inputs_q39, 0.002); end
  def test_user_inputs_r39; assert_in_epsilon(2.5, worksheet.user_inputs_r39, 0.002); end
  def test_user_inputs_h40; assert_in_epsilon(1.8, worksheet.user_inputs_h40, 0.002); end
  def test_user_inputs_i40; assert_in_epsilon(1.8, worksheet.user_inputs_i40, 0.002); end
  def test_user_inputs_j40; assert_in_epsilon(1.8, worksheet.user_inputs_j40, 0.002); end
  def test_user_inputs_k40; assert_in_epsilon(1.6, worksheet.user_inputs_k40, 0.002); end
  def test_user_inputs_l40; assert_in_epsilon(1.9, worksheet.user_inputs_l40, 0.002); end
  def test_user_inputs_m40; assert_in_epsilon(1.9, worksheet.user_inputs_m40, 0.002); end
  def test_user_inputs_n40; assert_in_epsilon(1.9, worksheet.user_inputs_n40, 0.002); end
  def test_user_inputs_o40; assert_in_epsilon(2.5, worksheet.user_inputs_o40, 0.002); end
  def test_user_inputs_p40; assert_in_epsilon(3.0, worksheet.user_inputs_p40, 0.002); end
  def test_user_inputs_q40; assert_in_epsilon(2.5, worksheet.user_inputs_q40, 0.002); end
  def test_user_inputs_r40; assert_in_epsilon(2.5, worksheet.user_inputs_r40, 0.002); end
  def test_user_inputs_h41; assert_in_epsilon(2.1, worksheet.user_inputs_h41, 0.002); end
  def test_user_inputs_i41; assert_in_epsilon(2.1, worksheet.user_inputs_i41, 0.002); end
  def test_user_inputs_j41; assert_in_epsilon(2.1, worksheet.user_inputs_j41, 0.002); end
  def test_user_inputs_k41; assert_in_epsilon(3.0, worksheet.user_inputs_k41, 0.002); end
  def test_user_inputs_l41; assert_in_epsilon(1.9, worksheet.user_inputs_l41, 0.002); end
  def test_user_inputs_m41; assert_in_epsilon(1.9, worksheet.user_inputs_m41, 0.002); end
  def test_user_inputs_n41; assert_in_epsilon(3.0, worksheet.user_inputs_n41, 0.002); end
  def test_user_inputs_o41; assert_in_epsilon(2.8, worksheet.user_inputs_o41, 0.002); end
  def test_user_inputs_p41; assert_in_epsilon(3.0, worksheet.user_inputs_p41, 0.002); end
  def test_user_inputs_q41; assert_in_epsilon(2.5, worksheet.user_inputs_q41, 0.002); end
  def test_user_inputs_r41; assert_in_epsilon(2.5, worksheet.user_inputs_r41, 0.002); end
  def test_user_inputs_h42; assert_in_epsilon(2.8, worksheet.user_inputs_h42, 0.002); end
  def test_user_inputs_i42; assert_in_epsilon(2.1, worksheet.user_inputs_i42, 0.002); end
  def test_user_inputs_j42; assert_in_epsilon(1.8, worksheet.user_inputs_j42, 0.002); end
  def test_user_inputs_k42; assert_in_epsilon(2.6, worksheet.user_inputs_k42, 0.002); end
  def test_user_inputs_l42; assert_in_epsilon(3.0, worksheet.user_inputs_l42, 0.002); end
  def test_user_inputs_m42; assert_in_epsilon(2.4, worksheet.user_inputs_m42, 0.002); end
  def test_user_inputs_n42; assert_in_epsilon(1.5, worksheet.user_inputs_n42, 0.002); end
  def test_user_inputs_o42; assert_in_epsilon(1.6, worksheet.user_inputs_o42, 0.002); end
  def test_user_inputs_p42; assert_in_epsilon(2.0, worksheet.user_inputs_p42, 0.002); end
  def test_user_inputs_q42; assert_in_epsilon(2.0, worksheet.user_inputs_q42, 0.002); end
  def test_user_inputs_r42; assert_in_epsilon(2.0, worksheet.user_inputs_r42, 0.002); end
  def test_user_inputs_h43; assert_in_epsilon(2.3, worksheet.user_inputs_h43, 0.002); end
  def test_user_inputs_i43; assert_in_epsilon(2.3, worksheet.user_inputs_i43, 0.002); end
  def test_user_inputs_j43; assert_in_epsilon(2.3, worksheet.user_inputs_j43, 0.002); end
  def test_user_inputs_k43; assert_in_epsilon(2.8, worksheet.user_inputs_k43, 0.002); end
  def test_user_inputs_l43; assert_in_epsilon(3.0, worksheet.user_inputs_l43, 0.002); end
  def test_user_inputs_m43; assert_in_epsilon(2.4, worksheet.user_inputs_m43, 0.002); end
  def test_user_inputs_n43; assert_in_epsilon(1.8, worksheet.user_inputs_n43, 0.002); end
  def test_user_inputs_o43; assert_in_epsilon(2.2, worksheet.user_inputs_o43, 0.002); end
  def test_user_inputs_p43; assert_in_epsilon(2.0, worksheet.user_inputs_p43, 0.002); end
  def test_user_inputs_q43; assert_in_epsilon(2.0, worksheet.user_inputs_q43, 0.002); end
  def test_user_inputs_r43; assert_in_delta(1.0, worksheet.user_inputs_r43, 0.002); end
  def test_user_inputs_h44; assert_in_epsilon(2.1, worksheet.user_inputs_h44, 0.002); end
  def test_user_inputs_i44; assert_in_epsilon(2.1, worksheet.user_inputs_i44, 0.002); end
  def test_user_inputs_j44; assert_in_epsilon(2.0, worksheet.user_inputs_j44, 0.002); end
  def test_user_inputs_k44; assert_in_delta(1.0, worksheet.user_inputs_k44, 0.002); end
  def test_user_inputs_l44; assert_in_epsilon(2.5, worksheet.user_inputs_l44, 0.002); end
  def test_user_inputs_m44; assert_in_epsilon(2.4, worksheet.user_inputs_m44, 0.002); end
  def test_user_inputs_n44; assert_in_epsilon(1.5, worksheet.user_inputs_n44, 0.002); end
  def test_user_inputs_o44; assert_in_epsilon(1.3, worksheet.user_inputs_o44, 0.002); end
  def test_user_inputs_p44; assert_in_epsilon(2.0, worksheet.user_inputs_p44, 0.002); end
  def test_user_inputs_q44; assert_in_epsilon(2.0, worksheet.user_inputs_q44, 0.002); end
  def test_user_inputs_r44; assert_in_epsilon(2.0, worksheet.user_inputs_r44, 0.002); end
  def test_user_inputs_h45; assert_in_epsilon(2.2, worksheet.user_inputs_h45, 0.002); end
  def test_user_inputs_i45; assert_in_epsilon(2.1, worksheet.user_inputs_i45, 0.002); end
  def test_user_inputs_j45; assert_in_epsilon(2.0, worksheet.user_inputs_j45, 0.002); end
  def test_user_inputs_k45; assert_in_epsilon(3.0, worksheet.user_inputs_k45, 0.002); end
  def test_user_inputs_l45; assert_in_epsilon(2.5, worksheet.user_inputs_l45, 0.002); end
  def test_user_inputs_m45; assert_in_epsilon(2.4, worksheet.user_inputs_m45, 0.002); end
  def test_user_inputs_n45; assert_in_epsilon(1.5, worksheet.user_inputs_n45, 0.002); end
  def test_user_inputs_o45; assert_in_epsilon(1.3, worksheet.user_inputs_o45, 0.002); end
  def test_user_inputs_p45; assert_in_epsilon(2.0, worksheet.user_inputs_p45, 0.002); end
  def test_user_inputs_q45; assert_in_epsilon(2.0, worksheet.user_inputs_q45, 0.002); end
  def test_user_inputs_r45; assert_in_epsilon(2.0, worksheet.user_inputs_r45, 0.002); end
  def test_user_inputs_h46; assert_in_epsilon(3.0, worksheet.user_inputs_h46, 0.002); end
  def test_user_inputs_i46; assert_in_epsilon(2.6, worksheet.user_inputs_i46, 0.002); end
  def test_user_inputs_j46; assert_in_epsilon(2.4, worksheet.user_inputs_j46, 0.002); end
  def test_user_inputs_k46; assert_in_epsilon(2.6, worksheet.user_inputs_k46, 0.002); end
  def test_user_inputs_l46; assert_in_epsilon(2.5, worksheet.user_inputs_l46, 0.002); end
  def test_user_inputs_m46; assert_in_epsilon(1.8, worksheet.user_inputs_m46, 0.002); end
  def test_user_inputs_n46; assert_in_epsilon(1.3, worksheet.user_inputs_n46, 0.002); end
  def test_user_inputs_o46; assert_in_epsilon(1.2, worksheet.user_inputs_o46, 0.002); end
  def test_user_inputs_p46; assert_in_epsilon(1.8, worksheet.user_inputs_p46, 0.002); end
  def test_user_inputs_q46; assert_in_epsilon(2.9, worksheet.user_inputs_q46, 0.002); end
  def test_user_inputs_r46; assert_in_delta(1.0, worksheet.user_inputs_r46, 0.002); end
  def test_user_inputs_h47; assert_in_epsilon(2.7, worksheet.user_inputs_h47, 0.002); end
  def test_user_inputs_i47; assert_in_epsilon(1.3, worksheet.user_inputs_i47, 0.002); end
  def test_user_inputs_j47; assert_in_epsilon(3.9, worksheet.user_inputs_j47, 0.002); end
  def test_user_inputs_k47; assert_in_epsilon(3.0, worksheet.user_inputs_k47, 0.002); end
  def test_user_inputs_l47; assert_in_epsilon(2.5, worksheet.user_inputs_l47, 0.002); end
  def test_user_inputs_m47; assert_in_epsilon(2.0, worksheet.user_inputs_m47, 0.002); end
  def test_user_inputs_n47; assert_in_epsilon(3.0, worksheet.user_inputs_n47, 0.002); end
  def test_user_inputs_o47; assert_in_epsilon(2.0, worksheet.user_inputs_o47, 0.002); end
  def test_user_inputs_p47; assert_in_epsilon(2.0, worksheet.user_inputs_p47, 0.002); end
  def test_user_inputs_q47; assert_in_epsilon(2.0, worksheet.user_inputs_q47, 0.002); end
  def test_user_inputs_r47; assert_in_epsilon(2.0, worksheet.user_inputs_r47, 0.002); end
  def test_user_inputs_h48; assert_in_epsilon(1.8, worksheet.user_inputs_h48, 0.002); end
  def test_user_inputs_i48; assert_in_epsilon(1.6, worksheet.user_inputs_i48, 0.002); end
  def test_user_inputs_j48; assert_in_epsilon(2.9, worksheet.user_inputs_j48, 0.002); end
  def test_user_inputs_k48; assert_in_epsilon(1.3, worksheet.user_inputs_k48, 0.002); end
  def test_user_inputs_l48; assert_in_epsilon(2.0, worksheet.user_inputs_l48, 0.002); end
  def test_user_inputs_m48; assert_in_epsilon(1.2, worksheet.user_inputs_m48, 0.002); end
  def test_user_inputs_n48; assert_in_delta(1.0, worksheet.user_inputs_n48, 0.002); end
  def test_user_inputs_o48; assert_in_epsilon(1.5, worksheet.user_inputs_o48, 0.002); end
  def test_user_inputs_p48; assert_in_epsilon(1.2, worksheet.user_inputs_p48, 0.002); end
  def test_user_inputs_q48; assert_in_delta(1.0, worksheet.user_inputs_q48, 0.002); end
  def test_user_inputs_r48; assert_in_delta(1.0, worksheet.user_inputs_r48, 0.002); end
  def test_user_inputs_h49; assert_in_delta(1.0, worksheet.user_inputs_h49, 0.002); end
  def test_user_inputs_i49; assert_in_delta(1.0, worksheet.user_inputs_i49, 0.002); end
  def test_user_inputs_j49; assert_in_delta(1.0, worksheet.user_inputs_j49, 0.002); end
  def test_user_inputs_k49; assert_in_delta(1.0, worksheet.user_inputs_k49, 0.002); end
  def test_user_inputs_l49; assert_in_delta(1.0, worksheet.user_inputs_l49, 0.002); end
  def test_user_inputs_m49; assert_in_delta(1.0, worksheet.user_inputs_m49, 0.002); end
  def test_user_inputs_n49; assert_in_delta(1.0, worksheet.user_inputs_n49, 0.002); end
  def test_user_inputs_o49; assert_in_delta(1.0, worksheet.user_inputs_o49, 0.002); end
  def test_user_inputs_p49; assert_in_delta(1.0, worksheet.user_inputs_p49, 0.002); end
  def test_user_inputs_q49; assert_in_delta(1.0, worksheet.user_inputs_q49, 0.002); end
  def test_user_inputs_r49; assert_in_delta(1.0, worksheet.user_inputs_r49, 0.002); end
  def test_user_inputs_h50; assert_in_delta(1.0, worksheet.user_inputs_h50, 0.002); end
  def test_user_inputs_i50; assert_in_delta(1.0, worksheet.user_inputs_i50, 0.002); end
  def test_user_inputs_j50; assert_in_delta(1.0, worksheet.user_inputs_j50, 0.002); end
  def test_user_inputs_k50; assert_in_delta(1.0, worksheet.user_inputs_k50, 0.002); end
  def test_user_inputs_l50; assert_in_delta(1.0, worksheet.user_inputs_l50, 0.002); end
  def test_user_inputs_m50; assert_in_delta(1.0, worksheet.user_inputs_m50, 0.002); end
  def test_user_inputs_n50; assert_in_delta(1.0, worksheet.user_inputs_n50, 0.002); end
  def test_user_inputs_o50; assert_in_delta(1.0, worksheet.user_inputs_o50, 0.002); end
  def test_user_inputs_p50; assert_in_delta(1.0, worksheet.user_inputs_p50, 0.002); end
  def test_user_inputs_q50; assert_in_delta(1.0, worksheet.user_inputs_q50, 0.002); end
  def test_user_inputs_r50; assert_in_delta(1.0, worksheet.user_inputs_r50, 0.002); end
  def test_user_inputs_h51; assert_in_delta(1.0, worksheet.user_inputs_h51, 0.002); end
  def test_user_inputs_i51; assert_in_delta(1.0, worksheet.user_inputs_i51, 0.002); end
  def test_user_inputs_j51; assert_in_delta(1.0, worksheet.user_inputs_j51, 0.002); end
  def test_user_inputs_k51; assert_in_delta(1.0, worksheet.user_inputs_k51, 0.002); end
  def test_user_inputs_l51; assert_in_delta(1.0, worksheet.user_inputs_l51, 0.002); end
  def test_user_inputs_m51; assert_in_delta(1.0, worksheet.user_inputs_m51, 0.002); end
  def test_user_inputs_n51; assert_in_delta(1.0, worksheet.user_inputs_n51, 0.002); end
  def test_user_inputs_o51; assert_in_delta(1.0, worksheet.user_inputs_o51, 0.002); end
  def test_user_inputs_p51; assert_in_delta(1.0, worksheet.user_inputs_p51, 0.002); end
  def test_user_inputs_q51; assert_in_delta(1.0, worksheet.user_inputs_q51, 0.002); end
  def test_user_inputs_r51; assert_in_delta(1.0, worksheet.user_inputs_r51, 0.002); end
  def test_user_inputs_h52; assert_in_delta(1.0, worksheet.user_inputs_h52, 0.002); end
  def test_user_inputs_i52; assert_in_delta(1.0, worksheet.user_inputs_i52, 0.002); end
  def test_user_inputs_j52; assert_in_delta(1.0, worksheet.user_inputs_j52, 0.002); end
  def test_user_inputs_k52; assert_in_delta(1.0, worksheet.user_inputs_k52, 0.002); end
  def test_user_inputs_l52; assert_in_delta(1.0, worksheet.user_inputs_l52, 0.002); end
  def test_user_inputs_m52; assert_in_delta(1.0, worksheet.user_inputs_m52, 0.002); end
  def test_user_inputs_n52; assert_in_delta(1.0, worksheet.user_inputs_n52, 0.002); end
  def test_user_inputs_o52; assert_in_delta(1.0, worksheet.user_inputs_o52, 0.002); end
  def test_user_inputs_p52; assert_in_delta(1.0, worksheet.user_inputs_p52, 0.002); end
  def test_user_inputs_q52; assert_in_delta(1.0, worksheet.user_inputs_q52, 0.002); end
  def test_user_inputs_r52; assert_in_delta(1.0, worksheet.user_inputs_r52, 0.002); end
  def test_user_inputs_h53; assert_in_delta(1.0, worksheet.user_inputs_h53, 0.002); end
  def test_user_inputs_i53; assert_in_delta(1.0, worksheet.user_inputs_i53, 0.002); end
  def test_user_inputs_j53; assert_in_delta(1.0, worksheet.user_inputs_j53, 0.002); end
  def test_user_inputs_k53; assert_in_delta(1.0, worksheet.user_inputs_k53, 0.002); end
  def test_user_inputs_l53; assert_in_delta(1.0, worksheet.user_inputs_l53, 0.002); end
  def test_user_inputs_m53; assert_in_delta(1.0, worksheet.user_inputs_m53, 0.002); end
  def test_user_inputs_n53; assert_in_delta(1.0, worksheet.user_inputs_n53, 0.002); end
  def test_user_inputs_o53; assert_in_delta(1.0, worksheet.user_inputs_o53, 0.002); end
  def test_user_inputs_p53; assert_in_delta(1.0, worksheet.user_inputs_p53, 0.002); end
  def test_user_inputs_q53; assert_in_delta(1.0, worksheet.user_inputs_q53, 0.002); end
  def test_user_inputs_r53; assert_in_delta(1.0, worksheet.user_inputs_r53, 0.002); end
  def test_user_inputs_h54; assert_in_epsilon(3.0, worksheet.user_inputs_h54, 0.002); end
  def test_user_inputs_i54; assert_in_epsilon(2.0, worksheet.user_inputs_i54, 0.002); end
  def test_user_inputs_j54; assert_in_epsilon(1.7, worksheet.user_inputs_j54, 0.002); end
  def test_user_inputs_k54; assert_in_epsilon(3.0, worksheet.user_inputs_k54, 0.002); end
  def test_user_inputs_l54; assert_in_epsilon(2.5, worksheet.user_inputs_l54, 0.002); end
  def test_user_inputs_m54; assert_in_epsilon(3.0, worksheet.user_inputs_m54, 0.002); end
  def test_user_inputs_n54; assert_in_epsilon(2.5, worksheet.user_inputs_n54, 0.002); end
  def test_user_inputs_o54; assert_in_epsilon(2.9, worksheet.user_inputs_o54, 0.002); end
  def test_user_inputs_p54; assert_in_epsilon(1.3, worksheet.user_inputs_p54, 0.002); end
  def test_user_inputs_q54; assert_in_epsilon(2.3, worksheet.user_inputs_q54, 0.002); end
  def test_user_inputs_r54; assert_in_delta(1.0, worksheet.user_inputs_r54, 0.002); end
  def test_user_inputs_h55; assert_in_epsilon(1.9, worksheet.user_inputs_h55, 0.002); end
  def test_user_inputs_i55; assert_in_epsilon(1.5, worksheet.user_inputs_i55, 0.002); end
  def test_user_inputs_j55; assert_in_epsilon(1.5, worksheet.user_inputs_j55, 0.002); end
  def test_user_inputs_k55; assert_in_epsilon(2.0, worksheet.user_inputs_k55, 0.002); end
  def test_user_inputs_l55; assert_in_epsilon(2.0, worksheet.user_inputs_l55, 0.002); end
  def test_user_inputs_m55; assert_in_epsilon(2.0, worksheet.user_inputs_m55, 0.002); end
  def test_user_inputs_n55; assert_in_epsilon(2.0, worksheet.user_inputs_n55, 0.002); end
  def test_user_inputs_o55; assert_in_epsilon(2.0, worksheet.user_inputs_o55, 0.002); end
  def test_user_inputs_p55; assert_in_epsilon(2.0, worksheet.user_inputs_p55, 0.002); end
  def test_user_inputs_q55; assert_in_epsilon(2.0, worksheet.user_inputs_q55, 0.002); end
  def test_user_inputs_r55; assert_in_epsilon(2.0, worksheet.user_inputs_r55, 0.002); end
  def test_user_inputs_h56; assert_in_epsilon(2.0, worksheet.user_inputs_h56, 0.002); end
  def test_user_inputs_i56; assert_in_epsilon(2.0, worksheet.user_inputs_i56, 0.002); end
  def test_user_inputs_j56; assert_in_epsilon(2.0, worksheet.user_inputs_j56, 0.002); end
  def test_user_inputs_k56; assert_in_epsilon(2.0, worksheet.user_inputs_k56, 0.002); end
  def test_user_inputs_l56; assert_in_epsilon(2.0, worksheet.user_inputs_l56, 0.002); end
  def test_user_inputs_m56; assert_in_epsilon(2.0, worksheet.user_inputs_m56, 0.002); end
  def test_user_inputs_n56; assert_in_epsilon(2.0, worksheet.user_inputs_n56, 0.002); end
  def test_user_inputs_o56; assert_in_epsilon(2.0, worksheet.user_inputs_o56, 0.002); end
  def test_user_inputs_p56; assert_in_epsilon(2.0, worksheet.user_inputs_p56, 0.002); end
  def test_user_inputs_q56; assert_in_epsilon(2.0, worksheet.user_inputs_q56, 0.002); end
  def test_user_inputs_r56; assert_in_epsilon(2.0, worksheet.user_inputs_r56, 0.002); end
  def test_user_inputs_h57; assert_equal("B", worksheet.user_inputs_h57); end
  def test_user_inputs_i57; assert_equal("B", worksheet.user_inputs_i57); end
  def test_user_inputs_j57; assert_equal("B", worksheet.user_inputs_j57); end
  def test_user_inputs_k57; assert_equal("B", worksheet.user_inputs_k57); end
  def test_user_inputs_l57; assert_equal("B", worksheet.user_inputs_l57); end
  def test_user_inputs_m57; assert_equal("B", worksheet.user_inputs_m57); end
  def test_user_inputs_n57; assert_equal("B", worksheet.user_inputs_n57); end
  def test_user_inputs_o57; assert_equal("B", worksheet.user_inputs_o57); end
  def test_user_inputs_p57; assert_equal("B", worksheet.user_inputs_p57); end
  def test_user_inputs_q57; assert_equal("B", worksheet.user_inputs_q57); end
  def test_user_inputs_r57; assert_equal("B", worksheet.user_inputs_r57); end
  def test_user_inputs_h58; assert_equal("US", worksheet.user_inputs_h58); end
  def test_user_inputs_i58; assert_equal("US", worksheet.user_inputs_i58); end
  def test_user_inputs_j58; assert_equal("US", worksheet.user_inputs_j58); end
  def test_user_inputs_k58; assert_equal("US", worksheet.user_inputs_k58); end
  def test_user_inputs_l58; assert_equal("US", worksheet.user_inputs_l58); end
  def test_user_inputs_m58; assert_equal("US", worksheet.user_inputs_m58); end
  def test_user_inputs_n58; assert_equal("US", worksheet.user_inputs_n58); end
  def test_user_inputs_o58; assert_equal("US", worksheet.user_inputs_o58); end
  def test_user_inputs_p58; assert_equal("US", worksheet.user_inputs_p58); end
  def test_user_inputs_q58; assert_equal("US", worksheet.user_inputs_q58); end
  def test_user_inputs_r58; assert_equal("US", worksheet.user_inputs_r58); end
  def test_user_inputs_h59; assert_equal("Point", worksheet.user_inputs_h59); end
  def test_user_inputs_i59; assert_equal("Point", worksheet.user_inputs_i59); end
  def test_user_inputs_j59; assert_equal("Point", worksheet.user_inputs_j59); end
  def test_user_inputs_k59; assert_equal("Point", worksheet.user_inputs_k59); end
  def test_user_inputs_l59; assert_equal("Point", worksheet.user_inputs_l59); end
  def test_user_inputs_m59; assert_equal("Point", worksheet.user_inputs_m59); end
  def test_user_inputs_n59; assert_equal("Point", worksheet.user_inputs_n59); end
  def test_user_inputs_o59; assert_equal("Point", worksheet.user_inputs_o59); end
  def test_user_inputs_p59; assert_equal("Point", worksheet.user_inputs_p59); end
  def test_user_inputs_q59; assert_equal("Point", worksheet.user_inputs_q59); end
  def test_user_inputs_r59; assert_equal("Point", worksheet.user_inputs_r59); end
  def test_user_inputs_h60; assert_equal("Point", worksheet.user_inputs_h60); end
  def test_user_inputs_i60; assert_equal("Point", worksheet.user_inputs_i60); end
  def test_user_inputs_j60; assert_equal("Point", worksheet.user_inputs_j60); end
  def test_user_inputs_k60; assert_equal("Point", worksheet.user_inputs_k60); end
  def test_user_inputs_l60; assert_equal("Point", worksheet.user_inputs_l60); end
  def test_user_inputs_m60; assert_equal("Point", worksheet.user_inputs_m60); end
  def test_user_inputs_n60; assert_equal("Point", worksheet.user_inputs_n60); end
  def test_user_inputs_o60; assert_equal("Point", worksheet.user_inputs_o60); end
  def test_user_inputs_p60; assert_equal("Point", worksheet.user_inputs_p60); end
  def test_user_inputs_q60; assert_equal("Point", worksheet.user_inputs_q60); end
  def test_user_inputs_r60; assert_equal("Point", worksheet.user_inputs_r60); end
  def test_user_inputs_h61; assert_equal("Point", worksheet.user_inputs_h61); end
  def test_user_inputs_i61; assert_equal("Point", worksheet.user_inputs_i61); end
  def test_user_inputs_j61; assert_equal("Point", worksheet.user_inputs_j61); end
  def test_user_inputs_k61; assert_equal("Point", worksheet.user_inputs_k61); end
  def test_user_inputs_l61; assert_equal("Point", worksheet.user_inputs_l61); end
  def test_user_inputs_m61; assert_equal("Point", worksheet.user_inputs_m61); end
  def test_user_inputs_n61; assert_equal("Point", worksheet.user_inputs_n61); end
  def test_user_inputs_o61; assert_equal("Point", worksheet.user_inputs_o61); end
  def test_user_inputs_p61; assert_equal("Point", worksheet.user_inputs_p61); end
  def test_user_inputs_q61; assert_equal("Point", worksheet.user_inputs_q61); end
  def test_user_inputs_r61; assert_equal("Point", worksheet.user_inputs_r61); end
  def test_user_inputs_h62; assert_equal("Point", worksheet.user_inputs_h62); end
  def test_user_inputs_i62; assert_equal("Point", worksheet.user_inputs_i62); end
  def test_user_inputs_j62; assert_equal("Point", worksheet.user_inputs_j62); end
  def test_user_inputs_k62; assert_equal("Point", worksheet.user_inputs_k62); end
  def test_user_inputs_l62; assert_equal("Point", worksheet.user_inputs_l62); end
  def test_user_inputs_m62; assert_equal("Point", worksheet.user_inputs_m62); end
  def test_user_inputs_n62; assert_equal("Point", worksheet.user_inputs_n62); end
  def test_user_inputs_o62; assert_equal("Point", worksheet.user_inputs_o62); end
  def test_user_inputs_p62; assert_equal("Point", worksheet.user_inputs_p62); end
  def test_user_inputs_q62; assert_equal("Point", worksheet.user_inputs_q62); end
  def test_user_inputs_r62; assert_equal("Point", worksheet.user_inputs_r62); end
  def test_user_inputs_h63; assert_equal("Point", worksheet.user_inputs_h63); end
  def test_user_inputs_i63; assert_equal("Point", worksheet.user_inputs_i63); end
  def test_user_inputs_j63; assert_equal("Point", worksheet.user_inputs_j63); end
  def test_user_inputs_k63; assert_equal("Point", worksheet.user_inputs_k63); end
  def test_user_inputs_l63; assert_equal("Point", worksheet.user_inputs_l63); end
  def test_user_inputs_m63; assert_equal("Point", worksheet.user_inputs_m63); end
  def test_user_inputs_n63; assert_equal("Point", worksheet.user_inputs_n63); end
  def test_user_inputs_o63; assert_equal("Point", worksheet.user_inputs_o63); end
  def test_user_inputs_p63; assert_equal("Point", worksheet.user_inputs_p63); end
  def test_user_inputs_q63; assert_equal("Point", worksheet.user_inputs_q63); end
  def test_user_inputs_r63; assert_equal("Point", worksheet.user_inputs_r63); end
  def test_user_inputs_h64; assert_equal("Point", worksheet.user_inputs_h64); end
  def test_user_inputs_i64; assert_equal("Point", worksheet.user_inputs_i64); end
  def test_user_inputs_j64; assert_equal("Point", worksheet.user_inputs_j64); end
  def test_user_inputs_k64; assert_equal("Point", worksheet.user_inputs_k64); end
  def test_user_inputs_l64; assert_equal("Point", worksheet.user_inputs_l64); end
  def test_user_inputs_m64; assert_equal("Point", worksheet.user_inputs_m64); end
  def test_user_inputs_n64; assert_equal("Point", worksheet.user_inputs_n64); end
  def test_user_inputs_o64; assert_equal("Point", worksheet.user_inputs_o64); end
  def test_user_inputs_p64; assert_equal("Point", worksheet.user_inputs_p64); end
  def test_user_inputs_q64; assert_equal("Point", worksheet.user_inputs_q64); end
  def test_user_inputs_r64; assert_equal("Point", worksheet.user_inputs_r64); end
  def test_user_inputs_h65; assert_equal("Point", worksheet.user_inputs_h65); end
  def test_user_inputs_i65; assert_equal("Point", worksheet.user_inputs_i65); end
  def test_user_inputs_j65; assert_equal("Point", worksheet.user_inputs_j65); end
  def test_user_inputs_k65; assert_equal("Point", worksheet.user_inputs_k65); end
  def test_user_inputs_l65; assert_equal("Point", worksheet.user_inputs_l65); end
  def test_user_inputs_m65; assert_equal("Point", worksheet.user_inputs_m65); end
  def test_user_inputs_n65; assert_equal("Point", worksheet.user_inputs_n65); end
  def test_user_inputs_o65; assert_equal("Point", worksheet.user_inputs_o65); end
  def test_user_inputs_p65; assert_equal("Point", worksheet.user_inputs_p65); end
  def test_user_inputs_q65; assert_equal("Point", worksheet.user_inputs_q65); end
  def test_user_inputs_r65; assert_equal("Point", worksheet.user_inputs_r65); end
  def test_user_inputs_g7; assert_in_delta(0.0, (worksheet.user_inputs_g7||0), 0.002); end
  def test_user_inputs_g8; assert_in_delta(0.0, (worksheet.user_inputs_g8||0), 0.002); end
  def test_user_inputs_g9; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing sharply.", worksheet.user_inputs_g9); end
  def test_user_inputs_g10; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing dramatically.", worksheet.user_inputs_g10); end
  def test_user_inputs_g11; assert_equal("Cities continue to grow in a sprawled pattern of development. Similar to the UK in 2011, 80% of passenger-kms (pkm) globally are by private vehicles. There is no significant effort to use more rail transport for freight or to improve logistics by 2050, and 65% of ground freight is by road, similar to Latin America in 2011.", worksheet.user_inputs_g11); end
  def test_user_inputs_g12; assert_equal("1.4 people (10% lower than 2011)", worksheet.user_inputs_g12); end
  def test_user_inputs_g13; assert_in_delta(0.0, (worksheet.user_inputs_g13||0), 0.002); end
  def test_user_inputs_g14; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.user_inputs_g14); end
  def test_user_inputs_g15; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.user_inputs_g15); end
  def test_user_inputs_g16; assert_equal("The average urban home will have a floor area of 104 m<sup>2</sup> by 2050.", worksheet.user_inputs_g16); end
  def test_user_inputs_g17; assert_equal("In 2050 the average urban home will have an inside temperature of 19 &deg;C in winter and 25 &deg;C in summer.", worksheet.user_inputs_g17); end
  def test_user_inputs_g18; assert_equal("In 2050 the average urban household will have 1.2 refrigerator, 0.6 dishwasher, 0.9 clothes washers, 0.5 clothes dryers, 2.1 TV, 4.1 miscellaneous appliances. And will have 34.5 bulbs.", worksheet.user_inputs_g18); end
  def test_user_inputs_g19; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 33% by 2050. The average heat loss coefficient of these buildings will be 11.4 GW/(M ha*&deg;C).", worksheet.user_inputs_g19); end
  def test_user_inputs_g20; assert_equal("In 2050 the heating technology structure will be 2% solid boiler, 11% liquid boiler, 46% gas boiler, 5% heat pumps, 7% electricity heater, 1% solar heater, 3% micro-CHP, 25% district heating. The cooling structure will be 91% air-conditioning, 3% chiller, 6% solar cooling. The cooking technology structure will be 7% solid stoves, 14% liquid stoves, 39% gas stoves, 30% electric stoves, 11% traditional biomass stoves. ", worksheet.user_inputs_g20); end
  def test_user_inputs_g21; assert_equal("Average TV uses has a power of 236W in 2050.", worksheet.user_inputs_g21); end
  def test_user_inputs_g22; assert_equal("Demand for products leads to the production of 15.8Gt of materials, that is: 3.1Gt of crude steel, 0.1Gt of aluminium, 1.7Gt of chemicals, 1.3Gt of paper, 1.5Gt of timber, 2.4Gt of other materials, & 5.7Gt of cement.", worksheet.user_inputs_g22); end
  def test_user_inputs_g23; assert_equal("Product design leads to the reduction of -1% of materials in 2050.", worksheet.user_inputs_g23); end
  def test_user_inputs_g24; assert_equal("Specific emissions for Steel reduce/increase by -4.2% and for Aluminium by -3%.", worksheet.user_inputs_g24); end
  def test_user_inputs_g25; assert_equal("Specific emissions for chemicals reduce/increase by 0%", worksheet.user_inputs_g25); end
  def test_user_inputs_g26; assert_equal("Specific emissions for pulp & paper change by -21% and for other materials by -14%.", worksheet.user_inputs_g26); end
  def test_user_inputs_g27; assert_equal("Specific emissions for Steel reduce/increase by -4.2% and for Aluminium by -3%.", worksheet.user_inputs_g27); end
  def test_user_inputs_g28; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.user_inputs_g28); end
  def test_user_inputs_g29; assert_equal("In 2050 out of total fossil energy supplied it is 40% of solid, 19% of liquid and 41% of gas power.", worksheet.user_inputs_g29); end
  def test_user_inputs_g30; assert_equal("In 2050 out of fossil energy supplied it is 18% by solid USC, 27% by solid SC, 54% by solid Sub-C, 51% by eff. liquid, 49% by ineff. liquid, 42% by OCGT and 59% by CCGT plant.", worksheet.user_inputs_g30); end
  def test_user_inputs_g31; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.user_inputs_g31); end
  def test_user_inputs_g32; assert_equal("480 GW of installed nuclear power capacity by 2050.", worksheet.user_inputs_g32); end
  def test_user_inputs_g33; assert_equal("463 GW of installed wind power capacity by 2050.", worksheet.user_inputs_g33); end
  def test_user_inputs_g34; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.user_inputs_g34); end
  def test_user_inputs_g35; assert_equal("34.7 GW of installed marine power capacity by 2050.", worksheet.user_inputs_g35); end
  def test_user_inputs_g36; assert_equal("441 GW of installed solar power capacity by 2050.", worksheet.user_inputs_g36); end
  def test_user_inputs_g37; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.user_inputs_g37); end
  def test_user_inputs_g38; assert_equal("328 GW of electricity storage capacity by 2050.", worksheet.user_inputs_g38); end
  def test_user_inputs_g39; assert_in_delta(0.0, (worksheet.user_inputs_g39||0), 0.002); end
  def test_user_inputs_g40; assert_in_delta(0.0, (worksheet.user_inputs_g40||0), 0.002); end
  def test_user_inputs_g42; assert_in_delta(0.0, (worksheet.user_inputs_g42||0), 0.002); end
  def test_user_inputs_g43; assert_in_delta(0.0, (worksheet.user_inputs_g43||0), 0.002); end
  def test_user_inputs_g44; assert_in_delta(0.0, (worksheet.user_inputs_g44||0), 0.002); end
  def test_user_inputs_g46; assert_in_delta(0.0, (worksheet.user_inputs_g46||0), 0.002); end
  def test_user_inputs_g47; assert_equal("78% liquid", worksheet.user_inputs_g47); end
  def test_user_inputs_g48; assert_in_delta(0.0, (worksheet.user_inputs_g48||0), 0.002); end
  def test_user_inputs_g49; assert_equal("Biochar technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g49); end
  def test_user_inputs_g50; assert_equal("Direct air capture technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g50); end
  def test_user_inputs_g51; assert_equal("Ocean fertilisation technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g51); end
  def test_user_inputs_g52; assert_equal("Enhanced weathering (oceanic) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g52); end
  def test_user_inputs_g53; assert_equal("Enhanced weathering (terrestial) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g53); end
  def test_user_inputs_g54; assert_equal("21% of crop energy is wasted after leaving the farm by 2050", worksheet.user_inputs_g54); end
  def test_user_inputs_g55; assert_in_delta(0.0, (worksheet.user_inputs_g55||0), 0.002); end
  def test_user_inputs_g56; assert_in_delta(0.0, (worksheet.user_inputs_g56||0), 0.002); end
  def test_user_inputs_g57; assert_in_delta(0.0, (worksheet.user_inputs_g57||0), 0.002); end
  def test_user_inputs_f7; assert_in_epsilon(3.0, worksheet.user_inputs_f7, 0.002); end
  def test_user_inputs_f8; assert_in_epsilon(3.0, worksheet.user_inputs_f8, 0.002); end
  def test_user_inputs_f9; assert_in_epsilon(4.0, worksheet.user_inputs_f9, 0.002); end
  def test_user_inputs_f10; assert_in_epsilon(4.0, worksheet.user_inputs_f10, 0.002); end
  def test_user_inputs_f11; assert_in_epsilon(4.0, worksheet.user_inputs_f11, 0.002); end
  def test_user_inputs_f12; assert_in_epsilon(4.0, worksheet.user_inputs_f12, 0.002); end
  def test_user_inputs_f13; assert_in_epsilon(4.0, worksheet.user_inputs_f13, 0.002); end
  def test_user_inputs_f14; assert_in_epsilon(4.0, worksheet.user_inputs_f14, 0.002); end
  def test_user_inputs_f15; assert_in_epsilon(4.0, worksheet.user_inputs_f15, 0.002); end
  def test_user_inputs_f16; assert_in_epsilon(4.0, worksheet.user_inputs_f16, 0.002); end
  def test_user_inputs_f17; assert_in_epsilon(4.0, worksheet.user_inputs_f17, 0.002); end
  def test_user_inputs_f18; assert_in_epsilon(4.0, worksheet.user_inputs_f18, 0.002); end
  def test_user_inputs_f19; assert_in_epsilon(4.0, worksheet.user_inputs_f19, 0.002); end
  def test_user_inputs_f20; assert_in_epsilon(4.0, worksheet.user_inputs_f20, 0.002); end
  def test_user_inputs_f21; assert_in_epsilon(4.0, worksheet.user_inputs_f21, 0.002); end
  def test_user_inputs_f22; assert_in_epsilon(4.0, worksheet.user_inputs_f22, 0.002); end
  def test_user_inputs_f23; assert_in_epsilon(4.0, worksheet.user_inputs_f23, 0.002); end
  def test_user_inputs_f24; assert_in_epsilon(4.0, worksheet.user_inputs_f24, 0.002); end
  def test_user_inputs_f25; assert_in_epsilon(4.0, worksheet.user_inputs_f25, 0.002); end
  def test_user_inputs_f26; assert_in_epsilon(4.0, worksheet.user_inputs_f26, 0.002); end
  def test_user_inputs_f27; assert_in_epsilon(4.0, worksheet.user_inputs_f27, 0.002); end
  def test_user_inputs_f28; assert_in_epsilon(4.0, worksheet.user_inputs_f28, 0.002); end
  def test_user_inputs_f29; assert_in_epsilon(4.0, worksheet.user_inputs_f29, 0.002); end
  def test_user_inputs_f30; assert_in_epsilon(4.0, worksheet.user_inputs_f30, 0.002); end
  def test_user_inputs_f31; assert_in_epsilon(4.0, worksheet.user_inputs_f31, 0.002); end
  def test_user_inputs_f32; assert_in_epsilon(4.0, worksheet.user_inputs_f32, 0.002); end
  def test_user_inputs_f33; assert_in_epsilon(4.0, worksheet.user_inputs_f33, 0.002); end
  def test_user_inputs_f34; assert_in_epsilon(4.0, worksheet.user_inputs_f34, 0.002); end
  def test_user_inputs_f35; assert_in_epsilon(4.0, worksheet.user_inputs_f35, 0.002); end
  def test_user_inputs_f36; assert_in_epsilon(4.0, worksheet.user_inputs_f36, 0.002); end
  def test_user_inputs_f37; assert_in_epsilon(4.0, worksheet.user_inputs_f37, 0.002); end
  def test_user_inputs_f38; assert_in_epsilon(4.0, worksheet.user_inputs_f38, 0.002); end
  def test_user_inputs_f39; assert_in_epsilon(4.0, worksheet.user_inputs_f39, 0.002); end
  def test_user_inputs_f40; assert_in_epsilon(4.0, worksheet.user_inputs_f40, 0.002); end
  def test_user_inputs_f41; assert_in_epsilon(4.0, worksheet.user_inputs_f41, 0.002); end
  def test_user_inputs_f42; assert_in_epsilon(4.0, worksheet.user_inputs_f42, 0.002); end
  def test_user_inputs_f43; assert_in_epsilon(4.0, worksheet.user_inputs_f43, 0.002); end
  def test_user_inputs_f44; assert_in_epsilon(4.0, worksheet.user_inputs_f44, 0.002); end
  def test_user_inputs_f45; assert_in_epsilon(4.0, worksheet.user_inputs_f45, 0.002); end
  def test_user_inputs_f46; assert_in_epsilon(4.0, worksheet.user_inputs_f46, 0.002); end
  def test_user_inputs_f47; assert_in_epsilon(4.0, worksheet.user_inputs_f47, 0.002); end
  def test_user_inputs_f48; assert_in_epsilon(4.0, worksheet.user_inputs_f48, 0.002); end
  def test_user_inputs_f49; assert_in_epsilon(4.0, worksheet.user_inputs_f49, 0.002); end
  def test_user_inputs_f50; assert_in_epsilon(4.0, worksheet.user_inputs_f50, 0.002); end
  def test_user_inputs_f51; assert_in_epsilon(4.0, worksheet.user_inputs_f51, 0.002); end
  def test_user_inputs_f52; assert_in_epsilon(4.0, worksheet.user_inputs_f52, 0.002); end
  def test_user_inputs_f53; assert_in_epsilon(4.0, worksheet.user_inputs_f53, 0.002); end
  def test_user_inputs_f54; assert_in_epsilon(4.0, worksheet.user_inputs_f54, 0.002); end
  def test_user_inputs_f55; assert_in_epsilon(4.0, worksheet.user_inputs_f55, 0.002); end
  def test_user_inputs_f56; assert_in_epsilon(4.0, worksheet.user_inputs_f56, 0.002); end
  def test_user_inputs_f57; assert_equal("B", worksheet.user_inputs_f57); end
  def test_user_inputs_d7; assert_equal("Global population", worksheet.user_inputs_d7); end
  def test_user_inputs_d8; assert_equal("Urbanisation", worksheet.user_inputs_d8); end
  def test_user_inputs_d9; assert_equal("Passenger distance", worksheet.user_inputs_d9); end
  def test_user_inputs_d10; assert_equal("Freight distance", worksheet.user_inputs_d10); end
  def test_user_inputs_d11; assert_equal("Mode", worksheet.user_inputs_d11); end
  def test_user_inputs_d12; assert_equal("Occupancy and load", worksheet.user_inputs_d12); end
  def test_user_inputs_d13; assert_equal("Car own or hire ", worksheet.user_inputs_d13); end
  def test_user_inputs_d14; assert_equal("Efficiency", worksheet.user_inputs_d14); end
  def test_user_inputs_d15; assert_equal("Electric and hydrogen", worksheet.user_inputs_d15); end
  def test_user_inputs_d16; assert_equal("Building size", worksheet.user_inputs_d16); end
  def test_user_inputs_d17; assert_equal("Temperature & hot water use", worksheet.user_inputs_d17); end
  def test_user_inputs_d18; assert_equal("Lighting, cooking & appliance use", worksheet.user_inputs_d18); end
  def test_user_inputs_d19; assert_equal("Building insulation", worksheet.user_inputs_d19); end
  def test_user_inputs_d20; assert_equal("Temperature, cooking & lighting technology", worksheet.user_inputs_d20); end
  def test_user_inputs_d21; assert_equal("Appliance efficiency", worksheet.user_inputs_d21); end
  def test_user_inputs_d22; assert_equal("Product lifespan & demand", worksheet.user_inputs_d22); end
  def test_user_inputs_d23; assert_equal("Design, material switch & recycling", worksheet.user_inputs_d23); end
  def test_user_inputs_d24; assert_equal("Iron, steel & aluminium", worksheet.user_inputs_d24); end
  def test_user_inputs_d25; assert_equal("Chemicals", worksheet.user_inputs_d25); end
  def test_user_inputs_d26; assert_equal("Paper and other", worksheet.user_inputs_d26); end
  def test_user_inputs_d27; assert_equal("Cement", worksheet.user_inputs_d27); end
  def test_user_inputs_d28; assert_equal("Carbon capture and storage (ind.)", worksheet.user_inputs_d28); end
  def test_user_inputs_d29; assert_equal("Coal (incl. biomass) / oil / gas", worksheet.user_inputs_d29); end
  def test_user_inputs_d30; assert_equal("Fossil fuel efficiency", worksheet.user_inputs_d30); end
  def test_user_inputs_d31; assert_equal("Carbon capture and storage (power)", worksheet.user_inputs_d31); end
  def test_user_inputs_d32; assert_equal("Nuclear", worksheet.user_inputs_d32); end
  def test_user_inputs_d33; assert_equal("Wind", worksheet.user_inputs_d33); end
  def test_user_inputs_d34; assert_equal("Hydroelectric", worksheet.user_inputs_d34); end
  def test_user_inputs_d35; assert_equal("Marine", worksheet.user_inputs_d35); end
  def test_user_inputs_d36; assert_equal("Solar", worksheet.user_inputs_d36); end
  def test_user_inputs_d37; assert_equal("Geothermal", worksheet.user_inputs_d37); end
  def test_user_inputs_d38; assert_equal("Storage and demand shifting", worksheet.user_inputs_d38); end
  def test_user_inputs_d39; assert_equal("Calories consumed", worksheet.user_inputs_d39); end
  def test_user_inputs_d40; assert_equal("Quantity of meat", worksheet.user_inputs_d40); end
  def test_user_inputs_d41; assert_equal("Type of meat", worksheet.user_inputs_d41); end
  def test_user_inputs_d42; assert_equal("Crop yields", worksheet.user_inputs_d42); end
  def test_user_inputs_d43; assert_equal("Land-use efficiency ", worksheet.user_inputs_d43); end
  def test_user_inputs_d44; assert_equal("Livestock intensification", worksheet.user_inputs_d44); end
  def test_user_inputs_d45; assert_equal("Extensive livestock yields", worksheet.user_inputs_d45); end
  def test_user_inputs_d46; assert_equal("Bioenergy yields", worksheet.user_inputs_d46); end
  def test_user_inputs_d47; assert_equal("Solid or liquid", worksheet.user_inputs_d47); end
  def test_user_inputs_d48; assert_equal("Surplus land (forest & bioenergy) ", worksheet.user_inputs_d48); end
  def test_user_inputs_d49; assert_equal("Biochar", worksheet.user_inputs_d49); end
  def test_user_inputs_d50; assert_equal("Direct air capture", worksheet.user_inputs_d50); end
  def test_user_inputs_d51; assert_equal("Ocean fertilisation", worksheet.user_inputs_d51); end
  def test_user_inputs_d52; assert_equal("Enhanced weathering (oceanic)", worksheet.user_inputs_d52); end
  def test_user_inputs_d53; assert_equal("Enhanced weathering (terrestial)", worksheet.user_inputs_d53); end
  def test_user_inputs_d54; assert_equal("Wastes and residues", worksheet.user_inputs_d54); end
  def test_user_inputs_d55; assert_equal("Emissions trajectory", worksheet.user_inputs_d55); end
  def test_user_inputs_d56; assert_equal("Atmospheric CO2 fraction", worksheet.user_inputs_d56); end
  def test_user_inputs_d57; assert_equal("Confidence in climate models", worksheet.user_inputs_d57); end
  def test_user_inputs_d58; assert_equal("Region factor", worksheet.user_inputs_d58); end
  def test_user_inputs_d59; assert_equal("Coal", worksheet.user_inputs_d59); end
  def test_user_inputs_d60; assert_equal("Oil", worksheet.user_inputs_d60); end
  def test_user_inputs_d61; assert_equal("Gas", worksheet.user_inputs_d61); end
  def test_user_inputs_d62; assert_equal("Solid bioenergy", worksheet.user_inputs_d62); end
  def test_user_inputs_d63; assert_equal("Liquid bioenergy", worksheet.user_inputs_d63); end
  def test_user_inputs_d64; assert_equal("Gaseous bioenergy", worksheet.user_inputs_d64); end
  def test_user_inputs_d65; assert_equal("Hydrogen", worksheet.user_inputs_d65); end
  def test_outputs_lifestyle_e8; assert_equal("2011", worksheet.outputs_lifestyle_e8); end
  def test_outputs_lifestyle_f8; assert_equal("2011", worksheet.outputs_lifestyle_f8); end
  def test_outputs_lifestyle_g8; assert_in_epsilon(2011.0, worksheet.outputs_lifestyle_g8, 0.002); end
  def test_outputs_lifestyle_h8; assert_equal("2050", worksheet.outputs_lifestyle_h8); end
  def test_outputs_lifestyle_i8; assert_equal("2050", worksheet.outputs_lifestyle_i8); end
  def test_outputs_lifestyle_j8; assert_in_epsilon(2050.0, worksheet.outputs_lifestyle_j8, 0.002); end
  def test_outputs_lifestyle_e9; assert_equal("Urban", worksheet.outputs_lifestyle_e9); end
  def test_outputs_lifestyle_f9; assert_equal("Rural", worksheet.outputs_lifestyle_f9); end
  def test_outputs_lifestyle_g9; assert_equal("2011 weighted average", worksheet.outputs_lifestyle_g9); end
  def test_outputs_lifestyle_h9; assert_equal("Urban", worksheet.outputs_lifestyle_h9); end
  def test_outputs_lifestyle_i9; assert_equal("Rural", worksheet.outputs_lifestyle_i9); end
  def test_outputs_lifestyle_j9; assert_equal("2050 weighted average", worksheet.outputs_lifestyle_j9); end
  def test_outputs_lifestyle_d10; assert_equal("Passenger km/head", worksheet.outputs_lifestyle_d10); end
  def test_outputs_lifestyle_e10; assert_in_epsilon(9187.0, worksheet.outputs_lifestyle_e10, 0.002); end
  def test_outputs_lifestyle_f10; assert_in_epsilon(5653.0, worksheet.outputs_lifestyle_f10, 0.002); end
  def test_outputs_lifestyle_g10; assert_in_epsilon(7495.0, worksheet.outputs_lifestyle_g10, 0.002); end
  def test_outputs_lifestyle_h10; assert_in_epsilon(12214.0, worksheet.outputs_lifestyle_h10, 0.002); end
  def test_outputs_lifestyle_i10; assert_in_epsilon(9339.0, worksheet.outputs_lifestyle_i10, 0.002); end
  def test_outputs_lifestyle_j10; assert_in_epsilon(11247.0, worksheet.outputs_lifestyle_j10, 0.002); end
  def test_outputs_lifestyle_d11; assert_equal("% of total passenger km using cars", worksheet.outputs_lifestyle_d11); end
  def test_outputs_lifestyle_e11; assert_in_delta(0.38328678517802006, worksheet.outputs_lifestyle_e11, 0.002); end
  def test_outputs_lifestyle_f11; assert_in_delta(0.4514331218983439, worksheet.outputs_lifestyle_f11, 0.002); end
  def test_outputs_lifestyle_g11; assert_in_delta(0.4159065326321141, worksheet.outputs_lifestyle_g11, 0.002); end
  def test_outputs_lifestyle_h11; assert_in_delta(0.5123468622598915, worksheet.outputs_lifestyle_h11, 0.002); end
  def test_outputs_lifestyle_i11; assert_in_delta(0.5686837301502454, worksheet.outputs_lifestyle_i11, 0.002); end
  def test_outputs_lifestyle_j11; assert_in_delta(0.531295019157935, worksheet.outputs_lifestyle_j11, 0.002); end
  def test_outputs_lifestyle_d13; assert_equal("Number of appliances per household", worksheet.outputs_lifestyle_d13); end
  def test_outputs_lifestyle_e13; assert_in_epsilon(5.958364024436915, worksheet.outputs_lifestyle_e13, 0.002); end
  def test_outputs_lifestyle_f13; assert_in_epsilon(3.4791820122184576, worksheet.outputs_lifestyle_f13, 0.002); end
  def test_outputs_lifestyle_g13; assert_in_epsilon(5.054404480386185, worksheet.outputs_lifestyle_g13, 0.002); end
  def test_outputs_lifestyle_h13; assert_in_epsilon(9.462977867093672, worksheet.outputs_lifestyle_h13, 0.002); end
  def test_outputs_lifestyle_i13; assert_in_epsilon(7.510030613072004, worksheet.outputs_lifestyle_i13, 0.002); end
  def test_outputs_lifestyle_j13; assert_in_epsilon(8.991160221022334, worksheet.outputs_lifestyle_j13, 0.002); end
  def test_outputs_lifestyle_d14; assert_equal("Building temperature in warm months", worksheet.outputs_lifestyle_d14); end
  def test_outputs_lifestyle_e14; assert_in_epsilon(26.5, worksheet.outputs_lifestyle_e14, 0.002); end
  def test_outputs_lifestyle_f14; assert_in_epsilon(29.0, worksheet.outputs_lifestyle_f14, 0.002); end
  def test_outputs_lifestyle_g14; assert_in_epsilon(27.411550200424607, worksheet.outputs_lifestyle_g14, 0.002); end
  def test_outputs_lifestyle_h14; assert_in_epsilon(24.6, worksheet.outputs_lifestyle_h14, 0.002); end
  def test_outputs_lifestyle_i14; assert_in_epsilon(24.6, worksheet.outputs_lifestyle_i14, 0.002); end
  def test_outputs_lifestyle_j14; assert_in_epsilon(24.6, worksheet.outputs_lifestyle_j14, 0.002); end
  def test_outputs_lifestyle_d15; assert_equal("Building temp in cold months", worksheet.outputs_lifestyle_d15); end
  def test_outputs_lifestyle_e15; assert_in_epsilon(17.5, worksheet.outputs_lifestyle_e15, 0.002); end
  def test_outputs_lifestyle_f15; assert_in_epsilon(13.0, worksheet.outputs_lifestyle_f15, 0.002); end
  def test_outputs_lifestyle_g15; assert_in_epsilon(15.8592096392357, worksheet.outputs_lifestyle_g15, 0.002); end
  def test_outputs_lifestyle_h15; assert_in_epsilon(19.4, worksheet.outputs_lifestyle_h15, 0.002); end
  def test_outputs_lifestyle_i15; assert_in_epsilon(16.4, worksheet.outputs_lifestyle_i15, 0.002); end
  def test_outputs_lifestyle_j15; assert_in_epsilon(18.675222136543013, worksheet.outputs_lifestyle_j15, 0.002); end
  def test_outputs_lifestyle_d17; assert_equal("Building insulation (GW / (M ha*℃)", worksheet.outputs_lifestyle_d17); end
  def test_outputs_lifestyle_e17; assert_in_epsilon(16.9, worksheet.outputs_lifestyle_e17, 0.002); end
  def test_outputs_lifestyle_f17; assert_in_epsilon(18.700000000000003, worksheet.outputs_lifestyle_f17, 0.002); end
  def test_outputs_lifestyle_g17; assert_in_epsilon(17.55631614430572, worksheet.outputs_lifestyle_g17, 0.002); end
  def test_outputs_lifestyle_h17; assert_in_epsilon(11.4, worksheet.outputs_lifestyle_h17, 0.002); end
  def test_outputs_lifestyle_i17; assert_in_epsilon(11.4, worksheet.outputs_lifestyle_i17, 0.002); end
  def test_outputs_lifestyle_j17; assert_in_epsilon(11.399999999999999, worksheet.outputs_lifestyle_j17, 0.002); end
  def test_outputs_lifestyle_d18; assert_equal("Building size (in metres squared)", worksheet.outputs_lifestyle_d18); end
  def test_outputs_lifestyle_e18; assert_in_epsilon(92.0, worksheet.outputs_lifestyle_e18, 0.002); end
  def test_outputs_lifestyle_f18; assert_in_epsilon(78.0, worksheet.outputs_lifestyle_f18, 0.002); end
  def test_outputs_lifestyle_g18; assert_in_epsilon(86.89531887762217, worksheet.outputs_lifestyle_g18, 0.002); end
  def test_outputs_lifestyle_h18; assert_in_epsilon(103.99999999999999, worksheet.outputs_lifestyle_h18, 0.002); end
  def test_outputs_lifestyle_i18; assert_in_epsilon(94.0, worksheet.outputs_lifestyle_i18, 0.002); end
  def test_outputs_lifestyle_j18; assert_in_epsilon(101.5840737884767, worksheet.outputs_lifestyle_j18, 0.002); end
  def test_outputs_lifestyle_e23; assert_equal("webtool.lifestyle", worksheet.outputs_lifestyle_e23); end
  def test_outputs_lifestyle_h23; assert_equal("User’s pathway", worksheet.outputs_lifestyle_h23); end
  def test_outputs_lifestyle_e25; assert_equal("2011", worksheet.outputs_lifestyle_e25); end
  def test_outputs_lifestyle_f25; assert_equal("2011", worksheet.outputs_lifestyle_f25); end
  def test_outputs_lifestyle_g25; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_g25); end
  def test_outputs_lifestyle_h25; assert_equal("2050", worksheet.outputs_lifestyle_h25); end
  def test_outputs_lifestyle_i25; assert_equal("2050", worksheet.outputs_lifestyle_i25); end
  def test_outputs_lifestyle_e26; assert_equal("Urban", worksheet.outputs_lifestyle_e26); end
  def test_outputs_lifestyle_f26; assert_equal("Rural", worksheet.outputs_lifestyle_f26); end
  def test_outputs_lifestyle_h26; assert_equal("Urban", worksheet.outputs_lifestyle_h26); end
  def test_outputs_lifestyle_i26; assert_equal("Rural", worksheet.outputs_lifestyle_i26); end
  def test_outputs_lifestyle_j26; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_j26); end
  def test_outputs_lifestyle_d27; assert_equal("Passenger km (millions)", worksheet.outputs_lifestyle_d27); end
  def test_outputs_lifestyle_e27; assert_in_epsilon(33365814.006759763, worksheet.outputs_lifestyle_e27, 0.002); end
  def test_outputs_lifestyle_f27; assert_in_epsilon(18849796.265677366, worksheet.outputs_lifestyle_f27, 0.002); end
  def test_outputs_lifestyle_g27; assert_in_epsilon(52215610.272437125, worksheet.outputs_lifestyle_g27, 0.002); end
  def test_outputs_lifestyle_h27; assert_in_epsilon(77419011.91289854, worksheet.outputs_lifestyle_h27, 0.002); end
  def test_outputs_lifestyle_i27; assert_in_epsilon(30001131.586422678, worksheet.outputs_lifestyle_i27, 0.002); end
  def test_outputs_lifestyle_j27; assert_in_epsilon(107420143.49932122, worksheet.outputs_lifestyle_j27, 0.002); end
  def test_outputs_lifestyle_d28; assert_equal("Total households", worksheet.outputs_lifestyle_d28); end
  def test_outputs_lifestyle_e28; assert_in_epsilon(1452719862.6209612, worksheet.outputs_lifestyle_e28, 0.002); end
  def test_outputs_lifestyle_f28; assert_in_epsilon(833660013.8618993, worksheet.outputs_lifestyle_f28, 0.002); end
  def test_outputs_lifestyle_g28; assert_in_epsilon(2286379876.4828606, worksheet.outputs_lifestyle_g28, 0.002); end
  def test_outputs_lifestyle_h28; assert_in_epsilon(2881187074.6996784, worksheet.outputs_lifestyle_h28, 0.002); end
  def test_outputs_lifestyle_i28; assert_in_epsilon(917809553.0459162, worksheet.outputs_lifestyle_i28, 0.002); end
  def test_outputs_lifestyle_j28; assert_in_epsilon(3798996627.7455945, worksheet.outputs_lifestyle_j28, 0.002); end
  def test_outputs_lifestyle_d29; assert_equal("% of households in urban/rural areas", worksheet.outputs_lifestyle_d29); end
  def test_outputs_lifestyle_e29; assert_in_delta(0.6353799198301556, worksheet.outputs_lifestyle_e29, 0.002); end
  def test_outputs_lifestyle_f29; assert_in_delta(0.36462008016984426, worksheet.outputs_lifestyle_f29, 0.002); end
  def test_outputs_lifestyle_g29; assert_in_delta(0.9999999999999999, worksheet.outputs_lifestyle_g29, 0.002); end
  def test_outputs_lifestyle_h29; assert_in_delta(0.7584073788476712, worksheet.outputs_lifestyle_h29, 0.002); end
  def test_outputs_lifestyle_i29; assert_in_delta(0.24159262115232882, worksheet.outputs_lifestyle_i29, 0.002); end
  def test_outputs_lifestyle_j29; assert_in_delta(1.0, worksheet.outputs_lifestyle_j29, 0.002); end
  def test_outputs_lifestyle_d30; assert_equal("Total population", worksheet.outputs_lifestyle_d30); end
  def test_outputs_lifestyle_e30; assert_in_epsilon(3631799656.552403, worksheet.outputs_lifestyle_e30, 0.002); end
  def test_outputs_lifestyle_f30; assert_in_epsilon(3334640055.447597, worksheet.outputs_lifestyle_f30, 0.002); end
  def test_outputs_lifestyle_g30; assert_in_epsilon(6966439712.0, worksheet.outputs_lifestyle_g30, 0.002); end
  def test_outputs_lifestyle_h30; assert_in_epsilon(6338611564.3392935, worksheet.outputs_lifestyle_h30, 0.002); end
  def test_outputs_lifestyle_i30; assert_in_epsilon(3212333435.6607065, worksheet.outputs_lifestyle_i30, 0.002); end
  def test_outputs_lifestyle_j30; assert_in_epsilon(9550945000.0, worksheet.outputs_lifestyle_j30, 0.002); end
  def test_outputs_lifestyle_d31; assert_equal("% of population in urban/rural areas", worksheet.outputs_lifestyle_d31); end
  def test_outputs_lifestyle_e31; assert_in_delta(0.5213279389034929, worksheet.outputs_lifestyle_e31, 0.002); end
  def test_outputs_lifestyle_f31; assert_in_delta(0.47867206109650706, worksheet.outputs_lifestyle_f31, 0.002); end
  def test_outputs_lifestyle_g31; assert_in_delta(1.0, worksheet.outputs_lifestyle_g31, 0.002); end
  def test_outputs_lifestyle_h31; assert_in_delta(0.663663288223238, worksheet.outputs_lifestyle_h31, 0.002); end
  def test_outputs_lifestyle_i31; assert_in_delta(0.33633671177676205, worksheet.outputs_lifestyle_i31, 0.002); end
  def test_outputs_lifestyle_j31; assert_in_delta(1.0, worksheet.outputs_lifestyle_j31, 0.002); end
  def test_front_page_y4; assert_equal("3.73.0", worksheet.front_page_y4); end
  def test_outputs_energy_flows_c8; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c8); end
  def test_outputs_energy_flows_d8; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d8); end
  def test_outputs_energy_flows_e8; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e8); end
  def test_outputs_energy_flows_f8; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f8); end
  def test_outputs_energy_flows_g8; assert_equal("Technology code", worksheet.outputs_energy_flows_g8); end
  def test_outputs_energy_flows_h8; assert_equal("Technology description", worksheet.outputs_energy_flows_h8); end
  def test_outputs_energy_flows_i8; assert_equal("Energy code", worksheet.outputs_energy_flows_i8); end
  def test_outputs_energy_flows_j8; assert_equal("Description", worksheet.outputs_energy_flows_j8); end
  def test_outputs_energy_flows_k8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k8); end
  def test_outputs_energy_flows_l8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l8); end
  def test_outputs_energy_flows_m8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m8); end
  def test_outputs_energy_flows_v8; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v8, 0.002); end
  def test_outputs_energy_flows_w8; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w8, 0.002); end
  def test_outputs_energy_flows_x8; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x8, 0.002); end
  def test_outputs_energy_flows_y8; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y8, 0.002); end
  def test_outputs_energy_flows_z8; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z8, 0.002); end
  def test_outputs_energy_flows_aa8; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa8, 0.002); end
  def test_outputs_energy_flows_ab8; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab8, 0.002); end
  def test_outputs_energy_flows_ac8; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac8, 0.002); end
  def test_outputs_energy_flows_ad8; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad8, 0.002); end
  def test_outputs_energy_flows_c10; assert_equal("R.01", worksheet.outputs_energy_flows_c10); end
  def test_outputs_energy_flows_d10; assert_equal("Global Solar", worksheet.outputs_energy_flows_d10); end
  def test_outputs_energy_flows_e10; assert_equal("n/a", worksheet.outputs_energy_flows_e10); end
  def test_outputs_energy_flows_f10; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f10); end
  def test_outputs_energy_flows_g10; assert_equal("n/a", worksheet.outputs_energy_flows_g10); end
  def test_outputs_energy_flows_h10; assert_equal("solar", worksheet.outputs_energy_flows_h10); end
  def test_outputs_energy_flows_i10; assert_equal("E.02", worksheet.outputs_energy_flows_i10); end
  def test_outputs_energy_flows_j10; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j10); end
  def test_outputs_energy_flows_v10; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v10, 0.002); end
  def test_outputs_energy_flows_w10; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w10, 0.002); end
  def test_outputs_energy_flows_x10; assert_in_delta(0.8540685748799999, worksheet.outputs_energy_flows_x10, 0.002); end
  def test_outputs_energy_flows_y10; assert_in_delta(0.9525630002399997, worksheet.outputs_energy_flows_y10, 0.002); end
  def test_outputs_energy_flows_z10; assert_in_epsilon(1.2794460883199998, worksheet.outputs_energy_flows_z10, 0.002); end
  def test_outputs_energy_flows_aa10; assert_in_epsilon(1.4798620943999996, worksheet.outputs_energy_flows_aa10, 0.002); end
  def test_outputs_energy_flows_ab10; assert_in_epsilon(1.6179707750399994, worksheet.outputs_energy_flows_ab10, 0.002); end
  def test_outputs_energy_flows_ac10; assert_in_epsilon(2.7839641356, worksheet.outputs_energy_flows_ac10, 0.002); end
  def test_outputs_energy_flows_ad10; assert_in_epsilon(3.8454671267999982, worksheet.outputs_energy_flows_ad10, 0.002); end
  def test_outputs_energy_flows_c12; assert_equal("R.01", worksheet.outputs_energy_flows_c12); end
  def test_outputs_energy_flows_d12; assert_equal("Global Solar", worksheet.outputs_energy_flows_d12); end
  def test_outputs_energy_flows_e12; assert_equal("L.01", worksheet.outputs_energy_flows_e12); end
  def test_outputs_energy_flows_f12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f12); end
  def test_outputs_energy_flows_g12; assert_equal("n/a", worksheet.outputs_energy_flows_g12); end
  def test_outputs_energy_flows_h12; assert_equal("solar", worksheet.outputs_energy_flows_h12); end
  def test_outputs_energy_flows_i12; assert_equal("L.01", worksheet.outputs_energy_flows_i12); end
  def test_outputs_energy_flows_j12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j12); end
  def test_outputs_energy_flows_v12; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v12, 0.002); end
  def test_outputs_energy_flows_w12; assert_in_delta(0.10222882078475562, worksheet.outputs_energy_flows_w12, 0.002); end
  def test_outputs_energy_flows_x12; assert_in_delta(0.6496021227566944, worksheet.outputs_energy_flows_x12, 0.002); end
  def test_outputs_energy_flows_y12; assert_in_delta(0.9377327147182917, worksheet.outputs_energy_flows_y12, 0.002); end
  def test_outputs_energy_flows_z12; assert_in_epsilon(1.2399989497774486, worksheet.outputs_energy_flows_z12, 0.002); end
  def test_outputs_energy_flows_aa12; assert_in_epsilon(1.4151415461711485, worksheet.outputs_energy_flows_aa12, 0.002); end
  def test_outputs_energy_flows_ab12; assert_in_epsilon(1.3516736881434415, worksheet.outputs_energy_flows_ab12, 0.002); end
  def test_outputs_energy_flows_ac12; assert_in_epsilon(2.1019364453115243, worksheet.outputs_energy_flows_ac12, 0.002); end
  def test_outputs_energy_flows_ad12; assert_in_epsilon(2.6089339951097914, worksheet.outputs_energy_flows_ad12, 0.002); end
  def test_outputs_energy_flows_c14; assert_equal("R.01", worksheet.outputs_energy_flows_c14); end
  def test_outputs_energy_flows_d14; assert_equal("Global Solar", worksheet.outputs_energy_flows_d14); end
  def test_outputs_energy_flows_e14; assert_equal("N/A", worksheet.outputs_energy_flows_e14); end
  def test_outputs_energy_flows_f14; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f14); end
  def test_outputs_energy_flows_g14; assert_equal("n/a", worksheet.outputs_energy_flows_g14); end
  def test_outputs_energy_flows_h14; assert_equal("Global buildings", worksheet.outputs_energy_flows_h14); end
  def test_outputs_energy_flows_i14; assert_equal("N/A", worksheet.outputs_energy_flows_i14); end
  def test_outputs_energy_flows_j14; assert_equal("Heating, cooling and hot water", worksheet.outputs_energy_flows_j14); end
  def test_outputs_energy_flows_v14; assert_in_epsilon(1.402397457347961, worksheet.outputs_energy_flows_v14, 0.002); end
  def test_outputs_energy_flows_w14; assert_in_epsilon(1.4922285947692704, worksheet.outputs_energy_flows_w14, 0.002); end
  def test_outputs_energy_flows_x14; assert_in_epsilon(1.8188556810669991, worksheet.outputs_energy_flows_x14, 0.002); end
  def test_outputs_energy_flows_y14; assert_in_epsilon(2.174449723030273, worksheet.outputs_energy_flows_y14, 0.002); end
  def test_outputs_energy_flows_z14; assert_in_epsilon(2.551292566471683, worksheet.outputs_energy_flows_z14, 0.002); end
  def test_outputs_energy_flows_aa14; assert_in_epsilon(2.937542448524272, worksheet.outputs_energy_flows_aa14, 0.002); end
  def test_outputs_energy_flows_ab14; assert_in_epsilon(3.3409309273770154, worksheet.outputs_energy_flows_ab14, 0.002); end
  def test_outputs_energy_flows_ac14; assert_in_epsilon(3.7471843361414683, worksheet.outputs_energy_flows_ac14, 0.002); end
  def test_outputs_energy_flows_ad14; assert_in_epsilon(4.163835550881484, worksheet.outputs_energy_flows_ad14, 0.002); end
  def test_outputs_energy_flows_c16; assert_equal("R.02", worksheet.outputs_energy_flows_c16); end
  def test_outputs_energy_flows_d16; assert_equal("Global Wind", worksheet.outputs_energy_flows_d16); end
  def test_outputs_energy_flows_e16; assert_equal("n/a", worksheet.outputs_energy_flows_e16); end
  def test_outputs_energy_flows_f16; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f16); end
  def test_outputs_energy_flows_h16; assert_equal("wind", worksheet.outputs_energy_flows_h16); end
  def test_outputs_energy_flows_i16; assert_equal("E.02", worksheet.outputs_energy_flows_i16); end
  def test_outputs_energy_flows_j16; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j16); end
  def test_outputs_energy_flows_v16; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v16, 0.002); end
  def test_outputs_energy_flows_w16; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w16, 0.002); end
  def test_outputs_energy_flows_x16; assert_in_epsilon(2.9258313263999995, worksheet.outputs_energy_flows_x16, 0.002); end
  def test_outputs_energy_flows_y16; assert_in_epsilon(3.1616928287999997, worksheet.outputs_energy_flows_y16, 0.002); end
  def test_outputs_energy_flows_z16; assert_in_epsilon(2.8244683152, worksheet.outputs_energy_flows_z16, 0.002); end
  def test_outputs_energy_flows_aa16; assert_in_epsilon(1.8673263071999997, worksheet.outputs_energy_flows_aa16, 0.002); end
  def test_outputs_energy_flows_ab16; assert_in_epsilon(2.5776247679999993, worksheet.outputs_energy_flows_ab16, 0.002); end
  def test_outputs_energy_flows_ac16; assert_in_epsilon(3.7875431519999996, worksheet.outputs_energy_flows_ac16, 0.002); end
  def test_outputs_energy_flows_ad16; assert_in_epsilon(4.674311711999999, worksheet.outputs_energy_flows_ad16, 0.002); end
  def test_outputs_energy_flows_c18; assert_equal("R.03", worksheet.outputs_energy_flows_c18); end
  def test_outputs_energy_flows_d18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_d18); end
  def test_outputs_energy_flows_e18; assert_equal("n/a", worksheet.outputs_energy_flows_e18); end
  def test_outputs_energy_flows_f18; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f18); end
  def test_outputs_energy_flows_g18; assert_equal("tidal.elec", worksheet.outputs_energy_flows_g18); end
  def test_outputs_energy_flows_h18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_h18); end
  def test_outputs_energy_flows_i18; assert_equal("E.02", worksheet.outputs_energy_flows_i18); end
  def test_outputs_energy_flows_j18; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j18); end
  def test_outputs_energy_flows_v18; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v18, 0.002); end
  def test_outputs_energy_flows_w18; assert_in_delta(0.003786912, worksheet.outputs_energy_flows_w18, 0.002); end
  def test_outputs_energy_flows_x18; assert_in_delta(0.0049229856, worksheet.outputs_energy_flows_x18, 0.002); end
  def test_outputs_energy_flows_y18; assert_in_delta(0.011991888000000001, worksheet.outputs_energy_flows_y18, 0.002); end
  def test_outputs_energy_flows_z18; assert_in_delta(0.024457140000000002, worksheet.outputs_energy_flows_z18, 0.002); end
  def test_outputs_energy_flows_aa18; assert_in_delta(0.03629124, worksheet.outputs_energy_flows_aa18, 0.002); end
  def test_outputs_energy_flows_ab18; assert_in_delta(0.06627096, worksheet.outputs_energy_flows_ab18, 0.002); end
  def test_outputs_energy_flows_ac18; assert_in_delta(0.07952515200000002, worksheet.outputs_energy_flows_ac18, 0.002); end
  def test_outputs_energy_flows_ad18; assert_in_delta(0.09940644000000001, worksheet.outputs_energy_flows_ad18, 0.002); end
  def test_outputs_energy_flows_c20; assert_equal("R.04", worksheet.outputs_energy_flows_c20); end
  def test_outputs_energy_flows_d20; assert_equal("Global Wave", worksheet.outputs_energy_flows_d20); end
  def test_outputs_energy_flows_e20; assert_equal("n/a", worksheet.outputs_energy_flows_e20); end
  def test_outputs_energy_flows_f20; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f20); end
  def test_outputs_energy_flows_g20; assert_equal("wave.elec", worksheet.outputs_energy_flows_g20); end
  def test_outputs_energy_flows_h20; assert_equal("Global Wave", worksheet.outputs_energy_flows_h20); end
  def test_outputs_energy_flows_i20; assert_equal("E.02", worksheet.outputs_energy_flows_i20); end
  def test_outputs_energy_flows_j20; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j20); end
  def test_outputs_energy_flows_v20; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v20||0), 0.002); end
  def test_outputs_energy_flows_w20; assert_in_delta(0.00037869119999999997, worksheet.outputs_energy_flows_w20, 0.002); end
  def test_outputs_energy_flows_x20; assert_in_delta(0.00140115744, worksheet.outputs_energy_flows_x20, 0.002); end
  def test_outputs_energy_flows_y20; assert_in_delta(0.011802542400000003, worksheet.outputs_energy_flows_y20, 0.002); end
  def test_outputs_energy_flows_z20; assert_in_delta(0.043391700000000005, worksheet.outputs_energy_flows_z20, 0.002); end
  def test_outputs_energy_flows_aa20; assert_in_delta(0.07494930000000001, worksheet.outputs_energy_flows_aa20, 0.002); end
  def test_outputs_energy_flows_ab20; assert_in_delta(0.11202948000000003, worksheet.outputs_energy_flows_ab20, 0.002); end
  def test_outputs_energy_flows_ac20; assert_in_delta(0.19123905600000002, worksheet.outputs_energy_flows_ac20, 0.002); end
  def test_outputs_energy_flows_ad20; assert_in_delta(0.22910817600000002, worksheet.outputs_energy_flows_ad20, 0.002); end
  def test_outputs_energy_flows_c22; assert_equal("R.05", worksheet.outputs_energy_flows_c22); end
  def test_outputs_energy_flows_d22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d22); end
  def test_outputs_energy_flows_e22; assert_equal("n/a", worksheet.outputs_energy_flows_e22); end
  def test_outputs_energy_flows_f22; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f22); end
  def test_outputs_energy_flows_g22; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g22); end
  def test_outputs_energy_flows_h22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h22); end
  def test_outputs_energy_flows_i22; assert_equal("E.02", worksheet.outputs_energy_flows_i22); end
  def test_outputs_energy_flows_j22; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j22); end
  def test_outputs_energy_flows_v22; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v22, 0.002); end
  def test_outputs_energy_flows_w22; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w22, 0.002); end
  def test_outputs_energy_flows_x22; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x22, 0.002); end
  def test_outputs_energy_flows_y22; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y22, 0.002); end
  def test_outputs_energy_flows_z22; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z22, 0.002); end
  def test_outputs_energy_flows_aa22; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa22, 0.002); end
  def test_outputs_energy_flows_ab22; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab22, 0.002); end
  def test_outputs_energy_flows_ac22; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac22, 0.002); end
  def test_outputs_energy_flows_ad22; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad22, 0.002); end
  def test_outputs_energy_flows_c24; assert_equal("R.05", worksheet.outputs_energy_flows_c24); end
  def test_outputs_energy_flows_d24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d24); end
  def test_outputs_energy_flows_e24; assert_equal("L.01", worksheet.outputs_energy_flows_e24); end
  def test_outputs_energy_flows_f24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f24); end
  def test_outputs_energy_flows_g24; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g24); end
  def test_outputs_energy_flows_h24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h24); end
  def test_outputs_energy_flows_i24; assert_equal("L.01", worksheet.outputs_energy_flows_i24); end
  def test_outputs_energy_flows_j24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j24); end
  def test_outputs_energy_flows_v24; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v24, 0.002); end
  def test_outputs_energy_flows_w24; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w24, 0.002); end
  def test_outputs_energy_flows_x24; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x24, 0.002); end
  def test_outputs_energy_flows_y24; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y24, 0.002); end
  def test_outputs_energy_flows_z24; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z24, 0.002); end
  def test_outputs_energy_flows_aa24; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa24, 0.002); end
  def test_outputs_energy_flows_ab24; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab24, 0.002); end
  def test_outputs_energy_flows_ac24; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac24, 0.002); end
  def test_outputs_energy_flows_ad24; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad24, 0.002); end
  def test_outputs_energy_flows_c26; assert_equal("R.06", worksheet.outputs_energy_flows_c26); end
  def test_outputs_energy_flows_d26; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d26); end
  def test_outputs_energy_flows_e26; assert_equal("n/a", worksheet.outputs_energy_flows_e26); end
  def test_outputs_energy_flows_f26; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f26); end
  def test_outputs_energy_flows_g26; assert_equal("hydro.elec", worksheet.outputs_energy_flows_g26); end
  def test_outputs_energy_flows_h26; assert_equal("Global Hydroelectric dam", worksheet.outputs_energy_flows_h26); end
  def test_outputs_energy_flows_i26; assert_equal("E.02", worksheet.outputs_energy_flows_i26); end
  def test_outputs_energy_flows_j26; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j26); end
  def test_outputs_energy_flows_v26; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v26, 0.002); end
  def test_outputs_energy_flows_w26; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w26, 0.002); end
  def test_outputs_energy_flows_x26; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x26, 0.002); end
  def test_outputs_energy_flows_y26; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y26, 0.002); end
  def test_outputs_energy_flows_z26; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z26, 0.002); end
  def test_outputs_energy_flows_aa26; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa26, 0.002); end
  def test_outputs_energy_flows_ab26; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab26, 0.002); end
  def test_outputs_energy_flows_ac26; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac26, 0.002); end
  def test_outputs_energy_flows_ad26; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad26, 0.002); end
  def test_outputs_energy_flows_c28; assert_equal("R.06", worksheet.outputs_energy_flows_c28); end
  def test_outputs_energy_flows_d28; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d28); end
  def test_outputs_energy_flows_e28; assert_equal("E.02", worksheet.outputs_energy_flows_e28); end
  def test_outputs_energy_flows_f28; assert_equal("Storage", worksheet.outputs_energy_flows_f28); end
  def test_outputs_energy_flows_g28; assert_equal("storage.elec", worksheet.outputs_energy_flows_g28); end
  def test_outputs_energy_flows_h28; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h28); end
  def test_outputs_energy_flows_i28; assert_equal("E.02", worksheet.outputs_energy_flows_i28); end
  def test_outputs_energy_flows_j28; assert_equal("Storage", worksheet.outputs_energy_flows_j28); end
  def test_outputs_energy_flows_v28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v28||0), 0.002); end
  def test_outputs_energy_flows_w28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w28||0), 0.002); end
  def test_outputs_energy_flows_x28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x28||0), 0.002); end
  def test_outputs_energy_flows_y28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y28||0), 0.002); end
  def test_outputs_energy_flows_z28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z28||0), 0.002); end
  def test_outputs_energy_flows_aa28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa28||0), 0.002); end
  def test_outputs_energy_flows_ab28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab28||0), 0.002); end
  def test_outputs_energy_flows_ac28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac28||0), 0.002); end
  def test_outputs_energy_flows_ad28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad28||0), 0.002); end
  def test_outputs_energy_flows_c30; assert_equal("R.07", worksheet.outputs_energy_flows_c30); end
  def test_outputs_energy_flows_d30; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_d30); end
  def test_outputs_energy_flows_e30; assert_equal("n/a", worksheet.outputs_energy_flows_e30); end
  def test_outputs_energy_flows_f30; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f30); end
  def test_outputs_energy_flows_g30; assert_equal("n/a", worksheet.outputs_energy_flows_g30); end
  def test_outputs_energy_flows_h30; assert_equal("Global buildings", worksheet.outputs_energy_flows_h30); end
  def test_outputs_energy_flows_v30; assert_in_epsilon(4.838497586627763, worksheet.outputs_energy_flows_v30, 0.002); end
  def test_outputs_energy_flows_w30; assert_in_epsilon(4.959634371282641, worksheet.outputs_energy_flows_w30, 0.002); end
  def test_outputs_energy_flows_x30; assert_in_epsilon(5.903603044430923, worksheet.outputs_energy_flows_x30, 0.002); end
  def test_outputs_energy_flows_y30; assert_in_epsilon(6.927936888455828, worksheet.outputs_energy_flows_y30, 0.002); end
  def test_outputs_energy_flows_z30; assert_in_epsilon(8.01722380337326, worksheet.outputs_energy_flows_z30, 0.002); end
  def test_outputs_energy_flows_aa30; assert_in_epsilon(9.144127512910707, worksheet.outputs_energy_flows_aa30, 0.002); end
  def test_outputs_energy_flows_ab30; assert_in_epsilon(10.317894221251617, worksheet.outputs_energy_flows_ab30, 0.002); end
  def test_outputs_energy_flows_ac30; assert_in_epsilon(11.504032063018018, worksheet.outputs_energy_flows_ac30, 0.002); end
  def test_outputs_energy_flows_ad30; assert_in_epsilon(12.715755364974981, worksheet.outputs_energy_flows_ad30, 0.002); end
  def test_outputs_energy_flows_d32; assert_equal("Forest residues", worksheet.outputs_energy_flows_d32); end
  def test_outputs_energy_flows_e32; assert_equal("Forest", worksheet.outputs_energy_flows_e32); end
  def test_outputs_energy_flows_f32; assert_equal("Solid", worksheet.outputs_energy_flows_f32); end
  def test_outputs_energy_flows_g32; assert_equal("Forest", worksheet.outputs_energy_flows_g32); end
  def test_outputs_energy_flows_h32; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h32); end
  def test_outputs_energy_flows_i32; assert_equal("C.01", worksheet.outputs_energy_flows_i32); end
  def test_outputs_energy_flows_j32; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j32); end
  def test_outputs_energy_flows_v32; assert_in_epsilon(19.257949917314463, worksheet.outputs_energy_flows_v32, 0.002); end
  def test_outputs_energy_flows_w32; assert_in_epsilon(19.067353581628904, worksheet.outputs_energy_flows_w32, 0.002); end
  def test_outputs_energy_flows_x32; assert_in_epsilon(19.031928338009877, worksheet.outputs_energy_flows_x32, 0.002); end
  def test_outputs_energy_flows_y32; assert_in_epsilon(19.061290027651687, worksheet.outputs_energy_flows_y32, 0.002); end
  def test_outputs_energy_flows_z32; assert_in_epsilon(19.040133550285915, worksheet.outputs_energy_flows_z32, 0.002); end
  def test_outputs_energy_flows_aa32; assert_in_epsilon(18.938850633989777, worksheet.outputs_energy_flows_aa32, 0.002); end
  def test_outputs_energy_flows_ab32; assert_in_epsilon(18.931067196766456, worksheet.outputs_energy_flows_ab32, 0.002); end
  def test_outputs_energy_flows_ac32; assert_in_epsilon(19.186297063245593, worksheet.outputs_energy_flows_ac32, 0.002); end
  def test_outputs_energy_flows_ad32; assert_in_epsilon(19.39113240044841, worksheet.outputs_energy_flows_ad32, 0.002); end
  def test_outputs_energy_flows_d34; assert_equal("Traditional biomass", worksheet.outputs_energy_flows_d34); end
  def test_outputs_energy_flows_e34; assert_equal("Forest", worksheet.outputs_energy_flows_e34); end
  def test_outputs_energy_flows_f34; assert_equal("Solid", worksheet.outputs_energy_flows_f34); end
  def test_outputs_energy_flows_g34; assert_equal("Forest", worksheet.outputs_energy_flows_g34); end
  def test_outputs_energy_flows_h34; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h34); end
  def test_outputs_energy_flows_i34; assert_equal("BM.13", worksheet.outputs_energy_flows_i34); end
  def test_outputs_energy_flows_j34; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_j34); end
  def test_outputs_energy_flows_v34; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_flows_v34, 0.002); end
  def test_outputs_energy_flows_w34; assert_in_epsilon(19.417905886918405, worksheet.outputs_energy_flows_w34, 0.002); end
  def test_outputs_energy_flows_x34; assert_in_epsilon(17.68118508208806, worksheet.outputs_energy_flows_x34, 0.002); end
  def test_outputs_energy_flows_y34; assert_in_epsilon(15.818153570726505, worksheet.outputs_energy_flows_y34, 0.002); end
  def test_outputs_energy_flows_z34; assert_in_epsilon(14.011196140535764, worksheet.outputs_energy_flows_z34, 0.002); end
  def test_outputs_energy_flows_aa34; assert_in_epsilon(12.59982524615583, worksheet.outputs_energy_flows_aa34, 0.002); end
  def test_outputs_energy_flows_ab34; assert_in_epsilon(11.236222032036094, worksheet.outputs_energy_flows_ab34, 0.002); end
  def test_outputs_energy_flows_ac34; assert_in_epsilon(10.314536999972441, worksheet.outputs_energy_flows_ac34, 0.002); end
  def test_outputs_energy_flows_ad34; assert_in_epsilon(9.430794806278676, worksheet.outputs_energy_flows_ad34, 0.002); end
  def test_outputs_energy_flows_d36; assert_equal("Biocrops", worksheet.outputs_energy_flows_d36); end
  def test_outputs_energy_flows_f36; assert_equal("Solid", worksheet.outputs_energy_flows_f36); end
  def test_outputs_energy_flows_g36; assert_equal("arable.bio", worksheet.outputs_energy_flows_g36); end
  def test_outputs_energy_flows_h36; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h36); end
  def test_outputs_energy_flows_i36; assert_equal("C.01", worksheet.outputs_energy_flows_i36); end
  def test_outputs_energy_flows_j36; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j36); end
  def test_outputs_energy_flows_v36; assert_in_epsilon(5.7, worksheet.outputs_energy_flows_v36, 0.002); end
  def test_outputs_energy_flows_w36; assert_in_epsilon(5.508803351371399, worksheet.outputs_energy_flows_w36, 0.002); end
  def test_outputs_energy_flows_x36; assert_in_epsilon(5.677646531496908, worksheet.outputs_energy_flows_x36, 0.002); end
  def test_outputs_energy_flows_y36; assert_in_epsilon(5.743907288162528, worksheet.outputs_energy_flows_y36, 0.002); end
  def test_outputs_energy_flows_z36; assert_in_epsilon(5.70135825586885, worksheet.outputs_energy_flows_z36, 0.002); end
  def test_outputs_energy_flows_aa36; assert_in_epsilon(5.54366345227636, worksheet.outputs_energy_flows_aa36, 0.002); end
  def test_outputs_energy_flows_ab36; assert_in_epsilon(5.264375899734492, worksheet.outputs_energy_flows_ab36, 0.002); end
  def test_outputs_energy_flows_ac36; assert_in_epsilon(4.856935184035776, worksheet.outputs_energy_flows_ac36, 0.002); end
  def test_outputs_energy_flows_ad36; assert_in_epsilon(5.95865596055596, worksheet.outputs_energy_flows_ad36, 0.002); end
  def test_outputs_energy_flows_d38; assert_equal("Biocrops", worksheet.outputs_energy_flows_d38); end
  def test_outputs_energy_flows_f38; assert_equal("Liquid", worksheet.outputs_energy_flows_f38); end
  def test_outputs_energy_flows_g38; assert_equal("arable.bio", worksheet.outputs_energy_flows_g38); end
  def test_outputs_energy_flows_h38; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h38); end
  def test_outputs_energy_flows_i38; assert_equal("C.02", worksheet.outputs_energy_flows_i38); end
  def test_outputs_energy_flows_j38; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j38); end
  def test_outputs_energy_flows_v38; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v38, 0.002); end
  def test_outputs_energy_flows_w38; assert_in_epsilon(4.310361671639778, worksheet.outputs_energy_flows_w38, 0.002); end
  def test_outputs_energy_flows_x38; assert_in_epsilon(5.404846698151712, worksheet.outputs_energy_flows_x38, 0.002); end
  def test_outputs_energy_flows_y38; assert_in_epsilon(6.64615821174558, worksheet.outputs_energy_flows_y38, 0.002); end
  def test_outputs_energy_flows_z38; assert_in_epsilon(8.04109983924148, worksheet.outputs_energy_flows_z38, 0.002); end
  def test_outputs_energy_flows_aa38; assert_in_epsilon(9.596593875369164, worksheet.outputs_energy_flows_aa38, 0.002); end
  def test_outputs_energy_flows_ab38; assert_in_epsilon(11.319683881335393, worksheet.outputs_energy_flows_ab38, 0.002); end
  def test_outputs_energy_flows_ac38; assert_in_epsilon(13.217537351975222, worksheet.outputs_energy_flows_ac38, 0.002); end
  def test_outputs_energy_flows_ad38; assert_in_epsilon(21.12614386015295, worksheet.outputs_energy_flows_ad38, 0.002); end
  def test_outputs_energy_flows_d40; assert_equal("Biocrops", worksheet.outputs_energy_flows_d40); end
  def test_outputs_energy_flows_f40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f40); end
  def test_outputs_energy_flows_g40; assert_equal("arable.bio", worksheet.outputs_energy_flows_g40); end
  def test_outputs_energy_flows_h40; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h40); end
  def test_outputs_energy_flows_i40; assert_equal("L.01", worksheet.outputs_energy_flows_i40); end
  def test_outputs_energy_flows_j40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j40); end
  def test_outputs_energy_flows_v40; assert_in_epsilon(2.375, worksheet.outputs_energy_flows_v40, 0.002); end
  def test_outputs_energy_flows_w40; assert_in_epsilon(2.299424720578566, worksheet.outputs_energy_flows_w40, 0.002); end
  def test_outputs_energy_flows_x40; assert_in_epsilon(2.3822181708590477, worksheet.outputs_energy_flows_x40, 0.002); end
  def test_outputs_energy_flows_y40; assert_in_epsilon(2.432405496914475, worksheet.outputs_energy_flows_y40, 0.002); end
  def test_outputs_energy_flows_z40; assert_in_epsilon(2.449562016953198, worksheet.outputs_energy_flows_z40, 0.002); end
  def test_outputs_energy_flows_aa40; assert_in_epsilon(2.433255641943031, worksheet.outputs_energy_flows_aa40, 0.002); end
  def test_outputs_energy_flows_ab40; assert_in_epsilon(2.38304671340887, worksheet.outputs_energy_flows_ab40, 0.002); end
  def test_outputs_energy_flows_ac40; assert_in_epsilon(2.2984878369493735, worksheet.outputs_energy_flows_ac40, 0.002); end
  def test_outputs_energy_flows_ad40; assert_in_epsilon(3.009422202300989, worksheet.outputs_energy_flows_ad40, 0.002); end
  def test_outputs_energy_flows_d42; assert_equal("Biocrops", worksheet.outputs_energy_flows_d42); end
  def test_outputs_energy_flows_f42; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f42); end
  def test_outputs_energy_flows_g42; assert_equal("arable.bio", worksheet.outputs_energy_flows_g42); end
  def test_outputs_energy_flows_h42; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h42); end
  def test_outputs_energy_flows_i42; assert_equal("O.01", worksheet.outputs_energy_flows_i42); end
  def test_outputs_energy_flows_j42; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j42); end
  def test_outputs_energy_flows_v42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v42||0), 0.002); end
  def test_outputs_energy_flows_w42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w42||0), 0.002); end
  def test_outputs_energy_flows_x42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x42||0), 0.002); end
  def test_outputs_energy_flows_y42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y42||0), 0.002); end
  def test_outputs_energy_flows_z42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z42||0), 0.002); end
  def test_outputs_energy_flows_aa42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa42||0), 0.002); end
  def test_outputs_energy_flows_ab42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab42||0), 0.002); end
  def test_outputs_energy_flows_ac42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac42||0), 0.002); end
  def test_outputs_energy_flows_ad42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad42||0), 0.002); end
  def test_outputs_energy_flows_c44; assert_equal("n/a", worksheet.outputs_energy_flows_c44); end
  def test_outputs_energy_flows_d44; assert_equal("Food waste", worksheet.outputs_energy_flows_d44); end
  def test_outputs_energy_flows_e44; assert_equal("n/a", worksheet.outputs_energy_flows_e44); end
  def test_outputs_energy_flows_f44; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f44); end
  def test_outputs_energy_flows_g44; assert_equal("Arable.food", worksheet.outputs_energy_flows_g44); end
  def test_outputs_energy_flows_h44; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_h44); end
  def test_outputs_energy_flows_i44; assert_equal("BM.09", worksheet.outputs_energy_flows_i44); end
  def test_outputs_energy_flows_j44; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j44); end
  def test_outputs_energy_flows_v44; assert_in_epsilon(4.559262495489626, worksheet.outputs_energy_flows_v44, 0.002); end
  def test_outputs_energy_flows_w44; assert_in_epsilon(4.849093394197546, worksheet.outputs_energy_flows_w44, 0.002); end
  def test_outputs_energy_flows_x44; assert_in_epsilon(5.11928243845304, worksheet.outputs_energy_flows_x44, 0.002); end
  def test_outputs_energy_flows_y44; assert_in_epsilon(5.382378727308698, worksheet.outputs_energy_flows_y44, 0.002); end
  def test_outputs_energy_flows_z44; assert_in_epsilon(5.659001672654465, worksheet.outputs_energy_flows_z44, 0.002); end
  def test_outputs_energy_flows_aa44; assert_in_epsilon(5.9580716386090335, worksheet.outputs_energy_flows_aa44, 0.002); end
  def test_outputs_energy_flows_ab44; assert_in_epsilon(6.246421082532084, worksheet.outputs_energy_flows_ab44, 0.002); end
  def test_outputs_energy_flows_ac44; assert_in_epsilon(6.484778064777477, worksheet.outputs_energy_flows_ac44, 0.002); end
  def test_outputs_energy_flows_ad44; assert_in_epsilon(6.687720956411852, worksheet.outputs_energy_flows_ad44, 0.002); end
  def test_outputs_energy_flows_c46; assert_equal("n/a ", worksheet.outputs_energy_flows_c46); end
  def test_outputs_energy_flows_d46; assert_equal("Waste from animals", worksheet.outputs_energy_flows_d46); end
  def test_outputs_energy_flows_e46; assert_equal("n/a", worksheet.outputs_energy_flows_e46); end
  def test_outputs_energy_flows_f46; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f46); end
  def test_outputs_energy_flows_g46; assert_equal("Pasture.food", worksheet.outputs_energy_flows_g46); end
  def test_outputs_energy_flows_h46; assert_equal("Global Pasture for animals", worksheet.outputs_energy_flows_h46); end
  def test_outputs_energy_flows_i46; assert_equal("BM.09", worksheet.outputs_energy_flows_i46); end
  def test_outputs_energy_flows_j46; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j46); end
  def test_outputs_energy_flows_v46; assert_in_delta(0.0010023132251759234, worksheet.outputs_energy_flows_v46, 0.002); end
  def test_outputs_energy_flows_w46; assert_in_delta(0.0014024810580054357, worksheet.outputs_energy_flows_w46, 0.002); end
  def test_outputs_energy_flows_x46; assert_in_delta(0.0029114457100579273, worksheet.outputs_energy_flows_x46, 0.002); end
  def test_outputs_energy_flows_y46; assert_in_delta(0.004404880583025515, worksheet.outputs_energy_flows_y46, 0.002); end
  def test_outputs_energy_flows_z46; assert_in_delta(0.005895901915767154, worksheet.outputs_energy_flows_z46, 0.002); end
  def test_outputs_energy_flows_aa46; assert_in_delta(0.007399466693510717, worksheet.outputs_energy_flows_aa46, 0.002); end
  def test_outputs_energy_flows_ab46; assert_in_delta(0.00885032042577728, worksheet.outputs_energy_flows_ab46, 0.002); end
  def test_outputs_energy_flows_ac46; assert_in_delta(0.010138474415540059, worksheet.outputs_energy_flows_ac46, 0.002); end
  def test_outputs_energy_flows_ad46; assert_in_delta(0.011262180930876425, worksheet.outputs_energy_flows_ad46, 0.002); end
  def test_outputs_energy_flows_c48; assert_equal("Q.01", worksheet.outputs_energy_flows_c48); end
  def test_outputs_energy_flows_d48; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d48); end
  def test_outputs_energy_flows_e48; assert_equal("CFF.01", worksheet.outputs_energy_flows_e48); end
  def test_outputs_energy_flows_f48; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_f48); end
  def test_outputs_energy_flows_g48; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g48); end
  def test_outputs_energy_flows_h48; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h48); end
  def test_outputs_energy_flows_v48; assert_in_epsilon(149.51758468763532, worksheet.outputs_energy_flows_v48, 0.002); end
  def test_outputs_energy_flows_w48; assert_in_epsilon(149.4147468276896, worksheet.outputs_energy_flows_w48, 0.002); end
  def test_outputs_energy_flows_x48; assert_in_epsilon(163.65457406584275, worksheet.outputs_energy_flows_x48, 0.002); end
  def test_outputs_energy_flows_y48; assert_in_epsilon(185.1556372021687, worksheet.outputs_energy_flows_y48, 0.002); end
  def test_outputs_energy_flows_z48; assert_in_epsilon(203.15895431916405, worksheet.outputs_energy_flows_z48, 0.002); end
  def test_outputs_energy_flows_aa48; assert_in_epsilon(217.48718013919728, worksheet.outputs_energy_flows_aa48, 0.002); end
  def test_outputs_energy_flows_ab48; assert_in_epsilon(227.8128896954942, worksheet.outputs_energy_flows_ab48, 0.002); end
  def test_outputs_energy_flows_ac48; assert_in_epsilon(226.19926327189722, worksheet.outputs_energy_flows_ac48, 0.002); end
  def test_outputs_energy_flows_ad48; assert_in_epsilon(225.57043564219083, worksheet.outputs_energy_flows_ad48, 0.002); end
  def test_outputs_energy_flows_c50; assert_equal("Q.01", worksheet.outputs_energy_flows_c50); end
  def test_outputs_energy_flows_d50; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d50); end
  def test_outputs_energy_flows_e50; assert_equal("L.02", worksheet.outputs_energy_flows_e50); end
  def test_outputs_energy_flows_f50; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f50); end
  def test_outputs_energy_flows_g50; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g50); end
  def test_outputs_energy_flows_h50; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h50); end
  def test_outputs_energy_flows_v50; assert_in_epsilon(26.385456121347403, worksheet.outputs_energy_flows_v50, 0.002); end
  def test_outputs_energy_flows_w50; assert_in_epsilon(26.36730826370993, worksheet.outputs_energy_flows_w50, 0.002); end
  def test_outputs_energy_flows_x50; assert_in_epsilon(28.880218952795786, worksheet.outputs_energy_flows_x50, 0.002); end
  def test_outputs_energy_flows_y50; assert_in_epsilon(32.67452421214742, worksheet.outputs_energy_flows_y50, 0.002); end
  def test_outputs_energy_flows_z50; assert_in_epsilon(33.07238791242207, worksheet.outputs_energy_flows_z50, 0.002); end
  def test_outputs_energy_flows_aa50; assert_in_epsilon(35.40488979010189, worksheet.outputs_energy_flows_aa50, 0.002); end
  def test_outputs_energy_flows_ab50; assert_in_epsilon(37.085819252754874, worksheet.outputs_energy_flows_ab50, 0.002); end
  def test_outputs_energy_flows_ac50; assert_in_epsilon(36.82313588147167, worksheet.outputs_energy_flows_ac50, 0.002); end
  def test_outputs_energy_flows_ad50; assert_in_epsilon(35.50645746219669, worksheet.outputs_energy_flows_ad50, 0.002); end
  def test_outputs_energy_flows_c52; assert_equal("Q.02", worksheet.outputs_energy_flows_c52); end
  def test_outputs_energy_flows_d52; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d52); end
  def test_outputs_energy_flows_e52; assert_equal("CFF.02", worksheet.outputs_energy_flows_e52); end
  def test_outputs_energy_flows_f52; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_f52); end
  def test_outputs_energy_flows_g52; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g52); end
  def test_outputs_energy_flows_h52; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h52); end
  def test_outputs_energy_flows_v52; assert_in_epsilon(165.21537850506272, worksheet.outputs_energy_flows_v52, 0.002); end
  def test_outputs_energy_flows_w52; assert_in_epsilon(172.52669568798694, worksheet.outputs_energy_flows_w52, 0.002); end
  def test_outputs_energy_flows_x52; assert_in_epsilon(198.74772695893085, worksheet.outputs_energy_flows_x52, 0.002); end
  def test_outputs_energy_flows_y52; assert_in_epsilon(215.46978773345077, worksheet.outputs_energy_flows_y52, 0.002); end
  def test_outputs_energy_flows_z52; assert_in_epsilon(235.95948579476567, worksheet.outputs_energy_flows_z52, 0.002); end
  def test_outputs_energy_flows_aa52; assert_in_epsilon(248.78637223603607, worksheet.outputs_energy_flows_aa52, 0.002); end
  def test_outputs_energy_flows_ab52; assert_in_epsilon(263.68568313581494, worksheet.outputs_energy_flows_ab52, 0.002); end
  def test_outputs_energy_flows_ac52; assert_in_epsilon(280.57352590542723, worksheet.outputs_energy_flows_ac52, 0.002); end
  def test_outputs_energy_flows_ad52; assert_in_epsilon(288.73695862651044, worksheet.outputs_energy_flows_ad52, 0.002); end
  def test_outputs_energy_flows_c54; assert_equal("Q.02", worksheet.outputs_energy_flows_c54); end
  def test_outputs_energy_flows_d54; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d54); end
  def test_outputs_energy_flows_e54; assert_equal("L.02", worksheet.outputs_energy_flows_e54); end
  def test_outputs_energy_flows_f54; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f54); end
  def test_outputs_energy_flows_g54; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g54); end
  def test_outputs_energy_flows_h54; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h54); end
  def test_outputs_energy_flows_v54; assert_in_epsilon(12.435566124036967, worksheet.outputs_energy_flows_v54, 0.002); end
  def test_outputs_energy_flows_w54; assert_in_epsilon(12.985880320601154, worksheet.outputs_energy_flows_w54, 0.002); end
  def test_outputs_energy_flows_x54; assert_in_epsilon(14.959506330242107, worksheet.outputs_energy_flows_x54, 0.002); end
  def test_outputs_energy_flows_y54; assert_in_epsilon(16.218156065958652, worksheet.outputs_energy_flows_y54, 0.002); end
  def test_outputs_energy_flows_z54; assert_in_epsilon(17.76039140390708, worksheet.outputs_energy_flows_z54, 0.002); end
  def test_outputs_energy_flows_aa54; assert_in_epsilon(15.31805688926761, worksheet.outputs_energy_flows_aa54, 0.002); end
  def test_outputs_energy_flows_ab54; assert_in_epsilon(16.23542422704594, worksheet.outputs_energy_flows_ab54, 0.002); end
  def test_outputs_energy_flows_ac54; assert_in_epsilon(17.275227709676017, worksheet.outputs_energy_flows_ac54, 0.002); end
  def test_outputs_energy_flows_ad54; assert_in_epsilon(17.777859448341417, worksheet.outputs_energy_flows_ad54, 0.002); end
  def test_outputs_energy_flows_c56; assert_equal("Q.03", worksheet.outputs_energy_flows_c56); end
  def test_outputs_energy_flows_d56; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d56); end
  def test_outputs_energy_flows_e56; assert_equal("CFF.03", worksheet.outputs_energy_flows_e56); end
  def test_outputs_energy_flows_f56; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_f56); end
  def test_outputs_energy_flows_g56; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g56); end
  def test_outputs_energy_flows_h56; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h56); end
  def test_outputs_energy_flows_v56; assert_in_epsilon(92.33988734218235, worksheet.outputs_energy_flows_v56, 0.002); end
  def test_outputs_energy_flows_w56; assert_in_epsilon(93.69286270675016, worksheet.outputs_energy_flows_w56, 0.002); end
  def test_outputs_energy_flows_x56; assert_in_epsilon(103.62245254777807, worksheet.outputs_energy_flows_x56, 0.002); end
  def test_outputs_energy_flows_y56; assert_in_epsilon(114.07666776320048, worksheet.outputs_energy_flows_y56, 0.002); end
  def test_outputs_energy_flows_z56; assert_in_epsilon(125.69885133202844, worksheet.outputs_energy_flows_z56, 0.002); end
  def test_outputs_energy_flows_aa56; assert_in_epsilon(138.19596780756405, worksheet.outputs_energy_flows_aa56, 0.002); end
  def test_outputs_energy_flows_ab56; assert_in_epsilon(153.25567039411786, worksheet.outputs_energy_flows_ab56, 0.002); end
  def test_outputs_energy_flows_ac56; assert_in_epsilon(169.67419864102735, worksheet.outputs_energy_flows_ac56, 0.002); end
  def test_outputs_energy_flows_ad56; assert_in_epsilon(187.36560875146574, worksheet.outputs_energy_flows_ad56, 0.002); end
  def test_outputs_energy_flows_c58; assert_equal("Q.03", worksheet.outputs_energy_flows_c58); end
  def test_outputs_energy_flows_d58; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d58); end
  def test_outputs_energy_flows_e58; assert_equal("L.02", worksheet.outputs_energy_flows_e58); end
  def test_outputs_energy_flows_f58; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f58); end
  def test_outputs_energy_flows_g58; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g58); end
  def test_outputs_energy_flows_h58; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h58); end
  def test_outputs_energy_flows_v58; assert_in_epsilon(27.582044271041482, worksheet.outputs_energy_flows_v58, 0.002); end
  def test_outputs_energy_flows_w58; assert_in_epsilon(27.98617976954874, worksheet.outputs_energy_flows_w58, 0.002); end
  def test_outputs_energy_flows_x58; assert_in_epsilon(30.952161150634993, worksheet.outputs_energy_flows_x58, 0.002); end
  def test_outputs_energy_flows_y58; assert_in_epsilon(33.691036593276834, worksheet.outputs_energy_flows_y58, 0.002); end
  def test_outputs_energy_flows_z58; assert_in_epsilon(34.631316183313956, worksheet.outputs_energy_flows_z58, 0.002); end
  def test_outputs_energy_flows_aa58; assert_in_epsilon(36.29389053531983, worksheet.outputs_energy_flows_aa58, 0.002); end
  def test_outputs_energy_flows_ab58; assert_in_epsilon(39.27657884472367, worksheet.outputs_energy_flows_ab58, 0.002); end
  def test_outputs_energy_flows_ac58; assert_in_epsilon(43.4843423652884, worksheet.outputs_energy_flows_ac58, 0.002); end
  def test_outputs_energy_flows_ad58; assert_in_epsilon(48.018321840827895, worksheet.outputs_energy_flows_ad58, 0.002); end
  def test_outputs_energy_flows_c60; assert_equal("CFF.01", worksheet.outputs_energy_flows_c60); end
  def test_outputs_energy_flows_d60; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d60); end
  def test_outputs_energy_flows_e60; assert_equal("FF.01", worksheet.outputs_energy_flows_e60); end
  def test_outputs_energy_flows_f60; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_f60); end
  def test_outputs_energy_flows_g60; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g60); end
  def test_outputs_energy_flows_h60; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h60); end
  def test_outputs_energy_flows_v60; assert_in_epsilon(142.04170545325354, worksheet.outputs_energy_flows_v60, 0.002); end
  def test_outputs_energy_flows_w60; assert_in_epsilon(141.94400948630513, worksheet.outputs_energy_flows_w60, 0.002); end
  def test_outputs_energy_flows_x60; assert_in_epsilon(152.52606302936545, worksheet.outputs_energy_flows_x60, 0.002); end
  def test_outputs_energy_flows_y60; assert_in_epsilon(171.08380877480388, worksheet.outputs_energy_flows_y60, 0.002); end
  def test_outputs_energy_flows_z60; assert_in_epsilon(185.68728424771595, worksheet.outputs_energy_flows_z60, 0.002); end
  def test_outputs_energy_flows_aa60; assert_in_epsilon(197.04338520611273, worksheet.outputs_energy_flows_aa60, 0.002); end
  def test_outputs_energy_flows_ab60; assert_in_epsilon(204.1203491671628, worksheet.outputs_energy_flows_ab60, 0.002); end
  def test_outputs_energy_flows_ac60; assert_in_epsilon(200.86494578544475, worksheet.outputs_energy_flows_ac60, 0.002); end
  def test_outputs_energy_flows_ad60; assert_in_epsilon(198.05084249384356, worksheet.outputs_energy_flows_ad60, 0.002); end
  def test_outputs_energy_flows_c62; assert_equal("CFF.01", worksheet.outputs_energy_flows_c62); end
  def test_outputs_energy_flows_d62; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d62); end
  def test_outputs_energy_flows_e62; assert_equal("L.02", worksheet.outputs_energy_flows_e62); end
  def test_outputs_energy_flows_f62; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f62); end
  def test_outputs_energy_flows_g62; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g62); end
  def test_outputs_energy_flows_h62; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h62); end
  def test_outputs_energy_flows_v62; assert_in_epsilon(7.475879234381779, worksheet.outputs_energy_flows_v62, 0.002); end
  def test_outputs_energy_flows_w62; assert_in_epsilon(7.470737341384478, worksheet.outputs_energy_flows_w62, 0.002); end
  def test_outputs_energy_flows_x62; assert_in_epsilon(11.128511036477306, worksheet.outputs_energy_flows_x62, 0.002); end
  def test_outputs_energy_flows_y62; assert_in_epsilon(14.071828427364807, worksheet.outputs_energy_flows_y62, 0.002); end
  def test_outputs_energy_flows_z62; assert_in_epsilon(17.471670071448102, worksheet.outputs_energy_flows_z62, 0.002); end
  def test_outputs_energy_flows_aa62; assert_in_epsilon(20.443794933084547, worksheet.outputs_energy_flows_aa62, 0.002); end
  def test_outputs_energy_flows_ab62; assert_in_epsilon(23.692540528331392, worksheet.outputs_energy_flows_ab62, 0.002); end
  def test_outputs_energy_flows_ac62; assert_in_epsilon(25.334317486452477, worksheet.outputs_energy_flows_ac62, 0.002); end
  def test_outputs_energy_flows_ad62; assert_in_epsilon(27.51959314834727, worksheet.outputs_energy_flows_ad62, 0.002); end
  def test_outputs_energy_flows_c64; assert_equal("CFF.02", worksheet.outputs_energy_flows_c64); end
  def test_outputs_energy_flows_d64; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d64); end
  def test_outputs_energy_flows_e64; assert_equal("FF.02", worksheet.outputs_energy_flows_e64); end
  def test_outputs_energy_flows_f64; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_f64); end
  def test_outputs_energy_flows_g64; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g64); end
  def test_outputs_energy_flows_h64; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h64); end
  def test_outputs_energy_flows_v64; assert_in_epsilon(153.1566023338517, worksheet.outputs_energy_flows_v64, 0.002); end
  def test_outputs_energy_flows_w64; assert_in_epsilon(160.44982698982787, worksheet.outputs_energy_flows_w64, 0.002); end
  def test_outputs_energy_flows_x64; assert_in_epsilon(184.83538607180571, worksheet.outputs_energy_flows_x64, 0.002); end
  def test_outputs_energy_flows_y64; assert_in_epsilon(200.38690259210924, worksheet.outputs_energy_flows_y64, 0.002); end
  def test_outputs_energy_flows_z64; assert_in_epsilon(219.44232178913208, worksheet.outputs_energy_flows_z64, 0.002); end
  def test_outputs_energy_flows_aa64; assert_in_epsilon(233.8591899018739, worksheet.outputs_energy_flows_aa64, 0.002); end
  def test_outputs_energy_flows_ab64; assert_in_epsilon(247.86454214766601, worksheet.outputs_energy_flows_ab64, 0.002); end
  def test_outputs_energy_flows_ac64; assert_in_epsilon(263.7391143511016, worksheet.outputs_energy_flows_ac64, 0.002); end
  def test_outputs_energy_flows_ad64; assert_in_epsilon(271.4127411089198, worksheet.outputs_energy_flows_ad64, 0.002); end
  def test_outputs_energy_flows_c66; assert_equal("CFF.02", worksheet.outputs_energy_flows_c66); end
  def test_outputs_energy_flows_d66; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d66); end
  def test_outputs_energy_flows_e66; assert_equal("L.02", worksheet.outputs_energy_flows_e66); end
  def test_outputs_energy_flows_f66; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f66); end
  def test_outputs_energy_flows_g66; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g66); end
  def test_outputs_energy_flows_h66; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h66); end
  def test_outputs_energy_flows_v66; assert_in_epsilon(12.058776171211008, worksheet.outputs_energy_flows_v66, 0.002); end
  def test_outputs_energy_flows_w66; assert_in_epsilon(12.076868698159075, worksheet.outputs_energy_flows_w66, 0.002); end
  def test_outputs_energy_flows_x66; assert_in_epsilon(13.91234088712514, worksheet.outputs_energy_flows_x66, 0.002); end
  def test_outputs_energy_flows_y66; assert_in_epsilon(15.082885141341535, worksheet.outputs_energy_flows_y66, 0.002); end
  def test_outputs_energy_flows_z66; assert_in_epsilon(16.51716400563359, worksheet.outputs_energy_flows_z66, 0.002); end
  def test_outputs_energy_flows_aa66; assert_in_epsilon(14.927182334162183, worksheet.outputs_energy_flows_aa66, 0.002); end
  def test_outputs_energy_flows_ab66; assert_in_epsilon(15.821140988148926, worksheet.outputs_energy_flows_ab66, 0.002); end
  def test_outputs_energy_flows_ac66; assert_in_epsilon(16.83441155432564, worksheet.outputs_energy_flows_ac66, 0.002); end
  def test_outputs_energy_flows_ad66; assert_in_epsilon(17.324217517590625, worksheet.outputs_energy_flows_ad66, 0.002); end
  def test_outputs_energy_flows_c68; assert_equal("CFF.03", worksheet.outputs_energy_flows_c68); end
  def test_outputs_energy_flows_d68; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d68); end
  def test_outputs_energy_flows_e68; assert_equal("FF.03", worksheet.outputs_energy_flows_e68); end
  def test_outputs_energy_flows_f68; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_f68); end
  def test_outputs_energy_flows_g68; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g68); end
  def test_outputs_energy_flows_h68; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h68); end
  def test_outputs_energy_flows_v68; assert_in_epsilon(90.4930895953387, worksheet.outputs_energy_flows_v68, 0.002); end
  def test_outputs_energy_flows_w68; assert_in_epsilon(91.81900545261516, worksheet.outputs_energy_flows_w68, 0.002); end
  def test_outputs_energy_flows_x68; assert_in_epsilon(101.5500034968225, worksheet.outputs_energy_flows_x68, 0.002); end
  def test_outputs_energy_flows_y68; assert_in_epsilon(111.79513440793646, worksheet.outputs_energy_flows_y68, 0.002); end
  def test_outputs_energy_flows_z68; assert_in_epsilon(123.18487430538786, worksheet.outputs_energy_flows_z68, 0.002); end
  def test_outputs_energy_flows_aa68; assert_in_epsilon(135.43204845141275, worksheet.outputs_energy_flows_aa68, 0.002); end
  def test_outputs_energy_flows_ab68; assert_in_epsilon(150.1905569862355, worksheet.outputs_energy_flows_ab68, 0.002); end
  def test_outputs_energy_flows_ac68; assert_in_epsilon(166.2807146682068, worksheet.outputs_energy_flows_ac68, 0.002); end
  def test_outputs_energy_flows_ad68; assert_in_epsilon(183.61829657643642, worksheet.outputs_energy_flows_ad68, 0.002); end
  def test_outputs_energy_flows_c70; assert_equal("CFF.03", worksheet.outputs_energy_flows_c70); end
  def test_outputs_energy_flows_d70; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d70); end
  def test_outputs_energy_flows_e70; assert_equal("L.02", worksheet.outputs_energy_flows_e70); end
  def test_outputs_energy_flows_f70; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f70); end
  def test_outputs_energy_flows_g70; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g70); end
  def test_outputs_energy_flows_h70; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h70); end
  def test_outputs_energy_flows_v70; assert_in_epsilon(1.8467977468436487, worksheet.outputs_energy_flows_v70, 0.002); end
  def test_outputs_energy_flows_w70; assert_in_epsilon(1.8738572541350038, worksheet.outputs_energy_flows_w70, 0.002); end
  def test_outputs_energy_flows_x70; assert_in_epsilon(2.0724490509555693, worksheet.outputs_energy_flows_x70, 0.002); end
  def test_outputs_energy_flows_y70; assert_in_epsilon(2.281533355264017, worksheet.outputs_energy_flows_y70, 0.002); end
  def test_outputs_energy_flows_z70; assert_in_epsilon(2.5139770266405748, worksheet.outputs_energy_flows_z70, 0.002); end
  def test_outputs_energy_flows_aa70; assert_in_epsilon(2.763919356151291, worksheet.outputs_energy_flows_aa70, 0.002); end
  def test_outputs_energy_flows_ab70; assert_in_epsilon(3.0651134078823645, worksheet.outputs_energy_flows_ab70, 0.002); end
  def test_outputs_energy_flows_ac70; assert_in_epsilon(3.3934839728205475, worksheet.outputs_energy_flows_ac70, 0.002); end
  def test_outputs_energy_flows_ad70; assert_in_epsilon(3.7473121750293217, worksheet.outputs_energy_flows_ad70, 0.002); end
  def test_outputs_energy_flows_c72; assert_equal("FF.01", worksheet.outputs_energy_flows_c72); end
  def test_outputs_energy_flows_d72; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d72); end
  def test_outputs_energy_flows_e72; assert_equal("n/a", worksheet.outputs_energy_flows_e72); end
  def test_outputs_energy_flows_f72; assert_equal("Solid", worksheet.outputs_energy_flows_f72); end
  def test_outputs_energy_flows_g72; assert_equal("coal.network", worksheet.outputs_energy_flows_g72); end
  def test_outputs_energy_flows_h72; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h72); end
  def test_outputs_energy_flows_i72; assert_equal("C.01", worksheet.outputs_energy_flows_i72); end
  def test_outputs_energy_flows_j72; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j72); end
  def test_outputs_energy_flows_v72; assert_in_epsilon(141.91912522146862, worksheet.outputs_energy_flows_v72, 0.002); end
  def test_outputs_energy_flows_w72; assert_in_epsilon(141.85308166096047, worksheet.outputs_energy_flows_w72, 0.002); end
  def test_outputs_energy_flows_x72; assert_in_epsilon(152.4587433466533, worksheet.outputs_energy_flows_x72, 0.002); end
  def test_outputs_energy_flows_y72; assert_in_epsilon(171.031787746243, worksheet.outputs_energy_flows_y72, 0.002); end
  def test_outputs_energy_flows_z72; assert_in_epsilon(185.64838625102186, worksheet.outputs_energy_flows_z72, 0.002); end
  def test_outputs_energy_flows_aa72; assert_in_epsilon(197.01495003837368, worksheet.outputs_energy_flows_aa72, 0.002); end
  def test_outputs_energy_flows_ab72; assert_in_epsilon(204.10005737617843, worksheet.outputs_energy_flows_ab72, 0.002); end
  def test_outputs_energy_flows_ac72; assert_in_epsilon(200.8511904314127, worksheet.outputs_energy_flows_ac72, 0.002); end
  def test_outputs_energy_flows_ad72; assert_in_epsilon(198.0415112590739, worksheet.outputs_energy_flows_ad72, 0.002); end
  def test_outputs_energy_flows_c74; assert_equal("FF.01", worksheet.outputs_energy_flows_c74); end
  def test_outputs_energy_flows_d74; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d74); end
  def test_outputs_energy_flows_e74; assert_equal("L.02", worksheet.outputs_energy_flows_e74); end
  def test_outputs_energy_flows_f74; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f74); end
  def test_outputs_energy_flows_g74; assert_equal("coal.network", worksheet.outputs_energy_flows_g74); end
  def test_outputs_energy_flows_h74; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h74); end
  def test_outputs_energy_flows_i74; assert_equal("C.01", worksheet.outputs_energy_flows_i74); end
  def test_outputs_energy_flows_j74; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j74); end
  def test_outputs_energy_flows_v74; assert_in_delta(0.12258023178491476, worksheet.outputs_energy_flows_v74, 0.002); end
  def test_outputs_energy_flows_w74; assert_in_delta(0.09092782534467565, worksheet.outputs_energy_flows_w74, 0.002); end
  def test_outputs_energy_flows_x74; assert_in_delta(0.06731968271214823, worksheet.outputs_energy_flows_x74, 0.002); end
  def test_outputs_energy_flows_y74; assert_in_delta(0.05202102856089727, worksheet.outputs_energy_flows_y74, 0.002); end
  def test_outputs_energy_flows_z74; assert_in_delta(0.03889799669408398, worksheet.outputs_energy_flows_z74, 0.002); end
  def test_outputs_energy_flows_aa74; assert_in_delta(0.028435167739038474, worksheet.outputs_energy_flows_aa74, 0.002); end
  def test_outputs_energy_flows_ab74; assert_in_delta(0.02029179098438556, worksheet.outputs_energy_flows_ab74, 0.002); end
  def test_outputs_energy_flows_ac74; assert_in_delta(0.013755354032052428, worksheet.outputs_energy_flows_ac74, 0.002); end
  def test_outputs_energy_flows_ad74; assert_in_delta(0.009331234769655203, worksheet.outputs_energy_flows_ad74, 0.002); end
  def test_outputs_energy_flows_c76; assert_equal("FF.02", worksheet.outputs_energy_flows_c76); end
  def test_outputs_energy_flows_d76; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d76); end
  def test_outputs_energy_flows_e76; assert_equal("n/a", worksheet.outputs_energy_flows_e76); end
  def test_outputs_energy_flows_f76; assert_equal("Liquid", worksheet.outputs_energy_flows_f76); end
  def test_outputs_energy_flows_g76; assert_equal("oil.network", worksheet.outputs_energy_flows_g76); end
  def test_outputs_energy_flows_h76; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h76); end
  def test_outputs_energy_flows_i76; assert_equal("C.02", worksheet.outputs_energy_flows_i76); end
  def test_outputs_energy_flows_j76; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j76); end
  def test_outputs_energy_flows_v76; assert_in_epsilon(152.87007489507437, worksheet.outputs_energy_flows_v76, 0.002); end
  def test_outputs_energy_flows_w76; assert_in_epsilon(160.16083753136314, worksheet.outputs_energy_flows_w76, 0.002); end
  def test_outputs_energy_flows_x76; assert_in_epsilon(184.5179059098779, worksheet.outputs_energy_flows_x76, 0.002); end
  def test_outputs_energy_flows_y76; assert_in_epsilon(200.05866535956633, worksheet.outputs_energy_flows_y76, 0.002); end
  def test_outputs_energy_flows_z76; assert_in_epsilon(219.0995348046125, worksheet.outputs_energy_flows_z76, 0.002); end
  def test_outputs_energy_flows_aa76; assert_in_epsilon(233.51081866087816, worksheet.outputs_energy_flows_aa76, 0.002); end
  def test_outputs_energy_flows_ab76; assert_in_epsilon(247.51242700880445, worksheet.outputs_energy_flows_ab76, 0.002); end
  def test_outputs_energy_flows_ac76; assert_in_epsilon(263.3818202135745, worksheet.outputs_energy_flows_ac76, 0.002); end
  def test_outputs_energy_flows_ad76; assert_in_epsilon(271.06210124653836, worksheet.outputs_energy_flows_ad76, 0.002); end
  def test_outputs_energy_flows_c78; assert_equal("FF.02", worksheet.outputs_energy_flows_c78); end
  def test_outputs_energy_flows_d78; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d78); end
  def test_outputs_energy_flows_e78; assert_equal("L.02", worksheet.outputs_energy_flows_e78); end
  def test_outputs_energy_flows_f78; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f78); end
  def test_outputs_energy_flows_g78; assert_equal("oil.network", worksheet.outputs_energy_flows_g78); end
  def test_outputs_energy_flows_h78; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h78); end
  def test_outputs_energy_flows_i78; assert_equal("C.02", worksheet.outputs_energy_flows_i78); end
  def test_outputs_energy_flows_j78; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j78); end
  def test_outputs_energy_flows_v78; assert_in_delta(0.2865274387773358, worksheet.outputs_energy_flows_v78, 0.002); end
  def test_outputs_energy_flows_w78; assert_in_delta(0.28898945846471696, worksheet.outputs_energy_flows_w78, 0.002); end
  def test_outputs_energy_flows_x78; assert_in_delta(0.31748016192782275, worksheet.outputs_energy_flows_x78, 0.002); end
  def test_outputs_energy_flows_y78; assert_in_delta(0.32823723254290077, worksheet.outputs_energy_flows_y78, 0.002); end
  def test_outputs_energy_flows_z78; assert_in_delta(0.3427869845195816, worksheet.outputs_energy_flows_z78, 0.002); end
  def test_outputs_energy_flows_aa78; assert_in_delta(0.3483712409957205, worksheet.outputs_energy_flows_aa78, 0.002); end
  def test_outputs_energy_flows_ab78; assert_in_delta(0.3521151388615574, worksheet.outputs_energy_flows_ab78, 0.002); end
  def test_outputs_energy_flows_ac78; assert_in_delta(0.3572941375271153, worksheet.outputs_energy_flows_ac78, 0.002); end
  def test_outputs_energy_flows_ad78; assert_in_delta(0.3506398623814541, worksheet.outputs_energy_flows_ad78, 0.002); end
  def test_outputs_energy_flows_c80; assert_equal("FF.03", worksheet.outputs_energy_flows_c80); end
  def test_outputs_energy_flows_d80; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d80); end
  def test_outputs_energy_flows_e80; assert_equal("n/a", worksheet.outputs_energy_flows_e80); end
  def test_outputs_energy_flows_f80; assert_equal("Gas", worksheet.outputs_energy_flows_f80); end
  def test_outputs_energy_flows_g80; assert_equal("gas.nework", worksheet.outputs_energy_flows_g80); end
  def test_outputs_energy_flows_h80; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h80); end
  def test_outputs_energy_flows_i80; assert_equal("C.03", worksheet.outputs_energy_flows_i80); end
  def test_outputs_energy_flows_j80; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j80); end
  def test_outputs_energy_flows_v80; assert_in_epsilon(89.90439561286566, worksheet.outputs_energy_flows_v80, 0.002); end
  def test_outputs_energy_flows_w80; assert_in_epsilon(91.21608319671552, worksheet.outputs_energy_flows_w80, 0.002); end
  def test_outputs_energy_flows_x80; assert_in_epsilon(100.87535662691576, worksheet.outputs_energy_flows_x80, 0.002); end
  def test_outputs_energy_flows_y80; assert_in_epsilon(111.04370721560258, worksheet.outputs_energy_flows_y80, 0.002); end
  def test_outputs_energy_flows_z80; assert_in_epsilon(122.34717446996677, worksheet.outputs_energy_flows_z80, 0.002); end
  def test_outputs_energy_flows_aa80; assert_in_epsilon(134.50025623129105, worksheet.outputs_energy_flows_aa80, 0.002); end
  def test_outputs_energy_flows_ab80; assert_in_epsilon(149.14510054077883, worksheet.outputs_energy_flows_ab80, 0.002); end
  def test_outputs_energy_flows_ac80; assert_in_epsilon(165.10967500818288, worksheet.outputs_energy_flows_ac80, 0.002); end
  def test_outputs_energy_flows_ad80; assert_in_epsilon(182.309985355605, worksheet.outputs_energy_flows_ad80, 0.002); end
  def test_outputs_energy_flows_c82; assert_equal("FF.03", worksheet.outputs_energy_flows_c82); end
  def test_outputs_energy_flows_d82; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d82); end
  def test_outputs_energy_flows_e82; assert_equal("L.02", worksheet.outputs_energy_flows_e82); end
  def test_outputs_energy_flows_f82; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f82); end
  def test_outputs_energy_flows_g82; assert_equal("gas.nework", worksheet.outputs_energy_flows_g82); end
  def test_outputs_energy_flows_h82; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h82); end
  def test_outputs_energy_flows_i82; assert_equal("C.03", worksheet.outputs_energy_flows_i82); end
  def test_outputs_energy_flows_j82; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j82); end
  def test_outputs_energy_flows_v82; assert_in_delta(0.5886939824730443, worksheet.outputs_energy_flows_v82, 0.002); end
  def test_outputs_energy_flows_w82; assert_in_delta(0.602922255899647, worksheet.outputs_energy_flows_w82, 0.002); end
  def test_outputs_energy_flows_x82; assert_in_delta(0.6746468699067438, worksheet.outputs_energy_flows_x82, 0.002); end
  def test_outputs_energy_flows_y82; assert_in_delta(0.7514271923338804, worksheet.outputs_energy_flows_y82, 0.002); end
  def test_outputs_energy_flows_z82; assert_in_delta(0.8376998354210938, worksheet.outputs_energy_flows_z82, 0.002); end
  def test_outputs_energy_flows_aa82; assert_in_delta(0.9317922201217005, worksheet.outputs_energy_flows_aa82, 0.002); end
  def test_outputs_energy_flows_ab82; assert_in_epsilon(1.0454564454566757, worksheet.outputs_energy_flows_ab82, 0.002); end
  def test_outputs_energy_flows_ac82; assert_in_epsilon(1.1710396600239346, worksheet.outputs_energy_flows_ac82, 0.002); end
  def test_outputs_energy_flows_ad82; assert_in_epsilon(1.3083112208314223, worksheet.outputs_energy_flows_ad82, 0.002); end
  def test_outputs_energy_flows_c84; assert_equal("n/a ", worksheet.outputs_energy_flows_c84); end
  def test_outputs_energy_flows_d84; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d84); end
  def test_outputs_energy_flows_e84; assert_equal("n/a ", worksheet.outputs_energy_flows_e84); end
  def test_outputs_energy_flows_f84; assert_equal("Solid", worksheet.outputs_energy_flows_f84); end
  def test_outputs_energy_flows_g84; assert_equal("n/a", worksheet.outputs_energy_flows_g84); end
  def test_outputs_energy_flows_h84; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h84); end
  def test_outputs_energy_flows_i84; assert_equal("C.01", worksheet.outputs_energy_flows_i84); end
  def test_outputs_energy_flows_j84; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j84); end
  def test_outputs_energy_flows_v84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v84||0), 0.002); end
  def test_outputs_energy_flows_w84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w84||0), 0.002); end
  def test_outputs_energy_flows_x84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x84||0), 0.002); end
  def test_outputs_energy_flows_y84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y84||0), 0.002); end
  def test_outputs_energy_flows_z84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z84||0), 0.002); end
  def test_outputs_energy_flows_aa84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa84||0), 0.002); end
  def test_outputs_energy_flows_ab84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab84||0), 0.002); end
  def test_outputs_energy_flows_ac84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac84||0), 0.002); end
  def test_outputs_energy_flows_ad84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad84||0), 0.002); end
  def test_outputs_energy_flows_c86; assert_equal("n/a ", worksheet.outputs_energy_flows_c86); end
  def test_outputs_energy_flows_d86; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d86); end
  def test_outputs_energy_flows_e86; assert_equal("n/a ", worksheet.outputs_energy_flows_e86); end
  def test_outputs_energy_flows_f86; assert_equal("Liquid", worksheet.outputs_energy_flows_f86); end
  def test_outputs_energy_flows_g86; assert_equal("n/a", worksheet.outputs_energy_flows_g86); end
  def test_outputs_energy_flows_h86; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h86); end
  def test_outputs_energy_flows_i86; assert_equal("C.02", worksheet.outputs_energy_flows_i86); end
  def test_outputs_energy_flows_j86; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j86); end
  def test_outputs_energy_flows_v86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v86||0), 0.002); end
  def test_outputs_energy_flows_w86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w86||0), 0.002); end
  def test_outputs_energy_flows_x86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x86||0), 0.002); end
  def test_outputs_energy_flows_y86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y86||0), 0.002); end
  def test_outputs_energy_flows_z86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z86||0), 0.002); end
  def test_outputs_energy_flows_aa86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa86||0), 0.002); end
  def test_outputs_energy_flows_ab86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab86||0), 0.002); end
  def test_outputs_energy_flows_ac86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac86||0), 0.002); end
  def test_outputs_energy_flows_ad86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad86||0), 0.002); end
  def test_outputs_energy_flows_c88; assert_equal("n/a ", worksheet.outputs_energy_flows_c88); end
  def test_outputs_energy_flows_d88; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d88); end
  def test_outputs_energy_flows_e88; assert_equal("n/a ", worksheet.outputs_energy_flows_e88); end
  def test_outputs_energy_flows_f88; assert_equal("Gas", worksheet.outputs_energy_flows_f88); end
  def test_outputs_energy_flows_g88; assert_equal("n/a", worksheet.outputs_energy_flows_g88); end
  def test_outputs_energy_flows_h88; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h88); end
  def test_outputs_energy_flows_i88; assert_equal("C.03", worksheet.outputs_energy_flows_i88); end
  def test_outputs_energy_flows_j88; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j88); end
  def test_outputs_energy_flows_v88; assert_in_epsilon(3.0046012974969964, worksheet.outputs_energy_flows_v88, 0.002); end
  def test_outputs_energy_flows_w88; assert_in_epsilon(3.2283094626431263, worksheet.outputs_energy_flows_w88, 0.002); end
  def test_outputs_energy_flows_x88; assert_in_epsilon(3.495701397472817, worksheet.outputs_energy_flows_x88, 0.002); end
  def test_outputs_energy_flows_y88; assert_in_epsilon(3.76513336824029, worksheet.outputs_energy_flows_y88, 0.002); end
  def test_outputs_energy_flows_z88; assert_in_epsilon(4.050638300250824, worksheet.outputs_energy_flows_z88, 0.002); end
  def test_outputs_energy_flows_aa88; assert_in_epsilon(4.3590189211953705, worksheet.outputs_energy_flows_aa88, 0.002); end
  def test_outputs_energy_flows_ab88; assert_in_epsilon(4.666285098107223, worksheet.outputs_energy_flows_ab88, 0.002); end
  def test_outputs_energy_flows_ac88; assert_in_epsilon(4.94182932164431, worksheet.outputs_energy_flows_ac88, 0.002); end
  def test_outputs_energy_flows_ad88; assert_in_epsilon(5.194422150832349, worksheet.outputs_energy_flows_ad88, 0.002); end
  def test_outputs_energy_flows_c90; assert_equal("n/a ", worksheet.outputs_energy_flows_c90); end
  def test_outputs_energy_flows_d90; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d90); end
  def test_outputs_energy_flows_e90; assert_equal("n/a ", worksheet.outputs_energy_flows_e90); end
  def test_outputs_energy_flows_f90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f90); end
  def test_outputs_energy_flows_g90; assert_equal("n/a", worksheet.outputs_energy_flows_g90); end
  def test_outputs_energy_flows_h90; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h90); end
  def test_outputs_energy_flows_i90; assert_equal("L.01", worksheet.outputs_energy_flows_i90); end
  def test_outputs_energy_flows_j90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j90); end
  def test_outputs_energy_flows_v90; assert_in_epsilon(1.617862237113767, worksheet.outputs_energy_flows_v90, 0.002); end
  def test_outputs_energy_flows_w90; assert_in_epsilon(1.7133684180022128, worksheet.outputs_energy_flows_w90, 0.002); end
  def test_outputs_energy_flows_x90; assert_in_epsilon(1.8218879036208673, worksheet.outputs_energy_flows_x90, 0.002); end
  def test_outputs_energy_flows_y90; assert_in_epsilon(1.926788538937449, worksheet.outputs_energy_flows_y90, 0.002); end
  def test_outputs_energy_flows_z90; assert_in_epsilon(2.0351500389810946, worksheet.outputs_energy_flows_z90, 0.002); end
  def test_outputs_energy_flows_aa90; assert_in_epsilon(2.149968670757284, worksheet.outputs_energy_flows_aa90, 0.002); end
  def test_outputs_energy_flows_ab90; assert_in_epsilon(2.2590942620488645, worksheet.outputs_energy_flows_ab90, 0.002); end
  def test_outputs_energy_flows_ac90; assert_in_epsilon(2.348107267512513, worksheet.outputs_energy_flows_ac90, 0.002); end
  def test_outputs_energy_flows_ad90; assert_in_epsilon(2.4220326157839995, worksheet.outputs_energy_flows_ad90, 0.002); end
  def test_outputs_energy_flows_c92; assert_equal("n/a", worksheet.outputs_energy_flows_c92); end
  def test_outputs_energy_flows_d92; assert_equal("Solid", worksheet.outputs_energy_flows_d92); end
  def test_outputs_energy_flows_e92; assert_equal("n/a", worksheet.outputs_energy_flows_e92); end
  def test_outputs_energy_flows_f92; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f92); end
  def test_outputs_energy_flows_i92; assert_equal("C.01", worksheet.outputs_energy_flows_i92); end
  def test_outputs_energy_flows_j92; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j92); end
  def test_outputs_energy_flows_k92; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k92); end
  def test_outputs_energy_flows_l92; assert_equal("Unabated power", worksheet.outputs_energy_flows_l92); end
  def test_outputs_energy_flows_v92; assert_in_epsilon(99.97450275052698, worksheet.outputs_energy_flows_v92, 0.002); end
  def test_outputs_energy_flows_w92; assert_in_epsilon(97.08435000378675, worksheet.outputs_energy_flows_w92, 0.002); end
  def test_outputs_energy_flows_x92; assert_in_epsilon(102.11850527226846, worksheet.outputs_energy_flows_x92, 0.002); end
  def test_outputs_energy_flows_y92; assert_in_epsilon(115.86012300256212, worksheet.outputs_energy_flows_y92, 0.002); end
  def test_outputs_energy_flows_z92; assert_in_epsilon(125.83169073904297, worksheet.outputs_energy_flows_z92, 0.002); end
  def test_outputs_energy_flows_aa92; assert_in_epsilon(132.69447737550513, worksheet.outputs_energy_flows_aa92, 0.002); end
  def test_outputs_energy_flows_ab92; assert_in_epsilon(135.32779421391479, worksheet.outputs_energy_flows_ab92, 0.002); end
  def test_outputs_energy_flows_ac92; assert_in_epsilon(127.8791490780895, worksheet.outputs_energy_flows_ac92, 0.002); end
  def test_outputs_energy_flows_ad92; assert_in_epsilon(122.46828170675526, worksheet.outputs_energy_flows_ad92, 0.002); end
  def test_outputs_energy_flows_c94; assert_equal("n/a", worksheet.outputs_energy_flows_c94); end
  def test_outputs_energy_flows_d94; assert_equal("Liquid", worksheet.outputs_energy_flows_d94); end
  def test_outputs_energy_flows_e94; assert_equal("n/a", worksheet.outputs_energy_flows_e94); end
  def test_outputs_energy_flows_f94; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f94); end
  def test_outputs_energy_flows_i94; assert_equal("C.02", worksheet.outputs_energy_flows_i94); end
  def test_outputs_energy_flows_j94; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j94); end
  def test_outputs_energy_flows_k94; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k94); end
  def test_outputs_energy_flows_l94; assert_equal("Unabated power", worksheet.outputs_energy_flows_l94); end
  def test_outputs_energy_flows_v94; assert_in_epsilon(11.604214655514422, worksheet.outputs_energy_flows_v94, 0.002); end
  def test_outputs_energy_flows_w94; assert_in_epsilon(11.655165269978276, worksheet.outputs_energy_flows_w94, 0.002); end
  def test_outputs_energy_flows_x94; assert_in_epsilon(22.755887553479223, worksheet.outputs_energy_flows_x94, 0.002); end
  def test_outputs_energy_flows_y94; assert_in_epsilon(25.85570176779357, worksheet.outputs_energy_flows_y94, 0.002); end
  def test_outputs_energy_flows_z94; assert_in_epsilon(33.84340297254414, worksheet.outputs_energy_flows_z94, 0.002); end
  def test_outputs_energy_flows_aa94; assert_in_epsilon(39.501030775670685, worksheet.outputs_energy_flows_aa94, 0.002); end
  def test_outputs_energy_flows_ab94; assert_in_epsilon(45.70624054082497, worksheet.outputs_energy_flows_ab94, 0.002); end
  def test_outputs_energy_flows_ac94; assert_in_epsilon(54.20800305640467, worksheet.outputs_energy_flows_ac94, 0.002); end
  def test_outputs_energy_flows_ad94; assert_in_epsilon(60.25882014939446, worksheet.outputs_energy_flows_ad94, 0.002); end
  def test_outputs_energy_flows_c96; assert_equal("n/a", worksheet.outputs_energy_flows_c96); end
  def test_outputs_energy_flows_d96; assert_equal("Gas", worksheet.outputs_energy_flows_d96); end
  def test_outputs_energy_flows_e96; assert_equal("n/a", worksheet.outputs_energy_flows_e96); end
  def test_outputs_energy_flows_f96; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f96); end
  def test_outputs_energy_flows_i96; assert_equal("C.03", worksheet.outputs_energy_flows_i96); end
  def test_outputs_energy_flows_j96; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j96); end
  def test_outputs_energy_flows_k96; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k96); end
  def test_outputs_energy_flows_l96; assert_equal("Unabated power", worksheet.outputs_energy_flows_l96); end
  def test_outputs_energy_flows_v96; assert_in_epsilon(41.9353235799253, worksheet.outputs_energy_flows_v96, 0.002); end
  def test_outputs_energy_flows_w96; assert_in_epsilon(40.731991330516806, worksheet.outputs_energy_flows_w96, 0.002); end
  def test_outputs_energy_flows_x96; assert_in_epsilon(45.74115678762878, worksheet.outputs_energy_flows_x96, 0.002); end
  def test_outputs_energy_flows_y96; assert_in_epsilon(50.843027470300164, worksheet.outputs_energy_flows_y96, 0.002); end
  def test_outputs_energy_flows_z96; assert_in_epsilon(57.06294775544611, worksheet.outputs_energy_flows_z96, 0.002); end
  def test_outputs_energy_flows_aa96; assert_in_epsilon(64.42765328443873, worksheet.outputs_energy_flows_aa96, 0.002); end
  def test_outputs_energy_flows_ab96; assert_in_epsilon(74.29417441486953, worksheet.outputs_energy_flows_ab96, 0.002); end
  def test_outputs_energy_flows_ac96; assert_in_epsilon(85.75430074511515, worksheet.outputs_energy_flows_ac96, 0.002); end
  def test_outputs_energy_flows_ad96; assert_in_epsilon(98.42987094619825, worksheet.outputs_energy_flows_ad96, 0.002); end
  def test_outputs_energy_flows_c98; assert_equal("N.01", worksheet.outputs_energy_flows_c98); end
  def test_outputs_energy_flows_d98; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_d98); end
  def test_outputs_energy_flows_e98; assert_equal("n/a", worksheet.outputs_energy_flows_e98); end
  def test_outputs_energy_flows_f98; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f98); end
  def test_outputs_energy_flows_g98; assert_equal("nuclear.elec", worksheet.outputs_energy_flows_g98); end
  def test_outputs_energy_flows_h98; assert_equal("Global Nuclear power stations", worksheet.outputs_energy_flows_h98); end
  def test_outputs_energy_flows_v98; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v98, 0.002); end
  def test_outputs_energy_flows_w98; assert_in_epsilon(32.24522588695181, worksheet.outputs_energy_flows_w98, 0.002); end
  def test_outputs_energy_flows_x98; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_flows_x98, 0.002); end
  def test_outputs_energy_flows_y98; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_flows_y98, 0.002); end
  def test_outputs_energy_flows_z98; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_flows_z98, 0.002); end
  def test_outputs_energy_flows_aa98; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_flows_aa98, 0.002); end
  def test_outputs_energy_flows_ab98; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_flows_ab98, 0.002); end
  def test_outputs_energy_flows_ac98; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_flows_ac98, 0.002); end
  def test_outputs_energy_flows_ad98; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_flows_ad98, 0.002); end
  def test_outputs_energy_flows_c100; assert_equal("n/a", worksheet.outputs_energy_flows_c100); end
  def test_outputs_energy_flows_d100; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d100); end
  def test_outputs_energy_flows_e100; assert_equal("H.01", worksheet.outputs_energy_flows_e100); end
  def test_outputs_energy_flows_f100; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_f100); end
  def test_outputs_energy_flows_k100; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k100); end
  def test_outputs_energy_flows_l100; assert_equal("Unabated power", worksheet.outputs_energy_flows_l100); end
  def test_outputs_energy_flows_m100; assert_equal("Nuclear", worksheet.outputs_energy_flows_m100); end
  def test_outputs_energy_flows_v100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v100||0), 0.002); end
  def test_outputs_energy_flows_w100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w100||0), 0.002); end
  def test_outputs_energy_flows_x100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x100||0), 0.002); end
  def test_outputs_energy_flows_y100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y100||0), 0.002); end
  def test_outputs_energy_flows_z100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z100||0), 0.002); end
  def test_outputs_energy_flows_aa100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa100||0), 0.002); end
  def test_outputs_energy_flows_ab100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab100||0), 0.002); end
  def test_outputs_energy_flows_ac100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac100||0), 0.002); end
  def test_outputs_energy_flows_ad100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad100||0), 0.002); end
  def test_outputs_energy_flows_c102; assert_equal("n/a", worksheet.outputs_energy_flows_c102); end
  def test_outputs_energy_flows_d102; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d102); end
  def test_outputs_energy_flows_f102; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f102); end
  def test_outputs_energy_flows_i102; assert_equal("E.02", worksheet.outputs_energy_flows_i102); end
  def test_outputs_energy_flows_j102; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j102); end
  def test_outputs_energy_flows_k102; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k102); end
  def test_outputs_energy_flows_l102; assert_equal("Unabated power", worksheet.outputs_energy_flows_l102); end
  def test_outputs_energy_flows_m102; assert_equal("Nuclear", worksheet.outputs_energy_flows_m102); end
  def test_outputs_energy_flows_v102; assert_in_epsilon(62.51424088771948, worksheet.outputs_energy_flows_v102, 0.002); end
  def test_outputs_energy_flows_w102; assert_in_epsilon(63.86565001250691, worksheet.outputs_energy_flows_w102, 0.002); end
  def test_outputs_energy_flows_x102; assert_in_epsilon(72.750295286274, worksheet.outputs_energy_flows_x102, 0.002); end
  def test_outputs_energy_flows_y102; assert_in_epsilon(82.3735644631123, worksheet.outputs_energy_flows_y102, 0.002); end
  def test_outputs_energy_flows_z102; assert_in_epsilon(92.40482489934024, worksheet.outputs_energy_flows_z102, 0.002); end
  def test_outputs_energy_flows_aa102; assert_in_epsilon(102.80314139949643, worksheet.outputs_energy_flows_aa102, 0.002); end
  def test_outputs_energy_flows_ab102; assert_in_epsilon(112.09481264140683, worksheet.outputs_energy_flows_ab102, 0.002); end
  def test_outputs_energy_flows_ac102; assert_in_epsilon(119.01723502018905, worksheet.outputs_energy_flows_ac102, 0.002); end
  def test_outputs_energy_flows_ad102; assert_in_epsilon(126.45838510693167, worksheet.outputs_energy_flows_ad102, 0.002); end
  def test_outputs_energy_flows_c104; assert_equal("n/a", worksheet.outputs_energy_flows_c104); end
  def test_outputs_energy_flows_d104; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d104); end
  def test_outputs_energy_flows_e104; assert_equal("L.02", worksheet.outputs_energy_flows_e104); end
  def test_outputs_energy_flows_f104; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f104); end
  def test_outputs_energy_flows_k104; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k104); end
  def test_outputs_energy_flows_l104; assert_equal("Unabated power", worksheet.outputs_energy_flows_l104); end
  def test_outputs_energy_flows_m104; assert_equal("Nuclear", worksheet.outputs_energy_flows_m104); end
  def test_outputs_energy_flows_v104; assert_in_epsilon(4.436836308020434, worksheet.outputs_energy_flows_v104, 0.002); end
  def test_outputs_energy_flows_w104; assert_in_epsilon(4.533868231078643, worksheet.outputs_energy_flows_w104, 0.002); end
  def test_outputs_energy_flows_x104; assert_in_epsilon(5.1713491831598635, worksheet.outputs_energy_flows_x104, 0.002); end
  def test_outputs_energy_flows_y104; assert_in_epsilon(5.853718144841066, worksheet.outputs_energy_flows_y104, 0.002); end
  def test_outputs_energy_flows_z104; assert_in_epsilon(6.565926910695598, worksheet.outputs_energy_flows_z104, 0.002); end
  def test_outputs_energy_flows_aa104; assert_in_epsilon(7.303801139488008, worksheet.outputs_energy_flows_aa104, 0.002); end
  def test_outputs_energy_flows_ab104; assert_in_epsilon(7.962386919901272, worksheet.outputs_energy_flows_ab104, 0.002); end
  def test_outputs_energy_flows_ac104; assert_in_epsilon(8.452117568850998, worksheet.outputs_energy_flows_ac104, 0.002); end
  def test_outputs_energy_flows_ad104; assert_in_epsilon(8.979178233288614, worksheet.outputs_energy_flows_ad104, 0.002); end
  def test_outputs_energy_flows_c106; assert_equal("n/a", worksheet.outputs_energy_flows_c106); end
  def test_outputs_energy_flows_d106; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d106); end
  def test_outputs_energy_flows_e106; assert_equal("L.01", worksheet.outputs_energy_flows_e106); end
  def test_outputs_energy_flows_f106; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f106); end
  def test_outputs_energy_flows_k106; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k106); end
  def test_outputs_energy_flows_l106; assert_equal("Unabated power", worksheet.outputs_energy_flows_l106); end
  def test_outputs_energy_flows_m106; assert_equal("Nuclear", worksheet.outputs_energy_flows_m106); end
  def test_outputs_energy_flows_v106; assert_in_epsilon(103.38259970729871, worksheet.outputs_energy_flows_v106, 0.002); end
  def test_outputs_energy_flows_w106; assert_in_epsilon(103.61988680985456, worksheet.outputs_energy_flows_w106, 0.002); end
  def test_outputs_energy_flows_x106; assert_in_epsilon(114.2733279448213, worksheet.outputs_energy_flows_x106, 0.002); end
  def test_outputs_energy_flows_y106; assert_in_epsilon(125.17902579676701, worksheet.outputs_energy_flows_y106, 0.002); end
  def test_outputs_energy_flows_z106; assert_in_epsilon(136.71132722803003, worksheet.outputs_energy_flows_z106, 0.002); end
  def test_outputs_energy_flows_aa106; assert_in_epsilon(147.85193284401367, worksheet.outputs_energy_flows_aa106, 0.002); end
  def test_outputs_energy_flows_ab106; assert_in_epsilon(155.1115853786311, worksheet.outputs_energy_flows_ab106, 0.002); end
  def test_outputs_energy_flows_ac106; assert_in_epsilon(160.0858120432917, worksheet.outputs_energy_flows_ac106, 0.002); end
  def test_outputs_energy_flows_ad106; assert_in_epsilon(165.31126751856308, worksheet.outputs_energy_flows_ad106, 0.002); end
  def test_outputs_energy_flows_c108; assert_equal("n/a", worksheet.outputs_energy_flows_c108); end
  def test_outputs_energy_flows_d108; assert_equal("Storage", worksheet.outputs_energy_flows_d108); end
  def test_outputs_energy_flows_e108; assert_equal("n/a", worksheet.outputs_energy_flows_e108); end
  def test_outputs_energy_flows_f108; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f108); end
  def test_outputs_energy_flows_g108; assert_equal("storage.elec", worksheet.outputs_energy_flows_g108); end
  def test_outputs_energy_flows_h108; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h108); end
  def test_outputs_energy_flows_i108; assert_equal("E.02", worksheet.outputs_energy_flows_i108); end
  def test_outputs_energy_flows_j108; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j108); end
  def test_outputs_energy_flows_v108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v108||0), 0.002); end
  def test_outputs_energy_flows_w108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w108||0), 0.002); end
  def test_outputs_energy_flows_x108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x108||0), 0.002); end
  def test_outputs_energy_flows_y108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y108||0), 0.002); end
  def test_outputs_energy_flows_z108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z108||0), 0.002); end
  def test_outputs_energy_flows_aa108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa108||0), 0.002); end
  def test_outputs_energy_flows_ab108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab108||0), 0.002); end
  def test_outputs_energy_flows_ac108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac108||0), 0.002); end
  def test_outputs_energy_flows_ad108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad108||0), 0.002); end
  def test_outputs_energy_flows_c110; assert_equal("n/a", worksheet.outputs_energy_flows_c110); end
  def test_outputs_energy_flows_d110; assert_equal("Storage", worksheet.outputs_energy_flows_d110); end
  def test_outputs_energy_flows_e110; assert_equal("L.01", worksheet.outputs_energy_flows_e110); end
  def test_outputs_energy_flows_f110; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f110); end
  def test_outputs_energy_flows_g110; assert_equal("storage.elec", worksheet.outputs_energy_flows_g110); end
  def test_outputs_energy_flows_h110; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h110); end
  def test_outputs_energy_flows_v110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v110||0), 0.002); end
  def test_outputs_energy_flows_w110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w110||0), 0.002); end
  def test_outputs_energy_flows_x110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x110||0), 0.002); end
  def test_outputs_energy_flows_y110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y110||0), 0.002); end
  def test_outputs_energy_flows_z110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z110||0), 0.002); end
  def test_outputs_energy_flows_aa110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa110||0), 0.002); end
  def test_outputs_energy_flows_ab110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab110||0), 0.002); end
  def test_outputs_energy_flows_ac110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac110||0), 0.002); end
  def test_outputs_energy_flows_ad110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad110||0), 0.002); end
  def test_outputs_energy_flows_c112; assert_equal("n/a", worksheet.outputs_energy_flows_c112); end
  def test_outputs_energy_flows_d112; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d112); end
  def test_outputs_energy_flows_e112; assert_equal("L.02", worksheet.outputs_energy_flows_e112); end
  def test_outputs_energy_flows_f112; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f112); end
  def test_outputs_energy_flows_g112; assert_equal("electricity.network", worksheet.outputs_energy_flows_g112); end
  def test_outputs_energy_flows_h112; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_h112); end
  def test_outputs_energy_flows_v112; assert_in_epsilon(6.091573034196048, worksheet.outputs_energy_flows_v112, 0.002); end
  def test_outputs_energy_flows_w112; assert_in_epsilon(6.726775148638785, worksheet.outputs_energy_flows_w112, 0.002); end
  def test_outputs_energy_flows_x112; assert_in_epsilon(7.523772895839505, worksheet.outputs_energy_flows_x112, 0.002); end
  def test_outputs_energy_flows_y112; assert_in_epsilon(8.361794011501393, worksheet.outputs_energy_flows_y112, 0.002); end
  def test_outputs_energy_flows_z112; assert_in_epsilon(9.20931640070908, worksheet.outputs_energy_flows_z112, 0.002); end
  def test_outputs_energy_flows_aa112; assert_in_epsilon(10.04402922762829, worksheet.outputs_energy_flows_aa112, 0.002); end
  def test_outputs_energy_flows_ab112; assert_in_epsilon(10.887865224193456, worksheet.outputs_energy_flows_ab112, 0.002); end
  def test_outputs_energy_flows_ac112; assert_in_epsilon(11.713857843906641, worksheet.outputs_energy_flows_ac112, 0.002); end
  def test_outputs_energy_flows_ad112; assert_in_epsilon(12.54558967587362, worksheet.outputs_energy_flows_ad112, 0.002); end
  def test_outputs_energy_flows_c114; assert_equal("n/a", worksheet.outputs_energy_flows_c114); end
  def test_outputs_energy_flows_d114; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d114); end
  def test_outputs_energy_flows_e114; assert_equal("n/a", worksheet.outputs_energy_flows_e114); end
  def test_outputs_energy_flows_f114; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f114); end
  def test_outputs_energy_flows_i114; assert_equal("E.01", worksheet.outputs_energy_flows_i114); end
  def test_outputs_energy_flows_j114; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j114); end
  def test_outputs_energy_flows_k114; assert_equal("Global buildings", worksheet.outputs_energy_flows_k114); end
  def test_outputs_energy_flows_v114; assert_in_epsilon(4.027695458801006, worksheet.outputs_energy_flows_v114, 0.002); end
  def test_outputs_energy_flows_w114; assert_in_epsilon(4.4382670341313, worksheet.outputs_energy_flows_w114, 0.002); end
  def test_outputs_energy_flows_x114; assert_in_epsilon(5.288049277042646, worksheet.outputs_energy_flows_x114, 0.002); end
  def test_outputs_energy_flows_y114; assert_in_epsilon(6.200326276012888, worksheet.outputs_energy_flows_y114, 0.002); end
  def test_outputs_energy_flows_z114; assert_in_epsilon(7.1550300097717425, worksheet.outputs_energy_flows_z114, 0.002); end
  def test_outputs_energy_flows_aa114; assert_in_epsilon(8.112527542560315, worksheet.outputs_energy_flows_aa114, 0.002); end
  def test_outputs_energy_flows_ab114; assert_in_epsilon(9.089910516750649, worksheet.outputs_energy_flows_ab114, 0.002); end
  def test_outputs_energy_flows_ac114; assert_in_epsilon(10.04219292772072, worksheet.outputs_energy_flows_ac114, 0.002); end
  def test_outputs_energy_flows_ad114; assert_in_epsilon(10.993745283998038, worksheet.outputs_energy_flows_ad114, 0.002); end
  def test_outputs_energy_flows_c116; assert_equal("n/a", worksheet.outputs_energy_flows_c116); end
  def test_outputs_energy_flows_d116; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d116); end
  def test_outputs_energy_flows_e116; assert_equal("n/a", worksheet.outputs_energy_flows_e116); end
  def test_outputs_energy_flows_f116; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f116); end
  def test_outputs_energy_flows_i116; assert_equal("E.01", worksheet.outputs_energy_flows_i116); end
  def test_outputs_energy_flows_j116; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j116); end
  def test_outputs_energy_flows_k116; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k116); end
  def test_outputs_energy_flows_l116; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l116); end
  def test_outputs_energy_flows_v116; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_flows_v116, 0.002); end
  def test_outputs_energy_flows_w116; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_flows_w116, 0.002); end
  def test_outputs_energy_flows_x116; assert_in_epsilon(4.339374562975979, worksheet.outputs_energy_flows_x116, 0.002); end
  def test_outputs_energy_flows_y116; assert_in_epsilon(4.899308133799163, worksheet.outputs_energy_flows_y116, 0.002); end
  def test_outputs_energy_flows_z116; assert_in_epsilon(5.4656473496193305, worksheet.outputs_energy_flows_z116, 0.002); end
  def test_outputs_energy_flows_aa116; assert_in_epsilon(6.010628694184774, worksheet.outputs_energy_flows_aa116, 0.002); end
  def test_outputs_energy_flows_ab116; assert_in_epsilon(6.550346624258883, worksheet.outputs_energy_flows_ab116, 0.002); end
  def test_outputs_energy_flows_ac116; assert_in_epsilon(7.055428632992439, worksheet.outputs_energy_flows_ac116, 0.002); end
  def test_outputs_energy_flows_ad116; assert_in_epsilon(7.546444287618395, worksheet.outputs_energy_flows_ad116, 0.002); end
  def test_outputs_energy_flows_c118; assert_equal("n/a", worksheet.outputs_energy_flows_c118); end
  def test_outputs_energy_flows_d118; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d118); end
  def test_outputs_energy_flows_e118; assert_equal("n/a", worksheet.outputs_energy_flows_e118); end
  def test_outputs_energy_flows_f118; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f118); end
  def test_outputs_energy_flows_i118; assert_equal("E.01", worksheet.outputs_energy_flows_i118); end
  def test_outputs_energy_flows_j118; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j118); end
  def test_outputs_energy_flows_k118; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k118); end
  def test_outputs_energy_flows_l118; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l118); end
  def test_outputs_energy_flows_v118; assert_in_epsilon(10.049316153808604, worksheet.outputs_energy_flows_v118, 0.002); end
  def test_outputs_energy_flows_w118; assert_in_epsilon(12.121796717015723, worksheet.outputs_energy_flows_w118, 0.002); end
  def test_outputs_energy_flows_x118; assert_in_epsilon(13.909339100249378, worksheet.outputs_energy_flows_x118, 0.002); end
  def test_outputs_energy_flows_y118; assert_in_epsilon(15.824323268532442, worksheet.outputs_energy_flows_y118, 0.002); end
  def test_outputs_energy_flows_z118; assert_in_epsilon(17.81726135918837, worksheet.outputs_energy_flows_z118, 0.002); end
  def test_outputs_energy_flows_aa118; assert_in_epsilon(19.802741037213167, worksheet.outputs_energy_flows_aa118, 0.002); end
  def test_outputs_energy_flows_ab118; assert_in_epsilon(21.83754529053455, worksheet.outputs_energy_flows_ab118, 0.002); end
  def test_outputs_energy_flows_ac118; assert_in_epsilon(23.82804030938562, worksheet.outputs_energy_flows_ac118, 0.002); end
  def test_outputs_energy_flows_ad118; assert_in_epsilon(25.840851801483367, worksheet.outputs_energy_flows_ad118, 0.002); end
  def test_outputs_energy_flows_c120; assert_equal("n/a", worksheet.outputs_energy_flows_c120); end
  def test_outputs_energy_flows_d120; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d120); end
  def test_outputs_energy_flows_e120; assert_equal("n/a", worksheet.outputs_energy_flows_e120); end
  def test_outputs_energy_flows_f120; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f120); end
  def test_outputs_energy_flows_i120; assert_equal("E.01", worksheet.outputs_energy_flows_i120); end
  def test_outputs_energy_flows_j120; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j120); end
  def test_outputs_energy_flows_k120; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k120); end
  def test_outputs_energy_flows_l120; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l120); end
  def test_outputs_energy_flows_v120; assert_in_epsilon(1.5226055251988835, worksheet.outputs_energy_flows_v120, 0.002); end
  def test_outputs_energy_flows_w120; assert_in_epsilon(1.694572033868082, worksheet.outputs_energy_flows_w120, 0.002); end
  def test_outputs_energy_flows_x120; assert_in_epsilon(1.9507643011553129, worksheet.outputs_energy_flows_x120, 0.002); end
  def test_outputs_energy_flows_y120; assert_in_epsilon(2.213699420914208, worksheet.outputs_energy_flows_y120, 0.002); end
  def test_outputs_energy_flows_z120; assert_in_epsilon(2.4750557151891304, worksheet.outputs_energy_flows_z120, 0.002); end
  def test_outputs_energy_flows_aa120; assert_in_epsilon(2.720714287724951, worksheet.outputs_energy_flows_aa120, 0.002); end
  def test_outputs_energy_flows_ab120; assert_in_epsilon(2.9564938187000496, worksheet.outputs_energy_flows_ab120, 0.002); end
  def test_outputs_energy_flows_ac120; assert_in_epsilon(3.1677350131308817, worksheet.outputs_energy_flows_ac120, 0.002); end
  def test_outputs_energy_flows_ad120; assert_in_epsilon(3.3633865101395655, worksheet.outputs_energy_flows_ad120, 0.002); end
  def test_outputs_energy_flows_c122; assert_equal("n/a", worksheet.outputs_energy_flows_c122); end
  def test_outputs_energy_flows_d122; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d122); end
  def test_outputs_energy_flows_e122; assert_equal("n/a", worksheet.outputs_energy_flows_e122); end
  def test_outputs_energy_flows_f122; assert_equal("Non domestic", worksheet.outputs_energy_flows_f122); end
  def test_outputs_energy_flows_i122; assert_equal("E.01", worksheet.outputs_energy_flows_i122); end
  def test_outputs_energy_flows_j122; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j122); end
  def test_outputs_energy_flows_k122; assert_equal("Non-residential", worksheet.outputs_energy_flows_k122); end
  def test_outputs_energy_flows_v122; assert_in_epsilon(17.958150562902418, worksheet.outputs_energy_flows_v122, 0.002); end
  def test_outputs_energy_flows_w122; assert_in_epsilon(19.424961313164236, worksheet.outputs_energy_flows_w122, 0.002); end
  def test_outputs_energy_flows_x122; assert_in_epsilon(21.444354956960268, worksheet.outputs_energy_flows_x122, 0.002); end
  def test_outputs_energy_flows_y122; assert_in_epsilon(23.43507166495492, worksheet.outputs_energy_flows_y122, 0.002); end
  def test_outputs_energy_flows_z122; assert_in_epsilon(25.379746936626447, worksheet.outputs_energy_flows_z122, 0.002); end
  def test_outputs_energy_flows_aa122; assert_in_epsilon(27.268069968782783, worksheet.outputs_energy_flows_aa122, 0.002); end
  def test_outputs_energy_flows_ab122; assert_in_epsilon(29.0838036204722, worksheet.outputs_energy_flows_ab122, 0.002); end
  def test_outputs_energy_flows_ac122; assert_in_epsilon(30.804962047626375, worksheet.outputs_energy_flows_ac122, 0.002); end
  def test_outputs_energy_flows_ad122; assert_in_epsilon(32.41127477163743, worksheet.outputs_energy_flows_ad122, 0.002); end
  def test_outputs_energy_flows_c124; assert_equal("n/a", worksheet.outputs_energy_flows_c124); end
  def test_outputs_energy_flows_d124; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d124); end
  def test_outputs_energy_flows_e124; assert_equal("n/a", worksheet.outputs_energy_flows_e124); end
  def test_outputs_energy_flows_f124; assert_equal("Steel", worksheet.outputs_energy_flows_f124); end
  def test_outputs_energy_flows_i124; assert_equal("E.01", worksheet.outputs_energy_flows_i124); end
  def test_outputs_energy_flows_j124; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j124); end
  def test_outputs_energy_flows_v124; assert_in_epsilon(3.944226186432, worksheet.outputs_energy_flows_v124, 0.002); end
  def test_outputs_energy_flows_w124; assert_in_epsilon(4.152105149861114, worksheet.outputs_energy_flows_w124, 0.002); end
  def test_outputs_energy_flows_x124; assert_in_epsilon(4.499505380168808, worksheet.outputs_energy_flows_x124, 0.002); end
  def test_outputs_energy_flows_y124; assert_in_epsilon(4.810308657902485, worksheet.outputs_energy_flows_y124, 0.002); end
  def test_outputs_energy_flows_z124; assert_in_epsilon(5.105844248191849, worksheet.outputs_energy_flows_z124, 0.002); end
  def test_outputs_energy_flows_aa124; assert_in_epsilon(5.376008881965956, worksheet.outputs_energy_flows_aa124, 0.002); end
  def test_outputs_energy_flows_ab124; assert_in_epsilon(5.662994874159575, worksheet.outputs_energy_flows_ab124, 0.002); end
  def test_outputs_energy_flows_ac124; assert_in_epsilon(5.960425651115362, worksheet.outputs_energy_flows_ac124, 0.002); end
  def test_outputs_energy_flows_ad124; assert_in_epsilon(6.2664422113273215, worksheet.outputs_energy_flows_ad124, 0.002); end
  def test_outputs_energy_flows_c126; assert_equal("n/a", worksheet.outputs_energy_flows_c126); end
  def test_outputs_energy_flows_d126; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d126); end
  def test_outputs_energy_flows_e126; assert_equal("n/a", worksheet.outputs_energy_flows_e126); end
  def test_outputs_energy_flows_f126; assert_equal("Aluminium", worksheet.outputs_energy_flows_f126); end
  def test_outputs_energy_flows_i126; assert_equal("E.01", worksheet.outputs_energy_flows_i126); end
  def test_outputs_energy_flows_j126; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j126); end
  def test_outputs_energy_flows_v126; assert_in_epsilon(2.4376557108758776, worksheet.outputs_energy_flows_v126, 0.002); end
  def test_outputs_energy_flows_w126; assert_in_epsilon(2.679739486796627, worksheet.outputs_energy_flows_w126, 0.002); end
  def test_outputs_energy_flows_x126; assert_in_epsilon(3.007597670166967, worksheet.outputs_energy_flows_x126, 0.002); end
  def test_outputs_energy_flows_y126; assert_in_epsilon(3.4314965153081167, worksheet.outputs_energy_flows_y126, 0.002); end
  def test_outputs_energy_flows_z126; assert_in_epsilon(3.878724668119999, worksheet.outputs_energy_flows_z126, 0.002); end
  def test_outputs_energy_flows_aa126; assert_in_epsilon(4.331821665107912, worksheet.outputs_energy_flows_aa126, 0.002); end
  def test_outputs_energy_flows_ab126; assert_in_epsilon(4.836221439045581, worksheet.outputs_energy_flows_ab126, 0.002); end
  def test_outputs_energy_flows_ac126; assert_in_epsilon(5.379682486090201, worksheet.outputs_energy_flows_ac126, 0.002); end
  def test_outputs_energy_flows_ad126; assert_in_epsilon(5.987691320502864, worksheet.outputs_energy_flows_ad126, 0.002); end
  def test_outputs_energy_flows_c128; assert_equal("n/a", worksheet.outputs_energy_flows_c128); end
  def test_outputs_energy_flows_d128; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d128); end
  def test_outputs_energy_flows_e128; assert_equal("n/a", worksheet.outputs_energy_flows_e128); end
  def test_outputs_energy_flows_f128; assert_equal("Cement", worksheet.outputs_energy_flows_f128); end
  def test_outputs_energy_flows_i128; assert_equal("E.01", worksheet.outputs_energy_flows_i128); end
  def test_outputs_energy_flows_j128; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j128); end
  def test_outputs_energy_flows_v128; assert_in_epsilon(1.288872331200076, worksheet.outputs_energy_flows_v128, 0.002); end
  def test_outputs_energy_flows_w128; assert_in_epsilon(1.3098195272288968, worksheet.outputs_energy_flows_w128, 0.002); end
  def test_outputs_energy_flows_x128; assert_in_epsilon(1.4990284547664365, worksheet.outputs_energy_flows_x128, 0.002); end
  def test_outputs_energy_flows_y128; assert_in_epsilon(1.56487428631869, worksheet.outputs_energy_flows_y128, 0.002); end
  def test_outputs_energy_flows_z128; assert_in_epsilon(1.6223706849737758, worksheet.outputs_energy_flows_z128, 0.002); end
  def test_outputs_energy_flows_aa128; assert_in_epsilon(1.6760166688068863, worksheet.outputs_energy_flows_aa128, 0.002); end
  def test_outputs_energy_flows_ab128; assert_in_epsilon(1.7176402568715392, worksheet.outputs_energy_flows_ab128, 0.002); end
  def test_outputs_energy_flows_ac128; assert_in_epsilon(1.7567422786250795, worksheet.outputs_energy_flows_ac128, 0.002); end
  def test_outputs_energy_flows_ad128; assert_in_epsilon(1.7977943099912925, worksheet.outputs_energy_flows_ad128, 0.002); end
  def test_outputs_energy_flows_c130; assert_equal("n/a", worksheet.outputs_energy_flows_c130); end
  def test_outputs_energy_flows_d130; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d130); end
  def test_outputs_energy_flows_e130; assert_equal("n/a", worksheet.outputs_energy_flows_e130); end
  def test_outputs_energy_flows_f130; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f130); end
  def test_outputs_energy_flows_i130; assert_equal("E.01", worksheet.outputs_energy_flows_i130); end
  def test_outputs_energy_flows_j130; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j130); end
  def test_outputs_energy_flows_v130; assert_in_epsilon(1.915936127392674, worksheet.outputs_energy_flows_v130, 0.002); end
  def test_outputs_energy_flows_w130; assert_in_epsilon(1.9816874332862353, worksheet.outputs_energy_flows_w130, 0.002); end
  def test_outputs_energy_flows_x130; assert_in_epsilon(2.0518453816063804, worksheet.outputs_energy_flows_x130, 0.002); end
  def test_outputs_energy_flows_y130; assert_in_epsilon(2.2040291908928236, worksheet.outputs_energy_flows_y130, 0.002); end
  def test_outputs_energy_flows_z130; assert_in_epsilon(2.354702927499097, worksheet.outputs_energy_flows_z130, 0.002); end
  def test_outputs_energy_flows_aa130; assert_in_epsilon(2.4981995118421105, worksheet.outputs_energy_flows_aa130, 0.002); end
  def test_outputs_energy_flows_ab130; assert_in_epsilon(2.6552547539484133, worksheet.outputs_energy_flows_ab130, 0.002); end
  def test_outputs_energy_flows_ac130; assert_in_epsilon(2.8063146880265357, worksheet.outputs_energy_flows_ac130, 0.002); end
  def test_outputs_energy_flows_ad130; assert_in_epsilon(2.972642582975806, worksheet.outputs_energy_flows_ad130, 0.002); end
  def test_outputs_energy_flows_c132; assert_equal("n/a", worksheet.outputs_energy_flows_c132); end
  def test_outputs_energy_flows_d132; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d132); end
  def test_outputs_energy_flows_e132; assert_equal("n/a", worksheet.outputs_energy_flows_e132); end
  def test_outputs_energy_flows_f132; assert_equal("Chemicals", worksheet.outputs_energy_flows_f132); end
  def test_outputs_energy_flows_i132; assert_equal("E.01", worksheet.outputs_energy_flows_i132); end
  def test_outputs_energy_flows_j132; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j132); end
  def test_outputs_energy_flows_v132; assert_in_epsilon(4.406059895595235, worksheet.outputs_energy_flows_v132, 0.002); end
  def test_outputs_energy_flows_w132; assert_in_epsilon(4.633760699255888, worksheet.outputs_energy_flows_w132, 0.002); end
  def test_outputs_energy_flows_x132; assert_in_epsilon(4.96975641750464, worksheet.outputs_energy_flows_x132, 0.002); end
  def test_outputs_energy_flows_y132; assert_in_epsilon(5.649940287102101, worksheet.outputs_energy_flows_y132, 0.002); end
  def test_outputs_energy_flows_z132; assert_in_epsilon(6.381365828450637, worksheet.outputs_energy_flows_z132, 0.002); end
  def test_outputs_energy_flows_aa132; assert_in_epsilon(7.137854728274214, worksheet.outputs_energy_flows_aa132, 0.002); end
  def test_outputs_energy_flows_ab132; assert_in_epsilon(8.016811546888986, worksheet.outputs_energy_flows_ab132, 0.002); end
  def test_outputs_energy_flows_ac132; assert_in_epsilon(8.941412021511459, worksheet.outputs_energy_flows_ac132, 0.002); end
  def test_outputs_energy_flows_ad132; assert_in_epsilon(10.01416281236943, worksheet.outputs_energy_flows_ad132, 0.002); end
  def test_outputs_energy_flows_c134; assert_equal("n/a", worksheet.outputs_energy_flows_c134); end
  def test_outputs_energy_flows_d134; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d134); end
  def test_outputs_energy_flows_e134; assert_equal("n/a", worksheet.outputs_energy_flows_e134); end
  def test_outputs_energy_flows_f134; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f134); end
  def test_outputs_energy_flows_i134; assert_equal("E.01", worksheet.outputs_energy_flows_i134); end
  def test_outputs_energy_flows_j134; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j134); end
  def test_outputs_energy_flows_l134; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l134); end
  def test_outputs_energy_flows_m134; assert_equal("Timber", worksheet.outputs_energy_flows_m134); end
  def test_outputs_energy_flows_v134; assert_in_epsilon(15.29266327822456, worksheet.outputs_energy_flows_v134, 0.002); end
  def test_outputs_energy_flows_w134; assert_in_epsilon(16.28273739356164, worksheet.outputs_energy_flows_w134, 0.002); end
  def test_outputs_energy_flows_x134; assert_in_epsilon(18.155396314874377, worksheet.outputs_energy_flows_x134, 0.002); end
  def test_outputs_energy_flows_y134; assert_in_epsilon(19.944982740024287, worksheet.outputs_energy_flows_y134, 0.002); end
  def test_outputs_energy_flows_z134; assert_in_epsilon(21.667895060540033, worksheet.outputs_energy_flows_z134, 0.002); end
  def test_outputs_energy_flows_aa134; assert_in_epsilon(23.31431302284557, worksheet.outputs_energy_flows_aa134, 0.002); end
  def test_outputs_energy_flows_ab134; assert_in_epsilon(24.867800562378488, worksheet.outputs_energy_flows_ab134, 0.002); end
  def test_outputs_energy_flows_ac134; assert_in_epsilon(26.311345987230425, worksheet.outputs_energy_flows_ac134, 0.002); end
  def test_outputs_energy_flows_ad134; assert_in_epsilon(27.622834140871706, worksheet.outputs_energy_flows_ad134, 0.002); end
  def test_outputs_energy_flows_c136; assert_equal("n/a", worksheet.outputs_energy_flows_c136); end
  def test_outputs_energy_flows_d136; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d136); end
  def test_outputs_energy_flows_e136; assert_equal("n/a", worksheet.outputs_energy_flows_e136); end
  def test_outputs_energy_flows_f136; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f136); end
  def test_outputs_energy_flows_i136; assert_equal("E.01", worksheet.outputs_energy_flows_i136); end
  def test_outputs_energy_flows_j136; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j136); end
  def test_outputs_energy_flows_l136; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l136); end
  def test_outputs_energy_flows_m136; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m136); end
  def test_outputs_energy_flows_v136; assert_in_delta(0.4733400174267973, worksheet.outputs_energy_flows_v136, 0.002); end
  def test_outputs_energy_flows_w136; assert_in_epsilon(1.0783296493111103, worksheet.outputs_energy_flows_w136, 0.002); end
  def test_outputs_energy_flows_x136; assert_in_epsilon(1.4056757751338451, worksheet.outputs_energy_flows_x136, 0.002); end
  def test_outputs_energy_flows_y136; assert_in_epsilon(1.7541465454658005, worksheet.outputs_energy_flows_y136, 0.002); end
  def test_outputs_energy_flows_z136; assert_in_epsilon(2.1590310859166246, worksheet.outputs_energy_flows_z136, 0.002); end
  def test_outputs_energy_flows_aa136; assert_in_epsilon(2.604964736041878, worksheet.outputs_energy_flows_aa136, 0.002); end
  def test_outputs_energy_flows_ab136; assert_in_epsilon(3.104369777159942, worksheet.outputs_energy_flows_ab136, 0.002); end
  def test_outputs_energy_flows_ac136; assert_in_epsilon(3.6378633799469853, worksheet.outputs_energy_flows_ac136, 0.002); end
  def test_outputs_energy_flows_ad136; assert_in_epsilon(4.22230951185359, worksheet.outputs_energy_flows_ad136, 0.002); end
  def test_outputs_energy_flows_c138; assert_equal("n/a", worksheet.outputs_energy_flows_c138); end
  def test_outputs_energy_flows_d138; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d138); end
  def test_outputs_energy_flows_e138; assert_equal("n/a", worksheet.outputs_energy_flows_e138); end
  def test_outputs_energy_flows_f138; assert_equal("International passenger", worksheet.outputs_energy_flows_f138); end
  def test_outputs_energy_flows_i138; assert_equal("E.01", worksheet.outputs_energy_flows_i138); end
  def test_outputs_energy_flows_j138; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j138); end
  def test_outputs_energy_flows_l138; assert_equal("International", worksheet.outputs_energy_flows_l138); end
  def test_outputs_energy_flows_v138; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v138||0), 0.002); end
  def test_outputs_energy_flows_w138; assert_in_delta(0.0038634121066087666, worksheet.outputs_energy_flows_w138, 0.002); end
  def test_outputs_energy_flows_x138; assert_in_delta(0.00998594489462404, worksheet.outputs_energy_flows_x138, 0.002); end
  def test_outputs_energy_flows_y138; assert_in_delta(0.0167681622882803, worksheet.outputs_energy_flows_y138, 0.002); end
  def test_outputs_energy_flows_z138; assert_in_delta(0.024721151326480353, worksheet.outputs_energy_flows_z138, 0.002); end
  def test_outputs_energy_flows_aa138; assert_in_delta(0.03439711638238759, worksheet.outputs_energy_flows_aa138, 0.002); end
  def test_outputs_energy_flows_ab138; assert_in_delta(0.04624720910585553, worksheet.outputs_energy_flows_ab138, 0.002); end
  def test_outputs_energy_flows_ac138; assert_in_delta(0.060937474170750176, worksheet.outputs_energy_flows_ac138, 0.002); end
  def test_outputs_energy_flows_ad138; assert_in_delta(0.07938710329755731, worksheet.outputs_energy_flows_ad138, 0.002); end
  def test_outputs_energy_flows_c140; assert_equal("n/a", worksheet.outputs_energy_flows_c140); end
  def test_outputs_energy_flows_d140; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d140); end
  def test_outputs_energy_flows_e140; assert_equal("n/a", worksheet.outputs_energy_flows_e140); end
  def test_outputs_energy_flows_f140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f140); end
  def test_outputs_energy_flows_i140; assert_equal("E.01", worksheet.outputs_energy_flows_i140); end
  def test_outputs_energy_flows_j140; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j140); end
  def test_outputs_energy_flows_l140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l140); end
  def test_outputs_energy_flows_v140; assert_in_epsilon(1.064394758330311, worksheet.outputs_energy_flows_v140, 0.002); end
  def test_outputs_energy_flows_w140; assert_in_epsilon(1.299159381189465, worksheet.outputs_energy_flows_w140, 0.002); end
  def test_outputs_energy_flows_x140; assert_in_epsilon(1.5132351977456762, worksheet.outputs_energy_flows_x140, 0.002); end
  def test_outputs_energy_flows_y140; assert_in_epsilon(1.7211803869746432, worksheet.outputs_energy_flows_y140, 0.002); end
  def test_outputs_energy_flows_z140; assert_in_epsilon(1.8692211309949545, worksheet.outputs_energy_flows_z140, 0.002); end
  def test_outputs_energy_flows_aa140; assert_in_epsilon(1.9756315918903269, worksheet.outputs_energy_flows_aa140, 0.002); end
  def test_outputs_energy_flows_ab140; assert_in_epsilon(2.0366609146757693, worksheet.outputs_energy_flows_ab140, 0.002); end
  def test_outputs_energy_flows_ac140; assert_in_epsilon(2.074901375992135, worksheet.outputs_energy_flows_ac140, 0.002); end
  def test_outputs_energy_flows_ad140; assert_in_epsilon(2.089774705354165, worksheet.outputs_energy_flows_ad140, 0.002); end
  def test_outputs_energy_flows_c142; assert_equal("n/a", worksheet.outputs_energy_flows_c142); end
  def test_outputs_energy_flows_d142; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d142); end
  def test_outputs_energy_flows_e142; assert_equal("n/a", worksheet.outputs_energy_flows_e142); end
  def test_outputs_energy_flows_f142; assert_equal("International freight", worksheet.outputs_energy_flows_f142); end
  def test_outputs_energy_flows_i142; assert_equal("E.01", worksheet.outputs_energy_flows_i142); end
  def test_outputs_energy_flows_j142; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j142); end
  def test_outputs_energy_flows_l142; assert_equal("International freight", worksheet.outputs_energy_flows_l142); end
  def test_outputs_energy_flows_v142; assert_in_delta(0.08957295494723592, worksheet.outputs_energy_flows_v142, 0.002); end
  def test_outputs_energy_flows_w142; assert_in_delta(0.12663837521482676, worksheet.outputs_energy_flows_w142, 0.002); end
  def test_outputs_energy_flows_x142; assert_in_delta(0.15727017465443938, worksheet.outputs_energy_flows_x142, 0.002); end
  def test_outputs_energy_flows_y142; assert_in_delta(0.19304348269386307, worksheet.outputs_energy_flows_y142, 0.002); end
  def test_outputs_energy_flows_z142; assert_in_delta(0.2294811851579312, worksheet.outputs_energy_flows_z142, 0.002); end
  def test_outputs_energy_flows_aa142; assert_in_delta(0.2517660898436543, worksheet.outputs_energy_flows_aa142, 0.002); end
  def test_outputs_energy_flows_ab142; assert_in_delta(0.26793671274519903, worksheet.outputs_energy_flows_ab142, 0.002); end
  def test_outputs_energy_flows_ac142; assert_in_delta(0.2830503606027559, worksheet.outputs_energy_flows_ac142, 0.002); end
  def test_outputs_energy_flows_ad142; assert_in_delta(0.29185864248735904, worksheet.outputs_energy_flows_ad142, 0.002); end
  def test_outputs_energy_flows_c144; assert_equal("n/a", worksheet.outputs_energy_flows_c144); end
  def test_outputs_energy_flows_d144; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d144); end
  def test_outputs_energy_flows_e144; assert_equal("n/a", worksheet.outputs_energy_flows_e144); end
  def test_outputs_energy_flows_f144; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f144); end
  def test_outputs_energy_flows_i144; assert_equal("E.01", worksheet.outputs_energy_flows_i144); end
  def test_outputs_energy_flows_j144; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j144); end
  def test_outputs_energy_flows_v144; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v144, 0.002); end
  def test_outputs_energy_flows_w144; assert_in_delta(0.013054208153028431, worksheet.outputs_energy_flows_w144, 0.002); end
  def test_outputs_energy_flows_x144; assert_in_delta(0.012774412569925786, worksheet.outputs_energy_flows_x144, 0.002); end
  def test_outputs_energy_flows_y144; assert_in_delta(0.014306873864812573, worksheet.outputs_energy_flows_y144, 0.002); end
  def test_outputs_energy_flows_z144; assert_in_delta(0.07033184635348483, worksheet.outputs_energy_flows_z144, 0.002); end
  def test_outputs_energy_flows_aa144; assert_in_delta(0.17244656432305092, worksheet.outputs_energy_flows_aa144, 0.002); end
  def test_outputs_energy_flows_ab144; assert_in_delta(0.3086625677399225, worksheet.outputs_energy_flows_ab144, 0.002); end
  def test_outputs_energy_flows_ac144; assert_in_delta(0.4958109849624815, worksheet.outputs_energy_flows_ac144, 0.002); end
  def test_outputs_energy_flows_ad144; assert_in_delta(0.758026992162708, worksheet.outputs_energy_flows_ad144, 0.002); end
  def test_outputs_energy_flows_c146; assert_equal("n/a", worksheet.outputs_energy_flows_c146); end
  def test_outputs_energy_flows_d146; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d146); end
  def test_outputs_energy_flows_e146; assert_equal("G.01", worksheet.outputs_energy_flows_e146); end
  def test_outputs_energy_flows_f146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f146); end
  def test_outputs_energy_flows_g146; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g146); end
  def test_outputs_energy_flows_h146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h146); end
  def test_outputs_energy_flows_i146; assert_equal("E.01", worksheet.outputs_energy_flows_i146); end
  def test_outputs_energy_flows_j146; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j146); end
  def test_outputs_energy_flows_v146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v146||0), 0.002); end
  def test_outputs_energy_flows_w146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w146||0), 0.002); end
  def test_outputs_energy_flows_x146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x146||0), 0.002); end
  def test_outputs_energy_flows_y146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y146||0), 0.002); end
  def test_outputs_energy_flows_z146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z146||0), 0.002); end
  def test_outputs_energy_flows_aa146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa146||0), 0.002); end
  def test_outputs_energy_flows_ab146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab146||0), 0.002); end
  def test_outputs_energy_flows_ac146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac146||0), 0.002); end
  def test_outputs_energy_flows_ad146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad146||0), 0.002); end
  def test_outputs_energy_flows_c148; assert_equal("n/a", worksheet.outputs_energy_flows_c148); end
  def test_outputs_energy_flows_d148; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d148); end
  def test_outputs_energy_flows_e148; assert_equal("n/a", worksheet.outputs_energy_flows_e148); end
  def test_outputs_energy_flows_f148; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f148); end
  def test_outputs_energy_flows_g148; assert_equal("n/a", worksheet.outputs_energy_flows_g148); end
  def test_outputs_energy_flows_h148; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h148); end
  def test_outputs_energy_flows_i148; assert_equal("E.01", worksheet.outputs_energy_flows_i148); end
  def test_outputs_energy_flows_j148; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j148); end
  def test_outputs_energy_flows_v148; assert_in_epsilon(3.9550000000000005, worksheet.outputs_energy_flows_v148, 0.002); end
  def test_outputs_energy_flows_w148; assert_in_epsilon(4.09404062115396, worksheet.outputs_energy_flows_w148, 0.002); end
  def test_outputs_energy_flows_x148; assert_in_epsilon(4.298549728284815, worksheet.outputs_energy_flows_x148, 0.002); end
  def test_outputs_energy_flows_y148; assert_in_epsilon(4.493493746001422, worksheet.outputs_energy_flows_y148, 0.002); end
  def test_outputs_energy_flows_z148; assert_in_epsilon(4.6854416062312705, worksheet.outputs_energy_flows_z148, 0.002); end
  def test_outputs_energy_flows_aa148; assert_in_epsilon(4.87364731767819, worksheet.outputs_energy_flows_aa148, 0.002); end
  def test_outputs_energy_flows_ab148; assert_in_epsilon(5.050253981217768, worksheet.outputs_energy_flows_ab148, 0.002); end
  def test_outputs_energy_flows_ac148; assert_in_epsilon(5.199397671152182, worksheet.outputs_energy_flows_ac148, 0.002); end
  def test_outputs_energy_flows_ad148; assert_in_epsilon(5.332423384187432, worksheet.outputs_energy_flows_ad148, 0.002); end
  def test_outputs_energy_flows_d150; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d150); end
  def test_outputs_energy_flows_f150; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f150); end
  def test_outputs_energy_flows_i150; assert_equal("G.E.02", worksheet.outputs_energy_flows_i150); end
  def test_outputs_energy_flows_j150; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j150); end
  def test_outputs_energy_flows_p150; assert_equal("Net balance", worksheet.outputs_energy_flows_p150); end
  def test_outputs_energy_flows_v150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v150||0), 0.002); end
  def test_outputs_energy_flows_w150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_w150, 0.002); end
  def test_outputs_energy_flows_x150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x150||0), 0.002); end
  def test_outputs_energy_flows_y150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_y150, 0.002); end
  def test_outputs_energy_flows_z150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_z150, 0.002); end
  def test_outputs_energy_flows_aa150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa150||0), 0.002); end
  def test_outputs_energy_flows_ab150; assert_in_delta(-2.842170943040401e-14, worksheet.outputs_energy_flows_ab150, 0.002); end
  def test_outputs_energy_flows_ac150; assert_in_delta(2.842170943040401e-14, worksheet.outputs_energy_flows_ac150, 0.002); end
  def test_outputs_energy_flows_ad150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad150||0), 0.002); end
  def test_outputs_energy_flows_c152; assert_equal("n/a", worksheet.outputs_energy_flows_c152); end
  def test_outputs_energy_flows_d152; assert_equal("Solid", worksheet.outputs_energy_flows_d152); end
  def test_outputs_energy_flows_e152; assert_equal("n/a", worksheet.outputs_energy_flows_e152); end
  def test_outputs_energy_flows_f152; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f152); end
  def test_outputs_energy_flows_i152; assert_equal("C.01", worksheet.outputs_energy_flows_i152); end
  def test_outputs_energy_flows_j152; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j152); end
  def test_outputs_energy_flows_k152; assert_equal("Global buildings", worksheet.outputs_energy_flows_k152); end
  def test_outputs_energy_flows_v152; assert_in_epsilon(12.848215103064577, worksheet.outputs_energy_flows_v152, 0.002); end
  def test_outputs_energy_flows_w152; assert_in_epsilon(13.090966131280462, worksheet.outputs_energy_flows_w152, 0.002); end
  def test_outputs_energy_flows_x152; assert_in_epsilon(13.400938462854622, worksheet.outputs_energy_flows_x152, 0.002); end
  def test_outputs_energy_flows_y152; assert_in_epsilon(13.64677017146027, worksheet.outputs_energy_flows_y152, 0.002); end
  def test_outputs_energy_flows_z152; assert_in_epsilon(13.78099740175034, worksheet.outputs_energy_flows_z152, 0.002); end
  def test_outputs_energy_flows_aa152; assert_in_epsilon(13.79666439352016, worksheet.outputs_energy_flows_aa152, 0.002); end
  def test_outputs_energy_flows_ab152; assert_in_epsilon(13.715521399517748, worksheet.outputs_energy_flows_ab152, 0.002); end
  def test_outputs_energy_flows_ac152; assert_in_epsilon(13.540969098245242, worksheet.outputs_energy_flows_ac152, 0.002); end
  def test_outputs_energy_flows_ad152; assert_in_epsilon(13.254097841279108, worksheet.outputs_energy_flows_ad152, 0.002); end
  def test_outputs_energy_flows_c154; assert_equal("n/a", worksheet.outputs_energy_flows_c154); end
  def test_outputs_energy_flows_d154; assert_equal("Solid", worksheet.outputs_energy_flows_d154); end
  def test_outputs_energy_flows_e154; assert_equal("n/a", worksheet.outputs_energy_flows_e154); end
  def test_outputs_energy_flows_f154; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f154); end
  def test_outputs_energy_flows_i154; assert_equal("C.01", worksheet.outputs_energy_flows_i154); end
  def test_outputs_energy_flows_j154; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j154); end
  def test_outputs_energy_flows_k154; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k154); end
  def test_outputs_energy_flows_l154; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l154); end
  def test_outputs_energy_flows_v154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v154||0), 0.002); end
  def test_outputs_energy_flows_w154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w154||0), 0.002); end
  def test_outputs_energy_flows_x154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x154||0), 0.002); end
  def test_outputs_energy_flows_y154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y154||0), 0.002); end
  def test_outputs_energy_flows_z154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z154||0), 0.002); end
  def test_outputs_energy_flows_aa154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa154||0), 0.002); end
  def test_outputs_energy_flows_ab154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab154||0), 0.002); end
  def test_outputs_energy_flows_ac154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac154||0), 0.002); end
  def test_outputs_energy_flows_ad154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad154||0), 0.002); end
  def test_outputs_energy_flows_c156; assert_equal("n/a", worksheet.outputs_energy_flows_c156); end
  def test_outputs_energy_flows_d156; assert_equal("Solid", worksheet.outputs_energy_flows_d156); end
  def test_outputs_energy_flows_e156; assert_equal("n/a", worksheet.outputs_energy_flows_e156); end
  def test_outputs_energy_flows_f156; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f156); end
  def test_outputs_energy_flows_i156; assert_equal("C.01", worksheet.outputs_energy_flows_i156); end
  def test_outputs_energy_flows_j156; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j156); end
  def test_outputs_energy_flows_k156; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k156); end
  def test_outputs_energy_flows_l156; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l156); end
  def test_outputs_energy_flows_v156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v156||0), 0.002); end
  def test_outputs_energy_flows_w156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w156||0), 0.002); end
  def test_outputs_energy_flows_x156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x156||0), 0.002); end
  def test_outputs_energy_flows_y156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y156||0), 0.002); end
  def test_outputs_energy_flows_z156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z156||0), 0.002); end
  def test_outputs_energy_flows_aa156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa156||0), 0.002); end
  def test_outputs_energy_flows_ab156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab156||0), 0.002); end
  def test_outputs_energy_flows_ac156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac156||0), 0.002); end
  def test_outputs_energy_flows_ad156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad156||0), 0.002); end
  def test_outputs_energy_flows_c158; assert_equal("n/a", worksheet.outputs_energy_flows_c158); end
  def test_outputs_energy_flows_d158; assert_equal("Solid", worksheet.outputs_energy_flows_d158); end
  def test_outputs_energy_flows_e158; assert_equal("n/a", worksheet.outputs_energy_flows_e158); end
  def test_outputs_energy_flows_f158; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f158); end
  def test_outputs_energy_flows_i158; assert_equal("C.01", worksheet.outputs_energy_flows_i158); end
  def test_outputs_energy_flows_j158; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j158); end
  def test_outputs_energy_flows_k158; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k158); end
  def test_outputs_energy_flows_l158; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l158); end
  def test_outputs_energy_flows_v158; assert_in_epsilon(2.7875467832665146, worksheet.outputs_energy_flows_v158, 0.002); end
  def test_outputs_energy_flows_w158; assert_in_epsilon(2.836352246295604, worksheet.outputs_energy_flows_w158, 0.002); end
  def test_outputs_energy_flows_x158; assert_in_epsilon(2.746071340175582, worksheet.outputs_energy_flows_x158, 0.002); end
  def test_outputs_energy_flows_y158; assert_in_epsilon(2.6291541970344308, worksheet.outputs_energy_flows_y158, 0.002); end
  def test_outputs_energy_flows_z158; assert_in_epsilon(2.4825064191318678, worksheet.outputs_energy_flows_z158, 0.002); end
  def test_outputs_energy_flows_aa158; assert_in_epsilon(2.3029530720402906, worksheet.outputs_energy_flows_aa158, 0.002); end
  def test_outputs_energy_flows_ab158; assert_in_epsilon(2.106711290992033, worksheet.outputs_energy_flows_ab158, 0.002); end
  def test_outputs_energy_flows_ac158; assert_in_epsilon(1.8919085350868985, worksheet.outputs_energy_flows_ac158, 0.002); end
  def test_outputs_energy_flows_ad158; assert_in_epsilon(1.6713385162602985, worksheet.outputs_energy_flows_ad158, 0.002); end
  def test_outputs_energy_flows_c160; assert_equal("n/a", worksheet.outputs_energy_flows_c160); end
  def test_outputs_energy_flows_d160; assert_equal("Solid", worksheet.outputs_energy_flows_d160); end
  def test_outputs_energy_flows_e160; assert_equal("n/a", worksheet.outputs_energy_flows_e160); end
  def test_outputs_energy_flows_f160; assert_equal("Non domestic", worksheet.outputs_energy_flows_f160); end
  def test_outputs_energy_flows_i160; assert_equal("C.01", worksheet.outputs_energy_flows_i160); end
  def test_outputs_energy_flows_j160; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j160); end
  def test_outputs_energy_flows_k160; assert_equal("Non-residential", worksheet.outputs_energy_flows_k160); end
  def test_outputs_energy_flows_v160; assert_in_delta(0.8793766922958857, worksheet.outputs_energy_flows_v160, 0.002); end
  def test_outputs_energy_flows_w160; assert_in_delta(0.8488006416034026, worksheet.outputs_energy_flows_w160, 0.002); end
  def test_outputs_energy_flows_x160; assert_in_delta(0.8822923821195235, worksheet.outputs_energy_flows_x160, 0.002); end
  def test_outputs_energy_flows_y160; assert_in_delta(0.9055477501443456, worksheet.outputs_energy_flows_y160, 0.002); end
  def test_outputs_energy_flows_z160; assert_in_delta(0.9184514839101847, worksheet.outputs_energy_flows_z160, 0.002); end
  def test_outputs_energy_flows_aa160; assert_in_delta(0.9212888949304245, worksheet.outputs_energy_flows_aa160, 0.002); end
  def test_outputs_energy_flows_ab160; assert_in_delta(0.9142481476046505, worksheet.outputs_energy_flows_ab160, 0.002); end
  def test_outputs_energy_flows_ac160; assert_in_delta(0.8974903667882935, worksheet.outputs_energy_flows_ac160, 0.002); end
  def test_outputs_energy_flows_ad160; assert_in_delta(0.8714085905238182, worksheet.outputs_energy_flows_ad160, 0.002); end
  def test_outputs_energy_flows_c162; assert_equal("n/a", worksheet.outputs_energy_flows_c162); end
  def test_outputs_energy_flows_d162; assert_equal("Solid", worksheet.outputs_energy_flows_d162); end
  def test_outputs_energy_flows_e162; assert_equal("n/a", worksheet.outputs_energy_flows_e162); end
  def test_outputs_energy_flows_f162; assert_equal("Steel", worksheet.outputs_energy_flows_f162); end
  def test_outputs_energy_flows_i162; assert_equal("C.01", worksheet.outputs_energy_flows_i162); end
  def test_outputs_energy_flows_j162; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j162); end
  def test_outputs_energy_flows_v162; assert_in_delta(0.5489501886, worksheet.outputs_energy_flows_v162, 0.002); end
  def test_outputs_energy_flows_w162; assert_in_delta(0.5923794315843125, worksheet.outputs_energy_flows_w162, 0.002); end
  def test_outputs_energy_flows_x162; assert_in_delta(0.6762392836443324, worksheet.outputs_energy_flows_x162, 0.002); end
  def test_outputs_energy_flows_y162; assert_in_delta(0.7625962353370233, worksheet.outputs_energy_flows_y162, 0.002); end
  def test_outputs_energy_flows_z162; assert_in_delta(0.8547236927539748, worksheet.outputs_energy_flows_z162, 0.002); end
  def test_outputs_energy_flows_aa162; assert_in_delta(0.9510194766474667, worksheet.outputs_energy_flows_aa162, 0.002); end
  def test_outputs_energy_flows_ab162; assert_in_epsilon(1.0592082901612914, worksheet.outputs_energy_flows_ab162, 0.002); end
  def test_outputs_energy_flows_ac162; assert_in_epsilon(1.1791436525701808, worksheet.outputs_energy_flows_ac162, 0.002); end
  def test_outputs_energy_flows_ad162; assert_in_epsilon(1.311414966569554, worksheet.outputs_energy_flows_ad162, 0.002); end
  def test_outputs_energy_flows_c164; assert_equal("n/a", worksheet.outputs_energy_flows_c164); end
  def test_outputs_energy_flows_d164; assert_equal("Solid", worksheet.outputs_energy_flows_d164); end
  def test_outputs_energy_flows_e164; assert_equal("n/a", worksheet.outputs_energy_flows_e164); end
  def test_outputs_energy_flows_f164; assert_equal("Aluminium", worksheet.outputs_energy_flows_f164); end
  def test_outputs_energy_flows_i164; assert_equal("C.01", worksheet.outputs_energy_flows_i164); end
  def test_outputs_energy_flows_j164; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j164); end
  def test_outputs_energy_flows_v164; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v164||0), 0.002); end
  def test_outputs_energy_flows_w164; assert_in_delta(0.0002751537300514233, worksheet.outputs_energy_flows_w164, 0.002); end
  def test_outputs_energy_flows_x164; assert_in_delta(0.0006093129938754461, worksheet.outputs_energy_flows_x164, 0.002); end
  def test_outputs_energy_flows_y164; assert_in_delta(0.0010385455160213622, worksheet.outputs_energy_flows_y164, 0.002); end
  def test_outputs_energy_flows_z164; assert_in_delta(0.0015625212778814157, worksheet.outputs_energy_flows_z164, 0.002); end
  def test_outputs_energy_flows_aa164; assert_in_delta(0.0021795922236650398, worksheet.outputs_energy_flows_aa164, 0.002); end
  def test_outputs_energy_flows_ab164; assert_in_delta(0.002919059475074798, worksheet.outputs_energy_flows_ab164, 0.002); end
  def test_outputs_energy_flows_ac164; assert_in_delta(0.0037878735780808134, worksheet.outputs_energy_flows_ac164, 0.002); end
  def test_outputs_energy_flows_ad164; assert_in_delta(0.004818435324190987, worksheet.outputs_energy_flows_ad164, 0.002); end
  def test_outputs_energy_flows_c166; assert_equal("n/a", worksheet.outputs_energy_flows_c166); end
  def test_outputs_energy_flows_d166; assert_equal("Solid", worksheet.outputs_energy_flows_d166); end
  def test_outputs_energy_flows_e166; assert_equal("n/a", worksheet.outputs_energy_flows_e166); end
  def test_outputs_energy_flows_f166; assert_equal("Cement", worksheet.outputs_energy_flows_f166); end
  def test_outputs_energy_flows_i166; assert_equal("C.01", worksheet.outputs_energy_flows_i166); end
  def test_outputs_energy_flows_j166; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j166); end
  def test_outputs_energy_flows_v166; assert_in_delta(0.4925092998042991, worksheet.outputs_energy_flows_v166, 0.002); end
  def test_outputs_energy_flows_w166; assert_in_delta(0.5469190374321381, worksheet.outputs_energy_flows_w166, 0.002); end
  def test_outputs_energy_flows_x166; assert_in_delta(0.6627205634369758, worksheet.outputs_energy_flows_x166, 0.002); end
  def test_outputs_energy_flows_y166; assert_in_delta(0.7302441081574059, worksheet.outputs_energy_flows_y166, 0.002); end
  def test_outputs_energy_flows_z166; assert_in_delta(0.7968991058631837, worksheet.outputs_energy_flows_z166, 0.002); end
  def test_outputs_energy_flows_aa166; assert_in_delta(0.8643910233400843, worksheet.outputs_energy_flows_aa166, 0.002); end
  def test_outputs_energy_flows_ab166; assert_in_delta(0.9280210848230825, worksheet.outputs_energy_flows_ab166, 0.002); end
  def test_outputs_energy_flows_ac166; assert_in_delta(0.9922703515504419, worksheet.outputs_energy_flows_ac166, 0.002); end
  def test_outputs_energy_flows_ad166; assert_in_epsilon(1.0595886010659903, worksheet.outputs_energy_flows_ad166, 0.002); end
  def test_outputs_energy_flows_c168; assert_equal("n/a", worksheet.outputs_energy_flows_c168); end
  def test_outputs_energy_flows_d168; assert_equal("Solid", worksheet.outputs_energy_flows_d168); end
  def test_outputs_energy_flows_e168; assert_equal("n/a", worksheet.outputs_energy_flows_e168); end
  def test_outputs_energy_flows_f168; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f168); end
  def test_outputs_energy_flows_i168; assert_equal("C.01", worksheet.outputs_energy_flows_i168); end
  def test_outputs_energy_flows_j168; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j168); end
  def test_outputs_energy_flows_v168; assert_in_epsilon(1.7854467564492018, worksheet.outputs_energy_flows_v168, 0.002); end
  def test_outputs_energy_flows_w168; assert_in_epsilon(1.8529407163687055, worksheet.outputs_energy_flows_w168, 0.002); end
  def test_outputs_energy_flows_x168; assert_in_epsilon(1.9335418524471422, worksheet.outputs_energy_flows_x168, 0.002); end
  def test_outputs_energy_flows_y168; assert_in_epsilon(2.0932517132110644, worksheet.outputs_energy_flows_y168, 0.002); end
  def test_outputs_energy_flows_z168; assert_in_epsilon(2.2539701968969257, worksheet.outputs_energy_flows_z168, 0.002); end
  def test_outputs_energy_flows_aa168; assert_in_epsilon(2.4102386132969222, worksheet.outputs_energy_flows_aa168, 0.002); end
  def test_outputs_energy_flows_ab168; assert_in_epsilon(2.5821003348752356, worksheet.outputs_energy_flows_ab168, 0.002); end
  def test_outputs_energy_flows_ac168; assert_in_epsilon(2.7507466537445118, worksheet.outputs_energy_flows_ac168, 0.002); end
  def test_outputs_energy_flows_ad168; assert_in_epsilon(2.9370931280195784, worksheet.outputs_energy_flows_ad168, 0.002); end
  def test_outputs_energy_flows_c170; assert_equal("n/a", worksheet.outputs_energy_flows_c170); end
  def test_outputs_energy_flows_d170; assert_equal("Solid", worksheet.outputs_energy_flows_d170); end
  def test_outputs_energy_flows_e170; assert_equal("n/a", worksheet.outputs_energy_flows_e170); end
  def test_outputs_energy_flows_f170; assert_equal("Chemicals", worksheet.outputs_energy_flows_f170); end
  def test_outputs_energy_flows_i170; assert_equal("C.01", worksheet.outputs_energy_flows_i170); end
  def test_outputs_energy_flows_j170; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j170); end
  def test_outputs_energy_flows_v170; assert_in_delta(0.16313870478909603, worksheet.outputs_energy_flows_v170, 0.002); end
  def test_outputs_energy_flows_w170; assert_in_delta(0.18778233405091088, worksheet.outputs_energy_flows_w170, 0.002); end
  def test_outputs_energy_flows_x170; assert_in_delta(0.19878772010275397, worksheet.outputs_energy_flows_x170, 0.002); end
  def test_outputs_energy_flows_y170; assert_in_delta(0.22268712970120938, worksheet.outputs_energy_flows_y170, 0.002); end
  def test_outputs_energy_flows_z170; assert_in_delta(0.24807639928680655, worksheet.outputs_energy_flows_z170, 0.002); end
  def test_outputs_energy_flows_aa170; assert_in_delta(0.2739239998859768, worksheet.outputs_energy_flows_aa170, 0.002); end
  def test_outputs_energy_flows_ab170; assert_in_delta(0.3038387133478889, worksheet.outputs_energy_flows_ab170, 0.002); end
  def test_outputs_energy_flows_ac170; assert_in_delta(0.3348605987974344, worksheet.outputs_energy_flows_ac170, 0.002); end
  def test_outputs_energy_flows_ad170; assert_in_delta(0.37078423568192914, worksheet.outputs_energy_flows_ad170, 0.002); end
  def test_outputs_energy_flows_c172; assert_equal("n/a", worksheet.outputs_energy_flows_c172); end
  def test_outputs_energy_flows_d172; assert_equal("Solid", worksheet.outputs_energy_flows_d172); end
  def test_outputs_energy_flows_e172; assert_equal("n/a", worksheet.outputs_energy_flows_e172); end
  def test_outputs_energy_flows_f172; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f172); end
  def test_outputs_energy_flows_i172; assert_equal("C.01", worksheet.outputs_energy_flows_i172); end
  def test_outputs_energy_flows_j172; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j172); end
  def test_outputs_energy_flows_l172; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l172); end
  def test_outputs_energy_flows_m172; assert_equal("Timber", worksheet.outputs_energy_flows_m172); end
  def test_outputs_energy_flows_v172; assert_in_epsilon(5.432131184106508, worksheet.outputs_energy_flows_v172, 0.002); end
  def test_outputs_energy_flows_w172; assert_in_epsilon(5.82290369540115, worksheet.outputs_energy_flows_w172, 0.002); end
  def test_outputs_energy_flows_x172; assert_in_epsilon(6.519915779540442, worksheet.outputs_energy_flows_x172, 0.002); end
  def test_outputs_energy_flows_y172; assert_in_epsilon(7.185462933141935, worksheet.outputs_energy_flows_y172, 0.002); end
  def test_outputs_energy_flows_z172; assert_in_epsilon(7.837995834358358, worksheet.outputs_energy_flows_z172, 0.002); end
  def test_outputs_energy_flows_aa172; assert_in_epsilon(8.47466074816221, worksheet.outputs_energy_flows_aa172, 0.002); end
  def test_outputs_energy_flows_ab172; assert_in_epsilon(9.089064623298784, worksheet.outputs_energy_flows_ab172, 0.002); end
  def test_outputs_energy_flows_ac172; assert_in_epsilon(9.675660082951062, worksheet.outputs_energy_flows_ac172, 0.002); end
  def test_outputs_energy_flows_ad172; assert_in_epsilon(10.223955753363375, worksheet.outputs_energy_flows_ad172, 0.002); end
  def test_outputs_energy_flows_c174; assert_equal("n/a", worksheet.outputs_energy_flows_c174); end
  def test_outputs_energy_flows_d174; assert_equal("Solid", worksheet.outputs_energy_flows_d174); end
  def test_outputs_energy_flows_e174; assert_equal("n/a", worksheet.outputs_energy_flows_e174); end
  def test_outputs_energy_flows_f174; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f174); end
  def test_outputs_energy_flows_i174; assert_equal("C.01", worksheet.outputs_energy_flows_i174); end
  def test_outputs_energy_flows_j174; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j174); end
  def test_outputs_energy_flows_l174; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l174); end
  def test_outputs_energy_flows_m174; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m174); end
  def test_outputs_energy_flows_v174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v174||0), 0.002); end
  def test_outputs_energy_flows_w174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w174||0), 0.002); end
  def test_outputs_energy_flows_x174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x174||0), 0.002); end
  def test_outputs_energy_flows_y174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y174||0), 0.002); end
  def test_outputs_energy_flows_z174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z174||0), 0.002); end
  def test_outputs_energy_flows_aa174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa174||0), 0.002); end
  def test_outputs_energy_flows_ab174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab174||0), 0.002); end
  def test_outputs_energy_flows_ac174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac174||0), 0.002); end
  def test_outputs_energy_flows_ad174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad174||0), 0.002); end
  def test_outputs_energy_flows_c176; assert_equal("n/a", worksheet.outputs_energy_flows_c176); end
  def test_outputs_energy_flows_d176; assert_equal("Solid", worksheet.outputs_energy_flows_d176); end
  def test_outputs_energy_flows_e176; assert_equal("n/a", worksheet.outputs_energy_flows_e176); end
  def test_outputs_energy_flows_f176; assert_equal("International passenger", worksheet.outputs_energy_flows_f176); end
  def test_outputs_energy_flows_i176; assert_equal("C.01", worksheet.outputs_energy_flows_i176); end
  def test_outputs_energy_flows_j176; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j176); end
  def test_outputs_energy_flows_l176; assert_equal("International", worksheet.outputs_energy_flows_l176); end
  def test_outputs_energy_flows_v176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v176||0), 0.002); end
  def test_outputs_energy_flows_w176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w176||0), 0.002); end
  def test_outputs_energy_flows_x176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x176||0), 0.002); end
  def test_outputs_energy_flows_y176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y176||0), 0.002); end
  def test_outputs_energy_flows_z176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z176||0), 0.002); end
  def test_outputs_energy_flows_aa176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa176||0), 0.002); end
  def test_outputs_energy_flows_ab176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab176||0), 0.002); end
  def test_outputs_energy_flows_ac176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac176||0), 0.002); end
  def test_outputs_energy_flows_ad176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad176||0), 0.002); end
  def test_outputs_energy_flows_c178; assert_equal("n/a", worksheet.outputs_energy_flows_c178); end
  def test_outputs_energy_flows_d178; assert_equal("Solid", worksheet.outputs_energy_flows_d178); end
  def test_outputs_energy_flows_e178; assert_equal("n/a", worksheet.outputs_energy_flows_e178); end
  def test_outputs_energy_flows_f178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f178); end
  def test_outputs_energy_flows_i178; assert_equal("C.01", worksheet.outputs_energy_flows_i178); end
  def test_outputs_energy_flows_j178; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j178); end
  def test_outputs_energy_flows_l178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l178); end
  def test_outputs_energy_flows_v178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v178||0), 0.002); end
  def test_outputs_energy_flows_w178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w178||0), 0.002); end
  def test_outputs_energy_flows_x178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x178||0), 0.002); end
  def test_outputs_energy_flows_y178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y178||0), 0.002); end
  def test_outputs_energy_flows_z178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z178||0), 0.002); end
  def test_outputs_energy_flows_aa178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa178||0), 0.002); end
  def test_outputs_energy_flows_ab178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab178||0), 0.002); end
  def test_outputs_energy_flows_ac178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac178||0), 0.002); end
  def test_outputs_energy_flows_ad178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad178||0), 0.002); end
  def test_outputs_energy_flows_c180; assert_equal("n/a", worksheet.outputs_energy_flows_c180); end
  def test_outputs_energy_flows_d180; assert_equal("Solid", worksheet.outputs_energy_flows_d180); end
  def test_outputs_energy_flows_e180; assert_equal("n/a", worksheet.outputs_energy_flows_e180); end
  def test_outputs_energy_flows_f180; assert_equal("International freight", worksheet.outputs_energy_flows_f180); end
  def test_outputs_energy_flows_i180; assert_equal("C.01", worksheet.outputs_energy_flows_i180); end
  def test_outputs_energy_flows_j180; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j180); end
  def test_outputs_energy_flows_l180; assert_equal("International freight", worksheet.outputs_energy_flows_l180); end
  def test_outputs_energy_flows_v180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v180||0), 0.002); end
  def test_outputs_energy_flows_w180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w180||0), 0.002); end
  def test_outputs_energy_flows_x180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x180||0), 0.002); end
  def test_outputs_energy_flows_y180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y180||0), 0.002); end
  def test_outputs_energy_flows_z180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z180||0), 0.002); end
  def test_outputs_energy_flows_aa180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa180||0), 0.002); end
  def test_outputs_energy_flows_ab180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab180||0), 0.002); end
  def test_outputs_energy_flows_ac180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac180||0), 0.002); end
  def test_outputs_energy_flows_ad180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad180||0), 0.002); end
  def test_outputs_energy_flows_c182; assert_equal("n/a", worksheet.outputs_energy_flows_c182); end
  def test_outputs_energy_flows_d182; assert_equal("Solid", worksheet.outputs_energy_flows_d182); end
  def test_outputs_energy_flows_e182; assert_equal("n/a", worksheet.outputs_energy_flows_e182); end
  def test_outputs_energy_flows_f182; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f182); end
  def test_outputs_energy_flows_i182; assert_equal("C.01", worksheet.outputs_energy_flows_i182); end
  def test_outputs_energy_flows_j182; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j182); end
  def test_outputs_energy_flows_v182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v182||0), 0.002); end
  def test_outputs_energy_flows_w182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w182||0), 0.002); end
  def test_outputs_energy_flows_x182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x182||0), 0.002); end
  def test_outputs_energy_flows_y182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y182||0), 0.002); end
  def test_outputs_energy_flows_z182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z182||0), 0.002); end
  def test_outputs_energy_flows_aa182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa182||0), 0.002); end
  def test_outputs_energy_flows_ab182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab182||0), 0.002); end
  def test_outputs_energy_flows_ac182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac182||0), 0.002); end
  def test_outputs_energy_flows_ad182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad182||0), 0.002); end
  def test_outputs_energy_flows_c184; assert_equal("n/a", worksheet.outputs_energy_flows_c184); end
  def test_outputs_energy_flows_d184; assert_equal("Solid", worksheet.outputs_energy_flows_d184); end
  def test_outputs_energy_flows_e184; assert_equal("G.01", worksheet.outputs_energy_flows_e184); end
  def test_outputs_energy_flows_f184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f184); end
  def test_outputs_energy_flows_g184; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g184); end
  def test_outputs_energy_flows_h184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h184); end
  def test_outputs_energy_flows_i184; assert_equal("C.01", worksheet.outputs_energy_flows_i184); end
  def test_outputs_energy_flows_j184; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j184); end
  def test_outputs_energy_flows_v184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v184||0), 0.002); end
  def test_outputs_energy_flows_w184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w184||0), 0.002); end
  def test_outputs_energy_flows_x184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x184||0), 0.002); end
  def test_outputs_energy_flows_y184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y184||0), 0.002); end
  def test_outputs_energy_flows_z184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z184||0), 0.002); end
  def test_outputs_energy_flows_aa184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa184||0), 0.002); end
  def test_outputs_energy_flows_ab184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab184||0), 0.002); end
  def test_outputs_energy_flows_ac184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac184||0), 0.002); end
  def test_outputs_energy_flows_ad184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad184||0), 0.002); end
  def test_outputs_energy_flows_c186; assert_equal("n/a", worksheet.outputs_energy_flows_c186); end
  def test_outputs_energy_flows_d186; assert_equal("Solid", worksheet.outputs_energy_flows_d186); end
  def test_outputs_energy_flows_e186; assert_equal("n/a", worksheet.outputs_energy_flows_e186); end
  def test_outputs_energy_flows_f186; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f186); end
  def test_outputs_energy_flows_g186; assert_equal("n/a", worksheet.outputs_energy_flows_g186); end
  def test_outputs_energy_flows_h186; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h186); end
  def test_outputs_energy_flows_i186; assert_equal("C.01", worksheet.outputs_energy_flows_i186); end
  def test_outputs_energy_flows_j186; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j186); end
  def test_outputs_energy_flows_v186; assert_in_epsilon(25.279867917314462, worksheet.outputs_energy_flows_v186, 0.002); end
  def test_outputs_energy_flows_w186; assert_in_epsilon(24.856661569733713, worksheet.outputs_energy_flows_w186, 0.002); end
  def test_outputs_energy_flows_x186; assert_in_epsilon(24.92916630062701, worksheet.outputs_energy_flows_x186, 0.002); end
  def test_outputs_energy_flows_y186; assert_in_epsilon(24.96672451106335, worksheet.outputs_energy_flows_y186, 0.002); end
  def test_outputs_energy_flows_z186; assert_in_epsilon(24.84584717350232, worksheet.outputs_energy_flows_z186, 0.002); end
  def test_outputs_energy_flows_aa186; assert_in_epsilon(24.530812227802194, worksheet.outputs_energy_flows_aa186, 0.002); end
  def test_outputs_energy_flows_ab186; assert_in_epsilon(24.191138798176162, worksheet.outputs_energy_flows_ab186, 0.002); end
  def test_outputs_energy_flows_ac186; assert_in_epsilon(23.99450537835159, worksheet.outputs_energy_flows_ac186, 0.002); end
  def test_outputs_energy_flows_ad186; assert_in_epsilon(25.26143967413388, worksheet.outputs_energy_flows_ad186, 0.002); end
  def test_outputs_energy_flows_c188; assert_equal("n/a", worksheet.outputs_energy_flows_c188); end
  def test_outputs_energy_flows_d188; assert_equal("Liquid", worksheet.outputs_energy_flows_d188); end
  def test_outputs_energy_flows_e188; assert_equal("n/a", worksheet.outputs_energy_flows_e188); end
  def test_outputs_energy_flows_f188; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f188); end
  def test_outputs_energy_flows_i188; assert_equal("C.02", worksheet.outputs_energy_flows_i188); end
  def test_outputs_energy_flows_j188; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j188); end
  def test_outputs_energy_flows_k188; assert_equal("Global buildings", worksheet.outputs_energy_flows_k188); end
  def test_outputs_energy_flows_v188; assert_in_epsilon(5.732318161068067, worksheet.outputs_energy_flows_v188, 0.002); end
  def test_outputs_energy_flows_w188; assert_in_epsilon(5.668256677724315, worksheet.outputs_energy_flows_w188, 0.002); end
  def test_outputs_energy_flows_x188; assert_in_epsilon(5.795627175296191, worksheet.outputs_energy_flows_x188, 0.002); end
  def test_outputs_energy_flows_y188; assert_in_epsilon(5.884556656434837, worksheet.outputs_energy_flows_y188, 0.002); end
  def test_outputs_energy_flows_z188; assert_in_epsilon(5.916328858490689, worksheet.outputs_energy_flows_z188, 0.002); end
  def test_outputs_energy_flows_aa188; assert_in_epsilon(5.873991951037507, worksheet.outputs_energy_flows_aa188, 0.002); end
  def test_outputs_energy_flows_ab188; assert_in_epsilon(5.786793408424977, worksheet.outputs_energy_flows_ab188, 0.002); end
  def test_outputs_energy_flows_ac188; assert_in_epsilon(5.63888875520121, worksheet.outputs_energy_flows_ac188, 0.002); end
  def test_outputs_energy_flows_ad188; assert_in_epsilon(5.458519521836803, worksheet.outputs_energy_flows_ad188, 0.002); end
  def test_outputs_energy_flows_c190; assert_equal("n/a", worksheet.outputs_energy_flows_c190); end
  def test_outputs_energy_flows_d190; assert_equal("Liquid", worksheet.outputs_energy_flows_d190); end
  def test_outputs_energy_flows_e190; assert_equal("n/a", worksheet.outputs_energy_flows_e190); end
  def test_outputs_energy_flows_f190; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f190); end
  def test_outputs_energy_flows_i190; assert_equal("C.02", worksheet.outputs_energy_flows_i190); end
  def test_outputs_energy_flows_j190; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j190); end
  def test_outputs_energy_flows_k190; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k190); end
  def test_outputs_energy_flows_l190; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l190); end
  def test_outputs_energy_flows_v190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v190||0), 0.002); end
  def test_outputs_energy_flows_w190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w190||0), 0.002); end
  def test_outputs_energy_flows_x190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x190||0), 0.002); end
  def test_outputs_energy_flows_y190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y190||0), 0.002); end
  def test_outputs_energy_flows_z190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z190||0), 0.002); end
  def test_outputs_energy_flows_aa190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa190||0), 0.002); end
  def test_outputs_energy_flows_ab190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab190||0), 0.002); end
  def test_outputs_energy_flows_ac190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac190||0), 0.002); end
  def test_outputs_energy_flows_ad190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad190||0), 0.002); end
  def test_outputs_energy_flows_c192; assert_equal("n/a", worksheet.outputs_energy_flows_c192); end
  def test_outputs_energy_flows_d192; assert_equal("Liquid", worksheet.outputs_energy_flows_d192); end
  def test_outputs_energy_flows_e192; assert_equal("n/a", worksheet.outputs_energy_flows_e192); end
  def test_outputs_energy_flows_f192; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f192); end
  def test_outputs_energy_flows_i192; assert_equal("C.02", worksheet.outputs_energy_flows_i192); end
  def test_outputs_energy_flows_j192; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j192); end
  def test_outputs_energy_flows_k192; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k192); end
  def test_outputs_energy_flows_l192; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l192); end
  def test_outputs_energy_flows_v192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v192||0), 0.002); end
  def test_outputs_energy_flows_w192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w192||0), 0.002); end
  def test_outputs_energy_flows_x192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x192||0), 0.002); end
  def test_outputs_energy_flows_y192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y192||0), 0.002); end
  def test_outputs_energy_flows_z192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z192||0), 0.002); end
  def test_outputs_energy_flows_aa192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa192||0), 0.002); end
  def test_outputs_energy_flows_ab192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab192||0), 0.002); end
  def test_outputs_energy_flows_ac192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac192||0), 0.002); end
  def test_outputs_energy_flows_ad192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad192||0), 0.002); end
  def test_outputs_energy_flows_c194; assert_equal("n/a", worksheet.outputs_energy_flows_c194); end
  def test_outputs_energy_flows_d194; assert_equal("Liquid", worksheet.outputs_energy_flows_d194); end
  def test_outputs_energy_flows_e194; assert_equal("n/a", worksheet.outputs_energy_flows_e194); end
  def test_outputs_energy_flows_f194; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f194); end
  def test_outputs_energy_flows_i194; assert_equal("C.02", worksheet.outputs_energy_flows_i194); end
  def test_outputs_energy_flows_j194; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j194); end
  def test_outputs_energy_flows_k194; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k194); end
  def test_outputs_energy_flows_l194; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l194); end
  def test_outputs_energy_flows_v194; assert_in_epsilon(2.12837206627918, worksheet.outputs_energy_flows_v194, 0.002); end
  def test_outputs_energy_flows_w194; assert_in_epsilon(2.295047936539375, worksheet.outputs_energy_flows_w194, 0.002); end
  def test_outputs_energy_flows_x194; assert_in_epsilon(2.4070756003717597, worksheet.outputs_energy_flows_x194, 0.002); end
  def test_outputs_energy_flows_y194; assert_in_epsilon(2.5056957563370403, worksheet.outputs_energy_flows_y194, 0.002); end
  def test_outputs_energy_flows_z194; assert_in_epsilon(2.5836060358471133, worksheet.outputs_energy_flows_z194, 0.002); end
  def test_outputs_energy_flows_aa194; assert_in_epsilon(2.630843858987676, worksheet.outputs_energy_flows_aa194, 0.002); end
  def test_outputs_energy_flows_ab194; assert_in_epsilon(2.658299268234082, worksheet.outputs_energy_flows_ab194, 0.002); end
  def test_outputs_energy_flows_ac194; assert_in_epsilon(2.6570690544537587, worksheet.outputs_energy_flows_ac194, 0.002); end
  def test_outputs_energy_flows_ad194; assert_in_epsilon(2.6382778127639126, worksheet.outputs_energy_flows_ad194, 0.002); end
  def test_outputs_energy_flows_c196; assert_equal("n/a", worksheet.outputs_energy_flows_c196); end
  def test_outputs_energy_flows_d196; assert_equal("Liquid", worksheet.outputs_energy_flows_d196); end
  def test_outputs_energy_flows_e196; assert_equal("n/a", worksheet.outputs_energy_flows_e196); end
  def test_outputs_energy_flows_f196; assert_equal("Non domestic", worksheet.outputs_energy_flows_f196); end
  def test_outputs_energy_flows_i196; assert_equal("C.02", worksheet.outputs_energy_flows_i196); end
  def test_outputs_energy_flows_j196; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j196); end
  def test_outputs_energy_flows_k196; assert_equal("Non-residential", worksheet.outputs_energy_flows_k196); end
  def test_outputs_energy_flows_v196; assert_in_epsilon(2.152728852794557, worksheet.outputs_energy_flows_v196, 0.002); end
  def test_outputs_energy_flows_w196; assert_in_epsilon(2.016732596527492, worksheet.outputs_energy_flows_w196, 0.002); end
  def test_outputs_energy_flows_x196; assert_in_epsilon(2.0786464043496116, worksheet.outputs_energy_flows_x196, 0.002); end
  def test_outputs_energy_flows_y196; assert_in_epsilon(2.116745599685142, worksheet.outputs_energy_flows_y196, 0.002); end
  def test_outputs_energy_flows_z196; assert_in_epsilon(2.131385577732863, worksheet.outputs_energy_flows_z196, 0.002); end
  def test_outputs_energy_flows_aa196; assert_in_epsilon(2.123781678408314, worksheet.outputs_energy_flows_aa196, 0.002); end
  def test_outputs_energy_flows_ab196; assert_in_epsilon(2.0948467646789073, worksheet.outputs_energy_flows_ab196, 0.002); end
  def test_outputs_energy_flows_ac196; assert_in_epsilon(2.0453660604778263, worksheet.outputs_energy_flows_ac196, 0.002); end
  def test_outputs_energy_flows_ad196; assert_in_epsilon(1.9765906307311951, worksheet.outputs_energy_flows_ad196, 0.002); end
  def test_outputs_energy_flows_c198; assert_equal("n/a", worksheet.outputs_energy_flows_c198); end
  def test_outputs_energy_flows_d198; assert_equal("Liquid", worksheet.outputs_energy_flows_d198); end
  def test_outputs_energy_flows_e198; assert_equal("n/a", worksheet.outputs_energy_flows_e198); end
  def test_outputs_energy_flows_f198; assert_equal("Steel", worksheet.outputs_energy_flows_f198); end
  def test_outputs_energy_flows_i198; assert_equal("C.02", worksheet.outputs_energy_flows_i198); end
  def test_outputs_energy_flows_j198; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j198); end
  def test_outputs_energy_flows_v198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v198||0), 0.002); end
  def test_outputs_energy_flows_w198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w198||0), 0.002); end
  def test_outputs_energy_flows_x198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x198||0), 0.002); end
  def test_outputs_energy_flows_y198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y198||0), 0.002); end
  def test_outputs_energy_flows_z198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z198||0), 0.002); end
  def test_outputs_energy_flows_aa198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa198||0), 0.002); end
  def test_outputs_energy_flows_ab198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab198||0), 0.002); end
  def test_outputs_energy_flows_ac198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac198||0), 0.002); end
  def test_outputs_energy_flows_ad198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad198||0), 0.002); end
  def test_outputs_energy_flows_c200; assert_equal("n/a", worksheet.outputs_energy_flows_c200); end
  def test_outputs_energy_flows_d200; assert_equal("Liquid", worksheet.outputs_energy_flows_d200); end
  def test_outputs_energy_flows_e200; assert_equal("n/a", worksheet.outputs_energy_flows_e200); end
  def test_outputs_energy_flows_f200; assert_equal("Aluminium", worksheet.outputs_energy_flows_f200); end
  def test_outputs_energy_flows_i200; assert_equal("C.02", worksheet.outputs_energy_flows_i200); end
  def test_outputs_energy_flows_j200; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j200); end
  def test_outputs_energy_flows_v200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v200||0), 0.002); end
  def test_outputs_energy_flows_w200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w200||0), 0.002); end
  def test_outputs_energy_flows_x200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x200||0), 0.002); end
  def test_outputs_energy_flows_y200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y200||0), 0.002); end
  def test_outputs_energy_flows_z200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z200||0), 0.002); end
  def test_outputs_energy_flows_aa200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa200||0), 0.002); end
  def test_outputs_energy_flows_ab200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab200||0), 0.002); end
  def test_outputs_energy_flows_ac200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac200||0), 0.002); end
  def test_outputs_energy_flows_ad200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad200||0), 0.002); end
  def test_outputs_energy_flows_c202; assert_equal("n/a", worksheet.outputs_energy_flows_c202); end
  def test_outputs_energy_flows_d202; assert_equal("Liquid", worksheet.outputs_energy_flows_d202); end
  def test_outputs_energy_flows_e202; assert_equal("n/a", worksheet.outputs_energy_flows_e202); end
  def test_outputs_energy_flows_f202; assert_equal("Cement", worksheet.outputs_energy_flows_f202); end
  def test_outputs_energy_flows_i202; assert_equal("C.02", worksheet.outputs_energy_flows_i202); end
  def test_outputs_energy_flows_j202; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j202); end
  def test_outputs_energy_flows_v202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v202||0), 0.002); end
  def test_outputs_energy_flows_w202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w202||0), 0.002); end
  def test_outputs_energy_flows_x202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x202||0), 0.002); end
  def test_outputs_energy_flows_y202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y202||0), 0.002); end
  def test_outputs_energy_flows_z202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z202||0), 0.002); end
  def test_outputs_energy_flows_aa202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa202||0), 0.002); end
  def test_outputs_energy_flows_ab202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab202||0), 0.002); end
  def test_outputs_energy_flows_ac202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac202||0), 0.002); end
  def test_outputs_energy_flows_ad202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad202||0), 0.002); end
  def test_outputs_energy_flows_c204; assert_equal("n/a", worksheet.outputs_energy_flows_c204); end
  def test_outputs_energy_flows_d204; assert_equal("Liquid", worksheet.outputs_energy_flows_d204); end
  def test_outputs_energy_flows_e204; assert_equal("n/a", worksheet.outputs_energy_flows_e204); end
  def test_outputs_energy_flows_f204; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f204); end
  def test_outputs_energy_flows_i204; assert_equal("C.02", worksheet.outputs_energy_flows_i204); end
  def test_outputs_energy_flows_j204; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j204); end
  def test_outputs_energy_flows_v204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v204||0), 0.002); end
  def test_outputs_energy_flows_w204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w204||0), 0.002); end
  def test_outputs_energy_flows_x204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x204||0), 0.002); end
  def test_outputs_energy_flows_y204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y204||0), 0.002); end
  def test_outputs_energy_flows_z204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z204||0), 0.002); end
  def test_outputs_energy_flows_aa204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa204||0), 0.002); end
  def test_outputs_energy_flows_ab204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab204||0), 0.002); end
  def test_outputs_energy_flows_ac204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac204||0), 0.002); end
  def test_outputs_energy_flows_ad204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad204||0), 0.002); end
  def test_outputs_energy_flows_c206; assert_equal("n/a", worksheet.outputs_energy_flows_c206); end
  def test_outputs_energy_flows_d206; assert_equal("Liquid", worksheet.outputs_energy_flows_d206); end
  def test_outputs_energy_flows_e206; assert_equal("n/a", worksheet.outputs_energy_flows_e206); end
  def test_outputs_energy_flows_f206; assert_equal("Chemicals", worksheet.outputs_energy_flows_f206); end
  def test_outputs_energy_flows_i206; assert_equal("C.02", worksheet.outputs_energy_flows_i206); end
  def test_outputs_energy_flows_j206; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j206); end
  def test_outputs_energy_flows_v206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v206||0), 0.002); end
  def test_outputs_energy_flows_w206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w206||0), 0.002); end
  def test_outputs_energy_flows_x206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x206||0), 0.002); end
  def test_outputs_energy_flows_y206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y206||0), 0.002); end
  def test_outputs_energy_flows_z206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z206||0), 0.002); end
  def test_outputs_energy_flows_aa206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa206||0), 0.002); end
  def test_outputs_energy_flows_ab206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab206||0), 0.002); end
  def test_outputs_energy_flows_ac206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac206||0), 0.002); end
  def test_outputs_energy_flows_ad206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad206||0), 0.002); end
  def test_outputs_energy_flows_c208; assert_equal("n/a", worksheet.outputs_energy_flows_c208); end
  def test_outputs_energy_flows_d208; assert_equal("Liquid", worksheet.outputs_energy_flows_d208); end
  def test_outputs_energy_flows_e208; assert_equal("n/a", worksheet.outputs_energy_flows_e208); end
  def test_outputs_energy_flows_f208; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f208); end
  def test_outputs_energy_flows_i208; assert_equal("C.02", worksheet.outputs_energy_flows_i208); end
  def test_outputs_energy_flows_j208; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j208); end
  def test_outputs_energy_flows_l208; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l208); end
  def test_outputs_energy_flows_m208; assert_equal("Timber", worksheet.outputs_energy_flows_m208); end
  def test_outputs_energy_flows_v208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v208||0), 0.002); end
  def test_outputs_energy_flows_w208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w208||0), 0.002); end
  def test_outputs_energy_flows_x208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x208||0), 0.002); end
  def test_outputs_energy_flows_y208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y208||0), 0.002); end
  def test_outputs_energy_flows_z208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z208||0), 0.002); end
  def test_outputs_energy_flows_aa208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa208||0), 0.002); end
  def test_outputs_energy_flows_ab208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab208||0), 0.002); end
  def test_outputs_energy_flows_ac208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac208||0), 0.002); end
  def test_outputs_energy_flows_ad208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad208||0), 0.002); end
  def test_outputs_energy_flows_c210; assert_equal("n/a", worksheet.outputs_energy_flows_c210); end
  def test_outputs_energy_flows_d210; assert_equal("Liquid", worksheet.outputs_energy_flows_d210); end
  def test_outputs_energy_flows_e210; assert_equal("n/a", worksheet.outputs_energy_flows_e210); end
  def test_outputs_energy_flows_f210; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f210); end
  def test_outputs_energy_flows_i210; assert_equal("C.02", worksheet.outputs_energy_flows_i210); end
  def test_outputs_energy_flows_j210; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j210); end
  def test_outputs_energy_flows_l210; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l210); end
  def test_outputs_energy_flows_m210; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m210); end
  def test_outputs_energy_flows_v210; assert_in_epsilon(47.8936752677933, worksheet.outputs_energy_flows_v210, 0.002); end
  def test_outputs_energy_flows_w210; assert_in_epsilon(49.519571906539596, worksheet.outputs_energy_flows_w210, 0.002); end
  def test_outputs_energy_flows_x210; assert_in_epsilon(54.14233832427598, worksheet.outputs_energy_flows_x210, 0.002); end
  def test_outputs_energy_flows_y210; assert_in_epsilon(57.061934039790714, worksheet.outputs_energy_flows_y210, 0.002); end
  def test_outputs_energy_flows_z210; assert_in_epsilon(60.06095951093511, worksheet.outputs_energy_flows_z210, 0.002); end
  def test_outputs_energy_flows_aa210; assert_in_epsilon(63.275899724656, worksheet.outputs_energy_flows_aa210, 0.002); end
  def test_outputs_energy_flows_ab210; assert_in_epsilon(66.6061288654539, worksheet.outputs_energy_flows_ab210, 0.002); end
  def test_outputs_energy_flows_ac210; assert_in_epsilon(69.93186679331035, worksheet.outputs_energy_flows_ac210, 0.002); end
  def test_outputs_energy_flows_ad210; assert_in_epsilon(73.67582236939379, worksheet.outputs_energy_flows_ad210, 0.002); end
  def test_outputs_energy_flows_c212; assert_equal("n/a", worksheet.outputs_energy_flows_c212); end
  def test_outputs_energy_flows_d212; assert_equal("Liquid", worksheet.outputs_energy_flows_d212); end
  def test_outputs_energy_flows_e212; assert_equal("n/a", worksheet.outputs_energy_flows_e212); end
  def test_outputs_energy_flows_f212; assert_equal("International passenger", worksheet.outputs_energy_flows_f212); end
  def test_outputs_energy_flows_i212; assert_equal("C.02", worksheet.outputs_energy_flows_i212); end
  def test_outputs_energy_flows_j212; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j212); end
  def test_outputs_energy_flows_l212; assert_equal("International", worksheet.outputs_energy_flows_l212); end
  def test_outputs_energy_flows_v212; assert_in_epsilon(11.200783672219371, worksheet.outputs_energy_flows_v212, 0.002); end
  def test_outputs_energy_flows_w212; assert_in_epsilon(11.815011975001857, worksheet.outputs_energy_flows_w212, 0.002); end
  def test_outputs_energy_flows_x212; assert_in_epsilon(12.322774447852725, worksheet.outputs_energy_flows_x212, 0.002); end
  def test_outputs_energy_flows_y212; assert_in_epsilon(12.614432661799698, worksheet.outputs_energy_flows_y212, 0.002); end
  def test_outputs_energy_flows_z212; assert_in_epsilon(13.104968681109362, worksheet.outputs_energy_flows_z212, 0.002); end
  def test_outputs_energy_flows_aa212; assert_in_epsilon(13.844235579518893, worksheet.outputs_energy_flows_aa212, 0.002); end
  def test_outputs_energy_flows_ab212; assert_in_epsilon(14.789788448273892, worksheet.outputs_energy_flows_ab212, 0.002); end
  def test_outputs_energy_flows_ac212; assert_in_epsilon(15.964942447305596, worksheet.outputs_energy_flows_ac212, 0.002); end
  def test_outputs_energy_flows_ad212; assert_in_epsilon(17.416251976009637, worksheet.outputs_energy_flows_ad212, 0.002); end
  def test_outputs_energy_flows_c214; assert_equal("n/a", worksheet.outputs_energy_flows_c214); end
  def test_outputs_energy_flows_d214; assert_equal("Liquid", worksheet.outputs_energy_flows_d214); end
  def test_outputs_energy_flows_e214; assert_equal("n/a", worksheet.outputs_energy_flows_e214); end
  def test_outputs_energy_flows_f214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f214); end
  def test_outputs_energy_flows_i214; assert_equal("C.02", worksheet.outputs_energy_flows_i214); end
  def test_outputs_energy_flows_j214; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j214); end
  def test_outputs_energy_flows_l214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l214); end
  def test_outputs_energy_flows_v214; assert_in_epsilon(23.68414579378021, worksheet.outputs_energy_flows_v214, 0.002); end
  def test_outputs_energy_flows_w214; assert_in_epsilon(25.37722323503368, worksheet.outputs_energy_flows_w214, 0.002); end
  def test_outputs_energy_flows_x214; assert_in_epsilon(28.915888256376935, worksheet.outputs_energy_flows_x214, 0.002); end
  def test_outputs_energy_flows_y214; assert_in_epsilon(32.117270621546844, worksheet.outputs_energy_flows_y214, 0.002); end
  def test_outputs_energy_flows_z214; assert_in_epsilon(34.012112960000316, worksheet.outputs_energy_flows_z214, 0.002); end
  def test_outputs_energy_flows_aa214; assert_in_epsilon(35.01649388864866, worksheet.outputs_energy_flows_aa214, 0.002); end
  def test_outputs_energy_flows_ab214; assert_in_epsilon(35.131540565060654, worksheet.outputs_energy_flows_ab214, 0.002); end
  def test_outputs_energy_flows_ac214; assert_in_epsilon(34.81200353377612, worksheet.outputs_energy_flows_ac214, 0.002); end
  def test_outputs_energy_flows_ad214; assert_in_epsilon(34.087481866855825, worksheet.outputs_energy_flows_ad214, 0.002); end
  def test_outputs_energy_flows_c216; assert_equal("n/a", worksheet.outputs_energy_flows_c216); end
  def test_outputs_energy_flows_d216; assert_equal("Liquid", worksheet.outputs_energy_flows_d216); end
  def test_outputs_energy_flows_e216; assert_equal("n/a", worksheet.outputs_energy_flows_e216); end
  def test_outputs_energy_flows_f216; assert_equal("International freight", worksheet.outputs_energy_flows_f216); end
  def test_outputs_energy_flows_i216; assert_equal("C.02", worksheet.outputs_energy_flows_i216); end
  def test_outputs_energy_flows_j216; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j216); end
  def test_outputs_energy_flows_l216; assert_equal("International freight", worksheet.outputs_energy_flows_l216); end
  def test_outputs_energy_flows_v216; assert_in_epsilon(15.613329526301518, worksheet.outputs_energy_flows_v216, 0.002); end
  def test_outputs_energy_flows_w216; assert_in_epsilon(17.146759607815063, worksheet.outputs_energy_flows_w216, 0.002); end
  def test_outputs_energy_flows_x216; assert_in_epsilon(19.33042475478558, worksheet.outputs_energy_flows_x216, 0.002); end
  def test_outputs_energy_flows_y216; assert_in_epsilon(21.739473939959545, worksheet.outputs_energy_flows_y216, 0.002); end
  def test_outputs_energy_flows_z216; assert_in_epsilon(23.86148512280148, worksheet.outputs_energy_flows_z216, 0.002); end
  def test_outputs_energy_flows_aa216; assert_in_epsilon(24.330578564298893, worksheet.outputs_energy_flows_aa216, 0.002); end
  def test_outputs_energy_flows_ab216; assert_in_epsilon(24.201385057110237, worksheet.outputs_energy_flows_ab216, 0.002); end
  def test_outputs_energy_flows_ac216; assert_in_epsilon(24.013348586651496, worksheet.outputs_energy_flows_ac216, 0.002); end
  def test_outputs_energy_flows_ad216; assert_in_epsilon(23.356664337369956, worksheet.outputs_energy_flows_ad216, 0.002); end
  def test_outputs_energy_flows_c218; assert_equal("n/a", worksheet.outputs_energy_flows_c218); end
  def test_outputs_energy_flows_d218; assert_equal("Liquid", worksheet.outputs_energy_flows_d218); end
  def test_outputs_energy_flows_e218; assert_equal("n/a", worksheet.outputs_energy_flows_e218); end
  def test_outputs_energy_flows_f218; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f218); end
  def test_outputs_energy_flows_i218; assert_equal("C.02", worksheet.outputs_energy_flows_i218); end
  def test_outputs_energy_flows_j218; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j218); end
  def test_outputs_energy_flows_v218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v218||0), 0.002); end
  def test_outputs_energy_flows_w218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w218||0), 0.002); end
  def test_outputs_energy_flows_x218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x218||0), 0.002); end
  def test_outputs_energy_flows_y218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y218||0), 0.002); end
  def test_outputs_energy_flows_z218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z218||0), 0.002); end
  def test_outputs_energy_flows_aa218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa218||0), 0.002); end
  def test_outputs_energy_flows_ab218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab218||0), 0.002); end
  def test_outputs_energy_flows_ac218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac218||0), 0.002); end
  def test_outputs_energy_flows_ad218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad218||0), 0.002); end
  def test_outputs_energy_flows_c220; assert_equal("n/a", worksheet.outputs_energy_flows_c220); end
  def test_outputs_energy_flows_d220; assert_equal("Liquid", worksheet.outputs_energy_flows_d220); end
  def test_outputs_energy_flows_e220; assert_equal("G.01", worksheet.outputs_energy_flows_e220); end
  def test_outputs_energy_flows_f220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f220); end
  def test_outputs_energy_flows_g220; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g220); end
  def test_outputs_energy_flows_h220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h220); end
  def test_outputs_energy_flows_i220; assert_equal("C.02", worksheet.outputs_energy_flows_i220); end
  def test_outputs_energy_flows_j220; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j220); end
  def test_outputs_energy_flows_v220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v220||0), 0.002); end
  def test_outputs_energy_flows_w220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w220||0), 0.002); end
  def test_outputs_energy_flows_x220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x220||0), 0.002); end
  def test_outputs_energy_flows_y220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y220||0), 0.002); end
  def test_outputs_energy_flows_z220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z220||0), 0.002); end
  def test_outputs_energy_flows_aa220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa220||0), 0.002); end
  def test_outputs_energy_flows_ab220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab220||0), 0.002); end
  def test_outputs_energy_flows_ac220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac220||0), 0.002); end
  def test_outputs_energy_flows_ad220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad220||0), 0.002); end
  def test_outputs_energy_flows_c222; assert_equal("n/a", worksheet.outputs_energy_flows_c222); end
  def test_outputs_energy_flows_d222; assert_equal("Liquid", worksheet.outputs_energy_flows_d222); end
  def test_outputs_energy_flows_e222; assert_equal("n/a", worksheet.outputs_energy_flows_e222); end
  def test_outputs_energy_flows_f222; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f222); end
  def test_outputs_energy_flows_g222; assert_equal("n/a", worksheet.outputs_energy_flows_g222); end
  def test_outputs_energy_flows_h222; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h222); end
  def test_outputs_energy_flows_i222; assert_equal("C.02", worksheet.outputs_energy_flows_i222); end
  def test_outputs_energy_flows_j222; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j222); end
  def test_outputs_energy_flows_v222; assert_in_epsilon(2.051000000000001, worksheet.outputs_energy_flows_v222, 0.002); end
  def test_outputs_energy_flows_w222; assert_in_epsilon(1.7463340740926672, worksheet.outputs_energy_flows_w222, 0.002); end
  def test_outputs_energy_flows_x222; assert_in_delta(0.9543984245270392, worksheet.outputs_energy_flows_x222, 0.002); end
  def test_outputs_energy_flows_y222; assert_in_delta(0.0014857598990034582, worksheet.outputs_energy_flows_y222, 0.002); end
  def test_outputs_energy_flows_z222; assert_in_epsilon(-1.1094895135628051, worksheet.outputs_energy_flows_z222, 0.002); end
  def test_outputs_energy_flows_aa222; assert_in_epsilon(-2.3865533050189525, worksheet.outputs_energy_flows_aa222, 0.002); end
  def test_outputs_energy_flows_ab222; assert_in_epsilon(-3.848372618603366, worksheet.outputs_energy_flows_ab222, 0.002); end
  def test_outputs_energy_flows_ac222; assert_in_epsilon(-5.525583932528591, worksheet.outputs_energy_flows_ac222, 0.002); end
  def test_outputs_energy_flows_ad222; assert_in_epsilon(-13.237393108982113, worksheet.outputs_energy_flows_ad222, 0.002); end
  def test_outputs_energy_flows_c224; assert_equal("n/a", worksheet.outputs_energy_flows_c224); end
  def test_outputs_energy_flows_d224; assert_equal("Gas", worksheet.outputs_energy_flows_d224); end
  def test_outputs_energy_flows_e224; assert_equal("n/a", worksheet.outputs_energy_flows_e224); end
  def test_outputs_energy_flows_f224; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f224); end
  def test_outputs_energy_flows_i224; assert_equal("C.03", worksheet.outputs_energy_flows_i224); end
  def test_outputs_energy_flows_j224; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j224); end
  def test_outputs_energy_flows_k224; assert_equal("Global buildings", worksheet.outputs_energy_flows_k224); end
  def test_outputs_energy_flows_v224; assert_in_epsilon(14.722697904815131, worksheet.outputs_energy_flows_v224, 0.002); end
  def test_outputs_energy_flows_w224; assert_in_epsilon(14.850996312810862, worksheet.outputs_energy_flows_w224, 0.002); end
  def test_outputs_energy_flows_x224; assert_in_epsilon(15.906770757165129, worksheet.outputs_energy_flows_x224, 0.002); end
  def test_outputs_energy_flows_y224; assert_in_epsilon(16.898988920104255, worksheet.outputs_energy_flows_y224, 0.002); end
  def test_outputs_energy_flows_z224; assert_in_epsilon(17.779713193404135, worksheet.outputs_energy_flows_z224, 0.002); end
  def test_outputs_energy_flows_aa224; assert_in_epsilon(18.47906616018532, worksheet.outputs_energy_flows_aa224, 0.002); end
  def test_outputs_energy_flows_ab224; assert_in_epsilon(19.070039634537764, worksheet.outputs_energy_flows_ab224, 0.002); end
  def test_outputs_energy_flows_ac224; assert_in_epsilon(19.48601348941753, worksheet.outputs_energy_flows_ac224, 0.002); end
  def test_outputs_energy_flows_ad224; assert_in_epsilon(19.81318627371572, worksheet.outputs_energy_flows_ad224, 0.002); end
  def test_outputs_energy_flows_c226; assert_equal("n/a", worksheet.outputs_energy_flows_c226); end
  def test_outputs_energy_flows_d226; assert_equal("Gas", worksheet.outputs_energy_flows_d226); end
  def test_outputs_energy_flows_e226; assert_equal("n/a", worksheet.outputs_energy_flows_e226); end
  def test_outputs_energy_flows_f226; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f226); end
  def test_outputs_energy_flows_i226; assert_equal("C.03", worksheet.outputs_energy_flows_i226); end
  def test_outputs_energy_flows_j226; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j226); end
  def test_outputs_energy_flows_k226; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k226); end
  def test_outputs_energy_flows_l226; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l226); end
  def test_outputs_energy_flows_v226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v226||0), 0.002); end
  def test_outputs_energy_flows_w226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w226||0), 0.002); end
  def test_outputs_energy_flows_x226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x226||0), 0.002); end
  def test_outputs_energy_flows_y226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y226||0), 0.002); end
  def test_outputs_energy_flows_z226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z226||0), 0.002); end
  def test_outputs_energy_flows_aa226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa226||0), 0.002); end
  def test_outputs_energy_flows_ab226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab226||0), 0.002); end
  def test_outputs_energy_flows_ac226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac226||0), 0.002); end
  def test_outputs_energy_flows_ad226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad226||0), 0.002); end
  def test_outputs_energy_flows_c228; assert_equal("n/a", worksheet.outputs_energy_flows_c228); end
  def test_outputs_energy_flows_d228; assert_equal("Gas", worksheet.outputs_energy_flows_d228); end
  def test_outputs_energy_flows_e228; assert_equal("n/a", worksheet.outputs_energy_flows_e228); end
  def test_outputs_energy_flows_f228; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f228); end
  def test_outputs_energy_flows_i228; assert_equal("C.03", worksheet.outputs_energy_flows_i228); end
  def test_outputs_energy_flows_j228; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j228); end
  def test_outputs_energy_flows_k228; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k228); end
  def test_outputs_energy_flows_l228; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l228); end
  def test_outputs_energy_flows_v228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v228||0), 0.002); end
  def test_outputs_energy_flows_w228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w228||0), 0.002); end
  def test_outputs_energy_flows_x228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x228||0), 0.002); end
  def test_outputs_energy_flows_y228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y228||0), 0.002); end
  def test_outputs_energy_flows_z228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z228||0), 0.002); end
  def test_outputs_energy_flows_aa228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa228||0), 0.002); end
  def test_outputs_energy_flows_ab228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab228||0), 0.002); end
  def test_outputs_energy_flows_ac228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac228||0), 0.002); end
  def test_outputs_energy_flows_ad228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad228||0), 0.002); end
  def test_outputs_energy_flows_c230; assert_equal("n/a", worksheet.outputs_energy_flows_c230); end
  def test_outputs_energy_flows_d230; assert_equal("Gas", worksheet.outputs_energy_flows_d230); end
  def test_outputs_energy_flows_e230; assert_equal("n/a", worksheet.outputs_energy_flows_e230); end
  def test_outputs_energy_flows_f230; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f230); end
  def test_outputs_energy_flows_i230; assert_equal("C.03", worksheet.outputs_energy_flows_i230); end
  def test_outputs_energy_flows_j230; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j230); end
  def test_outputs_energy_flows_k230; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k230); end
  def test_outputs_energy_flows_l230; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l230); end
  def test_outputs_energy_flows_v230; assert_in_epsilon(3.5232041853812337, worksheet.outputs_energy_flows_v230, 0.002); end
  def test_outputs_energy_flows_w230; assert_in_epsilon(3.8083848628438006, worksheet.outputs_energy_flows_w230, 0.002); end
  def test_outputs_energy_flows_x230; assert_in_epsilon(4.054128986897195, worksheet.outputs_energy_flows_x230, 0.002); end
  def test_outputs_energy_flows_y230; assert_in_epsilon(4.274592760136229, worksheet.outputs_energy_flows_y230, 0.002); end
  def test_outputs_energy_flows_z230; assert_in_epsilon(4.458997027988692, worksheet.outputs_energy_flows_z230, 0.002); end
  def test_outputs_energy_flows_aa230; assert_in_epsilon(4.589498588825993, worksheet.outputs_energy_flows_aa230, 0.002); end
  def test_outputs_energy_flows_ab230; assert_in_epsilon(4.68442501938551, worksheet.outputs_energy_flows_ab230, 0.002); end
  def test_outputs_energy_flows_ac230; assert_in_epsilon(4.727587784826416, worksheet.outputs_energy_flows_ac230, 0.002); end
  def test_outputs_energy_flows_ad230; assert_in_epsilon(4.740523855833219, worksheet.outputs_energy_flows_ad230, 0.002); end
  def test_outputs_energy_flows_c232; assert_equal("n/a", worksheet.outputs_energy_flows_c232); end
  def test_outputs_energy_flows_d232; assert_equal("Gas", worksheet.outputs_energy_flows_d232); end
  def test_outputs_energy_flows_e232; assert_equal("n/a", worksheet.outputs_energy_flows_e232); end
  def test_outputs_energy_flows_f232; assert_equal("Non domestic", worksheet.outputs_energy_flows_f232); end
  def test_outputs_energy_flows_i232; assert_equal("C.03", worksheet.outputs_energy_flows_i232); end
  def test_outputs_energy_flows_j232; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j232); end
  def test_outputs_energy_flows_k232; assert_equal("Non-residential", worksheet.outputs_energy_flows_k232); end
  def test_outputs_energy_flows_v232; assert_in_epsilon(4.449325540384182, worksheet.outputs_energy_flows_v232, 0.002); end
  def test_outputs_energy_flows_w232; assert_in_epsilon(4.272622516366194, worksheet.outputs_energy_flows_w232, 0.002); end
  def test_outputs_energy_flows_x232; assert_in_epsilon(4.705834011915788, worksheet.outputs_energy_flows_x232, 0.002); end
  def test_outputs_energy_flows_y232; assert_in_epsilon(5.129998167848677, worksheet.outputs_energy_flows_y232, 0.002); end
  def test_outputs_energy_flows_z232; assert_in_epsilon(5.541129551699872, worksheet.outputs_energy_flows_z232, 0.002); end
  def test_outputs_energy_flows_aa232; assert_in_epsilon(5.936804418949576, worksheet.outputs_energy_flows_aa232, 0.002); end
  def test_outputs_energy_flows_ab232; assert_in_epsilon(6.313325788429083, worksheet.outputs_energy_flows_ab232, 0.002); end
  def test_outputs_energy_flows_ac232; assert_in_epsilon(6.6657855141476015, worksheet.outputs_energy_flows_ac232, 0.002); end
  def test_outputs_energy_flows_ad232; assert_in_epsilon(6.989701092599602, worksheet.outputs_energy_flows_ad232, 0.002); end
  def test_outputs_energy_flows_c234; assert_equal("n/a", worksheet.outputs_energy_flows_c234); end
  def test_outputs_energy_flows_d234; assert_equal("Gas", worksheet.outputs_energy_flows_d234); end
  def test_outputs_energy_flows_e234; assert_equal("n/a", worksheet.outputs_energy_flows_e234); end
  def test_outputs_energy_flows_f234; assert_equal("Steel", worksheet.outputs_energy_flows_f234); end
  def test_outputs_energy_flows_i234; assert_equal("C.03", worksheet.outputs_energy_flows_i234); end
  def test_outputs_energy_flows_j234; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j234); end
  def test_outputs_energy_flows_v234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v234||0), 0.002); end
  def test_outputs_energy_flows_w234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w234||0), 0.002); end
  def test_outputs_energy_flows_x234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x234||0), 0.002); end
  def test_outputs_energy_flows_y234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y234||0), 0.002); end
  def test_outputs_energy_flows_z234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z234||0), 0.002); end
  def test_outputs_energy_flows_aa234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa234||0), 0.002); end
  def test_outputs_energy_flows_ab234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab234||0), 0.002); end
  def test_outputs_energy_flows_ac234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac234||0), 0.002); end
  def test_outputs_energy_flows_ad234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad234||0), 0.002); end
  def test_outputs_energy_flows_c236; assert_equal("n/a", worksheet.outputs_energy_flows_c236); end
  def test_outputs_energy_flows_d236; assert_equal("Gas", worksheet.outputs_energy_flows_d236); end
  def test_outputs_energy_flows_e236; assert_equal("n/a", worksheet.outputs_energy_flows_e236); end
  def test_outputs_energy_flows_f236; assert_equal("Aluminium", worksheet.outputs_energy_flows_f236); end
  def test_outputs_energy_flows_i236; assert_equal("C.03", worksheet.outputs_energy_flows_i236); end
  def test_outputs_energy_flows_j236; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j236); end
  def test_outputs_energy_flows_v236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v236||0), 0.002); end
  def test_outputs_energy_flows_w236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w236||0), 0.002); end
  def test_outputs_energy_flows_x236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x236||0), 0.002); end
  def test_outputs_energy_flows_y236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y236||0), 0.002); end
  def test_outputs_energy_flows_z236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z236||0), 0.002); end
  def test_outputs_energy_flows_aa236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa236||0), 0.002); end
  def test_outputs_energy_flows_ab236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab236||0), 0.002); end
  def test_outputs_energy_flows_ac236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac236||0), 0.002); end
  def test_outputs_energy_flows_ad236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad236||0), 0.002); end
  def test_outputs_energy_flows_c238; assert_equal("n/a", worksheet.outputs_energy_flows_c238); end
  def test_outputs_energy_flows_d238; assert_equal("Gas", worksheet.outputs_energy_flows_d238); end
  def test_outputs_energy_flows_e238; assert_equal("n/a", worksheet.outputs_energy_flows_e238); end
  def test_outputs_energy_flows_f238; assert_equal("Cement", worksheet.outputs_energy_flows_f238); end
  def test_outputs_energy_flows_i238; assert_equal("C.03", worksheet.outputs_energy_flows_i238); end
  def test_outputs_energy_flows_j238; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j238); end
  def test_outputs_energy_flows_v238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v238||0), 0.002); end
  def test_outputs_energy_flows_w238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w238||0), 0.002); end
  def test_outputs_energy_flows_x238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x238||0), 0.002); end
  def test_outputs_energy_flows_y238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y238||0), 0.002); end
  def test_outputs_energy_flows_z238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z238||0), 0.002); end
  def test_outputs_energy_flows_aa238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa238||0), 0.002); end
  def test_outputs_energy_flows_ab238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab238||0), 0.002); end
  def test_outputs_energy_flows_ac238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac238||0), 0.002); end
  def test_outputs_energy_flows_ad238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad238||0), 0.002); end
  def test_outputs_energy_flows_c240; assert_equal("n/a", worksheet.outputs_energy_flows_c240); end
  def test_outputs_energy_flows_d240; assert_equal("Gas", worksheet.outputs_energy_flows_d240); end
  def test_outputs_energy_flows_e240; assert_equal("n/a", worksheet.outputs_energy_flows_e240); end
  def test_outputs_energy_flows_f240; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f240); end
  def test_outputs_energy_flows_i240; assert_equal("C.03", worksheet.outputs_energy_flows_i240); end
  def test_outputs_energy_flows_j240; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j240); end
  def test_outputs_energy_flows_v240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v240||0), 0.002); end
  def test_outputs_energy_flows_w240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w240||0), 0.002); end
  def test_outputs_energy_flows_x240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x240||0), 0.002); end
  def test_outputs_energy_flows_y240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y240||0), 0.002); end
  def test_outputs_energy_flows_z240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z240||0), 0.002); end
  def test_outputs_energy_flows_aa240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa240||0), 0.002); end
  def test_outputs_energy_flows_ab240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab240||0), 0.002); end
  def test_outputs_energy_flows_ac240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac240||0), 0.002); end
  def test_outputs_energy_flows_ad240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad240||0), 0.002); end
  def test_outputs_energy_flows_c242; assert_equal("n/a", worksheet.outputs_energy_flows_c242); end
  def test_outputs_energy_flows_d242; assert_equal("Gas", worksheet.outputs_energy_flows_d242); end
  def test_outputs_energy_flows_e242; assert_equal("n/a", worksheet.outputs_energy_flows_e242); end
  def test_outputs_energy_flows_f242; assert_equal("Chemicals", worksheet.outputs_energy_flows_f242); end
  def test_outputs_energy_flows_i242; assert_equal("C.03", worksheet.outputs_energy_flows_i242); end
  def test_outputs_energy_flows_j242; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j242); end
  def test_outputs_energy_flows_v242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v242||0), 0.002); end
  def test_outputs_energy_flows_w242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w242||0), 0.002); end
  def test_outputs_energy_flows_x242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x242||0), 0.002); end
  def test_outputs_energy_flows_y242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y242||0), 0.002); end
  def test_outputs_energy_flows_z242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z242||0), 0.002); end
  def test_outputs_energy_flows_aa242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa242||0), 0.002); end
  def test_outputs_energy_flows_ab242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab242||0), 0.002); end
  def test_outputs_energy_flows_ac242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac242||0), 0.002); end
  def test_outputs_energy_flows_ad242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad242||0), 0.002); end
  def test_outputs_energy_flows_c244; assert_equal("n/a", worksheet.outputs_energy_flows_c244); end
  def test_outputs_energy_flows_d244; assert_equal("Gas", worksheet.outputs_energy_flows_d244); end
  def test_outputs_energy_flows_e244; assert_equal("n/a", worksheet.outputs_energy_flows_e244); end
  def test_outputs_energy_flows_f244; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f244); end
  def test_outputs_energy_flows_i244; assert_equal("C.03", worksheet.outputs_energy_flows_i244); end
  def test_outputs_energy_flows_j244; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j244); end
  def test_outputs_energy_flows_l244; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l244); end
  def test_outputs_energy_flows_m244; assert_equal("Timber", worksheet.outputs_energy_flows_m244); end
  def test_outputs_energy_flows_v244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v244||0), 0.002); end
  def test_outputs_energy_flows_w244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w244||0), 0.002); end
  def test_outputs_energy_flows_x244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x244||0), 0.002); end
  def test_outputs_energy_flows_y244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y244||0), 0.002); end
  def test_outputs_energy_flows_z244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z244||0), 0.002); end
  def test_outputs_energy_flows_aa244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa244||0), 0.002); end
  def test_outputs_energy_flows_ab244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab244||0), 0.002); end
  def test_outputs_energy_flows_ac244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac244||0), 0.002); end
  def test_outputs_energy_flows_ad244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad244||0), 0.002); end
  def test_outputs_energy_flows_c246; assert_equal("n/a", worksheet.outputs_energy_flows_c246); end
  def test_outputs_energy_flows_d246; assert_equal("Gas", worksheet.outputs_energy_flows_d246); end
  def test_outputs_energy_flows_e246; assert_equal("n/a", worksheet.outputs_energy_flows_e246); end
  def test_outputs_energy_flows_f246; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f246); end
  def test_outputs_energy_flows_i246; assert_equal("C.03", worksheet.outputs_energy_flows_i246); end
  def test_outputs_energy_flows_j246; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j246); end
  def test_outputs_energy_flows_l246; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l246); end
  def test_outputs_energy_flows_m246; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m246); end
  def test_outputs_energy_flows_v246; assert_in_delta(0.3352766495680165, worksheet.outputs_energy_flows_v246, 0.002); end
  def test_outputs_energy_flows_w246; assert_in_delta(0.4556511413110905, worksheet.outputs_energy_flows_w246, 0.002); end
  def test_outputs_energy_flows_x246; assert_in_delta(0.5764840809196472, worksheet.outputs_energy_flows_x246, 0.002); end
  def test_outputs_energy_flows_y246; assert_in_delta(0.6930066539994001, worksheet.outputs_energy_flows_y246, 0.002); end
  def test_outputs_energy_flows_z246; assert_in_delta(0.8216050546361663, worksheet.outputs_energy_flows_z246, 0.002); end
  def test_outputs_energy_flows_aa246; assert_in_delta(0.9651929952808347, worksheet.outputs_energy_flows_aa246, 0.002); end
  def test_outputs_energy_flows_ab246; assert_in_epsilon(1.1226330101723498, worksheet.outputs_energy_flows_ab246, 0.002); end
  def test_outputs_energy_flows_ac246; assert_in_epsilon(1.2925773839842378, worksheet.outputs_energy_flows_ac246, 0.002); end
  def test_outputs_energy_flows_ad246; assert_in_epsilon(1.4836410173724675, worksheet.outputs_energy_flows_ad246, 0.002); end
  def test_outputs_energy_flows_c248; assert_equal("n/a", worksheet.outputs_energy_flows_c248); end
  def test_outputs_energy_flows_d248; assert_equal("Gas", worksheet.outputs_energy_flows_d248); end
  def test_outputs_energy_flows_e248; assert_equal("n/a", worksheet.outputs_energy_flows_e248); end
  def test_outputs_energy_flows_f248; assert_equal("International passenger", worksheet.outputs_energy_flows_f248); end
  def test_outputs_energy_flows_i248; assert_equal("C.03", worksheet.outputs_energy_flows_i248); end
  def test_outputs_energy_flows_j248; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j248); end
  def test_outputs_energy_flows_l248; assert_equal("International", worksheet.outputs_energy_flows_l248); end
  def test_outputs_energy_flows_v248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v248||0), 0.002); end
  def test_outputs_energy_flows_w248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w248||0), 0.002); end
  def test_outputs_energy_flows_x248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x248||0), 0.002); end
  def test_outputs_energy_flows_y248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y248||0), 0.002); end
  def test_outputs_energy_flows_z248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z248||0), 0.002); end
  def test_outputs_energy_flows_aa248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa248||0), 0.002); end
  def test_outputs_energy_flows_ab248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab248||0), 0.002); end
  def test_outputs_energy_flows_ac248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac248||0), 0.002); end
  def test_outputs_energy_flows_ad248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad248||0), 0.002); end
  def test_outputs_energy_flows_c250; assert_equal("n/a", worksheet.outputs_energy_flows_c250); end
  def test_outputs_energy_flows_d250; assert_equal("Gas", worksheet.outputs_energy_flows_d250); end
  def test_outputs_energy_flows_e250; assert_equal("n/a", worksheet.outputs_energy_flows_e250); end
  def test_outputs_energy_flows_f250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f250); end
  def test_outputs_energy_flows_i250; assert_equal("C.03", worksheet.outputs_energy_flows_i250); end
  def test_outputs_energy_flows_j250; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j250); end
  def test_outputs_energy_flows_l250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l250); end
  def test_outputs_energy_flows_v250; assert_in_delta(0.011922881771682584, worksheet.outputs_energy_flows_v250, 0.002); end
  def test_outputs_energy_flows_w250; assert_in_delta(0.2671454682133081, worksheet.outputs_energy_flows_w250, 0.002); end
  def test_outputs_energy_flows_x250; assert_in_delta(0.46785113857313787, worksheet.outputs_energy_flows_x250, 0.002); end
  def test_outputs_energy_flows_y250; assert_in_delta(0.7044407357205782, worksheet.outputs_energy_flows_y250, 0.002); end
  def test_outputs_energy_flows_z250; assert_in_delta(0.9451825908749185, worksheet.outputs_energy_flows_z250, 0.002); end
  def test_outputs_energy_flows_aa250; assert_in_epsilon(1.1818103135470868, worksheet.outputs_energy_flows_aa250, 0.002); end
  def test_outputs_energy_flows_ab250; assert_in_epsilon(1.3988297247247834, worksheet.outputs_energy_flows_ab250, 0.002); end
  def test_outputs_energy_flows_ac250; assert_in_epsilon(1.601080031282674, worksheet.outputs_energy_flows_ac250, 0.002); end
  def test_outputs_energy_flows_ad250; assert_in_epsilon(1.7820325352818633, worksheet.outputs_energy_flows_ad250, 0.002); end
  def test_outputs_energy_flows_c252; assert_equal("n/a", worksheet.outputs_energy_flows_c252); end
  def test_outputs_energy_flows_d252; assert_equal("Gas", worksheet.outputs_energy_flows_d252); end
  def test_outputs_energy_flows_e252; assert_equal("n/a", worksheet.outputs_energy_flows_e252); end
  def test_outputs_energy_flows_f252; assert_equal("International freight", worksheet.outputs_energy_flows_f252); end
  def test_outputs_energy_flows_i252; assert_equal("C.03", worksheet.outputs_energy_flows_i252); end
  def test_outputs_energy_flows_j252; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j252); end
  def test_outputs_energy_flows_l252; assert_equal("International freight", worksheet.outputs_energy_flows_l252); end
  def test_outputs_energy_flows_v252; assert_in_delta(4.41118442617133e-09, worksheet.outputs_energy_flows_v252, 0.002); end
  def test_outputs_energy_flows_w252; assert_in_delta(0.06553261217697498, worksheet.outputs_energy_flows_w252, 0.002); end
  def test_outputs_energy_flows_x252; assert_in_delta(0.11437448122862531, worksheet.outputs_energy_flows_x252, 0.002); end
  def test_outputs_energy_flows_y252; assert_in_delta(0.17383470797507494, worksheet.outputs_energy_flows_y252, 0.002); end
  def test_outputs_energy_flows_z252; assert_in_delta(0.24003912507724848, worksheet.outputs_energy_flows_z252, 0.002); end
  def test_outputs_energy_flows_aa252; assert_in_delta(0.2945587719651967, worksheet.outputs_energy_flows_aa252, 0.002); end
  def test_outputs_energy_flows_ab252; assert_in_delta(0.3421167257830637, worksheet.outputs_energy_flows_ab252, 0.002); end
  def test_outputs_energy_flows_ac252; assert_in_delta(0.38777537713279936, worksheet.outputs_energy_flows_ac252, 0.002); end
  def test_outputs_energy_flows_ad252; assert_in_delta(0.4237424939124817, worksheet.outputs_energy_flows_ad252, 0.002); end
  def test_outputs_energy_flows_c254; assert_equal("n/a", worksheet.outputs_energy_flows_c254); end
  def test_outputs_energy_flows_d254; assert_equal("Gas", worksheet.outputs_energy_flows_d254); end
  def test_outputs_energy_flows_e254; assert_equal("n/a", worksheet.outputs_energy_flows_e254); end
  def test_outputs_energy_flows_f254; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f254); end
  def test_outputs_energy_flows_i254; assert_equal("C.03", worksheet.outputs_energy_flows_i254); end
  def test_outputs_energy_flows_j254; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j254); end
  def test_outputs_energy_flows_v254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v254||0), 0.002); end
  def test_outputs_energy_flows_w254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w254||0), 0.002); end
  def test_outputs_energy_flows_x254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x254||0), 0.002); end
  def test_outputs_energy_flows_y254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y254||0), 0.002); end
  def test_outputs_energy_flows_z254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z254||0), 0.002); end
  def test_outputs_energy_flows_aa254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa254||0), 0.002); end
  def test_outputs_energy_flows_ab254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab254||0), 0.002); end
  def test_outputs_energy_flows_ac254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac254||0), 0.002); end
  def test_outputs_energy_flows_ad254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad254||0), 0.002); end
  def test_outputs_energy_flows_c256; assert_equal("n/a", worksheet.outputs_energy_flows_c256); end
  def test_outputs_energy_flows_d256; assert_equal("Gas", worksheet.outputs_energy_flows_d256); end
  def test_outputs_energy_flows_e256; assert_equal("G.01", worksheet.outputs_energy_flows_e256); end
  def test_outputs_energy_flows_f256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f256); end
  def test_outputs_energy_flows_g256; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g256); end
  def test_outputs_energy_flows_h256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h256); end
  def test_outputs_energy_flows_i256; assert_equal("C.03", worksheet.outputs_energy_flows_i256); end
  def test_outputs_energy_flows_j256; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j256); end
  def test_outputs_energy_flows_v256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v256||0), 0.002); end
  def test_outputs_energy_flows_w256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w256||0), 0.002); end
  def test_outputs_energy_flows_x256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x256||0), 0.002); end
  def test_outputs_energy_flows_y256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y256||0), 0.002); end
  def test_outputs_energy_flows_z256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z256||0), 0.002); end
  def test_outputs_energy_flows_aa256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa256||0), 0.002); end
  def test_outputs_energy_flows_ab256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab256||0), 0.002); end
  def test_outputs_energy_flows_ac256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac256||0), 0.002); end
  def test_outputs_energy_flows_ad256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad256||0), 0.002); end
  def test_outputs_energy_flows_c258; assert_equal("n/a", worksheet.outputs_energy_flows_c258); end
  def test_outputs_energy_flows_d258; assert_equal("Gas", worksheet.outputs_energy_flows_d258); end
  def test_outputs_energy_flows_e258; assert_equal("n/a", worksheet.outputs_energy_flows_e258); end
  def test_outputs_energy_flows_f258; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f258); end
  def test_outputs_energy_flows_g258; assert_equal("n/a", worksheet.outputs_energy_flows_g258); end
  def test_outputs_energy_flows_h258; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h258); end
  def test_outputs_energy_flows_i258; assert_equal("C.03", worksheet.outputs_energy_flows_i258); end
  def test_outputs_energy_flows_j258; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j258); end
  def test_outputs_energy_flows_v258; assert_in_delta(0.6980000000000002, worksheet.outputs_energy_flows_v258, 0.002); end
  def test_outputs_energy_flows_w258; assert_in_delta(0.7225386481834296, worksheet.outputs_energy_flows_w258, 0.002); end
  def test_outputs_energy_flows_x258; assert_in_delta(0.7586315323243493, worksheet.outputs_energy_flows_x258, 0.002); end
  def test_outputs_energy_flows_y258; assert_in_delta(0.7930363172462689, worksheet.outputs_energy_flows_y258, 0.002); end
  def test_outputs_energy_flows_z258; assert_in_delta(0.826912323931587, worksheet.outputs_energy_flows_z258, 0.002); end
  def test_outputs_energy_flows_aa258; assert_in_delta(0.8601278957621685, worksheet.outputs_energy_flows_aa258, 0.002); end
  def test_outputs_energy_flows_ab258; assert_in_delta(0.8912964042705442, worksheet.outputs_energy_flows_ab258, 0.002); end
  def test_outputs_energy_flows_ac258; assert_in_delta(0.9176180972096646, worksheet.outputs_energy_flows_ac258, 0.002); end
  def test_outputs_energy_flows_ad258; assert_in_delta(0.9410952015582371, worksheet.outputs_energy_flows_ad258, 0.002); end
  def test_outputs_energy_flows_c260; assert_equal("FF.01", worksheet.outputs_energy_flows_c260); end
  def test_outputs_energy_flows_d260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d260); end
  def test_outputs_energy_flows_e260; assert_equal("n/a", worksheet.outputs_energy_flows_e260); end
  def test_outputs_energy_flows_f260; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f260); end
  def test_outputs_energy_flows_i260; assert_equal("FF.01", worksheet.outputs_energy_flows_i260); end
  def test_outputs_energy_flows_j260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j260); end
  def test_outputs_energy_flows_k260; assert_equal("Global buildings", worksheet.outputs_energy_flows_k260); end
  def test_outputs_energy_flows_v260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v260||0), 0.002); end
  def test_outputs_energy_flows_w260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w260||0), 0.002); end
  def test_outputs_energy_flows_x260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x260||0), 0.002); end
  def test_outputs_energy_flows_y260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y260||0), 0.002); end
  def test_outputs_energy_flows_z260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z260||0), 0.002); end
  def test_outputs_energy_flows_aa260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa260||0), 0.002); end
  def test_outputs_energy_flows_ab260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab260||0), 0.002); end
  def test_outputs_energy_flows_ac260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac260||0), 0.002); end
  def test_outputs_energy_flows_ad260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad260||0), 0.002); end
  def test_outputs_energy_flows_c262; assert_equal("FF.01", worksheet.outputs_energy_flows_c262); end
  def test_outputs_energy_flows_d262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d262); end
  def test_outputs_energy_flows_e262; assert_equal("n/a", worksheet.outputs_energy_flows_e262); end
  def test_outputs_energy_flows_f262; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f262); end
  def test_outputs_energy_flows_i262; assert_equal("FF.01", worksheet.outputs_energy_flows_i262); end
  def test_outputs_energy_flows_j262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j262); end
  def test_outputs_energy_flows_k262; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k262); end
  def test_outputs_energy_flows_l262; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l262); end
  def test_outputs_energy_flows_v262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v262||0), 0.002); end
  def test_outputs_energy_flows_w262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w262||0), 0.002); end
  def test_outputs_energy_flows_x262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x262||0), 0.002); end
  def test_outputs_energy_flows_y262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y262||0), 0.002); end
  def test_outputs_energy_flows_z262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z262||0), 0.002); end
  def test_outputs_energy_flows_aa262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa262||0), 0.002); end
  def test_outputs_energy_flows_ab262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab262||0), 0.002); end
  def test_outputs_energy_flows_ac262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac262||0), 0.002); end
  def test_outputs_energy_flows_ad262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad262||0), 0.002); end
  def test_outputs_energy_flows_c264; assert_equal("FF.01", worksheet.outputs_energy_flows_c264); end
  def test_outputs_energy_flows_d264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d264); end
  def test_outputs_energy_flows_e264; assert_equal("n/a", worksheet.outputs_energy_flows_e264); end
  def test_outputs_energy_flows_f264; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f264); end
  def test_outputs_energy_flows_i264; assert_equal("FF.01", worksheet.outputs_energy_flows_i264); end
  def test_outputs_energy_flows_j264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j264); end
  def test_outputs_energy_flows_k264; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k264); end
  def test_outputs_energy_flows_l264; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l264); end
  def test_outputs_energy_flows_v264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v264||0), 0.002); end
  def test_outputs_energy_flows_w264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w264||0), 0.002); end
  def test_outputs_energy_flows_x264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x264||0), 0.002); end
  def test_outputs_energy_flows_y264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y264||0), 0.002); end
  def test_outputs_energy_flows_z264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z264||0), 0.002); end
  def test_outputs_energy_flows_aa264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa264||0), 0.002); end
  def test_outputs_energy_flows_ab264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab264||0), 0.002); end
  def test_outputs_energy_flows_ac264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac264||0), 0.002); end
  def test_outputs_energy_flows_ad264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad264||0), 0.002); end
  def test_outputs_energy_flows_c266; assert_equal("FF.01", worksheet.outputs_energy_flows_c266); end
  def test_outputs_energy_flows_d266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d266); end
  def test_outputs_energy_flows_e266; assert_equal("n/a", worksheet.outputs_energy_flows_e266); end
  def test_outputs_energy_flows_f266; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f266); end
  def test_outputs_energy_flows_i266; assert_equal("FF.01", worksheet.outputs_energy_flows_i266); end
  def test_outputs_energy_flows_j266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j266); end
  def test_outputs_energy_flows_k266; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k266); end
  def test_outputs_energy_flows_l266; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l266); end
  def test_outputs_energy_flows_v266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v266||0), 0.002); end
  def test_outputs_energy_flows_w266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w266||0), 0.002); end
  def test_outputs_energy_flows_x266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x266||0), 0.002); end
  def test_outputs_energy_flows_y266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y266||0), 0.002); end
  def test_outputs_energy_flows_z266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z266||0), 0.002); end
  def test_outputs_energy_flows_aa266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa266||0), 0.002); end
  def test_outputs_energy_flows_ab266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab266||0), 0.002); end
  def test_outputs_energy_flows_ac266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac266||0), 0.002); end
  def test_outputs_energy_flows_ad266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad266||0), 0.002); end
  def test_outputs_energy_flows_c268; assert_equal("FF.01", worksheet.outputs_energy_flows_c268); end
  def test_outputs_energy_flows_d268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d268); end
  def test_outputs_energy_flows_e268; assert_equal("n/a", worksheet.outputs_energy_flows_e268); end
  def test_outputs_energy_flows_f268; assert_equal("Non domestic", worksheet.outputs_energy_flows_f268); end
  def test_outputs_energy_flows_i268; assert_equal("FF.01", worksheet.outputs_energy_flows_i268); end
  def test_outputs_energy_flows_j268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j268); end
  def test_outputs_energy_flows_k268; assert_equal("Non-residential", worksheet.outputs_energy_flows_k268); end
  def test_outputs_energy_flows_v268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v268||0), 0.002); end
  def test_outputs_energy_flows_w268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w268||0), 0.002); end
  def test_outputs_energy_flows_x268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x268||0), 0.002); end
  def test_outputs_energy_flows_y268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y268||0), 0.002); end
  def test_outputs_energy_flows_z268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z268||0), 0.002); end
  def test_outputs_energy_flows_aa268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa268||0), 0.002); end
  def test_outputs_energy_flows_ab268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab268||0), 0.002); end
  def test_outputs_energy_flows_ac268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac268||0), 0.002); end
  def test_outputs_energy_flows_ad268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad268||0), 0.002); end
  def test_outputs_energy_flows_c270; assert_equal("FF.01", worksheet.outputs_energy_flows_c270); end
  def test_outputs_energy_flows_d270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d270); end
  def test_outputs_energy_flows_e270; assert_equal("n/a", worksheet.outputs_energy_flows_e270); end
  def test_outputs_energy_flows_f270; assert_equal("Steel", worksheet.outputs_energy_flows_f270); end
  def test_outputs_energy_flows_i270; assert_equal("FF.01", worksheet.outputs_energy_flows_i270); end
  def test_outputs_energy_flows_j270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j270); end
  def test_outputs_energy_flows_v270; assert_in_epsilon(23.235493129092, worksheet.outputs_energy_flows_v270, 0.002); end
  def test_outputs_energy_flows_w270; assert_in_epsilon(23.98682791651141, worksheet.outputs_energy_flows_w270, 0.002); end
  def test_outputs_energy_flows_x270; assert_in_epsilon(26.171096193575792, worksheet.outputs_energy_flows_x270, 0.002); end
  def test_outputs_energy_flows_y270; assert_in_epsilon(28.176485880251228, worksheet.outputs_energy_flows_y270, 0.002); end
  def test_outputs_energy_flows_z270; assert_in_epsilon(29.95654015552114, worksheet.outputs_energy_flows_z270, 0.002); end
  def test_outputs_energy_flows_aa270; assert_in_epsilon(31.59909662843065, worksheet.outputs_energy_flows_aa270, 0.002); end
  def test_outputs_energy_flows_ab270; assert_in_epsilon(33.35296710466346, worksheet.outputs_energy_flows_ab270, 0.002); end
  def test_outputs_energy_flows_ac270; assert_in_epsilon(35.18235923729552, worksheet.outputs_energy_flows_ac270, 0.002); end
  def test_outputs_energy_flows_ad270; assert_in_epsilon(37.07803619165298, worksheet.outputs_energy_flows_ad270, 0.002); end
  def test_outputs_energy_flows_c272; assert_equal("FF.01", worksheet.outputs_energy_flows_c272); end
  def test_outputs_energy_flows_d272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d272); end
  def test_outputs_energy_flows_e272; assert_equal("n/a", worksheet.outputs_energy_flows_e272); end
  def test_outputs_energy_flows_f272; assert_equal("Aluminium", worksheet.outputs_energy_flows_f272); end
  def test_outputs_energy_flows_i272; assert_equal("FF.01", worksheet.outputs_energy_flows_i272); end
  def test_outputs_energy_flows_j272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j272); end
  def test_outputs_energy_flows_v272; assert_in_delta(0.7339274805745352, worksheet.outputs_energy_flows_v272, 0.002); end
  def test_outputs_energy_flows_w272; assert_in_delta(0.8104266164750485, worksheet.outputs_energy_flows_w272, 0.002); end
  def test_outputs_energy_flows_x272; assert_in_delta(0.913902204299361, worksheet.outputs_energy_flows_x272, 0.002); end
  def test_outputs_energy_flows_y272; assert_in_epsilon(1.0476363719827568, worksheet.outputs_energy_flows_y272, 0.002); end
  def test_outputs_energy_flows_z272; assert_in_epsilon(1.189743851332203, worksheet.outputs_energy_flows_z272, 0.002); end
  def test_outputs_energy_flows_aa272; assert_in_epsilon(1.3349504529297254, worksheet.outputs_energy_flows_aa272, 0.002); end
  def test_outputs_energy_flows_ab272; assert_in_epsilon(1.4973564356119937, worksheet.outputs_energy_flows_ab272, 0.002); end
  def test_outputs_energy_flows_ac272; assert_in_epsilon(1.6733858821227845, worksheet.outputs_energy_flows_ac272, 0.002); end
  def test_outputs_energy_flows_ad272; assert_in_epsilon(1.871185146422183, worksheet.outputs_energy_flows_ad272, 0.002); end
  def test_outputs_energy_flows_c274; assert_equal("FF.01", worksheet.outputs_energy_flows_c274); end
  def test_outputs_energy_flows_d274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d274); end
  def test_outputs_energy_flows_e274; assert_equal("n/a", worksheet.outputs_energy_flows_e274); end
  def test_outputs_energy_flows_f274; assert_equal("Cement", worksheet.outputs_energy_flows_f274); end
  def test_outputs_energy_flows_i274; assert_equal("FF.01", worksheet.outputs_energy_flows_i274); end
  def test_outputs_energy_flows_j274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j274); end
  def test_outputs_energy_flows_v274; assert_in_epsilon(6.851960921136625, worksheet.outputs_energy_flows_v274, 0.002); end
  def test_outputs_energy_flows_w274; assert_in_epsilon(6.919125813894889, worksheet.outputs_energy_flows_w274, 0.002); end
  def test_outputs_energy_flows_x274; assert_in_epsilon(7.883578026320531, worksheet.outputs_energy_flows_x274, 0.002); end
  def test_outputs_energy_flows_y274; assert_in_epsilon(8.193285581631924, worksheet.outputs_energy_flows_y274, 0.002); end
  def test_outputs_energy_flows_z274; assert_in_epsilon(8.456394103982763, worksheet.outputs_energy_flows_z274, 0.002); end
  def test_outputs_energy_flows_aa274; assert_in_epsilon(8.696834538826032, worksheet.outputs_energy_flows_aa274, 0.002); end
  def test_outputs_energy_flows_ab274; assert_in_epsilon(8.872663647827688, worksheet.outputs_energy_flows_ab274, 0.002); end
  def test_outputs_energy_flows_ac274; assert_in_epsilon(9.033580105490618, worksheet.outputs_energy_flows_ac274, 0.002); end
  def test_outputs_energy_flows_ad274; assert_in_epsilon(9.202650113720626, worksheet.outputs_energy_flows_ad274, 0.002); end
  def test_outputs_energy_flows_c276; assert_equal("FF.01", worksheet.outputs_energy_flows_c276); end
  def test_outputs_energy_flows_d276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d276); end
  def test_outputs_energy_flows_e276; assert_equal("n/a", worksheet.outputs_energy_flows_e276); end
  def test_outputs_energy_flows_f276; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f276); end
  def test_outputs_energy_flows_i276; assert_equal("FF.01", worksheet.outputs_energy_flows_i276); end
  def test_outputs_energy_flows_j276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j276); end
  def test_outputs_energy_flows_v276; assert_in_epsilon(1.518261087438881, worksheet.outputs_energy_flows_v276, 0.002); end
  def test_outputs_energy_flows_w276; assert_in_epsilon(1.5737245324176008, worksheet.outputs_energy_flows_w276, 0.002); end
  def test_outputs_energy_flows_x276; assert_in_epsilon(1.6350861541353203, worksheet.outputs_energy_flows_x276, 0.002); end
  def test_outputs_energy_flows_y276; assert_in_epsilon(1.7624951423444684, worksheet.outputs_energy_flows_y276, 0.002); end
  def test_outputs_energy_flows_z276; assert_in_epsilon(1.8896160548149132, worksheet.outputs_energy_flows_z276, 0.002); end
  def test_outputs_energy_flows_aa276; assert_in_epsilon(2.01188831607481, worksheet.outputs_energy_flows_aa276, 0.002); end
  def test_outputs_energy_flows_ab276; assert_in_epsilon(2.146025375345745, worksheet.outputs_energy_flows_ab276, 0.002); end
  def test_outputs_energy_flows_ac276; assert_in_epsilon(2.2763010929387475, worksheet.outputs_energy_flows_ac276, 0.002); end
  def test_outputs_energy_flows_ad276; assert_in_epsilon(2.419990449386694, worksheet.outputs_energy_flows_ad276, 0.002); end
  def test_outputs_energy_flows_c278; assert_equal("FF.01", worksheet.outputs_energy_flows_c278); end
  def test_outputs_energy_flows_d278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d278); end
  def test_outputs_energy_flows_e278; assert_equal("n/a", worksheet.outputs_energy_flows_e278); end
  def test_outputs_energy_flows_f278; assert_equal("Chemicals", worksheet.outputs_energy_flows_f278); end
  def test_outputs_energy_flows_i278; assert_equal("FF.01", worksheet.outputs_energy_flows_i278); end
  def test_outputs_energy_flows_j278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j278); end
  def test_outputs_energy_flows_v278; assert_in_epsilon(2.7901474530640202, worksheet.outputs_energy_flows_v278, 0.002); end
  def test_outputs_energy_flows_w278; assert_in_epsilon(2.9184182431589933, worksheet.outputs_energy_flows_w278, 0.002); end
  def test_outputs_energy_flows_x278; assert_in_epsilon(3.103434449131575, worksheet.outputs_energy_flows_x278, 0.002); end
  def test_outputs_energy_flows_y278; assert_in_epsilon(3.3915707119781024, worksheet.outputs_energy_flows_y278, 0.002); end
  def test_outputs_energy_flows_z278; assert_in_epsilon(3.6992164083227297, worksheet.outputs_energy_flows_z278, 0.002); end
  def test_outputs_energy_flows_aa278; assert_in_epsilon(4.021225842649068, worksheet.outputs_energy_flows_aa278, 0.002); end
  def test_outputs_energy_flows_ab278; assert_in_epsilon(4.376799793954022, worksheet.outputs_energy_flows_ab278, 0.002); end
  def test_outputs_energy_flows_ac278; assert_in_epsilon(4.730796878080278, worksheet.outputs_energy_flows_ac278, 0.002); end
  def test_outputs_energy_flows_ad278; assert_in_epsilon(5.118198781550711, worksheet.outputs_energy_flows_ad278, 0.002); end
  def test_outputs_energy_flows_c280; assert_equal("FF.01", worksheet.outputs_energy_flows_c280); end
  def test_outputs_energy_flows_d280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d280); end
  def test_outputs_energy_flows_e280; assert_equal("n/a", worksheet.outputs_energy_flows_e280); end
  def test_outputs_energy_flows_f280; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f280); end
  def test_outputs_energy_flows_i280; assert_equal("FF.01", worksheet.outputs_energy_flows_i280); end
  def test_outputs_energy_flows_j280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j280); end
  def test_outputs_energy_flows_l280; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l280); end
  def test_outputs_energy_flows_m280; assert_equal("Timber", worksheet.outputs_energy_flows_m280); end
  def test_outputs_energy_flows_v280; assert_in_epsilon(7.157385604573962, worksheet.outputs_energy_flows_v280, 0.002); end
  def test_outputs_energy_flows_w280; assert_in_epsilon(7.637550716702774, worksheet.outputs_energy_flows_w280, 0.002); end
  def test_outputs_energy_flows_x280; assert_in_epsilon(8.51681744353181, worksheet.outputs_energy_flows_x280, 0.002); end
  def test_outputs_energy_flows_y280; assert_in_epsilon(9.350616034988905, worksheet.outputs_energy_flows_y280, 0.002); end
  def test_outputs_energy_flows_z280; assert_in_epsilon(10.158654656765275, worksheet.outputs_energy_flows_z280, 0.002); end
  def test_outputs_energy_flows_aa280; assert_in_epsilon(10.937178642340365, worksheet.outputs_energy_flows_aa280, 0.002); end
  def test_outputs_energy_flows_ab280; assert_in_epsilon(11.678334323164723, worksheet.outputs_energy_flows_ab280, 0.002); end
  def test_outputs_energy_flows_ac280; assert_in_epsilon(12.375054028510808, worksheet.outputs_energy_flows_ac280, 0.002); end
  def test_outputs_energy_flows_ad280; assert_in_epsilon(13.015159679324215, worksheet.outputs_energy_flows_ad280, 0.002); end
  def test_outputs_energy_flows_c282; assert_equal("FF.01", worksheet.outputs_energy_flows_c282); end
  def test_outputs_energy_flows_d282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d282); end
  def test_outputs_energy_flows_e282; assert_equal("n/a", worksheet.outputs_energy_flows_e282); end
  def test_outputs_energy_flows_f282; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f282); end
  def test_outputs_energy_flows_i282; assert_equal("FF.01", worksheet.outputs_energy_flows_i282); end
  def test_outputs_energy_flows_j282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j282); end
  def test_outputs_energy_flows_l282; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l282); end
  def test_outputs_energy_flows_m282; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m282); end
  def test_outputs_energy_flows_v282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v282||0), 0.002); end
  def test_outputs_energy_flows_w282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w282||0), 0.002); end
  def test_outputs_energy_flows_x282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x282||0), 0.002); end
  def test_outputs_energy_flows_y282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y282||0), 0.002); end
  def test_outputs_energy_flows_z282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z282||0), 0.002); end
  def test_outputs_energy_flows_aa282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa282||0), 0.002); end
  def test_outputs_energy_flows_ab282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab282||0), 0.002); end
  def test_outputs_energy_flows_ac282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac282||0), 0.002); end
  def test_outputs_energy_flows_ad282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad282||0), 0.002); end
  def test_outputs_energy_flows_c284; assert_equal("FF.01", worksheet.outputs_energy_flows_c284); end
  def test_outputs_energy_flows_d284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d284); end
  def test_outputs_energy_flows_e284; assert_equal("n/a", worksheet.outputs_energy_flows_e284); end
  def test_outputs_energy_flows_f284; assert_equal("International passenger", worksheet.outputs_energy_flows_f284); end
  def test_outputs_energy_flows_i284; assert_equal("FF.01", worksheet.outputs_energy_flows_i284); end
  def test_outputs_energy_flows_j284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j284); end
  def test_outputs_energy_flows_l284; assert_equal("International", worksheet.outputs_energy_flows_l284); end
  def test_outputs_energy_flows_v284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v284||0), 0.002); end
  def test_outputs_energy_flows_w284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w284||0), 0.002); end
  def test_outputs_energy_flows_x284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x284||0), 0.002); end
  def test_outputs_energy_flows_y284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y284||0), 0.002); end
  def test_outputs_energy_flows_z284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z284||0), 0.002); end
  def test_outputs_energy_flows_aa284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa284||0), 0.002); end
  def test_outputs_energy_flows_ab284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab284||0), 0.002); end
  def test_outputs_energy_flows_ac284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac284||0), 0.002); end
  def test_outputs_energy_flows_ad284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad284||0), 0.002); end
  def test_outputs_energy_flows_c286; assert_equal("FF.01", worksheet.outputs_energy_flows_c286); end
  def test_outputs_energy_flows_d286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d286); end
  def test_outputs_energy_flows_e286; assert_equal("n/a", worksheet.outputs_energy_flows_e286); end
  def test_outputs_energy_flows_f286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f286); end
  def test_outputs_energy_flows_i286; assert_equal("FF.01", worksheet.outputs_energy_flows_i286); end
  def test_outputs_energy_flows_j286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j286); end
  def test_outputs_energy_flows_l286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l286); end
  def test_outputs_energy_flows_v286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v286||0), 0.002); end
  def test_outputs_energy_flows_w286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w286||0), 0.002); end
  def test_outputs_energy_flows_x286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x286||0), 0.002); end
  def test_outputs_energy_flows_y286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y286||0), 0.002); end
  def test_outputs_energy_flows_z286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z286||0), 0.002); end
  def test_outputs_energy_flows_aa286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa286||0), 0.002); end
  def test_outputs_energy_flows_ab286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab286||0), 0.002); end
  def test_outputs_energy_flows_ac286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac286||0), 0.002); end
  def test_outputs_energy_flows_ad286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad286||0), 0.002); end
  def test_outputs_energy_flows_c288; assert_equal("FF.01", worksheet.outputs_energy_flows_c288); end
  def test_outputs_energy_flows_d288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d288); end
  def test_outputs_energy_flows_e288; assert_equal("n/a", worksheet.outputs_energy_flows_e288); end
  def test_outputs_energy_flows_f288; assert_equal("International freight", worksheet.outputs_energy_flows_f288); end
  def test_outputs_energy_flows_i288; assert_equal("FF.01", worksheet.outputs_energy_flows_i288); end
  def test_outputs_energy_flows_j288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j288); end
  def test_outputs_energy_flows_l288; assert_equal("International freight", worksheet.outputs_energy_flows_l288); end
  def test_outputs_energy_flows_v288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v288||0), 0.002); end
  def test_outputs_energy_flows_w288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w288||0), 0.002); end
  def test_outputs_energy_flows_x288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x288||0), 0.002); end
  def test_outputs_energy_flows_y288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y288||0), 0.002); end
  def test_outputs_energy_flows_z288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z288||0), 0.002); end
  def test_outputs_energy_flows_aa288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa288||0), 0.002); end
  def test_outputs_energy_flows_ab288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab288||0), 0.002); end
  def test_outputs_energy_flows_ac288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac288||0), 0.002); end
  def test_outputs_energy_flows_ad288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad288||0), 0.002); end
  def test_outputs_energy_flows_c290; assert_equal("FF.01", worksheet.outputs_energy_flows_c290); end
  def test_outputs_energy_flows_d290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d290); end
  def test_outputs_energy_flows_e290; assert_equal("n/a", worksheet.outputs_energy_flows_e290); end
  def test_outputs_energy_flows_f290; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f290); end
  def test_outputs_energy_flows_i290; assert_equal("FF.01", worksheet.outputs_energy_flows_i290); end
  def test_outputs_energy_flows_j290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j290); end
  def test_outputs_energy_flows_v290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v290||0), 0.002); end
  def test_outputs_energy_flows_w290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w290||0), 0.002); end
  def test_outputs_energy_flows_x290; assert_in_delta(0.02437320670220364, worksheet.outputs_energy_flows_x290, 0.002); end
  def test_outputs_energy_flows_y290; assert_in_delta(0.03954674786313377, worksheet.outputs_energy_flows_y290, 0.002); end
  def test_outputs_energy_flows_z290; assert_in_delta(0.13719439951268436, worksheet.outputs_energy_flows_z290, 0.002); end
  def test_outputs_energy_flows_aa290; assert_in_delta(0.2527906553728647, worksheet.outputs_energy_flows_aa290, 0.002); end
  def test_outputs_energy_flows_ab290; assert_in_delta(0.33762233577634565, worksheet.outputs_energy_flows_ab290, 0.002); end
  def test_outputs_energy_flows_ac290; assert_in_delta(0.42823229392392415, worksheet.outputs_energy_flows_ac290, 0.002); end
  def test_outputs_energy_flows_ad290; assert_in_delta(0.42494879630722787, worksheet.outputs_energy_flows_ad290, 0.002); end
  def test_outputs_energy_flows_c292; assert_equal("FF.01", worksheet.outputs_energy_flows_c292); end
  def test_outputs_energy_flows_d292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d292); end
  def test_outputs_energy_flows_e292; assert_equal("G.01", worksheet.outputs_energy_flows_e292); end
  def test_outputs_energy_flows_f292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f292); end
  def test_outputs_energy_flows_g292; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g292); end
  def test_outputs_energy_flows_h292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h292); end
  def test_outputs_energy_flows_i292; assert_equal("FF.01", worksheet.outputs_energy_flows_i292); end
  def test_outputs_energy_flows_j292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j292); end
  def test_outputs_energy_flows_v292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v292||0), 0.002); end
  def test_outputs_energy_flows_w292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w292||0), 0.002); end
  def test_outputs_energy_flows_x292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x292||0), 0.002); end
  def test_outputs_energy_flows_y292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y292||0), 0.002); end
  def test_outputs_energy_flows_z292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z292||0), 0.002); end
  def test_outputs_energy_flows_aa292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa292||0), 0.002); end
  def test_outputs_energy_flows_ab292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab292||0), 0.002); end
  def test_outputs_energy_flows_ac292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac292||0), 0.002); end
  def test_outputs_energy_flows_ad292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad292||0), 0.002); end
  def test_outputs_energy_flows_c294; assert_equal("FF.01", worksheet.outputs_energy_flows_c294); end
  def test_outputs_energy_flows_d294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d294); end
  def test_outputs_energy_flows_e294; assert_equal("n/a", worksheet.outputs_energy_flows_e294); end
  def test_outputs_energy_flows_f294; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f294); end
  def test_outputs_energy_flows_g294; assert_equal("n/a", worksheet.outputs_energy_flows_g294); end
  def test_outputs_energy_flows_h294; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h294); end
  def test_outputs_energy_flows_i294; assert_equal("FF.01", worksheet.outputs_energy_flows_i294); end
  def test_outputs_energy_flows_j294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j294); end
  def test_outputs_energy_flows_v294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v294||0), 0.002); end
  def test_outputs_energy_flows_w294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w294||0), 0.002); end
  def test_outputs_energy_flows_x294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x294||0), 0.002); end
  def test_outputs_energy_flows_y294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y294||0), 0.002); end
  def test_outputs_energy_flows_z294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z294||0), 0.002); end
  def test_outputs_energy_flows_aa294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa294||0), 0.002); end
  def test_outputs_energy_flows_ab294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab294||0), 0.002); end
  def test_outputs_energy_flows_ac294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac294||0), 0.002); end
  def test_outputs_energy_flows_ad294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad294||0), 0.002); end
  def test_outputs_energy_flows_c296; assert_equal("FF.02", worksheet.outputs_energy_flows_c296); end
  def test_outputs_energy_flows_d296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d296); end
  def test_outputs_energy_flows_e296; assert_equal("n/a", worksheet.outputs_energy_flows_e296); end
  def test_outputs_energy_flows_f296; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f296); end
  def test_outputs_energy_flows_i296; assert_equal("FF.02", worksheet.outputs_energy_flows_i296); end
  def test_outputs_energy_flows_j296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j296); end
  def test_outputs_energy_flows_k296; assert_equal("Global buildings", worksheet.outputs_energy_flows_k296); end
  def test_outputs_energy_flows_v296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v296||0), 0.002); end
  def test_outputs_energy_flows_w296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w296||0), 0.002); end
  def test_outputs_energy_flows_x296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x296||0), 0.002); end
  def test_outputs_energy_flows_y296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y296||0), 0.002); end
  def test_outputs_energy_flows_z296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z296||0), 0.002); end
  def test_outputs_energy_flows_aa296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa296||0), 0.002); end
  def test_outputs_energy_flows_ab296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab296||0), 0.002); end
  def test_outputs_energy_flows_ac296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac296||0), 0.002); end
  def test_outputs_energy_flows_ad296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad296||0), 0.002); end
  def test_outputs_energy_flows_c298; assert_equal("FF.02", worksheet.outputs_energy_flows_c298); end
  def test_outputs_energy_flows_d298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d298); end
  def test_outputs_energy_flows_e298; assert_equal("n/a", worksheet.outputs_energy_flows_e298); end
  def test_outputs_energy_flows_f298; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f298); end
  def test_outputs_energy_flows_i298; assert_equal("FF.02", worksheet.outputs_energy_flows_i298); end
  def test_outputs_energy_flows_j298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j298); end
  def test_outputs_energy_flows_k298; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k298); end
  def test_outputs_energy_flows_l298; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l298); end
  def test_outputs_energy_flows_v298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v298||0), 0.002); end
  def test_outputs_energy_flows_w298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w298||0), 0.002); end
  def test_outputs_energy_flows_x298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x298||0), 0.002); end
  def test_outputs_energy_flows_y298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y298||0), 0.002); end
  def test_outputs_energy_flows_z298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z298||0), 0.002); end
  def test_outputs_energy_flows_aa298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa298||0), 0.002); end
  def test_outputs_energy_flows_ab298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab298||0), 0.002); end
  def test_outputs_energy_flows_ac298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac298||0), 0.002); end
  def test_outputs_energy_flows_ad298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad298||0), 0.002); end
  def test_outputs_energy_flows_c300; assert_equal("FF.02", worksheet.outputs_energy_flows_c300); end
  def test_outputs_energy_flows_d300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d300); end
  def test_outputs_energy_flows_e300; assert_equal("n/a", worksheet.outputs_energy_flows_e300); end
  def test_outputs_energy_flows_f300; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f300); end
  def test_outputs_energy_flows_i300; assert_equal("FF.02", worksheet.outputs_energy_flows_i300); end
  def test_outputs_energy_flows_j300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j300); end
  def test_outputs_energy_flows_k300; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k300); end
  def test_outputs_energy_flows_l300; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l300); end
  def test_outputs_energy_flows_v300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v300||0), 0.002); end
  def test_outputs_energy_flows_w300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w300||0), 0.002); end
  def test_outputs_energy_flows_x300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x300||0), 0.002); end
  def test_outputs_energy_flows_y300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y300||0), 0.002); end
  def test_outputs_energy_flows_z300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z300||0), 0.002); end
  def test_outputs_energy_flows_aa300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa300||0), 0.002); end
  def test_outputs_energy_flows_ab300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab300||0), 0.002); end
  def test_outputs_energy_flows_ac300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac300||0), 0.002); end
  def test_outputs_energy_flows_ad300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad300||0), 0.002); end
  def test_outputs_energy_flows_c302; assert_equal("FF.02", worksheet.outputs_energy_flows_c302); end
  def test_outputs_energy_flows_d302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d302); end
  def test_outputs_energy_flows_e302; assert_equal("n/a", worksheet.outputs_energy_flows_e302); end
  def test_outputs_energy_flows_f302; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f302); end
  def test_outputs_energy_flows_i302; assert_equal("FF.02", worksheet.outputs_energy_flows_i302); end
  def test_outputs_energy_flows_j302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j302); end
  def test_outputs_energy_flows_k302; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k302); end
  def test_outputs_energy_flows_l302; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l302); end
  def test_outputs_energy_flows_v302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v302||0), 0.002); end
  def test_outputs_energy_flows_w302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w302||0), 0.002); end
  def test_outputs_energy_flows_x302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x302||0), 0.002); end
  def test_outputs_energy_flows_y302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y302||0), 0.002); end
  def test_outputs_energy_flows_z302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z302||0), 0.002); end
  def test_outputs_energy_flows_aa302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa302||0), 0.002); end
  def test_outputs_energy_flows_ab302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab302||0), 0.002); end
  def test_outputs_energy_flows_ac302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac302||0), 0.002); end
  def test_outputs_energy_flows_ad302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad302||0), 0.002); end
  def test_outputs_energy_flows_c304; assert_equal("FF.02", worksheet.outputs_energy_flows_c304); end
  def test_outputs_energy_flows_d304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d304); end
  def test_outputs_energy_flows_e304; assert_equal("n/a", worksheet.outputs_energy_flows_e304); end
  def test_outputs_energy_flows_f304; assert_equal("Non domestic", worksheet.outputs_energy_flows_f304); end
  def test_outputs_energy_flows_i304; assert_equal("FF.02", worksheet.outputs_energy_flows_i304); end
  def test_outputs_energy_flows_j304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j304); end
  def test_outputs_energy_flows_k304; assert_equal("Non-residential", worksheet.outputs_energy_flows_k304); end
  def test_outputs_energy_flows_v304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v304||0), 0.002); end
  def test_outputs_energy_flows_w304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w304||0), 0.002); end
  def test_outputs_energy_flows_x304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x304||0), 0.002); end
  def test_outputs_energy_flows_y304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y304||0), 0.002); end
  def test_outputs_energy_flows_z304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z304||0), 0.002); end
  def test_outputs_energy_flows_aa304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa304||0), 0.002); end
  def test_outputs_energy_flows_ab304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab304||0), 0.002); end
  def test_outputs_energy_flows_ac304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac304||0), 0.002); end
  def test_outputs_energy_flows_ad304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad304||0), 0.002); end
  def test_outputs_energy_flows_c306; assert_equal("FF.02", worksheet.outputs_energy_flows_c306); end
  def test_outputs_energy_flows_d306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d306); end
  def test_outputs_energy_flows_e306; assert_equal("n/a", worksheet.outputs_energy_flows_e306); end
  def test_outputs_energy_flows_f306; assert_equal("Steel", worksheet.outputs_energy_flows_f306); end
  def test_outputs_energy_flows_i306; assert_equal("FF.02", worksheet.outputs_energy_flows_i306); end
  def test_outputs_energy_flows_j306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j306); end
  def test_outputs_energy_flows_v306; assert_in_delta(0.6053795859240001, worksheet.outputs_energy_flows_v306, 0.002); end
  def test_outputs_energy_flows_w306; assert_in_delta(0.618407392684066, worksheet.outputs_energy_flows_w306, 0.002); end
  def test_outputs_energy_flows_x306; assert_in_delta(0.6680980487309383, worksheet.outputs_energy_flows_x306, 0.002); end
  def test_outputs_energy_flows_y306; assert_in_delta(0.7119728436239943, worksheet.outputs_energy_flows_y306, 0.002); end
  def test_outputs_energy_flows_z306; assert_in_delta(0.7532112167892724, worksheet.outputs_energy_flows_z306, 0.002); end
  def test_outputs_energy_flows_aa306; assert_in_delta(0.7903312592430324, worksheet.outputs_energy_flows_aa306, 0.002); end
  def test_outputs_energy_flows_ab306; assert_in_delta(0.8295335220702329, worksheet.outputs_energy_flows_ab306, 0.002); end
  def test_outputs_energy_flows_ac306; assert_in_delta(0.8698401892166273, worksheet.outputs_energy_flows_ac306, 0.002); end
  def test_outputs_energy_flows_ad306; assert_in_delta(0.910941516197163, worksheet.outputs_energy_flows_ad306, 0.002); end
  def test_outputs_energy_flows_c308; assert_equal("FF.02", worksheet.outputs_energy_flows_c308); end
  def test_outputs_energy_flows_d308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d308); end
  def test_outputs_energy_flows_e308; assert_equal("n/a", worksheet.outputs_energy_flows_e308); end
  def test_outputs_energy_flows_f308; assert_equal("Aluminium", worksheet.outputs_energy_flows_f308); end
  def test_outputs_energy_flows_i308; assert_equal("FF.02", worksheet.outputs_energy_flows_i308); end
  def test_outputs_energy_flows_j308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j308); end
  def test_outputs_energy_flows_v308; assert_in_delta(0.5405428608660054, worksheet.outputs_energy_flows_v308, 0.002); end
  def test_outputs_energy_flows_w308; assert_in_delta(0.5965253919133334, worksheet.outputs_energy_flows_w308, 0.002); end
  def test_outputs_energy_flows_x308; assert_in_delta(0.6722834319965709, worksheet.outputs_energy_flows_x308, 0.002); end
  def test_outputs_energy_flows_y308; assert_in_delta(0.7701934955578323, worksheet.outputs_energy_flows_y308, 0.002); end
  def test_outputs_energy_flows_z308; assert_in_delta(0.8741347177488769, worksheet.outputs_energy_flows_z308, 0.002); end
  def test_outputs_energy_flows_aa308; assert_in_delta(0.9802223180398019, worksheet.outputs_energy_flows_aa308, 0.002); end
  def test_outputs_energy_flows_ab308; assert_in_epsilon(1.098798335362642, worksheet.outputs_energy_flows_ab308, 0.002); end
  def test_outputs_energy_flows_ac308; assert_in_epsilon(1.2272159590299014, worksheet.outputs_energy_flows_ac308, 0.002); end
  def test_outputs_energy_flows_ad308; assert_in_epsilon(1.3714260884097236, worksheet.outputs_energy_flows_ad308, 0.002); end
  def test_outputs_energy_flows_c310; assert_equal("FF.02", worksheet.outputs_energy_flows_c310); end
  def test_outputs_energy_flows_d310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d310); end
  def test_outputs_energy_flows_e310; assert_equal("n/a", worksheet.outputs_energy_flows_e310); end
  def test_outputs_energy_flows_f310; assert_equal("Cement", worksheet.outputs_energy_flows_f310); end
  def test_outputs_energy_flows_i310; assert_equal("FF.02", worksheet.outputs_energy_flows_i310); end
  def test_outputs_energy_flows_j310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j310); end
  def test_outputs_energy_flows_v310; assert_in_epsilon(1.1385974140784139, worksheet.outputs_energy_flows_v310, 0.002); end
  def test_outputs_energy_flows_w310; assert_in_epsilon(1.1571022905143928, worksheet.outputs_energy_flows_w310, 0.002); end
  def test_outputs_energy_flows_x310; assert_in_epsilon(1.3242505723106213, worksheet.outputs_energy_flows_x310, 0.002); end
  def test_outputs_energy_flows_y310; assert_in_epsilon(1.3824191680034408, worksheet.outputs_energy_flows_y310, 0.002); end
  def test_outputs_energy_flows_z310; assert_in_epsilon(1.4332118254628083, worksheet.outputs_energy_flows_z310, 0.002); end
  def test_outputs_energy_flows_aa310; assert_in_epsilon(1.4806030037738511, worksheet.outputs_energy_flows_aa310, 0.002); end
  def test_outputs_energy_flows_ab310; assert_in_epsilon(1.517373526802266, worksheet.outputs_energy_flows_ab310, 0.002); end
  def test_outputs_energy_flows_ac310; assert_in_epsilon(1.5519164832891694, worksheet.outputs_energy_flows_ac310, 0.002); end
  def test_outputs_energy_flows_ad310; assert_in_epsilon(1.5881820897613905, worksheet.outputs_energy_flows_ad310, 0.002); end
  def test_outputs_energy_flows_c312; assert_equal("FF.02", worksheet.outputs_energy_flows_c312); end
  def test_outputs_energy_flows_d312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d312); end
  def test_outputs_energy_flows_e312; assert_equal("n/a", worksheet.outputs_energy_flows_e312); end
  def test_outputs_energy_flows_f312; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f312); end
  def test_outputs_energy_flows_i312; assert_equal("FF.02", worksheet.outputs_energy_flows_i312); end
  def test_outputs_energy_flows_j312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j312); end
  def test_outputs_energy_flows_v312; assert_in_delta(0.40529936521738275, worksheet.outputs_energy_flows_v312, 0.002); end
  def test_outputs_energy_flows_w312; assert_in_delta(0.42095795528494745, worksheet.outputs_energy_flows_w312, 0.002); end
  def test_outputs_energy_flows_x312; assert_in_delta(0.43837254481374077, worksheet.outputs_energy_flows_x312, 0.002); end
  def test_outputs_energy_flows_y312; assert_in_delta(0.47361517351384574, worksheet.outputs_energy_flows_y312, 0.002); end
  def test_outputs_energy_flows_z312; assert_in_delta(0.5089422520098991, worksheet.outputs_energy_flows_z312, 0.002); end
  def test_outputs_energy_flows_aa312; assert_in_delta(0.5431232050454367, worksheet.outputs_energy_flows_aa312, 0.002); end
  def test_outputs_energy_flows_ab312; assert_in_delta(0.5806724234727303, worksheet.outputs_energy_flows_ab312, 0.002); end
  def test_outputs_energy_flows_ac312; assert_in_delta(0.6173482630498281, worksheet.outputs_energy_flows_ac312, 0.002); end
  def test_outputs_energy_flows_ad312; assert_in_delta(0.6578406065700915, worksheet.outputs_energy_flows_ad312, 0.002); end
  def test_outputs_energy_flows_c314; assert_equal("FF.02", worksheet.outputs_energy_flows_c314); end
  def test_outputs_energy_flows_d314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d314); end
  def test_outputs_energy_flows_e314; assert_equal("n/a", worksheet.outputs_energy_flows_e314); end
  def test_outputs_energy_flows_f314; assert_equal("Chemicals", worksheet.outputs_energy_flows_f314); end
  def test_outputs_energy_flows_i314; assert_equal("FF.02", worksheet.outputs_energy_flows_i314); end
  def test_outputs_energy_flows_j314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j314); end
  def test_outputs_energy_flows_v314; assert_in_epsilon(19.210879294175747, worksheet.outputs_energy_flows_v314, 0.002); end
  def test_outputs_energy_flows_w314; assert_in_epsilon(20.58506282945259, worksheet.outputs_energy_flows_w314, 0.002); end
  def test_outputs_energy_flows_x314; assert_in_epsilon(21.97574607721634, worksheet.outputs_energy_flows_x314, 0.002); end
  def test_outputs_energy_flows_y314; assert_in_epsilon(24.91391581974534, worksheet.outputs_energy_flows_y314, 0.002); end
  def test_outputs_energy_flows_z314; assert_in_epsilon(28.06875750292764, worksheet.outputs_energy_flows_z314, 0.002); end
  def test_outputs_energy_flows_aa314; assert_in_epsilon(31.336093834142233, worksheet.outputs_energy_flows_aa314, 0.002); end
  def test_outputs_energy_flows_ab314; assert_in_epsilon(35.120110250153765, worksheet.outputs_energy_flows_ab314, 0.002); end
  def test_outputs_energy_flows_ac314; assert_in_epsilon(39.11852774646124, worksheet.outputs_energy_flows_ac314, 0.002); end
  def test_outputs_energy_flows_ad314; assert_in_epsilon(43.710376557725816, worksheet.outputs_energy_flows_ad314, 0.002); end
  def test_outputs_energy_flows_c316; assert_equal("FF.02", worksheet.outputs_energy_flows_c316); end
  def test_outputs_energy_flows_d316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d316); end
  def test_outputs_energy_flows_e316; assert_equal("n/a", worksheet.outputs_energy_flows_e316); end
  def test_outputs_energy_flows_f316; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f316); end
  def test_outputs_energy_flows_i316; assert_equal("FF.02", worksheet.outputs_energy_flows_i316); end
  def test_outputs_energy_flows_j316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j316); end
  def test_outputs_energy_flows_l316; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l316); end
  def test_outputs_energy_flows_m316; assert_equal("Timber", worksheet.outputs_energy_flows_m316); end
  def test_outputs_energy_flows_v316; assert_in_epsilon(8.9088083790622, worksheet.outputs_energy_flows_v316, 0.002); end
  def test_outputs_energy_flows_w316; assert_in_epsilon(9.542678392261498, worksheet.outputs_energy_flows_w316, 0.002); end
  def test_outputs_energy_flows_x316; assert_in_epsilon(10.73609429349468, worksheet.outputs_energy_flows_x316, 0.002); end
  def test_outputs_energy_flows_y316; assert_in_epsilon(11.909252055875516, worksheet.outputs_energy_flows_y316, 0.002); end
  def test_outputs_energy_flows_z316; assert_in_epsilon(13.056517083775754, worksheet.outputs_energy_flows_z316, 0.002); end
  def test_outputs_energy_flows_aa316; assert_in_epsilon(14.170142324426115, worksheet.outputs_energy_flows_aa316, 0.002); end
  def test_outputs_energy_flows_ab316; assert_in_epsilon(15.239288651484566, worksheet.outputs_energy_flows_ab316, 0.002); end
  def test_outputs_energy_flows_ac316; assert_in_epsilon(16.251067217475345, worksheet.outputs_energy_flows_ac316, 0.002); end
  def test_outputs_energy_flows_ad316; assert_in_epsilon(17.19229883250074, worksheet.outputs_energy_flows_ad316, 0.002); end
  def test_outputs_energy_flows_c318; assert_equal("FF.02", worksheet.outputs_energy_flows_c318); end
  def test_outputs_energy_flows_d318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d318); end
  def test_outputs_energy_flows_e318; assert_equal("n/a", worksheet.outputs_energy_flows_e318); end
  def test_outputs_energy_flows_f318; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f318); end
  def test_outputs_energy_flows_i318; assert_equal("FF.02", worksheet.outputs_energy_flows_i318); end
  def test_outputs_energy_flows_j318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j318); end
  def test_outputs_energy_flows_l318; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l318); end
  def test_outputs_energy_flows_m318; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m318); end
  def test_outputs_energy_flows_v318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v318||0), 0.002); end
  def test_outputs_energy_flows_w318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w318||0), 0.002); end
  def test_outputs_energy_flows_x318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x318||0), 0.002); end
  def test_outputs_energy_flows_y318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y318||0), 0.002); end
  def test_outputs_energy_flows_z318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z318||0), 0.002); end
  def test_outputs_energy_flows_aa318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa318||0), 0.002); end
  def test_outputs_energy_flows_ab318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab318||0), 0.002); end
  def test_outputs_energy_flows_ac318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac318||0), 0.002); end
  def test_outputs_energy_flows_ad318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad318||0), 0.002); end
  def test_outputs_energy_flows_c320; assert_equal("FF.02", worksheet.outputs_energy_flows_c320); end
  def test_outputs_energy_flows_d320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d320); end
  def test_outputs_energy_flows_e320; assert_equal("n/a", worksheet.outputs_energy_flows_e320); end
  def test_outputs_energy_flows_f320; assert_equal("International passenger", worksheet.outputs_energy_flows_f320); end
  def test_outputs_energy_flows_i320; assert_equal("FF.02", worksheet.outputs_energy_flows_i320); end
  def test_outputs_energy_flows_j320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j320); end
  def test_outputs_energy_flows_l320; assert_equal("International", worksheet.outputs_energy_flows_l320); end
  def test_outputs_energy_flows_v320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v320||0), 0.002); end
  def test_outputs_energy_flows_w320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w320||0), 0.002); end
  def test_outputs_energy_flows_x320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x320||0), 0.002); end
  def test_outputs_energy_flows_y320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y320||0), 0.002); end
  def test_outputs_energy_flows_z320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z320||0), 0.002); end
  def test_outputs_energy_flows_aa320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa320||0), 0.002); end
  def test_outputs_energy_flows_ab320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab320||0), 0.002); end
  def test_outputs_energy_flows_ac320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac320||0), 0.002); end
  def test_outputs_energy_flows_ad320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad320||0), 0.002); end
  def test_outputs_energy_flows_c322; assert_equal("FF.02", worksheet.outputs_energy_flows_c322); end
  def test_outputs_energy_flows_d322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d322); end
  def test_outputs_energy_flows_e322; assert_equal("n/a", worksheet.outputs_energy_flows_e322); end
  def test_outputs_energy_flows_f322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f322); end
  def test_outputs_energy_flows_i322; assert_equal("FF.02", worksheet.outputs_energy_flows_i322); end
  def test_outputs_energy_flows_j322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j322); end
  def test_outputs_energy_flows_l322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l322); end
  def test_outputs_energy_flows_v322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v322||0), 0.002); end
  def test_outputs_energy_flows_w322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w322||0), 0.002); end
  def test_outputs_energy_flows_x322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x322||0), 0.002); end
  def test_outputs_energy_flows_y322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y322||0), 0.002); end
  def test_outputs_energy_flows_z322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z322||0), 0.002); end
  def test_outputs_energy_flows_aa322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa322||0), 0.002); end
  def test_outputs_energy_flows_ab322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab322||0), 0.002); end
  def test_outputs_energy_flows_ac322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac322||0), 0.002); end
  def test_outputs_energy_flows_ad322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad322||0), 0.002); end
  def test_outputs_energy_flows_c324; assert_equal("FF.02", worksheet.outputs_energy_flows_c324); end
  def test_outputs_energy_flows_d324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d324); end
  def test_outputs_energy_flows_e324; assert_equal("n/a", worksheet.outputs_energy_flows_e324); end
  def test_outputs_energy_flows_f324; assert_equal("International freight", worksheet.outputs_energy_flows_f324); end
  def test_outputs_energy_flows_i324; assert_equal("FF.02", worksheet.outputs_energy_flows_i324); end
  def test_outputs_energy_flows_j324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j324); end
  def test_outputs_energy_flows_l324; assert_equal("International freight", worksheet.outputs_energy_flows_l324); end
  def test_outputs_energy_flows_v324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v324||0), 0.002); end
  def test_outputs_energy_flows_w324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w324||0), 0.002); end
  def test_outputs_energy_flows_x324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x324||0), 0.002); end
  def test_outputs_energy_flows_y324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y324||0), 0.002); end
  def test_outputs_energy_flows_z324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z324||0), 0.002); end
  def test_outputs_energy_flows_aa324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa324||0), 0.002); end
  def test_outputs_energy_flows_ab324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab324||0), 0.002); end
  def test_outputs_energy_flows_ac324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac324||0), 0.002); end
  def test_outputs_energy_flows_ad324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad324||0), 0.002); end
  def test_outputs_energy_flows_c326; assert_equal("FF.02", worksheet.outputs_energy_flows_c326); end
  def test_outputs_energy_flows_d326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d326); end
  def test_outputs_energy_flows_e326; assert_equal("n/a", worksheet.outputs_energy_flows_e326); end
  def test_outputs_energy_flows_f326; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f326); end
  def test_outputs_energy_flows_i326; assert_equal("FF.02", worksheet.outputs_energy_flows_i326); end
  def test_outputs_energy_flows_j326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j326); end
  def test_outputs_energy_flows_v326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v326||0), 0.002); end
  def test_outputs_energy_flows_w326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w326||0), 0.002); end
  def test_outputs_energy_flows_x326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x326||0), 0.002); end
  def test_outputs_energy_flows_y326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y326||0), 0.002); end
  def test_outputs_energy_flows_z326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z326||0), 0.002); end
  def test_outputs_energy_flows_aa326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa326||0), 0.002); end
  def test_outputs_energy_flows_ab326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab326||0), 0.002); end
  def test_outputs_energy_flows_ac326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac326||0), 0.002); end
  def test_outputs_energy_flows_ad326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad326||0), 0.002); end
  def test_outputs_energy_flows_c328; assert_equal("FF.02", worksheet.outputs_energy_flows_c328); end
  def test_outputs_energy_flows_d328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d328); end
  def test_outputs_energy_flows_e328; assert_equal("G.01", worksheet.outputs_energy_flows_e328); end
  def test_outputs_energy_flows_f328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f328); end
  def test_outputs_energy_flows_g328; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g328); end
  def test_outputs_energy_flows_h328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h328); end
  def test_outputs_energy_flows_i328; assert_equal("FF.02", worksheet.outputs_energy_flows_i328); end
  def test_outputs_energy_flows_j328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j328); end
  def test_outputs_energy_flows_v328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v328||0), 0.002); end
  def test_outputs_energy_flows_w328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w328||0), 0.002); end
  def test_outputs_energy_flows_x328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x328||0), 0.002); end
  def test_outputs_energy_flows_y328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y328||0), 0.002); end
  def test_outputs_energy_flows_z328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z328||0), 0.002); end
  def test_outputs_energy_flows_aa328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa328||0), 0.002); end
  def test_outputs_energy_flows_ab328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab328||0), 0.002); end
  def test_outputs_energy_flows_ac328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac328||0), 0.002); end
  def test_outputs_energy_flows_ad328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad328||0), 0.002); end
  def test_outputs_energy_flows_c330; assert_equal("FF.02", worksheet.outputs_energy_flows_c330); end
  def test_outputs_energy_flows_d330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d330); end
  def test_outputs_energy_flows_e330; assert_equal("n/a", worksheet.outputs_energy_flows_e330); end
  def test_outputs_energy_flows_f330; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f330); end
  def test_outputs_energy_flows_g330; assert_equal("n/a", worksheet.outputs_energy_flows_g330); end
  def test_outputs_energy_flows_h330; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h330); end
  def test_outputs_energy_flows_i330; assert_equal("FF.02", worksheet.outputs_energy_flows_i330); end
  def test_outputs_energy_flows_j330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j330); end
  def test_outputs_energy_flows_v330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v330||0), 0.002); end
  def test_outputs_energy_flows_w330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w330||0), 0.002); end
  def test_outputs_energy_flows_x330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x330||0), 0.002); end
  def test_outputs_energy_flows_y330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y330||0), 0.002); end
  def test_outputs_energy_flows_z330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z330||0), 0.002); end
  def test_outputs_energy_flows_aa330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa330||0), 0.002); end
  def test_outputs_energy_flows_ab330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab330||0), 0.002); end
  def test_outputs_energy_flows_ac330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac330||0), 0.002); end
  def test_outputs_energy_flows_ad330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad330||0), 0.002); end
  def test_outputs_energy_flows_c332; assert_equal("FF.03", worksheet.outputs_energy_flows_c332); end
  def test_outputs_energy_flows_d332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d332); end
  def test_outputs_energy_flows_e332; assert_equal("n/a", worksheet.outputs_energy_flows_e332); end
  def test_outputs_energy_flows_f332; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f332); end
  def test_outputs_energy_flows_i332; assert_equal("FF.03", worksheet.outputs_energy_flows_i332); end
  def test_outputs_energy_flows_j332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j332); end
  def test_outputs_energy_flows_k332; assert_equal("Global buildings", worksheet.outputs_energy_flows_k332); end
  def test_outputs_energy_flows_v332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v332||0), 0.002); end
  def test_outputs_energy_flows_w332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w332||0), 0.002); end
  def test_outputs_energy_flows_x332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x332||0), 0.002); end
  def test_outputs_energy_flows_y332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y332||0), 0.002); end
  def test_outputs_energy_flows_z332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z332||0), 0.002); end
  def test_outputs_energy_flows_aa332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa332||0), 0.002); end
  def test_outputs_energy_flows_ab332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab332||0), 0.002); end
  def test_outputs_energy_flows_ac332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac332||0), 0.002); end
  def test_outputs_energy_flows_ad332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad332||0), 0.002); end
  def test_outputs_energy_flows_c334; assert_equal("FF.03", worksheet.outputs_energy_flows_c334); end
  def test_outputs_energy_flows_d334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d334); end
  def test_outputs_energy_flows_e334; assert_equal("n/a", worksheet.outputs_energy_flows_e334); end
  def test_outputs_energy_flows_f334; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f334); end
  def test_outputs_energy_flows_i334; assert_equal("FF.03", worksheet.outputs_energy_flows_i334); end
  def test_outputs_energy_flows_j334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j334); end
  def test_outputs_energy_flows_k334; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k334); end
  def test_outputs_energy_flows_l334; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l334); end
  def test_outputs_energy_flows_v334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v334||0), 0.002); end
  def test_outputs_energy_flows_w334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w334||0), 0.002); end
  def test_outputs_energy_flows_x334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x334||0), 0.002); end
  def test_outputs_energy_flows_y334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y334||0), 0.002); end
  def test_outputs_energy_flows_z334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z334||0), 0.002); end
  def test_outputs_energy_flows_aa334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa334||0), 0.002); end
  def test_outputs_energy_flows_ab334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab334||0), 0.002); end
  def test_outputs_energy_flows_ac334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac334||0), 0.002); end
  def test_outputs_energy_flows_ad334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad334||0), 0.002); end
  def test_outputs_energy_flows_c336; assert_equal("FF.03", worksheet.outputs_energy_flows_c336); end
  def test_outputs_energy_flows_d336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d336); end
  def test_outputs_energy_flows_e336; assert_equal("n/a", worksheet.outputs_energy_flows_e336); end
  def test_outputs_energy_flows_f336; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f336); end
  def test_outputs_energy_flows_i336; assert_equal("FF.03", worksheet.outputs_energy_flows_i336); end
  def test_outputs_energy_flows_j336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j336); end
  def test_outputs_energy_flows_k336; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k336); end
  def test_outputs_energy_flows_l336; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l336); end
  def test_outputs_energy_flows_v336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v336||0), 0.002); end
  def test_outputs_energy_flows_w336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w336||0), 0.002); end
  def test_outputs_energy_flows_x336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x336||0), 0.002); end
  def test_outputs_energy_flows_y336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y336||0), 0.002); end
  def test_outputs_energy_flows_z336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z336||0), 0.002); end
  def test_outputs_energy_flows_aa336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa336||0), 0.002); end
  def test_outputs_energy_flows_ab336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab336||0), 0.002); end
  def test_outputs_energy_flows_ac336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac336||0), 0.002); end
  def test_outputs_energy_flows_ad336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad336||0), 0.002); end
  def test_outputs_energy_flows_c338; assert_equal("FF.03", worksheet.outputs_energy_flows_c338); end
  def test_outputs_energy_flows_d338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d338); end
  def test_outputs_energy_flows_e338; assert_equal("n/a", worksheet.outputs_energy_flows_e338); end
  def test_outputs_energy_flows_f338; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f338); end
  def test_outputs_energy_flows_i338; assert_equal("FF.03", worksheet.outputs_energy_flows_i338); end
  def test_outputs_energy_flows_j338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j338); end
  def test_outputs_energy_flows_k338; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k338); end
  def test_outputs_energy_flows_l338; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l338); end
  def test_outputs_energy_flows_v338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v338||0), 0.002); end
  def test_outputs_energy_flows_w338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w338||0), 0.002); end
  def test_outputs_energy_flows_x338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x338||0), 0.002); end
  def test_outputs_energy_flows_y338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y338||0), 0.002); end
  def test_outputs_energy_flows_z338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z338||0), 0.002); end
  def test_outputs_energy_flows_aa338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa338||0), 0.002); end
  def test_outputs_energy_flows_ab338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab338||0), 0.002); end
  def test_outputs_energy_flows_ac338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac338||0), 0.002); end
  def test_outputs_energy_flows_ad338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad338||0), 0.002); end
  def test_outputs_energy_flows_c340; assert_equal("FF.03", worksheet.outputs_energy_flows_c340); end
  def test_outputs_energy_flows_d340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d340); end
  def test_outputs_energy_flows_e340; assert_equal("n/a", worksheet.outputs_energy_flows_e340); end
  def test_outputs_energy_flows_f340; assert_equal("Non domestic", worksheet.outputs_energy_flows_f340); end
  def test_outputs_energy_flows_i340; assert_equal("FF.03", worksheet.outputs_energy_flows_i340); end
  def test_outputs_energy_flows_j340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j340); end
  def test_outputs_energy_flows_k340; assert_equal("Non-residential", worksheet.outputs_energy_flows_k340); end
  def test_outputs_energy_flows_v340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v340||0), 0.002); end
  def test_outputs_energy_flows_w340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w340||0), 0.002); end
  def test_outputs_energy_flows_x340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x340||0), 0.002); end
  def test_outputs_energy_flows_y340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y340||0), 0.002); end
  def test_outputs_energy_flows_z340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z340||0), 0.002); end
  def test_outputs_energy_flows_aa340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa340||0), 0.002); end
  def test_outputs_energy_flows_ab340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab340||0), 0.002); end
  def test_outputs_energy_flows_ac340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac340||0), 0.002); end
  def test_outputs_energy_flows_ad340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad340||0), 0.002); end
  def test_outputs_energy_flows_c342; assert_equal("FF.03", worksheet.outputs_energy_flows_c342); end
  def test_outputs_energy_flows_d342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d342); end
  def test_outputs_energy_flows_e342; assert_equal("n/a", worksheet.outputs_energy_flows_e342); end
  def test_outputs_energy_flows_f342; assert_equal("Steel", worksheet.outputs_energy_flows_f342); end
  def test_outputs_energy_flows_i342; assert_equal("FF.03", worksheet.outputs_energy_flows_i342); end
  def test_outputs_energy_flows_j342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j342); end
  def test_outputs_energy_flows_v342; assert_in_epsilon(2.3045661146880003, worksheet.outputs_energy_flows_v342, 0.002); end
  def test_outputs_energy_flows_w342; assert_in_epsilon(2.4524149681809257, worksheet.outputs_energy_flows_w342, 0.002); end
  def test_outputs_energy_flows_x342; assert_in_epsilon(2.664652506764745, worksheet.outputs_energy_flows_x342, 0.002); end
  def test_outputs_energy_flows_y342; assert_in_epsilon(2.8567549846919267, worksheet.outputs_energy_flows_y342, 0.002); end
  def test_outputs_energy_flows_z342; assert_in_epsilon(3.041352609992702, worksheet.outputs_energy_flows_z342, 0.002); end
  def test_outputs_energy_flows_aa342; assert_in_epsilon(3.2124339721375423, worksheet.outputs_energy_flows_aa342, 0.002); end
  def test_outputs_energy_flows_ab342; assert_in_epsilon(3.3952542247856132, worksheet.outputs_energy_flows_ab342, 0.002); end
  def test_outputs_energy_flows_ac342; assert_in_epsilon(3.5861898735608086, worksheet.outputs_energy_flows_ac342, 0.002); end
  def test_outputs_energy_flows_ad342; assert_in_epsilon(3.784304595341438, worksheet.outputs_energy_flows_ad342, 0.002); end
  def test_outputs_energy_flows_c344; assert_equal("FF.03", worksheet.outputs_energy_flows_c344); end
  def test_outputs_energy_flows_d344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d344); end
  def test_outputs_energy_flows_e344; assert_equal("n/a", worksheet.outputs_energy_flows_e344); end
  def test_outputs_energy_flows_f344; assert_equal("Aluminium", worksheet.outputs_energy_flows_f344); end
  def test_outputs_energy_flows_i344; assert_equal("FF.03", worksheet.outputs_energy_flows_i344); end
  def test_outputs_energy_flows_j344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j344); end
  def test_outputs_energy_flows_v344; assert_in_delta(0.6789041363973375, worksheet.outputs_energy_flows_v344, 0.002); end
  def test_outputs_energy_flows_w344; assert_in_delta(0.7293559922274351, worksheet.outputs_energy_flows_w344, 0.002); end
  def test_outputs_energy_flows_x344; assert_in_delta(0.7874242164537187, worksheet.outputs_energy_flows_x344, 0.002); end
  def test_outputs_energy_flows_y344; assert_in_delta(0.8653886315704293, worksheet.outputs_energy_flows_y344, 0.002); end
  def test_outputs_energy_flows_z344; assert_in_delta(0.9434574795302371, worksheet.outputs_energy_flows_z344, 0.002); end
  def test_outputs_energy_flows_aa344; assert_in_epsilon(1.0175376111086576, worksheet.outputs_energy_flows_aa344, 0.002); end
  def test_outputs_energy_flows_ab344; assert_in_epsilon(1.0983723740905442, worksheet.outputs_energy_flows_ab344, 0.002); end
  def test_outputs_energy_flows_ac344; assert_in_epsilon(1.1826578834595118, worksheet.outputs_energy_flows_ac344, 0.002); end
  def test_outputs_energy_flows_ad344; assert_in_epsilon(1.2755488067866174, worksheet.outputs_energy_flows_ad344, 0.002); end
  def test_outputs_energy_flows_c346; assert_equal("FF.03", worksheet.outputs_energy_flows_c346); end
  def test_outputs_energy_flows_d346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d346); end
  def test_outputs_energy_flows_e346; assert_equal("n/a", worksheet.outputs_energy_flows_e346); end
  def test_outputs_energy_flows_f346; assert_equal("Cement", worksheet.outputs_energy_flows_f346); end
  def test_outputs_energy_flows_i346; assert_equal("FF.03", worksheet.outputs_energy_flows_i346); end
  def test_outputs_energy_flows_j346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j346); end
  def test_outputs_energy_flows_v346; assert_in_delta(0.8284396320493046, worksheet.outputs_energy_flows_v346, 0.002); end
  def test_outputs_energy_flows_w346; assert_in_delta(0.8419037176305539, worksheet.outputs_energy_flows_w346, 0.002); end
  def test_outputs_energy_flows_x346; assert_in_delta(0.9635202428015869, worksheet.outputs_energy_flows_x346, 0.002); end
  def test_outputs_energy_flows_y346; assert_in_epsilon(1.005843516521288, worksheet.outputs_energy_flows_y346, 0.002); end
  def test_outputs_energy_flows_z346; assert_in_epsilon(1.042800082499881, worksheet.outputs_energy_flows_z346, 0.002); end
  def test_outputs_energy_flows_aa346; assert_in_epsilon(1.0772817437411026, worksheet.outputs_energy_flows_aa346, 0.002); end
  def test_outputs_energy_flows_ab346; assert_in_epsilon(1.1040358520776106, worksheet.outputs_energy_flows_ab346, 0.002); end
  def test_outputs_energy_flows_ac346; assert_in_epsilon(1.1291691905237267, worksheet.outputs_energy_flows_ac346, 0.002); end
  def test_outputs_energy_flows_ad346; assert_in_epsilon(1.1555559232796668, worksheet.outputs_energy_flows_ad346, 0.002); end
  def test_outputs_energy_flows_c348; assert_equal("FF.03", worksheet.outputs_energy_flows_c348); end
  def test_outputs_energy_flows_d348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d348); end
  def test_outputs_energy_flows_e348; assert_equal("n/a", worksheet.outputs_energy_flows_e348); end
  def test_outputs_energy_flows_f348; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f348); end
  def test_outputs_energy_flows_i348; assert_equal("FF.03", worksheet.outputs_energy_flows_i348); end
  def test_outputs_energy_flows_j348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j348); end
  def test_outputs_energy_flows_v348; assert_in_delta(0.9864225684717471, worksheet.outputs_energy_flows_v348, 0.002); end
  def test_outputs_energy_flows_w348; assert_in_epsilon(1.0347680924719895, worksheet.outputs_energy_flows_w348, 0.002); end
  def test_outputs_energy_flows_x348; assert_in_epsilon(1.0893903901811377, worksheet.outputs_energy_flows_x348, 0.002); end
  def test_outputs_energy_flows_y348; assert_in_epsilon(1.1897359018663058, worksheet.outputs_energy_flows_y348, 0.002); end
  def test_outputs_energy_flows_z348; assert_in_epsilon(1.292195440621603, worksheet.outputs_energy_flows_z348, 0.002); end
  def test_outputs_energy_flows_aa348; assert_in_epsilon(1.3936182398282075, worksheet.outputs_energy_flows_aa348, 0.002); end
  def test_outputs_energy_flows_ab348; assert_in_epsilon(1.5056169078890806, worksheet.outputs_energy_flows_ab348, 0.002); end
  def test_outputs_energy_flows_ac348; assert_in_epsilon(1.6173513472669496, worksheet.outputs_energy_flows_ac348, 0.002); end
  def test_outputs_energy_flows_ad348; assert_in_epsilon(1.7411640430244524, worksheet.outputs_energy_flows_ad348, 0.002); end
  def test_outputs_energy_flows_c350; assert_equal("FF.03", worksheet.outputs_energy_flows_c350); end
  def test_outputs_energy_flows_d350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d350); end
  def test_outputs_energy_flows_e350; assert_equal("n/a", worksheet.outputs_energy_flows_e350); end
  def test_outputs_energy_flows_f350; assert_equal("Chemicals", worksheet.outputs_energy_flows_f350); end
  def test_outputs_energy_flows_i350; assert_equal("FF.03", worksheet.outputs_energy_flows_i350); end
  def test_outputs_energy_flows_j350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j350); end
  def test_outputs_energy_flows_v350; assert_in_epsilon(11.268542067145855, worksheet.outputs_energy_flows_v350, 0.002); end
  def test_outputs_energy_flows_w350; assert_in_epsilon(11.969894029083228, worksheet.outputs_energy_flows_w350, 0.002); end
  def test_outputs_energy_flows_x350; assert_in_epsilon(12.729423421635627, worksheet.outputs_energy_flows_x350, 0.002); end
  def test_outputs_energy_flows_y350; assert_in_epsilon(14.011596466835378, worksheet.outputs_energy_flows_y350, 0.002); end
  def test_outputs_energy_flows_z350; assert_in_epsilon(15.379339845587445, worksheet.outputs_energy_flows_z350, 0.002); end
  def test_outputs_energy_flows_aa350; assert_in_epsilon(16.800142049896458, worksheet.outputs_energy_flows_aa350, 0.002); end
  def test_outputs_energy_flows_ab350; assert_in_epsilon(18.391354929896615, worksheet.outputs_energy_flows_ab350, 0.002); end
  def test_outputs_energy_flows_ac350; assert_in_epsilon(19.995714355167294, worksheet.outputs_energy_flows_ac350, 0.002); end
  def test_outputs_energy_flows_ad350; assert_in_epsilon(21.78420771470296, worksheet.outputs_energy_flows_ad350, 0.002); end
  def test_outputs_energy_flows_c352; assert_equal("FF.03", worksheet.outputs_energy_flows_c352); end
  def test_outputs_energy_flows_d352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d352); end
  def test_outputs_energy_flows_e352; assert_equal("n/a", worksheet.outputs_energy_flows_e352); end
  def test_outputs_energy_flows_f352; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f352); end
  def test_outputs_energy_flows_i352; assert_equal("FF.03", worksheet.outputs_energy_flows_i352); end
  def test_outputs_energy_flows_j352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j352); end
  def test_outputs_energy_flows_l352; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l352); end
  def test_outputs_energy_flows_m352; assert_equal("Timber", worksheet.outputs_energy_flows_m352); end
  def test_outputs_energy_flows_v352; assert_in_epsilon(11.166371558744434, worksheet.outputs_energy_flows_v352, 0.002); end
  def test_outputs_energy_flows_w352; assert_in_epsilon(12.03999106792105, worksheet.outputs_energy_flows_w352, 0.002); end
  def test_outputs_energy_flows_x352; assert_in_epsilon(13.629660985634121, worksheet.outputs_energy_flows_x352, 0.002); end
  def test_outputs_energy_flows_y352; assert_in_epsilon(15.206453682788037, worksheet.outputs_energy_flows_y352, 0.002); end
  def test_outputs_energy_flows_z352; assert_in_epsilon(16.7712709298181, worksheet.outputs_energy_flows_z352, 0.002); end
  def test_outputs_energy_flows_aa352; assert_in_epsilon(18.314133344643157, worksheet.outputs_energy_flows_aa352, 0.002); end
  def test_outputs_energy_flows_ab352; assert_in_epsilon(19.82008550022558, worksheet.outputs_energy_flows_ab352, 0.002); end
  def test_outputs_energy_flows_ac352; assert_in_epsilon(21.27200344465373, worksheet.outputs_energy_flows_ac352, 0.002); end
  def test_outputs_energy_flows_ad352; assert_in_epsilon(22.649894451261694, worksheet.outputs_energy_flows_ad352, 0.002); end
  def test_outputs_energy_flows_c354; assert_equal("FF.03", worksheet.outputs_energy_flows_c354); end
  def test_outputs_energy_flows_d354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d354); end
  def test_outputs_energy_flows_e354; assert_equal("n/a", worksheet.outputs_energy_flows_e354); end
  def test_outputs_energy_flows_f354; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f354); end
  def test_outputs_energy_flows_i354; assert_equal("FF.03", worksheet.outputs_energy_flows_i354); end
  def test_outputs_energy_flows_j354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j354); end
  def test_outputs_energy_flows_l354; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l354); end
  def test_outputs_energy_flows_m354; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m354); end
  def test_outputs_energy_flows_v354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v354||0), 0.002); end
  def test_outputs_energy_flows_w354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w354||0), 0.002); end
  def test_outputs_energy_flows_x354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x354||0), 0.002); end
  def test_outputs_energy_flows_y354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y354||0), 0.002); end
  def test_outputs_energy_flows_z354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z354||0), 0.002); end
  def test_outputs_energy_flows_aa354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa354||0), 0.002); end
  def test_outputs_energy_flows_ab354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab354||0), 0.002); end
  def test_outputs_energy_flows_ac354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac354||0), 0.002); end
  def test_outputs_energy_flows_ad354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad354||0), 0.002); end
  def test_outputs_energy_flows_c356; assert_equal("FF.03", worksheet.outputs_energy_flows_c356); end
  def test_outputs_energy_flows_d356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d356); end
  def test_outputs_energy_flows_e356; assert_equal("n/a", worksheet.outputs_energy_flows_e356); end
  def test_outputs_energy_flows_f356; assert_equal("International passenger", worksheet.outputs_energy_flows_f356); end
  def test_outputs_energy_flows_i356; assert_equal("FF.03", worksheet.outputs_energy_flows_i356); end
  def test_outputs_energy_flows_j356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j356); end
  def test_outputs_energy_flows_l356; assert_equal("International", worksheet.outputs_energy_flows_l356); end
  def test_outputs_energy_flows_v356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v356||0), 0.002); end
  def test_outputs_energy_flows_w356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w356||0), 0.002); end
  def test_outputs_energy_flows_x356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x356||0), 0.002); end
  def test_outputs_energy_flows_y356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y356||0), 0.002); end
  def test_outputs_energy_flows_z356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z356||0), 0.002); end
  def test_outputs_energy_flows_aa356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa356||0), 0.002); end
  def test_outputs_energy_flows_ab356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab356||0), 0.002); end
  def test_outputs_energy_flows_ac356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac356||0), 0.002); end
  def test_outputs_energy_flows_ad356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad356||0), 0.002); end
  def test_outputs_energy_flows_c358; assert_equal("FF.03", worksheet.outputs_energy_flows_c358); end
  def test_outputs_energy_flows_d358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d358); end
  def test_outputs_energy_flows_e358; assert_equal("n/a", worksheet.outputs_energy_flows_e358); end
  def test_outputs_energy_flows_f358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f358); end
  def test_outputs_energy_flows_i358; assert_equal("FF.03", worksheet.outputs_energy_flows_i358); end
  def test_outputs_energy_flows_j358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j358); end
  def test_outputs_energy_flows_l358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l358); end
  def test_outputs_energy_flows_v358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v358||0), 0.002); end
  def test_outputs_energy_flows_w358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w358||0), 0.002); end
  def test_outputs_energy_flows_x358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x358||0), 0.002); end
  def test_outputs_energy_flows_y358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y358||0), 0.002); end
  def test_outputs_energy_flows_z358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z358||0), 0.002); end
  def test_outputs_energy_flows_aa358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa358||0), 0.002); end
  def test_outputs_energy_flows_ab358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab358||0), 0.002); end
  def test_outputs_energy_flows_ac358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac358||0), 0.002); end
  def test_outputs_energy_flows_ad358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad358||0), 0.002); end
  def test_outputs_energy_flows_c360; assert_equal("FF.03", worksheet.outputs_energy_flows_c360); end
  def test_outputs_energy_flows_d360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d360); end
  def test_outputs_energy_flows_e360; assert_equal("n/a", worksheet.outputs_energy_flows_e360); end
  def test_outputs_energy_flows_f360; assert_equal("International freight", worksheet.outputs_energy_flows_f360); end
  def test_outputs_energy_flows_i360; assert_equal("FF.03", worksheet.outputs_energy_flows_i360); end
  def test_outputs_energy_flows_j360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j360); end
  def test_outputs_energy_flows_l360; assert_equal("International freight", worksheet.outputs_energy_flows_l360); end
  def test_outputs_energy_flows_v360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v360||0), 0.002); end
  def test_outputs_energy_flows_w360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w360||0), 0.002); end
  def test_outputs_energy_flows_x360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x360||0), 0.002); end
  def test_outputs_energy_flows_y360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y360||0), 0.002); end
  def test_outputs_energy_flows_z360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z360||0), 0.002); end
  def test_outputs_energy_flows_aa360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa360||0), 0.002); end
  def test_outputs_energy_flows_ab360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab360||0), 0.002); end
  def test_outputs_energy_flows_ac360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac360||0), 0.002); end
  def test_outputs_energy_flows_ad360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad360||0), 0.002); end
  def test_outputs_energy_flows_c362; assert_equal("FF.03", worksheet.outputs_energy_flows_c362); end
  def test_outputs_energy_flows_d362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d362); end
  def test_outputs_energy_flows_e362; assert_equal("n/a", worksheet.outputs_energy_flows_e362); end
  def test_outputs_energy_flows_f362; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f362); end
  def test_outputs_energy_flows_i362; assert_equal("FF.03", worksheet.outputs_energy_flows_i362); end
  def test_outputs_energy_flows_j362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j362); end
  def test_outputs_energy_flows_v362; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v362, 0.002); end
  def test_outputs_energy_flows_w362; assert_in_delta(0.20120189942099662, worksheet.outputs_energy_flows_w362, 0.002); end
  def test_outputs_energy_flows_x362; assert_in_delta(0.18175448426500426, worksheet.outputs_energy_flows_x362, 0.002); end
  def test_outputs_energy_flows_y362; assert_in_delta(0.16214166623884843, worksheet.outputs_energy_flows_y362, 0.002); end
  def test_outputs_energy_flows_z362; assert_in_delta(0.2508697591089085, worksheet.outputs_energy_flows_z362, 0.002); end
  def test_outputs_energy_flows_aa362; assert_in_delta(0.30941576217638644, worksheet.outputs_energy_flows_aa362, 0.002); end
  def test_outputs_energy_flows_ab362; assert_in_delta(0.37982512774838895, worksheet.outputs_energy_flows_ab362, 0.002); end
  def test_outputs_energy_flows_ac362; assert_in_delta(0.43567981207912293, worksheet.outputs_energy_flows_ac362, 0.002); end
  def test_outputs_energy_flows_ad362; assert_in_delta(0.5099385555686735, worksheet.outputs_energy_flows_ad362, 0.002); end
  def test_outputs_energy_flows_c364; assert_equal("FF.03", worksheet.outputs_energy_flows_c364); end
  def test_outputs_energy_flows_d364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d364); end
  def test_outputs_energy_flows_e364; assert_equal("G.01", worksheet.outputs_energy_flows_e364); end
  def test_outputs_energy_flows_f364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f364); end
  def test_outputs_energy_flows_g364; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g364); end
  def test_outputs_energy_flows_h364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h364); end
  def test_outputs_energy_flows_i364; assert_equal("FF.03", worksheet.outputs_energy_flows_i364); end
  def test_outputs_energy_flows_j364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j364); end
  def test_outputs_energy_flows_v364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v364||0), 0.002); end
  def test_outputs_energy_flows_w364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w364||0), 0.002); end
  def test_outputs_energy_flows_x364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x364||0), 0.002); end
  def test_outputs_energy_flows_y364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y364||0), 0.002); end
  def test_outputs_energy_flows_z364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z364||0), 0.002); end
  def test_outputs_energy_flows_aa364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa364||0), 0.002); end
  def test_outputs_energy_flows_ab364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab364||0), 0.002); end
  def test_outputs_energy_flows_ac364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac364||0), 0.002); end
  def test_outputs_energy_flows_ad364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad364||0), 0.002); end
  def test_outputs_energy_flows_c366; assert_equal("FF.03", worksheet.outputs_energy_flows_c366); end
  def test_outputs_energy_flows_d366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d366); end
  def test_outputs_energy_flows_e366; assert_equal("n/a", worksheet.outputs_energy_flows_e366); end
  def test_outputs_energy_flows_f366; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f366); end
  def test_outputs_energy_flows_g366; assert_equal("n/a", worksheet.outputs_energy_flows_g366); end
  def test_outputs_energy_flows_h366; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h366); end
  def test_outputs_energy_flows_i366; assert_equal("FF.03", worksheet.outputs_energy_flows_i366); end
  def test_outputs_energy_flows_j366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j366); end
  def test_outputs_energy_flows_v366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v366||0), 0.002); end
  def test_outputs_energy_flows_w366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w366||0), 0.002); end
  def test_outputs_energy_flows_x366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x366||0), 0.002); end
  def test_outputs_energy_flows_y366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y366||0), 0.002); end
  def test_outputs_energy_flows_z366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z366||0), 0.002); end
  def test_outputs_energy_flows_aa366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa366||0), 0.002); end
  def test_outputs_energy_flows_ab366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab366||0), 0.002); end
  def test_outputs_energy_flows_ac366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac366||0), 0.002); end
  def test_outputs_energy_flows_ad366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad366||0), 0.002); end
  def test_outputs_energy_flows_c368; assert_equal("n/a", worksheet.outputs_energy_flows_c368); end
  def test_outputs_energy_flows_d368; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_d368); end
  def test_outputs_energy_flows_e368; assert_equal("L.01", worksheet.outputs_energy_flows_e368); end
  def test_outputs_energy_flows_f368; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f368); end
  def test_outputs_energy_flows_v368; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v368, 0.002); end
  def test_outputs_energy_flows_w368; assert_in_delta(0.055412502767975096, worksheet.outputs_energy_flows_w368, 0.002); end
  def test_outputs_energy_flows_x368; assert_in_delta(0.06285334400360927, worksheet.outputs_energy_flows_x368, 0.002); end
  def test_outputs_energy_flows_y368; assert_in_delta(0.06680518165312266, worksheet.outputs_energy_flows_y368, 0.002); end
  def test_outputs_energy_flows_z368; assert_in_delta(0.1608683905118983, worksheet.outputs_energy_flows_z368, 0.002); end
  def test_outputs_energy_flows_aa368; assert_in_delta(0.27415132311790497, worksheet.outputs_energy_flows_aa368, 0.002); end
  def test_outputs_energy_flows_ab368; assert_in_delta(0.3815972429134439, worksheet.outputs_energy_flows_ab368, 0.002); end
  def test_outputs_energy_flows_ac368; assert_in_delta(0.5066952813925669, worksheet.outputs_energy_flows_ac368, 0.002); end
  def test_outputs_energy_flows_ad368; assert_in_delta(0.6047891787120028, worksheet.outputs_energy_flows_ad368, 0.002); end
  def test_outputs_energy_flows_c370; assert_equal("HY.01", worksheet.outputs_energy_flows_c370); end
  def test_outputs_energy_flows_d370; assert_equal("Global H2", worksheet.outputs_energy_flows_d370); end
  def test_outputs_energy_flows_e370; assert_equal("n/a", worksheet.outputs_energy_flows_e370); end
  def test_outputs_energy_flows_f370; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f370); end
  def test_outputs_energy_flows_i370; assert_equal("HY.01", worksheet.outputs_energy_flows_i370); end
  def test_outputs_energy_flows_j370; assert_equal("Global H2", worksheet.outputs_energy_flows_j370); end
  def test_outputs_energy_flows_l370; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l370); end
  def test_outputs_energy_flows_m370; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m370); end
  def test_outputs_energy_flows_v370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v370||0), 0.002); end
  def test_outputs_energy_flows_w370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w370||0), 0.002); end
  def test_outputs_energy_flows_x370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x370||0), 0.002); end
  def test_outputs_energy_flows_y370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y370||0), 0.002); end
  def test_outputs_energy_flows_z370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z370||0), 0.002); end
  def test_outputs_energy_flows_aa370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa370||0), 0.002); end
  def test_outputs_energy_flows_ab370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab370||0), 0.002); end
  def test_outputs_energy_flows_ac370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac370||0), 0.002); end
  def test_outputs_energy_flows_ad370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad370||0), 0.002); end
  def test_outputs_energy_flows_c372; assert_equal("HY.01", worksheet.outputs_energy_flows_c372); end
  def test_outputs_energy_flows_d372; assert_equal("Global H2", worksheet.outputs_energy_flows_d372); end
  def test_outputs_energy_flows_e372; assert_equal("n/a", worksheet.outputs_energy_flows_e372); end
  def test_outputs_energy_flows_f372; assert_equal("International passenger", worksheet.outputs_energy_flows_f372); end
  def test_outputs_energy_flows_i372; assert_equal("HY.01", worksheet.outputs_energy_flows_i372); end
  def test_outputs_energy_flows_j372; assert_equal("Global H2", worksheet.outputs_energy_flows_j372); end
  def test_outputs_energy_flows_l372; assert_equal("International", worksheet.outputs_energy_flows_l372); end
  def test_outputs_energy_flows_v372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v372||0), 0.002); end
  def test_outputs_energy_flows_w372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w372||0), 0.002); end
  def test_outputs_energy_flows_x372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x372||0), 0.002); end
  def test_outputs_energy_flows_y372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y372||0), 0.002); end
  def test_outputs_energy_flows_z372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z372||0), 0.002); end
  def test_outputs_energy_flows_aa372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa372||0), 0.002); end
  def test_outputs_energy_flows_ab372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab372||0), 0.002); end
  def test_outputs_energy_flows_ac372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac372||0), 0.002); end
  def test_outputs_energy_flows_ad372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad372||0), 0.002); end
  def test_outputs_energy_flows_c374; assert_equal("HY.01", worksheet.outputs_energy_flows_c374); end
  def test_outputs_energy_flows_d374; assert_equal("Global H2", worksheet.outputs_energy_flows_d374); end
  def test_outputs_energy_flows_e374; assert_equal("n/a", worksheet.outputs_energy_flows_e374); end
  def test_outputs_energy_flows_f374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f374); end
  def test_outputs_energy_flows_i374; assert_equal("HY.01", worksheet.outputs_energy_flows_i374); end
  def test_outputs_energy_flows_j374; assert_equal("Global H2", worksheet.outputs_energy_flows_j374); end
  def test_outputs_energy_flows_l374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l374); end
  def test_outputs_energy_flows_v374; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v374, 0.002); end
  def test_outputs_energy_flows_w374; assert_in_delta(0.11621788462418102, worksheet.outputs_energy_flows_w374, 0.002); end
  def test_outputs_energy_flows_x374; assert_in_delta(0.11625636654060015, worksheet.outputs_energy_flows_x374, 0.002); end
  def test_outputs_energy_flows_y374; assert_in_delta(0.1102571303288982, worksheet.outputs_energy_flows_y374, 0.002); end
  def test_outputs_energy_flows_z374; assert_in_delta(0.09349834993981122, worksheet.outputs_energy_flows_z374, 0.002); end
  def test_outputs_energy_flows_aa374; assert_in_delta(0.07296595177860178, worksheet.outputs_energy_flows_aa374, 0.002); end
  def test_outputs_energy_flows_ab374; assert_in_delta(0.05004841940750066, worksheet.outputs_energy_flows_ab374, 0.002); end
  def test_outputs_energy_flows_ac374; assert_in_delta(0.025633034671072835, worksheet.outputs_energy_flows_ac374, 0.002); end
  def test_outputs_energy_flows_ad374; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad374||0), 0.002); end
  def test_outputs_energy_flows_c376; assert_equal("HY.01", worksheet.outputs_energy_flows_c376); end
  def test_outputs_energy_flows_d376; assert_equal("Global H2", worksheet.outputs_energy_flows_d376); end
  def test_outputs_energy_flows_e376; assert_equal("n/a", worksheet.outputs_energy_flows_e376); end
  def test_outputs_energy_flows_f376; assert_equal("International freight", worksheet.outputs_energy_flows_f376); end
  def test_outputs_energy_flows_i376; assert_equal("HY.01", worksheet.outputs_energy_flows_i376); end
  def test_outputs_energy_flows_j376; assert_equal("Global H2", worksheet.outputs_energy_flows_j376); end
  def test_outputs_energy_flows_l376; assert_equal("International freight", worksheet.outputs_energy_flows_l376); end
  def test_outputs_energy_flows_v376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v376||0), 0.002); end
  def test_outputs_energy_flows_w376; assert_in_delta(0.04262572018186893, worksheet.outputs_energy_flows_w376, 0.002); end
  def test_outputs_energy_flows_x376; assert_in_delta(0.0413686430892225, worksheet.outputs_energy_flows_x376, 0.002); end
  def test_outputs_energy_flows_y376; assert_in_delta(0.03893297598477395, worksheet.outputs_energy_flows_y376, 0.002); end
  def test_outputs_energy_flows_z376; assert_in_delta(0.03432495178552779, worksheet.outputs_energy_flows_z376, 0.002); end
  def test_outputs_energy_flows_aa376; assert_in_delta(0.02635208752751066, worksheet.outputs_energy_flows_aa376, 0.002); end
  def test_outputs_energy_flows_ab376; assert_in_delta(0.017540271088700096, worksheet.outputs_energy_flows_ab376, 0.002); end
  def test_outputs_energy_flows_ac376; assert_in_delta(0.00873333964667821, worksheet.outputs_energy_flows_ac376, 0.002); end
  def test_outputs_energy_flows_ad376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad376||0), 0.002); end
  def test_outputs_energy_flows_c378; assert_equal("H.01", worksheet.outputs_energy_flows_c378); end
  def test_outputs_energy_flows_d378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d378); end
  def test_outputs_energy_flows_e378; assert_equal("n/a", worksheet.outputs_energy_flows_e378); end
  def test_outputs_energy_flows_f378; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f378); end
  def test_outputs_energy_flows_i378; assert_equal("H.01", worksheet.outputs_energy_flows_i378); end
  def test_outputs_energy_flows_j378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j378); end
  def test_outputs_energy_flows_k378; assert_equal("Global buildings", worksheet.outputs_energy_flows_k378); end
  def test_outputs_energy_flows_l378; assert_equal("Heat network", worksheet.outputs_energy_flows_l378); end
  def test_outputs_energy_flows_v378; assert_in_epsilon(3.1671872924936775, worksheet.outputs_energy_flows_v378, 0.002); end
  def test_outputs_energy_flows_w378; assert_in_epsilon(3.21964231910988, worksheet.outputs_energy_flows_w378, 0.002); end
  def test_outputs_energy_flows_x378; assert_in_epsilon(3.616776904023334, worksheet.outputs_energy_flows_x378, 0.002); end
  def test_outputs_energy_flows_y378; assert_in_epsilon(4.026882694803561, worksheet.outputs_energy_flows_y378, 0.002); end
  def test_outputs_energy_flows_z378; assert_in_epsilon(4.439407647138086, worksheet.outputs_energy_flows_z378, 0.002); end
  def test_outputs_energy_flows_aa378; assert_in_epsilon(4.83357068045164, worksheet.outputs_energy_flows_aa378, 0.002); end
  def test_outputs_energy_flows_ab378; assert_in_epsilon(5.224188394047497, worksheet.outputs_energy_flows_ab378, 0.002); end
  def test_outputs_energy_flows_ac378; assert_in_epsilon(5.589283821456885, worksheet.outputs_energy_flows_ac378, 0.002); end
  def test_outputs_energy_flows_ad378; assert_in_epsilon(5.949551161468747, worksheet.outputs_energy_flows_ad378, 0.002); end
  def test_outputs_energy_flows_c380; assert_equal("H.01", worksheet.outputs_energy_flows_c380); end
  def test_outputs_energy_flows_d380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d380); end
  def test_outputs_energy_flows_e380; assert_equal("n/a", worksheet.outputs_energy_flows_e380); end
  def test_outputs_energy_flows_f380; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f380); end
  def test_outputs_energy_flows_i380; assert_equal("H.01", worksheet.outputs_energy_flows_i380); end
  def test_outputs_energy_flows_j380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j380); end
  def test_outputs_energy_flows_k380; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k380); end
  def test_outputs_energy_flows_l380; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l380); end
  def test_outputs_energy_flows_v380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v380||0), 0.002); end
  def test_outputs_energy_flows_w380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w380||0), 0.002); end
  def test_outputs_energy_flows_x380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x380||0), 0.002); end
  def test_outputs_energy_flows_y380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y380||0), 0.002); end
  def test_outputs_energy_flows_z380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z380||0), 0.002); end
  def test_outputs_energy_flows_aa380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa380||0), 0.002); end
  def test_outputs_energy_flows_ab380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab380||0), 0.002); end
  def test_outputs_energy_flows_ac380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac380||0), 0.002); end
  def test_outputs_energy_flows_ad380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad380||0), 0.002); end
  def test_outputs_energy_flows_c382; assert_equal("H.01", worksheet.outputs_energy_flows_c382); end
  def test_outputs_energy_flows_d382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d382); end
  def test_outputs_energy_flows_e382; assert_equal("n/a", worksheet.outputs_energy_flows_e382); end
  def test_outputs_energy_flows_f382; assert_equal("Non domestic", worksheet.outputs_energy_flows_f382); end
  def test_outputs_energy_flows_i382; assert_equal("H.01", worksheet.outputs_energy_flows_i382); end
  def test_outputs_energy_flows_j382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j382); end
  def test_outputs_energy_flows_k382; assert_equal("Non-residential", worksheet.outputs_energy_flows_k382); end
  def test_outputs_energy_flows_v382; assert_in_epsilon(2.4341188531836564, worksheet.outputs_energy_flows_v382, 0.002); end
  def test_outputs_energy_flows_w382; assert_in_epsilon(2.048549319762864, worksheet.outputs_energy_flows_w382, 0.002); end
  def test_outputs_energy_flows_x382; assert_in_epsilon(2.0332021108830283, worksheet.outputs_energy_flows_x382, 0.002); end
  def test_outputs_energy_flows_y382; assert_in_epsilon(1.9614856902918285, worksheet.outputs_energy_flows_y382, 0.002); end
  def test_outputs_energy_flows_z382; assert_in_epsilon(1.82911693478585, worksheet.outputs_energy_flows_z382, 0.002); end
  def test_outputs_energy_flows_aa382; assert_in_epsilon(1.6326599847266192, worksheet.outputs_energy_flows_aa382, 0.002); end
  def test_outputs_energy_flows_ab382; assert_in_epsilon(1.3685149193619657, worksheet.outputs_energy_flows_ab382, 0.002); end
  def test_outputs_energy_flows_ac382; assert_in_epsilon(1.0333391207782805, worksheet.outputs_energy_flows_ac382, 0.002); end
  def test_outputs_energy_flows_ad382; assert_in_delta(0.6246661308351299, worksheet.outputs_energy_flows_ad382, 0.002); end
  def test_outputs_energy_flows_c384; assert_equal("H.01", worksheet.outputs_energy_flows_c384); end
  def test_outputs_energy_flows_d384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d384); end
  def test_outputs_energy_flows_e384; assert_equal("n/a", worksheet.outputs_energy_flows_e384); end
  def test_outputs_energy_flows_f384; assert_equal("Steel", worksheet.outputs_energy_flows_f384); end
  def test_outputs_energy_flows_i384; assert_equal("H.01", worksheet.outputs_energy_flows_i384); end
  def test_outputs_energy_flows_j384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j384); end
  def test_outputs_energy_flows_v384; assert_in_delta(0.803408652648, worksheet.outputs_energy_flows_v384, 0.002); end
  def test_outputs_energy_flows_w384; assert_in_delta(0.8206980573775758, worksheet.outputs_energy_flows_w384, 0.002); end
  def test_outputs_energy_flows_x384; assert_in_delta(0.8866432989285928, worksheet.outputs_energy_flows_x384, 0.002); end
  def test_outputs_energy_flows_y384; assert_in_delta(0.9448702207968549, worksheet.outputs_energy_flows_y384, 0.002); end
  def test_outputs_energy_flows_z384; assert_in_delta(0.9995983064351288, worksheet.outputs_energy_flows_z384, 0.002); end
  def test_outputs_energy_flows_aa384; assert_in_epsilon(1.0488608914106252, worksheet.outputs_energy_flows_aa384, 0.002); end
  def test_outputs_energy_flows_ab384; assert_in_epsilon(1.1008868233896196, worksheet.outputs_energy_flows_ab384, 0.002); end
  def test_outputs_energy_flows_ac384; assert_in_epsilon(1.1543784274968016, worksheet.outputs_energy_flows_ac384, 0.002); end
  def test_outputs_energy_flows_ad384; assert_in_epsilon(1.208924637014383, worksheet.outputs_energy_flows_ad384, 0.002); end
  def test_outputs_energy_flows_c386; assert_equal("H.01", worksheet.outputs_energy_flows_c386); end
  def test_outputs_energy_flows_d386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d386); end
  def test_outputs_energy_flows_e386; assert_equal("n/a", worksheet.outputs_energy_flows_e386); end
  def test_outputs_energy_flows_f386; assert_equal("Aluminium", worksheet.outputs_energy_flows_f386); end
  def test_outputs_energy_flows_i386; assert_equal("H.01", worksheet.outputs_energy_flows_i386); end
  def test_outputs_energy_flows_j386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j386); end
  def test_outputs_energy_flows_v386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v386||0), 0.002); end
  def test_outputs_energy_flows_w386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w386||0), 0.002); end
  def test_outputs_energy_flows_x386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x386||0), 0.002); end
  def test_outputs_energy_flows_y386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y386||0), 0.002); end
  def test_outputs_energy_flows_z386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z386||0), 0.002); end
  def test_outputs_energy_flows_aa386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa386||0), 0.002); end
  def test_outputs_energy_flows_ab386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab386||0), 0.002); end
  def test_outputs_energy_flows_ac386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac386||0), 0.002); end
  def test_outputs_energy_flows_ad386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad386||0), 0.002); end
  def test_outputs_energy_flows_c388; assert_equal("H.01", worksheet.outputs_energy_flows_c388); end
  def test_outputs_energy_flows_d388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d388); end
  def test_outputs_energy_flows_e388; assert_equal("n/a", worksheet.outputs_energy_flows_e388); end
  def test_outputs_energy_flows_f388; assert_equal("Cement", worksheet.outputs_energy_flows_f388); end
  def test_outputs_energy_flows_i388; assert_equal("H.01", worksheet.outputs_energy_flows_i388); end
  def test_outputs_energy_flows_j388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j388); end
  def test_outputs_energy_flows_v388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v388||0), 0.002); end
  def test_outputs_energy_flows_w388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w388||0), 0.002); end
  def test_outputs_energy_flows_x388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x388||0), 0.002); end
  def test_outputs_energy_flows_y388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y388||0), 0.002); end
  def test_outputs_energy_flows_z388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z388||0), 0.002); end
  def test_outputs_energy_flows_aa388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa388||0), 0.002); end
  def test_outputs_energy_flows_ab388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab388||0), 0.002); end
  def test_outputs_energy_flows_ac388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac388||0), 0.002); end
  def test_outputs_energy_flows_ad388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad388||0), 0.002); end
  def test_outputs_energy_flows_c390; assert_equal("H.01", worksheet.outputs_energy_flows_c390); end
  def test_outputs_energy_flows_d390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d390); end
  def test_outputs_energy_flows_e390; assert_equal("n/a", worksheet.outputs_energy_flows_e390); end
  def test_outputs_energy_flows_f390; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f390); end
  def test_outputs_energy_flows_i390; assert_equal("H.01", worksheet.outputs_energy_flows_i390); end
  def test_outputs_energy_flows_j390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j390); end
  def test_outputs_energy_flows_v390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v390||0), 0.002); end
  def test_outputs_energy_flows_w390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w390||0), 0.002); end
  def test_outputs_energy_flows_x390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x390||0), 0.002); end
  def test_outputs_energy_flows_y390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y390||0), 0.002); end
  def test_outputs_energy_flows_z390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z390||0), 0.002); end
  def test_outputs_energy_flows_aa390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa390||0), 0.002); end
  def test_outputs_energy_flows_ab390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab390||0), 0.002); end
  def test_outputs_energy_flows_ac390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac390||0), 0.002); end
  def test_outputs_energy_flows_ad390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad390||0), 0.002); end
  def test_outputs_energy_flows_c392; assert_equal("H.01", worksheet.outputs_energy_flows_c392); end
  def test_outputs_energy_flows_d392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d392); end
  def test_outputs_energy_flows_e392; assert_equal("n/a", worksheet.outputs_energy_flows_e392); end
  def test_outputs_energy_flows_f392; assert_equal("Chemicals", worksheet.outputs_energy_flows_f392); end
  def test_outputs_energy_flows_i392; assert_equal("H.01", worksheet.outputs_energy_flows_i392); end
  def test_outputs_energy_flows_j392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j392); end
  def test_outputs_energy_flows_v392; assert_in_epsilon(1.970138431785092, worksheet.outputs_energy_flows_v392, 0.002); end
  def test_outputs_energy_flows_w392; assert_in_epsilon(2.0826334024401185, worksheet.outputs_energy_flows_w392, 0.002); end
  def test_outputs_energy_flows_x392; assert_in_epsilon(2.2320023327336336, worksheet.outputs_energy_flows_x392, 0.002); end
  def test_outputs_energy_flows_y392; assert_in_epsilon(2.535618707082319, worksheet.outputs_energy_flows_y392, 0.002); end
  def test_outputs_energy_flows_z392; assert_in_epsilon(2.8617686046624926, worksheet.outputs_energy_flows_z392, 0.002); end
  def test_outputs_energy_flows_aa392; assert_in_epsilon(3.1986711621315065, worksheet.outputs_energy_flows_aa392, 0.002); end
  def test_outputs_energy_flows_ab392; assert_in_epsilon(3.5899203795539454, worksheet.outputs_energy_flows_ab392, 0.002); end
  def test_outputs_energy_flows_ac392; assert_in_epsilon(4.001020117606226, worksheet.outputs_energy_flows_ac392, 0.002); end
  def test_outputs_energy_flows_ad392; assert_in_epsilon(4.4777618748500405, worksheet.outputs_energy_flows_ad392, 0.002); end
  def test_outputs_energy_flows_c400; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c400); end
  def test_outputs_energy_flows_d400; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d400); end
  def test_outputs_energy_flows_e400; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e400); end
  def test_outputs_energy_flows_f400; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f400); end
  def test_outputs_energy_flows_g400; assert_equal("Technology code", worksheet.outputs_energy_flows_g400); end
  def test_outputs_energy_flows_h400; assert_equal("Technology description", worksheet.outputs_energy_flows_h400); end
  def test_outputs_energy_flows_i400; assert_equal("Energy code", worksheet.outputs_energy_flows_i400); end
  def test_outputs_energy_flows_j400; assert_equal("Description", worksheet.outputs_energy_flows_j400); end
  def test_outputs_energy_flows_k400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k400); end
  def test_outputs_energy_flows_l400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l400); end
  def test_outputs_energy_flows_m400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m400); end
  def test_outputs_energy_flows_v400; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v400, 0.002); end
  def test_outputs_energy_flows_w400; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w400, 0.002); end
  def test_outputs_energy_flows_x400; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x400, 0.002); end
  def test_outputs_energy_flows_y400; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y400, 0.002); end
  def test_outputs_energy_flows_z400; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z400, 0.002); end
  def test_outputs_energy_flows_aa400; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa400, 0.002); end
  def test_outputs_energy_flows_ab400; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab400, 0.002); end
  def test_outputs_energy_flows_ac400; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac400, 0.002); end
  def test_outputs_energy_flows_ad400; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad400, 0.002); end
  def test_outputs_energy_flows_d402; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d402); end
  def test_outputs_energy_flows_f402; assert_equal("Solid", worksheet.outputs_energy_flows_f402); end
  def test_outputs_energy_flows_i402; assert_equal("G.Q.01", worksheet.outputs_energy_flows_i402); end
  def test_outputs_energy_flows_j402; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_j402); end
  def test_outputs_energy_flows_v402; assert_in_epsilon(141.91912522146862, worksheet.outputs_energy_flows_v402, 0.002); end
  def test_outputs_energy_flows_w402; assert_in_epsilon(141.85308166096047, worksheet.outputs_energy_flows_w402, 0.002); end
  def test_outputs_energy_flows_x402; assert_in_epsilon(152.4587433466533, worksheet.outputs_energy_flows_x402, 0.002); end
  def test_outputs_energy_flows_y402; assert_in_epsilon(171.031787746243, worksheet.outputs_energy_flows_y402, 0.002); end
  def test_outputs_energy_flows_z402; assert_in_epsilon(185.64838625102186, worksheet.outputs_energy_flows_z402, 0.002); end
  def test_outputs_energy_flows_aa402; assert_in_epsilon(197.01495003837368, worksheet.outputs_energy_flows_aa402, 0.002); end
  def test_outputs_energy_flows_ab402; assert_in_epsilon(204.10005737617843, worksheet.outputs_energy_flows_ab402, 0.002); end
  def test_outputs_energy_flows_ac402; assert_in_epsilon(200.8511904314127, worksheet.outputs_energy_flows_ac402, 0.002); end
  def test_outputs_energy_flows_ad402; assert_in_epsilon(198.0415112590739, worksheet.outputs_energy_flows_ad402, 0.002); end
  def test_outputs_energy_flows_d404; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d404); end
  def test_outputs_energy_flows_f404; assert_equal("Solid", worksheet.outputs_energy_flows_f404); end
  def test_outputs_energy_flows_i404; assert_equal("G.C.01", worksheet.outputs_energy_flows_i404); end
  def test_outputs_energy_flows_j404; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j404); end
  def test_outputs_energy_flows_k404; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k404); end
  def test_outputs_energy_flows_l404; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l404); end
  def test_outputs_energy_flows_n404; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n404); end
  def test_outputs_energy_flows_o404; assert_equal("Forest", worksheet.outputs_energy_flows_o404); end
  def test_outputs_energy_flows_p404; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p404); end
  def test_outputs_energy_flows_q404; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q404); end
  def test_outputs_energy_flows_r404; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r404); end
  def test_outputs_energy_flows_s404; assert_equal("industrial.municipal.non.renewable.waste", worksheet.outputs_energy_flows_s404); end
  def test_outputs_energy_flows_t404; assert_equal("Global Non renewable waste", worksheet.outputs_energy_flows_t404); end
  def test_outputs_energy_flows_v404; assert_in_epsilon(47.99991800000001, worksheet.outputs_energy_flows_v404, 0.002); end
  def test_outputs_energy_flows_w404; assert_in_epsilon(45.49398081991871, worksheet.outputs_energy_flows_w404, 0.002); end
  def test_outputs_energy_flows_x404; assert_in_epsilon(43.890677951594846, worksheet.outputs_energy_flows_x404, 0.002); end
  def test_outputs_energy_flows_y404; assert_in_epsilon(42.123268886540714, worksheet.outputs_energy_flows_y404, 0.002); end
  def test_outputs_energy_flows_z404; assert_in_epsilon(40.25260594669053, worksheet.outputs_energy_flows_z404, 0.002); end
  def test_outputs_energy_flows_aa404; assert_in_epsilon(38.58225733242197, worksheet.outputs_energy_flows_aa404, 0.002); end
  def test_outputs_energy_flows_ab404; assert_in_epsilon(36.93158312853704, worksheet.outputs_energy_flows_ab404, 0.002); end
  def test_outputs_energy_flows_ac404; assert_in_epsilon(35.857687247253814, worksheet.outputs_energy_flows_ac404, 0.002); end
  def test_outputs_energy_flows_ad404; assert_in_epsilon(36.28050116728305, worksheet.outputs_energy_flows_ad404, 0.002); end
  def test_outputs_energy_flows_d406; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d406); end
  def test_outputs_energy_flows_f406; assert_equal("Liquid", worksheet.outputs_energy_flows_f406); end
  def test_outputs_energy_flows_i406; assert_equal("G.Q.02", worksheet.outputs_energy_flows_i406); end
  def test_outputs_energy_flows_j406; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_j406); end
  def test_outputs_energy_flows_v406; assert_in_epsilon(152.87007489507437, worksheet.outputs_energy_flows_v406, 0.002); end
  def test_outputs_energy_flows_w406; assert_in_epsilon(160.16083753136314, worksheet.outputs_energy_flows_w406, 0.002); end
  def test_outputs_energy_flows_x406; assert_in_epsilon(184.5179059098779, worksheet.outputs_energy_flows_x406, 0.002); end
  def test_outputs_energy_flows_y406; assert_in_epsilon(200.05866535956633, worksheet.outputs_energy_flows_y406, 0.002); end
  def test_outputs_energy_flows_z406; assert_in_epsilon(219.0995348046125, worksheet.outputs_energy_flows_z406, 0.002); end
  def test_outputs_energy_flows_aa406; assert_in_epsilon(233.51081866087816, worksheet.outputs_energy_flows_aa406, 0.002); end
  def test_outputs_energy_flows_ab406; assert_in_epsilon(247.51242700880445, worksheet.outputs_energy_flows_ab406, 0.002); end
  def test_outputs_energy_flows_ac406; assert_in_epsilon(263.3818202135745, worksheet.outputs_energy_flows_ac406, 0.002); end
  def test_outputs_energy_flows_ad406; assert_in_epsilon(271.06210124653836, worksheet.outputs_energy_flows_ad406, 0.002); end
  def test_outputs_energy_flows_d408; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d408); end
  def test_outputs_energy_flows_f408; assert_equal("Liquid", worksheet.outputs_energy_flows_f408); end
  def test_outputs_energy_flows_i408; assert_equal("G.C.02", worksheet.outputs_energy_flows_i408); end
  def test_outputs_energy_flows_j408; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j408); end
  def test_outputs_energy_flows_n408; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n408); end
  def test_outputs_energy_flows_o408; assert_equal("Forest", worksheet.outputs_energy_flows_o408); end
  def test_outputs_energy_flows_p408; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p408); end
  def test_outputs_energy_flows_q408; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q408); end
  def test_outputs_energy_flows_r408; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r408); end
  def test_outputs_energy_flows_v408; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v408, 0.002); end
  def test_outputs_energy_flows_w408; assert_in_epsilon(4.310361671639778, worksheet.outputs_energy_flows_w408, 0.002); end
  def test_outputs_energy_flows_x408; assert_in_epsilon(5.404846698151712, worksheet.outputs_energy_flows_x408, 0.002); end
  def test_outputs_energy_flows_y408; assert_in_epsilon(6.64615821174558, worksheet.outputs_energy_flows_y408, 0.002); end
  def test_outputs_energy_flows_z408; assert_in_epsilon(8.04109983924148, worksheet.outputs_energy_flows_z408, 0.002); end
  def test_outputs_energy_flows_aa408; assert_in_epsilon(9.596593875369164, worksheet.outputs_energy_flows_aa408, 0.002); end
  def test_outputs_energy_flows_ab408; assert_in_epsilon(11.319683881335393, worksheet.outputs_energy_flows_ab408, 0.002); end
  def test_outputs_energy_flows_ac408; assert_in_epsilon(13.217537351975222, worksheet.outputs_energy_flows_ac408, 0.002); end
  def test_outputs_energy_flows_ad408; assert_in_epsilon(21.12614386015295, worksheet.outputs_energy_flows_ad408, 0.002); end
  def test_outputs_energy_flows_d410; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d410); end
  def test_outputs_energy_flows_f410; assert_equal("Gas", worksheet.outputs_energy_flows_f410); end
  def test_outputs_energy_flows_i410; assert_equal("G.Q.03", worksheet.outputs_energy_flows_i410); end
  def test_outputs_energy_flows_j410; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_j410); end
  def test_outputs_energy_flows_v410; assert_in_epsilon(89.90439561286566, worksheet.outputs_energy_flows_v410, 0.002); end
  def test_outputs_energy_flows_w410; assert_in_epsilon(91.21608319671552, worksheet.outputs_energy_flows_w410, 0.002); end
  def test_outputs_energy_flows_x410; assert_in_epsilon(100.87535662691576, worksheet.outputs_energy_flows_x410, 0.002); end
  def test_outputs_energy_flows_y410; assert_in_epsilon(111.04370721560258, worksheet.outputs_energy_flows_y410, 0.002); end
  def test_outputs_energy_flows_z410; assert_in_epsilon(122.34717446996677, worksheet.outputs_energy_flows_z410, 0.002); end
  def test_outputs_energy_flows_aa410; assert_in_epsilon(134.50025623129105, worksheet.outputs_energy_flows_aa410, 0.002); end
  def test_outputs_energy_flows_ab410; assert_in_epsilon(149.1451005407788, worksheet.outputs_energy_flows_ab410, 0.002); end
  def test_outputs_energy_flows_ac410; assert_in_epsilon(165.10967500818288, worksheet.outputs_energy_flows_ac410, 0.002); end
  def test_outputs_energy_flows_ad410; assert_in_epsilon(182.309985355605, worksheet.outputs_energy_flows_ad410, 0.002); end
  def test_outputs_energy_flows_d412; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d412); end
  def test_outputs_energy_flows_f412; assert_equal("Gas", worksheet.outputs_energy_flows_f412); end
  def test_outputs_energy_flows_i412; assert_equal("G.C.03", worksheet.outputs_energy_flows_i412); end
  def test_outputs_energy_flows_j412; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j412); end
  def test_outputs_energy_flows_n412; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n412); end
  def test_outputs_energy_flows_o412; assert_equal("Forest", worksheet.outputs_energy_flows_o412); end
  def test_outputs_energy_flows_p412; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p412); end
  def test_outputs_energy_flows_q412; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q412); end
  def test_outputs_energy_flows_r412; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r412); end
  def test_outputs_energy_flows_v412; assert_in_epsilon(3.0046012974969964, worksheet.outputs_energy_flows_v412, 0.002); end
  def test_outputs_energy_flows_w412; assert_in_epsilon(3.2283094626431263, worksheet.outputs_energy_flows_w412, 0.002); end
  def test_outputs_energy_flows_x412; assert_in_epsilon(3.495701397472817, worksheet.outputs_energy_flows_x412, 0.002); end
  def test_outputs_energy_flows_y412; assert_in_epsilon(3.76513336824029, worksheet.outputs_energy_flows_y412, 0.002); end
  def test_outputs_energy_flows_z412; assert_in_epsilon(4.050638300250824, worksheet.outputs_energy_flows_z412, 0.002); end
  def test_outputs_energy_flows_aa412; assert_in_epsilon(4.3590189211953705, worksheet.outputs_energy_flows_aa412, 0.002); end
  def test_outputs_energy_flows_ab412; assert_in_epsilon(4.666285098107223, worksheet.outputs_energy_flows_ab412, 0.002); end
  def test_outputs_energy_flows_ac412; assert_in_epsilon(4.94182932164431, worksheet.outputs_energy_flows_ac412, 0.002); end
  def test_outputs_energy_flows_ad412; assert_in_epsilon(5.194422150832349, worksheet.outputs_energy_flows_ad412, 0.002); end
  def test_outputs_energy_flows_d414; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d414); end
  def test_outputs_energy_flows_f414; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f414); end
  def test_outputs_energy_flows_i414; assert_equal("G.L.01", worksheet.outputs_energy_flows_i414); end
  def test_outputs_energy_flows_j414; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j414); end
  def test_outputs_energy_flows_n414; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n414); end
  def test_outputs_energy_flows_o414; assert_equal("Forest", worksheet.outputs_energy_flows_o414); end
  def test_outputs_energy_flows_p414; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p414); end
  def test_outputs_energy_flows_q414; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q414); end
  def test_outputs_energy_flows_r414; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r414); end
  def test_outputs_energy_flows_v414; assert_in_epsilon(3.992862237113767, worksheet.outputs_energy_flows_v414, 0.002); end
  def test_outputs_energy_flows_w414; assert_in_epsilon(4.012793138580779, worksheet.outputs_energy_flows_w414, 0.002); end
  def test_outputs_energy_flows_x414; assert_in_epsilon(4.204106074479915, worksheet.outputs_energy_flows_x414, 0.002); end
  def test_outputs_energy_flows_y414; assert_in_epsilon(4.3591940358519246, worksheet.outputs_energy_flows_y414, 0.002); end
  def test_outputs_energy_flows_z414; assert_in_epsilon(4.484712055934293, worksheet.outputs_energy_flows_z414, 0.002); end
  def test_outputs_energy_flows_aa414; assert_in_epsilon(4.583224312700315, worksheet.outputs_energy_flows_aa414, 0.002); end
  def test_outputs_energy_flows_ab414; assert_in_epsilon(4.6421409754577345, worksheet.outputs_energy_flows_ab414, 0.002); end
  def test_outputs_energy_flows_ac414; assert_in_epsilon(4.646595104461887, worksheet.outputs_energy_flows_ac414, 0.002); end
  def test_outputs_energy_flows_ad414; assert_in_epsilon(5.431454818084989, worksheet.outputs_energy_flows_ad414, 0.002); end
  def test_outputs_energy_flows_d416; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d416); end
  def test_outputs_energy_flows_f416; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f416); end
  def test_outputs_energy_flows_g416; assert_equal("arable.bio", worksheet.outputs_energy_flows_g416); end
  def test_outputs_energy_flows_h416; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h416); end
  def test_outputs_energy_flows_i416; assert_equal("O.01", worksheet.outputs_energy_flows_i416); end
  def test_outputs_energy_flows_j416; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j416); end
  def test_outputs_energy_flows_v416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v416||0), 0.002); end
  def test_outputs_energy_flows_w416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w416||0), 0.002); end
  def test_outputs_energy_flows_x416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x416||0), 0.002); end
  def test_outputs_energy_flows_y416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y416||0), 0.002); end
  def test_outputs_energy_flows_z416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z416||0), 0.002); end
  def test_outputs_energy_flows_aa416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa416||0), 0.002); end
  def test_outputs_energy_flows_ab416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab416||0), 0.002); end
  def test_outputs_energy_flows_ac416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac416||0), 0.002); end
  def test_outputs_energy_flows_ad416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad416||0), 0.002); end
  def test_outputs_energy_flows_d418; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d418); end
  def test_outputs_energy_flows_f418; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f418); end
  def test_outputs_energy_flows_i418; assert_equal("G.L.02", worksheet.outputs_energy_flows_i418); end
  def test_outputs_energy_flows_j418; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j418); end
  def test_outputs_energy_flows_o418; assert_equal("Coal.extract", worksheet.outputs_energy_flows_o418); end
  def test_outputs_energy_flows_p418; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_p418); end
  def test_outputs_energy_flows_q418; assert_equal("Coal.wash", worksheet.outputs_energy_flows_q418); end
  def test_outputs_energy_flows_r418; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_r418); end
  def test_outputs_energy_flows_s418; assert_equal("coal.network", worksheet.outputs_energy_flows_s418); end
  def test_outputs_energy_flows_t418; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_t418); end
  def test_outputs_energy_flows_v418; assert_in_epsilon(33.9839155875141, worksheet.outputs_energy_flows_v418, 0.002); end
  def test_outputs_energy_flows_w418; assert_in_epsilon(33.928973430439086, worksheet.outputs_energy_flows_w418, 0.002); end
  def test_outputs_energy_flows_x418; assert_in_epsilon(40.07604967198524, worksheet.outputs_energy_flows_x418, 0.002); end
  def test_outputs_energy_flows_y418; assert_in_epsilon(46.79837366807312, worksheet.outputs_energy_flows_y418, 0.002); end
  def test_outputs_energy_flows_z418; assert_in_epsilon(50.58295598056426, worksheet.outputs_energy_flows_z418, 0.002); end
  def test_outputs_energy_flows_aa418; assert_in_epsilon(55.87711989092548, worksheet.outputs_energy_flows_aa418, 0.002); end
  def test_outputs_energy_flows_ab418; assert_in_epsilon(60.79865157207065, worksheet.outputs_energy_flows_ab418, 0.002); end
  def test_outputs_energy_flows_ac418; assert_in_epsilon(62.1712087219562, worksheet.outputs_energy_flows_ac418, 0.002); end
  def test_outputs_energy_flows_ad418; assert_in_epsilon(63.035381845313616, worksheet.outputs_energy_flows_ad418, 0.002); end
  def test_outputs_energy_flows_d420; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d420); end
  def test_outputs_energy_flows_f420; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f420); end
  def test_outputs_energy_flows_i420; assert_equal("G.L.02", worksheet.outputs_energy_flows_i420); end
  def test_outputs_energy_flows_j420; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j420); end
  def test_outputs_energy_flows_o420; assert_equal("Oil.extract", worksheet.outputs_energy_flows_o420); end
  def test_outputs_energy_flows_p420; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_p420); end
  def test_outputs_energy_flows_q420; assert_equal("Oil.refine", worksheet.outputs_energy_flows_q420); end
  def test_outputs_energy_flows_r420; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_r420); end
  def test_outputs_energy_flows_s420; assert_equal("oil.network", worksheet.outputs_energy_flows_s420); end
  def test_outputs_energy_flows_t420; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_t420); end
  def test_outputs_energy_flows_v420; assert_in_epsilon(24.78086973402531, worksheet.outputs_energy_flows_v420, 0.002); end
  def test_outputs_energy_flows_w420; assert_in_epsilon(25.351738477224945, worksheet.outputs_energy_flows_w420, 0.002); end
  def test_outputs_energy_flows_x420; assert_in_epsilon(29.18932737929507, worksheet.outputs_energy_flows_x420, 0.002); end
  def test_outputs_energy_flows_y420; assert_in_epsilon(31.629278439843088, worksheet.outputs_energy_flows_y420, 0.002); end
  def test_outputs_energy_flows_z420; assert_in_epsilon(34.62034239406025, worksheet.outputs_energy_flows_z420, 0.002); end
  def test_outputs_energy_flows_aa420; assert_in_epsilon(30.593610464425513, worksheet.outputs_energy_flows_aa420, 0.002); end
  def test_outputs_energy_flows_ab420; assert_in_epsilon(32.40868035405642, worksheet.outputs_energy_flows_ab420, 0.002); end
  def test_outputs_energy_flows_ac420; assert_in_epsilon(34.46693340152877, worksheet.outputs_energy_flows_ac420, 0.002); end
  def test_outputs_energy_flows_ad420; assert_in_epsilon(35.4527168283135, worksheet.outputs_energy_flows_ad420, 0.002); end
  def test_outputs_energy_flows_d422; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d422); end
  def test_outputs_energy_flows_f422; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f422); end
  def test_outputs_energy_flows_i422; assert_equal("G.L.02", worksheet.outputs_energy_flows_i422); end
  def test_outputs_energy_flows_j422; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j422); end
  def test_outputs_energy_flows_o422; assert_equal("Naturalgas.extract", worksheet.outputs_energy_flows_o422); end
  def test_outputs_energy_flows_p422; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_p422); end
  def test_outputs_energy_flows_q422; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_q422); end
  def test_outputs_energy_flows_r422; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_r422); end
  def test_outputs_energy_flows_s422; assert_equal("gas.nework", worksheet.outputs_energy_flows_s422); end
  def test_outputs_energy_flows_t422; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_t422); end
  def test_outputs_energy_flows_v422; assert_in_epsilon(30.017536000358174, worksheet.outputs_energy_flows_v422, 0.002); end
  def test_outputs_energy_flows_w422; assert_in_epsilon(30.46295927958339, worksheet.outputs_energy_flows_w422, 0.002); end
  def test_outputs_energy_flows_x422; assert_in_epsilon(33.69925707149731, worksheet.outputs_energy_flows_x422, 0.002); end
  def test_outputs_energy_flows_y422; assert_in_epsilon(36.72399714087473, worksheet.outputs_energy_flows_y422, 0.002); end
  def test_outputs_energy_flows_z422; assert_in_epsilon(37.98299304537562, worksheet.outputs_energy_flows_z422, 0.002); end
  def test_outputs_energy_flows_aa422; assert_in_epsilon(39.98960211159282, worksheet.outputs_energy_flows_aa422, 0.002); end
  def test_outputs_energy_flows_ab422; assert_in_epsilon(43.38714869806272, worksheet.outputs_energy_flows_ab422, 0.002); end
  def test_outputs_energy_flows_ac422; assert_in_epsilon(48.04886599813288, worksheet.outputs_energy_flows_ac422, 0.002); end
  def test_outputs_energy_flows_ad422; assert_in_epsilon(53.07394523668864, worksheet.outputs_energy_flows_ad422, 0.002); end
  def test_outputs_energy_flows_d424; assert_equal("Solid", worksheet.outputs_energy_flows_d424); end
  def test_outputs_energy_flows_f424; assert_equal("Power plants", worksheet.outputs_energy_flows_f424); end
  def test_outputs_energy_flows_i424; assert_equal("G.C.01", worksheet.outputs_energy_flows_i424); end
  def test_outputs_energy_flows_j424; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j424); end
  def test_outputs_energy_flows_n424; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n424); end
  def test_outputs_energy_flows_v424; assert_in_epsilon(99.97450275052698, worksheet.outputs_energy_flows_v424, 0.002); end
  def test_outputs_energy_flows_w424; assert_in_epsilon(97.08435000378675, worksheet.outputs_energy_flows_w424, 0.002); end
  def test_outputs_energy_flows_x424; assert_in_epsilon(102.11850527226846, worksheet.outputs_energy_flows_x424, 0.002); end
  def test_outputs_energy_flows_y424; assert_in_epsilon(115.86012300256212, worksheet.outputs_energy_flows_y424, 0.002); end
  def test_outputs_energy_flows_z424; assert_in_epsilon(125.83169073904297, worksheet.outputs_energy_flows_z424, 0.002); end
  def test_outputs_energy_flows_aa424; assert_in_epsilon(132.69447737550513, worksheet.outputs_energy_flows_aa424, 0.002); end
  def test_outputs_energy_flows_ab424; assert_in_epsilon(135.32779421391479, worksheet.outputs_energy_flows_ab424, 0.002); end
  def test_outputs_energy_flows_ac424; assert_in_epsilon(127.8791490780895, worksheet.outputs_energy_flows_ac424, 0.002); end
  def test_outputs_energy_flows_ad424; assert_in_epsilon(122.46828170675526, worksheet.outputs_energy_flows_ad424, 0.002); end
  def test_outputs_energy_flows_d426; assert_equal("Liquid", worksheet.outputs_energy_flows_d426); end
  def test_outputs_energy_flows_f426; assert_equal("Power plants", worksheet.outputs_energy_flows_f426); end
  def test_outputs_energy_flows_i426; assert_equal("G.C.02", worksheet.outputs_energy_flows_i426); end
  def test_outputs_energy_flows_j426; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j426); end
  def test_outputs_energy_flows_n426; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n426); end
  def test_outputs_energy_flows_v426; assert_in_epsilon(11.604214655514422, worksheet.outputs_energy_flows_v426, 0.002); end
  def test_outputs_energy_flows_w426; assert_in_epsilon(11.655165269978276, worksheet.outputs_energy_flows_w426, 0.002); end
  def test_outputs_energy_flows_x426; assert_in_epsilon(22.755887553479223, worksheet.outputs_energy_flows_x426, 0.002); end
  def test_outputs_energy_flows_y426; assert_in_epsilon(25.85570176779357, worksheet.outputs_energy_flows_y426, 0.002); end
  def test_outputs_energy_flows_z426; assert_in_epsilon(33.84340297254414, worksheet.outputs_energy_flows_z426, 0.002); end
  def test_outputs_energy_flows_aa426; assert_in_epsilon(39.501030775670685, worksheet.outputs_energy_flows_aa426, 0.002); end
  def test_outputs_energy_flows_ab426; assert_in_epsilon(45.70624054082497, worksheet.outputs_energy_flows_ab426, 0.002); end
  def test_outputs_energy_flows_ac426; assert_in_epsilon(54.20800305640467, worksheet.outputs_energy_flows_ac426, 0.002); end
  def test_outputs_energy_flows_ad426; assert_in_epsilon(60.25882014939446, worksheet.outputs_energy_flows_ad426, 0.002); end
  def test_outputs_energy_flows_d428; assert_equal("Gas", worksheet.outputs_energy_flows_d428); end
  def test_outputs_energy_flows_f428; assert_equal("Power plants", worksheet.outputs_energy_flows_f428); end
  def test_outputs_energy_flows_i428; assert_equal("G.C.03", worksheet.outputs_energy_flows_i428); end
  def test_outputs_energy_flows_j428; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j428); end
  def test_outputs_energy_flows_n428; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n428); end
  def test_outputs_energy_flows_v428; assert_in_epsilon(41.9353235799253, worksheet.outputs_energy_flows_v428, 0.002); end
  def test_outputs_energy_flows_w428; assert_in_epsilon(40.731991330516806, worksheet.outputs_energy_flows_w428, 0.002); end
  def test_outputs_energy_flows_x428; assert_in_epsilon(45.74115678762878, worksheet.outputs_energy_flows_x428, 0.002); end
  def test_outputs_energy_flows_y428; assert_in_epsilon(50.843027470300164, worksheet.outputs_energy_flows_y428, 0.002); end
  def test_outputs_energy_flows_z428; assert_in_epsilon(57.06294775544611, worksheet.outputs_energy_flows_z428, 0.002); end
  def test_outputs_energy_flows_aa428; assert_in_epsilon(64.42765328443873, worksheet.outputs_energy_flows_aa428, 0.002); end
  def test_outputs_energy_flows_ab428; assert_in_epsilon(74.29417441486953, worksheet.outputs_energy_flows_ab428, 0.002); end
  def test_outputs_energy_flows_ac428; assert_in_epsilon(85.75430074511515, worksheet.outputs_energy_flows_ac428, 0.002); end
  def test_outputs_energy_flows_ad428; assert_in_epsilon(98.42987094619825, worksheet.outputs_energy_flows_ad428, 0.002); end
  def test_outputs_energy_flows_d430; assert_equal("Nuclear", worksheet.outputs_energy_flows_d430); end
  def test_outputs_energy_flows_f430; assert_equal("Power plants", worksheet.outputs_energy_flows_f430); end
  def test_outputs_energy_flows_i430; assert_equal("G.N.01", worksheet.outputs_energy_flows_i430); end
  def test_outputs_energy_flows_j430; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_j430); end
  def test_outputs_energy_flows_n430; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n430); end
  def test_outputs_energy_flows_v430; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v430, 0.002); end
  def test_outputs_energy_flows_w430; assert_in_epsilon(32.24522588695181, worksheet.outputs_energy_flows_w430, 0.002); end
  def test_outputs_energy_flows_x430; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_flows_x430, 0.002); end
  def test_outputs_energy_flows_y430; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_flows_y430, 0.002); end
  def test_outputs_energy_flows_z430; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_flows_z430, 0.002); end
  def test_outputs_energy_flows_aa430; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_flows_aa430, 0.002); end
  def test_outputs_energy_flows_ab430; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_flows_ab430, 0.002); end
  def test_outputs_energy_flows_ac430; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_flows_ac430, 0.002); end
  def test_outputs_energy_flows_ad430; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_flows_ad430, 0.002); end
  def test_outputs_energy_flows_d432; assert_equal("Power plants", worksheet.outputs_energy_flows_d432); end
  def test_outputs_energy_flows_f432; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f432); end
  def test_outputs_energy_flows_i432; assert_equal("G.E.02", worksheet.outputs_energy_flows_i432); end
  def test_outputs_energy_flows_j432; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j432); end
  def test_outputs_energy_flows_p432; assert_equal("Unabated power", worksheet.outputs_energy_flows_p432); end
  def test_outputs_energy_flows_r432; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r432); end
  def test_outputs_energy_flows_t432; assert_equal("Nuclear", worksheet.outputs_energy_flows_t432); end
  def test_outputs_energy_flows_v432; assert_in_epsilon(62.51424088771948, worksheet.outputs_energy_flows_v432, 0.002); end
  def test_outputs_energy_flows_w432; assert_in_epsilon(63.86565001250691, worksheet.outputs_energy_flows_w432, 0.002); end
  def test_outputs_energy_flows_x432; assert_in_epsilon(72.750295286274, worksheet.outputs_energy_flows_x432, 0.002); end
  def test_outputs_energy_flows_y432; assert_in_epsilon(82.3735644631123, worksheet.outputs_energy_flows_y432, 0.002); end
  def test_outputs_energy_flows_z432; assert_in_epsilon(92.40482489934024, worksheet.outputs_energy_flows_z432, 0.002); end
  def test_outputs_energy_flows_aa432; assert_in_epsilon(102.80314139949643, worksheet.outputs_energy_flows_aa432, 0.002); end
  def test_outputs_energy_flows_ab432; assert_in_epsilon(112.09481264140683, worksheet.outputs_energy_flows_ab432, 0.002); end
  def test_outputs_energy_flows_ac432; assert_in_epsilon(119.01723502018905, worksheet.outputs_energy_flows_ac432, 0.002); end
  def test_outputs_energy_flows_ad432; assert_in_epsilon(126.45838510693167, worksheet.outputs_energy_flows_ad432, 0.002); end
  def test_outputs_energy_flows_d434; assert_equal("Power plants", worksheet.outputs_energy_flows_d434); end
  def test_outputs_energy_flows_f434; assert_equal("Heat network", worksheet.outputs_energy_flows_f434); end
  def test_outputs_energy_flows_i434; assert_equal("G.H.01", worksheet.outputs_energy_flows_i434); end
  def test_outputs_energy_flows_j434; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j434); end
  def test_outputs_energy_flows_p434; assert_equal("Unabated power", worksheet.outputs_energy_flows_p434); end
  def test_outputs_energy_flows_r434; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r434); end
  def test_outputs_energy_flows_t434; assert_equal("Nuclear", worksheet.outputs_energy_flows_t434); end
  def test_outputs_energy_flows_v434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v434||0), 0.002); end
  def test_outputs_energy_flows_w434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w434||0), 0.002); end
  def test_outputs_energy_flows_x434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x434||0), 0.002); end
  def test_outputs_energy_flows_y434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y434||0), 0.002); end
  def test_outputs_energy_flows_z434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z434||0), 0.002); end
  def test_outputs_energy_flows_aa434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa434||0), 0.002); end
  def test_outputs_energy_flows_ab434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab434||0), 0.002); end
  def test_outputs_energy_flows_ac434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac434||0), 0.002); end
  def test_outputs_energy_flows_ad434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad434||0), 0.002); end
  def test_outputs_energy_flows_d436; assert_equal("Solid", worksheet.outputs_energy_flows_d436); end
  def test_outputs_energy_flows_f436; assert_equal("Heat network", worksheet.outputs_energy_flows_f436); end
  def test_outputs_energy_flows_i436; assert_equal("G.C.01", worksheet.outputs_energy_flows_i436); end
  def test_outputs_energy_flows_j436; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j436); end
  def test_outputs_energy_flows_n436; assert_equal("Heat network", worksheet.outputs_energy_flows_n436); end
  def test_outputs_energy_flows_v436; assert_in_epsilon(1.4544818759731915, worksheet.outputs_energy_flows_v436, 0.002); end
  def test_outputs_energy_flows_w436; assert_in_epsilon(1.4549908439731751, worksheet.outputs_energy_flows_w436, 0.002); end
  def test_outputs_energy_flows_x436; assert_in_epsilon(1.5521915846016183, worksheet.outputs_energy_flows_x436, 0.002); end
  def test_outputs_energy_flows_y436; assert_in_epsilon(1.657389501994208, worksheet.outputs_energy_flows_y436, 0.002); end
  def test_outputs_energy_flows_z436; assert_in_epsilon(1.7528178084297739, worksheet.outputs_energy_flows_z436, 0.002); end
  def test_outputs_energy_flows_aa436; assert_in_epsilon(1.8340391509042457, worksheet.outputs_energy_flows_aa436, 0.002); end
  def test_outputs_energy_flows_ab436; assert_in_epsilon(1.9083105078062514, worksheet.outputs_energy_flows_ab436, 0.002); end
  def test_outputs_energy_flows_ac436; assert_in_epsilon(1.968137149882269, worksheet.outputs_energy_flows_ac436, 0.002); end
  def test_outputs_energy_flows_ad436; assert_in_epsilon(2.021007059099433, worksheet.outputs_energy_flows_ad436, 0.002); end
  def test_outputs_energy_flows_d438; assert_equal("Liquid", worksheet.outputs_energy_flows_d438); end
  def test_outputs_energy_flows_f438; assert_equal("Heat network", worksheet.outputs_energy_flows_f438); end
  def test_outputs_energy_flows_i438; assert_equal("G.C.02", worksheet.outputs_energy_flows_i438); end
  def test_outputs_energy_flows_j438; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j438); end
  def test_outputs_energy_flows_n438; assert_equal("Heat network", worksheet.outputs_energy_flows_n438); end
  def test_outputs_energy_flows_v438; assert_in_delta(0.7272409379865957, worksheet.outputs_energy_flows_v438, 0.002); end
  def test_outputs_energy_flows_w438; assert_in_delta(0.6976494559563685, worksheet.outputs_energy_flows_w438, 0.002); end
  def test_outputs_energy_flows_x438; assert_in_delta(0.7011683724421134, worksheet.outputs_energy_flows_x438, 0.002); end
  def test_outputs_energy_flows_y438; assert_in_delta(0.7013282425105204, worksheet.outputs_energy_flows_y438, 0.002); end
  def test_outputs_energy_flows_z438; assert_in_delta(0.6901258941111944, worksheet.outputs_energy_flows_z438, 0.002); end
  def test_outputs_energy_flows_aa438; assert_in_delta(0.666495812647953, worksheet.outputs_energy_flows_aa438, 0.002); end
  def test_outputs_energy_flows_ab438; assert_in_delta(0.6338451469715438, worksheet.outputs_energy_flows_ab438, 0.002); end
  def test_outputs_energy_flows_ac438; assert_in_delta(0.5902834416674144, worksheet.outputs_energy_flows_ac438, 0.002); end
  def test_outputs_energy_flows_ad438; assert_in_delta(0.5389352157598487, worksheet.outputs_energy_flows_ad438, 0.002); end
  def test_outputs_energy_flows_d440; assert_equal("Gas", worksheet.outputs_energy_flows_d440); end
  def test_outputs_energy_flows_f440; assert_equal("Heat network", worksheet.outputs_energy_flows_f440); end
  def test_outputs_energy_flows_i440; assert_equal("G.C.03", worksheet.outputs_energy_flows_i440); end
  def test_outputs_energy_flows_j440; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j440); end
  def test_outputs_energy_flows_n440; assert_equal("Heat network", worksheet.outputs_energy_flows_n440); end
  def test_outputs_energy_flows_v440; assert_in_delta(0.686838663654007, worksheet.outputs_energy_flows_v440, 0.002); end
  def test_outputs_energy_flows_w440; assert_in_delta(0.6566462085449636, worksheet.outputs_energy_flows_w440, 0.002); end
  def test_outputs_energy_flows_x440; assert_in_delta(0.6791690389264388, worksheet.outputs_energy_flows_x440, 0.002); end
  def test_outputs_energy_flows_y440; assert_in_delta(0.701940386983234, worksheet.outputs_energy_flows_y440, 0.002); end
  def test_outputs_energy_flows_z440; assert_in_delta(0.7172391927441483, worksheet.outputs_energy_flows_z440, 0.002); end
  def test_outputs_energy_flows_aa440; assert_in_delta(0.7236219848989628, worksheet.outputs_energy_flows_aa440, 0.002); end
  def test_outputs_energy_flows_ab440; assert_in_delta(0.7243609863266465, worksheet.outputs_energy_flows_ab440, 0.002); end
  def test_outputs_energy_flows_ac440; assert_in_delta(0.7169315798652632, worksheet.outputs_energy_flows_ac440, 0.002); end
  def test_outputs_energy_flows_ad440; assert_in_delta(0.7045093753942229, worksheet.outputs_energy_flows_ad440, 0.002); end
  def test_outputs_energy_flows_d442; assert_equal("Geothermal", worksheet.outputs_energy_flows_d442); end
  def test_outputs_energy_flows_f442; assert_equal("Heat network", worksheet.outputs_energy_flows_f442); end
  def test_outputs_energy_flows_i442; assert_equal("G.R.05", worksheet.outputs_energy_flows_i442); end
  def test_outputs_energy_flows_j442; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_j442); end
  def test_outputs_energy_flows_n442; assert_equal("Heat network", worksheet.outputs_energy_flows_n442); end
  def test_outputs_energy_flows_v442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v442||0), 0.002); end
  def test_outputs_energy_flows_w442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w442||0), 0.002); end
  def test_outputs_energy_flows_x442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x442||0), 0.002); end
  def test_outputs_energy_flows_y442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y442||0), 0.002); end
  def test_outputs_energy_flows_z442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z442||0), 0.002); end
  def test_outputs_energy_flows_aa442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa442||0), 0.002); end
  def test_outputs_energy_flows_ab442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab442||0), 0.002); end
  def test_outputs_energy_flows_ac442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac442||0), 0.002); end
  def test_outputs_energy_flows_ad442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad442||0), 0.002); end
  def test_outputs_energy_flows_d444; assert_equal("Solar", worksheet.outputs_energy_flows_d444); end
  def test_outputs_energy_flows_f444; assert_equal("Heat network", worksheet.outputs_energy_flows_f444); end
  def test_outputs_energy_flows_i444; assert_equal("G.R.01", worksheet.outputs_energy_flows_i444); end
  def test_outputs_energy_flows_j444; assert_equal("Global Solar", worksheet.outputs_energy_flows_j444); end
  def test_outputs_energy_flows_n444; assert_equal("Heat network", worksheet.outputs_energy_flows_n444); end
  def test_outputs_energy_flows_v444; assert_in_delta(0.12363095945772125, worksheet.outputs_energy_flows_v444, 0.002); end
  def test_outputs_energy_flows_w444; assert_in_delta(0.12367422173771989, worksheet.outputs_energy_flows_w444, 0.002); end
  def test_outputs_energy_flows_x444; assert_in_delta(0.14173469492188356, worksheet.outputs_energy_flows_x444, 0.002); end
  def test_outputs_energy_flows_y444; assert_in_delta(0.1621386545165174, worksheet.outputs_energy_flows_y444, 0.002); end
  def test_outputs_energy_flows_z444; assert_in_delta(0.1832647634417108, worksheet.outputs_energy_flows_z444, 0.002); end
  def test_outputs_energy_flows_aa444; assert_in_delta(0.20449933510753524, worksheet.outputs_energy_flows_aa444, 0.002); end
  def test_outputs_energy_flows_ab444; assert_in_delta(0.22648080751986277, worksheet.outputs_energy_flows_ab444, 0.002); end
  def test_outputs_energy_flows_ac444; assert_in_delta(0.24818736639609124, worksheet.outputs_energy_flows_ac444, 0.002); end
  def test_outputs_energy_flows_ad444; assert_in_delta(0.27036583323952407, worksheet.outputs_energy_flows_ad444, 0.002); end
  def test_outputs_energy_flows_d446; assert_equal("Solar", worksheet.outputs_energy_flows_d446); end
  def test_outputs_energy_flows_f446; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f446); end
  def test_outputs_energy_flows_i446; assert_equal("G.E.02", worksheet.outputs_energy_flows_i446); end
  def test_outputs_energy_flows_j446; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j446); end
  def test_outputs_energy_flows_p446; assert_equal("Solar", worksheet.outputs_energy_flows_p446); end
  def test_outputs_energy_flows_v446; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v446, 0.002); end
  def test_outputs_energy_flows_w446; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w446, 0.002); end
  def test_outputs_energy_flows_x446; assert_in_delta(0.8540685748799999, worksheet.outputs_energy_flows_x446, 0.002); end
  def test_outputs_energy_flows_y446; assert_in_delta(0.9525630002399997, worksheet.outputs_energy_flows_y446, 0.002); end
  def test_outputs_energy_flows_z446; assert_in_epsilon(1.2794460883199998, worksheet.outputs_energy_flows_z446, 0.002); end
  def test_outputs_energy_flows_aa446; assert_in_epsilon(1.4798620943999996, worksheet.outputs_energy_flows_aa446, 0.002); end
  def test_outputs_energy_flows_ab446; assert_in_epsilon(1.6179707750399994, worksheet.outputs_energy_flows_ab446, 0.002); end
  def test_outputs_energy_flows_ac446; assert_in_epsilon(2.7839641356, worksheet.outputs_energy_flows_ac446, 0.002); end
  def test_outputs_energy_flows_ad446; assert_in_epsilon(3.8454671267999982, worksheet.outputs_energy_flows_ad446, 0.002); end
  def test_outputs_energy_flows_d448; assert_equal("Wind", worksheet.outputs_energy_flows_d448); end
  def test_outputs_energy_flows_f448; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f448); end
  def test_outputs_energy_flows_i448; assert_equal("G.E.02", worksheet.outputs_energy_flows_i448); end
  def test_outputs_energy_flows_j448; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j448); end
  def test_outputs_energy_flows_p448; assert_equal("Wind", worksheet.outputs_energy_flows_p448); end
  def test_outputs_energy_flows_v448; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v448, 0.002); end
  def test_outputs_energy_flows_w448; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w448, 0.002); end
  def test_outputs_energy_flows_x448; assert_in_epsilon(2.9258313263999995, worksheet.outputs_energy_flows_x448, 0.002); end
  def test_outputs_energy_flows_y448; assert_in_epsilon(3.1616928287999997, worksheet.outputs_energy_flows_y448, 0.002); end
  def test_outputs_energy_flows_z448; assert_in_epsilon(2.8244683152, worksheet.outputs_energy_flows_z448, 0.002); end
  def test_outputs_energy_flows_aa448; assert_in_epsilon(1.8673263071999997, worksheet.outputs_energy_flows_aa448, 0.002); end
  def test_outputs_energy_flows_ab448; assert_in_epsilon(2.5776247679999993, worksheet.outputs_energy_flows_ab448, 0.002); end
  def test_outputs_energy_flows_ac448; assert_in_epsilon(3.7875431519999996, worksheet.outputs_energy_flows_ac448, 0.002); end
  def test_outputs_energy_flows_ad448; assert_in_epsilon(4.674311711999999, worksheet.outputs_energy_flows_ad448, 0.002); end
  def test_outputs_energy_flows_d450; assert_equal("Marine", worksheet.outputs_energy_flows_d450); end
  def test_outputs_energy_flows_f450; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f450); end
  def test_outputs_energy_flows_i450; assert_equal("G.E.02", worksheet.outputs_energy_flows_i450); end
  def test_outputs_energy_flows_j450; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j450); end
  def test_outputs_energy_flows_p450; assert_equal("Marine", worksheet.outputs_energy_flows_p450); end
  def test_outputs_energy_flows_v450; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v450, 0.002); end
  def test_outputs_energy_flows_w450; assert_in_delta(0.0041656031999999996, worksheet.outputs_energy_flows_w450, 0.002); end
  def test_outputs_energy_flows_x450; assert_in_delta(0.00632414304, worksheet.outputs_energy_flows_x450, 0.002); end
  def test_outputs_energy_flows_y450; assert_in_delta(0.023794430400000004, worksheet.outputs_energy_flows_y450, 0.002); end
  def test_outputs_energy_flows_z450; assert_in_delta(0.06784884000000001, worksheet.outputs_energy_flows_z450, 0.002); end
  def test_outputs_energy_flows_aa450; assert_in_delta(0.11124054000000001, worksheet.outputs_energy_flows_aa450, 0.002); end
  def test_outputs_energy_flows_ab450; assert_in_delta(0.17830044000000003, worksheet.outputs_energy_flows_ab450, 0.002); end
  def test_outputs_energy_flows_ac450; assert_in_delta(0.270764208, worksheet.outputs_energy_flows_ac450, 0.002); end
  def test_outputs_energy_flows_ad450; assert_in_delta(0.32851461600000004, worksheet.outputs_energy_flows_ad450, 0.002); end
  def test_outputs_energy_flows_d452; assert_equal("Geothermal", worksheet.outputs_energy_flows_d452); end
  def test_outputs_energy_flows_f452; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f452); end
  def test_outputs_energy_flows_i452; assert_equal("G.E.02", worksheet.outputs_energy_flows_i452); end
  def test_outputs_energy_flows_j452; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j452); end
  def test_outputs_energy_flows_p452; assert_equal("Geothermal", worksheet.outputs_energy_flows_p452); end
  def test_outputs_energy_flows_v452; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v452, 0.002); end
  def test_outputs_energy_flows_w452; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w452, 0.002); end
  def test_outputs_energy_flows_x452; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x452, 0.002); end
  def test_outputs_energy_flows_y452; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y452, 0.002); end
  def test_outputs_energy_flows_z452; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z452, 0.002); end
  def test_outputs_energy_flows_aa452; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa452, 0.002); end
  def test_outputs_energy_flows_ab452; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab452, 0.002); end
  def test_outputs_energy_flows_ac452; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac452, 0.002); end
  def test_outputs_energy_flows_ad452; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad452, 0.002); end
  def test_outputs_energy_flows_d454; assert_equal("Hydro", worksheet.outputs_energy_flows_d454); end
  def test_outputs_energy_flows_f454; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f454); end
  def test_outputs_energy_flows_i454; assert_equal("G.E.02", worksheet.outputs_energy_flows_i454); end
  def test_outputs_energy_flows_j454; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j454); end
  def test_outputs_energy_flows_p454; assert_equal("Hydro", worksheet.outputs_energy_flows_p454); end
  def test_outputs_energy_flows_v454; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v454, 0.002); end
  def test_outputs_energy_flows_w454; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w454, 0.002); end
  def test_outputs_energy_flows_x454; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x454, 0.002); end
  def test_outputs_energy_flows_y454; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y454, 0.002); end
  def test_outputs_energy_flows_z454; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z454, 0.002); end
  def test_outputs_energy_flows_aa454; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa454, 0.002); end
  def test_outputs_energy_flows_ab454; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab454, 0.002); end
  def test_outputs_energy_flows_ac454; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac454, 0.002); end
  def test_outputs_energy_flows_ad454; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad454, 0.002); end
  def test_outputs_energy_flows_d456; assert_equal("Solar", worksheet.outputs_energy_flows_d456); end
  def test_outputs_energy_flows_f456; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f456); end
  def test_outputs_energy_flows_i456; assert_equal("G.L.01", worksheet.outputs_energy_flows_i456); end
  def test_outputs_energy_flows_j456; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j456); end
  def test_outputs_energy_flows_p456; assert_equal("Solar", worksheet.outputs_energy_flows_p456); end
  def test_outputs_energy_flows_v456; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v456, 0.002); end
  def test_outputs_energy_flows_w456; assert_in_delta(0.10222882078475562, worksheet.outputs_energy_flows_w456, 0.002); end
  def test_outputs_energy_flows_x456; assert_in_delta(0.6496021227566944, worksheet.outputs_energy_flows_x456, 0.002); end
  def test_outputs_energy_flows_y456; assert_in_delta(0.9377327147182917, worksheet.outputs_energy_flows_y456, 0.002); end
  def test_outputs_energy_flows_z456; assert_in_epsilon(1.2399989497774486, worksheet.outputs_energy_flows_z456, 0.002); end
  def test_outputs_energy_flows_aa456; assert_in_epsilon(1.4151415461711485, worksheet.outputs_energy_flows_aa456, 0.002); end
  def test_outputs_energy_flows_ab456; assert_in_epsilon(1.3516736881434415, worksheet.outputs_energy_flows_ab456, 0.002); end
  def test_outputs_energy_flows_ac456; assert_in_epsilon(2.1019364453115243, worksheet.outputs_energy_flows_ac456, 0.002); end
  def test_outputs_energy_flows_ad456; assert_in_epsilon(2.6089339951097914, worksheet.outputs_energy_flows_ad456, 0.002); end
  def test_outputs_energy_flows_d458; assert_equal("Power plants", worksheet.outputs_energy_flows_d458); end
  def test_outputs_energy_flows_f458; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f458); end
  def test_outputs_energy_flows_i458; assert_equal("G.L.01", worksheet.outputs_energy_flows_i458); end
  def test_outputs_energy_flows_j458; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j458); end
  def test_outputs_energy_flows_k458; assert_equal("G.L.02", worksheet.outputs_energy_flows_k458); end
  def test_outputs_energy_flows_l458; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_l458); end
  def test_outputs_energy_flows_p458; assert_equal("Unabated power", worksheet.outputs_energy_flows_p458); end
  def test_outputs_energy_flows_r458; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r458); end
  def test_outputs_energy_flows_t458; assert_equal("Nuclear", worksheet.outputs_energy_flows_t458); end
  def test_outputs_energy_flows_v458; assert_in_epsilon(103.38259970729871, worksheet.outputs_energy_flows_v458, 0.002); end
  def test_outputs_energy_flows_w458; assert_in_epsilon(103.61988680985456, worksheet.outputs_energy_flows_w458, 0.002); end
  def test_outputs_energy_flows_x458; assert_in_epsilon(114.2733279448213, worksheet.outputs_energy_flows_x458, 0.002); end
  def test_outputs_energy_flows_y458; assert_in_epsilon(125.17902579676701, worksheet.outputs_energy_flows_y458, 0.002); end
  def test_outputs_energy_flows_z458; assert_in_epsilon(136.71132722803003, worksheet.outputs_energy_flows_z458, 0.002); end
  def test_outputs_energy_flows_aa458; assert_in_epsilon(147.85193284401367, worksheet.outputs_energy_flows_aa458, 0.002); end
  def test_outputs_energy_flows_ab458; assert_in_epsilon(155.1115853786311, worksheet.outputs_energy_flows_ab458, 0.002); end
  def test_outputs_energy_flows_ac458; assert_in_epsilon(160.0858120432917, worksheet.outputs_energy_flows_ac458, 0.002); end
  def test_outputs_energy_flows_ad458; assert_in_epsilon(165.31126751856308, worksheet.outputs_energy_flows_ad458, 0.002); end
  def test_outputs_energy_flows_d460; assert_equal("Geothermal", worksheet.outputs_energy_flows_d460); end
  def test_outputs_energy_flows_f460; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f460); end
  def test_outputs_energy_flows_i460; assert_equal("G.L.01", worksheet.outputs_energy_flows_i460); end
  def test_outputs_energy_flows_j460; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j460); end
  def test_outputs_energy_flows_p460; assert_equal("Geothermal", worksheet.outputs_energy_flows_p460); end
  def test_outputs_energy_flows_v460; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v460, 0.002); end
  def test_outputs_energy_flows_w460; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w460, 0.002); end
  def test_outputs_energy_flows_x460; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x460, 0.002); end
  def test_outputs_energy_flows_y460; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y460, 0.002); end
  def test_outputs_energy_flows_z460; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z460, 0.002); end
  def test_outputs_energy_flows_aa460; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa460, 0.002); end
  def test_outputs_energy_flows_ab460; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab460, 0.002); end
  def test_outputs_energy_flows_ac460; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac460, 0.002); end
  def test_outputs_energy_flows_ad460; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad460, 0.002); end
  def test_outputs_energy_flows_d462; assert_equal("Solid", worksheet.outputs_energy_flows_d462); end
  def test_outputs_energy_flows_f462; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f462); end
  def test_outputs_energy_flows_i462; assert_equal("G.FF.01", worksheet.outputs_energy_flows_i462); end
  def test_outputs_energy_flows_j462; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j462); end
  def test_outputs_energy_flows_p462; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p462); end
  def test_outputs_energy_flows_v462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v462||0), 0.002); end
  def test_outputs_energy_flows_w462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w462||0), 0.002); end
  def test_outputs_energy_flows_x462; assert_in_delta(0.02437320670220364, worksheet.outputs_energy_flows_x462, 0.002); end
  def test_outputs_energy_flows_y462; assert_in_delta(0.03954674786313377, worksheet.outputs_energy_flows_y462, 0.002); end
  def test_outputs_energy_flows_z462; assert_in_delta(0.13719439951268436, worksheet.outputs_energy_flows_z462, 0.002); end
  def test_outputs_energy_flows_aa462; assert_in_delta(0.2527906553728647, worksheet.outputs_energy_flows_aa462, 0.002); end
  def test_outputs_energy_flows_ab462; assert_in_delta(0.33762233577634565, worksheet.outputs_energy_flows_ab462, 0.002); end
  def test_outputs_energy_flows_ac462; assert_in_delta(0.42823229392392415, worksheet.outputs_energy_flows_ac462, 0.002); end
  def test_outputs_energy_flows_ad462; assert_in_delta(0.42494879630722787, worksheet.outputs_energy_flows_ad462, 0.002); end
  def test_outputs_energy_flows_d464; assert_equal("Gas", worksheet.outputs_energy_flows_d464); end
  def test_outputs_energy_flows_f464; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f464); end
  def test_outputs_energy_flows_i464; assert_equal("G.FF.03", worksheet.outputs_energy_flows_i464); end
  def test_outputs_energy_flows_j464; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j464); end
  def test_outputs_energy_flows_p464; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p464); end
  def test_outputs_energy_flows_v464; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v464, 0.002); end
  def test_outputs_energy_flows_w464; assert_in_delta(0.20120189942099662, worksheet.outputs_energy_flows_w464, 0.002); end
  def test_outputs_energy_flows_x464; assert_in_delta(0.18175448426500426, worksheet.outputs_energy_flows_x464, 0.002); end
  def test_outputs_energy_flows_y464; assert_in_delta(0.16214166623884843, worksheet.outputs_energy_flows_y464, 0.002); end
  def test_outputs_energy_flows_z464; assert_in_delta(0.2508697591089085, worksheet.outputs_energy_flows_z464, 0.002); end
  def test_outputs_energy_flows_aa464; assert_in_delta(0.30941576217638644, worksheet.outputs_energy_flows_aa464, 0.002); end
  def test_outputs_energy_flows_ab464; assert_in_delta(0.37982512774838895, worksheet.outputs_energy_flows_ab464, 0.002); end
  def test_outputs_energy_flows_ac464; assert_in_delta(0.43567981207912293, worksheet.outputs_energy_flows_ac464, 0.002); end
  def test_outputs_energy_flows_ad464; assert_in_delta(0.5099385555686735, worksheet.outputs_energy_flows_ad464, 0.002); end
  def test_outputs_energy_flows_d466; assert_equal("Electricity", worksheet.outputs_energy_flows_d466); end
  def test_outputs_energy_flows_f466; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f466); end
  def test_outputs_energy_flows_i466; assert_equal("G.E.01", worksheet.outputs_energy_flows_i466); end
  def test_outputs_energy_flows_j466; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j466); end
  def test_outputs_energy_flows_p466; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p466); end
  def test_outputs_energy_flows_v466; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v466, 0.002); end
  def test_outputs_energy_flows_w466; assert_in_delta(0.013054208153028431, worksheet.outputs_energy_flows_w466, 0.002); end
  def test_outputs_energy_flows_x466; assert_in_delta(0.012774412569925786, worksheet.outputs_energy_flows_x466, 0.002); end
  def test_outputs_energy_flows_y466; assert_in_delta(0.014306873864812573, worksheet.outputs_energy_flows_y466, 0.002); end
  def test_outputs_energy_flows_z466; assert_in_delta(0.07033184635348483, worksheet.outputs_energy_flows_z466, 0.002); end
  def test_outputs_energy_flows_aa466; assert_in_delta(0.17244656432305092, worksheet.outputs_energy_flows_aa466, 0.002); end
  def test_outputs_energy_flows_ab466; assert_in_delta(0.3086625677399225, worksheet.outputs_energy_flows_ab466, 0.002); end
  def test_outputs_energy_flows_ac466; assert_in_delta(0.4958109849624815, worksheet.outputs_energy_flows_ac466, 0.002); end
  def test_outputs_energy_flows_ad466; assert_in_delta(0.758026992162708, worksheet.outputs_energy_flows_ad466, 0.002); end
  def test_outputs_energy_flows_d468; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d468); end
  def test_outputs_energy_flows_f468; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f468); end
  def test_outputs_energy_flows_i468; assert_equal("G.L.01", worksheet.outputs_energy_flows_i468); end
  def test_outputs_energy_flows_j468; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j468); end
  def test_outputs_energy_flows_p468; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p468); end
  def test_outputs_energy_flows_v468; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v468, 0.002); end
  def test_outputs_energy_flows_w468; assert_in_delta(0.055412502767975096, worksheet.outputs_energy_flows_w468, 0.002); end
  def test_outputs_energy_flows_x468; assert_in_delta(0.06285334400360927, worksheet.outputs_energy_flows_x468, 0.002); end
  def test_outputs_energy_flows_y468; assert_in_delta(0.06680518165312266, worksheet.outputs_energy_flows_y468, 0.002); end
  def test_outputs_energy_flows_z468; assert_in_delta(0.1608683905118983, worksheet.outputs_energy_flows_z468, 0.002); end
  def test_outputs_energy_flows_aa468; assert_in_delta(0.27415132311790497, worksheet.outputs_energy_flows_aa468, 0.002); end
  def test_outputs_energy_flows_ab468; assert_in_delta(0.3815972429134439, worksheet.outputs_energy_flows_ab468, 0.002); end
  def test_outputs_energy_flows_ac468; assert_in_delta(0.5066952813925669, worksheet.outputs_energy_flows_ac468, 0.002); end
  def test_outputs_energy_flows_ad468; assert_in_delta(0.6047891787120028, worksheet.outputs_energy_flows_ad468, 0.002); end
  def test_outputs_energy_flows_d470; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d470); end
  def test_outputs_energy_flows_f470; assert_equal("Transport", worksheet.outputs_energy_flows_f470); end
  def test_outputs_energy_flows_i470; assert_equal("G.HY.01", worksheet.outputs_energy_flows_i470); end
  def test_outputs_energy_flows_j470; assert_equal("Global H2", worksheet.outputs_energy_flows_j470); end
  def test_outputs_energy_flows_p470; assert_equal("Global transport", worksheet.outputs_energy_flows_p470); end
  def test_outputs_energy_flows_v470; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v470, 0.002); end
  def test_outputs_energy_flows_w470; assert_in_delta(0.15884360480604995, worksheet.outputs_energy_flows_w470, 0.002); end
  def test_outputs_energy_flows_x470; assert_in_delta(0.15762500962982265, worksheet.outputs_energy_flows_x470, 0.002); end
  def test_outputs_energy_flows_y470; assert_in_delta(0.14919010631367213, worksheet.outputs_energy_flows_y470, 0.002); end
  def test_outputs_energy_flows_z470; assert_in_delta(0.127823301725339, worksheet.outputs_energy_flows_z470, 0.002); end
  def test_outputs_energy_flows_aa470; assert_in_delta(0.09931803930611244, worksheet.outputs_energy_flows_aa470, 0.002); end
  def test_outputs_energy_flows_ab470; assert_in_delta(0.06758869049620075, worksheet.outputs_energy_flows_ab470, 0.002); end
  def test_outputs_energy_flows_ac470; assert_in_delta(0.034366374317751046, worksheet.outputs_energy_flows_ac470, 0.002); end
  def test_outputs_energy_flows_ad470; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad470||0), 0.002); end
  def test_outputs_energy_flows_d472; assert_equal("Solid", worksheet.outputs_energy_flows_d472); end
  def test_outputs_energy_flows_f472; assert_equal("Transport", worksheet.outputs_energy_flows_f472); end
  def test_outputs_energy_flows_i472; assert_equal("G.C.01", worksheet.outputs_energy_flows_i472); end
  def test_outputs_energy_flows_j472; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j472); end
  def test_outputs_energy_flows_p472; assert_equal("Global transport", worksheet.outputs_energy_flows_p472); end
  def test_outputs_energy_flows_v472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v472||0), 0.002); end
  def test_outputs_energy_flows_w472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w472||0), 0.002); end
  def test_outputs_energy_flows_x472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x472||0), 0.002); end
  def test_outputs_energy_flows_y472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y472||0), 0.002); end
  def test_outputs_energy_flows_z472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z472||0), 0.002); end
  def test_outputs_energy_flows_aa472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa472||0), 0.002); end
  def test_outputs_energy_flows_ab472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab472||0), 0.002); end
  def test_outputs_energy_flows_ac472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac472||0), 0.002); end
  def test_outputs_energy_flows_ad472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad472||0), 0.002); end
  def test_outputs_energy_flows_d474; assert_equal("Liquid", worksheet.outputs_energy_flows_d474); end
  def test_outputs_energy_flows_f474; assert_equal("Transport", worksheet.outputs_energy_flows_f474); end
  def test_outputs_energy_flows_i474; assert_equal("G.C.02", worksheet.outputs_energy_flows_i474); end
  def test_outputs_energy_flows_j474; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j474); end
  def test_outputs_energy_flows_p474; assert_equal("Global transport", worksheet.outputs_energy_flows_p474); end
  def test_outputs_energy_flows_v474; assert_in_epsilon(98.3919342600944, worksheet.outputs_energy_flows_v474, 0.002); end
  def test_outputs_energy_flows_w474; assert_in_epsilon(103.85856672439019, worksheet.outputs_energy_flows_w474, 0.002); end
  def test_outputs_energy_flows_x474; assert_in_epsilon(114.71142578329122, worksheet.outputs_energy_flows_x474, 0.002); end
  def test_outputs_energy_flows_y474; assert_in_epsilon(123.5331112630968, worksheet.outputs_energy_flows_y474, 0.002); end
  def test_outputs_energy_flows_z474; assert_in_epsilon(131.03952627484625, worksheet.outputs_energy_flows_z474, 0.002); end
  def test_outputs_energy_flows_aa474; assert_in_epsilon(136.46720775712245, worksheet.outputs_energy_flows_aa474, 0.002); end
  def test_outputs_energy_flows_ab474; assert_in_epsilon(140.72884293589868, worksheet.outputs_energy_flows_ab474, 0.002); end
  def test_outputs_energy_flows_ac474; assert_in_epsilon(144.72216136104356, worksheet.outputs_energy_flows_ac474, 0.002); end
  def test_outputs_energy_flows_ad474; assert_in_epsilon(148.5362205496292, worksheet.outputs_energy_flows_ad474, 0.002); end
  def test_outputs_energy_flows_d476; assert_equal("Gas", worksheet.outputs_energy_flows_d476); end
  def test_outputs_energy_flows_f476; assert_equal("Transport", worksheet.outputs_energy_flows_f476); end
  def test_outputs_energy_flows_i476; assert_equal("G.C.03", worksheet.outputs_energy_flows_i476); end
  def test_outputs_energy_flows_j476; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j476); end
  def test_outputs_energy_flows_p476; assert_equal("Global transport", worksheet.outputs_energy_flows_p476); end
  def test_outputs_energy_flows_v476; assert_in_delta(0.3471995357508835, worksheet.outputs_energy_flows_v476, 0.002); end
  def test_outputs_energy_flows_w476; assert_in_delta(0.7883292217013735, worksheet.outputs_energy_flows_w476, 0.002); end
  def test_outputs_energy_flows_x476; assert_in_epsilon(1.1587097007214104, worksheet.outputs_energy_flows_x476, 0.002); end
  def test_outputs_energy_flows_y476; assert_in_epsilon(1.571282097695053, worksheet.outputs_energy_flows_y476, 0.002); end
  def test_outputs_energy_flows_z476; assert_in_epsilon(2.0068267705883334, worksheet.outputs_energy_flows_z476, 0.002); end
  def test_outputs_energy_flows_aa476; assert_in_epsilon(2.4415620807931178, worksheet.outputs_energy_flows_aa476, 0.002); end
  def test_outputs_energy_flows_ab476; assert_in_epsilon(2.8635794606801968, worksheet.outputs_energy_flows_ab476, 0.002); end
  def test_outputs_energy_flows_ac476; assert_in_epsilon(3.281432792399711, worksheet.outputs_energy_flows_ac476, 0.002); end
  def test_outputs_energy_flows_ad476; assert_in_epsilon(3.6894160465668127, worksheet.outputs_energy_flows_ad476, 0.002); end
  def test_outputs_energy_flows_d478; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d478); end
  def test_outputs_energy_flows_f478; assert_equal("Transport", worksheet.outputs_energy_flows_f478); end
  def test_outputs_energy_flows_i478; assert_equal("G.E.01", worksheet.outputs_energy_flows_i478); end
  def test_outputs_energy_flows_j478; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j478); end
  def test_outputs_energy_flows_p478; assert_equal("Global transport", worksheet.outputs_energy_flows_p478); end
  def test_outputs_energy_flows_v478; assert_in_epsilon(1.6273077307043442, worksheet.outputs_energy_flows_v478, 0.002); end
  def test_outputs_energy_flows_w478; assert_in_epsilon(2.507990817822011, worksheet.outputs_energy_flows_w478, 0.002); end
  def test_outputs_energy_flows_x478; assert_in_epsilon(3.086167092428585, worksheet.outputs_energy_flows_x478, 0.002); end
  def test_outputs_energy_flows_y478; assert_in_epsilon(3.685138577422587, worksheet.outputs_energy_flows_y478, 0.002); end
  def test_outputs_energy_flows_z478; assert_in_epsilon(4.282454553395991, worksheet.outputs_energy_flows_z478, 0.002); end
  def test_outputs_energy_flows_aa478; assert_in_epsilon(4.866759534158247, worksheet.outputs_energy_flows_aa478, 0.002); end
  def test_outputs_energy_flows_ab478; assert_in_epsilon(5.455214613686765, worksheet.outputs_energy_flows_ab478, 0.002); end
  def test_outputs_energy_flows_ac478; assert_in_epsilon(6.056752590712627, worksheet.outputs_energy_flows_ac478, 0.002); end
  def test_outputs_energy_flows_ad478; assert_in_epsilon(6.683329962992671, worksheet.outputs_energy_flows_ad478, 0.002); end
  def test_outputs_energy_flows_d480; assert_equal("Solid", worksheet.outputs_energy_flows_d480); end
  def test_outputs_energy_flows_f480; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f480); end
  def test_outputs_energy_flows_i480; assert_equal("G.C.01", worksheet.outputs_energy_flows_i480); end
  def test_outputs_energy_flows_j480; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j480); end
  def test_outputs_energy_flows_k480; assert_equal("G.FF.01", worksheet.outputs_energy_flows_k480); end
  def test_outputs_energy_flows_l480; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_l480); end
  def test_outputs_energy_flows_p480; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p480); end
  def test_outputs_energy_flows_v480; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_flows_v480, 0.002); end
  def test_outputs_energy_flows_w480; assert_in_epsilon(52.84927420772798, worksheet.outputs_energy_flows_w480, 0.002); end
  def test_outputs_energy_flows_x480; assert_in_epsilon(58.215728983159906, worksheet.outputs_energy_flows_x480, 0.002); end
  def test_outputs_energy_flows_y480; assert_in_epsilon(62.91737038824205, worksheet.outputs_energy_flows_y480, 0.002); end
  def test_outputs_energy_flows_z480; assert_in_epsilon(67.34339298117615, worksheet.outputs_energy_flows_z480, 0.002); end
  def test_outputs_energy_flows_aa480; assert_in_epsilon(71.57758787480697, worksheet.outputs_energy_flows_aa480, 0.002); end
  def test_outputs_energy_flows_ab480; assert_in_epsilon(75.88929878654899, worksheet.outputs_energy_flows_ab480, 0.002); end
  def test_outputs_energy_flows_ac480; assert_in_epsilon(80.20794643763047, worksheet.outputs_energy_flows_ac480, 0.002); end
  def test_outputs_energy_flows_ad480; assert_in_epsilon(84.61287548208202, worksheet.outputs_energy_flows_ad480, 0.002); end
  def test_outputs_energy_flows_d482; assert_equal("Liquid", worksheet.outputs_energy_flows_d482); end
  def test_outputs_energy_flows_f482; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f482); end
  def test_outputs_energy_flows_i482; assert_equal("G.C.02", worksheet.outputs_energy_flows_i482); end
  def test_outputs_energy_flows_j482; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j482); end
  def test_outputs_energy_flows_k482; assert_equal("G.FF.02", worksheet.outputs_energy_flows_k482); end
  def test_outputs_energy_flows_l482; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_l482); end
  def test_outputs_energy_flows_p482; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p482); end
  def test_outputs_energy_flows_v482; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_flows_v482, 0.002); end
  def test_outputs_energy_flows_w482; assert_in_epsilon(32.920734252110826, worksheet.outputs_energy_flows_w482, 0.002); end
  def test_outputs_energy_flows_x482; assert_in_epsilon(35.81484496856289, worksheet.outputs_energy_flows_x482, 0.002); end
  def test_outputs_energy_flows_y482; assert_in_epsilon(40.16136855631997, worksheet.outputs_energy_flows_y482, 0.002); end
  def test_outputs_energy_flows_z482; assert_in_epsilon(44.69477459871425, worksheet.outputs_energy_flows_z482, 0.002); end
  def test_outputs_energy_flows_aa482; assert_in_epsilon(49.30051594467047, worksheet.outputs_energy_flows_aa482, 0.002); end
  def test_outputs_energy_flows_ab482; assert_in_epsilon(54.385776709346196, worksheet.outputs_energy_flows_ab482, 0.002); end
  def test_outputs_energy_flows_ac482; assert_in_epsilon(59.63591585852211, worksheet.outputs_energy_flows_ac482, 0.002); end
  def test_outputs_energy_flows_ad482; assert_in_epsilon(65.43106569116492, worksheet.outputs_energy_flows_ad482, 0.002); end
  def test_outputs_energy_flows_d484; assert_equal("Gas", worksheet.outputs_energy_flows_d484); end
  def test_outputs_energy_flows_f484; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f484); end
  def test_outputs_energy_flows_i484; assert_equal("G.C.03", worksheet.outputs_energy_flows_i484); end
  def test_outputs_energy_flows_j484; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j484); end
  def test_outputs_energy_flows_k484; assert_equal("G.FF.03", worksheet.outputs_energy_flows_k484); end
  def test_outputs_energy_flows_l484; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_l484); end
  def test_outputs_energy_flows_p484; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p484); end
  def test_outputs_energy_flows_v484; assert_in_epsilon(27.233246077496677, worksheet.outputs_energy_flows_v484, 0.002); end
  def test_outputs_energy_flows_w484; assert_in_epsilon(29.068327867515183, worksheet.outputs_energy_flows_w484, 0.002); end
  def test_outputs_energy_flows_x484; assert_in_epsilon(31.864071763470935, worksheet.outputs_energy_flows_x484, 0.002); end
  def test_outputs_energy_flows_y484; assert_in_epsilon(35.13577318427337, worksheet.outputs_energy_flows_y484, 0.002); end
  def test_outputs_energy_flows_z484; assert_in_epsilon(38.47041638804997, worksheet.outputs_energy_flows_z484, 0.002); end
  def test_outputs_energy_flows_aa484; assert_in_epsilon(41.815146961355126, worksheet.outputs_energy_flows_aa484, 0.002); end
  def test_outputs_energy_flows_ab484; assert_in_epsilon(45.31471978896505, worksheet.outputs_energy_flows_ab484, 0.002); end
  def test_outputs_energy_flows_ac484; assert_in_epsilon(48.78308609463202, worksheet.outputs_energy_flows_ac484, 0.002); end
  def test_outputs_energy_flows_ad484; assert_in_epsilon(52.390675534396834, worksheet.outputs_energy_flows_ad484, 0.002); end
  def test_outputs_energy_flows_d486; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d486); end
  def test_outputs_energy_flows_f486; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f486); end
  def test_outputs_energy_flows_i486; assert_equal("G.E.01", worksheet.outputs_energy_flows_i486); end
  def test_outputs_energy_flows_j486; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j486); end
  def test_outputs_energy_flows_p486; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p486); end
  def test_outputs_energy_flows_v486; assert_in_epsilon(29.285413529720426, worksheet.outputs_energy_flows_v486, 0.002); end
  def test_outputs_energy_flows_w486; assert_in_epsilon(31.039849689990398, worksheet.outputs_energy_flows_w486, 0.002); end
  def test_outputs_energy_flows_x486; assert_in_epsilon(34.18312961908761, worksheet.outputs_energy_flows_x486, 0.002); end
  def test_outputs_energy_flows_y486; assert_in_epsilon(37.6056316775485, worksheet.outputs_energy_flows_y486, 0.002); end
  def test_outputs_energy_flows_z486; assert_in_epsilon(41.01090341777539, worksheet.outputs_energy_flows_z486, 0.002); end
  def test_outputs_energy_flows_aa486; assert_in_epsilon(44.33421447884265, worksheet.outputs_energy_flows_aa486, 0.002); end
  def test_outputs_energy_flows_ab486; assert_in_epsilon(47.756723433292585, worksheet.outputs_energy_flows_ab486, 0.002); end
  def test_outputs_energy_flows_ac486; assert_in_epsilon(51.15592311259907, worksheet.outputs_energy_flows_ac486, 0.002); end
  def test_outputs_energy_flows_ad486; assert_in_epsilon(54.66156737803842, worksheet.outputs_energy_flows_ad486, 0.002); end
  def test_outputs_energy_flows_d488; assert_equal("Heat network", worksheet.outputs_energy_flows_d488); end
  def test_outputs_energy_flows_f488; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f488); end
  def test_outputs_energy_flows_i488; assert_equal("G.H.01", worksheet.outputs_energy_flows_i488); end
  def test_outputs_energy_flows_j488; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j488); end
  def test_outputs_energy_flows_p488; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p488); end
  def test_outputs_energy_flows_v488; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_flows_v488, 0.002); end
  def test_outputs_energy_flows_w488; assert_in_epsilon(5.621452983702943, worksheet.outputs_energy_flows_w488, 0.002); end
  def test_outputs_energy_flows_x488; assert_in_epsilon(6.181289628871501, worksheet.outputs_energy_flows_x488, 0.002); end
  def test_outputs_energy_flows_y488; assert_in_epsilon(6.883948044483339, worksheet.outputs_energy_flows_y488, 0.002); end
  def test_outputs_energy_flows_z488; assert_in_epsilon(7.59836954289811, worksheet.outputs_energy_flows_z488, 0.002); end
  def test_outputs_energy_flows_aa488; assert_in_epsilon(8.308416026350727, worksheet.outputs_energy_flows_aa488, 0.002); end
  def test_outputs_energy_flows_ab488; assert_in_epsilon(9.06277807715208, worksheet.outputs_energy_flows_ab488, 0.002); end
  def test_outputs_energy_flows_ac488; assert_in_epsilon(9.821753470438308, worksheet.outputs_energy_flows_ac488, 0.002); end
  def test_outputs_energy_flows_ad488; assert_in_epsilon(10.627140994848054, worksheet.outputs_energy_flows_ad488, 0.002); end
  def test_outputs_energy_flows_d490; assert_equal("Solid", worksheet.outputs_energy_flows_d490); end
  def test_outputs_energy_flows_f490; assert_equal("Buildings", worksheet.outputs_energy_flows_f490); end
  def test_outputs_energy_flows_i490; assert_equal("G.C.01", worksheet.outputs_energy_flows_i490); end
  def test_outputs_energy_flows_j490; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j490); end
  def test_outputs_energy_flows_k490; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k490); end
  def test_outputs_energy_flows_l490; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l490); end
  def test_outputs_energy_flows_n490; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n490); end
  def test_outputs_energy_flows_o490; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o490); end
  def test_outputs_energy_flows_p490; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p490); end
  def test_outputs_energy_flows_q490; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q490); end
  def test_outputs_energy_flows_r490; assert_equal("non-residential", worksheet.outputs_energy_flows_r490); end
  def test_outputs_energy_flows_v490; assert_in_epsilon(36.60270678533933, worksheet.outputs_energy_flows_v490, 0.002); end
  def test_outputs_energy_flows_w490; assert_in_epsilon(34.739034062124695, worksheet.outputs_energy_flows_w490, 0.002); end
  def test_outputs_energy_flows_x490; assert_in_epsilon(33.15829568263617, worksheet.outputs_energy_flows_x490, 0.002); end
  def test_outputs_energy_flows_y490; assert_in_epsilon(31.34223618737134, worksheet.outputs_energy_flows_y490, 0.002); end
  def test_outputs_energy_flows_z490; assert_in_epsilon(29.440333636898384, worksheet.outputs_energy_flows_z490, 0.002); end
  def test_outputs_energy_flows_aa490; assert_in_epsilon(27.78669245574246, worksheet.outputs_energy_flows_aa490, 0.002); end
  def test_outputs_energy_flows_ab490; assert_in_epsilon(26.06439236234427, worksheet.outputs_energy_flows_ab490, 0.002); end
  def test_outputs_energy_flows_ac490; assert_in_epsilon(24.676767850210606, worksheet.outputs_energy_flows_ac490, 0.002); end
  def test_outputs_energy_flows_ad490; assert_in_epsilon(23.206632695242465, worksheet.outputs_energy_flows_ad490, 0.002); end
  def test_outputs_energy_flows_d492; assert_equal("Liquid", worksheet.outputs_energy_flows_d492); end
  def test_outputs_energy_flows_f492; assert_equal("Buildings", worksheet.outputs_energy_flows_f492); end
  def test_outputs_energy_flows_i492; assert_equal("G.C.02", worksheet.outputs_energy_flows_i492); end
  def test_outputs_energy_flows_j492; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j492); end
  def test_outputs_energy_flows_n492; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n492); end
  def test_outputs_energy_flows_o492; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o492); end
  def test_outputs_energy_flows_p492; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p492); end
  def test_outputs_energy_flows_q492; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q492); end
  def test_outputs_energy_flows_r492; assert_equal("non-residential", worksheet.outputs_energy_flows_r492); end
  def test_outputs_energy_flows_v492; assert_in_epsilon(9.286178142155208, worksheet.outputs_energy_flows_v492, 0.002); end
  def test_outputs_energy_flows_w492; assert_in_epsilon(9.282387754834815, worksheet.outputs_energy_flows_w492, 0.002); end
  def test_outputs_energy_flows_x492; assert_in_epsilon(9.580180807575449, worksheet.outputs_energy_flows_x492, 0.002); end
  def test_outputs_energy_flows_y492; assert_in_epsilon(9.8056697699465, worksheet.outputs_energy_flows_y492, 0.002); end
  def test_outputs_energy_flows_z492; assert_in_epsilon(9.941194577959472, worksheet.outputs_energy_flows_z492, 0.002); end
  def test_outputs_energy_flows_aa492; assert_in_epsilon(9.962121675785543, worksheet.outputs_energy_flows_aa492, 0.002); end
  def test_outputs_energy_flows_ab492; assert_in_epsilon(9.906094294366422, worksheet.outputs_energy_flows_ab492, 0.002); end
  def test_outputs_energy_flows_ac492; assert_in_epsilon(9.75104042846538, worksheet.outputs_energy_flows_ac492, 0.002); end
  def test_outputs_energy_flows_ad492; assert_in_epsilon(9.534452749572061, worksheet.outputs_energy_flows_ad492, 0.002); end
  def test_outputs_energy_flows_d494; assert_equal("Gas", worksheet.outputs_energy_flows_d494); end
  def test_outputs_energy_flows_f494; assert_equal("Buildings", worksheet.outputs_energy_flows_f494); end
  def test_outputs_energy_flows_i494; assert_equal("G.C.03", worksheet.outputs_energy_flows_i494); end
  def test_outputs_energy_flows_j494; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j494); end
  def test_outputs_energy_flows_n494; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n494); end
  def test_outputs_energy_flows_o494; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o494); end
  def test_outputs_energy_flows_p494; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p494); end
  def test_outputs_energy_flows_q494; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q494); end
  def test_outputs_energy_flows_r494; assert_equal("non-residential", worksheet.outputs_energy_flows_r494); end
  def test_outputs_energy_flows_v494; assert_in_epsilon(22.00838896692654, worksheet.outputs_energy_flows_v494, 0.002); end
  def test_outputs_energy_flows_w494; assert_in_epsilon(22.275357483475894, worksheet.outputs_energy_flows_w494, 0.002); end
  def test_outputs_energy_flows_x494; assert_in_epsilon(23.987564717051672, worksheet.outputs_energy_flows_x494, 0.002); end
  def test_outputs_energy_flows_y494; assert_in_epsilon(25.601639461105925, worksheet.outputs_energy_flows_y494, 0.002); end
  def test_outputs_energy_flows_z494; assert_in_epsilon(27.06260058034855, worksheet.outputs_energy_flows_z494, 0.002); end
  def test_outputs_energy_flows_aa494; assert_in_epsilon(28.281747183061924, worksheet.outputs_energy_flows_aa494, 0.002); end
  def test_outputs_energy_flows_ab494; assert_in_epsilon(29.34342945602571, worksheet.outputs_energy_flows_ab494, 0.002); end
  def test_outputs_energy_flows_ac494; assert_in_epsilon(30.162455208526286, worksheet.outputs_energy_flows_ac494, 0.002); end
  def test_outputs_energy_flows_ad494; assert_in_epsilon(30.838901846754315, worksheet.outputs_energy_flows_ad494, 0.002); end
  def test_outputs_energy_flows_d496; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d496); end
  def test_outputs_energy_flows_f496; assert_equal("Buildings", worksheet.outputs_energy_flows_f496); end
  def test_outputs_energy_flows_i496; assert_equal("G.E.01", worksheet.outputs_energy_flows_i496); end
  def test_outputs_energy_flows_j496; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j496); end
  def test_outputs_energy_flows_n496; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n496); end
  def test_outputs_energy_flows_o496; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o496); end
  def test_outputs_energy_flows_p496; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p496); end
  def test_outputs_energy_flows_q496; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q496); end
  def test_outputs_energy_flows_r496; assert_equal("non-residential", worksheet.outputs_energy_flows_r496); end
  def test_outputs_energy_flows_v496; assert_in_epsilon(36.79584224618469, worksheet.outputs_energy_flows_v496, 0.002); end
  def test_outputs_energy_flows_w496; assert_in_epsilon(41.48138550994874, worksheet.outputs_energy_flows_w496, 0.002); end
  def test_outputs_energy_flows_x496; assert_in_epsilon(46.93188219838358, worksheet.outputs_energy_flows_x496, 0.002); end
  def test_outputs_energy_flows_y496; assert_in_epsilon(52.57272876421362, worksheet.outputs_energy_flows_y496, 0.002); end
  def test_outputs_energy_flows_z496; assert_in_epsilon(58.29274137039502, worksheet.outputs_energy_flows_z496, 0.002); end
  def test_outputs_energy_flows_aa496; assert_in_epsilon(63.91468153046599, worksheet.outputs_energy_flows_aa496, 0.002); end
  def test_outputs_energy_flows_ab496; assert_in_epsilon(69.51809987071633, worksheet.outputs_energy_flows_ab496, 0.002); end
  def test_outputs_energy_flows_ac496; assert_in_epsilon(74.89835893085603, worksheet.outputs_energy_flows_ac496, 0.002); end
  def test_outputs_energy_flows_ad496; assert_in_epsilon(80.15570265487679, worksheet.outputs_energy_flows_ad496, 0.002); end
  def test_outputs_energy_flows_d498; assert_equal("Heat network", worksheet.outputs_energy_flows_d498); end
  def test_outputs_energy_flows_f498; assert_equal("Buildings", worksheet.outputs_energy_flows_f498); end
  def test_outputs_energy_flows_i498; assert_equal("G.H.01", worksheet.outputs_energy_flows_i498); end
  def test_outputs_energy_flows_j498; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j498); end
  def test_outputs_energy_flows_n498; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n498); end
  def test_outputs_energy_flows_o498; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o498); end
  def test_outputs_energy_flows_p498; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p498); end
  def test_outputs_energy_flows_q498; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q498); end
  def test_outputs_energy_flows_r498; assert_equal("non-residential", worksheet.outputs_energy_flows_r498); end
  def test_outputs_energy_flows_v498; assert_in_epsilon(5.601306145677334, worksheet.outputs_energy_flows_v498, 0.002); end
  def test_outputs_energy_flows_w498; assert_in_epsilon(5.268191638872745, worksheet.outputs_energy_flows_w498, 0.002); end
  def test_outputs_energy_flows_x498; assert_in_epsilon(5.6499790149063625, worksheet.outputs_energy_flows_x498, 0.002); end
  def test_outputs_energy_flows_y498; assert_in_epsilon(5.98836838509539, worksheet.outputs_energy_flows_y498, 0.002); end
  def test_outputs_energy_flows_z498; assert_in_epsilon(6.268524581923936, worksheet.outputs_energy_flows_z498, 0.002); end
  def test_outputs_energy_flows_aa498; assert_in_epsilon(6.466230665178259, worksheet.outputs_energy_flows_aa498, 0.002); end
  def test_outputs_energy_flows_ab498; assert_in_epsilon(6.592703313409463, worksheet.outputs_energy_flows_ab498, 0.002); end
  def test_outputs_energy_flows_ac498; assert_in_epsilon(6.6226229422351635, worksheet.outputs_energy_flows_ac498, 0.002); end
  def test_outputs_energy_flows_ad498; assert_in_epsilon(6.574217292303878, worksheet.outputs_energy_flows_ad498, 0.002); end
  def test_outputs_energy_flows_d500; assert_equal("Solar", worksheet.outputs_energy_flows_d500); end
  def test_outputs_energy_flows_f500; assert_equal("Buildings", worksheet.outputs_energy_flows_f500); end
  def test_outputs_energy_flows_i500; assert_equal("G.R.01", worksheet.outputs_energy_flows_i500); end
  def test_outputs_energy_flows_j500; assert_equal("Global Solar", worksheet.outputs_energy_flows_j500); end
  def test_outputs_energy_flows_k500; assert_equal("G.R.07", worksheet.outputs_energy_flows_k500); end
  def test_outputs_energy_flows_l500; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_l500); end
  def test_outputs_energy_flows_n500; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n500); end
  def test_outputs_energy_flows_o500; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o500); end
  def test_outputs_energy_flows_p500; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p500); end
  def test_outputs_energy_flows_q500; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q500); end
  def test_outputs_energy_flows_r500; assert_equal("non-residential", worksheet.outputs_energy_flows_r500); end
  def test_outputs_energy_flows_v500; assert_in_epsilon(5.993633125060281, worksheet.outputs_energy_flows_v500, 0.002); end
  def test_outputs_energy_flows_w500; assert_in_epsilon(6.204514522576472, worksheet.outputs_energy_flows_w500, 0.002); end
  def test_outputs_energy_flows_x500; assert_in_epsilon(7.438989335654156, worksheet.outputs_energy_flows_x500, 0.002); end
  def test_outputs_energy_flows_y500; assert_in_epsilon(8.778109302453068, worksheet.outputs_energy_flows_y500, 0.002); end
  def test_outputs_energy_flows_z500; assert_in_epsilon(10.201986842961523, worksheet.outputs_energy_flows_z500, 0.002); end
  def test_outputs_energy_flows_aa500; assert_in_epsilon(11.67267129121991, worksheet.outputs_energy_flows_aa500, 0.002); end
  def test_outputs_energy_flows_ab500; assert_in_epsilon(13.205863533588907, worksheet.outputs_energy_flows_ab500, 0.002); end
  def test_outputs_energy_flows_ac500; assert_in_epsilon(14.754841666367303, worksheet.outputs_energy_flows_ac500, 0.002); end
  def test_outputs_energy_flows_ad500; assert_in_epsilon(16.338859249377418, worksheet.outputs_energy_flows_ad500, 0.002); end
  def test_outputs_energy_flows_d502; assert_equal("Solid", worksheet.outputs_energy_flows_d502); end
  def test_outputs_energy_flows_f502; assert_equal("Other", worksheet.outputs_energy_flows_f502); end
  def test_outputs_energy_flows_i502; assert_equal("G.C.01", worksheet.outputs_energy_flows_i502); end
  def test_outputs_energy_flows_j502; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j502); end
  def test_outputs_energy_flows_k502; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k502); end
  def test_outputs_energy_flows_l502; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l502); end
  def test_outputs_energy_flows_n502; assert_equal("Arable.food", worksheet.outputs_energy_flows_n502); end
  def test_outputs_energy_flows_o502; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o502); end
  def test_outputs_energy_flows_v502; assert_in_delta(0.7356901397380772, worksheet.outputs_energy_flows_v502, 0.002); end
  def test_outputs_energy_flows_w502; assert_in_delta(0.7549118143549834, worksheet.outputs_energy_flows_w502, 0.002); end
  def test_outputs_energy_flows_x502; assert_in_delta(0.7739831907698069, worksheet.outputs_energy_flows_x502, 0.002); end
  def test_outputs_energy_flows_y502; assert_in_delta(0.7907510636586268, worksheet.outputs_energy_flows_y502, 0.002); end
  def test_outputs_energy_flows_z502; assert_in_delta(0.808336382153749, worksheet.outputs_energy_flows_z502, 0.002); end
  def test_outputs_energy_flows_aa502; assert_in_delta(0.827897750727045, worksheet.outputs_energy_flows_aa502, 0.002); end
  def test_outputs_energy_flows_ab502; assert_in_delta(0.8447765417178554, worksheet.outputs_energy_flows_ab502, 0.002); end
  def test_outputs_energy_flows_ac502; assert_in_delta(0.8539962988954548, worksheet.outputs_energy_flows_ac502, 0.002); end
  def test_outputs_energy_flows_ad502; assert_in_delta(0.8580061205298399, worksheet.outputs_energy_flows_ad502, 0.002); end
  def test_outputs_energy_flows_d504; assert_equal("Liquid", worksheet.outputs_energy_flows_d504); end
  def test_outputs_energy_flows_f504; assert_equal("Other", worksheet.outputs_energy_flows_f504); end
  def test_outputs_energy_flows_i504; assert_equal("G.C.02", worksheet.outputs_energy_flows_i504); end
  def test_outputs_energy_flows_j504; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j504); end
  def test_outputs_energy_flows_n504; assert_equal("Arable.food", worksheet.outputs_energy_flows_n504); end
  def test_outputs_energy_flows_o504; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o504); end
  def test_outputs_energy_flows_v504; assert_in_epsilon(3.6540942339622156, worksheet.outputs_energy_flows_v504, 0.002); end
  def test_outputs_energy_flows_w504; assert_in_epsilon(3.749566235815797, worksheet.outputs_energy_flows_w504, 0.002); end
  def test_outputs_energy_flows_x504; assert_in_epsilon(3.8442917225756714, worksheet.outputs_energy_flows_x504, 0.002); end
  def test_outputs_energy_flows_y504; assert_in_epsilon(3.927575953706813, worksheet.outputs_energy_flows_y504, 0.002); end
  def test_outputs_energy_flows_z504; assert_in_epsilon(4.0149203497296995, worksheet.outputs_energy_flows_z504, 0.002); end
  def test_outputs_energy_flows_aa504; assert_in_epsilon(4.11207957513068, worksheet.outputs_energy_flows_aa504, 0.002); end
  def test_outputs_energy_flows_ab504; assert_in_epsilon(4.195914724610503, worksheet.outputs_energy_flows_ab504, 0.002); end
  def test_outputs_energy_flows_ac504; assert_in_epsilon(4.241708272357646, worksheet.outputs_energy_flows_ac504, 0.002); end
  def test_outputs_energy_flows_ad504; assert_in_epsilon(4.261624627521302, worksheet.outputs_energy_flows_ad504, 0.002); end
  def test_outputs_energy_flows_d506; assert_equal("Gas", worksheet.outputs_energy_flows_d506); end
  def test_outputs_energy_flows_f506; assert_equal("Other", worksheet.outputs_energy_flows_f506); end
  def test_outputs_energy_flows_i506; assert_equal("G.C.03", worksheet.outputs_energy_flows_i506); end
  def test_outputs_energy_flows_j506; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j506); end
  def test_outputs_energy_flows_n506; assert_equal("Arable.food", worksheet.outputs_energy_flows_n506); end
  def test_outputs_energy_flows_o506; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o506); end
  def test_outputs_energy_flows_v506; assert_in_delta(0.4359182661605925, worksheet.outputs_energy_flows_v506, 0.002); end
  def test_outputs_energy_flows_w506; assert_in_delta(0.44730767947349614, worksheet.outputs_energy_flows_w506, 0.002); end
  def test_outputs_energy_flows_x506; assert_in_delta(0.45860803663609956, worksheet.outputs_energy_flows_x506, 0.002); end
  def test_outputs_energy_flows_y506; assert_in_delta(0.46854349951928825, worksheet.outputs_energy_flows_y506, 0.002); end
  def test_outputs_energy_flows_z506; assert_in_delta(0.4789633232116442, worksheet.outputs_energy_flows_z506, 0.002); end
  def test_outputs_energy_flows_aa506; assert_in_delta(0.4905540152864834, worksheet.outputs_energy_flows_aa506, 0.002); end
  def test_outputs_energy_flows_ab506; assert_in_delta(0.5005552004406308, worksheet.outputs_energy_flows_ab506, 0.002); end
  def test_outputs_energy_flows_ac506; assert_in_delta(0.5060181805000233, worksheet.outputs_energy_flows_ac506, 0.002); end
  def test_outputs_energy_flows_ad506; assert_in_delta(0.5083941189557116, worksheet.outputs_energy_flows_ad506, 0.002); end
  def test_outputs_energy_flows_d508; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d508); end
  def test_outputs_energy_flows_f508; assert_equal("Other", worksheet.outputs_energy_flows_f508); end
  def test_outputs_energy_flows_i508; assert_equal("G.E.01", worksheet.outputs_energy_flows_i508); end
  def test_outputs_energy_flows_j508; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j508); end
  def test_outputs_energy_flows_n508; assert_equal("Arable.food", worksheet.outputs_energy_flows_n508); end
  def test_outputs_energy_flows_o508; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o508); end
  def test_outputs_energy_flows_v508; assert_in_epsilon(2.4699953333311506, worksheet.outputs_energy_flows_v508, 0.002); end
  def test_outputs_energy_flows_w508; assert_in_epsilon(2.5345299030339214, worksheet.outputs_energy_flows_w508, 0.002); end
  def test_outputs_energy_flows_x508; assert_in_epsilon(2.5985598637475267, worksheet.outputs_energy_flows_x508, 0.002); end
  def test_outputs_energy_flows_y508; assert_in_epsilon(2.654856075356425, worksheet.outputs_energy_flows_y508, 0.002); end
  def test_outputs_energy_flows_z508; assert_in_epsilon(2.7138967669083853, worksheet.outputs_energy_flows_z508, 0.002); end
  def test_outputs_energy_flows_aa508; assert_in_epsilon(2.779571820140461, worksheet.outputs_energy_flows_aa508, 0.002); end
  def test_outputs_energy_flows_ab508; assert_in_epsilon(2.8362404265654657, worksheet.outputs_energy_flows_ab508, 0.002); end
  def test_outputs_energy_flows_ac508; assert_in_epsilon(2.8671947046956907, worksheet.outputs_energy_flows_ac508, 0.002); end
  def test_outputs_energy_flows_ad508; assert_in_epsilon(2.880657221303495, worksheet.outputs_energy_flows_ad508, 0.002); end
  def test_outputs_energy_flows_d510; assert_equal("Heat network", worksheet.outputs_energy_flows_d510); end
  def test_outputs_energy_flows_f510; assert_equal("Other", worksheet.outputs_energy_flows_f510); end
  def test_outputs_energy_flows_i510; assert_equal("G.H.01", worksheet.outputs_energy_flows_i510); end
  def test_outputs_energy_flows_j510; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j510); end
  def test_outputs_energy_flows_n510; assert_equal("Arable.food", worksheet.outputs_energy_flows_n510); end
  def test_outputs_energy_flows_o510; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o510); end
  def test_outputs_energy_flows_v510; assert_in_delta(0.45902568141552363, worksheet.outputs_energy_flows_v510, 0.002); end
  def test_outputs_energy_flows_w510; assert_in_delta(0.4710188315372775, worksheet.outputs_energy_flows_w510, 0.002); end
  def test_outputs_energy_flows_x510; assert_in_delta(0.48291820476723957, worksheet.outputs_energy_flows_x510, 0.002); end
  def test_outputs_energy_flows_y510; assert_in_delta(0.4933803325883623, worksheet.outputs_energy_flows_y510, 0.002); end
  def test_outputs_energy_flows_z510; assert_in_delta(0.5043524965050982, worksheet.outputs_energy_flows_z510, 0.002); end
  def test_outputs_energy_flows_aa510; assert_in_delta(0.5165575948933601, worksheet.outputs_energy_flows_aa510, 0.002); end
  def test_outputs_energy_flows_ab510; assert_in_delta(0.5270889288307503, worksheet.outputs_energy_flows_ab510, 0.002); end
  def test_outputs_energy_flows_ac510; assert_in_delta(0.5328414937930046, worksheet.outputs_energy_flows_ac510, 0.002); end
  def test_outputs_energy_flows_ad510; assert_in_delta(0.5353433774103841, worksheet.outputs_energy_flows_ad510, 0.002); end
  def test_outputs_energy_flows_d512; assert_equal("Solid", worksheet.outputs_energy_flows_d512); end
  def test_outputs_energy_flows_f512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f512); end
  def test_outputs_energy_flows_i512; assert_equal("G.C.01", worksheet.outputs_energy_flows_i512); end
  def test_outputs_energy_flows_j512; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j512); end
  def test_outputs_energy_flows_k512; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k512); end
  def test_outputs_energy_flows_l512; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l512); end
  def test_outputs_energy_flows_q512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q512); end
  def test_outputs_energy_flows_v512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v512||0), 0.002); end
  def test_outputs_energy_flows_w512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w512||0), 0.002); end
  def test_outputs_energy_flows_x512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x512||0), 0.002); end
  def test_outputs_energy_flows_y512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y512||0), 0.002); end
  def test_outputs_energy_flows_z512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z512||0), 0.002); end
  def test_outputs_energy_flows_aa512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa512||0), 0.002); end
  def test_outputs_energy_flows_ab512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab512||0), 0.002); end
  def test_outputs_energy_flows_ac512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac512||0), 0.002); end
  def test_outputs_energy_flows_ad512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad512||0), 0.002); end
  def test_outputs_energy_flows_d514; assert_equal("Liquid", worksheet.outputs_energy_flows_d514); end
  def test_outputs_energy_flows_f514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f514); end
  def test_outputs_energy_flows_i514; assert_equal("G.C.02", worksheet.outputs_energy_flows_i514); end
  def test_outputs_energy_flows_j514; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j514); end
  def test_outputs_energy_flows_q514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q514); end
  def test_outputs_energy_flows_v514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v514||0), 0.002); end
  def test_outputs_energy_flows_w514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w514||0), 0.002); end
  def test_outputs_energy_flows_x514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x514||0), 0.002); end
  def test_outputs_energy_flows_y514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y514||0), 0.002); end
  def test_outputs_energy_flows_z514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z514||0), 0.002); end
  def test_outputs_energy_flows_aa514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa514||0), 0.002); end
  def test_outputs_energy_flows_ab514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab514||0), 0.002); end
  def test_outputs_energy_flows_ac514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac514||0), 0.002); end
  def test_outputs_energy_flows_ad514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad514||0), 0.002); end
  def test_outputs_energy_flows_d516; assert_equal("Gas", worksheet.outputs_energy_flows_d516); end
  def test_outputs_energy_flows_f516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f516); end
  def test_outputs_energy_flows_i516; assert_equal("G.C.03", worksheet.outputs_energy_flows_i516); end
  def test_outputs_energy_flows_j516; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j516); end
  def test_outputs_energy_flows_q516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q516); end
  def test_outputs_energy_flows_v516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v516||0), 0.002); end
  def test_outputs_energy_flows_w516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w516||0), 0.002); end
  def test_outputs_energy_flows_x516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x516||0), 0.002); end
  def test_outputs_energy_flows_y516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y516||0), 0.002); end
  def test_outputs_energy_flows_z516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z516||0), 0.002); end
  def test_outputs_energy_flows_aa516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa516||0), 0.002); end
  def test_outputs_energy_flows_ab516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab516||0), 0.002); end
  def test_outputs_energy_flows_ac516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac516||0), 0.002); end
  def test_outputs_energy_flows_ad516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad516||0), 0.002); end
  def test_outputs_energy_flows_d518; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d518); end
  def test_outputs_energy_flows_f518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f518); end
  def test_outputs_energy_flows_i518; assert_equal("G.E.01", worksheet.outputs_energy_flows_i518); end
  def test_outputs_energy_flows_j518; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j518); end
  def test_outputs_energy_flows_q518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q518); end
  def test_outputs_energy_flows_v518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v518||0), 0.002); end
  def test_outputs_energy_flows_w518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w518||0), 0.002); end
  def test_outputs_energy_flows_x518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x518||0), 0.002); end
  def test_outputs_energy_flows_y518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y518||0), 0.002); end
  def test_outputs_energy_flows_z518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z518||0), 0.002); end
  def test_outputs_energy_flows_aa518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa518||0), 0.002); end
  def test_outputs_energy_flows_ab518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab518||0), 0.002); end
  def test_outputs_energy_flows_ac518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac518||0), 0.002); end
  def test_outputs_energy_flows_ad518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad518||0), 0.002); end
  def test_outputs_energy_flows_d520; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d520); end
  def test_outputs_energy_flows_f520; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f520); end
  def test_outputs_energy_flows_i520; assert_equal("G.L.02", worksheet.outputs_energy_flows_i520); end
  def test_outputs_energy_flows_j520; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j520); end
  def test_outputs_energy_flows_o520; assert_equal("electricity.network", worksheet.outputs_energy_flows_o520); end
  def test_outputs_energy_flows_p520; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_p520); end
  def test_outputs_energy_flows_v520; assert_in_epsilon(6.091573034196048, worksheet.outputs_energy_flows_v520, 0.002); end
  def test_outputs_energy_flows_w520; assert_in_epsilon(6.726775148638785, worksheet.outputs_energy_flows_w520, 0.002); end
  def test_outputs_energy_flows_x520; assert_in_epsilon(7.523772895839505, worksheet.outputs_energy_flows_x520, 0.002); end
  def test_outputs_energy_flows_y520; assert_in_epsilon(8.361794011501393, worksheet.outputs_energy_flows_y520, 0.002); end
  def test_outputs_energy_flows_z520; assert_in_epsilon(9.20931640070908, worksheet.outputs_energy_flows_z520, 0.002); end
  def test_outputs_energy_flows_aa520; assert_in_epsilon(10.04402922762829, worksheet.outputs_energy_flows_aa520, 0.002); end
  def test_outputs_energy_flows_ab520; assert_in_epsilon(10.887865224193456, worksheet.outputs_energy_flows_ab520, 0.002); end
  def test_outputs_energy_flows_ac520; assert_in_epsilon(11.713857843906641, worksheet.outputs_energy_flows_ac520, 0.002); end
  def test_outputs_energy_flows_ad520; assert_in_epsilon(12.54558967587362, worksheet.outputs_energy_flows_ad520, 0.002); end
  def test_outputs_summary_graphs_c47; assert_equal("WARNING: Cumulative CO2 emissions by 2100 exceed 3010 GtCO2, the amount associated with a 50% chance of keeping global mean temperature increase below 2C by 2100.  Reduce emissions by increasing effort across more levers.", worksheet.outputs_summary_graphs_c47); end
  def test_outputs_summary_graphs_c56; assert_equal("No warning on bio crop oversupply ", worksheet.outputs_summary_graphs_c56); end
  def test_outputs_summary_graphs_c51; assert_equal("No warning on electricity oversupply", worksheet.outputs_summary_graphs_c51); end
  def test_outputs_summary_graphs_c59; assert_equal("No warning on CO2 concentrations being below pre-industrial levels", worksheet.outputs_summary_graphs_c59); end
  def test_outputs_summary_graphs_c52; assert_equal("No warning on coal consumption", worksheet.outputs_summary_graphs_c52); end
  def test_outputs_summary_graphs_c60; assert_equal("No warning on crop yield choice and consistency with midpoint temperature rise", worksheet.outputs_summary_graphs_c60); end
  def test_outputs_summary_graphs_c58; assert_equal("No warning on forest area change", worksheet.outputs_summary_graphs_c58); end
  def test_outputs_summary_graphs_c50; assert_equal("WARNING – Your pathway increases the world’s dependence on fossil fuels from 2011 to 2050. This could mean greater import dependence for some countries and greater exposure to potentially volatile fossil fuel prices. Click on the energy tab to see more detail on the use of coal, oil and gas in your pathway", worksheet.outputs_summary_graphs_c50); end
  def test_outputs_summary_graphs_c54; assert_equal("No warning on gas consumption", worksheet.outputs_summary_graphs_c54); end
  def test_outputs_summary_graphs_c48; assert_equal("No warning on GGR", worksheet.outputs_summary_graphs_c48); end
  def test_outputs_summary_graphs_c57; assert_equal("No warning on land use", worksheet.outputs_summary_graphs_c57); end
  def test_outputs_summary_graphs_c49; assert_equal("No warning on level 4s", worksheet.outputs_summary_graphs_c49); end
  def test_outputs_summary_graphs_c53; assert_equal("No warning on oil consumption", worksheet.outputs_summary_graphs_c53); end
  def test_outputs_summary_graphs_c55; assert_equal("No warning on uranium consumption", worksheet.outputs_summary_graphs_c55); end
end
