# coding: utf-8
# Test for global_2050_model
require 'minitest/autorun'
require_relative '../lib/global_2050_model'

class TestGlobal2050Model < Minitest::Unit::TestCase
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Global2050Model.new end
  def test_user_inputs_e7; assert_in_epsilon(2.0, worksheet.user_inputs_e7, 0.002); end
  def test_user_inputs_e8; assert_in_epsilon(2.0, worksheet.user_inputs_e8, 0.002); end
  def test_user_inputs_e9; assert_in_epsilon(2.3, worksheet.user_inputs_e9, 0.002); end
  def test_user_inputs_e10; assert_in_epsilon(1.8, worksheet.user_inputs_e10, 0.002); end
  def test_user_inputs_e11; assert_in_epsilon(2.2, worksheet.user_inputs_e11, 0.002); end
  def test_user_inputs_e12; assert_in_epsilon(1.4, worksheet.user_inputs_e12, 0.002); end
  def test_user_inputs_e13; assert_in_epsilon(2.4, worksheet.user_inputs_e13, 0.002); end
  def test_user_inputs_e14; assert_in_epsilon(1.6, worksheet.user_inputs_e14, 0.002); end
  def test_user_inputs_e15; assert_in_delta(1.0, worksheet.user_inputs_e15, 0.002); end
  def test_user_inputs_e16; assert_in_epsilon(2.1, worksheet.user_inputs_e16, 0.002); end
  def test_user_inputs_e17; assert_in_epsilon(1.4, worksheet.user_inputs_e17, 0.002); end
  def test_user_inputs_e18; assert_in_epsilon(2.1, worksheet.user_inputs_e18, 0.002); end
  def test_user_inputs_e19; assert_in_epsilon(1.1, worksheet.user_inputs_e19, 0.002); end
  def test_user_inputs_e20; assert_in_epsilon(1.1, worksheet.user_inputs_e20, 0.002); end
  def test_user_inputs_e21; assert_in_epsilon(1.2, worksheet.user_inputs_e21, 0.002); end
  def test_user_inputs_e22; assert_in_delta(1.0, worksheet.user_inputs_e22, 0.002); end
  def test_user_inputs_e23; assert_in_epsilon(1.3, worksheet.user_inputs_e23, 0.002); end
  def test_user_inputs_e24; assert_in_epsilon(1.9, worksheet.user_inputs_e24, 0.002); end
  def test_user_inputs_e25; assert_in_delta(1.0, worksheet.user_inputs_e25, 0.002); end
  def test_user_inputs_e26; assert_in_epsilon(2.0, worksheet.user_inputs_e26, 0.002); end
  def test_user_inputs_e27; assert_in_epsilon(1.7, worksheet.user_inputs_e27, 0.002); end
  def test_user_inputs_e28; assert_in_delta(1.0, worksheet.user_inputs_e28, 0.002); end
  def test_user_inputs_e29; assert_in_epsilon(2.0, worksheet.user_inputs_e29, 0.002); end
  def test_user_inputs_e30; assert_in_epsilon(2.0, worksheet.user_inputs_e30, 0.002); end
  def test_user_inputs_e31; assert_in_delta(1.0, worksheet.user_inputs_e31, 0.002); end
  def test_user_inputs_e32; assert_in_epsilon(1.7, worksheet.user_inputs_e32, 0.002); end
  def test_user_inputs_e33; assert_in_epsilon(1.2, worksheet.user_inputs_e33, 0.002); end
  def test_user_inputs_e34; assert_in_epsilon(1.9, worksheet.user_inputs_e34, 0.002); end
  def test_user_inputs_e35; assert_in_epsilon(1.3, worksheet.user_inputs_e35, 0.002); end
  def test_user_inputs_e36; assert_in_epsilon(1.2, worksheet.user_inputs_e36, 0.002); end
  def test_user_inputs_e37; assert_in_epsilon(1.4, worksheet.user_inputs_e37, 0.002); end
  def test_user_inputs_e38; assert_in_epsilon(1.7, worksheet.user_inputs_e38, 0.002); end
  def test_user_inputs_e39; assert_in_epsilon(2.0, worksheet.user_inputs_e39, 0.002); end
  def test_user_inputs_e40; assert_in_epsilon(2.0, worksheet.user_inputs_e40, 0.002); end
  def test_user_inputs_e41; assert_in_epsilon(2.0, worksheet.user_inputs_e41, 0.002); end
  def test_user_inputs_e42; assert_in_epsilon(1.9, worksheet.user_inputs_e42, 0.002); end
  def test_user_inputs_e43; assert_in_epsilon(2.7, worksheet.user_inputs_e43, 0.002); end
  def test_user_inputs_e44; assert_in_epsilon(2.0, worksheet.user_inputs_e44, 0.002); end
  def test_user_inputs_e45; assert_in_epsilon(2.7, worksheet.user_inputs_e45, 0.002); end
  def test_user_inputs_e46; assert_in_epsilon(2.9, worksheet.user_inputs_e46, 0.002); end
  def test_user_inputs_e47; assert_in_epsilon(2.5, worksheet.user_inputs_e47, 0.002); end
  def test_user_inputs_e48; assert_in_epsilon(2.7, worksheet.user_inputs_e48, 0.002); end
  def test_user_inputs_e49; assert_in_delta(1.0, worksheet.user_inputs_e49, 0.002); end
  def test_user_inputs_e50; assert_in_delta(1.0, worksheet.user_inputs_e50, 0.002); end
  def test_user_inputs_e51; assert_in_delta(1.0, worksheet.user_inputs_e51, 0.002); end
  def test_user_inputs_e52; assert_in_delta(1.0, worksheet.user_inputs_e52, 0.002); end
  def test_user_inputs_e53; assert_in_delta(1.0, worksheet.user_inputs_e53, 0.002); end
  def test_user_inputs_e54; assert_in_delta(1.0, worksheet.user_inputs_e54, 0.002); end
  def test_user_inputs_e55; assert_in_epsilon(2.5, worksheet.user_inputs_e55, 0.002); end
  def test_user_inputs_e56; assert_in_epsilon(2.0, worksheet.user_inputs_e56, 0.002); end
  def test_user_inputs_e57; assert_equal("B", worksheet.user_inputs_e57); end
  def test_user_inputs_e58; assert_equal("US", worksheet.user_inputs_e58); end
  def test_user_inputs_e59; assert_equal("Point", worksheet.user_inputs_e59); end
  def test_user_inputs_e60; assert_equal("Point", worksheet.user_inputs_e60); end
  def test_user_inputs_e61; assert_equal("Point", worksheet.user_inputs_e61); end
  def test_user_inputs_e62; assert_equal("Point", worksheet.user_inputs_e62); end
  def test_user_inputs_e63; assert_equal("Point", worksheet.user_inputs_e63); end
  def test_user_inputs_e64; assert_equal("Point", worksheet.user_inputs_e64); end
  def test_user_inputs_e65; assert_equal("Point", worksheet.user_inputs_e65); end
  def test_lever_graphs_c3063; assert_equal("1975", worksheet.lever_graphs_c3063); end
  def test_lever_graphs_d3063; assert_equal("1980", worksheet.lever_graphs_d3063); end
  def test_lever_graphs_e3063; assert_equal("1985", worksheet.lever_graphs_e3063); end
  def test_lever_graphs_f3063; assert_equal("1990", worksheet.lever_graphs_f3063); end
  def test_lever_graphs_g3063; assert_equal("1995", worksheet.lever_graphs_g3063); end
  def test_lever_graphs_h3063; assert_equal("2000", worksheet.lever_graphs_h3063); end
  def test_lever_graphs_i3063; assert_equal("2005", worksheet.lever_graphs_i3063); end
  def test_lever_graphs_j3063; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3063, 0.002); end
  def test_lever_graphs_k3063; assert_equal("2011", worksheet.lever_graphs_k3063); end
  def test_lever_graphs_l3063; assert_equal("2015", worksheet.lever_graphs_l3063); end
  def test_lever_graphs_m3063; assert_equal("2020", worksheet.lever_graphs_m3063); end
  def test_lever_graphs_n3063; assert_equal("2025", worksheet.lever_graphs_n3063); end
  def test_lever_graphs_o3063; assert_equal("2030", worksheet.lever_graphs_o3063); end
  def test_lever_graphs_p3063; assert_equal("2035", worksheet.lever_graphs_p3063); end
  def test_lever_graphs_q3063; assert_equal("2040", worksheet.lever_graphs_q3063); end
  def test_lever_graphs_r3063; assert_equal("2045", worksheet.lever_graphs_r3063); end
  def test_lever_graphs_s3063; assert_equal("2050", worksheet.lever_graphs_s3063); end
  def test_lever_graphs_b3064; assert_equal("Historic data", worksheet.lever_graphs_b3064); end
  def test_lever_graphs_b3065; assert_equal("Developed Countries", worksheet.lever_graphs_b3065); end
  def test_lever_graphs_k3065; assert_in_delta(0.124, worksheet.lever_graphs_k3065, 0.002); end
  def test_lever_graphs_b3066; assert_equal("Developing Countries", worksheet.lever_graphs_b3066); end
  def test_lever_graphs_k3066; assert_in_delta(0.006, worksheet.lever_graphs_k3066, 0.002); end
  def test_lever_graphs_b3067; assert_in_delta(1.0, worksheet.lever_graphs_b3067, 0.002); end
  def test_lever_graphs_k3067; assert_in_delta(0.06, worksheet.lever_graphs_k3067, 0.002); end
  def test_lever_graphs_l3067; assert_in_delta(0.06, worksheet.lever_graphs_l3067, 0.002); end
  def test_lever_graphs_m3067; assert_in_delta(0.05142857142857143, worksheet.lever_graphs_m3067, 0.002); end
  def test_lever_graphs_n3067; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_n3067, 0.002); end
  def test_lever_graphs_o3067; assert_in_delta(0.03428571428571429, worksheet.lever_graphs_o3067, 0.002); end
  def test_lever_graphs_p3067; assert_in_delta(0.025714285714285717, worksheet.lever_graphs_p3067, 0.002); end
  def test_lever_graphs_q3067; assert_in_delta(0.01714285714285714, worksheet.lever_graphs_q3067, 0.002); end
  def test_lever_graphs_r3067; assert_in_delta(0.008571428571428577, worksheet.lever_graphs_r3067, 0.002); end
  def test_lever_graphs_s3067; assert_in_delta(0.0, (worksheet.lever_graphs_s3067||0), 0.002); end
  def test_lever_graphs_b3068; assert_in_epsilon(2.0, worksheet.lever_graphs_b3068, 0.002); end
  def test_lever_graphs_k3068; assert_in_delta(0.06, worksheet.lever_graphs_k3068, 0.002); end
  def test_lever_graphs_l3068; assert_in_delta(0.06, worksheet.lever_graphs_l3068, 0.002); end
  def test_lever_graphs_m3068; assert_in_delta(0.06, worksheet.lever_graphs_m3068, 0.002); end
  def test_lever_graphs_n3068; assert_in_delta(0.06, worksheet.lever_graphs_n3068, 0.002); end
  def test_lever_graphs_o3068; assert_in_delta(0.06, worksheet.lever_graphs_o3068, 0.002); end
  def test_lever_graphs_p3068; assert_in_delta(0.06, worksheet.lever_graphs_p3068, 0.002); end
  def test_lever_graphs_q3068; assert_in_delta(0.06, worksheet.lever_graphs_q3068, 0.002); end
  def test_lever_graphs_r3068; assert_in_delta(0.06, worksheet.lever_graphs_r3068, 0.002); end
  def test_lever_graphs_s3068; assert_in_delta(0.06, worksheet.lever_graphs_s3068, 0.002); end
  def test_lever_graphs_b3069; assert_in_epsilon(3.0, worksheet.lever_graphs_b3069, 0.002); end
  def test_lever_graphs_k3069; assert_in_delta(0.06, worksheet.lever_graphs_k3069, 0.002); end
  def test_lever_graphs_l3069; assert_in_delta(0.06, worksheet.lever_graphs_l3069, 0.002); end
  def test_lever_graphs_m3069; assert_in_delta(0.07285714285714286, worksheet.lever_graphs_m3069, 0.002); end
  def test_lever_graphs_n3069; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_n3069, 0.002); end
  def test_lever_graphs_o3069; assert_in_delta(0.09857142857142856, worksheet.lever_graphs_o3069, 0.002); end
  def test_lever_graphs_p3069; assert_in_delta(0.11142857142857142, worksheet.lever_graphs_p3069, 0.002); end
  def test_lever_graphs_q3069; assert_in_delta(0.12428571428571428, worksheet.lever_graphs_q3069, 0.002); end
  def test_lever_graphs_r3069; assert_in_delta(0.13714285714285712, worksheet.lever_graphs_r3069, 0.002); end
  def test_lever_graphs_s3069; assert_in_delta(0.15, worksheet.lever_graphs_s3069, 0.002); end
  def test_lever_graphs_b3070; assert_in_epsilon(4.0, worksheet.lever_graphs_b3070, 0.002); end
  def test_lever_graphs_k3070; assert_in_delta(0.06, worksheet.lever_graphs_k3070, 0.002); end
  def test_lever_graphs_l3070; assert_in_delta(0.06, worksheet.lever_graphs_l3070, 0.002); end
  def test_lever_graphs_m3070; assert_in_delta(0.09428571428571428, worksheet.lever_graphs_m3070, 0.002); end
  def test_lever_graphs_n3070; assert_in_delta(0.12857142857142856, worksheet.lever_graphs_n3070, 0.002); end
  def test_lever_graphs_o3070; assert_in_delta(0.16285714285714284, worksheet.lever_graphs_o3070, 0.002); end
  def test_lever_graphs_p3070; assert_in_delta(0.19714285714285712, worksheet.lever_graphs_p3070, 0.002); end
  def test_lever_graphs_q3070; assert_in_delta(0.23142857142857143, worksheet.lever_graphs_q3070, 0.002); end
  def test_lever_graphs_r3070; assert_in_delta(0.2657142857142857, worksheet.lever_graphs_r3070, 0.002); end
  def test_lever_graphs_s3070; assert_in_delta(0.3, worksheet.lever_graphs_s3070, 0.002); end
  def test_lever_graphs_c3075; assert_equal("1975", worksheet.lever_graphs_c3075); end
  def test_lever_graphs_d3075; assert_equal("1980", worksheet.lever_graphs_d3075); end
  def test_lever_graphs_e3075; assert_equal("1985", worksheet.lever_graphs_e3075); end
  def test_lever_graphs_f3075; assert_equal("1990", worksheet.lever_graphs_f3075); end
  def test_lever_graphs_g3075; assert_equal("1995", worksheet.lever_graphs_g3075); end
  def test_lever_graphs_h3075; assert_equal("2000", worksheet.lever_graphs_h3075); end
  def test_lever_graphs_i3075; assert_equal("2005", worksheet.lever_graphs_i3075); end
  def test_lever_graphs_j3075; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3075, 0.002); end
  def test_lever_graphs_k3075; assert_equal("2011", worksheet.lever_graphs_k3075); end
  def test_lever_graphs_l3075; assert_equal("2015", worksheet.lever_graphs_l3075); end
  def test_lever_graphs_m3075; assert_equal("2020", worksheet.lever_graphs_m3075); end
  def test_lever_graphs_n3075; assert_equal("2025", worksheet.lever_graphs_n3075); end
  def test_lever_graphs_o3075; assert_equal("2030", worksheet.lever_graphs_o3075); end
  def test_lever_graphs_p3075; assert_equal("2035", worksheet.lever_graphs_p3075); end
  def test_lever_graphs_q3075; assert_equal("2040", worksheet.lever_graphs_q3075); end
  def test_lever_graphs_r3075; assert_equal("2045", worksheet.lever_graphs_r3075); end
  def test_lever_graphs_s3075; assert_equal("2050", worksheet.lever_graphs_s3075); end
  def test_lever_graphs_b3076; assert_equal("Historic data", worksheet.lever_graphs_b3076); end
  def test_lever_graphs_b3077; assert_equal("Developed Countries", worksheet.lever_graphs_b3077); end
  def test_lever_graphs_k3077; assert_in_delta(0.0, (worksheet.lever_graphs_k3077||0), 0.002); end
  def test_lever_graphs_b3078; assert_equal("Developing Countries", worksheet.lever_graphs_b3078); end
  def test_lever_graphs_k3078; assert_in_delta(0.012, worksheet.lever_graphs_k3078, 0.002); end
  def test_lever_graphs_b3079; assert_in_delta(1.0, worksheet.lever_graphs_b3079, 0.002); end
  def test_lever_graphs_k3079; assert_in_delta(0.01, worksheet.lever_graphs_k3079, 0.002); end
  def test_lever_graphs_l3079; assert_in_delta(0.01, worksheet.lever_graphs_l3079, 0.002); end
  def test_lever_graphs_m3079; assert_in_delta(0.008571428571428572, worksheet.lever_graphs_m3079, 0.002); end
  def test_lever_graphs_n3079; assert_in_delta(0.0071428571428571435, worksheet.lever_graphs_n3079, 0.002); end
  def test_lever_graphs_o3079; assert_in_delta(0.005714285714285714, worksheet.lever_graphs_o3079, 0.002); end
  def test_lever_graphs_p3079; assert_in_delta(0.004285714285714286, worksheet.lever_graphs_p3079, 0.002); end
  def test_lever_graphs_q3079; assert_in_delta(0.0028571428571428567, worksheet.lever_graphs_q3079, 0.002); end
  def test_lever_graphs_r3079; assert_in_delta(0.0014285714285714284, worksheet.lever_graphs_r3079, 0.002); end
  def test_lever_graphs_s3079; assert_in_delta(0.0, (worksheet.lever_graphs_s3079||0), 0.002); end
  def test_lever_graphs_b3080; assert_in_epsilon(2.0, worksheet.lever_graphs_b3080, 0.002); end
  def test_lever_graphs_k3080; assert_in_delta(0.01, worksheet.lever_graphs_k3080, 0.002); end
  def test_lever_graphs_l3080; assert_in_delta(0.01, worksheet.lever_graphs_l3080, 0.002); end
  def test_lever_graphs_m3080; assert_in_delta(0.01, worksheet.lever_graphs_m3080, 0.002); end
  def test_lever_graphs_n3080; assert_in_delta(0.01, worksheet.lever_graphs_n3080, 0.002); end
  def test_lever_graphs_o3080; assert_in_delta(0.01, worksheet.lever_graphs_o3080, 0.002); end
  def test_lever_graphs_p3080; assert_in_delta(0.01, worksheet.lever_graphs_p3080, 0.002); end
  def test_lever_graphs_q3080; assert_in_delta(0.01, worksheet.lever_graphs_q3080, 0.002); end
  def test_lever_graphs_r3080; assert_in_delta(0.01, worksheet.lever_graphs_r3080, 0.002); end
  def test_lever_graphs_s3080; assert_in_delta(0.01, worksheet.lever_graphs_s3080, 0.002); end
  def test_lever_graphs_b3081; assert_in_epsilon(3.0, worksheet.lever_graphs_b3081, 0.002); end
  def test_lever_graphs_k3081; assert_in_delta(0.01, worksheet.lever_graphs_k3081, 0.002); end
  def test_lever_graphs_l3081; assert_in_delta(0.01, worksheet.lever_graphs_l3081, 0.002); end
  def test_lever_graphs_m3081; assert_in_delta(0.015714285714285715, worksheet.lever_graphs_m3081, 0.002); end
  def test_lever_graphs_n3081; assert_in_delta(0.02142857142857143, worksheet.lever_graphs_n3081, 0.002); end
  def test_lever_graphs_o3081; assert_in_delta(0.027142857142857142, worksheet.lever_graphs_o3081, 0.002); end
  def test_lever_graphs_p3081; assert_in_delta(0.032857142857142856, worksheet.lever_graphs_p3081, 0.002); end
  def test_lever_graphs_q3081; assert_in_delta(0.038571428571428576, worksheet.lever_graphs_q3081, 0.002); end
  def test_lever_graphs_r3081; assert_in_delta(0.04428571428571429, worksheet.lever_graphs_r3081, 0.002); end
  def test_lever_graphs_s3081; assert_in_delta(0.05, worksheet.lever_graphs_s3081, 0.002); end
  def test_lever_graphs_b3082; assert_in_epsilon(4.0, worksheet.lever_graphs_b3082, 0.002); end
  def test_lever_graphs_k3082; assert_in_delta(0.01, worksheet.lever_graphs_k3082, 0.002); end
  def test_lever_graphs_l3082; assert_in_delta(0.01, worksheet.lever_graphs_l3082, 0.002); end
  def test_lever_graphs_m3082; assert_in_delta(0.02285714285714286, worksheet.lever_graphs_m3082, 0.002); end
  def test_lever_graphs_n3082; assert_in_delta(0.03571428571428572, worksheet.lever_graphs_n3082, 0.002); end
  def test_lever_graphs_o3082; assert_in_delta(0.04857142857142858, worksheet.lever_graphs_o3082, 0.002); end
  def test_lever_graphs_p3082; assert_in_delta(0.06142857142857144, worksheet.lever_graphs_p3082, 0.002); end
  def test_lever_graphs_q3082; assert_in_delta(0.07428571428571429, worksheet.lever_graphs_q3082, 0.002); end
  def test_lever_graphs_r3082; assert_in_delta(0.08714285714285715, worksheet.lever_graphs_r3082, 0.002); end
  def test_lever_graphs_s3082; assert_in_delta(0.1, worksheet.lever_graphs_s3082, 0.002); end
  def test_lever_graphs_c3146; assert_equal("1975", worksheet.lever_graphs_c3146); end
  def test_lever_graphs_d3146; assert_equal("1980", worksheet.lever_graphs_d3146); end
  def test_lever_graphs_e3146; assert_equal("1985", worksheet.lever_graphs_e3146); end
  def test_lever_graphs_f3146; assert_equal("1990", worksheet.lever_graphs_f3146); end
  def test_lever_graphs_g3146; assert_equal("1995", worksheet.lever_graphs_g3146); end
  def test_lever_graphs_h3146; assert_equal("2000", worksheet.lever_graphs_h3146); end
  def test_lever_graphs_i3146; assert_equal("2005", worksheet.lever_graphs_i3146); end
  def test_lever_graphs_j3146; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3146, 0.002); end
  def test_lever_graphs_k3146; assert_equal("2011", worksheet.lever_graphs_k3146); end
  def test_lever_graphs_l3146; assert_equal("2015", worksheet.lever_graphs_l3146); end
  def test_lever_graphs_m3146; assert_equal("2020", worksheet.lever_graphs_m3146); end
  def test_lever_graphs_n3146; assert_equal("2025", worksheet.lever_graphs_n3146); end
  def test_lever_graphs_o3146; assert_equal("2030", worksheet.lever_graphs_o3146); end
  def test_lever_graphs_p3146; assert_equal("2035", worksheet.lever_graphs_p3146); end
  def test_lever_graphs_q3146; assert_equal("2040", worksheet.lever_graphs_q3146); end
  def test_lever_graphs_r3146; assert_equal("2045", worksheet.lever_graphs_r3146); end
  def test_lever_graphs_s3146; assert_equal("2050", worksheet.lever_graphs_s3146); end
  def test_lever_graphs_b3147; assert_equal("Historic data", worksheet.lever_graphs_b3147); end
  def test_lever_graphs_b3148; assert_in_delta(1.0, worksheet.lever_graphs_b3148, 0.002); end
  def test_lever_graphs_k3148; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3148, 0.002); end
  def test_lever_graphs_l3148; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3148, 0.002); end
  def test_lever_graphs_m3148; assert_in_delta(0.6655807580554837, worksheet.lever_graphs_m3148, 0.002); end
  def test_lever_graphs_n3148; assert_in_delta(0.671021472698989, worksheet.lever_graphs_n3148, 0.002); end
  def test_lever_graphs_o3148; assert_in_delta(0.6764621873424942, worksheet.lever_graphs_o3148, 0.002); end
  def test_lever_graphs_p3148; assert_in_delta(0.6819029019859997, worksheet.lever_graphs_p3148, 0.002); end
  def test_lever_graphs_q3148; assert_in_delta(0.687343616629505, worksheet.lever_graphs_q3148, 0.002); end
  def test_lever_graphs_r3148; assert_in_delta(0.6927843312730102, worksheet.lever_graphs_r3148, 0.002); end
  def test_lever_graphs_s3148; assert_in_delta(0.6982250459165157, worksheet.lever_graphs_s3148, 0.002); end
  def test_lever_graphs_b3149; assert_in_epsilon(2.0, worksheet.lever_graphs_b3149, 0.002); end
  def test_lever_graphs_k3149; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3149, 0.002); end
  def test_lever_graphs_l3149; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3149, 0.002); end
  def test_lever_graphs_m3149; assert_in_delta(0.6837164735338348, worksheet.lever_graphs_m3149, 0.002); end
  def test_lever_graphs_n3149; assert_in_delta(0.7072929036556911, worksheet.lever_graphs_n3149, 0.002); end
  def test_lever_graphs_o3149; assert_in_delta(0.7308693337775475, worksheet.lever_graphs_o3149, 0.002); end
  def test_lever_graphs_p3149; assert_in_delta(0.7544457638994039, worksheet.lever_graphs_p3149, 0.002); end
  def test_lever_graphs_q3149; assert_in_delta(0.7780221940212603, worksheet.lever_graphs_q3149, 0.002); end
  def test_lever_graphs_r3149; assert_in_delta(0.8015986241431166, worksheet.lever_graphs_r3149, 0.002); end
  def test_lever_graphs_s3149; assert_in_delta(0.825175054264973, worksheet.lever_graphs_s3149, 0.002); end
  def test_lever_graphs_b3150; assert_in_epsilon(3.0, worksheet.lever_graphs_b3150, 0.002); end
  def test_lever_graphs_k3150; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3150, 0.002); end
  def test_lever_graphs_l3150; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3150, 0.002); end
  def test_lever_graphs_m3150; assert_in_delta(0.7018521890121857, worksheet.lever_graphs_m3150, 0.002); end
  def test_lever_graphs_n3150; assert_in_delta(0.7435643346123932, worksheet.lever_graphs_n3150, 0.002); end
  def test_lever_graphs_o3150; assert_in_delta(0.7852764802126007, worksheet.lever_graphs_o3150, 0.002); end
  def test_lever_graphs_p3150; assert_in_delta(0.8269886258128081, worksheet.lever_graphs_p3150, 0.002); end
  def test_lever_graphs_q3150; assert_in_delta(0.8687007714130155, worksheet.lever_graphs_q3150, 0.002); end
  def test_lever_graphs_r3150; assert_in_delta(0.9104129170132228, worksheet.lever_graphs_r3150, 0.002); end
  def test_lever_graphs_s3150; assert_in_delta(0.9521250626134303, worksheet.lever_graphs_s3150, 0.002); end
  def test_lever_graphs_b3151; assert_in_epsilon(4.0, worksheet.lever_graphs_b3151, 0.002); end
  def test_lever_graphs_k3151; assert_in_delta(0.6347500417422869, worksheet.lever_graphs_k3151, 0.002); end
  def test_lever_graphs_l3151; assert_in_delta(0.6601400434119784, worksheet.lever_graphs_l3151, 0.002); end
  def test_lever_graphs_m3151; assert_in_delta(0.7290557622297124, worksheet.lever_graphs_m3151, 0.002); end
  def test_lever_graphs_n3151; assert_in_delta(0.7979714810474463, worksheet.lever_graphs_n3151, 0.002); end
  def test_lever_graphs_o3151; assert_in_delta(0.8668871998651804, worksheet.lever_graphs_o3151, 0.002); end
  def test_lever_graphs_p3151; assert_in_delta(0.9358029186829143, worksheet.lever_graphs_p3151, 0.002); end
  def test_lever_graphs_q3151; assert_in_epsilon(1.0047186375006485, worksheet.lever_graphs_q3151, 0.002); end
  def test_lever_graphs_r3151; assert_in_epsilon(1.0736343563183823, worksheet.lever_graphs_r3151, 0.002); end
  def test_lever_graphs_s3151; assert_in_epsilon(1.1425500751361164, worksheet.lever_graphs_s3151, 0.002); end
  def test_lever_graphs_c3167; assert_equal("1975", worksheet.lever_graphs_c3167); end
  def test_lever_graphs_d3167; assert_equal("1980", worksheet.lever_graphs_d3167); end
  def test_lever_graphs_e3167; assert_equal("1985", worksheet.lever_graphs_e3167); end
  def test_lever_graphs_f3167; assert_equal("1990", worksheet.lever_graphs_f3167); end
  def test_lever_graphs_g3167; assert_equal("1995", worksheet.lever_graphs_g3167); end
  def test_lever_graphs_h3167; assert_equal("2000", worksheet.lever_graphs_h3167); end
  def test_lever_graphs_i3167; assert_equal("2005", worksheet.lever_graphs_i3167); end
  def test_lever_graphs_j3167; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3167, 0.002); end
  def test_lever_graphs_k3167; assert_equal("2011", worksheet.lever_graphs_k3167); end
  def test_lever_graphs_l3167; assert_equal("2015", worksheet.lever_graphs_l3167); end
  def test_lever_graphs_m3167; assert_equal("2020", worksheet.lever_graphs_m3167); end
  def test_lever_graphs_n3167; assert_equal("2025", worksheet.lever_graphs_n3167); end
  def test_lever_graphs_o3167; assert_equal("2030", worksheet.lever_graphs_o3167); end
  def test_lever_graphs_p3167; assert_equal("2035", worksheet.lever_graphs_p3167); end
  def test_lever_graphs_q3167; assert_equal("2040", worksheet.lever_graphs_q3167); end
  def test_lever_graphs_r3167; assert_equal("2045", worksheet.lever_graphs_r3167); end
  def test_lever_graphs_s3167; assert_equal("2050", worksheet.lever_graphs_s3167); end
  def test_lever_graphs_b3168; assert_equal("Historic data", worksheet.lever_graphs_b3168); end
  def test_lever_graphs_b3169; assert_in_delta(1.0, worksheet.lever_graphs_b3169, 0.002); end
  def test_lever_graphs_k3169; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3169, 0.002); end
  def test_lever_graphs_l3169; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3169, 0.002); end
  def test_lever_graphs_m3169; assert_in_epsilon(3.215336229993554, worksheet.lever_graphs_m3169, 0.002); end
  def test_lever_graphs_n3169; assert_in_epsilon(3.24161963241857, worksheet.lever_graphs_n3169, 0.002); end
  def test_lever_graphs_o3169; assert_in_epsilon(3.267903034843585, worksheet.lever_graphs_o3169, 0.002); end
  def test_lever_graphs_p3169; assert_in_epsilon(3.2941864372686007, worksheet.lever_graphs_p3169, 0.002); end
  def test_lever_graphs_q3169; assert_in_epsilon(3.3204698396936165, worksheet.lever_graphs_q3169, 0.002); end
  def test_lever_graphs_r3169; assert_in_epsilon(3.3467532421186315, worksheet.lever_graphs_r3169, 0.002); end
  def test_lever_graphs_s3169; assert_in_epsilon(3.3730366445436473, worksheet.lever_graphs_s3169, 0.002); end
  def test_lever_graphs_b3170; assert_in_epsilon(2.0, worksheet.lever_graphs_b3170, 0.002); end
  def test_lever_graphs_k3170; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3170, 0.002); end
  def test_lever_graphs_l3170; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3170, 0.002); end
  def test_lever_graphs_m3170; assert_in_epsilon(3.302947571410273, worksheet.lever_graphs_m3170, 0.002); end
  def test_lever_graphs_n3170; assert_in_epsilon(3.416842315252006, worksheet.lever_graphs_n3170, 0.002); end
  def test_lever_graphs_o3170; assert_in_epsilon(3.53073705909374, worksheet.lever_graphs_o3170, 0.002); end
  def test_lever_graphs_p3170; assert_in_epsilon(3.644631802935473, worksheet.lever_graphs_p3170, 0.002); end
  def test_lever_graphs_q3170; assert_in_epsilon(3.758526546777207, worksheet.lever_graphs_q3170, 0.002); end
  def test_lever_graphs_r3170; assert_in_epsilon(3.8724212906189406, worksheet.lever_graphs_r3170, 0.002); end
  def test_lever_graphs_s3170; assert_in_epsilon(3.986316034460674, worksheet.lever_graphs_s3170, 0.002); end
  def test_lever_graphs_b3171; assert_in_epsilon(3.0, worksheet.lever_graphs_b3171, 0.002); end
  def test_lever_graphs_k3171; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3171, 0.002); end
  def test_lever_graphs_l3171; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3171, 0.002); end
  def test_lever_graphs_m3171; assert_in_epsilon(3.3905589128269904, worksheet.lever_graphs_m3171, 0.002); end
  def test_lever_graphs_n3171; assert_in_epsilon(3.5920649980854424, worksheet.lever_graphs_n3171, 0.002); end
  def test_lever_graphs_o3171; assert_in_epsilon(3.793571083343894, worksheet.lever_graphs_o3171, 0.002); end
  def test_lever_graphs_p3171; assert_in_epsilon(3.995077168602346, worksheet.lever_graphs_p3171, 0.002); end
  def test_lever_graphs_q3171; assert_in_epsilon(4.196583253860798, worksheet.lever_graphs_q3171, 0.002); end
  def test_lever_graphs_r3171; assert_in_epsilon(4.398089339119249, worksheet.lever_graphs_r3171, 0.002); end
  def test_lever_graphs_s3171; assert_in_epsilon(4.599595424377701, worksheet.lever_graphs_s3171, 0.002); end
  def test_lever_graphs_b3172; assert_in_epsilon(4.0, worksheet.lever_graphs_b3172, 0.002); end
  def test_lever_graphs_k3172; assert_in_epsilon(3.0663969495851338, worksheet.lever_graphs_k3172, 0.002); end
  def test_lever_graphs_l3172; assert_in_epsilon(3.1890528275685393, worksheet.lever_graphs_l3172, 0.002); end
  def test_lever_graphs_m3172; assert_in_epsilon(3.521975924952068, worksheet.lever_graphs_m3172, 0.002); end
  def test_lever_graphs_n3172; assert_in_epsilon(3.8548990223355966, worksheet.lever_graphs_n3172, 0.002); end
  def test_lever_graphs_o3172; assert_in_epsilon(4.187822119719125, worksheet.lever_graphs_o3172, 0.002); end
  def test_lever_graphs_p3172; assert_in_epsilon(4.520745217102654, worksheet.lever_graphs_p3172, 0.002); end
  def test_lever_graphs_q3172; assert_in_epsilon(4.853668314486184, worksheet.lever_graphs_q3172, 0.002); end
  def test_lever_graphs_r3172; assert_in_epsilon(5.186591411869712, worksheet.lever_graphs_r3172, 0.002); end
  def test_lever_graphs_s3172; assert_in_epsilon(5.5195145092532405, worksheet.lever_graphs_s3172, 0.002); end
  def test_lever_graphs_c3136; assert_equal("1975", worksheet.lever_graphs_c3136); end
  def test_lever_graphs_d3136; assert_equal("1980", worksheet.lever_graphs_d3136); end
  def test_lever_graphs_e3136; assert_equal("1985", worksheet.lever_graphs_e3136); end
  def test_lever_graphs_f3136; assert_equal("1990", worksheet.lever_graphs_f3136); end
  def test_lever_graphs_g3136; assert_equal("1995", worksheet.lever_graphs_g3136); end
  def test_lever_graphs_h3136; assert_equal("2000", worksheet.lever_graphs_h3136); end
  def test_lever_graphs_i3136; assert_equal("2005", worksheet.lever_graphs_i3136); end
  def test_lever_graphs_j3136; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3136, 0.002); end
  def test_lever_graphs_k3136; assert_equal("2011", worksheet.lever_graphs_k3136); end
  def test_lever_graphs_l3136; assert_equal("2015", worksheet.lever_graphs_l3136); end
  def test_lever_graphs_m3136; assert_equal("2020", worksheet.lever_graphs_m3136); end
  def test_lever_graphs_n3136; assert_equal("2025", worksheet.lever_graphs_n3136); end
  def test_lever_graphs_o3136; assert_equal("2030", worksheet.lever_graphs_o3136); end
  def test_lever_graphs_p3136; assert_equal("2035", worksheet.lever_graphs_p3136); end
  def test_lever_graphs_q3136; assert_equal("2040", worksheet.lever_graphs_q3136); end
  def test_lever_graphs_r3136; assert_equal("2045", worksheet.lever_graphs_r3136); end
  def test_lever_graphs_s3136; assert_equal("2050", worksheet.lever_graphs_s3136); end
  def test_lever_graphs_b3137; assert_equal("Historic data", worksheet.lever_graphs_b3137); end
  def test_lever_graphs_b3138; assert_in_delta(1.0, worksheet.lever_graphs_b3138, 0.002); end
  def test_lever_graphs_k3138; assert_in_delta(0.0, (worksheet.lever_graphs_k3138||0), 0.002); end
  def test_lever_graphs_l3138; assert_in_delta(0.04, worksheet.lever_graphs_l3138, 0.002); end
  def test_lever_graphs_m3138; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_m3138, 0.002); end
  def test_lever_graphs_n3138; assert_in_delta(0.05714285714285715, worksheet.lever_graphs_n3138, 0.002); end
  def test_lever_graphs_o3138; assert_in_delta(0.06571428571428571, worksheet.lever_graphs_o3138, 0.002); end
  def test_lever_graphs_p3138; assert_in_delta(0.07428571428571429, worksheet.lever_graphs_p3138, 0.002); end
  def test_lever_graphs_q3138; assert_in_delta(0.08285714285714287, worksheet.lever_graphs_q3138, 0.002); end
  def test_lever_graphs_r3138; assert_in_delta(0.09142857142857143, worksheet.lever_graphs_r3138, 0.002); end
  def test_lever_graphs_s3138; assert_in_delta(0.1, worksheet.lever_graphs_s3138, 0.002); end
  def test_lever_graphs_b3139; assert_in_epsilon(2.0, worksheet.lever_graphs_b3139, 0.002); end
  def test_lever_graphs_k3139; assert_in_delta(0.0, (worksheet.lever_graphs_k3139||0), 0.002); end
  def test_lever_graphs_l3139; assert_in_delta(0.04, worksheet.lever_graphs_l3139, 0.002); end
  def test_lever_graphs_m3139; assert_in_delta(0.07714285714285715, worksheet.lever_graphs_m3139, 0.002); end
  def test_lever_graphs_n3139; assert_in_delta(0.1142857142857143, worksheet.lever_graphs_n3139, 0.002); end
  def test_lever_graphs_o3139; assert_in_delta(0.15142857142857144, worksheet.lever_graphs_o3139, 0.002); end
  def test_lever_graphs_p3139; assert_in_delta(0.18857142857142858, worksheet.lever_graphs_p3139, 0.002); end
  def test_lever_graphs_q3139; assert_in_delta(0.22571428571428573, worksheet.lever_graphs_q3139, 0.002); end
  def test_lever_graphs_r3139; assert_in_delta(0.26285714285714284, worksheet.lever_graphs_r3139, 0.002); end
  def test_lever_graphs_s3139; assert_in_delta(0.3, worksheet.lever_graphs_s3139, 0.002); end
  def test_lever_graphs_b3140; assert_in_epsilon(3.0, worksheet.lever_graphs_b3140, 0.002); end
  def test_lever_graphs_k3140; assert_in_delta(0.0, (worksheet.lever_graphs_k3140||0), 0.002); end
  def test_lever_graphs_l3140; assert_in_delta(0.04, worksheet.lever_graphs_l3140, 0.002); end
  def test_lever_graphs_m3140; assert_in_delta(0.1057142857142857, worksheet.lever_graphs_m3140, 0.002); end
  def test_lever_graphs_n3140; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_n3140, 0.002); end
  def test_lever_graphs_o3140; assert_in_delta(0.23714285714285716, worksheet.lever_graphs_o3140, 0.002); end
  def test_lever_graphs_p3140; assert_in_delta(0.3028571428571428, worksheet.lever_graphs_p3140, 0.002); end
  def test_lever_graphs_q3140; assert_in_delta(0.36857142857142855, worksheet.lever_graphs_q3140, 0.002); end
  def test_lever_graphs_r3140; assert_in_delta(0.4342857142857143, worksheet.lever_graphs_r3140, 0.002); end
  def test_lever_graphs_s3140; assert_in_delta(0.5, worksheet.lever_graphs_s3140, 0.002); end
  def test_lever_graphs_b3141; assert_in_epsilon(4.0, worksheet.lever_graphs_b3141, 0.002); end
  def test_lever_graphs_k3141; assert_in_delta(0.0, (worksheet.lever_graphs_k3141||0), 0.002); end
  def test_lever_graphs_l3141; assert_in_delta(0.04, worksheet.lever_graphs_l3141, 0.002); end
  def test_lever_graphs_m3141; assert_in_delta(0.14857142857142858, worksheet.lever_graphs_m3141, 0.002); end
  def test_lever_graphs_n3141; assert_in_delta(0.2571428571428571, worksheet.lever_graphs_n3141, 0.002); end
  def test_lever_graphs_o3141; assert_in_delta(0.36571428571428566, worksheet.lever_graphs_o3141, 0.002); end
  def test_lever_graphs_p3141; assert_in_delta(0.47428571428571425, worksheet.lever_graphs_p3141, 0.002); end
  def test_lever_graphs_q3141; assert_in_delta(0.582857142857143, worksheet.lever_graphs_q3141, 0.002); end
  def test_lever_graphs_r3141; assert_in_delta(0.6914285714285714, worksheet.lever_graphs_r3141, 0.002); end
  def test_lever_graphs_s3141; assert_in_delta(0.8, worksheet.lever_graphs_s3141, 0.002); end
  def test_lever_graphs_c3157; assert_equal("1975", worksheet.lever_graphs_c3157); end
  def test_lever_graphs_d3157; assert_equal("1980", worksheet.lever_graphs_d3157); end
  def test_lever_graphs_e3157; assert_equal("1985", worksheet.lever_graphs_e3157); end
  def test_lever_graphs_f3157; assert_equal("1990", worksheet.lever_graphs_f3157); end
  def test_lever_graphs_g3157; assert_equal("1995", worksheet.lever_graphs_g3157); end
  def test_lever_graphs_h3157; assert_equal("2000", worksheet.lever_graphs_h3157); end
  def test_lever_graphs_i3157; assert_equal("2005", worksheet.lever_graphs_i3157); end
  def test_lever_graphs_j3157; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3157, 0.002); end
  def test_lever_graphs_k3157; assert_equal("2011", worksheet.lever_graphs_k3157); end
  def test_lever_graphs_l3157; assert_equal("2015", worksheet.lever_graphs_l3157); end
  def test_lever_graphs_m3157; assert_equal("2020", worksheet.lever_graphs_m3157); end
  def test_lever_graphs_n3157; assert_equal("2025", worksheet.lever_graphs_n3157); end
  def test_lever_graphs_o3157; assert_equal("2030", worksheet.lever_graphs_o3157); end
  def test_lever_graphs_p3157; assert_equal("2035", worksheet.lever_graphs_p3157); end
  def test_lever_graphs_q3157; assert_equal("2040", worksheet.lever_graphs_q3157); end
  def test_lever_graphs_r3157; assert_equal("2045", worksheet.lever_graphs_r3157); end
  def test_lever_graphs_s3157; assert_equal("2050", worksheet.lever_graphs_s3157); end
  def test_lever_graphs_b3158; assert_equal("Historic data", worksheet.lever_graphs_b3158); end
  def test_lever_graphs_b3159; assert_in_delta(1.0, worksheet.lever_graphs_b3159, 0.002); end
  def test_lever_graphs_k3159; assert_in_delta(0.0, (worksheet.lever_graphs_k3159||0), 0.002); end
  def test_lever_graphs_l3159; assert_in_delta(0.04, worksheet.lever_graphs_l3159, 0.002); end
  def test_lever_graphs_m3159; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_m3159, 0.002); end
  def test_lever_graphs_n3159; assert_in_delta(0.05714285714285715, worksheet.lever_graphs_n3159, 0.002); end
  def test_lever_graphs_o3159; assert_in_delta(0.06571428571428571, worksheet.lever_graphs_o3159, 0.002); end
  def test_lever_graphs_p3159; assert_in_delta(0.07428571428571429, worksheet.lever_graphs_p3159, 0.002); end
  def test_lever_graphs_q3159; assert_in_delta(0.08285714285714287, worksheet.lever_graphs_q3159, 0.002); end
  def test_lever_graphs_r3159; assert_in_delta(0.09142857142857143, worksheet.lever_graphs_r3159, 0.002); end
  def test_lever_graphs_s3159; assert_in_delta(0.1, worksheet.lever_graphs_s3159, 0.002); end
  def test_lever_graphs_b3160; assert_in_epsilon(2.0, worksheet.lever_graphs_b3160, 0.002); end
  def test_lever_graphs_k3160; assert_in_delta(0.0, (worksheet.lever_graphs_k3160||0), 0.002); end
  def test_lever_graphs_l3160; assert_in_delta(0.04, worksheet.lever_graphs_l3160, 0.002); end
  def test_lever_graphs_m3160; assert_in_delta(0.07714285714285715, worksheet.lever_graphs_m3160, 0.002); end
  def test_lever_graphs_n3160; assert_in_delta(0.1142857142857143, worksheet.lever_graphs_n3160, 0.002); end
  def test_lever_graphs_o3160; assert_in_delta(0.15142857142857144, worksheet.lever_graphs_o3160, 0.002); end
  def test_lever_graphs_p3160; assert_in_delta(0.18857142857142858, worksheet.lever_graphs_p3160, 0.002); end
  def test_lever_graphs_q3160; assert_in_delta(0.22571428571428573, worksheet.lever_graphs_q3160, 0.002); end
  def test_lever_graphs_r3160; assert_in_delta(0.26285714285714284, worksheet.lever_graphs_r3160, 0.002); end
  def test_lever_graphs_s3160; assert_in_delta(0.3, worksheet.lever_graphs_s3160, 0.002); end
  def test_lever_graphs_b3161; assert_in_epsilon(3.0, worksheet.lever_graphs_b3161, 0.002); end
  def test_lever_graphs_k3161; assert_in_delta(0.0, (worksheet.lever_graphs_k3161||0), 0.002); end
  def test_lever_graphs_l3161; assert_in_delta(0.04, worksheet.lever_graphs_l3161, 0.002); end
  def test_lever_graphs_m3161; assert_in_delta(0.1057142857142857, worksheet.lever_graphs_m3161, 0.002); end
  def test_lever_graphs_n3161; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_n3161, 0.002); end
  def test_lever_graphs_o3161; assert_in_delta(0.23714285714285716, worksheet.lever_graphs_o3161, 0.002); end
  def test_lever_graphs_p3161; assert_in_delta(0.3028571428571428, worksheet.lever_graphs_p3161, 0.002); end
  def test_lever_graphs_q3161; assert_in_delta(0.36857142857142855, worksheet.lever_graphs_q3161, 0.002); end
  def test_lever_graphs_r3161; assert_in_delta(0.4342857142857143, worksheet.lever_graphs_r3161, 0.002); end
  def test_lever_graphs_s3161; assert_in_delta(0.5, worksheet.lever_graphs_s3161, 0.002); end
  def test_lever_graphs_b3162; assert_in_epsilon(4.0, worksheet.lever_graphs_b3162, 0.002); end
  def test_lever_graphs_k3162; assert_in_delta(0.0, (worksheet.lever_graphs_k3162||0), 0.002); end
  def test_lever_graphs_l3162; assert_in_delta(0.04, worksheet.lever_graphs_l3162, 0.002); end
  def test_lever_graphs_m3162; assert_in_delta(0.14857142857142858, worksheet.lever_graphs_m3162, 0.002); end
  def test_lever_graphs_n3162; assert_in_delta(0.2571428571428571, worksheet.lever_graphs_n3162, 0.002); end
  def test_lever_graphs_o3162; assert_in_delta(0.36571428571428566, worksheet.lever_graphs_o3162, 0.002); end
  def test_lever_graphs_p3162; assert_in_delta(0.47428571428571425, worksheet.lever_graphs_p3162, 0.002); end
  def test_lever_graphs_q3162; assert_in_delta(0.582857142857143, worksheet.lever_graphs_q3162, 0.002); end
  def test_lever_graphs_r3162; assert_in_delta(0.6914285714285714, worksheet.lever_graphs_r3162, 0.002); end
  def test_lever_graphs_s3162; assert_in_delta(0.8, worksheet.lever_graphs_s3162, 0.002); end
  def test_lever_graphs_d2607; assert_equal("Title", worksheet.lever_graphs_d2607); end
  def test_lever_graphs_e2607; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2607); end
  def test_lever_graphs_f2607; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2607); end
  def test_lever_graphs_g2607; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2607); end
  def test_lever_graphs_h2607; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2607); end
  def test_lever_graphs_i2607; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2607); end
  def test_lever_graphs_j2607; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2607); end
  def test_lever_graphs_d2608; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2608, 0.002); end
  def test_lever_graphs_e2608; assert_in_epsilon(65.982, worksheet.lever_graphs_e2608, 0.002); end
  def test_lever_graphs_f2608; assert_in_epsilon(1500.0, worksheet.lever_graphs_f2608, 0.002); end
  def test_lever_graphs_g2608; assert_in_epsilon(699.9999999999999, worksheet.lever_graphs_g2608, 0.002); end
  def test_lever_graphs_h2608; assert_in_epsilon(1500.0, worksheet.lever_graphs_h2608, 0.002); end
  def test_lever_graphs_i2608; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_i2608, 0.002); end
  def test_lever_graphs_j2608; assert_in_epsilon(99.99999999999999, worksheet.lever_graphs_j2608, 0.002); end
  def test_lever_graphs_d2609; assert_equal("2050: Level 1", worksheet.lever_graphs_d2609); end
  def test_lever_graphs_e2609; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_e2609, 0.002); end
  def test_lever_graphs_f2609; assert_in_epsilon(1192.0, worksheet.lever_graphs_f2609, 0.002); end
  def test_lever_graphs_g2609; assert_in_epsilon(558.0, worksheet.lever_graphs_g2609, 0.002); end
  def test_lever_graphs_h2609; assert_in_epsilon(1319.0, worksheet.lever_graphs_h2609, 0.002); end
  def test_lever_graphs_i2609; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_i2609, 0.002); end
  def test_lever_graphs_j2609; assert_in_epsilon(90.0, worksheet.lever_graphs_j2609, 0.002); end
  def test_lever_graphs_d2610; assert_equal("2050: Level 2", worksheet.lever_graphs_d2610); end
  def test_lever_graphs_e2610; assert_in_epsilon(45.0, worksheet.lever_graphs_e2610, 0.002); end
  def test_lever_graphs_f2610; assert_in_epsilon(1062.0, worksheet.lever_graphs_f2610, 0.002); end
  def test_lever_graphs_g2610; assert_in_epsilon(474.99999999999994, worksheet.lever_graphs_g2610, 0.002); end
  def test_lever_graphs_h2610; assert_in_epsilon(1181.0, worksheet.lever_graphs_h2610, 0.002); end
  def test_lever_graphs_i2610; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_i2610, 0.002); end
  def test_lever_graphs_j2610; assert_in_epsilon(85.99999999999999, worksheet.lever_graphs_j2610, 0.002); end
  def test_lever_graphs_d2611; assert_equal("2050: Level 3", worksheet.lever_graphs_d2611); end
  def test_lever_graphs_e2611; assert_in_epsilon(40.0, worksheet.lever_graphs_e2611, 0.002); end
  def test_lever_graphs_f2611; assert_in_epsilon(945.9999999999999, worksheet.lever_graphs_f2611, 0.002); end
  def test_lever_graphs_g2611; assert_in_epsilon(416.99999999999994, worksheet.lever_graphs_g2611, 0.002); end
  def test_lever_graphs_h2611; assert_in_epsilon(1056.9999999999998, worksheet.lever_graphs_h2611, 0.002); end
  def test_lever_graphs_i2611; assert_in_epsilon(192.0, worksheet.lever_graphs_i2611, 0.002); end
  def test_lever_graphs_j2611; assert_in_epsilon(80.0, worksheet.lever_graphs_j2611, 0.002); end
  def test_lever_graphs_d2612; assert_equal("2050: Level 4", worksheet.lever_graphs_d2612); end
  def test_lever_graphs_e2612; assert_in_epsilon(34.0, worksheet.lever_graphs_e2612, 0.002); end
  def test_lever_graphs_f2612; assert_in_epsilon(750.0, worksheet.lever_graphs_f2612, 0.002); end
  def test_lever_graphs_g2612; assert_in_epsilon(365.99999999999994, worksheet.lever_graphs_g2612, 0.002); end
  def test_lever_graphs_h2612; assert_in_epsilon(928.0, worksheet.lever_graphs_h2612, 0.002); end
  def test_lever_graphs_i2612; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_i2612, 0.002); end
  def test_lever_graphs_j2612; assert_in_epsilon(72.99999999999999, worksheet.lever_graphs_j2612, 0.002); end
  def test_lever_graphs_c2627; assert_equal("1975", worksheet.lever_graphs_c2627); end
  def test_lever_graphs_d2627; assert_equal("1980", worksheet.lever_graphs_d2627); end
  def test_lever_graphs_e2627; assert_equal("1985", worksheet.lever_graphs_e2627); end
  def test_lever_graphs_f2627; assert_equal("1990", worksheet.lever_graphs_f2627); end
  def test_lever_graphs_g2627; assert_equal("1995", worksheet.lever_graphs_g2627); end
  def test_lever_graphs_h2627; assert_equal("2000", worksheet.lever_graphs_h2627); end
  def test_lever_graphs_i2627; assert_equal("2005", worksheet.lever_graphs_i2627); end
  def test_lever_graphs_j2627; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2627, 0.002); end
  def test_lever_graphs_k2627; assert_equal("2011", worksheet.lever_graphs_k2627); end
  def test_lever_graphs_l2627; assert_equal("2015", worksheet.lever_graphs_l2627); end
  def test_lever_graphs_m2627; assert_equal("2020", worksheet.lever_graphs_m2627); end
  def test_lever_graphs_n2627; assert_equal("2025", worksheet.lever_graphs_n2627); end
  def test_lever_graphs_o2627; assert_equal("2030", worksheet.lever_graphs_o2627); end
  def test_lever_graphs_p2627; assert_equal("2035", worksheet.lever_graphs_p2627); end
  def test_lever_graphs_q2627; assert_equal("2040", worksheet.lever_graphs_q2627); end
  def test_lever_graphs_r2627; assert_equal("2045", worksheet.lever_graphs_r2627); end
  def test_lever_graphs_s2627; assert_equal("2050", worksheet.lever_graphs_s2627); end
  def test_lever_graphs_b2628; assert_equal("Historic data", worksheet.lever_graphs_b2628); end
  def test_lever_graphs_b2629; assert_in_delta(1.0, worksheet.lever_graphs_b2629, 0.002); end
  def test_lever_graphs_k2629; assert_in_epsilon(65.982, worksheet.lever_graphs_k2629, 0.002); end
  def test_lever_graphs_l2629; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2629, 0.002); end
  def test_lever_graphs_m2629; assert_in_epsilon(63.21692307692307, worksheet.lever_graphs_m2629, 0.002); end
  def test_lever_graphs_n2629; assert_in_epsilon(61.68076923076923, worksheet.lever_graphs_n2629, 0.002); end
  def test_lever_graphs_o2629; assert_in_epsilon(60.14461538461538, worksheet.lever_graphs_o2629, 0.002); end
  def test_lever_graphs_p2629; assert_in_epsilon(58.608461538461526, worksheet.lever_graphs_p2629, 0.002); end
  def test_lever_graphs_q2629; assert_in_epsilon(57.07230769230768, worksheet.lever_graphs_q2629, 0.002); end
  def test_lever_graphs_r2629; assert_in_epsilon(55.53615384615383, worksheet.lever_graphs_r2629, 0.002); end
  def test_lever_graphs_s2629; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_s2629, 0.002); end
  def test_lever_graphs_b2630; assert_in_epsilon(2.0, worksheet.lever_graphs_b2630, 0.002); end
  def test_lever_graphs_k2630; assert_in_epsilon(65.982, worksheet.lever_graphs_k2630, 0.002); end
  def test_lever_graphs_l2630; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2630, 0.002); end
  def test_lever_graphs_m2630; assert_in_epsilon(61.93120879120879, worksheet.lever_graphs_m2630, 0.002); end
  def test_lever_graphs_n2630; assert_in_epsilon(59.10934065934066, worksheet.lever_graphs_n2630, 0.002); end
  def test_lever_graphs_o2630; assert_in_epsilon(56.287472527472524, worksheet.lever_graphs_o2630, 0.002); end
  def test_lever_graphs_p2630; assert_in_epsilon(53.46560439560439, worksheet.lever_graphs_p2630, 0.002); end
  def test_lever_graphs_q2630; assert_in_epsilon(50.64373626373626, worksheet.lever_graphs_q2630, 0.002); end
  def test_lever_graphs_r2630; assert_in_epsilon(47.82186813186812, worksheet.lever_graphs_r2630, 0.002); end
  def test_lever_graphs_s2630; assert_in_epsilon(45.0, worksheet.lever_graphs_s2630, 0.002); end
  def test_lever_graphs_b2631; assert_in_epsilon(3.0, worksheet.lever_graphs_b2631, 0.002); end
  def test_lever_graphs_k2631; assert_in_epsilon(65.982, worksheet.lever_graphs_k2631, 0.002); end
  def test_lever_graphs_l2631; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2631, 0.002); end
  def test_lever_graphs_m2631; assert_in_epsilon(61.21692307692308, worksheet.lever_graphs_m2631, 0.002); end
  def test_lever_graphs_n2631; assert_in_epsilon(57.680769230769236, worksheet.lever_graphs_n2631, 0.002); end
  def test_lever_graphs_o2631; assert_in_epsilon(54.144615384615385, worksheet.lever_graphs_o2631, 0.002); end
  def test_lever_graphs_p2631; assert_in_epsilon(50.60846153846153, worksheet.lever_graphs_p2631, 0.002); end
  def test_lever_graphs_q2631; assert_in_epsilon(47.07230769230769, worksheet.lever_graphs_q2631, 0.002); end
  def test_lever_graphs_r2631; assert_in_epsilon(43.536153846153844, worksheet.lever_graphs_r2631, 0.002); end
  def test_lever_graphs_s2631; assert_in_epsilon(40.0, worksheet.lever_graphs_s2631, 0.002); end
  def test_lever_graphs_b2632; assert_in_epsilon(4.0, worksheet.lever_graphs_b2632, 0.002); end
  def test_lever_graphs_k2632; assert_in_epsilon(65.982, worksheet.lever_graphs_k2632, 0.002); end
  def test_lever_graphs_l2632; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2632, 0.002); end
  def test_lever_graphs_m2632; assert_in_epsilon(60.35978021978022, worksheet.lever_graphs_m2632, 0.002); end
  def test_lever_graphs_n2632; assert_in_epsilon(55.966483516483514, worksheet.lever_graphs_n2632, 0.002); end
  def test_lever_graphs_o2632; assert_in_epsilon(51.573186813186815, worksheet.lever_graphs_o2632, 0.002); end
  def test_lever_graphs_p2632; assert_in_epsilon(47.17989010989011, worksheet.lever_graphs_p2632, 0.002); end
  def test_lever_graphs_q2632; assert_in_epsilon(42.786593406593404, worksheet.lever_graphs_q2632, 0.002); end
  def test_lever_graphs_r2632; assert_in_epsilon(38.3932967032967, worksheet.lever_graphs_r2632, 0.002); end
  def test_lever_graphs_s2632; assert_in_epsilon(34.0, worksheet.lever_graphs_s2632, 0.002); end
  def test_lever_graphs_c2617; assert_equal("1975", worksheet.lever_graphs_c2617); end
  def test_lever_graphs_d2617; assert_equal("1980", worksheet.lever_graphs_d2617); end
  def test_lever_graphs_e2617; assert_equal("1985", worksheet.lever_graphs_e2617); end
  def test_lever_graphs_f2617; assert_equal("1990", worksheet.lever_graphs_f2617); end
  def test_lever_graphs_g2617; assert_equal("1995", worksheet.lever_graphs_g2617); end
  def test_lever_graphs_h2617; assert_equal("2000", worksheet.lever_graphs_h2617); end
  def test_lever_graphs_i2617; assert_equal("2005", worksheet.lever_graphs_i2617); end
  def test_lever_graphs_j2617; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2617, 0.002); end
  def test_lever_graphs_k2617; assert_equal("2011", worksheet.lever_graphs_k2617); end
  def test_lever_graphs_l2617; assert_equal("2015", worksheet.lever_graphs_l2617); end
  def test_lever_graphs_m2617; assert_equal("2020", worksheet.lever_graphs_m2617); end
  def test_lever_graphs_n2617; assert_equal("2025", worksheet.lever_graphs_n2617); end
  def test_lever_graphs_o2617; assert_equal("2030", worksheet.lever_graphs_o2617); end
  def test_lever_graphs_p2617; assert_equal("2035", worksheet.lever_graphs_p2617); end
  def test_lever_graphs_q2617; assert_equal("2040", worksheet.lever_graphs_q2617); end
  def test_lever_graphs_r2617; assert_equal("2045", worksheet.lever_graphs_r2617); end
  def test_lever_graphs_s2617; assert_equal("2050", worksheet.lever_graphs_s2617); end
  def test_lever_graphs_b2618; assert_equal("Historic data", worksheet.lever_graphs_b2618); end
  def test_lever_graphs_b2619; assert_in_delta(1.0, worksheet.lever_graphs_b2619, 0.002); end
  def test_lever_graphs_k2619; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2619, 0.002); end
  def test_lever_graphs_l2619; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2619, 0.002); end
  def test_lever_graphs_m2619; assert_in_epsilon(248.38461538461533, worksheet.lever_graphs_m2619, 0.002); end
  def test_lever_graphs_n2619; assert_in_epsilon(247.4871794871795, worksheet.lever_graphs_n2619, 0.002); end
  def test_lever_graphs_o2619; assert_in_epsilon(246.58974358974356, worksheet.lever_graphs_o2619, 0.002); end
  def test_lever_graphs_p2619; assert_in_epsilon(245.69230769230762, worksheet.lever_graphs_p2619, 0.002); end
  def test_lever_graphs_q2619; assert_in_epsilon(244.7948717948718, worksheet.lever_graphs_q2619, 0.002); end
  def test_lever_graphs_r2619; assert_in_epsilon(243.89743589743586, worksheet.lever_graphs_r2619, 0.002); end
  def test_lever_graphs_s2619; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_s2619, 0.002); end
  def test_lever_graphs_b2620; assert_in_epsilon(2.0, worksheet.lever_graphs_b2620, 0.002); end
  def test_lever_graphs_k2620; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2620, 0.002); end
  def test_lever_graphs_l2620; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2620, 0.002); end
  def test_lever_graphs_m2620; assert_in_epsilon(243.38461538461536, worksheet.lever_graphs_m2620, 0.002); end
  def test_lever_graphs_n2620; assert_in_epsilon(237.48717948717947, worksheet.lever_graphs_n2620, 0.002); end
  def test_lever_graphs_o2620; assert_in_epsilon(231.58974358974353, worksheet.lever_graphs_o2620, 0.002); end
  def test_lever_graphs_p2620; assert_in_epsilon(225.69230769230765, worksheet.lever_graphs_p2620, 0.002); end
  def test_lever_graphs_q2620; assert_in_epsilon(219.79487179487177, worksheet.lever_graphs_q2620, 0.002); end
  def test_lever_graphs_r2620; assert_in_epsilon(213.89743589743586, worksheet.lever_graphs_r2620, 0.002); end
  def test_lever_graphs_s2620; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_s2620, 0.002); end
  def test_lever_graphs_b2621; assert_in_epsilon(3.0, worksheet.lever_graphs_b2621, 0.002); end
  def test_lever_graphs_k2621; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2621, 0.002); end
  def test_lever_graphs_l2621; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2621, 0.002); end
  def test_lever_graphs_m2621; assert_in_epsilon(241.09890109890108, worksheet.lever_graphs_m2621, 0.002); end
  def test_lever_graphs_n2621; assert_in_epsilon(232.9157509157509, worksheet.lever_graphs_n2621, 0.002); end
  def test_lever_graphs_o2621; assert_in_epsilon(224.73260073260073, worksheet.lever_graphs_o2621, 0.002); end
  def test_lever_graphs_p2621; assert_in_epsilon(216.5494505494505, worksheet.lever_graphs_p2621, 0.002); end
  def test_lever_graphs_q2621; assert_in_epsilon(208.36630036630038, worksheet.lever_graphs_q2621, 0.002); end
  def test_lever_graphs_r2621; assert_in_epsilon(200.18315018315016, worksheet.lever_graphs_r2621, 0.002); end
  def test_lever_graphs_s2621; assert_in_epsilon(192.0, worksheet.lever_graphs_s2621, 0.002); end
  def test_lever_graphs_b2622; assert_in_epsilon(4.0, worksheet.lever_graphs_b2622, 0.002); end
  def test_lever_graphs_k2622; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2622, 0.002); end
  def test_lever_graphs_l2622; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2622, 0.002); end
  def test_lever_graphs_m2622; assert_in_epsilon(238.5274725274725, worksheet.lever_graphs_m2622, 0.002); end
  def test_lever_graphs_n2622; assert_in_epsilon(227.77289377289375, worksheet.lever_graphs_n2622, 0.002); end
  def test_lever_graphs_o2622; assert_in_epsilon(217.018315018315, worksheet.lever_graphs_o2622, 0.002); end
  def test_lever_graphs_p2622; assert_in_epsilon(206.26373626373623, worksheet.lever_graphs_p2622, 0.002); end
  def test_lever_graphs_q2622; assert_in_epsilon(195.50915750915746, worksheet.lever_graphs_q2622, 0.002); end
  def test_lever_graphs_r2622; assert_in_epsilon(184.75457875457872, worksheet.lever_graphs_r2622, 0.002); end
  def test_lever_graphs_s2622; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_s2622, 0.002); end
  def test_lever_graphs_d2475; assert_equal("Title", worksheet.lever_graphs_d2475); end
  def test_lever_graphs_e2475; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2475); end
  def test_lever_graphs_f2475; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2475); end
  def test_lever_graphs_g2475; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2475); end
  def test_lever_graphs_h2475; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2475); end
  def test_lever_graphs_i2475; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2475); end
  def test_lever_graphs_j2475; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2475); end
  def test_lever_graphs_d2476; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2476, 0.002); end
  def test_lever_graphs_e2476; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_e2476, 0.002); end
  def test_lever_graphs_f2476; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2476, 0.002); end
  def test_lever_graphs_g2476; assert_in_delta(0.7803646989372999, worksheet.lever_graphs_g2476, 0.002); end
  def test_lever_graphs_h2476; assert_in_delta(0.25750327590507216, worksheet.lever_graphs_h2476, 0.002); end
  def test_lever_graphs_i2476; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2476, 0.002); end
  def test_lever_graphs_j2476; assert_in_epsilon(2.0, worksheet.lever_graphs_j2476, 0.002); end
  def test_lever_graphs_d2477; assert_equal("2050: Level 1", worksheet.lever_graphs_d2477); end
  def test_lever_graphs_e2477; assert_in_epsilon(1.4335294291738556, worksheet.lever_graphs_e2477, 0.002); end
  def test_lever_graphs_f2477; assert_in_delta(0.664498073950059, worksheet.lever_graphs_f2477, 0.002); end
  def test_lever_graphs_g2477; assert_in_delta(0.9988668146397438, worksheet.lever_graphs_g2477, 0.002); end
  def test_lever_graphs_h2477; assert_in_delta(0.7982601553057237, worksheet.lever_graphs_h2477, 0.002); end
  def test_lever_graphs_i2477; assert_in_epsilon(2.448841089755415, worksheet.lever_graphs_i2477, 0.002); end
  def test_lever_graphs_j2477; assert_in_epsilon(5.0, worksheet.lever_graphs_j2477, 0.002); end
  def test_lever_graphs_d2478; assert_equal("2050: Level 2", worksheet.lever_graphs_d2478); end
  def test_lever_graphs_e2478; assert_in_epsilon(1.2423921719506748, worksheet.lever_graphs_e2478, 0.002); end
  def test_lever_graphs_f2478; assert_in_delta(0.5980482665550532, worksheet.lever_graphs_f2478, 0.002); end
  def test_lever_graphs_g2478; assert_in_delta(0.9208303447460138, worksheet.lever_graphs_g2478, 0.002); end
  def test_lever_graphs_h2478; assert_in_delta(0.592257534581666, worksheet.lever_graphs_h2478, 0.002); end
  def test_lever_graphs_i2478; assert_in_epsilon(2.122328944454693, worksheet.lever_graphs_i2478, 0.002); end
  def test_lever_graphs_j2478; assert_in_epsilon(4.2, worksheet.lever_graphs_j2478, 0.002); end
  def test_lever_graphs_d2479; assert_equal("2050: Level 3", worksheet.lever_graphs_d2479); end
  def test_lever_graphs_e2479; assert_in_epsilon(1.1277098176167664, worksheet.lever_graphs_e2479, 0.002); end
  def test_lever_graphs_f2479; assert_in_delta(0.49837355546254425, worksheet.lever_graphs_f2479, 0.002); end
  def test_lever_graphs_g2479; assert_in_delta(0.8584011688310299, worksheet.lever_graphs_g2479, 0.002); end
  def test_lever_graphs_h2479; assert_in_delta(0.4635058966291299, worksheet.lever_graphs_h2479, 0.002); end
  def test_lever_graphs_i2479; assert_in_epsilon(1.9590728718043318, worksheet.lever_graphs_i2479, 0.002); end
  def test_lever_graphs_j2479; assert_in_epsilon(3.6, worksheet.lever_graphs_j2479, 0.002); end
  def test_lever_graphs_d2480; assert_equal("2050: Level 4", worksheet.lever_graphs_d2480); end
  def test_lever_graphs_e2480; assert_in_epsilon(1.0034706004216989, worksheet.lever_graphs_e2480, 0.002); end
  def test_lever_graphs_f2480; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2480, 0.002); end
  def test_lever_graphs_g2480; assert_in_delta(0.8193829338841649, worksheet.lever_graphs_g2480, 0.002); end
  def test_lever_graphs_h2480; assert_in_delta(0.296128767290833, worksheet.lever_graphs_h2480, 0.002); end
  def test_lever_graphs_i2480; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2480, 0.002); end
  def test_lever_graphs_j2480; assert_in_epsilon(3.0, worksheet.lever_graphs_j2480, 0.002); end
  def test_lever_graphs_c2496; assert_equal("1975", worksheet.lever_graphs_c2496); end
  def test_lever_graphs_d2496; assert_equal("1980", worksheet.lever_graphs_d2496); end
  def test_lever_graphs_e2496; assert_equal("1985", worksheet.lever_graphs_e2496); end
  def test_lever_graphs_f2496; assert_equal("1990", worksheet.lever_graphs_f2496); end
  def test_lever_graphs_g2496; assert_equal("1995", worksheet.lever_graphs_g2496); end
  def test_lever_graphs_h2496; assert_equal("2000", worksheet.lever_graphs_h2496); end
  def test_lever_graphs_i2496; assert_equal("2005", worksheet.lever_graphs_i2496); end
  def test_lever_graphs_j2496; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2496, 0.002); end
  def test_lever_graphs_k2496; assert_equal("2011", worksheet.lever_graphs_k2496); end
  def test_lever_graphs_l2496; assert_equal("2015", worksheet.lever_graphs_l2496); end
  def test_lever_graphs_m2496; assert_equal("2020", worksheet.lever_graphs_m2496); end
  def test_lever_graphs_n2496; assert_equal("2025", worksheet.lever_graphs_n2496); end
  def test_lever_graphs_o2496; assert_equal("2030", worksheet.lever_graphs_o2496); end
  def test_lever_graphs_p2496; assert_equal("2035", worksheet.lever_graphs_p2496); end
  def test_lever_graphs_q2496; assert_equal("2040", worksheet.lever_graphs_q2496); end
  def test_lever_graphs_r2496; assert_equal("2045", worksheet.lever_graphs_r2496); end
  def test_lever_graphs_s2496; assert_equal("2050", worksheet.lever_graphs_s2496); end
  def test_lever_graphs_b2497; assert_equal("Historic data", worksheet.lever_graphs_b2497); end
  def test_lever_graphs_b2498; assert_in_delta(1.0, worksheet.lever_graphs_b2498, 0.002); end
  def test_lever_graphs_k2498; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2498, 0.002); end
  def test_lever_graphs_l2498; assert_in_delta(0.98, worksheet.lever_graphs_l2498, 0.002); end
  def test_lever_graphs_m2498; assert_in_epsilon(1.044789918453408, worksheet.lever_graphs_m2498, 0.002); end
  def test_lever_graphs_n2498; assert_in_epsilon(1.109579836906816, worksheet.lever_graphs_n2498, 0.002); end
  def test_lever_graphs_o2498; assert_in_epsilon(1.1743697553602237, worksheet.lever_graphs_o2498, 0.002); end
  def test_lever_graphs_p2498; assert_in_epsilon(1.2391596738136317, worksheet.lever_graphs_p2498, 0.002); end
  def test_lever_graphs_q2498; assert_in_epsilon(1.3039495922670399, worksheet.lever_graphs_q2498, 0.002); end
  def test_lever_graphs_r2498; assert_in_epsilon(1.3687395107204474, worksheet.lever_graphs_r2498, 0.002); end
  def test_lever_graphs_s2498; assert_in_epsilon(1.4335294291738556, worksheet.lever_graphs_s2498, 0.002); end
  def test_lever_graphs_b2499; assert_in_epsilon(2.0, worksheet.lever_graphs_b2499, 0.002); end
  def test_lever_graphs_k2499; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2499, 0.002); end
  def test_lever_graphs_l2499; assert_in_delta(0.98, worksheet.lever_graphs_l2499, 0.002); end
  def test_lever_graphs_m2499; assert_in_epsilon(1.0174845959929535, worksheet.lever_graphs_m2499, 0.002); end
  def test_lever_graphs_n2499; assert_in_epsilon(1.054969191985907, worksheet.lever_graphs_n2499, 0.002); end
  def test_lever_graphs_o2499; assert_in_epsilon(1.0924537879788605, worksheet.lever_graphs_o2499, 0.002); end
  def test_lever_graphs_p2499; assert_in_epsilon(1.129938383971814, worksheet.lever_graphs_p2499, 0.002); end
  def test_lever_graphs_q2499; assert_in_epsilon(1.1674229799647677, worksheet.lever_graphs_q2499, 0.002); end
  def test_lever_graphs_r2499; assert_in_epsilon(1.204907575957721, worksheet.lever_graphs_r2499, 0.002); end
  def test_lever_graphs_s2499; assert_in_epsilon(1.2423921719506748, worksheet.lever_graphs_s2499, 0.002); end
  def test_lever_graphs_b2500; assert_in_epsilon(3.0, worksheet.lever_graphs_b2500, 0.002); end
  def test_lever_graphs_k2500; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2500, 0.002); end
  def test_lever_graphs_l2500; assert_in_delta(0.98, worksheet.lever_graphs_l2500, 0.002); end
  def test_lever_graphs_m2500; assert_in_epsilon(1.001101402516681, worksheet.lever_graphs_m2500, 0.002); end
  def test_lever_graphs_n2500; assert_in_epsilon(1.0222028050333618, worksheet.lever_graphs_n2500, 0.002); end
  def test_lever_graphs_o2500; assert_in_epsilon(1.0433042075500427, worksheet.lever_graphs_o2500, 0.002); end
  def test_lever_graphs_p2500; assert_in_epsilon(1.0644056100667236, worksheet.lever_graphs_p2500, 0.002); end
  def test_lever_graphs_q2500; assert_in_epsilon(1.0855070125834045, worksheet.lever_graphs_q2500, 0.002); end
  def test_lever_graphs_r2500; assert_in_epsilon(1.1066084151000855, worksheet.lever_graphs_r2500, 0.002); end
  def test_lever_graphs_s2500; assert_in_epsilon(1.1277098176167664, worksheet.lever_graphs_s2500, 0.002); end
  def test_lever_graphs_b2501; assert_in_epsilon(4.0, worksheet.lever_graphs_b2501, 0.002); end
  def test_lever_graphs_k2501; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_k2501, 0.002); end
  def test_lever_graphs_l2501; assert_in_delta(0.98, worksheet.lever_graphs_l2501, 0.002); end
  def test_lever_graphs_m2501; assert_in_delta(0.9833529429173855, worksheet.lever_graphs_m2501, 0.002); end
  def test_lever_graphs_n2501; assert_in_delta(0.986705885834771, worksheet.lever_graphs_n2501, 0.002); end
  def test_lever_graphs_o2501; assert_in_delta(0.9900588287521566, worksheet.lever_graphs_o2501, 0.002); end
  def test_lever_graphs_p2501; assert_in_delta(0.9934117716695421, worksheet.lever_graphs_p2501, 0.002); end
  def test_lever_graphs_q2501; assert_in_delta(0.9967647145869278, worksheet.lever_graphs_q2501, 0.002); end
  def test_lever_graphs_r2501; assert_in_epsilon(1.0001176575043131, worksheet.lever_graphs_r2501, 0.002); end
  def test_lever_graphs_s2501; assert_in_epsilon(1.0034706004216989, worksheet.lever_graphs_s2501, 0.002); end
  def test_lever_graphs_c3801; assert_equal("1975", worksheet.lever_graphs_c3801); end
  def test_lever_graphs_d3801; assert_equal("1980", worksheet.lever_graphs_d3801); end
  def test_lever_graphs_e3801; assert_equal("1985", worksheet.lever_graphs_e3801); end
  def test_lever_graphs_f3801; assert_equal("1990", worksheet.lever_graphs_f3801); end
  def test_lever_graphs_g3801; assert_equal("1995", worksheet.lever_graphs_g3801); end
  def test_lever_graphs_h3801; assert_equal("2000", worksheet.lever_graphs_h3801); end
  def test_lever_graphs_i3801; assert_equal("2005", worksheet.lever_graphs_i3801); end
  def test_lever_graphs_j3801; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3801, 0.002); end
  def test_lever_graphs_k3801; assert_equal("2011", worksheet.lever_graphs_k3801); end
  def test_lever_graphs_l3801; assert_equal("2015", worksheet.lever_graphs_l3801); end
  def test_lever_graphs_m3801; assert_equal("2020", worksheet.lever_graphs_m3801); end
  def test_lever_graphs_n3801; assert_equal("2025", worksheet.lever_graphs_n3801); end
  def test_lever_graphs_o3801; assert_equal("2030", worksheet.lever_graphs_o3801); end
  def test_lever_graphs_p3801; assert_equal("2035", worksheet.lever_graphs_p3801); end
  def test_lever_graphs_q3801; assert_equal("2040", worksheet.lever_graphs_q3801); end
  def test_lever_graphs_r3801; assert_equal("2045", worksheet.lever_graphs_r3801); end
  def test_lever_graphs_s3801; assert_equal("2050", worksheet.lever_graphs_s3801); end
  def test_lever_graphs_b3802; assert_equal("Historic data", worksheet.lever_graphs_b3802); end
  def test_lever_graphs_c3802; assert_in_delta(0.44, worksheet.lever_graphs_c3802, 0.002); end
  def test_lever_graphs_d3802; assert_in_delta(0.44, worksheet.lever_graphs_d3802, 0.002); end
  def test_lever_graphs_e3802; assert_in_delta(0.44, worksheet.lever_graphs_e3802, 0.002); end
  def test_lever_graphs_f3802; assert_in_delta(0.44, worksheet.lever_graphs_f3802, 0.002); end
  def test_lever_graphs_g3802; assert_in_delta(0.44, worksheet.lever_graphs_g3802, 0.002); end
  def test_lever_graphs_h3802; assert_in_delta(0.44, worksheet.lever_graphs_h3802, 0.002); end
  def test_lever_graphs_i3802; assert_in_delta(0.44, worksheet.lever_graphs_i3802, 0.002); end
  def test_lever_graphs_j3802; assert_in_delta(0.44, worksheet.lever_graphs_j3802, 0.002); end
  def test_lever_graphs_k3802; assert_in_delta(0.44, worksheet.lever_graphs_k3802, 0.002); end
  def test_lever_graphs_b3803; assert_in_delta(1.0, worksheet.lever_graphs_b3803, 0.002); end
  def test_lever_graphs_l3803; assert_in_delta(0.44, worksheet.lever_graphs_l3803, 0.002); end
  def test_lever_graphs_m3803; assert_in_delta(0.43176470588235294, worksheet.lever_graphs_m3803, 0.002); end
  def test_lever_graphs_n3803; assert_in_delta(0.4235294117647059, worksheet.lever_graphs_n3803, 0.002); end
  def test_lever_graphs_o3803; assert_in_delta(0.4152941176470588, worksheet.lever_graphs_o3803, 0.002); end
  def test_lever_graphs_p3803; assert_in_delta(0.40705882352941175, worksheet.lever_graphs_p3803, 0.002); end
  def test_lever_graphs_q3803; assert_in_delta(0.3988235294117647, worksheet.lever_graphs_q3803, 0.002); end
  def test_lever_graphs_r3803; assert_in_delta(0.3905882352941176, worksheet.lever_graphs_r3803, 0.002); end
  def test_lever_graphs_s3803; assert_in_delta(0.38235294117647056, worksheet.lever_graphs_s3803, 0.002); end
  def test_lever_graphs_b3804; assert_in_epsilon(2.0, worksheet.lever_graphs_b3804, 0.002); end
  def test_lever_graphs_l3804; assert_in_delta(0.44, worksheet.lever_graphs_l3804, 0.002); end
  def test_lever_graphs_m3804; assert_in_delta(0.44, worksheet.lever_graphs_m3804, 0.002); end
  def test_lever_graphs_n3804; assert_in_delta(0.44, worksheet.lever_graphs_n3804, 0.002); end
  def test_lever_graphs_o3804; assert_in_delta(0.44, worksheet.lever_graphs_o3804, 0.002); end
  def test_lever_graphs_p3804; assert_in_delta(0.44, worksheet.lever_graphs_p3804, 0.002); end
  def test_lever_graphs_q3804; assert_in_delta(0.44, worksheet.lever_graphs_q3804, 0.002); end
  def test_lever_graphs_r3804; assert_in_delta(0.44, worksheet.lever_graphs_r3804, 0.002); end
  def test_lever_graphs_s3804; assert_in_delta(0.44, worksheet.lever_graphs_s3804, 0.002); end
  def test_lever_graphs_b3805; assert_in_epsilon(3.0, worksheet.lever_graphs_b3805, 0.002); end
  def test_lever_graphs_l3805; assert_in_delta(0.44, worksheet.lever_graphs_l3805, 0.002); end
  def test_lever_graphs_m3805; assert_in_delta(0.44941176470588234, worksheet.lever_graphs_m3805, 0.002); end
  def test_lever_graphs_n3805; assert_in_delta(0.4588235294117647, worksheet.lever_graphs_n3805, 0.002); end
  def test_lever_graphs_o3805; assert_in_delta(0.4682352941176471, worksheet.lever_graphs_o3805, 0.002); end
  def test_lever_graphs_p3805; assert_in_delta(0.4776470588235294, worksheet.lever_graphs_p3805, 0.002); end
  def test_lever_graphs_q3805; assert_in_delta(0.48705882352941177, worksheet.lever_graphs_q3805, 0.002); end
  def test_lever_graphs_r3805; assert_in_delta(0.4964705882352941, worksheet.lever_graphs_r3805, 0.002); end
  def test_lever_graphs_s3805; assert_in_delta(0.5058823529411764, worksheet.lever_graphs_s3805, 0.002); end
  def test_lever_graphs_b3806; assert_in_epsilon(4.0, worksheet.lever_graphs_b3806, 0.002); end
  def test_lever_graphs_l3806; assert_in_delta(0.44, worksheet.lever_graphs_l3806, 0.002); end
  def test_lever_graphs_m3806; assert_in_delta(0.4576470588235294, worksheet.lever_graphs_m3806, 0.002); end
  def test_lever_graphs_n3806; assert_in_delta(0.4752941176470588, worksheet.lever_graphs_n3806, 0.002); end
  def test_lever_graphs_o3806; assert_in_delta(0.4929411764705882, worksheet.lever_graphs_o3806, 0.002); end
  def test_lever_graphs_p3806; assert_in_delta(0.5105882352941177, worksheet.lever_graphs_p3806, 0.002); end
  def test_lever_graphs_q3806; assert_in_delta(0.528235294117647, worksheet.lever_graphs_q3806, 0.002); end
  def test_lever_graphs_r3806; assert_in_delta(0.5458823529411765, worksheet.lever_graphs_r3806, 0.002); end
  def test_lever_graphs_s3806; assert_in_delta(0.5635294117647058, worksheet.lever_graphs_s3806, 0.002); end
  def test_lever_graphs_c3261; assert_equal("1975", worksheet.lever_graphs_c3261); end
  def test_lever_graphs_d3261; assert_equal("1980", worksheet.lever_graphs_d3261); end
  def test_lever_graphs_e3261; assert_equal("1985", worksheet.lever_graphs_e3261); end
  def test_lever_graphs_f3261; assert_equal("1990", worksheet.lever_graphs_f3261); end
  def test_lever_graphs_g3261; assert_equal("1995", worksheet.lever_graphs_g3261); end
  def test_lever_graphs_h3261; assert_equal("2000", worksheet.lever_graphs_h3261); end
  def test_lever_graphs_i3261; assert_equal("2005", worksheet.lever_graphs_i3261); end
  def test_lever_graphs_j3261; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3261, 0.002); end
  def test_lever_graphs_k3261; assert_equal("2011", worksheet.lever_graphs_k3261); end
  def test_lever_graphs_l3261; assert_equal("2015", worksheet.lever_graphs_l3261); end
  def test_lever_graphs_m3261; assert_equal("2020", worksheet.lever_graphs_m3261); end
  def test_lever_graphs_n3261; assert_equal("2025", worksheet.lever_graphs_n3261); end
  def test_lever_graphs_o3261; assert_equal("2030", worksheet.lever_graphs_o3261); end
  def test_lever_graphs_p3261; assert_equal("2035", worksheet.lever_graphs_p3261); end
  def test_lever_graphs_q3261; assert_equal("2040", worksheet.lever_graphs_q3261); end
  def test_lever_graphs_r3261; assert_equal("2045", worksheet.lever_graphs_r3261); end
  def test_lever_graphs_s3261; assert_equal("2050", worksheet.lever_graphs_s3261); end
  def test_lever_graphs_b3262; assert_equal("Historic data", worksheet.lever_graphs_b3262); end
  def test_lever_graphs_b3263; assert_in_delta(1.0, worksheet.lever_graphs_b3263, 0.002); end
  def test_lever_graphs_k3263; assert_in_delta(0.4, worksheet.lever_graphs_k3263, 0.002); end
  def test_lever_graphs_l3263; assert_in_delta(0.4, worksheet.lever_graphs_l3263, 0.002); end
  def test_lever_graphs_m3263; assert_in_delta(0.37142857142857144, worksheet.lever_graphs_m3263, 0.002); end
  def test_lever_graphs_n3263; assert_in_delta(0.34285714285714286, worksheet.lever_graphs_n3263, 0.002); end
  def test_lever_graphs_o3263; assert_in_delta(0.3142857142857143, worksheet.lever_graphs_o3263, 0.002); end
  def test_lever_graphs_p3263; assert_in_delta(0.2857142857142857, worksheet.lever_graphs_p3263, 0.002); end
  def test_lever_graphs_q3263; assert_in_delta(0.2571428571428571, worksheet.lever_graphs_q3263, 0.002); end
  def test_lever_graphs_r3263; assert_in_delta(0.22857142857142854, worksheet.lever_graphs_r3263, 0.002); end
  def test_lever_graphs_s3263; assert_in_delta(0.19999999999999996, worksheet.lever_graphs_s3263, 0.002); end
  def test_lever_graphs_b3264; assert_in_epsilon(2.0, worksheet.lever_graphs_b3264, 0.002); end
  def test_lever_graphs_k3264; assert_in_delta(0.4, worksheet.lever_graphs_k3264, 0.002); end
  def test_lever_graphs_l3264; assert_in_delta(0.4, worksheet.lever_graphs_l3264, 0.002); end
  def test_lever_graphs_m3264; assert_in_delta(0.4, worksheet.lever_graphs_m3264, 0.002); end
  def test_lever_graphs_n3264; assert_in_delta(0.4, worksheet.lever_graphs_n3264, 0.002); end
  def test_lever_graphs_o3264; assert_in_delta(0.4, worksheet.lever_graphs_o3264, 0.002); end
  def test_lever_graphs_p3264; assert_in_delta(0.4, worksheet.lever_graphs_p3264, 0.002); end
  def test_lever_graphs_q3264; assert_in_delta(0.4, worksheet.lever_graphs_q3264, 0.002); end
  def test_lever_graphs_r3264; assert_in_delta(0.4, worksheet.lever_graphs_r3264, 0.002); end
  def test_lever_graphs_s3264; assert_in_delta(0.4, worksheet.lever_graphs_s3264, 0.002); end
  def test_lever_graphs_b3265; assert_in_epsilon(3.0, worksheet.lever_graphs_b3265, 0.002); end
  def test_lever_graphs_k3265; assert_in_delta(0.4, worksheet.lever_graphs_k3265, 0.002); end
  def test_lever_graphs_l3265; assert_in_delta(0.4, worksheet.lever_graphs_l3265, 0.002); end
  def test_lever_graphs_m3265; assert_in_delta(0.4285714285714286, worksheet.lever_graphs_m3265, 0.002); end
  def test_lever_graphs_n3265; assert_in_delta(0.4571428571428572, worksheet.lever_graphs_n3265, 0.002); end
  def test_lever_graphs_o3265; assert_in_delta(0.48571428571428577, worksheet.lever_graphs_o3265, 0.002); end
  def test_lever_graphs_p3265; assert_in_delta(0.5142857142857142, worksheet.lever_graphs_p3265, 0.002); end
  def test_lever_graphs_q3265; assert_in_delta(0.5428571428571428, worksheet.lever_graphs_q3265, 0.002); end
  def test_lever_graphs_r3265; assert_in_delta(0.5714285714285714, worksheet.lever_graphs_r3265, 0.002); end
  def test_lever_graphs_s3265; assert_in_delta(0.6, worksheet.lever_graphs_s3265, 0.002); end
  def test_lever_graphs_b3266; assert_in_epsilon(4.0, worksheet.lever_graphs_b3266, 0.002); end
  def test_lever_graphs_k3266; assert_in_delta(0.4, worksheet.lever_graphs_k3266, 0.002); end
  def test_lever_graphs_l3266; assert_in_delta(0.4, worksheet.lever_graphs_l3266, 0.002); end
  def test_lever_graphs_m3266; assert_in_delta(0.4571428571428572, worksheet.lever_graphs_m3266, 0.002); end
  def test_lever_graphs_n3266; assert_in_delta(0.5142857142857142, worksheet.lever_graphs_n3266, 0.002); end
  def test_lever_graphs_o3266; assert_in_delta(0.5714285714285714, worksheet.lever_graphs_o3266, 0.002); end
  def test_lever_graphs_p3266; assert_in_delta(0.6285714285714286, worksheet.lever_graphs_p3266, 0.002); end
  def test_lever_graphs_q3266; assert_in_delta(0.6857142857142857, worksheet.lever_graphs_q3266, 0.002); end
  def test_lever_graphs_r3266; assert_in_delta(0.7428571428571429, worksheet.lever_graphs_r3266, 0.002); end
  def test_lever_graphs_s3266; assert_in_delta(0.8, worksheet.lever_graphs_s3266, 0.002); end
  def test_lever_graphs_c3217; assert_equal("1975", worksheet.lever_graphs_c3217); end
  def test_lever_graphs_d3217; assert_equal("1980", worksheet.lever_graphs_d3217); end
  def test_lever_graphs_e3217; assert_equal("1985", worksheet.lever_graphs_e3217); end
  def test_lever_graphs_f3217; assert_equal("1990", worksheet.lever_graphs_f3217); end
  def test_lever_graphs_g3217; assert_equal("1995", worksheet.lever_graphs_g3217); end
  def test_lever_graphs_h3217; assert_equal("2000", worksheet.lever_graphs_h3217); end
  def test_lever_graphs_i3217; assert_equal("2005", worksheet.lever_graphs_i3217); end
  def test_lever_graphs_j3217; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3217, 0.002); end
  def test_lever_graphs_k3217; assert_equal("2011", worksheet.lever_graphs_k3217); end
  def test_lever_graphs_l3217; assert_equal("2015", worksheet.lever_graphs_l3217); end
  def test_lever_graphs_m3217; assert_equal("2020", worksheet.lever_graphs_m3217); end
  def test_lever_graphs_n3217; assert_equal("2025", worksheet.lever_graphs_n3217); end
  def test_lever_graphs_o3217; assert_equal("2030", worksheet.lever_graphs_o3217); end
  def test_lever_graphs_p3217; assert_equal("2035", worksheet.lever_graphs_p3217); end
  def test_lever_graphs_q3217; assert_equal("2040", worksheet.lever_graphs_q3217); end
  def test_lever_graphs_r3217; assert_equal("2045", worksheet.lever_graphs_r3217); end
  def test_lever_graphs_s3217; assert_equal("2050", worksheet.lever_graphs_s3217); end
  def test_lever_graphs_b3218; assert_equal("Historic data", worksheet.lever_graphs_b3218); end
  def test_lever_graphs_b3219; assert_equal("Europe, oilseed rape", worksheet.lever_graphs_b3219); end
  def test_lever_graphs_k3219; assert_in_delta(0.206, worksheet.lever_graphs_k3219, 0.002); end
  def test_lever_graphs_b3220; assert_equal("North America, soya bean", worksheet.lever_graphs_b3220); end
  def test_lever_graphs_k3220; assert_in_delta(0.055, worksheet.lever_graphs_k3220, 0.002); end
  def test_lever_graphs_b3221; assert_equal("Asia, palm oil", worksheet.lever_graphs_b3221); end
  def test_lever_graphs_k3221; assert_in_delta(0.531, worksheet.lever_graphs_k3221, 0.002); end
  def test_lever_graphs_b3222; assert_equal("Europe, wheat", worksheet.lever_graphs_b3222); end
  def test_lever_graphs_k3222; assert_in_delta(0.177, worksheet.lever_graphs_k3222, 0.002); end
  def test_lever_graphs_b3223; assert_equal("North America, maize", worksheet.lever_graphs_b3223); end
  def test_lever_graphs_k3223; assert_in_delta(0.239, worksheet.lever_graphs_k3223, 0.002); end
  def test_lever_graphs_b3224; assert_equal("Brazil, sugar cane", worksheet.lever_graphs_b3224); end
  def test_lever_graphs_k3224; assert_in_delta(0.42, worksheet.lever_graphs_k3224, 0.002); end
  def test_lever_graphs_b3225; assert_equal("China, sorghum", worksheet.lever_graphs_b3225); end
  def test_lever_graphs_k3225; assert_in_delta(0.42, worksheet.lever_graphs_k3225, 0.002); end
  def test_lever_graphs_b3226; assert_equal("Europe, willow SRC", worksheet.lever_graphs_b3226); end
  def test_lever_graphs_k3226; assert_in_delta(0.444, worksheet.lever_graphs_k3226, 0.002); end
  def test_lever_graphs_b3227; assert_equal("Europe, miscanthus", worksheet.lever_graphs_b3227); end
  def test_lever_graphs_k3227; assert_in_delta(0.745, worksheet.lever_graphs_k3227, 0.002); end
  def test_lever_graphs_b3228; assert_equal("South America, Eucalyptus", worksheet.lever_graphs_b3228); end
  def test_lever_graphs_k3228; assert_in_delta(0.895, worksheet.lever_graphs_k3228, 0.002); end
  def test_lever_graphs_b3229; assert_in_delta(1.0, worksheet.lever_graphs_b3229, 0.002); end
  def test_lever_graphs_k3229; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3229, 0.002); end
  def test_lever_graphs_l3229; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3229, 0.002); end
  def test_lever_graphs_m3229; assert_in_delta(0.4118243303034262, worksheet.lever_graphs_m3229, 0.002); end
  def test_lever_graphs_n3229; assert_in_delta(0.41998205269331645, worksheet.lever_graphs_n3229, 0.002); end
  def test_lever_graphs_o3229; assert_in_delta(0.4281397750832067, worksheet.lever_graphs_o3229, 0.002); end
  def test_lever_graphs_p3229; assert_in_delta(0.436297497473097, worksheet.lever_graphs_p3229, 0.002); end
  def test_lever_graphs_q3229; assert_in_delta(0.44445521986298725, worksheet.lever_graphs_q3229, 0.002); end
  def test_lever_graphs_r3229; assert_in_delta(0.45261294225287757, worksheet.lever_graphs_r3229, 0.002); end
  def test_lever_graphs_s3229; assert_in_delta(0.46077066464276784, worksheet.lever_graphs_s3229, 0.002); end
  def test_lever_graphs_b3230; assert_in_epsilon(2.0, worksheet.lever_graphs_b3230, 0.002); end
  def test_lever_graphs_k3230; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3230, 0.002); end
  def test_lever_graphs_l3230; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3230, 0.002); end
  def test_lever_graphs_m3230; assert_in_delta(0.4282804254692394, worksheet.lever_graphs_m3230, 0.002); end
  def test_lever_graphs_n3230; assert_in_delta(0.4528942430249427, worksheet.lever_graphs_n3230, 0.002); end
  def test_lever_graphs_o3230; assert_in_delta(0.47750806058064615, worksheet.lever_graphs_o3230, 0.002); end
  def test_lever_graphs_p3230; assert_in_delta(0.5021218781363497, worksheet.lever_graphs_p3230, 0.002); end
  def test_lever_graphs_q3230; assert_in_delta(0.5267356956920529, worksheet.lever_graphs_q3230, 0.002); end
  def test_lever_graphs_r3230; assert_in_delta(0.5513495132477564, worksheet.lever_graphs_r3230, 0.002); end
  def test_lever_graphs_s3230; assert_in_delta(0.5759633308034597, worksheet.lever_graphs_s3230, 0.002); end
  def test_lever_graphs_b3231; assert_in_epsilon(3.0, worksheet.lever_graphs_b3231, 0.002); end
  def test_lever_graphs_k3231; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3231, 0.002); end
  def test_lever_graphs_l3231; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3231, 0.002); end
  def test_lever_graphs_m3231; assert_in_delta(0.4666779808561366, worksheet.lever_graphs_m3231, 0.002); end
  def test_lever_graphs_n3231; assert_in_delta(0.5296893537987374, worksheet.lever_graphs_n3231, 0.002); end
  def test_lever_graphs_o3231; assert_in_delta(0.5927007267413381, worksheet.lever_graphs_o3231, 0.002); end
  def test_lever_graphs_p3231; assert_in_delta(0.6557120996839387, worksheet.lever_graphs_p3231, 0.002); end
  def test_lever_graphs_q3231; assert_in_delta(0.7187234726265396, worksheet.lever_graphs_q3231, 0.002); end
  def test_lever_graphs_r3231; assert_in_delta(0.7817348455691402, worksheet.lever_graphs_r3231, 0.002); end
  def test_lever_graphs_s3231; assert_in_delta(0.844746218511741, worksheet.lever_graphs_s3231, 0.002); end
  def test_lever_graphs_b3232; assert_in_epsilon(4.0, worksheet.lever_graphs_b3232, 0.002); end
  def test_lever_graphs_k3232; assert_in_delta(0.3839755538689732, worksheet.lever_graphs_k3232, 0.002); end
  def test_lever_graphs_l3232; assert_in_delta(0.4036666079135359, worksheet.lever_graphs_l3232, 0.002); end
  def test_lever_graphs_m3232; assert_in_delta(0.510560901298305, worksheet.lever_graphs_m3232, 0.002); end
  def test_lever_graphs_n3232; assert_in_delta(0.6174551946830741, worksheet.lever_graphs_n3232, 0.002); end
  def test_lever_graphs_o3232; assert_in_delta(0.7243494880678433, worksheet.lever_graphs_o3232, 0.002); end
  def test_lever_graphs_p3232; assert_in_delta(0.8312437814526122, worksheet.lever_graphs_p3232, 0.002); end
  def test_lever_graphs_q3232; assert_in_delta(0.9381380748373813, worksheet.lever_graphs_q3232, 0.002); end
  def test_lever_graphs_r3232; assert_in_epsilon(1.0450323682221505, worksheet.lever_graphs_r3232, 0.002); end
  def test_lever_graphs_s3232; assert_in_epsilon(1.1519266616069195, worksheet.lever_graphs_s3232, 0.002); end
  def test_lever_graphs_c3208; assert_equal("1975", worksheet.lever_graphs_c3208); end
  def test_lever_graphs_d3208; assert_equal("1980", worksheet.lever_graphs_d3208); end
  def test_lever_graphs_e3208; assert_equal("1985", worksheet.lever_graphs_e3208); end
  def test_lever_graphs_f3208; assert_equal("1990", worksheet.lever_graphs_f3208); end
  def test_lever_graphs_g3208; assert_equal("1995", worksheet.lever_graphs_g3208); end
  def test_lever_graphs_h3208; assert_equal("2000", worksheet.lever_graphs_h3208); end
  def test_lever_graphs_i3208; assert_equal("2005", worksheet.lever_graphs_i3208); end
  def test_lever_graphs_j3208; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3208, 0.002); end
  def test_lever_graphs_k3208; assert_equal("2011", worksheet.lever_graphs_k3208); end
  def test_lever_graphs_l3208; assert_equal("2015", worksheet.lever_graphs_l3208); end
  def test_lever_graphs_m3208; assert_equal("2020", worksheet.lever_graphs_m3208); end
  def test_lever_graphs_n3208; assert_equal("2025", worksheet.lever_graphs_n3208); end
  def test_lever_graphs_o3208; assert_equal("2030", worksheet.lever_graphs_o3208); end
  def test_lever_graphs_p3208; assert_equal("2035", worksheet.lever_graphs_p3208); end
  def test_lever_graphs_q3208; assert_equal("2040", worksheet.lever_graphs_q3208); end
  def test_lever_graphs_r3208; assert_equal("2045", worksheet.lever_graphs_r3208); end
  def test_lever_graphs_s3208; assert_equal("2050", worksheet.lever_graphs_s3208); end
  def test_lever_graphs_b3209; assert_equal("Historic data", worksheet.lever_graphs_b3209); end
  def test_lever_graphs_b3210; assert_in_delta(1.0, worksheet.lever_graphs_b3210, 0.002); end
  def test_lever_graphs_k3210; assert_in_delta(0.0, (worksheet.lever_graphs_k3210||0), 0.002); end
  def test_lever_graphs_l3210; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3210, 0.002); end
  def test_lever_graphs_m3210; assert_in_delta(0.07252747252747253, worksheet.lever_graphs_m3210, 0.002); end
  def test_lever_graphs_n3210; assert_in_delta(0.09377289377289377, worksheet.lever_graphs_n3210, 0.002); end
  def test_lever_graphs_o3210; assert_in_delta(0.11501831501831503, worksheet.lever_graphs_o3210, 0.002); end
  def test_lever_graphs_p3210; assert_in_delta(0.13626373626373628, worksheet.lever_graphs_p3210, 0.002); end
  def test_lever_graphs_q3210; assert_in_delta(0.15750915750915753, worksheet.lever_graphs_q3210, 0.002); end
  def test_lever_graphs_r3210; assert_in_delta(0.17875457875457879, worksheet.lever_graphs_r3210, 0.002); end
  def test_lever_graphs_s3210; assert_in_delta(0.2, worksheet.lever_graphs_s3210, 0.002); end
  def test_lever_graphs_b3211; assert_in_epsilon(2.0, worksheet.lever_graphs_b3211, 0.002); end
  def test_lever_graphs_k3211; assert_in_delta(0.0, (worksheet.lever_graphs_k3211||0), 0.002); end
  def test_lever_graphs_l3211; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3211, 0.002); end
  def test_lever_graphs_m3211; assert_in_delta(0.11538461538461538, worksheet.lever_graphs_m3211, 0.002); end
  def test_lever_graphs_n3211; assert_in_delta(0.17948717948717946, worksheet.lever_graphs_n3211, 0.002); end
  def test_lever_graphs_o3211; assert_in_delta(0.24358974358974356, worksheet.lever_graphs_o3211, 0.002); end
  def test_lever_graphs_p3211; assert_in_delta(0.30769230769230765, worksheet.lever_graphs_p3211, 0.002); end
  def test_lever_graphs_q3211; assert_in_delta(0.3717948717948718, worksheet.lever_graphs_q3211, 0.002); end
  def test_lever_graphs_r3211; assert_in_delta(0.43589743589743585, worksheet.lever_graphs_r3211, 0.002); end
  def test_lever_graphs_s3211; assert_in_delta(0.5, worksheet.lever_graphs_s3211, 0.002); end
  def test_lever_graphs_b3212; assert_in_epsilon(3.0, worksheet.lever_graphs_b3212, 0.002); end
  def test_lever_graphs_k3212; assert_in_delta(0.0, (worksheet.lever_graphs_k3212||0), 0.002); end
  def test_lever_graphs_l3212; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3212, 0.002); end
  def test_lever_graphs_m3212; assert_in_delta(0.21538461538461534, worksheet.lever_graphs_m3212, 0.002); end
  def test_lever_graphs_n3212; assert_in_delta(0.3794871794871794, worksheet.lever_graphs_n3212, 0.002); end
  def test_lever_graphs_o3212; assert_in_delta(0.5435897435897435, worksheet.lever_graphs_o3212, 0.002); end
  def test_lever_graphs_p3212; assert_in_delta(0.7076923076923076, worksheet.lever_graphs_p3212, 0.002); end
  def test_lever_graphs_q3212; assert_in_delta(0.8717948717948718, worksheet.lever_graphs_q3212, 0.002); end
  def test_lever_graphs_r3212; assert_in_epsilon(1.0358974358974358, worksheet.lever_graphs_r3212, 0.002); end
  def test_lever_graphs_s3212; assert_in_epsilon(1.2, worksheet.lever_graphs_s3212, 0.002); end
  def test_lever_graphs_b3213; assert_in_epsilon(4.0, worksheet.lever_graphs_b3213, 0.002); end
  def test_lever_graphs_k3213; assert_in_delta(0.0, (worksheet.lever_graphs_k3213||0), 0.002); end
  def test_lever_graphs_l3213; assert_in_delta(0.05128205128205128, worksheet.lever_graphs_l3213, 0.002); end
  def test_lever_graphs_m3213; assert_in_delta(0.3296703296703296, worksheet.lever_graphs_m3213, 0.002); end
  def test_lever_graphs_n3213; assert_in_delta(0.608058608058608, worksheet.lever_graphs_n3213, 0.002); end
  def test_lever_graphs_o3213; assert_in_delta(0.8864468864468864, worksheet.lever_graphs_o3213, 0.002); end
  def test_lever_graphs_p3213; assert_in_epsilon(1.1648351648351647, worksheet.lever_graphs_p3213, 0.002); end
  def test_lever_graphs_q3213; assert_in_epsilon(1.4432234432234432, worksheet.lever_graphs_q3213, 0.002); end
  def test_lever_graphs_r3213; assert_in_epsilon(1.7216117216117215, worksheet.lever_graphs_r3213, 0.002); end
  def test_lever_graphs_s3213; assert_in_epsilon(2.0, worksheet.lever_graphs_s3213, 0.002); end
  def test_lever_graphs_c3236; assert_equal("1975", worksheet.lever_graphs_c3236); end
  def test_lever_graphs_d3236; assert_equal("1980", worksheet.lever_graphs_d3236); end
  def test_lever_graphs_e3236; assert_equal("1985", worksheet.lever_graphs_e3236); end
  def test_lever_graphs_f3236; assert_equal("1990", worksheet.lever_graphs_f3236); end
  def test_lever_graphs_g3236; assert_equal("1995", worksheet.lever_graphs_g3236); end
  def test_lever_graphs_h3236; assert_equal("2000", worksheet.lever_graphs_h3236); end
  def test_lever_graphs_i3236; assert_equal("2005", worksheet.lever_graphs_i3236); end
  def test_lever_graphs_j3236; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3236, 0.002); end
  def test_lever_graphs_k3236; assert_equal("2011", worksheet.lever_graphs_k3236); end
  def test_lever_graphs_l3236; assert_equal("2015", worksheet.lever_graphs_l3236); end
  def test_lever_graphs_m3236; assert_equal("2020", worksheet.lever_graphs_m3236); end
  def test_lever_graphs_n3236; assert_equal("2025", worksheet.lever_graphs_n3236); end
  def test_lever_graphs_o3236; assert_equal("2030", worksheet.lever_graphs_o3236); end
  def test_lever_graphs_p3236; assert_equal("2035", worksheet.lever_graphs_p3236); end
  def test_lever_graphs_q3236; assert_equal("2040", worksheet.lever_graphs_q3236); end
  def test_lever_graphs_r3236; assert_equal("2045", worksheet.lever_graphs_r3236); end
  def test_lever_graphs_s3236; assert_equal("2050", worksheet.lever_graphs_s3236); end
  def test_lever_graphs_b3237; assert_equal("Historic data", worksheet.lever_graphs_b3237); end
  def test_lever_graphs_b3238; assert_equal("Europe, miscanthus (low)", worksheet.lever_graphs_b3238); end
  def test_lever_graphs_k3238; assert_in_epsilon(10.56, worksheet.lever_graphs_k3238, 0.002); end
  def test_lever_graphs_b3239; assert_equal("Europe, miscanthus (high)", worksheet.lever_graphs_b3239); end
  def test_lever_graphs_k3239; assert_in_epsilon(15.56, worksheet.lever_graphs_k3239, 0.002); end
  def test_lever_graphs_b3240; assert_equal("North America, switchgass (low)", worksheet.lever_graphs_b3240); end
  def test_lever_graphs_k3240; assert_in_epsilon(5.72, worksheet.lever_graphs_k3240, 0.002); end
  def test_lever_graphs_b3241; assert_equal("North America, switchgrass (high)", worksheet.lever_graphs_b3241); end
  def test_lever_graphs_k3241; assert_in_epsilon(8.33, worksheet.lever_graphs_k3241, 0.002); end
  def test_lever_graphs_b3242; assert_equal("South America, eucalyptus (low)", worksheet.lever_graphs_b3242); end
  def test_lever_graphs_k3242; assert_in_epsilon(8.33, worksheet.lever_graphs_k3242, 0.002); end
  def test_lever_graphs_b3243; assert_equal("South America, eucalyptus (high)", worksheet.lever_graphs_b3243); end
  def test_lever_graphs_k3243; assert_in_epsilon(23.1, worksheet.lever_graphs_k3243, 0.002); end
  def test_lever_graphs_b3244; assert_equal("Global average", worksheet.lever_graphs_b3244); end
  def test_lever_graphs_k3244; assert_in_epsilon(6.55, worksheet.lever_graphs_k3244, 0.002); end
  def test_lever_graphs_b3245; assert_equal("Global average on abandoned agricultural land", worksheet.lever_graphs_b3245); end
  def test_lever_graphs_k3245; assert_in_epsilon(4.3, worksheet.lever_graphs_k3245, 0.002); end
  def test_lever_graphs_b3246; assert_in_delta(1.0, worksheet.lever_graphs_b3246, 0.002); end
  def test_lever_graphs_k3246; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3246, 0.002); end
  def test_lever_graphs_l3246; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3246, 0.002); end
  def test_lever_graphs_m3246; assert_in_epsilon(7.220104158879668, worksheet.lever_graphs_m3246, 0.002); end
  def test_lever_graphs_n3246; assert_in_epsilon(7.363125347819224, worksheet.lever_graphs_n3246, 0.002); end
  def test_lever_graphs_o3246; assert_in_epsilon(7.506146536758781, worksheet.lever_graphs_o3246, 0.002); end
  def test_lever_graphs_p3246; assert_in_epsilon(7.649167725698337, worksheet.lever_graphs_p3246, 0.002); end
  def test_lever_graphs_q3246; assert_in_epsilon(7.792188914637894, worksheet.lever_graphs_q3246, 0.002); end
  def test_lever_graphs_r3246; assert_in_epsilon(7.93521010357745, worksheet.lever_graphs_r3246, 0.002); end
  def test_lever_graphs_s3246; assert_in_epsilon(8.078231292517007, worksheet.lever_graphs_s3246, 0.002); end
  def test_lever_graphs_b3247; assert_in_epsilon(2.0, worksheet.lever_graphs_b3247, 0.002); end
  def test_lever_graphs_k3247; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3247, 0.002); end
  def test_lever_graphs_l3247; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3247, 0.002); end
  def test_lever_graphs_m3247; assert_in_epsilon(7.508612419326706, worksheet.lever_graphs_m3247, 0.002); end
  def test_lever_graphs_n3247; assert_in_epsilon(7.9401418687132965, worksheet.lever_graphs_n3247, 0.002); end
  def test_lever_graphs_o3247; assert_in_epsilon(8.371671318099887, worksheet.lever_graphs_o3247, 0.002); end
  def test_lever_graphs_p3247; assert_in_epsilon(8.80320076748648, worksheet.lever_graphs_p3247, 0.002); end
  def test_lever_graphs_q3247; assert_in_epsilon(9.234730216873073, worksheet.lever_graphs_q3247, 0.002); end
  def test_lever_graphs_r3247; assert_in_epsilon(9.666259666259664, worksheet.lever_graphs_r3247, 0.002); end
  def test_lever_graphs_s3247; assert_in_epsilon(10.097789115646258, worksheet.lever_graphs_s3247, 0.002); end
  def test_lever_graphs_b3248; assert_in_epsilon(3.0, worksheet.lever_graphs_b3248, 0.002); end
  def test_lever_graphs_k3248; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3248, 0.002); end
  def test_lever_graphs_l3248; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3248, 0.002); end
  def test_lever_graphs_m3248; assert_in_epsilon(8.181798360369784, worksheet.lever_graphs_m3248, 0.002); end
  def test_lever_graphs_n3248; assert_in_epsilon(9.286513750799465, worksheet.lever_graphs_n3248, 0.002); end
  def test_lever_graphs_o3248; assert_in_epsilon(10.391229141229138, worksheet.lever_graphs_o3248, 0.002); end
  def test_lever_graphs_p3248; assert_in_epsilon(11.495944531658813, worksheet.lever_graphs_p3248, 0.002); end
  def test_lever_graphs_q3248; assert_in_epsilon(12.600659922088493, worksheet.lever_graphs_q3248, 0.002); end
  def test_lever_graphs_r3248; assert_in_epsilon(13.705375312518166, worksheet.lever_graphs_r3248, 0.002); end
  def test_lever_graphs_s3248; assert_in_epsilon(14.810090702947843, worksheet.lever_graphs_s3248, 0.002); end
  def test_lever_graphs_b3249; assert_in_epsilon(4.0, worksheet.lever_graphs_b3249, 0.002); end
  def test_lever_graphs_k3249; assert_in_epsilon(6.731859410430838, worksheet.lever_graphs_k3249, 0.002); end
  def test_lever_graphs_l3249; assert_in_epsilon(7.077082969940111, worksheet.lever_graphs_l3249, 0.002); end
  def test_lever_graphs_m3249; assert_in_epsilon(8.951153721561884, worksheet.lever_graphs_m3249, 0.002); end
  def test_lever_graphs_n3249; assert_in_epsilon(10.825224473183656, worksheet.lever_graphs_n3249, 0.002); end
  def test_lever_graphs_o3249; assert_in_epsilon(12.699295224805427, worksheet.lever_graphs_o3249, 0.002); end
  def test_lever_graphs_p3249; assert_in_epsilon(14.5733659764272, worksheet.lever_graphs_p3249, 0.002); end
  def test_lever_graphs_q3249; assert_in_epsilon(16.447436728048974, worksheet.lever_graphs_q3249, 0.002); end
  def test_lever_graphs_r3249; assert_in_epsilon(18.321507479670743, worksheet.lever_graphs_r3249, 0.002); end
  def test_lever_graphs_s3249; assert_in_epsilon(20.195578231292515, worksheet.lever_graphs_s3249, 0.002); end
  def test_lever_graphs_c2381; assert_equal("1975", worksheet.lever_graphs_c2381); end
  def test_lever_graphs_d2381; assert_equal("1980", worksheet.lever_graphs_d2381); end
  def test_lever_graphs_e2381; assert_equal("1985", worksheet.lever_graphs_e2381); end
  def test_lever_graphs_f2381; assert_equal("1990", worksheet.lever_graphs_f2381); end
  def test_lever_graphs_g2381; assert_equal("1995", worksheet.lever_graphs_g2381); end
  def test_lever_graphs_h2381; assert_equal("2000", worksheet.lever_graphs_h2381); end
  def test_lever_graphs_i2381; assert_equal("2005", worksheet.lever_graphs_i2381); end
  def test_lever_graphs_j2381; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2381, 0.002); end
  def test_lever_graphs_k2381; assert_equal("2011", worksheet.lever_graphs_k2381); end
  def test_lever_graphs_l2381; assert_equal("2015", worksheet.lever_graphs_l2381); end
  def test_lever_graphs_m2381; assert_equal("2020", worksheet.lever_graphs_m2381); end
  def test_lever_graphs_n2381; assert_equal("2025", worksheet.lever_graphs_n2381); end
  def test_lever_graphs_o2381; assert_equal("2030", worksheet.lever_graphs_o2381); end
  def test_lever_graphs_p2381; assert_equal("2035", worksheet.lever_graphs_p2381); end
  def test_lever_graphs_q2381; assert_equal("2040", worksheet.lever_graphs_q2381); end
  def test_lever_graphs_r2381; assert_equal("2045", worksheet.lever_graphs_r2381); end
  def test_lever_graphs_s2381; assert_equal("2050", worksheet.lever_graphs_s2381); end
  def test_lever_graphs_b2382; assert_equal("Historic data", worksheet.lever_graphs_b2382); end
  def test_lever_graphs_b2383; assert_in_delta(1.0, worksheet.lever_graphs_b2383, 0.002); end
  def test_lever_graphs_k2383; assert_in_epsilon(78.0, worksheet.lever_graphs_k2383, 0.002); end
  def test_lever_graphs_l2383; assert_in_epsilon(79.0, worksheet.lever_graphs_l2383, 0.002); end
  def test_lever_graphs_m2383; assert_in_epsilon(81.99999999999999, worksheet.lever_graphs_m2383, 0.002); end
  def test_lever_graphs_n2383; assert_in_epsilon(85.0, worksheet.lever_graphs_n2383, 0.002); end
  def test_lever_graphs_o2383; assert_in_epsilon(87.99999999999999, worksheet.lever_graphs_o2383, 0.002); end
  def test_lever_graphs_p2383; assert_in_epsilon(90.99999999999999, worksheet.lever_graphs_p2383, 0.002); end
  def test_lever_graphs_q2383; assert_in_epsilon(94.0, worksheet.lever_graphs_q2383, 0.002); end
  def test_lever_graphs_r2383; assert_in_epsilon(97.0, worksheet.lever_graphs_r2383, 0.002); end
  def test_lever_graphs_s2383; assert_in_epsilon(100.0, worksheet.lever_graphs_s2383, 0.002); end
  def test_lever_graphs_b2384; assert_in_epsilon(2.0, worksheet.lever_graphs_b2384, 0.002); end
  def test_lever_graphs_k2384; assert_in_epsilon(78.0, worksheet.lever_graphs_k2384, 0.002); end
  def test_lever_graphs_l2384; assert_in_epsilon(79.0, worksheet.lever_graphs_l2384, 0.002); end
  def test_lever_graphs_m2384; assert_in_epsilon(81.28571428571428, worksheet.lever_graphs_m2384, 0.002); end
  def test_lever_graphs_n2384; assert_in_epsilon(83.57142857142857, worksheet.lever_graphs_n2384, 0.002); end
  def test_lever_graphs_o2384; assert_in_epsilon(85.85714285714285, worksheet.lever_graphs_o2384, 0.002); end
  def test_lever_graphs_p2384; assert_in_epsilon(88.14285714285714, worksheet.lever_graphs_p2384, 0.002); end
  def test_lever_graphs_q2384; assert_in_epsilon(90.42857142857143, worksheet.lever_graphs_q2384, 0.002); end
  def test_lever_graphs_r2384; assert_in_epsilon(92.71428571428571, worksheet.lever_graphs_r2384, 0.002); end
  def test_lever_graphs_s2384; assert_in_epsilon(95.0, worksheet.lever_graphs_s2384, 0.002); end
  def test_lever_graphs_b2385; assert_in_epsilon(3.0, worksheet.lever_graphs_b2385, 0.002); end
  def test_lever_graphs_k2385; assert_in_epsilon(78.0, worksheet.lever_graphs_k2385, 0.002); end
  def test_lever_graphs_l2385; assert_in_epsilon(79.0, worksheet.lever_graphs_l2385, 0.002); end
  def test_lever_graphs_m2385; assert_in_epsilon(80.57142857142856, worksheet.lever_graphs_m2385, 0.002); end
  def test_lever_graphs_n2385; assert_in_epsilon(82.14285714285714, worksheet.lever_graphs_n2385, 0.002); end
  def test_lever_graphs_o2385; assert_in_epsilon(83.7142857142857, worksheet.lever_graphs_o2385, 0.002); end
  def test_lever_graphs_p2385; assert_in_epsilon(85.28571428571428, worksheet.lever_graphs_p2385, 0.002); end
  def test_lever_graphs_q2385; assert_in_epsilon(86.85714285714285, worksheet.lever_graphs_q2385, 0.002); end
  def test_lever_graphs_r2385; assert_in_epsilon(88.42857142857142, worksheet.lever_graphs_r2385, 0.002); end
  def test_lever_graphs_s2385; assert_in_epsilon(89.99999999999999, worksheet.lever_graphs_s2385, 0.002); end
  def test_lever_graphs_b2386; assert_in_epsilon(4.0, worksheet.lever_graphs_b2386, 0.002); end
  def test_lever_graphs_k2386; assert_in_epsilon(78.0, worksheet.lever_graphs_k2386, 0.002); end
  def test_lever_graphs_l2386; assert_in_epsilon(79.0, worksheet.lever_graphs_l2386, 0.002); end
  def test_lever_graphs_m2386; assert_in_epsilon(79.85714285714283, worksheet.lever_graphs_m2386, 0.002); end
  def test_lever_graphs_n2386; assert_in_epsilon(80.71428571428571, worksheet.lever_graphs_n2386, 0.002); end
  def test_lever_graphs_o2386; assert_in_epsilon(81.57142857142857, worksheet.lever_graphs_o2386, 0.002); end
  def test_lever_graphs_p2386; assert_in_epsilon(82.42857142857143, worksheet.lever_graphs_p2386, 0.002); end
  def test_lever_graphs_q2386; assert_in_epsilon(83.28571428571428, worksheet.lever_graphs_q2386, 0.002); end
  def test_lever_graphs_r2386; assert_in_epsilon(84.14285714285714, worksheet.lever_graphs_r2386, 0.002); end
  def test_lever_graphs_s2386; assert_in_epsilon(85.0, worksheet.lever_graphs_s2386, 0.002); end
  def test_lever_graphs_b2387; assert_equal("Australia -average", worksheet.lever_graphs_b2387); end
  def test_lever_graphs_k2387; assert_in_epsilon(214.0, worksheet.lever_graphs_k2387, 0.002); end
  def test_lever_graphs_b2388; assert_equal("US -average", worksheet.lever_graphs_b2388); end
  def test_lever_graphs_k2388; assert_in_epsilon(201.0, worksheet.lever_graphs_k2388, 0.002); end
  def test_lever_graphs_b2389; assert_equal("Germany -average", worksheet.lever_graphs_b2389); end
  def test_lever_graphs_k2389; assert_in_epsilon(109.0, worksheet.lever_graphs_k2389, 0.002); end
  def test_lever_graphs_b2390; assert_equal("Spain -average", worksheet.lever_graphs_b2390); end
  def test_lever_graphs_k2390; assert_in_epsilon(97.0, worksheet.lever_graphs_k2390, 0.002); end
  def test_lever_graphs_b2391; assert_equal("UK -average", worksheet.lever_graphs_b2391); end
  def test_lever_graphs_k2391; assert_in_epsilon(76.0, worksheet.lever_graphs_k2391, 0.002); end
  def test_lever_graphs_b2392; assert_equal("China -average", worksheet.lever_graphs_b2392); end
  def test_lever_graphs_k2392; assert_in_epsilon(60.0, worksheet.lever_graphs_k2392, 0.002); end
  def test_lever_graphs_b2393; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2393); end
  def test_lever_graphs_k2393; assert_in_epsilon(45.0, worksheet.lever_graphs_k2393, 0.002); end
  def test_lever_graphs_c2364; assert_equal("1975", worksheet.lever_graphs_c2364); end
  def test_lever_graphs_d2364; assert_equal("1980", worksheet.lever_graphs_d2364); end
  def test_lever_graphs_e2364; assert_equal("1985", worksheet.lever_graphs_e2364); end
  def test_lever_graphs_f2364; assert_equal("1990", worksheet.lever_graphs_f2364); end
  def test_lever_graphs_g2364; assert_equal("1995", worksheet.lever_graphs_g2364); end
  def test_lever_graphs_h2364; assert_equal("2000", worksheet.lever_graphs_h2364); end
  def test_lever_graphs_i2364; assert_equal("2005", worksheet.lever_graphs_i2364); end
  def test_lever_graphs_j2364; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2364, 0.002); end
  def test_lever_graphs_k2364; assert_equal("2011", worksheet.lever_graphs_k2364); end
  def test_lever_graphs_l2364; assert_equal("2015", worksheet.lever_graphs_l2364); end
  def test_lever_graphs_m2364; assert_equal("2020", worksheet.lever_graphs_m2364); end
  def test_lever_graphs_n2364; assert_equal("2025", worksheet.lever_graphs_n2364); end
  def test_lever_graphs_o2364; assert_equal("2030", worksheet.lever_graphs_o2364); end
  def test_lever_graphs_p2364; assert_equal("2035", worksheet.lever_graphs_p2364); end
  def test_lever_graphs_q2364; assert_equal("2040", worksheet.lever_graphs_q2364); end
  def test_lever_graphs_r2364; assert_equal("2045", worksheet.lever_graphs_r2364); end
  def test_lever_graphs_s2364; assert_equal("2050", worksheet.lever_graphs_s2364); end
  def test_lever_graphs_b2365; assert_equal("Historical data", worksheet.lever_graphs_b2365); end
  def test_lever_graphs_b2366; assert_in_delta(1.0, worksheet.lever_graphs_b2366, 0.002); end
  def test_lever_graphs_k2366; assert_in_epsilon(92.0, worksheet.lever_graphs_k2366, 0.002); end
  def test_lever_graphs_l2366; assert_in_epsilon(93.2, worksheet.lever_graphs_l2366, 0.002); end
  def test_lever_graphs_m2366; assert_in_epsilon(95.6, worksheet.lever_graphs_m2366, 0.002); end
  def test_lever_graphs_n2366; assert_in_epsilon(98.0, worksheet.lever_graphs_n2366, 0.002); end
  def test_lever_graphs_o2366; assert_in_epsilon(100.39999999999999, worksheet.lever_graphs_o2366, 0.002); end
  def test_lever_graphs_p2366; assert_in_epsilon(102.8, worksheet.lever_graphs_p2366, 0.002); end
  def test_lever_graphs_q2366; assert_in_epsilon(105.2, worksheet.lever_graphs_q2366, 0.002); end
  def test_lever_graphs_r2366; assert_in_epsilon(107.6, worksheet.lever_graphs_r2366, 0.002); end
  def test_lever_graphs_s2366; assert_in_epsilon(110.0, worksheet.lever_graphs_s2366, 0.002); end
  def test_lever_graphs_b2367; assert_in_epsilon(2.0, worksheet.lever_graphs_b2367, 0.002); end
  def test_lever_graphs_k2367; assert_in_epsilon(92.0, worksheet.lever_graphs_k2367, 0.002); end
  def test_lever_graphs_l2367; assert_in_epsilon(93.2, worksheet.lever_graphs_l2367, 0.002); end
  def test_lever_graphs_m2367; assert_in_epsilon(94.88571428571427, worksheet.lever_graphs_m2367, 0.002); end
  def test_lever_graphs_n2367; assert_in_epsilon(96.57142857142857, worksheet.lever_graphs_n2367, 0.002); end
  def test_lever_graphs_o2367; assert_in_epsilon(98.25714285714284, worksheet.lever_graphs_o2367, 0.002); end
  def test_lever_graphs_p2367; assert_in_epsilon(99.94285714285714, worksheet.lever_graphs_p2367, 0.002); end
  def test_lever_graphs_q2367; assert_in_epsilon(101.62857142857142, worksheet.lever_graphs_q2367, 0.002); end
  def test_lever_graphs_r2367; assert_in_epsilon(103.3142857142857, worksheet.lever_graphs_r2367, 0.002); end
  def test_lever_graphs_s2367; assert_in_epsilon(105.0, worksheet.lever_graphs_s2367, 0.002); end
  def test_lever_graphs_b2368; assert_in_epsilon(3.0, worksheet.lever_graphs_b2368, 0.002); end
  def test_lever_graphs_k2368; assert_in_epsilon(92.0, worksheet.lever_graphs_k2368, 0.002); end
  def test_lever_graphs_l2368; assert_in_epsilon(93.2, worksheet.lever_graphs_l2368, 0.002); end
  def test_lever_graphs_m2368; assert_in_epsilon(94.17142857142856, worksheet.lever_graphs_m2368, 0.002); end
  def test_lever_graphs_n2368; assert_in_epsilon(95.14285714285715, worksheet.lever_graphs_n2368, 0.002); end
  def test_lever_graphs_o2368; assert_in_epsilon(96.11428571428571, worksheet.lever_graphs_o2368, 0.002); end
  def test_lever_graphs_p2368; assert_in_epsilon(97.08571428571427, worksheet.lever_graphs_p2368, 0.002); end
  def test_lever_graphs_q2368; assert_in_epsilon(98.05714285714285, worksheet.lever_graphs_q2368, 0.002); end
  def test_lever_graphs_r2368; assert_in_epsilon(99.02857142857142, worksheet.lever_graphs_r2368, 0.002); end
  def test_lever_graphs_s2368; assert_in_epsilon(100.0, worksheet.lever_graphs_s2368, 0.002); end
  def test_lever_graphs_b2369; assert_in_epsilon(4.0, worksheet.lever_graphs_b2369, 0.002); end
  def test_lever_graphs_k2369; assert_in_epsilon(92.0, worksheet.lever_graphs_k2369, 0.002); end
  def test_lever_graphs_l2369; assert_in_epsilon(93.2, worksheet.lever_graphs_l2369, 0.002); end
  def test_lever_graphs_m2369; assert_in_epsilon(93.45714285714284, worksheet.lever_graphs_m2369, 0.002); end
  def test_lever_graphs_n2369; assert_in_epsilon(93.71428571428572, worksheet.lever_graphs_n2369, 0.002); end
  def test_lever_graphs_o2369; assert_in_epsilon(93.97142857142858, worksheet.lever_graphs_o2369, 0.002); end
  def test_lever_graphs_p2369; assert_in_epsilon(94.22857142857143, worksheet.lever_graphs_p2369, 0.002); end
  def test_lever_graphs_q2369; assert_in_epsilon(94.4857142857143, worksheet.lever_graphs_q2369, 0.002); end
  def test_lever_graphs_r2369; assert_in_epsilon(94.74285714285715, worksheet.lever_graphs_r2369, 0.002); end
  def test_lever_graphs_s2369; assert_in_epsilon(95.0, worksheet.lever_graphs_s2369, 0.002); end
  def test_lever_graphs_b2370; assert_equal("Australia -average", worksheet.lever_graphs_b2370); end
  def test_lever_graphs_k2370; assert_in_epsilon(214.0, worksheet.lever_graphs_k2370, 0.002); end
  def test_lever_graphs_b2371; assert_equal("US -average", worksheet.lever_graphs_b2371); end
  def test_lever_graphs_k2371; assert_in_epsilon(201.0, worksheet.lever_graphs_k2371, 0.002); end
  def test_lever_graphs_b2372; assert_equal("Germany -average", worksheet.lever_graphs_b2372); end
  def test_lever_graphs_k2372; assert_in_epsilon(109.0, worksheet.lever_graphs_k2372, 0.002); end
  def test_lever_graphs_b2373; assert_equal("Spain -average", worksheet.lever_graphs_b2373); end
  def test_lever_graphs_k2373; assert_in_epsilon(97.0, worksheet.lever_graphs_k2373, 0.002); end
  def test_lever_graphs_b2374; assert_equal("UK -average", worksheet.lever_graphs_b2374); end
  def test_lever_graphs_k2374; assert_in_epsilon(76.0, worksheet.lever_graphs_k2374, 0.002); end
  def test_lever_graphs_b2375; assert_equal("China -average", worksheet.lever_graphs_b2375); end
  def test_lever_graphs_k2375; assert_in_epsilon(60.0, worksheet.lever_graphs_k2375, 0.002); end
  def test_lever_graphs_b2376; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2376); end
  def test_lever_graphs_k2376; assert_in_epsilon(45.0, worksheet.lever_graphs_k2376, 0.002); end
  def test_lever_graphs_c2912; assert_equal("1975", worksheet.lever_graphs_c2912); end
  def test_lever_graphs_d2912; assert_equal("1980", worksheet.lever_graphs_d2912); end
  def test_lever_graphs_e2912; assert_equal("1985", worksheet.lever_graphs_e2912); end
  def test_lever_graphs_f2912; assert_equal("1990", worksheet.lever_graphs_f2912); end
  def test_lever_graphs_g2912; assert_equal("1995", worksheet.lever_graphs_g2912); end
  def test_lever_graphs_h2912; assert_equal("2000", worksheet.lever_graphs_h2912); end
  def test_lever_graphs_i2912; assert_equal("2005", worksheet.lever_graphs_i2912); end
  def test_lever_graphs_j2912; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2912, 0.002); end
  def test_lever_graphs_k2912; assert_equal("2011", worksheet.lever_graphs_k2912); end
  def test_lever_graphs_l2912; assert_equal("2015", worksheet.lever_graphs_l2912); end
  def test_lever_graphs_m2912; assert_equal("2020", worksheet.lever_graphs_m2912); end
  def test_lever_graphs_n2912; assert_equal("2025", worksheet.lever_graphs_n2912); end
  def test_lever_graphs_o2912; assert_equal("2030", worksheet.lever_graphs_o2912); end
  def test_lever_graphs_p2912; assert_equal("2035", worksheet.lever_graphs_p2912); end
  def test_lever_graphs_q2912; assert_equal("2040", worksheet.lever_graphs_q2912); end
  def test_lever_graphs_r2912; assert_equal("2045", worksheet.lever_graphs_r2912); end
  def test_lever_graphs_s2912; assert_equal("2050", worksheet.lever_graphs_s2912); end
  def test_lever_graphs_b2913; assert_equal("Historic data", worksheet.lever_graphs_b2913); end
  def test_lever_graphs_c2913; assert_in_epsilon(1820.2, worksheet.lever_graphs_c2913, 0.002); end
  def test_lever_graphs_d2913; assert_in_epsilon(1891.64, worksheet.lever_graphs_d2913, 0.002); end
  def test_lever_graphs_e2913; assert_in_epsilon(1966.88, worksheet.lever_graphs_e2913, 0.002); end
  def test_lever_graphs_f2913; assert_in_epsilon(1991.2, worksheet.lever_graphs_f2913, 0.002); end
  def test_lever_graphs_g2913; assert_in_epsilon(2023.12, worksheet.lever_graphs_g2913, 0.002); end
  def test_lever_graphs_h2913; assert_in_epsilon(2071.76, worksheet.lever_graphs_h2913, 0.002); end
  def test_lever_graphs_i2913; assert_in_epsilon(2098.36, worksheet.lever_graphs_i2913, 0.002); end
  def test_lever_graphs_j2913; assert_in_epsilon(2167.0, worksheet.lever_graphs_j2913, 0.002); end
  def test_lever_graphs_k2913; assert_in_epsilon(2180.0, worksheet.lever_graphs_k2913, 0.002); end
  def test_lever_graphs_b2914; assert_in_delta(1.0, worksheet.lever_graphs_b2914, 0.002); end
  def test_lever_graphs_k2914; assert_in_epsilon(2180.0, worksheet.lever_graphs_k2914, 0.002); end
  def test_lever_graphs_l2914; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l2914, 0.002); end
  def test_lever_graphs_m2914; assert_in_epsilon(2204.2618030984536, worksheet.lever_graphs_m2914, 0.002); end
  def test_lever_graphs_n2914; assert_in_epsilon(2216.241060058567, worksheet.lever_graphs_n2914, 0.002); end
  def test_lever_graphs_o2914; assert_in_epsilon(2241.9990498552693, worksheet.lever_graphs_o2914, 0.002); end
  def test_lever_graphs_p2914; assert_in_epsilon(2289.6920605045525, worksheet.lever_graphs_p2914, 0.002); end
  def test_lever_graphs_q2914; assert_in_epsilon(2357.6923076923076, worksheet.lever_graphs_q2914, 0.002); end
  def test_lever_graphs_r2914; assert_in_epsilon(2425.692554880063, worksheet.lever_graphs_r2914, 0.002); end
  def test_lever_graphs_s2914; assert_in_epsilon(2520.0, worksheet.lever_graphs_s2914, 0.002); end
  def test_lever_graphs_b2915; assert_in_epsilon(2.0, worksheet.lever_graphs_b2915, 0.002); end
  def test_lever_graphs_k2915; assert_in_epsilon(2180.0, worksheet.lever_graphs_k2915, 0.002); end
  def test_lever_graphs_l2915; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l2915, 0.002); end
  def test_lever_graphs_m2915; assert_in_epsilon(2199.0659136071786, worksheet.lever_graphs_m2915, 0.002); end
  def test_lever_graphs_n2915; assert_in_epsilon(2204.0336149531972, worksheet.lever_graphs_n2915, 0.002); end
  def test_lever_graphs_o2915; assert_in_epsilon(2214.715245793062, worksheet.lever_graphs_o2915, 0.002); end
  def test_lever_graphs_p2915; assert_in_epsilon(2234.493153052836, worksheet.lever_graphs_p2915, 0.002); end
  def test_lever_graphs_q2915; assert_in_epsilon(2262.6923076923076, worksheet.lever_graphs_q2915, 0.002); end
  def test_lever_graphs_r2915; assert_in_epsilon(2290.8914623317796, worksheet.lever_graphs_r2915, 0.002); end
  def test_lever_graphs_s2915; assert_in_epsilon(2330.0, worksheet.lever_graphs_s2915, 0.002); end
  def test_lever_graphs_b2916; assert_in_epsilon(3.0, worksheet.lever_graphs_b2916, 0.002); end
  def test_lever_graphs_k2916; assert_in_epsilon(2180.0, worksheet.lever_graphs_k2916, 0.002); end
  def test_lever_graphs_l2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l2916, 0.002); end
  def test_lever_graphs_m2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_m2916, 0.002); end
  def test_lever_graphs_n2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_n2916, 0.002); end
  def test_lever_graphs_o2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_o2916, 0.002); end
  def test_lever_graphs_p2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_p2916, 0.002); end
  def test_lever_graphs_q2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_q2916, 0.002); end
  def test_lever_graphs_r2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_r2916, 0.002); end
  def test_lever_graphs_s2916; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_s2916, 0.002); end
  def test_lever_graphs_b2917; assert_in_epsilon(4.0, worksheet.lever_graphs_b2917, 0.002); end
  def test_lever_graphs_k2917; assert_in_epsilon(2180.0, worksheet.lever_graphs_k2917, 0.002); end
  def test_lever_graphs_l2917; assert_in_epsilon(2195.3846153846157, worksheet.lever_graphs_l2917, 0.002); end
  def test_lever_graphs_m2917; assert_in_epsilon(2192.7761526440568, worksheet.lever_graphs_m2917, 0.002); end
  def test_lever_graphs_n2917; assert_in_epsilon(2189.2561814045916, worksheet.lever_graphs_n2917, 0.002); end
  def test_lever_graphs_o2917; assert_in_epsilon(2181.6874829809162, worksheet.lever_graphs_o2917, 0.002); end
  def test_lever_graphs_p2917; assert_in_epsilon(2167.6734229797053, worksheet.lever_graphs_p2917, 0.002); end
  def test_lever_graphs_q2917; assert_in_epsilon(2147.692307692308, worksheet.lever_graphs_q2917, 0.002); end
  def test_lever_graphs_r2917; assert_in_epsilon(2127.7111924049104, worksheet.lever_graphs_r2917, 0.002); end
  def test_lever_graphs_s2917; assert_in_epsilon(2100.0, worksheet.lever_graphs_s2917, 0.002); end
  def test_lever_graphs_b2918; assert_equal("USA ", worksheet.lever_graphs_b2918); end
  def test_lever_graphs_k2918; assert_in_epsilon(2729.0, worksheet.lever_graphs_k2918, 0.002); end
  def test_lever_graphs_b2919; assert_equal("EU ", worksheet.lever_graphs_b2919); end
  def test_lever_graphs_k2919; assert_in_epsilon(2520.0, worksheet.lever_graphs_k2919, 0.002); end
  def test_lever_graphs_b2920; assert_equal("Japan", worksheet.lever_graphs_b2920); end
  def test_lever_graphs_k2920; assert_in_epsilon(2066.44, worksheet.lever_graphs_k2920, 0.002); end
  def test_lever_graphs_b2921; assert_equal("Australia ", worksheet.lever_graphs_b2921); end
  def test_lever_graphs_k2921; assert_in_epsilon(2449.0, worksheet.lever_graphs_k2921, 0.002); end
  def test_lever_graphs_b2922; assert_equal("China ", worksheet.lever_graphs_b2922); end
  def test_lever_graphs_k2922; assert_in_epsilon(2306.0, worksheet.lever_graphs_k2922, 0.002); end
  def test_lever_graphs_b2923; assert_equal("South Africa", worksheet.lever_graphs_b2923); end
  def test_lever_graphs_k2923; assert_in_epsilon(2255.0, worksheet.lever_graphs_k2923, 0.002); end
  def test_lever_graphs_b2924; assert_equal("Bangladesh", worksheet.lever_graphs_b2924); end
  def test_lever_graphs_k2924; assert_in_epsilon(1823.0, worksheet.lever_graphs_k2924, 0.002); end
  def test_lever_graphs_b2925; assert_equal("Malaysia", worksheet.lever_graphs_b2925); end
  def test_lever_graphs_k2925; assert_in_epsilon(2141.0, worksheet.lever_graphs_k2925, 0.002); end
  def test_lever_graphs_b2926; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2926); end
  def test_lever_graphs_k2926; assert_in_epsilon(2100.0, worksheet.lever_graphs_k2926, 0.002); end
  def test_lever_graphs_c1856; assert_equal("1975", worksheet.lever_graphs_c1856); end
  def test_lever_graphs_d1856; assert_equal("1980", worksheet.lever_graphs_d1856); end
  def test_lever_graphs_e1856; assert_equal("1985", worksheet.lever_graphs_e1856); end
  def test_lever_graphs_f1856; assert_equal("1990", worksheet.lever_graphs_f1856); end
  def test_lever_graphs_g1856; assert_equal("1995", worksheet.lever_graphs_g1856); end
  def test_lever_graphs_h1856; assert_equal("2000", worksheet.lever_graphs_h1856); end
  def test_lever_graphs_i1856; assert_equal("2005", worksheet.lever_graphs_i1856); end
  def test_lever_graphs_j1856; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1856, 0.002); end
  def test_lever_graphs_k1856; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1856, 0.002); end
  def test_lever_graphs_l1856; assert_equal("2015", worksheet.lever_graphs_l1856); end
  def test_lever_graphs_m1856; assert_equal("2020", worksheet.lever_graphs_m1856); end
  def test_lever_graphs_n1856; assert_equal("2025", worksheet.lever_graphs_n1856); end
  def test_lever_graphs_o1856; assert_equal("2030", worksheet.lever_graphs_o1856); end
  def test_lever_graphs_p1856; assert_equal("2035", worksheet.lever_graphs_p1856); end
  def test_lever_graphs_q1856; assert_equal("2040", worksheet.lever_graphs_q1856); end
  def test_lever_graphs_r1856; assert_equal("2045", worksheet.lever_graphs_r1856); end
  def test_lever_graphs_s1856; assert_equal("2050", worksheet.lever_graphs_s1856); end
  def test_lever_graphs_b1857; assert_equal("Historic data", worksheet.lever_graphs_b1857); end
  def test_lever_graphs_b1858; assert_in_delta(1.0, worksheet.lever_graphs_b1858, 0.002); end
  def test_lever_graphs_k1858; assert_in_delta(0.0, (worksheet.lever_graphs_k1858||0), 0.002); end
  def test_lever_graphs_l1858; assert_in_epsilon(9.0, worksheet.lever_graphs_l1858, 0.002); end
  def test_lever_graphs_m1858; assert_in_epsilon(16.0, worksheet.lever_graphs_m1858, 0.002); end
  def test_lever_graphs_n1858; assert_in_epsilon(16.0, worksheet.lever_graphs_n1858, 0.002); end
  def test_lever_graphs_o1858; assert_in_epsilon(16.0, worksheet.lever_graphs_o1858, 0.002); end
  def test_lever_graphs_p1858; assert_in_epsilon(16.0, worksheet.lever_graphs_p1858, 0.002); end
  def test_lever_graphs_q1858; assert_in_epsilon(16.0, worksheet.lever_graphs_q1858, 0.002); end
  def test_lever_graphs_r1858; assert_in_epsilon(16.0, worksheet.lever_graphs_r1858, 0.002); end
  def test_lever_graphs_s1858; assert_in_epsilon(16.0, worksheet.lever_graphs_s1858, 0.002); end
  def test_lever_graphs_b1859; assert_in_epsilon(2.0, worksheet.lever_graphs_b1859, 0.002); end
  def test_lever_graphs_k1859; assert_in_delta(0.0, (worksheet.lever_graphs_k1859||0), 0.002); end
  def test_lever_graphs_l1859; assert_in_epsilon(9.0, worksheet.lever_graphs_l1859, 0.002); end
  def test_lever_graphs_m1859; assert_in_epsilon(18.0, worksheet.lever_graphs_m1859, 0.002); end
  def test_lever_graphs_n1859; assert_in_epsilon(36.0, worksheet.lever_graphs_n1859, 0.002); end
  def test_lever_graphs_o1859; assert_in_epsilon(114.0, worksheet.lever_graphs_o1859, 0.002); end
  def test_lever_graphs_p1859; assert_in_epsilon(159.6, worksheet.lever_graphs_p1859, 0.002); end
  def test_lever_graphs_q1859; assert_in_epsilon(223.4, worksheet.lever_graphs_q1859, 0.002); end
  def test_lever_graphs_r1859; assert_in_epsilon(312.8, worksheet.lever_graphs_r1859, 0.002); end
  def test_lever_graphs_s1859; assert_in_epsilon(490.0, worksheet.lever_graphs_s1859, 0.002); end
  def test_lever_graphs_b1860; assert_in_epsilon(3.0, worksheet.lever_graphs_b1860, 0.002); end
  def test_lever_graphs_k1860; assert_in_delta(0.0, (worksheet.lever_graphs_k1860||0), 0.002); end
  def test_lever_graphs_l1860; assert_in_epsilon(9.0, worksheet.lever_graphs_l1860, 0.002); end
  def test_lever_graphs_m1860; assert_in_epsilon(31.3, worksheet.lever_graphs_m1860, 0.002); end
  def test_lever_graphs_n1860; assert_in_epsilon(108.9, worksheet.lever_graphs_n1860, 0.002); end
  def test_lever_graphs_o1860; assert_in_epsilon(380.0, worksheet.lever_graphs_o1860, 0.002); end
  def test_lever_graphs_p1860; assert_in_epsilon(535.8, worksheet.lever_graphs_p1860, 0.002); end
  def test_lever_graphs_q1860; assert_in_epsilon(755.5, worksheet.lever_graphs_q1860, 0.002); end
  def test_lever_graphs_r1860; assert_in_epsilon(1065.3, worksheet.lever_graphs_r1860, 0.002); end
  def test_lever_graphs_s1860; assert_in_epsilon(1487.0, worksheet.lever_graphs_s1860, 0.002); end
  def test_lever_graphs_b1861; assert_in_epsilon(4.0, worksheet.lever_graphs_b1861, 0.002); end
  def test_lever_graphs_k1861; assert_in_delta(0.0, (worksheet.lever_graphs_k1861||0), 0.002); end
  def test_lever_graphs_l1861; assert_in_epsilon(9.0, worksheet.lever_graphs_l1861, 0.002); end
  def test_lever_graphs_m1861; assert_in_epsilon(380.0, worksheet.lever_graphs_m1861, 0.002); end
  def test_lever_graphs_n1861; assert_in_epsilon(760.0, worksheet.lever_graphs_n1861, 0.002); end
  def test_lever_graphs_o1861; assert_in_epsilon(1266.7, worksheet.lever_graphs_o1861, 0.002); end
  def test_lever_graphs_p1861; assert_in_epsilon(1773.4, worksheet.lever_graphs_p1861, 0.002); end
  def test_lever_graphs_q1861; assert_in_epsilon(2482.8, worksheet.lever_graphs_q1861, 0.002); end
  def test_lever_graphs_r1861; assert_in_epsilon(3000.0, worksheet.lever_graphs_r1861, 0.002); end
  def test_lever_graphs_s1861; assert_in_epsilon(3700.0, worksheet.lever_graphs_s1861, 0.002); end
  def test_lever_graphs_b1862; assert_equal("Comparator A", worksheet.lever_graphs_b1862); end
  def test_lever_graphs_b1863; assert_equal("Comparator B", worksheet.lever_graphs_b1863); end
  def test_lever_graphs_b1864; assert_equal("Comparator C", worksheet.lever_graphs_b1864); end
  def test_lever_graphs_c1880; assert_equal("1975", worksheet.lever_graphs_c1880); end
  def test_lever_graphs_d1880; assert_equal("1980", worksheet.lever_graphs_d1880); end
  def test_lever_graphs_e1880; assert_equal("1985", worksheet.lever_graphs_e1880); end
  def test_lever_graphs_f1880; assert_equal("1990", worksheet.lever_graphs_f1880); end
  def test_lever_graphs_g1880; assert_equal("1995", worksheet.lever_graphs_g1880); end
  def test_lever_graphs_h1880; assert_equal("2000", worksheet.lever_graphs_h1880); end
  def test_lever_graphs_i1880; assert_equal("2005", worksheet.lever_graphs_i1880); end
  def test_lever_graphs_j1880; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1880, 0.002); end
  def test_lever_graphs_k1880; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1880, 0.002); end
  def test_lever_graphs_l1880; assert_equal("2015", worksheet.lever_graphs_l1880); end
  def test_lever_graphs_m1880; assert_equal("2020", worksheet.lever_graphs_m1880); end
  def test_lever_graphs_n1880; assert_equal("2025", worksheet.lever_graphs_n1880); end
  def test_lever_graphs_o1880; assert_equal("2030", worksheet.lever_graphs_o1880); end
  def test_lever_graphs_p1880; assert_equal("2035", worksheet.lever_graphs_p1880); end
  def test_lever_graphs_q1880; assert_equal("2040", worksheet.lever_graphs_q1880); end
  def test_lever_graphs_r1880; assert_equal("2045", worksheet.lever_graphs_r1880); end
  def test_lever_graphs_s1880; assert_equal("2050", worksheet.lever_graphs_s1880); end
  def test_lever_graphs_b1881; assert_equal("Historic data", worksheet.lever_graphs_b1881); end
  def test_lever_graphs_b1882; assert_in_delta(1.0, worksheet.lever_graphs_b1882, 0.002); end
  def test_lever_graphs_k1882; assert_in_epsilon(1.6, worksheet.lever_graphs_k1882, 0.002); end
  def test_lever_graphs_l1882; assert_in_epsilon(8.0, worksheet.lever_graphs_l1882, 0.002); end
  def test_lever_graphs_m1882; assert_in_epsilon(30.0, worksheet.lever_graphs_m1882, 0.002); end
  def test_lever_graphs_n1882; assert_in_epsilon(30.0, worksheet.lever_graphs_n1882, 0.002); end
  def test_lever_graphs_o1882; assert_in_epsilon(20.0, worksheet.lever_graphs_o1882, 0.002); end
  def test_lever_graphs_p1882; assert_in_epsilon(20.0, worksheet.lever_graphs_p1882, 0.002); end
  def test_lever_graphs_q1882; assert_in_delta(0.0, (worksheet.lever_graphs_q1882||0), 0.002); end
  def test_lever_graphs_r1882; assert_in_delta(0.0, (worksheet.lever_graphs_r1882||0), 0.002); end
  def test_lever_graphs_s1882; assert_in_delta(0.0, (worksheet.lever_graphs_s1882||0), 0.002); end
  def test_lever_graphs_b1883; assert_in_epsilon(2.0, worksheet.lever_graphs_b1883, 0.002); end
  def test_lever_graphs_k1883; assert_in_epsilon(1.6, worksheet.lever_graphs_k1883, 0.002); end
  def test_lever_graphs_l1883; assert_in_epsilon(8.0, worksheet.lever_graphs_l1883, 0.002); end
  def test_lever_graphs_m1883; assert_in_epsilon(71.0, worksheet.lever_graphs_m1883, 0.002); end
  def test_lever_graphs_n1883; assert_in_epsilon(101.0, worksheet.lever_graphs_n1883, 0.002); end
  def test_lever_graphs_o1883; assert_in_epsilon(164.0, worksheet.lever_graphs_o1883, 0.002); end
  def test_lever_graphs_p1883; assert_in_epsilon(199.0, worksheet.lever_graphs_p1883, 0.002); end
  def test_lever_graphs_q1883; assert_in_epsilon(267.0, worksheet.lever_graphs_q1883, 0.002); end
  def test_lever_graphs_r1883; assert_in_epsilon(312.0, worksheet.lever_graphs_r1883, 0.002); end
  def test_lever_graphs_s1883; assert_in_epsilon(388.0, worksheet.lever_graphs_s1883, 0.002); end
  def test_lever_graphs_b1884; assert_in_epsilon(3.0, worksheet.lever_graphs_b1884, 0.002); end
  def test_lever_graphs_k1884; assert_in_epsilon(1.6, worksheet.lever_graphs_k1884, 0.002); end
  def test_lever_graphs_l1884; assert_in_epsilon(8.0, worksheet.lever_graphs_l1884, 0.002); end
  def test_lever_graphs_m1884; assert_in_epsilon(83.0, worksheet.lever_graphs_m1884, 0.002); end
  def test_lever_graphs_n1884; assert_in_epsilon(146.3, worksheet.lever_graphs_n1884, 0.002); end
  def test_lever_graphs_o1884; assert_in_epsilon(257.8, worksheet.lever_graphs_o1884, 0.002); end
  def test_lever_graphs_p1884; assert_in_epsilon(396.6, worksheet.lever_graphs_p1884, 0.002); end
  def test_lever_graphs_q1884; assert_in_epsilon(610.3, worksheet.lever_graphs_q1884, 0.002); end
  def test_lever_graphs_r1884; assert_in_epsilon(778.9, worksheet.lever_graphs_r1884, 0.002); end
  def test_lever_graphs_s1884; assert_in_epsilon(994.1, worksheet.lever_graphs_s1884, 0.002); end
  def test_lever_graphs_b1885; assert_in_epsilon(4.0, worksheet.lever_graphs_b1885, 0.002); end
  def test_lever_graphs_k1885; assert_in_epsilon(1.6, worksheet.lever_graphs_k1885, 0.002); end
  def test_lever_graphs_l1885; assert_in_epsilon(8.0, worksheet.lever_graphs_l1885, 0.002); end
  def test_lever_graphs_m1885; assert_in_epsilon(97.6, worksheet.lever_graphs_m1885, 0.002); end
  def test_lever_graphs_n1885; assert_in_epsilon(196.2, worksheet.lever_graphs_n1885, 0.002); end
  def test_lever_graphs_o1885; assert_in_epsilon(394.7, worksheet.lever_graphs_o1885, 0.002); end
  def test_lever_graphs_p1885; assert_in_epsilon(665.1, worksheet.lever_graphs_p1885, 0.002); end
  def test_lever_graphs_q1885; assert_in_epsilon(1120.8, worksheet.lever_graphs_q1885, 0.002); end
  def test_lever_graphs_r1885; assert_in_epsilon(1499.9, worksheet.lever_graphs_r1885, 0.002); end
  def test_lever_graphs_s1885; assert_in_epsilon(2007.1, worksheet.lever_graphs_s1885, 0.002); end
  def test_lever_graphs_b1886; assert_equal("Comparator A", worksheet.lever_graphs_b1886); end
  def test_lever_graphs_b1887; assert_equal("Comparator B", worksheet.lever_graphs_b1887); end
  def test_lever_graphs_b1888; assert_equal("Comparator C", worksheet.lever_graphs_b1888); end
  def test_lever_graphs_c1833; assert_equal("1975", worksheet.lever_graphs_c1833); end
  def test_lever_graphs_d1833; assert_equal("1980", worksheet.lever_graphs_d1833); end
  def test_lever_graphs_e1833; assert_equal("1985", worksheet.lever_graphs_e1833); end
  def test_lever_graphs_f1833; assert_equal("1990", worksheet.lever_graphs_f1833); end
  def test_lever_graphs_g1833; assert_equal("1995", worksheet.lever_graphs_g1833); end
  def test_lever_graphs_h1833; assert_equal("2000", worksheet.lever_graphs_h1833); end
  def test_lever_graphs_i1833; assert_equal("2005", worksheet.lever_graphs_i1833); end
  def test_lever_graphs_j1833; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1833, 0.002); end
  def test_lever_graphs_k1833; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1833, 0.002); end
  def test_lever_graphs_l1833; assert_equal("2015", worksheet.lever_graphs_l1833); end
  def test_lever_graphs_m1833; assert_equal("2020", worksheet.lever_graphs_m1833); end
  def test_lever_graphs_n1833; assert_equal("2025", worksheet.lever_graphs_n1833); end
  def test_lever_graphs_o1833; assert_equal("2030", worksheet.lever_graphs_o1833); end
  def test_lever_graphs_p1833; assert_equal("2035", worksheet.lever_graphs_p1833); end
  def test_lever_graphs_q1833; assert_equal("2040", worksheet.lever_graphs_q1833); end
  def test_lever_graphs_r1833; assert_equal("2045", worksheet.lever_graphs_r1833); end
  def test_lever_graphs_s1833; assert_equal("2050", worksheet.lever_graphs_s1833); end
  def test_lever_graphs_b1834; assert_equal("Historic data", worksheet.lever_graphs_b1834); end
  def test_lever_graphs_b1835; assert_in_delta(1.0, worksheet.lever_graphs_b1835, 0.002); end
  def test_lever_graphs_k1835; assert_in_epsilon(11.43, worksheet.lever_graphs_k1835, 0.002); end
  def test_lever_graphs_l1835; assert_in_epsilon(14.5, worksheet.lever_graphs_l1835, 0.002); end
  def test_lever_graphs_m1835; assert_in_epsilon(16.0, worksheet.lever_graphs_m1835, 0.002); end
  def test_lever_graphs_n1835; assert_in_epsilon(16.0, worksheet.lever_graphs_n1835, 0.002); end
  def test_lever_graphs_o1835; assert_in_epsilon(10.0, worksheet.lever_graphs_o1835, 0.002); end
  def test_lever_graphs_p1835; assert_in_epsilon(7.0, worksheet.lever_graphs_p1835, 0.002); end
  def test_lever_graphs_q1835; assert_in_epsilon(4.0, worksheet.lever_graphs_q1835, 0.002); end
  def test_lever_graphs_r1835; assert_in_delta(0.0, (worksheet.lever_graphs_r1835||0), 0.002); end
  def test_lever_graphs_s1835; assert_in_delta(0.0, (worksheet.lever_graphs_s1835||0), 0.002); end
  def test_lever_graphs_b1836; assert_in_epsilon(2.0, worksheet.lever_graphs_b1836, 0.002); end
  def test_lever_graphs_k1836; assert_in_epsilon(11.43, worksheet.lever_graphs_k1836, 0.002); end
  def test_lever_graphs_l1836; assert_in_epsilon(14.5, worksheet.lever_graphs_l1836, 0.002); end
  def test_lever_graphs_m1836; assert_in_epsilon(19.0, worksheet.lever_graphs_m1836, 0.002); end
  def test_lever_graphs_n1836; assert_in_epsilon(25.0, worksheet.lever_graphs_n1836, 0.002); end
  def test_lever_graphs_o1836; assert_in_epsilon(39.0, worksheet.lever_graphs_o1836, 0.002); end
  def test_lever_graphs_p1836; assert_in_epsilon(73.0, worksheet.lever_graphs_p1836, 0.002); end
  def test_lever_graphs_q1836; assert_in_epsilon(98.0, worksheet.lever_graphs_q1836, 0.002); end
  def test_lever_graphs_r1836; assert_in_epsilon(137.0, worksheet.lever_graphs_r1836, 0.002); end
  def test_lever_graphs_s1836; assert_in_epsilon(172.0, worksheet.lever_graphs_s1836, 0.002); end
  def test_lever_graphs_b1837; assert_in_epsilon(3.0, worksheet.lever_graphs_b1837, 0.002); end
  def test_lever_graphs_k1837; assert_in_epsilon(11.43, worksheet.lever_graphs_k1837, 0.002); end
  def test_lever_graphs_l1837; assert_in_epsilon(14.5, worksheet.lever_graphs_l1837, 0.002); end
  def test_lever_graphs_m1837; assert_in_epsilon(23.0, worksheet.lever_graphs_m1837, 0.002); end
  def test_lever_graphs_n1837; assert_in_epsilon(38.0, worksheet.lever_graphs_n1837, 0.002); end
  def test_lever_graphs_o1837; assert_in_epsilon(60.0, worksheet.lever_graphs_o1837, 0.002); end
  def test_lever_graphs_p1837; assert_in_epsilon(103.0, worksheet.lever_graphs_p1837, 0.002); end
  def test_lever_graphs_q1837; assert_in_epsilon(169.0, worksheet.lever_graphs_q1837, 0.002); end
  def test_lever_graphs_r1837; assert_in_epsilon(237.0, worksheet.lever_graphs_r1837, 0.002); end
  def test_lever_graphs_s1837; assert_in_epsilon(289.0, worksheet.lever_graphs_s1837, 0.002); end
  def test_lever_graphs_b1838; assert_in_epsilon(4.0, worksheet.lever_graphs_b1838, 0.002); end
  def test_lever_graphs_k1838; assert_in_epsilon(11.43, worksheet.lever_graphs_k1838, 0.002); end
  def test_lever_graphs_l1838; assert_in_epsilon(14.5, worksheet.lever_graphs_l1838, 0.002); end
  def test_lever_graphs_m1838; assert_in_epsilon(25.35, worksheet.lever_graphs_m1838, 0.002); end
  def test_lever_graphs_n1838; assert_in_epsilon(43.79, worksheet.lever_graphs_n1838, 0.002); end
  def test_lever_graphs_o1838; assert_in_epsilon(75.63, worksheet.lever_graphs_o1838, 0.002); end
  def test_lever_graphs_p1838; assert_in_epsilon(130.64, worksheet.lever_graphs_p1838, 0.002); end
  def test_lever_graphs_q1838; assert_in_epsilon(226.0, worksheet.lever_graphs_q1838, 0.002); end
  def test_lever_graphs_r1838; assert_in_epsilon(302.0, worksheet.lever_graphs_r1838, 0.002); end
  def test_lever_graphs_s1838; assert_in_epsilon(404.0, worksheet.lever_graphs_s1838, 0.002); end
  def test_lever_graphs_b1839; assert_equal("Comparator A", worksheet.lever_graphs_b1839); end
  def test_lever_graphs_b1840; assert_equal("Comparator B", worksheet.lever_graphs_b1840); end
  def test_lever_graphs_b1841; assert_equal("Comparator C", worksheet.lever_graphs_b1841); end
  def test_lever_graphs_c1811; assert_equal("1975", worksheet.lever_graphs_c1811); end
  def test_lever_graphs_d1811; assert_equal("1980", worksheet.lever_graphs_d1811); end
  def test_lever_graphs_e1811; assert_equal("1985", worksheet.lever_graphs_e1811); end
  def test_lever_graphs_f1811; assert_equal("1990", worksheet.lever_graphs_f1811); end
  def test_lever_graphs_g1811; assert_equal("1995", worksheet.lever_graphs_g1811); end
  def test_lever_graphs_h1811; assert_equal("2000", worksheet.lever_graphs_h1811); end
  def test_lever_graphs_i1811; assert_equal("2005", worksheet.lever_graphs_i1811); end
  def test_lever_graphs_j1811; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1811, 0.002); end
  def test_lever_graphs_k1811; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1811, 0.002); end
  def test_lever_graphs_l1811; assert_equal("2015", worksheet.lever_graphs_l1811); end
  def test_lever_graphs_m1811; assert_equal("2020", worksheet.lever_graphs_m1811); end
  def test_lever_graphs_n1811; assert_equal("2025", worksheet.lever_graphs_n1811); end
  def test_lever_graphs_o1811; assert_equal("2030", worksheet.lever_graphs_o1811); end
  def test_lever_graphs_p1811; assert_equal("2035", worksheet.lever_graphs_p1811); end
  def test_lever_graphs_q1811; assert_equal("2040", worksheet.lever_graphs_q1811); end
  def test_lever_graphs_r1811; assert_equal("2045", worksheet.lever_graphs_r1811); end
  def test_lever_graphs_s1811; assert_equal("2050", worksheet.lever_graphs_s1811); end
  def test_lever_graphs_b1812; assert_equal("Historic data", worksheet.lever_graphs_b1812); end
  def test_lever_graphs_b1813; assert_in_delta(1.0, worksheet.lever_graphs_b1813, 0.002); end
  def test_lever_graphs_k1813; assert_in_epsilon(970.0, worksheet.lever_graphs_k1813, 0.002); end
  def test_lever_graphs_l1813; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1813, 0.002); end
  def test_lever_graphs_m1813; assert_in_epsilon(1380.0, worksheet.lever_graphs_m1813, 0.002); end
  def test_lever_graphs_n1813; assert_in_epsilon(1420.0, worksheet.lever_graphs_n1813, 0.002); end
  def test_lever_graphs_o1813; assert_in_epsilon(1420.0, worksheet.lever_graphs_o1813, 0.002); end
  def test_lever_graphs_p1813; assert_in_epsilon(1420.0, worksheet.lever_graphs_p1813, 0.002); end
  def test_lever_graphs_q1813; assert_in_epsilon(1188.0, worksheet.lever_graphs_q1813, 0.002); end
  def test_lever_graphs_r1813; assert_in_epsilon(1188.0, worksheet.lever_graphs_r1813, 0.002); end
  def test_lever_graphs_s1813; assert_in_epsilon(1188.0, worksheet.lever_graphs_s1813, 0.002); end
  def test_lever_graphs_b1814; assert_in_epsilon(2.0, worksheet.lever_graphs_b1814, 0.002); end
  def test_lever_graphs_k1814; assert_in_epsilon(970.0, worksheet.lever_graphs_k1814, 0.002); end
  def test_lever_graphs_l1814; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1814, 0.002); end
  def test_lever_graphs_m1814; assert_in_epsilon(1410.0, worksheet.lever_graphs_m1814, 0.002); end
  def test_lever_graphs_n1814; assert_in_epsilon(1460.0, worksheet.lever_graphs_n1814, 0.002); end
  def test_lever_graphs_o1814; assert_in_epsilon(1515.0, worksheet.lever_graphs_o1814, 0.002); end
  def test_lever_graphs_p1814; assert_in_epsilon(1570.0, worksheet.lever_graphs_p1814, 0.002); end
  def test_lever_graphs_q1814; assert_in_epsilon(1625.0, worksheet.lever_graphs_q1814, 0.002); end
  def test_lever_graphs_r1814; assert_in_epsilon(1685.0, worksheet.lever_graphs_r1814, 0.002); end
  def test_lever_graphs_s1814; assert_in_epsilon(1750.0, worksheet.lever_graphs_s1814, 0.002); end
  def test_lever_graphs_b1815; assert_in_epsilon(3.0, worksheet.lever_graphs_b1815, 0.002); end
  def test_lever_graphs_k1815; assert_in_epsilon(970.0, worksheet.lever_graphs_k1815, 0.002); end
  def test_lever_graphs_l1815; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1815, 0.002); end
  def test_lever_graphs_m1815; assert_in_epsilon(1510.0, worksheet.lever_graphs_m1815, 0.002); end
  def test_lever_graphs_n1815; assert_in_epsilon(1590.0, worksheet.lever_graphs_n1815, 0.002); end
  def test_lever_graphs_o1815; assert_in_epsilon(1670.0, worksheet.lever_graphs_o1815, 0.002); end
  def test_lever_graphs_p1815; assert_in_epsilon(1750.0, worksheet.lever_graphs_p1815, 0.002); end
  def test_lever_graphs_q1815; assert_in_epsilon(1865.0, worksheet.lever_graphs_q1815, 0.002); end
  def test_lever_graphs_r1815; assert_in_epsilon(1982.0, worksheet.lever_graphs_r1815, 0.002); end
  def test_lever_graphs_s1815; assert_in_epsilon(2101.0, worksheet.lever_graphs_s1815, 0.002); end
  def test_lever_graphs_b1816; assert_in_epsilon(4.0, worksheet.lever_graphs_b1816, 0.002); end
  def test_lever_graphs_k1816; assert_in_epsilon(970.0, worksheet.lever_graphs_k1816, 0.002); end
  def test_lever_graphs_l1816; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1816, 0.002); end
  def test_lever_graphs_m1816; assert_in_epsilon(1650.0, worksheet.lever_graphs_m1816, 0.002); end
  def test_lever_graphs_n1816; assert_in_epsilon(1850.0, worksheet.lever_graphs_n1816, 0.002); end
  def test_lever_graphs_o1816; assert_in_epsilon(1995.0, worksheet.lever_graphs_o1816, 0.002); end
  def test_lever_graphs_p1816; assert_in_epsilon(2140.0, worksheet.lever_graphs_p1816, 0.002); end
  def test_lever_graphs_q1816; assert_in_epsilon(2285.0, worksheet.lever_graphs_q1816, 0.002); end
  def test_lever_graphs_r1816; assert_in_epsilon(2330.0, worksheet.lever_graphs_r1816, 0.002); end
  def test_lever_graphs_s1816; assert_in_epsilon(2375.0, worksheet.lever_graphs_s1816, 0.002); end
  def test_lever_graphs_b1817; assert_equal("Comparator A", worksheet.lever_graphs_b1817); end
  def test_lever_graphs_b1818; assert_equal("Comparator B", worksheet.lever_graphs_b1818); end
  def test_lever_graphs_b1819; assert_equal("Comparator C", worksheet.lever_graphs_b1819); end
  def test_lever_graphs_c2024; assert_equal("1975", worksheet.lever_graphs_c2024); end
  def test_lever_graphs_d2024; assert_equal("1980", worksheet.lever_graphs_d2024); end
  def test_lever_graphs_e2024; assert_equal("1985", worksheet.lever_graphs_e2024); end
  def test_lever_graphs_f2024; assert_equal("1990", worksheet.lever_graphs_f2024); end
  def test_lever_graphs_g2024; assert_equal("1995", worksheet.lever_graphs_g2024); end
  def test_lever_graphs_h2024; assert_equal("2000", worksheet.lever_graphs_h2024); end
  def test_lever_graphs_i2024; assert_equal("2005", worksheet.lever_graphs_i2024); end
  def test_lever_graphs_j2024; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2024, 0.002); end
  def test_lever_graphs_k2024; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2024, 0.002); end
  def test_lever_graphs_l2024; assert_equal("2015", worksheet.lever_graphs_l2024); end
  def test_lever_graphs_m2024; assert_equal("2020", worksheet.lever_graphs_m2024); end
  def test_lever_graphs_n2024; assert_equal("2025", worksheet.lever_graphs_n2024); end
  def test_lever_graphs_o2024; assert_equal("2030", worksheet.lever_graphs_o2024); end
  def test_lever_graphs_p2024; assert_equal("2035", worksheet.lever_graphs_p2024); end
  def test_lever_graphs_q2024; assert_equal("2040", worksheet.lever_graphs_q2024); end
  def test_lever_graphs_r2024; assert_equal("2045", worksheet.lever_graphs_r2024); end
  def test_lever_graphs_s2024; assert_equal("2050", worksheet.lever_graphs_s2024); end
  def test_lever_graphs_b2025; assert_equal("Historic data", worksheet.lever_graphs_b2025); end
  def test_lever_graphs_b2026; assert_in_delta(1.0, worksheet.lever_graphs_b2026, 0.002); end
  def test_lever_graphs_k2026; assert_in_delta(0.527, worksheet.lever_graphs_k2026, 0.002); end
  def test_lever_graphs_l2026; assert_in_epsilon(1.1, worksheet.lever_graphs_l2026, 0.002); end
  def test_lever_graphs_m2026; assert_in_epsilon(1.1, worksheet.lever_graphs_m2026, 0.002); end
  def test_lever_graphs_n2026; assert_in_epsilon(1.1, worksheet.lever_graphs_n2026, 0.002); end
  def test_lever_graphs_o2026; assert_in_epsilon(2.0, worksheet.lever_graphs_o2026, 0.002); end
  def test_lever_graphs_p2026; assert_in_epsilon(3.0, worksheet.lever_graphs_p2026, 0.002); end
  def test_lever_graphs_q2026; assert_in_epsilon(5.0, worksheet.lever_graphs_q2026, 0.002); end
  def test_lever_graphs_r2026; assert_in_epsilon(7.0, worksheet.lever_graphs_r2026, 0.002); end
  def test_lever_graphs_s2026; assert_in_epsilon(8.0, worksheet.lever_graphs_s2026, 0.002); end
  def test_lever_graphs_b2027; assert_in_epsilon(2.0, worksheet.lever_graphs_b2027, 0.002); end
  def test_lever_graphs_k2027; assert_in_delta(0.527, worksheet.lever_graphs_k2027, 0.002); end
  def test_lever_graphs_l2027; assert_in_epsilon(1.1, worksheet.lever_graphs_l2027, 0.002); end
  def test_lever_graphs_m2027; assert_in_epsilon(3.0, worksheet.lever_graphs_m2027, 0.002); end
  def test_lever_graphs_n2027; assert_in_epsilon(10.0, worksheet.lever_graphs_n2027, 0.002); end
  def test_lever_graphs_o2027; assert_in_epsilon(24.0, worksheet.lever_graphs_o2027, 0.002); end
  def test_lever_graphs_p2027; assert_in_epsilon(40.0, worksheet.lever_graphs_p2027, 0.002); end
  def test_lever_graphs_q2027; assert_in_epsilon(59.0, worksheet.lever_graphs_q2027, 0.002); end
  def test_lever_graphs_r2027; assert_in_epsilon(79.0, worksheet.lever_graphs_r2027, 0.002); end
  def test_lever_graphs_s2027; assert_in_epsilon(97.0, worksheet.lever_graphs_s2027, 0.002); end
  def test_lever_graphs_b2028; assert_in_epsilon(3.0, worksheet.lever_graphs_b2028, 0.002); end
  def test_lever_graphs_k2028; assert_in_delta(0.527, worksheet.lever_graphs_k2028, 0.002); end
  def test_lever_graphs_l2028; assert_in_epsilon(1.1, worksheet.lever_graphs_l2028, 0.002); end
  def test_lever_graphs_m2028; assert_in_epsilon(4.0, worksheet.lever_graphs_m2028, 0.002); end
  def test_lever_graphs_n2028; assert_in_epsilon(14.0, worksheet.lever_graphs_n2028, 0.002); end
  def test_lever_graphs_o2028; assert_in_epsilon(30.0, worksheet.lever_graphs_o2028, 0.002); end
  def test_lever_graphs_p2028; assert_in_epsilon(56.0, worksheet.lever_graphs_p2028, 0.002); end
  def test_lever_graphs_q2028; assert_in_epsilon(97.0, worksheet.lever_graphs_q2028, 0.002); end
  def test_lever_graphs_r2028; assert_in_epsilon(153.0, worksheet.lever_graphs_r2028, 0.002); end
  def test_lever_graphs_s2028; assert_in_epsilon(237.0, worksheet.lever_graphs_s2028, 0.002); end
  def test_lever_graphs_b2029; assert_in_epsilon(4.0, worksheet.lever_graphs_b2029, 0.002); end
  def test_lever_graphs_k2029; assert_in_delta(0.527, worksheet.lever_graphs_k2029, 0.002); end
  def test_lever_graphs_l2029; assert_in_epsilon(1.1, worksheet.lever_graphs_l2029, 0.002); end
  def test_lever_graphs_m2029; assert_in_epsilon(7.0, worksheet.lever_graphs_m2029, 0.002); end
  def test_lever_graphs_n2029; assert_in_epsilon(24.0, worksheet.lever_graphs_n2029, 0.002); end
  def test_lever_graphs_o2029; assert_in_epsilon(48.0, worksheet.lever_graphs_o2029, 0.002); end
  def test_lever_graphs_p2029; assert_in_epsilon(89.7, worksheet.lever_graphs_p2029, 0.002); end
  def test_lever_graphs_q2029; assert_in_epsilon(140.9, worksheet.lever_graphs_q2029, 0.002); end
  def test_lever_graphs_r2029; assert_in_epsilon(244.9, worksheet.lever_graphs_r2029, 0.002); end
  def test_lever_graphs_s2029; assert_in_epsilon(435.6, worksheet.lever_graphs_s2029, 0.002); end
  def test_lever_graphs_b2030; assert_equal("Comparator A", worksheet.lever_graphs_b2030); end
  def test_lever_graphs_b2031; assert_equal("Comparator B", worksheet.lever_graphs_b2031); end
  def test_lever_graphs_b2032; assert_equal("Comparator C", worksheet.lever_graphs_b2032); end
  def test_lever_graphs_c2008; assert_equal("1975", worksheet.lever_graphs_c2008); end
  def test_lever_graphs_d2008; assert_equal("1980", worksheet.lever_graphs_d2008); end
  def test_lever_graphs_e2008; assert_equal("1985", worksheet.lever_graphs_e2008); end
  def test_lever_graphs_f2008; assert_equal("1990", worksheet.lever_graphs_f2008); end
  def test_lever_graphs_g2008; assert_equal("1995", worksheet.lever_graphs_g2008); end
  def test_lever_graphs_h2008; assert_equal("2000", worksheet.lever_graphs_h2008); end
  def test_lever_graphs_i2008; assert_equal("2005", worksheet.lever_graphs_i2008); end
  def test_lever_graphs_j2008; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2008, 0.002); end
  def test_lever_graphs_k2008; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2008, 0.002); end
  def test_lever_graphs_l2008; assert_equal("2015", worksheet.lever_graphs_l2008); end
  def test_lever_graphs_m2008; assert_equal("2020", worksheet.lever_graphs_m2008); end
  def test_lever_graphs_n2008; assert_equal("2025", worksheet.lever_graphs_n2008); end
  def test_lever_graphs_o2008; assert_equal("2030", worksheet.lever_graphs_o2008); end
  def test_lever_graphs_p2008; assert_equal("2035", worksheet.lever_graphs_p2008); end
  def test_lever_graphs_q2008; assert_equal("2040", worksheet.lever_graphs_q2008); end
  def test_lever_graphs_r2008; assert_equal("2045", worksheet.lever_graphs_r2008); end
  def test_lever_graphs_s2008; assert_equal("2050", worksheet.lever_graphs_s2008); end
  def test_lever_graphs_b2009; assert_equal("Historic data", worksheet.lever_graphs_b2009); end
  def test_lever_graphs_b2010; assert_in_delta(1.0, worksheet.lever_graphs_b2010, 0.002); end
  def test_lever_graphs_k2010; assert_in_delta(0.527, worksheet.lever_graphs_k2010, 0.002); end
  def test_lever_graphs_l2010; assert_in_delta(1.0, worksheet.lever_graphs_l2010, 0.002); end
  def test_lever_graphs_m2010; assert_in_delta(1.0, worksheet.lever_graphs_m2010, 0.002); end
  def test_lever_graphs_n2010; assert_in_delta(1.0, worksheet.lever_graphs_n2010, 0.002); end
  def test_lever_graphs_o2010; assert_in_delta(1.0, worksheet.lever_graphs_o2010, 0.002); end
  def test_lever_graphs_p2010; assert_in_delta(1.0, worksheet.lever_graphs_p2010, 0.002); end
  def test_lever_graphs_q2010; assert_in_delta(1.0, worksheet.lever_graphs_q2010, 0.002); end
  def test_lever_graphs_r2010; assert_in_delta(0.0, (worksheet.lever_graphs_r2010||0), 0.002); end
  def test_lever_graphs_s2010; assert_in_delta(0.0, (worksheet.lever_graphs_s2010||0), 0.002); end
  def test_lever_graphs_b2011; assert_in_epsilon(2.0, worksheet.lever_graphs_b2011, 0.002); end
  def test_lever_graphs_k2011; assert_in_delta(0.527, worksheet.lever_graphs_k2011, 0.002); end
  def test_lever_graphs_l2011; assert_in_delta(1.0, worksheet.lever_graphs_l2011, 0.002); end
  def test_lever_graphs_m2011; assert_in_epsilon(2.0, worksheet.lever_graphs_m2011, 0.002); end
  def test_lever_graphs_n2011; assert_in_epsilon(4.0, worksheet.lever_graphs_n2011, 0.002); end
  def test_lever_graphs_o2011; assert_in_epsilon(8.0, worksheet.lever_graphs_o2011, 0.002); end
  def test_lever_graphs_p2011; assert_in_epsilon(13.0, worksheet.lever_graphs_p2011, 0.002); end
  def test_lever_graphs_q2011; assert_in_epsilon(21.0, worksheet.lever_graphs_q2011, 0.002); end
  def test_lever_graphs_r2011; assert_in_epsilon(28.0, worksheet.lever_graphs_r2011, 0.002); end
  def test_lever_graphs_s2011; assert_in_epsilon(35.0, worksheet.lever_graphs_s2011, 0.002); end
  def test_lever_graphs_b2012; assert_in_epsilon(3.0, worksheet.lever_graphs_b2012, 0.002); end
  def test_lever_graphs_k2012; assert_in_delta(0.527, worksheet.lever_graphs_k2012, 0.002); end
  def test_lever_graphs_l2012; assert_in_delta(1.0, worksheet.lever_graphs_l2012, 0.002); end
  def test_lever_graphs_m2012; assert_in_epsilon(2.0, worksheet.lever_graphs_m2012, 0.002); end
  def test_lever_graphs_n2012; assert_in_epsilon(6.0, worksheet.lever_graphs_n2012, 0.002); end
  def test_lever_graphs_o2012; assert_in_epsilon(11.0, worksheet.lever_graphs_o2012, 0.002); end
  def test_lever_graphs_p2012; assert_in_epsilon(22.0, worksheet.lever_graphs_p2012, 0.002); end
  def test_lever_graphs_q2012; assert_in_epsilon(38.0, worksheet.lever_graphs_q2012, 0.002); end
  def test_lever_graphs_r2012; assert_in_epsilon(70.0, worksheet.lever_graphs_r2012, 0.002); end
  def test_lever_graphs_s2012; assert_in_epsilon(132.0, worksheet.lever_graphs_s2012, 0.002); end
  def test_lever_graphs_b2013; assert_in_epsilon(4.0, worksheet.lever_graphs_b2013, 0.002); end
  def test_lever_graphs_k2013; assert_in_delta(0.527, worksheet.lever_graphs_k2013, 0.002); end
  def test_lever_graphs_l2013; assert_in_delta(1.0, worksheet.lever_graphs_l2013, 0.002); end
  def test_lever_graphs_m2013; assert_in_epsilon(3.0, worksheet.lever_graphs_m2013, 0.002); end
  def test_lever_graphs_n2013; assert_in_epsilon(10.0, worksheet.lever_graphs_n2013, 0.002); end
  def test_lever_graphs_o2013; assert_in_epsilon(18.0, worksheet.lever_graphs_o2013, 0.002); end
  def test_lever_graphs_p2013; assert_in_epsilon(31.7, worksheet.lever_graphs_p2013, 0.002); end
  def test_lever_graphs_q2013; assert_in_epsilon(55.9, worksheet.lever_graphs_q2013, 0.002); end
  def test_lever_graphs_r2013; assert_in_epsilon(127.9, worksheet.lever_graphs_r2013, 0.002); end
  def test_lever_graphs_s2013; assert_in_epsilon(292.6, worksheet.lever_graphs_s2013, 0.002); end
  def test_lever_graphs_b2014; assert_equal("Comparator A", worksheet.lever_graphs_b2014); end
  def test_lever_graphs_b2015; assert_equal("Comparator B", worksheet.lever_graphs_b2015); end
  def test_lever_graphs_b2016; assert_equal("Comparator C", worksheet.lever_graphs_b2016); end
  def test_lever_graphs_c1992; assert_equal("1975", worksheet.lever_graphs_c1992); end
  def test_lever_graphs_d1992; assert_equal("1980", worksheet.lever_graphs_d1992); end
  def test_lever_graphs_e1992; assert_equal("1985", worksheet.lever_graphs_e1992); end
  def test_lever_graphs_f1992; assert_equal("1990", worksheet.lever_graphs_f1992); end
  def test_lever_graphs_g1992; assert_equal("1995", worksheet.lever_graphs_g1992); end
  def test_lever_graphs_h1992; assert_equal("2000", worksheet.lever_graphs_h1992); end
  def test_lever_graphs_i1992; assert_equal("2005", worksheet.lever_graphs_i1992); end
  def test_lever_graphs_j1992; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1992, 0.002); end
  def test_lever_graphs_k1992; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1992, 0.002); end
  def test_lever_graphs_l1992; assert_equal("2015", worksheet.lever_graphs_l1992); end
  def test_lever_graphs_m1992; assert_equal("2020", worksheet.lever_graphs_m1992); end
  def test_lever_graphs_n1992; assert_equal("2025", worksheet.lever_graphs_n1992); end
  def test_lever_graphs_o1992; assert_equal("2030", worksheet.lever_graphs_o1992); end
  def test_lever_graphs_p1992; assert_equal("2035", worksheet.lever_graphs_p1992); end
  def test_lever_graphs_q1992; assert_equal("2040", worksheet.lever_graphs_q1992); end
  def test_lever_graphs_r1992; assert_equal("2045", worksheet.lever_graphs_r1992); end
  def test_lever_graphs_s1992; assert_equal("2050", worksheet.lever_graphs_s1992); end
  def test_lever_graphs_b1993; assert_equal("Historic data", worksheet.lever_graphs_b1993); end
  def test_lever_graphs_b1994; assert_in_delta(1.0, worksheet.lever_graphs_b1994, 0.002); end
  def test_lever_graphs_k1994; assert_in_delta(0.0, (worksheet.lever_graphs_k1994||0), 0.002); end
  def test_lever_graphs_l1994; assert_in_delta(0.1, worksheet.lever_graphs_l1994, 0.002); end
  def test_lever_graphs_m1994; assert_in_delta(0.1, worksheet.lever_graphs_m1994, 0.002); end
  def test_lever_graphs_n1994; assert_in_delta(0.1, worksheet.lever_graphs_n1994, 0.002); end
  def test_lever_graphs_o1994; assert_in_delta(1.0, worksheet.lever_graphs_o1994, 0.002); end
  def test_lever_graphs_p1994; assert_in_epsilon(2.0, worksheet.lever_graphs_p1994, 0.002); end
  def test_lever_graphs_q1994; assert_in_epsilon(4.0, worksheet.lever_graphs_q1994, 0.002); end
  def test_lever_graphs_r1994; assert_in_epsilon(7.0, worksheet.lever_graphs_r1994, 0.002); end
  def test_lever_graphs_s1994; assert_in_epsilon(8.0, worksheet.lever_graphs_s1994, 0.002); end
  def test_lever_graphs_b1995; assert_in_epsilon(2.0, worksheet.lever_graphs_b1995, 0.002); end
  def test_lever_graphs_k1995; assert_in_delta(0.0, (worksheet.lever_graphs_k1995||0), 0.002); end
  def test_lever_graphs_l1995; assert_in_delta(0.1, worksheet.lever_graphs_l1995, 0.002); end
  def test_lever_graphs_m1995; assert_in_delta(1.0, worksheet.lever_graphs_m1995, 0.002); end
  def test_lever_graphs_n1995; assert_in_epsilon(6.0, worksheet.lever_graphs_n1995, 0.002); end
  def test_lever_graphs_o1995; assert_in_epsilon(16.0, worksheet.lever_graphs_o1995, 0.002); end
  def test_lever_graphs_p1995; assert_in_epsilon(27.0, worksheet.lever_graphs_p1995, 0.002); end
  def test_lever_graphs_q1995; assert_in_epsilon(38.0, worksheet.lever_graphs_q1995, 0.002); end
  def test_lever_graphs_r1995; assert_in_epsilon(51.0, worksheet.lever_graphs_r1995, 0.002); end
  def test_lever_graphs_s1995; assert_in_epsilon(62.0, worksheet.lever_graphs_s1995, 0.002); end
  def test_lever_graphs_b1996; assert_in_epsilon(3.0, worksheet.lever_graphs_b1996, 0.002); end
  def test_lever_graphs_k1996; assert_in_delta(0.0, (worksheet.lever_graphs_k1996||0), 0.002); end
  def test_lever_graphs_l1996; assert_in_delta(0.1, worksheet.lever_graphs_l1996, 0.002); end
  def test_lever_graphs_m1996; assert_in_epsilon(2.0, worksheet.lever_graphs_m1996, 0.002); end
  def test_lever_graphs_n1996; assert_in_epsilon(8.0, worksheet.lever_graphs_n1996, 0.002); end
  def test_lever_graphs_o1996; assert_in_epsilon(19.0, worksheet.lever_graphs_o1996, 0.002); end
  def test_lever_graphs_p1996; assert_in_epsilon(34.0, worksheet.lever_graphs_p1996, 0.002); end
  def test_lever_graphs_q1996; assert_in_epsilon(59.0, worksheet.lever_graphs_q1996, 0.002); end
  def test_lever_graphs_r1996; assert_in_epsilon(83.0, worksheet.lever_graphs_r1996, 0.002); end
  def test_lever_graphs_s1996; assert_in_epsilon(105.0, worksheet.lever_graphs_s1996, 0.002); end
  def test_lever_graphs_b1997; assert_in_epsilon(4.0, worksheet.lever_graphs_b1997, 0.002); end
  def test_lever_graphs_k1997; assert_in_delta(0.0, (worksheet.lever_graphs_k1997||0), 0.002); end
  def test_lever_graphs_l1997; assert_in_delta(0.1, worksheet.lever_graphs_l1997, 0.002); end
  def test_lever_graphs_m1997; assert_in_epsilon(4.0, worksheet.lever_graphs_m1997, 0.002); end
  def test_lever_graphs_n1997; assert_in_epsilon(14.0, worksheet.lever_graphs_n1997, 0.002); end
  def test_lever_graphs_o1997; assert_in_epsilon(30.0, worksheet.lever_graphs_o1997, 0.002); end
  def test_lever_graphs_p1997; assert_in_epsilon(58.0, worksheet.lever_graphs_p1997, 0.002); end
  def test_lever_graphs_q1997; assert_in_epsilon(85.0, worksheet.lever_graphs_q1997, 0.002); end
  def test_lever_graphs_r1997; assert_in_epsilon(117.0, worksheet.lever_graphs_r1997, 0.002); end
  def test_lever_graphs_s1997; assert_in_epsilon(143.0, worksheet.lever_graphs_s1997, 0.002); end
  def test_lever_graphs_b1998; assert_equal("Comparator A", worksheet.lever_graphs_b1998); end
  def test_lever_graphs_b1999; assert_equal("Comparator B", worksheet.lever_graphs_b1999); end
  def test_lever_graphs_b2000; assert_equal("Comparator C", worksheet.lever_graphs_b2000); end
  def test_lever_graphs_c1790; assert_equal("1975", worksheet.lever_graphs_c1790); end
  def test_lever_graphs_d1790; assert_equal("1980", worksheet.lever_graphs_d1790); end
  def test_lever_graphs_e1790; assert_equal("1985", worksheet.lever_graphs_e1790); end
  def test_lever_graphs_f1790; assert_equal("1990", worksheet.lever_graphs_f1790); end
  def test_lever_graphs_g1790; assert_equal("1995", worksheet.lever_graphs_g1790); end
  def test_lever_graphs_h1790; assert_equal("2000", worksheet.lever_graphs_h1790); end
  def test_lever_graphs_i1790; assert_equal("2005", worksheet.lever_graphs_i1790); end
  def test_lever_graphs_j1790; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1790, 0.002); end
  def test_lever_graphs_k1790; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1790, 0.002); end
  def test_lever_graphs_l1790; assert_equal("2015", worksheet.lever_graphs_l1790); end
  def test_lever_graphs_m1790; assert_equal("2020", worksheet.lever_graphs_m1790); end
  def test_lever_graphs_n1790; assert_equal("2025", worksheet.lever_graphs_n1790); end
  def test_lever_graphs_o1790; assert_equal("2030", worksheet.lever_graphs_o1790); end
  def test_lever_graphs_p1790; assert_equal("2035", worksheet.lever_graphs_p1790); end
  def test_lever_graphs_q1790; assert_equal("2040", worksheet.lever_graphs_q1790); end
  def test_lever_graphs_r1790; assert_equal("2045", worksheet.lever_graphs_r1790); end
  def test_lever_graphs_s1790; assert_equal("2050", worksheet.lever_graphs_s1790); end
  def test_lever_graphs_b1791; assert_equal("Historic data", worksheet.lever_graphs_b1791); end
  def test_lever_graphs_b1792; assert_in_delta(1.0, worksheet.lever_graphs_b1792, 0.002); end
  def test_lever_graphs_k1792; assert_in_epsilon(364.0, worksheet.lever_graphs_k1792, 0.002); end
  def test_lever_graphs_l1792; assert_in_epsilon(415.0, worksheet.lever_graphs_l1792, 0.002); end
  def test_lever_graphs_m1792; assert_in_epsilon(400.0, worksheet.lever_graphs_m1792, 0.002); end
  def test_lever_graphs_n1792; assert_in_epsilon(300.0, worksheet.lever_graphs_n1792, 0.002); end
  def test_lever_graphs_o1792; assert_in_epsilon(200.0, worksheet.lever_graphs_o1792, 0.002); end
  def test_lever_graphs_p1792; assert_in_epsilon(200.0, worksheet.lever_graphs_p1792, 0.002); end
  def test_lever_graphs_q1792; assert_in_epsilon(100.0, worksheet.lever_graphs_q1792, 0.002); end
  def test_lever_graphs_r1792; assert_in_epsilon(50.0, worksheet.lever_graphs_r1792, 0.002); end
  def test_lever_graphs_s1792; assert_in_delta(0.0, (worksheet.lever_graphs_s1792||0), 0.002); end
  def test_lever_graphs_b1793; assert_in_epsilon(2.0, worksheet.lever_graphs_b1793, 0.002); end
  def test_lever_graphs_k1793; assert_in_epsilon(364.0, worksheet.lever_graphs_k1793, 0.002); end
  def test_lever_graphs_l1793; assert_in_epsilon(415.0, worksheet.lever_graphs_l1793, 0.002); end
  def test_lever_graphs_m1793; assert_in_epsilon(475.0, worksheet.lever_graphs_m1793, 0.002); end
  def test_lever_graphs_n1793; assert_in_epsilon(498.0, worksheet.lever_graphs_n1793, 0.002); end
  def test_lever_graphs_o1793; assert_in_epsilon(530.0, worksheet.lever_graphs_o1793, 0.002); end
  def test_lever_graphs_p1793; assert_in_epsilon(562.0, worksheet.lever_graphs_p1793, 0.002); end
  def test_lever_graphs_q1793; assert_in_epsilon(601.0, worksheet.lever_graphs_q1793, 0.002); end
  def test_lever_graphs_r1793; assert_in_epsilon(643.0, worksheet.lever_graphs_r1793, 0.002); end
  def test_lever_graphs_s1793; assert_in_epsilon(685.0, worksheet.lever_graphs_s1793, 0.002); end
  def test_lever_graphs_b1794; assert_in_epsilon(3.0, worksheet.lever_graphs_b1794, 0.002); end
  def test_lever_graphs_k1794; assert_in_epsilon(364.0, worksheet.lever_graphs_k1794, 0.002); end
  def test_lever_graphs_l1794; assert_in_epsilon(415.0, worksheet.lever_graphs_l1794, 0.002); end
  def test_lever_graphs_m1794; assert_in_epsilon(510.0, worksheet.lever_graphs_m1794, 0.002); end
  def test_lever_graphs_n1794; assert_in_epsilon(585.0, worksheet.lever_graphs_n1794, 0.002); end
  def test_lever_graphs_o1794; assert_in_epsilon(660.0, worksheet.lever_graphs_o1794, 0.002); end
  def test_lever_graphs_p1794; assert_in_epsilon(735.0, worksheet.lever_graphs_p1794, 0.002); end
  def test_lever_graphs_q1794; assert_in_epsilon(817.0, worksheet.lever_graphs_q1794, 0.002); end
  def test_lever_graphs_r1794; assert_in_epsilon(920.0, worksheet.lever_graphs_r1794, 0.002); end
  def test_lever_graphs_s1794; assert_in_epsilon(1030.0, worksheet.lever_graphs_s1794, 0.002); end
  def test_lever_graphs_b1795; assert_in_epsilon(4.0, worksheet.lever_graphs_b1795, 0.002); end
  def test_lever_graphs_k1795; assert_in_epsilon(364.0, worksheet.lever_graphs_k1795, 0.002); end
  def test_lever_graphs_l1795; assert_in_epsilon(415.0, worksheet.lever_graphs_l1795, 0.002); end
  def test_lever_graphs_m1795; assert_in_epsilon(546.0, worksheet.lever_graphs_m1795, 0.002); end
  def test_lever_graphs_n1795; assert_in_epsilon(670.0, worksheet.lever_graphs_n1795, 0.002); end
  def test_lever_graphs_o1795; assert_in_epsilon(823.0, worksheet.lever_graphs_o1795, 0.002); end
  def test_lever_graphs_p1795; assert_in_epsilon(1010.0, worksheet.lever_graphs_p1795, 0.002); end
  def test_lever_graphs_q1795; assert_in_epsilon(1240.0, worksheet.lever_graphs_q1795, 0.002); end
  def test_lever_graphs_r1795; assert_in_epsilon(1523.0, worksheet.lever_graphs_r1795, 0.002); end
  def test_lever_graphs_s1795; assert_in_epsilon(1870.0, worksheet.lever_graphs_s1795, 0.002); end
  def test_lever_graphs_b1796; assert_equal("Comparator A", worksheet.lever_graphs_b1796); end
  def test_lever_graphs_b1797; assert_equal("Comparator B", worksheet.lever_graphs_b1797); end
  def test_lever_graphs_b1798; assert_equal("Comparator C", worksheet.lever_graphs_b1798); end
  def test_lever_graphs_c1952; assert_equal("1975", worksheet.lever_graphs_c1952); end
  def test_lever_graphs_d1952; assert_equal("1980", worksheet.lever_graphs_d1952); end
  def test_lever_graphs_e1952; assert_equal("1985", worksheet.lever_graphs_e1952); end
  def test_lever_graphs_f1952; assert_equal("1990", worksheet.lever_graphs_f1952); end
  def test_lever_graphs_g1952; assert_equal("1995", worksheet.lever_graphs_g1952); end
  def test_lever_graphs_h1952; assert_equal("2000", worksheet.lever_graphs_h1952); end
  def test_lever_graphs_i1952; assert_equal("2005", worksheet.lever_graphs_i1952); end
  def test_lever_graphs_j1952; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1952, 0.002); end
  def test_lever_graphs_k1952; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1952, 0.002); end
  def test_lever_graphs_l1952; assert_equal("2015", worksheet.lever_graphs_l1952); end
  def test_lever_graphs_m1952; assert_equal("2020", worksheet.lever_graphs_m1952); end
  def test_lever_graphs_n1952; assert_equal("2025", worksheet.lever_graphs_n1952); end
  def test_lever_graphs_o1952; assert_equal("2030", worksheet.lever_graphs_o1952); end
  def test_lever_graphs_p1952; assert_equal("2035", worksheet.lever_graphs_p1952); end
  def test_lever_graphs_q1952; assert_equal("2040", worksheet.lever_graphs_q1952); end
  def test_lever_graphs_r1952; assert_equal("2045", worksheet.lever_graphs_r1952); end
  def test_lever_graphs_s1952; assert_equal("2050", worksheet.lever_graphs_s1952); end
  def test_lever_graphs_b1953; assert_equal("Historic data", worksheet.lever_graphs_b1953); end
  def test_lever_graphs_b1954; assert_in_delta(1.0, worksheet.lever_graphs_b1954, 0.002); end
  def test_lever_graphs_k1954; assert_in_epsilon(4.1, worksheet.lever_graphs_k1954, 0.002); end
  def test_lever_graphs_l1954; assert_in_epsilon(15.0, worksheet.lever_graphs_l1954, 0.002); end
  def test_lever_graphs_m1954; assert_in_epsilon(17.0, worksheet.lever_graphs_m1954, 0.002); end
  def test_lever_graphs_n1954; assert_in_epsilon(13.0, worksheet.lever_graphs_n1954, 0.002); end
  def test_lever_graphs_o1954; assert_in_delta(0.0, (worksheet.lever_graphs_o1954||0), 0.002); end
  def test_lever_graphs_p1954; assert_in_delta(0.0, (worksheet.lever_graphs_p1954||0), 0.002); end
  def test_lever_graphs_q1954; assert_in_delta(0.0, (worksheet.lever_graphs_q1954||0), 0.002); end
  def test_lever_graphs_r1954; assert_in_delta(0.0, (worksheet.lever_graphs_r1954||0), 0.002); end
  def test_lever_graphs_s1954; assert_in_delta(0.0, (worksheet.lever_graphs_s1954||0), 0.002); end
  def test_lever_graphs_b1955; assert_in_epsilon(2.0, worksheet.lever_graphs_b1955, 0.002); end
  def test_lever_graphs_k1955; assert_in_epsilon(4.1, worksheet.lever_graphs_k1955, 0.002); end
  def test_lever_graphs_l1955; assert_in_epsilon(15.0, worksheet.lever_graphs_l1955, 0.002); end
  def test_lever_graphs_m1955; assert_in_epsilon(33.0, worksheet.lever_graphs_m1955, 0.002); end
  def test_lever_graphs_n1955; assert_in_epsilon(50.0, worksheet.lever_graphs_n1955, 0.002); end
  def test_lever_graphs_o1955; assert_in_epsilon(96.0, worksheet.lever_graphs_o1955, 0.002); end
  def test_lever_graphs_p1955; assert_in_epsilon(147.0, worksheet.lever_graphs_p1955, 0.002); end
  def test_lever_graphs_q1955; assert_in_epsilon(220.0, worksheet.lever_graphs_q1955, 0.002); end
  def test_lever_graphs_r1955; assert_in_epsilon(376.0, worksheet.lever_graphs_r1955, 0.002); end
  def test_lever_graphs_s1955; assert_in_epsilon(455.0, worksheet.lever_graphs_s1955, 0.002); end
  def test_lever_graphs_b1956; assert_in_epsilon(3.0, worksheet.lever_graphs_b1956, 0.002); end
  def test_lever_graphs_k1956; assert_in_epsilon(4.1, worksheet.lever_graphs_k1956, 0.002); end
  def test_lever_graphs_l1956; assert_in_epsilon(15.0, worksheet.lever_graphs_l1956, 0.002); end
  def test_lever_graphs_m1956; assert_in_epsilon(46.0, worksheet.lever_graphs_m1956, 0.002); end
  def test_lever_graphs_n1956; assert_in_epsilon(87.0, worksheet.lever_graphs_n1956, 0.002); end
  def test_lever_graphs_o1956; assert_in_epsilon(188.0, worksheet.lever_graphs_o1956, 0.002); end
  def test_lever_graphs_p1956; assert_in_epsilon(295.0, worksheet.lever_graphs_p1956, 0.002); end
  def test_lever_graphs_q1956; assert_in_epsilon(424.0, worksheet.lever_graphs_q1956, 0.002); end
  def test_lever_graphs_r1956; assert_in_epsilon(708.0, worksheet.lever_graphs_r1956, 0.002); end
  def test_lever_graphs_s1956; assert_in_epsilon(910.0, worksheet.lever_graphs_s1956, 0.002); end
  def test_lever_graphs_b1957; assert_in_epsilon(4.0, worksheet.lever_graphs_b1957, 0.002); end
  def test_lever_graphs_k1957; assert_in_epsilon(4.1, worksheet.lever_graphs_k1957, 0.002); end
  def test_lever_graphs_l1957; assert_in_epsilon(15.0, worksheet.lever_graphs_l1957, 0.002); end
  def test_lever_graphs_m1957; assert_in_epsilon(71.0, worksheet.lever_graphs_m1957, 0.002); end
  def test_lever_graphs_n1957; assert_in_epsilon(177.0, worksheet.lever_graphs_n1957, 0.002); end
  def test_lever_graphs_o1957; assert_in_epsilon(440.0, worksheet.lever_graphs_o1957, 0.002); end
  def test_lever_graphs_p1957; assert_in_epsilon(647.0, worksheet.lever_graphs_p1957, 0.002); end
  def test_lever_graphs_q1957; assert_in_epsilon(951.0, worksheet.lever_graphs_q1957, 0.002); end
  def test_lever_graphs_r1957; assert_in_epsilon(1157.0, worksheet.lever_graphs_r1957, 0.002); end
  def test_lever_graphs_s1957; assert_in_epsilon(1408.0, worksheet.lever_graphs_s1957, 0.002); end
  def test_lever_graphs_b1958; assert_equal("Comparator A", worksheet.lever_graphs_b1958); end
  def test_lever_graphs_b1959; assert_equal("Comparator B", worksheet.lever_graphs_b1959); end
  def test_lever_graphs_b1960; assert_equal("Comparator C", worksheet.lever_graphs_b1960); end
  def test_lever_graphs_c1936; assert_equal("1975", worksheet.lever_graphs_c1936); end
  def test_lever_graphs_d1936; assert_equal("1980", worksheet.lever_graphs_d1936); end
  def test_lever_graphs_e1936; assert_equal("1985", worksheet.lever_graphs_e1936); end
  def test_lever_graphs_f1936; assert_equal("1990", worksheet.lever_graphs_f1936); end
  def test_lever_graphs_g1936; assert_equal("1995", worksheet.lever_graphs_g1936); end
  def test_lever_graphs_h1936; assert_equal("2000", worksheet.lever_graphs_h1936); end
  def test_lever_graphs_i1936; assert_equal("2005", worksheet.lever_graphs_i1936); end
  def test_lever_graphs_j1936; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1936, 0.002); end
  def test_lever_graphs_k1936; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1936, 0.002); end
  def test_lever_graphs_l1936; assert_equal("2015", worksheet.lever_graphs_l1936); end
  def test_lever_graphs_m1936; assert_equal("2020", worksheet.lever_graphs_m1936); end
  def test_lever_graphs_n1936; assert_equal("2025", worksheet.lever_graphs_n1936); end
  def test_lever_graphs_o1936; assert_equal("2030", worksheet.lever_graphs_o1936); end
  def test_lever_graphs_p1936; assert_equal("2035", worksheet.lever_graphs_p1936); end
  def test_lever_graphs_q1936; assert_equal("2040", worksheet.lever_graphs_q1936); end
  def test_lever_graphs_r1936; assert_equal("2045", worksheet.lever_graphs_r1936); end
  def test_lever_graphs_s1936; assert_equal("2050", worksheet.lever_graphs_s1936); end
  def test_lever_graphs_b1937; assert_equal("Historic data", worksheet.lever_graphs_b1937); end
  def test_lever_graphs_b1938; assert_in_delta(1.0, worksheet.lever_graphs_b1938, 0.002); end
  def test_lever_graphs_k1938; assert_in_epsilon(233.57, worksheet.lever_graphs_k1938, 0.002); end
  def test_lever_graphs_l1938; assert_in_epsilon(399.0, worksheet.lever_graphs_l1938, 0.002); end
  def test_lever_graphs_m1938; assert_in_epsilon(376.0, worksheet.lever_graphs_m1938, 0.002); end
  def test_lever_graphs_n1938; assert_in_epsilon(335.0, worksheet.lever_graphs_n1938, 0.002); end
  def test_lever_graphs_o1938; assert_in_epsilon(198.0, worksheet.lever_graphs_o1938, 0.002); end
  def test_lever_graphs_p1938; assert_in_delta(0.0, (worksheet.lever_graphs_p1938||0), 0.002); end
  def test_lever_graphs_q1938; assert_in_delta(0.0, (worksheet.lever_graphs_q1938||0), 0.002); end
  def test_lever_graphs_r1938; assert_in_delta(0.0, (worksheet.lever_graphs_r1938||0), 0.002); end
  def test_lever_graphs_s1938; assert_in_delta(0.0, (worksheet.lever_graphs_s1938||0), 0.002); end
  def test_lever_graphs_b1939; assert_in_epsilon(2.0, worksheet.lever_graphs_b1939, 0.002); end
  def test_lever_graphs_k1939; assert_in_epsilon(233.57, worksheet.lever_graphs_k1939, 0.002); end
  def test_lever_graphs_l1939; assert_in_epsilon(399.0, worksheet.lever_graphs_l1939, 0.002); end
  def test_lever_graphs_m1939; assert_in_epsilon(564.0, worksheet.lever_graphs_m1939, 0.002); end
  def test_lever_graphs_n1939; assert_in_epsilon(607.0, worksheet.lever_graphs_n1939, 0.002); end
  def test_lever_graphs_o1939; assert_in_epsilon(741.0, worksheet.lever_graphs_o1939, 0.002); end
  def test_lever_graphs_p1939; assert_in_epsilon(878.0, worksheet.lever_graphs_p1939, 0.002); end
  def test_lever_graphs_q1939; assert_in_epsilon(1068.0, worksheet.lever_graphs_q1939, 0.002); end
  def test_lever_graphs_r1939; assert_in_epsilon(1499.0, worksheet.lever_graphs_r1939, 0.002); end
  def test_lever_graphs_s1939; assert_in_epsilon(1862.0, worksheet.lever_graphs_s1939, 0.002); end
  def test_lever_graphs_b1940; assert_in_epsilon(3.0, worksheet.lever_graphs_b1940, 0.002); end
  def test_lever_graphs_k1940; assert_in_epsilon(233.57, worksheet.lever_graphs_k1940, 0.002); end
  def test_lever_graphs_l1940; assert_in_epsilon(399.0, worksheet.lever_graphs_l1940, 0.002); end
  def test_lever_graphs_m1940; assert_in_epsilon(778.0, worksheet.lever_graphs_m1940, 0.002); end
  def test_lever_graphs_n1940; assert_in_epsilon(982.0, worksheet.lever_graphs_n1940, 0.002); end
  def test_lever_graphs_o1940; assert_in_epsilon(1466.0, worksheet.lever_graphs_o1940, 0.002); end
  def test_lever_graphs_p1940; assert_in_epsilon(1945.0, worksheet.lever_graphs_p1940, 0.002); end
  def test_lever_graphs_q1940; assert_in_epsilon(2369.0, worksheet.lever_graphs_q1940, 0.002); end
  def test_lever_graphs_r1940; assert_in_epsilon(3037.0, worksheet.lever_graphs_r1940, 0.002); end
  def test_lever_graphs_s1940; assert_in_epsilon(3800.0, worksheet.lever_graphs_s1940, 0.002); end
  def test_lever_graphs_b1941; assert_in_epsilon(4.0, worksheet.lever_graphs_b1941, 0.002); end
  def test_lever_graphs_k1941; assert_in_epsilon(233.57, worksheet.lever_graphs_k1941, 0.002); end
  def test_lever_graphs_l1941; assert_in_epsilon(399.0, worksheet.lever_graphs_l1941, 0.002); end
  def test_lever_graphs_m1941; assert_in_epsilon(1073.0, worksheet.lever_graphs_m1941, 0.002); end
  def test_lever_graphs_n1941; assert_in_epsilon(1576.0, worksheet.lever_graphs_n1941, 0.002); end
  def test_lever_graphs_o1941; assert_in_epsilon(2316.0, worksheet.lever_graphs_o1941, 0.002); end
  def test_lever_graphs_p1941; assert_in_epsilon(3100.0, worksheet.lever_graphs_p1941, 0.002); end
  def test_lever_graphs_q1941; assert_in_epsilon(4149.0, worksheet.lever_graphs_q1941, 0.002); end
  def test_lever_graphs_r1941; assert_in_epsilon(4581.0, worksheet.lever_graphs_r1941, 0.002); end
  def test_lever_graphs_s1941; assert_in_epsilon(5058.0, worksheet.lever_graphs_s1941, 0.002); end
  def test_lever_graphs_b1942; assert_equal("Comparator A", worksheet.lever_graphs_b1942); end
  def test_lever_graphs_b1943; assert_equal("Comparator B", worksheet.lever_graphs_b1943); end
  def test_lever_graphs_b1944; assert_equal("Comparator C", worksheet.lever_graphs_b1944); end
  def test_lever_graphs_c1912; assert_equal("1975", worksheet.lever_graphs_c1912); end
  def test_lever_graphs_d1912; assert_equal("1980", worksheet.lever_graphs_d1912); end
  def test_lever_graphs_e1912; assert_equal("1985", worksheet.lever_graphs_e1912); end
  def test_lever_graphs_f1912; assert_equal("1990", worksheet.lever_graphs_f1912); end
  def test_lever_graphs_g1912; assert_equal("1995", worksheet.lever_graphs_g1912); end
  def test_lever_graphs_h1912; assert_equal("2000", worksheet.lever_graphs_h1912); end
  def test_lever_graphs_i1912; assert_equal("2005", worksheet.lever_graphs_i1912); end
  def test_lever_graphs_j1912; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1912, 0.002); end
  def test_lever_graphs_k1912; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1912, 0.002); end
  def test_lever_graphs_l1912; assert_equal("2015", worksheet.lever_graphs_l1912); end
  def test_lever_graphs_m1912; assert_equal("2020", worksheet.lever_graphs_m1912); end
  def test_lever_graphs_n1912; assert_equal("2025", worksheet.lever_graphs_n1912); end
  def test_lever_graphs_o1912; assert_equal("2030", worksheet.lever_graphs_o1912); end
  def test_lever_graphs_p1912; assert_equal("2035", worksheet.lever_graphs_p1912); end
  def test_lever_graphs_q1912; assert_equal("2040", worksheet.lever_graphs_q1912); end
  def test_lever_graphs_r1912; assert_equal("2045", worksheet.lever_graphs_r1912); end
  def test_lever_graphs_s1912; assert_equal("2050", worksheet.lever_graphs_s1912); end
  def test_lever_graphs_b1913; assert_equal("Historic data", worksheet.lever_graphs_b1913); end
  def test_lever_graphs_b1914; assert_in_delta(1.0, worksheet.lever_graphs_b1914, 0.002); end
  def test_lever_graphs_k1914; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1914, 0.002); end
  def test_lever_graphs_l1914; assert_in_epsilon(173.0, worksheet.lever_graphs_l1914, 0.002); end
  def test_lever_graphs_m1914; assert_in_epsilon(140.0, worksheet.lever_graphs_m1914, 0.002); end
  def test_lever_graphs_n1914; assert_in_epsilon(115.0, worksheet.lever_graphs_n1914, 0.002); end
  def test_lever_graphs_o1914; assert_in_epsilon(75.0, worksheet.lever_graphs_o1914, 0.002); end
  def test_lever_graphs_p1914; assert_in_epsilon(55.0, worksheet.lever_graphs_p1914, 0.002); end
  def test_lever_graphs_q1914; assert_in_delta(0.0, (worksheet.lever_graphs_q1914||0), 0.002); end
  def test_lever_graphs_r1914; assert_in_delta(0.0, (worksheet.lever_graphs_r1914||0), 0.002); end
  def test_lever_graphs_s1914; assert_in_delta(0.0, (worksheet.lever_graphs_s1914||0), 0.002); end
  def test_lever_graphs_b1915; assert_in_epsilon(2.0, worksheet.lever_graphs_b1915, 0.002); end
  def test_lever_graphs_k1915; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1915, 0.002); end
  def test_lever_graphs_l1915; assert_in_epsilon(173.0, worksheet.lever_graphs_l1915, 0.002); end
  def test_lever_graphs_m1915; assert_in_epsilon(278.46000000000004, worksheet.lever_graphs_m1915, 0.002); end
  def test_lever_graphs_n1915; assert_in_epsilon(398.83, worksheet.lever_graphs_n1915, 0.002); end
  def test_lever_graphs_o1915; assert_in_epsilon(591.5799999999999, worksheet.lever_graphs_o1915, 0.002); end
  def test_lever_graphs_p1915; assert_in_epsilon(812.85, worksheet.lever_graphs_p1915, 0.002); end
  def test_lever_graphs_q1915; assert_in_epsilon(1148.26, worksheet.lever_graphs_q1915, 0.002); end
  def test_lever_graphs_r1915; assert_in_epsilon(1577.17, worksheet.lever_graphs_r1915, 0.002); end
  def test_lever_graphs_s1915; assert_in_epsilon(2204.31, worksheet.lever_graphs_s1915, 0.002); end
  def test_lever_graphs_b1916; assert_in_epsilon(3.0, worksheet.lever_graphs_b1916, 0.002); end
  def test_lever_graphs_k1916; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1916, 0.002); end
  def test_lever_graphs_l1916; assert_in_epsilon(173.0, worksheet.lever_graphs_l1916, 0.002); end
  def test_lever_graphs_m1916; assert_in_epsilon(321.28, worksheet.lever_graphs_m1916, 0.002); end
  def test_lever_graphs_n1916; assert_in_epsilon(539.22, worksheet.lever_graphs_n1916, 0.002); end
  def test_lever_graphs_o1916; assert_in_epsilon(905.7, worksheet.lever_graphs_o1916, 0.002); end
  def test_lever_graphs_p1916; assert_in_epsilon(1464.94, worksheet.lever_graphs_p1916, 0.002); end
  def test_lever_graphs_q1916; assert_in_epsilon(2371.94, worksheet.lever_graphs_q1916, 0.002); end
  def test_lever_graphs_r1916; assert_in_epsilon(3136.37, worksheet.lever_graphs_r1916, 0.002); end
  def test_lever_graphs_s1916; assert_in_epsilon(4148.93, worksheet.lever_graphs_s1916, 0.002); end
  def test_lever_graphs_b1917; assert_in_epsilon(4.0, worksheet.lever_graphs_b1917, 0.002); end
  def test_lever_graphs_k1917; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1917, 0.002); end
  def test_lever_graphs_l1917; assert_in_epsilon(173.0, worksheet.lever_graphs_l1917, 0.002); end
  def test_lever_graphs_m1917; assert_in_epsilon(410.20000000000005, worksheet.lever_graphs_m1917, 0.002); end
  def test_lever_graphs_n1917; assert_in_epsilon(779.8399999999999, worksheet.lever_graphs_n1917, 0.002); end
  def test_lever_graphs_o1917; assert_in_epsilon(1484.3700000000001, worksheet.lever_graphs_o1917, 0.002); end
  def test_lever_graphs_p1917; assert_in_epsilon(2500.8, worksheet.lever_graphs_p1917, 0.002); end
  def test_lever_graphs_q1917; assert_in_epsilon(5190.849429293361, worksheet.lever_graphs_q1917, 0.002); end
  def test_lever_graphs_r1917; assert_in_epsilon(10523.870342044567, worksheet.lever_graphs_r1917, 0.002); end
  def test_lever_graphs_s1917; assert_in_epsilon(22007.1, worksheet.lever_graphs_s1917, 0.002); end
  def test_lever_graphs_b1918; assert_equal("Comparator A", worksheet.lever_graphs_b1918); end
  def test_lever_graphs_b1919; assert_equal("Comparator B", worksheet.lever_graphs_b1919); end
  def test_lever_graphs_b1920; assert_equal("Comparator C", worksheet.lever_graphs_b1920); end
  def test_lever_graphs_c1896; assert_equal("1975", worksheet.lever_graphs_c1896); end
  def test_lever_graphs_d1896; assert_equal("1980", worksheet.lever_graphs_d1896); end
  def test_lever_graphs_e1896; assert_equal("1985", worksheet.lever_graphs_e1896); end
  def test_lever_graphs_f1896; assert_equal("1990", worksheet.lever_graphs_f1896); end
  def test_lever_graphs_g1896; assert_equal("1995", worksheet.lever_graphs_g1896); end
  def test_lever_graphs_h1896; assert_equal("2000", worksheet.lever_graphs_h1896); end
  def test_lever_graphs_i1896; assert_equal("2005", worksheet.lever_graphs_i1896); end
  def test_lever_graphs_j1896; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1896, 0.002); end
  def test_lever_graphs_k1896; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1896, 0.002); end
  def test_lever_graphs_l1896; assert_equal("2015", worksheet.lever_graphs_l1896); end
  def test_lever_graphs_m1896; assert_equal("2020", worksheet.lever_graphs_m1896); end
  def test_lever_graphs_n1896; assert_equal("2025", worksheet.lever_graphs_n1896); end
  def test_lever_graphs_o1896; assert_equal("2030", worksheet.lever_graphs_o1896); end
  def test_lever_graphs_p1896; assert_equal("2035", worksheet.lever_graphs_p1896); end
  def test_lever_graphs_q1896; assert_equal("2040", worksheet.lever_graphs_q1896); end
  def test_lever_graphs_r1896; assert_equal("2045", worksheet.lever_graphs_r1896); end
  def test_lever_graphs_s1896; assert_equal("2050", worksheet.lever_graphs_s1896); end
  def test_lever_graphs_b1897; assert_equal("Historic data", worksheet.lever_graphs_b1897); end
  def test_lever_graphs_b1898; assert_in_delta(1.0, worksheet.lever_graphs_b1898, 0.002); end
  def test_lever_graphs_k1898; assert_in_epsilon(69.69, worksheet.lever_graphs_k1898, 0.002); end
  def test_lever_graphs_l1898; assert_in_epsilon(165.0, worksheet.lever_graphs_l1898, 0.002); end
  def test_lever_graphs_m1898; assert_in_epsilon(110.0, worksheet.lever_graphs_m1898, 0.002); end
  def test_lever_graphs_n1898; assert_in_epsilon(85.0, worksheet.lever_graphs_n1898, 0.002); end
  def test_lever_graphs_o1898; assert_in_epsilon(55.0, worksheet.lever_graphs_o1898, 0.002); end
  def test_lever_graphs_p1898; assert_in_epsilon(35.0, worksheet.lever_graphs_p1898, 0.002); end
  def test_lever_graphs_q1898; assert_in_delta(0.0, (worksheet.lever_graphs_q1898||0), 0.002); end
  def test_lever_graphs_r1898; assert_in_delta(0.0, (worksheet.lever_graphs_r1898||0), 0.002); end
  def test_lever_graphs_s1898; assert_in_delta(0.0, (worksheet.lever_graphs_s1898||0), 0.002); end
  def test_lever_graphs_b1899; assert_in_epsilon(2.0, worksheet.lever_graphs_b1899, 0.002); end
  def test_lever_graphs_k1899; assert_in_epsilon(69.69, worksheet.lever_graphs_k1899, 0.002); end
  def test_lever_graphs_l1899; assert_in_epsilon(165.0, worksheet.lever_graphs_l1899, 0.002); end
  def test_lever_graphs_m1899; assert_in_epsilon(207.46, worksheet.lever_graphs_m1899, 0.002); end
  def test_lever_graphs_n1899; assert_in_epsilon(297.83, worksheet.lever_graphs_n1899, 0.002); end
  def test_lever_graphs_o1899; assert_in_epsilon(427.58, worksheet.lever_graphs_o1899, 0.002); end
  def test_lever_graphs_p1899; assert_in_epsilon(613.85, worksheet.lever_graphs_p1899, 0.002); end
  def test_lever_graphs_q1899; assert_in_epsilon(881.26, worksheet.lever_graphs_q1899, 0.002); end
  def test_lever_graphs_r1899; assert_in_epsilon(1265.17, worksheet.lever_graphs_r1899, 0.002); end
  def test_lever_graphs_s1899; assert_in_epsilon(1816.31, worksheet.lever_graphs_s1899, 0.002); end
  def test_lever_graphs_b1900; assert_in_epsilon(3.0, worksheet.lever_graphs_b1900, 0.002); end
  def test_lever_graphs_k1900; assert_in_epsilon(69.69, worksheet.lever_graphs_k1900, 0.002); end
  def test_lever_graphs_l1900; assert_in_epsilon(165.0, worksheet.lever_graphs_l1900, 0.002); end
  def test_lever_graphs_m1900; assert_in_epsilon(238.28, worksheet.lever_graphs_m1900, 0.002); end
  def test_lever_graphs_n1900; assert_in_epsilon(392.92, worksheet.lever_graphs_n1900, 0.002); end
  def test_lever_graphs_o1900; assert_in_epsilon(647.9, worksheet.lever_graphs_o1900, 0.002); end
  def test_lever_graphs_p1900; assert_in_epsilon(1068.34, worksheet.lever_graphs_p1900, 0.002); end
  def test_lever_graphs_q1900; assert_in_epsilon(1761.64, worksheet.lever_graphs_q1900, 0.002); end
  def test_lever_graphs_r1900; assert_in_epsilon(2357.47, worksheet.lever_graphs_r1900, 0.002); end
  def test_lever_graphs_s1900; assert_in_epsilon(3154.83, worksheet.lever_graphs_s1900, 0.002); end
  def test_lever_graphs_b1901; assert_in_epsilon(4.0, worksheet.lever_graphs_b1901, 0.002); end
  def test_lever_graphs_k1901; assert_in_epsilon(69.69, worksheet.lever_graphs_k1901, 0.002); end
  def test_lever_graphs_l1901; assert_in_epsilon(165.0, worksheet.lever_graphs_l1901, 0.002); end
  def test_lever_graphs_m1901; assert_in_epsilon(312.6, worksheet.lever_graphs_m1901, 0.002); end
  def test_lever_graphs_n1901; assert_in_epsilon(583.64, worksheet.lever_graphs_n1901, 0.002); end
  def test_lever_graphs_o1901; assert_in_epsilon(1089.67, worksheet.lever_graphs_o1901, 0.002); end
  def test_lever_graphs_p1901; assert_in_epsilon(1835.7, worksheet.lever_graphs_p1901, 0.002); end
  def test_lever_graphs_q1901; assert_in_epsilon(4070.049429293361, worksheet.lever_graphs_q1901, 0.002); end
  def test_lever_graphs_r1901; assert_in_epsilon(9023.970342044568, worksheet.lever_graphs_r1901, 0.002); end
  def test_lever_graphs_s1901; assert_in_epsilon(20000.0, worksheet.lever_graphs_s1901, 0.002); end
  def test_lever_graphs_b1902; assert_equal("Comparator A", worksheet.lever_graphs_b1902); end
  def test_lever_graphs_b1903; assert_equal("Comparator B", worksheet.lever_graphs_b1903); end
  def test_lever_graphs_b1904; assert_equal("Comparator C", worksheet.lever_graphs_b1904); end
  def test_lever_graphs_c2046; assert_equal("1975", worksheet.lever_graphs_c2046); end
  def test_lever_graphs_d2046; assert_equal("1980", worksheet.lever_graphs_d2046); end
  def test_lever_graphs_e2046; assert_equal("1985", worksheet.lever_graphs_e2046); end
  def test_lever_graphs_f2046; assert_equal("1990", worksheet.lever_graphs_f2046); end
  def test_lever_graphs_g2046; assert_equal("1995", worksheet.lever_graphs_g2046); end
  def test_lever_graphs_h2046; assert_equal("2000", worksheet.lever_graphs_h2046); end
  def test_lever_graphs_i2046; assert_equal("2005", worksheet.lever_graphs_i2046); end
  def test_lever_graphs_j2046; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2046, 0.002); end
  def test_lever_graphs_k2046; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2046, 0.002); end
  def test_lever_graphs_l2046; assert_equal("2015", worksheet.lever_graphs_l2046); end
  def test_lever_graphs_m2046; assert_equal("2020", worksheet.lever_graphs_m2046); end
  def test_lever_graphs_n2046; assert_equal("2025", worksheet.lever_graphs_n2046); end
  def test_lever_graphs_o2046; assert_equal("2030", worksheet.lever_graphs_o2046); end
  def test_lever_graphs_p2046; assert_equal("2035", worksheet.lever_graphs_p2046); end
  def test_lever_graphs_q2046; assert_equal("2040", worksheet.lever_graphs_q2046); end
  def test_lever_graphs_r2046; assert_equal("2045", worksheet.lever_graphs_r2046); end
  def test_lever_graphs_s2046; assert_equal("2050", worksheet.lever_graphs_s2046); end
  def test_lever_graphs_b2047; assert_equal("Historic data", worksheet.lever_graphs_b2047); end
  def test_lever_graphs_b2048; assert_in_delta(1.0, worksheet.lever_graphs_b2048, 0.002); end
  def test_lever_graphs_k2048; assert_in_epsilon(120.0, worksheet.lever_graphs_k2048, 0.002); end
  def test_lever_graphs_l2048; assert_in_epsilon(123.6, worksheet.lever_graphs_l2048, 0.002); end
  def test_lever_graphs_m2048; assert_in_epsilon(127.3, worksheet.lever_graphs_m2048, 0.002); end
  def test_lever_graphs_n2048; assert_in_epsilon(131.1, worksheet.lever_graphs_n2048, 0.002); end
  def test_lever_graphs_o2048; assert_in_epsilon(135.0, worksheet.lever_graphs_o2048, 0.002); end
  def test_lever_graphs_p2048; assert_in_epsilon(139.1, worksheet.lever_graphs_p2048, 0.002); end
  def test_lever_graphs_q2048; assert_in_epsilon(143.3, worksheet.lever_graphs_q2048, 0.002); end
  def test_lever_graphs_r2048; assert_in_epsilon(147.6, worksheet.lever_graphs_r2048, 0.002); end
  def test_lever_graphs_s2048; assert_in_epsilon(152.0, worksheet.lever_graphs_s2048, 0.002); end
  def test_lever_graphs_b2049; assert_in_epsilon(2.0, worksheet.lever_graphs_b2049, 0.002); end
  def test_lever_graphs_k2049; assert_in_epsilon(120.0, worksheet.lever_graphs_k2049, 0.002); end
  def test_lever_graphs_l2049; assert_in_epsilon(123.6, worksheet.lever_graphs_l2049, 0.002); end
  def test_lever_graphs_m2049; assert_in_epsilon(178.6, worksheet.lever_graphs_m2049, 0.002); end
  def test_lever_graphs_n2049; assert_in_epsilon(202.2, worksheet.lever_graphs_n2049, 0.002); end
  def test_lever_graphs_o2049; assert_in_epsilon(245.1, worksheet.lever_graphs_o2049, 0.002); end
  def test_lever_graphs_p2049; assert_in_epsilon(278.2, worksheet.lever_graphs_p2049, 0.002); end
  def test_lever_graphs_q2049; assert_in_epsilon(305.7, worksheet.lever_graphs_q2049, 0.002); end
  def test_lever_graphs_r2049; assert_in_epsilon(355.3, worksheet.lever_graphs_r2049, 0.002); end
  def test_lever_graphs_s2049; assert_in_epsilon(403.0, worksheet.lever_graphs_s2049, 0.002); end
  def test_lever_graphs_b2050; assert_in_epsilon(3.0, worksheet.lever_graphs_b2050, 0.002); end
  def test_lever_graphs_k2050; assert_in_epsilon(120.0, worksheet.lever_graphs_k2050, 0.002); end
  def test_lever_graphs_l2050; assert_in_epsilon(123.6, worksheet.lever_graphs_l2050, 0.002); end
  def test_lever_graphs_m2050; assert_in_epsilon(193.5, worksheet.lever_graphs_m2050, 0.002); end
  def test_lever_graphs_n2050; assert_in_epsilon(245.7, worksheet.lever_graphs_n2050, 0.002); end
  def test_lever_graphs_o2050; assert_in_epsilon(312.0, worksheet.lever_graphs_o2050, 0.002); end
  def test_lever_graphs_p2050; assert_in_epsilon(396.2, worksheet.lever_graphs_p2050, 0.002); end
  def test_lever_graphs_q2050; assert_in_epsilon(503.2, worksheet.lever_graphs_q2050, 0.002); end
  def test_lever_graphs_r2050; assert_in_epsilon(639.1, worksheet.lever_graphs_r2050, 0.002); end
  def test_lever_graphs_s2050; assert_in_epsilon(800.0, worksheet.lever_graphs_s2050, 0.002); end
  def test_lever_graphs_b2051; assert_in_epsilon(4.0, worksheet.lever_graphs_b2051, 0.002); end
  def test_lever_graphs_k2051; assert_in_epsilon(120.0, worksheet.lever_graphs_k2051, 0.002); end
  def test_lever_graphs_l2051; assert_in_epsilon(123.6, worksheet.lever_graphs_l2051, 0.002); end
  def test_lever_graphs_m2051; assert_in_epsilon(212.3, worksheet.lever_graphs_m2051, 0.002); end
  def test_lever_graphs_n2051; assert_in_epsilon(282.4, worksheet.lever_graphs_n2051, 0.002); end
  def test_lever_graphs_o2051; assert_in_epsilon(375.6, worksheet.lever_graphs_o2051, 0.002); end
  def test_lever_graphs_p2051; assert_in_epsilon(499.5, worksheet.lever_graphs_p2051, 0.002); end
  def test_lever_graphs_q2051; assert_in_epsilon(664.3, worksheet.lever_graphs_q2051, 0.002); end
  def test_lever_graphs_r2051; assert_in_epsilon(883.5, worksheet.lever_graphs_r2051, 0.002); end
  def test_lever_graphs_s2051; assert_in_epsilon(1200.0, worksheet.lever_graphs_s2051, 0.002); end
  def test_lever_graphs_b2052; assert_equal("Comparator A", worksheet.lever_graphs_b2052); end
  def test_lever_graphs_b2053; assert_equal("Comparator B", worksheet.lever_graphs_b2053); end
  def test_lever_graphs_b2054; assert_equal("Comparator C", worksheet.lever_graphs_b2054); end
  def test_lever_graphs_c1968; assert_equal("1975", worksheet.lever_graphs_c1968); end
  def test_lever_graphs_d1968; assert_equal("1980", worksheet.lever_graphs_d1968); end
  def test_lever_graphs_e1968; assert_equal("1985", worksheet.lever_graphs_e1968); end
  def test_lever_graphs_f1968; assert_equal("1990", worksheet.lever_graphs_f1968); end
  def test_lever_graphs_g1968; assert_equal("1995", worksheet.lever_graphs_g1968); end
  def test_lever_graphs_h1968; assert_equal("2000", worksheet.lever_graphs_h1968); end
  def test_lever_graphs_i1968; assert_equal("2005", worksheet.lever_graphs_i1968); end
  def test_lever_graphs_j1968; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1968, 0.002); end
  def test_lever_graphs_k1968; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1968, 0.002); end
  def test_lever_graphs_l1968; assert_equal("2015", worksheet.lever_graphs_l1968); end
  def test_lever_graphs_m1968; assert_equal("2020", worksheet.lever_graphs_m1968); end
  def test_lever_graphs_n1968; assert_equal("2025", worksheet.lever_graphs_n1968); end
  def test_lever_graphs_o1968; assert_equal("2030", worksheet.lever_graphs_o1968); end
  def test_lever_graphs_p1968; assert_equal("2035", worksheet.lever_graphs_p1968); end
  def test_lever_graphs_q1968; assert_equal("2040", worksheet.lever_graphs_q1968); end
  def test_lever_graphs_r1968; assert_equal("2045", worksheet.lever_graphs_r1968); end
  def test_lever_graphs_s1968; assert_equal("2050", worksheet.lever_graphs_s1968); end
  def test_lever_graphs_b1969; assert_equal("Historic data", worksheet.lever_graphs_b1969); end
  def test_lever_graphs_b1970; assert_in_delta(1.0, worksheet.lever_graphs_b1970, 0.002); end
  def test_lever_graphs_k1970; assert_in_epsilon(237.67, worksheet.lever_graphs_k1970, 0.002); end
  def test_lever_graphs_l1970; assert_in_epsilon(414.0, worksheet.lever_graphs_l1970, 0.002); end
  def test_lever_graphs_m1970; assert_in_epsilon(393.0, worksheet.lever_graphs_m1970, 0.002); end
  def test_lever_graphs_n1970; assert_in_epsilon(348.0, worksheet.lever_graphs_n1970, 0.002); end
  def test_lever_graphs_o1970; assert_in_epsilon(198.0, worksheet.lever_graphs_o1970, 0.002); end
  def test_lever_graphs_p1970; assert_in_delta(0.0, (worksheet.lever_graphs_p1970||0), 0.002); end
  def test_lever_graphs_q1970; assert_in_delta(0.0, (worksheet.lever_graphs_q1970||0), 0.002); end
  def test_lever_graphs_r1970; assert_in_delta(0.0, (worksheet.lever_graphs_r1970||0), 0.002); end
  def test_lever_graphs_s1970; assert_in_delta(0.0, (worksheet.lever_graphs_s1970||0), 0.002); end
  def test_lever_graphs_b1971; assert_in_epsilon(2.0, worksheet.lever_graphs_b1971, 0.002); end
  def test_lever_graphs_k1971; assert_in_epsilon(237.67, worksheet.lever_graphs_k1971, 0.002); end
  def test_lever_graphs_l1971; assert_in_epsilon(414.0, worksheet.lever_graphs_l1971, 0.002); end
  def test_lever_graphs_m1971; assert_in_epsilon(597.0, worksheet.lever_graphs_m1971, 0.002); end
  def test_lever_graphs_n1971; assert_in_epsilon(657.0, worksheet.lever_graphs_n1971, 0.002); end
  def test_lever_graphs_o1971; assert_in_epsilon(837.0, worksheet.lever_graphs_o1971, 0.002); end
  def test_lever_graphs_p1971; assert_in_epsilon(1025.0, worksheet.lever_graphs_p1971, 0.002); end
  def test_lever_graphs_q1971; assert_in_epsilon(1288.0, worksheet.lever_graphs_q1971, 0.002); end
  def test_lever_graphs_r1971; assert_in_epsilon(1875.0, worksheet.lever_graphs_r1971, 0.002); end
  def test_lever_graphs_s1971; assert_in_epsilon(2317.0, worksheet.lever_graphs_s1971, 0.002); end
  def test_lever_graphs_b1972; assert_in_epsilon(3.0, worksheet.lever_graphs_b1972, 0.002); end
  def test_lever_graphs_k1972; assert_in_epsilon(237.67, worksheet.lever_graphs_k1972, 0.002); end
  def test_lever_graphs_l1972; assert_in_epsilon(414.0, worksheet.lever_graphs_l1972, 0.002); end
  def test_lever_graphs_m1972; assert_in_epsilon(824.0, worksheet.lever_graphs_m1972, 0.002); end
  def test_lever_graphs_n1972; assert_in_epsilon(1069.0, worksheet.lever_graphs_n1972, 0.002); end
  def test_lever_graphs_o1972; assert_in_epsilon(1654.0, worksheet.lever_graphs_o1972, 0.002); end
  def test_lever_graphs_p1972; assert_in_epsilon(2240.0, worksheet.lever_graphs_p1972, 0.002); end
  def test_lever_graphs_q1972; assert_in_epsilon(2793.0, worksheet.lever_graphs_q1972, 0.002); end
  def test_lever_graphs_r1972; assert_in_epsilon(3745.0, worksheet.lever_graphs_r1972, 0.002); end
  def test_lever_graphs_s1972; assert_in_epsilon(4710.0, worksheet.lever_graphs_s1972, 0.002); end
  def test_lever_graphs_b1973; assert_in_epsilon(4.0, worksheet.lever_graphs_b1973, 0.002); end
  def test_lever_graphs_k1973; assert_in_epsilon(237.67, worksheet.lever_graphs_k1973, 0.002); end
  def test_lever_graphs_l1973; assert_in_epsilon(414.0, worksheet.lever_graphs_l1973, 0.002); end
  def test_lever_graphs_m1973; assert_in_epsilon(1144.0, worksheet.lever_graphs_m1973, 0.002); end
  def test_lever_graphs_n1973; assert_in_epsilon(1753.0, worksheet.lever_graphs_n1973, 0.002); end
  def test_lever_graphs_o1973; assert_in_epsilon(2756.0, worksheet.lever_graphs_o1973, 0.002); end
  def test_lever_graphs_p1973; assert_in_epsilon(3747.0, worksheet.lever_graphs_p1973, 0.002); end
  def test_lever_graphs_q1973; assert_in_epsilon(5100.0, worksheet.lever_graphs_q1973, 0.002); end
  def test_lever_graphs_r1973; assert_in_epsilon(5738.0, worksheet.lever_graphs_r1973, 0.002); end
  def test_lever_graphs_s1973; assert_in_epsilon(6466.0, worksheet.lever_graphs_s1973, 0.002); end
  def test_lever_graphs_b1974; assert_equal("Comparator A", worksheet.lever_graphs_b1974); end
  def test_lever_graphs_b1975; assert_equal("Comparator B", worksheet.lever_graphs_b1975); end
  def test_lever_graphs_b1976; assert_equal("Comparator C", worksheet.lever_graphs_b1976); end
  def test_lever_graphs_c2085; assert_equal("1975", worksheet.lever_graphs_c2085); end
  def test_lever_graphs_d2085; assert_equal("1980", worksheet.lever_graphs_d2085); end
  def test_lever_graphs_e2085; assert_equal("1985", worksheet.lever_graphs_e2085); end
  def test_lever_graphs_f2085; assert_equal("1990", worksheet.lever_graphs_f2085); end
  def test_lever_graphs_g2085; assert_equal("1995", worksheet.lever_graphs_g2085); end
  def test_lever_graphs_h2085; assert_equal("2000", worksheet.lever_graphs_h2085); end
  def test_lever_graphs_i2085; assert_equal("2005", worksheet.lever_graphs_i2085); end
  def test_lever_graphs_j2085; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2085, 0.002); end
  def test_lever_graphs_k2085; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2085, 0.002); end
  def test_lever_graphs_l2085; assert_equal("2015", worksheet.lever_graphs_l2085); end
  def test_lever_graphs_m2085; assert_equal("2020", worksheet.lever_graphs_m2085); end
  def test_lever_graphs_n2085; assert_equal("2025", worksheet.lever_graphs_n2085); end
  def test_lever_graphs_o2085; assert_equal("2030", worksheet.lever_graphs_o2085); end
  def test_lever_graphs_p2085; assert_equal("2035", worksheet.lever_graphs_p2085); end
  def test_lever_graphs_q2085; assert_equal("2040", worksheet.lever_graphs_q2085); end
  def test_lever_graphs_r2085; assert_equal("2045", worksheet.lever_graphs_r2085); end
  def test_lever_graphs_s2085; assert_equal("2050", worksheet.lever_graphs_s2085); end
  def test_lever_graphs_b2086; assert_equal("Historic data", worksheet.lever_graphs_b2086); end
  def test_lever_graphs_b2087; assert_in_delta(1.0, worksheet.lever_graphs_b2087, 0.002); end
  def test_lever_graphs_k2087; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2087, 0.002); end
  def test_lever_graphs_l2087; assert_in_delta(0.01, worksheet.lever_graphs_l2087, 0.002); end
  def test_lever_graphs_m2087; assert_in_delta(0.011428571428571429, worksheet.lever_graphs_m2087, 0.002); end
  def test_lever_graphs_n2087; assert_in_delta(0.012857142857142859, worksheet.lever_graphs_n2087, 0.002); end
  def test_lever_graphs_o2087; assert_in_delta(0.014285714285714287, worksheet.lever_graphs_o2087, 0.002); end
  def test_lever_graphs_p2087; assert_in_delta(0.015714285714285715, worksheet.lever_graphs_p2087, 0.002); end
  def test_lever_graphs_q2087; assert_in_delta(0.017142857142857144, worksheet.lever_graphs_q2087, 0.002); end
  def test_lever_graphs_r2087; assert_in_delta(0.018571428571428572, worksheet.lever_graphs_r2087, 0.002); end
  def test_lever_graphs_s2087; assert_in_delta(0.02, worksheet.lever_graphs_s2087, 0.002); end
  def test_lever_graphs_b2088; assert_in_epsilon(2.0, worksheet.lever_graphs_b2088, 0.002); end
  def test_lever_graphs_k2088; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2088, 0.002); end
  def test_lever_graphs_l2088; assert_in_delta(0.01, worksheet.lever_graphs_l2088, 0.002); end
  def test_lever_graphs_m2088; assert_in_delta(0.022857142857142857, worksheet.lever_graphs_m2088, 0.002); end
  def test_lever_graphs_n2088; assert_in_delta(0.03571428571428571, worksheet.lever_graphs_n2088, 0.002); end
  def test_lever_graphs_o2088; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_o2088, 0.002); end
  def test_lever_graphs_p2088; assert_in_delta(0.06142857142857143, worksheet.lever_graphs_p2088, 0.002); end
  def test_lever_graphs_q2088; assert_in_delta(0.0742857142857143, worksheet.lever_graphs_q2088, 0.002); end
  def test_lever_graphs_r2088; assert_in_delta(0.08714285714285715, worksheet.lever_graphs_r2088, 0.002); end
  def test_lever_graphs_s2088; assert_in_delta(0.1, worksheet.lever_graphs_s2088, 0.002); end
  def test_lever_graphs_b2089; assert_in_epsilon(3.0, worksheet.lever_graphs_b2089, 0.002); end
  def test_lever_graphs_k2089; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2089, 0.002); end
  def test_lever_graphs_l2089; assert_in_delta(0.01, worksheet.lever_graphs_l2089, 0.002); end
  def test_lever_graphs_m2089; assert_in_delta(0.037142857142857144, worksheet.lever_graphs_m2089, 0.002); end
  def test_lever_graphs_n2089; assert_in_delta(0.06428571428571428, worksheet.lever_graphs_n2089, 0.002); end
  def test_lever_graphs_o2089; assert_in_delta(0.09142857142857143, worksheet.lever_graphs_o2089, 0.002); end
  def test_lever_graphs_p2089; assert_in_delta(0.11857142857142856, worksheet.lever_graphs_p2089, 0.002); end
  def test_lever_graphs_q2089; assert_in_delta(0.14571428571428574, worksheet.lever_graphs_q2089, 0.002); end
  def test_lever_graphs_r2089; assert_in_delta(0.17285714285714285, worksheet.lever_graphs_r2089, 0.002); end
  def test_lever_graphs_s2089; assert_in_delta(0.2, worksheet.lever_graphs_s2089, 0.002); end
  def test_lever_graphs_b2090; assert_in_epsilon(4.0, worksheet.lever_graphs_b2090, 0.002); end
  def test_lever_graphs_k2090; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2090, 0.002); end
  def test_lever_graphs_l2090; assert_in_delta(0.01, worksheet.lever_graphs_l2090, 0.002); end
  def test_lever_graphs_m2090; assert_in_delta(0.058571428571428566, worksheet.lever_graphs_m2090, 0.002); end
  def test_lever_graphs_n2090; assert_in_delta(0.10714285714285714, worksheet.lever_graphs_n2090, 0.002); end
  def test_lever_graphs_o2090; assert_in_delta(0.15571428571428572, worksheet.lever_graphs_o2090, 0.002); end
  def test_lever_graphs_p2090; assert_in_delta(0.20428571428571426, worksheet.lever_graphs_p2090, 0.002); end
  def test_lever_graphs_q2090; assert_in_delta(0.25285714285714284, worksheet.lever_graphs_q2090, 0.002); end
  def test_lever_graphs_r2090; assert_in_delta(0.30142857142857143, worksheet.lever_graphs_r2090, 0.002); end
  def test_lever_graphs_s2090; assert_in_delta(0.35, worksheet.lever_graphs_s2090, 0.002); end
  def test_lever_graphs_b2091; assert_equal("Comparator A", worksheet.lever_graphs_b2091); end
  def test_lever_graphs_b2092; assert_equal("Comparator B", worksheet.lever_graphs_b2092); end
  def test_lever_graphs_b2093; assert_equal("Comparator C", worksheet.lever_graphs_b2093); end
  def test_lever_graphs_c2100; assert_equal("1975", worksheet.lever_graphs_c2100); end
  def test_lever_graphs_d2100; assert_equal("1980", worksheet.lever_graphs_d2100); end
  def test_lever_graphs_e2100; assert_equal("1985", worksheet.lever_graphs_e2100); end
  def test_lever_graphs_f2100; assert_equal("1990", worksheet.lever_graphs_f2100); end
  def test_lever_graphs_g2100; assert_equal("1995", worksheet.lever_graphs_g2100); end
  def test_lever_graphs_h2100; assert_equal("2000", worksheet.lever_graphs_h2100); end
  def test_lever_graphs_i2100; assert_equal("2005", worksheet.lever_graphs_i2100); end
  def test_lever_graphs_j2100; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2100, 0.002); end
  def test_lever_graphs_k2100; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2100, 0.002); end
  def test_lever_graphs_l2100; assert_equal("2015", worksheet.lever_graphs_l2100); end
  def test_lever_graphs_m2100; assert_equal("2020", worksheet.lever_graphs_m2100); end
  def test_lever_graphs_n2100; assert_equal("2025", worksheet.lever_graphs_n2100); end
  def test_lever_graphs_o2100; assert_equal("2030", worksheet.lever_graphs_o2100); end
  def test_lever_graphs_p2100; assert_equal("2035", worksheet.lever_graphs_p2100); end
  def test_lever_graphs_q2100; assert_equal("2040", worksheet.lever_graphs_q2100); end
  def test_lever_graphs_r2100; assert_equal("2045", worksheet.lever_graphs_r2100); end
  def test_lever_graphs_s2100; assert_equal("2050", worksheet.lever_graphs_s2100); end
  def test_lever_graphs_b2101; assert_equal("Historic data", worksheet.lever_graphs_b2101); end
  def test_lever_graphs_b2102; assert_in_delta(1.0, worksheet.lever_graphs_b2102, 0.002); end
  def test_lever_graphs_k2102; assert_in_delta(0.0, (worksheet.lever_graphs_k2102||0), 0.002); end
  def test_lever_graphs_l2102; assert_in_delta(0.0, (worksheet.lever_graphs_l2102||0), 0.002); end
  def test_lever_graphs_m2102; assert_in_delta(0.0, (worksheet.lever_graphs_m2102||0), 0.002); end
  def test_lever_graphs_n2102; assert_in_delta(0.0, (worksheet.lever_graphs_n2102||0), 0.002); end
  def test_lever_graphs_o2102; assert_in_delta(0.0, (worksheet.lever_graphs_o2102||0), 0.002); end
  def test_lever_graphs_p2102; assert_in_delta(0.0, (worksheet.lever_graphs_p2102||0), 0.002); end
  def test_lever_graphs_q2102; assert_in_delta(0.0, (worksheet.lever_graphs_q2102||0), 0.002); end
  def test_lever_graphs_r2102; assert_in_delta(0.0, (worksheet.lever_graphs_r2102||0), 0.002); end
  def test_lever_graphs_s2102; assert_in_delta(0.0, (worksheet.lever_graphs_s2102||0), 0.002); end
  def test_lever_graphs_b2103; assert_in_epsilon(2.0, worksheet.lever_graphs_b2103, 0.002); end
  def test_lever_graphs_k2103; assert_in_delta(0.0, (worksheet.lever_graphs_k2103||0), 0.002); end
  def test_lever_graphs_l2103; assert_in_delta(0.0, (worksheet.lever_graphs_l2103||0), 0.002); end
  def test_lever_graphs_m2103; assert_in_delta(0.0, (worksheet.lever_graphs_m2103||0), 0.002); end
  def test_lever_graphs_n2103; assert_in_delta(0.0, (worksheet.lever_graphs_n2103||0), 0.002); end
  def test_lever_graphs_o2103; assert_in_delta(0.0, (worksheet.lever_graphs_o2103||0), 0.002); end
  def test_lever_graphs_p2103; assert_in_delta(0.0, (worksheet.lever_graphs_p2103||0), 0.002); end
  def test_lever_graphs_q2103; assert_in_delta(0.0, (worksheet.lever_graphs_q2103||0), 0.002); end
  def test_lever_graphs_r2103; assert_in_delta(0.0, (worksheet.lever_graphs_r2103||0), 0.002); end
  def test_lever_graphs_s2103; assert_in_delta(0.0, (worksheet.lever_graphs_s2103||0), 0.002); end
  def test_lever_graphs_b2104; assert_in_epsilon(3.0, worksheet.lever_graphs_b2104, 0.002); end
  def test_lever_graphs_k2104; assert_in_delta(0.0, (worksheet.lever_graphs_k2104||0), 0.002); end
  def test_lever_graphs_l2104; assert_in_delta(0.0, (worksheet.lever_graphs_l2104||0), 0.002); end
  def test_lever_graphs_m2104; assert_in_delta(0.021428571428571425, worksheet.lever_graphs_m2104, 0.002); end
  def test_lever_graphs_n2104; assert_in_delta(0.04285714285714285, worksheet.lever_graphs_n2104, 0.002); end
  def test_lever_graphs_o2104; assert_in_delta(0.06428571428571428, worksheet.lever_graphs_o2104, 0.002); end
  def test_lever_graphs_p2104; assert_in_delta(0.0857142857142857, worksheet.lever_graphs_p2104, 0.002); end
  def test_lever_graphs_q2104; assert_in_delta(0.10714285714285714, worksheet.lever_graphs_q2104, 0.002); end
  def test_lever_graphs_r2104; assert_in_delta(0.12857142857142856, worksheet.lever_graphs_r2104, 0.002); end
  def test_lever_graphs_s2104; assert_in_delta(0.15, worksheet.lever_graphs_s2104, 0.002); end
  def test_lever_graphs_b2105; assert_in_epsilon(4.0, worksheet.lever_graphs_b2105, 0.002); end
  def test_lever_graphs_k2105; assert_in_delta(0.0, (worksheet.lever_graphs_k2105||0), 0.002); end
  def test_lever_graphs_l2105; assert_in_delta(0.0, (worksheet.lever_graphs_l2105||0), 0.002); end
  def test_lever_graphs_m2105; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_m2105, 0.002); end
  def test_lever_graphs_n2105; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2105, 0.002); end
  def test_lever_graphs_o2105; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_o2105, 0.002); end
  def test_lever_graphs_p2105; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_p2105, 0.002); end
  def test_lever_graphs_q2105; assert_in_delta(0.14285714285714288, worksheet.lever_graphs_q2105, 0.002); end
  def test_lever_graphs_r2105; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_r2105, 0.002); end
  def test_lever_graphs_s2105; assert_in_delta(0.2, worksheet.lever_graphs_s2105, 0.002); end
  def test_lever_graphs_b2106; assert_equal("Comparator A", worksheet.lever_graphs_b2106); end
  def test_lever_graphs_b2107; assert_equal("Comparator B", worksheet.lever_graphs_b2107); end
  def test_lever_graphs_b2108; assert_equal("Comparator C", worksheet.lever_graphs_b2108); end
  def test_lever_graphs_c2115; assert_equal("1975", worksheet.lever_graphs_c2115); end
  def test_lever_graphs_d2115; assert_equal("1980", worksheet.lever_graphs_d2115); end
  def test_lever_graphs_e2115; assert_equal("1985", worksheet.lever_graphs_e2115); end
  def test_lever_graphs_f2115; assert_equal("1990", worksheet.lever_graphs_f2115); end
  def test_lever_graphs_g2115; assert_equal("1995", worksheet.lever_graphs_g2115); end
  def test_lever_graphs_h2115; assert_equal("2000", worksheet.lever_graphs_h2115); end
  def test_lever_graphs_i2115; assert_equal("2005", worksheet.lever_graphs_i2115); end
  def test_lever_graphs_j2115; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2115, 0.002); end
  def test_lever_graphs_k2115; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2115, 0.002); end
  def test_lever_graphs_l2115; assert_equal("2015", worksheet.lever_graphs_l2115); end
  def test_lever_graphs_m2115; assert_equal("2020", worksheet.lever_graphs_m2115); end
  def test_lever_graphs_n2115; assert_equal("2025", worksheet.lever_graphs_n2115); end
  def test_lever_graphs_o2115; assert_equal("2030", worksheet.lever_graphs_o2115); end
  def test_lever_graphs_p2115; assert_equal("2035", worksheet.lever_graphs_p2115); end
  def test_lever_graphs_q2115; assert_equal("2040", worksheet.lever_graphs_q2115); end
  def test_lever_graphs_r2115; assert_equal("2045", worksheet.lever_graphs_r2115); end
  def test_lever_graphs_s2115; assert_equal("2050", worksheet.lever_graphs_s2115); end
  def test_lever_graphs_b2116; assert_equal("Historic data", worksheet.lever_graphs_b2116); end
  def test_lever_graphs_b2117; assert_in_delta(1.0, worksheet.lever_graphs_b2117, 0.002); end
  def test_lever_graphs_k2117; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2117, 0.002); end
  def test_lever_graphs_l2117; assert_in_delta(0.01, worksheet.lever_graphs_l2117, 0.002); end
  def test_lever_graphs_m2117; assert_in_delta(0.011428571428571429, worksheet.lever_graphs_m2117, 0.002); end
  def test_lever_graphs_n2117; assert_in_delta(0.012857142857142859, worksheet.lever_graphs_n2117, 0.002); end
  def test_lever_graphs_o2117; assert_in_delta(0.014285714285714287, worksheet.lever_graphs_o2117, 0.002); end
  def test_lever_graphs_p2117; assert_in_delta(0.015714285714285715, worksheet.lever_graphs_p2117, 0.002); end
  def test_lever_graphs_q2117; assert_in_delta(0.017142857142857144, worksheet.lever_graphs_q2117, 0.002); end
  def test_lever_graphs_r2117; assert_in_delta(0.018571428571428572, worksheet.lever_graphs_r2117, 0.002); end
  def test_lever_graphs_s2117; assert_in_delta(0.02, worksheet.lever_graphs_s2117, 0.002); end
  def test_lever_graphs_b2118; assert_in_epsilon(2.0, worksheet.lever_graphs_b2118, 0.002); end
  def test_lever_graphs_k2118; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2118, 0.002); end
  def test_lever_graphs_l2118; assert_in_delta(0.01, worksheet.lever_graphs_l2118, 0.002); end
  def test_lever_graphs_m2118; assert_in_delta(0.022857142857142857, worksheet.lever_graphs_m2118, 0.002); end
  def test_lever_graphs_n2118; assert_in_delta(0.03571428571428571, worksheet.lever_graphs_n2118, 0.002); end
  def test_lever_graphs_o2118; assert_in_delta(0.04857142857142857, worksheet.lever_graphs_o2118, 0.002); end
  def test_lever_graphs_p2118; assert_in_delta(0.06142857142857143, worksheet.lever_graphs_p2118, 0.002); end
  def test_lever_graphs_q2118; assert_in_delta(0.0742857142857143, worksheet.lever_graphs_q2118, 0.002); end
  def test_lever_graphs_r2118; assert_in_delta(0.08714285714285715, worksheet.lever_graphs_r2118, 0.002); end
  def test_lever_graphs_s2118; assert_in_delta(0.1, worksheet.lever_graphs_s2118, 0.002); end
  def test_lever_graphs_b2119; assert_in_epsilon(3.0, worksheet.lever_graphs_b2119, 0.002); end
  def test_lever_graphs_k2119; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2119, 0.002); end
  def test_lever_graphs_l2119; assert_in_delta(0.01, worksheet.lever_graphs_l2119, 0.002); end
  def test_lever_graphs_m2119; assert_in_delta(0.058571428571428566, worksheet.lever_graphs_m2119, 0.002); end
  def test_lever_graphs_n2119; assert_in_delta(0.10714285714285712, worksheet.lever_graphs_n2119, 0.002); end
  def test_lever_graphs_o2119; assert_in_delta(0.1557142857142857, worksheet.lever_graphs_o2119, 0.002); end
  def test_lever_graphs_p2119; assert_in_delta(0.20428571428571426, worksheet.lever_graphs_p2119, 0.002); end
  def test_lever_graphs_q2119; assert_in_delta(0.2528571428571429, worksheet.lever_graphs_q2119, 0.002); end
  def test_lever_graphs_r2119; assert_in_delta(0.3014285714285714, worksheet.lever_graphs_r2119, 0.002); end
  def test_lever_graphs_s2119; assert_in_delta(0.35, worksheet.lever_graphs_s2119, 0.002); end
  def test_lever_graphs_b2120; assert_in_epsilon(4.0, worksheet.lever_graphs_b2120, 0.002); end
  def test_lever_graphs_k2120; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_k2120, 0.002); end
  def test_lever_graphs_l2120; assert_in_delta(0.01, worksheet.lever_graphs_l2120, 0.002); end
  def test_lever_graphs_m2120; assert_in_delta(0.08714285714285713, worksheet.lever_graphs_m2120, 0.002); end
  def test_lever_graphs_n2120; assert_in_delta(0.16428571428571428, worksheet.lever_graphs_n2120, 0.002); end
  def test_lever_graphs_o2120; assert_in_delta(0.24142857142857144, worksheet.lever_graphs_o2120, 0.002); end
  def test_lever_graphs_p2120; assert_in_delta(0.31857142857142856, worksheet.lever_graphs_p2120, 0.002); end
  def test_lever_graphs_q2120; assert_in_delta(0.3957142857142857, worksheet.lever_graphs_q2120, 0.002); end
  def test_lever_graphs_r2120; assert_in_delta(0.47285714285714286, worksheet.lever_graphs_r2120, 0.002); end
  def test_lever_graphs_s2120; assert_in_delta(0.55, worksheet.lever_graphs_s2120, 0.002); end
  def test_lever_graphs_b2121; assert_equal("Comparator A", worksheet.lever_graphs_b2121); end
  def test_lever_graphs_b2122; assert_equal("Comparator B", worksheet.lever_graphs_b2122); end
  def test_lever_graphs_b2123; assert_equal("Comparator C", worksheet.lever_graphs_b2123); end
  def test_lever_graphs_c1682; assert_equal("1975", worksheet.lever_graphs_c1682); end
  def test_lever_graphs_d1682; assert_equal("1980", worksheet.lever_graphs_d1682); end
  def test_lever_graphs_e1682; assert_equal("1985", worksheet.lever_graphs_e1682); end
  def test_lever_graphs_f1682; assert_equal("1990", worksheet.lever_graphs_f1682); end
  def test_lever_graphs_g1682; assert_equal("1995", worksheet.lever_graphs_g1682); end
  def test_lever_graphs_h1682; assert_equal("2000", worksheet.lever_graphs_h1682); end
  def test_lever_graphs_i1682; assert_equal("2005", worksheet.lever_graphs_i1682); end
  def test_lever_graphs_j1682; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1682, 0.002); end
  def test_lever_graphs_k1682; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1682, 0.002); end
  def test_lever_graphs_l1682; assert_equal("2015", worksheet.lever_graphs_l1682); end
  def test_lever_graphs_m1682; assert_equal("2020", worksheet.lever_graphs_m1682); end
  def test_lever_graphs_n1682; assert_equal("2025", worksheet.lever_graphs_n1682); end
  def test_lever_graphs_o1682; assert_equal("2030", worksheet.lever_graphs_o1682); end
  def test_lever_graphs_p1682; assert_equal("2035", worksheet.lever_graphs_p1682); end
  def test_lever_graphs_q1682; assert_equal("2040", worksheet.lever_graphs_q1682); end
  def test_lever_graphs_r1682; assert_equal("2045", worksheet.lever_graphs_r1682); end
  def test_lever_graphs_s1682; assert_equal("2050", worksheet.lever_graphs_s1682); end
  def test_lever_graphs_b1683; assert_equal("Historic data", worksheet.lever_graphs_b1683); end
  def test_lever_graphs_b1684; assert_in_delta(1.0, worksheet.lever_graphs_b1684, 0.002); end
  def test_lever_graphs_k1684; assert_in_delta(0.0, (worksheet.lever_graphs_k1684||0), 0.002); end
  def test_lever_graphs_l1684; assert_in_delta(0.0, (worksheet.lever_graphs_l1684||0), 0.002); end
  def test_lever_graphs_m1684; assert_in_delta(0.0, (worksheet.lever_graphs_m1684||0), 0.002); end
  def test_lever_graphs_n1684; assert_in_delta(0.0, (worksheet.lever_graphs_n1684||0), 0.002); end
  def test_lever_graphs_o1684; assert_in_delta(0.0, (worksheet.lever_graphs_o1684||0), 0.002); end
  def test_lever_graphs_p1684; assert_in_delta(0.0, (worksheet.lever_graphs_p1684||0), 0.002); end
  def test_lever_graphs_q1684; assert_in_delta(0.0, (worksheet.lever_graphs_q1684||0), 0.002); end
  def test_lever_graphs_r1684; assert_in_delta(0.0, (worksheet.lever_graphs_r1684||0), 0.002); end
  def test_lever_graphs_s1684; assert_in_delta(0.0, (worksheet.lever_graphs_s1684||0), 0.002); end
  def test_lever_graphs_b1685; assert_in_epsilon(2.0, worksheet.lever_graphs_b1685, 0.002); end
  def test_lever_graphs_k1685; assert_in_delta(0.0, (worksheet.lever_graphs_k1685||0), 0.002); end
  def test_lever_graphs_l1685; assert_in_delta(0.0, (worksheet.lever_graphs_l1685||0), 0.002); end
  def test_lever_graphs_m1685; assert_in_delta(0.0, (worksheet.lever_graphs_m1685||0), 0.002); end
  def test_lever_graphs_n1685; assert_in_delta(0.0, (worksheet.lever_graphs_n1685||0), 0.002); end
  def test_lever_graphs_o1685; assert_in_delta(0.0, (worksheet.lever_graphs_o1685||0), 0.002); end
  def test_lever_graphs_p1685; assert_in_delta(0.05, worksheet.lever_graphs_p1685, 0.002); end
  def test_lever_graphs_q1685; assert_in_delta(0.1, worksheet.lever_graphs_q1685, 0.002); end
  def test_lever_graphs_r1685; assert_in_delta(0.15, worksheet.lever_graphs_r1685, 0.002); end
  def test_lever_graphs_s1685; assert_in_delta(0.2, worksheet.lever_graphs_s1685, 0.002); end
  def test_lever_graphs_b1686; assert_in_epsilon(3.0, worksheet.lever_graphs_b1686, 0.002); end
  def test_lever_graphs_k1686; assert_in_delta(0.0, (worksheet.lever_graphs_k1686||0), 0.002); end
  def test_lever_graphs_l1686; assert_in_delta(0.0, (worksheet.lever_graphs_l1686||0), 0.002); end
  def test_lever_graphs_m1686; assert_in_delta(0.0, (worksheet.lever_graphs_m1686||0), 0.002); end
  def test_lever_graphs_n1686; assert_in_delta(0.01, worksheet.lever_graphs_n1686, 0.002); end
  def test_lever_graphs_o1686; assert_in_delta(0.08, worksheet.lever_graphs_o1686, 0.002); end
  def test_lever_graphs_p1686; assert_in_delta(0.15000000000000002, worksheet.lever_graphs_p1686, 0.002); end
  def test_lever_graphs_q1686; assert_in_delta(0.22000000000000003, worksheet.lever_graphs_q1686, 0.002); end
  def test_lever_graphs_r1686; assert_in_delta(0.29000000000000004, worksheet.lever_graphs_r1686, 0.002); end
  def test_lever_graphs_s1686; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_s1686, 0.002); end
  def test_lever_graphs_b1687; assert_in_epsilon(4.0, worksheet.lever_graphs_b1687, 0.002); end
  def test_lever_graphs_k1687; assert_in_delta(0.0, (worksheet.lever_graphs_k1687||0), 0.002); end
  def test_lever_graphs_l1687; assert_in_delta(0.0, (worksheet.lever_graphs_l1687||0), 0.002); end
  def test_lever_graphs_m1687; assert_in_delta(0.0, (worksheet.lever_graphs_m1687||0), 0.002); end
  def test_lever_graphs_n1687; assert_in_delta(0.04, worksheet.lever_graphs_n1687, 0.002); end
  def test_lever_graphs_o1687; assert_in_delta(0.192, worksheet.lever_graphs_o1687, 0.002); end
  def test_lever_graphs_p1687; assert_in_delta(0.344, worksheet.lever_graphs_p1687, 0.002); end
  def test_lever_graphs_q1687; assert_in_delta(0.496, worksheet.lever_graphs_q1687, 0.002); end
  def test_lever_graphs_r1687; assert_in_delta(0.648, worksheet.lever_graphs_r1687, 0.002); end
  def test_lever_graphs_s1687; assert_in_delta(0.8, worksheet.lever_graphs_s1687, 0.002); end
  def test_lever_graphs_b1688; assert_equal("Comparator A", worksheet.lever_graphs_b1688); end
  def test_lever_graphs_b1689; assert_equal("Comparator B", worksheet.lever_graphs_b1689); end
  def test_lever_graphs_b1690; assert_equal("Comparator C", worksheet.lever_graphs_b1690); end
  def test_lever_graphs_d1671; assert_equal("Title", worksheet.lever_graphs_d1671); end
  def test_lever_graphs_e1671; assert_equal("Steel.Oxygen", worksheet.lever_graphs_e1671); end
  def test_lever_graphs_f1671; assert_equal("Chemicals & petrochemicals.HVC", worksheet.lever_graphs_f1671); end
  def test_lever_graphs_g1671; assert_equal("Pulp & paper.Pulp", worksheet.lever_graphs_g1671); end
  def test_lever_graphs_h1671; assert_equal("Cement", worksheet.lever_graphs_h1671); end
  def test_lever_graphs_i1671; assert_equal("Timber", worksheet.lever_graphs_i1671); end
  def test_lever_graphs_d1672; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1672, 0.002); end
  def test_lever_graphs_e1672; assert_in_delta(0.0, (worksheet.lever_graphs_e1672||0), 0.002); end
  def test_lever_graphs_f1672; assert_in_delta(0.0, (worksheet.lever_graphs_f1672||0), 0.002); end
  def test_lever_graphs_g1672; assert_in_delta(0.0, (worksheet.lever_graphs_g1672||0), 0.002); end
  def test_lever_graphs_h1672; assert_in_delta(0.0, (worksheet.lever_graphs_h1672||0), 0.002); end
  def test_lever_graphs_i1672; assert_in_delta(0.0, (worksheet.lever_graphs_i1672||0), 0.002); end
  def test_lever_graphs_d1673; assert_equal("2050: Level 1", worksheet.lever_graphs_d1673); end
  def test_lever_graphs_e1673; assert_in_delta(0.0, (worksheet.lever_graphs_e1673||0), 0.002); end
  def test_lever_graphs_f1673; assert_in_delta(0.0, (worksheet.lever_graphs_f1673||0), 0.002); end
  def test_lever_graphs_g1673; assert_in_delta(0.0, (worksheet.lever_graphs_g1673||0), 0.002); end
  def test_lever_graphs_h1673; assert_in_delta(0.0, (worksheet.lever_graphs_h1673||0), 0.002); end
  def test_lever_graphs_i1673; assert_in_delta(0.0, (worksheet.lever_graphs_i1673||0), 0.002); end
  def test_lever_graphs_d1674; assert_equal("2050: Level 2", worksheet.lever_graphs_d1674); end
  def test_lever_graphs_e1674; assert_in_delta(0.2, worksheet.lever_graphs_e1674, 0.002); end
  def test_lever_graphs_f1674; assert_in_delta(0.0, (worksheet.lever_graphs_f1674||0), 0.002); end
  def test_lever_graphs_g1674; assert_in_delta(0.425, worksheet.lever_graphs_g1674, 0.002); end
  def test_lever_graphs_h1674; assert_in_delta(0.425, worksheet.lever_graphs_h1674, 0.002); end
  def test_lever_graphs_i1674; assert_in_delta(0.0, (worksheet.lever_graphs_i1674||0), 0.002); end
  def test_lever_graphs_d1675; assert_equal("2050: Level 3", worksheet.lever_graphs_d1675); end
  def test_lever_graphs_e1675; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_e1675, 0.002); end
  def test_lever_graphs_f1675; assert_in_delta(0.5, worksheet.lever_graphs_f1675, 0.002); end
  def test_lever_graphs_g1675; assert_in_delta(0.6375, worksheet.lever_graphs_g1675, 0.002); end
  def test_lever_graphs_h1675; assert_in_delta(0.6375, worksheet.lever_graphs_h1675, 0.002); end
  def test_lever_graphs_i1675; assert_in_delta(0.0, (worksheet.lever_graphs_i1675||0), 0.002); end
  def test_lever_graphs_d1676; assert_equal("2050: Level 4", worksheet.lever_graphs_d1676); end
  def test_lever_graphs_e1676; assert_in_delta(0.8, worksheet.lever_graphs_e1676, 0.002); end
  def test_lever_graphs_f1676; assert_in_delta(0.62, worksheet.lever_graphs_f1676, 0.002); end
  def test_lever_graphs_g1676; assert_in_delta(0.85, worksheet.lever_graphs_g1676, 0.002); end
  def test_lever_graphs_h1676; assert_in_delta(0.85, worksheet.lever_graphs_h1676, 0.002); end
  def test_lever_graphs_i1676; assert_in_delta(0.3, worksheet.lever_graphs_i1676, 0.002); end
  def test_lever_graphs_c2506; assert_equal("1975", worksheet.lever_graphs_c2506); end
  def test_lever_graphs_d2506; assert_equal("1980", worksheet.lever_graphs_d2506); end
  def test_lever_graphs_e2506; assert_equal("1985", worksheet.lever_graphs_e2506); end
  def test_lever_graphs_f2506; assert_equal("1990", worksheet.lever_graphs_f2506); end
  def test_lever_graphs_g2506; assert_equal("1995", worksheet.lever_graphs_g2506); end
  def test_lever_graphs_h2506; assert_equal("2000", worksheet.lever_graphs_h2506); end
  def test_lever_graphs_i2506; assert_equal("2005", worksheet.lever_graphs_i2506); end
  def test_lever_graphs_j2506; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2506, 0.002); end
  def test_lever_graphs_k2506; assert_equal("2011", worksheet.lever_graphs_k2506); end
  def test_lever_graphs_l2506; assert_equal("2015", worksheet.lever_graphs_l2506); end
  def test_lever_graphs_m2506; assert_equal("2020", worksheet.lever_graphs_m2506); end
  def test_lever_graphs_n2506; assert_equal("2025", worksheet.lever_graphs_n2506); end
  def test_lever_graphs_o2506; assert_equal("2030", worksheet.lever_graphs_o2506); end
  def test_lever_graphs_p2506; assert_equal("2035", worksheet.lever_graphs_p2506); end
  def test_lever_graphs_q2506; assert_equal("2040", worksheet.lever_graphs_q2506); end
  def test_lever_graphs_r2506; assert_equal("2045", worksheet.lever_graphs_r2506); end
  def test_lever_graphs_s2506; assert_equal("2050", worksheet.lever_graphs_s2506); end
  def test_lever_graphs_b2507; assert_equal("Historic data", worksheet.lever_graphs_b2507); end
  def test_lever_graphs_b2508; assert_in_delta(1.0, worksheet.lever_graphs_b2508, 0.002); end
  def test_lever_graphs_k2508; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2508, 0.002); end
  def test_lever_graphs_l2508; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2508, 0.002); end
  def test_lever_graphs_m2508; assert_in_epsilon(4790.7692307692305, worksheet.lever_graphs_m2508, 0.002); end
  def test_lever_graphs_n2508; assert_in_epsilon(4652.307692307692, worksheet.lever_graphs_n2508, 0.002); end
  def test_lever_graphs_o2508; assert_in_epsilon(4513.846153846154, worksheet.lever_graphs_o2508, 0.002); end
  def test_lever_graphs_p2508; assert_in_epsilon(4375.384615384615, worksheet.lever_graphs_p2508, 0.002); end
  def test_lever_graphs_q2508; assert_in_epsilon(4236.923076923077, worksheet.lever_graphs_q2508, 0.002); end
  def test_lever_graphs_r2508; assert_in_epsilon(4098.461538461539, worksheet.lever_graphs_r2508, 0.002); end
  def test_lever_graphs_s2508; assert_in_epsilon(3960.0000000000005, worksheet.lever_graphs_s2508, 0.002); end
  def test_lever_graphs_b2509; assert_in_epsilon(2.0, worksheet.lever_graphs_b2509, 0.002); end
  def test_lever_graphs_k2509; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2509, 0.002); end
  def test_lever_graphs_l2509; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2509, 0.002); end
  def test_lever_graphs_m2509; assert_in_epsilon(4739.340659340659, worksheet.lever_graphs_m2509, 0.002); end
  def test_lever_graphs_n2509; assert_in_epsilon(4549.450549450549, worksheet.lever_graphs_n2509, 0.002); end
  def test_lever_graphs_o2509; assert_in_epsilon(4359.56043956044, worksheet.lever_graphs_o2509, 0.002); end
  def test_lever_graphs_p2509; assert_in_epsilon(4169.67032967033, worksheet.lever_graphs_p2509, 0.002); end
  def test_lever_graphs_q2509; assert_in_epsilon(3979.78021978022, worksheet.lever_graphs_q2509, 0.002); end
  def test_lever_graphs_r2509; assert_in_epsilon(3789.8901098901097, worksheet.lever_graphs_r2509, 0.002); end
  def test_lever_graphs_s2509; assert_in_epsilon(3600.0, worksheet.lever_graphs_s2509, 0.002); end
  def test_lever_graphs_b2510; assert_in_epsilon(3.0, worksheet.lever_graphs_b2510, 0.002); end
  def test_lever_graphs_k2510; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2510, 0.002); end
  def test_lever_graphs_l2510; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2510, 0.002); end
  def test_lever_graphs_m2510; assert_in_epsilon(4687.912087912087, worksheet.lever_graphs_m2510, 0.002); end
  def test_lever_graphs_n2510; assert_in_epsilon(4446.593406593407, worksheet.lever_graphs_n2510, 0.002); end
  def test_lever_graphs_o2510; assert_in_epsilon(4205.274725274725, worksheet.lever_graphs_o2510, 0.002); end
  def test_lever_graphs_p2510; assert_in_epsilon(3963.9560439560437, worksheet.lever_graphs_p2510, 0.002); end
  def test_lever_graphs_q2510; assert_in_epsilon(3722.6373626373625, worksheet.lever_graphs_q2510, 0.002); end
  def test_lever_graphs_r2510; assert_in_epsilon(3481.3186813186812, worksheet.lever_graphs_r2510, 0.002); end
  def test_lever_graphs_s2510; assert_in_epsilon(3240.0, worksheet.lever_graphs_s2510, 0.002); end
  def test_lever_graphs_b2511; assert_in_epsilon(4.0, worksheet.lever_graphs_b2511, 0.002); end
  def test_lever_graphs_k2511; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2511, 0.002); end
  def test_lever_graphs_l2511; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2511, 0.002); end
  def test_lever_graphs_m2511; assert_in_epsilon(4636.483516483517, worksheet.lever_graphs_m2511, 0.002); end
  def test_lever_graphs_n2511; assert_in_epsilon(4343.736263736263, worksheet.lever_graphs_n2511, 0.002); end
  def test_lever_graphs_o2511; assert_in_epsilon(4050.989010989011, worksheet.lever_graphs_o2511, 0.002); end
  def test_lever_graphs_p2511; assert_in_epsilon(3758.241758241758, worksheet.lever_graphs_p2511, 0.002); end
  def test_lever_graphs_q2511; assert_in_epsilon(3465.4945054945056, worksheet.lever_graphs_q2511, 0.002); end
  def test_lever_graphs_r2511; assert_in_epsilon(3172.7472527472523, worksheet.lever_graphs_r2511, 0.002); end
  def test_lever_graphs_s2511; assert_in_epsilon(2880.0, worksheet.lever_graphs_s2511, 0.002); end
  def test_lever_graphs_d2516; assert_equal("Title", worksheet.lever_graphs_d2516); end
  def test_lever_graphs_e2516; assert_equal("Global urban solid stoves used by people with access to electricity", worksheet.lever_graphs_e2516); end
  def test_lever_graphs_f2516; assert_equal("Global urban liquid stoves used by people with access to electricity", worksheet.lever_graphs_f2516); end
  def test_lever_graphs_g2516; assert_equal("Global urban gas stoves used by people with access to electricity", worksheet.lever_graphs_g2516); end
  def test_lever_graphs_h2516; assert_equal("Global urban electricity stoves used by people with access to electricity", worksheet.lever_graphs_h2516); end
  def test_lever_graphs_i2516; assert_equal("Global urban traditional biomass boiler used by people with access to electricity", worksheet.lever_graphs_i2516); end
  def test_lever_graphs_d2517; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2517, 0.002); end
  def test_lever_graphs_e2517; assert_in_delta(0.13, worksheet.lever_graphs_e2517, 0.002); end
  def test_lever_graphs_f2517; assert_in_delta(0.15, worksheet.lever_graphs_f2517, 0.002); end
  def test_lever_graphs_g2517; assert_in_delta(0.4, worksheet.lever_graphs_g2517, 0.002); end
  def test_lever_graphs_h2517; assert_in_delta(0.2, worksheet.lever_graphs_h2517, 0.002); end
  def test_lever_graphs_i2517; assert_in_delta(0.11999999999999994, worksheet.lever_graphs_i2517, 0.002); end
  def test_lever_graphs_d2518; assert_equal("2050: Level 1", worksheet.lever_graphs_d2518); end
  def test_lever_graphs_e2518; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_e2518, 0.002); end
  def test_lever_graphs_f2518; assert_in_delta(0.15, worksheet.lever_graphs_f2518, 0.002); end
  def test_lever_graphs_g2518; assert_in_delta(0.4, worksheet.lever_graphs_g2518, 0.002); end
  def test_lever_graphs_h2518; assert_in_delta(0.25, worksheet.lever_graphs_h2518, 0.002); end
  def test_lever_graphs_i2518; assert_in_delta(0.12, worksheet.lever_graphs_i2518, 0.002); end
  def test_lever_graphs_d2519; assert_equal("2050: Level 2", worksheet.lever_graphs_d2519); end
  def test_lever_graphs_e2519; assert_in_delta(0.010000000000000009, worksheet.lever_graphs_e2519, 0.002); end
  def test_lever_graphs_f2519; assert_in_delta(0.08, worksheet.lever_graphs_f2519, 0.002); end
  def test_lever_graphs_g2519; assert_in_delta(0.35, worksheet.lever_graphs_g2519, 0.002); end
  def test_lever_graphs_h2519; assert_in_delta(0.5, worksheet.lever_graphs_h2519, 0.002); end
  def test_lever_graphs_i2519; assert_in_delta(0.06, worksheet.lever_graphs_i2519, 0.002); end
  def test_lever_graphs_d2520; assert_equal("2050: Level 3", worksheet.lever_graphs_d2520); end
  def test_lever_graphs_e2520; assert_in_delta(0.0, (worksheet.lever_graphs_e2520||0), 0.002); end
  def test_lever_graphs_f2520; assert_in_delta(0.01, worksheet.lever_graphs_f2520, 0.002); end
  def test_lever_graphs_g2520; assert_in_delta(0.3, worksheet.lever_graphs_g2520, 0.002); end
  def test_lever_graphs_h2520; assert_in_delta(0.68, worksheet.lever_graphs_h2520, 0.002); end
  def test_lever_graphs_i2520; assert_in_delta(0.01, worksheet.lever_graphs_i2520, 0.002); end
  def test_lever_graphs_d2521; assert_equal("2050: Level 4", worksheet.lever_graphs_d2521); end
  def test_lever_graphs_e2521; assert_in_delta(0.0, (worksheet.lever_graphs_e2521||0), 0.002); end
  def test_lever_graphs_f2521; assert_in_delta(0.0, (worksheet.lever_graphs_f2521||0), 0.002); end
  def test_lever_graphs_g2521; assert_in_delta(0.25, worksheet.lever_graphs_g2521, 0.002); end
  def test_lever_graphs_h2521; assert_in_delta(0.75, worksheet.lever_graphs_h2521, 0.002); end
  def test_lever_graphs_i2521; assert_in_delta(0.0, (worksheet.lever_graphs_i2521||0), 0.002); end
  def test_lever_graphs_c2992; assert_equal("1975", worksheet.lever_graphs_c2992); end
  def test_lever_graphs_d2992; assert_equal("1980", worksheet.lever_graphs_d2992); end
  def test_lever_graphs_e2992; assert_equal("1985", worksheet.lever_graphs_e2992); end
  def test_lever_graphs_f2992; assert_equal("1990", worksheet.lever_graphs_f2992); end
  def test_lever_graphs_g2992; assert_equal("1995", worksheet.lever_graphs_g2992); end
  def test_lever_graphs_h2992; assert_equal("2000", worksheet.lever_graphs_h2992); end
  def test_lever_graphs_i2992; assert_equal("2005", worksheet.lever_graphs_i2992); end
  def test_lever_graphs_j2992; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2992, 0.002); end
  def test_lever_graphs_k2992; assert_equal("2011", worksheet.lever_graphs_k2992); end
  def test_lever_graphs_l2992; assert_equal("2015", worksheet.lever_graphs_l2992); end
  def test_lever_graphs_m2992; assert_equal("2020", worksheet.lever_graphs_m2992); end
  def test_lever_graphs_n2992; assert_equal("2025", worksheet.lever_graphs_n2992); end
  def test_lever_graphs_o2992; assert_equal("2030", worksheet.lever_graphs_o2992); end
  def test_lever_graphs_p2992; assert_equal("2035", worksheet.lever_graphs_p2992); end
  def test_lever_graphs_q2992; assert_equal("2040", worksheet.lever_graphs_q2992); end
  def test_lever_graphs_r2992; assert_equal("2045", worksheet.lever_graphs_r2992); end
  def test_lever_graphs_s2992; assert_equal("2050", worksheet.lever_graphs_s2992); end
  def test_lever_graphs_b2993; assert_equal("Historic data", worksheet.lever_graphs_b2993); end
  def test_lever_graphs_b2994; assert_in_delta(1.0, worksheet.lever_graphs_b2994, 0.002); end
  def test_lever_graphs_k2994; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k2994, 0.002); end
  def test_lever_graphs_l2994; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l2994, 0.002); end
  def test_lever_graphs_m2994; assert_in_delta(0.03301703718265961, worksheet.lever_graphs_m2994, 0.002); end
  def test_lever_graphs_n2994; assert_in_delta(0.032795794416757965, worksheet.lever_graphs_n2994, 0.002); end
  def test_lever_graphs_o2994; assert_in_delta(0.03257455165085632, worksheet.lever_graphs_o2994, 0.002); end
  def test_lever_graphs_p2994; assert_in_delta(0.032353308884954676, worksheet.lever_graphs_p2994, 0.002); end
  def test_lever_graphs_q2994; assert_in_delta(0.032132066119053025, worksheet.lever_graphs_q2994, 0.002); end
  def test_lever_graphs_r2994; assert_in_delta(0.03191082335315138, worksheet.lever_graphs_r2994, 0.002); end
  def test_lever_graphs_s2994; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_s2994, 0.002); end
  def test_lever_graphs_b2995; assert_in_epsilon(2.0, worksheet.lever_graphs_b2995, 0.002); end
  def test_lever_graphs_k2995; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k2995, 0.002); end
  def test_lever_graphs_l2995; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l2995, 0.002); end
  def test_lever_graphs_m2995; assert_in_delta(0.034375162064970315, worksheet.lever_graphs_m2995, 0.002); end
  def test_lever_graphs_n2995; assert_in_delta(0.03551204418137937, worksheet.lever_graphs_n2995, 0.002); end
  def test_lever_graphs_o2995; assert_in_delta(0.036648926297788424, worksheet.lever_graphs_o2995, 0.002); end
  def test_lever_graphs_p2995; assert_in_delta(0.03778580841419748, worksheet.lever_graphs_p2995, 0.002); end
  def test_lever_graphs_q2995; assert_in_delta(0.038922690530606534, worksheet.lever_graphs_q2995, 0.002); end
  def test_lever_graphs_r2995; assert_in_delta(0.04005957264701559, worksheet.lever_graphs_r2995, 0.002); end
  def test_lever_graphs_s2995; assert_in_delta(0.04119645476342465, worksheet.lever_graphs_s2995, 0.002); end
  def test_lever_graphs_b2996; assert_in_epsilon(3.0, worksheet.lever_graphs_b2996, 0.002); end
  def test_lever_graphs_k2996; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k2996, 0.002); end
  def test_lever_graphs_l2996; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l2996, 0.002); end
  def test_lever_graphs_m2996; assert_in_delta(0.03573328694728102, worksheet.lever_graphs_m2996, 0.002); end
  def test_lever_graphs_n2996; assert_in_delta(0.03822829394600078, worksheet.lever_graphs_n2996, 0.002); end
  def test_lever_graphs_o2996; assert_in_delta(0.040723300944720535, worksheet.lever_graphs_o2996, 0.002); end
  def test_lever_graphs_p2996; assert_in_delta(0.043218307943440296, worksheet.lever_graphs_p2996, 0.002); end
  def test_lever_graphs_q2996; assert_in_delta(0.04571331494216005, worksheet.lever_graphs_q2996, 0.002); end
  def test_lever_graphs_r2996; assert_in_delta(0.0482083219408798, worksheet.lever_graphs_r2996, 0.002); end
  def test_lever_graphs_s2996; assert_in_delta(0.05070332893959957, worksheet.lever_graphs_s2996, 0.002); end
  def test_lever_graphs_b2997; assert_in_epsilon(4.0, worksheet.lever_graphs_b2997, 0.002); end
  def test_lever_graphs_k2997; assert_in_delta(0.03168958058724973, worksheet.lever_graphs_k2997, 0.002); end
  def test_lever_graphs_l2997; assert_in_delta(0.03323827994856126, worksheet.lever_graphs_l2997, 0.002); end
  def test_lever_graphs_m2997; assert_in_delta(0.03754412012369529, worksheet.lever_graphs_m2997, 0.002); end
  def test_lever_graphs_n2997; assert_in_delta(0.041849960298829314, worksheet.lever_graphs_n2997, 0.002); end
  def test_lever_graphs_o2997; assert_in_delta(0.046155800473963345, worksheet.lever_graphs_o2997, 0.002); end
  def test_lever_graphs_p2997; assert_in_delta(0.05046164064909737, worksheet.lever_graphs_p2997, 0.002); end
  def test_lever_graphs_q2997; assert_in_delta(0.0547674808242314, worksheet.lever_graphs_q2997, 0.002); end
  def test_lever_graphs_r2997; assert_in_delta(0.05907332099936543, worksheet.lever_graphs_r2997, 0.002); end
  def test_lever_graphs_s2997; assert_in_delta(0.06337916117449946, worksheet.lever_graphs_s2997, 0.002); end
  def test_lever_graphs_c3002; assert_equal("1975", worksheet.lever_graphs_c3002); end
  def test_lever_graphs_d3002; assert_equal("1980", worksheet.lever_graphs_d3002); end
  def test_lever_graphs_e3002; assert_equal("1985", worksheet.lever_graphs_e3002); end
  def test_lever_graphs_f3002; assert_equal("1990", worksheet.lever_graphs_f3002); end
  def test_lever_graphs_g3002; assert_equal("1995", worksheet.lever_graphs_g3002); end
  def test_lever_graphs_h3002; assert_equal("2000", worksheet.lever_graphs_h3002); end
  def test_lever_graphs_i3002; assert_equal("2005", worksheet.lever_graphs_i3002); end
  def test_lever_graphs_j3002; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3002, 0.002); end
  def test_lever_graphs_k3002; assert_equal("2011", worksheet.lever_graphs_k3002); end
  def test_lever_graphs_l3002; assert_equal("2015", worksheet.lever_graphs_l3002); end
  def test_lever_graphs_m3002; assert_equal("2020", worksheet.lever_graphs_m3002); end
  def test_lever_graphs_n3002; assert_equal("2025", worksheet.lever_graphs_n3002); end
  def test_lever_graphs_o3002; assert_equal("2030", worksheet.lever_graphs_o3002); end
  def test_lever_graphs_p3002; assert_equal("2035", worksheet.lever_graphs_p3002); end
  def test_lever_graphs_q3002; assert_equal("2040", worksheet.lever_graphs_q3002); end
  def test_lever_graphs_r3002; assert_equal("2045", worksheet.lever_graphs_r3002); end
  def test_lever_graphs_s3002; assert_equal("2050", worksheet.lever_graphs_s3002); end
  def test_lever_graphs_b3003; assert_equal("Historic data", worksheet.lever_graphs_b3003); end
  def test_lever_graphs_b3004; assert_in_delta(1.0, worksheet.lever_graphs_b3004, 0.002); end
  def test_lever_graphs_k3004; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3004, 0.002); end
  def test_lever_graphs_l3004; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3004, 0.002); end
  def test_lever_graphs_m3004; assert_in_delta(0.10462467736031766, worksheet.lever_graphs_m3004, 0.002); end
  def test_lever_graphs_n3004; assert_in_delta(0.10392360134090665, worksheet.lever_graphs_n3004, 0.002); end
  def test_lever_graphs_o3004; assert_in_delta(0.10322252532149566, worksheet.lever_graphs_o3004, 0.002); end
  def test_lever_graphs_p3004; assert_in_delta(0.10252144930208468, worksheet.lever_graphs_p3004, 0.002); end
  def test_lever_graphs_q3004; assert_in_delta(0.10182037328267365, worksheet.lever_graphs_q3004, 0.002); end
  def test_lever_graphs_r3004; assert_in_delta(0.10111929726326264, worksheet.lever_graphs_r3004, 0.002); end
  def test_lever_graphs_s3004; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_s3004, 0.002); end
  def test_lever_graphs_b3005; assert_in_epsilon(2.0, worksheet.lever_graphs_b3005, 0.002); end
  def test_lever_graphs_k3005; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3005, 0.002); end
  def test_lever_graphs_l3005; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3005, 0.002); end
  def test_lever_graphs_m3005; assert_in_delta(0.10892831541362559, worksheet.lever_graphs_m3005, 0.002); end
  def test_lever_graphs_n3005; assert_in_delta(0.11253087744752252, worksheet.lever_graphs_n3005, 0.002); end
  def test_lever_graphs_o3005; assert_in_delta(0.11613343948141944, worksheet.lever_graphs_o3005, 0.002); end
  def test_lever_graphs_p3005; assert_in_delta(0.11973600151531635, worksheet.lever_graphs_p3005, 0.002); end
  def test_lever_graphs_q3005; assert_in_delta(0.12333856354921327, worksheet.lever_graphs_q3005, 0.002); end
  def test_lever_graphs_r3005; assert_in_delta(0.1269411255831102, worksheet.lever_graphs_r3005, 0.002); end
  def test_lever_graphs_s3005; assert_in_delta(0.13054368761700713, worksheet.lever_graphs_s3005, 0.002); end
  def test_lever_graphs_b3006; assert_in_epsilon(3.0, worksheet.lever_graphs_b3006, 0.002); end
  def test_lever_graphs_k3006; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3006, 0.002); end
  def test_lever_graphs_l3006; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3006, 0.002); end
  def test_lever_graphs_m3006; assert_in_delta(0.11323195346693353, worksheet.lever_graphs_m3006, 0.002); end
  def test_lever_graphs_n3006; assert_in_delta(0.12113815355413837, worksheet.lever_graphs_n3006, 0.002); end
  def test_lever_graphs_o3006; assert_in_delta(0.1290443536413432, worksheet.lever_graphs_o3006, 0.002); end
  def test_lever_graphs_p3006; assert_in_delta(0.13695055372854809, worksheet.lever_graphs_p3006, 0.002); end
  def test_lever_graphs_q3006; assert_in_delta(0.14485675381575291, worksheet.lever_graphs_q3006, 0.002); end
  def test_lever_graphs_r3006; assert_in_delta(0.15276295390295777, worksheet.lever_graphs_r3006, 0.002); end
  def test_lever_graphs_s3006; assert_in_delta(0.16066915399016263, worksheet.lever_graphs_s3006, 0.002); end
  def test_lever_graphs_b3007; assert_in_epsilon(4.0, worksheet.lever_graphs_b3007, 0.002); end
  def test_lever_graphs_k3007; assert_in_delta(0.10041822124385165, worksheet.lever_graphs_k3007, 0.002); end
  def test_lever_graphs_l3007; assert_in_delta(0.10532575337972867, worksheet.lever_graphs_l3007, 0.002); end
  def test_lever_graphs_m3007; assert_in_delta(0.11897013753801078, worksheet.lever_graphs_m3007, 0.002); end
  def test_lever_graphs_n3007; assert_in_delta(0.13261452169629284, worksheet.lever_graphs_n3007, 0.002); end
  def test_lever_graphs_o3007; assert_in_delta(0.14625890585457496, worksheet.lever_graphs_o3007, 0.002); end
  def test_lever_graphs_p3007; assert_in_delta(0.159903290012857, worksheet.lever_graphs_p3007, 0.002); end
  def test_lever_graphs_q3007; assert_in_delta(0.1735476741711391, worksheet.lever_graphs_q3007, 0.002); end
  def test_lever_graphs_r3007; assert_in_delta(0.1871920583294212, worksheet.lever_graphs_r3007, 0.002); end
  def test_lever_graphs_s3007; assert_in_delta(0.2008364424877033, worksheet.lever_graphs_s3007, 0.002); end
  def test_lever_graphs_b3118; assert_equal("Year", worksheet.lever_graphs_b3118); end
  def test_lever_graphs_c3118; assert_equal("Level", worksheet.lever_graphs_c3118); end
  def test_lever_graphs_d3118; assert_equal("Title", worksheet.lever_graphs_d3118); end
  def test_lever_graphs_e3118; assert_equal("Cows and other bovines ", worksheet.lever_graphs_e3118); end
  def test_lever_graphs_f3118; assert_equal("Chickens and other poultry", worksheet.lever_graphs_f3118); end
  def test_lever_graphs_g3118; assert_equal("Pigs", worksheet.lever_graphs_g3118); end
  def test_lever_graphs_h3118; assert_equal("Sheep and goats", worksheet.lever_graphs_h3118); end
  def test_lever_graphs_i3118; assert_equal("Other animals", worksheet.lever_graphs_i3118); end
  def test_lever_graphs_j3118; assert_equal("Eggs", worksheet.lever_graphs_j3118); end
  def test_lever_graphs_k3118; assert_equal("Milk products", worksheet.lever_graphs_k3118); end
  def test_lever_graphs_b3119; assert_in_epsilon(2011.0, worksheet.lever_graphs_b3119, 0.002); end
  def test_lever_graphs_c3119; assert_in_delta(1.0, worksheet.lever_graphs_c3119, 0.002); end
  def test_lever_graphs_d3119; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3119, 0.002); end
  def test_lever_graphs_e3119; assert_in_delta(0.05, worksheet.lever_graphs_e3119, 0.002); end
  def test_lever_graphs_f3119; assert_in_delta(0.244, worksheet.lever_graphs_f3119, 0.002); end
  def test_lever_graphs_g3119; assert_in_delta(0.271, worksheet.lever_graphs_g3119, 0.002); end
  def test_lever_graphs_h3119; assert_in_delta(0.05, worksheet.lever_graphs_h3119, 0.002); end
  def test_lever_graphs_i3119; assert_in_delta(0.15375, worksheet.lever_graphs_i3119, 0.002); end
  def test_lever_graphs_j3119; assert_in_delta(0.13, worksheet.lever_graphs_j3119, 0.002); end
  def test_lever_graphs_k3119; assert_in_delta(0.078, worksheet.lever_graphs_k3119, 0.002); end
  def test_lever_graphs_b3120; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3120, 0.002); end
  def test_lever_graphs_c3120; assert_in_delta(1.0, worksheet.lever_graphs_c3120, 0.002); end
  def test_lever_graphs_d3120; assert_equal("2050: Level 1", worksheet.lever_graphs_d3120); end
  def test_lever_graphs_e3120; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_e3120, 0.002); end
  def test_lever_graphs_f3120; assert_in_delta(0.252, worksheet.lever_graphs_f3120, 0.002); end
  def test_lever_graphs_g3120; assert_in_delta(0.28350000000000003, worksheet.lever_graphs_g3120, 0.002); end
  def test_lever_graphs_h3120; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_h3120, 0.002); end
  def test_lever_graphs_i3120; assert_in_delta(0.1575, worksheet.lever_graphs_i3120, 0.002); end
  def test_lever_graphs_j3120; assert_in_delta(0.1365, worksheet.lever_graphs_j3120, 0.002); end
  def test_lever_graphs_k3120; assert_in_delta(0.084, worksheet.lever_graphs_k3120, 0.002); end
  def test_lever_graphs_b3121; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3121, 0.002); end
  def test_lever_graphs_c3121; assert_in_epsilon(2.0, worksheet.lever_graphs_c3121, 0.002); end
  def test_lever_graphs_d3121; assert_equal("2050: Level 2", worksheet.lever_graphs_d3121); end
  def test_lever_graphs_e3121; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_e3121, 0.002); end
  def test_lever_graphs_f3121; assert_in_delta(0.264, worksheet.lever_graphs_f3121, 0.002); end
  def test_lever_graphs_g3121; assert_in_delta(0.29700000000000004, worksheet.lever_graphs_g3121, 0.002); end
  def test_lever_graphs_h3121; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_h3121, 0.002); end
  def test_lever_graphs_i3121; assert_in_delta(0.165, worksheet.lever_graphs_i3121, 0.002); end
  def test_lever_graphs_j3121; assert_in_delta(0.14300000000000002, worksheet.lever_graphs_j3121, 0.002); end
  def test_lever_graphs_k3121; assert_in_delta(0.08800000000000001, worksheet.lever_graphs_k3121, 0.002); end
  def test_lever_graphs_b3122; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3122, 0.002); end
  def test_lever_graphs_c3122; assert_in_epsilon(3.0, worksheet.lever_graphs_c3122, 0.002); end
  def test_lever_graphs_d3122; assert_equal("2050: Level 3", worksheet.lever_graphs_d3122); end
  def test_lever_graphs_e3122; assert_in_delta(0.06, worksheet.lever_graphs_e3122, 0.002); end
  def test_lever_graphs_f3122; assert_in_delta(0.27599999999999997, worksheet.lever_graphs_f3122, 0.002); end
  def test_lever_graphs_g3122; assert_in_delta(0.3105, worksheet.lever_graphs_g3122, 0.002); end
  def test_lever_graphs_h3122; assert_in_delta(0.06, worksheet.lever_graphs_h3122, 0.002); end
  def test_lever_graphs_i3122; assert_in_delta(0.1725, worksheet.lever_graphs_i3122, 0.002); end
  def test_lever_graphs_j3122; assert_in_delta(0.1495, worksheet.lever_graphs_j3122, 0.002); end
  def test_lever_graphs_k3122; assert_in_delta(0.092, worksheet.lever_graphs_k3122, 0.002); end
  def test_lever_graphs_b3123; assert_in_epsilon(2050.0, worksheet.lever_graphs_b3123, 0.002); end
  def test_lever_graphs_c3123; assert_in_epsilon(4.0, worksheet.lever_graphs_c3123, 0.002); end
  def test_lever_graphs_d3123; assert_equal("2050: Level 4", worksheet.lever_graphs_d3123); end
  def test_lever_graphs_e3123; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_e3123, 0.002); end
  def test_lever_graphs_f3123; assert_in_delta(0.288, worksheet.lever_graphs_f3123, 0.002); end
  def test_lever_graphs_g3123; assert_in_delta(0.324, worksheet.lever_graphs_g3123, 0.002); end
  def test_lever_graphs_h3123; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_h3123, 0.002); end
  def test_lever_graphs_i3123; assert_in_delta(0.18, worksheet.lever_graphs_i3123, 0.002); end
  def test_lever_graphs_j3123; assert_in_delta(0.156, worksheet.lever_graphs_j3123, 0.002); end
  def test_lever_graphs_k3123; assert_in_delta(0.096, worksheet.lever_graphs_k3123, 0.002); end
  def test_lever_graphs_c3088; assert_equal("1975", worksheet.lever_graphs_c3088); end
  def test_lever_graphs_d3088; assert_equal("1980", worksheet.lever_graphs_d3088); end
  def test_lever_graphs_e3088; assert_equal("1985", worksheet.lever_graphs_e3088); end
  def test_lever_graphs_f3088; assert_equal("1990", worksheet.lever_graphs_f3088); end
  def test_lever_graphs_g3088; assert_equal("1995", worksheet.lever_graphs_g3088); end
  def test_lever_graphs_h3088; assert_equal("2000", worksheet.lever_graphs_h3088); end
  def test_lever_graphs_i3088; assert_equal("2005", worksheet.lever_graphs_i3088); end
  def test_lever_graphs_j3088; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3088, 0.002); end
  def test_lever_graphs_k3088; assert_equal("2011", worksheet.lever_graphs_k3088); end
  def test_lever_graphs_l3088; assert_equal("2015", worksheet.lever_graphs_l3088); end
  def test_lever_graphs_m3088; assert_equal("2020", worksheet.lever_graphs_m3088); end
  def test_lever_graphs_n3088; assert_equal("2025", worksheet.lever_graphs_n3088); end
  def test_lever_graphs_o3088; assert_equal("2030", worksheet.lever_graphs_o3088); end
  def test_lever_graphs_p3088; assert_equal("2035", worksheet.lever_graphs_p3088); end
  def test_lever_graphs_q3088; assert_equal("2040", worksheet.lever_graphs_q3088); end
  def test_lever_graphs_r3088; assert_equal("2045", worksheet.lever_graphs_r3088); end
  def test_lever_graphs_s3088; assert_equal("2050", worksheet.lever_graphs_s3088); end
  def test_lever_graphs_b3089; assert_equal("Historic data", worksheet.lever_graphs_b3089); end
  def test_lever_graphs_b3090; assert_in_delta(1.0, worksheet.lever_graphs_b3090, 0.002); end
  def test_lever_graphs_k3090; assert_in_delta(0.05, worksheet.lever_graphs_k3090, 0.002); end
  def test_lever_graphs_l3090; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3090, 0.002); end
  def test_lever_graphs_m3090; assert_in_delta(0.05123626373626374, worksheet.lever_graphs_m3090, 0.002); end
  def test_lever_graphs_n3090; assert_in_delta(0.051446886446886456, worksheet.lever_graphs_n3090, 0.002); end
  def test_lever_graphs_o3090; assert_in_delta(0.05165750915750916, worksheet.lever_graphs_o3090, 0.002); end
  def test_lever_graphs_p3090; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_p3090, 0.002); end
  def test_lever_graphs_q3090; assert_in_delta(0.052078754578754584, worksheet.lever_graphs_q3090, 0.002); end
  def test_lever_graphs_r3090; assert_in_delta(0.05228937728937729, worksheet.lever_graphs_r3090, 0.002); end
  def test_lever_graphs_s3090; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s3090, 0.002); end
  def test_lever_graphs_b3091; assert_in_epsilon(2.0, worksheet.lever_graphs_b3091, 0.002); end
  def test_lever_graphs_k3091; assert_in_delta(0.05, worksheet.lever_graphs_k3091, 0.002); end
  def test_lever_graphs_l3091; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3091, 0.002); end
  def test_lever_graphs_m3091; assert_in_delta(0.051593406593406596, worksheet.lever_graphs_m3091, 0.002); end
  def test_lever_graphs_n3091; assert_in_delta(0.05216117216117217, worksheet.lever_graphs_n3091, 0.002); end
  def test_lever_graphs_o3091; assert_in_delta(0.05272893772893773, worksheet.lever_graphs_o3091, 0.002); end
  def test_lever_graphs_p3091; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_p3091, 0.002); end
  def test_lever_graphs_q3091; assert_in_delta(0.05386446886446887, worksheet.lever_graphs_q3091, 0.002); end
  def test_lever_graphs_r3091; assert_in_delta(0.05443223443223444, worksheet.lever_graphs_r3091, 0.002); end
  def test_lever_graphs_s3091; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s3091, 0.002); end
  def test_lever_graphs_b3092; assert_in_epsilon(3.0, worksheet.lever_graphs_b3092, 0.002); end
  def test_lever_graphs_k3092; assert_in_delta(0.05, worksheet.lever_graphs_k3092, 0.002); end
  def test_lever_graphs_l3092; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3092, 0.002); end
  def test_lever_graphs_m3092; assert_in_delta(0.05230769230769231, worksheet.lever_graphs_m3092, 0.002); end
  def test_lever_graphs_n3092; assert_in_delta(0.053589743589743596, worksheet.lever_graphs_n3092, 0.002); end
  def test_lever_graphs_o3092; assert_in_delta(0.054871794871794874, worksheet.lever_graphs_o3092, 0.002); end
  def test_lever_graphs_p3092; assert_in_delta(0.05615384615384615, worksheet.lever_graphs_p3092, 0.002); end
  def test_lever_graphs_q3092; assert_in_delta(0.057435897435897436, worksheet.lever_graphs_q3092, 0.002); end
  def test_lever_graphs_r3092; assert_in_delta(0.05871794871794871, worksheet.lever_graphs_r3092, 0.002); end
  def test_lever_graphs_s3092; assert_in_delta(0.06, worksheet.lever_graphs_s3092, 0.002); end
  def test_lever_graphs_b3093; assert_in_epsilon(4.0, worksheet.lever_graphs_b3093, 0.002); end
  def test_lever_graphs_k3093; assert_in_delta(0.05, worksheet.lever_graphs_k3093, 0.002); end
  def test_lever_graphs_l3093; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3093, 0.002); end
  def test_lever_graphs_m3093; assert_in_delta(0.05373626373626374, worksheet.lever_graphs_m3093, 0.002); end
  def test_lever_graphs_n3093; assert_in_delta(0.05644688644688645, worksheet.lever_graphs_n3093, 0.002); end
  def test_lever_graphs_o3093; assert_in_delta(0.059157509157509156, worksheet.lever_graphs_o3093, 0.002); end
  def test_lever_graphs_p3093; assert_in_delta(0.061868131868131865, worksheet.lever_graphs_p3093, 0.002); end
  def test_lever_graphs_q3093; assert_in_delta(0.06457875457875457, worksheet.lever_graphs_q3093, 0.002); end
  def test_lever_graphs_r3093; assert_in_delta(0.06728937728937728, worksheet.lever_graphs_r3093, 0.002); end
  def test_lever_graphs_s3093; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s3093, 0.002); end
  def test_lever_graphs_c3098; assert_equal("1975", worksheet.lever_graphs_c3098); end
  def test_lever_graphs_d3098; assert_equal("1980", worksheet.lever_graphs_d3098); end
  def test_lever_graphs_e3098; assert_equal("1985", worksheet.lever_graphs_e3098); end
  def test_lever_graphs_f3098; assert_equal("1990", worksheet.lever_graphs_f3098); end
  def test_lever_graphs_g3098; assert_equal("1995", worksheet.lever_graphs_g3098); end
  def test_lever_graphs_h3098; assert_equal("2000", worksheet.lever_graphs_h3098); end
  def test_lever_graphs_i3098; assert_equal("2005", worksheet.lever_graphs_i3098); end
  def test_lever_graphs_j3098; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3098, 0.002); end
  def test_lever_graphs_k3098; assert_equal("2011", worksheet.lever_graphs_k3098); end
  def test_lever_graphs_l3098; assert_equal("2015", worksheet.lever_graphs_l3098); end
  def test_lever_graphs_m3098; assert_equal("2020", worksheet.lever_graphs_m3098); end
  def test_lever_graphs_n3098; assert_equal("2025", worksheet.lever_graphs_n3098); end
  def test_lever_graphs_o3098; assert_equal("2030", worksheet.lever_graphs_o3098); end
  def test_lever_graphs_p3098; assert_equal("2035", worksheet.lever_graphs_p3098); end
  def test_lever_graphs_q3098; assert_equal("2040", worksheet.lever_graphs_q3098); end
  def test_lever_graphs_r3098; assert_equal("2045", worksheet.lever_graphs_r3098); end
  def test_lever_graphs_s3098; assert_equal("2050", worksheet.lever_graphs_s3098); end
  def test_lever_graphs_b3099; assert_equal("Historic data", worksheet.lever_graphs_b3099); end
  def test_lever_graphs_b3100; assert_in_delta(1.0, worksheet.lever_graphs_b3100, 0.002); end
  def test_lever_graphs_k3100; assert_in_delta(0.078, worksheet.lever_graphs_k3100, 0.002); end
  def test_lever_graphs_l3100; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3100, 0.002); end
  def test_lever_graphs_m3100; assert_in_delta(0.08008791208791208, worksheet.lever_graphs_m3100, 0.002); end
  def test_lever_graphs_n3100; assert_in_delta(0.08073992673992675, worksheet.lever_graphs_n3100, 0.002); end
  def test_lever_graphs_o3100; assert_in_delta(0.08139194139194139, worksheet.lever_graphs_o3100, 0.002); end
  def test_lever_graphs_p3100; assert_in_delta(0.08204395604395603, worksheet.lever_graphs_p3100, 0.002); end
  def test_lever_graphs_q3100; assert_in_delta(0.0826959706959707, worksheet.lever_graphs_q3100, 0.002); end
  def test_lever_graphs_r3100; assert_in_delta(0.08334798534798535, worksheet.lever_graphs_r3100, 0.002); end
  def test_lever_graphs_s3100; assert_in_delta(0.084, worksheet.lever_graphs_s3100, 0.002); end
  def test_lever_graphs_b3101; assert_in_epsilon(2.0, worksheet.lever_graphs_b3101, 0.002); end
  def test_lever_graphs_k3101; assert_in_delta(0.078, worksheet.lever_graphs_k3101, 0.002); end
  def test_lever_graphs_l3101; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3101, 0.002); end
  def test_lever_graphs_m3101; assert_in_delta(0.08065934065934065, worksheet.lever_graphs_m3101, 0.002); end
  def test_lever_graphs_n3101; assert_in_delta(0.08188278388278389, worksheet.lever_graphs_n3101, 0.002); end
  def test_lever_graphs_o3101; assert_in_delta(0.0831062271062271, worksheet.lever_graphs_o3101, 0.002); end
  def test_lever_graphs_p3101; assert_in_delta(0.08432967032967033, worksheet.lever_graphs_p3101, 0.002); end
  def test_lever_graphs_q3101; assert_in_delta(0.08555311355311356, worksheet.lever_graphs_q3101, 0.002); end
  def test_lever_graphs_r3101; assert_in_delta(0.08677655677655677, worksheet.lever_graphs_r3101, 0.002); end
  def test_lever_graphs_s3101; assert_in_delta(0.08800000000000001, worksheet.lever_graphs_s3101, 0.002); end
  def test_lever_graphs_b3102; assert_in_epsilon(3.0, worksheet.lever_graphs_b3102, 0.002); end
  def test_lever_graphs_k3102; assert_in_delta(0.078, worksheet.lever_graphs_k3102, 0.002); end
  def test_lever_graphs_l3102; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3102, 0.002); end
  def test_lever_graphs_m3102; assert_in_delta(0.08123076923076922, worksheet.lever_graphs_m3102, 0.002); end
  def test_lever_graphs_n3102; assert_in_delta(0.08302564102564103, worksheet.lever_graphs_n3102, 0.002); end
  def test_lever_graphs_o3102; assert_in_delta(0.08482051282051281, worksheet.lever_graphs_o3102, 0.002); end
  def test_lever_graphs_p3102; assert_in_delta(0.08661538461538461, worksheet.lever_graphs_p3102, 0.002); end
  def test_lever_graphs_q3102; assert_in_delta(0.0884102564102564, worksheet.lever_graphs_q3102, 0.002); end
  def test_lever_graphs_r3102; assert_in_delta(0.09020512820512819, worksheet.lever_graphs_r3102, 0.002); end
  def test_lever_graphs_s3102; assert_in_delta(0.092, worksheet.lever_graphs_s3102, 0.002); end
  def test_lever_graphs_b3103; assert_in_epsilon(4.0, worksheet.lever_graphs_b3103, 0.002); end
  def test_lever_graphs_k3103; assert_in_delta(0.078, worksheet.lever_graphs_k3103, 0.002); end
  def test_lever_graphs_l3103; assert_in_delta(0.07943589743589743, worksheet.lever_graphs_l3103, 0.002); end
  def test_lever_graphs_m3103; assert_in_delta(0.0818021978021978, worksheet.lever_graphs_m3103, 0.002); end
  def test_lever_graphs_n3103; assert_in_delta(0.08416849816849817, worksheet.lever_graphs_n3103, 0.002); end
  def test_lever_graphs_o3103; assert_in_delta(0.08653479853479853, worksheet.lever_graphs_o3103, 0.002); end
  def test_lever_graphs_p3103; assert_in_delta(0.0889010989010989, worksheet.lever_graphs_p3103, 0.002); end
  def test_lever_graphs_q3103; assert_in_delta(0.09126739926739927, worksheet.lever_graphs_q3103, 0.002); end
  def test_lever_graphs_r3103; assert_in_delta(0.09363369963369964, worksheet.lever_graphs_r3103, 0.002); end
  def test_lever_graphs_s3103; assert_in_delta(0.096, worksheet.lever_graphs_s3103, 0.002); end
  def test_lever_graphs_c3180; assert_equal("1975", worksheet.lever_graphs_c3180); end
  def test_lever_graphs_d3180; assert_equal("1980", worksheet.lever_graphs_d3180); end
  def test_lever_graphs_e3180; assert_equal("1985", worksheet.lever_graphs_e3180); end
  def test_lever_graphs_f3180; assert_equal("1990", worksheet.lever_graphs_f3180); end
  def test_lever_graphs_g3180; assert_equal("1995", worksheet.lever_graphs_g3180); end
  def test_lever_graphs_h3180; assert_equal("2000", worksheet.lever_graphs_h3180); end
  def test_lever_graphs_i3180; assert_equal("2005", worksheet.lever_graphs_i3180); end
  def test_lever_graphs_j3180; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3180, 0.002); end
  def test_lever_graphs_k3180; assert_equal("2011", worksheet.lever_graphs_k3180); end
  def test_lever_graphs_l3180; assert_equal("2015", worksheet.lever_graphs_l3180); end
  def test_lever_graphs_m3180; assert_equal("2020", worksheet.lever_graphs_m3180); end
  def test_lever_graphs_n3180; assert_equal("2025", worksheet.lever_graphs_n3180); end
  def test_lever_graphs_o3180; assert_equal("2030", worksheet.lever_graphs_o3180); end
  def test_lever_graphs_p3180; assert_equal("2035", worksheet.lever_graphs_p3180); end
  def test_lever_graphs_q3180; assert_equal("2040", worksheet.lever_graphs_q3180); end
  def test_lever_graphs_r3180; assert_equal("2045", worksheet.lever_graphs_r3180); end
  def test_lever_graphs_s3180; assert_equal("2050", worksheet.lever_graphs_s3180); end
  def test_lever_graphs_b3181; assert_equal("Historic data", worksheet.lever_graphs_b3181); end
  def test_lever_graphs_b3182; assert_in_delta(1.0, worksheet.lever_graphs_b3182, 0.002); end
  def test_lever_graphs_k3182; assert_in_delta(0.02, worksheet.lever_graphs_k3182, 0.002); end
  def test_lever_graphs_l3182; assert_in_delta(0.0203, worksheet.lever_graphs_l3182, 0.002); end
  def test_lever_graphs_m3182; assert_in_delta(0.020399999999999998, worksheet.lever_graphs_m3182, 0.002); end
  def test_lever_graphs_n3182; assert_in_delta(0.020499999999999997, worksheet.lever_graphs_n3182, 0.002); end
  def test_lever_graphs_o3182; assert_in_delta(0.0206, worksheet.lever_graphs_o3182, 0.002); end
  def test_lever_graphs_p3182; assert_in_delta(0.0207, worksheet.lever_graphs_p3182, 0.002); end
  def test_lever_graphs_q3182; assert_in_delta(0.0208, worksheet.lever_graphs_q3182, 0.002); end
  def test_lever_graphs_r3182; assert_in_delta(0.0209, worksheet.lever_graphs_r3182, 0.002); end
  def test_lever_graphs_s3182; assert_in_delta(0.021, worksheet.lever_graphs_s3182, 0.002); end
  def test_lever_graphs_b3183; assert_in_epsilon(2.0, worksheet.lever_graphs_b3183, 0.002); end
  def test_lever_graphs_k3183; assert_in_delta(0.02, worksheet.lever_graphs_k3183, 0.002); end
  def test_lever_graphs_l3183; assert_in_delta(0.0203, worksheet.lever_graphs_l3183, 0.002); end
  def test_lever_graphs_m3183; assert_in_delta(0.02054285714285714, worksheet.lever_graphs_m3183, 0.002); end
  def test_lever_graphs_n3183; assert_in_delta(0.020785714285714286, worksheet.lever_graphs_n3183, 0.002); end
  def test_lever_graphs_o3183; assert_in_delta(0.021028571428571428, worksheet.lever_graphs_o3183, 0.002); end
  def test_lever_graphs_p3183; assert_in_delta(0.021271428571428573, worksheet.lever_graphs_p3183, 0.002); end
  def test_lever_graphs_q3183; assert_in_delta(0.021514285714285715, worksheet.lever_graphs_q3183, 0.002); end
  def test_lever_graphs_r3183; assert_in_delta(0.021757142857142857, worksheet.lever_graphs_r3183, 0.002); end
  def test_lever_graphs_s3183; assert_in_delta(0.022000000000000002, worksheet.lever_graphs_s3183, 0.002); end
  def test_lever_graphs_b3184; assert_in_epsilon(3.0, worksheet.lever_graphs_b3184, 0.002); end
  def test_lever_graphs_k3184; assert_in_delta(0.02, worksheet.lever_graphs_k3184, 0.002); end
  def test_lever_graphs_l3184; assert_in_delta(0.0203, worksheet.lever_graphs_l3184, 0.002); end
  def test_lever_graphs_m3184; assert_in_delta(0.020828571428571425, worksheet.lever_graphs_m3184, 0.002); end
  def test_lever_graphs_n3184; assert_in_delta(0.021357142857142856, worksheet.lever_graphs_n3184, 0.002); end
  def test_lever_graphs_o3184; assert_in_delta(0.021885714285714286, worksheet.lever_graphs_o3184, 0.002); end
  def test_lever_graphs_p3184; assert_in_delta(0.022414285714285713, worksheet.lever_graphs_p3184, 0.002); end
  def test_lever_graphs_q3184; assert_in_delta(0.022942857142857143, worksheet.lever_graphs_q3184, 0.002); end
  def test_lever_graphs_r3184; assert_in_delta(0.02347142857142857, worksheet.lever_graphs_r3184, 0.002); end
  def test_lever_graphs_s3184; assert_in_delta(0.024, worksheet.lever_graphs_s3184, 0.002); end
  def test_lever_graphs_b3185; assert_in_epsilon(4.0, worksheet.lever_graphs_b3185, 0.002); end
  def test_lever_graphs_k3185; assert_in_delta(0.02, worksheet.lever_graphs_k3185, 0.002); end
  def test_lever_graphs_l3185; assert_in_delta(0.0203, worksheet.lever_graphs_l3185, 0.002); end
  def test_lever_graphs_m3185; assert_in_delta(0.0214, worksheet.lever_graphs_m3185, 0.002); end
  def test_lever_graphs_n3185; assert_in_delta(0.0225, worksheet.lever_graphs_n3185, 0.002); end
  def test_lever_graphs_o3185; assert_in_delta(0.023599999999999996, worksheet.lever_graphs_o3185, 0.002); end
  def test_lever_graphs_p3185; assert_in_delta(0.024699999999999996, worksheet.lever_graphs_p3185, 0.002); end
  def test_lever_graphs_q3185; assert_in_delta(0.025799999999999997, worksheet.lever_graphs_q3185, 0.002); end
  def test_lever_graphs_r3185; assert_in_delta(0.026899999999999997, worksheet.lever_graphs_r3185, 0.002); end
  def test_lever_graphs_s3185; assert_in_delta(0.027999999999999997, worksheet.lever_graphs_s3185, 0.002); end
  def test_lever_graphs_c3191; assert_equal("1975", worksheet.lever_graphs_c3191); end
  def test_lever_graphs_d3191; assert_equal("1980", worksheet.lever_graphs_d3191); end
  def test_lever_graphs_e3191; assert_equal("1985", worksheet.lever_graphs_e3191); end
  def test_lever_graphs_f3191; assert_equal("1990", worksheet.lever_graphs_f3191); end
  def test_lever_graphs_g3191; assert_equal("1995", worksheet.lever_graphs_g3191); end
  def test_lever_graphs_h3191; assert_equal("2000", worksheet.lever_graphs_h3191); end
  def test_lever_graphs_i3191; assert_equal("2005", worksheet.lever_graphs_i3191); end
  def test_lever_graphs_j3191; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3191, 0.002); end
  def test_lever_graphs_k3191; assert_equal("2011", worksheet.lever_graphs_k3191); end
  def test_lever_graphs_l3191; assert_equal("2015", worksheet.lever_graphs_l3191); end
  def test_lever_graphs_m3191; assert_equal("2020", worksheet.lever_graphs_m3191); end
  def test_lever_graphs_n3191; assert_equal("2025", worksheet.lever_graphs_n3191); end
  def test_lever_graphs_o3191; assert_equal("2030", worksheet.lever_graphs_o3191); end
  def test_lever_graphs_p3191; assert_equal("2035", worksheet.lever_graphs_p3191); end
  def test_lever_graphs_q3191; assert_equal("2040", worksheet.lever_graphs_q3191); end
  def test_lever_graphs_r3191; assert_equal("2045", worksheet.lever_graphs_r3191); end
  def test_lever_graphs_s3191; assert_equal("2050", worksheet.lever_graphs_s3191); end
  def test_lever_graphs_b3192; assert_equal("Historic data", worksheet.lever_graphs_b3192); end
  def test_lever_graphs_b3193; assert_in_delta(1.0, worksheet.lever_graphs_b3193, 0.002); end
  def test_lever_graphs_k3193; assert_in_delta(0.02, worksheet.lever_graphs_k3193, 0.002); end
  def test_lever_graphs_l3193; assert_in_delta(0.0203, worksheet.lever_graphs_l3193, 0.002); end
  def test_lever_graphs_m3193; assert_in_delta(0.020399999999999998, worksheet.lever_graphs_m3193, 0.002); end
  def test_lever_graphs_n3193; assert_in_delta(0.020499999999999997, worksheet.lever_graphs_n3193, 0.002); end
  def test_lever_graphs_o3193; assert_in_delta(0.0206, worksheet.lever_graphs_o3193, 0.002); end
  def test_lever_graphs_p3193; assert_in_delta(0.0207, worksheet.lever_graphs_p3193, 0.002); end
  def test_lever_graphs_q3193; assert_in_delta(0.0208, worksheet.lever_graphs_q3193, 0.002); end
  def test_lever_graphs_r3193; assert_in_delta(0.0209, worksheet.lever_graphs_r3193, 0.002); end
  def test_lever_graphs_s3193; assert_in_delta(0.021, worksheet.lever_graphs_s3193, 0.002); end
  def test_lever_graphs_b3194; assert_in_epsilon(2.0, worksheet.lever_graphs_b3194, 0.002); end
  def test_lever_graphs_k3194; assert_in_delta(0.02, worksheet.lever_graphs_k3194, 0.002); end
  def test_lever_graphs_l3194; assert_in_delta(0.0203, worksheet.lever_graphs_l3194, 0.002); end
  def test_lever_graphs_m3194; assert_in_delta(0.02054285714285714, worksheet.lever_graphs_m3194, 0.002); end
  def test_lever_graphs_n3194; assert_in_delta(0.020785714285714286, worksheet.lever_graphs_n3194, 0.002); end
  def test_lever_graphs_o3194; assert_in_delta(0.021028571428571428, worksheet.lever_graphs_o3194, 0.002); end
  def test_lever_graphs_p3194; assert_in_delta(0.021271428571428573, worksheet.lever_graphs_p3194, 0.002); end
  def test_lever_graphs_q3194; assert_in_delta(0.021514285714285715, worksheet.lever_graphs_q3194, 0.002); end
  def test_lever_graphs_r3194; assert_in_delta(0.021757142857142857, worksheet.lever_graphs_r3194, 0.002); end
  def test_lever_graphs_s3194; assert_in_delta(0.022000000000000002, worksheet.lever_graphs_s3194, 0.002); end
  def test_lever_graphs_b3195; assert_in_epsilon(3.0, worksheet.lever_graphs_b3195, 0.002); end
  def test_lever_graphs_k3195; assert_in_delta(0.02, worksheet.lever_graphs_k3195, 0.002); end
  def test_lever_graphs_l3195; assert_in_delta(0.0203, worksheet.lever_graphs_l3195, 0.002); end
  def test_lever_graphs_m3195; assert_in_delta(0.020828571428571425, worksheet.lever_graphs_m3195, 0.002); end
  def test_lever_graphs_n3195; assert_in_delta(0.021357142857142856, worksheet.lever_graphs_n3195, 0.002); end
  def test_lever_graphs_o3195; assert_in_delta(0.021885714285714286, worksheet.lever_graphs_o3195, 0.002); end
  def test_lever_graphs_p3195; assert_in_delta(0.022414285714285713, worksheet.lever_graphs_p3195, 0.002); end
  def test_lever_graphs_q3195; assert_in_delta(0.022942857142857143, worksheet.lever_graphs_q3195, 0.002); end
  def test_lever_graphs_r3195; assert_in_delta(0.02347142857142857, worksheet.lever_graphs_r3195, 0.002); end
  def test_lever_graphs_s3195; assert_in_delta(0.024, worksheet.lever_graphs_s3195, 0.002); end
  def test_lever_graphs_b3196; assert_in_epsilon(4.0, worksheet.lever_graphs_b3196, 0.002); end
  def test_lever_graphs_k3196; assert_in_delta(0.02, worksheet.lever_graphs_k3196, 0.002); end
  def test_lever_graphs_l3196; assert_in_delta(0.0203, worksheet.lever_graphs_l3196, 0.002); end
  def test_lever_graphs_m3196; assert_in_delta(0.0214, worksheet.lever_graphs_m3196, 0.002); end
  def test_lever_graphs_n3196; assert_in_delta(0.0225, worksheet.lever_graphs_n3196, 0.002); end
  def test_lever_graphs_o3196; assert_in_delta(0.023599999999999996, worksheet.lever_graphs_o3196, 0.002); end
  def test_lever_graphs_p3196; assert_in_delta(0.024699999999999996, worksheet.lever_graphs_p3196, 0.002); end
  def test_lever_graphs_q3196; assert_in_delta(0.025799999999999997, worksheet.lever_graphs_q3196, 0.002); end
  def test_lever_graphs_r3196; assert_in_delta(0.026899999999999997, worksheet.lever_graphs_r3196, 0.002); end
  def test_lever_graphs_s3196; assert_in_delta(0.027999999999999997, worksheet.lever_graphs_s3196, 0.002); end
  def test_lever_graphs_c3108; assert_equal("1975", worksheet.lever_graphs_c3108); end
  def test_lever_graphs_d3108; assert_equal("1980", worksheet.lever_graphs_d3108); end
  def test_lever_graphs_e3108; assert_equal("1985", worksheet.lever_graphs_e3108); end
  def test_lever_graphs_f3108; assert_equal("1990", worksheet.lever_graphs_f3108); end
  def test_lever_graphs_g3108; assert_equal("1995", worksheet.lever_graphs_g3108); end
  def test_lever_graphs_h3108; assert_equal("2000", worksheet.lever_graphs_h3108); end
  def test_lever_graphs_i3108; assert_equal("2005", worksheet.lever_graphs_i3108); end
  def test_lever_graphs_j3108; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3108, 0.002); end
  def test_lever_graphs_k3108; assert_equal("2011", worksheet.lever_graphs_k3108); end
  def test_lever_graphs_l3108; assert_equal("2015", worksheet.lever_graphs_l3108); end
  def test_lever_graphs_m3108; assert_equal("2020", worksheet.lever_graphs_m3108); end
  def test_lever_graphs_n3108; assert_equal("2025", worksheet.lever_graphs_n3108); end
  def test_lever_graphs_o3108; assert_equal("2030", worksheet.lever_graphs_o3108); end
  def test_lever_graphs_p3108; assert_equal("2035", worksheet.lever_graphs_p3108); end
  def test_lever_graphs_q3108; assert_equal("2040", worksheet.lever_graphs_q3108); end
  def test_lever_graphs_r3108; assert_equal("2045", worksheet.lever_graphs_r3108); end
  def test_lever_graphs_s3108; assert_equal("2050", worksheet.lever_graphs_s3108); end
  def test_lever_graphs_b3109; assert_equal("Historic data", worksheet.lever_graphs_b3109); end
  def test_lever_graphs_b3110; assert_in_delta(1.0, worksheet.lever_graphs_b3110, 0.002); end
  def test_lever_graphs_k3110; assert_in_delta(0.05, worksheet.lever_graphs_k3110, 0.002); end
  def test_lever_graphs_l3110; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3110, 0.002); end
  def test_lever_graphs_m3110; assert_in_delta(0.05123626373626374, worksheet.lever_graphs_m3110, 0.002); end
  def test_lever_graphs_n3110; assert_in_delta(0.051446886446886456, worksheet.lever_graphs_n3110, 0.002); end
  def test_lever_graphs_o3110; assert_in_delta(0.05165750915750916, worksheet.lever_graphs_o3110, 0.002); end
  def test_lever_graphs_p3110; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_p3110, 0.002); end
  def test_lever_graphs_q3110; assert_in_delta(0.052078754578754584, worksheet.lever_graphs_q3110, 0.002); end
  def test_lever_graphs_r3110; assert_in_delta(0.05228937728937729, worksheet.lever_graphs_r3110, 0.002); end
  def test_lever_graphs_s3110; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s3110, 0.002); end
  def test_lever_graphs_b3111; assert_in_epsilon(2.0, worksheet.lever_graphs_b3111, 0.002); end
  def test_lever_graphs_k3111; assert_in_delta(0.05, worksheet.lever_graphs_k3111, 0.002); end
  def test_lever_graphs_l3111; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3111, 0.002); end
  def test_lever_graphs_m3111; assert_in_delta(0.051593406593406596, worksheet.lever_graphs_m3111, 0.002); end
  def test_lever_graphs_n3111; assert_in_delta(0.05216117216117217, worksheet.lever_graphs_n3111, 0.002); end
  def test_lever_graphs_o3111; assert_in_delta(0.05272893772893773, worksheet.lever_graphs_o3111, 0.002); end
  def test_lever_graphs_p3111; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_p3111, 0.002); end
  def test_lever_graphs_q3111; assert_in_delta(0.05386446886446887, worksheet.lever_graphs_q3111, 0.002); end
  def test_lever_graphs_r3111; assert_in_delta(0.05443223443223444, worksheet.lever_graphs_r3111, 0.002); end
  def test_lever_graphs_s3111; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s3111, 0.002); end
  def test_lever_graphs_b3112; assert_in_epsilon(3.0, worksheet.lever_graphs_b3112, 0.002); end
  def test_lever_graphs_k3112; assert_in_delta(0.05, worksheet.lever_graphs_k3112, 0.002); end
  def test_lever_graphs_l3112; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3112, 0.002); end
  def test_lever_graphs_m3112; assert_in_delta(0.05230769230769231, worksheet.lever_graphs_m3112, 0.002); end
  def test_lever_graphs_n3112; assert_in_delta(0.053589743589743596, worksheet.lever_graphs_n3112, 0.002); end
  def test_lever_graphs_o3112; assert_in_delta(0.054871794871794874, worksheet.lever_graphs_o3112, 0.002); end
  def test_lever_graphs_p3112; assert_in_delta(0.05615384615384615, worksheet.lever_graphs_p3112, 0.002); end
  def test_lever_graphs_q3112; assert_in_delta(0.057435897435897436, worksheet.lever_graphs_q3112, 0.002); end
  def test_lever_graphs_r3112; assert_in_delta(0.05871794871794871, worksheet.lever_graphs_r3112, 0.002); end
  def test_lever_graphs_s3112; assert_in_delta(0.06, worksheet.lever_graphs_s3112, 0.002); end
  def test_lever_graphs_b3113; assert_in_epsilon(4.0, worksheet.lever_graphs_b3113, 0.002); end
  def test_lever_graphs_k3113; assert_in_delta(0.05, worksheet.lever_graphs_k3113, 0.002); end
  def test_lever_graphs_l3113; assert_in_delta(0.051025641025641034, worksheet.lever_graphs_l3113, 0.002); end
  def test_lever_graphs_m3113; assert_in_delta(0.05373626373626374, worksheet.lever_graphs_m3113, 0.002); end
  def test_lever_graphs_n3113; assert_in_delta(0.05644688644688645, worksheet.lever_graphs_n3113, 0.002); end
  def test_lever_graphs_o3113; assert_in_delta(0.059157509157509156, worksheet.lever_graphs_o3113, 0.002); end
  def test_lever_graphs_p3113; assert_in_delta(0.061868131868131865, worksheet.lever_graphs_p3113, 0.002); end
  def test_lever_graphs_q3113; assert_in_delta(0.06457875457875457, worksheet.lever_graphs_q3113, 0.002); end
  def test_lever_graphs_r3113; assert_in_delta(0.06728937728937728, worksheet.lever_graphs_r3113, 0.002); end
  def test_lever_graphs_s3113; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s3113, 0.002); end
  def test_lever_graphs_c3327; assert_equal("1975", worksheet.lever_graphs_c3327); end
  def test_lever_graphs_d3327; assert_equal("1980", worksheet.lever_graphs_d3327); end
  def test_lever_graphs_e3327; assert_equal("1985", worksheet.lever_graphs_e3327); end
  def test_lever_graphs_f3327; assert_equal("1990", worksheet.lever_graphs_f3327); end
  def test_lever_graphs_g3327; assert_equal("1995", worksheet.lever_graphs_g3327); end
  def test_lever_graphs_h3327; assert_equal("2000", worksheet.lever_graphs_h3327); end
  def test_lever_graphs_i3327; assert_equal("2005", worksheet.lever_graphs_i3327); end
  def test_lever_graphs_j3327; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3327, 0.002); end
  def test_lever_graphs_k3327; assert_equal("2011", worksheet.lever_graphs_k3327); end
  def test_lever_graphs_l3327; assert_equal("2015", worksheet.lever_graphs_l3327); end
  def test_lever_graphs_m3327; assert_equal("2020", worksheet.lever_graphs_m3327); end
  def test_lever_graphs_n3327; assert_equal("2025", worksheet.lever_graphs_n3327); end
  def test_lever_graphs_o3327; assert_equal("2030", worksheet.lever_graphs_o3327); end
  def test_lever_graphs_p3327; assert_equal("2035", worksheet.lever_graphs_p3327); end
  def test_lever_graphs_q3327; assert_equal("2040", worksheet.lever_graphs_q3327); end
  def test_lever_graphs_r3327; assert_equal("2045", worksheet.lever_graphs_r3327); end
  def test_lever_graphs_s3327; assert_equal("2050", worksheet.lever_graphs_s3327); end
  def test_lever_graphs_b3328; assert_equal("Historic data", worksheet.lever_graphs_b3328); end
  def test_lever_graphs_b3329; assert_in_delta(1.0, worksheet.lever_graphs_b3329, 0.002); end
  def test_lever_graphs_k3329; assert_in_delta(1.0, worksheet.lever_graphs_k3329, 0.002); end
  def test_lever_graphs_l3329; assert_in_delta(1.0, worksheet.lever_graphs_l3329, 0.002); end
  def test_lever_graphs_m3329; assert_in_delta(1.0, worksheet.lever_graphs_m3329, 0.002); end
  def test_lever_graphs_n3329; assert_in_delta(1.0, worksheet.lever_graphs_n3329, 0.002); end
  def test_lever_graphs_o3329; assert_in_delta(1.0, worksheet.lever_graphs_o3329, 0.002); end
  def test_lever_graphs_p3329; assert_in_delta(1.0, worksheet.lever_graphs_p3329, 0.002); end
  def test_lever_graphs_q3329; assert_in_delta(1.0, worksheet.lever_graphs_q3329, 0.002); end
  def test_lever_graphs_r3329; assert_in_delta(1.0, worksheet.lever_graphs_r3329, 0.002); end
  def test_lever_graphs_s3329; assert_in_delta(1.0, worksheet.lever_graphs_s3329, 0.002); end
  def test_lever_graphs_b3330; assert_in_epsilon(2.0, worksheet.lever_graphs_b3330, 0.002); end
  def test_lever_graphs_k3330; assert_in_delta(1.0, worksheet.lever_graphs_k3330, 0.002); end
  def test_lever_graphs_l3330; assert_in_delta(1.0, worksheet.lever_graphs_l3330, 0.002); end
  def test_lever_graphs_m3330; assert_in_delta(1.0, worksheet.lever_graphs_m3330, 0.002); end
  def test_lever_graphs_n3330; assert_in_delta(1.0, worksheet.lever_graphs_n3330, 0.002); end
  def test_lever_graphs_o3330; assert_in_delta(1.0, worksheet.lever_graphs_o3330, 0.002); end
  def test_lever_graphs_p3330; assert_in_delta(1.0, worksheet.lever_graphs_p3330, 0.002); end
  def test_lever_graphs_q3330; assert_in_delta(1.0, worksheet.lever_graphs_q3330, 0.002); end
  def test_lever_graphs_r3330; assert_in_delta(1.0, worksheet.lever_graphs_r3330, 0.002); end
  def test_lever_graphs_s3330; assert_in_delta(1.0, worksheet.lever_graphs_s3330, 0.002); end
  def test_lever_graphs_b3331; assert_in_epsilon(3.0, worksheet.lever_graphs_b3331, 0.002); end
  def test_lever_graphs_k3331; assert_in_delta(1.0, worksheet.lever_graphs_k3331, 0.002); end
  def test_lever_graphs_l3331; assert_in_delta(1.0, worksheet.lever_graphs_l3331, 0.002); end
  def test_lever_graphs_m3331; assert_in_delta(1.0, worksheet.lever_graphs_m3331, 0.002); end
  def test_lever_graphs_n3331; assert_in_delta(1.0, worksheet.lever_graphs_n3331, 0.002); end
  def test_lever_graphs_o3331; assert_in_delta(1.0, worksheet.lever_graphs_o3331, 0.002); end
  def test_lever_graphs_p3331; assert_in_delta(1.0, worksheet.lever_graphs_p3331, 0.002); end
  def test_lever_graphs_q3331; assert_in_delta(1.0, worksheet.lever_graphs_q3331, 0.002); end
  def test_lever_graphs_r3331; assert_in_delta(1.0, worksheet.lever_graphs_r3331, 0.002); end
  def test_lever_graphs_s3331; assert_in_delta(1.0, worksheet.lever_graphs_s3331, 0.002); end
  def test_lever_graphs_b3332; assert_in_epsilon(4.0, worksheet.lever_graphs_b3332, 0.002); end
  def test_lever_graphs_k3332; assert_in_delta(1.0, worksheet.lever_graphs_k3332, 0.002); end
  def test_lever_graphs_l3332; assert_in_delta(1.0, worksheet.lever_graphs_l3332, 0.002); end
  def test_lever_graphs_m3332; assert_in_delta(1.0, worksheet.lever_graphs_m3332, 0.002); end
  def test_lever_graphs_n3332; assert_in_delta(1.0, worksheet.lever_graphs_n3332, 0.002); end
  def test_lever_graphs_o3332; assert_in_delta(1.0, worksheet.lever_graphs_o3332, 0.002); end
  def test_lever_graphs_p3332; assert_in_delta(1.0, worksheet.lever_graphs_p3332, 0.002); end
  def test_lever_graphs_q3332; assert_in_delta(1.0, worksheet.lever_graphs_q3332, 0.002); end
  def test_lever_graphs_r3332; assert_in_delta(1.0, worksheet.lever_graphs_r3332, 0.002); end
  def test_lever_graphs_s3332; assert_in_delta(1.0, worksheet.lever_graphs_s3332, 0.002); end
  def test_lever_graphs_d3348; assert_equal("Title", worksheet.lever_graphs_d3348); end
  def test_lever_graphs_e3348; assert_equal("Food crops", worksheet.lever_graphs_e3348); end
  def test_lever_graphs_f3348; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3348); end
  def test_lever_graphs_g3348; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3348); end
  def test_lever_graphs_h3348; assert_equal("Pigs", worksheet.lever_graphs_h3348); end
  def test_lever_graphs_i3348; assert_equal("Sheep and goats", worksheet.lever_graphs_i3348); end
  def test_lever_graphs_j3348; assert_equal("Other animals", worksheet.lever_graphs_j3348); end
  def test_lever_graphs_k3348; assert_equal("Eggs", worksheet.lever_graphs_k3348); end
  def test_lever_graphs_l3348; assert_equal("Milk products", worksheet.lever_graphs_l3348); end
  def test_lever_graphs_d3349; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3349, 0.002); end
  def test_lever_graphs_e3349; assert_in_delta(0.24, worksheet.lever_graphs_e3349, 0.002); end
  def test_lever_graphs_f3349; assert_in_delta(0.19, worksheet.lever_graphs_f3349, 0.002); end
  def test_lever_graphs_g3349; assert_in_delta(0.19, worksheet.lever_graphs_g3349, 0.002); end
  def test_lever_graphs_h3349; assert_in_delta(0.19, worksheet.lever_graphs_h3349, 0.002); end
  def test_lever_graphs_i3349; assert_in_delta(0.19, worksheet.lever_graphs_i3349, 0.002); end
  def test_lever_graphs_j3349; assert_in_delta(0.19, worksheet.lever_graphs_j3349, 0.002); end
  def test_lever_graphs_k3349; assert_in_delta(0.1, worksheet.lever_graphs_k3349, 0.002); end
  def test_lever_graphs_l3349; assert_in_delta(0.18, worksheet.lever_graphs_l3349, 0.002); end
  def test_lever_graphs_d3350; assert_equal("2050: Level 1", worksheet.lever_graphs_d3350); end
  def test_lever_graphs_e3350; assert_in_delta(0.24, worksheet.lever_graphs_e3350, 0.002); end
  def test_lever_graphs_f3350; assert_in_delta(0.19, worksheet.lever_graphs_f3350, 0.002); end
  def test_lever_graphs_g3350; assert_in_delta(0.19, worksheet.lever_graphs_g3350, 0.002); end
  def test_lever_graphs_h3350; assert_in_delta(0.19, worksheet.lever_graphs_h3350, 0.002); end
  def test_lever_graphs_i3350; assert_in_delta(0.19, worksheet.lever_graphs_i3350, 0.002); end
  def test_lever_graphs_j3350; assert_in_delta(0.19, worksheet.lever_graphs_j3350, 0.002); end
  def test_lever_graphs_k3350; assert_in_delta(0.1, worksheet.lever_graphs_k3350, 0.002); end
  def test_lever_graphs_l3350; assert_in_delta(0.18, worksheet.lever_graphs_l3350, 0.002); end
  def test_lever_graphs_d3351; assert_equal("2050: Level 2", worksheet.lever_graphs_d3351); end
  def test_lever_graphs_e3351; assert_in_delta(0.2, worksheet.lever_graphs_e3351, 0.002); end
  def test_lever_graphs_f3351; assert_in_delta(0.15, worksheet.lever_graphs_f3351, 0.002); end
  def test_lever_graphs_g3351; assert_in_delta(0.15, worksheet.lever_graphs_g3351, 0.002); end
  def test_lever_graphs_h3351; assert_in_delta(0.15, worksheet.lever_graphs_h3351, 0.002); end
  def test_lever_graphs_i3351; assert_in_delta(0.15, worksheet.lever_graphs_i3351, 0.002); end
  def test_lever_graphs_j3351; assert_in_delta(0.15, worksheet.lever_graphs_j3351, 0.002); end
  def test_lever_graphs_k3351; assert_in_delta(0.08, worksheet.lever_graphs_k3351, 0.002); end
  def test_lever_graphs_l3351; assert_in_delta(0.15, worksheet.lever_graphs_l3351, 0.002); end
  def test_lever_graphs_d3352; assert_equal("2050: Level 3", worksheet.lever_graphs_d3352); end
  def test_lever_graphs_e3352; assert_in_delta(0.16, worksheet.lever_graphs_e3352, 0.002); end
  def test_lever_graphs_f3352; assert_in_delta(0.1, worksheet.lever_graphs_f3352, 0.002); end
  def test_lever_graphs_g3352; assert_in_delta(0.1, worksheet.lever_graphs_g3352, 0.002); end
  def test_lever_graphs_h3352; assert_in_delta(0.1, worksheet.lever_graphs_h3352, 0.002); end
  def test_lever_graphs_i3352; assert_in_delta(0.1, worksheet.lever_graphs_i3352, 0.002); end
  def test_lever_graphs_j3352; assert_in_delta(0.1, worksheet.lever_graphs_j3352, 0.002); end
  def test_lever_graphs_k3352; assert_in_delta(0.06, worksheet.lever_graphs_k3352, 0.002); end
  def test_lever_graphs_l3352; assert_in_delta(0.1, worksheet.lever_graphs_l3352, 0.002); end
  def test_lever_graphs_d3353; assert_equal("2050: Level 4", worksheet.lever_graphs_d3353); end
  def test_lever_graphs_e3353; assert_in_delta(0.1, worksheet.lever_graphs_e3353, 0.002); end
  def test_lever_graphs_f3353; assert_in_delta(0.05, worksheet.lever_graphs_f3353, 0.002); end
  def test_lever_graphs_g3353; assert_in_delta(0.05, worksheet.lever_graphs_g3353, 0.002); end
  def test_lever_graphs_h3353; assert_in_delta(0.05, worksheet.lever_graphs_h3353, 0.002); end
  def test_lever_graphs_i3353; assert_in_delta(0.05, worksheet.lever_graphs_i3353, 0.002); end
  def test_lever_graphs_j3353; assert_in_delta(0.05, worksheet.lever_graphs_j3353, 0.002); end
  def test_lever_graphs_k3353; assert_in_delta(0.05, worksheet.lever_graphs_k3353, 0.002); end
  def test_lever_graphs_l3353; assert_in_delta(0.05, worksheet.lever_graphs_l3353, 0.002); end
  def test_lever_graphs_c1408; assert_equal("1975", worksheet.lever_graphs_c1408); end
  def test_lever_graphs_d1408; assert_equal("1980", worksheet.lever_graphs_d1408); end
  def test_lever_graphs_e1408; assert_equal("1985", worksheet.lever_graphs_e1408); end
  def test_lever_graphs_f1408; assert_equal("1990", worksheet.lever_graphs_f1408); end
  def test_lever_graphs_g1408; assert_equal("1995", worksheet.lever_graphs_g1408); end
  def test_lever_graphs_h1408; assert_equal("2000", worksheet.lever_graphs_h1408); end
  def test_lever_graphs_i1408; assert_equal("2005", worksheet.lever_graphs_i1408); end
  def test_lever_graphs_j1408; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1408, 0.002); end
  def test_lever_graphs_k1408; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1408, 0.002); end
  def test_lever_graphs_l1408; assert_equal("2015", worksheet.lever_graphs_l1408); end
  def test_lever_graphs_m1408; assert_equal("2020", worksheet.lever_graphs_m1408); end
  def test_lever_graphs_n1408; assert_equal("2025", worksheet.lever_graphs_n1408); end
  def test_lever_graphs_o1408; assert_equal("2030", worksheet.lever_graphs_o1408); end
  def test_lever_graphs_p1408; assert_equal("2035", worksheet.lever_graphs_p1408); end
  def test_lever_graphs_q1408; assert_equal("2040", worksheet.lever_graphs_q1408); end
  def test_lever_graphs_r1408; assert_equal("2045", worksheet.lever_graphs_r1408); end
  def test_lever_graphs_s1408; assert_equal("2050", worksheet.lever_graphs_s1408); end
  def test_lever_graphs_b1409; assert_equal("Historic data", worksheet.lever_graphs_b1409); end
  def test_lever_graphs_b1410; assert_in_delta(1.0, worksheet.lever_graphs_b1410, 0.002); end
  def test_lever_graphs_j1410; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1410, 0.002); end
  def test_lever_graphs_k1410; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1410, 0.002); end
  def test_lever_graphs_l1410; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1410, 0.002); end
  def test_lever_graphs_m1410; assert_in_epsilon(24783.325014639468, worksheet.lever_graphs_m1410, 0.002); end
  def test_lever_graphs_n1410; assert_in_epsilon(28730.6661644222, worksheet.lever_graphs_n1410, 0.002); end
  def test_lever_graphs_o1410; assert_in_epsilon(32506.11166024606, worksheet.lever_graphs_o1410, 0.002); end
  def test_lever_graphs_p1410; assert_in_epsilon(35018.31412006242, worksheet.lever_graphs_p1410, 0.002); end
  def test_lever_graphs_q1410; assert_in_epsilon(36804.60007774434, worksheet.lever_graphs_q1410, 0.002); end
  def test_lever_graphs_r1410; assert_in_epsilon(37733.962350586844, worksheet.lever_graphs_r1410, 0.002); end
  def test_lever_graphs_s1410; assert_in_epsilon(37923.00987949159, worksheet.lever_graphs_s1410, 0.002); end
  def test_lever_graphs_b1411; assert_in_epsilon(2.0, worksheet.lever_graphs_b1411, 0.002); end
  def test_lever_graphs_j1411; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1411, 0.002); end
  def test_lever_graphs_k1411; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1411, 0.002); end
  def test_lever_graphs_l1411; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1411, 0.002); end
  def test_lever_graphs_m1411; assert_in_epsilon(24190.44997641361, worksheet.lever_graphs_m1411, 0.002); end
  def test_lever_graphs_n1411; assert_in_epsilon(27369.273776834176, worksheet.lever_graphs_n1411, 0.002); end
  def test_lever_graphs_o1411; assert_in_epsilon(29484.48083771553, worksheet.lever_graphs_o1411, 0.002); end
  def test_lever_graphs_p1411; assert_in_epsilon(30988.485682419887, worksheet.lever_graphs_p1411, 0.002); end
  def test_lever_graphs_q1411; assert_in_epsilon(31770.983778443922, worksheet.lever_graphs_q1411, 0.002); end
  def test_lever_graphs_r1411; assert_in_epsilon(32250.416514701214, worksheet.lever_graphs_r1411, 0.002); end
  def test_lever_graphs_s1411; assert_in_epsilon(32411.991424105294, worksheet.lever_graphs_s1411, 0.002); end
  def test_lever_graphs_b1412; assert_in_epsilon(3.0, worksheet.lever_graphs_b1412, 0.002); end
  def test_lever_graphs_j1412; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1412, 0.002); end
  def test_lever_graphs_k1412; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1412, 0.002); end
  def test_lever_graphs_l1412; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1412, 0.002); end
  def test_lever_graphs_m1412; assert_in_epsilon(23608.975982112308, worksheet.lever_graphs_m1412, 0.002); end
  def test_lever_graphs_n1412; assert_in_epsilon(25433.572173619974, worksheet.lever_graphs_n1412, 0.002); end
  def test_lever_graphs_o1412; assert_in_epsilon(26730.939964418292, worksheet.lever_graphs_o1412, 0.002); end
  def test_lever_graphs_p1412; assert_in_epsilon(27405.92969581251, worksheet.lever_graphs_p1412, 0.002); end
  def test_lever_graphs_q1412; assert_in_epsilon(27819.492585629385, worksheet.lever_graphs_q1412, 0.002); end
  def test_lever_graphs_r1412; assert_in_epsilon(28098.80251897496, worksheet.lever_graphs_r1412, 0.002); end
  def test_lever_graphs_s1412; assert_in_epsilon(28239.577800723553, worksheet.lever_graphs_s1412, 0.002); end
  def test_lever_graphs_b1413; assert_in_epsilon(4.0, worksheet.lever_graphs_b1413, 0.002); end
  def test_lever_graphs_j1413; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_j1413, 0.002); end
  def test_lever_graphs_k1413; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1413, 0.002); end
  def test_lever_graphs_l1413; assert_in_epsilon(20866.894647860074, worksheet.lever_graphs_l1413, 0.002); end
  def test_lever_graphs_m1413; assert_in_epsilon(23038.73780309913, worksheet.lever_graphs_m1413, 0.002); end
  def test_lever_graphs_n1413; assert_in_epsilon(23915.74732043146, worksheet.lever_graphs_n1413, 0.002); end
  def test_lever_graphs_o1413; assert_in_epsilon(24519.64990976793, worksheet.lever_graphs_o1413, 0.002); end
  def test_lever_graphs_p1413; assert_in_epsilon(24889.658057148208, worksheet.lever_graphs_p1413, 0.002); end
  def test_lever_graphs_q1413; assert_in_epsilon(25202.338280363892, worksheet.lever_graphs_q1413, 0.002); end
  def test_lever_graphs_r1413; assert_in_epsilon(25265.4071634213, worksheet.lever_graphs_r1413, 0.002); end
  def test_lever_graphs_s1413; assert_in_epsilon(25290.68267876902, worksheet.lever_graphs_s1413, 0.002); end
  def test_lever_graphs_c1418; assert_equal("1975", worksheet.lever_graphs_c1418); end
  def test_lever_graphs_d1418; assert_equal("1980", worksheet.lever_graphs_d1418); end
  def test_lever_graphs_e1418; assert_equal("1985", worksheet.lever_graphs_e1418); end
  def test_lever_graphs_f1418; assert_equal("1990", worksheet.lever_graphs_f1418); end
  def test_lever_graphs_g1418; assert_equal("1995", worksheet.lever_graphs_g1418); end
  def test_lever_graphs_h1418; assert_equal("2000", worksheet.lever_graphs_h1418); end
  def test_lever_graphs_i1418; assert_equal("2005", worksheet.lever_graphs_i1418); end
  def test_lever_graphs_j1418; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1418, 0.002); end
  def test_lever_graphs_k1418; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1418, 0.002); end
  def test_lever_graphs_l1418; assert_equal("2015", worksheet.lever_graphs_l1418); end
  def test_lever_graphs_m1418; assert_equal("2020", worksheet.lever_graphs_m1418); end
  def test_lever_graphs_n1418; assert_equal("2025", worksheet.lever_graphs_n1418); end
  def test_lever_graphs_o1418; assert_equal("2030", worksheet.lever_graphs_o1418); end
  def test_lever_graphs_p1418; assert_equal("2035", worksheet.lever_graphs_p1418); end
  def test_lever_graphs_q1418; assert_equal("2040", worksheet.lever_graphs_q1418); end
  def test_lever_graphs_r1418; assert_equal("2045", worksheet.lever_graphs_r1418); end
  def test_lever_graphs_s1418; assert_equal("2050", worksheet.lever_graphs_s1418); end
  def test_lever_graphs_b1419; assert_equal("Historic data", worksheet.lever_graphs_b1419); end
  def test_lever_graphs_b1420; assert_in_delta(1.0, worksheet.lever_graphs_b1420, 0.002); end
  def test_lever_graphs_j1420; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1420, 0.002); end
  def test_lever_graphs_k1420; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1420, 0.002); end
  def test_lever_graphs_l1420; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1420, 0.002); end
  def test_lever_graphs_m1420; assert_in_epsilon(94103.80336725559, worksheet.lever_graphs_m1420, 0.002); end
  def test_lever_graphs_n1420; assert_in_epsilon(111765.7985685757, worksheet.lever_graphs_n1420, 0.002); end
  def test_lever_graphs_o1420; assert_in_epsilon(129567.19267398585, worksheet.lever_graphs_o1420, 0.002); end
  def test_lever_graphs_p1420; assert_in_epsilon(139580.66409588963, worksheet.lever_graphs_p1420, 0.002); end
  def test_lever_graphs_q1420; assert_in_epsilon(146700.68076441222, worksheet.lever_graphs_q1420, 0.002); end
  def test_lever_graphs_r1420; assert_in_epsilon(150405.05678846253, worksheet.lever_graphs_r1420, 0.002); end
  def test_lever_graphs_s1420; assert_in_epsilon(151158.58762777539, worksheet.lever_graphs_s1420, 0.002); end
  def test_lever_graphs_b1421; assert_in_epsilon(2.0, worksheet.lever_graphs_b1421, 0.002); end
  def test_lever_graphs_j1421; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1421, 0.002); end
  def test_lever_graphs_k1421; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1421, 0.002); end
  def test_lever_graphs_l1421; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1421, 0.002); end
  def test_lever_graphs_m1421; assert_in_epsilon(89665.75374249024, worksheet.lever_graphs_m1421, 0.002); end
  def test_lever_graphs_n1421; assert_in_epsilon(103947.18366623712, worksheet.lever_graphs_n1421, 0.002); end
  def test_lever_graphs_o1421; assert_in_epsilon(117606.69730683087, worksheet.lever_graphs_o1421, 0.002); end
  def test_lever_graphs_p1421; assert_in_epsilon(123605.82082854785, worksheet.lever_graphs_p1421, 0.002); end
  def test_lever_graphs_q1421; assert_in_epsilon(126727.02269839907, worksheet.lever_graphs_q1421, 0.002); end
  def test_lever_graphs_r1421; assert_in_epsilon(129927.03882672988, worksheet.lever_graphs_r1421, 0.002); end
  def test_lever_graphs_s1421; assert_in_epsilon(130577.97459117186, worksheet.lever_graphs_s1421, 0.002); end
  def test_lever_graphs_b1422; assert_in_epsilon(3.0, worksheet.lever_graphs_b1422, 0.002); end
  def test_lever_graphs_j1422; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1422, 0.002); end
  def test_lever_graphs_k1422; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1422, 0.002); end
  def test_lever_graphs_l1422; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1422, 0.002); end
  def test_lever_graphs_m1422; assert_in_epsilon(87510.42781711393, worksheet.lever_graphs_m1422, 0.002); end
  def test_lever_graphs_n1422; assert_in_epsilon(94180.74027796341, worksheet.lever_graphs_n1422, 0.002); end
  def test_lever_graphs_o1422; assert_in_epsilon(101359.48435588086, worksheet.lever_graphs_o1422, 0.002); end
  def test_lever_graphs_p1422; assert_in_epsilon(106529.8367309845, worksheet.lever_graphs_p1422, 0.002); end
  def test_lever_graphs_q1422; assert_in_epsilon(109219.84860397634, worksheet.lever_graphs_q1422, 0.002); end
  def test_lever_graphs_r1422; assert_in_epsilon(111977.78664769074, worksheet.lever_graphs_r1422, 0.002); end
  def test_lever_graphs_s1422; assert_in_epsilon(112538.79647913347, worksheet.lever_graphs_s1422, 0.002); end
  def test_lever_graphs_b1423; assert_in_epsilon(4.0, worksheet.lever_graphs_b1423, 0.002); end
  def test_lever_graphs_j1423; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_j1423, 0.002); end
  def test_lever_graphs_k1423; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1423, 0.002); end
  def test_lever_graphs_l1423; assert_in_epsilon(77346.46683669931, worksheet.lever_graphs_l1423, 0.002); end
  def test_lever_graphs_m1423; assert_in_epsilon(85396.74922974514, worksheet.lever_graphs_m1423, 0.002); end
  def test_lever_graphs_n1423; assert_in_epsilon(87553.12416086438, worksheet.lever_graphs_n1423, 0.002); end
  def test_lever_graphs_o1423; assert_in_epsilon(89585.45767453355, worksheet.lever_graphs_o1423, 0.002); end
  def test_lever_graphs_p1423; assert_in_epsilon(91664.96688353478, worksheet.lever_graphs_p1423, 0.002); end
  def test_lever_graphs_q1423; assert_in_epsilon(92124.20928472932, worksheet.lever_graphs_q1423, 0.002); end
  def test_lever_graphs_r1423; assert_in_epsilon(92585.75249494857, worksheet.lever_graphs_r1423, 0.002); end
  def test_lever_graphs_s1423; assert_in_epsilon(93049.60804126874, worksheet.lever_graphs_s1423, 0.002); end
  def test_lever_graphs_c1428; assert_equal("1975", worksheet.lever_graphs_c1428); end
  def test_lever_graphs_d1428; assert_equal("1980", worksheet.lever_graphs_d1428); end
  def test_lever_graphs_e1428; assert_equal("1985", worksheet.lever_graphs_e1428); end
  def test_lever_graphs_f1428; assert_equal("1990", worksheet.lever_graphs_f1428); end
  def test_lever_graphs_g1428; assert_equal("1995", worksheet.lever_graphs_g1428); end
  def test_lever_graphs_h1428; assert_equal("2000", worksheet.lever_graphs_h1428); end
  def test_lever_graphs_i1428; assert_equal("2005", worksheet.lever_graphs_i1428); end
  def test_lever_graphs_j1428; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1428, 0.002); end
  def test_lever_graphs_k1428; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1428, 0.002); end
  def test_lever_graphs_l1428; assert_equal("2015", worksheet.lever_graphs_l1428); end
  def test_lever_graphs_m1428; assert_equal("2020", worksheet.lever_graphs_m1428); end
  def test_lever_graphs_n1428; assert_equal("2025", worksheet.lever_graphs_n1428); end
  def test_lever_graphs_o1428; assert_equal("2030", worksheet.lever_graphs_o1428); end
  def test_lever_graphs_p1428; assert_equal("2035", worksheet.lever_graphs_p1428); end
  def test_lever_graphs_q1428; assert_equal("2040", worksheet.lever_graphs_q1428); end
  def test_lever_graphs_r1428; assert_equal("2045", worksheet.lever_graphs_r1428); end
  def test_lever_graphs_s1428; assert_equal("2050", worksheet.lever_graphs_s1428); end
  def test_lever_graphs_b1429; assert_equal("Historic data", worksheet.lever_graphs_b1429); end
  def test_lever_graphs_b1430; assert_in_delta(1.0, worksheet.lever_graphs_b1430, 0.002); end
  def test_lever_graphs_j1430; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1430, 0.002); end
  def test_lever_graphs_k1430; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1430, 0.002); end
  def test_lever_graphs_l1430; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1430, 0.002); end
  def test_lever_graphs_m1430; assert_in_epsilon(118887.12838189506, worksheet.lever_graphs_m1430, 0.002); end
  def test_lever_graphs_n1430; assert_in_epsilon(140496.4647329979, worksheet.lever_graphs_n1430, 0.002); end
  def test_lever_graphs_o1430; assert_in_epsilon(162073.3043342319, worksheet.lever_graphs_o1430, 0.002); end
  def test_lever_graphs_p1430; assert_in_epsilon(174598.97821595205, worksheet.lever_graphs_p1430, 0.002); end
  def test_lever_graphs_q1430; assert_in_epsilon(183505.28084215656, worksheet.lever_graphs_q1430, 0.002); end
  def test_lever_graphs_r1430; assert_in_epsilon(188139.01913904937, worksheet.lever_graphs_r1430, 0.002); end
  def test_lever_graphs_s1430; assert_in_epsilon(189081.59750726697, worksheet.lever_graphs_s1430, 0.002); end
  def test_lever_graphs_b1431; assert_in_epsilon(2.0, worksheet.lever_graphs_b1431, 0.002); end
  def test_lever_graphs_j1431; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1431, 0.002); end
  def test_lever_graphs_k1431; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1431, 0.002); end
  def test_lever_graphs_l1431; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1431, 0.002); end
  def test_lever_graphs_m1431; assert_in_epsilon(113856.20371890385, worksheet.lever_graphs_m1431, 0.002); end
  def test_lever_graphs_n1431; assert_in_epsilon(131316.4574430713, worksheet.lever_graphs_n1431, 0.002); end
  def test_lever_graphs_o1431; assert_in_epsilon(147091.1781445464, worksheet.lever_graphs_o1431, 0.002); end
  def test_lever_graphs_p1431; assert_in_epsilon(154594.30651096773, worksheet.lever_graphs_p1431, 0.002); end
  def test_lever_graphs_q1431; assert_in_epsilon(158498.006476843, worksheet.lever_graphs_q1431, 0.002); end
  def test_lever_graphs_r1431; assert_in_epsilon(162177.4553414311, worksheet.lever_graphs_r1431, 0.002); end
  def test_lever_graphs_s1431; assert_in_epsilon(162989.96601527717, worksheet.lever_graphs_s1431, 0.002); end
  def test_lever_graphs_b1432; assert_in_epsilon(3.0, worksheet.lever_graphs_b1432, 0.002); end
  def test_lever_graphs_j1432; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1432, 0.002); end
  def test_lever_graphs_k1432; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1432, 0.002); end
  def test_lever_graphs_l1432; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1432, 0.002); end
  def test_lever_graphs_m1432; assert_in_epsilon(111119.40379922625, worksheet.lever_graphs_m1432, 0.002); end
  def test_lever_graphs_n1432; assert_in_epsilon(119614.31245158339, worksheet.lever_graphs_n1432, 0.002); end
  def test_lever_graphs_o1432; assert_in_epsilon(128090.42432029915, worksheet.lever_graphs_o1432, 0.002); end
  def test_lever_graphs_p1432; assert_in_epsilon(133935.76642679702, worksheet.lever_graphs_p1432, 0.002); end
  def test_lever_graphs_q1432; assert_in_epsilon(137039.3411896057, worksheet.lever_graphs_q1432, 0.002); end
  def test_lever_graphs_r1432; assert_in_epsilon(140076.58916666568, worksheet.lever_graphs_r1432, 0.002); end
  def test_lever_graphs_s1432; assert_in_epsilon(140778.37427985703, worksheet.lever_graphs_s1432, 0.002); end
  def test_lever_graphs_b1433; assert_in_epsilon(4.0, worksheet.lever_graphs_b1433, 0.002); end
  def test_lever_graphs_j1433; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_j1433, 0.002); end
  def test_lever_graphs_k1433; assert_in_epsilon(85163.03603802247, worksheet.lever_graphs_k1433, 0.002); end
  def test_lever_graphs_l1433; assert_in_epsilon(98213.36148455938, worksheet.lever_graphs_l1433, 0.002); end
  def test_lever_graphs_m1433; assert_in_epsilon(108435.48703284428, worksheet.lever_graphs_m1433, 0.002); end
  def test_lever_graphs_n1433; assert_in_epsilon(111468.87148129584, worksheet.lever_graphs_n1433, 0.002); end
  def test_lever_graphs_o1433; assert_in_epsilon(114105.10758430148, worksheet.lever_graphs_o1433, 0.002); end
  def test_lever_graphs_p1433; assert_in_epsilon(116554.62494068299, worksheet.lever_graphs_p1433, 0.002); end
  def test_lever_graphs_q1433; assert_in_epsilon(117326.54756509322, worksheet.lever_graphs_q1433, 0.002); end
  def test_lever_graphs_r1433; assert_in_epsilon(117851.15965836987, worksheet.lever_graphs_r1433, 0.002); end
  def test_lever_graphs_s1433; assert_in_epsilon(118340.29072003777, worksheet.lever_graphs_s1433, 0.002); end
  def test_lever_graphs_c2192; assert_equal("1975", worksheet.lever_graphs_c2192); end
  def test_lever_graphs_d2192; assert_equal("1980", worksheet.lever_graphs_d2192); end
  def test_lever_graphs_e2192; assert_equal("1985", worksheet.lever_graphs_e2192); end
  def test_lever_graphs_f2192; assert_equal("1990", worksheet.lever_graphs_f2192); end
  def test_lever_graphs_g2192; assert_equal("1995", worksheet.lever_graphs_g2192); end
  def test_lever_graphs_h2192; assert_equal("2000", worksheet.lever_graphs_h2192); end
  def test_lever_graphs_i2192; assert_equal("2005", worksheet.lever_graphs_i2192); end
  def test_lever_graphs_j2192; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2192, 0.002); end
  def test_lever_graphs_k2192; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2192, 0.002); end
  def test_lever_graphs_l2192; assert_equal("2015", worksheet.lever_graphs_l2192); end
  def test_lever_graphs_m2192; assert_equal("2020", worksheet.lever_graphs_m2192); end
  def test_lever_graphs_n2192; assert_equal("2025", worksheet.lever_graphs_n2192); end
  def test_lever_graphs_o2192; assert_equal("2030", worksheet.lever_graphs_o2192); end
  def test_lever_graphs_p2192; assert_equal("2035", worksheet.lever_graphs_p2192); end
  def test_lever_graphs_q2192; assert_equal("2040", worksheet.lever_graphs_q2192); end
  def test_lever_graphs_r2192; assert_equal("2045", worksheet.lever_graphs_r2192); end
  def test_lever_graphs_s2192; assert_equal("2050", worksheet.lever_graphs_s2192); end
  def test_lever_graphs_b2193; assert_equal("Historic data", worksheet.lever_graphs_b2193); end
  def test_lever_graphs_b2194; assert_in_delta(1.0, worksheet.lever_graphs_b2194, 0.002); end
  def test_lever_graphs_k2194; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2194, 0.002); end
  def test_lever_graphs_l2194; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2194, 0.002); end
  def test_lever_graphs_m2194; assert_in_epsilon(7.5806628990088445, worksheet.lever_graphs_m2194, 0.002); end
  def test_lever_graphs_n2194; assert_in_epsilon(7.13660906986481, worksheet.lever_graphs_n2194, 0.002); end
  def test_lever_graphs_o2194; assert_in_epsilon(6.718566660276611, worksheet.lever_graphs_o2194, 0.002); end
  def test_lever_graphs_p2194; assert_in_epsilon(6.38929004351293, worksheet.lever_graphs_p2194, 0.002); end
  def test_lever_graphs_q2194; assert_in_epsilon(6.231147148269996, worksheet.lever_graphs_q2194, 0.002); end
  def test_lever_graphs_r2194; assert_in_epsilon(6.076918486869242, worksheet.lever_graphs_r2194, 0.002); end
  def test_lever_graphs_s2194; assert_in_epsilon(5.9265071771425, worksheet.lever_graphs_s2194, 0.002); end
  def test_lever_graphs_b2195; assert_in_epsilon(2.0, worksheet.lever_graphs_b2195, 0.002); end
  def test_lever_graphs_k2195; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2195, 0.002); end
  def test_lever_graphs_l2195; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2195, 0.002); end
  def test_lever_graphs_m2195; assert_in_epsilon(7.4285983775928015, worksheet.lever_graphs_m2195, 0.002); end
  def test_lever_graphs_n2195; assert_in_epsilon(6.783663831581343, worksheet.lever_graphs_n2195, 0.002); end
  def test_lever_graphs_o2195; assert_in_epsilon(6.289925051143047, worksheet.lever_graphs_o2195, 0.002); end
  def test_lever_graphs_p2195; assert_in_epsilon(5.951506723180597, worksheet.lever_graphs_p2195, 0.002); end
  def test_lever_graphs_q2195; assert_in_epsilon(5.631296396707781, worksheet.lever_graphs_q2195, 0.002); end
  def test_lever_graphs_r2195; assert_in_epsilon(5.409619853440235, worksheet.lever_graphs_r2195, 0.002); end
  def test_lever_graphs_s2195; assert_in_epsilon(5.27572501693093, worksheet.lever_graphs_s2195, 0.002); end
  def test_lever_graphs_b2196; assert_in_epsilon(3.0, worksheet.lever_graphs_b2196, 0.002); end
  def test_lever_graphs_k2196; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2196, 0.002); end
  def test_lever_graphs_l2196; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2196, 0.002); end
  def test_lever_graphs_m2196; assert_in_epsilon(7.3348041473624335, worksheet.lever_graphs_m2196, 0.002); end
  def test_lever_graphs_n2196; assert_in_epsilon(6.715081950093092, worksheet.lever_graphs_n2196, 0.002); end
  def test_lever_graphs_o2196; assert_in_epsilon(6.069902226905445, worksheet.lever_graphs_o2196, 0.002); end
  def test_lever_graphs_p2196; assert_in_epsilon(5.486710857442462, worksheet.lever_graphs_p2196, 0.002); end
  def test_lever_graphs_q2196; assert_in_epsilon(5.139227431512809, worksheet.lever_graphs_q2196, 0.002); end
  def test_lever_graphs_r2196; assert_in_epsilon(4.93692123204699, worksheet.lever_graphs_r2196, 0.002); end
  def test_lever_graphs_s2196; assert_in_epsilon(4.814726275814738, worksheet.lever_graphs_s2196, 0.002); end
  def test_lever_graphs_b2197; assert_in_epsilon(4.0, worksheet.lever_graphs_b2197, 0.002); end
  def test_lever_graphs_k2197; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2197, 0.002); end
  def test_lever_graphs_l2197; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2197, 0.002); end
  def test_lever_graphs_m2197; assert_in_epsilon(7.3348041473624335, worksheet.lever_graphs_m2197, 0.002); end
  def test_lever_graphs_n2197; assert_in_epsilon(6.715081950093092, worksheet.lever_graphs_n2197, 0.002); end
  def test_lever_graphs_o2197; assert_in_epsilon(5.916629786782296, worksheet.lever_graphs_o2197, 0.002); end
  def test_lever_graphs_p2197; assert_in_epsilon(5.280295480672461, worksheet.lever_graphs_p2197, 0.002); end
  def test_lever_graphs_q2197; assert_in_epsilon(4.895977107046136, worksheet.lever_graphs_q2197, 0.002); end
  def test_lever_graphs_r2197; assert_in_epsilon(4.656025513339062, worksheet.lever_graphs_r2197, 0.002); end
  def test_lever_graphs_s2197; assert_in_epsilon(4.317143691403358, worksheet.lever_graphs_s2197, 0.002); end
  def test_lever_graphs_c2263; assert_equal("1975", worksheet.lever_graphs_c2263); end
  def test_lever_graphs_d2263; assert_equal("1980", worksheet.lever_graphs_d2263); end
  def test_lever_graphs_e2263; assert_equal("1985", worksheet.lever_graphs_e2263); end
  def test_lever_graphs_f2263; assert_equal("1990", worksheet.lever_graphs_f2263); end
  def test_lever_graphs_g2263; assert_equal("1995", worksheet.lever_graphs_g2263); end
  def test_lever_graphs_h2263; assert_equal("2000", worksheet.lever_graphs_h2263); end
  def test_lever_graphs_i2263; assert_equal("2005", worksheet.lever_graphs_i2263); end
  def test_lever_graphs_j2263; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2263, 0.002); end
  def test_lever_graphs_k2263; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2263, 0.002); end
  def test_lever_graphs_l2263; assert_equal("2015", worksheet.lever_graphs_l2263); end
  def test_lever_graphs_m2263; assert_equal("2020", worksheet.lever_graphs_m2263); end
  def test_lever_graphs_n2263; assert_equal("2025", worksheet.lever_graphs_n2263); end
  def test_lever_graphs_o2263; assert_equal("2030", worksheet.lever_graphs_o2263); end
  def test_lever_graphs_p2263; assert_equal("2035", worksheet.lever_graphs_p2263); end
  def test_lever_graphs_q2263; assert_equal("2040", worksheet.lever_graphs_q2263); end
  def test_lever_graphs_r2263; assert_equal("2045", worksheet.lever_graphs_r2263); end
  def test_lever_graphs_s2263; assert_equal("2050", worksheet.lever_graphs_s2263); end
  def test_lever_graphs_b2264; assert_equal("Historic data", worksheet.lever_graphs_b2264); end
  def test_lever_graphs_b2265; assert_in_delta(1.0, worksheet.lever_graphs_b2265, 0.002); end
  def test_lever_graphs_k2265; assert_in_epsilon(9.96, worksheet.lever_graphs_k2265, 0.002); end
  def test_lever_graphs_l2265; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2265, 0.002); end
  def test_lever_graphs_m2265; assert_in_epsilon(9.14448948972875, worksheet.lever_graphs_m2265, 0.002); end
  def test_lever_graphs_n2265; assert_in_epsilon(8.918151972794055, worksheet.lever_graphs_n2265, 0.002); end
  def test_lever_graphs_o2265; assert_in_epsilon(8.697416591618794, worksheet.lever_graphs_o2265, 0.002); end
  def test_lever_graphs_p2265; assert_in_epsilon(8.482144686357737, worksheet.lever_graphs_p2265, 0.002); end
  def test_lever_graphs_q2265; assert_in_epsilon(8.272201029169722, worksheet.lever_graphs_q2265, 0.002); end
  def test_lever_graphs_r2265; assert_in_epsilon(8.067453739271263, worksheet.lever_graphs_r2265, 0.002); end
  def test_lever_graphs_s2265; assert_in_epsilon(7.8677742000927084, worksheet.lever_graphs_s2265, 0.002); end
  def test_lever_graphs_b2266; assert_in_epsilon(2.0, worksheet.lever_graphs_b2266, 0.002); end
  def test_lever_graphs_k2266; assert_in_epsilon(9.96, worksheet.lever_graphs_k2266, 0.002); end
  def test_lever_graphs_l2266; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2266, 0.002); end
  def test_lever_graphs_m2266; assert_in_epsilon(8.827318247472038, worksheet.lever_graphs_m2266, 0.002); end
  def test_lever_graphs_n2266; assert_in_epsilon(8.310238867860596, worksheet.lever_graphs_n2266, 0.002); end
  def test_lever_graphs_o2266; assert_in_epsilon(7.823448538368755, worksheet.lever_graphs_o2266, 0.002); end
  def test_lever_graphs_p2266; assert_in_epsilon(7.365173011959558, worksheet.lever_graphs_p2266, 0.002); end
  def test_lever_graphs_q2266; assert_in_epsilon(6.933741971978007, worksheet.lever_graphs_q2266, 0.002); end
  def test_lever_graphs_r2266; assert_in_epsilon(6.52758294420273, worksheet.lever_graphs_r2266, 0.002); end
  def test_lever_graphs_s2266; assert_in_epsilon(6.145215565512471, worksheet.lever_graphs_s2266, 0.002); end
  def test_lever_graphs_b2267; assert_in_epsilon(3.0, worksheet.lever_graphs_b2267, 0.002); end
  def test_lever_graphs_k2267; assert_in_epsilon(9.96, worksheet.lever_graphs_k2267, 0.002); end
  def test_lever_graphs_l2267; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2267, 0.002); end
  def test_lever_graphs_m2267; assert_in_epsilon(8.606204281617035, worksheet.lever_graphs_m2267, 0.002); end
  def test_lever_graphs_n2267; assert_in_epsilon(7.899129607011463, worksheet.lever_graphs_n2267, 0.002); end
  def test_lever_graphs_o2267; assert_in_epsilon(7.250147278242543, worksheet.lever_graphs_o2267, 0.002); end
  def test_lever_graphs_p2267; assert_in_epsilon(6.654484502893848, worksheet.lever_graphs_p2267, 0.002); end
  def test_lever_graphs_q2267; assert_in_epsilon(6.107760615035191, worksheet.lever_graphs_q2267, 0.002); end
  def test_lever_graphs_r2267; assert_in_epsilon(5.605954858614858, worksheet.lever_graphs_r2267, 0.002); end
  def test_lever_graphs_s2267; assert_in_epsilon(5.145376817726912, worksheet.lever_graphs_s2267, 0.002); end
  def test_lever_graphs_b2268; assert_in_epsilon(4.0, worksheet.lever_graphs_b2268, 0.002); end
  def test_lever_graphs_k2268; assert_in_epsilon(9.96, worksheet.lever_graphs_k2268, 0.002); end
  def test_lever_graphs_l2268; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2268, 0.002); end
  def test_lever_graphs_m2268; assert_in_epsilon(8.432522727417279, worksheet.lever_graphs_m2268, 0.002); end
  def test_lever_graphs_n2268; assert_in_epsilon(7.583522495724577, worksheet.lever_graphs_n2268, 0.002); end
  def test_lever_graphs_o2268; assert_in_epsilon(6.820001001144634, worksheet.lever_graphs_o2268, 0.002); end
  def test_lever_graphs_p2268; assert_in_epsilon(6.13335210409628, worksheet.lever_graphs_p2268, 0.002); end
  def test_lever_graphs_q2268; assert_in_epsilon(5.5158361452598985, worksheet.lever_graphs_q2268, 0.002); end
  def test_lever_graphs_r2268; assert_in_epsilon(4.960492706922208, worksheet.lever_graphs_r2268, 0.002); end
  def test_lever_graphs_s2268; assert_in_epsilon(4.461062157652073, worksheet.lever_graphs_s2268, 0.002); end
  def test_lever_graphs_c2274; assert_equal("1975", worksheet.lever_graphs_c2274); end
  def test_lever_graphs_d2274; assert_equal("1980", worksheet.lever_graphs_d2274); end
  def test_lever_graphs_e2274; assert_equal("1985", worksheet.lever_graphs_e2274); end
  def test_lever_graphs_f2274; assert_equal("1990", worksheet.lever_graphs_f2274); end
  def test_lever_graphs_g2274; assert_equal("1995", worksheet.lever_graphs_g2274); end
  def test_lever_graphs_h2274; assert_equal("2000", worksheet.lever_graphs_h2274); end
  def test_lever_graphs_i2274; assert_equal("2005", worksheet.lever_graphs_i2274); end
  def test_lever_graphs_j2274; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2274, 0.002); end
  def test_lever_graphs_k2274; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2274, 0.002); end
  def test_lever_graphs_l2274; assert_equal("2015", worksheet.lever_graphs_l2274); end
  def test_lever_graphs_m2274; assert_equal("2020", worksheet.lever_graphs_m2274); end
  def test_lever_graphs_n2274; assert_equal("2025", worksheet.lever_graphs_n2274); end
  def test_lever_graphs_o2274; assert_equal("2030", worksheet.lever_graphs_o2274); end
  def test_lever_graphs_p2274; assert_equal("2035", worksheet.lever_graphs_p2274); end
  def test_lever_graphs_q2274; assert_equal("2040", worksheet.lever_graphs_q2274); end
  def test_lever_graphs_r2274; assert_equal("2045", worksheet.lever_graphs_r2274); end
  def test_lever_graphs_s2274; assert_equal("2050", worksheet.lever_graphs_s2274); end
  def test_lever_graphs_b2275; assert_equal("Historic data", worksheet.lever_graphs_b2275); end
  def test_lever_graphs_b2276; assert_in_delta(1.0, worksheet.lever_graphs_b2276, 0.002); end
  def test_lever_graphs_k2276; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2276, 0.002); end
  def test_lever_graphs_l2276; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2276, 0.002); end
  def test_lever_graphs_m2276; assert_in_epsilon(1115.7687787785421, worksheet.lever_graphs_m2276, 0.002); end
  def test_lever_graphs_n2276; assert_in_epsilon(1084.875204073636, worksheet.lever_graphs_n2276, 0.002); end
  def test_lever_graphs_o2276; assert_in_epsilon(1054.8370153377589, worksheet.lever_graphs_o2276, 0.002); end
  def test_lever_graphs_p2276; assert_in_epsilon(1025.6305285148244, worksheet.lever_graphs_p2276, 0.002); end
  def test_lever_graphs_q2276; assert_in_epsilon(997.2327153164736, worksheet.lever_graphs_q2276, 0.002); end
  def test_lever_graphs_r2276; assert_in_epsilon(969.6211850650785, worksheet.lever_graphs_r2276, 0.002); end
  def test_lever_graphs_s2276; assert_in_epsilon(942.77416703948, worksheet.lever_graphs_s2276, 0.002); end
  def test_lever_graphs_b2277; assert_in_epsilon(2.0, worksheet.lever_graphs_b2277, 0.002); end
  def test_lever_graphs_k2277; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2277, 0.002); end
  def test_lever_graphs_l2277; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2277, 0.002); end
  def test_lever_graphs_m2277; assert_in_epsilon(1097.377388806882, worksheet.lever_graphs_m2277, 0.002); end
  def test_lever_graphs_n2277; assert_in_epsilon(1049.4056258289256, worksheet.lever_graphs_n2277, 0.002); end
  def test_lever_graphs_o2277; assert_in_epsilon(1003.530944553842, worksheet.lever_graphs_o2277, 0.002); end
  def test_lever_graphs_p2277; assert_in_epsilon(959.6616712261649, worksheet.lever_graphs_p2277, 0.002); end
  def test_lever_graphs_q2277; assert_in_epsilon(917.7101396011656, worksheet.lever_graphs_q2277, 0.002); end
  def test_lever_graphs_r2277; assert_in_epsilon(877.5925157568475, worksheet.lever_graphs_r2277, 0.002); end
  def test_lever_graphs_s2277; assert_in_epsilon(839.2286305642716, worksheet.lever_graphs_s2277, 0.002); end
  def test_lever_graphs_b2278; assert_in_epsilon(3.0, worksheet.lever_graphs_b2278, 0.002); end
  def test_lever_graphs_k2278; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2278, 0.002); end
  def test_lever_graphs_l2278; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2278, 0.002); end
  def test_lever_graphs_m2278; assert_in_epsilon(1057.5544033276155, worksheet.lever_graphs_m2278, 0.002); end
  def test_lever_graphs_n2278; assert_in_epsilon(974.6233432266052, worksheet.lever_graphs_n2278, 0.002); end
  def test_lever_graphs_o2278; assert_in_epsilon(898.195552090139, worksheet.lever_graphs_o2278, 0.002); end
  def test_lever_graphs_p2278; assert_in_epsilon(827.7610580551574, worksheet.lever_graphs_p2278, 0.002); end
  def test_lever_graphs_q2278; assert_in_epsilon(762.8498801158961, worksheet.lever_graphs_q2278, 0.002); end
  def test_lever_graphs_r2278; assert_in_epsilon(703.0288921299555, worksheet.lever_graphs_r2278, 0.002); end
  def test_lever_graphs_s2278; assert_in_epsilon(647.8989327420273, worksheet.lever_graphs_s2278, 0.002); end
  def test_lever_graphs_b2279; assert_in_epsilon(4.0, worksheet.lever_graphs_b2279, 0.002); end
  def test_lever_graphs_k2279; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2279, 0.002); end
  def test_lever_graphs_l2279; assert_in_epsilon(1147.542097950336, worksheet.lever_graphs_l2279, 0.002); end
  def test_lever_graphs_m2279; assert_in_epsilon(1023.6000541614143, worksheet.lever_graphs_m2279, 0.002); end
  def test_lever_graphs_n2279; assert_in_epsilon(913.0445608493883, worksheet.lever_graphs_n2279, 0.002); end
  def test_lever_graphs_o2279; assert_in_epsilon(814.4297831047122, worksheet.lever_graphs_o2279, 0.002); end
  def test_lever_graphs_p2279; assert_in_epsilon(726.4660456341111, worksheet.lever_graphs_p2279, 0.002); end
  def test_lever_graphs_q2279; assert_in_epsilon(648.0029665017893, worksheet.lever_graphs_q2279, 0.002); end
  def test_lever_graphs_r2279; assert_in_epsilon(578.0144125367809, worksheet.lever_graphs_r2279, 0.002); end
  def test_lever_graphs_s2279; assert_in_epsilon(515.5850796545967, worksheet.lever_graphs_s2279, 0.002); end
  def test_lever_graphs_d2673; assert_equal("Title", worksheet.lever_graphs_d2673); end
  def test_lever_graphs_e2673; assert_equal("Design for Steel Materials demand per product", worksheet.lever_graphs_e2673); end
  def test_lever_graphs_f2673; assert_equal("Design for Chemicals Materials demand per product", worksheet.lever_graphs_f2673); end
  def test_lever_graphs_g2673; assert_equal("Design for Aluminium Materials demand per product", worksheet.lever_graphs_g2673); end
  def test_lever_graphs_h2673; assert_equal("Design for Cement Materials demand per product", worksheet.lever_graphs_h2673); end
  def test_lever_graphs_i2673; assert_equal("Design for Paper Materials demand per product", worksheet.lever_graphs_i2673); end
  def test_lever_graphs_j2673; assert_equal("Design for Timber Materials demand per product", worksheet.lever_graphs_j2673); end
  def test_lever_graphs_k2673; assert_equal("Design for Other industries Materials demand per product", worksheet.lever_graphs_k2673); end
  def test_lever_graphs_d2674; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2674, 0.002); end
  def test_lever_graphs_e2674; assert_in_delta(1.0, worksheet.lever_graphs_e2674, 0.002); end
  def test_lever_graphs_f2674; assert_in_delta(1.0, worksheet.lever_graphs_f2674, 0.002); end
  def test_lever_graphs_g2674; assert_in_delta(1.0, worksheet.lever_graphs_g2674, 0.002); end
  def test_lever_graphs_h2674; assert_in_delta(1.0, worksheet.lever_graphs_h2674, 0.002); end
  def test_lever_graphs_i2674; assert_in_delta(1.0, worksheet.lever_graphs_i2674, 0.002); end
  def test_lever_graphs_j2674; assert_in_delta(1.0, worksheet.lever_graphs_j2674, 0.002); end
  def test_lever_graphs_k2674; assert_in_delta(1.0, worksheet.lever_graphs_k2674, 0.002); end
  def test_lever_graphs_d2675; assert_equal("2050: Level 1", worksheet.lever_graphs_d2675); end
  def test_lever_graphs_e2675; assert_in_delta(1.0, worksheet.lever_graphs_e2675, 0.002); end
  def test_lever_graphs_f2675; assert_in_delta(1.0, worksheet.lever_graphs_f2675, 0.002); end
  def test_lever_graphs_g2675; assert_in_delta(1.0, worksheet.lever_graphs_g2675, 0.002); end
  def test_lever_graphs_h2675; assert_in_delta(1.0, worksheet.lever_graphs_h2675, 0.002); end
  def test_lever_graphs_i2675; assert_in_delta(1.0, worksheet.lever_graphs_i2675, 0.002); end
  def test_lever_graphs_j2675; assert_in_delta(1.0, worksheet.lever_graphs_j2675, 0.002); end
  def test_lever_graphs_k2675; assert_in_delta(1.0, worksheet.lever_graphs_k2675, 0.002); end
  def test_lever_graphs_d2676; assert_equal("2050: Level 2", worksheet.lever_graphs_d2676); end
  def test_lever_graphs_e2676; assert_in_delta(0.9, worksheet.lever_graphs_e2676, 0.002); end
  def test_lever_graphs_f2676; assert_in_delta(0.9, worksheet.lever_graphs_f2676, 0.002); end
  def test_lever_graphs_g2676; assert_in_delta(0.9, worksheet.lever_graphs_g2676, 0.002); end
  def test_lever_graphs_h2676; assert_in_delta(0.9, worksheet.lever_graphs_h2676, 0.002); end
  def test_lever_graphs_i2676; assert_in_delta(0.95, worksheet.lever_graphs_i2676, 0.002); end
  def test_lever_graphs_j2676; assert_in_delta(0.9, worksheet.lever_graphs_j2676, 0.002); end
  def test_lever_graphs_k2676; assert_in_delta(0.9, worksheet.lever_graphs_k2676, 0.002); end
  def test_lever_graphs_d2677; assert_equal("2050: Level 3", worksheet.lever_graphs_d2677); end
  def test_lever_graphs_e2677; assert_in_delta(0.8, worksheet.lever_graphs_e2677, 0.002); end
  def test_lever_graphs_f2677; assert_in_delta(0.8, worksheet.lever_graphs_f2677, 0.002); end
  def test_lever_graphs_g2677; assert_in_delta(0.8, worksheet.lever_graphs_g2677, 0.002); end
  def test_lever_graphs_h2677; assert_in_delta(0.8, worksheet.lever_graphs_h2677, 0.002); end
  def test_lever_graphs_i2677; assert_in_delta(0.9, worksheet.lever_graphs_i2677, 0.002); end
  def test_lever_graphs_j2677; assert_in_delta(0.8, worksheet.lever_graphs_j2677, 0.002); end
  def test_lever_graphs_k2677; assert_in_delta(0.8, worksheet.lever_graphs_k2677, 0.002); end
  def test_lever_graphs_d2678; assert_equal("2050: Level 4", worksheet.lever_graphs_d2678); end
  def test_lever_graphs_e2678; assert_in_delta(0.7, worksheet.lever_graphs_e2678, 0.002); end
  def test_lever_graphs_f2678; assert_in_delta(0.7, worksheet.lever_graphs_f2678, 0.002); end
  def test_lever_graphs_g2678; assert_in_delta(0.7, worksheet.lever_graphs_g2678, 0.002); end
  def test_lever_graphs_h2678; assert_in_delta(0.7, worksheet.lever_graphs_h2678, 0.002); end
  def test_lever_graphs_i2678; assert_in_delta(0.8, worksheet.lever_graphs_i2678, 0.002); end
  def test_lever_graphs_j2678; assert_in_delta(0.7, worksheet.lever_graphs_j2678, 0.002); end
  def test_lever_graphs_k2678; assert_in_delta(0.7, worksheet.lever_graphs_k2678, 0.002); end
  def test_lever_graphs_c2883; assert_equal("1975", worksheet.lever_graphs_c2883); end
  def test_lever_graphs_d2883; assert_equal("1980", worksheet.lever_graphs_d2883); end
  def test_lever_graphs_e2883; assert_equal("1985", worksheet.lever_graphs_e2883); end
  def test_lever_graphs_f2883; assert_equal("1990", worksheet.lever_graphs_f2883); end
  def test_lever_graphs_g2883; assert_equal("1995", worksheet.lever_graphs_g2883); end
  def test_lever_graphs_h2883; assert_equal("2000", worksheet.lever_graphs_h2883); end
  def test_lever_graphs_i2883; assert_equal("2005", worksheet.lever_graphs_i2883); end
  def test_lever_graphs_j2883; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2883, 0.002); end
  def test_lever_graphs_k2883; assert_equal("2011", worksheet.lever_graphs_k2883); end
  def test_lever_graphs_l2883; assert_equal("2015", worksheet.lever_graphs_l2883); end
  def test_lever_graphs_m2883; assert_equal("2020", worksheet.lever_graphs_m2883); end
  def test_lever_graphs_n2883; assert_equal("2025", worksheet.lever_graphs_n2883); end
  def test_lever_graphs_o2883; assert_equal("2030", worksheet.lever_graphs_o2883); end
  def test_lever_graphs_p2883; assert_equal("2035", worksheet.lever_graphs_p2883); end
  def test_lever_graphs_q2883; assert_equal("2040", worksheet.lever_graphs_q2883); end
  def test_lever_graphs_r2883; assert_equal("2045", worksheet.lever_graphs_r2883); end
  def test_lever_graphs_s2883; assert_equal("2050", worksheet.lever_graphs_s2883); end
  def test_lever_graphs_b2884; assert_equal("Historic data", worksheet.lever_graphs_b2884); end
  def test_lever_graphs_b2885; assert_in_delta(1.0, worksheet.lever_graphs_b2885, 0.002); end
  def test_lever_graphs_k2885; assert_in_delta(1.0, worksheet.lever_graphs_k2885, 0.002); end
  def test_lever_graphs_l2885; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2885, 0.002); end
  def test_lever_graphs_m2885; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2885, 0.002); end
  def test_lever_graphs_n2885; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2885, 0.002); end
  def test_lever_graphs_o2885; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2885, 0.002); end
  def test_lever_graphs_p2885; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2885, 0.002); end
  def test_lever_graphs_q2885; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2885, 0.002); end
  def test_lever_graphs_r2885; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2885, 0.002); end
  def test_lever_graphs_s2885; assert_in_delta(1.0, worksheet.lever_graphs_s2885, 0.002); end
  def test_lever_graphs_b2886; assert_in_epsilon(2.0, worksheet.lever_graphs_b2886, 0.002); end
  def test_lever_graphs_k2886; assert_in_delta(1.0, worksheet.lever_graphs_k2886, 0.002); end
  def test_lever_graphs_l2886; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2886, 0.002); end
  def test_lever_graphs_m2886; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2886, 0.002); end
  def test_lever_graphs_n2886; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2886, 0.002); end
  def test_lever_graphs_o2886; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2886, 0.002); end
  def test_lever_graphs_p2886; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2886, 0.002); end
  def test_lever_graphs_q2886; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2886, 0.002); end
  def test_lever_graphs_r2886; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2886, 0.002); end
  def test_lever_graphs_s2886; assert_in_delta(0.9, worksheet.lever_graphs_s2886, 0.002); end
  def test_lever_graphs_b2887; assert_in_epsilon(3.0, worksheet.lever_graphs_b2887, 0.002); end
  def test_lever_graphs_k2887; assert_in_delta(1.0, worksheet.lever_graphs_k2887, 0.002); end
  def test_lever_graphs_l2887; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2887, 0.002); end
  def test_lever_graphs_m2887; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2887, 0.002); end
  def test_lever_graphs_n2887; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2887, 0.002); end
  def test_lever_graphs_o2887; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2887, 0.002); end
  def test_lever_graphs_p2887; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2887, 0.002); end
  def test_lever_graphs_q2887; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2887, 0.002); end
  def test_lever_graphs_r2887; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2887, 0.002); end
  def test_lever_graphs_s2887; assert_in_delta(0.8, worksheet.lever_graphs_s2887, 0.002); end
  def test_lever_graphs_b2888; assert_in_epsilon(4.0, worksheet.lever_graphs_b2888, 0.002); end
  def test_lever_graphs_k2888; assert_in_delta(1.0, worksheet.lever_graphs_k2888, 0.002); end
  def test_lever_graphs_l2888; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2888, 0.002); end
  def test_lever_graphs_m2888; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2888, 0.002); end
  def test_lever_graphs_n2888; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2888, 0.002); end
  def test_lever_graphs_o2888; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2888, 0.002); end
  def test_lever_graphs_p2888; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2888, 0.002); end
  def test_lever_graphs_q2888; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2888, 0.002); end
  def test_lever_graphs_r2888; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2888, 0.002); end
  def test_lever_graphs_s2888; assert_in_delta(0.7, worksheet.lever_graphs_s2888, 0.002); end
  def test_lever_graphs_c2799; assert_equal("1975", worksheet.lever_graphs_c2799); end
  def test_lever_graphs_d2799; assert_equal("1980", worksheet.lever_graphs_d2799); end
  def test_lever_graphs_e2799; assert_equal("1985", worksheet.lever_graphs_e2799); end
  def test_lever_graphs_f2799; assert_equal("1990", worksheet.lever_graphs_f2799); end
  def test_lever_graphs_g2799; assert_equal("1995", worksheet.lever_graphs_g2799); end
  def test_lever_graphs_h2799; assert_equal("2000", worksheet.lever_graphs_h2799); end
  def test_lever_graphs_i2799; assert_equal("2005", worksheet.lever_graphs_i2799); end
  def test_lever_graphs_j2799; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2799, 0.002); end
  def test_lever_graphs_k2799; assert_equal("2011", worksheet.lever_graphs_k2799); end
  def test_lever_graphs_l2799; assert_equal("2015", worksheet.lever_graphs_l2799); end
  def test_lever_graphs_m2799; assert_equal("2020", worksheet.lever_graphs_m2799); end
  def test_lever_graphs_n2799; assert_equal("2025", worksheet.lever_graphs_n2799); end
  def test_lever_graphs_o2799; assert_equal("2030", worksheet.lever_graphs_o2799); end
  def test_lever_graphs_p2799; assert_equal("2035", worksheet.lever_graphs_p2799); end
  def test_lever_graphs_q2799; assert_equal("2040", worksheet.lever_graphs_q2799); end
  def test_lever_graphs_r2799; assert_equal("2045", worksheet.lever_graphs_r2799); end
  def test_lever_graphs_s2799; assert_equal("2050", worksheet.lever_graphs_s2799); end
  def test_lever_graphs_b2800; assert_equal("Historic data", worksheet.lever_graphs_b2800); end
  def test_lever_graphs_b2801; assert_in_delta(1.0, worksheet.lever_graphs_b2801, 0.002); end
  def test_lever_graphs_k2801; assert_in_delta(1.0, worksheet.lever_graphs_k2801, 0.002); end
  def test_lever_graphs_l2801; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2801, 0.002); end
  def test_lever_graphs_m2801; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2801, 0.002); end
  def test_lever_graphs_n2801; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2801, 0.002); end
  def test_lever_graphs_o2801; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2801, 0.002); end
  def test_lever_graphs_p2801; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2801, 0.002); end
  def test_lever_graphs_q2801; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2801, 0.002); end
  def test_lever_graphs_r2801; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2801, 0.002); end
  def test_lever_graphs_s2801; assert_in_delta(1.0, worksheet.lever_graphs_s2801, 0.002); end
  def test_lever_graphs_b2802; assert_in_epsilon(2.0, worksheet.lever_graphs_b2802, 0.002); end
  def test_lever_graphs_k2802; assert_in_delta(1.0, worksheet.lever_graphs_k2802, 0.002); end
  def test_lever_graphs_l2802; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2802, 0.002); end
  def test_lever_graphs_m2802; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2802, 0.002); end
  def test_lever_graphs_n2802; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2802, 0.002); end
  def test_lever_graphs_o2802; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2802, 0.002); end
  def test_lever_graphs_p2802; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2802, 0.002); end
  def test_lever_graphs_q2802; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2802, 0.002); end
  def test_lever_graphs_r2802; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2802, 0.002); end
  def test_lever_graphs_s2802; assert_in_delta(0.9, worksheet.lever_graphs_s2802, 0.002); end
  def test_lever_graphs_b2803; assert_in_epsilon(3.0, worksheet.lever_graphs_b2803, 0.002); end
  def test_lever_graphs_k2803; assert_in_delta(1.0, worksheet.lever_graphs_k2803, 0.002); end
  def test_lever_graphs_l2803; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2803, 0.002); end
  def test_lever_graphs_m2803; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2803, 0.002); end
  def test_lever_graphs_n2803; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2803, 0.002); end
  def test_lever_graphs_o2803; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2803, 0.002); end
  def test_lever_graphs_p2803; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2803, 0.002); end
  def test_lever_graphs_q2803; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2803, 0.002); end
  def test_lever_graphs_r2803; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2803, 0.002); end
  def test_lever_graphs_s2803; assert_in_delta(0.8, worksheet.lever_graphs_s2803, 0.002); end
  def test_lever_graphs_b2804; assert_in_epsilon(4.0, worksheet.lever_graphs_b2804, 0.002); end
  def test_lever_graphs_k2804; assert_in_delta(1.0, worksheet.lever_graphs_k2804, 0.002); end
  def test_lever_graphs_l2804; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2804, 0.002); end
  def test_lever_graphs_m2804; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2804, 0.002); end
  def test_lever_graphs_n2804; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2804, 0.002); end
  def test_lever_graphs_o2804; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2804, 0.002); end
  def test_lever_graphs_p2804; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2804, 0.002); end
  def test_lever_graphs_q2804; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2804, 0.002); end
  def test_lever_graphs_r2804; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2804, 0.002); end
  def test_lever_graphs_s2804; assert_in_delta(0.7, worksheet.lever_graphs_s2804, 0.002); end
  def test_lever_graphs_d2729; assert_equal("Title", worksheet.lever_graphs_d2729); end
  def test_lever_graphs_e2729; assert_equal("Steel", worksheet.lever_graphs_e2729); end
  def test_lever_graphs_f2729; assert_equal("Chemicals & petrochemicals", worksheet.lever_graphs_f2729); end
  def test_lever_graphs_g2729; assert_equal("Pulp & paper", worksheet.lever_graphs_g2729); end
  def test_lever_graphs_d2730; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2730, 0.002); end
  def test_lever_graphs_e2730; assert_in_delta(0.0, (worksheet.lever_graphs_e2730||0), 0.002); end
  def test_lever_graphs_f2730; assert_in_delta(0.0, (worksheet.lever_graphs_f2730||0), 0.002); end
  def test_lever_graphs_g2730; assert_in_delta(0.0, (worksheet.lever_graphs_g2730||0), 0.002); end
  def test_lever_graphs_d2731; assert_equal("2050: Level 1", worksheet.lever_graphs_d2731); end
  def test_lever_graphs_e2731; assert_in_delta(0.0, (worksheet.lever_graphs_e2731||0), 0.002); end
  def test_lever_graphs_f2731; assert_in_delta(0.07624999999999993, worksheet.lever_graphs_f2731, 0.002); end
  def test_lever_graphs_g2731; assert_in_delta(0.0, (worksheet.lever_graphs_g2731||0), 0.002); end
  def test_lever_graphs_d2732; assert_equal("2050: Level 2", worksheet.lever_graphs_d2732); end
  def test_lever_graphs_e2732; assert_in_delta(0.1549295774647888, worksheet.lever_graphs_e2732, 0.002); end
  def test_lever_graphs_f2732; assert_in_delta(0.15500000000000025, worksheet.lever_graphs_f2732, 0.002); end
  def test_lever_graphs_g2732; assert_in_delta(0.09090909090909091, worksheet.lever_graphs_g2732, 0.002); end
  def test_lever_graphs_d2733; assert_equal("2050: Level 3", worksheet.lever_graphs_d2733); end
  def test_lever_graphs_e2733; assert_in_delta(0.295774647887324, worksheet.lever_graphs_e2733, 0.002); end
  def test_lever_graphs_f2733; assert_in_delta(0.23624999999999985, worksheet.lever_graphs_f2733, 0.002); end
  def test_lever_graphs_g2733; assert_in_delta(0.2424242424242424, worksheet.lever_graphs_g2733, 0.002); end
  def test_lever_graphs_d2734; assert_equal("2050: Level 4", worksheet.lever_graphs_d2734); end
  def test_lever_graphs_e2734; assert_in_delta(0.647887323943662, worksheet.lever_graphs_e2734, 0.002); end
  def test_lever_graphs_f2734; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_f2734, 0.002); end
  def test_lever_graphs_g2734; assert_in_delta(0.3939393939393939, worksheet.lever_graphs_g2734, 0.002); end
  def test_lever_graphs_d2740; assert_equal("Title", worksheet.lever_graphs_d2740); end
  def test_lever_graphs_e2740; assert_equal("Aluminium", worksheet.lever_graphs_e2740); end
  def test_lever_graphs_d2741; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2741, 0.002); end
  def test_lever_graphs_e2741; assert_in_delta(0.0, (worksheet.lever_graphs_e2741||0), 0.002); end
  def test_lever_graphs_d2742; assert_equal("2050: Level 1", worksheet.lever_graphs_d2742); end
  def test_lever_graphs_e2742; assert_in_delta(-0.2857142857142857, worksheet.lever_graphs_e2742, 0.002); end
  def test_lever_graphs_d2743; assert_equal("2050: Level 2", worksheet.lever_graphs_d2743); end
  def test_lever_graphs_e2743; assert_in_delta(-0.2142857142857143, worksheet.lever_graphs_e2743, 0.002); end
  def test_lever_graphs_d2744; assert_equal("2050: Level 3", worksheet.lever_graphs_d2744); end
  def test_lever_graphs_e2744; assert_in_delta(-0.14285714285714282, worksheet.lever_graphs_e2744, 0.002); end
  def test_lever_graphs_d2745; assert_equal("2050: Level 4", worksheet.lever_graphs_d2745); end
  def test_lever_graphs_e2745; assert_in_delta(-0.07142857142857141, worksheet.lever_graphs_e2745, 0.002); end
  def test_lever_graphs_d2683; assert_equal("Title", worksheet.lever_graphs_d2683); end
  def test_lever_graphs_e2683; assert_equal("Global Oxygen steel technology", worksheet.lever_graphs_e2683); end
  def test_lever_graphs_f2683; assert_equal("Global Hisarna Oxygen steel technology", worksheet.lever_graphs_f2683); end
  def test_lever_graphs_g2683; assert_equal("Global Electric steel technology", worksheet.lever_graphs_g2683); end
  def test_lever_graphs_h2683; assert_equal("Global DRI Electric steel technology", worksheet.lever_graphs_h2683); end
  def test_lever_graphs_i2683; assert_equal("Global Alumina Aluminium technology", worksheet.lever_graphs_i2683); end
  def test_lever_graphs_j2683; assert_equal("Global Primary Aluminium technology", worksheet.lever_graphs_j2683); end
  def test_lever_graphs_k2683; assert_equal("Global Secondary Aluminium technology", worksheet.lever_graphs_k2683); end
  def test_lever_graphs_l2683; assert_equal("Global Chemicals: High Value Chemicals  technology", worksheet.lever_graphs_l2683); end
  def test_lever_graphs_m2683; assert_equal("Global Chemicals: Ammonia technology", worksheet.lever_graphs_m2683); end
  def test_lever_graphs_n2683; assert_equal("Global Chemicals: Methanol technology", worksheet.lever_graphs_n2683); end
  def test_lever_graphs_o2683; assert_equal("Global Chemicals: Others technology", worksheet.lever_graphs_o2683); end
  def test_lever_graphs_p2683; assert_equal("Global Pulp & paper: Pulp technology", worksheet.lever_graphs_p2683); end
  def test_lever_graphs_q2683; assert_equal("Global Pulp & paper: Virgin technology", worksheet.lever_graphs_q2683); end
  def test_lever_graphs_r2683; assert_equal("Global Pulp & paper: Recycled technology", worksheet.lever_graphs_r2683); end
  def test_lever_graphs_s2683; assert_equal("Global Cement technology", worksheet.lever_graphs_s2683); end
  def test_lever_graphs_t2683; assert_equal("Global Timber technology", worksheet.lever_graphs_t2683); end
  def test_lever_graphs_u2683; assert_equal("Global Other industries technology", worksheet.lever_graphs_u2683); end
  def test_lever_graphs_d2684; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2684, 0.002); end
  def test_lever_graphs_e2684; assert_in_delta(0.0, (worksheet.lever_graphs_e2684||0), 0.002); end
  def test_lever_graphs_f2684; assert_in_delta(0.0, (worksheet.lever_graphs_f2684||0), 0.002); end
  def test_lever_graphs_g2684; assert_in_delta(0.0, (worksheet.lever_graphs_g2684||0), 0.002); end
  def test_lever_graphs_h2684; assert_in_delta(0.0, (worksheet.lever_graphs_h2684||0), 0.002); end
  def test_lever_graphs_i2684; assert_in_delta(0.0, (worksheet.lever_graphs_i2684||0), 0.002); end
  def test_lever_graphs_j2684; assert_in_delta(0.0, (worksheet.lever_graphs_j2684||0), 0.002); end
  def test_lever_graphs_k2684; assert_in_delta(0.0, (worksheet.lever_graphs_k2684||0), 0.002); end
  def test_lever_graphs_l2684; assert_in_delta(0.0, (worksheet.lever_graphs_l2684||0), 0.002); end
  def test_lever_graphs_m2684; assert_in_delta(0.0, (worksheet.lever_graphs_m2684||0), 0.002); end
  def test_lever_graphs_n2684; assert_in_delta(0.0, (worksheet.lever_graphs_n2684||0), 0.002); end
  def test_lever_graphs_o2684; assert_in_delta(0.0, (worksheet.lever_graphs_o2684||0), 0.002); end
  def test_lever_graphs_p2684; assert_in_delta(0.0, (worksheet.lever_graphs_p2684||0), 0.002); end
  def test_lever_graphs_q2684; assert_in_delta(0.0, (worksheet.lever_graphs_q2684||0), 0.002); end
  def test_lever_graphs_r2684; assert_in_delta(0.0, (worksheet.lever_graphs_r2684||0), 0.002); end
  def test_lever_graphs_s2684; assert_in_delta(0.0, (worksheet.lever_graphs_s2684||0), 0.002); end
  def test_lever_graphs_t2684; assert_in_delta(0.0, (worksheet.lever_graphs_t2684||0), 0.002); end
  def test_lever_graphs_u2684; assert_in_delta(0.0, (worksheet.lever_graphs_u2684||0), 0.002); end
  def test_lever_graphs_d2685; assert_equal("2050: Level 1", worksheet.lever_graphs_d2685); end
  def test_lever_graphs_e2685; assert_in_delta(0.0, (worksheet.lever_graphs_e2685||0), 0.002); end
  def test_lever_graphs_f2685; assert_in_delta(0.0, (worksheet.lever_graphs_f2685||0), 0.002); end
  def test_lever_graphs_g2685; assert_in_delta(0.0, (worksheet.lever_graphs_g2685||0), 0.002); end
  def test_lever_graphs_h2685; assert_in_delta(0.0, (worksheet.lever_graphs_h2685||0), 0.002); end
  def test_lever_graphs_i2685; assert_in_delta(0.0, (worksheet.lever_graphs_i2685||0), 0.002); end
  def test_lever_graphs_j2685; assert_in_delta(0.0, (worksheet.lever_graphs_j2685||0), 0.002); end
  def test_lever_graphs_k2685; assert_in_delta(0.0, (worksheet.lever_graphs_k2685||0), 0.002); end
  def test_lever_graphs_l2685; assert_in_delta(0.0, (worksheet.lever_graphs_l2685||0), 0.002); end
  def test_lever_graphs_m2685; assert_in_delta(0.0, (worksheet.lever_graphs_m2685||0), 0.002); end
  def test_lever_graphs_n2685; assert_in_delta(0.0, (worksheet.lever_graphs_n2685||0), 0.002); end
  def test_lever_graphs_o2685; assert_in_delta(0.0, (worksheet.lever_graphs_o2685||0), 0.002); end
  def test_lever_graphs_p2685; assert_in_delta(0.0, (worksheet.lever_graphs_p2685||0), 0.002); end
  def test_lever_graphs_q2685; assert_in_delta(0.0, (worksheet.lever_graphs_q2685||0), 0.002); end
  def test_lever_graphs_r2685; assert_in_delta(0.0, (worksheet.lever_graphs_r2685||0), 0.002); end
  def test_lever_graphs_s2685; assert_in_delta(0.05, worksheet.lever_graphs_s2685, 0.002); end
  def test_lever_graphs_t2685; assert_in_delta(0.0, (worksheet.lever_graphs_t2685||0), 0.002); end
  def test_lever_graphs_u2685; assert_in_delta(0.0, (worksheet.lever_graphs_u2685||0), 0.002); end
  def test_lever_graphs_d2686; assert_equal("2050: Level 2", worksheet.lever_graphs_d2686); end
  def test_lever_graphs_e2686; assert_in_delta(0.05, worksheet.lever_graphs_e2686, 0.002); end
  def test_lever_graphs_f2686; assert_in_delta(0.0, (worksheet.lever_graphs_f2686||0), 0.002); end
  def test_lever_graphs_g2686; assert_in_delta(0.0, (worksheet.lever_graphs_g2686||0), 0.002); end
  def test_lever_graphs_h2686; assert_in_delta(0.0, (worksheet.lever_graphs_h2686||0), 0.002); end
  def test_lever_graphs_i2686; assert_in_delta(0.025, worksheet.lever_graphs_i2686, 0.002); end
  def test_lever_graphs_j2686; assert_in_delta(0.025, worksheet.lever_graphs_j2686, 0.002); end
  def test_lever_graphs_k2686; assert_in_delta(0.025, worksheet.lever_graphs_k2686, 0.002); end
  def test_lever_graphs_l2686; assert_in_delta(0.05, worksheet.lever_graphs_l2686, 0.002); end
  def test_lever_graphs_m2686; assert_in_delta(0.075, worksheet.lever_graphs_m2686, 0.002); end
  def test_lever_graphs_n2686; assert_in_delta(0.075, worksheet.lever_graphs_n2686, 0.002); end
  def test_lever_graphs_o2686; assert_in_delta(0.05, worksheet.lever_graphs_o2686, 0.002); end
  def test_lever_graphs_p2686; assert_in_delta(0.2, worksheet.lever_graphs_p2686, 0.002); end
  def test_lever_graphs_q2686; assert_in_delta(0.2, worksheet.lever_graphs_q2686, 0.002); end
  def test_lever_graphs_r2686; assert_in_delta(0.2, worksheet.lever_graphs_r2686, 0.002); end
  def test_lever_graphs_s2686; assert_in_delta(0.09, worksheet.lever_graphs_s2686, 0.002); end
  def test_lever_graphs_t2686; assert_in_delta(0.2, worksheet.lever_graphs_t2686, 0.002); end
  def test_lever_graphs_u2686; assert_in_delta(0.0, (worksheet.lever_graphs_u2686||0), 0.002); end
  def test_lever_graphs_d2687; assert_equal("2050: Level 3", worksheet.lever_graphs_d2687); end
  def test_lever_graphs_e2687; assert_in_delta(0.07, worksheet.lever_graphs_e2687, 0.002); end
  def test_lever_graphs_f2687; assert_in_delta(0.0, (worksheet.lever_graphs_f2687||0), 0.002); end
  def test_lever_graphs_g2687; assert_in_delta(0.0, (worksheet.lever_graphs_g2687||0), 0.002); end
  def test_lever_graphs_h2687; assert_in_delta(0.0, (worksheet.lever_graphs_h2687||0), 0.002); end
  def test_lever_graphs_i2687; assert_in_delta(0.05, worksheet.lever_graphs_i2687, 0.002); end
  def test_lever_graphs_j2687; assert_in_delta(0.05, worksheet.lever_graphs_j2687, 0.002); end
  def test_lever_graphs_k2687; assert_in_delta(0.05, worksheet.lever_graphs_k2687, 0.002); end
  def test_lever_graphs_l2687; assert_in_delta(0.1, worksheet.lever_graphs_l2687, 0.002); end
  def test_lever_graphs_m2687; assert_in_delta(0.15, worksheet.lever_graphs_m2687, 0.002); end
  def test_lever_graphs_n2687; assert_in_delta(0.15, worksheet.lever_graphs_n2687, 0.002); end
  def test_lever_graphs_o2687; assert_in_delta(0.1, worksheet.lever_graphs_o2687, 0.002); end
  def test_lever_graphs_p2687; assert_in_delta(0.3, worksheet.lever_graphs_p2687, 0.002); end
  def test_lever_graphs_q2687; assert_in_delta(0.3, worksheet.lever_graphs_q2687, 0.002); end
  def test_lever_graphs_r2687; assert_in_delta(0.3, worksheet.lever_graphs_r2687, 0.002); end
  def test_lever_graphs_s2687; assert_in_delta(0.18, worksheet.lever_graphs_s2687, 0.002); end
  def test_lever_graphs_t2687; assert_in_delta(0.3, worksheet.lever_graphs_t2687, 0.002); end
  def test_lever_graphs_u2687; assert_in_delta(0.0, (worksheet.lever_graphs_u2687||0), 0.002); end
  def test_lever_graphs_d2688; assert_equal("2050: Level 4", worksheet.lever_graphs_d2688); end
  def test_lever_graphs_e2688; assert_in_delta(0.1, worksheet.lever_graphs_e2688, 0.002); end
  def test_lever_graphs_f2688; assert_in_delta(0.0, (worksheet.lever_graphs_f2688||0), 0.002); end
  def test_lever_graphs_g2688; assert_in_delta(0.0, (worksheet.lever_graphs_g2688||0), 0.002); end
  def test_lever_graphs_h2688; assert_in_delta(0.0, (worksheet.lever_graphs_h2688||0), 0.002); end
  def test_lever_graphs_i2688; assert_in_delta(0.1, worksheet.lever_graphs_i2688, 0.002); end
  def test_lever_graphs_j2688; assert_in_delta(0.1, worksheet.lever_graphs_j2688, 0.002); end
  def test_lever_graphs_k2688; assert_in_delta(0.1, worksheet.lever_graphs_k2688, 0.002); end
  def test_lever_graphs_l2688; assert_in_delta(0.2, worksheet.lever_graphs_l2688, 0.002); end
  def test_lever_graphs_m2688; assert_in_delta(0.3, worksheet.lever_graphs_m2688, 0.002); end
  def test_lever_graphs_n2688; assert_in_delta(0.3, worksheet.lever_graphs_n2688, 0.002); end
  def test_lever_graphs_o2688; assert_in_delta(0.2, worksheet.lever_graphs_o2688, 0.002); end
  def test_lever_graphs_p2688; assert_in_delta(0.4, worksheet.lever_graphs_p2688, 0.002); end
  def test_lever_graphs_q2688; assert_in_delta(0.4, worksheet.lever_graphs_q2688, 0.002); end
  def test_lever_graphs_r2688; assert_in_delta(0.4, worksheet.lever_graphs_r2688, 0.002); end
  def test_lever_graphs_s2688; assert_in_delta(0.3, worksheet.lever_graphs_s2688, 0.002); end
  def test_lever_graphs_t2688; assert_in_delta(0.4, worksheet.lever_graphs_t2688, 0.002); end
  def test_lever_graphs_u2688; assert_in_delta(0.0, (worksheet.lever_graphs_u2688||0), 0.002); end
  def test_lever_graphs_c2789; assert_equal("1975", worksheet.lever_graphs_c2789); end
  def test_lever_graphs_d2789; assert_equal("1980", worksheet.lever_graphs_d2789); end
  def test_lever_graphs_e2789; assert_equal("1985", worksheet.lever_graphs_e2789); end
  def test_lever_graphs_f2789; assert_equal("1990", worksheet.lever_graphs_f2789); end
  def test_lever_graphs_g2789; assert_equal("1995", worksheet.lever_graphs_g2789); end
  def test_lever_graphs_h2789; assert_equal("2000", worksheet.lever_graphs_h2789); end
  def test_lever_graphs_i2789; assert_equal("2005", worksheet.lever_graphs_i2789); end
  def test_lever_graphs_j2789; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2789, 0.002); end
  def test_lever_graphs_k2789; assert_equal("2011", worksheet.lever_graphs_k2789); end
  def test_lever_graphs_l2789; assert_equal("2015", worksheet.lever_graphs_l2789); end
  def test_lever_graphs_m2789; assert_equal("2020", worksheet.lever_graphs_m2789); end
  def test_lever_graphs_n2789; assert_equal("2025", worksheet.lever_graphs_n2789); end
  def test_lever_graphs_o2789; assert_equal("2030", worksheet.lever_graphs_o2789); end
  def test_lever_graphs_p2789; assert_equal("2035", worksheet.lever_graphs_p2789); end
  def test_lever_graphs_q2789; assert_equal("2040", worksheet.lever_graphs_q2789); end
  def test_lever_graphs_r2789; assert_equal("2045", worksheet.lever_graphs_r2789); end
  def test_lever_graphs_s2789; assert_equal("2050", worksheet.lever_graphs_s2789); end
  def test_lever_graphs_b2790; assert_equal("Historic data", worksheet.lever_graphs_b2790); end
  def test_lever_graphs_b2791; assert_in_delta(1.0, worksheet.lever_graphs_b2791, 0.002); end
  def test_lever_graphs_k2791; assert_in_delta(0.0, (worksheet.lever_graphs_k2791||0), 0.002); end
  def test_lever_graphs_l2791; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2791, 0.002); end
  def test_lever_graphs_m2791; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_m2791, 0.002); end
  def test_lever_graphs_n2791; assert_in_delta(0.0018315018315018315, worksheet.lever_graphs_n2791, 0.002); end
  def test_lever_graphs_o2791; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_o2791, 0.002); end
  def test_lever_graphs_p2791; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_p2791, 0.002); end
  def test_lever_graphs_q2791; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_q2791, 0.002); end
  def test_lever_graphs_r2791; assert_in_delta(0.0003663003663003663, worksheet.lever_graphs_r2791, 0.002); end
  def test_lever_graphs_s2791; assert_in_delta(0.0, (worksheet.lever_graphs_s2791||0), 0.002); end
  def test_lever_graphs_b2792; assert_in_epsilon(2.0, worksheet.lever_graphs_b2792, 0.002); end
  def test_lever_graphs_k2792; assert_in_delta(0.0, (worksheet.lever_graphs_k2792||0), 0.002); end
  def test_lever_graphs_l2792; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2792, 0.002); end
  def test_lever_graphs_m2792; assert_in_delta(0.0057692307692307696, worksheet.lever_graphs_m2792, 0.002); end
  def test_lever_graphs_n2792; assert_in_delta(0.008974358974358974, worksheet.lever_graphs_n2792, 0.002); end
  def test_lever_graphs_o2792; assert_in_delta(0.01217948717948718, worksheet.lever_graphs_o2792, 0.002); end
  def test_lever_graphs_p2792; assert_in_delta(0.015384615384615384, worksheet.lever_graphs_p2792, 0.002); end
  def test_lever_graphs_q2792; assert_in_delta(0.01858974358974359, worksheet.lever_graphs_q2792, 0.002); end
  def test_lever_graphs_r2792; assert_in_delta(0.021794871794871797, worksheet.lever_graphs_r2792, 0.002); end
  def test_lever_graphs_s2792; assert_in_delta(0.025, worksheet.lever_graphs_s2792, 0.002); end
  def test_lever_graphs_b2793; assert_in_epsilon(3.0, worksheet.lever_graphs_b2793, 0.002); end
  def test_lever_graphs_k2793; assert_in_delta(0.0, (worksheet.lever_graphs_k2793||0), 0.002); end
  def test_lever_graphs_l2793; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2793, 0.002); end
  def test_lever_graphs_m2793; assert_in_delta(0.009340659340659342, worksheet.lever_graphs_m2793, 0.002); end
  def test_lever_graphs_n2793; assert_in_delta(0.01611721611721612, worksheet.lever_graphs_n2793, 0.002); end
  def test_lever_graphs_o2793; assert_in_delta(0.0228937728937729, worksheet.lever_graphs_o2793, 0.002); end
  def test_lever_graphs_p2793; assert_in_delta(0.029670329670329676, worksheet.lever_graphs_p2793, 0.002); end
  def test_lever_graphs_q2793; assert_in_delta(0.03644688644688645, worksheet.lever_graphs_q2793, 0.002); end
  def test_lever_graphs_r2793; assert_in_delta(0.04322344322344323, worksheet.lever_graphs_r2793, 0.002); end
  def test_lever_graphs_s2793; assert_in_delta(0.05, worksheet.lever_graphs_s2793, 0.002); end
  def test_lever_graphs_b2794; assert_in_epsilon(4.0, worksheet.lever_graphs_b2794, 0.002); end
  def test_lever_graphs_k2794; assert_in_delta(0.0, (worksheet.lever_graphs_k2794||0), 0.002); end
  def test_lever_graphs_l2794; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2794, 0.002); end
  def test_lever_graphs_m2794; assert_in_delta(0.016483516483516484, worksheet.lever_graphs_m2794, 0.002); end
  def test_lever_graphs_n2794; assert_in_delta(0.030402930402930402, worksheet.lever_graphs_n2794, 0.002); end
  def test_lever_graphs_o2794; assert_in_delta(0.04432234432234432, worksheet.lever_graphs_o2794, 0.002); end
  def test_lever_graphs_p2794; assert_in_delta(0.058241758241758236, worksheet.lever_graphs_p2794, 0.002); end
  def test_lever_graphs_q2794; assert_in_delta(0.07216117216117217, worksheet.lever_graphs_q2794, 0.002); end
  def test_lever_graphs_r2794; assert_in_delta(0.08608058608058608, worksheet.lever_graphs_r2794, 0.002); end
  def test_lever_graphs_s2794; assert_in_delta(0.1, worksheet.lever_graphs_s2794, 0.002); end
  def test_lever_graphs_c2817; assert_equal("1975", worksheet.lever_graphs_c2817); end
  def test_lever_graphs_d2817; assert_equal("1980", worksheet.lever_graphs_d2817); end
  def test_lever_graphs_e2817; assert_equal("1985", worksheet.lever_graphs_e2817); end
  def test_lever_graphs_f2817; assert_equal("1990", worksheet.lever_graphs_f2817); end
  def test_lever_graphs_g2817; assert_equal("1995", worksheet.lever_graphs_g2817); end
  def test_lever_graphs_h2817; assert_equal("2000", worksheet.lever_graphs_h2817); end
  def test_lever_graphs_i2817; assert_equal("2005", worksheet.lever_graphs_i2817); end
  def test_lever_graphs_j2817; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2817, 0.002); end
  def test_lever_graphs_k2817; assert_equal("2011", worksheet.lever_graphs_k2817); end
  def test_lever_graphs_l2817; assert_equal("2015", worksheet.lever_graphs_l2817); end
  def test_lever_graphs_m2817; assert_equal("2020", worksheet.lever_graphs_m2817); end
  def test_lever_graphs_n2817; assert_equal("2025", worksheet.lever_graphs_n2817); end
  def test_lever_graphs_o2817; assert_equal("2030", worksheet.lever_graphs_o2817); end
  def test_lever_graphs_p2817; assert_equal("2035", worksheet.lever_graphs_p2817); end
  def test_lever_graphs_q2817; assert_equal("2040", worksheet.lever_graphs_q2817); end
  def test_lever_graphs_r2817; assert_equal("2045", worksheet.lever_graphs_r2817); end
  def test_lever_graphs_s2817; assert_equal("2050", worksheet.lever_graphs_s2817); end
  def test_lever_graphs_b2818; assert_equal("Historic data", worksheet.lever_graphs_b2818); end
  def test_lever_graphs_b2819; assert_in_delta(1.0, worksheet.lever_graphs_b2819, 0.002); end
  def test_lever_graphs_k2819; assert_in_delta(0.0, (worksheet.lever_graphs_k2819||0), 0.002); end
  def test_lever_graphs_l2819; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2819, 0.002); end
  def test_lever_graphs_m2819; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2819, 0.002); end
  def test_lever_graphs_n2819; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2819, 0.002); end
  def test_lever_graphs_o2819; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2819, 0.002); end
  def test_lever_graphs_p2819; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2819, 0.002); end
  def test_lever_graphs_q2819; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2819, 0.002); end
  def test_lever_graphs_r2819; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2819, 0.002); end
  def test_lever_graphs_s2819; assert_in_delta(0.0, (worksheet.lever_graphs_s2819||0), 0.002); end
  def test_lever_graphs_b2820; assert_in_epsilon(2.0, worksheet.lever_graphs_b2820, 0.002); end
  def test_lever_graphs_k2820; assert_in_delta(0.0, (worksheet.lever_graphs_k2820||0), 0.002); end
  def test_lever_graphs_l2820; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2820, 0.002); end
  def test_lever_graphs_m2820; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2820, 0.002); end
  def test_lever_graphs_n2820; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2820, 0.002); end
  def test_lever_graphs_o2820; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2820, 0.002); end
  def test_lever_graphs_p2820; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2820, 0.002); end
  def test_lever_graphs_q2820; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2820, 0.002); end
  def test_lever_graphs_r2820; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2820, 0.002); end
  def test_lever_graphs_s2820; assert_in_delta(0.05, worksheet.lever_graphs_s2820, 0.002); end
  def test_lever_graphs_b2821; assert_in_epsilon(3.0, worksheet.lever_graphs_b2821, 0.002); end
  def test_lever_graphs_k2821; assert_in_delta(0.0, (worksheet.lever_graphs_k2821||0), 0.002); end
  def test_lever_graphs_l2821; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2821, 0.002); end
  def test_lever_graphs_m2821; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2821, 0.002); end
  def test_lever_graphs_n2821; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2821, 0.002); end
  def test_lever_graphs_o2821; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2821, 0.002); end
  def test_lever_graphs_p2821; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2821, 0.002); end
  def test_lever_graphs_q2821; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2821, 0.002); end
  def test_lever_graphs_r2821; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2821, 0.002); end
  def test_lever_graphs_s2821; assert_in_delta(0.1, worksheet.lever_graphs_s2821, 0.002); end
  def test_lever_graphs_b2822; assert_in_epsilon(4.0, worksheet.lever_graphs_b2822, 0.002); end
  def test_lever_graphs_k2822; assert_in_delta(0.0, (worksheet.lever_graphs_k2822||0), 0.002); end
  def test_lever_graphs_l2822; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2822, 0.002); end
  def test_lever_graphs_m2822; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2822, 0.002); end
  def test_lever_graphs_n2822; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2822, 0.002); end
  def test_lever_graphs_o2822; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2822, 0.002); end
  def test_lever_graphs_p2822; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2822, 0.002); end
  def test_lever_graphs_q2822; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2822, 0.002); end
  def test_lever_graphs_r2822; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2822, 0.002); end
  def test_lever_graphs_s2822; assert_in_delta(0.2, worksheet.lever_graphs_s2822, 0.002); end
  def test_lever_graphs_c2855; assert_equal("1975", worksheet.lever_graphs_c2855); end
  def test_lever_graphs_d2855; assert_equal("1980", worksheet.lever_graphs_d2855); end
  def test_lever_graphs_e2855; assert_equal("1985", worksheet.lever_graphs_e2855); end
  def test_lever_graphs_f2855; assert_equal("1990", worksheet.lever_graphs_f2855); end
  def test_lever_graphs_g2855; assert_equal("1995", worksheet.lever_graphs_g2855); end
  def test_lever_graphs_h2855; assert_equal("2000", worksheet.lever_graphs_h2855); end
  def test_lever_graphs_i2855; assert_equal("2005", worksheet.lever_graphs_i2855); end
  def test_lever_graphs_j2855; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2855, 0.002); end
  def test_lever_graphs_k2855; assert_equal("2011", worksheet.lever_graphs_k2855); end
  def test_lever_graphs_l2855; assert_equal("2015", worksheet.lever_graphs_l2855); end
  def test_lever_graphs_m2855; assert_equal("2020", worksheet.lever_graphs_m2855); end
  def test_lever_graphs_n2855; assert_equal("2025", worksheet.lever_graphs_n2855); end
  def test_lever_graphs_o2855; assert_equal("2030", worksheet.lever_graphs_o2855); end
  def test_lever_graphs_p2855; assert_equal("2035", worksheet.lever_graphs_p2855); end
  def test_lever_graphs_q2855; assert_equal("2040", worksheet.lever_graphs_q2855); end
  def test_lever_graphs_r2855; assert_equal("2045", worksheet.lever_graphs_r2855); end
  def test_lever_graphs_s2855; assert_equal("2050", worksheet.lever_graphs_s2855); end
  def test_lever_graphs_b2856; assert_equal("Historic data", worksheet.lever_graphs_b2856); end
  def test_lever_graphs_b2857; assert_in_delta(1.0, worksheet.lever_graphs_b2857, 0.002); end
  def test_lever_graphs_k2857; assert_in_delta(0.0, (worksheet.lever_graphs_k2857||0), 0.002); end
  def test_lever_graphs_l2857; assert_in_delta(0.0, (worksheet.lever_graphs_l2857||0), 0.002); end
  def test_lever_graphs_m2857; assert_in_delta(0.0, (worksheet.lever_graphs_m2857||0), 0.002); end
  def test_lever_graphs_n2857; assert_in_delta(0.0, (worksheet.lever_graphs_n2857||0), 0.002); end
  def test_lever_graphs_o2857; assert_in_delta(0.0, (worksheet.lever_graphs_o2857||0), 0.002); end
  def test_lever_graphs_p2857; assert_in_delta(0.0, (worksheet.lever_graphs_p2857||0), 0.002); end
  def test_lever_graphs_q2857; assert_in_delta(0.0, (worksheet.lever_graphs_q2857||0), 0.002); end
  def test_lever_graphs_r2857; assert_in_delta(0.0, (worksheet.lever_graphs_r2857||0), 0.002); end
  def test_lever_graphs_s2857; assert_in_delta(0.0, (worksheet.lever_graphs_s2857||0), 0.002); end
  def test_lever_graphs_b2858; assert_in_epsilon(2.0, worksheet.lever_graphs_b2858, 0.002); end
  def test_lever_graphs_k2858; assert_in_delta(0.0, (worksheet.lever_graphs_k2858||0), 0.002); end
  def test_lever_graphs_l2858; assert_in_delta(0.0, (worksheet.lever_graphs_l2858||0), 0.002); end
  def test_lever_graphs_m2858; assert_in_delta(0.0, (worksheet.lever_graphs_m2858||0), 0.002); end
  def test_lever_graphs_n2858; assert_in_delta(0.0, (worksheet.lever_graphs_n2858||0), 0.002); end
  def test_lever_graphs_o2858; assert_in_delta(0.0, (worksheet.lever_graphs_o2858||0), 0.002); end
  def test_lever_graphs_p2858; assert_in_delta(0.0, (worksheet.lever_graphs_p2858||0), 0.002); end
  def test_lever_graphs_q2858; assert_in_delta(0.0, (worksheet.lever_graphs_q2858||0), 0.002); end
  def test_lever_graphs_r2858; assert_in_delta(0.0, (worksheet.lever_graphs_r2858||0), 0.002); end
  def test_lever_graphs_s2858; assert_in_delta(0.0, (worksheet.lever_graphs_s2858||0), 0.002); end
  def test_lever_graphs_b2859; assert_in_epsilon(3.0, worksheet.lever_graphs_b2859, 0.002); end
  def test_lever_graphs_k2859; assert_in_delta(0.0, (worksheet.lever_graphs_k2859||0), 0.002); end
  def test_lever_graphs_l2859; assert_in_delta(0.0, (worksheet.lever_graphs_l2859||0), 0.002); end
  def test_lever_graphs_m2859; assert_in_delta(0.0, (worksheet.lever_graphs_m2859||0), 0.002); end
  def test_lever_graphs_n2859; assert_in_delta(0.0, (worksheet.lever_graphs_n2859||0), 0.002); end
  def test_lever_graphs_o2859; assert_in_delta(0.0, (worksheet.lever_graphs_o2859||0), 0.002); end
  def test_lever_graphs_p2859; assert_in_delta(0.0, (worksheet.lever_graphs_p2859||0), 0.002); end
  def test_lever_graphs_q2859; assert_in_delta(0.0, (worksheet.lever_graphs_q2859||0), 0.002); end
  def test_lever_graphs_r2859; assert_in_delta(0.0, (worksheet.lever_graphs_r2859||0), 0.002); end
  def test_lever_graphs_s2859; assert_in_delta(0.0, (worksheet.lever_graphs_s2859||0), 0.002); end
  def test_lever_graphs_b2860; assert_in_epsilon(4.0, worksheet.lever_graphs_b2860, 0.002); end
  def test_lever_graphs_k2860; assert_in_delta(0.0, (worksheet.lever_graphs_k2860||0), 0.002); end
  def test_lever_graphs_l2860; assert_in_delta(0.0, (worksheet.lever_graphs_l2860||0), 0.002); end
  def test_lever_graphs_m2860; assert_in_delta(0.0, (worksheet.lever_graphs_m2860||0), 0.002); end
  def test_lever_graphs_n2860; assert_in_delta(0.0, (worksheet.lever_graphs_n2860||0), 0.002); end
  def test_lever_graphs_o2860; assert_in_delta(0.0, (worksheet.lever_graphs_o2860||0), 0.002); end
  def test_lever_graphs_p2860; assert_in_delta(0.0, (worksheet.lever_graphs_p2860||0), 0.002); end
  def test_lever_graphs_q2860; assert_in_delta(0.0, (worksheet.lever_graphs_q2860||0), 0.002); end
  def test_lever_graphs_r2860; assert_in_delta(0.0, (worksheet.lever_graphs_r2860||0), 0.002); end
  def test_lever_graphs_s2860; assert_in_delta(0.0, (worksheet.lever_graphs_s2860||0), 0.002); end
  def test_lever_graphs_c2845; assert_equal("1975", worksheet.lever_graphs_c2845); end
  def test_lever_graphs_d2845; assert_equal("1980", worksheet.lever_graphs_d2845); end
  def test_lever_graphs_e2845; assert_equal("1985", worksheet.lever_graphs_e2845); end
  def test_lever_graphs_f2845; assert_equal("1990", worksheet.lever_graphs_f2845); end
  def test_lever_graphs_g2845; assert_equal("1995", worksheet.lever_graphs_g2845); end
  def test_lever_graphs_h2845; assert_equal("2000", worksheet.lever_graphs_h2845); end
  def test_lever_graphs_i2845; assert_equal("2005", worksheet.lever_graphs_i2845); end
  def test_lever_graphs_j2845; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2845, 0.002); end
  def test_lever_graphs_k2845; assert_equal("2011", worksheet.lever_graphs_k2845); end
  def test_lever_graphs_l2845; assert_equal("2015", worksheet.lever_graphs_l2845); end
  def test_lever_graphs_m2845; assert_equal("2020", worksheet.lever_graphs_m2845); end
  def test_lever_graphs_n2845; assert_equal("2025", worksheet.lever_graphs_n2845); end
  def test_lever_graphs_o2845; assert_equal("2030", worksheet.lever_graphs_o2845); end
  def test_lever_graphs_p2845; assert_equal("2035", worksheet.lever_graphs_p2845); end
  def test_lever_graphs_q2845; assert_equal("2040", worksheet.lever_graphs_q2845); end
  def test_lever_graphs_r2845; assert_equal("2045", worksheet.lever_graphs_r2845); end
  def test_lever_graphs_s2845; assert_equal("2050", worksheet.lever_graphs_s2845); end
  def test_lever_graphs_b2846; assert_equal("Historic data", worksheet.lever_graphs_b2846); end
  def test_lever_graphs_b2847; assert_in_delta(1.0, worksheet.lever_graphs_b2847, 0.002); end
  def test_lever_graphs_k2847; assert_in_delta(0.0, (worksheet.lever_graphs_k2847||0), 0.002); end
  def test_lever_graphs_l2847; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2847, 0.002); end
  def test_lever_graphs_m2847; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2847, 0.002); end
  def test_lever_graphs_n2847; assert_in_delta(0.014652014652014652, worksheet.lever_graphs_n2847, 0.002); end
  def test_lever_graphs_o2847; assert_in_delta(0.011721611721611722, worksheet.lever_graphs_o2847, 0.002); end
  def test_lever_graphs_p2847; assert_in_delta(0.008791208791208791, worksheet.lever_graphs_p2847, 0.002); end
  def test_lever_graphs_q2847; assert_in_delta(0.005860805860805861, worksheet.lever_graphs_q2847, 0.002); end
  def test_lever_graphs_r2847; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_r2847, 0.002); end
  def test_lever_graphs_s2847; assert_in_delta(0.0, (worksheet.lever_graphs_s2847||0), 0.002); end
  def test_lever_graphs_b2848; assert_in_epsilon(2.0, worksheet.lever_graphs_b2848, 0.002); end
  def test_lever_graphs_k2848; assert_in_delta(0.0, (worksheet.lever_graphs_k2848||0), 0.002); end
  def test_lever_graphs_l2848; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2848, 0.002); end
  def test_lever_graphs_m2848; assert_in_delta(0.046153846153846156, worksheet.lever_graphs_m2848, 0.002); end
  def test_lever_graphs_n2848; assert_in_delta(0.07179487179487179, worksheet.lever_graphs_n2848, 0.002); end
  def test_lever_graphs_o2848; assert_in_delta(0.09743589743589744, worksheet.lever_graphs_o2848, 0.002); end
  def test_lever_graphs_p2848; assert_in_delta(0.12307692307692307, worksheet.lever_graphs_p2848, 0.002); end
  def test_lever_graphs_q2848; assert_in_delta(0.14871794871794872, worksheet.lever_graphs_q2848, 0.002); end
  def test_lever_graphs_r2848; assert_in_delta(0.17435897435897438, worksheet.lever_graphs_r2848, 0.002); end
  def test_lever_graphs_s2848; assert_in_delta(0.2, worksheet.lever_graphs_s2848, 0.002); end
  def test_lever_graphs_b2849; assert_in_epsilon(3.0, worksheet.lever_graphs_b2849, 0.002); end
  def test_lever_graphs_k2849; assert_in_delta(0.0, (worksheet.lever_graphs_k2849||0), 0.002); end
  def test_lever_graphs_l2849; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2849, 0.002); end
  def test_lever_graphs_m2849; assert_in_delta(0.06043956043956045, worksheet.lever_graphs_m2849, 0.002); end
  def test_lever_graphs_n2849; assert_in_delta(0.10036630036630037, worksheet.lever_graphs_n2849, 0.002); end
  def test_lever_graphs_o2849; assert_in_delta(0.1402930402930403, worksheet.lever_graphs_o2849, 0.002); end
  def test_lever_graphs_p2849; assert_in_delta(0.18021978021978025, worksheet.lever_graphs_p2849, 0.002); end
  def test_lever_graphs_q2849; assert_in_delta(0.22014652014652017, worksheet.lever_graphs_q2849, 0.002); end
  def test_lever_graphs_r2849; assert_in_delta(0.2600732600732601, worksheet.lever_graphs_r2849, 0.002); end
  def test_lever_graphs_s2849; assert_in_delta(0.3, worksheet.lever_graphs_s2849, 0.002); end
  def test_lever_graphs_b2850; assert_in_epsilon(4.0, worksheet.lever_graphs_b2850, 0.002); end
  def test_lever_graphs_k2850; assert_in_delta(0.0, (worksheet.lever_graphs_k2850||0), 0.002); end
  def test_lever_graphs_l2850; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2850, 0.002); end
  def test_lever_graphs_m2850; assert_in_delta(0.07472527472527474, worksheet.lever_graphs_m2850, 0.002); end
  def test_lever_graphs_n2850; assert_in_delta(0.12893772893772895, worksheet.lever_graphs_n2850, 0.002); end
  def test_lever_graphs_o2850; assert_in_delta(0.1831501831501832, worksheet.lever_graphs_o2850, 0.002); end
  def test_lever_graphs_p2850; assert_in_delta(0.2373626373626374, worksheet.lever_graphs_p2850, 0.002); end
  def test_lever_graphs_q2850; assert_in_delta(0.2915750915750916, worksheet.lever_graphs_q2850, 0.002); end
  def test_lever_graphs_r2850; assert_in_delta(0.34578754578754584, worksheet.lever_graphs_r2850, 0.002); end
  def test_lever_graphs_s2850; assert_in_delta(0.4, worksheet.lever_graphs_s2850, 0.002); end
  def test_lever_graphs_c2779; assert_equal("1975", worksheet.lever_graphs_c2779); end
  def test_lever_graphs_d2779; assert_equal("1980", worksheet.lever_graphs_d2779); end
  def test_lever_graphs_e2779; assert_equal("1985", worksheet.lever_graphs_e2779); end
  def test_lever_graphs_f2779; assert_equal("1990", worksheet.lever_graphs_f2779); end
  def test_lever_graphs_g2779; assert_equal("1995", worksheet.lever_graphs_g2779); end
  def test_lever_graphs_h2779; assert_equal("2000", worksheet.lever_graphs_h2779); end
  def test_lever_graphs_i2779; assert_equal("2005", worksheet.lever_graphs_i2779); end
  def test_lever_graphs_j2779; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2779, 0.002); end
  def test_lever_graphs_k2779; assert_equal("2011", worksheet.lever_graphs_k2779); end
  def test_lever_graphs_l2779; assert_equal("2015", worksheet.lever_graphs_l2779); end
  def test_lever_graphs_m2779; assert_equal("2020", worksheet.lever_graphs_m2779); end
  def test_lever_graphs_n2779; assert_equal("2025", worksheet.lever_graphs_n2779); end
  def test_lever_graphs_o2779; assert_equal("2030", worksheet.lever_graphs_o2779); end
  def test_lever_graphs_p2779; assert_equal("2035", worksheet.lever_graphs_p2779); end
  def test_lever_graphs_q2779; assert_equal("2040", worksheet.lever_graphs_q2779); end
  def test_lever_graphs_r2779; assert_equal("2045", worksheet.lever_graphs_r2779); end
  def test_lever_graphs_s2779; assert_equal("2050", worksheet.lever_graphs_s2779); end
  def test_lever_graphs_b2780; assert_equal("Historic data", worksheet.lever_graphs_b2780); end
  def test_lever_graphs_b2781; assert_in_delta(1.0, worksheet.lever_graphs_b2781, 0.002); end
  def test_lever_graphs_k2781; assert_in_delta(0.0, (worksheet.lever_graphs_k2781||0), 0.002); end
  def test_lever_graphs_l2781; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2781, 0.002); end
  def test_lever_graphs_m2781; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2781, 0.002); end
  def test_lever_graphs_n2781; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2781, 0.002); end
  def test_lever_graphs_o2781; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2781, 0.002); end
  def test_lever_graphs_p2781; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2781, 0.002); end
  def test_lever_graphs_q2781; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2781, 0.002); end
  def test_lever_graphs_r2781; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2781, 0.002); end
  def test_lever_graphs_s2781; assert_in_delta(0.0, (worksheet.lever_graphs_s2781||0), 0.002); end
  def test_lever_graphs_b2782; assert_in_epsilon(2.0, worksheet.lever_graphs_b2782, 0.002); end
  def test_lever_graphs_k2782; assert_in_delta(0.0, (worksheet.lever_graphs_k2782||0), 0.002); end
  def test_lever_graphs_l2782; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2782, 0.002); end
  def test_lever_graphs_m2782; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2782, 0.002); end
  def test_lever_graphs_n2782; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2782, 0.002); end
  def test_lever_graphs_o2782; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2782, 0.002); end
  def test_lever_graphs_p2782; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2782, 0.002); end
  def test_lever_graphs_q2782; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2782, 0.002); end
  def test_lever_graphs_r2782; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2782, 0.002); end
  def test_lever_graphs_s2782; assert_in_delta(0.05, worksheet.lever_graphs_s2782, 0.002); end
  def test_lever_graphs_b2783; assert_in_epsilon(3.0, worksheet.lever_graphs_b2783, 0.002); end
  def test_lever_graphs_k2783; assert_in_delta(0.0, (worksheet.lever_graphs_k2783||0), 0.002); end
  def test_lever_graphs_l2783; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2783, 0.002); end
  def test_lever_graphs_m2783; assert_in_delta(0.014395604395604396, worksheet.lever_graphs_m2783, 0.002); end
  def test_lever_graphs_n2783; assert_in_delta(0.023663003663003664, worksheet.lever_graphs_n2783, 0.002); end
  def test_lever_graphs_o2783; assert_in_delta(0.03293040293040293, worksheet.lever_graphs_o2783, 0.002); end
  def test_lever_graphs_p2783; assert_in_delta(0.042197802197802205, worksheet.lever_graphs_p2783, 0.002); end
  def test_lever_graphs_q2783; assert_in_delta(0.05146520146520148, worksheet.lever_graphs_q2783, 0.002); end
  def test_lever_graphs_r2783; assert_in_delta(0.06073260073260074, worksheet.lever_graphs_r2783, 0.002); end
  def test_lever_graphs_s2783; assert_in_delta(0.07, worksheet.lever_graphs_s2783, 0.002); end
  def test_lever_graphs_b2784; assert_in_epsilon(4.0, worksheet.lever_graphs_b2784, 0.002); end
  def test_lever_graphs_k2784; assert_in_delta(0.0, (worksheet.lever_graphs_k2784||0), 0.002); end
  def test_lever_graphs_l2784; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2784, 0.002); end
  def test_lever_graphs_m2784; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2784, 0.002); end
  def test_lever_graphs_n2784; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2784, 0.002); end
  def test_lever_graphs_o2784; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2784, 0.002); end
  def test_lever_graphs_p2784; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2784, 0.002); end
  def test_lever_graphs_q2784; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2784, 0.002); end
  def test_lever_graphs_r2784; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2784, 0.002); end
  def test_lever_graphs_s2784; assert_in_delta(0.1, worksheet.lever_graphs_s2784, 0.002); end
  def test_lever_graphs_c2758; assert_equal("1975", worksheet.lever_graphs_c2758); end
  def test_lever_graphs_d2758; assert_equal("1980", worksheet.lever_graphs_d2758); end
  def test_lever_graphs_e2758; assert_equal("1985", worksheet.lever_graphs_e2758); end
  def test_lever_graphs_f2758; assert_equal("1990", worksheet.lever_graphs_f2758); end
  def test_lever_graphs_g2758; assert_equal("1995", worksheet.lever_graphs_g2758); end
  def test_lever_graphs_h2758; assert_equal("2000", worksheet.lever_graphs_h2758); end
  def test_lever_graphs_i2758; assert_equal("2005", worksheet.lever_graphs_i2758); end
  def test_lever_graphs_j2758; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2758, 0.002); end
  def test_lever_graphs_k2758; assert_equal("2011", worksheet.lever_graphs_k2758); end
  def test_lever_graphs_l2758; assert_equal("2015", worksheet.lever_graphs_l2758); end
  def test_lever_graphs_m2758; assert_equal("2020", worksheet.lever_graphs_m2758); end
  def test_lever_graphs_n2758; assert_equal("2025", worksheet.lever_graphs_n2758); end
  def test_lever_graphs_o2758; assert_equal("2030", worksheet.lever_graphs_o2758); end
  def test_lever_graphs_p2758; assert_equal("2035", worksheet.lever_graphs_p2758); end
  def test_lever_graphs_q2758; assert_equal("2040", worksheet.lever_graphs_q2758); end
  def test_lever_graphs_r2758; assert_equal("2045", worksheet.lever_graphs_r2758); end
  def test_lever_graphs_s2758; assert_equal("2050", worksheet.lever_graphs_s2758); end
  def test_lever_graphs_b2759; assert_equal("Historic data", worksheet.lever_graphs_b2759); end
  def test_lever_graphs_b2760; assert_in_delta(1.0, worksheet.lever_graphs_b2760, 0.002); end
  def test_lever_graphs_k2760; assert_in_delta(0.0, (worksheet.lever_graphs_k2760||0), 0.002); end
  def test_lever_graphs_l2760; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2760, 0.002); end
  def test_lever_graphs_m2760; assert_in_delta(0.0032967032967032967, worksheet.lever_graphs_m2760, 0.002); end
  def test_lever_graphs_n2760; assert_in_delta(0.002747252747252747, worksheet.lever_graphs_n2760, 0.002); end
  def test_lever_graphs_o2760; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_o2760, 0.002); end
  def test_lever_graphs_p2760; assert_in_delta(0.0016483516483516484, worksheet.lever_graphs_p2760, 0.002); end
  def test_lever_graphs_q2760; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_q2760, 0.002); end
  def test_lever_graphs_r2760; assert_in_delta(0.0005494505494505495, worksheet.lever_graphs_r2760, 0.002); end
  def test_lever_graphs_s2760; assert_in_delta(0.0, (worksheet.lever_graphs_s2760||0), 0.002); end
  def test_lever_graphs_b2761; assert_in_epsilon(2.0, worksheet.lever_graphs_b2761, 0.002); end
  def test_lever_graphs_k2761; assert_in_delta(0.0, (worksheet.lever_graphs_k2761||0), 0.002); end
  def test_lever_graphs_l2761; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2761, 0.002); end
  def test_lever_graphs_m2761; assert_in_delta(0.008653846153846154, worksheet.lever_graphs_m2761, 0.002); end
  def test_lever_graphs_n2761; assert_in_delta(0.01346153846153846, worksheet.lever_graphs_n2761, 0.002); end
  def test_lever_graphs_o2761; assert_in_delta(0.01826923076923077, worksheet.lever_graphs_o2761, 0.002); end
  def test_lever_graphs_p2761; assert_in_delta(0.023076923076923075, worksheet.lever_graphs_p2761, 0.002); end
  def test_lever_graphs_q2761; assert_in_delta(0.027884615384615383, worksheet.lever_graphs_q2761, 0.002); end
  def test_lever_graphs_r2761; assert_in_delta(0.032692307692307694, worksheet.lever_graphs_r2761, 0.002); end
  def test_lever_graphs_s2761; assert_in_delta(0.037500000000000006, worksheet.lever_graphs_s2761, 0.002); end
  def test_lever_graphs_b2762; assert_in_epsilon(3.0, worksheet.lever_graphs_b2762, 0.002); end
  def test_lever_graphs_k2762; assert_in_delta(0.0, (worksheet.lever_graphs_k2762||0), 0.002); end
  def test_lever_graphs_l2762; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2762, 0.002); end
  def test_lever_graphs_m2762; assert_in_delta(0.011868131868131869, worksheet.lever_graphs_m2762, 0.002); end
  def test_lever_graphs_n2762; assert_in_delta(0.01989010989010989, worksheet.lever_graphs_n2762, 0.002); end
  def test_lever_graphs_o2762; assert_in_delta(0.027912087912087914, worksheet.lever_graphs_o2762, 0.002); end
  def test_lever_graphs_p2762; assert_in_delta(0.03593406593406594, worksheet.lever_graphs_p2762, 0.002); end
  def test_lever_graphs_q2762; assert_in_delta(0.043956043956043966, worksheet.lever_graphs_q2762, 0.002); end
  def test_lever_graphs_r2762; assert_in_delta(0.05197802197802198, worksheet.lever_graphs_r2762, 0.002); end
  def test_lever_graphs_s2762; assert_in_delta(0.060000000000000005, worksheet.lever_graphs_s2762, 0.002); end
  def test_lever_graphs_b2763; assert_in_epsilon(4.0, worksheet.lever_graphs_b2763, 0.002); end
  def test_lever_graphs_k2763; assert_in_delta(0.0, (worksheet.lever_graphs_k2763||0), 0.002); end
  def test_lever_graphs_l2763; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2763, 0.002); end
  def test_lever_graphs_m2763; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2763, 0.002); end
  def test_lever_graphs_n2763; assert_in_delta(0.03131868131868132, worksheet.lever_graphs_n2763, 0.002); end
  def test_lever_graphs_o2763; assert_in_delta(0.04505494505494506, worksheet.lever_graphs_o2763, 0.002); end
  def test_lever_graphs_p2763; assert_in_delta(0.05879120879120879, worksheet.lever_graphs_p2763, 0.002); end
  def test_lever_graphs_q2763; assert_in_delta(0.07252747252747253, worksheet.lever_graphs_q2763, 0.002); end
  def test_lever_graphs_r2763; assert_in_delta(0.08626373626373626, worksheet.lever_graphs_r2763, 0.002); end
  def test_lever_graphs_s2763; assert_in_delta(0.1, worksheet.lever_graphs_s2763, 0.002); end
  def test_lever_graphs_c2326; assert_equal("1975", worksheet.lever_graphs_c2326); end
  def test_lever_graphs_d2326; assert_equal("1980", worksheet.lever_graphs_d2326); end
  def test_lever_graphs_e2326; assert_equal("1985", worksheet.lever_graphs_e2326); end
  def test_lever_graphs_f2326; assert_equal("1990", worksheet.lever_graphs_f2326); end
  def test_lever_graphs_g2326; assert_equal("1995", worksheet.lever_graphs_g2326); end
  def test_lever_graphs_h2326; assert_equal("2000", worksheet.lever_graphs_h2326); end
  def test_lever_graphs_i2326; assert_equal("2005", worksheet.lever_graphs_i2326); end
  def test_lever_graphs_j2326; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2326, 0.002); end
  def test_lever_graphs_k2326; assert_equal("2011", worksheet.lever_graphs_k2326); end
  def test_lever_graphs_l2326; assert_equal("2015", worksheet.lever_graphs_l2326); end
  def test_lever_graphs_m2326; assert_equal("2020", worksheet.lever_graphs_m2326); end
  def test_lever_graphs_n2326; assert_equal("2025", worksheet.lever_graphs_n2326); end
  def test_lever_graphs_o2326; assert_equal("2030", worksheet.lever_graphs_o2326); end
  def test_lever_graphs_p2326; assert_equal("2035", worksheet.lever_graphs_p2326); end
  def test_lever_graphs_q2326; assert_equal("2040", worksheet.lever_graphs_q2326); end
  def test_lever_graphs_r2326; assert_equal("2045", worksheet.lever_graphs_r2326); end
  def test_lever_graphs_s2326; assert_equal("2050", worksheet.lever_graphs_s2326); end
  def test_lever_graphs_b2327; assert_equal("Historic data", worksheet.lever_graphs_b2327); end
  def test_lever_graphs_b2328; assert_in_delta(1.0, worksheet.lever_graphs_b2328, 0.002); end
  def test_lever_graphs_k2328; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2328, 0.002); end
  def test_lever_graphs_l2328; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2328, 0.002); end
  def test_lever_graphs_m2328; assert_in_epsilon(12.569076390371949, worksheet.lever_graphs_m2328, 0.002); end
  def test_lever_graphs_n2328; assert_in_epsilon(12.55082065124287, worksheet.lever_graphs_n2328, 0.002); end
  def test_lever_graphs_o2328; assert_in_epsilon(12.532564912113788, worksheet.lever_graphs_o2328, 0.002); end
  def test_lever_graphs_p2328; assert_in_epsilon(12.514309172984708, worksheet.lever_graphs_p2328, 0.002); end
  def test_lever_graphs_q2328; assert_in_epsilon(12.496053433855627, worksheet.lever_graphs_q2328, 0.002); end
  def test_lever_graphs_r2328; assert_in_epsilon(12.477797694726547, worksheet.lever_graphs_r2328, 0.002); end
  def test_lever_graphs_s2328; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_s2328, 0.002); end
  def test_lever_graphs_b2329; assert_in_epsilon(2.0, worksheet.lever_graphs_b2329, 0.002); end
  def test_lever_graphs_k2329; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2329, 0.002); end
  def test_lever_graphs_l2329; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2329, 0.002); end
  def test_lever_graphs_m2329; assert_in_epsilon(12.747069846880485, worksheet.lever_graphs_m2329, 0.002); end
  def test_lever_graphs_n2329; assert_in_epsilon(12.906807564259939, worksheet.lever_graphs_n2329, 0.002); end
  def test_lever_graphs_o2329; assert_in_epsilon(13.066545281639394, worksheet.lever_graphs_o2329, 0.002); end
  def test_lever_graphs_p2329; assert_in_epsilon(13.22628299901885, worksheet.lever_graphs_p2329, 0.002); end
  def test_lever_graphs_q2329; assert_in_epsilon(13.386020716398304, worksheet.lever_graphs_q2329, 0.002); end
  def test_lever_graphs_r2329; assert_in_epsilon(13.545758433777758, worksheet.lever_graphs_r2329, 0.002); end
  def test_lever_graphs_s2329; assert_in_epsilon(13.705496151157213, worksheet.lever_graphs_s2329, 0.002); end
  def test_lever_graphs_b2330; assert_in_epsilon(3.0, worksheet.lever_graphs_b2330, 0.002); end
  def test_lever_graphs_k2330; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2330, 0.002); end
  def test_lever_graphs_l2330; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2330, 0.002); end
  def test_lever_graphs_m2330; assert_in_epsilon(12.92506330338902, worksheet.lever_graphs_m2330, 0.002); end
  def test_lever_graphs_n2330; assert_in_epsilon(13.26279447727701, worksheet.lever_graphs_n2330, 0.002); end
  def test_lever_graphs_o2330; assert_in_epsilon(13.600525651165, worksheet.lever_graphs_o2330, 0.002); end
  def test_lever_graphs_p2330; assert_in_epsilon(13.938256825052989, worksheet.lever_graphs_p2330, 0.002); end
  def test_lever_graphs_q2330; assert_in_epsilon(14.275987998940979, worksheet.lever_graphs_q2330, 0.002); end
  def test_lever_graphs_r2330; assert_in_epsilon(14.613719172828969, worksheet.lever_graphs_r2330, 0.002); end
  def test_lever_graphs_s2330; assert_in_epsilon(14.951450346716959, worksheet.lever_graphs_s2330, 0.002); end
  def test_lever_graphs_b2331; assert_in_epsilon(4.0, worksheet.lever_graphs_b2331, 0.002); end
  def test_lever_graphs_k2331; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2331, 0.002); end
  def test_lever_graphs_l2331; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2331, 0.002); end
  def test_lever_graphs_m2331; assert_in_epsilon(13.103056759897555, worksheet.lever_graphs_m2331, 0.002); end
  def test_lever_graphs_n2331; assert_in_epsilon(13.618781390294082, worksheet.lever_graphs_n2331, 0.002); end
  def test_lever_graphs_o2331; assert_in_epsilon(14.134506020690607, worksheet.lever_graphs_o2331, 0.002); end
  def test_lever_graphs_p2331; assert_in_epsilon(14.650230651087131, worksheet.lever_graphs_p2331, 0.002); end
  def test_lever_graphs_q2331; assert_in_epsilon(15.165955281483658, worksheet.lever_graphs_q2331, 0.002); end
  def test_lever_graphs_r2331; assert_in_epsilon(15.681679911880183, worksheet.lever_graphs_r2331, 0.002); end
  def test_lever_graphs_s2331; assert_in_epsilon(16.197404542276708, worksheet.lever_graphs_s2331, 0.002); end
  def test_lever_graphs_c2336; assert_equal("1975", worksheet.lever_graphs_c2336); end
  def test_lever_graphs_d2336; assert_equal("1980", worksheet.lever_graphs_d2336); end
  def test_lever_graphs_e2336; assert_equal("1985", worksheet.lever_graphs_e2336); end
  def test_lever_graphs_f2336; assert_equal("1990", worksheet.lever_graphs_f2336); end
  def test_lever_graphs_g2336; assert_equal("1995", worksheet.lever_graphs_g2336); end
  def test_lever_graphs_h2336; assert_equal("2000", worksheet.lever_graphs_h2336); end
  def test_lever_graphs_i2336; assert_equal("2005", worksheet.lever_graphs_i2336); end
  def test_lever_graphs_j2336; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2336, 0.002); end
  def test_lever_graphs_k2336; assert_equal("2011", worksheet.lever_graphs_k2336); end
  def test_lever_graphs_l2336; assert_equal("2015", worksheet.lever_graphs_l2336); end
  def test_lever_graphs_m2336; assert_equal("2020", worksheet.lever_graphs_m2336); end
  def test_lever_graphs_n2336; assert_equal("2025", worksheet.lever_graphs_n2336); end
  def test_lever_graphs_o2336; assert_equal("2030", worksheet.lever_graphs_o2336); end
  def test_lever_graphs_p2336; assert_equal("2035", worksheet.lever_graphs_p2336); end
  def test_lever_graphs_q2336; assert_equal("2040", worksheet.lever_graphs_q2336); end
  def test_lever_graphs_r2336; assert_equal("2045", worksheet.lever_graphs_r2336); end
  def test_lever_graphs_s2336; assert_equal("2050", worksheet.lever_graphs_s2336); end
  def test_lever_graphs_b2337; assert_equal("Historic data", worksheet.lever_graphs_b2337); end
  def test_lever_graphs_b2338; assert_in_delta(1.0, worksheet.lever_graphs_b2338, 0.002); end
  def test_lever_graphs_k2338; assert_in_epsilon(7.0, worksheet.lever_graphs_k2338, 0.002); end
  def test_lever_graphs_l2338; assert_in_epsilon(7.0, worksheet.lever_graphs_l2338, 0.002); end
  def test_lever_graphs_m2338; assert_in_epsilon(6.714285714285714, worksheet.lever_graphs_m2338, 0.002); end
  def test_lever_graphs_n2338; assert_in_epsilon(6.428571428571429, worksheet.lever_graphs_n2338, 0.002); end
  def test_lever_graphs_o2338; assert_in_epsilon(6.142857142857143, worksheet.lever_graphs_o2338, 0.002); end
  def test_lever_graphs_p2338; assert_in_epsilon(5.857142857142858, worksheet.lever_graphs_p2338, 0.002); end
  def test_lever_graphs_q2338; assert_in_epsilon(5.571428571428571, worksheet.lever_graphs_q2338, 0.002); end
  def test_lever_graphs_r2338; assert_in_epsilon(5.285714285714286, worksheet.lever_graphs_r2338, 0.002); end
  def test_lever_graphs_s2338; assert_in_epsilon(5.0, worksheet.lever_graphs_s2338, 0.002); end
  def test_lever_graphs_b2339; assert_in_epsilon(2.0, worksheet.lever_graphs_b2339, 0.002); end
  def test_lever_graphs_k2339; assert_in_epsilon(7.0, worksheet.lever_graphs_k2339, 0.002); end
  def test_lever_graphs_l2339; assert_in_epsilon(7.0, worksheet.lever_graphs_l2339, 0.002); end
  def test_lever_graphs_m2339; assert_in_epsilon(7.0, worksheet.lever_graphs_m2339, 0.002); end
  def test_lever_graphs_n2339; assert_in_epsilon(7.0, worksheet.lever_graphs_n2339, 0.002); end
  def test_lever_graphs_o2339; assert_in_epsilon(7.0, worksheet.lever_graphs_o2339, 0.002); end
  def test_lever_graphs_p2339; assert_in_epsilon(7.0, worksheet.lever_graphs_p2339, 0.002); end
  def test_lever_graphs_q2339; assert_in_epsilon(7.0, worksheet.lever_graphs_q2339, 0.002); end
  def test_lever_graphs_r2339; assert_in_epsilon(7.0, worksheet.lever_graphs_r2339, 0.002); end
  def test_lever_graphs_s2339; assert_in_epsilon(7.0, worksheet.lever_graphs_s2339, 0.002); end
  def test_lever_graphs_b2340; assert_in_epsilon(3.0, worksheet.lever_graphs_b2340, 0.002); end
  def test_lever_graphs_k2340; assert_in_epsilon(7.0, worksheet.lever_graphs_k2340, 0.002); end
  def test_lever_graphs_l2340; assert_in_epsilon(7.0, worksheet.lever_graphs_l2340, 0.002); end
  def test_lever_graphs_m2340; assert_in_epsilon(7.428571428571429, worksheet.lever_graphs_m2340, 0.002); end
  def test_lever_graphs_n2340; assert_in_epsilon(7.857142857142858, worksheet.lever_graphs_n2340, 0.002); end
  def test_lever_graphs_o2340; assert_in_epsilon(8.285714285714286, worksheet.lever_graphs_o2340, 0.002); end
  def test_lever_graphs_p2340; assert_in_epsilon(8.714285714285715, worksheet.lever_graphs_p2340, 0.002); end
  def test_lever_graphs_q2340; assert_in_epsilon(9.142857142857142, worksheet.lever_graphs_q2340, 0.002); end
  def test_lever_graphs_r2340; assert_in_epsilon(9.571428571428571, worksheet.lever_graphs_r2340, 0.002); end
  def test_lever_graphs_s2340; assert_in_epsilon(10.0, worksheet.lever_graphs_s2340, 0.002); end
  def test_lever_graphs_b2341; assert_in_epsilon(4.0, worksheet.lever_graphs_b2341, 0.002); end
  def test_lever_graphs_k2341; assert_in_epsilon(7.0, worksheet.lever_graphs_k2341, 0.002); end
  def test_lever_graphs_l2341; assert_in_epsilon(7.0, worksheet.lever_graphs_l2341, 0.002); end
  def test_lever_graphs_m2341; assert_in_epsilon(8.142857142857142, worksheet.lever_graphs_m2341, 0.002); end
  def test_lever_graphs_n2341; assert_in_epsilon(9.285714285714285, worksheet.lever_graphs_n2341, 0.002); end
  def test_lever_graphs_o2341; assert_in_epsilon(10.428571428571429, worksheet.lever_graphs_o2341, 0.002); end
  def test_lever_graphs_p2341; assert_in_epsilon(11.571428571428571, worksheet.lever_graphs_p2341, 0.002); end
  def test_lever_graphs_q2341; assert_in_epsilon(12.714285714285715, worksheet.lever_graphs_q2341, 0.002); end
  def test_lever_graphs_r2341; assert_in_epsilon(13.857142857142858, worksheet.lever_graphs_r2341, 0.002); end
  def test_lever_graphs_s2341; assert_in_epsilon(15.0, worksheet.lever_graphs_s2341, 0.002); end
  def test_lever_graphs_d2707; assert_equal("Title", worksheet.lever_graphs_d2707); end
  def test_lever_graphs_e2707; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2707); end
  def test_lever_graphs_d2708; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2708, 0.002); end
  def test_lever_graphs_e2708; assert_in_delta(0.0, (worksheet.lever_graphs_e2708||0), 0.002); end
  def test_lever_graphs_d2709; assert_equal("2050: Level 1", worksheet.lever_graphs_d2709); end
  def test_lever_graphs_e2709; assert_in_delta(0.0, (worksheet.lever_graphs_e2709||0), 0.002); end
  def test_lever_graphs_d2710; assert_equal("2050: Level 2", worksheet.lever_graphs_d2710); end
  def test_lever_graphs_e2710; assert_in_delta(0.005, worksheet.lever_graphs_e2710, 0.002); end
  def test_lever_graphs_d2711; assert_equal("2050: Level 3", worksheet.lever_graphs_d2711); end
  def test_lever_graphs_e2711; assert_in_delta(0.01, worksheet.lever_graphs_e2711, 0.002); end
  def test_lever_graphs_d2712; assert_equal("2050: Level 4", worksheet.lever_graphs_d2712); end
  def test_lever_graphs_e2712; assert_in_delta(0.02, worksheet.lever_graphs_e2712, 0.002); end
  def test_lever_graphs_d2718; assert_equal("Title", worksheet.lever_graphs_d2718); end
  def test_lever_graphs_e2718; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2718); end
  def test_lever_graphs_f2718; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2718); end
  def test_lever_graphs_d2719; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2719, 0.002); end
  def test_lever_graphs_e2719; assert_in_delta(0.0, (worksheet.lever_graphs_e2719||0), 0.002); end
  def test_lever_graphs_f2719; assert_in_delta(0.0, (worksheet.lever_graphs_f2719||0), 0.002); end
  def test_lever_graphs_d2720; assert_equal("2050: Level 1", worksheet.lever_graphs_d2720); end
  def test_lever_graphs_e2720; assert_in_delta(0.0, (worksheet.lever_graphs_e2720||0), 0.002); end
  def test_lever_graphs_f2720; assert_in_delta(0.0, (worksheet.lever_graphs_f2720||0), 0.002); end
  def test_lever_graphs_d2721; assert_equal("2050: Level 2", worksheet.lever_graphs_d2721); end
  def test_lever_graphs_e2721; assert_in_delta(0.0025, worksheet.lever_graphs_e2721, 0.002); end
  def test_lever_graphs_f2721; assert_in_delta(0.0125, worksheet.lever_graphs_f2721, 0.002); end
  def test_lever_graphs_d2722; assert_equal("2050: Level 3", worksheet.lever_graphs_d2722); end
  def test_lever_graphs_e2722; assert_in_delta(0.005, worksheet.lever_graphs_e2722, 0.002); end
  def test_lever_graphs_f2722; assert_in_delta(0.025, worksheet.lever_graphs_f2722, 0.002); end
  def test_lever_graphs_d2723; assert_equal("2050: Level 4", worksheet.lever_graphs_d2723); end
  def test_lever_graphs_e2723; assert_in_delta(0.01, worksheet.lever_graphs_e2723, 0.002); end
  def test_lever_graphs_f2723; assert_in_delta(0.05, worksheet.lever_graphs_f2723, 0.002); end
  def test_lever_graphs_d2696; assert_equal("Title", worksheet.lever_graphs_d2696); end
  def test_lever_graphs_e2696; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2696); end
  def test_lever_graphs_f2696; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2696); end
  def test_lever_graphs_d2697; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2697, 0.002); end
  def test_lever_graphs_e2697; assert_in_delta(0.0, (worksheet.lever_graphs_e2697||0), 0.002); end
  def test_lever_graphs_f2697; assert_in_delta(0.0, (worksheet.lever_graphs_f2697||0), 0.002); end
  def test_lever_graphs_d2698; assert_equal("2050: Level 1", worksheet.lever_graphs_d2698); end
  def test_lever_graphs_e2698; assert_in_delta(0.0, (worksheet.lever_graphs_e2698||0), 0.002); end
  def test_lever_graphs_f2698; assert_in_delta(0.0, (worksheet.lever_graphs_f2698||0), 0.002); end
  def test_lever_graphs_d2699; assert_equal("2050: Level 2", worksheet.lever_graphs_d2699); end
  def test_lever_graphs_e2699; assert_in_delta(0.0175, worksheet.lever_graphs_e2699, 0.002); end
  def test_lever_graphs_f2699; assert_in_delta(0.04, worksheet.lever_graphs_f2699, 0.002); end
  def test_lever_graphs_d2700; assert_equal("2050: Level 3", worksheet.lever_graphs_d2700); end
  def test_lever_graphs_e2700; assert_in_delta(0.035, worksheet.lever_graphs_e2700, 0.002); end
  def test_lever_graphs_f2700; assert_in_delta(0.08, worksheet.lever_graphs_f2700, 0.002); end
  def test_lever_graphs_d2701; assert_equal("2050: Level 4", worksheet.lever_graphs_d2701); end
  def test_lever_graphs_e2701; assert_in_delta(0.07, worksheet.lever_graphs_e2701, 0.002); end
  def test_lever_graphs_f2701; assert_in_delta(0.16, worksheet.lever_graphs_f2701, 0.002); end
  def test_lever_graphs_c2893; assert_equal("1975", worksheet.lever_graphs_c2893); end
  def test_lever_graphs_d2893; assert_equal("1980", worksheet.lever_graphs_d2893); end
  def test_lever_graphs_e2893; assert_equal("1985", worksheet.lever_graphs_e2893); end
  def test_lever_graphs_f2893; assert_equal("1990", worksheet.lever_graphs_f2893); end
  def test_lever_graphs_g2893; assert_equal("1995", worksheet.lever_graphs_g2893); end
  def test_lever_graphs_h2893; assert_equal("2000", worksheet.lever_graphs_h2893); end
  def test_lever_graphs_i2893; assert_equal("2005", worksheet.lever_graphs_i2893); end
  def test_lever_graphs_j2893; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2893, 0.002); end
  def test_lever_graphs_k2893; assert_equal("2011", worksheet.lever_graphs_k2893); end
  def test_lever_graphs_l2893; assert_equal("2015", worksheet.lever_graphs_l2893); end
  def test_lever_graphs_m2893; assert_equal("2020", worksheet.lever_graphs_m2893); end
  def test_lever_graphs_n2893; assert_equal("2025", worksheet.lever_graphs_n2893); end
  def test_lever_graphs_o2893; assert_equal("2030", worksheet.lever_graphs_o2893); end
  def test_lever_graphs_p2893; assert_equal("2035", worksheet.lever_graphs_p2893); end
  def test_lever_graphs_q2893; assert_equal("2040", worksheet.lever_graphs_q2893); end
  def test_lever_graphs_r2893; assert_equal("2045", worksheet.lever_graphs_r2893); end
  def test_lever_graphs_s2893; assert_equal("2050", worksheet.lever_graphs_s2893); end
  def test_lever_graphs_b2894; assert_equal("Historic data", worksheet.lever_graphs_b2894); end
  def test_lever_graphs_b2895; assert_in_delta(1.0, worksheet.lever_graphs_b2895, 0.002); end
  def test_lever_graphs_k2895; assert_in_delta(0.0, (worksheet.lever_graphs_k2895||0), 0.002); end
  def test_lever_graphs_l2895; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2895, 0.002); end
  def test_lever_graphs_m2895; assert_in_delta(0.0036630036630036595, worksheet.lever_graphs_m2895, 0.002); end
  def test_lever_graphs_n2895; assert_in_delta(0.0030525030525030495, worksheet.lever_graphs_n2895, 0.002); end
  def test_lever_graphs_o2895; assert_in_delta(0.00244200244200244, worksheet.lever_graphs_o2895, 0.002); end
  def test_lever_graphs_p2895; assert_in_delta(0.0018315018315018298, worksheet.lever_graphs_p2895, 0.002); end
  def test_lever_graphs_q2895; assert_in_delta(0.0012210012210012197, worksheet.lever_graphs_q2895, 0.002); end
  def test_lever_graphs_r2895; assert_in_delta(0.0006105006105006101, worksheet.lever_graphs_r2895, 0.002); end
  def test_lever_graphs_s2895; assert_in_delta(0.0, (worksheet.lever_graphs_s2895||0), 0.002); end
  def test_lever_graphs_b2896; assert_in_epsilon(2.0, worksheet.lever_graphs_b2896, 0.002); end
  def test_lever_graphs_k2896; assert_in_delta(0.0, (worksheet.lever_graphs_k2896||0), 0.002); end
  def test_lever_graphs_l2896; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2896, 0.002); end
  def test_lever_graphs_m2896; assert_in_delta(0.009615384615384606, worksheet.lever_graphs_m2896, 0.002); end
  def test_lever_graphs_n2896; assert_in_delta(0.014957264957264942, worksheet.lever_graphs_n2896, 0.002); end
  def test_lever_graphs_o2896; assert_in_delta(0.02029914529914528, worksheet.lever_graphs_o2896, 0.002); end
  def test_lever_graphs_p2896; assert_in_delta(0.025641025641025616, worksheet.lever_graphs_p2896, 0.002); end
  def test_lever_graphs_q2896; assert_in_delta(0.030982905982905953, worksheet.lever_graphs_q2896, 0.002); end
  def test_lever_graphs_r2896; assert_in_delta(0.03632478632478629, worksheet.lever_graphs_r2896, 0.002); end
  def test_lever_graphs_s2896; assert_in_delta(0.04166666666666663, worksheet.lever_graphs_s2896, 0.002); end
  def test_lever_graphs_b2897; assert_in_epsilon(3.0, worksheet.lever_graphs_b2897, 0.002); end
  def test_lever_graphs_k2897; assert_in_delta(0.0, (worksheet.lever_graphs_k2897||0), 0.002); end
  def test_lever_graphs_l2897; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2897, 0.002); end
  def test_lever_graphs_m2897; assert_in_delta(0.015567765567765561, worksheet.lever_graphs_m2897, 0.002); end
  def test_lever_graphs_n2897; assert_in_delta(0.026862026862026853, worksheet.lever_graphs_n2897, 0.002); end
  def test_lever_graphs_o2897; assert_in_delta(0.03815628815628815, worksheet.lever_graphs_o2897, 0.002); end
  def test_lever_graphs_p2897; assert_in_delta(0.04945054945054944, worksheet.lever_graphs_p2897, 0.002); end
  def test_lever_graphs_q2897; assert_in_delta(0.06074481074481074, worksheet.lever_graphs_q2897, 0.002); end
  def test_lever_graphs_r2897; assert_in_delta(0.07203907203907203, worksheet.lever_graphs_r2897, 0.002); end
  def test_lever_graphs_s2897; assert_in_delta(0.08333333333333333, worksheet.lever_graphs_s2897, 0.002); end
  def test_lever_graphs_b2898; assert_in_epsilon(4.0, worksheet.lever_graphs_b2898, 0.002); end
  def test_lever_graphs_k2898; assert_in_delta(0.0, (worksheet.lever_graphs_k2898||0), 0.002); end
  def test_lever_graphs_l2898; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2898, 0.002); end
  def test_lever_graphs_m2898; assert_in_delta(0.12667887667887667, worksheet.lever_graphs_m2898, 0.002); end
  def test_lever_graphs_n2898; assert_in_delta(0.2490842490842491, worksheet.lever_graphs_n2898, 0.002); end
  def test_lever_graphs_o2898; assert_in_delta(0.3714896214896215, worksheet.lever_graphs_o2898, 0.002); end
  def test_lever_graphs_p2898; assert_in_delta(0.4938949938949939, worksheet.lever_graphs_p2898, 0.002); end
  def test_lever_graphs_q2898; assert_in_delta(0.6163003663003663, worksheet.lever_graphs_q2898, 0.002); end
  def test_lever_graphs_r2898; assert_in_delta(0.7387057387057387, worksheet.lever_graphs_r2898, 0.002); end
  def test_lever_graphs_s2898; assert_in_delta(0.8611111111111112, worksheet.lever_graphs_s2898, 0.002); end
  def test_lever_graphs_c2827; assert_equal("1975", worksheet.lever_graphs_c2827); end
  def test_lever_graphs_d2827; assert_equal("1980", worksheet.lever_graphs_d2827); end
  def test_lever_graphs_e2827; assert_equal("1985", worksheet.lever_graphs_e2827); end
  def test_lever_graphs_f2827; assert_equal("1990", worksheet.lever_graphs_f2827); end
  def test_lever_graphs_g2827; assert_equal("1995", worksheet.lever_graphs_g2827); end
  def test_lever_graphs_h2827; assert_equal("2000", worksheet.lever_graphs_h2827); end
  def test_lever_graphs_i2827; assert_equal("2005", worksheet.lever_graphs_i2827); end
  def test_lever_graphs_j2827; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2827, 0.002); end
  def test_lever_graphs_k2827; assert_equal("2011", worksheet.lever_graphs_k2827); end
  def test_lever_graphs_l2827; assert_equal("2015", worksheet.lever_graphs_l2827); end
  def test_lever_graphs_m2827; assert_equal("2020", worksheet.lever_graphs_m2827); end
  def test_lever_graphs_n2827; assert_equal("2025", worksheet.lever_graphs_n2827); end
  def test_lever_graphs_o2827; assert_equal("2030", worksheet.lever_graphs_o2827); end
  def test_lever_graphs_p2827; assert_equal("2035", worksheet.lever_graphs_p2827); end
  def test_lever_graphs_q2827; assert_equal("2040", worksheet.lever_graphs_q2827); end
  def test_lever_graphs_r2827; assert_equal("2045", worksheet.lever_graphs_r2827); end
  def test_lever_graphs_s2827; assert_equal("2050", worksheet.lever_graphs_s2827); end
  def test_lever_graphs_b2828; assert_equal("Historic data", worksheet.lever_graphs_b2828); end
  def test_lever_graphs_b2829; assert_in_delta(1.0, worksheet.lever_graphs_b2829, 0.002); end
  def test_lever_graphs_k2829; assert_in_delta(0.0, (worksheet.lever_graphs_k2829||0), 0.002); end
  def test_lever_graphs_l2829; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2829, 0.002); end
  def test_lever_graphs_m2829; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2829, 0.002); end
  def test_lever_graphs_n2829; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2829, 0.002); end
  def test_lever_graphs_o2829; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2829, 0.002); end
  def test_lever_graphs_p2829; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2829, 0.002); end
  def test_lever_graphs_q2829; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2829, 0.002); end
  def test_lever_graphs_r2829; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2829, 0.002); end
  def test_lever_graphs_s2829; assert_in_delta(0.0, (worksheet.lever_graphs_s2829||0), 0.002); end
  def test_lever_graphs_b2830; assert_in_epsilon(2.0, worksheet.lever_graphs_b2830, 0.002); end
  def test_lever_graphs_k2830; assert_in_delta(0.0, (worksheet.lever_graphs_k2830||0), 0.002); end
  def test_lever_graphs_l2830; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2830, 0.002); end
  def test_lever_graphs_m2830; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2830, 0.002); end
  def test_lever_graphs_n2830; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2830, 0.002); end
  def test_lever_graphs_o2830; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2830, 0.002); end
  def test_lever_graphs_p2830; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2830, 0.002); end
  def test_lever_graphs_q2830; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2830, 0.002); end
  def test_lever_graphs_r2830; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2830, 0.002); end
  def test_lever_graphs_s2830; assert_in_delta(0.05, worksheet.lever_graphs_s2830, 0.002); end
  def test_lever_graphs_b2831; assert_in_epsilon(3.0, worksheet.lever_graphs_b2831, 0.002); end
  def test_lever_graphs_k2831; assert_in_delta(0.0, (worksheet.lever_graphs_k2831||0), 0.002); end
  def test_lever_graphs_l2831; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2831, 0.002); end
  def test_lever_graphs_m2831; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2831, 0.002); end
  def test_lever_graphs_n2831; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2831, 0.002); end
  def test_lever_graphs_o2831; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2831, 0.002); end
  def test_lever_graphs_p2831; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2831, 0.002); end
  def test_lever_graphs_q2831; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2831, 0.002); end
  def test_lever_graphs_r2831; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2831, 0.002); end
  def test_lever_graphs_s2831; assert_in_delta(0.1, worksheet.lever_graphs_s2831, 0.002); end
  def test_lever_graphs_b2832; assert_in_epsilon(4.0, worksheet.lever_graphs_b2832, 0.002); end
  def test_lever_graphs_k2832; assert_in_delta(0.0, (worksheet.lever_graphs_k2832||0), 0.002); end
  def test_lever_graphs_l2832; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2832, 0.002); end
  def test_lever_graphs_m2832; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2832, 0.002); end
  def test_lever_graphs_n2832; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2832, 0.002); end
  def test_lever_graphs_o2832; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2832, 0.002); end
  def test_lever_graphs_p2832; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2832, 0.002); end
  def test_lever_graphs_q2832; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2832, 0.002); end
  def test_lever_graphs_r2832; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2832, 0.002); end
  def test_lever_graphs_s2832; assert_in_delta(0.2, worksheet.lever_graphs_s2832, 0.002); end
  def test_lever_graphs_c2865; assert_equal("1975", worksheet.lever_graphs_c2865); end
  def test_lever_graphs_d2865; assert_equal("1980", worksheet.lever_graphs_d2865); end
  def test_lever_graphs_e2865; assert_equal("1985", worksheet.lever_graphs_e2865); end
  def test_lever_graphs_f2865; assert_equal("1990", worksheet.lever_graphs_f2865); end
  def test_lever_graphs_g2865; assert_equal("1995", worksheet.lever_graphs_g2865); end
  def test_lever_graphs_h2865; assert_equal("2000", worksheet.lever_graphs_h2865); end
  def test_lever_graphs_i2865; assert_equal("2005", worksheet.lever_graphs_i2865); end
  def test_lever_graphs_j2865; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2865, 0.002); end
  def test_lever_graphs_k2865; assert_equal("2011", worksheet.lever_graphs_k2865); end
  def test_lever_graphs_l2865; assert_equal("2015", worksheet.lever_graphs_l2865); end
  def test_lever_graphs_m2865; assert_equal("2020", worksheet.lever_graphs_m2865); end
  def test_lever_graphs_n2865; assert_equal("2025", worksheet.lever_graphs_n2865); end
  def test_lever_graphs_o2865; assert_equal("2030", worksheet.lever_graphs_o2865); end
  def test_lever_graphs_p2865; assert_equal("2035", worksheet.lever_graphs_p2865); end
  def test_lever_graphs_q2865; assert_equal("2040", worksheet.lever_graphs_q2865); end
  def test_lever_graphs_r2865; assert_equal("2045", worksheet.lever_graphs_r2865); end
  def test_lever_graphs_s2865; assert_equal("2050", worksheet.lever_graphs_s2865); end
  def test_lever_graphs_b2866; assert_equal("Historic data", worksheet.lever_graphs_b2866); end
  def test_lever_graphs_b2867; assert_in_delta(1.0, worksheet.lever_graphs_b2867, 0.002); end
  def test_lever_graphs_k2867; assert_in_delta(0.0, (worksheet.lever_graphs_k2867||0), 0.002); end
  def test_lever_graphs_l2867; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2867, 0.002); end
  def test_lever_graphs_m2867; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2867, 0.002); end
  def test_lever_graphs_n2867; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2867, 0.002); end
  def test_lever_graphs_o2867; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2867, 0.002); end
  def test_lever_graphs_p2867; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2867, 0.002); end
  def test_lever_graphs_q2867; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2867, 0.002); end
  def test_lever_graphs_r2867; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2867, 0.002); end
  def test_lever_graphs_s2867; assert_in_delta(0.0, (worksheet.lever_graphs_s2867||0), 0.002); end
  def test_lever_graphs_b2868; assert_in_epsilon(2.0, worksheet.lever_graphs_b2868, 0.002); end
  def test_lever_graphs_k2868; assert_in_delta(0.0, (worksheet.lever_graphs_k2868||0), 0.002); end
  def test_lever_graphs_l2868; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2868, 0.002); end
  def test_lever_graphs_m2868; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2868, 0.002); end
  def test_lever_graphs_n2868; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2868, 0.002); end
  def test_lever_graphs_o2868; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2868, 0.002); end
  def test_lever_graphs_p2868; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2868, 0.002); end
  def test_lever_graphs_q2868; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2868, 0.002); end
  def test_lever_graphs_r2868; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2868, 0.002); end
  def test_lever_graphs_s2868; assert_in_delta(0.05, worksheet.lever_graphs_s2868, 0.002); end
  def test_lever_graphs_b2869; assert_in_epsilon(3.0, worksheet.lever_graphs_b2869, 0.002); end
  def test_lever_graphs_k2869; assert_in_delta(0.0, (worksheet.lever_graphs_k2869||0), 0.002); end
  def test_lever_graphs_l2869; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2869, 0.002); end
  def test_lever_graphs_m2869; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2869, 0.002); end
  def test_lever_graphs_n2869; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2869, 0.002); end
  def test_lever_graphs_o2869; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2869, 0.002); end
  def test_lever_graphs_p2869; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2869, 0.002); end
  def test_lever_graphs_q2869; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2869, 0.002); end
  def test_lever_graphs_r2869; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2869, 0.002); end
  def test_lever_graphs_s2869; assert_in_delta(0.1, worksheet.lever_graphs_s2869, 0.002); end
  def test_lever_graphs_b2870; assert_in_epsilon(4.0, worksheet.lever_graphs_b2870, 0.002); end
  def test_lever_graphs_k2870; assert_in_delta(0.0, (worksheet.lever_graphs_k2870||0), 0.002); end
  def test_lever_graphs_l2870; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2870, 0.002); end
  def test_lever_graphs_m2870; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2870, 0.002); end
  def test_lever_graphs_n2870; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2870, 0.002); end
  def test_lever_graphs_o2870; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2870, 0.002); end
  def test_lever_graphs_p2870; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2870, 0.002); end
  def test_lever_graphs_q2870; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2870, 0.002); end
  def test_lever_graphs_r2870; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2870, 0.002); end
  def test_lever_graphs_s2870; assert_in_delta(0.2, worksheet.lever_graphs_s2870, 0.002); end
  def test_lever_graphs_c2768; assert_equal("1975", worksheet.lever_graphs_c2768); end
  def test_lever_graphs_d2768; assert_equal("1980", worksheet.lever_graphs_d2768); end
  def test_lever_graphs_e2768; assert_equal("1985", worksheet.lever_graphs_e2768); end
  def test_lever_graphs_f2768; assert_equal("1990", worksheet.lever_graphs_f2768); end
  def test_lever_graphs_g2768; assert_equal("1995", worksheet.lever_graphs_g2768); end
  def test_lever_graphs_h2768; assert_equal("2000", worksheet.lever_graphs_h2768); end
  def test_lever_graphs_i2768; assert_equal("2005", worksheet.lever_graphs_i2768); end
  def test_lever_graphs_j2768; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2768, 0.002); end
  def test_lever_graphs_k2768; assert_equal("2011", worksheet.lever_graphs_k2768); end
  def test_lever_graphs_l2768; assert_equal("2015", worksheet.lever_graphs_l2768); end
  def test_lever_graphs_m2768; assert_equal("2020", worksheet.lever_graphs_m2768); end
  def test_lever_graphs_n2768; assert_equal("2025", worksheet.lever_graphs_n2768); end
  def test_lever_graphs_o2768; assert_equal("2030", worksheet.lever_graphs_o2768); end
  def test_lever_graphs_p2768; assert_equal("2035", worksheet.lever_graphs_p2768); end
  def test_lever_graphs_q2768; assert_equal("2040", worksheet.lever_graphs_q2768); end
  def test_lever_graphs_r2768; assert_equal("2045", worksheet.lever_graphs_r2768); end
  def test_lever_graphs_s2768; assert_equal("2050", worksheet.lever_graphs_s2768); end
  def test_lever_graphs_b2769; assert_equal("Historic data", worksheet.lever_graphs_b2769); end
  def test_lever_graphs_b2770; assert_in_delta(1.0, worksheet.lever_graphs_b2770, 0.002); end
  def test_lever_graphs_k2770; assert_in_delta(0.0, (worksheet.lever_graphs_k2770||0), 0.002); end
  def test_lever_graphs_l2770; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2770, 0.002); end
  def test_lever_graphs_m2770; assert_in_delta(-0.0005860805860805861, worksheet.lever_graphs_m2770, 0.002); end
  def test_lever_graphs_n2770; assert_in_delta(-0.0004884004884004884, worksheet.lever_graphs_n2770, 0.002); end
  def test_lever_graphs_o2770; assert_in_delta(-0.0003907203907203907, worksheet.lever_graphs_o2770, 0.002); end
  def test_lever_graphs_p2770; assert_in_delta(-0.00029304029304029304, worksheet.lever_graphs_p2770, 0.002); end
  def test_lever_graphs_q2770; assert_in_delta(-0.00019536019536019536, worksheet.lever_graphs_q2770, 0.002); end
  def test_lever_graphs_r2770; assert_in_delta(-9.768009768009768e-05, worksheet.lever_graphs_r2770, 0.002); end
  def test_lever_graphs_s2770; assert_in_delta(0.0, (worksheet.lever_graphs_s2770||0), 0.002); end
  def test_lever_graphs_b2771; assert_in_epsilon(2.0, worksheet.lever_graphs_b2771, 0.002); end
  def test_lever_graphs_k2771; assert_in_delta(0.0, (worksheet.lever_graphs_k2771||0), 0.002); end
  def test_lever_graphs_l2771; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2771, 0.002); end
  def test_lever_graphs_m2771; assert_in_delta(-0.0015384615384615385, worksheet.lever_graphs_m2771, 0.002); end
  def test_lever_graphs_n2771; assert_in_delta(-0.002393162393162393, worksheet.lever_graphs_n2771, 0.002); end
  def test_lever_graphs_o2771; assert_in_delta(-0.003247863247863248, worksheet.lever_graphs_o2771, 0.002); end
  def test_lever_graphs_p2771; assert_in_delta(-0.0041025641025641026, worksheet.lever_graphs_p2771, 0.002); end
  def test_lever_graphs_q2771; assert_in_delta(-0.004957264957264958, worksheet.lever_graphs_q2771, 0.002); end
  def test_lever_graphs_r2771; assert_in_delta(-0.005811965811965812, worksheet.lever_graphs_r2771, 0.002); end
  def test_lever_graphs_s2771; assert_in_delta(-0.006666666666666667, worksheet.lever_graphs_s2771, 0.002); end
  def test_lever_graphs_b2772; assert_in_epsilon(3.0, worksheet.lever_graphs_b2772, 0.002); end
  def test_lever_graphs_k2772; assert_in_delta(0.0, (worksheet.lever_graphs_k2772||0), 0.002); end
  def test_lever_graphs_l2772; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2772, 0.002); end
  def test_lever_graphs_m2772; assert_in_delta(-0.0037606837606837607, worksheet.lever_graphs_m2772, 0.002); end
  def test_lever_graphs_n2772; assert_in_delta(-0.006837606837606838, worksheet.lever_graphs_n2772, 0.002); end
  def test_lever_graphs_o2772; assert_in_delta(-0.009914529914529915, worksheet.lever_graphs_o2772, 0.002); end
  def test_lever_graphs_p2772; assert_in_delta(-0.012991452991452991, worksheet.lever_graphs_p2772, 0.002); end
  def test_lever_graphs_q2772; assert_in_delta(-0.01606837606837607, worksheet.lever_graphs_q2772, 0.002); end
  def test_lever_graphs_r2772; assert_in_delta(-0.019145299145299145, worksheet.lever_graphs_r2772, 0.002); end
  def test_lever_graphs_s2772; assert_in_delta(-0.022222222222222223, worksheet.lever_graphs_s2772, 0.002); end
  def test_lever_graphs_b2773; assert_in_epsilon(4.0, worksheet.lever_graphs_b2773, 0.002); end
  def test_lever_graphs_k2773; assert_in_delta(0.0, (worksheet.lever_graphs_k2773||0), 0.002); end
  def test_lever_graphs_l2773; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2773, 0.002); end
  def test_lever_graphs_m2773; assert_in_delta(0.023223443223443226, worksheet.lever_graphs_m2773, 0.002); end
  def test_lever_graphs_n2773; assert_in_delta(0.04713064713064713, worksheet.lever_graphs_n2773, 0.002); end
  def test_lever_graphs_o2773; assert_in_delta(0.07103785103785104, worksheet.lever_graphs_o2773, 0.002); end
  def test_lever_graphs_p2773; assert_in_delta(0.09494505494505495, worksheet.lever_graphs_p2773, 0.002); end
  def test_lever_graphs_q2773; assert_in_delta(0.11885225885225886, worksheet.lever_graphs_q2773, 0.002); end
  def test_lever_graphs_r2773; assert_in_delta(0.14275946275946275, worksheet.lever_graphs_r2773, 0.002); end
  def test_lever_graphs_s2773; assert_in_delta(0.16666666666666666, worksheet.lever_graphs_s2773, 0.002); end
  def test_lever_graphs_b2346; assert_equal("Year", worksheet.lever_graphs_b2346); end
  def test_lever_graphs_c2346; assert_equal("Level", worksheet.lever_graphs_c2346); end
  def test_lever_graphs_d2346; assert_equal("Title", worksheet.lever_graphs_d2346); end
  def test_lever_graphs_e2346; assert_equal("Batteries", worksheet.lever_graphs_e2346); end
  def test_lever_graphs_f2346; assert_equal("Residential buildings", worksheet.lever_graphs_f2346); end
  def test_lever_graphs_g2346; assert_equal("Other buildings", worksheet.lever_graphs_g2346); end
  def test_lever_graphs_h2346; assert_equal("Infrastructure", worksheet.lever_graphs_h2346); end
  def test_lever_graphs_i2346; assert_equal("Mechanical equipments", worksheet.lever_graphs_i2346); end
  def test_lever_graphs_j2346; assert_equal("Appliance", worksheet.lever_graphs_j2346); end
  def test_lever_graphs_k2346; assert_equal("Print & graphic paper", worksheet.lever_graphs_k2346); end
  def test_lever_graphs_l2346; assert_equal("Metal goods", worksheet.lever_graphs_l2346); end
  def test_lever_graphs_m2346; assert_equal("Consumer packaging", worksheet.lever_graphs_m2346); end
  def test_lever_graphs_n2346; assert_equal("Fertilizer", worksheet.lever_graphs_n2346); end
  def test_lever_graphs_o2346; assert_equal("Wind turbines", worksheet.lever_graphs_o2346); end
  def test_lever_graphs_p2346; assert_equal("PV panels", worksheet.lever_graphs_p2346); end
  def test_lever_graphs_q2346; assert_equal("Electrical equipment", worksheet.lever_graphs_q2346); end
  def test_lever_graphs_r2346; assert_equal("Electrical cables", worksheet.lever_graphs_r2346); end
  def test_lever_graphs_s2346; assert_equal("Pipes", worksheet.lever_graphs_s2346); end
  def test_lever_graphs_t2346; assert_equal("Other steel", worksheet.lever_graphs_t2346); end
  def test_lever_graphs_u2346; assert_equal("Other chemicals", worksheet.lever_graphs_u2346); end
  def test_lever_graphs_v2346; assert_equal("Other aluminium", worksheet.lever_graphs_v2346); end
  def test_lever_graphs_w2346; assert_equal("Other cement", worksheet.lever_graphs_w2346); end
  def test_lever_graphs_x2346; assert_equal("Other paper", worksheet.lever_graphs_x2346); end
  def test_lever_graphs_y2346; assert_equal("Other timber", worksheet.lever_graphs_y2346); end
  def test_lever_graphs_z2346; assert_equal("Other", worksheet.lever_graphs_z2346); end
  def test_lever_graphs_aa2346; assert_equal("Other steel", worksheet.lever_graphs_aa2346); end
  def test_lever_graphs_ab2346; assert_equal("Other chemicals", worksheet.lever_graphs_ab2346); end
  def test_lever_graphs_ac2346; assert_equal("Other aluminium", worksheet.lever_graphs_ac2346); end
  def test_lever_graphs_ad2346; assert_equal("Other cement", worksheet.lever_graphs_ad2346); end
  def test_lever_graphs_ae2346; assert_equal("Other paper", worksheet.lever_graphs_ae2346); end
  def test_lever_graphs_af2346; assert_equal("Other timber", worksheet.lever_graphs_af2346); end
  def test_lever_graphs_ag2346; assert_equal("Other", worksheet.lever_graphs_ag2346); end
  def test_lever_graphs_b2347; assert_in_epsilon(2011.0, worksheet.lever_graphs_b2347, 0.002); end
  def test_lever_graphs_c2347; assert_in_delta(1.0, worksheet.lever_graphs_c2347, 0.002); end
  def test_lever_graphs_d2347; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2347, 0.002); end
  def test_lever_graphs_e2347; assert_in_delta(1.0, worksheet.lever_graphs_e2347, 0.002); end
  def test_lever_graphs_f2347; assert_in_delta(1.0, worksheet.lever_graphs_f2347, 0.002); end
  def test_lever_graphs_g2347; assert_in_delta(1.0, worksheet.lever_graphs_g2347, 0.002); end
  def test_lever_graphs_h2347; assert_in_delta(1.0, worksheet.lever_graphs_h2347, 0.002); end
  def test_lever_graphs_i2347; assert_in_delta(1.0, worksheet.lever_graphs_i2347, 0.002); end
  def test_lever_graphs_j2347; assert_in_delta(1.0, worksheet.lever_graphs_j2347, 0.002); end
  def test_lever_graphs_k2347; assert_in_delta(1.0, worksheet.lever_graphs_k2347, 0.002); end
  def test_lever_graphs_l2347; assert_in_delta(1.0, worksheet.lever_graphs_l2347, 0.002); end
  def test_lever_graphs_m2347; assert_in_delta(1.0, worksheet.lever_graphs_m2347, 0.002); end
  def test_lever_graphs_n2347; assert_in_delta(1.0, worksheet.lever_graphs_n2347, 0.002); end
  def test_lever_graphs_o2347; assert_in_delta(1.0, worksheet.lever_graphs_o2347, 0.002); end
  def test_lever_graphs_p2347; assert_in_delta(1.0, worksheet.lever_graphs_p2347, 0.002); end
  def test_lever_graphs_q2347; assert_in_delta(1.0, worksheet.lever_graphs_q2347, 0.002); end
  def test_lever_graphs_r2347; assert_in_delta(1.0, worksheet.lever_graphs_r2347, 0.002); end
  def test_lever_graphs_s2347; assert_in_delta(1.0, worksheet.lever_graphs_s2347, 0.002); end
  def test_lever_graphs_t2347; assert_in_delta(1.0, worksheet.lever_graphs_t2347, 0.002); end
  def test_lever_graphs_u2347; assert_in_delta(1.0, worksheet.lever_graphs_u2347, 0.002); end
  def test_lever_graphs_v2347; assert_in_delta(1.0, worksheet.lever_graphs_v2347, 0.002); end
  def test_lever_graphs_w2347; assert_in_delta(1.0, worksheet.lever_graphs_w2347, 0.002); end
  def test_lever_graphs_x2347; assert_in_delta(1.0, worksheet.lever_graphs_x2347, 0.002); end
  def test_lever_graphs_y2347; assert_in_delta(1.0, worksheet.lever_graphs_y2347, 0.002); end
  def test_lever_graphs_z2347; assert_in_delta(1.0, worksheet.lever_graphs_z2347, 0.002); end
  def test_lever_graphs_aa2347; assert_in_delta(1.0, worksheet.lever_graphs_aa2347, 0.002); end
  def test_lever_graphs_ab2347; assert_in_delta(1.0, worksheet.lever_graphs_ab2347, 0.002); end
  def test_lever_graphs_ac2347; assert_in_delta(1.0, worksheet.lever_graphs_ac2347, 0.002); end
  def test_lever_graphs_ad2347; assert_in_delta(1.0, worksheet.lever_graphs_ad2347, 0.002); end
  def test_lever_graphs_ae2347; assert_in_delta(1.0, worksheet.lever_graphs_ae2347, 0.002); end
  def test_lever_graphs_af2347; assert_in_delta(1.0, worksheet.lever_graphs_af2347, 0.002); end
  def test_lever_graphs_ag2347; assert_in_delta(1.0, worksheet.lever_graphs_ag2347, 0.002); end
  def test_lever_graphs_b2348; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2348, 0.002); end
  def test_lever_graphs_c2348; assert_in_delta(1.0, worksheet.lever_graphs_c2348, 0.002); end
  def test_lever_graphs_d2348; assert_equal("2050: Level 1", worksheet.lever_graphs_d2348); end
  def test_lever_graphs_e2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2348, 0.002); end
  def test_lever_graphs_f2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2348, 0.002); end
  def test_lever_graphs_g2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2348, 0.002); end
  def test_lever_graphs_h2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2348, 0.002); end
  def test_lever_graphs_i2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2348, 0.002); end
  def test_lever_graphs_j2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2348, 0.002); end
  def test_lever_graphs_k2348; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_k2348, 0.002); end
  def test_lever_graphs_l2348; assert_in_epsilon(1.645192447478974, worksheet.lever_graphs_l2348, 0.002); end
  def test_lever_graphs_m2348; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_m2348, 0.002); end
  def test_lever_graphs_n2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2348, 0.002); end
  def test_lever_graphs_o2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2348, 0.002); end
  def test_lever_graphs_p2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2348, 0.002); end
  def test_lever_graphs_q2348; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_q2348, 0.002); end
  def test_lever_graphs_r2348; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_r2348, 0.002); end
  def test_lever_graphs_s2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2348, 0.002); end
  def test_lever_graphs_t2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2348, 0.002); end
  def test_lever_graphs_u2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2348, 0.002); end
  def test_lever_graphs_v2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2348, 0.002); end
  def test_lever_graphs_w2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2348, 0.002); end
  def test_lever_graphs_x2348; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_x2348, 0.002); end
  def test_lever_graphs_y2348; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_y2348, 0.002); end
  def test_lever_graphs_z2348; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_z2348, 0.002); end
  def test_lever_graphs_aa2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2348, 0.002); end
  def test_lever_graphs_ab2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2348, 0.002); end
  def test_lever_graphs_ac2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2348, 0.002); end
  def test_lever_graphs_ad2348; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2348, 0.002); end
  def test_lever_graphs_ae2348; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_ae2348, 0.002); end
  def test_lever_graphs_af2348; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_af2348, 0.002); end
  def test_lever_graphs_ag2348; assert_in_epsilon(2.399238985906837, worksheet.lever_graphs_ag2348, 0.002); end
  def test_lever_graphs_b2349; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2349, 0.002); end
  def test_lever_graphs_c2349; assert_in_epsilon(2.0, worksheet.lever_graphs_c2349, 0.002); end
  def test_lever_graphs_d2349; assert_equal("2050: Level 2", worksheet.lever_graphs_d2349); end
  def test_lever_graphs_e2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2349, 0.002); end
  def test_lever_graphs_f2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2349, 0.002); end
  def test_lever_graphs_g2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2349, 0.002); end
  def test_lever_graphs_h2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2349, 0.002); end
  def test_lever_graphs_i2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2349, 0.002); end
  def test_lever_graphs_j2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2349, 0.002); end
  def test_lever_graphs_k2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_k2349, 0.002); end
  def test_lever_graphs_l2349; assert_in_epsilon(1.5080930768557264, worksheet.lever_graphs_l2349, 0.002); end
  def test_lever_graphs_m2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_m2349, 0.002); end
  def test_lever_graphs_n2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2349, 0.002); end
  def test_lever_graphs_o2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2349, 0.002); end
  def test_lever_graphs_p2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2349, 0.002); end
  def test_lever_graphs_q2349; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_q2349, 0.002); end
  def test_lever_graphs_r2349; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_r2349, 0.002); end
  def test_lever_graphs_s2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2349, 0.002); end
  def test_lever_graphs_t2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2349, 0.002); end
  def test_lever_graphs_u2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2349, 0.002); end
  def test_lever_graphs_v2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2349, 0.002); end
  def test_lever_graphs_w2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2349, 0.002); end
  def test_lever_graphs_x2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_x2349, 0.002); end
  def test_lever_graphs_y2349; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_y2349, 0.002); end
  def test_lever_graphs_z2349; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_z2349, 0.002); end
  def test_lever_graphs_aa2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2349, 0.002); end
  def test_lever_graphs_ab2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2349, 0.002); end
  def test_lever_graphs_ac2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2349, 0.002); end
  def test_lever_graphs_ad2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2349, 0.002); end
  def test_lever_graphs_ae2349; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ae2349, 0.002); end
  def test_lever_graphs_af2349; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_af2349, 0.002); end
  def test_lever_graphs_ag2349; assert_in_epsilon(2.0564905593487177, worksheet.lever_graphs_ag2349, 0.002); end
  def test_lever_graphs_b2350; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2350, 0.002); end
  def test_lever_graphs_c2350; assert_in_epsilon(3.0, worksheet.lever_graphs_c2350, 0.002); end
  def test_lever_graphs_d2350; assert_equal("2050: Level 3", worksheet.lever_graphs_d2350); end
  def test_lever_graphs_e2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2350, 0.002); end
  def test_lever_graphs_f2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2350, 0.002); end
  def test_lever_graphs_g2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2350, 0.002); end
  def test_lever_graphs_h2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2350, 0.002); end
  def test_lever_graphs_i2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2350, 0.002); end
  def test_lever_graphs_j2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2350, 0.002); end
  def test_lever_graphs_k2350; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_k2350, 0.002); end
  def test_lever_graphs_l2350; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_l2350, 0.002); end
  def test_lever_graphs_m2350; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_m2350, 0.002); end
  def test_lever_graphs_n2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2350, 0.002); end
  def test_lever_graphs_o2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2350, 0.002); end
  def test_lever_graphs_p2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2350, 0.002); end
  def test_lever_graphs_q2350; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_q2350, 0.002); end
  def test_lever_graphs_r2350; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_r2350, 0.002); end
  def test_lever_graphs_s2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2350, 0.002); end
  def test_lever_graphs_t2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2350, 0.002); end
  def test_lever_graphs_u2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2350, 0.002); end
  def test_lever_graphs_v2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2350, 0.002); end
  def test_lever_graphs_w2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2350, 0.002); end
  def test_lever_graphs_x2350; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_x2350, 0.002); end
  def test_lever_graphs_y2350; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_y2350, 0.002); end
  def test_lever_graphs_z2350; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_z2350, 0.002); end
  def test_lever_graphs_aa2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2350, 0.002); end
  def test_lever_graphs_ab2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2350, 0.002); end
  def test_lever_graphs_ac2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2350, 0.002); end
  def test_lever_graphs_ad2350; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2350, 0.002); end
  def test_lever_graphs_ae2350; assert_in_epsilon(1.2338943356092307, worksheet.lever_graphs_ae2350, 0.002); end
  def test_lever_graphs_af2350; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_af2350, 0.002); end
  def test_lever_graphs_ag2350; assert_in_epsilon(1.713742132790598, worksheet.lever_graphs_ag2350, 0.002); end
  def test_lever_graphs_b2351; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2351, 0.002); end
  def test_lever_graphs_c2351; assert_in_epsilon(4.0, worksheet.lever_graphs_c2351, 0.002); end
  def test_lever_graphs_d2351; assert_equal("2050: Level 4", worksheet.lever_graphs_d2351); end
  def test_lever_graphs_e2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_e2351, 0.002); end
  def test_lever_graphs_f2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_f2351, 0.002); end
  def test_lever_graphs_g2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_g2351, 0.002); end
  def test_lever_graphs_h2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_h2351, 0.002); end
  def test_lever_graphs_i2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_i2351, 0.002); end
  def test_lever_graphs_j2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_j2351, 0.002); end
  def test_lever_graphs_k2351; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_k2351, 0.002); end
  def test_lever_graphs_l2351; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_l2351, 0.002); end
  def test_lever_graphs_m2351; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_m2351, 0.002); end
  def test_lever_graphs_n2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_n2351, 0.002); end
  def test_lever_graphs_o2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_o2351, 0.002); end
  def test_lever_graphs_p2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_p2351, 0.002); end
  def test_lever_graphs_q2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_q2351, 0.002); end
  def test_lever_graphs_r2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_r2351, 0.002); end
  def test_lever_graphs_s2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_s2351, 0.002); end
  def test_lever_graphs_t2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_t2351, 0.002); end
  def test_lever_graphs_u2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_u2351, 0.002); end
  def test_lever_graphs_v2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_v2351, 0.002); end
  def test_lever_graphs_w2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_w2351, 0.002); end
  def test_lever_graphs_x2351; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_x2351, 0.002); end
  def test_lever_graphs_y2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_y2351, 0.002); end
  def test_lever_graphs_z2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_z2351, 0.002); end
  def test_lever_graphs_aa2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_aa2351, 0.002); end
  def test_lever_graphs_ab2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ab2351, 0.002); end
  def test_lever_graphs_ac2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ac2351, 0.002); end
  def test_lever_graphs_ad2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ad2351, 0.002); end
  def test_lever_graphs_ae2351; assert_in_epsilon(1.0967949649859827, worksheet.lever_graphs_ae2351, 0.002); end
  def test_lever_graphs_af2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_af2351, 0.002); end
  def test_lever_graphs_ag2351; assert_in_epsilon(1.3709937062324784, worksheet.lever_graphs_ag2351, 0.002); end
  def test_lever_graphs_d1744; assert_equal("Title", worksheet.lever_graphs_d1744); end
  def test_lever_graphs_e1744; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_e1744); end
  def test_lever_graphs_f1744; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_f1744); end
  def test_lever_graphs_d1745; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1745, 0.002); end
  def test_lever_graphs_e1745; assert_in_delta(0.35, worksheet.lever_graphs_e1745, 0.002); end
  def test_lever_graphs_f1745; assert_in_delta(0.65, worksheet.lever_graphs_f1745, 0.002); end
  def test_lever_graphs_d1746; assert_equal("2050: Level 1", worksheet.lever_graphs_d1746); end
  def test_lever_graphs_e1746; assert_in_delta(0.61, worksheet.lever_graphs_e1746, 0.002); end
  def test_lever_graphs_f1746; assert_in_delta(0.39, worksheet.lever_graphs_f1746, 0.002); end
  def test_lever_graphs_d1747; assert_equal("2050: Level 2", worksheet.lever_graphs_d1747); end
  def test_lever_graphs_e1747; assert_in_delta(0.475, worksheet.lever_graphs_e1747, 0.002); end
  def test_lever_graphs_f1747; assert_in_delta(0.525, worksheet.lever_graphs_f1747, 0.002); end
  def test_lever_graphs_d1748; assert_equal("2050: Level 3", worksheet.lever_graphs_d1748); end
  def test_lever_graphs_e1748; assert_in_delta(0.175, worksheet.lever_graphs_e1748, 0.002); end
  def test_lever_graphs_f1748; assert_in_delta(0.825, worksheet.lever_graphs_f1748, 0.002); end
  def test_lever_graphs_d1749; assert_equal("2050: Level 4", worksheet.lever_graphs_d1749); end
  def test_lever_graphs_e1749; assert_in_delta(0.07, worksheet.lever_graphs_e1749, 0.002); end
  def test_lever_graphs_f1749; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_f1749, 0.002); end
  def test_lever_graphs_c3710; assert_equal("1975", worksheet.lever_graphs_c3710); end
  def test_lever_graphs_d3710; assert_equal("1980", worksheet.lever_graphs_d3710); end
  def test_lever_graphs_e3710; assert_equal("1985", worksheet.lever_graphs_e3710); end
  def test_lever_graphs_f3710; assert_equal("1990", worksheet.lever_graphs_f3710); end
  def test_lever_graphs_g3710; assert_equal("1995", worksheet.lever_graphs_g3710); end
  def test_lever_graphs_h3710; assert_equal("2000", worksheet.lever_graphs_h3710); end
  def test_lever_graphs_i3710; assert_equal("2005", worksheet.lever_graphs_i3710); end
  def test_lever_graphs_j3710; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3710, 0.002); end
  def test_lever_graphs_k3710; assert_equal("2011", worksheet.lever_graphs_k3710); end
  def test_lever_graphs_l3710; assert_equal("2015", worksheet.lever_graphs_l3710); end
  def test_lever_graphs_m3710; assert_equal("2020", worksheet.lever_graphs_m3710); end
  def test_lever_graphs_n3710; assert_equal("2025", worksheet.lever_graphs_n3710); end
  def test_lever_graphs_o3710; assert_equal("2030", worksheet.lever_graphs_o3710); end
  def test_lever_graphs_p3710; assert_equal("2035", worksheet.lever_graphs_p3710); end
  def test_lever_graphs_q3710; assert_equal("2040", worksheet.lever_graphs_q3710); end
  def test_lever_graphs_r3710; assert_equal("2045", worksheet.lever_graphs_r3710); end
  def test_lever_graphs_s3710; assert_equal("2050", worksheet.lever_graphs_s3710); end
  def test_lever_graphs_b3711; assert_equal("Historic data", worksheet.lever_graphs_b3711); end
  def test_lever_graphs_b3712; assert_in_delta(1.0, worksheet.lever_graphs_b3712, 0.002); end
  def test_lever_graphs_k3712; assert_in_delta(0.0, (worksheet.lever_graphs_k3712||0), 0.002); end
  def test_lever_graphs_l3712; assert_in_delta(0.0, (worksheet.lever_graphs_l3712||0), 0.002); end
  def test_lever_graphs_m3712; assert_in_delta(0.0, (worksheet.lever_graphs_m3712||0), 0.002); end
  def test_lever_graphs_n3712; assert_in_delta(0.0, (worksheet.lever_graphs_n3712||0), 0.002); end
  def test_lever_graphs_o3712; assert_in_delta(0.0, (worksheet.lever_graphs_o3712||0), 0.002); end
  def test_lever_graphs_p3712; assert_in_delta(0.0, (worksheet.lever_graphs_p3712||0), 0.002); end
  def test_lever_graphs_q3712; assert_in_delta(0.0, (worksheet.lever_graphs_q3712||0), 0.002); end
  def test_lever_graphs_r3712; assert_in_delta(0.0, (worksheet.lever_graphs_r3712||0), 0.002); end
  def test_lever_graphs_s3712; assert_in_delta(0.0, (worksheet.lever_graphs_s3712||0), 0.002); end
  def test_lever_graphs_b3713; assert_in_epsilon(2.0, worksheet.lever_graphs_b3713, 0.002); end
  def test_lever_graphs_k3713; assert_in_delta(0.0, (worksheet.lever_graphs_k3713||0), 0.002); end
  def test_lever_graphs_l3713; assert_in_delta(0.0, (worksheet.lever_graphs_l3713||0), 0.002); end
  def test_lever_graphs_m3713; assert_in_delta(0.0, (worksheet.lever_graphs_m3713||0), 0.002); end
  def test_lever_graphs_n3713; assert_in_delta(0.0033000000000000004, worksheet.lever_graphs_n3713, 0.002); end
  def test_lever_graphs_o3713; assert_in_delta(0.0165, worksheet.lever_graphs_o3713, 0.002); end
  def test_lever_graphs_p3713; assert_in_delta(0.066, worksheet.lever_graphs_p3713, 0.002); end
  def test_lever_graphs_q3713; assert_in_delta(0.132, worksheet.lever_graphs_q3713, 0.002); end
  def test_lever_graphs_r3713; assert_in_delta(0.23099999999999998, worksheet.lever_graphs_r3713, 0.002); end
  def test_lever_graphs_s3713; assert_in_delta(0.33, worksheet.lever_graphs_s3713, 0.002); end
  def test_lever_graphs_b3714; assert_in_epsilon(3.0, worksheet.lever_graphs_b3714, 0.002); end
  def test_lever_graphs_k3714; assert_in_delta(0.0, (worksheet.lever_graphs_k3714||0), 0.002); end
  def test_lever_graphs_l3714; assert_in_delta(0.0, (worksheet.lever_graphs_l3714||0), 0.002); end
  def test_lever_graphs_m3714; assert_in_delta(0.0, (worksheet.lever_graphs_m3714||0), 0.002); end
  def test_lever_graphs_n3714; assert_in_delta(0.00825, worksheet.lever_graphs_n3714, 0.002); end
  def test_lever_graphs_o3714; assert_in_delta(0.04125, worksheet.lever_graphs_o3714, 0.002); end
  def test_lever_graphs_p3714; assert_in_delta(0.165, worksheet.lever_graphs_p3714, 0.002); end
  def test_lever_graphs_q3714; assert_in_delta(0.33, worksheet.lever_graphs_q3714, 0.002); end
  def test_lever_graphs_r3714; assert_in_delta(0.5774999999999999, worksheet.lever_graphs_r3714, 0.002); end
  def test_lever_graphs_s3714; assert_in_delta(0.825, worksheet.lever_graphs_s3714, 0.002); end
  def test_lever_graphs_b3715; assert_in_epsilon(4.0, worksheet.lever_graphs_b3715, 0.002); end
  def test_lever_graphs_k3715; assert_in_delta(0.0, (worksheet.lever_graphs_k3715||0), 0.002); end
  def test_lever_graphs_l3715; assert_in_delta(0.0, (worksheet.lever_graphs_l3715||0), 0.002); end
  def test_lever_graphs_m3715; assert_in_delta(0.0, (worksheet.lever_graphs_m3715||0), 0.002); end
  def test_lever_graphs_n3715; assert_in_delta(0.033, worksheet.lever_graphs_n3715, 0.002); end
  def test_lever_graphs_o3715; assert_in_delta(0.165, worksheet.lever_graphs_o3715, 0.002); end
  def test_lever_graphs_p3715; assert_in_delta(0.66, worksheet.lever_graphs_p3715, 0.002); end
  def test_lever_graphs_q3715; assert_in_epsilon(1.32, worksheet.lever_graphs_q3715, 0.002); end
  def test_lever_graphs_r3715; assert_in_epsilon(2.3099999999999996, worksheet.lever_graphs_r3715, 0.002); end
  def test_lever_graphs_s3715; assert_in_epsilon(3.3, worksheet.lever_graphs_s3715, 0.002); end
  def test_lever_graphs_c3728; assert_equal("1975", worksheet.lever_graphs_c3728); end
  def test_lever_graphs_d3728; assert_equal("1980", worksheet.lever_graphs_d3728); end
  def test_lever_graphs_e3728; assert_equal("1985", worksheet.lever_graphs_e3728); end
  def test_lever_graphs_f3728; assert_equal("1990", worksheet.lever_graphs_f3728); end
  def test_lever_graphs_g3728; assert_equal("1995", worksheet.lever_graphs_g3728); end
  def test_lever_graphs_h3728; assert_equal("2000", worksheet.lever_graphs_h3728); end
  def test_lever_graphs_i3728; assert_equal("2005", worksheet.lever_graphs_i3728); end
  def test_lever_graphs_j3728; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3728, 0.002); end
  def test_lever_graphs_k3728; assert_equal("2011", worksheet.lever_graphs_k3728); end
  def test_lever_graphs_l3728; assert_equal("2015", worksheet.lever_graphs_l3728); end
  def test_lever_graphs_m3728; assert_equal("2020", worksheet.lever_graphs_m3728); end
  def test_lever_graphs_n3728; assert_equal("2025", worksheet.lever_graphs_n3728); end
  def test_lever_graphs_o3728; assert_equal("2030", worksheet.lever_graphs_o3728); end
  def test_lever_graphs_p3728; assert_equal("2035", worksheet.lever_graphs_p3728); end
  def test_lever_graphs_q3728; assert_equal("2040", worksheet.lever_graphs_q3728); end
  def test_lever_graphs_r3728; assert_equal("2045", worksheet.lever_graphs_r3728); end
  def test_lever_graphs_s3728; assert_equal("2050", worksheet.lever_graphs_s3728); end
  def test_lever_graphs_b3729; assert_equal("Historic data", worksheet.lever_graphs_b3729); end
  def test_lever_graphs_b3730; assert_in_delta(1.0, worksheet.lever_graphs_b3730, 0.002); end
  def test_lever_graphs_k3730; assert_in_delta(0.0, (worksheet.lever_graphs_k3730||0), 0.002); end
  def test_lever_graphs_l3730; assert_in_delta(0.0, (worksheet.lever_graphs_l3730||0), 0.002); end
  def test_lever_graphs_m3730; assert_in_delta(0.0, (worksheet.lever_graphs_m3730||0), 0.002); end
  def test_lever_graphs_n3730; assert_in_delta(0.0, (worksheet.lever_graphs_n3730||0), 0.002); end
  def test_lever_graphs_o3730; assert_in_delta(0.0, (worksheet.lever_graphs_o3730||0), 0.002); end
  def test_lever_graphs_p3730; assert_in_delta(0.0, (worksheet.lever_graphs_p3730||0), 0.002); end
  def test_lever_graphs_q3730; assert_in_delta(0.0, (worksheet.lever_graphs_q3730||0), 0.002); end
  def test_lever_graphs_r3730; assert_in_delta(0.0, (worksheet.lever_graphs_r3730||0), 0.002); end
  def test_lever_graphs_s3730; assert_in_delta(0.0, (worksheet.lever_graphs_s3730||0), 0.002); end
  def test_lever_graphs_b3731; assert_in_epsilon(2.0, worksheet.lever_graphs_b3731, 0.002); end
  def test_lever_graphs_k3731; assert_in_delta(0.0, (worksheet.lever_graphs_k3731||0), 0.002); end
  def test_lever_graphs_l3731; assert_in_delta(0.0, (worksheet.lever_graphs_l3731||0), 0.002); end
  def test_lever_graphs_m3731; assert_in_delta(0.0, (worksheet.lever_graphs_m3731||0), 0.002); end
  def test_lever_graphs_n3731; assert_in_delta(0.01, worksheet.lever_graphs_n3731, 0.002); end
  def test_lever_graphs_o3731; assert_in_delta(0.05, worksheet.lever_graphs_o3731, 0.002); end
  def test_lever_graphs_p3731; assert_in_delta(0.2, worksheet.lever_graphs_p3731, 0.002); end
  def test_lever_graphs_q3731; assert_in_delta(0.4, worksheet.lever_graphs_q3731, 0.002); end
  def test_lever_graphs_r3731; assert_in_delta(0.7, worksheet.lever_graphs_r3731, 0.002); end
  def test_lever_graphs_s3731; assert_in_delta(1.0, worksheet.lever_graphs_s3731, 0.002); end
  def test_lever_graphs_b3732; assert_in_epsilon(3.0, worksheet.lever_graphs_b3732, 0.002); end
  def test_lever_graphs_k3732; assert_in_delta(0.0, (worksheet.lever_graphs_k3732||0), 0.002); end
  def test_lever_graphs_l3732; assert_in_delta(0.0, (worksheet.lever_graphs_l3732||0), 0.002); end
  def test_lever_graphs_m3732; assert_in_delta(0.0, (worksheet.lever_graphs_m3732||0), 0.002); end
  def test_lever_graphs_n3732; assert_in_delta(0.025, worksheet.lever_graphs_n3732, 0.002); end
  def test_lever_graphs_o3732; assert_in_delta(0.125, worksheet.lever_graphs_o3732, 0.002); end
  def test_lever_graphs_p3732; assert_in_delta(0.5, worksheet.lever_graphs_p3732, 0.002); end
  def test_lever_graphs_q3732; assert_in_delta(1.0, worksheet.lever_graphs_q3732, 0.002); end
  def test_lever_graphs_r3732; assert_in_epsilon(1.75, worksheet.lever_graphs_r3732, 0.002); end
  def test_lever_graphs_s3732; assert_in_epsilon(2.5, worksheet.lever_graphs_s3732, 0.002); end
  def test_lever_graphs_b3733; assert_in_epsilon(4.0, worksheet.lever_graphs_b3733, 0.002); end
  def test_lever_graphs_k3733; assert_in_delta(0.0, (worksheet.lever_graphs_k3733||0), 0.002); end
  def test_lever_graphs_l3733; assert_in_delta(0.0, (worksheet.lever_graphs_l3733||0), 0.002); end
  def test_lever_graphs_m3733; assert_in_delta(0.0, (worksheet.lever_graphs_m3733||0), 0.002); end
  def test_lever_graphs_n3733; assert_in_delta(0.1, worksheet.lever_graphs_n3733, 0.002); end
  def test_lever_graphs_o3733; assert_in_delta(0.5, worksheet.lever_graphs_o3733, 0.002); end
  def test_lever_graphs_p3733; assert_in_epsilon(2.0, worksheet.lever_graphs_p3733, 0.002); end
  def test_lever_graphs_q3733; assert_in_epsilon(4.0, worksheet.lever_graphs_q3733, 0.002); end
  def test_lever_graphs_r3733; assert_in_epsilon(7.0, worksheet.lever_graphs_r3733, 0.002); end
  def test_lever_graphs_s3733; assert_in_epsilon(10.0, worksheet.lever_graphs_s3733, 0.002); end
  def test_lever_graphs_c3746; assert_equal("1975", worksheet.lever_graphs_c3746); end
  def test_lever_graphs_d3746; assert_equal("1980", worksheet.lever_graphs_d3746); end
  def test_lever_graphs_e3746; assert_equal("1985", worksheet.lever_graphs_e3746); end
  def test_lever_graphs_f3746; assert_equal("1990", worksheet.lever_graphs_f3746); end
  def test_lever_graphs_g3746; assert_equal("1995", worksheet.lever_graphs_g3746); end
  def test_lever_graphs_h3746; assert_equal("2000", worksheet.lever_graphs_h3746); end
  def test_lever_graphs_i3746; assert_equal("2005", worksheet.lever_graphs_i3746); end
  def test_lever_graphs_j3746; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3746, 0.002); end
  def test_lever_graphs_k3746; assert_equal("2011", worksheet.lever_graphs_k3746); end
  def test_lever_graphs_l3746; assert_equal("2015", worksheet.lever_graphs_l3746); end
  def test_lever_graphs_m3746; assert_equal("2020", worksheet.lever_graphs_m3746); end
  def test_lever_graphs_n3746; assert_equal("2025", worksheet.lever_graphs_n3746); end
  def test_lever_graphs_o3746; assert_equal("2030", worksheet.lever_graphs_o3746); end
  def test_lever_graphs_p3746; assert_equal("2035", worksheet.lever_graphs_p3746); end
  def test_lever_graphs_q3746; assert_equal("2040", worksheet.lever_graphs_q3746); end
  def test_lever_graphs_r3746; assert_equal("2045", worksheet.lever_graphs_r3746); end
  def test_lever_graphs_s3746; assert_equal("2050", worksheet.lever_graphs_s3746); end
  def test_lever_graphs_b3747; assert_equal("Historic data", worksheet.lever_graphs_b3747); end
  def test_lever_graphs_b3748; assert_in_delta(1.0, worksheet.lever_graphs_b3748, 0.002); end
  def test_lever_graphs_k3748; assert_in_delta(0.0, (worksheet.lever_graphs_k3748||0), 0.002); end
  def test_lever_graphs_l3748; assert_in_delta(0.0, (worksheet.lever_graphs_l3748||0), 0.002); end
  def test_lever_graphs_m3748; assert_in_delta(0.0, (worksheet.lever_graphs_m3748||0), 0.002); end
  def test_lever_graphs_n3748; assert_in_delta(0.0, (worksheet.lever_graphs_n3748||0), 0.002); end
  def test_lever_graphs_o3748; assert_in_delta(0.0, (worksheet.lever_graphs_o3748||0), 0.002); end
  def test_lever_graphs_p3748; assert_in_delta(0.0, (worksheet.lever_graphs_p3748||0), 0.002); end
  def test_lever_graphs_q3748; assert_in_delta(0.0, (worksheet.lever_graphs_q3748||0), 0.002); end
  def test_lever_graphs_r3748; assert_in_delta(0.0, (worksheet.lever_graphs_r3748||0), 0.002); end
  def test_lever_graphs_s3748; assert_in_delta(0.0, (worksheet.lever_graphs_s3748||0), 0.002); end
  def test_lever_graphs_b3749; assert_in_epsilon(2.0, worksheet.lever_graphs_b3749, 0.002); end
  def test_lever_graphs_k3749; assert_in_delta(0.0, (worksheet.lever_graphs_k3749||0), 0.002); end
  def test_lever_graphs_l3749; assert_in_delta(0.0, (worksheet.lever_graphs_l3749||0), 0.002); end
  def test_lever_graphs_m3749; assert_in_delta(0.0, (worksheet.lever_graphs_m3749||0), 0.002); end
  def test_lever_graphs_n3749; assert_in_delta(0.001, worksheet.lever_graphs_n3749, 0.002); end
  def test_lever_graphs_o3749; assert_in_delta(0.005000000000000001, worksheet.lever_graphs_o3749, 0.002); end
  def test_lever_graphs_p3749; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_p3749, 0.002); end
  def test_lever_graphs_q3749; assert_in_delta(0.04000000000000001, worksheet.lever_graphs_q3749, 0.002); end
  def test_lever_graphs_r3749; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_r3749, 0.002); end
  def test_lever_graphs_s3749; assert_in_delta(0.1, worksheet.lever_graphs_s3749, 0.002); end
  def test_lever_graphs_b3750; assert_in_epsilon(3.0, worksheet.lever_graphs_b3750, 0.002); end
  def test_lever_graphs_k3750; assert_in_delta(0.0, (worksheet.lever_graphs_k3750||0), 0.002); end
  def test_lever_graphs_l3750; assert_in_delta(0.0, (worksheet.lever_graphs_l3750||0), 0.002); end
  def test_lever_graphs_m3750; assert_in_delta(0.0, (worksheet.lever_graphs_m3750||0), 0.002); end
  def test_lever_graphs_n3750; assert_in_delta(0.0025, worksheet.lever_graphs_n3750, 0.002); end
  def test_lever_graphs_o3750; assert_in_delta(0.0125, worksheet.lever_graphs_o3750, 0.002); end
  def test_lever_graphs_p3750; assert_in_delta(0.05, worksheet.lever_graphs_p3750, 0.002); end
  def test_lever_graphs_q3750; assert_in_delta(0.1, worksheet.lever_graphs_q3750, 0.002); end
  def test_lever_graphs_r3750; assert_in_delta(0.175, worksheet.lever_graphs_r3750, 0.002); end
  def test_lever_graphs_s3750; assert_in_delta(0.25, worksheet.lever_graphs_s3750, 0.002); end
  def test_lever_graphs_b3751; assert_in_epsilon(4.0, worksheet.lever_graphs_b3751, 0.002); end
  def test_lever_graphs_k3751; assert_in_delta(0.0, (worksheet.lever_graphs_k3751||0), 0.002); end
  def test_lever_graphs_l3751; assert_in_delta(0.0, (worksheet.lever_graphs_l3751||0), 0.002); end
  def test_lever_graphs_m3751; assert_in_delta(0.0, (worksheet.lever_graphs_m3751||0), 0.002); end
  def test_lever_graphs_n3751; assert_in_delta(0.01, worksheet.lever_graphs_n3751, 0.002); end
  def test_lever_graphs_o3751; assert_in_delta(0.05, worksheet.lever_graphs_o3751, 0.002); end
  def test_lever_graphs_p3751; assert_in_delta(0.2, worksheet.lever_graphs_p3751, 0.002); end
  def test_lever_graphs_q3751; assert_in_delta(0.4, worksheet.lever_graphs_q3751, 0.002); end
  def test_lever_graphs_r3751; assert_in_delta(0.7, worksheet.lever_graphs_r3751, 0.002); end
  def test_lever_graphs_s3751; assert_in_delta(1.0, worksheet.lever_graphs_s3751, 0.002); end
  def test_lever_graphs_c3764; assert_equal("1975", worksheet.lever_graphs_c3764); end
  def test_lever_graphs_d3764; assert_equal("1980", worksheet.lever_graphs_d3764); end
  def test_lever_graphs_e3764; assert_equal("1985", worksheet.lever_graphs_e3764); end
  def test_lever_graphs_f3764; assert_equal("1990", worksheet.lever_graphs_f3764); end
  def test_lever_graphs_g3764; assert_equal("1995", worksheet.lever_graphs_g3764); end
  def test_lever_graphs_h3764; assert_equal("2000", worksheet.lever_graphs_h3764); end
  def test_lever_graphs_i3764; assert_equal("2005", worksheet.lever_graphs_i3764); end
  def test_lever_graphs_j3764; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3764, 0.002); end
  def test_lever_graphs_k3764; assert_equal("2011", worksheet.lever_graphs_k3764); end
  def test_lever_graphs_l3764; assert_equal("2015", worksheet.lever_graphs_l3764); end
  def test_lever_graphs_m3764; assert_equal("2020", worksheet.lever_graphs_m3764); end
  def test_lever_graphs_n3764; assert_equal("2025", worksheet.lever_graphs_n3764); end
  def test_lever_graphs_o3764; assert_equal("2030", worksheet.lever_graphs_o3764); end
  def test_lever_graphs_p3764; assert_equal("2035", worksheet.lever_graphs_p3764); end
  def test_lever_graphs_q3764; assert_equal("2040", worksheet.lever_graphs_q3764); end
  def test_lever_graphs_r3764; assert_equal("2045", worksheet.lever_graphs_r3764); end
  def test_lever_graphs_s3764; assert_equal("2050", worksheet.lever_graphs_s3764); end
  def test_lever_graphs_b3765; assert_equal("Historic data", worksheet.lever_graphs_b3765); end
  def test_lever_graphs_b3766; assert_in_delta(1.0, worksheet.lever_graphs_b3766, 0.002); end
  def test_lever_graphs_k3766; assert_in_delta(0.0, (worksheet.lever_graphs_k3766||0), 0.002); end
  def test_lever_graphs_l3766; assert_in_delta(0.0, (worksheet.lever_graphs_l3766||0), 0.002); end
  def test_lever_graphs_m3766; assert_in_delta(0.0, (worksheet.lever_graphs_m3766||0), 0.002); end
  def test_lever_graphs_n3766; assert_in_delta(0.0, (worksheet.lever_graphs_n3766||0), 0.002); end
  def test_lever_graphs_o3766; assert_in_delta(0.0, (worksheet.lever_graphs_o3766||0), 0.002); end
  def test_lever_graphs_p3766; assert_in_delta(0.0, (worksheet.lever_graphs_p3766||0), 0.002); end
  def test_lever_graphs_q3766; assert_in_delta(0.0, (worksheet.lever_graphs_q3766||0), 0.002); end
  def test_lever_graphs_r3766; assert_in_delta(0.0, (worksheet.lever_graphs_r3766||0), 0.002); end
  def test_lever_graphs_s3766; assert_in_delta(0.0, (worksheet.lever_graphs_s3766||0), 0.002); end
  def test_lever_graphs_b3767; assert_in_epsilon(2.0, worksheet.lever_graphs_b3767, 0.002); end
  def test_lever_graphs_k3767; assert_in_delta(0.0, (worksheet.lever_graphs_k3767||0), 0.002); end
  def test_lever_graphs_l3767; assert_in_delta(0.0, (worksheet.lever_graphs_l3767||0), 0.002); end
  def test_lever_graphs_m3767; assert_in_delta(0.0, (worksheet.lever_graphs_m3767||0), 0.002); end
  def test_lever_graphs_n3767; assert_in_delta(0.01, worksheet.lever_graphs_n3767, 0.002); end
  def test_lever_graphs_o3767; assert_in_delta(0.05, worksheet.lever_graphs_o3767, 0.002); end
  def test_lever_graphs_p3767; assert_in_delta(0.2, worksheet.lever_graphs_p3767, 0.002); end
  def test_lever_graphs_q3767; assert_in_delta(0.4, worksheet.lever_graphs_q3767, 0.002); end
  def test_lever_graphs_r3767; assert_in_delta(0.7, worksheet.lever_graphs_r3767, 0.002); end
  def test_lever_graphs_s3767; assert_in_delta(1.0, worksheet.lever_graphs_s3767, 0.002); end
  def test_lever_graphs_b3768; assert_in_epsilon(3.0, worksheet.lever_graphs_b3768, 0.002); end
  def test_lever_graphs_k3768; assert_in_delta(0.0, (worksheet.lever_graphs_k3768||0), 0.002); end
  def test_lever_graphs_l3768; assert_in_delta(0.0, (worksheet.lever_graphs_l3768||0), 0.002); end
  def test_lever_graphs_m3768; assert_in_delta(0.0, (worksheet.lever_graphs_m3768||0), 0.002); end
  def test_lever_graphs_n3768; assert_in_delta(0.025, worksheet.lever_graphs_n3768, 0.002); end
  def test_lever_graphs_o3768; assert_in_delta(0.125, worksheet.lever_graphs_o3768, 0.002); end
  def test_lever_graphs_p3768; assert_in_delta(0.5, worksheet.lever_graphs_p3768, 0.002); end
  def test_lever_graphs_q3768; assert_in_delta(1.0, worksheet.lever_graphs_q3768, 0.002); end
  def test_lever_graphs_r3768; assert_in_epsilon(1.75, worksheet.lever_graphs_r3768, 0.002); end
  def test_lever_graphs_s3768; assert_in_epsilon(2.5, worksheet.lever_graphs_s3768, 0.002); end
  def test_lever_graphs_b3769; assert_in_epsilon(4.0, worksheet.lever_graphs_b3769, 0.002); end
  def test_lever_graphs_k3769; assert_in_delta(0.0, (worksheet.lever_graphs_k3769||0), 0.002); end
  def test_lever_graphs_l3769; assert_in_delta(0.0, (worksheet.lever_graphs_l3769||0), 0.002); end
  def test_lever_graphs_m3769; assert_in_delta(0.0, (worksheet.lever_graphs_m3769||0), 0.002); end
  def test_lever_graphs_n3769; assert_in_delta(0.1, worksheet.lever_graphs_n3769, 0.002); end
  def test_lever_graphs_o3769; assert_in_delta(0.5, worksheet.lever_graphs_o3769, 0.002); end
  def test_lever_graphs_p3769; assert_in_epsilon(2.0, worksheet.lever_graphs_p3769, 0.002); end
  def test_lever_graphs_q3769; assert_in_epsilon(4.0, worksheet.lever_graphs_q3769, 0.002); end
  def test_lever_graphs_r3769; assert_in_epsilon(7.0, worksheet.lever_graphs_r3769, 0.002); end
  def test_lever_graphs_s3769; assert_in_epsilon(10.0, worksheet.lever_graphs_s3769, 0.002); end
  def test_lever_graphs_c3782; assert_equal("1975", worksheet.lever_graphs_c3782); end
  def test_lever_graphs_d3782; assert_equal("1980", worksheet.lever_graphs_d3782); end
  def test_lever_graphs_e3782; assert_equal("1985", worksheet.lever_graphs_e3782); end
  def test_lever_graphs_f3782; assert_equal("1990", worksheet.lever_graphs_f3782); end
  def test_lever_graphs_g3782; assert_equal("1995", worksheet.lever_graphs_g3782); end
  def test_lever_graphs_h3782; assert_equal("2000", worksheet.lever_graphs_h3782); end
  def test_lever_graphs_i3782; assert_equal("2005", worksheet.lever_graphs_i3782); end
  def test_lever_graphs_j3782; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3782, 0.002); end
  def test_lever_graphs_k3782; assert_equal("2011", worksheet.lever_graphs_k3782); end
  def test_lever_graphs_l3782; assert_equal("2015", worksheet.lever_graphs_l3782); end
  def test_lever_graphs_m3782; assert_equal("2020", worksheet.lever_graphs_m3782); end
  def test_lever_graphs_n3782; assert_equal("2025", worksheet.lever_graphs_n3782); end
  def test_lever_graphs_o3782; assert_equal("2030", worksheet.lever_graphs_o3782); end
  def test_lever_graphs_p3782; assert_equal("2035", worksheet.lever_graphs_p3782); end
  def test_lever_graphs_q3782; assert_equal("2040", worksheet.lever_graphs_q3782); end
  def test_lever_graphs_r3782; assert_equal("2045", worksheet.lever_graphs_r3782); end
  def test_lever_graphs_s3782; assert_equal("2050", worksheet.lever_graphs_s3782); end
  def test_lever_graphs_b3783; assert_equal("Historic data", worksheet.lever_graphs_b3783); end
  def test_lever_graphs_b3784; assert_in_delta(1.0, worksheet.lever_graphs_b3784, 0.002); end
  def test_lever_graphs_k3784; assert_in_delta(0.0, (worksheet.lever_graphs_k3784||0), 0.002); end
  def test_lever_graphs_l3784; assert_in_delta(0.0, (worksheet.lever_graphs_l3784||0), 0.002); end
  def test_lever_graphs_m3784; assert_in_delta(0.0, (worksheet.lever_graphs_m3784||0), 0.002); end
  def test_lever_graphs_n3784; assert_in_delta(0.0, (worksheet.lever_graphs_n3784||0), 0.002); end
  def test_lever_graphs_o3784; assert_in_delta(0.0, (worksheet.lever_graphs_o3784||0), 0.002); end
  def test_lever_graphs_p3784; assert_in_delta(0.0, (worksheet.lever_graphs_p3784||0), 0.002); end
  def test_lever_graphs_q3784; assert_in_delta(0.0, (worksheet.lever_graphs_q3784||0), 0.002); end
  def test_lever_graphs_r3784; assert_in_delta(0.0, (worksheet.lever_graphs_r3784||0), 0.002); end
  def test_lever_graphs_s3784; assert_in_delta(0.0, (worksheet.lever_graphs_s3784||0), 0.002); end
  def test_lever_graphs_b3785; assert_in_epsilon(2.0, worksheet.lever_graphs_b3785, 0.002); end
  def test_lever_graphs_k3785; assert_in_delta(0.0, (worksheet.lever_graphs_k3785||0), 0.002); end
  def test_lever_graphs_l3785; assert_in_delta(0.0, (worksheet.lever_graphs_l3785||0), 0.002); end
  def test_lever_graphs_m3785; assert_in_delta(0.0, (worksheet.lever_graphs_m3785||0), 0.002); end
  def test_lever_graphs_n3785; assert_in_delta(0.0037000000000000006, worksheet.lever_graphs_n3785, 0.002); end
  def test_lever_graphs_o3785; assert_in_delta(0.018500000000000003, worksheet.lever_graphs_o3785, 0.002); end
  def test_lever_graphs_p3785; assert_in_delta(0.07400000000000001, worksheet.lever_graphs_p3785, 0.002); end
  def test_lever_graphs_q3785; assert_in_delta(0.14800000000000002, worksheet.lever_graphs_q3785, 0.002); end
  def test_lever_graphs_r3785; assert_in_delta(0.259, worksheet.lever_graphs_r3785, 0.002); end
  def test_lever_graphs_s3785; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_s3785, 0.002); end
  def test_lever_graphs_b3786; assert_in_epsilon(3.0, worksheet.lever_graphs_b3786, 0.002); end
  def test_lever_graphs_k3786; assert_in_delta(0.0, (worksheet.lever_graphs_k3786||0), 0.002); end
  def test_lever_graphs_l3786; assert_in_delta(0.0, (worksheet.lever_graphs_l3786||0), 0.002); end
  def test_lever_graphs_m3786; assert_in_delta(0.0, (worksheet.lever_graphs_m3786||0), 0.002); end
  def test_lever_graphs_n3786; assert_in_delta(0.009250000000000001, worksheet.lever_graphs_n3786, 0.002); end
  def test_lever_graphs_o3786; assert_in_delta(0.046250000000000006, worksheet.lever_graphs_o3786, 0.002); end
  def test_lever_graphs_p3786; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_p3786, 0.002); end
  def test_lever_graphs_q3786; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_q3786, 0.002); end
  def test_lever_graphs_r3786; assert_in_delta(0.6475, worksheet.lever_graphs_r3786, 0.002); end
  def test_lever_graphs_s3786; assert_in_delta(0.925, worksheet.lever_graphs_s3786, 0.002); end
  def test_lever_graphs_b3787; assert_in_epsilon(4.0, worksheet.lever_graphs_b3787, 0.002); end
  def test_lever_graphs_k3787; assert_in_delta(0.0, (worksheet.lever_graphs_k3787||0), 0.002); end
  def test_lever_graphs_l3787; assert_in_delta(0.0, (worksheet.lever_graphs_l3787||0), 0.002); end
  def test_lever_graphs_m3787; assert_in_delta(0.0, (worksheet.lever_graphs_m3787||0), 0.002); end
  def test_lever_graphs_n3787; assert_in_delta(0.037000000000000005, worksheet.lever_graphs_n3787, 0.002); end
  def test_lever_graphs_o3787; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_o3787, 0.002); end
  def test_lever_graphs_p3787; assert_in_delta(0.7400000000000001, worksheet.lever_graphs_p3787, 0.002); end
  def test_lever_graphs_q3787; assert_in_epsilon(1.4800000000000002, worksheet.lever_graphs_q3787, 0.002); end
  def test_lever_graphs_r3787; assert_in_epsilon(2.59, worksheet.lever_graphs_r3787, 0.002); end
  def test_lever_graphs_s3787; assert_in_epsilon(3.7, worksheet.lever_graphs_s3787, 0.002); end
  def test_lever_graphs_b2557; assert_equal("Year", worksheet.lever_graphs_b2557); end
  def test_lever_graphs_c2557; assert_equal("Level", worksheet.lever_graphs_c2557); end
  def test_lever_graphs_d2557; assert_equal("Title", worksheet.lever_graphs_d2557); end
  def test_lever_graphs_e2557; assert_equal("heater.solid.boiler.urban.space", worksheet.lever_graphs_e2557); end
  def test_lever_graphs_f2557; assert_equal("heater.liquid.boiler.urban.space", worksheet.lever_graphs_f2557); end
  def test_lever_graphs_g2557; assert_equal("heater.gas.boiler.urban.space", worksheet.lever_graphs_g2557); end
  def test_lever_graphs_h2557; assert_equal("heater.heatpump.urban.space", worksheet.lever_graphs_h2557); end
  def test_lever_graphs_i2557; assert_equal("heater.electricity.urban.space", worksheet.lever_graphs_i2557); end
  def test_lever_graphs_j2557; assert_equal("heater.solar.urban.space", worksheet.lever_graphs_j2557); end
  def test_lever_graphs_k2557; assert_equal("heater.microchp.urban.space", worksheet.lever_graphs_k2557); end
  def test_lever_graphs_l2557; assert_equal("heater.districtheating.urban.space", worksheet.lever_graphs_l2557); end
  def test_lever_graphs_b2558; assert_in_epsilon(2011.0, worksheet.lever_graphs_b2558, 0.002); end
  def test_lever_graphs_c2558; assert_in_delta(1.0, worksheet.lever_graphs_c2558, 0.002); end
  def test_lever_graphs_d2558; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2558, 0.002); end
  def test_lever_graphs_e2558; assert_in_delta(0.07, worksheet.lever_graphs_e2558, 0.002); end
  def test_lever_graphs_f2558; assert_in_delta(0.14, worksheet.lever_graphs_f2558, 0.002); end
  def test_lever_graphs_g2558; assert_in_delta(0.55, worksheet.lever_graphs_g2558, 0.002); end
  def test_lever_graphs_h2558; assert_in_delta(0.02, worksheet.lever_graphs_h2558, 0.002); end
  def test_lever_graphs_i2558; assert_in_delta(0.03, worksheet.lever_graphs_i2558, 0.002); end
  def test_lever_graphs_j2558; assert_in_delta(0.0, (worksheet.lever_graphs_j2558||0), 0.002); end
  def test_lever_graphs_k2558; assert_in_delta(0.02, worksheet.lever_graphs_k2558, 0.002); end
  def test_lever_graphs_l2558; assert_in_delta(0.17, worksheet.lever_graphs_l2558, 0.002); end
  def test_lever_graphs_b2559; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2559, 0.002); end
  def test_lever_graphs_c2559; assert_in_delta(1.0, worksheet.lever_graphs_c2559, 0.002); end
  def test_lever_graphs_d2559; assert_equal("2050: Level 1", worksheet.lever_graphs_d2559); end
  def test_lever_graphs_e2559; assert_in_delta(0.02, worksheet.lever_graphs_e2559, 0.002); end
  def test_lever_graphs_f2559; assert_in_delta(0.14, worksheet.lever_graphs_f2559, 0.002); end
  def test_lever_graphs_g2559; assert_in_delta(0.55, worksheet.lever_graphs_g2559, 0.002); end
  def test_lever_graphs_h2559; assert_in_delta(0.02, worksheet.lever_graphs_h2559, 0.002); end
  def test_lever_graphs_i2559; assert_in_delta(0.08, worksheet.lever_graphs_i2559, 0.002); end
  def test_lever_graphs_j2559; assert_in_delta(0.0, (worksheet.lever_graphs_j2559||0), 0.002); end
  def test_lever_graphs_k2559; assert_in_delta(0.02, worksheet.lever_graphs_k2559, 0.002); end
  def test_lever_graphs_l2559; assert_in_delta(0.17, worksheet.lever_graphs_l2559, 0.002); end
  def test_lever_graphs_b2560; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2560, 0.002); end
  def test_lever_graphs_c2560; assert_in_epsilon(2.0, worksheet.lever_graphs_c2560, 0.002); end
  def test_lever_graphs_d2560; assert_equal("2050: Level 2", worksheet.lever_graphs_d2560); end
  def test_lever_graphs_e2560; assert_in_delta(0.01, worksheet.lever_graphs_e2560, 0.002); end
  def test_lever_graphs_f2560; assert_in_delta(0.01, worksheet.lever_graphs_f2560, 0.002); end
  def test_lever_graphs_g2560; assert_in_delta(0.1, worksheet.lever_graphs_g2560, 0.002); end
  def test_lever_graphs_h2560; assert_in_delta(0.15, worksheet.lever_graphs_h2560, 0.002); end
  def test_lever_graphs_i2560; assert_in_delta(0.05, worksheet.lever_graphs_i2560, 0.002); end
  def test_lever_graphs_j2560; assert_in_delta(0.05, worksheet.lever_graphs_j2560, 0.002); end
  def test_lever_graphs_k2560; assert_in_delta(0.08, worksheet.lever_graphs_k2560, 0.002); end
  def test_lever_graphs_l2560; assert_in_delta(0.55, worksheet.lever_graphs_l2560, 0.002); end
  def test_lever_graphs_b2561; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2561, 0.002); end
  def test_lever_graphs_c2561; assert_in_epsilon(3.0, worksheet.lever_graphs_c2561, 0.002); end
  def test_lever_graphs_d2561; assert_equal("2050: Level 3", worksheet.lever_graphs_d2561); end
  def test_lever_graphs_e2561; assert_in_delta(0.01, worksheet.lever_graphs_e2561, 0.002); end
  def test_lever_graphs_f2561; assert_in_delta(0.0, (worksheet.lever_graphs_f2561||0), 0.002); end
  def test_lever_graphs_g2561; assert_in_delta(0.3, worksheet.lever_graphs_g2561, 0.002); end
  def test_lever_graphs_h2561; assert_in_delta(0.35, worksheet.lever_graphs_h2561, 0.002); end
  def test_lever_graphs_i2561; assert_in_delta(0.05, worksheet.lever_graphs_i2561, 0.002); end
  def test_lever_graphs_j2561; assert_in_delta(0.1, worksheet.lever_graphs_j2561, 0.002); end
  def test_lever_graphs_k2561; assert_in_delta(0.09, worksheet.lever_graphs_k2561, 0.002); end
  def test_lever_graphs_l2561; assert_in_delta(0.1, worksheet.lever_graphs_l2561, 0.002); end
  def test_lever_graphs_b2562; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2562, 0.002); end
  def test_lever_graphs_c2562; assert_in_epsilon(4.0, worksheet.lever_graphs_c2562, 0.002); end
  def test_lever_graphs_d2562; assert_equal("2050: Level 4", worksheet.lever_graphs_d2562); end
  def test_lever_graphs_e2562; assert_in_delta(0.0, (worksheet.lever_graphs_e2562||0), 0.002); end
  def test_lever_graphs_f2562; assert_in_delta(0.0, (worksheet.lever_graphs_f2562||0), 0.002); end
  def test_lever_graphs_g2562; assert_in_delta(0.1, worksheet.lever_graphs_g2562, 0.002); end
  def test_lever_graphs_h2562; assert_in_delta(0.5, worksheet.lever_graphs_h2562, 0.002); end
  def test_lever_graphs_i2562; assert_in_delta(0.02, worksheet.lever_graphs_i2562, 0.002); end
  def test_lever_graphs_j2562; assert_in_delta(0.2, worksheet.lever_graphs_j2562, 0.002); end
  def test_lever_graphs_k2562; assert_in_delta(0.11, worksheet.lever_graphs_k2562, 0.002); end
  def test_lever_graphs_l2562; assert_in_delta(0.07, worksheet.lever_graphs_l2562, 0.002); end
  def test_lever_graphs_c2568; assert_equal("1975", worksheet.lever_graphs_c2568); end
  def test_lever_graphs_d2568; assert_equal("1980", worksheet.lever_graphs_d2568); end
  def test_lever_graphs_e2568; assert_equal("1985", worksheet.lever_graphs_e2568); end
  def test_lever_graphs_f2568; assert_equal("1990", worksheet.lever_graphs_f2568); end
  def test_lever_graphs_g2568; assert_equal("1995", worksheet.lever_graphs_g2568); end
  def test_lever_graphs_h2568; assert_equal("2000", worksheet.lever_graphs_h2568); end
  def test_lever_graphs_i2568; assert_equal("2005", worksheet.lever_graphs_i2568); end
  def test_lever_graphs_j2568; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2568, 0.002); end
  def test_lever_graphs_k2568; assert_equal("2011", worksheet.lever_graphs_k2568); end
  def test_lever_graphs_l2568; assert_equal("2015", worksheet.lever_graphs_l2568); end
  def test_lever_graphs_m2568; assert_equal("2020", worksheet.lever_graphs_m2568); end
  def test_lever_graphs_n2568; assert_equal("2025", worksheet.lever_graphs_n2568); end
  def test_lever_graphs_o2568; assert_equal("2030", worksheet.lever_graphs_o2568); end
  def test_lever_graphs_p2568; assert_equal("2035", worksheet.lever_graphs_p2568); end
  def test_lever_graphs_q2568; assert_equal("2040", worksheet.lever_graphs_q2568); end
  def test_lever_graphs_r2568; assert_equal("2045", worksheet.lever_graphs_r2568); end
  def test_lever_graphs_s2568; assert_equal("2050", worksheet.lever_graphs_s2568); end
  def test_lever_graphs_b2569; assert_equal("Historic data", worksheet.lever_graphs_b2569); end
  def test_lever_graphs_b2570; assert_in_delta(1.0, worksheet.lever_graphs_b2570, 0.002); end
  def test_lever_graphs_k2570; assert_in_delta(0.02, worksheet.lever_graphs_k2570, 0.002); end
  def test_lever_graphs_l2570; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2570, 0.002); end
  def test_lever_graphs_m2570; assert_in_delta(0.02, worksheet.lever_graphs_m2570, 0.002); end
  def test_lever_graphs_n2570; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_n2570, 0.002); end
  def test_lever_graphs_o2570; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_o2570, 0.002); end
  def test_lever_graphs_p2570; assert_in_delta(0.02, worksheet.lever_graphs_p2570, 0.002); end
  def test_lever_graphs_q2570; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_q2570, 0.002); end
  def test_lever_graphs_r2570; assert_in_delta(0.02, worksheet.lever_graphs_r2570, 0.002); end
  def test_lever_graphs_s2570; assert_in_delta(0.02, worksheet.lever_graphs_s2570, 0.002); end
  def test_lever_graphs_b2571; assert_in_epsilon(2.0, worksheet.lever_graphs_b2571, 0.002); end
  def test_lever_graphs_k2571; assert_in_delta(0.02, worksheet.lever_graphs_k2571, 0.002); end
  def test_lever_graphs_l2571; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2571, 0.002); end
  def test_lever_graphs_m2571; assert_in_delta(0.03857142857142857, worksheet.lever_graphs_m2571, 0.002); end
  def test_lever_graphs_n2571; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2571, 0.002); end
  def test_lever_graphs_o2571; assert_in_delta(0.0757142857142857, worksheet.lever_graphs_o2571, 0.002); end
  def test_lever_graphs_p2571; assert_in_delta(0.09428571428571428, worksheet.lever_graphs_p2571, 0.002); end
  def test_lever_graphs_q2571; assert_in_delta(0.11285714285714285, worksheet.lever_graphs_q2571, 0.002); end
  def test_lever_graphs_r2571; assert_in_delta(0.13142857142857142, worksheet.lever_graphs_r2571, 0.002); end
  def test_lever_graphs_s2571; assert_in_delta(0.15, worksheet.lever_graphs_s2571, 0.002); end
  def test_lever_graphs_b2572; assert_in_epsilon(3.0, worksheet.lever_graphs_b2572, 0.002); end
  def test_lever_graphs_k2572; assert_in_delta(0.02, worksheet.lever_graphs_k2572, 0.002); end
  def test_lever_graphs_l2572; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2572, 0.002); end
  def test_lever_graphs_m2572; assert_in_delta(0.06714285714285714, worksheet.lever_graphs_m2572, 0.002); end
  def test_lever_graphs_n2572; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_n2572, 0.002); end
  def test_lever_graphs_o2572; assert_in_delta(0.16142857142857142, worksheet.lever_graphs_o2572, 0.002); end
  def test_lever_graphs_p2572; assert_in_delta(0.20857142857142855, worksheet.lever_graphs_p2572, 0.002); end
  def test_lever_graphs_q2572; assert_in_delta(0.2557142857142857, worksheet.lever_graphs_q2572, 0.002); end
  def test_lever_graphs_r2572; assert_in_delta(0.3028571428571428, worksheet.lever_graphs_r2572, 0.002); end
  def test_lever_graphs_s2572; assert_in_delta(0.35, worksheet.lever_graphs_s2572, 0.002); end
  def test_lever_graphs_b2573; assert_in_epsilon(4.0, worksheet.lever_graphs_b2573, 0.002); end
  def test_lever_graphs_k2573; assert_in_delta(0.02, worksheet.lever_graphs_k2573, 0.002); end
  def test_lever_graphs_l2573; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2573, 0.002); end
  def test_lever_graphs_m2573; assert_in_delta(0.08857142857142856, worksheet.lever_graphs_m2573, 0.002); end
  def test_lever_graphs_n2573; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_n2573, 0.002); end
  def test_lever_graphs_o2573; assert_in_delta(0.2257142857142857, worksheet.lever_graphs_o2573, 0.002); end
  def test_lever_graphs_p2573; assert_in_delta(0.29428571428571426, worksheet.lever_graphs_p2573, 0.002); end
  def test_lever_graphs_q2573; assert_in_delta(0.3628571428571429, worksheet.lever_graphs_q2573, 0.002); end
  def test_lever_graphs_r2573; assert_in_delta(0.4314285714285714, worksheet.lever_graphs_r2573, 0.002); end
  def test_lever_graphs_s2573; assert_in_delta(0.5, worksheet.lever_graphs_s2573, 0.002); end
  def test_lever_graphs_c2578; assert_equal("1975", worksheet.lever_graphs_c2578); end
  def test_lever_graphs_d2578; assert_equal("1980", worksheet.lever_graphs_d2578); end
  def test_lever_graphs_e2578; assert_equal("1985", worksheet.lever_graphs_e2578); end
  def test_lever_graphs_f2578; assert_equal("1990", worksheet.lever_graphs_f2578); end
  def test_lever_graphs_g2578; assert_equal("1995", worksheet.lever_graphs_g2578); end
  def test_lever_graphs_h2578; assert_equal("2000", worksheet.lever_graphs_h2578); end
  def test_lever_graphs_i2578; assert_equal("2005", worksheet.lever_graphs_i2578); end
  def test_lever_graphs_j2578; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2578, 0.002); end
  def test_lever_graphs_k2578; assert_equal("2011", worksheet.lever_graphs_k2578); end
  def test_lever_graphs_l2578; assert_equal("2015", worksheet.lever_graphs_l2578); end
  def test_lever_graphs_m2578; assert_equal("2020", worksheet.lever_graphs_m2578); end
  def test_lever_graphs_n2578; assert_equal("2025", worksheet.lever_graphs_n2578); end
  def test_lever_graphs_o2578; assert_equal("2030", worksheet.lever_graphs_o2578); end
  def test_lever_graphs_p2578; assert_equal("2035", worksheet.lever_graphs_p2578); end
  def test_lever_graphs_q2578; assert_equal("2040", worksheet.lever_graphs_q2578); end
  def test_lever_graphs_r2578; assert_equal("2045", worksheet.lever_graphs_r2578); end
  def test_lever_graphs_s2578; assert_equal("2050", worksheet.lever_graphs_s2578); end
  def test_lever_graphs_b2579; assert_equal("Historic data", worksheet.lever_graphs_b2579); end
  def test_lever_graphs_b2580; assert_in_delta(1.0, worksheet.lever_graphs_b2580, 0.002); end
  def test_lever_graphs_k2580; assert_in_delta(0.0, (worksheet.lever_graphs_k2580||0), 0.002); end
  def test_lever_graphs_l2580; assert_in_delta(0.0, (worksheet.lever_graphs_l2580||0), 0.002); end
  def test_lever_graphs_m2580; assert_in_delta(0.0, (worksheet.lever_graphs_m2580||0), 0.002); end
  def test_lever_graphs_n2580; assert_in_delta(0.0, (worksheet.lever_graphs_n2580||0), 0.002); end
  def test_lever_graphs_o2580; assert_in_delta(0.0, (worksheet.lever_graphs_o2580||0), 0.002); end
  def test_lever_graphs_p2580; assert_in_delta(0.0, (worksheet.lever_graphs_p2580||0), 0.002); end
  def test_lever_graphs_q2580; assert_in_delta(0.0, (worksheet.lever_graphs_q2580||0), 0.002); end
  def test_lever_graphs_r2580; assert_in_delta(0.0, (worksheet.lever_graphs_r2580||0), 0.002); end
  def test_lever_graphs_s2580; assert_in_delta(0.0, (worksheet.lever_graphs_s2580||0), 0.002); end
  def test_lever_graphs_b2581; assert_in_epsilon(2.0, worksheet.lever_graphs_b2581, 0.002); end
  def test_lever_graphs_k2581; assert_in_delta(0.0, (worksheet.lever_graphs_k2581||0), 0.002); end
  def test_lever_graphs_l2581; assert_in_delta(0.0, (worksheet.lever_graphs_l2581||0), 0.002); end
  def test_lever_graphs_m2581; assert_in_delta(0.007142857142857143, worksheet.lever_graphs_m2581, 0.002); end
  def test_lever_graphs_n2581; assert_in_delta(0.014285714285714285, worksheet.lever_graphs_n2581, 0.002); end
  def test_lever_graphs_o2581; assert_in_delta(0.02142857142857143, worksheet.lever_graphs_o2581, 0.002); end
  def test_lever_graphs_p2581; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_p2581, 0.002); end
  def test_lever_graphs_q2581; assert_in_delta(0.03571428571428572, worksheet.lever_graphs_q2581, 0.002); end
  def test_lever_graphs_r2581; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_r2581, 0.002); end
  def test_lever_graphs_s2581; assert_in_delta(0.05, worksheet.lever_graphs_s2581, 0.002); end
  def test_lever_graphs_b2582; assert_in_epsilon(3.0, worksheet.lever_graphs_b2582, 0.002); end
  def test_lever_graphs_k2582; assert_in_delta(0.0, (worksheet.lever_graphs_k2582||0), 0.002); end
  def test_lever_graphs_l2582; assert_in_delta(0.0, (worksheet.lever_graphs_l2582||0), 0.002); end
  def test_lever_graphs_m2582; assert_in_delta(0.014285714285714285, worksheet.lever_graphs_m2582, 0.002); end
  def test_lever_graphs_n2582; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_n2582, 0.002); end
  def test_lever_graphs_o2582; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_o2582, 0.002); end
  def test_lever_graphs_p2582; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_p2582, 0.002); end
  def test_lever_graphs_q2582; assert_in_delta(0.07142857142857144, worksheet.lever_graphs_q2582, 0.002); end
  def test_lever_graphs_r2582; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_r2582, 0.002); end
  def test_lever_graphs_s2582; assert_in_delta(0.1, worksheet.lever_graphs_s2582, 0.002); end
  def test_lever_graphs_b2583; assert_in_epsilon(4.0, worksheet.lever_graphs_b2583, 0.002); end
  def test_lever_graphs_k2583; assert_in_delta(0.0, (worksheet.lever_graphs_k2583||0), 0.002); end
  def test_lever_graphs_l2583; assert_in_delta(0.0, (worksheet.lever_graphs_l2583||0), 0.002); end
  def test_lever_graphs_m2583; assert_in_delta(0.02857142857142857, worksheet.lever_graphs_m2583, 0.002); end
  def test_lever_graphs_n2583; assert_in_delta(0.05714285714285714, worksheet.lever_graphs_n2583, 0.002); end
  def test_lever_graphs_o2583; assert_in_delta(0.08571428571428572, worksheet.lever_graphs_o2583, 0.002); end
  def test_lever_graphs_p2583; assert_in_delta(0.11428571428571428, worksheet.lever_graphs_p2583, 0.002); end
  def test_lever_graphs_q2583; assert_in_delta(0.14285714285714288, worksheet.lever_graphs_q2583, 0.002); end
  def test_lever_graphs_r2583; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_r2583, 0.002); end
  def test_lever_graphs_s2583; assert_in_delta(0.2, worksheet.lever_graphs_s2583, 0.002); end
  def test_lever_graphs_c2588; assert_equal("1975", worksheet.lever_graphs_c2588); end
  def test_lever_graphs_d2588; assert_equal("1980", worksheet.lever_graphs_d2588); end
  def test_lever_graphs_e2588; assert_equal("1985", worksheet.lever_graphs_e2588); end
  def test_lever_graphs_f2588; assert_equal("1990", worksheet.lever_graphs_f2588); end
  def test_lever_graphs_g2588; assert_equal("1995", worksheet.lever_graphs_g2588); end
  def test_lever_graphs_h2588; assert_equal("2000", worksheet.lever_graphs_h2588); end
  def test_lever_graphs_i2588; assert_equal("2005", worksheet.lever_graphs_i2588); end
  def test_lever_graphs_j2588; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2588, 0.002); end
  def test_lever_graphs_k2588; assert_equal("2011", worksheet.lever_graphs_k2588); end
  def test_lever_graphs_l2588; assert_equal("2015", worksheet.lever_graphs_l2588); end
  def test_lever_graphs_m2588; assert_equal("2020", worksheet.lever_graphs_m2588); end
  def test_lever_graphs_n2588; assert_equal("2025", worksheet.lever_graphs_n2588); end
  def test_lever_graphs_o2588; assert_equal("2030", worksheet.lever_graphs_o2588); end
  def test_lever_graphs_p2588; assert_equal("2035", worksheet.lever_graphs_p2588); end
  def test_lever_graphs_q2588; assert_equal("2040", worksheet.lever_graphs_q2588); end
  def test_lever_graphs_r2588; assert_equal("2045", worksheet.lever_graphs_r2588); end
  def test_lever_graphs_s2588; assert_equal("2050", worksheet.lever_graphs_s2588); end
  def test_lever_graphs_b2589; assert_equal("Historic data", worksheet.lever_graphs_b2589); end
  def test_lever_graphs_b2590; assert_in_delta(1.0, worksheet.lever_graphs_b2590, 0.002); end
  def test_lever_graphs_k2590; assert_in_delta(0.02, worksheet.lever_graphs_k2590, 0.002); end
  def test_lever_graphs_l2590; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2590, 0.002); end
  def test_lever_graphs_m2590; assert_in_delta(0.02, worksheet.lever_graphs_m2590, 0.002); end
  def test_lever_graphs_n2590; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_n2590, 0.002); end
  def test_lever_graphs_o2590; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_o2590, 0.002); end
  def test_lever_graphs_p2590; assert_in_delta(0.02, worksheet.lever_graphs_p2590, 0.002); end
  def test_lever_graphs_q2590; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_q2590, 0.002); end
  def test_lever_graphs_r2590; assert_in_delta(0.02, worksheet.lever_graphs_r2590, 0.002); end
  def test_lever_graphs_s2590; assert_in_delta(0.02, worksheet.lever_graphs_s2590, 0.002); end
  def test_lever_graphs_b2591; assert_in_epsilon(2.0, worksheet.lever_graphs_b2591, 0.002); end
  def test_lever_graphs_k2591; assert_in_delta(0.02, worksheet.lever_graphs_k2591, 0.002); end
  def test_lever_graphs_l2591; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2591, 0.002); end
  def test_lever_graphs_m2591; assert_in_delta(0.045714285714285714, worksheet.lever_graphs_m2591, 0.002); end
  def test_lever_graphs_n2591; assert_in_delta(0.07142857142857142, worksheet.lever_graphs_n2591, 0.002); end
  def test_lever_graphs_o2591; assert_in_delta(0.09714285714285714, worksheet.lever_graphs_o2591, 0.002); end
  def test_lever_graphs_p2591; assert_in_delta(0.12285714285714285, worksheet.lever_graphs_p2591, 0.002); end
  def test_lever_graphs_q2591; assert_in_delta(0.14857142857142858, worksheet.lever_graphs_q2591, 0.002); end
  def test_lever_graphs_r2591; assert_in_delta(0.17428571428571427, worksheet.lever_graphs_r2591, 0.002); end
  def test_lever_graphs_s2591; assert_in_delta(0.2, worksheet.lever_graphs_s2591, 0.002); end
  def test_lever_graphs_b2592; assert_in_epsilon(3.0, worksheet.lever_graphs_b2592, 0.002); end
  def test_lever_graphs_k2592; assert_in_delta(0.02, worksheet.lever_graphs_k2592, 0.002); end
  def test_lever_graphs_l2592; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2592, 0.002); end
  def test_lever_graphs_m2592; assert_in_delta(0.08142857142857143, worksheet.lever_graphs_m2592, 0.002); end
  def test_lever_graphs_n2592; assert_in_delta(0.14285714285714285, worksheet.lever_graphs_n2592, 0.002); end
  def test_lever_graphs_o2592; assert_in_delta(0.2042857142857143, worksheet.lever_graphs_o2592, 0.002); end
  def test_lever_graphs_p2592; assert_in_delta(0.2657142857142857, worksheet.lever_graphs_p2592, 0.002); end
  def test_lever_graphs_q2592; assert_in_delta(0.3271428571428572, worksheet.lever_graphs_q2592, 0.002); end
  def test_lever_graphs_r2592; assert_in_delta(0.38857142857142857, worksheet.lever_graphs_r2592, 0.002); end
  def test_lever_graphs_s2592; assert_in_delta(0.44999999999999996, worksheet.lever_graphs_s2592, 0.002); end
  def test_lever_graphs_b2593; assert_in_epsilon(4.0, worksheet.lever_graphs_b2593, 0.002); end
  def test_lever_graphs_k2593; assert_in_delta(0.02, worksheet.lever_graphs_k2593, 0.002); end
  def test_lever_graphs_l2593; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_l2593, 0.002); end
  def test_lever_graphs_m2593; assert_in_delta(0.11714285714285713, worksheet.lever_graphs_m2593, 0.002); end
  def test_lever_graphs_n2593; assert_in_delta(0.21428571428571427, worksheet.lever_graphs_n2593, 0.002); end
  def test_lever_graphs_o2593; assert_in_delta(0.3114285714285714, worksheet.lever_graphs_o2593, 0.002); end
  def test_lever_graphs_p2593; assert_in_delta(0.40857142857142853, worksheet.lever_graphs_p2593, 0.002); end
  def test_lever_graphs_q2593; assert_in_delta(0.5057142857142858, worksheet.lever_graphs_q2593, 0.002); end
  def test_lever_graphs_r2593; assert_in_delta(0.6028571428571428, worksheet.lever_graphs_r2593, 0.002); end
  def test_lever_graphs_s2593; assert_in_delta(0.7, worksheet.lever_graphs_s2593, 0.002); end
  def test_lever_graphs_c2455; assert_equal("1975", worksheet.lever_graphs_c2455); end
  def test_lever_graphs_d2455; assert_equal("1980", worksheet.lever_graphs_d2455); end
  def test_lever_graphs_e2455; assert_equal("1985", worksheet.lever_graphs_e2455); end
  def test_lever_graphs_f2455; assert_equal("1990", worksheet.lever_graphs_f2455); end
  def test_lever_graphs_g2455; assert_equal("1995", worksheet.lever_graphs_g2455); end
  def test_lever_graphs_h2455; assert_equal("2000", worksheet.lever_graphs_h2455); end
  def test_lever_graphs_i2455; assert_equal("2005", worksheet.lever_graphs_i2455); end
  def test_lever_graphs_j2455; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2455, 0.002); end
  def test_lever_graphs_k2455; assert_equal("2011", worksheet.lever_graphs_k2455); end
  def test_lever_graphs_l2455; assert_equal("2015", worksheet.lever_graphs_l2455); end
  def test_lever_graphs_m2455; assert_equal("2020", worksheet.lever_graphs_m2455); end
  def test_lever_graphs_n2455; assert_equal("2025", worksheet.lever_graphs_n2455); end
  def test_lever_graphs_o2455; assert_equal("2030", worksheet.lever_graphs_o2455); end
  def test_lever_graphs_p2455; assert_equal("2035", worksheet.lever_graphs_p2455); end
  def test_lever_graphs_q2455; assert_equal("2040", worksheet.lever_graphs_q2455); end
  def test_lever_graphs_r2455; assert_equal("2045", worksheet.lever_graphs_r2455); end
  def test_lever_graphs_s2455; assert_equal("2050", worksheet.lever_graphs_s2455); end
  def test_lever_graphs_b2456; assert_equal("Historic data", worksheet.lever_graphs_b2456); end
  def test_lever_graphs_b2457; assert_in_delta(1.0, worksheet.lever_graphs_b2457, 0.002); end
  def test_lever_graphs_k2457; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2457, 0.002); end
  def test_lever_graphs_l2457; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2457, 0.002); end
  def test_lever_graphs_m2457; assert_in_epsilon(4776.346153846154, worksheet.lever_graphs_m2457, 0.002); end
  def test_lever_graphs_n2457; assert_in_epsilon(4893.413461538462, worksheet.lever_graphs_n2457, 0.002); end
  def test_lever_graphs_o2457; assert_in_epsilon(5010.4807692307695, worksheet.lever_graphs_o2457, 0.002); end
  def test_lever_graphs_p2457; assert_in_epsilon(5127.548076923076, worksheet.lever_graphs_p2457, 0.002); end
  def test_lever_graphs_q2457; assert_in_epsilon(5244.615384615385, worksheet.lever_graphs_q2457, 0.002); end
  def test_lever_graphs_r2457; assert_in_epsilon(5361.682692307692, worksheet.lever_graphs_r2457, 0.002); end
  def test_lever_graphs_s2457; assert_in_epsilon(5478.75, worksheet.lever_graphs_s2457, 0.002); end
  def test_lever_graphs_b2458; assert_in_epsilon(2.0, worksheet.lever_graphs_b2458, 0.002); end
  def test_lever_graphs_k2458; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2458, 0.002); end
  def test_lever_graphs_l2458; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2458, 0.002); end
  def test_lever_graphs_m2458; assert_in_epsilon(4711.12293956044, worksheet.lever_graphs_m2458, 0.002); end
  def test_lever_graphs_n2458; assert_in_epsilon(4762.967032967033, worksheet.lever_graphs_n2458, 0.002); end
  def test_lever_graphs_o2458; assert_in_epsilon(4814.811126373626, worksheet.lever_graphs_o2458, 0.002); end
  def test_lever_graphs_p2458; assert_in_epsilon(4866.655219780219, worksheet.lever_graphs_p2458, 0.002); end
  def test_lever_graphs_q2458; assert_in_epsilon(4918.499313186813, worksheet.lever_graphs_q2458, 0.002); end
  def test_lever_graphs_r2458; assert_in_epsilon(4970.343406593406, worksheet.lever_graphs_r2458, 0.002); end
  def test_lever_graphs_s2458; assert_in_epsilon(5022.1875, worksheet.lever_graphs_s2458, 0.002); end
  def test_lever_graphs_b2459; assert_in_epsilon(3.0, worksheet.lever_graphs_b2459, 0.002); end
  def test_lever_graphs_k2459; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2459, 0.002); end
  def test_lever_graphs_l2459; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2459, 0.002); end
  def test_lever_graphs_m2459; assert_in_epsilon(4645.899725274726, worksheet.lever_graphs_m2459, 0.002); end
  def test_lever_graphs_n2459; assert_in_epsilon(4632.520604395605, worksheet.lever_graphs_n2459, 0.002); end
  def test_lever_graphs_o2459; assert_in_epsilon(4619.141483516483, worksheet.lever_graphs_o2459, 0.002); end
  def test_lever_graphs_p2459; assert_in_epsilon(4605.7623626373625, worksheet.lever_graphs_p2459, 0.002); end
  def test_lever_graphs_q2459; assert_in_epsilon(4592.383241758242, worksheet.lever_graphs_q2459, 0.002); end
  def test_lever_graphs_r2459; assert_in_epsilon(4579.004120879121, worksheet.lever_graphs_r2459, 0.002); end
  def test_lever_graphs_s2459; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2459, 0.002); end
  def test_lever_graphs_b2460; assert_in_epsilon(4.0, worksheet.lever_graphs_b2460, 0.002); end
  def test_lever_graphs_k2460; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2460, 0.002); end
  def test_lever_graphs_l2460; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2460, 0.002); end
  def test_lever_graphs_m2460; assert_in_epsilon(4515.453296703297, worksheet.lever_graphs_m2460, 0.002); end
  def test_lever_graphs_n2460; assert_in_epsilon(4371.627747252747, worksheet.lever_graphs_n2460, 0.002); end
  def test_lever_graphs_o2460; assert_in_epsilon(4227.802197802198, worksheet.lever_graphs_o2460, 0.002); end
  def test_lever_graphs_p2460; assert_in_epsilon(4083.9766483516482, worksheet.lever_graphs_p2460, 0.002); end
  def test_lever_graphs_q2460; assert_in_epsilon(3940.1510989010994, worksheet.lever_graphs_q2460, 0.002); end
  def test_lever_graphs_r2460; assert_in_epsilon(3796.3255494505493, worksheet.lever_graphs_r2460, 0.002); end
  def test_lever_graphs_s2460; assert_in_epsilon(3652.5, worksheet.lever_graphs_s2460, 0.002); end
  def test_lever_graphs_c2445; assert_equal("1975", worksheet.lever_graphs_c2445); end
  def test_lever_graphs_d2445; assert_equal("1980", worksheet.lever_graphs_d2445); end
  def test_lever_graphs_e2445; assert_equal("1985", worksheet.lever_graphs_e2445); end
  def test_lever_graphs_f2445; assert_equal("1990", worksheet.lever_graphs_f2445); end
  def test_lever_graphs_g2445; assert_equal("1995", worksheet.lever_graphs_g2445); end
  def test_lever_graphs_h2445; assert_equal("2000", worksheet.lever_graphs_h2445); end
  def test_lever_graphs_i2445; assert_equal("2005", worksheet.lever_graphs_i2445); end
  def test_lever_graphs_j2445; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2445, 0.002); end
  def test_lever_graphs_k2445; assert_equal("2011", worksheet.lever_graphs_k2445); end
  def test_lever_graphs_l2445; assert_equal("2015", worksheet.lever_graphs_l2445); end
  def test_lever_graphs_m2445; assert_equal("2020", worksheet.lever_graphs_m2445); end
  def test_lever_graphs_n2445; assert_equal("2025", worksheet.lever_graphs_n2445); end
  def test_lever_graphs_o2445; assert_equal("2030", worksheet.lever_graphs_o2445); end
  def test_lever_graphs_p2445; assert_equal("2035", worksheet.lever_graphs_p2445); end
  def test_lever_graphs_q2445; assert_equal("2040", worksheet.lever_graphs_q2445); end
  def test_lever_graphs_r2445; assert_equal("2045", worksheet.lever_graphs_r2445); end
  def test_lever_graphs_s2445; assert_equal("2050", worksheet.lever_graphs_s2445); end
  def test_lever_graphs_b2446; assert_equal("Historic data", worksheet.lever_graphs_b2446); end
  def test_lever_graphs_b2447; assert_in_delta(1.0, worksheet.lever_graphs_b2447, 0.002); end
  def test_lever_graphs_k2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2447, 0.002); end
  def test_lever_graphs_l2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2447, 0.002); end
  def test_lever_graphs_m2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_m2447, 0.002); end
  def test_lever_graphs_n2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_n2447, 0.002); end
  def test_lever_graphs_o2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_o2447, 0.002); end
  def test_lever_graphs_p2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_p2447, 0.002); end
  def test_lever_graphs_q2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_q2447, 0.002); end
  def test_lever_graphs_r2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_r2447, 0.002); end
  def test_lever_graphs_s2447; assert_in_epsilon(9131.25, worksheet.lever_graphs_s2447, 0.002); end
  def test_lever_graphs_b2448; assert_in_epsilon(2.0, worksheet.lever_graphs_b2448, 0.002); end
  def test_lever_graphs_k2448; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2448, 0.002); end
  def test_lever_graphs_l2448; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2448, 0.002); end
  def test_lever_graphs_m2448; assert_in_epsilon(8870.357142857141, worksheet.lever_graphs_m2448, 0.002); end
  def test_lever_graphs_n2448; assert_in_epsilon(8609.464285714286, worksheet.lever_graphs_n2448, 0.002); end
  def test_lever_graphs_o2448; assert_in_epsilon(8348.571428571428, worksheet.lever_graphs_o2448, 0.002); end
  def test_lever_graphs_p2448; assert_in_epsilon(8087.678571428571, worksheet.lever_graphs_p2448, 0.002); end
  def test_lever_graphs_q2448; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_q2448, 0.002); end
  def test_lever_graphs_r2448; assert_in_epsilon(7565.892857142856, worksheet.lever_graphs_r2448, 0.002); end
  def test_lever_graphs_s2448; assert_in_epsilon(7305.0, worksheet.lever_graphs_s2448, 0.002); end
  def test_lever_graphs_b2449; assert_in_epsilon(3.0, worksheet.lever_graphs_b2449, 0.002); end
  def test_lever_graphs_k2449; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2449, 0.002); end
  def test_lever_graphs_l2449; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2449, 0.002); end
  def test_lever_graphs_m2449; assert_in_epsilon(8674.6875, worksheet.lever_graphs_m2449, 0.002); end
  def test_lever_graphs_n2449; assert_in_epsilon(8218.125, worksheet.lever_graphs_n2449, 0.002); end
  def test_lever_graphs_o2449; assert_in_epsilon(7761.562499999999, worksheet.lever_graphs_o2449, 0.002); end
  def test_lever_graphs_p2449; assert_in_epsilon(7305.0, worksheet.lever_graphs_p2449, 0.002); end
  def test_lever_graphs_q2449; assert_in_epsilon(6848.4375, worksheet.lever_graphs_q2449, 0.002); end
  def test_lever_graphs_r2449; assert_in_epsilon(6391.874999999999, worksheet.lever_graphs_r2449, 0.002); end
  def test_lever_graphs_s2449; assert_in_epsilon(5935.3125, worksheet.lever_graphs_s2449, 0.002); end
  def test_lever_graphs_b2450; assert_in_epsilon(4.0, worksheet.lever_graphs_b2450, 0.002); end
  def test_lever_graphs_k2450; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2450, 0.002); end
  def test_lever_graphs_l2450; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2450, 0.002); end
  def test_lever_graphs_m2450; assert_in_epsilon(8479.017857142857, worksheet.lever_graphs_m2450, 0.002); end
  def test_lever_graphs_n2450; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_n2450, 0.002); end
  def test_lever_graphs_o2450; assert_in_epsilon(7174.553571428571, worksheet.lever_graphs_o2450, 0.002); end
  def test_lever_graphs_p2450; assert_in_epsilon(6522.3214285714275, worksheet.lever_graphs_p2450, 0.002); end
  def test_lever_graphs_q2450; assert_in_epsilon(5870.089285714285, worksheet.lever_graphs_q2450, 0.002); end
  def test_lever_graphs_r2450; assert_in_epsilon(5217.857142857142, worksheet.lever_graphs_r2450, 0.002); end
  def test_lever_graphs_s2450; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2450, 0.002); end
  def test_lever_graphs_c2655; assert_equal("1975", worksheet.lever_graphs_c2655); end
  def test_lever_graphs_d2655; assert_equal("1980", worksheet.lever_graphs_d2655); end
  def test_lever_graphs_e2655; assert_equal("1985", worksheet.lever_graphs_e2655); end
  def test_lever_graphs_f2655; assert_equal("1990", worksheet.lever_graphs_f2655); end
  def test_lever_graphs_g2655; assert_equal("1995", worksheet.lever_graphs_g2655); end
  def test_lever_graphs_h2655; assert_equal("2000", worksheet.lever_graphs_h2655); end
  def test_lever_graphs_i2655; assert_equal("2005", worksheet.lever_graphs_i2655); end
  def test_lever_graphs_j2655; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2655, 0.002); end
  def test_lever_graphs_k2655; assert_equal("2011", worksheet.lever_graphs_k2655); end
  def test_lever_graphs_l2655; assert_equal("2015", worksheet.lever_graphs_l2655); end
  def test_lever_graphs_m2655; assert_equal("2020", worksheet.lever_graphs_m2655); end
  def test_lever_graphs_n2655; assert_equal("2025", worksheet.lever_graphs_n2655); end
  def test_lever_graphs_o2655; assert_equal("2030", worksheet.lever_graphs_o2655); end
  def test_lever_graphs_p2655; assert_equal("2035", worksheet.lever_graphs_p2655); end
  def test_lever_graphs_q2655; assert_equal("2040", worksheet.lever_graphs_q2655); end
  def test_lever_graphs_r2655; assert_equal("2045", worksheet.lever_graphs_r2655); end
  def test_lever_graphs_s2655; assert_equal("2050", worksheet.lever_graphs_s2655); end
  def test_lever_graphs_b2656; assert_equal("Historic data", worksheet.lever_graphs_b2656); end
  def test_lever_graphs_b2657; assert_in_delta(1.0, worksheet.lever_graphs_b2657, 0.002); end
  def test_lever_graphs_k2657; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2657, 0.002); end
  def test_lever_graphs_l2657; assert_in_epsilon(18.5, worksheet.lever_graphs_l2657, 0.002); end
  def test_lever_graphs_m2657; assert_in_epsilon(17.57142857142857, worksheet.lever_graphs_m2657, 0.002); end
  def test_lever_graphs_n2657; assert_in_epsilon(16.642857142857142, worksheet.lever_graphs_n2657, 0.002); end
  def test_lever_graphs_o2657; assert_in_epsilon(15.714285714285714, worksheet.lever_graphs_o2657, 0.002); end
  def test_lever_graphs_p2657; assert_in_epsilon(14.785714285714285, worksheet.lever_graphs_p2657, 0.002); end
  def test_lever_graphs_q2657; assert_in_epsilon(13.857142857142858, worksheet.lever_graphs_q2657, 0.002); end
  def test_lever_graphs_r2657; assert_in_epsilon(12.928571428571427, worksheet.lever_graphs_r2657, 0.002); end
  def test_lever_graphs_s2657; assert_in_epsilon(12.0, worksheet.lever_graphs_s2657, 0.002); end
  def test_lever_graphs_b2658; assert_in_epsilon(2.0, worksheet.lever_graphs_b2658, 0.002); end
  def test_lever_graphs_k2658; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2658, 0.002); end
  def test_lever_graphs_l2658; assert_in_epsilon(18.5, worksheet.lever_graphs_l2658, 0.002); end
  def test_lever_graphs_m2658; assert_in_epsilon(17.142857142857142, worksheet.lever_graphs_m2658, 0.002); end
  def test_lever_graphs_n2658; assert_in_epsilon(15.785714285714286, worksheet.lever_graphs_n2658, 0.002); end
  def test_lever_graphs_o2658; assert_in_epsilon(14.428571428571427, worksheet.lever_graphs_o2658, 0.002); end
  def test_lever_graphs_p2658; assert_in_epsilon(13.07142857142857, worksheet.lever_graphs_p2658, 0.002); end
  def test_lever_graphs_q2658; assert_in_epsilon(11.714285714285715, worksheet.lever_graphs_q2658, 0.002); end
  def test_lever_graphs_r2658; assert_in_epsilon(10.357142857142856, worksheet.lever_graphs_r2658, 0.002); end
  def test_lever_graphs_s2658; assert_in_epsilon(9.0, worksheet.lever_graphs_s2658, 0.002); end
  def test_lever_graphs_b2659; assert_in_epsilon(3.0, worksheet.lever_graphs_b2659, 0.002); end
  def test_lever_graphs_k2659; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2659, 0.002); end
  def test_lever_graphs_l2659; assert_in_epsilon(18.5, worksheet.lever_graphs_l2659, 0.002); end
  def test_lever_graphs_m2659; assert_in_epsilon(16.71428571428571, worksheet.lever_graphs_m2659, 0.002); end
  def test_lever_graphs_n2659; assert_in_epsilon(14.928571428571429, worksheet.lever_graphs_n2659, 0.002); end
  def test_lever_graphs_o2659; assert_in_epsilon(13.142857142857142, worksheet.lever_graphs_o2659, 0.002); end
  def test_lever_graphs_p2659; assert_in_epsilon(11.357142857142856, worksheet.lever_graphs_p2659, 0.002); end
  def test_lever_graphs_q2659; assert_in_epsilon(9.571428571428571, worksheet.lever_graphs_q2659, 0.002); end
  def test_lever_graphs_r2659; assert_in_epsilon(7.785714285714285, worksheet.lever_graphs_r2659, 0.002); end
  def test_lever_graphs_s2659; assert_in_epsilon(6.0, worksheet.lever_graphs_s2659, 0.002); end
  def test_lever_graphs_b2660; assert_in_epsilon(4.0, worksheet.lever_graphs_b2660, 0.002); end
  def test_lever_graphs_k2660; assert_in_epsilon(18.700000000000003, worksheet.lever_graphs_k2660, 0.002); end
  def test_lever_graphs_l2660; assert_in_epsilon(18.5, worksheet.lever_graphs_l2660, 0.002); end
  def test_lever_graphs_m2660; assert_in_epsilon(16.428571428571427, worksheet.lever_graphs_m2660, 0.002); end
  def test_lever_graphs_n2660; assert_in_epsilon(14.357142857142858, worksheet.lever_graphs_n2660, 0.002); end
  def test_lever_graphs_o2660; assert_in_epsilon(12.285714285714286, worksheet.lever_graphs_o2660, 0.002); end
  def test_lever_graphs_p2660; assert_in_epsilon(10.214285714285714, worksheet.lever_graphs_p2660, 0.002); end
  def test_lever_graphs_q2660; assert_in_epsilon(8.142857142857142, worksheet.lever_graphs_q2660, 0.002); end
  def test_lever_graphs_r2660; assert_in_epsilon(6.071428571428572, worksheet.lever_graphs_r2660, 0.002); end
  def test_lever_graphs_s2660; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2660, 0.002); end
  def test_lever_graphs_c2645; assert_equal("1975", worksheet.lever_graphs_c2645); end
  def test_lever_graphs_d2645; assert_equal("1980", worksheet.lever_graphs_d2645); end
  def test_lever_graphs_e2645; assert_equal("1985", worksheet.lever_graphs_e2645); end
  def test_lever_graphs_f2645; assert_equal("1990", worksheet.lever_graphs_f2645); end
  def test_lever_graphs_g2645; assert_equal("1995", worksheet.lever_graphs_g2645); end
  def test_lever_graphs_h2645; assert_equal("2000", worksheet.lever_graphs_h2645); end
  def test_lever_graphs_i2645; assert_equal("2005", worksheet.lever_graphs_i2645); end
  def test_lever_graphs_j2645; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2645, 0.002); end
  def test_lever_graphs_k2645; assert_equal("2011", worksheet.lever_graphs_k2645); end
  def test_lever_graphs_l2645; assert_equal("2015", worksheet.lever_graphs_l2645); end
  def test_lever_graphs_m2645; assert_equal("2020", worksheet.lever_graphs_m2645); end
  def test_lever_graphs_n2645; assert_equal("2025", worksheet.lever_graphs_n2645); end
  def test_lever_graphs_o2645; assert_equal("2030", worksheet.lever_graphs_o2645); end
  def test_lever_graphs_p2645; assert_equal("2035", worksheet.lever_graphs_p2645); end
  def test_lever_graphs_q2645; assert_equal("2040", worksheet.lever_graphs_q2645); end
  def test_lever_graphs_r2645; assert_equal("2045", worksheet.lever_graphs_r2645); end
  def test_lever_graphs_s2645; assert_equal("2050", worksheet.lever_graphs_s2645); end
  def test_lever_graphs_b2646; assert_equal("Historic data", worksheet.lever_graphs_b2646); end
  def test_lever_graphs_b2647; assert_in_delta(1.0, worksheet.lever_graphs_b2647, 0.002); end
  def test_lever_graphs_k2647; assert_in_epsilon(16.9, worksheet.lever_graphs_k2647, 0.002); end
  def test_lever_graphs_l2647; assert_in_epsilon(16.8, worksheet.lever_graphs_l2647, 0.002); end
  def test_lever_graphs_m2647; assert_in_epsilon(16.114285714285714, worksheet.lever_graphs_m2647, 0.002); end
  def test_lever_graphs_n2647; assert_in_epsilon(15.428571428571429, worksheet.lever_graphs_n2647, 0.002); end
  def test_lever_graphs_o2647; assert_in_epsilon(14.742857142857142, worksheet.lever_graphs_o2647, 0.002); end
  def test_lever_graphs_p2647; assert_in_epsilon(14.057142857142857, worksheet.lever_graphs_p2647, 0.002); end
  def test_lever_graphs_q2647; assert_in_epsilon(13.37142857142857, worksheet.lever_graphs_q2647, 0.002); end
  def test_lever_graphs_r2647; assert_in_epsilon(12.685714285714285, worksheet.lever_graphs_r2647, 0.002); end
  def test_lever_graphs_s2647; assert_in_epsilon(12.0, worksheet.lever_graphs_s2647, 0.002); end
  def test_lever_graphs_b2648; assert_in_epsilon(2.0, worksheet.lever_graphs_b2648, 0.002); end
  def test_lever_graphs_k2648; assert_in_epsilon(16.9, worksheet.lever_graphs_k2648, 0.002); end
  def test_lever_graphs_l2648; assert_in_epsilon(16.8, worksheet.lever_graphs_l2648, 0.002); end
  def test_lever_graphs_m2648; assert_in_epsilon(15.685714285714287, worksheet.lever_graphs_m2648, 0.002); end
  def test_lever_graphs_n2648; assert_in_epsilon(14.571428571428571, worksheet.lever_graphs_n2648, 0.002); end
  def test_lever_graphs_o2648; assert_in_epsilon(13.457142857142856, worksheet.lever_graphs_o2648, 0.002); end
  def test_lever_graphs_p2648; assert_in_epsilon(12.342857142857142, worksheet.lever_graphs_p2648, 0.002); end
  def test_lever_graphs_q2648; assert_in_epsilon(11.228571428571428, worksheet.lever_graphs_q2648, 0.002); end
  def test_lever_graphs_r2648; assert_in_epsilon(10.114285714285714, worksheet.lever_graphs_r2648, 0.002); end
  def test_lever_graphs_s2648; assert_in_epsilon(9.0, worksheet.lever_graphs_s2648, 0.002); end
  def test_lever_graphs_b2649; assert_in_epsilon(3.0, worksheet.lever_graphs_b2649, 0.002); end
  def test_lever_graphs_k2649; assert_in_epsilon(16.9, worksheet.lever_graphs_k2649, 0.002); end
  def test_lever_graphs_l2649; assert_in_epsilon(16.8, worksheet.lever_graphs_l2649, 0.002); end
  def test_lever_graphs_m2649; assert_in_epsilon(15.257142857142858, worksheet.lever_graphs_m2649, 0.002); end
  def test_lever_graphs_n2649; assert_in_epsilon(13.714285714285714, worksheet.lever_graphs_n2649, 0.002); end
  def test_lever_graphs_o2649; assert_in_epsilon(12.17142857142857, worksheet.lever_graphs_o2649, 0.002); end
  def test_lever_graphs_p2649; assert_in_epsilon(10.628571428571428, worksheet.lever_graphs_p2649, 0.002); end
  def test_lever_graphs_q2649; assert_in_epsilon(9.085714285714285, worksheet.lever_graphs_q2649, 0.002); end
  def test_lever_graphs_r2649; assert_in_epsilon(7.542857142857143, worksheet.lever_graphs_r2649, 0.002); end
  def test_lever_graphs_s2649; assert_in_epsilon(6.0, worksheet.lever_graphs_s2649, 0.002); end
  def test_lever_graphs_b2650; assert_in_epsilon(4.0, worksheet.lever_graphs_b2650, 0.002); end
  def test_lever_graphs_k2650; assert_in_epsilon(16.9, worksheet.lever_graphs_k2650, 0.002); end
  def test_lever_graphs_l2650; assert_in_epsilon(16.8, worksheet.lever_graphs_l2650, 0.002); end
  def test_lever_graphs_m2650; assert_in_epsilon(14.971428571428572, worksheet.lever_graphs_m2650, 0.002); end
  def test_lever_graphs_n2650; assert_in_epsilon(13.142857142857142, worksheet.lever_graphs_n2650, 0.002); end
  def test_lever_graphs_o2650; assert_in_epsilon(11.314285714285715, worksheet.lever_graphs_o2650, 0.002); end
  def test_lever_graphs_p2650; assert_in_epsilon(9.485714285714286, worksheet.lever_graphs_p2650, 0.002); end
  def test_lever_graphs_q2650; assert_in_epsilon(7.6571428571428575, worksheet.lever_graphs_q2650, 0.002); end
  def test_lever_graphs_r2650; assert_in_epsilon(5.828571428571429, worksheet.lever_graphs_r2650, 0.002); end
  def test_lever_graphs_s2650; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2650, 0.002); end
  def test_lever_graphs_c2415; assert_equal("1975", worksheet.lever_graphs_c2415); end
  def test_lever_graphs_d2415; assert_equal("1980", worksheet.lever_graphs_d2415); end
  def test_lever_graphs_e2415; assert_equal("1985", worksheet.lever_graphs_e2415); end
  def test_lever_graphs_f2415; assert_equal("1990", worksheet.lever_graphs_f2415); end
  def test_lever_graphs_g2415; assert_equal("1995", worksheet.lever_graphs_g2415); end
  def test_lever_graphs_h2415; assert_equal("2000", worksheet.lever_graphs_h2415); end
  def test_lever_graphs_i2415; assert_equal("2005", worksheet.lever_graphs_i2415); end
  def test_lever_graphs_j2415; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2415, 0.002); end
  def test_lever_graphs_k2415; assert_equal("2011", worksheet.lever_graphs_k2415); end
  def test_lever_graphs_l2415; assert_equal("2015", worksheet.lever_graphs_l2415); end
  def test_lever_graphs_m2415; assert_equal("2020", worksheet.lever_graphs_m2415); end
  def test_lever_graphs_n2415; assert_equal("2025", worksheet.lever_graphs_n2415); end
  def test_lever_graphs_o2415; assert_equal("2030", worksheet.lever_graphs_o2415); end
  def test_lever_graphs_p2415; assert_equal("2035", worksheet.lever_graphs_p2415); end
  def test_lever_graphs_q2415; assert_equal("2040", worksheet.lever_graphs_q2415); end
  def test_lever_graphs_r2415; assert_equal("2045", worksheet.lever_graphs_r2415); end
  def test_lever_graphs_s2415; assert_equal("2050", worksheet.lever_graphs_s2415); end
  def test_lever_graphs_b2416; assert_equal("Historic data", worksheet.lever_graphs_b2416); end
  def test_lever_graphs_b2417; assert_in_delta(1.0, worksheet.lever_graphs_b2417, 0.002); end
  def test_lever_graphs_k2417; assert_in_epsilon(29.0, worksheet.lever_graphs_k2417, 0.002); end
  def test_lever_graphs_l2417; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2417, 0.002); end
  def test_lever_graphs_m2417; assert_in_epsilon(27.93406593406593, worksheet.lever_graphs_m2417, 0.002); end
  def test_lever_graphs_n2417; assert_in_epsilon(27.27838827838828, worksheet.lever_graphs_n2417, 0.002); end
  def test_lever_graphs_o2417; assert_in_epsilon(26.62271062271062, worksheet.lever_graphs_o2417, 0.002); end
  def test_lever_graphs_p2417; assert_in_epsilon(25.967032967032964, worksheet.lever_graphs_p2417, 0.002); end
  def test_lever_graphs_q2417; assert_in_epsilon(25.31135531135531, worksheet.lever_graphs_q2417, 0.002); end
  def test_lever_graphs_r2417; assert_in_epsilon(24.655677655677653, worksheet.lever_graphs_r2417, 0.002); end
  def test_lever_graphs_s2417; assert_in_epsilon(24.0, worksheet.lever_graphs_s2417, 0.002); end
  def test_lever_graphs_b2418; assert_in_epsilon(2.0, worksheet.lever_graphs_b2418, 0.002); end
  def test_lever_graphs_k2418; assert_in_epsilon(29.0, worksheet.lever_graphs_k2418, 0.002); end
  def test_lever_graphs_l2418; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2418, 0.002); end
  def test_lever_graphs_m2418; assert_in_epsilon(28.076923076923073, worksheet.lever_graphs_m2418, 0.002); end
  def test_lever_graphs_n2418; assert_in_epsilon(27.564102564102566, worksheet.lever_graphs_n2418, 0.002); end
  def test_lever_graphs_o2418; assert_in_epsilon(27.05128205128205, worksheet.lever_graphs_o2418, 0.002); end
  def test_lever_graphs_p2418; assert_in_epsilon(26.538461538461537, worksheet.lever_graphs_p2418, 0.002); end
  def test_lever_graphs_q2418; assert_in_epsilon(26.025641025641026, worksheet.lever_graphs_q2418, 0.002); end
  def test_lever_graphs_r2418; assert_in_epsilon(25.51282051282051, worksheet.lever_graphs_r2418, 0.002); end
  def test_lever_graphs_s2418; assert_in_epsilon(25.0, worksheet.lever_graphs_s2418, 0.002); end
  def test_lever_graphs_b2419; assert_in_epsilon(3.0, worksheet.lever_graphs_b2419, 0.002); end
  def test_lever_graphs_k2419; assert_in_epsilon(29.0, worksheet.lever_graphs_k2419, 0.002); end
  def test_lever_graphs_l2419; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2419, 0.002); end
  def test_lever_graphs_m2419; assert_in_epsilon(28.21978021978022, worksheet.lever_graphs_m2419, 0.002); end
  def test_lever_graphs_n2419; assert_in_epsilon(27.84981684981685, worksheet.lever_graphs_n2419, 0.002); end
  def test_lever_graphs_o2419; assert_in_epsilon(27.479853479853478, worksheet.lever_graphs_o2419, 0.002); end
  def test_lever_graphs_p2419; assert_in_epsilon(27.10989010989011, worksheet.lever_graphs_p2419, 0.002); end
  def test_lever_graphs_q2419; assert_in_epsilon(26.73992673992674, worksheet.lever_graphs_q2419, 0.002); end
  def test_lever_graphs_r2419; assert_in_epsilon(26.36996336996337, worksheet.lever_graphs_r2419, 0.002); end
  def test_lever_graphs_s2419; assert_in_epsilon(26.0, worksheet.lever_graphs_s2419, 0.002); end
  def test_lever_graphs_b2420; assert_in_epsilon(4.0, worksheet.lever_graphs_b2420, 0.002); end
  def test_lever_graphs_k2420; assert_in_epsilon(29.0, worksheet.lever_graphs_k2420, 0.002); end
  def test_lever_graphs_l2420; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2420, 0.002); end
  def test_lever_graphs_m2420; assert_in_epsilon(28.36263736263736, worksheet.lever_graphs_m2420, 0.002); end
  def test_lever_graphs_n2420; assert_in_epsilon(28.13553113553114, worksheet.lever_graphs_n2420, 0.002); end
  def test_lever_graphs_o2420; assert_in_epsilon(27.908424908424905, worksheet.lever_graphs_o2420, 0.002); end
  def test_lever_graphs_p2420; assert_in_epsilon(27.68131868131868, worksheet.lever_graphs_p2420, 0.002); end
  def test_lever_graphs_q2420; assert_in_epsilon(27.454212454212453, worksheet.lever_graphs_q2420, 0.002); end
  def test_lever_graphs_r2420; assert_in_epsilon(27.227106227106226, worksheet.lever_graphs_r2420, 0.002); end
  def test_lever_graphs_s2420; assert_in_epsilon(27.0, worksheet.lever_graphs_s2420, 0.002); end
  def test_lever_graphs_c2405; assert_equal("1975", worksheet.lever_graphs_c2405); end
  def test_lever_graphs_d2405; assert_equal("1980", worksheet.lever_graphs_d2405); end
  def test_lever_graphs_e2405; assert_equal("1985", worksheet.lever_graphs_e2405); end
  def test_lever_graphs_f2405; assert_equal("1990", worksheet.lever_graphs_f2405); end
  def test_lever_graphs_g2405; assert_equal("1995", worksheet.lever_graphs_g2405); end
  def test_lever_graphs_h2405; assert_equal("2000", worksheet.lever_graphs_h2405); end
  def test_lever_graphs_i2405; assert_equal("2005", worksheet.lever_graphs_i2405); end
  def test_lever_graphs_j2405; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2405, 0.002); end
  def test_lever_graphs_k2405; assert_equal("2011", worksheet.lever_graphs_k2405); end
  def test_lever_graphs_l2405; assert_equal("2015", worksheet.lever_graphs_l2405); end
  def test_lever_graphs_m2405; assert_equal("2020", worksheet.lever_graphs_m2405); end
  def test_lever_graphs_n2405; assert_equal("2025", worksheet.lever_graphs_n2405); end
  def test_lever_graphs_o2405; assert_equal("2030", worksheet.lever_graphs_o2405); end
  def test_lever_graphs_p2405; assert_equal("2035", worksheet.lever_graphs_p2405); end
  def test_lever_graphs_q2405; assert_equal("2040", worksheet.lever_graphs_q2405); end
  def test_lever_graphs_r2405; assert_equal("2045", worksheet.lever_graphs_r2405); end
  def test_lever_graphs_s2405; assert_equal("2050", worksheet.lever_graphs_s2405); end
  def test_lever_graphs_b2406; assert_equal("Historic data", worksheet.lever_graphs_b2406); end
  def test_lever_graphs_b2407; assert_in_delta(1.0, worksheet.lever_graphs_b2407, 0.002); end
  def test_lever_graphs_k2407; assert_in_epsilon(26.5, worksheet.lever_graphs_k2407, 0.002); end
  def test_lever_graphs_l2407; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2407, 0.002); end
  def test_lever_graphs_m2407; assert_in_epsilon(26.010989010989007, worksheet.lever_graphs_m2407, 0.002); end
  def test_lever_graphs_n2407; assert_in_epsilon(25.67582417582418, worksheet.lever_graphs_n2407, 0.002); end
  def test_lever_graphs_o2407; assert_in_epsilon(25.34065934065934, worksheet.lever_graphs_o2407, 0.002); end
  def test_lever_graphs_p2407; assert_in_epsilon(25.005494505494504, worksheet.lever_graphs_p2407, 0.002); end
  def test_lever_graphs_q2407; assert_in_epsilon(24.67032967032967, worksheet.lever_graphs_q2407, 0.002); end
  def test_lever_graphs_r2407; assert_in_epsilon(24.335164835164832, worksheet.lever_graphs_r2407, 0.002); end
  def test_lever_graphs_s2407; assert_in_epsilon(24.0, worksheet.lever_graphs_s2407, 0.002); end
  def test_lever_graphs_b2408; assert_in_epsilon(2.0, worksheet.lever_graphs_b2408, 0.002); end
  def test_lever_graphs_k2408; assert_in_epsilon(26.5, worksheet.lever_graphs_k2408, 0.002); end
  def test_lever_graphs_l2408; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2408, 0.002); end
  def test_lever_graphs_m2408; assert_in_epsilon(26.153846153846153, worksheet.lever_graphs_m2408, 0.002); end
  def test_lever_graphs_n2408; assert_in_epsilon(25.961538461538463, worksheet.lever_graphs_n2408, 0.002); end
  def test_lever_graphs_o2408; assert_in_epsilon(25.769230769230766, worksheet.lever_graphs_o2408, 0.002); end
  def test_lever_graphs_p2408; assert_in_epsilon(25.576923076923073, worksheet.lever_graphs_p2408, 0.002); end
  def test_lever_graphs_q2408; assert_in_epsilon(25.384615384615387, worksheet.lever_graphs_q2408, 0.002); end
  def test_lever_graphs_r2408; assert_in_epsilon(25.19230769230769, worksheet.lever_graphs_r2408, 0.002); end
  def test_lever_graphs_s2408; assert_in_epsilon(25.0, worksheet.lever_graphs_s2408, 0.002); end
  def test_lever_graphs_b2409; assert_in_epsilon(3.0, worksheet.lever_graphs_b2409, 0.002); end
  def test_lever_graphs_k2409; assert_in_epsilon(26.5, worksheet.lever_graphs_k2409, 0.002); end
  def test_lever_graphs_l2409; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2409, 0.002); end
  def test_lever_graphs_m2409; assert_in_epsilon(26.296703296703296, worksheet.lever_graphs_m2409, 0.002); end
  def test_lever_graphs_n2409; assert_in_epsilon(26.247252747252748, worksheet.lever_graphs_n2409, 0.002); end
  def test_lever_graphs_o2409; assert_in_epsilon(26.197802197802197, worksheet.lever_graphs_o2409, 0.002); end
  def test_lever_graphs_p2409; assert_in_epsilon(26.148351648351646, worksheet.lever_graphs_p2409, 0.002); end
  def test_lever_graphs_q2409; assert_in_epsilon(26.098901098901102, worksheet.lever_graphs_q2409, 0.002); end
  def test_lever_graphs_r2409; assert_in_epsilon(26.049450549450547, worksheet.lever_graphs_r2409, 0.002); end
  def test_lever_graphs_s2409; assert_in_epsilon(26.0, worksheet.lever_graphs_s2409, 0.002); end
  def test_lever_graphs_b2410; assert_in_epsilon(4.0, worksheet.lever_graphs_b2410, 0.002); end
  def test_lever_graphs_k2410; assert_in_epsilon(26.5, worksheet.lever_graphs_k2410, 0.002); end
  def test_lever_graphs_l2410; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2410, 0.002); end
  def test_lever_graphs_m2410; assert_in_epsilon(26.439560439560438, worksheet.lever_graphs_m2410, 0.002); end
  def test_lever_graphs_n2410; assert_in_epsilon(26.532967032967036, worksheet.lever_graphs_n2410, 0.002); end
  def test_lever_graphs_o2410; assert_in_epsilon(26.626373626373628, worksheet.lever_graphs_o2410, 0.002); end
  def test_lever_graphs_p2410; assert_in_epsilon(26.71978021978022, worksheet.lever_graphs_p2410, 0.002); end
  def test_lever_graphs_q2410; assert_in_epsilon(26.81318681318681, worksheet.lever_graphs_q2410, 0.002); end
  def test_lever_graphs_r2410; assert_in_epsilon(26.906593406593405, worksheet.lever_graphs_r2410, 0.002); end
  def test_lever_graphs_s2410; assert_in_epsilon(27.0, worksheet.lever_graphs_s2410, 0.002); end
  def test_lever_graphs_c2435; assert_equal("1975", worksheet.lever_graphs_c2435); end
  def test_lever_graphs_d2435; assert_equal("1980", worksheet.lever_graphs_d2435); end
  def test_lever_graphs_e2435; assert_equal("1985", worksheet.lever_graphs_e2435); end
  def test_lever_graphs_f2435; assert_equal("1990", worksheet.lever_graphs_f2435); end
  def test_lever_graphs_g2435; assert_equal("1995", worksheet.lever_graphs_g2435); end
  def test_lever_graphs_h2435; assert_equal("2000", worksheet.lever_graphs_h2435); end
  def test_lever_graphs_i2435; assert_equal("2005", worksheet.lever_graphs_i2435); end
  def test_lever_graphs_j2435; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2435, 0.002); end
  def test_lever_graphs_k2435; assert_equal("2011", worksheet.lever_graphs_k2435); end
  def test_lever_graphs_l2435; assert_equal("2015", worksheet.lever_graphs_l2435); end
  def test_lever_graphs_m2435; assert_equal("2020", worksheet.lever_graphs_m2435); end
  def test_lever_graphs_n2435; assert_equal("2025", worksheet.lever_graphs_n2435); end
  def test_lever_graphs_o2435; assert_equal("2030", worksheet.lever_graphs_o2435); end
  def test_lever_graphs_p2435; assert_equal("2035", worksheet.lever_graphs_p2435); end
  def test_lever_graphs_q2435; assert_equal("2040", worksheet.lever_graphs_q2435); end
  def test_lever_graphs_r2435; assert_equal("2045", worksheet.lever_graphs_r2435); end
  def test_lever_graphs_s2435; assert_equal("2050", worksheet.lever_graphs_s2435); end
  def test_lever_graphs_b2436; assert_equal("Historic data", worksheet.lever_graphs_b2436); end
  def test_lever_graphs_b2437; assert_in_delta(1.0, worksheet.lever_graphs_b2437, 0.002); end
  def test_lever_graphs_k2437; assert_in_epsilon(13.0, worksheet.lever_graphs_k2437, 0.002); end
  def test_lever_graphs_l2437; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2437, 0.002); end
  def test_lever_graphs_m2437; assert_in_epsilon(13.923076923076925, worksheet.lever_graphs_m2437, 0.002); end
  def test_lever_graphs_n2437; assert_in_epsilon(14.435897435897438, worksheet.lever_graphs_n2437, 0.002); end
  def test_lever_graphs_o2437; assert_in_epsilon(14.948717948717949, worksheet.lever_graphs_o2437, 0.002); end
  def test_lever_graphs_p2437; assert_in_epsilon(15.461538461538462, worksheet.lever_graphs_p2437, 0.002); end
  def test_lever_graphs_q2437; assert_in_epsilon(15.974358974358974, worksheet.lever_graphs_q2437, 0.002); end
  def test_lever_graphs_r2437; assert_in_epsilon(16.48717948717949, worksheet.lever_graphs_r2437, 0.002); end
  def test_lever_graphs_s2437; assert_in_epsilon(17.0, worksheet.lever_graphs_s2437, 0.002); end
  def test_lever_graphs_b2438; assert_in_epsilon(2.0, worksheet.lever_graphs_b2438, 0.002); end
  def test_lever_graphs_k2438; assert_in_epsilon(13.0, worksheet.lever_graphs_k2438, 0.002); end
  def test_lever_graphs_l2438; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2438, 0.002); end
  def test_lever_graphs_m2438; assert_in_epsilon(13.780219780219781, worksheet.lever_graphs_m2438, 0.002); end
  def test_lever_graphs_n2438; assert_in_epsilon(14.150183150183151, worksheet.lever_graphs_n2438, 0.002); end
  def test_lever_graphs_o2438; assert_in_epsilon(14.520146520146522, worksheet.lever_graphs_o2438, 0.002); end
  def test_lever_graphs_p2438; assert_in_epsilon(14.89010989010989, worksheet.lever_graphs_p2438, 0.002); end
  def test_lever_graphs_q2438; assert_in_epsilon(15.260073260073261, worksheet.lever_graphs_q2438, 0.002); end
  def test_lever_graphs_r2438; assert_in_epsilon(15.63003663003663, worksheet.lever_graphs_r2438, 0.002); end
  def test_lever_graphs_s2438; assert_in_epsilon(16.0, worksheet.lever_graphs_s2438, 0.002); end
  def test_lever_graphs_b2439; assert_in_epsilon(3.0, worksheet.lever_graphs_b2439, 0.002); end
  def test_lever_graphs_k2439; assert_in_epsilon(13.0, worksheet.lever_graphs_k2439, 0.002); end
  def test_lever_graphs_l2439; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2439, 0.002); end
  def test_lever_graphs_m2439; assert_in_epsilon(13.637362637362639, worksheet.lever_graphs_m2439, 0.002); end
  def test_lever_graphs_n2439; assert_in_epsilon(13.864468864468865, worksheet.lever_graphs_n2439, 0.002); end
  def test_lever_graphs_o2439; assert_in_epsilon(14.091575091575091, worksheet.lever_graphs_o2439, 0.002); end
  def test_lever_graphs_p2439; assert_in_epsilon(14.31868131868132, worksheet.lever_graphs_p2439, 0.002); end
  def test_lever_graphs_q2439; assert_in_epsilon(14.545787545787547, worksheet.lever_graphs_q2439, 0.002); end
  def test_lever_graphs_r2439; assert_in_epsilon(14.772893772893772, worksheet.lever_graphs_r2439, 0.002); end
  def test_lever_graphs_s2439; assert_in_epsilon(15.0, worksheet.lever_graphs_s2439, 0.002); end
  def test_lever_graphs_b2440; assert_in_epsilon(4.0, worksheet.lever_graphs_b2440, 0.002); end
  def test_lever_graphs_k2440; assert_in_epsilon(13.0, worksheet.lever_graphs_k2440, 0.002); end
  def test_lever_graphs_l2440; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2440, 0.002); end
  def test_lever_graphs_m2440; assert_in_epsilon(13.494505494505496, worksheet.lever_graphs_m2440, 0.002); end
  def test_lever_graphs_n2440; assert_in_epsilon(13.57875457875458, worksheet.lever_graphs_n2440, 0.002); end
  def test_lever_graphs_o2440; assert_in_epsilon(13.663003663003664, worksheet.lever_graphs_o2440, 0.002); end
  def test_lever_graphs_p2440; assert_in_epsilon(13.747252747252748, worksheet.lever_graphs_p2440, 0.002); end
  def test_lever_graphs_q2440; assert_in_epsilon(13.831501831501832, worksheet.lever_graphs_q2440, 0.002); end
  def test_lever_graphs_r2440; assert_in_epsilon(13.915750915750916, worksheet.lever_graphs_r2440, 0.002); end
  def test_lever_graphs_s2440; assert_in_epsilon(14.0, worksheet.lever_graphs_s2440, 0.002); end
  def test_lever_graphs_c2425; assert_equal("1975", worksheet.lever_graphs_c2425); end
  def test_lever_graphs_d2425; assert_equal("1980", worksheet.lever_graphs_d2425); end
  def test_lever_graphs_e2425; assert_equal("1985", worksheet.lever_graphs_e2425); end
  def test_lever_graphs_f2425; assert_equal("1990", worksheet.lever_graphs_f2425); end
  def test_lever_graphs_g2425; assert_equal("1995", worksheet.lever_graphs_g2425); end
  def test_lever_graphs_h2425; assert_equal("2000", worksheet.lever_graphs_h2425); end
  def test_lever_graphs_i2425; assert_equal("2005", worksheet.lever_graphs_i2425); end
  def test_lever_graphs_j2425; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2425, 0.002); end
  def test_lever_graphs_k2425; assert_equal("2011", worksheet.lever_graphs_k2425); end
  def test_lever_graphs_l2425; assert_equal("2015", worksheet.lever_graphs_l2425); end
  def test_lever_graphs_m2425; assert_equal("2020", worksheet.lever_graphs_m2425); end
  def test_lever_graphs_n2425; assert_equal("2025", worksheet.lever_graphs_n2425); end
  def test_lever_graphs_o2425; assert_equal("2030", worksheet.lever_graphs_o2425); end
  def test_lever_graphs_p2425; assert_equal("2035", worksheet.lever_graphs_p2425); end
  def test_lever_graphs_q2425; assert_equal("2040", worksheet.lever_graphs_q2425); end
  def test_lever_graphs_r2425; assert_equal("2045", worksheet.lever_graphs_r2425); end
  def test_lever_graphs_s2425; assert_equal("2050", worksheet.lever_graphs_s2425); end
  def test_lever_graphs_b2426; assert_equal("Historic data", worksheet.lever_graphs_b2426); end
  def test_lever_graphs_b2427; assert_in_delta(1.0, worksheet.lever_graphs_b2427, 0.002); end
  def test_lever_graphs_k2427; assert_in_epsilon(17.5, worksheet.lever_graphs_k2427, 0.002); end
  def test_lever_graphs_l2427; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2427, 0.002); end
  def test_lever_graphs_m2427; assert_in_epsilon(17.98901098901099, worksheet.lever_graphs_m2427, 0.002); end
  def test_lever_graphs_n2427; assert_in_epsilon(18.324175824175825, worksheet.lever_graphs_n2427, 0.002); end
  def test_lever_graphs_o2427; assert_in_epsilon(18.659340659340657, worksheet.lever_graphs_o2427, 0.002); end
  def test_lever_graphs_p2427; assert_in_epsilon(18.994505494505493, worksheet.lever_graphs_p2427, 0.002); end
  def test_lever_graphs_q2427; assert_in_epsilon(19.32967032967033, worksheet.lever_graphs_q2427, 0.002); end
  def test_lever_graphs_r2427; assert_in_epsilon(19.664835164835164, worksheet.lever_graphs_r2427, 0.002); end
  def test_lever_graphs_s2427; assert_in_epsilon(20.0, worksheet.lever_graphs_s2427, 0.002); end
  def test_lever_graphs_b2428; assert_in_epsilon(2.0, worksheet.lever_graphs_b2428, 0.002); end
  def test_lever_graphs_k2428; assert_in_epsilon(17.5, worksheet.lever_graphs_k2428, 0.002); end
  def test_lever_graphs_l2428; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2428, 0.002); end
  def test_lever_graphs_m2428; assert_in_epsilon(17.846153846153847, worksheet.lever_graphs_m2428, 0.002); end
  def test_lever_graphs_n2428; assert_in_epsilon(18.038461538461537, worksheet.lever_graphs_n2428, 0.002); end
  def test_lever_graphs_o2428; assert_in_epsilon(18.23076923076923, worksheet.lever_graphs_o2428, 0.002); end
  def test_lever_graphs_p2428; assert_in_epsilon(18.42307692307692, worksheet.lever_graphs_p2428, 0.002); end
  def test_lever_graphs_q2428; assert_in_epsilon(18.615384615384613, worksheet.lever_graphs_q2428, 0.002); end
  def test_lever_graphs_r2428; assert_in_epsilon(18.807692307692307, worksheet.lever_graphs_r2428, 0.002); end
  def test_lever_graphs_s2428; assert_in_epsilon(19.0, worksheet.lever_graphs_s2428, 0.002); end
  def test_lever_graphs_b2429; assert_in_epsilon(3.0, worksheet.lever_graphs_b2429, 0.002); end
  def test_lever_graphs_k2429; assert_in_epsilon(17.5, worksheet.lever_graphs_k2429, 0.002); end
  def test_lever_graphs_l2429; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2429, 0.002); end
  def test_lever_graphs_m2429; assert_in_epsilon(17.7032967032967, worksheet.lever_graphs_m2429, 0.002); end
  def test_lever_graphs_n2429; assert_in_epsilon(17.752747252747252, worksheet.lever_graphs_n2429, 0.002); end
  def test_lever_graphs_o2429; assert_in_epsilon(17.802197802197803, worksheet.lever_graphs_o2429, 0.002); end
  def test_lever_graphs_p2429; assert_in_epsilon(17.85164835164835, worksheet.lever_graphs_p2429, 0.002); end
  def test_lever_graphs_q2429; assert_in_epsilon(17.9010989010989, worksheet.lever_graphs_q2429, 0.002); end
  def test_lever_graphs_r2429; assert_in_epsilon(17.95054945054945, worksheet.lever_graphs_r2429, 0.002); end
  def test_lever_graphs_s2429; assert_in_epsilon(18.0, worksheet.lever_graphs_s2429, 0.002); end
  def test_lever_graphs_b2430; assert_in_epsilon(4.0, worksheet.lever_graphs_b2430, 0.002); end
  def test_lever_graphs_k2430; assert_in_epsilon(17.5, worksheet.lever_graphs_k2430, 0.002); end
  def test_lever_graphs_l2430; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2430, 0.002); end
  def test_lever_graphs_m2430; assert_in_epsilon(17.56043956043956, worksheet.lever_graphs_m2430, 0.002); end
  def test_lever_graphs_n2430; assert_in_epsilon(17.467032967032967, worksheet.lever_graphs_n2430, 0.002); end
  def test_lever_graphs_o2430; assert_in_epsilon(17.373626373626372, worksheet.lever_graphs_o2430, 0.002); end
  def test_lever_graphs_p2430; assert_in_epsilon(17.28021978021978, worksheet.lever_graphs_p2430, 0.002); end
  def test_lever_graphs_q2430; assert_in_epsilon(17.186813186813186, worksheet.lever_graphs_q2430, 0.002); end
  def test_lever_graphs_r2430; assert_in_epsilon(17.09340659340659, worksheet.lever_graphs_r2430, 0.002); end
  def test_lever_graphs_s2430; assert_in_epsilon(17.0, worksheet.lever_graphs_s2430, 0.002); end
  def test_lever_graphs_c1755; assert_equal("1975", worksheet.lever_graphs_c1755); end
  def test_lever_graphs_d1755; assert_equal("1980", worksheet.lever_graphs_d1755); end
  def test_lever_graphs_e1755; assert_equal("1985", worksheet.lever_graphs_e1755); end
  def test_lever_graphs_f1755; assert_equal("1990", worksheet.lever_graphs_f1755); end
  def test_lever_graphs_g1755; assert_equal("1995", worksheet.lever_graphs_g1755); end
  def test_lever_graphs_h1755; assert_equal("2000", worksheet.lever_graphs_h1755); end
  def test_lever_graphs_i1755; assert_equal("2005", worksheet.lever_graphs_i1755); end
  def test_lever_graphs_j1755; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1755, 0.002); end
  def test_lever_graphs_k1755; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1755, 0.002); end
  def test_lever_graphs_l1755; assert_equal("2015", worksheet.lever_graphs_l1755); end
  def test_lever_graphs_m1755; assert_equal("2020", worksheet.lever_graphs_m1755); end
  def test_lever_graphs_n1755; assert_equal("2025", worksheet.lever_graphs_n1755); end
  def test_lever_graphs_o1755; assert_equal("2030", worksheet.lever_graphs_o1755); end
  def test_lever_graphs_p1755; assert_equal("2035", worksheet.lever_graphs_p1755); end
  def test_lever_graphs_q1755; assert_equal("2040", worksheet.lever_graphs_q1755); end
  def test_lever_graphs_r1755; assert_equal("2045", worksheet.lever_graphs_r1755); end
  def test_lever_graphs_s1755; assert_equal("2050", worksheet.lever_graphs_s1755); end
  def test_lever_graphs_b1756; assert_equal("Historic data", worksheet.lever_graphs_b1756); end
  def test_lever_graphs_b1757; assert_in_delta(1.0, worksheet.lever_graphs_b1757, 0.002); end
  def test_lever_graphs_k1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1757, 0.002); end
  def test_lever_graphs_l1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_l1757, 0.002); end
  def test_lever_graphs_m1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_m1757, 0.002); end
  def test_lever_graphs_n1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_n1757, 0.002); end
  def test_lever_graphs_o1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_o1757, 0.002); end
  def test_lever_graphs_p1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_p1757, 0.002); end
  def test_lever_graphs_q1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_q1757, 0.002); end
  def test_lever_graphs_r1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_r1757, 0.002); end
  def test_lever_graphs_s1757; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_s1757, 0.002); end
  def test_lever_graphs_b1758; assert_in_epsilon(2.0, worksheet.lever_graphs_b1758, 0.002); end
  def test_lever_graphs_k1758; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1758, 0.002); end
  def test_lever_graphs_l1758; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_l1758, 0.002); end
  def test_lever_graphs_m1758; assert_in_delta(0.56, worksheet.lever_graphs_m1758, 0.002); end
  def test_lever_graphs_n1758; assert_in_delta(0.56, worksheet.lever_graphs_n1758, 0.002); end
  def test_lever_graphs_o1758; assert_in_delta(0.54, worksheet.lever_graphs_o1758, 0.002); end
  def test_lever_graphs_p1758; assert_in_delta(0.52, worksheet.lever_graphs_p1758, 0.002); end
  def test_lever_graphs_q1758; assert_in_delta(0.49, worksheet.lever_graphs_q1758, 0.002); end
  def test_lever_graphs_r1758; assert_in_delta(0.44, worksheet.lever_graphs_r1758, 0.002); end
  def test_lever_graphs_s1758; assert_in_delta(0.4, worksheet.lever_graphs_s1758, 0.002); end
  def test_lever_graphs_b1759; assert_in_epsilon(3.0, worksheet.lever_graphs_b1759, 0.002); end
  def test_lever_graphs_k1759; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1759, 0.002); end
  def test_lever_graphs_l1759; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_l1759, 0.002); end
  def test_lever_graphs_m1759; assert_in_delta(0.55, worksheet.lever_graphs_m1759, 0.002); end
  def test_lever_graphs_n1759; assert_in_delta(0.54, worksheet.lever_graphs_n1759, 0.002); end
  def test_lever_graphs_o1759; assert_in_delta(0.51, worksheet.lever_graphs_o1759, 0.002); end
  def test_lever_graphs_p1759; assert_in_delta(0.49, worksheet.lever_graphs_p1759, 0.002); end
  def test_lever_graphs_q1759; assert_in_delta(0.46, worksheet.lever_graphs_q1759, 0.002); end
  def test_lever_graphs_r1759; assert_in_delta(0.41, worksheet.lever_graphs_r1759, 0.002); end
  def test_lever_graphs_s1759; assert_in_delta(0.32, worksheet.lever_graphs_s1759, 0.002); end
  def test_lever_graphs_b1760; assert_in_epsilon(4.0, worksheet.lever_graphs_b1760, 0.002); end
  def test_lever_graphs_k1760; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1760, 0.002); end
  def test_lever_graphs_l1760; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_l1760, 0.002); end
  def test_lever_graphs_m1760; assert_in_delta(0.55, worksheet.lever_graphs_m1760, 0.002); end
  def test_lever_graphs_n1760; assert_in_delta(0.5223, worksheet.lever_graphs_n1760, 0.002); end
  def test_lever_graphs_o1760; assert_in_delta(0.4761, worksheet.lever_graphs_o1760, 0.002); end
  def test_lever_graphs_p1760; assert_in_delta(0.45, worksheet.lever_graphs_p1760, 0.002); end
  def test_lever_graphs_q1760; assert_in_delta(0.4166, worksheet.lever_graphs_q1760, 0.002); end
  def test_lever_graphs_r1760; assert_in_delta(0.362, worksheet.lever_graphs_r1760, 0.002); end
  def test_lever_graphs_s1760; assert_in_delta(0.2641, worksheet.lever_graphs_s1760, 0.002); end
  def test_lever_graphs_b1761; assert_equal("Comparator A", worksheet.lever_graphs_b1761); end
  def test_lever_graphs_b1762; assert_equal("Comparator B", worksheet.lever_graphs_b1762); end
  def test_lever_graphs_b1763; assert_equal("Comparator C", worksheet.lever_graphs_b1763); end
  def test_lever_graphs_d1705; assert_equal("Title", worksheet.lever_graphs_d1705); end
  def test_lever_graphs_e1705; assert_equal("Solid fueled", worksheet.lever_graphs_e1705); end
  def test_lever_graphs_f1705; assert_equal("Liquid fueled", worksheet.lever_graphs_f1705); end
  def test_lever_graphs_g1705; assert_equal("Gas fueled", worksheet.lever_graphs_g1705); end
  def test_lever_graphs_d1706; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1706, 0.002); end
  def test_lever_graphs_e1706; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_e1706, 0.002); end
  def test_lever_graphs_f1706; assert_in_delta(0.06785132715399025, worksheet.lever_graphs_f1706, 0.002); end
  def test_lever_graphs_g1706; assert_in_delta(0.3201932191553456, worksheet.lever_graphs_g1706, 0.002); end
  def test_lever_graphs_d1707; assert_equal("2050: Level 1", worksheet.lever_graphs_d1707); end
  def test_lever_graphs_e1707; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_e1707, 0.002); end
  def test_lever_graphs_f1707; assert_in_delta(0.2909, worksheet.lever_graphs_f1707, 0.002); end
  def test_lever_graphs_g1707; assert_in_delta(0.09714454630933583, worksheet.lever_graphs_g1707, 0.002); end
  def test_lever_graphs_d1708; assert_equal("2050: Level 2", worksheet.lever_graphs_d1708); end
  def test_lever_graphs_e1708; assert_in_delta(0.4, worksheet.lever_graphs_e1708, 0.002); end
  def test_lever_graphs_f1708; assert_in_delta(0.19, worksheet.lever_graphs_f1708, 0.002); end
  def test_lever_graphs_g1708; assert_in_delta(0.41, worksheet.lever_graphs_g1708, 0.002); end
  def test_lever_graphs_d1709; assert_equal("2050: Level 3", worksheet.lever_graphs_d1709); end
  def test_lever_graphs_e1709; assert_in_delta(0.32, worksheet.lever_graphs_e1709, 0.002); end
  def test_lever_graphs_f1709; assert_in_delta(0.06, worksheet.lever_graphs_f1709, 0.002); end
  def test_lever_graphs_g1709; assert_in_delta(0.6199999999999999, worksheet.lever_graphs_g1709, 0.002); end
  def test_lever_graphs_d1710; assert_equal("2050: Level 4", worksheet.lever_graphs_d1710); end
  def test_lever_graphs_e1710; assert_in_delta(0.2641, worksheet.lever_graphs_e1710, 0.002); end
  def test_lever_graphs_f1710; assert_in_delta(0.0188, worksheet.lever_graphs_f1710, 0.002); end
  def test_lever_graphs_g1710; assert_in_delta(0.7171, worksheet.lever_graphs_g1710, 0.002); end
  def test_lever_graphs_c3044; assert_equal("1975", worksheet.lever_graphs_c3044); end
  def test_lever_graphs_d3044; assert_equal("1980", worksheet.lever_graphs_d3044); end
  def test_lever_graphs_e3044; assert_equal("1985", worksheet.lever_graphs_e3044); end
  def test_lever_graphs_f3044; assert_equal("1990", worksheet.lever_graphs_f3044); end
  def test_lever_graphs_g3044; assert_equal("1995", worksheet.lever_graphs_g3044); end
  def test_lever_graphs_h3044; assert_equal("2000", worksheet.lever_graphs_h3044); end
  def test_lever_graphs_i3044; assert_equal("2005", worksheet.lever_graphs_i3044); end
  def test_lever_graphs_j3044; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3044, 0.002); end
  def test_lever_graphs_k3044; assert_equal("2011", worksheet.lever_graphs_k3044); end
  def test_lever_graphs_l3044; assert_equal("2015", worksheet.lever_graphs_l3044); end
  def test_lever_graphs_m3044; assert_equal("2020", worksheet.lever_graphs_m3044); end
  def test_lever_graphs_n3044; assert_equal("2025", worksheet.lever_graphs_n3044); end
  def test_lever_graphs_o3044; assert_equal("2030", worksheet.lever_graphs_o3044); end
  def test_lever_graphs_p3044; assert_equal("2035", worksheet.lever_graphs_p3044); end
  def test_lever_graphs_q3044; assert_equal("2040", worksheet.lever_graphs_q3044); end
  def test_lever_graphs_r3044; assert_equal("2045", worksheet.lever_graphs_r3044); end
  def test_lever_graphs_s3044; assert_equal("2050", worksheet.lever_graphs_s3044); end
  def test_lever_graphs_b3045; assert_equal("Historic data", worksheet.lever_graphs_b3045); end
  def test_lever_graphs_b3046; assert_in_delta(1.0, worksheet.lever_graphs_b3046, 0.002); end
  def test_lever_graphs_k3046; assert_in_delta(1.0, worksheet.lever_graphs_k3046, 0.002); end
  def test_lever_graphs_l3046; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3046, 0.002); end
  def test_lever_graphs_m3046; assert_in_epsilon(1.0054945054945055, worksheet.lever_graphs_m3046, 0.002); end
  def test_lever_graphs_n3046; assert_in_epsilon(1.0212454212454214, worksheet.lever_graphs_n3046, 0.002); end
  def test_lever_graphs_o3046; assert_in_epsilon(1.036996336996337, worksheet.lever_graphs_o3046, 0.002); end
  def test_lever_graphs_p3046; assert_in_epsilon(1.0527472527472528, worksheet.lever_graphs_p3046, 0.002); end
  def test_lever_graphs_q3046; assert_in_epsilon(1.0684981684981685, worksheet.lever_graphs_q3046, 0.002); end
  def test_lever_graphs_r3046; assert_in_epsilon(1.0842490842490844, worksheet.lever_graphs_r3046, 0.002); end
  def test_lever_graphs_s3046; assert_in_epsilon(1.1, worksheet.lever_graphs_s3046, 0.002); end
  def test_lever_graphs_b3047; assert_in_epsilon(2.0, worksheet.lever_graphs_b3047, 0.002); end
  def test_lever_graphs_k3047; assert_in_delta(1.0, worksheet.lever_graphs_k3047, 0.002); end
  def test_lever_graphs_l3047; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3047, 0.002); end
  def test_lever_graphs_m3047; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m3047, 0.002); end
  def test_lever_graphs_n3047; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n3047, 0.002); end
  def test_lever_graphs_o3047; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o3047, 0.002); end
  def test_lever_graphs_p3047; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p3047, 0.002); end
  def test_lever_graphs_q3047; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q3047, 0.002); end
  def test_lever_graphs_r3047; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r3047, 0.002); end
  def test_lever_graphs_s3047; assert_in_delta(1.0, worksheet.lever_graphs_s3047, 0.002); end
  def test_lever_graphs_b3048; assert_in_epsilon(3.0, worksheet.lever_graphs_b3048, 0.002); end
  def test_lever_graphs_k3048; assert_in_delta(1.0, worksheet.lever_graphs_k3048, 0.002); end
  def test_lever_graphs_l3048; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3048, 0.002); end
  def test_lever_graphs_m3048; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m3048, 0.002); end
  def test_lever_graphs_n3048; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n3048, 0.002); end
  def test_lever_graphs_o3048; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o3048, 0.002); end
  def test_lever_graphs_p3048; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p3048, 0.002); end
  def test_lever_graphs_q3048; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q3048, 0.002); end
  def test_lever_graphs_r3048; assert_in_delta(0.9128205128205129, worksheet.lever_graphs_r3048, 0.002); end
  def test_lever_graphs_s3048; assert_in_delta(0.9, worksheet.lever_graphs_s3048, 0.002); end
  def test_lever_graphs_b3049; assert_in_epsilon(4.0, worksheet.lever_graphs_b3049, 0.002); end
  def test_lever_graphs_k3049; assert_in_delta(1.0, worksheet.lever_graphs_k3049, 0.002); end
  def test_lever_graphs_l3049; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l3049, 0.002); end
  def test_lever_graphs_m3049; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m3049, 0.002); end
  def test_lever_graphs_n3049; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n3049, 0.002); end
  def test_lever_graphs_o3049; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o3049, 0.002); end
  def test_lever_graphs_p3049; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p3049, 0.002); end
  def test_lever_graphs_q3049; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q3049, 0.002); end
  def test_lever_graphs_r3049; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r3049, 0.002); end
  def test_lever_graphs_s3049; assert_in_delta(0.7, worksheet.lever_graphs_s3049, 0.002); end
  def test_lever_graphs_d3309; assert_equal("Title", worksheet.lever_graphs_d3309); end
  def test_lever_graphs_e3309; assert_equal("Forest", worksheet.lever_graphs_e3309); end
  def test_lever_graphs_f3309; assert_equal("Arable.bio", worksheet.lever_graphs_f3309); end
  def test_lever_graphs_g3309; assert_equal("natural.grassland", worksheet.lever_graphs_g3309); end
  def test_lever_graphs_d3310; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3310, 0.002); end
  def test_lever_graphs_e3310; assert_in_delta(0.8, worksheet.lever_graphs_e3310, 0.002); end
  def test_lever_graphs_f3310; assert_in_delta(0.0, (worksheet.lever_graphs_f3310||0), 0.002); end
  def test_lever_graphs_g3310; assert_in_delta(0.2, worksheet.lever_graphs_g3310, 0.002); end
  def test_lever_graphs_d3311; assert_equal("2050: Level 1", worksheet.lever_graphs_d3311); end
  def test_lever_graphs_e3311; assert_in_delta(0.8, worksheet.lever_graphs_e3311, 0.002); end
  def test_lever_graphs_f3311; assert_in_delta(0.0, (worksheet.lever_graphs_f3311||0), 0.002); end
  def test_lever_graphs_g3311; assert_in_delta(0.2, worksheet.lever_graphs_g3311, 0.002); end
  def test_lever_graphs_d3312; assert_equal("2050: Level 2", worksheet.lever_graphs_d3312); end
  def test_lever_graphs_e3312; assert_in_delta(0.48, worksheet.lever_graphs_e3312, 0.002); end
  def test_lever_graphs_f3312; assert_in_delta(0.4, worksheet.lever_graphs_f3312, 0.002); end
  def test_lever_graphs_g3312; assert_in_delta(0.12, worksheet.lever_graphs_g3312, 0.002); end
  def test_lever_graphs_d3313; assert_equal("2050: Level 3", worksheet.lever_graphs_d3313); end
  def test_lever_graphs_e3313; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_e3313, 0.002); end
  def test_lever_graphs_f3313; assert_in_delta(0.6, worksheet.lever_graphs_f3313, 0.002); end
  def test_lever_graphs_g3313; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_g3313, 0.002); end
  def test_lever_graphs_d3314; assert_equal("2050: Level 4", worksheet.lever_graphs_d3314); end
  def test_lever_graphs_e3314; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_e3314, 0.002); end
  def test_lever_graphs_f3314; assert_in_delta(0.8, worksheet.lever_graphs_f3314, 0.002); end
  def test_lever_graphs_g3314; assert_in_delta(0.040000000000000036, worksheet.lever_graphs_g3314, 0.002); end
  def test_lever_graphs_c3278; assert_equal("1975", worksheet.lever_graphs_c3278); end
  def test_lever_graphs_d3278; assert_equal("1980", worksheet.lever_graphs_d3278); end
  def test_lever_graphs_e3278; assert_equal("1985", worksheet.lever_graphs_e3278); end
  def test_lever_graphs_f3278; assert_equal("1990", worksheet.lever_graphs_f3278); end
  def test_lever_graphs_g3278; assert_equal("1995", worksheet.lever_graphs_g3278); end
  def test_lever_graphs_h3278; assert_equal("2000", worksheet.lever_graphs_h3278); end
  def test_lever_graphs_i3278; assert_equal("2005", worksheet.lever_graphs_i3278); end
  def test_lever_graphs_j3278; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3278, 0.002); end
  def test_lever_graphs_k3278; assert_equal("2011", worksheet.lever_graphs_k3278); end
  def test_lever_graphs_l3278; assert_equal("2015", worksheet.lever_graphs_l3278); end
  def test_lever_graphs_m3278; assert_equal("2020", worksheet.lever_graphs_m3278); end
  def test_lever_graphs_n3278; assert_equal("2025", worksheet.lever_graphs_n3278); end
  def test_lever_graphs_o3278; assert_equal("2030", worksheet.lever_graphs_o3278); end
  def test_lever_graphs_p3278; assert_equal("2035", worksheet.lever_graphs_p3278); end
  def test_lever_graphs_q3278; assert_equal("2040", worksheet.lever_graphs_q3278); end
  def test_lever_graphs_r3278; assert_equal("2045", worksheet.lever_graphs_r3278); end
  def test_lever_graphs_s3278; assert_equal("2050", worksheet.lever_graphs_s3278); end
  def test_lever_graphs_b3279; assert_equal("Historic data", worksheet.lever_graphs_b3279); end
  def test_lever_graphs_b3280; assert_in_delta(1.0, worksheet.lever_graphs_b3280, 0.002); end
  def test_lever_graphs_k3280; assert_in_delta(0.8, worksheet.lever_graphs_k3280, 0.002); end
  def test_lever_graphs_l3280; assert_in_delta(0.8, worksheet.lever_graphs_l3280, 0.002); end
  def test_lever_graphs_m3280; assert_in_delta(0.8, worksheet.lever_graphs_m3280, 0.002); end
  def test_lever_graphs_n3280; assert_in_delta(0.8, worksheet.lever_graphs_n3280, 0.002); end
  def test_lever_graphs_o3280; assert_in_delta(0.8, worksheet.lever_graphs_o3280, 0.002); end
  def test_lever_graphs_p3280; assert_in_delta(0.8, worksheet.lever_graphs_p3280, 0.002); end
  def test_lever_graphs_q3280; assert_in_delta(0.8, worksheet.lever_graphs_q3280, 0.002); end
  def test_lever_graphs_r3280; assert_in_delta(0.8, worksheet.lever_graphs_r3280, 0.002); end
  def test_lever_graphs_s3280; assert_in_delta(0.8, worksheet.lever_graphs_s3280, 0.002); end
  def test_lever_graphs_b3281; assert_in_epsilon(2.0, worksheet.lever_graphs_b3281, 0.002); end
  def test_lever_graphs_k3281; assert_in_delta(0.48, worksheet.lever_graphs_k3281, 0.002); end
  def test_lever_graphs_l3281; assert_in_delta(0.48, worksheet.lever_graphs_l3281, 0.002); end
  def test_lever_graphs_m3281; assert_in_delta(0.48, worksheet.lever_graphs_m3281, 0.002); end
  def test_lever_graphs_n3281; assert_in_delta(0.48, worksheet.lever_graphs_n3281, 0.002); end
  def test_lever_graphs_o3281; assert_in_delta(0.48, worksheet.lever_graphs_o3281, 0.002); end
  def test_lever_graphs_p3281; assert_in_delta(0.48, worksheet.lever_graphs_p3281, 0.002); end
  def test_lever_graphs_q3281; assert_in_delta(0.48, worksheet.lever_graphs_q3281, 0.002); end
  def test_lever_graphs_r3281; assert_in_delta(0.48, worksheet.lever_graphs_r3281, 0.002); end
  def test_lever_graphs_s3281; assert_in_delta(0.48, worksheet.lever_graphs_s3281, 0.002); end
  def test_lever_graphs_b3282; assert_in_epsilon(3.0, worksheet.lever_graphs_b3282, 0.002); end
  def test_lever_graphs_k3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_k3282, 0.002); end
  def test_lever_graphs_l3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_l3282, 0.002); end
  def test_lever_graphs_m3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_m3282, 0.002); end
  def test_lever_graphs_n3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_n3282, 0.002); end
  def test_lever_graphs_o3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_o3282, 0.002); end
  def test_lever_graphs_p3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_p3282, 0.002); end
  def test_lever_graphs_q3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_q3282, 0.002); end
  def test_lever_graphs_r3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_r3282, 0.002); end
  def test_lever_graphs_s3282; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_s3282, 0.002); end
  def test_lever_graphs_b3283; assert_in_epsilon(4.0, worksheet.lever_graphs_b3283, 0.002); end
  def test_lever_graphs_k3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_k3283, 0.002); end
  def test_lever_graphs_l3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_l3283, 0.002); end
  def test_lever_graphs_m3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_m3283, 0.002); end
  def test_lever_graphs_n3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_n3283, 0.002); end
  def test_lever_graphs_o3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_o3283, 0.002); end
  def test_lever_graphs_p3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_p3283, 0.002); end
  def test_lever_graphs_q3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_q3283, 0.002); end
  def test_lever_graphs_r3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_r3283, 0.002); end
  def test_lever_graphs_s3283; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_s3283, 0.002); end
  def test_lever_graphs_c2528; assert_equal("1975", worksheet.lever_graphs_c2528); end
  def test_lever_graphs_d2528; assert_equal("1980", worksheet.lever_graphs_d2528); end
  def test_lever_graphs_e2528; assert_equal("1985", worksheet.lever_graphs_e2528); end
  def test_lever_graphs_f2528; assert_equal("1990", worksheet.lever_graphs_f2528); end
  def test_lever_graphs_g2528; assert_equal("1995", worksheet.lever_graphs_g2528); end
  def test_lever_graphs_h2528; assert_equal("2000", worksheet.lever_graphs_h2528); end
  def test_lever_graphs_i2528; assert_equal("2005", worksheet.lever_graphs_i2528); end
  def test_lever_graphs_j2528; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2528, 0.002); end
  def test_lever_graphs_k2528; assert_equal("2011", worksheet.lever_graphs_k2528); end
  def test_lever_graphs_l2528; assert_equal("2015", worksheet.lever_graphs_l2528); end
  def test_lever_graphs_m2528; assert_equal("2020", worksheet.lever_graphs_m2528); end
  def test_lever_graphs_n2528; assert_equal("2025", worksheet.lever_graphs_n2528); end
  def test_lever_graphs_o2528; assert_equal("2030", worksheet.lever_graphs_o2528); end
  def test_lever_graphs_p2528; assert_equal("2035", worksheet.lever_graphs_p2528); end
  def test_lever_graphs_q2528; assert_equal("2040", worksheet.lever_graphs_q2528); end
  def test_lever_graphs_r2528; assert_equal("2045", worksheet.lever_graphs_r2528); end
  def test_lever_graphs_s2528; assert_equal("2050", worksheet.lever_graphs_s2528); end
  def test_lever_graphs_b2529; assert_equal("Historic data", worksheet.lever_graphs_b2529); end
  def test_lever_graphs_b2530; assert_in_delta(1.0, worksheet.lever_graphs_b2530, 0.002); end
  def test_lever_graphs_k2530; assert_in_epsilon(24.0, worksheet.lever_graphs_k2530, 0.002); end
  def test_lever_graphs_l2530; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2530, 0.002); end
  def test_lever_graphs_m2530; assert_in_epsilon(27.692307692307693, worksheet.lever_graphs_m2530, 0.002); end
  def test_lever_graphs_n2530; assert_in_epsilon(29.743589743589745, worksheet.lever_graphs_n2530, 0.002); end
  def test_lever_graphs_o2530; assert_in_epsilon(31.794871794871796, worksheet.lever_graphs_o2530, 0.002); end
  def test_lever_graphs_p2530; assert_in_epsilon(33.84615384615384, worksheet.lever_graphs_p2530, 0.002); end
  def test_lever_graphs_q2530; assert_in_epsilon(35.8974358974359, worksheet.lever_graphs_q2530, 0.002); end
  def test_lever_graphs_r2530; assert_in_epsilon(37.94871794871795, worksheet.lever_graphs_r2530, 0.002); end
  def test_lever_graphs_s2530; assert_in_epsilon(40.0, worksheet.lever_graphs_s2530, 0.002); end
  def test_lever_graphs_b2531; assert_in_epsilon(2.0, worksheet.lever_graphs_b2531, 0.002); end
  def test_lever_graphs_k2531; assert_in_epsilon(24.0, worksheet.lever_graphs_k2531, 0.002); end
  def test_lever_graphs_l2531; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2531, 0.002); end
  def test_lever_graphs_m2531; assert_in_epsilon(26.978021978021978, worksheet.lever_graphs_m2531, 0.002); end
  def test_lever_graphs_n2531; assert_in_epsilon(28.315018315018317, worksheet.lever_graphs_n2531, 0.002); end
  def test_lever_graphs_o2531; assert_in_epsilon(29.65201465201465, worksheet.lever_graphs_o2531, 0.002); end
  def test_lever_graphs_p2531; assert_in_epsilon(30.98901098901099, worksheet.lever_graphs_p2531, 0.002); end
  def test_lever_graphs_q2531; assert_in_epsilon(32.32600732600733, worksheet.lever_graphs_q2531, 0.002); end
  def test_lever_graphs_r2531; assert_in_epsilon(33.663003663003664, worksheet.lever_graphs_r2531, 0.002); end
  def test_lever_graphs_s2531; assert_in_epsilon(35.0, worksheet.lever_graphs_s2531, 0.002); end
  def test_lever_graphs_b2532; assert_in_epsilon(3.0, worksheet.lever_graphs_b2532, 0.002); end
  def test_lever_graphs_k2532; assert_in_epsilon(24.0, worksheet.lever_graphs_k2532, 0.002); end
  def test_lever_graphs_l2532; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2532, 0.002); end
  def test_lever_graphs_m2532; assert_in_epsilon(26.263736263736263, worksheet.lever_graphs_m2532, 0.002); end
  def test_lever_graphs_n2532; assert_in_epsilon(26.88644688644689, worksheet.lever_graphs_n2532, 0.002); end
  def test_lever_graphs_o2532; assert_in_epsilon(27.509157509157507, worksheet.lever_graphs_o2532, 0.002); end
  def test_lever_graphs_p2532; assert_in_epsilon(28.13186813186813, worksheet.lever_graphs_p2532, 0.002); end
  def test_lever_graphs_q2532; assert_in_epsilon(28.754578754578755, worksheet.lever_graphs_q2532, 0.002); end
  def test_lever_graphs_r2532; assert_in_epsilon(29.377289377289376, worksheet.lever_graphs_r2532, 0.002); end
  def test_lever_graphs_s2532; assert_in_epsilon(30.0, worksheet.lever_graphs_s2532, 0.002); end
  def test_lever_graphs_b2533; assert_in_epsilon(4.0, worksheet.lever_graphs_b2533, 0.002); end
  def test_lever_graphs_k2533; assert_in_epsilon(24.0, worksheet.lever_graphs_k2533, 0.002); end
  def test_lever_graphs_l2533; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2533, 0.002); end
  def test_lever_graphs_m2533; assert_in_epsilon(25.549450549450547, worksheet.lever_graphs_m2533, 0.002); end
  def test_lever_graphs_n2533; assert_in_epsilon(25.45787545787546, worksheet.lever_graphs_n2533, 0.002); end
  def test_lever_graphs_o2533; assert_in_epsilon(25.366300366300365, worksheet.lever_graphs_o2533, 0.002); end
  def test_lever_graphs_p2533; assert_in_epsilon(25.274725274725274, worksheet.lever_graphs_p2533, 0.002); end
  def test_lever_graphs_q2533; assert_in_epsilon(25.183150183150182, worksheet.lever_graphs_q2533, 0.002); end
  def test_lever_graphs_r2533; assert_in_epsilon(25.09157509157509, worksheet.lever_graphs_r2533, 0.002); end
  def test_lever_graphs_s2533; assert_in_epsilon(25.0, worksheet.lever_graphs_s2533, 0.002); end
  def test_lever_graphs_d2538; assert_equal("Title", worksheet.lever_graphs_d2538); end
  def test_lever_graphs_e2538; assert_equal("Global urban incandescent light bulb", worksheet.lever_graphs_e2538); end
  def test_lever_graphs_f2538; assert_equal("Global urban halogens light bulb", worksheet.lever_graphs_f2538); end
  def test_lever_graphs_g2538; assert_equal("Global urban compact fluorescent lamp", worksheet.lever_graphs_g2538); end
  def test_lever_graphs_h2538; assert_equal("Global urban LEDs bulb", worksheet.lever_graphs_h2538); end
  def test_lever_graphs_d2539; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2539, 0.002); end
  def test_lever_graphs_e2539; assert_in_delta(0.717, worksheet.lever_graphs_e2539, 0.002); end
  def test_lever_graphs_f2539; assert_in_delta(0.03, worksheet.lever_graphs_f2539, 0.002); end
  def test_lever_graphs_g2539; assert_in_delta(0.25, worksheet.lever_graphs_g2539, 0.002); end
  def test_lever_graphs_h2539; assert_in_delta(0.0030000000000000027, worksheet.lever_graphs_h2539, 0.002); end
  def test_lever_graphs_d2540; assert_equal("2050: Level 1", worksheet.lever_graphs_d2540); end
  def test_lever_graphs_e2540; assert_in_delta(0.51, worksheet.lever_graphs_e2540, 0.002); end
  def test_lever_graphs_f2540; assert_in_delta(0.03, worksheet.lever_graphs_f2540, 0.002); end
  def test_lever_graphs_g2540; assert_in_delta(0.45, worksheet.lever_graphs_g2540, 0.002); end
  def test_lever_graphs_h2540; assert_in_delta(0.01, worksheet.lever_graphs_h2540, 0.002); end
  def test_lever_graphs_d2541; assert_equal("2050: Level 2", worksheet.lever_graphs_d2541); end
  def test_lever_graphs_e2541; assert_in_delta(0.20000000000000007, worksheet.lever_graphs_e2541, 0.002); end
  def test_lever_graphs_f2541; assert_in_delta(0.01, worksheet.lever_graphs_f2541, 0.002); end
  def test_lever_graphs_g2541; assert_in_delta(0.69, worksheet.lever_graphs_g2541, 0.002); end
  def test_lever_graphs_h2541; assert_in_delta(0.1, worksheet.lever_graphs_h2541, 0.002); end
  def test_lever_graphs_d2542; assert_equal("2050: Level 3", worksheet.lever_graphs_d2542); end
  def test_lever_graphs_e2542; assert_in_delta(0.0, (worksheet.lever_graphs_e2542||0), 0.002); end
  def test_lever_graphs_f2542; assert_in_delta(0.0, (worksheet.lever_graphs_f2542||0), 0.002); end
  def test_lever_graphs_g2542; assert_in_delta(0.5, worksheet.lever_graphs_g2542, 0.002); end
  def test_lever_graphs_h2542; assert_in_delta(0.5, worksheet.lever_graphs_h2542, 0.002); end
  def test_lever_graphs_d2543; assert_equal("2050: Level 4", worksheet.lever_graphs_d2543); end
  def test_lever_graphs_e2543; assert_in_delta(0.0, (worksheet.lever_graphs_e2543||0), 0.002); end
  def test_lever_graphs_f2543; assert_in_delta(0.0, (worksheet.lever_graphs_f2543||0), 0.002); end
  def test_lever_graphs_g2543; assert_in_delta(0.2, worksheet.lever_graphs_g2543, 0.002); end
  def test_lever_graphs_h2543; assert_in_delta(0.8, worksheet.lever_graphs_h2543, 0.002); end
  def test_lever_graphs_d1734; assert_equal("Title", worksheet.lever_graphs_d1734); end
  def test_lever_graphs_e1734; assert_equal("liquid-fuel efficient power plant", worksheet.lever_graphs_e1734); end
  def test_lever_graphs_f1734; assert_equal("Liquid-fuel inefficient power plant", worksheet.lever_graphs_f1734); end
  def test_lever_graphs_d1735; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1735, 0.002); end
  def test_lever_graphs_e1735; assert_in_delta(0.3, worksheet.lever_graphs_e1735, 0.002); end
  def test_lever_graphs_f1735; assert_in_delta(0.7, worksheet.lever_graphs_f1735, 0.002); end
  def test_lever_graphs_d1736; assert_equal("2050: Level 1", worksheet.lever_graphs_d1736); end
  def test_lever_graphs_e1736; assert_in_delta(0.3288, worksheet.lever_graphs_e1736, 0.002); end
  def test_lever_graphs_f1736; assert_in_delta(0.6712, worksheet.lever_graphs_f1736, 0.002); end
  def test_lever_graphs_d1737; assert_equal("2050: Level 2", worksheet.lever_graphs_d1737); end
  def test_lever_graphs_e1737; assert_in_delta(0.47, worksheet.lever_graphs_e1737, 0.002); end
  def test_lever_graphs_f1737; assert_in_delta(0.53, worksheet.lever_graphs_f1737, 0.002); end
  def test_lever_graphs_d1738; assert_equal("2050: Level 3", worksheet.lever_graphs_d1738); end
  def test_lever_graphs_e1738; assert_in_delta(0.65, worksheet.lever_graphs_e1738, 0.002); end
  def test_lever_graphs_f1738; assert_in_delta(0.35, worksheet.lever_graphs_f1738, 0.002); end
  def test_lever_graphs_d1739; assert_equal("2050: Level 4", worksheet.lever_graphs_d1739); end
  def test_lever_graphs_e1739; assert_in_delta(0.7142, worksheet.lever_graphs_e1739, 0.002); end
  def test_lever_graphs_f1739; assert_in_delta(0.28580000000000005, worksheet.lever_graphs_f1739, 0.002); end
  def test_lever_graphs_c1560; assert_equal("1975", worksheet.lever_graphs_c1560); end
  def test_lever_graphs_d1560; assert_equal("1980", worksheet.lever_graphs_d1560); end
  def test_lever_graphs_e1560; assert_equal("1985", worksheet.lever_graphs_e1560); end
  def test_lever_graphs_f1560; assert_equal("1990", worksheet.lever_graphs_f1560); end
  def test_lever_graphs_g1560; assert_equal("1995", worksheet.lever_graphs_g1560); end
  def test_lever_graphs_h1560; assert_equal("2000", worksheet.lever_graphs_h1560); end
  def test_lever_graphs_i1560; assert_equal("2005", worksheet.lever_graphs_i1560); end
  def test_lever_graphs_j1560; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1560, 0.002); end
  def test_lever_graphs_k1560; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1560, 0.002); end
  def test_lever_graphs_l1560; assert_equal("2015", worksheet.lever_graphs_l1560); end
  def test_lever_graphs_m1560; assert_equal("2020", worksheet.lever_graphs_m1560); end
  def test_lever_graphs_n1560; assert_equal("2025", worksheet.lever_graphs_n1560); end
  def test_lever_graphs_o1560; assert_equal("2030", worksheet.lever_graphs_o1560); end
  def test_lever_graphs_p1560; assert_equal("2035", worksheet.lever_graphs_p1560); end
  def test_lever_graphs_q1560; assert_equal("2040", worksheet.lever_graphs_q1560); end
  def test_lever_graphs_r1560; assert_equal("2045", worksheet.lever_graphs_r1560); end
  def test_lever_graphs_s1560; assert_equal("2050", worksheet.lever_graphs_s1560); end
  def test_lever_graphs_b1561; assert_equal("Historic data", worksheet.lever_graphs_b1561); end
  def test_lever_graphs_b1562; assert_in_delta(1.0, worksheet.lever_graphs_b1562, 0.002); end
  def test_lever_graphs_k1562; assert_in_delta(0.24, worksheet.lever_graphs_k1562, 0.002); end
  def test_lever_graphs_l1562; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1562, 0.002); end
  def test_lever_graphs_m1562; assert_in_delta(0.2421098901098901, worksheet.lever_graphs_m1562, 0.002); end
  def test_lever_graphs_n1562; assert_in_delta(0.24175824175824173, worksheet.lever_graphs_n1562, 0.002); end
  def test_lever_graphs_o1562; assert_in_delta(0.2414065934065934, worksheet.lever_graphs_o1562, 0.002); end
  def test_lever_graphs_p1562; assert_in_delta(0.24105494505494504, worksheet.lever_graphs_p1562, 0.002); end
  def test_lever_graphs_q1562; assert_in_delta(0.24070329670329668, worksheet.lever_graphs_q1562, 0.002); end
  def test_lever_graphs_r1562; assert_in_delta(0.24035164835164835, worksheet.lever_graphs_r1562, 0.002); end
  def test_lever_graphs_s1562; assert_in_delta(0.24, worksheet.lever_graphs_s1562, 0.002); end
  def test_lever_graphs_b1563; assert_in_epsilon(2.0, worksheet.lever_graphs_b1563, 0.002); end
  def test_lever_graphs_k1563; assert_in_delta(0.24, worksheet.lever_graphs_k1563, 0.002); end
  def test_lever_graphs_l1563; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1563, 0.002); end
  def test_lever_graphs_m1563; assert_in_delta(0.2455384615384615, worksheet.lever_graphs_m1563, 0.002); end
  def test_lever_graphs_n1563; assert_in_delta(0.24861538461538457, worksheet.lever_graphs_n1563, 0.002); end
  def test_lever_graphs_o1563; assert_in_delta(0.25169230769230766, worksheet.lever_graphs_o1563, 0.002); end
  def test_lever_graphs_p1563; assert_in_delta(0.25476923076923075, worksheet.lever_graphs_p1563, 0.002); end
  def test_lever_graphs_q1563; assert_in_delta(0.2578461538461539, worksheet.lever_graphs_q1563, 0.002); end
  def test_lever_graphs_r1563; assert_in_delta(0.26092307692307687, worksheet.lever_graphs_r1563, 0.002); end
  def test_lever_graphs_s1563; assert_in_delta(0.264, worksheet.lever_graphs_s1563, 0.002); end
  def test_lever_graphs_b1564; assert_in_epsilon(3.0, worksheet.lever_graphs_b1564, 0.002); end
  def test_lever_graphs_k1564; assert_in_delta(0.24, worksheet.lever_graphs_k1564, 0.002); end
  def test_lever_graphs_l1564; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1564, 0.002); end
  def test_lever_graphs_m1564; assert_in_delta(0.24896703296703293, worksheet.lever_graphs_m1564, 0.002); end
  def test_lever_graphs_n1564; assert_in_delta(0.25547252747252747, worksheet.lever_graphs_n1564, 0.002); end
  def test_lever_graphs_o1564; assert_in_delta(0.26197802197802195, worksheet.lever_graphs_o1564, 0.002); end
  def test_lever_graphs_p1564; assert_in_delta(0.2684835164835164, worksheet.lever_graphs_p1564, 0.002); end
  def test_lever_graphs_q1564; assert_in_delta(0.27498901098901096, worksheet.lever_graphs_q1564, 0.002); end
  def test_lever_graphs_r1564; assert_in_delta(0.28149450549450544, worksheet.lever_graphs_r1564, 0.002); end
  def test_lever_graphs_s1564; assert_in_delta(0.288, worksheet.lever_graphs_s1564, 0.002); end
  def test_lever_graphs_b1565; assert_in_epsilon(4.0, worksheet.lever_graphs_b1565, 0.002); end
  def test_lever_graphs_k1565; assert_in_delta(0.24, worksheet.lever_graphs_k1565, 0.002); end
  def test_lever_graphs_l1565; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1565, 0.002); end
  def test_lever_graphs_m1565; assert_in_delta(0.2523956043956043, worksheet.lever_graphs_m1565, 0.002); end
  def test_lever_graphs_n1565; assert_in_delta(0.26232967032967036, worksheet.lever_graphs_n1565, 0.002); end
  def test_lever_graphs_o1565; assert_in_delta(0.27226373626373623, worksheet.lever_graphs_o1565, 0.002); end
  def test_lever_graphs_p1565; assert_in_delta(0.2821978021978022, worksheet.lever_graphs_p1565, 0.002); end
  def test_lever_graphs_q1565; assert_in_delta(0.29213186813186814, worksheet.lever_graphs_q1565, 0.002); end
  def test_lever_graphs_r1565; assert_in_delta(0.30206593406593407, worksheet.lever_graphs_r1565, 0.002); end
  def test_lever_graphs_s1565; assert_in_delta(0.312, worksheet.lever_graphs_s1565, 0.002); end
  def test_lever_graphs_c1572; assert_equal("1975", worksheet.lever_graphs_c1572); end
  def test_lever_graphs_d1572; assert_equal("1980", worksheet.lever_graphs_d1572); end
  def test_lever_graphs_e1572; assert_equal("1985", worksheet.lever_graphs_e1572); end
  def test_lever_graphs_f1572; assert_equal("1990", worksheet.lever_graphs_f1572); end
  def test_lever_graphs_g1572; assert_equal("1995", worksheet.lever_graphs_g1572); end
  def test_lever_graphs_h1572; assert_equal("2000", worksheet.lever_graphs_h1572); end
  def test_lever_graphs_i1572; assert_equal("2005", worksheet.lever_graphs_i1572); end
  def test_lever_graphs_j1572; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1572, 0.002); end
  def test_lever_graphs_k1572; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1572, 0.002); end
  def test_lever_graphs_l1572; assert_equal("2015", worksheet.lever_graphs_l1572); end
  def test_lever_graphs_m1572; assert_equal("2020", worksheet.lever_graphs_m1572); end
  def test_lever_graphs_n1572; assert_equal("2025", worksheet.lever_graphs_n1572); end
  def test_lever_graphs_o1572; assert_equal("2030", worksheet.lever_graphs_o1572); end
  def test_lever_graphs_p1572; assert_equal("2035", worksheet.lever_graphs_p1572); end
  def test_lever_graphs_q1572; assert_equal("2040", worksheet.lever_graphs_q1572); end
  def test_lever_graphs_r1572; assert_equal("2045", worksheet.lever_graphs_r1572); end
  def test_lever_graphs_s1572; assert_equal("2050", worksheet.lever_graphs_s1572); end
  def test_lever_graphs_b1573; assert_equal("Historic data", worksheet.lever_graphs_b1573); end
  def test_lever_graphs_b1574; assert_in_delta(1.0, worksheet.lever_graphs_b1574, 0.002); end
  def test_lever_graphs_k1574; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1574, 0.002); end
  def test_lever_graphs_l1574; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1574, 0.002); end
  def test_lever_graphs_m1574; assert_in_epsilon(20175.82417582417, worksheet.lever_graphs_m1574, 0.002); end
  def test_lever_graphs_n1574; assert_in_epsilon(20146.520146520146, worksheet.lever_graphs_n1574, 0.002); end
  def test_lever_graphs_o1574; assert_in_epsilon(20117.216117216114, worksheet.lever_graphs_o1574, 0.002); end
  def test_lever_graphs_p1574; assert_in_epsilon(20087.912087912082, worksheet.lever_graphs_p1574, 0.002); end
  def test_lever_graphs_q1574; assert_in_epsilon(20058.608058608057, worksheet.lever_graphs_q1574, 0.002); end
  def test_lever_graphs_r1574; assert_in_epsilon(20029.30402930403, worksheet.lever_graphs_r1574, 0.002); end
  def test_lever_graphs_s1574; assert_in_epsilon(20000.0, worksheet.lever_graphs_s1574, 0.002); end
  def test_lever_graphs_b1575; assert_in_epsilon(2.0, worksheet.lever_graphs_b1575, 0.002); end
  def test_lever_graphs_k1575; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1575, 0.002); end
  def test_lever_graphs_l1575; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1575, 0.002); end
  def test_lever_graphs_m1575; assert_in_epsilon(20318.681318681312, worksheet.lever_graphs_m1575, 0.002); end
  def test_lever_graphs_n1575; assert_in_epsilon(20432.234432234432, worksheet.lever_graphs_n1575, 0.002); end
  def test_lever_graphs_o1575; assert_in_epsilon(20545.787545787545, worksheet.lever_graphs_o1575, 0.002); end
  def test_lever_graphs_p1575; assert_in_epsilon(20659.340659340658, worksheet.lever_graphs_p1575, 0.002); end
  def test_lever_graphs_q1575; assert_in_epsilon(20772.89377289377, worksheet.lever_graphs_q1575, 0.002); end
  def test_lever_graphs_r1575; assert_in_epsilon(20886.446886446887, worksheet.lever_graphs_r1575, 0.002); end
  def test_lever_graphs_s1575; assert_in_epsilon(21000.0, worksheet.lever_graphs_s1575, 0.002); end
  def test_lever_graphs_b1576; assert_in_epsilon(3.0, worksheet.lever_graphs_b1576, 0.002); end
  def test_lever_graphs_k1576; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1576, 0.002); end
  def test_lever_graphs_l1576; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1576, 0.002); end
  def test_lever_graphs_m1576; assert_in_epsilon(20461.538461538454, worksheet.lever_graphs_m1576, 0.002); end
  def test_lever_graphs_n1576; assert_in_epsilon(20717.948717948715, worksheet.lever_graphs_n1576, 0.002); end
  def test_lever_graphs_o1576; assert_in_epsilon(20974.35897435897, worksheet.lever_graphs_o1576, 0.002); end
  def test_lever_graphs_p1576; assert_in_epsilon(21230.769230769227, worksheet.lever_graphs_p1576, 0.002); end
  def test_lever_graphs_q1576; assert_in_epsilon(21487.179487179485, worksheet.lever_graphs_q1576, 0.002); end
  def test_lever_graphs_r1576; assert_in_epsilon(21743.589743589742, worksheet.lever_graphs_r1576, 0.002); end
  def test_lever_graphs_s1576; assert_in_epsilon(22000.0, worksheet.lever_graphs_s1576, 0.002); end
  def test_lever_graphs_b1577; assert_in_epsilon(4.0, worksheet.lever_graphs_b1577, 0.002); end
  def test_lever_graphs_k1577; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1577, 0.002); end
  def test_lever_graphs_l1577; assert_in_epsilon(20205.1282051282, worksheet.lever_graphs_l1577, 0.002); end
  def test_lever_graphs_m1577; assert_in_epsilon(20604.3956043956, worksheet.lever_graphs_m1577, 0.002); end
  def test_lever_graphs_n1577; assert_in_epsilon(21003.663003663, worksheet.lever_graphs_n1577, 0.002); end
  def test_lever_graphs_o1577; assert_in_epsilon(21402.930402930397, worksheet.lever_graphs_o1577, 0.002); end
  def test_lever_graphs_p1577; assert_in_epsilon(21802.197802197796, worksheet.lever_graphs_p1577, 0.002); end
  def test_lever_graphs_q1577; assert_in_epsilon(22201.4652014652, worksheet.lever_graphs_q1577, 0.002); end
  def test_lever_graphs_r1577; assert_in_epsilon(22600.732600732597, worksheet.lever_graphs_r1577, 0.002); end
  def test_lever_graphs_s1577; assert_in_epsilon(23000.0, worksheet.lever_graphs_s1577, 0.002); end
  def test_lever_graphs_c2937; assert_equal("1975", worksheet.lever_graphs_c2937); end
  def test_lever_graphs_d2937; assert_equal("1980", worksheet.lever_graphs_d2937); end
  def test_lever_graphs_e2937; assert_equal("1985", worksheet.lever_graphs_e2937); end
  def test_lever_graphs_f2937; assert_equal("1990", worksheet.lever_graphs_f2937); end
  def test_lever_graphs_g2937; assert_equal("1995", worksheet.lever_graphs_g2937); end
  def test_lever_graphs_h2937; assert_equal("2000", worksheet.lever_graphs_h2937); end
  def test_lever_graphs_i2937; assert_equal("2005", worksheet.lever_graphs_i2937); end
  def test_lever_graphs_j2937; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2937, 0.002); end
  def test_lever_graphs_k2937; assert_equal("2011", worksheet.lever_graphs_k2937); end
  def test_lever_graphs_l2937; assert_equal("2015", worksheet.lever_graphs_l2937); end
  def test_lever_graphs_m2937; assert_equal("2020", worksheet.lever_graphs_m2937); end
  def test_lever_graphs_n2937; assert_equal("2025", worksheet.lever_graphs_n2937); end
  def test_lever_graphs_o2937; assert_equal("2030", worksheet.lever_graphs_o2937); end
  def test_lever_graphs_p2937; assert_equal("2035", worksheet.lever_graphs_p2937); end
  def test_lever_graphs_q2937; assert_equal("2040", worksheet.lever_graphs_q2937); end
  def test_lever_graphs_r2937; assert_equal("2045", worksheet.lever_graphs_r2937); end
  def test_lever_graphs_s2937; assert_equal("2050", worksheet.lever_graphs_s2937); end
  def test_lever_graphs_b2938; assert_equal("Historic data", worksheet.lever_graphs_b2938); end
  def test_lever_graphs_c2938; assert_in_epsilon(113.0, worksheet.lever_graphs_c2938, 0.002); end
  def test_lever_graphs_d2938; assert_in_epsilon(126.0, worksheet.lever_graphs_d2938, 0.002); end
  def test_lever_graphs_e2938; assert_in_epsilon(131.0, worksheet.lever_graphs_e2938, 0.002); end
  def test_lever_graphs_f2938; assert_in_epsilon(143.0, worksheet.lever_graphs_f2938, 0.002); end
  def test_lever_graphs_g2938; assert_in_epsilon(153.0, worksheet.lever_graphs_g2938, 0.002); end
  def test_lever_graphs_h2938; assert_in_epsilon(165.0, worksheet.lever_graphs_h2938, 0.002); end
  def test_lever_graphs_i2938; assert_in_epsilon(171.0, worksheet.lever_graphs_i2938, 0.002); end
  def test_lever_graphs_j2938; assert_in_epsilon(185.0, worksheet.lever_graphs_j2938, 0.002); end
  def test_lever_graphs_k2938; assert_in_epsilon(187.0, worksheet.lever_graphs_k2938, 0.002); end
  def test_lever_graphs_b2939; assert_in_delta(1.0, worksheet.lever_graphs_b2939, 0.002); end
  def test_lever_graphs_k2939; assert_in_epsilon(187.0, worksheet.lever_graphs_k2939, 0.002); end
  def test_lever_graphs_l2939; assert_in_epsilon(187.0, worksheet.lever_graphs_l2939, 0.002); end
  def test_lever_graphs_m2939; assert_in_epsilon(189.5705979588412, worksheet.lever_graphs_m2939, 0.002); end
  def test_lever_graphs_n2939; assert_in_epsilon(193.039472841604, worksheet.lever_graphs_n2939, 0.002); end
  def test_lever_graphs_o2939; assert_in_epsilon(200.49830306235523, worksheet.lever_graphs_o2939, 0.002); end
  def test_lever_graphs_p2939; assert_in_epsilon(214.308933160323, worksheet.lever_graphs_p2939, 0.002); end
  def test_lever_graphs_q2939; assert_in_epsilon(234.0, worksheet.lever_graphs_q2939, 0.002); end
  def test_lever_graphs_r2939; assert_in_epsilon(253.69106683967703, worksheet.lever_graphs_r2939, 0.002); end
  def test_lever_graphs_s2939; assert_in_epsilon(281.0, worksheet.lever_graphs_s2939, 0.002); end
  def test_lever_graphs_b2940; assert_in_epsilon(2.0, worksheet.lever_graphs_b2940, 0.002); end
  def test_lever_graphs_k2940; assert_in_epsilon(187.0, worksheet.lever_graphs_k2940, 0.002); end
  def test_lever_graphs_l2940; assert_in_epsilon(187.0, worksheet.lever_graphs_l2940, 0.002); end
  def test_lever_graphs_m2940; assert_in_epsilon(187.90244396427403, worksheet.lever_graphs_m2940, 0.002); end
  def test_lever_graphs_n2940; assert_in_epsilon(189.1202404656695, worksheet.lever_graphs_n2940, 0.002); end
  def test_lever_graphs_o2940; assert_in_epsilon(191.7387659686992, worksheet.lever_graphs_o2940, 0.002); end
  def test_lever_graphs_p2940; assert_in_epsilon(196.5871786626666, worksheet.lever_graphs_p2940, 0.002); end
  def test_lever_graphs_q2940; assert_in_epsilon(203.50000000000003, worksheet.lever_graphs_q2940, 0.002); end
  def test_lever_graphs_r2940; assert_in_epsilon(210.41282133733344, worksheet.lever_graphs_r2940, 0.002); end
  def test_lever_graphs_s2940; assert_in_epsilon(220.00000000000003, worksheet.lever_graphs_s2940, 0.002); end
  def test_lever_graphs_b2941; assert_in_epsilon(3.0, worksheet.lever_graphs_b2941, 0.002); end
  def test_lever_graphs_k2941; assert_in_epsilon(187.0, worksheet.lever_graphs_k2941, 0.002); end
  def test_lever_graphs_l2941; assert_in_epsilon(187.0, worksheet.lever_graphs_l2941, 0.002); end
  def test_lever_graphs_m2941; assert_in_epsilon(186.04286246213363, worksheet.lever_graphs_m2941, 0.002); end
  def test_lever_graphs_n2941; assert_in_epsilon(184.75126011216872, worksheet.lever_graphs_n2941, 0.002); end
  def test_lever_graphs_o2941; assert_in_epsilon(181.9740360938039, worksheet.lever_graphs_o2941, 0.002); end
  def test_lever_graphs_p2941; assert_in_epsilon(176.83178020626272, worksheet.lever_graphs_p2941, 0.002); end
  def test_lever_graphs_q2941; assert_in_epsilon(169.5, worksheet.lever_graphs_q2941, 0.002); end
  def test_lever_graphs_r2941; assert_in_epsilon(162.16821979373728, worksheet.lever_graphs_r2941, 0.002); end
  def test_lever_graphs_s2941; assert_in_epsilon(152.0, worksheet.lever_graphs_s2941, 0.002); end
  def test_lever_graphs_b2942; assert_in_epsilon(4.0, worksheet.lever_graphs_b2942, 0.002); end
  def test_lever_graphs_k2942; assert_in_epsilon(187.0, worksheet.lever_graphs_k2942, 0.002); end
  def test_lever_graphs_l2942; assert_in_epsilon(187.0, worksheet.lever_graphs_l2942, 0.002); end
  def test_lever_graphs_m2942; assert_in_epsilon(182.26900588426037, worksheet.lever_graphs_m2942, 0.002); end
  def test_lever_graphs_n2942; assert_in_epsilon(175.8847999830054, worksheet.lever_graphs_n2942, 0.002); end
  def test_lever_graphs_o2942; assert_in_epsilon(162.15737840651644, worksheet.lever_graphs_o2942, 0.002); end
  def test_lever_graphs_p2942; assert_in_epsilon(136.7399421623843, worksheet.lever_graphs_p2942, 0.002); end
  def test_lever_graphs_q2942; assert_in_epsilon(100.5, worksheet.lever_graphs_q2942, 0.002); end
  def test_lever_graphs_r2942; assert_in_epsilon(64.2600578376157, worksheet.lever_graphs_r2942, 0.002); end
  def test_lever_graphs_s2942; assert_in_epsilon(14.0, worksheet.lever_graphs_s2942, 0.002); end
  def test_lever_graphs_b2943; assert_equal("USA", worksheet.lever_graphs_b2943); end
  def test_lever_graphs_k2943; assert_in_epsilon(350.0, worksheet.lever_graphs_k2943, 0.002); end
  def test_lever_graphs_b2944; assert_equal("UK ", worksheet.lever_graphs_b2944); end
  def test_lever_graphs_k2944; assert_in_epsilon(360.0, worksheet.lever_graphs_k2944, 0.002); end
  def test_lever_graphs_b2945; assert_equal("Japan", worksheet.lever_graphs_b2945); end
  def test_lever_graphs_k2945; assert_in_epsilon(150.66, worksheet.lever_graphs_k2945, 0.002); end
  def test_lever_graphs_b2946; assert_equal("Brazil", worksheet.lever_graphs_b2946); end
  def test_lever_graphs_k2946; assert_in_epsilon(344.0, worksheet.lever_graphs_k2946, 0.002); end
  def test_lever_graphs_b2947; assert_equal("China", worksheet.lever_graphs_b2947); end
  def test_lever_graphs_k2947; assert_in_epsilon(367.0, worksheet.lever_graphs_k2947, 0.002); end
  def test_lever_graphs_b2948; assert_equal("Europe", worksheet.lever_graphs_b2948); end
  def test_lever_graphs_k2948; assert_in_epsilon(281.0, worksheet.lever_graphs_k2948, 0.002); end
  def test_lever_graphs_b2949; assert_equal("India ", worksheet.lever_graphs_b2949); end
  def test_lever_graphs_k2949; assert_in_epsilon(14.0, worksheet.lever_graphs_k2949, 0.002); end
  def test_lever_graphs_b2950; assert_equal("Nigeria", worksheet.lever_graphs_b2950); end
  def test_lever_graphs_k2950; assert_in_epsilon(34.0, worksheet.lever_graphs_k2950, 0.002); end
  def test_lever_graphs_b2951; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2951); end
  def test_lever_graphs_k2951; assert_in_epsilon(162.0, worksheet.lever_graphs_k2951, 0.002); end
  def test_lever_graphs_c2964; assert_equal("1975", worksheet.lever_graphs_c2964); end
  def test_lever_graphs_d2964; assert_equal("1980", worksheet.lever_graphs_d2964); end
  def test_lever_graphs_e2964; assert_equal("1985", worksheet.lever_graphs_e2964); end
  def test_lever_graphs_f2964; assert_equal("1990", worksheet.lever_graphs_f2964); end
  def test_lever_graphs_g2964; assert_equal("1995", worksheet.lever_graphs_g2964); end
  def test_lever_graphs_h2964; assert_equal("2000", worksheet.lever_graphs_h2964); end
  def test_lever_graphs_i2964; assert_equal("2005", worksheet.lever_graphs_i2964); end
  def test_lever_graphs_j2964; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2964, 0.002); end
  def test_lever_graphs_k2964; assert_equal("2011", worksheet.lever_graphs_k2964); end
  def test_lever_graphs_l2964; assert_equal("2015", worksheet.lever_graphs_l2964); end
  def test_lever_graphs_m2964; assert_equal("2020", worksheet.lever_graphs_m2964); end
  def test_lever_graphs_n2964; assert_equal("2025", worksheet.lever_graphs_n2964); end
  def test_lever_graphs_o2964; assert_equal("2030", worksheet.lever_graphs_o2964); end
  def test_lever_graphs_p2964; assert_equal("2035", worksheet.lever_graphs_p2964); end
  def test_lever_graphs_q2964; assert_equal("2040", worksheet.lever_graphs_q2964); end
  def test_lever_graphs_r2964; assert_equal("2045", worksheet.lever_graphs_r2964); end
  def test_lever_graphs_s2964; assert_equal("2050", worksheet.lever_graphs_s2964); end
  def test_lever_graphs_b2965; assert_equal("Historic data", worksheet.lever_graphs_b2965); end
  def test_lever_graphs_c2965; assert_in_delta(0.4, worksheet.lever_graphs_c2965, 0.002); end
  def test_lever_graphs_d2965; assert_in_delta(0.3484, worksheet.lever_graphs_d2965, 0.002); end
  def test_lever_graphs_e2965; assert_in_delta(0.3333, worksheet.lever_graphs_e2965, 0.002); end
  def test_lever_graphs_f2965; assert_in_delta(0.3125, worksheet.lever_graphs_f2965, 0.002); end
  def test_lever_graphs_g2965; assert_in_delta(0.2593, worksheet.lever_graphs_g2965, 0.002); end
  def test_lever_graphs_h2965; assert_in_delta(0.2451, worksheet.lever_graphs_h2965, 0.002); end
  def test_lever_graphs_i2965; assert_in_delta(0.237, worksheet.lever_graphs_i2965, 0.002); end
  def test_lever_graphs_j2965; assert_in_delta(0.2227, worksheet.lever_graphs_j2965, 0.002); end
  def test_lever_graphs_k2965; assert_in_delta(0.2208, worksheet.lever_graphs_k2965, 0.002); end
  def test_lever_graphs_b2966; assert_in_delta(1.0, worksheet.lever_graphs_b2966, 0.002); end
  def test_lever_graphs_k2966; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2966, 0.002); end
  def test_lever_graphs_l2966; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l2966, 0.002); end
  def test_lever_graphs_m2966; assert_in_delta(0.23134065934065934, worksheet.lever_graphs_m2966, 0.002); end
  def test_lever_graphs_n2966; assert_in_delta(0.2391172161172161, worksheet.lever_graphs_n2966, 0.002); end
  def test_lever_graphs_o2966; assert_in_delta(0.24689377289377287, worksheet.lever_graphs_o2966, 0.002); end
  def test_lever_graphs_p2966; assert_in_delta(0.25467032967032965, worksheet.lever_graphs_p2966, 0.002); end
  def test_lever_graphs_q2966; assert_in_delta(0.2624468864468864, worksheet.lever_graphs_q2966, 0.002); end
  def test_lever_graphs_r2966; assert_in_delta(0.2702234432234432, worksheet.lever_graphs_r2966, 0.002); end
  def test_lever_graphs_s2966; assert_in_delta(0.278, worksheet.lever_graphs_s2966, 0.002); end
  def test_lever_graphs_b2967; assert_in_epsilon(2.0, worksheet.lever_graphs_b2967, 0.002); end
  def test_lever_graphs_k2967; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2967, 0.002); end
  def test_lever_graphs_l2967; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l2967, 0.002); end
  def test_lever_graphs_m2967; assert_in_delta(0.22676923076923075, worksheet.lever_graphs_m2967, 0.002); end
  def test_lever_graphs_n2967; assert_in_delta(0.22997435897435894, worksheet.lever_graphs_n2967, 0.002); end
  def test_lever_graphs_o2967; assert_in_delta(0.23317948717948717, worksheet.lever_graphs_o2967, 0.002); end
  def test_lever_graphs_p2967; assert_in_delta(0.2363846153846154, worksheet.lever_graphs_p2967, 0.002); end
  def test_lever_graphs_q2967; assert_in_delta(0.2395897435897436, worksheet.lever_graphs_q2967, 0.002); end
  def test_lever_graphs_r2967; assert_in_delta(0.24279487179487177, worksheet.lever_graphs_r2967, 0.002); end
  def test_lever_graphs_s2967; assert_in_delta(0.246, worksheet.lever_graphs_s2967, 0.002); end
  def test_lever_graphs_b2968; assert_in_epsilon(3.0, worksheet.lever_graphs_b2968, 0.002); end
  def test_lever_graphs_k2968; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2968, 0.002); end
  def test_lever_graphs_l2968; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l2968, 0.002); end
  def test_lever_graphs_m2968; assert_in_delta(0.2231978021978022, worksheet.lever_graphs_m2968, 0.002); end
  def test_lever_graphs_n2968; assert_in_delta(0.22283150183150183, worksheet.lever_graphs_n2968, 0.002); end
  def test_lever_graphs_o2968; assert_in_delta(0.22246520146520146, worksheet.lever_graphs_o2968, 0.002); end
  def test_lever_graphs_p2968; assert_in_delta(0.22209890109890107, worksheet.lever_graphs_p2968, 0.002); end
  def test_lever_graphs_q2968; assert_in_delta(0.2217326007326007, worksheet.lever_graphs_q2968, 0.002); end
  def test_lever_graphs_r2968; assert_in_delta(0.22136630036630034, worksheet.lever_graphs_r2968, 0.002); end
  def test_lever_graphs_s2968; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_s2968, 0.002); end
  def test_lever_graphs_b2969; assert_in_epsilon(4.0, worksheet.lever_graphs_b2969, 0.002); end
  def test_lever_graphs_k2969; assert_in_delta(0.22099999999999997, worksheet.lever_graphs_k2969, 0.002); end
  def test_lever_graphs_l2969; assert_in_delta(0.22356410256410253, worksheet.lever_graphs_l2969, 0.002); end
  def test_lever_graphs_m2969; assert_in_delta(0.20519780219780218, worksheet.lever_graphs_m2969, 0.002); end
  def test_lever_graphs_n2969; assert_in_delta(0.18683150183150182, worksheet.lever_graphs_n2969, 0.002); end
  def test_lever_graphs_o2969; assert_in_delta(0.16846520146520144, worksheet.lever_graphs_o2969, 0.002); end
  def test_lever_graphs_p2969; assert_in_delta(0.1500989010989011, worksheet.lever_graphs_p2969, 0.002); end
  def test_lever_graphs_q2969; assert_in_delta(0.13173260073260074, worksheet.lever_graphs_q2969, 0.002); end
  def test_lever_graphs_r2969; assert_in_delta(0.11336630036630038, worksheet.lever_graphs_r2969, 0.002); end
  def test_lever_graphs_s2969; assert_in_delta(0.095, worksheet.lever_graphs_s2969, 0.002); end
  def test_lever_graphs_b2970; assert_equal("USA", worksheet.lever_graphs_b2970); end
  def test_lever_graphs_k2970; assert_in_delta(0.24, worksheet.lever_graphs_k2970, 0.002); end
  def test_lever_graphs_b2971; assert_equal("UK ", worksheet.lever_graphs_b2971); end
  def test_lever_graphs_k2971; assert_in_delta(0.19, worksheet.lever_graphs_k2971, 0.002); end
  def test_lever_graphs_b2972; assert_equal("Japan", worksheet.lever_graphs_b2972); end
  def test_lever_graphs_k2972; assert_in_delta(0.161, worksheet.lever_graphs_k2972, 0.002); end
  def test_lever_graphs_b2973; assert_equal("Brazil ", worksheet.lever_graphs_b2973); end
  def test_lever_graphs_k2973; assert_in_delta(0.38, worksheet.lever_graphs_k2973, 0.002); end
  def test_lever_graphs_b2974; assert_equal("China ", worksheet.lever_graphs_b2974); end
  def test_lever_graphs_k2974; assert_in_delta(0.09, worksheet.lever_graphs_k2974, 0.002); end
  def test_lever_graphs_b2975; assert_equal("Europe", worksheet.lever_graphs_b2975); end
  def test_lever_graphs_k2975; assert_in_delta(0.22, worksheet.lever_graphs_k2975, 0.002); end
  def test_lever_graphs_b2976; assert_equal("India", worksheet.lever_graphs_b2976); end
  def test_lever_graphs_k2976; assert_in_delta(0.47, worksheet.lever_graphs_k2976, 0.002); end
  def test_lever_graphs_b2977; assert_equal("Nigeria", worksheet.lever_graphs_b2977); end
  def test_lever_graphs_k2977; assert_in_delta(0.52, worksheet.lever_graphs_k2977, 0.002); end
  def test_lever_graphs_b2978; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2978); end
  def test_lever_graphs_d1499; assert_equal("Title", worksheet.lever_graphs_d1499); end
  def test_lever_graphs_e1499; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1499); end
  def test_lever_graphs_f1499; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1499); end
  def test_lever_graphs_g1499; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1499); end
  def test_lever_graphs_h1499; assert_equal("Urban passenger car", worksheet.lever_graphs_h1499); end
  def test_lever_graphs_i1499; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1499); end
  def test_lever_graphs_j1499; assert_equal("Urban passenger train", worksheet.lever_graphs_j1499); end
  def test_lever_graphs_d1500; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1500, 0.002); end
  def test_lever_graphs_e1500; assert_in_delta(0.014029126814902794, worksheet.lever_graphs_e1500, 0.002); end
  def test_lever_graphs_f1500; assert_in_delta(0.003050510137966473, worksheet.lever_graphs_f1500, 0.002); end
  def test_lever_graphs_g1500; assert_in_delta(0.01163819442092095, worksheet.lever_graphs_g1500, 0.002); end
  def test_lever_graphs_h1500; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_h1500, 0.002); end
  def test_lever_graphs_i1500; assert_in_delta(0.19310320114294077, worksheet.lever_graphs_i1500, 0.002); end
  def test_lever_graphs_j1500; assert_in_delta(0.01828031799815466, worksheet.lever_graphs_j1500, 0.002); end
  def test_lever_graphs_d1501; assert_equal("2050: Level 1", worksheet.lever_graphs_d1501); end
  def test_lever_graphs_e1501; assert_in_delta(0.01079411386416709, worksheet.lever_graphs_e1501, 0.002); end
  def test_lever_graphs_f1501; assert_in_delta(0.003189163273233461, worksheet.lever_graphs_f1501, 0.002); end
  def test_lever_graphs_g1501; assert_in_delta(0.02290550711079704, worksheet.lever_graphs_g1501, 0.002); end
  def test_lever_graphs_h1501; assert_in_delta(0.7784845756581111, worksheet.lever_graphs_h1501, 0.002); end
  def test_lever_graphs_i1501; assert_in_delta(0.1332866427545019, worksheet.lever_graphs_i1501, 0.002); end
  def test_lever_graphs_j1501; assert_in_delta(0.05133999733918934, worksheet.lever_graphs_j1501, 0.002); end
  def test_lever_graphs_d1502; assert_equal("2050: Level 2", worksheet.lever_graphs_d1502); end
  def test_lever_graphs_e1502; assert_in_delta(0.022796417705789093, worksheet.lever_graphs_e1502, 0.002); end
  def test_lever_graphs_f1502; assert_in_delta(0.009512790847152591, worksheet.lever_graphs_f1502, 0.002); end
  def test_lever_graphs_g1502; assert_in_delta(0.033423319192698295, worksheet.lever_graphs_g1502, 0.002); end
  def test_lever_graphs_h1502; assert_in_delta(0.6901915413292197, worksheet.lever_graphs_h1502, 0.002); end
  def test_lever_graphs_i1502; assert_in_delta(0.17482966962334492, worksheet.lever_graphs_i1502, 0.002); end
  def test_lever_graphs_j1502; assert_in_delta(0.06924626130179543, worksheet.lever_graphs_j1502, 0.002); end
  def test_lever_graphs_d1503; assert_equal("2050: Level 3", worksheet.lever_graphs_d1503); end
  def test_lever_graphs_e1503; assert_in_delta(0.02672087112825595, worksheet.lever_graphs_e1503, 0.002); end
  def test_lever_graphs_f1503; assert_in_delta(0.01040707612363653, worksheet.lever_graphs_f1503, 0.002); end
  def test_lever_graphs_g1503; assert_in_delta(0.060831697923719716, worksheet.lever_graphs_g1503, 0.002); end
  def test_lever_graphs_h1503; assert_in_delta(0.5996726025835968, worksheet.lever_graphs_h1503, 0.002); end
  def test_lever_graphs_i1503; assert_in_delta(0.20626637362162492, worksheet.lever_graphs_i1503, 0.002); end
  def test_lever_graphs_j1503; assert_in_delta(0.09610137861916612, worksheet.lever_graphs_j1503, 0.002); end
  def test_lever_graphs_d1504; assert_equal("2050: Level 4", worksheet.lever_graphs_d1504); end
  def test_lever_graphs_e1504; assert_in_delta(0.036189143851419275, worksheet.lever_graphs_e1504, 0.002); end
  def test_lever_graphs_f1504; assert_in_delta(0.027406398413794133, worksheet.lever_graphs_f1504, 0.002); end
  def test_lever_graphs_g1504; assert_in_delta(0.09611793339525283, worksheet.lever_graphs_g1504, 0.002); end
  def test_lever_graphs_h1504; assert_in_delta(0.4498247091005362, worksheet.lever_graphs_h1504, 0.002); end
  def test_lever_graphs_i1504; assert_in_delta(0.27935479464253477, worksheet.lever_graphs_i1504, 0.002); end
  def test_lever_graphs_j1504; assert_in_delta(0.11110702059646282, worksheet.lever_graphs_j1504, 0.002); end
  def test_lever_graphs_d1521; assert_equal("Title", worksheet.lever_graphs_d1521); end
  def test_lever_graphs_e1521; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1521); end
  def test_lever_graphs_f1521; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1521); end
  def test_lever_graphs_g1521; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1521); end
  def test_lever_graphs_h1521; assert_equal("Urban passenger car", worksheet.lever_graphs_h1521); end
  def test_lever_graphs_i1521; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1521); end
  def test_lever_graphs_j1521; assert_equal("Urban passenger train", worksheet.lever_graphs_j1521); end
  def test_lever_graphs_d1522; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1522, 0.002); end
  def test_lever_graphs_e1522; assert_in_delta(0.11247000971418973, worksheet.lever_graphs_e1522, 0.002); end
  def test_lever_graphs_f1522; assert_in_delta(0.08431450603944185, worksheet.lever_graphs_f1522, 0.002); end
  def test_lever_graphs_g1522; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1522, 0.002); end
  def test_lever_graphs_h1522; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_h1522, 0.002); end
  def test_lever_graphs_i1522; assert_in_delta(0.3796610169491526, worksheet.lever_graphs_i1522, 0.002); end
  def test_lever_graphs_j1522; assert_in_delta(0.04261948527669973, worksheet.lever_graphs_j1522, 0.002); end
  def test_lever_graphs_d1523; assert_equal("2050: Level 1", worksheet.lever_graphs_d1523); end
  def test_lever_graphs_e1523; assert_in_delta(0.024221820886008705, worksheet.lever_graphs_e1523, 0.002); end
  def test_lever_graphs_f1523; assert_in_delta(0.0037182619781153717, worksheet.lever_graphs_f1523, 0.002); end
  def test_lever_graphs_g1523; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1523, 0.002); end
  def test_lever_graphs_h1523; assert_in_delta(0.6193562094975034, worksheet.lever_graphs_h1523, 0.002); end
  def test_lever_graphs_i1523; assert_in_delta(0.19866142568787845, worksheet.lever_graphs_i1523, 0.002); end
  def test_lever_graphs_j1523; assert_in_delta(0.005311802825879203, worksheet.lever_graphs_j1523, 0.002); end
  def test_lever_graphs_d1524; assert_equal("2050: Level 2", worksheet.lever_graphs_d1524); end
  def test_lever_graphs_e1524; assert_in_delta(0.03238268378593342, worksheet.lever_graphs_e1524, 0.002); end
  def test_lever_graphs_f1524; assert_in_delta(0.023860924894898307, worksheet.lever_graphs_f1524, 0.002); end
  def test_lever_graphs_g1524; assert_in_delta(0.16191341892966707, worksheet.lever_graphs_g1524, 0.002); end
  def test_lever_graphs_h1524; assert_in_delta(0.4938075218725145, worksheet.lever_graphs_h1524, 0.002); end
  def test_lever_graphs_i1524; assert_in_delta(0.27496875355073286, worksheet.lever_graphs_i1524, 0.002); end
  def test_lever_graphs_j1524; assert_in_delta(0.013066696966253843, worksheet.lever_graphs_j1524, 0.002); end
  def test_lever_graphs_d1525; assert_equal("2050: Level 3", worksheet.lever_graphs_d1525); end
  def test_lever_graphs_e1525; assert_in_delta(0.036979322877091506, worksheet.lever_graphs_e1525, 0.002); end
  def test_lever_graphs_f1525; assert_in_delta(0.02974530482992349, worksheet.lever_graphs_f1525, 0.002); end
  def test_lever_graphs_g1525; assert_in_delta(0.1728510014278969, worksheet.lever_graphs_g1525, 0.002); end
  def test_lever_graphs_h1525; assert_in_delta(0.4081204200380899, worksheet.lever_graphs_h1525, 0.002); end
  def test_lever_graphs_i1525; assert_in_delta(0.3270965131187632, worksheet.lever_graphs_i1525, 0.002); end
  def test_lever_graphs_j1525; assert_in_delta(0.02520743770823497, worksheet.lever_graphs_j1525, 0.002); end
  def test_lever_graphs_d1526; assert_equal("2050: Level 4", worksheet.lever_graphs_d1526); end
  def test_lever_graphs_e1526; assert_in_delta(0.05408328879859205, worksheet.lever_graphs_e1526, 0.002); end
  def test_lever_graphs_f1526; assert_in_delta(0.049718098389071146, worksheet.lever_graphs_f1526, 0.002); end
  def test_lever_graphs_g1526; assert_in_delta(0.22471057762431754, worksheet.lever_graphs_g1526, 0.002); end
  def test_lever_graphs_h1526; assert_in_delta(0.25364652438624186, worksheet.lever_graphs_h1526, 0.002); end
  def test_lever_graphs_i1526; assert_in_delta(0.3841349241581299, worksheet.lever_graphs_i1526, 0.002); end
  def test_lever_graphs_j1526; assert_in_delta(0.03370658664364751, worksheet.lever_graphs_j1526, 0.002); end
  def test_lever_graphs_d1510; assert_equal("Title", worksheet.lever_graphs_d1510); end
  def test_lever_graphs_e1510; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1510); end
  def test_lever_graphs_f1510; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1510); end
  def test_lever_graphs_g1510; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1510); end
  def test_lever_graphs_h1510; assert_equal("Urban passenger car", worksheet.lever_graphs_h1510); end
  def test_lever_graphs_i1510; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1510); end
  def test_lever_graphs_j1510; assert_equal("Urban passenger train", worksheet.lever_graphs_j1510); end
  def test_lever_graphs_d1511; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1511, 0.002); end
  def test_lever_graphs_e1511; assert_in_delta(0.04635097613382408, worksheet.lever_graphs_e1511, 0.002); end
  def test_lever_graphs_f1511; assert_in_delta(0.026083051554046464, worksheet.lever_graphs_f1511, 0.002); end
  def test_lever_graphs_g1511; assert_in_delta(0.061057423607414035, worksheet.lever_graphs_g1511, 0.002); end
  def test_lever_graphs_h1511; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_h1511, 0.002); end
  def test_lever_graphs_i1511; assert_in_delta(0.25597150666185114, worksheet.lever_graphs_i1511, 0.002); end
  def test_lever_graphs_j1511; assert_in_delta(0.08876810047539435, worksheet.lever_graphs_j1511, 0.002); end
  def test_lever_graphs_d1512; assert_equal("2050: Level 1", worksheet.lever_graphs_d1512); end
  def test_lever_graphs_e1512; assert_in_delta(0.026523421094867723, worksheet.lever_graphs_e1512, 0.002); end
  def test_lever_graphs_f1512; assert_in_delta(0.018446740235152366, worksheet.lever_graphs_f1512, 0.002); end
  def test_lever_graphs_g1512; assert_in_delta(0.03888772265788877, worksheet.lever_graphs_g1512, 0.002); end
  def test_lever_graphs_h1512; assert_in_delta(0.7119444609675022, worksheet.lever_graphs_h1512, 0.002); end
  def test_lever_graphs_i1512; assert_in_delta(0.1665064776992505, worksheet.lever_graphs_i1512, 0.002); end
  def test_lever_graphs_j1512; assert_in_delta(0.03769117734533847, worksheet.lever_graphs_j1512, 0.002); end
  def test_lever_graphs_d1513; assert_equal("2050: Level 2", worksheet.lever_graphs_d1513); end
  def test_lever_graphs_e1513; assert_in_delta(0.03434157116153882, worksheet.lever_graphs_e1513, 0.002); end
  def test_lever_graphs_f1513; assert_in_delta(0.023603185132698507, worksheet.lever_graphs_f1513, 0.002); end
  def test_lever_graphs_g1513; assert_in_delta(0.06898295981370371, worksheet.lever_graphs_g1513, 0.002); end
  def test_lever_graphs_h1513; assert_in_delta(0.5886974598187011, worksheet.lever_graphs_h1513, 0.002); end
  def test_lever_graphs_i1513; assert_in_delta(0.24423032237528697, worksheet.lever_graphs_i1513, 0.002); end
  def test_lever_graphs_j1513; assert_in_delta(0.04014450169807082, worksheet.lever_graphs_j1513, 0.002); end
  def test_lever_graphs_d1514; assert_equal("2050: Level 3", worksheet.lever_graphs_d1514); end
  def test_lever_graphs_e1514; assert_in_delta(0.041424283431744015, worksheet.lever_graphs_e1514, 0.002); end
  def test_lever_graphs_f1514; assert_in_delta(0.029719915259893908, worksheet.lever_graphs_f1514, 0.002); end
  def test_lever_graphs_g1514; assert_in_delta(0.11933865586984425, worksheet.lever_graphs_g1514, 0.002); end
  def test_lever_graphs_h1514; assert_in_delta(0.41925679100261354, worksheet.lever_graphs_h1514, 0.002); end
  def test_lever_graphs_i1514; assert_in_delta(0.3251978372453256, worksheet.lever_graphs_i1514, 0.002); end
  def test_lever_graphs_j1514; assert_in_delta(0.0650625171905787, worksheet.lever_graphs_j1514, 0.002); end
  def test_lever_graphs_d1515; assert_equal("2050: Level 4", worksheet.lever_graphs_d1515); end
  def test_lever_graphs_e1515; assert_in_delta(0.04979364078226359, worksheet.lever_graphs_e1515, 0.002); end
  def test_lever_graphs_f1515; assert_in_delta(0.03837022017086388, worksheet.lever_graphs_f1515, 0.002); end
  def test_lever_graphs_g1515; assert_in_delta(0.12314766608892123, worksheet.lever_graphs_g1515, 0.002); end
  def test_lever_graphs_h1515; assert_in_delta(0.3511714667205578, worksheet.lever_graphs_h1515, 0.002); end
  def test_lever_graphs_i1515; assert_in_delta(0.3545543680301203, worksheet.lever_graphs_i1515, 0.002); end
  def test_lever_graphs_j1515; assert_in_delta(0.08296263820727318, worksheet.lever_graphs_j1515, 0.002); end
  def test_lever_graphs_c1540; assert_equal("1975", worksheet.lever_graphs_c1540); end
  def test_lever_graphs_d1540; assert_equal("1980", worksheet.lever_graphs_d1540); end
  def test_lever_graphs_e1540; assert_equal("1985", worksheet.lever_graphs_e1540); end
  def test_lever_graphs_f1540; assert_equal("1990", worksheet.lever_graphs_f1540); end
  def test_lever_graphs_g1540; assert_equal("1995", worksheet.lever_graphs_g1540); end
  def test_lever_graphs_h1540; assert_equal("2000", worksheet.lever_graphs_h1540); end
  def test_lever_graphs_i1540; assert_equal("2005", worksheet.lever_graphs_i1540); end
  def test_lever_graphs_j1540; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1540, 0.002); end
  def test_lever_graphs_k1540; assert_equal("2011", worksheet.lever_graphs_k1540); end
  def test_lever_graphs_l1540; assert_equal("2015", worksheet.lever_graphs_l1540); end
  def test_lever_graphs_m1540; assert_equal("2020", worksheet.lever_graphs_m1540); end
  def test_lever_graphs_n1540; assert_equal("2025", worksheet.lever_graphs_n1540); end
  def test_lever_graphs_o1540; assert_equal("2030", worksheet.lever_graphs_o1540); end
  def test_lever_graphs_p1540; assert_equal("2035", worksheet.lever_graphs_p1540); end
  def test_lever_graphs_q1540; assert_equal("2040", worksheet.lever_graphs_q1540); end
  def test_lever_graphs_r1540; assert_equal("2045", worksheet.lever_graphs_r1540); end
  def test_lever_graphs_s1540; assert_equal("2050", worksheet.lever_graphs_s1540); end
  def test_lever_graphs_b1541; assert_equal("Historic data", worksheet.lever_graphs_b1541); end
  def test_lever_graphs_b1542; assert_in_delta(1.0, worksheet.lever_graphs_b1542, 0.002); end
  def test_lever_graphs_k1542; assert_in_epsilon(1.6, worksheet.lever_graphs_k1542, 0.002); end
  def test_lever_graphs_l1542; assert_in_epsilon(1.6, worksheet.lever_graphs_l1542, 0.002); end
  def test_lever_graphs_m1542; assert_in_epsilon(1.5771428571428572, worksheet.lever_graphs_m1542, 0.002); end
  def test_lever_graphs_n1542; assert_in_epsilon(1.5542857142857143, worksheet.lever_graphs_n1542, 0.002); end
  def test_lever_graphs_o1542; assert_in_epsilon(1.5314285714285714, worksheet.lever_graphs_o1542, 0.002); end
  def test_lever_graphs_p1542; assert_in_epsilon(1.5085714285714287, worksheet.lever_graphs_p1542, 0.002); end
  def test_lever_graphs_q1542; assert_in_epsilon(1.4857142857142858, worksheet.lever_graphs_q1542, 0.002); end
  def test_lever_graphs_r1542; assert_in_epsilon(1.4628571428571426, worksheet.lever_graphs_r1542, 0.002); end
  def test_lever_graphs_s1542; assert_in_epsilon(1.4400000000000002, worksheet.lever_graphs_s1542, 0.002); end
  def test_lever_graphs_b1543; assert_in_epsilon(2.0, worksheet.lever_graphs_b1543, 0.002); end
  def test_lever_graphs_k1543; assert_in_epsilon(1.6, worksheet.lever_graphs_k1543, 0.002); end
  def test_lever_graphs_l1543; assert_in_epsilon(1.6, worksheet.lever_graphs_l1543, 0.002); end
  def test_lever_graphs_m1543; assert_in_epsilon(1.6, worksheet.lever_graphs_m1543, 0.002); end
  def test_lever_graphs_n1543; assert_in_epsilon(1.6, worksheet.lever_graphs_n1543, 0.002); end
  def test_lever_graphs_o1543; assert_in_epsilon(1.6, worksheet.lever_graphs_o1543, 0.002); end
  def test_lever_graphs_p1543; assert_in_epsilon(1.6, worksheet.lever_graphs_p1543, 0.002); end
  def test_lever_graphs_q1543; assert_in_epsilon(1.6, worksheet.lever_graphs_q1543, 0.002); end
  def test_lever_graphs_r1543; assert_in_epsilon(1.6, worksheet.lever_graphs_r1543, 0.002); end
  def test_lever_graphs_s1543; assert_in_epsilon(1.6, worksheet.lever_graphs_s1543, 0.002); end
  def test_lever_graphs_b1544; assert_in_epsilon(3.0, worksheet.lever_graphs_b1544, 0.002); end
  def test_lever_graphs_k1544; assert_in_epsilon(1.6, worksheet.lever_graphs_k1544, 0.002); end
  def test_lever_graphs_l1544; assert_in_epsilon(1.6, worksheet.lever_graphs_l1544, 0.002); end
  def test_lever_graphs_m1544; assert_in_epsilon(1.6228571428571428, worksheet.lever_graphs_m1544, 0.002); end
  def test_lever_graphs_n1544; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_n1544, 0.002); end
  def test_lever_graphs_o1544; assert_in_epsilon(1.6685714285714284, worksheet.lever_graphs_o1544, 0.002); end
  def test_lever_graphs_p1544; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_p1544, 0.002); end
  def test_lever_graphs_q1544; assert_in_epsilon(1.7142857142857146, worksheet.lever_graphs_q1544, 0.002); end
  def test_lever_graphs_r1544; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_r1544, 0.002); end
  def test_lever_graphs_s1544; assert_in_epsilon(1.7600000000000002, worksheet.lever_graphs_s1544, 0.002); end
  def test_lever_graphs_b1545; assert_in_epsilon(4.0, worksheet.lever_graphs_b1545, 0.002); end
  def test_lever_graphs_k1545; assert_in_epsilon(1.6, worksheet.lever_graphs_k1545, 0.002); end
  def test_lever_graphs_l1545; assert_in_epsilon(1.6, worksheet.lever_graphs_l1545, 0.002); end
  def test_lever_graphs_m1545; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_m1545, 0.002); end
  def test_lever_graphs_n1545; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_n1545, 0.002); end
  def test_lever_graphs_o1545; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_o1545, 0.002); end
  def test_lever_graphs_p1545; assert_in_epsilon(1.7828571428571427, worksheet.lever_graphs_p1545, 0.002); end
  def test_lever_graphs_q1545; assert_in_epsilon(1.8285714285714285, worksheet.lever_graphs_q1545, 0.002); end
  def test_lever_graphs_r1545; assert_in_epsilon(1.874285714285714, worksheet.lever_graphs_r1545, 0.002); end
  def test_lever_graphs_s1545; assert_in_epsilon(1.92, worksheet.lever_graphs_s1545, 0.002); end
  def test_lever_graphs_c3388; assert_equal("1975", worksheet.lever_graphs_c3388); end
  def test_lever_graphs_d3388; assert_equal("1980", worksheet.lever_graphs_d3388); end
  def test_lever_graphs_e3388; assert_equal("1985", worksheet.lever_graphs_e3388); end
  def test_lever_graphs_f3388; assert_equal("1990", worksheet.lever_graphs_f3388); end
  def test_lever_graphs_g3388; assert_equal("1995", worksheet.lever_graphs_g3388); end
  def test_lever_graphs_h3388; assert_equal("2000", worksheet.lever_graphs_h3388); end
  def test_lever_graphs_i3388; assert_equal("2005", worksheet.lever_graphs_i3388); end
  def test_lever_graphs_j3388; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3388, 0.002); end
  def test_lever_graphs_k3388; assert_equal("2011", worksheet.lever_graphs_k3388); end
  def test_lever_graphs_l3388; assert_equal("2015", worksheet.lever_graphs_l3388); end
  def test_lever_graphs_m3388; assert_equal("2020", worksheet.lever_graphs_m3388); end
  def test_lever_graphs_n3388; assert_equal("2025", worksheet.lever_graphs_n3388); end
  def test_lever_graphs_o3388; assert_equal("2030", worksheet.lever_graphs_o3388); end
  def test_lever_graphs_p3388; assert_equal("2035", worksheet.lever_graphs_p3388); end
  def test_lever_graphs_q3388; assert_equal("2040", worksheet.lever_graphs_q3388); end
  def test_lever_graphs_r3388; assert_equal("2045", worksheet.lever_graphs_r3388); end
  def test_lever_graphs_s3388; assert_equal("2050", worksheet.lever_graphs_s3388); end
  def test_lever_graphs_b3389; assert_equal("Historic data", worksheet.lever_graphs_b3389); end
  def test_lever_graphs_c3389; assert_in_epsilon(48.366777087544, worksheet.lever_graphs_c3389, 0.002); end
  def test_lever_graphs_d3389; assert_in_epsilon(100.8586055269058, worksheet.lever_graphs_d3389, 0.002); end
  def test_lever_graphs_e3389; assert_in_epsilon(57.79701296868199, worksheet.lever_graphs_e3389, 0.002); end
  def test_lever_graphs_f3389; assert_in_epsilon(40.96227805628421, worksheet.lever_graphs_f3389, 0.002); end
  def test_lever_graphs_g3389; assert_in_epsilon(25.195809116543934, worksheet.lever_graphs_g3389, 0.002); end
  def test_lever_graphs_h3389; assert_in_epsilon(37.34055877514925, worksheet.lever_graphs_h3389, 0.002); end
  def test_lever_graphs_i3389; assert_in_epsilon(62.994224615593296, worksheet.lever_graphs_i3389, 0.002); end
  def test_lever_graphs_k3389; assert_in_epsilon(111.60806135788701, worksheet.lever_graphs_k3389, 0.002); end
  def test_lever_graphs_b3390; assert_in_delta(1.0, worksheet.lever_graphs_b3390, 0.002); end
  def test_lever_graphs_b3391; assert_in_epsilon(2.0, worksheet.lever_graphs_b3391, 0.002); end
  def test_lever_graphs_b3392; assert_in_epsilon(3.0, worksheet.lever_graphs_b3392, 0.002); end
  def test_lever_graphs_b3393; assert_in_epsilon(4.0, worksheet.lever_graphs_b3393, 0.002); end
  def test_lever_graphs_c1215; assert_equal("1975", worksheet.lever_graphs_c1215); end
  def test_lever_graphs_d1215; assert_equal("1980", worksheet.lever_graphs_d1215); end
  def test_lever_graphs_e1215; assert_equal("1985", worksheet.lever_graphs_e1215); end
  def test_lever_graphs_f1215; assert_equal("1990", worksheet.lever_graphs_f1215); end
  def test_lever_graphs_g1215; assert_equal("1995", worksheet.lever_graphs_g1215); end
  def test_lever_graphs_h1215; assert_equal("2000", worksheet.lever_graphs_h1215); end
  def test_lever_graphs_i1215; assert_equal("2005", worksheet.lever_graphs_i1215); end
  def test_lever_graphs_j1215; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1215, 0.002); end
  def test_lever_graphs_k1215; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1215, 0.002); end
  def test_lever_graphs_l1215; assert_equal("2015", worksheet.lever_graphs_l1215); end
  def test_lever_graphs_m1215; assert_equal("2020", worksheet.lever_graphs_m1215); end
  def test_lever_graphs_n1215; assert_equal("2025", worksheet.lever_graphs_n1215); end
  def test_lever_graphs_o1215; assert_equal("2030", worksheet.lever_graphs_o1215); end
  def test_lever_graphs_p1215; assert_equal("2035", worksheet.lever_graphs_p1215); end
  def test_lever_graphs_q1215; assert_equal("2040", worksheet.lever_graphs_q1215); end
  def test_lever_graphs_r1215; assert_equal("2045", worksheet.lever_graphs_r1215); end
  def test_lever_graphs_s1215; assert_equal("2050", worksheet.lever_graphs_s1215); end
  def test_lever_graphs_b1216; assert_equal("Historic data", worksheet.lever_graphs_b1216); end
  def test_lever_graphs_b1217; assert_in_delta(1.0, worksheet.lever_graphs_b1217, 0.002); end
  def test_lever_graphs_k1217; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1217, 0.002); end
  def test_lever_graphs_l1217; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1217, 0.002); end
  def test_lever_graphs_m1217; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m1217, 0.002); end
  def test_lever_graphs_n1217; assert_in_epsilon(12600.851505289062, worksheet.lever_graphs_n1217, 0.002); end
  def test_lever_graphs_o1217; assert_in_epsilon(12721.015350442445, worksheet.lever_graphs_o1217, 0.002); end
  def test_lever_graphs_p1217; assert_in_epsilon(12842.325098289466, worksheet.lever_graphs_p1217, 0.002); end
  def test_lever_graphs_q1217; assert_in_epsilon(12964.791676351475, worksheet.lever_graphs_q1217, 0.002); end
  def test_lever_graphs_r1217; assert_in_epsilon(13088.426116356506, worksheet.lever_graphs_r1217, 0.002); end
  def test_lever_graphs_s1217; assert_in_epsilon(13101.519778890486, worksheet.lever_graphs_s1217, 0.002); end
  def test_lever_graphs_b1218; assert_in_epsilon(2.0, worksheet.lever_graphs_b1218, 0.002); end
  def test_lever_graphs_k1218; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1218, 0.002); end
  def test_lever_graphs_l1218; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1218, 0.002); end
  def test_lever_graphs_m1218; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m1218, 0.002); end
  def test_lever_graphs_n1218; assert_in_epsilon(12420.058594095803, worksheet.lever_graphs_n1218, 0.002); end
  def test_lever_graphs_o1218; assert_in_epsilon(12538.498367556385, worksheet.lever_graphs_o1218, 0.002); end
  def test_lever_graphs_p1218; assert_in_epsilon(12658.067602672169, worksheet.lever_graphs_p1218, 0.002); end
  def test_lever_graphs_q1218; assert_in_epsilon(12778.777070179987, worksheet.lever_graphs_q1218, 0.002); end
  def test_lever_graphs_r1218; assert_in_epsilon(12651.499429280722, worksheet.lever_graphs_r1218, 0.002); end
  def test_lever_graphs_s1218; assert_in_epsilon(12525.489483856847, worksheet.lever_graphs_s1218, 0.002); end
  def test_lever_graphs_b1219; assert_in_epsilon(3.0, worksheet.lever_graphs_b1219, 0.002); end
  def test_lever_graphs_k1219; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1219, 0.002); end
  def test_lever_graphs_l1219; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1219, 0.002); end
  def test_lever_graphs_m1219; assert_in_epsilon(12180.784397392952, worksheet.lever_graphs_m1219, 0.002); end
  def test_lever_graphs_n1219; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_n1219, 0.002); end
  def test_lever_graphs_o1219; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_o1219, 0.002); end
  def test_lever_graphs_p1219; assert_in_epsilon(12150.180527616512, worksheet.lever_graphs_p1219, 0.002); end
  def test_lever_graphs_q1219; assert_in_epsilon(11969.018060318878, worksheet.lever_graphs_q1219, 0.002); end
  def test_lever_graphs_r1219; assert_in_epsilon(11731.54509713868, worksheet.lever_graphs_r1219, 0.002); end
  def test_lever_graphs_s1219; assert_in_epsilon(11441.174728177544, worksheet.lever_graphs_s1219, 0.002); end
  def test_lever_graphs_b1220; assert_in_epsilon(4.0, worksheet.lever_graphs_b1220, 0.002); end
  def test_lever_graphs_k1220; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1220, 0.002); end
  def test_lever_graphs_l1220; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l1220, 0.002); end
  def test_lever_graphs_m1220; assert_in_epsilon(12132.274764133377, worksheet.lever_graphs_m1220, 0.002); end
  def test_lever_graphs_n1220; assert_in_epsilon(12193.057582085099, worksheet.lever_graphs_n1220, 0.002); end
  def test_lever_graphs_o1220; assert_in_epsilon(12132.214102880871, worksheet.lever_graphs_o1220, 0.002); end
  def test_lever_graphs_p1220; assert_in_epsilon(11951.319519819708, worksheet.lever_graphs_p1220, 0.002); end
  def test_lever_graphs_q1220; assert_in_epsilon(11714.197706987443, worksheet.lever_graphs_q1220, 0.002); end
  def test_lever_graphs_r1220; assert_in_epsilon(11424.256707562632, worksheet.lever_graphs_r1220, 0.002); end
  def test_lever_graphs_s1220; assert_in_epsilon(11085.617136296338, worksheet.lever_graphs_s1220, 0.002); end
  def test_lever_graphs_c1235; assert_equal("1975", worksheet.lever_graphs_c1235); end
  def test_lever_graphs_d1235; assert_equal("1980", worksheet.lever_graphs_d1235); end
  def test_lever_graphs_e1235; assert_equal("1985", worksheet.lever_graphs_e1235); end
  def test_lever_graphs_f1235; assert_equal("1990", worksheet.lever_graphs_f1235); end
  def test_lever_graphs_g1235; assert_equal("1995", worksheet.lever_graphs_g1235); end
  def test_lever_graphs_h1235; assert_equal("2000", worksheet.lever_graphs_h1235); end
  def test_lever_graphs_i1235; assert_equal("2005", worksheet.lever_graphs_i1235); end
  def test_lever_graphs_j1235; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1235, 0.002); end
  def test_lever_graphs_k1235; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1235, 0.002); end
  def test_lever_graphs_l1235; assert_equal("2015", worksheet.lever_graphs_l1235); end
  def test_lever_graphs_m1235; assert_equal("2020", worksheet.lever_graphs_m1235); end
  def test_lever_graphs_n1235; assert_equal("2025", worksheet.lever_graphs_n1235); end
  def test_lever_graphs_o1235; assert_equal("2030", worksheet.lever_graphs_o1235); end
  def test_lever_graphs_p1235; assert_equal("2035", worksheet.lever_graphs_p1235); end
  def test_lever_graphs_q1235; assert_equal("2040", worksheet.lever_graphs_q1235); end
  def test_lever_graphs_r1235; assert_equal("2045", worksheet.lever_graphs_r1235); end
  def test_lever_graphs_s1235; assert_equal("2050", worksheet.lever_graphs_s1235); end
  def test_lever_graphs_b1236; assert_equal("Historic data", worksheet.lever_graphs_b1236); end
  def test_lever_graphs_b1237; assert_in_delta(1.0, worksheet.lever_graphs_b1237, 0.002); end
  def test_lever_graphs_k1237; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1237, 0.002); end
  def test_lever_graphs_l1237; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1237, 0.002); end
  def test_lever_graphs_m1237; assert_in_epsilon(11767.503863833266, worksheet.lever_graphs_m1237, 0.002); end
  def test_lever_graphs_n1237; assert_in_epsilon(12367.764825479344, worksheet.lever_graphs_n1237, 0.002); end
  def test_lever_graphs_o1237; assert_in_epsilon(12838.56524661241, worksheet.lever_graphs_o1237, 0.002); end
  def test_lever_graphs_p1237; assert_in_epsilon(13162.755107456558, worksheet.lever_graphs_p1237, 0.002); end
  def test_lever_graphs_q1237; assert_in_epsilon(13328.114277746601, worksheet.lever_graphs_q1237, 0.002); end
  def test_lever_graphs_r1237; assert_in_epsilon(13495.550798483095, worksheet.lever_graphs_r1237, 0.002); end
  def test_lever_graphs_s1237; assert_in_epsilon(13665.090766706016, worksheet.lever_graphs_s1237, 0.002); end
  def test_lever_graphs_b1238; assert_in_epsilon(2.0, worksheet.lever_graphs_b1238, 0.002); end
  def test_lever_graphs_k1238; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1238, 0.002); end
  def test_lever_graphs_l1238; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1238, 0.002); end
  def test_lever_graphs_m1238; assert_in_epsilon(11204.57102372179, worksheet.lever_graphs_m1238, 0.002); end
  def test_lever_graphs_n1238; assert_in_epsilon(11776.116752990845, worksheet.lever_graphs_n1238, 0.002); end
  def test_lever_graphs_o1238; assert_in_epsilon(12224.395063975415, worksheet.lever_graphs_o1238, 0.002); end
  def test_lever_graphs_p1238; assert_in_epsilon(12533.07635807405, worksheet.lever_graphs_p1238, 0.002); end
  def test_lever_graphs_q1238; assert_in_epsilon(12690.525090564624, worksheet.lever_graphs_q1238, 0.002); end
  def test_lever_graphs_r1238; assert_in_epsilon(12754.104748237061, worksheet.lever_graphs_r1238, 0.002); end
  def test_lever_graphs_s1238; assert_in_epsilon(12818.002940630551, worksheet.lever_graphs_s1238, 0.002); end
  def test_lever_graphs_b1239; assert_in_epsilon(3.0, worksheet.lever_graphs_b1239, 0.002); end
  def test_lever_graphs_k1239; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1239, 0.002); end
  def test_lever_graphs_l1239; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1239, 0.002); end
  def test_lever_graphs_m1239; assert_in_epsilon(10931.30196914609, worksheet.lever_graphs_m1239, 0.002); end
  def test_lever_graphs_n1239; assert_in_epsilon(11347.420939972917, worksheet.lever_graphs_n1239, 0.002); end
  def test_lever_graphs_o1239; assert_in_epsilon(11691.95322375925, worksheet.lever_graphs_o1239, 0.002); end
  def test_lever_graphs_p1239; assert_in_epsilon(11868.387959471223, worksheet.lever_graphs_p1239, 0.002); end
  def test_lever_graphs_q1239; assert_in_epsilon(11987.547525005202, worksheet.lever_graphs_q1239, 0.002); end
  def test_lever_graphs_r1239; assert_in_epsilon(12047.605258040896, worksheet.lever_graphs_r1239, 0.002); end
  def test_lever_graphs_s1239; assert_in_epsilon(12077.754405262413, worksheet.lever_graphs_s1239, 0.002); end
  def test_lever_graphs_b1240; assert_in_epsilon(4.0, worksheet.lever_graphs_b1240, 0.002); end
  def test_lever_graphs_k1240; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1240, 0.002); end
  def test_lever_graphs_l1240; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l1240, 0.002); end
  def test_lever_graphs_m1240; assert_in_epsilon(10796.681667214552, worksheet.lever_graphs_m1240, 0.002); end
  def test_lever_graphs_n1240; assert_in_epsilon(11069.311408937165, worksheet.lever_graphs_n1240, 0.002); end
  def test_lever_graphs_o1240; assert_in_epsilon(11264.385103519684, worksheet.lever_graphs_o1240, 0.002); end
  def test_lever_graphs_p1240; assert_in_epsilon(11405.895703643995, worksheet.lever_graphs_p1240, 0.002); end
  def test_lever_graphs_q1240; assert_in_epsilon(11463.039355235242, worksheet.lever_graphs_q1240, 0.002); end
  def test_lever_graphs_r1240; assert_in_epsilon(11474.506980723352, worksheet.lever_graphs_r1240, 0.002); end
  def test_lever_graphs_s1240; assert_in_epsilon(11485.98607842492, worksheet.lever_graphs_s1240, 0.002); end
  def test_lever_graphs_c3593; assert_equal("1975", worksheet.lever_graphs_c3593); end
  def test_lever_graphs_d3593; assert_equal("1980", worksheet.lever_graphs_d3593); end
  def test_lever_graphs_e3593; assert_equal("1985", worksheet.lever_graphs_e3593); end
  def test_lever_graphs_f3593; assert_equal("1990", worksheet.lever_graphs_f3593); end
  def test_lever_graphs_g3593; assert_equal("1995", worksheet.lever_graphs_g3593); end
  def test_lever_graphs_h3593; assert_equal("2000", worksheet.lever_graphs_h3593); end
  def test_lever_graphs_i3593; assert_equal("2005", worksheet.lever_graphs_i3593); end
  def test_lever_graphs_j3593; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3593, 0.002); end
  def test_lever_graphs_k3593; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3593, 0.002); end
  def test_lever_graphs_l3593; assert_equal("2015", worksheet.lever_graphs_l3593); end
  def test_lever_graphs_m3593; assert_equal("2020", worksheet.lever_graphs_m3593); end
  def test_lever_graphs_n3593; assert_equal("2025", worksheet.lever_graphs_n3593); end
  def test_lever_graphs_o3593; assert_equal("2030", worksheet.lever_graphs_o3593); end
  def test_lever_graphs_p3593; assert_equal("2035", worksheet.lever_graphs_p3593); end
  def test_lever_graphs_q3593; assert_equal("2040", worksheet.lever_graphs_q3593); end
  def test_lever_graphs_r3593; assert_equal("2045", worksheet.lever_graphs_r3593); end
  def test_lever_graphs_s3593; assert_equal("2050", worksheet.lever_graphs_s3593); end
  def test_lever_graphs_b3594; assert_equal("Historic data", worksheet.lever_graphs_b3594); end
  def test_lever_graphs_b3595; assert_in_delta(1.0, worksheet.lever_graphs_b3595, 0.002); end
  def test_lever_graphs_k3595; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3595, 0.002); end
  def test_lever_graphs_l3595; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3595, 0.002); end
  def test_lever_graphs_m3595; assert_in_epsilon(971.971078424184, worksheet.lever_graphs_m3595, 0.002); end
  def test_lever_graphs_n3595; assert_in_epsilon(1120.240111020011, worksheet.lever_graphs_n3595, 0.002); end
  def test_lever_graphs_o3595; assert_in_epsilon(1301.151905754007, worksheet.lever_graphs_o3595, 0.002); end
  def test_lever_graphs_p3595; assert_in_epsilon(1523.6401820699998, worksheet.lever_graphs_p3595, 0.002); end
  def test_lever_graphs_q3595; assert_in_epsilon(1799.2824634043834, worksheet.lever_graphs_q3595, 0.002); end
  def test_lever_graphs_r3595; assert_in_epsilon(2143.099060207938, worksheet.lever_graphs_r3595, 0.002); end
  def test_lever_graphs_s3595; assert_in_epsilon(2574.5945547161623, worksheet.lever_graphs_s3595, 0.002); end
  def test_lever_graphs_b3596; assert_in_epsilon(2.0, worksheet.lever_graphs_b3596, 0.002); end
  def test_lever_graphs_k3596; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3596, 0.002); end
  def test_lever_graphs_l3596; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3596, 0.002); end
  def test_lever_graphs_m3596; assert_in_epsilon(935.6219533756032, worksheet.lever_graphs_m3596, 0.002); end
  def test_lever_graphs_n3596; assert_in_epsilon(1036.0481093795418, worksheet.lever_graphs_n3596, 0.002); end
  def test_lever_graphs_o3596; assert_in_epsilon(1153.7861689802146, worksheet.lever_graphs_o3596, 0.002); end
  def test_lever_graphs_p3596; assert_in_epsilon(1292.6114027205344, worksheet.lever_graphs_p3596, 0.002); end
  def test_lever_graphs_q3596; assert_in_epsilon(1457.174809638739, worksheet.lever_graphs_q3596, 0.002); end
  def test_lever_graphs_r3596; assert_in_epsilon(1653.2082960272533, worksheet.lever_graphs_r3596, 0.002); end
  def test_lever_graphs_s3596; assert_in_epsilon(1887.777917697634, worksheet.lever_graphs_s3596, 0.002); end
  def test_lever_graphs_b3597; assert_in_epsilon(3.0, worksheet.lever_graphs_b3597, 0.002); end
  def test_lever_graphs_k3597; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3597, 0.002); end
  def test_lever_graphs_l3597; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3597, 0.002); end
  def test_lever_graphs_m3597; assert_in_epsilon(889.4511858401264, worksheet.lever_graphs_m3597, 0.002); end
  def test_lever_graphs_n3597; assert_in_epsilon(934.6917775437978, worksheet.lever_graphs_n3597, 0.002); end
  def test_lever_graphs_o3597; assert_in_epsilon(985.9791610424517, worksheet.lever_graphs_o3597, 0.002); end
  def test_lever_graphs_p3597; assert_in_epsilon(1044.2543150901697, worksheet.lever_graphs_p3597, 0.002); end
  def test_lever_graphs_q3597; assert_in_epsilon(1110.6028501805924, worksheet.lever_graphs_q3597, 0.002); end
  def test_lever_graphs_r3597; assert_in_epsilon(1186.2770152178489, worksheet.lever_graphs_r3597, 0.002); end
  def test_lever_graphs_s3597; assert_in_epsilon(1272.721039920418, worksheet.lever_graphs_s3597, 0.002); end
  def test_lever_graphs_b3598; assert_in_epsilon(4.0, worksheet.lever_graphs_b3598, 0.002); end
  def test_lever_graphs_k3598; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3598, 0.002); end
  def test_lever_graphs_l3598; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3598, 0.002); end
  def test_lever_graphs_m3598; assert_in_epsilon(830.2361013331315, worksheet.lever_graphs_m3598, 0.002); end
  def test_lever_graphs_n3598; assert_in_epsilon(814.4986396777115, worksheet.lever_graphs_n3598, 0.002); end
  def test_lever_graphs_o3598; assert_in_epsilon(802.2314807859979, worksheet.lever_graphs_o3598, 0.002); end
  def test_lever_graphs_p3598; assert_in_epsilon(793.450111109077, worksheet.lever_graphs_p3598, 0.002); end
  def test_lever_graphs_q3598; assert_in_epsilon(788.1839442782499, worksheet.lever_graphs_q3598, 0.002); end
  def test_lever_graphs_r3598; assert_in_epsilon(786.4767582649091, worksheet.lever_graphs_r3598, 0.002); end
  def test_lever_graphs_s3598; assert_in_epsilon(788.3871957697046, worksheet.lever_graphs_s3598, 0.002); end
  def test_lever_graphs_b1265; assert_equal("Level", worksheet.lever_graphs_b1265); end
  def test_lever_graphs_c1265; assert_equal("1975", worksheet.lever_graphs_c1265); end
  def test_lever_graphs_d1265; assert_equal("1980", worksheet.lever_graphs_d1265); end
  def test_lever_graphs_e1265; assert_equal("1985", worksheet.lever_graphs_e1265); end
  def test_lever_graphs_f1265; assert_equal("1990", worksheet.lever_graphs_f1265); end
  def test_lever_graphs_g1265; assert_equal("1995", worksheet.lever_graphs_g1265); end
  def test_lever_graphs_h1265; assert_equal("2000", worksheet.lever_graphs_h1265); end
  def test_lever_graphs_i1265; assert_equal("2005", worksheet.lever_graphs_i1265); end
  def test_lever_graphs_j1265; assert_equal("2010", worksheet.lever_graphs_j1265); end
  def test_lever_graphs_k1265; assert_equal("2011", worksheet.lever_graphs_k1265); end
  def test_lever_graphs_l1265; assert_equal("2015", worksheet.lever_graphs_l1265); end
  def test_lever_graphs_m1265; assert_equal("2020", worksheet.lever_graphs_m1265); end
  def test_lever_graphs_n1265; assert_equal("2025", worksheet.lever_graphs_n1265); end
  def test_lever_graphs_o1265; assert_equal("2030", worksheet.lever_graphs_o1265); end
  def test_lever_graphs_p1265; assert_equal("2035", worksheet.lever_graphs_p1265); end
  def test_lever_graphs_q1265; assert_equal("2040", worksheet.lever_graphs_q1265); end
  def test_lever_graphs_r1265; assert_equal("2045", worksheet.lever_graphs_r1265); end
  def test_lever_graphs_s1265; assert_equal("2050", worksheet.lever_graphs_s1265); end
  def test_lever_graphs_b1266; assert_equal("Historic data", worksheet.lever_graphs_b1266); end
  def test_lever_graphs_b1267; assert_in_delta(1.0, worksheet.lever_graphs_b1267, 0.002); end
  def test_lever_graphs_k1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1267, 0.002); end
  def test_lever_graphs_l1267; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1267, 0.002); end
  def test_lever_graphs_m1267; assert_in_epsilon(3850.7126100605683, worksheet.lever_graphs_m1267, 0.002); end
  def test_lever_graphs_n1267; assert_in_epsilon(4255.859523652149, worksheet.lever_graphs_n1267, 0.002); end
  def test_lever_graphs_o1267; assert_in_epsilon(4703.63335808013, worksheet.lever_graphs_o1267, 0.002); end
  def test_lever_graphs_p1267; assert_in_epsilon(5198.519040463629, worksheet.lever_graphs_p1267, 0.002); end
  def test_lever_graphs_q1267; assert_in_epsilon(5745.473372757406, worksheet.lever_graphs_q1267, 0.002); end
  def test_lever_graphs_r1267; assert_in_epsilon(6349.97467935028, worksheet.lever_graphs_r1267, 0.002); end
  def test_lever_graphs_s1267; assert_in_epsilon(7018.077678260653, worksheet.lever_graphs_s1267, 0.002); end
  def test_lever_graphs_b1268; assert_in_epsilon(2.0, worksheet.lever_graphs_b1268, 0.002); end
  def test_lever_graphs_k1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1268, 0.002); end
  def test_lever_graphs_l1268; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1268, 0.002); end
  def test_lever_graphs_m1268; assert_in_epsilon(3735.420476881267, worksheet.lever_graphs_m1268, 0.002); end
  def test_lever_graphs_n1268; assert_in_epsilon(4004.829768603747, worksheet.lever_graphs_n1268, 0.002); end
  def test_lever_graphs_o1268; assert_in_epsilon(4293.6696349872645, worksheet.lever_graphs_o1268, 0.002); end
  def test_lever_graphs_p1268; assert_in_epsilon(4603.341465082821, worksheet.lever_graphs_p1268, 0.002); end
  def test_lever_graphs_q1268; assert_in_epsilon(4935.347720159124, worksheet.lever_graphs_q1268, 0.002); end
  def test_lever_graphs_r1268; assert_in_epsilon(5291.299223322255, worksheet.lever_graphs_r1268, 0.002); end
  def test_lever_graphs_s1268; assert_in_epsilon(5672.922974883723, worksheet.lever_graphs_s1268, 0.002); end
  def test_lever_graphs_b1269; assert_in_epsilon(3.0, worksheet.lever_graphs_b1269, 0.002); end
  def test_lever_graphs_k1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1269, 0.002); end
  def test_lever_graphs_l1269; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1269, 0.002); end
  def test_lever_graphs_m1269; assert_in_epsilon(3580.4299416660083, worksheet.lever_graphs_m1269, 0.002); end
  def test_lever_graphs_n1269; assert_in_epsilon(3679.3866707142247, worksheet.lever_graphs_n1269, 0.002); end
  def test_lever_graphs_o1269; assert_in_epsilon(3781.078388125142, worksheet.lever_graphs_o1269, 0.002); end
  def test_lever_graphs_p1269; assert_in_epsilon(3885.5806841230533, worksheet.lever_graphs_p1269, 0.002); end
  def test_lever_graphs_q1269; assert_in_epsilon(3992.9712381118948, worksheet.lever_graphs_q1269, 0.002); end
  def test_lever_graphs_r1269; assert_in_epsilon(4103.329876416461, worksheet.lever_graphs_r1269, 0.002); end
  def test_lever_graphs_s1269; assert_in_epsilon(4216.73863161949, worksheet.lever_graphs_s1269, 0.002); end
  def test_lever_graphs_b1270; assert_in_epsilon(4.0, worksheet.lever_graphs_b1270, 0.002); end
  def test_lever_graphs_k1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1270, 0.002); end
  def test_lever_graphs_l1270; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l1270, 0.002); end
  def test_lever_graphs_m1270; assert_in_epsilon(3339.573235999637, worksheet.lever_graphs_m1270, 0.002); end
  def test_lever_graphs_n1270; assert_in_epsilon(3201.009874466012, worksheet.lever_graphs_n1270, 0.002); end
  def test_lever_graphs_o1270; assert_in_epsilon(3068.1956921845535, worksheet.lever_graphs_o1270, 0.002); end
  def test_lever_graphs_p1270; assert_in_epsilon(2940.8921480163353, worksheet.lever_graphs_p1270, 0.002); end
  def test_lever_graphs_q1270; assert_in_epsilon(2818.870598213428, worksheet.lever_graphs_q1270, 0.002); end
  def test_lever_graphs_r1270; assert_in_epsilon(2701.9118857629023, worksheet.lever_graphs_r1270, 0.002); end
  def test_lever_graphs_s1270; assert_in_epsilon(2589.8059467695034, worksheet.lever_graphs_s1270, 0.002); end
  def test_lever_graphs_c3583; assert_equal("1975", worksheet.lever_graphs_c3583); end
  def test_lever_graphs_d3583; assert_equal("1980", worksheet.lever_graphs_d3583); end
  def test_lever_graphs_e3583; assert_equal("1985", worksheet.lever_graphs_e3583); end
  def test_lever_graphs_f3583; assert_equal("1990", worksheet.lever_graphs_f3583); end
  def test_lever_graphs_g3583; assert_equal("1995", worksheet.lever_graphs_g3583); end
  def test_lever_graphs_h3583; assert_equal("2000", worksheet.lever_graphs_h3583); end
  def test_lever_graphs_i3583; assert_equal("2005", worksheet.lever_graphs_i3583); end
  def test_lever_graphs_j3583; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3583, 0.002); end
  def test_lever_graphs_k3583; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3583, 0.002); end
  def test_lever_graphs_l3583; assert_equal("2015", worksheet.lever_graphs_l3583); end
  def test_lever_graphs_m3583; assert_equal("2020", worksheet.lever_graphs_m3583); end
  def test_lever_graphs_n3583; assert_equal("2025", worksheet.lever_graphs_n3583); end
  def test_lever_graphs_o3583; assert_equal("2030", worksheet.lever_graphs_o3583); end
  def test_lever_graphs_p3583; assert_equal("2035", worksheet.lever_graphs_p3583); end
  def test_lever_graphs_q3583; assert_equal("2040", worksheet.lever_graphs_q3583); end
  def test_lever_graphs_r3583; assert_equal("2045", worksheet.lever_graphs_r3583); end
  def test_lever_graphs_s3583; assert_equal("2050", worksheet.lever_graphs_s3583); end
  def test_lever_graphs_b3584; assert_equal("Historic data", worksheet.lever_graphs_b3584); end
  def test_lever_graphs_b3585; assert_in_delta(1.0, worksheet.lever_graphs_b3585, 0.002); end
  def test_lever_graphs_k3585; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3585, 0.002); end
  def test_lever_graphs_l3585; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3585, 0.002); end
  def test_lever_graphs_m3585; assert_in_epsilon(6731.433122965088, worksheet.lever_graphs_m3585, 0.002); end
  def test_lever_graphs_n3585; assert_in_epsilon(7318.53503461338, worksheet.lever_graphs_n3585, 0.002); end
  def test_lever_graphs_o3585; assert_in_epsilon(7971.936700748705, worksheet.lever_graphs_o3585, 0.002); end
  def test_lever_graphs_p3585; assert_in_epsilon(8618.835299829303, worksheet.lever_graphs_p3585, 0.002); end
  def test_lever_graphs_q3585; assert_in_epsilon(9330.666145830264, worksheet.lever_graphs_q3585, 0.002); end
  def test_lever_graphs_r3585; assert_in_epsilon(10071.038455242127, worksheet.lever_graphs_r3585, 0.002); end
  def test_lever_graphs_s3585; assert_in_epsilon(10892.240488440504, worksheet.lever_graphs_s3585, 0.002); end
  def test_lever_graphs_b3586; assert_in_epsilon(2.0, worksheet.lever_graphs_b3586, 0.002); end
  def test_lever_graphs_k3586; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3586, 0.002); end
  def test_lever_graphs_l3586; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3586, 0.002); end
  def test_lever_graphs_m3586; assert_in_epsilon(6713.516117779423, worksheet.lever_graphs_m3586, 0.002); end
  def test_lever_graphs_n3586; assert_in_epsilon(7218.278064586157, worksheet.lever_graphs_n3586, 0.002); end
  def test_lever_graphs_o3586; assert_in_epsilon(7774.584638373032, worksheet.lever_graphs_o3586, 0.002); end
  def test_lever_graphs_p3586; assert_in_epsilon(8232.523241430052, worksheet.lever_graphs_p3586, 0.002); end
  def test_lever_graphs_q3586; assert_in_epsilon(8676.29903308971, worksheet.lever_graphs_q3586, 0.002); end
  def test_lever_graphs_r3586; assert_in_epsilon(9159.006798871516, worksheet.lever_graphs_r3586, 0.002); end
  def test_lever_graphs_s3586; assert_in_epsilon(9683.895557580525, worksheet.lever_graphs_s3586, 0.002); end
  def test_lever_graphs_b3587; assert_in_epsilon(3.0, worksheet.lever_graphs_b3587, 0.002); end
  def test_lever_graphs_k3587; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3587, 0.002); end
  def test_lever_graphs_l3587; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3587, 0.002); end
  def test_lever_graphs_m3587; assert_in_epsilon(6574.96033489065, worksheet.lever_graphs_m3587, 0.002); end
  def test_lever_graphs_n3587; assert_in_epsilon(6919.457060888556, worksheet.lever_graphs_n3587, 0.002); end
  def test_lever_graphs_o3587; assert_in_epsilon(7267.6284502438675, worksheet.lever_graphs_o3587, 0.002); end
  def test_lever_graphs_p3587; assert_in_epsilon(7646.597479102077, worksheet.lever_graphs_p3587, 0.002); end
  def test_lever_graphs_q3587; assert_in_epsilon(8050.090439025464, worksheet.lever_graphs_q3587, 0.002); end
  def test_lever_graphs_r3587; assert_in_epsilon(8312.131759349428, worksheet.lever_graphs_r3587, 0.002); end
  def test_lever_graphs_s3587; assert_in_epsilon(8580.693587165293, worksheet.lever_graphs_s3587, 0.002); end
  def test_lever_graphs_b3588; assert_in_epsilon(4.0, worksheet.lever_graphs_b3588, 0.002); end
  def test_lever_graphs_k3588; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3588, 0.002); end
  def test_lever_graphs_l3588; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3588, 0.002); end
  def test_lever_graphs_m3588; assert_in_epsilon(6560.154297368244, worksheet.lever_graphs_m3588, 0.002); end
  def test_lever_graphs_n3588; assert_in_epsilon(6857.283773289915, worksheet.lever_graphs_n3588, 0.002); end
  def test_lever_graphs_o3588; assert_in_epsilon(7170.9276449112795, worksheet.lever_graphs_o3588, 0.002); end
  def test_lever_graphs_p3588; assert_in_epsilon(7518.252575058235, worksheet.lever_graphs_p3588, 0.002); end
  def test_lever_graphs_q3588; assert_in_epsilon(7748.701826664657, worksheet.lever_graphs_q3588, 0.002); end
  def test_lever_graphs_r3588; assert_in_epsilon(7839.1869271478745, worksheet.lever_graphs_r3588, 0.002); end
  def test_lever_graphs_s3588; assert_in_epsilon(7935.8040562447195, worksheet.lever_graphs_s3588, 0.002); end
  def test_lever_graphs_c1225; assert_equal("1975", worksheet.lever_graphs_c1225); end
  def test_lever_graphs_d1225; assert_equal("1980", worksheet.lever_graphs_d1225); end
  def test_lever_graphs_e1225; assert_equal("1985", worksheet.lever_graphs_e1225); end
  def test_lever_graphs_f1225; assert_equal("1990", worksheet.lever_graphs_f1225); end
  def test_lever_graphs_g1225; assert_equal("1995", worksheet.lever_graphs_g1225); end
  def test_lever_graphs_h1225; assert_equal("2000", worksheet.lever_graphs_h1225); end
  def test_lever_graphs_i1225; assert_equal("2005", worksheet.lever_graphs_i1225); end
  def test_lever_graphs_j1225; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1225, 0.002); end
  def test_lever_graphs_k1225; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1225, 0.002); end
  def test_lever_graphs_l1225; assert_equal("2015", worksheet.lever_graphs_l1225); end
  def test_lever_graphs_m1225; assert_equal("2020", worksheet.lever_graphs_m1225); end
  def test_lever_graphs_n1225; assert_equal("2025", worksheet.lever_graphs_n1225); end
  def test_lever_graphs_o1225; assert_equal("2030", worksheet.lever_graphs_o1225); end
  def test_lever_graphs_p1225; assert_equal("2035", worksheet.lever_graphs_p1225); end
  def test_lever_graphs_q1225; assert_equal("2040", worksheet.lever_graphs_q1225); end
  def test_lever_graphs_r1225; assert_equal("2045", worksheet.lever_graphs_r1225); end
  def test_lever_graphs_s1225; assert_equal("2050", worksheet.lever_graphs_s1225); end
  def test_lever_graphs_b1226; assert_equal("Historic data", worksheet.lever_graphs_b1226); end
  def test_lever_graphs_b1227; assert_in_delta(1.0, worksheet.lever_graphs_b1227, 0.002); end
  def test_lever_graphs_k1227; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1227, 0.002); end
  def test_lever_graphs_l1227; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1227, 0.002); end
  def test_lever_graphs_m1227; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_m1227, 0.002); end
  def test_lever_graphs_n1227; assert_in_epsilon(10396.742824235202, worksheet.lever_graphs_n1227, 0.002); end
  def test_lever_graphs_o1227; assert_in_epsilon(10792.512873967888, worksheet.lever_graphs_o1227, 0.002); end
  def test_lever_graphs_p1227; assert_in_epsilon(11203.348597144019, worksheet.lever_graphs_p1227, 0.002); end
  def test_lever_graphs_q1227; assert_in_epsilon(11486.247188453117, worksheet.lever_graphs_q1227, 0.002); end
  def test_lever_graphs_r1227; assert_in_epsilon(11776.28932370095, worksheet.lever_graphs_r1227, 0.002); end
  def test_lever_graphs_s1227; assert_in_epsilon(11894.524211556534, worksheet.lever_graphs_s1227, 0.002); end
  def test_lever_graphs_b1228; assert_in_epsilon(2.0, worksheet.lever_graphs_b1228, 0.002); end
  def test_lever_graphs_k1228; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1228, 0.002); end
  def test_lever_graphs_l1228; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1228, 0.002); end
  def test_lever_graphs_m1228; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_m1228, 0.002); end
  def test_lever_graphs_n1228; assert_in_epsilon(10167.63653197357, worksheet.lever_graphs_n1228, 0.002); end
  def test_lever_graphs_o1228; assert_in_epsilon(10554.685253284908, worksheet.lever_graphs_o1228, 0.002); end
  def test_lever_graphs_p1228; assert_in_epsilon(10821.204282303284, worksheet.lever_graphs_p1228, 0.002); end
  def test_lever_graphs_q1228; assert_in_epsilon(11094.453250786866, worksheet.lever_graphs_q1228, 0.002); end
  def test_lever_graphs_r1228; assert_in_epsilon(11205.842449868938, worksheet.lever_graphs_r1228, 0.002); end
  def test_lever_graphs_s1228; assert_in_epsilon(11217.052775552344, worksheet.lever_graphs_s1228, 0.002); end
  def test_lever_graphs_b1229; assert_in_epsilon(3.0, worksheet.lever_graphs_b1229, 0.002); end
  def test_lever_graphs_k1229; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1229, 0.002); end
  def test_lever_graphs_l1229; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1229, 0.002); end
  def test_lever_graphs_m1229; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_m1229, 0.002); end
  def test_lever_graphs_n1229; assert_in_epsilon(10032.93015155032, worksheet.lever_graphs_n1229, 0.002); end
  def test_lever_graphs_o1229; assert_in_epsilon(10235.200457333296, worksheet.lever_graphs_o1229, 0.002); end
  def test_lever_graphs_p1229; assert_in_epsilon(10441.548662192965, worksheet.lever_graphs_p1229, 0.002); end
  def test_lever_graphs_q1229; assert_in_epsilon(10546.382646920933, worksheet.lever_graphs_q1229, 0.002); end
  def test_lever_graphs_r1229; assert_in_epsilon(10652.26917325068, worksheet.lever_graphs_r1229, 0.002); end
  def test_lever_graphs_s1229; assert_in_epsilon(10662.925704183865, worksheet.lever_graphs_s1229, 0.002); end
  def test_lever_graphs_b1230; assert_in_epsilon(4.0, worksheet.lever_graphs_b1230, 0.002); end
  def test_lever_graphs_k1230; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1230, 0.002); end
  def test_lever_graphs_l1230; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l1230, 0.002); end
  def test_lever_graphs_m1230; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_m1230, 0.002); end
  def test_lever_graphs_n1230; assert_in_epsilon(9943.563766289984, worksheet.lever_graphs_n1230, 0.002); end
  def test_lever_graphs_o1230; assert_in_epsilon(10144.032388437145, worksheet.lever_graphs_o1230, 0.002); end
  def test_lever_graphs_p1230; assert_in_epsilon(10245.879285951492, worksheet.lever_graphs_p1230, 0.002); end
  def test_lever_graphs_q1230; assert_in_epsilon(10297.211243684134, worksheet.lever_graphs_q1230, 0.002); end
  def test_lever_graphs_r1230; assert_in_epsilon(10322.980027696185, worksheet.lever_graphs_r1230, 0.002); end
  def test_lever_graphs_s1230; assert_in_epsilon(10333.307137741813, worksheet.lever_graphs_s1230, 0.002); end
  def test_lever_graphs_c3573; assert_equal("1975", worksheet.lever_graphs_c3573); end
  def test_lever_graphs_d3573; assert_equal("1980", worksheet.lever_graphs_d3573); end
  def test_lever_graphs_e3573; assert_equal("1985", worksheet.lever_graphs_e3573); end
  def test_lever_graphs_f3573; assert_equal("1990", worksheet.lever_graphs_f3573); end
  def test_lever_graphs_g3573; assert_equal("1995", worksheet.lever_graphs_g3573); end
  def test_lever_graphs_h3573; assert_equal("2000", worksheet.lever_graphs_h3573); end
  def test_lever_graphs_i3573; assert_equal("2005", worksheet.lever_graphs_i3573); end
  def test_lever_graphs_j3573; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3573, 0.002); end
  def test_lever_graphs_k3573; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3573, 0.002); end
  def test_lever_graphs_l3573; assert_equal("2015", worksheet.lever_graphs_l3573); end
  def test_lever_graphs_m3573; assert_equal("2020", worksheet.lever_graphs_m3573); end
  def test_lever_graphs_n3573; assert_equal("2025", worksheet.lever_graphs_n3573); end
  def test_lever_graphs_o3573; assert_equal("2030", worksheet.lever_graphs_o3573); end
  def test_lever_graphs_p3573; assert_equal("2035", worksheet.lever_graphs_p3573); end
  def test_lever_graphs_q3573; assert_equal("2040", worksheet.lever_graphs_q3573); end
  def test_lever_graphs_r3573; assert_equal("2045", worksheet.lever_graphs_r3573); end
  def test_lever_graphs_s3573; assert_equal("2050", worksheet.lever_graphs_s3573); end
  def test_lever_graphs_b3574; assert_equal("Historic data", worksheet.lever_graphs_b3574); end
  def test_lever_graphs_b3575; assert_in_delta(1.0, worksheet.lever_graphs_b3575, 0.002); end
  def test_lever_graphs_k3575; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3575, 0.002); end
  def test_lever_graphs_l3575; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3575, 0.002); end
  def test_lever_graphs_m3575; assert_in_epsilon(11270.80216501231, worksheet.lever_graphs_m3575, 0.002); end
  def test_lever_graphs_n3575; assert_in_epsilon(11859.577718427718, worksheet.lever_graphs_n3575, 0.002); end
  def test_lever_graphs_o3575; assert_in_epsilon(12294.142033584072, worksheet.lever_graphs_o3575, 0.002); end
  def test_lever_graphs_p3575; assert_in_epsilon(12640.149743377651, worksheet.lever_graphs_p3575, 0.002); end
  def test_lever_graphs_q3575; assert_in_epsilon(12850.008246738349, worksheet.lever_graphs_q3575, 0.002); end
  def test_lever_graphs_r3575; assert_in_epsilon(13060.574958158688, worksheet.lever_graphs_r3575, 0.002); end
  def test_lever_graphs_s3575; assert_in_epsilon(13221.141651050195, worksheet.lever_graphs_s3575, 0.002); end
  def test_lever_graphs_b3576; assert_in_epsilon(2.0, worksheet.lever_graphs_b3576, 0.002); end
  def test_lever_graphs_k3576; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3576, 0.002); end
  def test_lever_graphs_l3576; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3576, 0.002); end
  def test_lever_graphs_m3576; assert_in_epsilon(10926.981107405105, worksheet.lever_graphs_m3576, 0.002); end
  def test_lever_graphs_n3576; assert_in_epsilon(11410.151366521372, worksheet.lever_graphs_n3576, 0.002); end
  def test_lever_graphs_o3576; assert_in_epsilon(11823.886837584474, worksheet.lever_graphs_o3576, 0.002); end
  def test_lever_graphs_p3576; assert_in_epsilon(12119.451210792073, worksheet.lever_graphs_p3576, 0.002); end
  def test_lever_graphs_q3576; assert_in_epsilon(12318.711728749626, worksheet.lever_graphs_q3576, 0.002); end
  def test_lever_graphs_r3576; assert_in_epsilon(12390.044683990156, worksheet.lever_graphs_r3576, 0.002); end
  def test_lever_graphs_s3576; assert_in_epsilon(12439.171063997617, worksheet.lever_graphs_s3576, 0.002); end
  def test_lever_graphs_b3577; assert_in_epsilon(3.0, worksheet.lever_graphs_b3577, 0.002); end
  def test_lever_graphs_k3577; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3577, 0.002); end
  def test_lever_graphs_l3577; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3577, 0.002); end
  def test_lever_graphs_m3577; assert_in_epsilon(10719.871074648809, worksheet.lever_graphs_m3577, 0.002); end
  def test_lever_graphs_n3577; assert_in_epsilon(11091.185642930926, worksheet.lever_graphs_n3577, 0.002); end
  def test_lever_graphs_o3577; assert_in_epsilon(11375.240457091271, worksheet.lever_graphs_o3577, 0.002); end
  def test_lever_graphs_p3577; assert_in_epsilon(11542.475198639346, worksheet.lever_graphs_p3577, 0.002); end
  def test_lever_graphs_q3577; assert_in_epsilon(11641.467534890806, worksheet.lever_graphs_q3577, 0.002); end
  def test_lever_graphs_r3577; assert_in_epsilon(11696.086861235844, worksheet.lever_graphs_r3577, 0.002); end
  def test_lever_graphs_s3577; assert_in_epsilon(11703.622554001171, worksheet.lever_graphs_s3577, 0.002); end
  def test_lever_graphs_b3578; assert_in_epsilon(4.0, worksheet.lever_graphs_b3578, 0.002); end
  def test_lever_graphs_k3578; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3578, 0.002); end
  def test_lever_graphs_l3578; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3578, 0.002); end
  def test_lever_graphs_m3578; assert_in_epsilon(10632.404786360165, worksheet.lever_graphs_m3578, 0.002); end
  def test_lever_graphs_n3578; assert_in_epsilon(10885.49129962708, worksheet.lever_graphs_n3578, 0.002); end
  def test_lever_graphs_o3578; assert_in_epsilon(11065.799923657953, worksheet.lever_graphs_o3578, 0.002); end
  def test_lever_graphs_p3578; assert_in_epsilon(11174.487593194952, worksheet.lever_graphs_p3578, 0.002); end
  def test_lever_graphs_q3578; assert_in_epsilon(11211.13327444421, worksheet.lever_graphs_q3578, 0.002); end
  def test_lever_graphs_r3578; assert_in_epsilon(11206.465380713618, worksheet.lever_graphs_r3578, 0.002); end
  def test_lever_graphs_s3578; assert_in_epsilon(11193.482148736977, worksheet.lever_graphs_s3578, 0.002); end
  def test_lever_graphs_c2061; assert_equal("1975", worksheet.lever_graphs_c2061); end
  def test_lever_graphs_d2061; assert_equal("1980", worksheet.lever_graphs_d2061); end
  def test_lever_graphs_e2061; assert_equal("1985", worksheet.lever_graphs_e2061); end
  def test_lever_graphs_f2061; assert_equal("1990", worksheet.lever_graphs_f2061); end
  def test_lever_graphs_g2061; assert_equal("1995", worksheet.lever_graphs_g2061); end
  def test_lever_graphs_h2061; assert_equal("2000", worksheet.lever_graphs_h2061); end
  def test_lever_graphs_i2061; assert_equal("2005", worksheet.lever_graphs_i2061); end
  def test_lever_graphs_j2061; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2061, 0.002); end
  def test_lever_graphs_k2061; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2061, 0.002); end
  def test_lever_graphs_l2061; assert_equal("2015", worksheet.lever_graphs_l2061); end
  def test_lever_graphs_m2061; assert_equal("2020", worksheet.lever_graphs_m2061); end
  def test_lever_graphs_n2061; assert_equal("2025", worksheet.lever_graphs_n2061); end
  def test_lever_graphs_o2061; assert_equal("2030", worksheet.lever_graphs_o2061); end
  def test_lever_graphs_p2061; assert_equal("2035", worksheet.lever_graphs_p2061); end
  def test_lever_graphs_q2061; assert_equal("2040", worksheet.lever_graphs_q2061); end
  def test_lever_graphs_r2061; assert_equal("2045", worksheet.lever_graphs_r2061); end
  def test_lever_graphs_s2061; assert_equal("2050", worksheet.lever_graphs_s2061); end
  def test_lever_graphs_b2062; assert_equal("Historic data", worksheet.lever_graphs_b2062); end
  def test_lever_graphs_b2063; assert_in_delta(1.0, worksheet.lever_graphs_b2063, 0.002); end
  def test_lever_graphs_k2063; assert_in_epsilon(1.42, worksheet.lever_graphs_k2063, 0.002); end
  def test_lever_graphs_l2063; assert_in_epsilon(1.4343589743589742, worksheet.lever_graphs_l2063, 0.002); end
  def test_lever_graphs_m2063; assert_in_epsilon(1.4523076923076925, worksheet.lever_graphs_m2063, 0.002); end
  def test_lever_graphs_n2063; assert_in_epsilon(1.4702564102564102, worksheet.lever_graphs_n2063, 0.002); end
  def test_lever_graphs_o2063; assert_in_epsilon(1.488205128205128, worksheet.lever_graphs_o2063, 0.002); end
  def test_lever_graphs_p2063; assert_in_epsilon(1.5061538461538464, worksheet.lever_graphs_p2063, 0.002); end
  def test_lever_graphs_q2063; assert_in_epsilon(1.5241025641025643, worksheet.lever_graphs_q2063, 0.002); end
  def test_lever_graphs_r2063; assert_in_epsilon(1.5420512820512822, worksheet.lever_graphs_r2063, 0.002); end
  def test_lever_graphs_s2063; assert_in_epsilon(1.56, worksheet.lever_graphs_s2063, 0.002); end
  def test_lever_graphs_b2064; assert_in_epsilon(2.0, worksheet.lever_graphs_b2064, 0.002); end
  def test_lever_graphs_k2064; assert_in_epsilon(1.42, worksheet.lever_graphs_k2064, 0.002); end
  def test_lever_graphs_l2064; assert_in_epsilon(1.42, worksheet.lever_graphs_l2064, 0.002); end
  def test_lever_graphs_m2064; assert_in_epsilon(1.4200000000000002, worksheet.lever_graphs_m2064, 0.002); end
  def test_lever_graphs_n2064; assert_in_epsilon(1.42, worksheet.lever_graphs_n2064, 0.002); end
  def test_lever_graphs_o2064; assert_in_epsilon(1.42, worksheet.lever_graphs_o2064, 0.002); end
  def test_lever_graphs_p2064; assert_in_epsilon(1.42, worksheet.lever_graphs_p2064, 0.002); end
  def test_lever_graphs_q2064; assert_in_epsilon(1.42, worksheet.lever_graphs_q2064, 0.002); end
  def test_lever_graphs_r2064; assert_in_epsilon(1.42, worksheet.lever_graphs_r2064, 0.002); end
  def test_lever_graphs_s2064; assert_in_epsilon(1.42, worksheet.lever_graphs_s2064, 0.002); end
  def test_lever_graphs_b2065; assert_in_epsilon(3.0, worksheet.lever_graphs_b2065, 0.002); end
  def test_lever_graphs_k2065; assert_in_epsilon(1.42, worksheet.lever_graphs_k2065, 0.002); end
  def test_lever_graphs_l2065; assert_in_epsilon(1.4046153846153846, worksheet.lever_graphs_l2065, 0.002); end
  def test_lever_graphs_m2065; assert_in_epsilon(1.3853846153846154, worksheet.lever_graphs_m2065, 0.002); end
  def test_lever_graphs_n2065; assert_in_epsilon(1.3661538461538463, worksheet.lever_graphs_n2065, 0.002); end
  def test_lever_graphs_o2065; assert_in_epsilon(1.3469230769230767, worksheet.lever_graphs_o2065, 0.002); end
  def test_lever_graphs_p2065; assert_in_epsilon(1.327692307692308, worksheet.lever_graphs_p2065, 0.002); end
  def test_lever_graphs_q2065; assert_in_epsilon(1.3084615384615383, worksheet.lever_graphs_q2065, 0.002); end
  def test_lever_graphs_r2065; assert_in_epsilon(1.2892307692307692, worksheet.lever_graphs_r2065, 0.002); end
  def test_lever_graphs_s2065; assert_in_epsilon(1.27, worksheet.lever_graphs_s2065, 0.002); end
  def test_lever_graphs_b2066; assert_in_epsilon(4.0, worksheet.lever_graphs_b2066, 0.002); end
  def test_lever_graphs_k2066; assert_in_epsilon(1.42, worksheet.lever_graphs_k2066, 0.002); end
  def test_lever_graphs_l2066; assert_in_epsilon(1.3915897435897435, worksheet.lever_graphs_l2066, 0.002); end
  def test_lever_graphs_m2066; assert_in_epsilon(1.3560769230769232, worksheet.lever_graphs_m2066, 0.002); end
  def test_lever_graphs_n2066; assert_in_epsilon(1.3205641025641026, worksheet.lever_graphs_n2066, 0.002); end
  def test_lever_graphs_o2066; assert_in_epsilon(1.285051282051282, worksheet.lever_graphs_o2066, 0.002); end
  def test_lever_graphs_p2066; assert_in_epsilon(1.2495384615384615, worksheet.lever_graphs_p2066, 0.002); end
  def test_lever_graphs_q2066; assert_in_epsilon(1.214025641025641, worksheet.lever_graphs_q2066, 0.002); end
  def test_lever_graphs_r2066; assert_in_epsilon(1.1785128205128206, worksheet.lever_graphs_r2066, 0.002); end
  def test_lever_graphs_s2066; assert_in_epsilon(1.143, worksheet.lever_graphs_s2066, 0.002); end
  def test_lever_graphs_b2067; assert_equal("Comparator A", worksheet.lever_graphs_b2067); end
  def test_lever_graphs_b2068; assert_equal("Comparator B", worksheet.lever_graphs_b2068); end
  def test_lever_graphs_b2069; assert_equal("Comparator C", worksheet.lever_graphs_b2069); end
  def test_lever_graphs_c3012; assert_equal("1975", worksheet.lever_graphs_c3012); end
  def test_lever_graphs_d3012; assert_equal("1980", worksheet.lever_graphs_d3012); end
  def test_lever_graphs_e3012; assert_equal("1985", worksheet.lever_graphs_e3012); end
  def test_lever_graphs_f3012; assert_equal("1990", worksheet.lever_graphs_f3012); end
  def test_lever_graphs_g3012; assert_equal("1995", worksheet.lever_graphs_g3012); end
  def test_lever_graphs_h3012; assert_equal("2000", worksheet.lever_graphs_h3012); end
  def test_lever_graphs_i3012; assert_equal("2005", worksheet.lever_graphs_i3012); end
  def test_lever_graphs_j3012; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3012, 0.002); end
  def test_lever_graphs_k3012; assert_equal("2011", worksheet.lever_graphs_k3012); end
  def test_lever_graphs_l3012; assert_equal("2015", worksheet.lever_graphs_l3012); end
  def test_lever_graphs_m3012; assert_equal("2020", worksheet.lever_graphs_m3012); end
  def test_lever_graphs_n3012; assert_equal("2025", worksheet.lever_graphs_n3012); end
  def test_lever_graphs_o3012; assert_equal("2030", worksheet.lever_graphs_o3012); end
  def test_lever_graphs_p3012; assert_equal("2035", worksheet.lever_graphs_p3012); end
  def test_lever_graphs_q3012; assert_equal("2040", worksheet.lever_graphs_q3012); end
  def test_lever_graphs_r3012; assert_equal("2045", worksheet.lever_graphs_r3012); end
  def test_lever_graphs_s3012; assert_equal("2050", worksheet.lever_graphs_s3012); end
  def test_lever_graphs_b3013; assert_equal("Historic data", worksheet.lever_graphs_b3013); end
  def test_lever_graphs_b3014; assert_in_delta(1.0, worksheet.lever_graphs_b3014, 0.002); end
  def test_lever_graphs_k3014; assert_in_delta(0.0, (worksheet.lever_graphs_k3014||0), 0.002); end
  def test_lever_graphs_l3014; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3014, 0.002); end
  def test_lever_graphs_m3014; assert_in_delta(0.0418893709165714, worksheet.lever_graphs_m3014, 0.002); end
  def test_lever_graphs_n3014; assert_in_delta(0.03490780909714283, worksheet.lever_graphs_n3014, 0.002); end
  def test_lever_graphs_o3014; assert_in_delta(0.027926247277714266, worksheet.lever_graphs_o3014, 0.002); end
  def test_lever_graphs_p3014; assert_in_delta(0.0209446854582857, worksheet.lever_graphs_p3014, 0.002); end
  def test_lever_graphs_q3014; assert_in_delta(0.013963123638857128, worksheet.lever_graphs_q3014, 0.002); end
  def test_lever_graphs_r3014; assert_in_delta(0.006981561819428571, worksheet.lever_graphs_r3014, 0.002); end
  def test_lever_graphs_s3014; assert_in_delta(0.0, (worksheet.lever_graphs_s3014||0), 0.002); end
  def test_lever_graphs_b3015; assert_in_epsilon(2.0, worksheet.lever_graphs_b3015, 0.002); end
  def test_lever_graphs_k3015; assert_in_delta(0.0, (worksheet.lever_graphs_k3015||0), 0.002); end
  def test_lever_graphs_l3015; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3015, 0.002); end
  def test_lever_graphs_m3015; assert_in_delta(0.08474651377371425, worksheet.lever_graphs_m3015, 0.002); end
  def test_lever_graphs_n3015; assert_in_delta(0.12062209481142853, worksheet.lever_graphs_n3015, 0.002); end
  def test_lever_graphs_o3015; assert_in_delta(0.15649767584914281, worksheet.lever_graphs_o3015, 0.002); end
  def test_lever_graphs_p3015; assert_in_delta(0.1923732568868571, worksheet.lever_graphs_p3015, 0.002); end
  def test_lever_graphs_q3015; assert_in_delta(0.2282488379245714, worksheet.lever_graphs_q3015, 0.002); end
  def test_lever_graphs_r3015; assert_in_delta(0.26412441896228567, worksheet.lever_graphs_r3015, 0.002); end
  def test_lever_graphs_s3015; assert_in_delta(0.3, worksheet.lever_graphs_s3015, 0.002); end
  def test_lever_graphs_b3016; assert_in_epsilon(3.0, worksheet.lever_graphs_b3016, 0.002); end
  def test_lever_graphs_k3016; assert_in_delta(0.0, (worksheet.lever_graphs_k3016||0), 0.002); end
  def test_lever_graphs_l3016; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3016, 0.002); end
  def test_lever_graphs_m3016; assert_in_delta(0.1276036566308571, worksheet.lever_graphs_m3016, 0.002); end
  def test_lever_graphs_n3016; assert_in_delta(0.20633638052571424, worksheet.lever_graphs_n3016, 0.002); end
  def test_lever_graphs_o3016; assert_in_delta(0.2850691044205714, worksheet.lever_graphs_o3016, 0.002); end
  def test_lever_graphs_p3016; assert_in_delta(0.3638018283154285, worksheet.lever_graphs_p3016, 0.002); end
  def test_lever_graphs_q3016; assert_in_delta(0.4425345522102857, worksheet.lever_graphs_q3016, 0.002); end
  def test_lever_graphs_r3016; assert_in_delta(0.5212672761051428, worksheet.lever_graphs_r3016, 0.002); end
  def test_lever_graphs_s3016; assert_in_delta(0.6, worksheet.lever_graphs_s3016, 0.002); end
  def test_lever_graphs_b3017; assert_in_epsilon(4.0, worksheet.lever_graphs_b3017, 0.002); end
  def test_lever_graphs_k3017; assert_in_delta(0.0, (worksheet.lever_graphs_k3017||0), 0.002); end
  def test_lever_graphs_l3017; assert_in_delta(0.04887093273599996, worksheet.lever_graphs_l3017, 0.002); end
  def test_lever_graphs_m3017; assert_in_delta(0.18474651377371423, worksheet.lever_graphs_m3017, 0.002); end
  def test_lever_graphs_n3017; assert_in_delta(0.3206220948114285, worksheet.lever_graphs_n3017, 0.002); end
  def test_lever_graphs_o3017; assert_in_delta(0.4564976758491428, worksheet.lever_graphs_o3017, 0.002); end
  def test_lever_graphs_p3017; assert_in_delta(0.592373256886857, worksheet.lever_graphs_p3017, 0.002); end
  def test_lever_graphs_q3017; assert_in_delta(0.7282488379245714, worksheet.lever_graphs_q3017, 0.002); end
  def test_lever_graphs_r3017; assert_in_delta(0.8641244189622856, worksheet.lever_graphs_r3017, 0.002); end
  def test_lever_graphs_s3017; assert_in_delta(1.0, worksheet.lever_graphs_s3017, 0.002); end
  def test_lever_graphs_c3023; assert_equal("1975", worksheet.lever_graphs_c3023); end
  def test_lever_graphs_d3023; assert_equal("1980", worksheet.lever_graphs_d3023); end
  def test_lever_graphs_e3023; assert_equal("1985", worksheet.lever_graphs_e3023); end
  def test_lever_graphs_f3023; assert_equal("1990", worksheet.lever_graphs_f3023); end
  def test_lever_graphs_g3023; assert_equal("1995", worksheet.lever_graphs_g3023); end
  def test_lever_graphs_h3023; assert_equal("2000", worksheet.lever_graphs_h3023); end
  def test_lever_graphs_i3023; assert_equal("2005", worksheet.lever_graphs_i3023); end
  def test_lever_graphs_j3023; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3023, 0.002); end
  def test_lever_graphs_k3023; assert_equal("2011", worksheet.lever_graphs_k3023); end
  def test_lever_graphs_l3023; assert_equal("2015", worksheet.lever_graphs_l3023); end
  def test_lever_graphs_m3023; assert_equal("2020", worksheet.lever_graphs_m3023); end
  def test_lever_graphs_n3023; assert_equal("2025", worksheet.lever_graphs_n3023); end
  def test_lever_graphs_o3023; assert_equal("2030", worksheet.lever_graphs_o3023); end
  def test_lever_graphs_p3023; assert_equal("2035", worksheet.lever_graphs_p3023); end
  def test_lever_graphs_q3023; assert_equal("2040", worksheet.lever_graphs_q3023); end
  def test_lever_graphs_r3023; assert_equal("2045", worksheet.lever_graphs_r3023); end
  def test_lever_graphs_s3023; assert_equal("2050", worksheet.lever_graphs_s3023); end
  def test_lever_graphs_b3024; assert_equal("Historic data for cereals", worksheet.lever_graphs_b3024); end
  def test_lever_graphs_c3024; assert_in_delta(0.5214, worksheet.lever_graphs_c3024, 0.002); end
  def test_lever_graphs_d3024; assert_in_delta(0.5891, worksheet.lever_graphs_d3024, 0.002); end
  def test_lever_graphs_e3024; assert_in_delta(0.6893, worksheet.lever_graphs_e3024, 0.002); end
  def test_lever_graphs_f3024; assert_in_delta(0.7515, worksheet.lever_graphs_f3024, 0.002); end
  def test_lever_graphs_g3024; assert_in_delta(0.7537, worksheet.lever_graphs_g3024, 0.002); end
  def test_lever_graphs_h3024; assert_in_delta(0.8346, worksheet.lever_graphs_h3024, 0.002); end
  def test_lever_graphs_i3024; assert_in_delta(0.8952, worksheet.lever_graphs_i3024, 0.002); end
  def test_lever_graphs_j3024; assert_in_delta(0.9739, worksheet.lever_graphs_j3024, 0.002); end
  def test_lever_graphs_k3024; assert_in_delta(1.0, worksheet.lever_graphs_k3024, 0.002); end
  def test_lever_graphs_b3025; assert_in_delta(1.0, worksheet.lever_graphs_b3025, 0.002); end
  def test_lever_graphs_k3025; assert_in_delta(1.0, worksheet.lever_graphs_k3025, 0.002); end
  def test_lever_graphs_l3025; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3025, 0.002); end
  def test_lever_graphs_m3025; assert_in_epsilon(1.0418893709165713, worksheet.lever_graphs_m3025, 0.002); end
  def test_lever_graphs_n3025; assert_in_epsilon(1.0349078090971429, worksheet.lever_graphs_n3025, 0.002); end
  def test_lever_graphs_o3025; assert_in_epsilon(1.0279262472777142, worksheet.lever_graphs_o3025, 0.002); end
  def test_lever_graphs_p3025; assert_in_epsilon(1.0209446854582858, worksheet.lever_graphs_p3025, 0.002); end
  def test_lever_graphs_q3025; assert_in_epsilon(1.013963123638857, worksheet.lever_graphs_q3025, 0.002); end
  def test_lever_graphs_r3025; assert_in_epsilon(1.0069815618194287, worksheet.lever_graphs_r3025, 0.002); end
  def test_lever_graphs_s3025; assert_in_delta(1.0, worksheet.lever_graphs_s3025, 0.002); end
  def test_lever_graphs_b3026; assert_in_epsilon(2.0, worksheet.lever_graphs_b3026, 0.002); end
  def test_lever_graphs_k3026; assert_in_delta(1.0, worksheet.lever_graphs_k3026, 0.002); end
  def test_lever_graphs_l3026; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3026, 0.002); end
  def test_lever_graphs_m3026; assert_in_epsilon(1.0847465137737142, worksheet.lever_graphs_m3026, 0.002); end
  def test_lever_graphs_n3026; assert_in_epsilon(1.1206220948114285, worksheet.lever_graphs_n3026, 0.002); end
  def test_lever_graphs_o3026; assert_in_epsilon(1.1564976758491428, worksheet.lever_graphs_o3026, 0.002); end
  def test_lever_graphs_p3026; assert_in_epsilon(1.192373256886857, worksheet.lever_graphs_p3026, 0.002); end
  def test_lever_graphs_q3026; assert_in_epsilon(1.2282488379245713, worksheet.lever_graphs_q3026, 0.002); end
  def test_lever_graphs_r3026; assert_in_epsilon(1.2641244189622856, worksheet.lever_graphs_r3026, 0.002); end
  def test_lever_graphs_s3026; assert_in_epsilon(1.3, worksheet.lever_graphs_s3026, 0.002); end
  def test_lever_graphs_b3027; assert_in_epsilon(3.0, worksheet.lever_graphs_b3027, 0.002); end
  def test_lever_graphs_k3027; assert_in_delta(1.0, worksheet.lever_graphs_k3027, 0.002); end
  def test_lever_graphs_l3027; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3027, 0.002); end
  def test_lever_graphs_m3027; assert_in_epsilon(1.1276036566308572, worksheet.lever_graphs_m3027, 0.002); end
  def test_lever_graphs_n3027; assert_in_epsilon(1.2063363805257143, worksheet.lever_graphs_n3027, 0.002); end
  def test_lever_graphs_o3027; assert_in_epsilon(1.2850691044205713, worksheet.lever_graphs_o3027, 0.002); end
  def test_lever_graphs_p3027; assert_in_epsilon(1.3638018283154285, worksheet.lever_graphs_p3027, 0.002); end
  def test_lever_graphs_q3027; assert_in_epsilon(1.4425345522102857, worksheet.lever_graphs_q3027, 0.002); end
  def test_lever_graphs_r3027; assert_in_epsilon(1.5212672761051427, worksheet.lever_graphs_r3027, 0.002); end
  def test_lever_graphs_s3027; assert_in_epsilon(1.6, worksheet.lever_graphs_s3027, 0.002); end
  def test_lever_graphs_b3028; assert_in_epsilon(4.0, worksheet.lever_graphs_b3028, 0.002); end
  def test_lever_graphs_k3028; assert_in_delta(1.0, worksheet.lever_graphs_k3028, 0.002); end
  def test_lever_graphs_l3028; assert_in_epsilon(1.048870932736, worksheet.lever_graphs_l3028, 0.002); end
  def test_lever_graphs_m3028; assert_in_epsilon(1.1847465137737143, worksheet.lever_graphs_m3028, 0.002); end
  def test_lever_graphs_n3028; assert_in_epsilon(1.3206220948114284, worksheet.lever_graphs_n3028, 0.002); end
  def test_lever_graphs_o3028; assert_in_epsilon(1.4564976758491428, worksheet.lever_graphs_o3028, 0.002); end
  def test_lever_graphs_p3028; assert_in_epsilon(1.592373256886857, worksheet.lever_graphs_p3028, 0.002); end
  def test_lever_graphs_q3028; assert_in_epsilon(1.7282488379245713, worksheet.lever_graphs_q3028, 0.002); end
  def test_lever_graphs_r3028; assert_in_epsilon(1.8641244189622856, worksheet.lever_graphs_r3028, 0.002); end
  def test_lever_graphs_s3028; assert_in_epsilon(2.0, worksheet.lever_graphs_s3028, 0.002); end
  def test_lever_graphs_c3338; assert_equal("1975", worksheet.lever_graphs_c3338); end
  def test_lever_graphs_d3338; assert_equal("1980", worksheet.lever_graphs_d3338); end
  def test_lever_graphs_e3338; assert_equal("1985", worksheet.lever_graphs_e3338); end
  def test_lever_graphs_f3338; assert_equal("1990", worksheet.lever_graphs_f3338); end
  def test_lever_graphs_g3338; assert_equal("1995", worksheet.lever_graphs_g3338); end
  def test_lever_graphs_h3338; assert_equal("2000", worksheet.lever_graphs_h3338); end
  def test_lever_graphs_i3338; assert_equal("2005", worksheet.lever_graphs_i3338); end
  def test_lever_graphs_j3338; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3338, 0.002); end
  def test_lever_graphs_k3338; assert_equal("2011", worksheet.lever_graphs_k3338); end
  def test_lever_graphs_l3338; assert_equal("2015", worksheet.lever_graphs_l3338); end
  def test_lever_graphs_m3338; assert_equal("2020", worksheet.lever_graphs_m3338); end
  def test_lever_graphs_n3338; assert_equal("2025", worksheet.lever_graphs_n3338); end
  def test_lever_graphs_o3338; assert_equal("2030", worksheet.lever_graphs_o3338); end
  def test_lever_graphs_p3338; assert_equal("2035", worksheet.lever_graphs_p3338); end
  def test_lever_graphs_q3338; assert_equal("2040", worksheet.lever_graphs_q3338); end
  def test_lever_graphs_r3338; assert_equal("2045", worksheet.lever_graphs_r3338); end
  def test_lever_graphs_s3338; assert_equal("2050", worksheet.lever_graphs_s3338); end
  def test_lever_graphs_b3339; assert_equal("Historic data", worksheet.lever_graphs_b3339); end
  def test_lever_graphs_b3340; assert_in_delta(1.0, worksheet.lever_graphs_b3340, 0.002); end
  def test_lever_graphs_k3340; assert_in_delta(0.1, worksheet.lever_graphs_k3340, 0.002); end
  def test_lever_graphs_l3340; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3340, 0.002); end
  def test_lever_graphs_m3340; assert_in_delta(0.11318681318681319, worksheet.lever_graphs_m3340, 0.002); end
  def test_lever_graphs_n3340; assert_in_delta(0.110989010989011, worksheet.lever_graphs_n3340, 0.002); end
  def test_lever_graphs_o3340; assert_in_delta(0.1087912087912088, worksheet.lever_graphs_o3340, 0.002); end
  def test_lever_graphs_p3340; assert_in_delta(0.1065934065934066, worksheet.lever_graphs_p3340, 0.002); end
  def test_lever_graphs_q3340; assert_in_delta(0.1043956043956044, worksheet.lever_graphs_q3340, 0.002); end
  def test_lever_graphs_r3340; assert_in_delta(0.10219780219780221, worksheet.lever_graphs_r3340, 0.002); end
  def test_lever_graphs_s3340; assert_in_delta(0.1, worksheet.lever_graphs_s3340, 0.002); end
  def test_lever_graphs_b3341; assert_in_epsilon(2.0, worksheet.lever_graphs_b3341, 0.002); end
  def test_lever_graphs_k3341; assert_in_delta(0.1, worksheet.lever_graphs_k3341, 0.002); end
  def test_lever_graphs_l3341; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3341, 0.002); end
  def test_lever_graphs_m3341; assert_in_delta(0.1274725274725275, worksheet.lever_graphs_m3341, 0.002); end
  def test_lever_graphs_n3341; assert_in_delta(0.13956043956043956, worksheet.lever_graphs_n3341, 0.002); end
  def test_lever_graphs_o3341; assert_in_delta(0.15164835164835166, worksheet.lever_graphs_o3341, 0.002); end
  def test_lever_graphs_p3341; assert_in_delta(0.16373626373626374, worksheet.lever_graphs_p3341, 0.002); end
  def test_lever_graphs_q3341; assert_in_delta(0.17582417582417584, worksheet.lever_graphs_q3341, 0.002); end
  def test_lever_graphs_r3341; assert_in_delta(0.1879120879120879, worksheet.lever_graphs_r3341, 0.002); end
  def test_lever_graphs_s3341; assert_in_delta(0.2, worksheet.lever_graphs_s3341, 0.002); end
  def test_lever_graphs_b3342; assert_in_epsilon(3.0, worksheet.lever_graphs_b3342, 0.002); end
  def test_lever_graphs_k3342; assert_in_delta(0.1, worksheet.lever_graphs_k3342, 0.002); end
  def test_lever_graphs_l3342; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3342, 0.002); end
  def test_lever_graphs_m3342; assert_in_delta(0.14175824175824175, worksheet.lever_graphs_m3342, 0.002); end
  def test_lever_graphs_n3342; assert_in_delta(0.16813186813186815, worksheet.lever_graphs_n3342, 0.002); end
  def test_lever_graphs_o3342; assert_in_delta(0.19450549450549448, worksheet.lever_graphs_o3342, 0.002); end
  def test_lever_graphs_p3342; assert_in_delta(0.22087912087912087, worksheet.lever_graphs_p3342, 0.002); end
  def test_lever_graphs_q3342; assert_in_delta(0.24725274725274726, worksheet.lever_graphs_q3342, 0.002); end
  def test_lever_graphs_r3342; assert_in_delta(0.2736263736263736, worksheet.lever_graphs_r3342, 0.002); end
  def test_lever_graphs_s3342; assert_in_delta(0.3, worksheet.lever_graphs_s3342, 0.002); end
  def test_lever_graphs_b3343; assert_in_epsilon(4.0, worksheet.lever_graphs_b3343, 0.002); end
  def test_lever_graphs_k3343; assert_in_delta(0.1, worksheet.lever_graphs_k3343, 0.002); end
  def test_lever_graphs_l3343; assert_in_delta(0.11538461538461539, worksheet.lever_graphs_l3343, 0.002); end
  def test_lever_graphs_m3343; assert_in_delta(0.17032967032967034, worksheet.lever_graphs_m3343, 0.002); end
  def test_lever_graphs_n3343; assert_in_delta(0.22527472527472525, worksheet.lever_graphs_n3343, 0.002); end
  def test_lever_graphs_o3343; assert_in_delta(0.2802197802197802, worksheet.lever_graphs_o3343, 0.002); end
  def test_lever_graphs_p3343; assert_in_delta(0.33516483516483514, worksheet.lever_graphs_p3343, 0.002); end
  def test_lever_graphs_q3343; assert_in_delta(0.39010989010989006, worksheet.lever_graphs_q3343, 0.002); end
  def test_lever_graphs_r3343; assert_in_delta(0.44505494505494503, worksheet.lever_graphs_r3343, 0.002); end
  def test_lever_graphs_s3343; assert_in_delta(0.5, worksheet.lever_graphs_s3343, 0.002); end
  def test_lever_graphs_d3370; assert_equal("Title", worksheet.lever_graphs_d3370); end
  def test_lever_graphs_e3370; assert_equal("Food crops", worksheet.lever_graphs_e3370); end
  def test_lever_graphs_f3370; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3370); end
  def test_lever_graphs_g3370; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3370); end
  def test_lever_graphs_h3370; assert_equal("Pigs", worksheet.lever_graphs_h3370); end
  def test_lever_graphs_i3370; assert_equal("Sheep and goats", worksheet.lever_graphs_i3370); end
  def test_lever_graphs_j3370; assert_equal("Other animals", worksheet.lever_graphs_j3370); end
  def test_lever_graphs_k3370; assert_equal("Eggs", worksheet.lever_graphs_k3370); end
  def test_lever_graphs_l3370; assert_equal("Milk products", worksheet.lever_graphs_l3370); end
  def test_lever_graphs_d3371; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3371, 0.002); end
  def test_lever_graphs_e3371; assert_in_delta(0.01, worksheet.lever_graphs_e3371, 0.002); end
  def test_lever_graphs_f3371; assert_in_delta(0.01, worksheet.lever_graphs_f3371, 0.002); end
  def test_lever_graphs_g3371; assert_in_delta(0.01, worksheet.lever_graphs_g3371, 0.002); end
  def test_lever_graphs_h3371; assert_in_delta(0.01, worksheet.lever_graphs_h3371, 0.002); end
  def test_lever_graphs_i3371; assert_in_delta(0.01, worksheet.lever_graphs_i3371, 0.002); end
  def test_lever_graphs_j3371; assert_in_delta(0.01, worksheet.lever_graphs_j3371, 0.002); end
  def test_lever_graphs_k3371; assert_in_delta(0.002, worksheet.lever_graphs_k3371, 0.002); end
  def test_lever_graphs_l3371; assert_in_delta(0.001, worksheet.lever_graphs_l3371, 0.002); end
  def test_lever_graphs_d3372; assert_equal("2050: Level 1", worksheet.lever_graphs_d3372); end
  def test_lever_graphs_e3372; assert_in_delta(0.05, worksheet.lever_graphs_e3372, 0.002); end
  def test_lever_graphs_f3372; assert_in_delta(0.05, worksheet.lever_graphs_f3372, 0.002); end
  def test_lever_graphs_g3372; assert_in_delta(0.05, worksheet.lever_graphs_g3372, 0.002); end
  def test_lever_graphs_h3372; assert_in_delta(0.05, worksheet.lever_graphs_h3372, 0.002); end
  def test_lever_graphs_i3372; assert_in_delta(0.05, worksheet.lever_graphs_i3372, 0.002); end
  def test_lever_graphs_j3372; assert_in_delta(0.05, worksheet.lever_graphs_j3372, 0.002); end
  def test_lever_graphs_k3372; assert_in_delta(0.005, worksheet.lever_graphs_k3372, 0.002); end
  def test_lever_graphs_l3372; assert_in_delta(0.005, worksheet.lever_graphs_l3372, 0.002); end
  def test_lever_graphs_d3373; assert_equal("2050: Level 2", worksheet.lever_graphs_d3373); end
  def test_lever_graphs_e3373; assert_in_delta(0.15, worksheet.lever_graphs_e3373, 0.002); end
  def test_lever_graphs_f3373; assert_in_delta(0.15, worksheet.lever_graphs_f3373, 0.002); end
  def test_lever_graphs_g3373; assert_in_delta(0.15, worksheet.lever_graphs_g3373, 0.002); end
  def test_lever_graphs_h3373; assert_in_delta(0.15, worksheet.lever_graphs_h3373, 0.002); end
  def test_lever_graphs_i3373; assert_in_delta(0.15, worksheet.lever_graphs_i3373, 0.002); end
  def test_lever_graphs_j3373; assert_in_delta(0.15, worksheet.lever_graphs_j3373, 0.002); end
  def test_lever_graphs_k3373; assert_in_delta(0.02, worksheet.lever_graphs_k3373, 0.002); end
  def test_lever_graphs_l3373; assert_in_delta(0.02, worksheet.lever_graphs_l3373, 0.002); end
  def test_lever_graphs_d3374; assert_equal("2050: Level 3", worksheet.lever_graphs_d3374); end
  def test_lever_graphs_e3374; assert_in_delta(0.2, worksheet.lever_graphs_e3374, 0.002); end
  def test_lever_graphs_f3374; assert_in_delta(0.2, worksheet.lever_graphs_f3374, 0.002); end
  def test_lever_graphs_g3374; assert_in_delta(0.2, worksheet.lever_graphs_g3374, 0.002); end
  def test_lever_graphs_h3374; assert_in_delta(0.2, worksheet.lever_graphs_h3374, 0.002); end
  def test_lever_graphs_i3374; assert_in_delta(0.2, worksheet.lever_graphs_i3374, 0.002); end
  def test_lever_graphs_j3374; assert_in_delta(0.2, worksheet.lever_graphs_j3374, 0.002); end
  def test_lever_graphs_k3374; assert_in_delta(0.05, worksheet.lever_graphs_k3374, 0.002); end
  def test_lever_graphs_l3374; assert_in_delta(0.05, worksheet.lever_graphs_l3374, 0.002); end
  def test_lever_graphs_d3375; assert_equal("2050: Level 4", worksheet.lever_graphs_d3375); end
  def test_lever_graphs_e3375; assert_in_delta(0.3, worksheet.lever_graphs_e3375, 0.002); end
  def test_lever_graphs_f3375; assert_in_delta(0.3, worksheet.lever_graphs_f3375, 0.002); end
  def test_lever_graphs_g3375; assert_in_delta(0.3, worksheet.lever_graphs_g3375, 0.002); end
  def test_lever_graphs_h3375; assert_in_delta(0.3, worksheet.lever_graphs_h3375, 0.002); end
  def test_lever_graphs_i3375; assert_in_delta(0.3, worksheet.lever_graphs_i3375, 0.002); end
  def test_lever_graphs_j3375; assert_in_delta(0.3, worksheet.lever_graphs_j3375, 0.002); end
  def test_lever_graphs_k3375; assert_in_delta(0.1, worksheet.lever_graphs_k3375, 0.002); end
  def test_lever_graphs_l3375; assert_in_delta(0.1, worksheet.lever_graphs_l3375, 0.002); end
  def test_lever_graphs_c3359; assert_equal("1975", worksheet.lever_graphs_c3359); end
  def test_lever_graphs_d3359; assert_equal("1980", worksheet.lever_graphs_d3359); end
  def test_lever_graphs_e3359; assert_equal("1985", worksheet.lever_graphs_e3359); end
  def test_lever_graphs_f3359; assert_equal("1990", worksheet.lever_graphs_f3359); end
  def test_lever_graphs_g3359; assert_equal("1995", worksheet.lever_graphs_g3359); end
  def test_lever_graphs_h3359; assert_equal("2000", worksheet.lever_graphs_h3359); end
  def test_lever_graphs_i3359; assert_equal("2005", worksheet.lever_graphs_i3359); end
  def test_lever_graphs_j3359; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3359, 0.002); end
  def test_lever_graphs_k3359; assert_equal("2011", worksheet.lever_graphs_k3359); end
  def test_lever_graphs_l3359; assert_equal("2015", worksheet.lever_graphs_l3359); end
  def test_lever_graphs_m3359; assert_equal("2020", worksheet.lever_graphs_m3359); end
  def test_lever_graphs_n3359; assert_equal("2025", worksheet.lever_graphs_n3359); end
  def test_lever_graphs_o3359; assert_equal("2030", worksheet.lever_graphs_o3359); end
  def test_lever_graphs_p3359; assert_equal("2035", worksheet.lever_graphs_p3359); end
  def test_lever_graphs_q3359; assert_equal("2040", worksheet.lever_graphs_q3359); end
  def test_lever_graphs_r3359; assert_equal("2045", worksheet.lever_graphs_r3359); end
  def test_lever_graphs_s3359; assert_equal("2050", worksheet.lever_graphs_s3359); end
  def test_lever_graphs_b3360; assert_equal("Historic data", worksheet.lever_graphs_b3360); end
  def test_lever_graphs_b3361; assert_in_delta(1.0, worksheet.lever_graphs_b3361, 0.002); end
  def test_lever_graphs_k3361; assert_in_delta(0.24, worksheet.lever_graphs_k3361, 0.002); end
  def test_lever_graphs_l3361; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3361, 0.002); end
  def test_lever_graphs_m3361; assert_in_delta(0.23648351648351648, worksheet.lever_graphs_m3361, 0.002); end
  def test_lever_graphs_n3361; assert_in_delta(0.23706959706959707, worksheet.lever_graphs_n3361, 0.002); end
  def test_lever_graphs_o3361; assert_in_delta(0.23765567765567766, worksheet.lever_graphs_o3361, 0.002); end
  def test_lever_graphs_p3361; assert_in_delta(0.23824175824175822, worksheet.lever_graphs_p3361, 0.002); end
  def test_lever_graphs_q3361; assert_in_delta(0.2388278388278388, worksheet.lever_graphs_q3361, 0.002); end
  def test_lever_graphs_r3361; assert_in_delta(0.2394139194139194, worksheet.lever_graphs_r3361, 0.002); end
  def test_lever_graphs_s3361; assert_in_delta(0.24, worksheet.lever_graphs_s3361, 0.002); end
  def test_lever_graphs_b3362; assert_in_epsilon(2.0, worksheet.lever_graphs_b3362, 0.002); end
  def test_lever_graphs_k3362; assert_in_delta(0.24, worksheet.lever_graphs_k3362, 0.002); end
  def test_lever_graphs_l3362; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3362, 0.002); end
  def test_lever_graphs_m3362; assert_in_delta(0.23076923076923075, worksheet.lever_graphs_m3362, 0.002); end
  def test_lever_graphs_n3362; assert_in_delta(0.22564102564102564, worksheet.lever_graphs_n3362, 0.002); end
  def test_lever_graphs_o3362; assert_in_delta(0.2205128205128205, worksheet.lever_graphs_o3362, 0.002); end
  def test_lever_graphs_p3362; assert_in_delta(0.2153846153846154, worksheet.lever_graphs_p3362, 0.002); end
  def test_lever_graphs_q3362; assert_in_delta(0.21025641025641026, worksheet.lever_graphs_q3362, 0.002); end
  def test_lever_graphs_r3362; assert_in_delta(0.20512820512820515, worksheet.lever_graphs_r3362, 0.002); end
  def test_lever_graphs_s3362; assert_in_delta(0.2, worksheet.lever_graphs_s3362, 0.002); end
  def test_lever_graphs_b3363; assert_in_epsilon(3.0, worksheet.lever_graphs_b3363, 0.002); end
  def test_lever_graphs_k3363; assert_in_delta(0.24, worksheet.lever_graphs_k3363, 0.002); end
  def test_lever_graphs_l3363; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3363, 0.002); end
  def test_lever_graphs_m3363; assert_in_delta(0.22505494505494505, worksheet.lever_graphs_m3363, 0.002); end
  def test_lever_graphs_n3363; assert_in_delta(0.21421245421245422, worksheet.lever_graphs_n3363, 0.002); end
  def test_lever_graphs_o3363; assert_in_delta(0.20336996336996338, worksheet.lever_graphs_o3363, 0.002); end
  def test_lever_graphs_p3363; assert_in_delta(0.19252747252747254, worksheet.lever_graphs_p3363, 0.002); end
  def test_lever_graphs_q3363; assert_in_delta(0.18168498168498168, worksheet.lever_graphs_q3363, 0.002); end
  def test_lever_graphs_r3363; assert_in_delta(0.17084249084249087, worksheet.lever_graphs_r3363, 0.002); end
  def test_lever_graphs_s3363; assert_in_delta(0.16, worksheet.lever_graphs_s3363, 0.002); end
  def test_lever_graphs_b3364; assert_in_epsilon(4.0, worksheet.lever_graphs_b3364, 0.002); end
  def test_lever_graphs_k3364; assert_in_delta(0.24, worksheet.lever_graphs_k3364, 0.002); end
  def test_lever_graphs_l3364; assert_in_delta(0.2358974358974359, worksheet.lever_graphs_l3364, 0.002); end
  def test_lever_graphs_m3364; assert_in_delta(0.2164835164835165, worksheet.lever_graphs_m3364, 0.002); end
  def test_lever_graphs_n3364; assert_in_delta(0.19706959706959706, worksheet.lever_graphs_n3364, 0.002); end
  def test_lever_graphs_o3364; assert_in_delta(0.17765567765567766, worksheet.lever_graphs_o3364, 0.002); end
  def test_lever_graphs_p3364; assert_in_delta(0.15824175824175823, worksheet.lever_graphs_p3364, 0.002); end
  def test_lever_graphs_q3364; assert_in_delta(0.13882783882783883, worksheet.lever_graphs_q3364, 0.002); end
  def test_lever_graphs_r3364; assert_in_delta(0.11941391941391942, worksheet.lever_graphs_r3364, 0.002); end
  def test_lever_graphs_s3364; assert_in_delta(0.1, worksheet.lever_graphs_s3364, 0.002); end
  def test_lever_graphs_c1633; assert_equal("1975", worksheet.lever_graphs_c1633); end
  def test_lever_graphs_d1633; assert_equal("1980", worksheet.lever_graphs_d1633); end
  def test_lever_graphs_e1633; assert_equal("1985", worksheet.lever_graphs_e1633); end
  def test_lever_graphs_f1633; assert_equal("1990", worksheet.lever_graphs_f1633); end
  def test_lever_graphs_g1633; assert_equal("1995", worksheet.lever_graphs_g1633); end
  def test_lever_graphs_h1633; assert_equal("2000", worksheet.lever_graphs_h1633); end
  def test_lever_graphs_i1633; assert_equal("2005", worksheet.lever_graphs_i1633); end
  def test_lever_graphs_j1633; assert_equal("2010", worksheet.lever_graphs_j1633); end
  def test_lever_graphs_k1633; assert_equal("2011", worksheet.lever_graphs_k1633); end
  def test_lever_graphs_l1633; assert_equal("2015", worksheet.lever_graphs_l1633); end
  def test_lever_graphs_m1633; assert_equal("2020", worksheet.lever_graphs_m1633); end
  def test_lever_graphs_n1633; assert_equal("2025", worksheet.lever_graphs_n1633); end
  def test_lever_graphs_o1633; assert_equal("2030", worksheet.lever_graphs_o1633); end
  def test_lever_graphs_p1633; assert_equal("2035", worksheet.lever_graphs_p1633); end
  def test_lever_graphs_q1633; assert_equal("2040", worksheet.lever_graphs_q1633); end
  def test_lever_graphs_r1633; assert_equal("2045", worksheet.lever_graphs_r1633); end
  def test_lever_graphs_s1633; assert_equal("2050", worksheet.lever_graphs_s1633); end
  def test_lever_graphs_b1634; assert_equal("Historic data", worksheet.lever_graphs_b1634); end
  def test_lever_graphs_c1634; assert_in_epsilon(4071020000.0, worksheet.lever_graphs_c1634, 0.002); end
  def test_lever_graphs_d1634; assert_in_epsilon(4449049000.0, worksheet.lever_graphs_d1634, 0.002); end
  def test_lever_graphs_e1634; assert_in_epsilon(4863602000.0, worksheet.lever_graphs_e1634, 0.002); end
  def test_lever_graphs_f1634; assert_in_epsilon(5320817000.0, worksheet.lever_graphs_f1634, 0.002); end
  def test_lever_graphs_g1634; assert_in_epsilon(5741822000.0, worksheet.lever_graphs_g1634, 0.002); end
  def test_lever_graphs_h1634; assert_in_epsilon(6127700000.0, worksheet.lever_graphs_h1634, 0.002); end
  def test_lever_graphs_i1634; assert_in_epsilon(6514095000.0, worksheet.lever_graphs_i1634, 0.002); end
  def test_lever_graphs_j1634; assert_in_epsilon(6916183000.0, worksheet.lever_graphs_j1634, 0.002); end
  def test_lever_graphs_k1634; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1634, 0.002); end
  def test_lever_graphs_b1635; assert_in_delta(1.0, worksheet.lever_graphs_b1635, 0.002); end
  def test_lever_graphs_k1635; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1635, 0.002); end
  def test_lever_graphs_l1635; assert_in_epsilon(7392233000.0, worksheet.lever_graphs_l1635, 0.002); end
  def test_lever_graphs_m1635; assert_in_epsilon(7893904000.0, worksheet.lever_graphs_m1635, 0.002); end
  def test_lever_graphs_n1635; assert_in_epsilon(8398226000.0, worksheet.lever_graphs_n1635, 0.002); end
  def test_lever_graphs_o1635; assert_in_epsilon(8881519000.0, worksheet.lever_graphs_o1635, 0.002); end
  def test_lever_graphs_p1635; assert_in_epsilon(9359400000.0, worksheet.lever_graphs_p1635, 0.002); end
  def test_lever_graphs_q1635; assert_in_epsilon(9847909000.0, worksheet.lever_graphs_q1635, 0.002); end
  def test_lever_graphs_r1635; assert_in_epsilon(10352435000.0, worksheet.lever_graphs_r1635, 0.002); end
  def test_lever_graphs_s1635; assert_in_epsilon(10868444000.0, worksheet.lever_graphs_s1635, 0.002); end
  def test_lever_graphs_b1636; assert_in_epsilon(2.0, worksheet.lever_graphs_b1636, 0.002); end
  def test_lever_graphs_k1636; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1636, 0.002); end
  def test_lever_graphs_l1636; assert_in_epsilon(7324782000.0, worksheet.lever_graphs_l1636, 0.002); end
  def test_lever_graphs_m1636; assert_in_epsilon(7716749000.0, worksheet.lever_graphs_m1636, 0.002); end
  def test_lever_graphs_n1636; assert_in_epsilon(8083413000.0, worksheet.lever_graphs_n1636, 0.002); end
  def test_lever_graphs_o1636; assert_in_epsilon(8424937000.0, worksheet.lever_graphs_o1636, 0.002); end
  def test_lever_graphs_p1636; assert_in_epsilon(8743447000.0, worksheet.lever_graphs_p1636, 0.002); end
  def test_lever_graphs_q1636; assert_in_epsilon(9038687000.0, worksheet.lever_graphs_q1636, 0.002); end
  def test_lever_graphs_r1636; assert_in_epsilon(9308438000.0, worksheet.lever_graphs_r1636, 0.002); end
  def test_lever_graphs_s1636; assert_in_epsilon(9550945000.0, worksheet.lever_graphs_s1636, 0.002); end
  def test_lever_graphs_b1637; assert_in_epsilon(3.0, worksheet.lever_graphs_b1637, 0.002); end
  def test_lever_graphs_k1637; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1637, 0.002); end
  def test_lever_graphs_l1637; assert_in_epsilon(7256925000.0, worksheet.lever_graphs_l1637, 0.002); end
  def test_lever_graphs_m1637; assert_in_epsilon(7539163000.0, worksheet.lever_graphs_m1637, 0.002); end
  def test_lever_graphs_n1637; assert_in_epsilon(7768450000.0, worksheet.lever_graphs_n1637, 0.002); end
  def test_lever_graphs_o1637; assert_in_epsilon(7969407000.0, worksheet.lever_graphs_o1637, 0.002); end
  def test_lever_graphs_p1637; assert_in_epsilon(8135087000.0, worksheet.lever_graphs_p1637, 0.002); end
  def test_lever_graphs_q1637; assert_in_epsilon(8255351000.0, worksheet.lever_graphs_q1637, 0.002); end
  def test_lever_graphs_r1637; assert_in_epsilon(8323978000.0, worksheet.lever_graphs_r1637, 0.002); end
  def test_lever_graphs_s1637; assert_in_epsilon(8341706000.0, worksheet.lever_graphs_s1637, 0.002); end
  def test_lever_graphs_d1618; assert_equal("Title", worksheet.lever_graphs_d1618); end
  def test_lever_graphs_e1618; assert_equal("Proportion of 15 year trend", worksheet.lever_graphs_e1618); end
  def test_lever_graphs_d1619; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1619, 0.002); end
  def test_lever_graphs_e1619; assert_in_delta(0.0, (worksheet.lever_graphs_e1619||0), 0.002); end
  def test_lever_graphs_d1620; assert_equal("2050: Level 1", worksheet.lever_graphs_d1620); end
  def test_lever_graphs_e1620; assert_in_delta(0.0, (worksheet.lever_graphs_e1620||0), 0.002); end
  def test_lever_graphs_d1621; assert_equal("2050: Level 2", worksheet.lever_graphs_d1621); end
  def test_lever_graphs_e1621; assert_in_delta(0.33, worksheet.lever_graphs_e1621, 0.002); end
  def test_lever_graphs_d1622; assert_equal("2050: Level 3", worksheet.lever_graphs_d1622); end
  def test_lever_graphs_e1622; assert_in_delta(0.66, worksheet.lever_graphs_e1622, 0.002); end
  def test_lever_graphs_d1623; assert_equal("2050: Level 4", worksheet.lever_graphs_d1623); end
  def test_lever_graphs_e1623; assert_in_delta(1.0, worksheet.lever_graphs_e1623, 0.002); end
  def test_lever_graphs_d1724; assert_equal("Title", worksheet.lever_graphs_d1724); end
  def test_lever_graphs_e1724; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_e1724); end
  def test_lever_graphs_f1724; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_f1724); end
  def test_lever_graphs_g1724; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_g1724); end
  def test_lever_graphs_d1725; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1725, 0.002); end
  def test_lever_graphs_e1725; assert_in_delta(0.08, worksheet.lever_graphs_e1725, 0.002); end
  def test_lever_graphs_f1725; assert_in_delta(0.17, worksheet.lever_graphs_f1725, 0.002); end
  def test_lever_graphs_g1725; assert_in_delta(0.75, worksheet.lever_graphs_g1725, 0.002); end
  def test_lever_graphs_d1726; assert_equal("2050: Level 1", worksheet.lever_graphs_d1726); end
  def test_lever_graphs_e1726; assert_in_delta(0.1435, worksheet.lever_graphs_e1726, 0.002); end
  def test_lever_graphs_f1726; assert_in_delta(0.2315, worksheet.lever_graphs_f1726, 0.002); end
  def test_lever_graphs_g1726; assert_in_delta(0.625, worksheet.lever_graphs_g1726, 0.002); end
  def test_lever_graphs_d1727; assert_equal("2050: Level 2", worksheet.lever_graphs_d1727); end
  def test_lever_graphs_e1727; assert_in_delta(0.18, worksheet.lever_graphs_e1727, 0.002); end
  def test_lever_graphs_f1727; assert_in_delta(0.27, worksheet.lever_graphs_f1727, 0.002); end
  def test_lever_graphs_g1727; assert_in_delta(0.55, worksheet.lever_graphs_g1727, 0.002); end
  def test_lever_graphs_d1728; assert_equal("2050: Level 3", worksheet.lever_graphs_d1728); end
  def test_lever_graphs_e1728; assert_in_delta(0.204, worksheet.lever_graphs_e1728, 0.002); end
  def test_lever_graphs_f1728; assert_in_delta(0.293, worksheet.lever_graphs_f1728, 0.002); end
  def test_lever_graphs_g1728; assert_in_delta(0.5030000000000001, worksheet.lever_graphs_g1728, 0.002); end
  def test_lever_graphs_d1729; assert_equal("2050: Level 4", worksheet.lever_graphs_d1729); end
  def test_lever_graphs_e1729; assert_in_delta(0.2324, worksheet.lever_graphs_e1729, 0.002); end
  def test_lever_graphs_f1729; assert_in_delta(0.3223, worksheet.lever_graphs_f1729, 0.002); end
  def test_lever_graphs_g1729; assert_in_delta(0.4453000000000001, worksheet.lever_graphs_g1729, 0.002); end
  def test_lever_graphs_c1769; assert_equal("1975", worksheet.lever_graphs_c1769); end
  def test_lever_graphs_d1769; assert_equal("1980", worksheet.lever_graphs_d1769); end
  def test_lever_graphs_e1769; assert_equal("1985", worksheet.lever_graphs_e1769); end
  def test_lever_graphs_f1769; assert_equal("1990", worksheet.lever_graphs_f1769); end
  def test_lever_graphs_g1769; assert_equal("1995", worksheet.lever_graphs_g1769); end
  def test_lever_graphs_h1769; assert_equal("2000", worksheet.lever_graphs_h1769); end
  def test_lever_graphs_i1769; assert_equal("2005", worksheet.lever_graphs_i1769); end
  def test_lever_graphs_j1769; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1769, 0.002); end
  def test_lever_graphs_k1769; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1769, 0.002); end
  def test_lever_graphs_l1769; assert_equal("2015", worksheet.lever_graphs_l1769); end
  def test_lever_graphs_m1769; assert_equal("2020", worksheet.lever_graphs_m1769); end
  def test_lever_graphs_n1769; assert_equal("2025", worksheet.lever_graphs_n1769); end
  def test_lever_graphs_o1769; assert_equal("2030", worksheet.lever_graphs_o1769); end
  def test_lever_graphs_p1769; assert_equal("2035", worksheet.lever_graphs_p1769); end
  def test_lever_graphs_q1769; assert_equal("2040", worksheet.lever_graphs_q1769); end
  def test_lever_graphs_r1769; assert_equal("2045", worksheet.lever_graphs_r1769); end
  def test_lever_graphs_s1769; assert_equal("2050", worksheet.lever_graphs_s1769); end
  def test_lever_graphs_b1770; assert_equal("Historic data", worksheet.lever_graphs_b1770); end
  def test_lever_graphs_b1771; assert_in_delta(1.0, worksheet.lever_graphs_b1771, 0.002); end
  def test_lever_graphs_k1771; assert_in_delta(0.25, worksheet.lever_graphs_k1771, 0.002); end
  def test_lever_graphs_l1771; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1771, 0.002); end
  def test_lever_graphs_m1771; assert_in_delta(0.2854395604395604, worksheet.lever_graphs_m1771, 0.002); end
  def test_lever_graphs_n1771; assert_in_delta(0.3003663003663004, worksheet.lever_graphs_n1771, 0.002); end
  def test_lever_graphs_o1771; assert_in_delta(0.3152930402930403, worksheet.lever_graphs_o1771, 0.002); end
  def test_lever_graphs_p1771; assert_in_delta(0.3302197802197802, worksheet.lever_graphs_p1771, 0.002); end
  def test_lever_graphs_q1771; assert_in_delta(0.34514652014652014, worksheet.lever_graphs_q1771, 0.002); end
  def test_lever_graphs_r1771; assert_in_delta(0.36007326007326007, worksheet.lever_graphs_r1771, 0.002); end
  def test_lever_graphs_s1771; assert_in_delta(0.375, worksheet.lever_graphs_s1771, 0.002); end
  def test_lever_graphs_b1772; assert_in_epsilon(2.0, worksheet.lever_graphs_b1772, 0.002); end
  def test_lever_graphs_k1772; assert_in_delta(0.25, worksheet.lever_graphs_k1772, 0.002); end
  def test_lever_graphs_l1772; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1772, 0.002); end
  def test_lever_graphs_m1772; assert_in_delta(0.29615384615384616, worksheet.lever_graphs_m1772, 0.002); end
  def test_lever_graphs_n1772; assert_in_delta(0.3217948717948718, worksheet.lever_graphs_n1772, 0.002); end
  def test_lever_graphs_o1772; assert_in_delta(0.3474358974358974, worksheet.lever_graphs_o1772, 0.002); end
  def test_lever_graphs_p1772; assert_in_delta(0.3730769230769231, worksheet.lever_graphs_p1772, 0.002); end
  def test_lever_graphs_q1772; assert_in_delta(0.39871794871794874, worksheet.lever_graphs_q1772, 0.002); end
  def test_lever_graphs_r1772; assert_in_delta(0.42435897435897435, worksheet.lever_graphs_r1772, 0.002); end
  def test_lever_graphs_s1772; assert_in_delta(0.45, worksheet.lever_graphs_s1772, 0.002); end
  def test_lever_graphs_b1773; assert_in_epsilon(3.0, worksheet.lever_graphs_b1773, 0.002); end
  def test_lever_graphs_k1773; assert_in_delta(0.25, worksheet.lever_graphs_k1773, 0.002); end
  def test_lever_graphs_l1773; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1773, 0.002); end
  def test_lever_graphs_m1773; assert_in_delta(0.3028681318681319, worksheet.lever_graphs_m1773, 0.002); end
  def test_lever_graphs_n1773; assert_in_delta(0.3352234432234432, worksheet.lever_graphs_n1773, 0.002); end
  def test_lever_graphs_o1773; assert_in_delta(0.36757875457875455, worksheet.lever_graphs_o1773, 0.002); end
  def test_lever_graphs_p1773; assert_in_delta(0.3999340659340659, worksheet.lever_graphs_p1773, 0.002); end
  def test_lever_graphs_q1773; assert_in_delta(0.4322893772893773, worksheet.lever_graphs_q1773, 0.002); end
  def test_lever_graphs_r1773; assert_in_delta(0.4646446886446886, worksheet.lever_graphs_r1773, 0.002); end
  def test_lever_graphs_s1773; assert_in_delta(0.497, worksheet.lever_graphs_s1773, 0.002); end
  def test_lever_graphs_b1774; assert_in_epsilon(4.0, worksheet.lever_graphs_b1774, 0.002); end
  def test_lever_graphs_k1774; assert_in_delta(0.25, worksheet.lever_graphs_k1774, 0.002); end
  def test_lever_graphs_l1774; assert_in_delta(0.27051282051282055, worksheet.lever_graphs_l1774, 0.002); end
  def test_lever_graphs_m1774; assert_in_delta(0.311110989010989, worksheet.lever_graphs_m1774, 0.002); end
  def test_lever_graphs_n1774; assert_in_delta(0.35170915750915754, worksheet.lever_graphs_n1774, 0.002); end
  def test_lever_graphs_o1774; assert_in_delta(0.392307326007326, worksheet.lever_graphs_o1774, 0.002); end
  def test_lever_graphs_p1774; assert_in_delta(0.43290549450549454, worksheet.lever_graphs_p1774, 0.002); end
  def test_lever_graphs_q1774; assert_in_delta(0.47350366300366303, worksheet.lever_graphs_q1774, 0.002); end
  def test_lever_graphs_r1774; assert_in_delta(0.5141018315018315, worksheet.lever_graphs_r1774, 0.002); end
  def test_lever_graphs_s1774; assert_in_delta(0.5547, worksheet.lever_graphs_s1774, 0.002); end
  def test_lever_graphs_b1775; assert_equal("Comparator A", worksheet.lever_graphs_b1775); end
  def test_lever_graphs_b1776; assert_equal("Comparator B", worksheet.lever_graphs_b1776); end
  def test_lever_graphs_b1777; assert_equal("Comparator C", worksheet.lever_graphs_b1777); end
  def test_lever_graphs_d2144; assert_equal("Title", worksheet.lever_graphs_d2144); end
  def test_lever_graphs_e2144; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2144); end
  def test_lever_graphs_f2144; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2144); end
  def test_lever_graphs_g2144; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2144); end
  def test_lever_graphs_h2144; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2144); end
  def test_lever_graphs_i2144; assert_equal("Hydrogen", worksheet.lever_graphs_i2144); end
  def test_lever_graphs_d2145; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2145, 0.002); end
  def test_lever_graphs_e2145; assert_in_delta(0.9995553411198423, worksheet.lever_graphs_e2145, 0.002); end
  def test_lever_graphs_f2145; assert_in_delta(8.937397766306532e-08, worksheet.lever_graphs_f2145, 0.002); end
  def test_lever_graphs_g2145; assert_in_delta(0.0, (worksheet.lever_graphs_g2145||0), 0.002); end
  def test_lever_graphs_h2145; assert_in_delta(0.0004445695061800071, worksheet.lever_graphs_h2145, 0.002); end
  def test_lever_graphs_i2145; assert_in_delta(0.0, (worksheet.lever_graphs_i2145||0), 0.002); end
  def test_lever_graphs_d2146; assert_equal("2050: Level 1", worksheet.lever_graphs_d2146); end
  def test_lever_graphs_e2146; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_e2146, 0.002); end
  def test_lever_graphs_f2146; assert_in_delta(0.03, worksheet.lever_graphs_f2146, 0.002); end
  def test_lever_graphs_g2146; assert_in_delta(0.03, worksheet.lever_graphs_g2146, 0.002); end
  def test_lever_graphs_h2146; assert_in_delta(0.01, worksheet.lever_graphs_h2146, 0.002); end
  def test_lever_graphs_i2146; assert_in_delta(0.0, (worksheet.lever_graphs_i2146||0), 0.002); end
  def test_lever_graphs_d2147; assert_equal("2050: Level 2", worksheet.lever_graphs_d2147); end
  def test_lever_graphs_e2147; assert_in_delta(0.7499999999999999, worksheet.lever_graphs_e2147, 0.002); end
  def test_lever_graphs_f2147; assert_in_delta(0.05, worksheet.lever_graphs_f2147, 0.002); end
  def test_lever_graphs_g2147; assert_in_delta(0.05, worksheet.lever_graphs_g2147, 0.002); end
  def test_lever_graphs_h2147; assert_in_delta(0.15, worksheet.lever_graphs_h2147, 0.002); end
  def test_lever_graphs_i2147; assert_in_delta(0.0, (worksheet.lever_graphs_i2147||0), 0.002); end
  def test_lever_graphs_d2148; assert_equal("2050: Level 3", worksheet.lever_graphs_d2148); end
  def test_lever_graphs_e2148; assert_in_delta(0.4, worksheet.lever_graphs_e2148, 0.002); end
  def test_lever_graphs_f2148; assert_in_delta(0.1, worksheet.lever_graphs_f2148, 0.002); end
  def test_lever_graphs_g2148; assert_in_delta(0.1, worksheet.lever_graphs_g2148, 0.002); end
  def test_lever_graphs_h2148; assert_in_delta(0.3, worksheet.lever_graphs_h2148, 0.002); end
  def test_lever_graphs_i2148; assert_in_delta(0.1, worksheet.lever_graphs_i2148, 0.002); end
  def test_lever_graphs_d2149; assert_equal("2050: Level 4", worksheet.lever_graphs_d2149); end
  def test_lever_graphs_e2149; assert_in_delta(0.04999999999999999, worksheet.lever_graphs_e2149, 0.002); end
  def test_lever_graphs_f2149; assert_in_delta(0.2, worksheet.lever_graphs_f2149, 0.002); end
  def test_lever_graphs_g2149; assert_in_delta(0.15, worksheet.lever_graphs_g2149, 0.002); end
  def test_lever_graphs_h2149; assert_in_delta(0.4, worksheet.lever_graphs_h2149, 0.002); end
  def test_lever_graphs_i2149; assert_in_delta(0.2, worksheet.lever_graphs_i2149, 0.002); end
  def test_lever_graphs_d2131; assert_equal("Title", worksheet.lever_graphs_d2131); end
  def test_lever_graphs_e2131; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2131); end
  def test_lever_graphs_f2131; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2131); end
  def test_lever_graphs_g2131; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2131); end
  def test_lever_graphs_h2131; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2131); end
  def test_lever_graphs_i2131; assert_equal("Hydrogen", worksheet.lever_graphs_i2131); end
  def test_lever_graphs_d2132; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2132, 0.002); end
  def test_lever_graphs_e2132; assert_in_delta(0.988235872414889, worksheet.lever_graphs_e2132, 0.002); end
  def test_lever_graphs_f2132; assert_in_delta(0.00959176661788106, worksheet.lever_graphs_f2132, 0.002); end
  def test_lever_graphs_g2132; assert_in_delta(2.834105983229307e-08, worksheet.lever_graphs_g2132, 0.002); end
  def test_lever_graphs_h2132; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_h2132, 0.002); end
  def test_lever_graphs_i2132; assert_in_delta(0.0, (worksheet.lever_graphs_i2132||0), 0.002); end
  def test_lever_graphs_d2133; assert_equal("2050: Level 1", worksheet.lever_graphs_d2133); end
  def test_lever_graphs_e2133; assert_in_delta(0.9099999999999999, worksheet.lever_graphs_e2133, 0.002); end
  def test_lever_graphs_f2133; assert_in_delta(0.02, worksheet.lever_graphs_f2133, 0.002); end
  def test_lever_graphs_g2133; assert_in_delta(0.05, worksheet.lever_graphs_g2133, 0.002); end
  def test_lever_graphs_h2133; assert_in_delta(0.02, worksheet.lever_graphs_h2133, 0.002); end
  def test_lever_graphs_i2133; assert_in_delta(0.0, (worksheet.lever_graphs_i2133||0), 0.002); end
  def test_lever_graphs_d2134; assert_equal("2050: Level 2", worksheet.lever_graphs_d2134); end
  def test_lever_graphs_e2134; assert_in_delta(0.77, worksheet.lever_graphs_e2134, 0.002); end
  def test_lever_graphs_f2134; assert_in_delta(0.03, worksheet.lever_graphs_f2134, 0.002); end
  def test_lever_graphs_g2134; assert_in_delta(0.1, worksheet.lever_graphs_g2134, 0.002); end
  def test_lever_graphs_h2134; assert_in_delta(0.1, worksheet.lever_graphs_h2134, 0.002); end
  def test_lever_graphs_i2134; assert_in_delta(0.0, (worksheet.lever_graphs_i2134||0), 0.002); end
  def test_lever_graphs_d2135; assert_equal("2050: Level 3", worksheet.lever_graphs_d2135); end
  def test_lever_graphs_e2135; assert_in_delta(0.32999999999999996, worksheet.lever_graphs_e2135, 0.002); end
  def test_lever_graphs_f2135; assert_in_delta(0.07, worksheet.lever_graphs_f2135, 0.002); end
  def test_lever_graphs_g2135; assert_in_delta(0.25, worksheet.lever_graphs_g2135, 0.002); end
  def test_lever_graphs_h2135; assert_in_delta(0.2, worksheet.lever_graphs_h2135, 0.002); end
  def test_lever_graphs_i2135; assert_in_delta(0.15, worksheet.lever_graphs_i2135, 0.002); end
  def test_lever_graphs_d2136; assert_equal("2050: Level 4", worksheet.lever_graphs_d2136); end
  def test_lever_graphs_e2136; assert_in_delta(0.020000000000000073, worksheet.lever_graphs_e2136, 0.002); end
  def test_lever_graphs_f2136; assert_in_delta(0.1, worksheet.lever_graphs_f2136, 0.002); end
  def test_lever_graphs_g2136; assert_in_delta(0.33, worksheet.lever_graphs_g2136, 0.002); end
  def test_lever_graphs_h2136; assert_in_delta(0.35, worksheet.lever_graphs_h2136, 0.002); end
  def test_lever_graphs_i2136; assert_in_delta(0.2, worksheet.lever_graphs_i2136, 0.002); end
  def test_lever_graphs_d2170; assert_equal("Title", worksheet.lever_graphs_d2170); end
  def test_lever_graphs_e2170; assert_equal("Fuel-powered plane", worksheet.lever_graphs_e2170); end
  def test_lever_graphs_f2170; assert_equal("Hydrogen-powered plane", worksheet.lever_graphs_f2170); end
  def test_lever_graphs_d2171; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2171, 0.002); end
  def test_lever_graphs_e2171; assert_in_delta(1.0, worksheet.lever_graphs_e2171, 0.002); end
  def test_lever_graphs_f2171; assert_in_delta(0.0, (worksheet.lever_graphs_f2171||0), 0.002); end
  def test_lever_graphs_d2172; assert_equal("2050: Level 1", worksheet.lever_graphs_d2172); end
  def test_lever_graphs_e2172; assert_in_delta(1.0, worksheet.lever_graphs_e2172, 0.002); end
  def test_lever_graphs_f2172; assert_in_delta(0.0, (worksheet.lever_graphs_f2172||0), 0.002); end
  def test_lever_graphs_d2173; assert_equal("2050: Level 2", worksheet.lever_graphs_d2173); end
  def test_lever_graphs_e2173; assert_in_delta(1.0, worksheet.lever_graphs_e2173, 0.002); end
  def test_lever_graphs_f2173; assert_in_delta(0.0, (worksheet.lever_graphs_f2173||0), 0.002); end
  def test_lever_graphs_d2174; assert_equal("2050: Level 3", worksheet.lever_graphs_d2174); end
  def test_lever_graphs_e2174; assert_in_delta(0.95, worksheet.lever_graphs_e2174, 0.002); end
  def test_lever_graphs_f2174; assert_in_delta(0.05, worksheet.lever_graphs_f2174, 0.002); end
  def test_lever_graphs_d2175; assert_equal("2050: Level 4", worksheet.lever_graphs_d2175); end
  def test_lever_graphs_e2175; assert_in_delta(0.9, worksheet.lever_graphs_e2175, 0.002); end
  def test_lever_graphs_f2175; assert_in_delta(0.1, worksheet.lever_graphs_f2175, 0.002); end
  def test_lever_graphs_d2157; assert_equal("Title", worksheet.lever_graphs_d2157); end
  def test_lever_graphs_e2157; assert_equal("Fuel-powered train", worksheet.lever_graphs_e2157); end
  def test_lever_graphs_f2157; assert_equal("Electric-powered train", worksheet.lever_graphs_f2157); end
  def test_lever_graphs_d2158; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2158, 0.002); end
  def test_lever_graphs_e2158; assert_in_delta(0.1, worksheet.lever_graphs_e2158, 0.002); end
  def test_lever_graphs_f2158; assert_in_delta(0.9, worksheet.lever_graphs_f2158, 0.002); end
  def test_lever_graphs_d2159; assert_equal("2050: Level 1", worksheet.lever_graphs_d2159); end
  def test_lever_graphs_e2159; assert_in_delta(0.1, worksheet.lever_graphs_e2159, 0.002); end
  def test_lever_graphs_f2159; assert_in_delta(0.9, worksheet.lever_graphs_f2159, 0.002); end
  def test_lever_graphs_d2160; assert_equal("2050: Level 2", worksheet.lever_graphs_d2160); end
  def test_lever_graphs_e2160; assert_in_delta(0.05, worksheet.lever_graphs_e2160, 0.002); end
  def test_lever_graphs_f2160; assert_in_delta(0.95, worksheet.lever_graphs_f2160, 0.002); end
  def test_lever_graphs_d2161; assert_equal("2050: Level 3", worksheet.lever_graphs_d2161); end
  def test_lever_graphs_e2161; assert_in_delta(0.03, worksheet.lever_graphs_e2161, 0.002); end
  def test_lever_graphs_f2161; assert_in_delta(0.97, worksheet.lever_graphs_f2161, 0.002); end
  def test_lever_graphs_d2162; assert_equal("2050: Level 4", worksheet.lever_graphs_d2162); end
  def test_lever_graphs_e2162; assert_in_delta(0.0, (worksheet.lever_graphs_e2162||0), 0.002); end
  def test_lever_graphs_f2162; assert_in_delta(1.0, worksheet.lever_graphs_f2162, 0.002); end
  def test_lever_graphs_b1600; assert_equal("Year", worksheet.lever_graphs_b1600); end
  def test_lever_graphs_c1600; assert_equal("Level", worksheet.lever_graphs_c1600); end
  def test_lever_graphs_d1600; assert_equal("Title", worksheet.lever_graphs_d1600); end
  def test_lever_graphs_e1600; assert_equal("motorbike.passenger.urban.fuel", worksheet.lever_graphs_e1600); end
  def test_lever_graphs_f1600; assert_equal("motorbike.passenger.urban.elec", worksheet.lever_graphs_f1600); end
  def test_lever_graphs_g1600; assert_equal("car.passenger.urban.ICE.liquid", worksheet.lever_graphs_g1600); end
  def test_lever_graphs_h1600; assert_equal("car.passenger.urban.ICE.gas", worksheet.lever_graphs_h1600); end
  def test_lever_graphs_i1600; assert_equal("car.passenger.urban.PH", worksheet.lever_graphs_i1600); end
  def test_lever_graphs_j1600; assert_equal("car.passenger.urban.EV", worksheet.lever_graphs_j1600); end
  def test_lever_graphs_k1600; assert_equal("car.passenger.urban.H2", worksheet.lever_graphs_k1600); end
  def test_lever_graphs_l1600; assert_equal("motorbike.passenger.rural.fuel", worksheet.lever_graphs_l1600); end
  def test_lever_graphs_m1600; assert_equal("motorbike.passenger.rural.elec", worksheet.lever_graphs_m1600); end
  def test_lever_graphs_n1600; assert_equal("car.passenger.rural.ICE.liquid", worksheet.lever_graphs_n1600); end
  def test_lever_graphs_o1600; assert_equal("car.passenger.rural.ICE.gas", worksheet.lever_graphs_o1600); end
  def test_lever_graphs_p1600; assert_equal("car.passenger.rural.PH", worksheet.lever_graphs_p1600); end
  def test_lever_graphs_q1600; assert_equal("car.passenger.rural.EV", worksheet.lever_graphs_q1600); end
  def test_lever_graphs_r1600; assert_equal("car.passenger.rural.H2", worksheet.lever_graphs_r1600); end
  def test_lever_graphs_b1601; assert_in_epsilon(2011.0, worksheet.lever_graphs_b1601, 0.002); end
  def test_lever_graphs_c1601; assert_in_delta(1.0, worksheet.lever_graphs_c1601, 0.002); end
  def test_lever_graphs_d1601; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1601, 0.002); end
  def test_lever_graphs_e1601; assert_in_delta(1.0, worksheet.lever_graphs_e1601, 0.002); end
  def test_lever_graphs_f1601; assert_in_delta(1.0, worksheet.lever_graphs_f1601, 0.002); end
  def test_lever_graphs_g1601; assert_in_delta(1.0, worksheet.lever_graphs_g1601, 0.002); end
  def test_lever_graphs_h1601; assert_in_delta(1.0, worksheet.lever_graphs_h1601, 0.002); end
  def test_lever_graphs_i1601; assert_in_delta(1.0, worksheet.lever_graphs_i1601, 0.002); end
  def test_lever_graphs_j1601; assert_in_delta(1.0, worksheet.lever_graphs_j1601, 0.002); end
  def test_lever_graphs_k1601; assert_in_delta(1.0, worksheet.lever_graphs_k1601, 0.002); end
  def test_lever_graphs_l1601; assert_in_delta(1.0, worksheet.lever_graphs_l1601, 0.002); end
  def test_lever_graphs_m1601; assert_in_delta(1.0, worksheet.lever_graphs_m1601, 0.002); end
  def test_lever_graphs_n1601; assert_in_delta(1.0, worksheet.lever_graphs_n1601, 0.002); end
  def test_lever_graphs_o1601; assert_in_delta(1.0, worksheet.lever_graphs_o1601, 0.002); end
  def test_lever_graphs_p1601; assert_in_delta(1.0, worksheet.lever_graphs_p1601, 0.002); end
  def test_lever_graphs_q1601; assert_in_delta(1.0, worksheet.lever_graphs_q1601, 0.002); end
  def test_lever_graphs_r1601; assert_in_delta(1.0, worksheet.lever_graphs_r1601, 0.002); end
  def test_lever_graphs_b1602; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1602, 0.002); end
  def test_lever_graphs_c1602; assert_in_delta(1.0, worksheet.lever_graphs_c1602, 0.002); end
  def test_lever_graphs_d1602; assert_equal("2050: Level 1", worksheet.lever_graphs_d1602); end
  def test_lever_graphs_e1602; assert_in_delta(0.8, worksheet.lever_graphs_e1602, 0.002); end
  def test_lever_graphs_f1602; assert_in_delta(0.8, worksheet.lever_graphs_f1602, 0.002); end
  def test_lever_graphs_g1602; assert_in_delta(0.8, worksheet.lever_graphs_g1602, 0.002); end
  def test_lever_graphs_h1602; assert_in_delta(0.8, worksheet.lever_graphs_h1602, 0.002); end
  def test_lever_graphs_i1602; assert_in_delta(0.8, worksheet.lever_graphs_i1602, 0.002); end
  def test_lever_graphs_j1602; assert_in_delta(0.8, worksheet.lever_graphs_j1602, 0.002); end
  def test_lever_graphs_k1602; assert_in_delta(0.8, worksheet.lever_graphs_k1602, 0.002); end
  def test_lever_graphs_l1602; assert_in_delta(0.9, worksheet.lever_graphs_l1602, 0.002); end
  def test_lever_graphs_m1602; assert_in_delta(0.9, worksheet.lever_graphs_m1602, 0.002); end
  def test_lever_graphs_n1602; assert_in_delta(0.8, worksheet.lever_graphs_n1602, 0.002); end
  def test_lever_graphs_o1602; assert_in_delta(0.8, worksheet.lever_graphs_o1602, 0.002); end
  def test_lever_graphs_p1602; assert_in_delta(0.8, worksheet.lever_graphs_p1602, 0.002); end
  def test_lever_graphs_q1602; assert_in_delta(0.8, worksheet.lever_graphs_q1602, 0.002); end
  def test_lever_graphs_r1602; assert_in_delta(0.8, worksheet.lever_graphs_r1602, 0.002); end
  def test_lever_graphs_b1603; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1603, 0.002); end
  def test_lever_graphs_c1603; assert_in_epsilon(2.0, worksheet.lever_graphs_c1603, 0.002); end
  def test_lever_graphs_d1603; assert_equal("2050: Level 2", worksheet.lever_graphs_d1603); end
  def test_lever_graphs_e1603; assert_in_delta(1.0, worksheet.lever_graphs_e1603, 0.002); end
  def test_lever_graphs_f1603; assert_in_delta(1.0, worksheet.lever_graphs_f1603, 0.002); end
  def test_lever_graphs_g1603; assert_in_delta(1.0, worksheet.lever_graphs_g1603, 0.002); end
  def test_lever_graphs_h1603; assert_in_delta(1.0, worksheet.lever_graphs_h1603, 0.002); end
  def test_lever_graphs_i1603; assert_in_delta(1.0, worksheet.lever_graphs_i1603, 0.002); end
  def test_lever_graphs_j1603; assert_in_delta(1.0, worksheet.lever_graphs_j1603, 0.002); end
  def test_lever_graphs_k1603; assert_in_delta(1.0, worksheet.lever_graphs_k1603, 0.002); end
  def test_lever_graphs_l1603; assert_in_delta(1.0, worksheet.lever_graphs_l1603, 0.002); end
  def test_lever_graphs_m1603; assert_in_delta(1.0, worksheet.lever_graphs_m1603, 0.002); end
  def test_lever_graphs_n1603; assert_in_delta(1.0, worksheet.lever_graphs_n1603, 0.002); end
  def test_lever_graphs_o1603; assert_in_delta(1.0, worksheet.lever_graphs_o1603, 0.002); end
  def test_lever_graphs_p1603; assert_in_delta(1.0, worksheet.lever_graphs_p1603, 0.002); end
  def test_lever_graphs_q1603; assert_in_delta(1.0, worksheet.lever_graphs_q1603, 0.002); end
  def test_lever_graphs_r1603; assert_in_delta(1.0, worksheet.lever_graphs_r1603, 0.002); end
  def test_lever_graphs_b1604; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1604, 0.002); end
  def test_lever_graphs_c1604; assert_in_epsilon(3.0, worksheet.lever_graphs_c1604, 0.002); end
  def test_lever_graphs_d1604; assert_equal("2050: Level 3", worksheet.lever_graphs_d1604); end
  def test_lever_graphs_e1604; assert_in_epsilon(1.25, worksheet.lever_graphs_e1604, 0.002); end
  def test_lever_graphs_f1604; assert_in_epsilon(1.25, worksheet.lever_graphs_f1604, 0.002); end
  def test_lever_graphs_g1604; assert_in_epsilon(2.0, worksheet.lever_graphs_g1604, 0.002); end
  def test_lever_graphs_h1604; assert_in_epsilon(2.0, worksheet.lever_graphs_h1604, 0.002); end
  def test_lever_graphs_i1604; assert_in_epsilon(2.0, worksheet.lever_graphs_i1604, 0.002); end
  def test_lever_graphs_j1604; assert_in_epsilon(2.0, worksheet.lever_graphs_j1604, 0.002); end
  def test_lever_graphs_k1604; assert_in_epsilon(2.0, worksheet.lever_graphs_k1604, 0.002); end
  def test_lever_graphs_l1604; assert_in_epsilon(1.25, worksheet.lever_graphs_l1604, 0.002); end
  def test_lever_graphs_m1604; assert_in_epsilon(1.25, worksheet.lever_graphs_m1604, 0.002); end
  def test_lever_graphs_n1604; assert_in_epsilon(1.5, worksheet.lever_graphs_n1604, 0.002); end
  def test_lever_graphs_o1604; assert_in_epsilon(1.5, worksheet.lever_graphs_o1604, 0.002); end
  def test_lever_graphs_p1604; assert_in_epsilon(1.5, worksheet.lever_graphs_p1604, 0.002); end
  def test_lever_graphs_q1604; assert_in_epsilon(1.5, worksheet.lever_graphs_q1604, 0.002); end
  def test_lever_graphs_r1604; assert_in_epsilon(1.5, worksheet.lever_graphs_r1604, 0.002); end
  def test_lever_graphs_b1605; assert_in_epsilon(2050.0, worksheet.lever_graphs_b1605, 0.002); end
  def test_lever_graphs_c1605; assert_in_epsilon(4.0, worksheet.lever_graphs_c1605, 0.002); end
  def test_lever_graphs_d1605; assert_equal("2050: Level 4", worksheet.lever_graphs_d1605); end
  def test_lever_graphs_e1605; assert_in_epsilon(1.5, worksheet.lever_graphs_e1605, 0.002); end
  def test_lever_graphs_f1605; assert_in_epsilon(1.5, worksheet.lever_graphs_f1605, 0.002); end
  def test_lever_graphs_g1605; assert_in_epsilon(3.6, worksheet.lever_graphs_g1605, 0.002); end
  def test_lever_graphs_h1605; assert_in_epsilon(3.6, worksheet.lever_graphs_h1605, 0.002); end
  def test_lever_graphs_i1605; assert_in_epsilon(3.6, worksheet.lever_graphs_i1605, 0.002); end
  def test_lever_graphs_j1605; assert_in_epsilon(3.6, worksheet.lever_graphs_j1605, 0.002); end
  def test_lever_graphs_k1605; assert_in_epsilon(3.6, worksheet.lever_graphs_k1605, 0.002); end
  def test_lever_graphs_l1605; assert_in_epsilon(1.5, worksheet.lever_graphs_l1605, 0.002); end
  def test_lever_graphs_m1605; assert_in_epsilon(1.5, worksheet.lever_graphs_m1605, 0.002); end
  def test_lever_graphs_n1605; assert_in_epsilon(2.0, worksheet.lever_graphs_n1605, 0.002); end
  def test_lever_graphs_o1605; assert_in_epsilon(2.0, worksheet.lever_graphs_o1605, 0.002); end
  def test_lever_graphs_p1605; assert_in_epsilon(2.0, worksheet.lever_graphs_p1605, 0.002); end
  def test_lever_graphs_q1605; assert_in_epsilon(2.0, worksheet.lever_graphs_q1605, 0.002); end
  def test_lever_graphs_r1605; assert_in_epsilon(2.0, worksheet.lever_graphs_r1605, 0.002); end
  def test_lever_graphs_b1590; assert_equal("Level", worksheet.lever_graphs_b1590); end
  def test_lever_graphs_c1590; assert_equal("1975", worksheet.lever_graphs_c1590); end
  def test_lever_graphs_d1590; assert_equal("1980", worksheet.lever_graphs_d1590); end
  def test_lever_graphs_e1590; assert_equal("1985", worksheet.lever_graphs_e1590); end
  def test_lever_graphs_f1590; assert_equal("1990", worksheet.lever_graphs_f1590); end
  def test_lever_graphs_g1590; assert_equal("1995", worksheet.lever_graphs_g1590); end
  def test_lever_graphs_h1590; assert_equal("2000", worksheet.lever_graphs_h1590); end
  def test_lever_graphs_i1590; assert_equal("2005", worksheet.lever_graphs_i1590); end
  def test_lever_graphs_j1590; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1590, 0.002); end
  def test_lever_graphs_k1590; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1590, 0.002); end
  def test_lever_graphs_l1590; assert_equal("2015", worksheet.lever_graphs_l1590); end
  def test_lever_graphs_m1590; assert_equal("2020", worksheet.lever_graphs_m1590); end
  def test_lever_graphs_n1590; assert_equal("2025", worksheet.lever_graphs_n1590); end
  def test_lever_graphs_o1590; assert_equal("2030", worksheet.lever_graphs_o1590); end
  def test_lever_graphs_p1590; assert_equal("2035", worksheet.lever_graphs_p1590); end
  def test_lever_graphs_q1590; assert_equal("2040", worksheet.lever_graphs_q1590); end
  def test_lever_graphs_r1590; assert_equal("2045", worksheet.lever_graphs_r1590); end
  def test_lever_graphs_s1590; assert_equal("2050", worksheet.lever_graphs_s1590); end
  def test_lever_graphs_b1591; assert_equal("Historic data", worksheet.lever_graphs_b1591); end
  def test_lever_graphs_b1592; assert_in_delta(1.0, worksheet.lever_graphs_b1592, 0.002); end
  def test_lever_graphs_k1592; assert_in_delta(1.0, worksheet.lever_graphs_k1592, 0.002); end
  def test_lever_graphs_l1592; assert_in_delta(1.0, worksheet.lever_graphs_l1592, 0.002); end
  def test_lever_graphs_m1592; assert_in_delta(0.9714285714285714, worksheet.lever_graphs_m1592, 0.002); end
  def test_lever_graphs_n1592; assert_in_delta(0.9428571428571428, worksheet.lever_graphs_n1592, 0.002); end
  def test_lever_graphs_o1592; assert_in_delta(0.9142857142857143, worksheet.lever_graphs_o1592, 0.002); end
  def test_lever_graphs_p1592; assert_in_delta(0.8857142857142857, worksheet.lever_graphs_p1592, 0.002); end
  def test_lever_graphs_q1592; assert_in_delta(0.8571428571428572, worksheet.lever_graphs_q1592, 0.002); end
  def test_lever_graphs_r1592; assert_in_delta(0.8285714285714285, worksheet.lever_graphs_r1592, 0.002); end
  def test_lever_graphs_s1592; assert_in_delta(0.8, worksheet.lever_graphs_s1592, 0.002); end
  def test_lever_graphs_b1593; assert_in_epsilon(2.0, worksheet.lever_graphs_b1593, 0.002); end
  def test_lever_graphs_k1593; assert_in_delta(1.0, worksheet.lever_graphs_k1593, 0.002); end
  def test_lever_graphs_l1593; assert_in_delta(1.0, worksheet.lever_graphs_l1593, 0.002); end
  def test_lever_graphs_m1593; assert_in_delta(1.0, worksheet.lever_graphs_m1593, 0.002); end
  def test_lever_graphs_n1593; assert_in_delta(1.0, worksheet.lever_graphs_n1593, 0.002); end
  def test_lever_graphs_o1593; assert_in_delta(1.0, worksheet.lever_graphs_o1593, 0.002); end
  def test_lever_graphs_p1593; assert_in_delta(1.0, worksheet.lever_graphs_p1593, 0.002); end
  def test_lever_graphs_q1593; assert_in_delta(1.0, worksheet.lever_graphs_q1593, 0.002); end
  def test_lever_graphs_r1593; assert_in_delta(1.0, worksheet.lever_graphs_r1593, 0.002); end
  def test_lever_graphs_s1593; assert_in_delta(1.0, worksheet.lever_graphs_s1593, 0.002); end
  def test_lever_graphs_b1594; assert_in_epsilon(3.0, worksheet.lever_graphs_b1594, 0.002); end
  def test_lever_graphs_k1594; assert_in_delta(1.0, worksheet.lever_graphs_k1594, 0.002); end
  def test_lever_graphs_l1594; assert_in_delta(1.0, worksheet.lever_graphs_l1594, 0.002); end
  def test_lever_graphs_m1594; assert_in_epsilon(1.1428571428571428, worksheet.lever_graphs_m1594, 0.002); end
  def test_lever_graphs_n1594; assert_in_epsilon(1.2857142857142856, worksheet.lever_graphs_n1594, 0.002); end
  def test_lever_graphs_o1594; assert_in_epsilon(1.4285714285714284, worksheet.lever_graphs_o1594, 0.002); end
  def test_lever_graphs_p1594; assert_in_epsilon(1.5714285714285714, worksheet.lever_graphs_p1594, 0.002); end
  def test_lever_graphs_q1594; assert_in_epsilon(1.7142857142857144, worksheet.lever_graphs_q1594, 0.002); end
  def test_lever_graphs_r1594; assert_in_epsilon(1.857142857142857, worksheet.lever_graphs_r1594, 0.002); end
  def test_lever_graphs_s1594; assert_in_epsilon(2.0, worksheet.lever_graphs_s1594, 0.002); end
  def test_lever_graphs_b1595; assert_in_epsilon(4.0, worksheet.lever_graphs_b1595, 0.002); end
  def test_lever_graphs_k1595; assert_in_delta(1.0, worksheet.lever_graphs_k1595, 0.002); end
  def test_lever_graphs_l1595; assert_in_delta(1.0, worksheet.lever_graphs_l1595, 0.002); end
  def test_lever_graphs_m1595; assert_in_epsilon(1.3714285714285714, worksheet.lever_graphs_m1595, 0.002); end
  def test_lever_graphs_n1595; assert_in_epsilon(1.7428571428571429, worksheet.lever_graphs_n1595, 0.002); end
  def test_lever_graphs_o1595; assert_in_epsilon(2.114285714285714, worksheet.lever_graphs_o1595, 0.002); end
  def test_lever_graphs_p1595; assert_in_epsilon(2.4857142857142853, worksheet.lever_graphs_p1595, 0.002); end
  def test_lever_graphs_q1595; assert_in_epsilon(2.857142857142857, worksheet.lever_graphs_q1595, 0.002); end
  def test_lever_graphs_r1595; assert_in_epsilon(3.228571428571428, worksheet.lever_graphs_r1595, 0.002); end
  def test_lever_graphs_s1595; assert_in_epsilon(3.6, worksheet.lever_graphs_s1595, 0.002); end
  def test_lever_graphs_c1649; assert_equal("1975", worksheet.lever_graphs_c1649); end
  def test_lever_graphs_d1649; assert_equal("1980", worksheet.lever_graphs_d1649); end
  def test_lever_graphs_e1649; assert_equal("1985", worksheet.lever_graphs_e1649); end
  def test_lever_graphs_f1649; assert_equal("1990", worksheet.lever_graphs_f1649); end
  def test_lever_graphs_g1649; assert_equal("1995", worksheet.lever_graphs_g1649); end
  def test_lever_graphs_h1649; assert_equal("2000", worksheet.lever_graphs_h1649); end
  def test_lever_graphs_i1649; assert_equal("2005", worksheet.lever_graphs_i1649); end
  def test_lever_graphs_j1649; assert_equal("2010", worksheet.lever_graphs_j1649); end
  def test_lever_graphs_k1649; assert_equal("2011", worksheet.lever_graphs_k1649); end
  def test_lever_graphs_l1649; assert_equal("2015", worksheet.lever_graphs_l1649); end
  def test_lever_graphs_m1649; assert_equal("2020", worksheet.lever_graphs_m1649); end
  def test_lever_graphs_n1649; assert_equal("2025", worksheet.lever_graphs_n1649); end
  def test_lever_graphs_o1649; assert_equal("2030", worksheet.lever_graphs_o1649); end
  def test_lever_graphs_p1649; assert_equal("2035", worksheet.lever_graphs_p1649); end
  def test_lever_graphs_q1649; assert_equal("2040", worksheet.lever_graphs_q1649); end
  def test_lever_graphs_r1649; assert_equal("2045", worksheet.lever_graphs_r1649); end
  def test_lever_graphs_s1649; assert_equal("2050", worksheet.lever_graphs_s1649); end
  def test_lever_graphs_b1650; assert_equal("Historic data", worksheet.lever_graphs_b1650); end
  def test_lever_graphs_c1650; assert_in_delta(0.377, worksheet.lever_graphs_c1650, 0.002); end
  def test_lever_graphs_d1650; assert_in_delta(0.39399999999999996, worksheet.lever_graphs_d1650, 0.002); end
  def test_lever_graphs_e1650; assert_in_delta(0.41200000000000003, worksheet.lever_graphs_e1650, 0.002); end
  def test_lever_graphs_f1650; assert_in_delta(0.43, worksheet.lever_graphs_f1650, 0.002); end
  def test_lever_graphs_g1650; assert_in_delta(0.44799999999999995, worksheet.lever_graphs_g1650, 0.002); end
  def test_lever_graphs_h1650; assert_in_delta(0.467, worksheet.lever_graphs_h1650, 0.002); end
  def test_lever_graphs_i1650; assert_in_delta(0.491, worksheet.lever_graphs_i1650, 0.002); end
  def test_lever_graphs_j1650; assert_in_delta(0.516, worksheet.lever_graphs_j1650, 0.002); end
  def test_lever_graphs_k1650; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1650, 0.002); end
  def test_lever_graphs_b1651; assert_in_delta(1.0, worksheet.lever_graphs_b1651, 0.002); end
  def test_lever_graphs_k1651; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1651, 0.002); end
  def test_lever_graphs_l1651; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1651, 0.002); end
  def test_lever_graphs_m1651; assert_in_delta(0.57, worksheet.lever_graphs_m1651, 0.002); end
  def test_lever_graphs_n1651; assert_in_delta(0.6, worksheet.lever_graphs_n1651, 0.002); end
  def test_lever_graphs_o1651; assert_in_delta(0.63, worksheet.lever_graphs_o1651, 0.002); end
  def test_lever_graphs_p1651; assert_in_delta(0.65, worksheet.lever_graphs_p1651, 0.002); end
  def test_lever_graphs_q1651; assert_in_delta(0.68, worksheet.lever_graphs_q1651, 0.002); end
  def test_lever_graphs_r1651; assert_in_delta(0.71, worksheet.lever_graphs_r1651, 0.002); end
  def test_lever_graphs_s1651; assert_in_delta(0.75, worksheet.lever_graphs_s1651, 0.002); end
  def test_lever_graphs_b1652; assert_in_epsilon(2.0, worksheet.lever_graphs_b1652, 0.002); end
  def test_lever_graphs_k1652; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1652, 0.002); end
  def test_lever_graphs_l1652; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1652, 0.002); end
  def test_lever_graphs_m1652; assert_in_delta(0.562155760202834, worksheet.lever_graphs_m1652, 0.002); end
  def test_lever_graphs_n1652; assert_in_delta(0.582151835653899, worksheet.lever_graphs_n1652, 0.002); end
  def test_lever_graphs_o1652; assert_in_delta(0.6003793471001849, worksheet.lever_graphs_o1652, 0.002); end
  def test_lever_graphs_p1652; assert_in_delta(0.61694601015062, worksheet.lever_graphs_p1652, 0.002); end
  def test_lever_graphs_q1652; assert_in_delta(0.632327785387248, worksheet.lever_graphs_q1652, 0.002); end
  def test_lever_graphs_r1652; assert_in_delta(0.647898600138288, worksheet.lever_graphs_r1652, 0.002); end
  def test_lever_graphs_s1652; assert_in_delta(0.663663288223238, worksheet.lever_graphs_s1652, 0.002); end
  def test_lever_graphs_b1653; assert_in_epsilon(3.0, worksheet.lever_graphs_b1653, 0.002); end
  def test_lever_graphs_k1653; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1653, 0.002); end
  def test_lever_graphs_l1653; assert_in_delta(0.53, worksheet.lever_graphs_l1653, 0.002); end
  def test_lever_graphs_m1653; assert_in_delta(0.54, worksheet.lever_graphs_m1653, 0.002); end
  def test_lever_graphs_n1653; assert_in_delta(0.55, worksheet.lever_graphs_n1653, 0.002); end
  def test_lever_graphs_o1653; assert_in_delta(0.56, worksheet.lever_graphs_o1653, 0.002); end
  def test_lever_graphs_p1653; assert_in_delta(0.57, worksheet.lever_graphs_p1653, 0.002); end
  def test_lever_graphs_q1653; assert_in_delta(0.57, worksheet.lever_graphs_q1653, 0.002); end
  def test_lever_graphs_r1653; assert_in_delta(0.57, worksheet.lever_graphs_r1653, 0.002); end
  def test_lever_graphs_s1653; assert_in_delta(0.58, worksheet.lever_graphs_s1653, 0.002); end
  def test_lever_graphs_b1654; assert_equal("Comparator A", worksheet.lever_graphs_b1654); end
  def test_lever_graphs_b1655; assert_equal("Comparator B", worksheet.lever_graphs_b1655); end
  def test_lever_graphs_b1656; assert_equal("Comparator C", worksheet.lever_graphs_b1656); end
  def test_lever_graphs_b3684; assert_equal("Type of travel", worksheet.lever_graphs_b3684); end
  def test_lever_graphs_c3684; assert_equal("Level", worksheet.lever_graphs_c3684); end
  def test_lever_graphs_e3684; assert_equal("1985", worksheet.lever_graphs_e3684); end
  def test_lever_graphs_f3684; assert_equal("1990", worksheet.lever_graphs_f3684); end
  def test_lever_graphs_g3684; assert_equal("1995", worksheet.lever_graphs_g3684); end
  def test_lever_graphs_h3684; assert_equal("2000", worksheet.lever_graphs_h3684); end
  def test_lever_graphs_i3684; assert_equal("2005", worksheet.lever_graphs_i3684); end
  def test_lever_graphs_j3684; assert_equal("2010", worksheet.lever_graphs_j3684); end
  def test_lever_graphs_k3684; assert_equal("2011", worksheet.lever_graphs_k3684); end
  def test_lever_graphs_l3684; assert_equal("2015", worksheet.lever_graphs_l3684); end
  def test_lever_graphs_m3684; assert_equal("2020", worksheet.lever_graphs_m3684); end
  def test_lever_graphs_n3684; assert_equal("2025", worksheet.lever_graphs_n3684); end
  def test_lever_graphs_o3684; assert_equal("2030", worksheet.lever_graphs_o3684); end
  def test_lever_graphs_p3684; assert_equal("2035", worksheet.lever_graphs_p3684); end
  def test_lever_graphs_q3684; assert_equal("2040", worksheet.lever_graphs_q3684); end
  def test_lever_graphs_r3684; assert_equal("2045", worksheet.lever_graphs_r3684); end
  def test_lever_graphs_s3684; assert_equal("2050", worksheet.lever_graphs_s3684); end
  def test_lever_graphs_b3685; assert_equal("Rural", worksheet.lever_graphs_b3685); end
  def test_lever_graphs_c3685; assert_in_delta(1.0, worksheet.lever_graphs_c3685, 0.002); end
  def test_lever_graphs_k3685; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3685, 0.002); end
  def test_lever_graphs_l3685; assert_in_delta(0.452875268245947, worksheet.lever_graphs_l3685, 0.002); end
  def test_lever_graphs_m3685; assert_in_delta(0.47038039960285094, worksheet.lever_graphs_m3685, 0.002); end
  def test_lever_graphs_n3685; assert_in_delta(0.49133825864326214, worksheet.lever_graphs_n3685, 0.002); end
  def test_lever_graphs_o3685; assert_in_delta(0.5141945022474428, worksheet.lever_graphs_o3685, 0.002); end
  def test_lever_graphs_p3685; assert_in_delta(0.5398452090051165, worksheet.lever_graphs_p3685, 0.002); end
  def test_lever_graphs_q3685; assert_in_delta(0.5670283837507971, worksheet.lever_graphs_q3685, 0.002); end
  def test_lever_graphs_r3685; assert_in_delta(0.5944697643056738, worksheet.lever_graphs_r3685, 0.002); end
  def test_lever_graphs_s3685; assert_in_delta(0.6237290029155924, worksheet.lever_graphs_s3685, 0.002); end
  def test_lever_graphs_b3686; assert_equal("Rural", worksheet.lever_graphs_b3686); end
  def test_lever_graphs_c3686; assert_in_epsilon(2.0, worksheet.lever_graphs_c3686, 0.002); end
  def test_lever_graphs_k3686; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3686, 0.002); end
  def test_lever_graphs_l3686; assert_in_delta(0.452875268245947, worksheet.lever_graphs_l3686, 0.002); end
  def test_lever_graphs_m3686; assert_in_delta(0.46167995638201903, worksheet.lever_graphs_m3686, 0.002); end
  def test_lever_graphs_n3686; assert_in_delta(0.47623843698114227, worksheet.lever_graphs_n3686, 0.002); end
  def test_lever_graphs_o3686; assert_in_delta(0.49344008170624554, worksheet.lever_graphs_o3686, 0.002); end
  def test_lever_graphs_p3686; assert_in_delta(0.5147355882892833, worksheet.lever_graphs_p3686, 0.002); end
  def test_lever_graphs_q3686; assert_in_delta(0.5365970125755385, worksheet.lever_graphs_q3686, 0.002); end
  def test_lever_graphs_r3686; assert_in_delta(0.5608182295498726, worksheet.lever_graphs_r3686, 0.002); end
  def test_lever_graphs_s3686; assert_in_delta(0.587268063684593, worksheet.lever_graphs_s3686, 0.002); end
  def test_lever_graphs_b3687; assert_equal("Rural", worksheet.lever_graphs_b3687); end
  def test_lever_graphs_c3687; assert_in_epsilon(3.0, worksheet.lever_graphs_c3687, 0.002); end
  def test_lever_graphs_k3687; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3687, 0.002); end
  def test_lever_graphs_l3687; assert_in_delta(0.452875268245947, worksheet.lever_graphs_l3687, 0.002); end
  def test_lever_graphs_m3687; assert_in_delta(0.45049480052740243, worksheet.lever_graphs_m3687, 0.002); end
  def test_lever_graphs_n3687; assert_in_delta(0.4532219393307126, worksheet.lever_graphs_n3687, 0.002); end
  def test_lever_graphs_o3687; assert_in_delta(0.4569478634508844, worksheet.lever_graphs_o3687, 0.002); end
  def test_lever_graphs_p3687; assert_in_delta(0.4629666675475723, worksheet.lever_graphs_p3687, 0.002); end
  def test_lever_graphs_q3687; assert_in_delta(0.4709110208461635, worksheet.lever_graphs_q3687, 0.002); end
  def test_lever_graphs_r3687; assert_in_delta(0.4818478798713576, worksheet.lever_graphs_r3687, 0.002); end
  def test_lever_graphs_s3687; assert_in_delta(0.4942634035579052, worksheet.lever_graphs_s3687, 0.002); end
  def test_lever_graphs_b3688; assert_equal("Rural", worksheet.lever_graphs_b3688); end
  def test_lever_graphs_c3688; assert_in_epsilon(4.0, worksheet.lever_graphs_c3688, 0.002); end
  def test_lever_graphs_k3688; assert_in_delta(0.451433121898344, worksheet.lever_graphs_k3688, 0.002); end
  def test_lever_graphs_l3688; assert_in_delta(0.452875268245947, worksheet.lever_graphs_l3688, 0.002); end
  def test_lever_graphs_m3688; assert_in_delta(0.4397813211339037, worksheet.lever_graphs_m3688, 0.002); end
  def test_lever_graphs_n3688; assert_in_delta(0.4303502963755845, worksheet.lever_graphs_n3688, 0.002); end
  def test_lever_graphs_o3688; assert_in_delta(0.4230108737139413, worksheet.lever_graphs_o3688, 0.002); end
  def test_lever_graphs_p3688; assert_in_delta(0.41846106641810776, worksheet.lever_graphs_p3688, 0.002); end
  def test_lever_graphs_q3688; assert_in_delta(0.4178863344040514, worksheet.lever_graphs_q3688, 0.002); end
  def test_lever_graphs_r3688; assert_in_delta(0.42032674538366277, worksheet.lever_graphs_r3688, 0.002); end
  def test_lever_graphs_s3688; assert_in_delta(0.4241139365231887, worksheet.lever_graphs_s3688, 0.002); end
  def test_lever_graphs_b3694; assert_equal("Type of travel", worksheet.lever_graphs_b3694); end
  def test_lever_graphs_c3694; assert_equal("Level", worksheet.lever_graphs_c3694); end
  def test_lever_graphs_e3694; assert_equal("1985", worksheet.lever_graphs_e3694); end
  def test_lever_graphs_f3694; assert_equal("1990", worksheet.lever_graphs_f3694); end
  def test_lever_graphs_g3694; assert_equal("1995", worksheet.lever_graphs_g3694); end
  def test_lever_graphs_h3694; assert_equal("2000", worksheet.lever_graphs_h3694); end
  def test_lever_graphs_i3694; assert_equal("2005", worksheet.lever_graphs_i3694); end
  def test_lever_graphs_j3694; assert_equal("2010", worksheet.lever_graphs_j3694); end
  def test_lever_graphs_k3694; assert_equal("2011", worksheet.lever_graphs_k3694); end
  def test_lever_graphs_l3694; assert_equal("2015", worksheet.lever_graphs_l3694); end
  def test_lever_graphs_m3694; assert_equal("2020", worksheet.lever_graphs_m3694); end
  def test_lever_graphs_n3694; assert_equal("2025", worksheet.lever_graphs_n3694); end
  def test_lever_graphs_o3694; assert_equal("2030", worksheet.lever_graphs_o3694); end
  def test_lever_graphs_p3694; assert_equal("2035", worksheet.lever_graphs_p3694); end
  def test_lever_graphs_q3694; assert_equal("2040", worksheet.lever_graphs_q3694); end
  def test_lever_graphs_r3694; assert_equal("2045", worksheet.lever_graphs_r3694); end
  def test_lever_graphs_s3694; assert_equal("2050", worksheet.lever_graphs_s3694); end
  def test_lever_graphs_b3695; assert_equal("Rural", worksheet.lever_graphs_b3695); end
  def test_lever_graphs_c3695; assert_in_delta(1.0, worksheet.lever_graphs_c3695, 0.002); end
  def test_lever_graphs_k3695; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3695, 0.002); end
  def test_lever_graphs_l3695; assert_in_delta(0.41296079886690196, worksheet.lever_graphs_l3695, 0.002); end
  def test_lever_graphs_m3695; assert_in_delta(0.4379196386250305, worksheet.lever_graphs_m3695, 0.002); end
  def test_lever_graphs_n3695; assert_in_delta(0.469187189789365, worksheet.lever_graphs_n3695, 0.002); end
  def test_lever_graphs_o3695; assert_in_delta(0.5017431506647431, worksheet.lever_graphs_o3695, 0.002); end
  def test_lever_graphs_p3695; assert_in_delta(0.536280224007743, worksheet.lever_graphs_p3695, 0.002); end
  def test_lever_graphs_q3695; assert_in_delta(0.5719688646074959, worksheet.lever_graphs_q3695, 0.002); end
  def test_lever_graphs_r3695; assert_in_delta(0.6081300605187934, worksheet.lever_graphs_r3695, 0.002); end
  def test_lever_graphs_s3695; assert_in_delta(0.6450078106825212, worksheet.lever_graphs_s3695, 0.002); end
  def test_lever_graphs_b3696; assert_equal("Rural", worksheet.lever_graphs_b3696); end
  def test_lever_graphs_c3696; assert_in_epsilon(2.0, worksheet.lever_graphs_c3696, 0.002); end
  def test_lever_graphs_k3696; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3696, 0.002); end
  def test_lever_graphs_l3696; assert_in_delta(0.41296079886690196, worksheet.lever_graphs_l3696, 0.002); end
  def test_lever_graphs_m3696; assert_in_delta(0.4261507252943246, worksheet.lever_graphs_m3696, 0.002); end
  def test_lever_graphs_n3696; assert_in_delta(0.44229117582671756, worksheet.lever_graphs_n3696, 0.002); end
  def test_lever_graphs_o3696; assert_in_delta(0.460655006456441, worksheet.lever_graphs_o3696, 0.002); end
  def test_lever_graphs_p3696; assert_in_delta(0.4810681140822069, worksheet.lever_graphs_p3696, 0.002); end
  def test_lever_graphs_q3696; assert_in_delta(0.5025695118207762, worksheet.lever_graphs_q3696, 0.002); end
  def test_lever_graphs_r3696; assert_in_delta(0.5249559136953541, worksheet.lever_graphs_r3696, 0.002); end
  def test_lever_graphs_s3696; assert_in_delta(0.548357293638232, worksheet.lever_graphs_s3696, 0.002); end
  def test_lever_graphs_b3697; assert_equal("Rural", worksheet.lever_graphs_b3697); end
  def test_lever_graphs_c3697; assert_in_epsilon(3.0, worksheet.lever_graphs_c3697, 0.002); end
  def test_lever_graphs_k3697; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3697, 0.002); end
  def test_lever_graphs_l3697; assert_in_delta(0.41296079886690196, worksheet.lever_graphs_l3697, 0.002); end
  def test_lever_graphs_m3697; assert_in_delta(0.4128458308845284, worksheet.lever_graphs_m3697, 0.002); end
  def test_lever_graphs_n3697; assert_in_delta(0.4150561539456141, worksheet.lever_graphs_n3697, 0.002); end
  def test_lever_graphs_o3697; assert_in_delta(0.41841624428347474, worksheet.lever_graphs_o3697, 0.002); end
  def test_lever_graphs_p3697; assert_in_delta(0.4237214106388308, worksheet.lever_graphs_p3697, 0.002); end
  def test_lever_graphs_q3697; assert_in_delta(0.43033799761406094, worksheet.lever_graphs_q3697, 0.002); end
  def test_lever_graphs_r3697; assert_in_delta(0.43829106738495177, worksheet.lever_graphs_r3697, 0.002); end
  def test_lever_graphs_s3697; assert_in_delta(0.44727359543381257, worksheet.lever_graphs_s3697, 0.002); end
  def test_lever_graphs_b3698; assert_equal("Rural", worksheet.lever_graphs_b3698); end
  def test_lever_graphs_c3698; assert_in_epsilon(4.0, worksheet.lever_graphs_c3698, 0.002); end
  def test_lever_graphs_k3698; assert_in_delta(0.4082408624554811, worksheet.lever_graphs_k3698, 0.002); end
  def test_lever_graphs_l3698; assert_in_delta(0.41296079886690196, worksheet.lever_graphs_l3698, 0.002); end
  def test_lever_graphs_m3698; assert_in_delta(0.39721460647860257, worksheet.lever_graphs_m3698, 0.002); end
  def test_lever_graphs_n3698; assert_in_delta(0.3827006315329837, worksheet.lever_graphs_n3698, 0.002); end
  def test_lever_graphs_o3698; assert_in_delta(0.3693897284455835, worksheet.lever_graphs_o3698, 0.002); end
  def test_lever_graphs_p3698; assert_in_delta(0.35736499527315074, worksheet.lever_graphs_p3698, 0.002); end
  def test_lever_graphs_q3698; assert_in_delta(0.34686868043473146, worksheet.lever_graphs_q3698, 0.002); end
  def test_lever_graphs_r3698; assert_in_delta(0.3371781619385337, worksheet.lever_graphs_r3698, 0.002); end
  def test_lever_graphs_s3698; assert_in_delta(0.32799215271787363, worksheet.lever_graphs_s3698, 0.002); end
  def test_lever_graphs_b3673; assert_equal("Type of travel", worksheet.lever_graphs_b3673); end
  def test_lever_graphs_c3673; assert_equal("Level", worksheet.lever_graphs_c3673); end
  def test_lever_graphs_e3673; assert_equal("1985", worksheet.lever_graphs_e3673); end
  def test_lever_graphs_f3673; assert_equal("1990", worksheet.lever_graphs_f3673); end
  def test_lever_graphs_g3673; assert_equal("1995", worksheet.lever_graphs_g3673); end
  def test_lever_graphs_h3673; assert_equal("2000", worksheet.lever_graphs_h3673); end
  def test_lever_graphs_i3673; assert_equal("2005", worksheet.lever_graphs_i3673); end
  def test_lever_graphs_j3673; assert_equal("2010", worksheet.lever_graphs_j3673); end
  def test_lever_graphs_k3673; assert_equal("2011", worksheet.lever_graphs_k3673); end
  def test_lever_graphs_l3673; assert_equal("2015", worksheet.lever_graphs_l3673); end
  def test_lever_graphs_m3673; assert_equal("2020", worksheet.lever_graphs_m3673); end
  def test_lever_graphs_n3673; assert_equal("2025", worksheet.lever_graphs_n3673); end
  def test_lever_graphs_o3673; assert_equal("2030", worksheet.lever_graphs_o3673); end
  def test_lever_graphs_p3673; assert_equal("2035", worksheet.lever_graphs_p3673); end
  def test_lever_graphs_q3673; assert_equal("2040", worksheet.lever_graphs_q3673); end
  def test_lever_graphs_r3673; assert_equal("2045", worksheet.lever_graphs_r3673); end
  def test_lever_graphs_s3673; assert_equal("2050", worksheet.lever_graphs_s3673); end
  def test_lever_graphs_b3674; assert_equal("Urban", worksheet.lever_graphs_b3674); end
  def test_lever_graphs_c3674; assert_in_delta(1.0, worksheet.lever_graphs_c3674, 0.002); end
  def test_lever_graphs_k3674; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3674, 0.002); end
  def test_lever_graphs_l3674; assert_in_delta(0.39246196912269204, worksheet.lever_graphs_l3674, 0.002); end
  def test_lever_graphs_m3674; assert_in_delta(0.42281972785358685, worksheet.lever_graphs_m3674, 0.002); end
  def test_lever_graphs_n3674; assert_in_delta(0.4593757702847052, worksheet.lever_graphs_n3674, 0.002); end
  def test_lever_graphs_o3674; assert_in_delta(0.4963690686188352, worksheet.lever_graphs_o3674, 0.002); end
  def test_lever_graphs_p3674; assert_in_delta(0.5347709541465215, worksheet.lever_graphs_p3674, 0.002); end
  def test_lever_graphs_q3674; assert_in_delta(0.5740547815433437, worksheet.lever_graphs_q3674, 0.002); end
  def test_lever_graphs_r3674; assert_in_delta(0.6138544975847293, worksheet.lever_graphs_r3674, 0.002); end
  def test_lever_graphs_s3674; assert_in_delta(0.6538920865172269, worksheet.lever_graphs_s3674, 0.002); end
  def test_lever_graphs_b3675; assert_equal("Urban", worksheet.lever_graphs_b3675); end
  def test_lever_graphs_c3675; assert_in_epsilon(2.0, worksheet.lever_graphs_c3675, 0.002); end
  def test_lever_graphs_k3675; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3675, 0.002); end
  def test_lever_graphs_l3675; assert_in_delta(0.39246196912269204, worksheet.lever_graphs_l3675, 0.002); end
  def test_lever_graphs_m3675; assert_in_delta(0.40914877947172706, worksheet.lever_graphs_m3675, 0.002); end
  def test_lever_graphs_n3675; assert_in_delta(0.42687668544643237, worksheet.lever_graphs_n3675, 0.002); end
  def test_lever_graphs_o3675; assert_in_delta(0.4463062158828693, worksheet.lever_graphs_o3675, 0.002); end
  def test_lever_graphs_p3675; assert_in_delta(0.4668686034528371, worksheet.lever_graphs_p3675, 0.002); end
  def test_lever_graphs_q3675; assert_in_delta(0.4886341638734793, worksheet.lever_graphs_q3675, 0.002); end
  def test_lever_graphs_r3675; assert_in_delta(0.5105488807225855, worksheet.lever_graphs_r3675, 0.002); end
  def test_lever_graphs_s3675; assert_in_delta(0.5330056471308687, worksheet.lever_graphs_s3675, 0.002); end
  def test_lever_graphs_b3676; assert_equal("Urban", worksheet.lever_graphs_b3676); end
  def test_lever_graphs_c3676; assert_in_epsilon(3.0, worksheet.lever_graphs_c3676, 0.002); end
  def test_lever_graphs_k3676; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3676, 0.002); end
  def test_lever_graphs_l3676; assert_in_delta(0.39246196912269204, worksheet.lever_graphs_l3676, 0.002); end
  def test_lever_graphs_m3676; assert_in_delta(0.3948604497472793, worksheet.lever_graphs_m3676, 0.002); end
  def test_lever_graphs_n3676; assert_in_delta(0.39796582289679927, worksheet.lever_graphs_n3676, 0.002); end
  def test_lever_graphs_o3676; assert_in_delta(0.40203029634881765, worksheet.lever_graphs_o3676, 0.002); end
  def test_lever_graphs_p3676; assert_in_delta(0.4075789667309238, worksheet.lever_graphs_p3676, 0.002); end
  def test_lever_graphs_q3676; assert_in_delta(0.41402443015962204, worksheet.lever_graphs_q3676, 0.002); end
  def test_lever_graphs_r3676; assert_in_delta(0.4214686410850878, worksheet.lever_graphs_r3676, 0.002); end
  def test_lever_graphs_s3676; assert_in_delta(0.4298140779320313, worksheet.lever_graphs_s3676, 0.002); end
  def test_lever_graphs_b3677; assert_equal("Urban", worksheet.lever_graphs_b3677); end
  def test_lever_graphs_c3677; assert_in_epsilon(4.0, worksheet.lever_graphs_c3677, 0.002); end
  def test_lever_graphs_k3677; assert_in_delta(0.383839680737352, worksheet.lever_graphs_k3677, 0.002); end
  def test_lever_graphs_l3677; assert_in_delta(0.39246196912269204, worksheet.lever_graphs_l3677, 0.002); end
  def test_lever_graphs_m3677; assert_in_delta(0.37675884459360354, worksheet.lever_graphs_m3677, 0.002); end
  def test_lever_graphs_n3677; assert_in_delta(0.3611556480864149, worksheet.lever_graphs_n3677, 0.002); end
  def test_lever_graphs_o3677; assert_in_delta(0.34626105132945934, worksheet.lever_graphs_o3677, 0.002); end
  def test_lever_graphs_p3677; assert_in_delta(0.33184295393962376, worksheet.lever_graphs_p3677, 0.002); end
  def test_lever_graphs_q3677; assert_in_delta(0.31832800145067736, worksheet.lever_graphs_q3677, 0.002); end
  def test_lever_graphs_r3677; assert_in_delta(0.30556863971937126, worksheet.lever_graphs_r3677, 0.002); end
  def test_lever_graphs_s3677; assert_in_delta(0.2934559944186672, worksheet.lever_graphs_s3677, 0.002); end
  def test_lever_graphs_b4030; assert_equal("Level", worksheet.lever_graphs_b4030); end
  def test_lever_graphs_c4030; assert_equal("1975", worksheet.lever_graphs_c4030); end
  def test_lever_graphs_d4030; assert_equal("1980", worksheet.lever_graphs_d4030); end
  def test_lever_graphs_e4030; assert_equal("1985", worksheet.lever_graphs_e4030); end
  def test_lever_graphs_f4030; assert_equal("1990", worksheet.lever_graphs_f4030); end
  def test_lever_graphs_g4030; assert_equal("1995", worksheet.lever_graphs_g4030); end
  def test_lever_graphs_h4030; assert_equal("2000", worksheet.lever_graphs_h4030); end
  def test_lever_graphs_i4030; assert_equal("2005", worksheet.lever_graphs_i4030); end
  def test_lever_graphs_j4030; assert_in_epsilon(2010.0, worksheet.lever_graphs_j4030, 0.002); end
  def test_lever_graphs_k4030; assert_equal("2011", worksheet.lever_graphs_k4030); end
  def test_lever_graphs_l4030; assert_equal("2015", worksheet.lever_graphs_l4030); end
  def test_lever_graphs_m4030; assert_equal("2020", worksheet.lever_graphs_m4030); end
  def test_lever_graphs_n4030; assert_equal("2025", worksheet.lever_graphs_n4030); end
  def test_lever_graphs_o4030; assert_equal("2030", worksheet.lever_graphs_o4030); end
  def test_lever_graphs_p4030; assert_equal("2035", worksheet.lever_graphs_p4030); end
  def test_lever_graphs_q4030; assert_equal("2040", worksheet.lever_graphs_q4030); end
  def test_lever_graphs_r4030; assert_equal("2045", worksheet.lever_graphs_r4030); end
  def test_lever_graphs_s4030; assert_equal("2050", worksheet.lever_graphs_s4030); end
  def test_lever_graphs_b4031; assert_equal("Historic data", worksheet.lever_graphs_b4031); end
  def test_lever_graphs_b4032; assert_in_delta(1.0, worksheet.lever_graphs_b4032, 0.002); end
  def test_lever_graphs_k4032; assert_in_delta(0.0, (worksheet.lever_graphs_k4032||0), 0.002); end
  def test_lever_graphs_l4032; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4032, 0.002); end
  def test_lever_graphs_m4032; assert_in_epsilon(98.17920000000001, worksheet.lever_graphs_m4032, 0.002); end
  def test_lever_graphs_n4032; assert_in_epsilon(92.56895999999999, worksheet.lever_graphs_n4032, 0.002); end
  def test_lever_graphs_o4032; assert_in_epsilon(95.72472, worksheet.lever_graphs_o4032, 0.002); end
  def test_lever_graphs_p4032; assert_in_epsilon(94.67280000000001, worksheet.lever_graphs_p4032, 0.002); end
  def test_lever_graphs_q4032; assert_in_epsilon(84.15360000000001, worksheet.lever_graphs_q4032, 0.002); end
  def test_lever_graphs_r4032; assert_in_epsilon(65.21903999999999, worksheet.lever_graphs_r4032, 0.002); end
  def test_lever_graphs_s4032; assert_in_epsilon(51.89472000000001, worksheet.lever_graphs_s4032, 0.002); end
  def test_lever_graphs_b4033; assert_in_epsilon(2.0, worksheet.lever_graphs_b4033, 0.002); end
  def test_lever_graphs_k4033; assert_in_delta(0.0, (worksheet.lever_graphs_k4033||0), 0.002); end
  def test_lever_graphs_l4033; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4033, 0.002); end
  def test_lever_graphs_m4033; assert_in_epsilon(110.4516, worksheet.lever_graphs_m4033, 0.002); end
  def test_lever_graphs_n4033; assert_in_epsilon(208.28015999999997, worksheet.lever_graphs_n4033, 0.002); end
  def test_lever_graphs_o4033; assert_in_epsilon(682.0386300000002, worksheet.lever_graphs_o4033, 0.002); end
  def test_lever_graphs_p4033; assert_in_epsilon(944.3611800000001, worksheet.lever_graphs_p4033, 0.002); end
  def test_lever_graphs_q4033; assert_in_epsilon(1174.9946400000001, worksheet.lever_graphs_q4033, 0.002); end
  def test_lever_graphs_r4033; assert_in_epsilon(1275.032232, worksheet.lever_graphs_r4033, 0.002); end
  def test_lever_graphs_s4033; assert_in_epsilon(1589.2758, worksheet.lever_graphs_s4033, 0.002); end
  def test_lever_graphs_b4034; assert_in_epsilon(3.0, worksheet.lever_graphs_b4034, 0.002); end
  def test_lever_graphs_k4034; assert_in_delta(0.0, (worksheet.lever_graphs_k4034||0), 0.002); end
  def test_lever_graphs_l4034; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4034, 0.002); end
  def test_lever_graphs_m4034; assert_in_epsilon(192.06306, worksheet.lever_graphs_m4034, 0.002); end
  def test_lever_graphs_n4034; assert_in_epsilon(630.0474839999999, worksheet.lever_graphs_n4034, 0.002); end
  def test_lever_graphs_o4034; assert_in_epsilon(2273.4621, worksheet.lever_graphs_o4034, 0.002); end
  def test_lever_graphs_p4034; assert_in_epsilon(3170.3553899999993, worksheet.lever_graphs_p4034, 0.002); end
  def test_lever_graphs_q4034; assert_in_epsilon(3973.6278, worksheet.lever_graphs_q4034, 0.002); end
  def test_lever_graphs_r4034; assert_in_epsilon(4342.365207, worksheet.lever_graphs_r4034, 0.002); end
  def test_lever_graphs_s4034; assert_in_epsilon(4822.96554, worksheet.lever_graphs_s4034, 0.002); end
  def test_lever_graphs_b4035; assert_in_epsilon(4.0, worksheet.lever_graphs_b4035, 0.002); end
  def test_lever_graphs_k4035; assert_in_delta(0.0, (worksheet.lever_graphs_k4035||0), 0.002); end
  def test_lever_graphs_l4035; assert_in_epsilon(47.3364, worksheet.lever_graphs_l4035, 0.002); end
  def test_lever_graphs_m4035; assert_in_epsilon(2331.756, worksheet.lever_graphs_m4035, 0.002); end
  def test_lever_graphs_n4035; assert_in_epsilon(4397.0256, worksheet.lever_graphs_n4035, 0.002); end
  def test_lever_graphs_o4035; assert_in_epsilon(7578.406426500001, worksheet.lever_graphs_o4035, 0.002); end
  def test_lever_graphs_p4035; assert_in_epsilon(10493.296470000001, worksheet.lever_graphs_p4035, 0.002); end
  def test_lever_graphs_q4035; assert_in_epsilon(13058.534880000003, worksheet.lever_graphs_q4035, 0.002); end
  def test_lever_graphs_r4035; assert_in_epsilon(12228.57, worksheet.lever_graphs_r4035, 0.002); end
  def test_lever_graphs_s4035; assert_in_epsilon(12000.654, worksheet.lever_graphs_s4035, 0.002); end
  def test_lever_graphs_b3816; assert_equal("Level", worksheet.lever_graphs_b3816); end
  def test_lever_graphs_c3816; assert_equal("1975", worksheet.lever_graphs_c3816); end
  def test_lever_graphs_d3816; assert_equal("1980", worksheet.lever_graphs_d3816); end
  def test_lever_graphs_e3816; assert_equal("1985", worksheet.lever_graphs_e3816); end
  def test_lever_graphs_f3816; assert_equal("1990", worksheet.lever_graphs_f3816); end
  def test_lever_graphs_g3816; assert_equal("1995", worksheet.lever_graphs_g3816); end
  def test_lever_graphs_h3816; assert_equal("2000", worksheet.lever_graphs_h3816); end
  def test_lever_graphs_i3816; assert_equal("2005", worksheet.lever_graphs_i3816); end
  def test_lever_graphs_j3816; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3816, 0.002); end
  def test_lever_graphs_k3816; assert_equal("2011", worksheet.lever_graphs_k3816); end
  def test_lever_graphs_l3816; assert_equal("2015", worksheet.lever_graphs_l3816); end
  def test_lever_graphs_m3816; assert_equal("2020", worksheet.lever_graphs_m3816); end
  def test_lever_graphs_n3816; assert_equal("2025", worksheet.lever_graphs_n3816); end
  def test_lever_graphs_o3816; assert_equal("2030", worksheet.lever_graphs_o3816); end
  def test_lever_graphs_p3816; assert_equal("2035", worksheet.lever_graphs_p3816); end
  def test_lever_graphs_q3816; assert_equal("2040", worksheet.lever_graphs_q3816); end
  def test_lever_graphs_r3816; assert_equal("2045", worksheet.lever_graphs_r3816); end
  def test_lever_graphs_s3816; assert_equal("2050", worksheet.lever_graphs_s3816); end
  def test_lever_graphs_b3817; assert_equal("Historic data", worksheet.lever_graphs_b3817); end
  def test_lever_graphs_b3818; assert_in_delta(1.0, worksheet.lever_graphs_b3818, 0.002); end
  def test_lever_graphs_k3818; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3818, 0.002); end
  def test_lever_graphs_l3818; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3818, 0.002); end
  def test_lever_graphs_m3818; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_m3818, 0.002); end
  def test_lever_graphs_n3818; assert_in_epsilon(65.745, worksheet.lever_graphs_n3818, 0.002); end
  def test_lever_graphs_o3818; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_o3818, 0.002); end
  def test_lever_graphs_p3818; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_p3818, 0.002); end
  def test_lever_graphs_q3818; assert_in_delta(0.0, (worksheet.lever_graphs_q3818||0), 0.002); end
  def test_lever_graphs_r3818; assert_in_delta(0.0, (worksheet.lever_graphs_r3818||0), 0.002); end
  def test_lever_graphs_s3818; assert_in_delta(0.0, (worksheet.lever_graphs_s3818||0), 0.002); end
  def test_lever_graphs_b3819; assert_in_epsilon(2.0, worksheet.lever_graphs_b3819, 0.002); end
  def test_lever_graphs_k3819; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3819, 0.002); end
  def test_lever_graphs_l3819; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3819, 0.002); end
  def test_lever_graphs_m3819; assert_in_epsilon(124.47720000000002, worksheet.lever_graphs_m3819, 0.002); end
  def test_lever_graphs_n3819; assert_in_epsilon(221.34150000000002, worksheet.lever_graphs_n3819, 0.002); end
  def test_lever_graphs_o3819; assert_in_epsilon(431.2872, worksheet.lever_graphs_o3819, 0.002); end
  def test_lever_graphs_p3819; assert_in_epsilon(523.3302, worksheet.lever_graphs_p3819, 0.002); end
  def test_lever_graphs_q3819; assert_in_epsilon(702.1566, worksheet.lever_graphs_q3819, 0.002); end
  def test_lever_graphs_r3819; assert_in_epsilon(1093.9968000000001, worksheet.lever_graphs_r3819, 0.002); end
  def test_lever_graphs_s3819; assert_in_epsilon(1360.4832000000004, worksheet.lever_graphs_s3819, 0.002); end
  def test_lever_graphs_b3820; assert_in_epsilon(3.0, worksheet.lever_graphs_b3820, 0.002); end
  def test_lever_graphs_k3820; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3820, 0.002); end
  def test_lever_graphs_l3820; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3820, 0.002); end
  def test_lever_graphs_m3820; assert_in_epsilon(145.5156, worksheet.lever_graphs_m3820, 0.002); end
  def test_lever_graphs_n3820; assert_in_epsilon(320.61645000000004, worksheet.lever_graphs_n3820, 0.002); end
  def test_lever_graphs_o3820; assert_in_epsilon(677.9624400000001, worksheet.lever_graphs_o3820, 0.002); end
  def test_lever_graphs_p3820; assert_in_epsilon(1042.97868, worksheet.lever_graphs_p3820, 0.002); end
  def test_lever_graphs_q3820; assert_in_epsilon(1604.9669399999996, worksheet.lever_graphs_q3820, 0.002); end
  def test_lever_graphs_r3820; assert_in_epsilon(2731.13496, worksheet.lever_graphs_r3820, 0.002); end
  def test_lever_graphs_s3820; assert_in_epsilon(3485.7122400000007, worksheet.lever_graphs_s3820, 0.002); end
  def test_lever_graphs_b3821; assert_in_epsilon(4.0, worksheet.lever_graphs_b3821, 0.002); end
  def test_lever_graphs_k3821; assert_in_epsilon(2.10384, worksheet.lever_graphs_k3821, 0.002); end
  def test_lever_graphs_l3821; assert_in_epsilon(10.5192, worksheet.lever_graphs_l3821, 0.002); end
  def test_lever_graphs_m3821; assert_in_epsilon(171.11231999999998, worksheet.lever_graphs_m3821, 0.002); end
  def test_lever_graphs_n3821; assert_in_epsilon(429.97229999999996, worksheet.lever_graphs_n3821, 0.002); end
  def test_lever_graphs_o3821; assert_in_epsilon(1037.98206, worksheet.lever_graphs_o3821, 0.002); end
  def test_lever_graphs_p3821; assert_in_epsilon(1749.07998, worksheet.lever_graphs_p3821, 0.002); end
  def test_lever_graphs_q3821; assert_in_epsilon(2947.47984, worksheet.lever_graphs_q3821, 0.002); end
  def test_lever_graphs_r3821; assert_in_epsilon(5259.249360000002, worksheet.lever_graphs_r3821, 0.002); end
  def test_lever_graphs_s3821; assert_in_epsilon(7037.69544, worksheet.lever_graphs_s3821, 0.002); end
  def test_lever_graphs_b3926; assert_equal("Level", worksheet.lever_graphs_b3926); end
  def test_lever_graphs_c3926; assert_equal("1975", worksheet.lever_graphs_c3926); end
  def test_lever_graphs_d3926; assert_equal("1980", worksheet.lever_graphs_d3926); end
  def test_lever_graphs_e3926; assert_equal("1985", worksheet.lever_graphs_e3926); end
  def test_lever_graphs_f3926; assert_equal("1990", worksheet.lever_graphs_f3926); end
  def test_lever_graphs_g3926; assert_equal("1995", worksheet.lever_graphs_g3926); end
  def test_lever_graphs_h3926; assert_equal("2000", worksheet.lever_graphs_h3926); end
  def test_lever_graphs_i3926; assert_equal("2005", worksheet.lever_graphs_i3926); end
  def test_lever_graphs_j3926; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3926, 0.002); end
  def test_lever_graphs_k3926; assert_equal("2011", worksheet.lever_graphs_k3926); end
  def test_lever_graphs_l3926; assert_equal("2015", worksheet.lever_graphs_l3926); end
  def test_lever_graphs_m3926; assert_equal("2020", worksheet.lever_graphs_m3926); end
  def test_lever_graphs_n3926; assert_equal("2025", worksheet.lever_graphs_n3926); end
  def test_lever_graphs_o3926; assert_equal("2030", worksheet.lever_graphs_o3926); end
  def test_lever_graphs_p3926; assert_equal("2035", worksheet.lever_graphs_p3926); end
  def test_lever_graphs_q3926; assert_equal("2040", worksheet.lever_graphs_q3926); end
  def test_lever_graphs_r3926; assert_equal("2045", worksheet.lever_graphs_r3926); end
  def test_lever_graphs_s3926; assert_equal("2050", worksheet.lever_graphs_s3926); end
  def test_lever_graphs_b3927; assert_equal("Historic data", worksheet.lever_graphs_b3927); end
  def test_lever_graphs_b3928; assert_in_delta(1.0, worksheet.lever_graphs_b3928, 0.002); end
  def test_lever_graphs_k3928; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k3928, 0.002); end
  def test_lever_graphs_l3928; assert_in_epsilon(92.78811, worksheet.lever_graphs_l3928, 0.002); end
  def test_lever_graphs_m3928; assert_in_epsilon(105.19200000000001, worksheet.lever_graphs_m3928, 0.002); end
  def test_lever_graphs_n3928; assert_in_epsilon(105.19200000000001, worksheet.lever_graphs_n3928, 0.002); end
  def test_lever_graphs_o3928; assert_in_epsilon(70.128, worksheet.lever_graphs_o3928, 0.002); end
  def test_lever_graphs_p3928; assert_in_epsilon(49.08960000000001, worksheet.lever_graphs_p3928, 0.002); end
  def test_lever_graphs_q3928; assert_in_epsilon(28.051200000000005, worksheet.lever_graphs_q3928, 0.002); end
  def test_lever_graphs_r3928; assert_in_delta(0.0, (worksheet.lever_graphs_r3928||0), 0.002); end
  def test_lever_graphs_s3928; assert_in_delta(0.0, (worksheet.lever_graphs_s3928||0), 0.002); end
  def test_lever_graphs_b3929; assert_in_epsilon(2.0, worksheet.lever_graphs_b3929, 0.002); end
  def test_lever_graphs_k3929; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k3929, 0.002); end
  def test_lever_graphs_l3929; assert_in_epsilon(92.78811, worksheet.lever_graphs_l3929, 0.002); end
  def test_lever_graphs_m3929; assert_in_epsilon(124.9155, worksheet.lever_graphs_m3929, 0.002); end
  def test_lever_graphs_n3929; assert_in_epsilon(164.36249999999998, worksheet.lever_graphs_n3929, 0.002); end
  def test_lever_graphs_o3929; assert_in_epsilon(273.49920000000003, worksheet.lever_graphs_o3929, 0.002); end
  def test_lever_graphs_p3929; assert_in_epsilon(511.93440000000004, worksheet.lever_graphs_p3929, 0.002); end
  def test_lever_graphs_q3929; assert_in_epsilon(687.2544000000001, worksheet.lever_graphs_q3929, 0.002); end
  def test_lever_graphs_r3929; assert_in_epsilon(1020.8007000000001, worksheet.lever_graphs_r3929, 0.002); end
  def test_lever_graphs_s3929; assert_in_epsilon(1281.5892, worksheet.lever_graphs_s3929, 0.002); end
  def test_lever_graphs_b3930; assert_in_epsilon(3.0, worksheet.lever_graphs_b3930, 0.002); end
  def test_lever_graphs_k3930; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k3930, 0.002); end
  def test_lever_graphs_l3930; assert_in_epsilon(92.78811, worksheet.lever_graphs_l3930, 0.002); end
  def test_lever_graphs_m3930; assert_in_epsilon(151.2135, worksheet.lever_graphs_m3930, 0.002); end
  def test_lever_graphs_n3930; assert_in_epsilon(249.831, worksheet.lever_graphs_n3930, 0.002); end
  def test_lever_graphs_o3930; assert_in_epsilon(420.76800000000003, worksheet.lever_graphs_o3930, 0.002); end
  def test_lever_graphs_p3930; assert_in_epsilon(722.3184000000001, worksheet.lever_graphs_p3930, 0.002); end
  def test_lever_graphs_q3930; assert_in_epsilon(1185.1632000000002, worksheet.lever_graphs_q3930, 0.002); end
  def test_lever_graphs_r3930; assert_in_epsilon(1765.9107, worksheet.lever_graphs_r3930, 0.002); end
  def test_lever_graphs_s3930; assert_in_epsilon(2153.3679, worksheet.lever_graphs_s3930, 0.002); end
  def test_lever_graphs_b3931; assert_in_epsilon(4.0, worksheet.lever_graphs_b3931, 0.002); end
  def test_lever_graphs_k3931; assert_in_epsilon(73.1426274, worksheet.lever_graphs_k3931, 0.002); end
  def test_lever_graphs_l3931; assert_in_epsilon(92.78811, worksheet.lever_graphs_l3931, 0.002); end
  def test_lever_graphs_m3931; assert_in_epsilon(166.66357500000004, worksheet.lever_graphs_m3931, 0.002); end
  def test_lever_graphs_n3931; assert_in_epsilon(287.897355, worksheet.lever_graphs_n3931, 0.002); end
  def test_lever_graphs_o3931; assert_in_epsilon(530.378064, worksheet.lever_graphs_o3931, 0.002); end
  def test_lever_graphs_p3931; assert_in_epsilon(916.1521919999999, worksheet.lever_graphs_p3931, 0.002); end
  def test_lever_graphs_q3931; assert_in_epsilon(1584.8928000000003, worksheet.lever_graphs_q3931, 0.002); end
  def test_lever_graphs_r3931; assert_in_epsilon(2250.2322, worksheet.lever_graphs_r3931, 0.002); end
  def test_lever_graphs_s3931; assert_in_epsilon(3010.2444, worksheet.lever_graphs_s3931, 0.002); end
  def test_lever_graphs_b3846; assert_equal("Level", worksheet.lever_graphs_b3846); end
  def test_lever_graphs_c3846; assert_equal("1975", worksheet.lever_graphs_c3846); end
  def test_lever_graphs_d3846; assert_equal("1980", worksheet.lever_graphs_d3846); end
  def test_lever_graphs_e3846; assert_equal("1985", worksheet.lever_graphs_e3846); end
  def test_lever_graphs_f3846; assert_equal("1990", worksheet.lever_graphs_f3846); end
  def test_lever_graphs_g3846; assert_equal("1995", worksheet.lever_graphs_g3846); end
  def test_lever_graphs_h3846; assert_equal("2000", worksheet.lever_graphs_h3846); end
  def test_lever_graphs_i3846; assert_equal("2005", worksheet.lever_graphs_i3846); end
  def test_lever_graphs_j3846; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3846, 0.002); end
  def test_lever_graphs_k3846; assert_equal("2011", worksheet.lever_graphs_k3846); end
  def test_lever_graphs_l3846; assert_equal("2015", worksheet.lever_graphs_l3846); end
  def test_lever_graphs_m3846; assert_equal("2020", worksheet.lever_graphs_m3846); end
  def test_lever_graphs_n3846; assert_equal("2025", worksheet.lever_graphs_n3846); end
  def test_lever_graphs_o3846; assert_equal("2030", worksheet.lever_graphs_o3846); end
  def test_lever_graphs_p3846; assert_equal("2035", worksheet.lever_graphs_p3846); end
  def test_lever_graphs_q3846; assert_equal("2040", worksheet.lever_graphs_q3846); end
  def test_lever_graphs_r3846; assert_equal("2045", worksheet.lever_graphs_r3846); end
  def test_lever_graphs_s3846; assert_equal("2050", worksheet.lever_graphs_s3846); end
  def test_lever_graphs_b3847; assert_equal("Historic data", worksheet.lever_graphs_b3847); end
  def test_lever_graphs_b3848; assert_in_delta(1.0, worksheet.lever_graphs_b3848, 0.002); end
  def test_lever_graphs_k3848; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3848, 0.002); end
  def test_lever_graphs_l3848; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3848, 0.002); end
  def test_lever_graphs_m3848; assert_in_epsilon(5201.7444, worksheet.lever_graphs_m3848, 0.002); end
  def test_lever_graphs_n3848; assert_in_epsilon(5352.5196000000005, worksheet.lever_graphs_n3848, 0.002); end
  def test_lever_graphs_o3848; assert_in_epsilon(5352.5196000000005, worksheet.lever_graphs_o3848, 0.002); end
  def test_lever_graphs_p3848; assert_in_epsilon(5352.5196000000005, worksheet.lever_graphs_p3848, 0.002); end
  def test_lever_graphs_q3848; assert_in_epsilon(4478.02344, worksheet.lever_graphs_q3848, 0.002); end
  def test_lever_graphs_r3848; assert_in_epsilon(4478.02344, worksheet.lever_graphs_r3848, 0.002); end
  def test_lever_graphs_s3848; assert_in_epsilon(4478.02344, worksheet.lever_graphs_s3848, 0.002); end
  def test_lever_graphs_b3849; assert_in_epsilon(2.0, worksheet.lever_graphs_b3849, 0.002); end
  def test_lever_graphs_k3849; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3849, 0.002); end
  def test_lever_graphs_l3849; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3849, 0.002); end
  def test_lever_graphs_m3849; assert_in_epsilon(5314.8258, worksheet.lever_graphs_m3849, 0.002); end
  def test_lever_graphs_n3849; assert_in_epsilon(5503.2948, worksheet.lever_graphs_n3849, 0.002); end
  def test_lever_graphs_o3849; assert_in_epsilon(5710.6107, worksheet.lever_graphs_o3849, 0.002); end
  def test_lever_graphs_p3849; assert_in_epsilon(5917.926600000002, worksheet.lever_graphs_p3849, 0.002); end
  def test_lever_graphs_q3849; assert_in_epsilon(6125.2425, worksheet.lever_graphs_q3849, 0.002); end
  def test_lever_graphs_r3849; assert_in_epsilon(6351.405299999999, worksheet.lever_graphs_r3849, 0.002); end
  def test_lever_graphs_s3849; assert_in_epsilon(6596.415, worksheet.lever_graphs_s3849, 0.002); end
  def test_lever_graphs_b3850; assert_in_epsilon(3.0, worksheet.lever_graphs_b3850, 0.002); end
  def test_lever_graphs_k3850; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3850, 0.002); end
  def test_lever_graphs_l3850; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3850, 0.002); end
  def test_lever_graphs_m3850; assert_in_epsilon(5691.7638, worksheet.lever_graphs_m3850, 0.002); end
  def test_lever_graphs_n3850; assert_in_epsilon(5993.314200000001, worksheet.lever_graphs_n3850, 0.002); end
  def test_lever_graphs_o3850; assert_in_epsilon(6294.8646, worksheet.lever_graphs_o3850, 0.002); end
  def test_lever_graphs_p3850; assert_in_epsilon(6596.415, worksheet.lever_graphs_p3850, 0.002); end
  def test_lever_graphs_q3850; assert_in_epsilon(7029.8937, worksheet.lever_graphs_q3850, 0.002); end
  def test_lever_graphs_r3850; assert_in_epsilon(7470.911160000001, worksheet.lever_graphs_r3850, 0.002); end
  def test_lever_graphs_s3850; assert_in_epsilon(7919.46738, worksheet.lever_graphs_s3850, 0.002); end
  def test_lever_graphs_b3851; assert_in_epsilon(4.0, worksheet.lever_graphs_b3851, 0.002); end
  def test_lever_graphs_k3851; assert_in_epsilon(3656.2986, worksheet.lever_graphs_k3851, 0.002); end
  def test_lever_graphs_l3851; assert_in_epsilon(5088.663, worksheet.lever_graphs_l3851, 0.002); end
  def test_lever_graphs_m3851; assert_in_epsilon(6219.477, worksheet.lever_graphs_m3851, 0.002); end
  def test_lever_graphs_n3851; assert_in_epsilon(6973.353, worksheet.lever_graphs_n3851, 0.002); end
  def test_lever_graphs_o3851; assert_in_epsilon(7519.9131, worksheet.lever_graphs_o3851, 0.002); end
  def test_lever_graphs_p3851; assert_in_epsilon(8066.4732, worksheet.lever_graphs_p3851, 0.002); end
  def test_lever_graphs_q3851; assert_in_epsilon(8613.0333, worksheet.lever_graphs_q3851, 0.002); end
  def test_lever_graphs_r3851; assert_in_epsilon(8782.6554, worksheet.lever_graphs_r3851, 0.002); end
  def test_lever_graphs_s3851; assert_in_epsilon(8952.2775, worksheet.lever_graphs_s3851, 0.002); end
  def test_lever_graphs_b3856; assert_equal("Level", worksheet.lever_graphs_b3856); end
  def test_lever_graphs_c3856; assert_equal("1975", worksheet.lever_graphs_c3856); end
  def test_lever_graphs_d3856; assert_equal("1980", worksheet.lever_graphs_d3856); end
  def test_lever_graphs_e3856; assert_equal("1985", worksheet.lever_graphs_e3856); end
  def test_lever_graphs_f3856; assert_equal("1990", worksheet.lever_graphs_f3856); end
  def test_lever_graphs_g3856; assert_equal("1995", worksheet.lever_graphs_g3856); end
  def test_lever_graphs_h3856; assert_equal("2000", worksheet.lever_graphs_h3856); end
  def test_lever_graphs_i3856; assert_equal("2005", worksheet.lever_graphs_i3856); end
  def test_lever_graphs_j3856; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3856, 0.002); end
  def test_lever_graphs_k3856; assert_equal("2011", worksheet.lever_graphs_k3856); end
  def test_lever_graphs_l3856; assert_equal("2015", worksheet.lever_graphs_l3856); end
  def test_lever_graphs_m3856; assert_equal("2020", worksheet.lever_graphs_m3856); end
  def test_lever_graphs_n3856; assert_equal("2025", worksheet.lever_graphs_n3856); end
  def test_lever_graphs_o3856; assert_equal("2030", worksheet.lever_graphs_o3856); end
  def test_lever_graphs_p3856; assert_equal("2035", worksheet.lever_graphs_p3856); end
  def test_lever_graphs_q3856; assert_equal("2040", worksheet.lever_graphs_q3856); end
  def test_lever_graphs_r3856; assert_equal("2045", worksheet.lever_graphs_r3856); end
  def test_lever_graphs_s3856; assert_equal("2050", worksheet.lever_graphs_s3856); end
  def test_lever_graphs_b3857; assert_equal("Historic data", worksheet.lever_graphs_b3857); end
  def test_lever_graphs_b3858; assert_in_delta(1.0, worksheet.lever_graphs_b3858, 0.002); end
  def test_lever_graphs_k3858; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3858, 0.002); end
  def test_lever_graphs_l3858; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3858, 0.002); end
  def test_lever_graphs_m3858; assert_in_epsilon(2664.864, worksheet.lever_graphs_m3858, 0.002); end
  def test_lever_graphs_n3858; assert_in_epsilon(2103.84, worksheet.lever_graphs_n3858, 0.002); end
  def test_lever_graphs_o3858; assert_in_epsilon(1402.56, worksheet.lever_graphs_o3858, 0.002); end
  def test_lever_graphs_p3858; assert_in_epsilon(1490.22, worksheet.lever_graphs_p3858, 0.002); end
  def test_lever_graphs_q3858; assert_in_epsilon(745.11, worksheet.lever_graphs_q3858, 0.002); end
  def test_lever_graphs_r3858; assert_in_epsilon(372.555, worksheet.lever_graphs_r3858, 0.002); end
  def test_lever_graphs_s3858; assert_in_delta(0.0, (worksheet.lever_graphs_s3858||0), 0.002); end
  def test_lever_graphs_b3859; assert_in_epsilon(2.0, worksheet.lever_graphs_b3859, 0.002); end
  def test_lever_graphs_k3859; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3859, 0.002); end
  def test_lever_graphs_l3859; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3859, 0.002); end
  def test_lever_graphs_m3859; assert_in_epsilon(3164.526, worksheet.lever_graphs_m3859, 0.002); end
  def test_lever_graphs_n3859; assert_in_epsilon(3492.3744000000006, worksheet.lever_graphs_n3859, 0.002); end
  def test_lever_graphs_o3859; assert_in_epsilon(3716.784, worksheet.lever_graphs_o3859, 0.002); end
  def test_lever_graphs_p3859; assert_in_epsilon(4187.5181999999995, worksheet.lever_graphs_p3859, 0.002); end
  def test_lever_graphs_q3859; assert_in_epsilon(4478.1111, worksheet.lever_graphs_q3859, 0.002); end
  def test_lever_graphs_r3859; assert_in_epsilon(4791.0572999999995, worksheet.lever_graphs_r3859, 0.002); end
  def test_lever_graphs_s3859; assert_in_epsilon(5104.0035, worksheet.lever_graphs_s3859, 0.002); end
  def test_lever_graphs_b3860; assert_in_epsilon(3.0, worksheet.lever_graphs_b3860, 0.002); end
  def test_lever_graphs_k3860; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3860, 0.002); end
  def test_lever_graphs_l3860; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3860, 0.002); end
  def test_lever_graphs_m3860; assert_in_epsilon(3397.7016000000003, worksheet.lever_graphs_m3860, 0.002); end
  def test_lever_graphs_n3860; assert_in_epsilon(4102.488, worksheet.lever_graphs_n3860, 0.002); end
  def test_lever_graphs_o3860; assert_in_epsilon(4628.447999999999, worksheet.lever_graphs_o3860, 0.002); end
  def test_lever_graphs_p3860; assert_in_epsilon(5476.558499999999, worksheet.lever_graphs_p3860, 0.002); end
  def test_lever_graphs_q3860; assert_in_epsilon(6087.5487, worksheet.lever_graphs_q3860, 0.002); end
  def test_lever_graphs_r3860; assert_in_epsilon(6855.012, worksheet.lever_graphs_r3860, 0.002); end
  def test_lever_graphs_s3860; assert_in_epsilon(7674.633, worksheet.lever_graphs_s3860, 0.002); end
  def test_lever_graphs_b3861; assert_in_epsilon(4.0, worksheet.lever_graphs_b3861, 0.002); end
  def test_lever_graphs_k3861; assert_in_epsilon(2425.0262399999997, worksheet.lever_graphs_k3861, 0.002); end
  def test_lever_graphs_l3861; assert_in_epsilon(2764.7964, worksheet.lever_graphs_l3861, 0.002); end
  def test_lever_graphs_m3861; assert_in_epsilon(3637.5393599999998, worksheet.lever_graphs_m3861, 0.002); end
  def test_lever_graphs_n3861; assert_in_epsilon(4698.576, worksheet.lever_graphs_n3861, 0.002); end
  def test_lever_graphs_o3861; assert_in_epsilon(5771.534400000001, worksheet.lever_graphs_o3861, 0.002); end
  def test_lever_graphs_p3861; assert_in_epsilon(7525.611000000001, worksheet.lever_graphs_p3861, 0.002); end
  def test_lever_graphs_q3861; assert_in_epsilon(9239.364, worksheet.lever_graphs_q3861, 0.002); end
  def test_lever_graphs_r3861; assert_in_epsilon(11348.0253, worksheet.lever_graphs_r3861, 0.002); end
  def test_lever_graphs_s3861; assert_in_epsilon(13933.557, worksheet.lever_graphs_s3861, 0.002); end
  def test_lever_graphs_b3876; assert_equal("Level", worksheet.lever_graphs_b3876); end
  def test_lever_graphs_c3876; assert_equal("1975", worksheet.lever_graphs_c3876); end
  def test_lever_graphs_d3876; assert_equal("1980", worksheet.lever_graphs_d3876); end
  def test_lever_graphs_e3876; assert_equal("1985", worksheet.lever_graphs_e3876); end
  def test_lever_graphs_f3876; assert_equal("1990", worksheet.lever_graphs_f3876); end
  def test_lever_graphs_g3876; assert_equal("1995", worksheet.lever_graphs_g3876); end
  def test_lever_graphs_h3876; assert_equal("2000", worksheet.lever_graphs_h3876); end
  def test_lever_graphs_i3876; assert_equal("2005", worksheet.lever_graphs_i3876); end
  def test_lever_graphs_j3876; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3876, 0.002); end
  def test_lever_graphs_k3876; assert_equal("2011", worksheet.lever_graphs_k3876); end
  def test_lever_graphs_l3876; assert_equal("2015", worksheet.lever_graphs_l3876); end
  def test_lever_graphs_m3876; assert_equal("2020", worksheet.lever_graphs_m3876); end
  def test_lever_graphs_n3876; assert_equal("2025", worksheet.lever_graphs_n3876); end
  def test_lever_graphs_o3876; assert_equal("2030", worksheet.lever_graphs_o3876); end
  def test_lever_graphs_p3876; assert_equal("2035", worksheet.lever_graphs_p3876); end
  def test_lever_graphs_q3876; assert_equal("2040", worksheet.lever_graphs_q3876); end
  def test_lever_graphs_r3876; assert_equal("2045", worksheet.lever_graphs_r3876); end
  def test_lever_graphs_s3876; assert_equal("2050", worksheet.lever_graphs_s3876); end
  def test_lever_graphs_b3877; assert_equal("Historic data", worksheet.lever_graphs_b3877); end
  def test_lever_graphs_b3878; assert_in_delta(1.0, worksheet.lever_graphs_b3878, 0.002); end
  def test_lever_graphs_k3878; assert_in_epsilon(10.422774, worksheet.lever_graphs_k3878, 0.002); end
  def test_lever_graphs_l3878; assert_in_epsilon(38.1321, worksheet.lever_graphs_l3878, 0.002); end
  def test_lever_graphs_m3878; assert_in_epsilon(43.216379999999994, worksheet.lever_graphs_m3878, 0.002); end
  def test_lever_graphs_n3878; assert_in_epsilon(37.60614, worksheet.lever_graphs_n3878, 0.002); end
  def test_lever_graphs_o3878; assert_in_delta(0.0, (worksheet.lever_graphs_o3878||0), 0.002); end
  def test_lever_graphs_p3878; assert_in_delta(0.0, (worksheet.lever_graphs_p3878||0), 0.002); end
  def test_lever_graphs_q3878; assert_in_delta(0.0, (worksheet.lever_graphs_q3878||0), 0.002); end
  def test_lever_graphs_r3878; assert_in_delta(0.0, (worksheet.lever_graphs_r3878||0), 0.002); end
  def test_lever_graphs_s3878; assert_in_delta(0.0, (worksheet.lever_graphs_s3878||0), 0.002); end
  def test_lever_graphs_b3879; assert_in_epsilon(2.0, worksheet.lever_graphs_b3879, 0.002); end
  def test_lever_graphs_k3879; assert_in_epsilon(10.422774, worksheet.lever_graphs_k3879, 0.002); end
  def test_lever_graphs_l3879; assert_in_epsilon(38.1321, worksheet.lever_graphs_l3879, 0.002); end
  def test_lever_graphs_m3879; assert_in_epsilon(83.89062, worksheet.lever_graphs_m3879, 0.002); end
  def test_lever_graphs_n3879; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_n3879, 0.002); end
  def test_lever_graphs_o3879; assert_in_epsilon(294.53759999999994, worksheet.lever_graphs_o3879, 0.002); end
  def test_lever_graphs_p3879; assert_in_epsilon(515.4408000000001, worksheet.lever_graphs_p3879, 0.002); end
  def test_lever_graphs_q3879; assert_in_epsilon(771.408, worksheet.lever_graphs_q3879, 0.002); end
  def test_lever_graphs_r3879; assert_in_epsilon(1318.4064, worksheet.lever_graphs_r3879, 0.002); end
  def test_lever_graphs_s3879; assert_in_epsilon(1595.412, worksheet.lever_graphs_s3879, 0.002); end
  def test_lever_graphs_b3880; assert_in_epsilon(3.0, worksheet.lever_graphs_b3880, 0.002); end
  def test_lever_graphs_k3880; assert_in_epsilon(10.422774, worksheet.lever_graphs_k3880, 0.002); end
  def test_lever_graphs_l3880; assert_in_epsilon(38.1321, worksheet.lever_graphs_l3880, 0.002); end
  def test_lever_graphs_m3880; assert_in_epsilon(116.93844, worksheet.lever_graphs_m3880, 0.002); end
  def test_lever_graphs_n3880; assert_in_epsilon(251.67185999999998, worksheet.lever_graphs_n3880, 0.002); end
  def test_lever_graphs_o3880; assert_in_epsilon(576.8028, worksheet.lever_graphs_o3880, 0.002); end
  def test_lever_graphs_p3880; assert_in_epsilon(1034.3880000000001, worksheet.lever_graphs_p3880, 0.002); end
  def test_lever_graphs_q3880; assert_in_epsilon(1486.7136000000003, worksheet.lever_graphs_q3880, 0.002); end
  def test_lever_graphs_r3880; assert_in_epsilon(2482.5312, worksheet.lever_graphs_r3880, 0.002); end
  def test_lever_graphs_s3880; assert_in_epsilon(3190.824, worksheet.lever_graphs_s3880, 0.002); end
  def test_lever_graphs_b3881; assert_in_epsilon(4.0, worksheet.lever_graphs_b3881, 0.002); end
  def test_lever_graphs_k3881; assert_in_epsilon(10.422774, worksheet.lever_graphs_k3881, 0.002); end
  def test_lever_graphs_l3881; assert_in_epsilon(38.1321, worksheet.lever_graphs_l3881, 0.002); end
  def test_lever_graphs_m3881; assert_in_epsilon(180.49194, worksheet.lever_graphs_m3881, 0.002); end
  def test_lever_graphs_n3881; assert_in_epsilon(512.0220600000001, worksheet.lever_graphs_n3881, 0.002); end
  def test_lever_graphs_o3881; assert_in_epsilon(1349.964, worksheet.lever_graphs_o3881, 0.002); end
  def test_lever_graphs_p3881; assert_in_epsilon(2268.6408, worksheet.lever_graphs_p3881, 0.002); end
  def test_lever_graphs_q3881; assert_in_epsilon(3334.5864000000006, worksheet.lever_graphs_q3881, 0.002); end
  def test_lever_graphs_r3881; assert_in_epsilon(4056.9048, worksheet.lever_graphs_r3881, 0.002); end
  def test_lever_graphs_s3881; assert_in_epsilon(4937.011200000001, worksheet.lever_graphs_s3881, 0.002); end
  def test_lever_graphs_b3866; assert_equal("Level", worksheet.lever_graphs_b3866); end
  def test_lever_graphs_c3866; assert_equal("1975", worksheet.lever_graphs_c3866); end
  def test_lever_graphs_d3866; assert_equal("1980", worksheet.lever_graphs_d3866); end
  def test_lever_graphs_e3866; assert_equal("1985", worksheet.lever_graphs_e3866); end
  def test_lever_graphs_f3866; assert_equal("1990", worksheet.lever_graphs_f3866); end
  def test_lever_graphs_g3866; assert_equal("1995", worksheet.lever_graphs_g3866); end
  def test_lever_graphs_h3866; assert_equal("2000", worksheet.lever_graphs_h3866); end
  def test_lever_graphs_i3866; assert_equal("2005", worksheet.lever_graphs_i3866); end
  def test_lever_graphs_j3866; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3866, 0.002); end
  def test_lever_graphs_k3866; assert_equal("2011", worksheet.lever_graphs_k3866); end
  def test_lever_graphs_l3866; assert_equal("2015", worksheet.lever_graphs_l3866); end
  def test_lever_graphs_m3866; assert_equal("2020", worksheet.lever_graphs_m3866); end
  def test_lever_graphs_n3866; assert_equal("2025", worksheet.lever_graphs_n3866); end
  def test_lever_graphs_o3866; assert_equal("2030", worksheet.lever_graphs_o3866); end
  def test_lever_graphs_p3866; assert_equal("2035", worksheet.lever_graphs_p3866); end
  def test_lever_graphs_q3866; assert_equal("2040", worksheet.lever_graphs_q3866); end
  def test_lever_graphs_r3866; assert_equal("2045", worksheet.lever_graphs_r3866); end
  def test_lever_graphs_s3866; assert_equal("2050", worksheet.lever_graphs_s3866); end
  def test_lever_graphs_b3867; assert_equal("Historic data", worksheet.lever_graphs_b3867); end
  def test_lever_graphs_b3868; assert_in_delta(1.0, worksheet.lever_graphs_b3868, 0.002); end
  def test_lever_graphs_k3868; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k3868, 0.002); end
  def test_lever_graphs_l3868; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l3868, 0.002); end
  def test_lever_graphs_m3868; assert_in_epsilon(692.1633599999999, worksheet.lever_graphs_m3868, 0.002); end
  def test_lever_graphs_n3868; assert_in_epsilon(704.7864000000001, worksheet.lever_graphs_n3868, 0.002); end
  def test_lever_graphs_o3868; assert_in_epsilon(468.63036, worksheet.lever_graphs_o3868, 0.002); end
  def test_lever_graphs_p3868; assert_in_delta(0.0, (worksheet.lever_graphs_p3868||0), 0.002); end
  def test_lever_graphs_q3868; assert_in_delta(0.0, (worksheet.lever_graphs_q3868||0), 0.002); end
  def test_lever_graphs_r3868; assert_in_delta(0.0, (worksheet.lever_graphs_r3868||0), 0.002); end
  def test_lever_graphs_s3868; assert_in_delta(0.0, (worksheet.lever_graphs_s3868||0), 0.002); end
  def test_lever_graphs_b3869; assert_in_epsilon(2.0, worksheet.lever_graphs_b3869, 0.002); end
  def test_lever_graphs_k3869; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k3869, 0.002); end
  def test_lever_graphs_l3869; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l3869, 0.002); end
  def test_lever_graphs_m3869; assert_in_epsilon(1038.24504, worksheet.lever_graphs_m3869, 0.002); end
  def test_lever_graphs_n3869; assert_in_epsilon(1277.0308800000003, worksheet.lever_graphs_n3869, 0.002); end
  def test_lever_graphs_o3869; assert_in_epsilon(1753.8136200000004, worksheet.lever_graphs_o3869, 0.002); end
  def test_lever_graphs_p3869; assert_in_epsilon(2078.06796, worksheet.lever_graphs_p3869, 0.002); end
  def test_lever_graphs_q3869; assert_in_epsilon(2808.6264, worksheet.lever_graphs_q3869, 0.002); end
  def test_lever_graphs_r3869; assert_in_epsilon(3942.0701999999997, worksheet.lever_graphs_r3869, 0.002); end
  def test_lever_graphs_s3869; assert_in_epsilon(4896.687600000001, worksheet.lever_graphs_s3869, 0.002); end
  def test_lever_graphs_b3870; assert_in_epsilon(3.0, worksheet.lever_graphs_b3870, 0.002); end
  def test_lever_graphs_k3870; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k3870, 0.002); end
  def test_lever_graphs_l3870; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l3870, 0.002); end
  def test_lever_graphs_m3870; assert_in_epsilon(1432.18908, worksheet.lever_graphs_m3870, 0.002); end
  def test_lever_graphs_n3870; assert_in_epsilon(2065.97088, worksheet.lever_graphs_n3870, 0.002); end
  def test_lever_graphs_o3870; assert_in_epsilon(3469.758120000001, worksheet.lever_graphs_o3870, 0.002); end
  def test_lever_graphs_p3870; assert_in_epsilon(4603.464900000001, worksheet.lever_graphs_p3870, 0.002); end
  def test_lever_graphs_q3870; assert_in_epsilon(6229.9962, worksheet.lever_graphs_q3870, 0.002); end
  def test_lever_graphs_r3870; assert_in_epsilon(7986.7026, worksheet.lever_graphs_r3870, 0.002); end
  def test_lever_graphs_s3870; assert_in_epsilon(9993.239999999998, worksheet.lever_graphs_s3870, 0.002); end
  def test_lever_graphs_b3871; assert_in_epsilon(4.0, worksheet.lever_graphs_b3871, 0.002); end
  def test_lever_graphs_k3871; assert_in_epsilon(429.96967019999994, worksheet.lever_graphs_k3871, 0.002); end
  def test_lever_graphs_l3871; assert_in_epsilon(734.5031399999999, worksheet.lever_graphs_l3871, 0.002); end
  def test_lever_graphs_m3871; assert_in_epsilon(1975.24278, worksheet.lever_graphs_m3871, 0.002); end
  def test_lever_graphs_n3871; assert_in_epsilon(3315.6518399999995, worksheet.lever_graphs_n3871, 0.002); end
  def test_lever_graphs_o3871; assert_in_epsilon(5481.55512, worksheet.lever_graphs_o3871, 0.002); end
  def test_lever_graphs_p3871; assert_in_epsilon(7337.142, worksheet.lever_graphs_p3871, 0.002); end
  def test_lever_graphs_q3871; assert_in_epsilon(10911.040200000001, worksheet.lever_graphs_q3871, 0.002); end
  def test_lever_graphs_r3871; assert_in_epsilon(12047.1138, worksheet.lever_graphs_r3871, 0.002); end
  def test_lever_graphs_s3871; assert_in_epsilon(13301.528400000001, worksheet.lever_graphs_s3871, 0.002); end
  def test_lever_graphs_b3826; assert_equal("Level", worksheet.lever_graphs_b3826); end
  def test_lever_graphs_c3826; assert_equal("1975", worksheet.lever_graphs_c3826); end
  def test_lever_graphs_d3826; assert_equal("1980", worksheet.lever_graphs_d3826); end
  def test_lever_graphs_e3826; assert_equal("1985", worksheet.lever_graphs_e3826); end
  def test_lever_graphs_f3826; assert_equal("1990", worksheet.lever_graphs_f3826); end
  def test_lever_graphs_g3826; assert_equal("1995", worksheet.lever_graphs_g3826); end
  def test_lever_graphs_h3826; assert_equal("2000", worksheet.lever_graphs_h3826); end
  def test_lever_graphs_i3826; assert_equal("2005", worksheet.lever_graphs_i3826); end
  def test_lever_graphs_j3826; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3826, 0.002); end
  def test_lever_graphs_k3826; assert_equal("2011", worksheet.lever_graphs_k3826); end
  def test_lever_graphs_l3826; assert_equal("2015", worksheet.lever_graphs_l3826); end
  def test_lever_graphs_m3826; assert_equal("2020", worksheet.lever_graphs_m3826); end
  def test_lever_graphs_n3826; assert_equal("2025", worksheet.lever_graphs_n3826); end
  def test_lever_graphs_o3826; assert_equal("2030", worksheet.lever_graphs_o3826); end
  def test_lever_graphs_p3826; assert_equal("2035", worksheet.lever_graphs_p3826); end
  def test_lever_graphs_q3826; assert_equal("2040", worksheet.lever_graphs_q3826); end
  def test_lever_graphs_r3826; assert_equal("2045", worksheet.lever_graphs_r3826); end
  def test_lever_graphs_s3826; assert_equal("2050", worksheet.lever_graphs_s3826); end
  def test_lever_graphs_b3827; assert_equal("Historic data", worksheet.lever_graphs_b3827); end
  def test_lever_graphs_b3828; assert_in_delta(1.0, worksheet.lever_graphs_b3828, 0.002); end
  def test_lever_graphs_k3828; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3828, 0.002); end
  def test_lever_graphs_l3828; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3828, 0.002); end
  def test_lever_graphs_m3828; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_m3828, 0.002); end
  def test_lever_graphs_n3828; assert_in_epsilon(111.7665, worksheet.lever_graphs_n3828, 0.002); end
  def test_lever_graphs_o3828; assert_in_epsilon(96.426, worksheet.lever_graphs_o3828, 0.002); end
  def test_lever_graphs_p3828; assert_in_epsilon(61.362, worksheet.lever_graphs_p3828, 0.002); end
  def test_lever_graphs_q3828; assert_in_delta(0.0, (worksheet.lever_graphs_q3828||0), 0.002); end
  def test_lever_graphs_r3828; assert_in_delta(0.0, (worksheet.lever_graphs_r3828||0), 0.002); end
  def test_lever_graphs_s3828; assert_in_delta(0.0, (worksheet.lever_graphs_s3828||0), 0.002); end
  def test_lever_graphs_b3829; assert_in_epsilon(2.0, worksheet.lever_graphs_b3829, 0.002); end
  def test_lever_graphs_k3829; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3829, 0.002); end
  def test_lever_graphs_l3829; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3829, 0.002); end
  def test_lever_graphs_m3829; assert_in_epsilon(272.789154, worksheet.lever_graphs_m3829, 0.002); end
  def test_lever_graphs_n3829; assert_in_epsilon(391.616667, worksheet.lever_graphs_n3829, 0.002); end
  def test_lever_graphs_o3829; assert_in_epsilon(749.6332560000002, worksheet.lever_graphs_o3829, 0.002); end
  def test_lever_graphs_p3829; assert_in_epsilon(1076.2018200000002, worksheet.lever_graphs_p3829, 0.002); end
  def test_lever_graphs_q3829; assert_in_epsilon(1545.0250320000002, worksheet.lever_graphs_q3829, 0.002); end
  def test_lever_graphs_r3829; assert_in_epsilon(2772.620055000001, worksheet.lever_graphs_r3829, 0.002); end
  def test_lever_graphs_s3829; assert_in_epsilon(3980.4433650000005, worksheet.lever_graphs_s3829, 0.002); end
  def test_lever_graphs_b3830; assert_in_epsilon(3.0, worksheet.lever_graphs_b3830, 0.002); end
  def test_lever_graphs_k3830; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3830, 0.002); end
  def test_lever_graphs_l3830; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3830, 0.002); end
  def test_lever_graphs_m3830; assert_in_epsilon(313.314372, worksheet.lever_graphs_m3830, 0.002); end
  def test_lever_graphs_n3830; assert_in_epsilon(516.6505080000001, worksheet.lever_graphs_n3830, 0.002); end
  def test_lever_graphs_o3830; assert_in_epsilon(1135.89828, worksheet.lever_graphs_o3830, 0.002); end
  def test_lever_graphs_p3830; assert_in_epsilon(1873.013688, worksheet.lever_graphs_p3830, 0.002); end
  def test_lever_graphs_q3830; assert_in_epsilon(3088.5072480000003, worksheet.lever_graphs_q3830, 0.002); end
  def test_lever_graphs_r3830; assert_in_epsilon(5166.395504999999, worksheet.lever_graphs_r3830, 0.002); end
  def test_lever_graphs_s3830; assert_in_epsilon(6913.809945, worksheet.lever_graphs_s3830, 0.002); end
  def test_lever_graphs_b3831; assert_in_epsilon(4.0, worksheet.lever_graphs_b3831, 0.002); end
  def test_lever_graphs_k3831; assert_in_epsilon(61.090254, worksheet.lever_graphs_k3831, 0.002); end
  def test_lever_graphs_l3831; assert_in_epsilon(144.63899999999998, worksheet.lever_graphs_l3831, 0.002); end
  def test_lever_graphs_m3831; assert_in_epsilon(411.03774000000004, worksheet.lever_graphs_m3831, 0.002); end
  def test_lever_graphs_n3831; assert_in_epsilon(767.428236, worksheet.lever_graphs_n3831, 0.002); end
  def test_lever_graphs_o3831; assert_in_epsilon(1910.4094440000003, worksheet.lever_graphs_o3831, 0.002); end
  def test_lever_graphs_p3831; assert_in_epsilon(3218.3492400000005, worksheet.lever_graphs_p3831, 0.002); end
  def test_lever_graphs_q3831; assert_in_epsilon(7135.61065943712, worksheet.lever_graphs_q3831, 0.002); end
  def test_lever_graphs_r3831; assert_in_epsilon(19776.03100459067, worksheet.lever_graphs_r3831, 0.002); end
  def test_lever_graphs_s3831; assert_in_epsilon(43829.99999999999, worksheet.lever_graphs_s3831, 0.002); end
  def test_lever_graphs_b3896; assert_equal("Level", worksheet.lever_graphs_b3896); end
  def test_lever_graphs_c3896; assert_equal("1975", worksheet.lever_graphs_c3896); end
  def test_lever_graphs_d3896; assert_equal("1980", worksheet.lever_graphs_d3896); end
  def test_lever_graphs_e3896; assert_equal("1985", worksheet.lever_graphs_e3896); end
  def test_lever_graphs_f3896; assert_equal("1990", worksheet.lever_graphs_f3896); end
  def test_lever_graphs_g3896; assert_equal("1995", worksheet.lever_graphs_g3896); end
  def test_lever_graphs_h3896; assert_equal("2000", worksheet.lever_graphs_h3896); end
  def test_lever_graphs_i3896; assert_equal("2005", worksheet.lever_graphs_i3896); end
  def test_lever_graphs_j3896; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3896, 0.002); end
  def test_lever_graphs_k3896; assert_equal("2011", worksheet.lever_graphs_k3896); end
  def test_lever_graphs_l3896; assert_equal("2015", worksheet.lever_graphs_l3896); end
  def test_lever_graphs_m3896; assert_equal("2020", worksheet.lever_graphs_m3896); end
  def test_lever_graphs_n3896; assert_equal("2025", worksheet.lever_graphs_n3896); end
  def test_lever_graphs_o3896; assert_equal("2030", worksheet.lever_graphs_o3896); end
  def test_lever_graphs_p3896; assert_equal("2035", worksheet.lever_graphs_p3896); end
  def test_lever_graphs_q3896; assert_equal("2040", worksheet.lever_graphs_q3896); end
  def test_lever_graphs_r3896; assert_equal("2045", worksheet.lever_graphs_r3896); end
  def test_lever_graphs_s3896; assert_equal("2050", worksheet.lever_graphs_s3896); end
  def test_lever_graphs_b3897; assert_equal("Historic data", worksheet.lever_graphs_b3897); end
  def test_lever_graphs_b3898; assert_in_delta(1.0, worksheet.lever_graphs_b3898, 0.002); end
  def test_lever_graphs_k3898; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3898, 0.002); end
  def test_lever_graphs_l3898; assert_in_epsilon(1.05192, worksheet.lever_graphs_l3898, 0.002); end
  def test_lever_graphs_m3898; assert_in_epsilon(1.05192, worksheet.lever_graphs_m3898, 0.002); end
  def test_lever_graphs_n3898; assert_in_epsilon(1.7532000000000003, worksheet.lever_graphs_n3898, 0.002); end
  def test_lever_graphs_o3898; assert_in_epsilon(2.1915, worksheet.lever_graphs_o3898, 0.002); end
  def test_lever_graphs_p3898; assert_in_epsilon(2.1915, worksheet.lever_graphs_p3898, 0.002); end
  def test_lever_graphs_q3898; assert_in_epsilon(2.6298, worksheet.lever_graphs_q3898, 0.002); end
  def test_lever_graphs_r3898; assert_in_delta(0.0, (worksheet.lever_graphs_r3898||0), 0.002); end
  def test_lever_graphs_s3898; assert_in_delta(0.0, (worksheet.lever_graphs_s3898||0), 0.002); end
  def test_lever_graphs_b3899; assert_in_epsilon(2.0, worksheet.lever_graphs_b3899, 0.002); end
  def test_lever_graphs_k3899; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3899, 0.002); end
  def test_lever_graphs_l3899; assert_in_epsilon(1.05192, worksheet.lever_graphs_l3899, 0.002); end
  def test_lever_graphs_m3899; assert_in_epsilon(2.10384, worksheet.lever_graphs_m3899, 0.002); end
  def test_lever_graphs_n3899; assert_in_epsilon(7.012800000000001, worksheet.lever_graphs_n3899, 0.002); end
  def test_lever_graphs_o3899; assert_in_epsilon(17.532, worksheet.lever_graphs_o3899, 0.002); end
  def test_lever_graphs_p3899; assert_in_epsilon(28.4895, worksheet.lever_graphs_p3899, 0.002); end
  def test_lever_graphs_q3899; assert_in_epsilon(55.2258, worksheet.lever_graphs_q3899, 0.002); end
  def test_lever_graphs_r3899; assert_in_epsilon(73.6344, worksheet.lever_graphs_r3899, 0.002); end
  def test_lever_graphs_s3899; assert_in_epsilon(92.043, worksheet.lever_graphs_s3899, 0.002); end
  def test_lever_graphs_b3900; assert_in_epsilon(3.0, worksheet.lever_graphs_b3900, 0.002); end
  def test_lever_graphs_k3900; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3900, 0.002); end
  def test_lever_graphs_l3900; assert_in_epsilon(1.05192, worksheet.lever_graphs_l3900, 0.002); end
  def test_lever_graphs_m3900; assert_in_epsilon(2.10384, worksheet.lever_graphs_m3900, 0.002); end
  def test_lever_graphs_n3900; assert_in_epsilon(10.519200000000001, worksheet.lever_graphs_n3900, 0.002); end
  def test_lever_graphs_o3900; assert_in_epsilon(24.1065, worksheet.lever_graphs_o3900, 0.002); end
  def test_lever_graphs_p3900; assert_in_epsilon(48.213, worksheet.lever_graphs_p3900, 0.002); end
  def test_lever_graphs_q3900; assert_in_epsilon(99.93239999999999, worksheet.lever_graphs_q3900, 0.002); end
  def test_lever_graphs_r3900; assert_in_epsilon(184.086, worksheet.lever_graphs_r3900, 0.002); end
  def test_lever_graphs_s3900; assert_in_epsilon(347.1336, worksheet.lever_graphs_s3900, 0.002); end
  def test_lever_graphs_b3901; assert_in_epsilon(4.0, worksheet.lever_graphs_b3901, 0.002); end
  def test_lever_graphs_k3901; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3901, 0.002); end
  def test_lever_graphs_l3901; assert_in_epsilon(1.05192, worksheet.lever_graphs_l3901, 0.002); end
  def test_lever_graphs_m3901; assert_in_epsilon(3.15576, worksheet.lever_graphs_m3901, 0.002); end
  def test_lever_graphs_n3901; assert_in_epsilon(17.532, worksheet.lever_graphs_n3901, 0.002); end
  def test_lever_graphs_o3901; assert_in_epsilon(39.446999999999996, worksheet.lever_graphs_o3901, 0.002); end
  def test_lever_graphs_p3901; assert_in_epsilon(69.47055, worksheet.lever_graphs_p3901, 0.002); end
  def test_lever_graphs_q3901; assert_in_epsilon(147.00582, worksheet.lever_graphs_q3901, 0.002); end
  def test_lever_graphs_r3901; assert_in_epsilon(336.35141999999996, worksheet.lever_graphs_r3901, 0.002); end
  def test_lever_graphs_s3901; assert_in_epsilon(769.47948, worksheet.lever_graphs_s3901, 0.002); end
  def test_lever_graphs_b3916; assert_equal("Level", worksheet.lever_graphs_b3916); end
  def test_lever_graphs_c3916; assert_equal("1975", worksheet.lever_graphs_c3916); end
  def test_lever_graphs_d3916; assert_equal("1980", worksheet.lever_graphs_d3916); end
  def test_lever_graphs_e3916; assert_equal("1985", worksheet.lever_graphs_e3916); end
  def test_lever_graphs_f3916; assert_equal("1990", worksheet.lever_graphs_f3916); end
  def test_lever_graphs_g3916; assert_equal("1995", worksheet.lever_graphs_g3916); end
  def test_lever_graphs_h3916; assert_equal("2000", worksheet.lever_graphs_h3916); end
  def test_lever_graphs_i3916; assert_equal("2005", worksheet.lever_graphs_i3916); end
  def test_lever_graphs_j3916; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3916, 0.002); end
  def test_lever_graphs_k3916; assert_equal("2011", worksheet.lever_graphs_k3916); end
  def test_lever_graphs_l3916; assert_equal("2015", worksheet.lever_graphs_l3916); end
  def test_lever_graphs_m3916; assert_equal("2020", worksheet.lever_graphs_m3916); end
  def test_lever_graphs_n3916; assert_equal("2025", worksheet.lever_graphs_n3916); end
  def test_lever_graphs_o3916; assert_equal("2030", worksheet.lever_graphs_o3916); end
  def test_lever_graphs_p3916; assert_equal("2035", worksheet.lever_graphs_p3916); end
  def test_lever_graphs_q3916; assert_equal("2040", worksheet.lever_graphs_q3916); end
  def test_lever_graphs_r3916; assert_equal("2045", worksheet.lever_graphs_r3916); end
  def test_lever_graphs_s3916; assert_equal("2050", worksheet.lever_graphs_s3916); end
  def test_lever_graphs_b3917; assert_equal("Historic data", worksheet.lever_graphs_b3917); end
  def test_lever_graphs_b3918; assert_in_delta(1.0, worksheet.lever_graphs_b3918, 0.002); end
  def test_lever_graphs_k3918; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3918, 0.002); end
  def test_lever_graphs_l3918; assert_in_epsilon(1.157112, worksheet.lever_graphs_l3918, 0.002); end
  def test_lever_graphs_m3918; assert_in_epsilon(1.157112, worksheet.lever_graphs_m3918, 0.002); end
  def test_lever_graphs_n3918; assert_in_epsilon(1.9285200000000002, worksheet.lever_graphs_n3918, 0.002); end
  def test_lever_graphs_o3918; assert_in_epsilon(4.383, worksheet.lever_graphs_o3918, 0.002); end
  def test_lever_graphs_p3918; assert_in_epsilon(6.5745000000000005, worksheet.lever_graphs_p3918, 0.002); end
  def test_lever_graphs_q3918; assert_in_epsilon(11.3958, worksheet.lever_graphs_q3918, 0.002); end
  def test_lever_graphs_r3918; assert_in_epsilon(18.4086, worksheet.lever_graphs_r3918, 0.002); end
  def test_lever_graphs_s3918; assert_in_epsilon(21.0384, worksheet.lever_graphs_s3918, 0.002); end
  def test_lever_graphs_b3919; assert_in_epsilon(2.0, worksheet.lever_graphs_b3919, 0.002); end
  def test_lever_graphs_k3919; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3919, 0.002); end
  def test_lever_graphs_l3919; assert_in_epsilon(1.157112, worksheet.lever_graphs_l3919, 0.002); end
  def test_lever_graphs_m3919; assert_in_epsilon(3.15576, worksheet.lever_graphs_m3919, 0.002); end
  def test_lever_graphs_n3919; assert_in_epsilon(17.532000000000004, worksheet.lever_graphs_n3919, 0.002); end
  def test_lever_graphs_o3919; assert_in_epsilon(52.596000000000004, worksheet.lever_graphs_o3919, 0.002); end
  def test_lever_graphs_p3919; assert_in_epsilon(87.66, worksheet.lever_graphs_p3919, 0.002); end
  def test_lever_graphs_q3919; assert_in_epsilon(138.5028, worksheet.lever_graphs_q3919, 0.002); end
  def test_lever_graphs_r3919; assert_in_epsilon(207.75419999999997, worksheet.lever_graphs_r3919, 0.002); end
  def test_lever_graphs_s3919; assert_in_epsilon(255.0906, worksheet.lever_graphs_s3919, 0.002); end
  def test_lever_graphs_b3920; assert_in_epsilon(3.0, worksheet.lever_graphs_b3920, 0.002); end
  def test_lever_graphs_k3920; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3920, 0.002); end
  def test_lever_graphs_l3920; assert_in_epsilon(1.157112, worksheet.lever_graphs_l3920, 0.002); end
  def test_lever_graphs_m3920; assert_in_epsilon(4.20768, worksheet.lever_graphs_m3920, 0.002); end
  def test_lever_graphs_n3920; assert_in_epsilon(24.544800000000002, worksheet.lever_graphs_n3920, 0.002); end
  def test_lever_graphs_o3920; assert_in_epsilon(65.745, worksheet.lever_graphs_o3920, 0.002); end
  def test_lever_graphs_p3920; assert_in_epsilon(122.72400000000002, worksheet.lever_graphs_p3920, 0.002); end
  def test_lever_graphs_q3920; assert_in_epsilon(229.23090000000002, worksheet.lever_graphs_q3920, 0.002); end
  def test_lever_graphs_r3920; assert_in_epsilon(402.35940000000005, worksheet.lever_graphs_r3920, 0.002); end
  def test_lever_graphs_s3920; assert_in_epsilon(623.2626, worksheet.lever_graphs_s3920, 0.002); end
  def test_lever_graphs_b3921; assert_in_epsilon(4.0, worksheet.lever_graphs_b3921, 0.002); end
  def test_lever_graphs_k3921; assert_in_delta(0.5543618400000001, worksheet.lever_graphs_k3921, 0.002); end
  def test_lever_graphs_l3921; assert_in_epsilon(1.157112, worksheet.lever_graphs_l3921, 0.002); end
  def test_lever_graphs_m3921; assert_in_epsilon(7.36344, worksheet.lever_graphs_m3921, 0.002); end
  def test_lever_graphs_n3921; assert_in_epsilon(42.076800000000006, worksheet.lever_graphs_n3921, 0.002); end
  def test_lever_graphs_o3921; assert_in_epsilon(105.19200000000001, worksheet.lever_graphs_o3921, 0.002); end
  def test_lever_graphs_p3921; assert_in_epsilon(196.57755, worksheet.lever_graphs_p3921, 0.002); end
  def test_lever_graphs_q3921; assert_in_epsilon(333.28332, worksheet.lever_graphs_q3921, 0.002); end
  def test_lever_graphs_r3921; assert_in_epsilon(644.03802, worksheet.lever_graphs_r3921, 0.002); end
  def test_lever_graphs_s3921; assert_in_epsilon(1145.54088, worksheet.lever_graphs_s3921, 0.002); end
  def test_lever_graphs_b3836; assert_equal("Level", worksheet.lever_graphs_b3836); end
  def test_lever_graphs_c3836; assert_equal("1975", worksheet.lever_graphs_c3836); end
  def test_lever_graphs_d3836; assert_equal("1980", worksheet.lever_graphs_d3836); end
  def test_lever_graphs_e3836; assert_equal("1985", worksheet.lever_graphs_e3836); end
  def test_lever_graphs_f3836; assert_equal("1990", worksheet.lever_graphs_f3836); end
  def test_lever_graphs_g3836; assert_equal("1995", worksheet.lever_graphs_g3836); end
  def test_lever_graphs_h3836; assert_equal("2000", worksheet.lever_graphs_h3836); end
  def test_lever_graphs_i3836; assert_equal("2005", worksheet.lever_graphs_i3836); end
  def test_lever_graphs_j3836; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3836, 0.002); end
  def test_lever_graphs_k3836; assert_equal("2011", worksheet.lever_graphs_k3836); end
  def test_lever_graphs_l3836; assert_equal("2015", worksheet.lever_graphs_l3836); end
  def test_lever_graphs_m3836; assert_equal("2020", worksheet.lever_graphs_m3836); end
  def test_lever_graphs_n3836; assert_equal("2025", worksheet.lever_graphs_n3836); end
  def test_lever_graphs_o3836; assert_equal("2030", worksheet.lever_graphs_o3836); end
  def test_lever_graphs_p3836; assert_equal("2035", worksheet.lever_graphs_p3836); end
  def test_lever_graphs_q3836; assert_equal("2040", worksheet.lever_graphs_q3836); end
  def test_lever_graphs_r3836; assert_equal("2045", worksheet.lever_graphs_r3836); end
  def test_lever_graphs_s3836; assert_equal("2050", worksheet.lever_graphs_s3836); end
  def test_lever_graphs_b3837; assert_equal("Historic data", worksheet.lever_graphs_b3837); end
  def test_lever_graphs_b3838; assert_in_delta(1.0, worksheet.lever_graphs_b3838, 0.002); end
  def test_lever_graphs_k3838; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3838, 0.002); end
  def test_lever_graphs_l3838; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3838, 0.002); end
  def test_lever_graphs_m3838; assert_in_epsilon(197.23499999999999, worksheet.lever_graphs_m3838, 0.002); end
  def test_lever_graphs_n3838; assert_in_epsilon(177.5115, worksheet.lever_graphs_n3838, 0.002); end
  def test_lever_graphs_o3838; assert_in_epsilon(149.022, worksheet.lever_graphs_o3838, 0.002); end
  def test_lever_graphs_p3838; assert_in_epsilon(113.958, worksheet.lever_graphs_p3838, 0.002); end
  def test_lever_graphs_q3838; assert_in_delta(0.0, (worksheet.lever_graphs_q3838||0), 0.002); end
  def test_lever_graphs_r3838; assert_in_delta(0.0, (worksheet.lever_graphs_r3838||0), 0.002); end
  def test_lever_graphs_s3838; assert_in_delta(0.0, (worksheet.lever_graphs_s3838||0), 0.002); end
  def test_lever_graphs_b3839; assert_in_epsilon(2.0, worksheet.lever_graphs_b3839, 0.002); end
  def test_lever_graphs_k3839; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3839, 0.002); end
  def test_lever_graphs_l3839; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3839, 0.002); end
  def test_lever_graphs_m3839; assert_in_epsilon(397.26635400000004, worksheet.lever_graphs_m3839, 0.002); end
  def test_lever_graphs_n3839; assert_in_epsilon(612.958167, worksheet.lever_graphs_n3839, 0.002); end
  def test_lever_graphs_o3839; assert_in_epsilon(1180.9204560000003, worksheet.lever_graphs_o3839, 0.002); end
  def test_lever_graphs_p3839; assert_in_epsilon(1599.53202, worksheet.lever_graphs_p3839, 0.002); end
  def test_lever_graphs_q3839; assert_in_epsilon(2247.1816320000003, worksheet.lever_graphs_q3839, 0.002); end
  def test_lever_graphs_r3839; assert_in_epsilon(3866.616855000001, worksheet.lever_graphs_r3839, 0.002); end
  def test_lever_graphs_s3839; assert_in_epsilon(5340.926565000001, worksheet.lever_graphs_s3839, 0.002); end
  def test_lever_graphs_b3840; assert_in_epsilon(3.0, worksheet.lever_graphs_b3840, 0.002); end
  def test_lever_graphs_k3840; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3840, 0.002); end
  def test_lever_graphs_l3840; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3840, 0.002); end
  def test_lever_graphs_m3840; assert_in_epsilon(458.829972, worksheet.lever_graphs_m3840, 0.002); end
  def test_lever_graphs_n3840; assert_in_epsilon(837.2669580000002, worksheet.lever_graphs_n3840, 0.002); end
  def test_lever_graphs_o3840; assert_in_epsilon(1813.8607200000001, worksheet.lever_graphs_o3840, 0.002); end
  def test_lever_graphs_p3840; assert_in_epsilon(2915.992368, worksheet.lever_graphs_p3840, 0.002); end
  def test_lever_graphs_q3840; assert_in_epsilon(4693.474188, worksheet.lever_graphs_q3840, 0.002); end
  def test_lever_graphs_r3840; assert_in_epsilon(7897.530464999998, worksheet.lever_graphs_r3840, 0.002); end
  def test_lever_graphs_s3840; assert_in_epsilon(10399.522185000002, worksheet.lever_graphs_s3840, 0.002); end
  def test_lever_graphs_b3841; assert_in_epsilon(4.0, worksheet.lever_graphs_b3841, 0.002); end
  def test_lever_graphs_k3841; assert_in_epsilon(63.194094, worksheet.lever_graphs_k3841, 0.002); end
  def test_lever_graphs_l3841; assert_in_epsilon(155.1582, worksheet.lever_graphs_l3841, 0.002); end
  def test_lever_graphs_m3841; assert_in_epsilon(582.15006, worksheet.lever_graphs_m3841, 0.002); end
  def test_lever_graphs_n3841; assert_in_epsilon(1197.4005359999999, worksheet.lever_graphs_n3841, 0.002); end
  def test_lever_graphs_o3841; assert_in_epsilon(2948.391504, worksheet.lever_graphs_o3841, 0.002); end
  def test_lever_graphs_p3841; assert_in_epsilon(4967.42922, worksheet.lever_graphs_p3841, 0.002); end
  def test_lever_graphs_q3841; assert_in_epsilon(10083.09049943712, worksheet.lever_graphs_q3841, 0.002); end
  def test_lever_graphs_r3841; assert_in_epsilon(25035.28036459067, worksheet.lever_graphs_r3841, 0.002); end
  def test_lever_graphs_s3841; assert_in_epsilon(50867.695439999996, worksheet.lever_graphs_s3841, 0.002); end
  def test_lever_graphs_b3906; assert_equal("Level", worksheet.lever_graphs_b3906); end
  def test_lever_graphs_c3906; assert_equal("1975", worksheet.lever_graphs_c3906); end
  def test_lever_graphs_d3906; assert_equal("1980", worksheet.lever_graphs_d3906); end
  def test_lever_graphs_e3906; assert_equal("1985", worksheet.lever_graphs_e3906); end
  def test_lever_graphs_f3906; assert_equal("1990", worksheet.lever_graphs_f3906); end
  def test_lever_graphs_g3906; assert_equal("1995", worksheet.lever_graphs_g3906); end
  def test_lever_graphs_h3906; assert_equal("2000", worksheet.lever_graphs_h3906); end
  def test_lever_graphs_i3906; assert_equal("2005", worksheet.lever_graphs_i3906); end
  def test_lever_graphs_j3906; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3906, 0.002); end
  def test_lever_graphs_k3906; assert_equal("2011", worksheet.lever_graphs_k3906); end
  def test_lever_graphs_l3906; assert_equal("2015", worksheet.lever_graphs_l3906); end
  def test_lever_graphs_m3906; assert_equal("2020", worksheet.lever_graphs_m3906); end
  def test_lever_graphs_n3906; assert_equal("2025", worksheet.lever_graphs_n3906); end
  def test_lever_graphs_o3906; assert_equal("2030", worksheet.lever_graphs_o3906); end
  def test_lever_graphs_p3906; assert_equal("2035", worksheet.lever_graphs_p3906); end
  def test_lever_graphs_q3906; assert_equal("2040", worksheet.lever_graphs_q3906); end
  def test_lever_graphs_r3906; assert_equal("2045", worksheet.lever_graphs_r3906); end
  def test_lever_graphs_s3906; assert_equal("2050", worksheet.lever_graphs_s3906); end
  def test_lever_graphs_b3907; assert_equal("Historic data", worksheet.lever_graphs_b3907); end
  def test_lever_graphs_b3908; assert_in_delta(1.0, worksheet.lever_graphs_b3908, 0.002); end
  def test_lever_graphs_k3908; assert_in_delta(0.0, (worksheet.lever_graphs_k3908||0), 0.002); end
  def test_lever_graphs_l3908; assert_in_delta(0.105192, worksheet.lever_graphs_l3908, 0.002); end
  def test_lever_graphs_m3908; assert_in_delta(0.105192, worksheet.lever_graphs_m3908, 0.002); end
  def test_lever_graphs_n3908; assert_in_delta(0.17532000000000003, worksheet.lever_graphs_n3908, 0.002); end
  def test_lever_graphs_o3908; assert_in_epsilon(2.1915, worksheet.lever_graphs_o3908, 0.002); end
  def test_lever_graphs_p3908; assert_in_epsilon(4.383, worksheet.lever_graphs_p3908, 0.002); end
  def test_lever_graphs_q3908; assert_in_epsilon(8.766, worksheet.lever_graphs_q3908, 0.002); end
  def test_lever_graphs_r3908; assert_in_epsilon(18.4086, worksheet.lever_graphs_r3908, 0.002); end
  def test_lever_graphs_s3908; assert_in_epsilon(21.0384, worksheet.lever_graphs_s3908, 0.002); end
  def test_lever_graphs_b3909; assert_in_epsilon(2.0, worksheet.lever_graphs_b3909, 0.002); end
  def test_lever_graphs_k3909; assert_in_delta(0.0, (worksheet.lever_graphs_k3909||0), 0.002); end
  def test_lever_graphs_l3909; assert_in_delta(0.105192, worksheet.lever_graphs_l3909, 0.002); end
  def test_lever_graphs_m3909; assert_in_epsilon(1.05192, worksheet.lever_graphs_m3909, 0.002); end
  def test_lever_graphs_n3909; assert_in_epsilon(10.519200000000001, worksheet.lever_graphs_n3909, 0.002); end
  def test_lever_graphs_o3909; assert_in_epsilon(35.064, worksheet.lever_graphs_o3909, 0.002); end
  def test_lever_graphs_p3909; assert_in_epsilon(59.170500000000004, worksheet.lever_graphs_p3909, 0.002); end
  def test_lever_graphs_q3909; assert_in_epsilon(83.277, worksheet.lever_graphs_q3909, 0.002); end
  def test_lever_graphs_r3909; assert_in_epsilon(134.11979999999997, worksheet.lever_graphs_r3909, 0.002); end
  def test_lever_graphs_s3909; assert_in_epsilon(163.0476, worksheet.lever_graphs_s3909, 0.002); end
  def test_lever_graphs_b3910; assert_in_epsilon(3.0, worksheet.lever_graphs_b3910, 0.002); end
  def test_lever_graphs_k3910; assert_in_delta(0.0, (worksheet.lever_graphs_k3910||0), 0.002); end
  def test_lever_graphs_l3910; assert_in_delta(0.105192, worksheet.lever_graphs_l3910, 0.002); end
  def test_lever_graphs_m3910; assert_in_epsilon(2.10384, worksheet.lever_graphs_m3910, 0.002); end
  def test_lever_graphs_n3910; assert_in_epsilon(14.025600000000003, worksheet.lever_graphs_n3910, 0.002); end
  def test_lever_graphs_o3910; assert_in_epsilon(41.6385, worksheet.lever_graphs_o3910, 0.002); end
  def test_lever_graphs_p3910; assert_in_epsilon(74.51100000000001, worksheet.lever_graphs_p3910, 0.002); end
  def test_lever_graphs_q3910; assert_in_epsilon(129.29850000000002, worksheet.lever_graphs_q3910, 0.002); end
  def test_lever_graphs_r3910; assert_in_epsilon(218.2734, worksheet.lever_graphs_r3910, 0.002); end
  def test_lever_graphs_s3910; assert_in_epsilon(276.129, worksheet.lever_graphs_s3910, 0.002); end
  def test_lever_graphs_b3911; assert_in_epsilon(4.0, worksheet.lever_graphs_b3911, 0.002); end
  def test_lever_graphs_k3911; assert_in_delta(0.0, (worksheet.lever_graphs_k3911||0), 0.002); end
  def test_lever_graphs_l3911; assert_in_delta(0.105192, worksheet.lever_graphs_l3911, 0.002); end
  def test_lever_graphs_m3911; assert_in_epsilon(4.20768, worksheet.lever_graphs_m3911, 0.002); end
  def test_lever_graphs_n3911; assert_in_epsilon(24.544800000000006, worksheet.lever_graphs_n3911, 0.002); end
  def test_lever_graphs_o3911; assert_in_epsilon(65.745, worksheet.lever_graphs_o3911, 0.002); end
  def test_lever_graphs_p3911; assert_in_epsilon(127.107, worksheet.lever_graphs_p3911, 0.002); end
  def test_lever_graphs_q3911; assert_in_epsilon(186.2775, worksheet.lever_graphs_q3911, 0.002); end
  def test_lever_graphs_r3911; assert_in_epsilon(307.68660000000006, worksheet.lever_graphs_r3911, 0.002); end
  def test_lever_graphs_s3911; assert_in_epsilon(376.0614, worksheet.lever_graphs_s3911, 0.002); end
  def test_lever_graphs_b3886; assert_equal("Level", worksheet.lever_graphs_b3886); end
  def test_lever_graphs_c3886; assert_equal("1975", worksheet.lever_graphs_c3886); end
  def test_lever_graphs_d3886; assert_equal("1980", worksheet.lever_graphs_d3886); end
  def test_lever_graphs_e3886; assert_equal("1985", worksheet.lever_graphs_e3886); end
  def test_lever_graphs_f3886; assert_equal("1990", worksheet.lever_graphs_f3886); end
  def test_lever_graphs_g3886; assert_equal("1995", worksheet.lever_graphs_g3886); end
  def test_lever_graphs_h3886; assert_equal("2000", worksheet.lever_graphs_h3886); end
  def test_lever_graphs_i3886; assert_equal("2005", worksheet.lever_graphs_i3886); end
  def test_lever_graphs_j3886; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3886, 0.002); end
  def test_lever_graphs_k3886; assert_equal("2011", worksheet.lever_graphs_k3886); end
  def test_lever_graphs_l3886; assert_equal("2015", worksheet.lever_graphs_l3886); end
  def test_lever_graphs_m3886; assert_equal("2020", worksheet.lever_graphs_m3886); end
  def test_lever_graphs_n3886; assert_equal("2025", worksheet.lever_graphs_n3886); end
  def test_lever_graphs_o3886; assert_equal("2030", worksheet.lever_graphs_o3886); end
  def test_lever_graphs_p3886; assert_equal("2035", worksheet.lever_graphs_p3886); end
  def test_lever_graphs_q3886; assert_equal("2040", worksheet.lever_graphs_q3886); end
  def test_lever_graphs_r3886; assert_equal("2045", worksheet.lever_graphs_r3886); end
  def test_lever_graphs_s3886; assert_equal("2050", worksheet.lever_graphs_s3886); end
  def test_lever_graphs_b3887; assert_equal("Historic data", worksheet.lever_graphs_b3887); end
  def test_lever_graphs_b3888; assert_in_delta(1.0, worksheet.lever_graphs_b3888, 0.002); end
  def test_lever_graphs_k3888; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k3888, 0.002); end
  def test_lever_graphs_l3888; assert_in_epsilon(772.63524, worksheet.lever_graphs_l3888, 0.002); end
  def test_lever_graphs_m3888; assert_in_epsilon(735.3797399999999, worksheet.lever_graphs_m3888, 0.002); end
  def test_lever_graphs_n3888; assert_in_epsilon(742.39254, worksheet.lever_graphs_n3888, 0.002); end
  def test_lever_graphs_o3888; assert_in_epsilon(468.63036, worksheet.lever_graphs_o3888, 0.002); end
  def test_lever_graphs_p3888; assert_in_delta(0.0, (worksheet.lever_graphs_p3888||0), 0.002); end
  def test_lever_graphs_q3888; assert_in_delta(0.0, (worksheet.lever_graphs_q3888||0), 0.002); end
  def test_lever_graphs_r3888; assert_in_delta(0.0, (worksheet.lever_graphs_r3888||0), 0.002); end
  def test_lever_graphs_s3888; assert_in_delta(0.0, (worksheet.lever_graphs_s3888||0), 0.002); end
  def test_lever_graphs_b3889; assert_in_epsilon(2.0, worksheet.lever_graphs_b3889, 0.002); end
  def test_lever_graphs_k3889; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k3889, 0.002); end
  def test_lever_graphs_l3889; assert_in_epsilon(772.63524, worksheet.lever_graphs_l3889, 0.002); end
  def test_lever_graphs_m3889; assert_in_epsilon(1122.13566, worksheet.lever_graphs_m3889, 0.002); end
  def test_lever_graphs_n3889; assert_in_epsilon(1421.6698800000001, worksheet.lever_graphs_n3889, 0.002); end
  def test_lever_graphs_o3889; assert_in_epsilon(2048.3512200000005, worksheet.lever_graphs_o3889, 0.002); end
  def test_lever_graphs_p3889; assert_in_epsilon(2593.5087599999997, worksheet.lever_graphs_p3889, 0.002); end
  def test_lever_graphs_q3889; assert_in_epsilon(3580.0344, worksheet.lever_graphs_q3889, 0.002); end
  def test_lever_graphs_r3889; assert_in_epsilon(5260.4766, worksheet.lever_graphs_r3889, 0.002); end
  def test_lever_graphs_s3889; assert_in_epsilon(6492.099600000001, worksheet.lever_graphs_s3889, 0.002); end
  def test_lever_graphs_b3890; assert_in_epsilon(3.0, worksheet.lever_graphs_b3890, 0.002); end
  def test_lever_graphs_k3890; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k3890, 0.002); end
  def test_lever_graphs_l3890; assert_in_epsilon(772.63524, worksheet.lever_graphs_l3890, 0.002); end
  def test_lever_graphs_m3890; assert_in_epsilon(1549.12752, worksheet.lever_graphs_m3890, 0.002); end
  def test_lever_graphs_n3890; assert_in_epsilon(2317.64274, worksheet.lever_graphs_n3890, 0.002); end
  def test_lever_graphs_o3890; assert_in_epsilon(4046.560920000001, worksheet.lever_graphs_o3890, 0.002); end
  def test_lever_graphs_p3890; assert_in_epsilon(5637.852900000001, worksheet.lever_graphs_p3890, 0.002); end
  def test_lever_graphs_q3890; assert_in_epsilon(7716.7098, worksheet.lever_graphs_q3890, 0.002); end
  def test_lever_graphs_r3890; assert_in_epsilon(10469.2338, worksheet.lever_graphs_r3890, 0.002); end
  def test_lever_graphs_s3890; assert_in_epsilon(13184.063999999998, worksheet.lever_graphs_s3890, 0.002); end
  def test_lever_graphs_b3891; assert_in_epsilon(4.0, worksheet.lever_graphs_b3891, 0.002); end
  def test_lever_graphs_k3891; assert_in_epsilon(440.39244419999994, worksheet.lever_graphs_k3891, 0.002); end
  def test_lever_graphs_l3891; assert_in_epsilon(772.63524, worksheet.lever_graphs_l3891, 0.002); end
  def test_lever_graphs_m3891; assert_in_epsilon(2155.73472, worksheet.lever_graphs_m3891, 0.002); end
  def test_lever_graphs_n3891; assert_in_epsilon(3827.6739, worksheet.lever_graphs_n3891, 0.002); end
  def test_lever_graphs_o3891; assert_in_epsilon(6831.51912, worksheet.lever_graphs_o3891, 0.002); end
  def test_lever_graphs_p3891; assert_in_epsilon(9605.7828, worksheet.lever_graphs_p3891, 0.002); end
  def test_lever_graphs_q3891; assert_in_epsilon(14245.626600000001, worksheet.lever_graphs_q3891, 0.002); end
  def test_lever_graphs_r3891; assert_in_epsilon(16104.0186, worksheet.lever_graphs_r3891, 0.002); end
  def test_lever_graphs_s3891; assert_in_epsilon(18238.539600000004, worksheet.lever_graphs_s3891, 0.002); end
  def test_lever_graphs_b2205; assert_equal("Technology code", worksheet.lever_graphs_b2205); end
  def test_lever_graphs_c2205; assert_equal("1975", worksheet.lever_graphs_c2205); end
  def test_lever_graphs_d2205; assert_equal("1980", worksheet.lever_graphs_d2205); end
  def test_lever_graphs_e2205; assert_equal("1985", worksheet.lever_graphs_e2205); end
  def test_lever_graphs_f2205; assert_equal("1990", worksheet.lever_graphs_f2205); end
  def test_lever_graphs_g2205; assert_equal("1995", worksheet.lever_graphs_g2205); end
  def test_lever_graphs_h2205; assert_equal("2000", worksheet.lever_graphs_h2205); end
  def test_lever_graphs_i2205; assert_equal("2005", worksheet.lever_graphs_i2205); end
  def test_lever_graphs_j2205; assert_equal("2010", worksheet.lever_graphs_j2205); end
  def test_lever_graphs_k2205; assert_equal("2011", worksheet.lever_graphs_k2205); end
  def test_lever_graphs_b2206; assert_equal("walk.passenger.urban", worksheet.lever_graphs_b2206); end
  def test_lever_graphs_k2206; assert_in_delta(0.0, (worksheet.lever_graphs_k2206||0), 0.002); end
  def test_lever_graphs_b2207; assert_equal("bike.passenger.urban", worksheet.lever_graphs_b2207); end
  def test_lever_graphs_k2207; assert_in_delta(0.0, (worksheet.lever_graphs_k2207||0), 0.002); end
  def test_lever_graphs_b2208; assert_equal("motorbike.passenger.urban.fuel", worksheet.lever_graphs_b2208); end
  def test_lever_graphs_k2208; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2208, 0.002); end
  def test_lever_graphs_b2209; assert_equal("motorbike.passenger.urban.elec", worksheet.lever_graphs_b2209); end
  def test_lever_graphs_k2209; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2209, 0.002); end
  def test_lever_graphs_b2210; assert_equal("car.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2210); end
  def test_lever_graphs_k2210; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2210, 0.002); end
  def test_lever_graphs_b2211; assert_equal("car.passenger.urban.ICE.gas", worksheet.lever_graphs_b2211); end
  def test_lever_graphs_k2211; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2211, 0.002); end
  def test_lever_graphs_b2212; assert_equal("car.passenger.urban.PH", worksheet.lever_graphs_b2212); end
  def test_lever_graphs_k2212; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2212, 0.002); end
  def test_lever_graphs_b2213; assert_equal("car.passenger.urban.EV", worksheet.lever_graphs_b2213); end
  def test_lever_graphs_k2213; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2213, 0.002); end
  def test_lever_graphs_b2214; assert_equal("car.passenger.urban.H2", worksheet.lever_graphs_b2214); end
  def test_lever_graphs_k2214; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2214, 0.002); end
  def test_lever_graphs_b2215; assert_equal("bus.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2215); end
  def test_lever_graphs_k2215; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2215, 0.002); end
  def test_lever_graphs_b2216; assert_equal("bus.passenger.urban.ICE.gas", worksheet.lever_graphs_b2216); end
  def test_lever_graphs_k2216; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2216, 0.002); end
  def test_lever_graphs_b2217; assert_equal("bus.passenger.urban.PH", worksheet.lever_graphs_b2217); end
  def test_lever_graphs_k2217; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2217, 0.002); end
  def test_lever_graphs_b2218; assert_equal("bus.passenger.urban.EV", worksheet.lever_graphs_b2218); end
  def test_lever_graphs_k2218; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2218, 0.002); end
  def test_lever_graphs_b2219; assert_equal("bus.passenger.urban.H2", worksheet.lever_graphs_b2219); end
  def test_lever_graphs_k2219; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2219, 0.002); end
  def test_lever_graphs_b2220; assert_equal("train.passenger.urban.fuel", worksheet.lever_graphs_b2220); end
  def test_lever_graphs_k2220; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2220, 0.002); end
  def test_lever_graphs_b2221; assert_equal("train.passenger.urban.elec", worksheet.lever_graphs_b2221); end
  def test_lever_graphs_k2221; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2221, 0.002); end
  def test_lever_graphs_b2222; assert_equal("walk.passenger.rural", worksheet.lever_graphs_b2222); end
  def test_lever_graphs_k2222; assert_in_delta(0.0, (worksheet.lever_graphs_k2222||0), 0.002); end
  def test_lever_graphs_b2223; assert_equal("bike.passenger.rural", worksheet.lever_graphs_b2223); end
  def test_lever_graphs_k2223; assert_in_delta(0.0, (worksheet.lever_graphs_k2223||0), 0.002); end
  def test_lever_graphs_b2224; assert_equal("motorbike.passenger.rural.fuel", worksheet.lever_graphs_b2224); end
  def test_lever_graphs_k2224; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2224, 0.002); end
  def test_lever_graphs_b2225; assert_equal("motorbike.passenger.rural.elec", worksheet.lever_graphs_b2225); end
  def test_lever_graphs_k2225; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2225, 0.002); end
  def test_lever_graphs_b2226; assert_equal("car.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2226); end
  def test_lever_graphs_k2226; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2226, 0.002); end
  def test_lever_graphs_b2227; assert_equal("car.passenger.rural.ICE.gas", worksheet.lever_graphs_b2227); end
  def test_lever_graphs_k2227; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2227, 0.002); end
  def test_lever_graphs_b2228; assert_equal("car.passenger.rural.PH", worksheet.lever_graphs_b2228); end
  def test_lever_graphs_k2228; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2228, 0.002); end
  def test_lever_graphs_b2229; assert_equal("car.passenger.rural.EV", worksheet.lever_graphs_b2229); end
  def test_lever_graphs_k2229; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2229, 0.002); end
  def test_lever_graphs_b2230; assert_equal("car.passenger.rural.H2", worksheet.lever_graphs_b2230); end
  def test_lever_graphs_k2230; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2230, 0.002); end
  def test_lever_graphs_b2231; assert_equal("bus.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2231); end
  def test_lever_graphs_k2231; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2231, 0.002); end
  def test_lever_graphs_b2232; assert_equal("bus.passenger.rural.ICE.gas", worksheet.lever_graphs_b2232); end
  def test_lever_graphs_k2232; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2232, 0.002); end
  def test_lever_graphs_b2233; assert_equal("bus.passenger.rural.PH", worksheet.lever_graphs_b2233); end
  def test_lever_graphs_k2233; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2233, 0.002); end
  def test_lever_graphs_b2234; assert_equal("bus.passenger.rural.EV", worksheet.lever_graphs_b2234); end
  def test_lever_graphs_k2234; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2234, 0.002); end
  def test_lever_graphs_b2235; assert_equal("bus.passenger.rural.H2", worksheet.lever_graphs_b2235); end
  def test_lever_graphs_k2235; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2235, 0.002); end
  def test_lever_graphs_b2236; assert_equal("train.passenger.rural.fuel", worksheet.lever_graphs_b2236); end
  def test_lever_graphs_k2236; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2236, 0.002); end
  def test_lever_graphs_b2237; assert_equal("train.passenger.rural.elec", worksheet.lever_graphs_b2237); end
  def test_lever_graphs_k2237; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2237, 0.002); end
  def test_lever_graphs_b2238; assert_equal("plane.passenger.international.short.fuel", worksheet.lever_graphs_b2238); end
  def test_lever_graphs_k2238; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2238, 0.002); end
  def test_lever_graphs_b2239; assert_equal("plane.passenger.international.short.H2", worksheet.lever_graphs_b2239); end
  def test_lever_graphs_k2239; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2239, 0.002); end
  def test_lever_graphs_b2240; assert_equal("plane.passenger.international.long.fuel", worksheet.lever_graphs_b2240); end
  def test_lever_graphs_k2240; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2240, 0.002); end
  def test_lever_graphs_b2241; assert_equal("plane.passenger.international.long.H2", worksheet.lever_graphs_b2241); end
  def test_lever_graphs_k2241; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2241, 0.002); end
  def test_lever_graphs_b2242; assert_equal("train.passenger.international.fuel", worksheet.lever_graphs_b2242); end
  def test_lever_graphs_k2242; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2242, 0.002); end
  def test_lever_graphs_b2243; assert_equal("train.passenger.international.elec", worksheet.lever_graphs_b2243); end
  def test_lever_graphs_k2243; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2243, 0.002); end
  def test_lever_graphs_b2288; assert_equal("Technology code", worksheet.lever_graphs_b2288); end
  def test_lever_graphs_c2288; assert_equal("1975", worksheet.lever_graphs_c2288); end
  def test_lever_graphs_d2288; assert_equal("1980", worksheet.lever_graphs_d2288); end
  def test_lever_graphs_e2288; assert_equal("1985", worksheet.lever_graphs_e2288); end
  def test_lever_graphs_f2288; assert_equal("1990", worksheet.lever_graphs_f2288); end
  def test_lever_graphs_g2288; assert_equal("1995", worksheet.lever_graphs_g2288); end
  def test_lever_graphs_h2288; assert_equal("2000", worksheet.lever_graphs_h2288); end
  def test_lever_graphs_i2288; assert_equal("2005", worksheet.lever_graphs_i2288); end
  def test_lever_graphs_j2288; assert_equal("2010", worksheet.lever_graphs_j2288); end
  def test_lever_graphs_k2288; assert_equal("2011", worksheet.lever_graphs_k2288); end
  def test_lever_graphs_b2289; assert_equal("light.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2289); end
  def test_lever_graphs_k2289; assert_in_epsilon(9.96, worksheet.lever_graphs_k2289, 0.002); end
  def test_lever_graphs_b2290; assert_equal("light.truck.domestic.ICE.gas", worksheet.lever_graphs_b2290); end
  def test_lever_graphs_k2290; assert_in_epsilon(9.96, worksheet.lever_graphs_k2290, 0.002); end
  def test_lever_graphs_b2291; assert_equal("light.truck.domestic.PH", worksheet.lever_graphs_b2291); end
  def test_lever_graphs_k2291; assert_in_epsilon(9.060000000000002, worksheet.lever_graphs_k2291, 0.002); end
  def test_lever_graphs_b2292; assert_equal("light.truck.domestic.EV", worksheet.lever_graphs_b2292); end
  def test_lever_graphs_k2292; assert_in_epsilon(3.3999999999999995, worksheet.lever_graphs_k2292, 0.002); end
  def test_lever_graphs_b2293; assert_equal("light.truck.domestic.H2", worksheet.lever_graphs_b2293); end
  def test_lever_graphs_k2293; assert_in_epsilon(7.62, worksheet.lever_graphs_k2293, 0.002); end
  def test_lever_graphs_b2294; assert_equal("heavy.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2294); end
  def test_lever_graphs_k2294; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2294, 0.002); end
  def test_lever_graphs_b2295; assert_equal("heavy.truck.domestic.ICE.gas", worksheet.lever_graphs_b2295); end
  def test_lever_graphs_k2295; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2295, 0.002); end
  def test_lever_graphs_b2296; assert_equal("heavy.truck.domestic.PH", worksheet.lever_graphs_b2296); end
  def test_lever_graphs_k2296; assert_in_epsilon(28.57, worksheet.lever_graphs_k2296, 0.002); end
  def test_lever_graphs_b2297; assert_equal("heavy.truck.domestic.EV", worksheet.lever_graphs_b2297); end
  def test_lever_graphs_k2297; assert_in_epsilon(12.37, worksheet.lever_graphs_k2297, 0.002); end
  def test_lever_graphs_b2298; assert_equal("heavy.truck.domestic.H2", worksheet.lever_graphs_b2298); end
  def test_lever_graphs_k2298; assert_in_epsilon(26.35, worksheet.lever_graphs_k2298, 0.002); end
  def test_lever_graphs_b2299; assert_equal("train.freight.domestic.fuel", worksheet.lever_graphs_b2299); end
  def test_lever_graphs_k2299; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2299, 0.002); end
  def test_lever_graphs_b2300; assert_equal("train.freight.domestic.elec", worksheet.lever_graphs_b2300); end
  def test_lever_graphs_k2300; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2300, 0.002); end
  def test_lever_graphs_b2301; assert_equal("ship.freight.domestic.fuel", worksheet.lever_graphs_b2301); end
  def test_lever_graphs_k2301; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2301, 0.002); end
  def test_lever_graphs_b2302; assert_equal("ship.freight.domestic.H2", worksheet.lever_graphs_b2302); end
  def test_lever_graphs_k2302; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2302, 0.002); end
  def test_lever_graphs_b2303; assert_equal("heavy.truck.international.ICE.liquid", worksheet.lever_graphs_b2303); end
  def test_lever_graphs_k2303; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2303, 0.002); end
  def test_lever_graphs_b2304; assert_equal("heavy.truck.international.ICE.gas", worksheet.lever_graphs_b2304); end
  def test_lever_graphs_k2304; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2304, 0.002); end
  def test_lever_graphs_b2305; assert_equal("heavy.truck.international.PH", worksheet.lever_graphs_b2305); end
  def test_lever_graphs_k2305; assert_in_epsilon(28.57, worksheet.lever_graphs_k2305, 0.002); end
  def test_lever_graphs_b2306; assert_equal("heavy.truck.international.EV", worksheet.lever_graphs_b2306); end
  def test_lever_graphs_k2306; assert_in_epsilon(12.37, worksheet.lever_graphs_k2306, 0.002); end
  def test_lever_graphs_b2307; assert_equal("heavy.truck.international.H2", worksheet.lever_graphs_b2307); end
  def test_lever_graphs_k2307; assert_in_epsilon(26.35, worksheet.lever_graphs_k2307, 0.002); end
  def test_lever_graphs_b2308; assert_equal("train.freight.international.fuel", worksheet.lever_graphs_b2308); end
  def test_lever_graphs_k2308; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2308, 0.002); end
  def test_lever_graphs_b2309; assert_equal("train.freight.international.elec", worksheet.lever_graphs_b2309); end
  def test_lever_graphs_k2309; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2309, 0.002); end
  def test_lever_graphs_b2310; assert_equal("ship.freight.international.fuel", worksheet.lever_graphs_b2310); end
  def test_lever_graphs_k2310; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2310, 0.002); end
  def test_lever_graphs_b2311; assert_equal("ship.freight.international.H2", worksheet.lever_graphs_b2311); end
  def test_lever_graphs_k2311; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2311, 0.002); end
  def test_lever_graphs_b2312; assert_equal("plane.freight.international.fuel", worksheet.lever_graphs_b2312); end
  def test_lever_graphs_k2312; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2312, 0.002); end
  def test_lever_graphs_b2313; assert_equal("plane.freight.international.H2", worksheet.lever_graphs_b2313); end
  def test_lever_graphs_k2313; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2313, 0.002); end
  def test_lever_graphs_b3441; assert_equal("Type of travel", worksheet.lever_graphs_b3441); end
  def test_lever_graphs_c3441; assert_equal("Level", worksheet.lever_graphs_c3441); end
  def test_lever_graphs_d3441; assert_equal("Type of city", worksheet.lever_graphs_d3441); end
  def test_lever_graphs_e3441; assert_equal("1985", worksheet.lever_graphs_e3441); end
  def test_lever_graphs_f3441; assert_equal("1990", worksheet.lever_graphs_f3441); end
  def test_lever_graphs_g3441; assert_equal("1995", worksheet.lever_graphs_g3441); end
  def test_lever_graphs_h3441; assert_equal("2000", worksheet.lever_graphs_h3441); end
  def test_lever_graphs_i3441; assert_equal("2005", worksheet.lever_graphs_i3441); end
  def test_lever_graphs_j3441; assert_equal("2010", worksheet.lever_graphs_j3441); end
  def test_lever_graphs_k3441; assert_equal("2011", worksheet.lever_graphs_k3441); end
  def test_lever_graphs_l3441; assert_equal("2015", worksheet.lever_graphs_l3441); end
  def test_lever_graphs_m3441; assert_equal("2020", worksheet.lever_graphs_m3441); end
  def test_lever_graphs_n3441; assert_equal("2025", worksheet.lever_graphs_n3441); end
  def test_lever_graphs_o3441; assert_equal("2030", worksheet.lever_graphs_o3441); end
  def test_lever_graphs_p3441; assert_equal("2035", worksheet.lever_graphs_p3441); end
  def test_lever_graphs_q3441; assert_equal("2040", worksheet.lever_graphs_q3441); end
  def test_lever_graphs_r3441; assert_equal("2045", worksheet.lever_graphs_r3441); end
  def test_lever_graphs_s3441; assert_equal("2050", worksheet.lever_graphs_s3441); end
  def test_lever_graphs_b3442; assert_equal("Urban", worksheet.lever_graphs_b3442); end
  def test_lever_graphs_c3442; assert_in_delta(1.0, worksheet.lever_graphs_c3442, 0.002); end
  def test_lever_graphs_d3442; assert_equal("Automobile city", worksheet.lever_graphs_d3442); end
  def test_lever_graphs_k3442; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3442, 0.002); end
  def test_lever_graphs_l3442; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3442, 0.002); end
  def test_lever_graphs_m3442; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m3442, 0.002); end
  def test_lever_graphs_n3442; assert_in_epsilon(12600.851505289062, worksheet.lever_graphs_n3442, 0.002); end
  def test_lever_graphs_o3442; assert_in_epsilon(12721.015350442445, worksheet.lever_graphs_o3442, 0.002); end
  def test_lever_graphs_p3442; assert_in_epsilon(12842.325098289466, worksheet.lever_graphs_p3442, 0.002); end
  def test_lever_graphs_q3442; assert_in_epsilon(12964.791676351475, worksheet.lever_graphs_q3442, 0.002); end
  def test_lever_graphs_r3442; assert_in_epsilon(13088.426116356506, worksheet.lever_graphs_r3442, 0.002); end
  def test_lever_graphs_s3442; assert_in_epsilon(13101.519778890486, worksheet.lever_graphs_s3442, 0.002); end
  def test_lever_graphs_b3443; assert_equal("Urban", worksheet.lever_graphs_b3443); end
  def test_lever_graphs_c3443; assert_in_epsilon(2.0, worksheet.lever_graphs_c3443, 0.002); end
  def test_lever_graphs_d3443; assert_equal("Automobile city", worksheet.lever_graphs_d3443); end
  def test_lever_graphs_k3443; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3443, 0.002); end
  def test_lever_graphs_l3443; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3443, 0.002); end
  def test_lever_graphs_m3443; assert_in_epsilon(12302.73761329493, worksheet.lever_graphs_m3443, 0.002); end
  def test_lever_graphs_n3443; assert_in_epsilon(12420.058594095803, worksheet.lever_graphs_n3443, 0.002); end
  def test_lever_graphs_o3443; assert_in_epsilon(12538.498367556385, worksheet.lever_graphs_o3443, 0.002); end
  def test_lever_graphs_p3443; assert_in_epsilon(12658.067602672169, worksheet.lever_graphs_p3443, 0.002); end
  def test_lever_graphs_q3443; assert_in_epsilon(12778.777070179987, worksheet.lever_graphs_q3443, 0.002); end
  def test_lever_graphs_r3443; assert_in_epsilon(12651.499429280722, worksheet.lever_graphs_r3443, 0.002); end
  def test_lever_graphs_s3443; assert_in_epsilon(12525.489483856847, worksheet.lever_graphs_s3443, 0.002); end
  def test_lever_graphs_b3444; assert_equal("Urban", worksheet.lever_graphs_b3444); end
  def test_lever_graphs_c3444; assert_in_epsilon(3.0, worksheet.lever_graphs_c3444, 0.002); end
  def test_lever_graphs_d3444; assert_equal("Automobile city", worksheet.lever_graphs_d3444); end
  def test_lever_graphs_k3444; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3444, 0.002); end
  def test_lever_graphs_l3444; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3444, 0.002); end
  def test_lever_graphs_m3444; assert_in_epsilon(12180.784397392952, worksheet.lever_graphs_m3444, 0.002); end
  def test_lever_graphs_n3444; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_n3444, 0.002); end
  def test_lever_graphs_o3444; assert_in_epsilon(12272.414759432238, worksheet.lever_graphs_o3444, 0.002); end
  def test_lever_graphs_p3444; assert_in_epsilon(12150.180527616512, worksheet.lever_graphs_p3444, 0.002); end
  def test_lever_graphs_q3444; assert_in_epsilon(11969.018060318878, worksheet.lever_graphs_q3444, 0.002); end
  def test_lever_graphs_r3444; assert_in_epsilon(11731.54509713868, worksheet.lever_graphs_r3444, 0.002); end
  def test_lever_graphs_s3444; assert_in_epsilon(11441.174728177544, worksheet.lever_graphs_s3444, 0.002); end
  def test_lever_graphs_b3445; assert_equal("Urban", worksheet.lever_graphs_b3445); end
  def test_lever_graphs_c3445; assert_in_epsilon(4.0, worksheet.lever_graphs_c3445, 0.002); end
  def test_lever_graphs_d3445; assert_equal("Automobile city", worksheet.lever_graphs_d3445); end
  def test_lever_graphs_k3445; assert_in_epsilon(11737.0, worksheet.lever_graphs_k3445, 0.002); end
  def test_lever_graphs_l3445; assert_in_epsilon(12011.67656948035, worksheet.lever_graphs_l3445, 0.002); end
  def test_lever_graphs_m3445; assert_in_epsilon(12132.274764133377, worksheet.lever_graphs_m3445, 0.002); end
  def test_lever_graphs_n3445; assert_in_epsilon(12193.057582085099, worksheet.lever_graphs_n3445, 0.002); end
  def test_lever_graphs_o3445; assert_in_epsilon(12132.214102880871, worksheet.lever_graphs_o3445, 0.002); end
  def test_lever_graphs_p3445; assert_in_epsilon(11951.319519819708, worksheet.lever_graphs_p3445, 0.002); end
  def test_lever_graphs_q3445; assert_in_epsilon(11714.197706987443, worksheet.lever_graphs_q3445, 0.002); end
  def test_lever_graphs_r3445; assert_in_epsilon(11424.256707562632, worksheet.lever_graphs_r3445, 0.002); end
  def test_lever_graphs_s3445; assert_in_epsilon(11085.617136296338, worksheet.lever_graphs_s3445, 0.002); end
  def test_lever_graphs_b3446; assert_equal("Urban", worksheet.lever_graphs_b3446); end
  def test_lever_graphs_c3446; assert_in_delta(1.0, worksheet.lever_graphs_c3446, 0.002); end
  def test_lever_graphs_d3446; assert_equal("Transit city", worksheet.lever_graphs_d3446); end
  def test_lever_graphs_k3446; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3446, 0.002); end
  def test_lever_graphs_l3446; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l3446, 0.002); end
  def test_lever_graphs_m3446; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_m3446, 0.002); end
  def test_lever_graphs_n3446; assert_in_epsilon(10396.742824235202, worksheet.lever_graphs_n3446, 0.002); end
  def test_lever_graphs_o3446; assert_in_epsilon(10792.512873967888, worksheet.lever_graphs_o3446, 0.002); end
  def test_lever_graphs_p3446; assert_in_epsilon(11203.348597144019, worksheet.lever_graphs_p3446, 0.002); end
  def test_lever_graphs_q3446; assert_in_epsilon(11486.247188453117, worksheet.lever_graphs_q3446, 0.002); end
  def test_lever_graphs_r3446; assert_in_epsilon(11776.28932370095, worksheet.lever_graphs_r3446, 0.002); end
  def test_lever_graphs_s3446; assert_in_epsilon(11894.524211556534, worksheet.lever_graphs_s3446, 0.002); end
  def test_lever_graphs_b3447; assert_equal("Urban", worksheet.lever_graphs_b3447); end
  def test_lever_graphs_c3447; assert_in_epsilon(2.0, worksheet.lever_graphs_c3447, 0.002); end
  def test_lever_graphs_d3447; assert_equal("Transit city", worksheet.lever_graphs_d3447); end
  def test_lever_graphs_k3447; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3447, 0.002); end
  def test_lever_graphs_l3447; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l3447, 0.002); end
  def test_lever_graphs_m3447; assert_in_epsilon(9794.781195786827, worksheet.lever_graphs_m3447, 0.002); end
  def test_lever_graphs_n3447; assert_in_epsilon(10167.63653197357, worksheet.lever_graphs_n3447, 0.002); end
  def test_lever_graphs_o3447; assert_in_epsilon(10554.685253284908, worksheet.lever_graphs_o3447, 0.002); end
  def test_lever_graphs_p3447; assert_in_epsilon(10821.204282303284, worksheet.lever_graphs_p3447, 0.002); end
  def test_lever_graphs_q3447; assert_in_epsilon(11094.453250786866, worksheet.lever_graphs_q3447, 0.002); end
  def test_lever_graphs_r3447; assert_in_epsilon(11205.842449868938, worksheet.lever_graphs_r3447, 0.002); end
  def test_lever_graphs_s3447; assert_in_epsilon(11217.052775552344, worksheet.lever_graphs_s3447, 0.002); end
  def test_lever_graphs_b3448; assert_equal("Urban", worksheet.lever_graphs_b3448); end
  def test_lever_graphs_c3448; assert_in_epsilon(3.0, worksheet.lever_graphs_c3448, 0.002); end
  def test_lever_graphs_d3448; assert_equal("Transit city", worksheet.lever_graphs_d3448); end
  def test_lever_graphs_k3448; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3448, 0.002); end
  def test_lever_graphs_l3448; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l3448, 0.002); end
  def test_lever_graphs_m3448; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_m3448, 0.002); end
  def test_lever_graphs_n3448; assert_in_epsilon(10032.93015155032, worksheet.lever_graphs_n3448, 0.002); end
  def test_lever_graphs_o3448; assert_in_epsilon(10235.200457333296, worksheet.lever_graphs_o3448, 0.002); end
  def test_lever_graphs_p3448; assert_in_epsilon(10441.548662192965, worksheet.lever_graphs_p3448, 0.002); end
  def test_lever_graphs_q3448; assert_in_epsilon(10546.382646920933, worksheet.lever_graphs_q3448, 0.002); end
  def test_lever_graphs_r3448; assert_in_epsilon(10652.26917325068, worksheet.lever_graphs_r3448, 0.002); end
  def test_lever_graphs_s3448; assert_in_epsilon(10662.925704183865, worksheet.lever_graphs_s3448, 0.002); end
  def test_lever_graphs_b3449; assert_equal("Urban", worksheet.lever_graphs_b3449); end
  def test_lever_graphs_c3449; assert_in_epsilon(4.0, worksheet.lever_graphs_c3449, 0.002); end
  def test_lever_graphs_d3449; assert_equal("Transit city", worksheet.lever_graphs_d3449); end
  def test_lever_graphs_k3449; assert_in_epsilon(8237.0, worksheet.lever_graphs_k3449, 0.002); end
  def test_lever_graphs_l3449; assert_in_epsilon(9092.106780078124, worksheet.lever_graphs_l3449, 0.002); end
  def test_lever_graphs_m3449; assert_in_epsilon(9698.660436601633, worksheet.lever_graphs_m3449, 0.002); end
  def test_lever_graphs_n3449; assert_in_epsilon(9943.563766289984, worksheet.lever_graphs_n3449, 0.002); end
  def test_lever_graphs_o3449; assert_in_epsilon(10144.032388437145, worksheet.lever_graphs_o3449, 0.002); end
  def test_lever_graphs_p3449; assert_in_epsilon(10245.879285951492, worksheet.lever_graphs_p3449, 0.002); end
  def test_lever_graphs_q3449; assert_in_epsilon(10297.211243684134, worksheet.lever_graphs_q3449, 0.002); end
  def test_lever_graphs_r3449; assert_in_epsilon(10322.980027696185, worksheet.lever_graphs_r3449, 0.002); end
  def test_lever_graphs_s3449; assert_in_epsilon(10333.307137741813, worksheet.lever_graphs_s3449, 0.002); end
  def test_lever_graphs_b3450; assert_equal("Urban", worksheet.lever_graphs_b3450); end
  def test_lever_graphs_c3450; assert_in_delta(1.0, worksheet.lever_graphs_c3450, 0.002); end
  def test_lever_graphs_d3450; assert_equal("Booming city", worksheet.lever_graphs_d3450); end
  def test_lever_graphs_k3450; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3450, 0.002); end
  def test_lever_graphs_l3450; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l3450, 0.002); end
  def test_lever_graphs_m3450; assert_in_epsilon(11767.503863833266, worksheet.lever_graphs_m3450, 0.002); end
  def test_lever_graphs_n3450; assert_in_epsilon(12367.764825479344, worksheet.lever_graphs_n3450, 0.002); end
  def test_lever_graphs_o3450; assert_in_epsilon(12838.56524661241, worksheet.lever_graphs_o3450, 0.002); end
  def test_lever_graphs_p3450; assert_in_epsilon(13162.755107456558, worksheet.lever_graphs_p3450, 0.002); end
  def test_lever_graphs_q3450; assert_in_epsilon(13328.114277746601, worksheet.lever_graphs_q3450, 0.002); end
  def test_lever_graphs_r3450; assert_in_epsilon(13495.550798483095, worksheet.lever_graphs_r3450, 0.002); end
  def test_lever_graphs_s3450; assert_in_epsilon(13665.090766706016, worksheet.lever_graphs_s3450, 0.002); end
  def test_lever_graphs_b3451; assert_equal("Urban", worksheet.lever_graphs_b3451); end
  def test_lever_graphs_c3451; assert_in_epsilon(2.0, worksheet.lever_graphs_c3451, 0.002); end
  def test_lever_graphs_d3451; assert_equal("Booming city", worksheet.lever_graphs_d3451); end
  def test_lever_graphs_k3451; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3451, 0.002); end
  def test_lever_graphs_l3451; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l3451, 0.002); end
  def test_lever_graphs_m3451; assert_in_epsilon(11204.57102372179, worksheet.lever_graphs_m3451, 0.002); end
  def test_lever_graphs_n3451; assert_in_epsilon(11776.116752990845, worksheet.lever_graphs_n3451, 0.002); end
  def test_lever_graphs_o3451; assert_in_epsilon(12224.395063975415, worksheet.lever_graphs_o3451, 0.002); end
  def test_lever_graphs_p3451; assert_in_epsilon(12533.07635807405, worksheet.lever_graphs_p3451, 0.002); end
  def test_lever_graphs_q3451; assert_in_epsilon(12690.525090564624, worksheet.lever_graphs_q3451, 0.002); end
  def test_lever_graphs_r3451; assert_in_epsilon(12754.104748237061, worksheet.lever_graphs_r3451, 0.002); end
  def test_lever_graphs_s3451; assert_in_epsilon(12818.002940630551, worksheet.lever_graphs_s3451, 0.002); end
  def test_lever_graphs_b3452; assert_equal("Urban", worksheet.lever_graphs_b3452); end
  def test_lever_graphs_c3452; assert_in_epsilon(3.0, worksheet.lever_graphs_c3452, 0.002); end
  def test_lever_graphs_d3452; assert_equal("Booming city", worksheet.lever_graphs_d3452); end
  def test_lever_graphs_k3452; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3452, 0.002); end
  def test_lever_graphs_l3452; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l3452, 0.002); end
  def test_lever_graphs_m3452; assert_in_epsilon(10931.30196914609, worksheet.lever_graphs_m3452, 0.002); end
  def test_lever_graphs_n3452; assert_in_epsilon(11347.420939972917, worksheet.lever_graphs_n3452, 0.002); end
  def test_lever_graphs_o3452; assert_in_epsilon(11691.95322375925, worksheet.lever_graphs_o3452, 0.002); end
  def test_lever_graphs_p3452; assert_in_epsilon(11868.387959471223, worksheet.lever_graphs_p3452, 0.002); end
  def test_lever_graphs_q3452; assert_in_epsilon(11987.547525005202, worksheet.lever_graphs_q3452, 0.002); end
  def test_lever_graphs_r3452; assert_in_epsilon(12047.605258040896, worksheet.lever_graphs_r3452, 0.002); end
  def test_lever_graphs_s3452; assert_in_epsilon(12077.754405262413, worksheet.lever_graphs_s3452, 0.002); end
  def test_lever_graphs_b3453; assert_equal("Urban", worksheet.lever_graphs_b3453); end
  def test_lever_graphs_c3453; assert_in_epsilon(4.0, worksheet.lever_graphs_c3453, 0.002); end
  def test_lever_graphs_d3453; assert_equal("Booming city", worksheet.lever_graphs_d3453); end
  def test_lever_graphs_k3453; assert_in_epsilon(9198.0, worksheet.lever_graphs_k3453, 0.002); end
  def test_lever_graphs_l3453; assert_in_epsilon(10400.758744510593, worksheet.lever_graphs_l3453, 0.002); end
  def test_lever_graphs_m3453; assert_in_epsilon(10796.681667214552, worksheet.lever_graphs_m3453, 0.002); end
  def test_lever_graphs_n3453; assert_in_epsilon(11069.311408937165, worksheet.lever_graphs_n3453, 0.002); end
  def test_lever_graphs_o3453; assert_in_epsilon(11264.385103519684, worksheet.lever_graphs_o3453, 0.002); end
  def test_lever_graphs_p3453; assert_in_epsilon(11405.895703643995, worksheet.lever_graphs_p3453, 0.002); end
  def test_lever_graphs_q3453; assert_in_epsilon(11463.039355235242, worksheet.lever_graphs_q3453, 0.002); end
  def test_lever_graphs_r3453; assert_in_epsilon(11474.506980723352, worksheet.lever_graphs_r3453, 0.002); end
  def test_lever_graphs_s3453; assert_in_epsilon(11485.98607842492, worksheet.lever_graphs_s3453, 0.002); end
  def test_lever_graphs_b3454; assert_equal("Rural", worksheet.lever_graphs_b3454); end
  def test_lever_graphs_c3454; assert_in_delta(1.0, worksheet.lever_graphs_c3454, 0.002); end
  def test_lever_graphs_d3454; assert_equal("Developed", worksheet.lever_graphs_d3454); end
  def test_lever_graphs_k3454; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3454, 0.002); end
  def test_lever_graphs_l3454; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3454, 0.002); end
  def test_lever_graphs_m3454; assert_in_epsilon(25126.063462143684, worksheet.lever_graphs_m3454, 0.002); end
  def test_lever_graphs_n3454; assert_in_epsilon(26316.35999020017, worksheet.lever_graphs_n3454, 0.002); end
  def test_lever_graphs_o3454; assert_in_epsilon(27563.044413114836, worksheet.lever_graphs_o3454, 0.002); end
  def test_lever_graphs_p3454; assert_in_epsilon(28868.787993561808, worksheet.lever_graphs_p3454, 0.002); end
  def test_lever_graphs_q3454; assert_in_epsilon(30236.388539891228, worksheet.lever_graphs_q3454, 0.002); end
  def test_lever_graphs_r3454; assert_in_epsilon(30999.895240592334, worksheet.lever_graphs_r3454, 0.002); end
  def test_lever_graphs_s3454; assert_in_epsilon(31782.68144225786, worksheet.lever_graphs_s3454, 0.002); end
  def test_lever_graphs_b3455; assert_equal("Rural", worksheet.lever_graphs_b3455); end
  def test_lever_graphs_c3455; assert_in_epsilon(2.0, worksheet.lever_graphs_c3455, 0.002); end
  def test_lever_graphs_d3455; assert_equal("Developed", worksheet.lever_graphs_d3455); end
  def test_lever_graphs_k3455; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3455, 0.002); end
  def test_lever_graphs_l3455; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3455, 0.002); end
  def test_lever_graphs_m3455; assert_in_epsilon(24902.81029151358, worksheet.lever_graphs_m3455, 0.002); end
  def test_lever_graphs_n3455; assert_in_epsilon(25850.778961526437, worksheet.lever_graphs_n3455, 0.002); end
  def test_lever_graphs_o3455; assert_in_epsilon(26834.833703304143, worksheet.lever_graphs_o3455, 0.002); end
  def test_lever_graphs_p3455; assert_in_epsilon(27856.34819576311, worksheet.lever_graphs_p3455, 0.002); end
  def test_lever_graphs_q3455; assert_in_epsilon(28206.297927970198, worksheet.lever_graphs_q3455, 0.002); end
  def test_lever_graphs_r3455; assert_in_epsilon(28560.64395843617, worksheet.lever_graphs_r3455, 0.002); end
  def test_lever_graphs_s3455; assert_in_epsilon(28919.441516345676, worksheet.lever_graphs_s3455, 0.002); end
  def test_lever_graphs_b3456; assert_equal("Rural", worksheet.lever_graphs_b3456); end
  def test_lever_graphs_c3456; assert_in_epsilon(3.0, worksheet.lever_graphs_c3456, 0.002); end
  def test_lever_graphs_d3456; assert_equal("Developed", worksheet.lever_graphs_d3456); end
  def test_lever_graphs_k3456; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3456, 0.002); end
  def test_lever_graphs_l3456; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3456, 0.002); end
  def test_lever_graphs_m3456; assert_in_epsilon(24595.371961101227, worksheet.lever_graphs_m3456, 0.002); end
  def test_lever_graphs_n3456; assert_in_epsilon(25216.43592427136, worksheet.lever_graphs_n3456, 0.002); end
  def test_lever_graphs_o3456; assert_in_epsilon(25533.22134556568, worksheet.lever_graphs_o3456, 0.002); end
  def test_lever_graphs_p3456; assert_in_epsilon(25853.98643327463, worksheet.lever_graphs_p3456, 0.002); end
  def test_lever_graphs_q3456; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_q3456, 0.002); end
  def test_lever_graphs_r3456; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_r3456, 0.002); end
  def test_lever_graphs_s3456; assert_in_epsilon(25853.695577236133, worksheet.lever_graphs_s3456, 0.002); end
  def test_lever_graphs_b3457; assert_equal("Rural", worksheet.lever_graphs_b3457); end
  def test_lever_graphs_c3457; assert_in_epsilon(4.0, worksheet.lever_graphs_c3457, 0.002); end
  def test_lever_graphs_d3457; assert_equal("Developed", worksheet.lever_graphs_d3457); end
  def test_lever_graphs_k3457; assert_in_epsilon(23191.0, worksheet.lever_graphs_k3457, 0.002); end
  def test_lever_graphs_l3457; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l3457, 0.002); end
  def test_lever_graphs_m3457; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_m3457, 0.002); end
  def test_lever_graphs_n3457; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_n3457, 0.002); end
  def test_lever_graphs_o3457; assert_in_epsilon(24228.349513908553, worksheet.lever_graphs_o3457, 0.002); end
  def test_lever_graphs_p3457; assert_in_epsilon(24047.18121332461, worksheet.lever_graphs_p3457, 0.002); end
  def test_lever_graphs_q3457; assert_in_epsilon(23867.367604818126, worksheet.lever_graphs_q3457, 0.002); end
  def test_lever_graphs_r3457; assert_in_epsilon(23688.89855863341, worksheet.lever_graphs_r3457, 0.002); end
  def test_lever_graphs_s3457; assert_in_epsilon(23511.764020760354, worksheet.lever_graphs_s3457, 0.002); end
  def test_lever_graphs_b3458; assert_equal("Rural", worksheet.lever_graphs_b3458); end
  def test_lever_graphs_c3458; assert_in_delta(1.0, worksheet.lever_graphs_c3458, 0.002); end
  def test_lever_graphs_d3458; assert_equal("Developing", worksheet.lever_graphs_d3458); end
  def test_lever_graphs_k3458; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3458, 0.002); end
  def test_lever_graphs_l3458; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l3458, 0.002); end
  def test_lever_graphs_m3458; assert_in_epsilon(5126.373992430952, worksheet.lever_graphs_m3458, 0.002); end
  def test_lever_graphs_n3458; assert_in_epsilon(5729.633859682868, worksheet.lever_graphs_n3458, 0.002); end
  def test_lever_graphs_o3458; assert_in_epsilon(6403.883956671072, worksheet.lever_graphs_o3458, 0.002); end
  def test_lever_graphs_p3458; assert_in_epsilon(7070.405342480992, worksheet.lever_graphs_p3458, 0.002); end
  def test_lever_graphs_q3458; assert_in_epsilon(7806.298809475985, worksheet.lever_graphs_q3458, 0.002); end
  def test_lever_graphs_r3458; assert_in_epsilon(8618.78465958545, worksheet.lever_graphs_r3458, 0.002); end
  def test_lever_graphs_s3458; assert_in_epsilon(9515.834689562942, worksheet.lever_graphs_s3458, 0.002); end
  def test_lever_graphs_b3459; assert_equal("Rural", worksheet.lever_graphs_b3459); end
  def test_lever_graphs_c3459; assert_in_epsilon(2.0, worksheet.lever_graphs_c3459, 0.002); end
  def test_lever_graphs_d3459; assert_equal("Developing", worksheet.lever_graphs_d3459); end
  def test_lever_graphs_k3459; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3459, 0.002); end
  def test_lever_graphs_l3459; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l3459, 0.002); end
  def test_lever_graphs_m3459; assert_in_epsilon(5126.373992430952, worksheet.lever_graphs_m3459, 0.002); end
  def test_lever_graphs_n3459; assert_in_epsilon(5659.931115066756, worksheet.lever_graphs_n3459, 0.002); end
  def test_lever_graphs_o3459; assert_in_epsilon(6249.021291579576, worksheet.lever_graphs_o3459, 0.002); end
  def test_lever_graphs_p3459; assert_in_epsilon(6731.97067735155, worksheet.lever_graphs_p3459, 0.002); end
  def test_lever_graphs_q3459; assert_in_epsilon(7252.244325329481, worksheet.lever_graphs_q3459, 0.002); end
  def test_lever_graphs_r3459; assert_in_epsilon(7812.726803938676, worksheet.lever_graphs_r3459, 0.002); end
  def test_lever_graphs_s3459; assert_in_epsilon(8416.525612601828, worksheet.lever_graphs_s3459, 0.002); end
  def test_lever_graphs_b3460; assert_equal("Rural", worksheet.lever_graphs_b3460); end
  def test_lever_graphs_c3460; assert_in_epsilon(3.0, worksheet.lever_graphs_c3460, 0.002); end
  def test_lever_graphs_d3460; assert_equal("Developing", worksheet.lever_graphs_d3460); end
  def test_lever_graphs_k3460; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3460, 0.002); end
  def test_lever_graphs_l3460; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l3460, 0.002); end
  def test_lever_graphs_m3460; assert_in_epsilon(5002.554383626268, worksheet.lever_graphs_m3460, 0.002); end
  def test_lever_graphs_n3460; assert_in_epsilon(5389.171816042234, worksheet.lever_graphs_n3460, 0.002); end
  def test_lever_graphs_o3460; assert_in_epsilon(5805.668591606803, worksheet.lever_graphs_o3460, 0.002); end
  def test_lever_graphs_p3460; assert_in_epsilon(6254.353905591933, worksheet.lever_graphs_p3460, 0.002); end
  def test_lever_graphs_q3460; assert_in_epsilon(6737.715417125951, worksheet.lever_graphs_q3460, 0.002); end
  def test_lever_graphs_r3460; assert_in_epsilon(7081.4066181130875, worksheet.lever_graphs_r3460, 0.002); end
  def test_lever_graphs_s3460; assert_in_epsilon(7442.629524481507, worksheet.lever_graphs_s3460, 0.002); end
  def test_lever_graphs_b3461; assert_equal("Rural", worksheet.lever_graphs_b3461); end
  def test_lever_graphs_c3461; assert_in_epsilon(4.0, worksheet.lever_graphs_c3461, 0.002); end
  def test_lever_graphs_d3461; assert_equal("Developing", worksheet.lever_graphs_d3461); end
  def test_lever_graphs_k3461; assert_in_epsilon(4007.0, worksheet.lever_graphs_k3461, 0.002); end
  def test_lever_graphs_l3461; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l3461, 0.002); end
  def test_lever_graphs_m3461; assert_in_epsilon(5002.554383626268, worksheet.lever_graphs_m3461, 0.002); end
  def test_lever_graphs_n3461; assert_in_epsilon(5389.171816042234, worksheet.lever_graphs_n3461, 0.002); end
  def test_lever_graphs_o3461; assert_in_epsilon(5805.668591606803, worksheet.lever_graphs_o3461, 0.002); end
  def test_lever_graphs_p3461; assert_in_epsilon(6254.353905591933, worksheet.lever_graphs_p3461, 0.002); end
  def test_lever_graphs_q3461; assert_in_epsilon(6573.388811659307, worksheet.lever_graphs_q3461, 0.002); end
  def test_lever_graphs_r3461; assert_in_epsilon(6739.375116452095, worksheet.lever_graphs_r3461, 0.002); end
  def test_lever_graphs_s3461; assert_in_epsilon(6909.552783443009, worksheet.lever_graphs_s3461, 0.002); end
  def test_lever_graphs_b3462; assert_equal("International", worksheet.lever_graphs_b3462); end
  def test_lever_graphs_c3462; assert_in_delta(1.0, worksheet.lever_graphs_c3462, 0.002); end
  def test_lever_graphs_d3462; assert_equal("International slow growth", worksheet.lever_graphs_d3462); end
  def test_lever_graphs_k3462; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3462, 0.002); end
  def test_lever_graphs_l3462; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3462, 0.002); end
  def test_lever_graphs_m3462; assert_in_epsilon(3850.7126100605683, worksheet.lever_graphs_m3462, 0.002); end
  def test_lever_graphs_n3462; assert_in_epsilon(4255.859523652149, worksheet.lever_graphs_n3462, 0.002); end
  def test_lever_graphs_o3462; assert_in_epsilon(4703.63335808013, worksheet.lever_graphs_o3462, 0.002); end
  def test_lever_graphs_p3462; assert_in_epsilon(5198.519040463629, worksheet.lever_graphs_p3462, 0.002); end
  def test_lever_graphs_q3462; assert_in_epsilon(5745.473372757406, worksheet.lever_graphs_q3462, 0.002); end
  def test_lever_graphs_r3462; assert_in_epsilon(6349.97467935028, worksheet.lever_graphs_r3462, 0.002); end
  def test_lever_graphs_s3462; assert_in_epsilon(7018.077678260653, worksheet.lever_graphs_s3462, 0.002); end
  def test_lever_graphs_b3463; assert_equal("International", worksheet.lever_graphs_b3463); end
  def test_lever_graphs_c3463; assert_in_epsilon(2.0, worksheet.lever_graphs_c3463, 0.002); end
  def test_lever_graphs_d3463; assert_equal("International slow growth", worksheet.lever_graphs_d3463); end
  def test_lever_graphs_k3463; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3463, 0.002); end
  def test_lever_graphs_l3463; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3463, 0.002); end
  def test_lever_graphs_m3463; assert_in_epsilon(3735.420476881267, worksheet.lever_graphs_m3463, 0.002); end
  def test_lever_graphs_n3463; assert_in_epsilon(4004.829768603747, worksheet.lever_graphs_n3463, 0.002); end
  def test_lever_graphs_o3463; assert_in_epsilon(4293.6696349872645, worksheet.lever_graphs_o3463, 0.002); end
  def test_lever_graphs_p3463; assert_in_epsilon(4603.341465082821, worksheet.lever_graphs_p3463, 0.002); end
  def test_lever_graphs_q3463; assert_in_epsilon(4935.347720159124, worksheet.lever_graphs_q3463, 0.002); end
  def test_lever_graphs_r3463; assert_in_epsilon(5291.299223322255, worksheet.lever_graphs_r3463, 0.002); end
  def test_lever_graphs_s3463; assert_in_epsilon(5672.922974883723, worksheet.lever_graphs_s3463, 0.002); end
  def test_lever_graphs_b3464; assert_equal("International", worksheet.lever_graphs_b3464); end
  def test_lever_graphs_c3464; assert_in_epsilon(3.0, worksheet.lever_graphs_c3464, 0.002); end
  def test_lever_graphs_d3464; assert_equal("International slow growth", worksheet.lever_graphs_d3464); end
  def test_lever_graphs_k3464; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3464, 0.002); end
  def test_lever_graphs_l3464; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3464, 0.002); end
  def test_lever_graphs_m3464; assert_in_epsilon(3580.4299416660083, worksheet.lever_graphs_m3464, 0.002); end
  def test_lever_graphs_n3464; assert_in_epsilon(3679.3866707142247, worksheet.lever_graphs_n3464, 0.002); end
  def test_lever_graphs_o3464; assert_in_epsilon(3781.078388125142, worksheet.lever_graphs_o3464, 0.002); end
  def test_lever_graphs_p3464; assert_in_epsilon(3885.5806841230533, worksheet.lever_graphs_p3464, 0.002); end
  def test_lever_graphs_q3464; assert_in_epsilon(3992.9712381118948, worksheet.lever_graphs_q3464, 0.002); end
  def test_lever_graphs_r3464; assert_in_epsilon(4103.329876416461, worksheet.lever_graphs_r3464, 0.002); end
  def test_lever_graphs_s3464; assert_in_epsilon(4216.73863161949, worksheet.lever_graphs_s3464, 0.002); end
  def test_lever_graphs_b3465; assert_equal("International", worksheet.lever_graphs_b3465); end
  def test_lever_graphs_c3465; assert_in_epsilon(4.0, worksheet.lever_graphs_c3465, 0.002); end
  def test_lever_graphs_d3465; assert_equal("International slow growth", worksheet.lever_graphs_d3465); end
  def test_lever_graphs_k3465; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k3465, 0.002); end
  def test_lever_graphs_l3465; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_l3465, 0.002); end
  def test_lever_graphs_m3465; assert_in_epsilon(3339.573235999637, worksheet.lever_graphs_m3465, 0.002); end
  def test_lever_graphs_n3465; assert_in_epsilon(3201.009874466012, worksheet.lever_graphs_n3465, 0.002); end
  def test_lever_graphs_o3465; assert_in_epsilon(3068.1956921845535, worksheet.lever_graphs_o3465, 0.002); end
  def test_lever_graphs_p3465; assert_in_epsilon(2940.8921480163353, worksheet.lever_graphs_p3465, 0.002); end
  def test_lever_graphs_q3465; assert_in_epsilon(2818.870598213428, worksheet.lever_graphs_q3465, 0.002); end
  def test_lever_graphs_r3465; assert_in_epsilon(2701.9118857629023, worksheet.lever_graphs_r3465, 0.002); end
  def test_lever_graphs_s3465; assert_in_epsilon(2589.8059467695034, worksheet.lever_graphs_s3465, 0.002); end
  def test_lever_graphs_b3466; assert_equal("International", worksheet.lever_graphs_b3466); end
  def test_lever_graphs_c3466; assert_in_delta(1.0, worksheet.lever_graphs_c3466, 0.002); end
  def test_lever_graphs_d3466; assert_equal("International fast growth", worksheet.lever_graphs_d3466); end
  def test_lever_graphs_k3466; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3466, 0.002); end
  def test_lever_graphs_l3466; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3466, 0.002); end
  def test_lever_graphs_m3466; assert_in_epsilon(373.2108483170911, worksheet.lever_graphs_m3466, 0.002); end
  def test_lever_graphs_n3466; assert_in_epsilon(484.5581698391798, worksheet.lever_graphs_n3466, 0.002); end
  def test_lever_graphs_o3466; assert_in_epsilon(629.1259244383089, worksheet.lever_graphs_o3466, 0.002); end
  def test_lever_graphs_p3466; assert_in_epsilon(816.8254162997989, worksheet.lever_graphs_p3466, 0.002); end
  def test_lever_graphs_q3466; assert_in_epsilon(1060.5249836255393, worksheet.lever_graphs_q3466, 0.002); end
  def test_lever_graphs_r3466; assert_in_epsilon(1376.9322286626152, worksheet.lever_graphs_r3466, 0.002); end
  def test_lever_graphs_s3466; assert_in_epsilon(1787.7394607416759, worksheet.lever_graphs_s3466, 0.002); end
  def test_lever_graphs_b3467; assert_equal("International", worksheet.lever_graphs_b3467); end
  def test_lever_graphs_c3467; assert_in_epsilon(2.0, worksheet.lever_graphs_c3467, 0.002); end
  def test_lever_graphs_d3467; assert_equal("International fast growth", worksheet.lever_graphs_d3467); end
  def test_lever_graphs_k3467; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3467, 0.002); end
  def test_lever_graphs_l3467; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3467, 0.002); end
  def test_lever_graphs_m3467; assert_in_epsilon(353.28137511784706, worksheet.lever_graphs_m3467, 0.002); end
  def test_lever_graphs_n3467; assert_in_epsilon(434.189069830633, worksheet.lever_graphs_n3467, 0.002); end
  def test_lever_graphs_o3467; assert_in_epsilon(533.6260602402377, worksheet.lever_graphs_o3467, 0.002); end
  def test_lever_graphs_p3467; assert_in_epsilon(655.8358833827733, worksheet.lever_graphs_p3467, 0.002); end
  def test_lever_graphs_q3467; assert_in_epsilon(806.0339214670718, worksheet.lever_graphs_q3467, 0.002); end
  def test_lever_graphs_r3467; assert_in_epsilon(990.6299716394122, worksheet.lever_graphs_r3467, 0.002); end
  def test_lever_graphs_s3467; assert_in_epsilon(1217.5017881680963, worksheet.lever_graphs_s3467, 0.002); end
  def test_lever_graphs_b3468; assert_equal("International", worksheet.lever_graphs_b3468); end
  def test_lever_graphs_c3468; assert_in_epsilon(3.0, worksheet.lever_graphs_c3468, 0.002); end
  def test_lever_graphs_d3468; assert_equal("International fast growth", worksheet.lever_graphs_d3468); end
  def test_lever_graphs_k3468; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3468, 0.002); end
  def test_lever_graphs_l3468; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3468, 0.002); end
  def test_lever_graphs_m3468; assert_in_epsilon(329.7444385185951, worksheet.lever_graphs_m3468, 0.002); end
  def test_lever_graphs_n3468; assert_in_epsilon(378.26169211608646, worksheet.lever_graphs_n3468, 0.002); end
  def test_lever_graphs_o3468; assert_in_epsilon(433.9175767916894, worksheet.lever_graphs_o3468, 0.002); end
  def test_lever_graphs_p3468; assert_in_epsilon(497.76244164579106, worksheet.lever_graphs_p3468, 0.002); end
  def test_lever_graphs_q3468; assert_in_epsilon(571.0011798672197, worksheet.lever_graphs_q3468, 0.002); end
  def test_lever_graphs_r3468; assert_in_epsilon(655.0159677209424, worksheet.lever_graphs_r3468, 0.002); end
  def test_lever_graphs_s3468; assert_in_epsilon(751.3923492577945, worksheet.lever_graphs_s3468, 0.002); end
  def test_lever_graphs_b3469; assert_equal("International", worksheet.lever_graphs_b3469); end
  def test_lever_graphs_c3469; assert_in_epsilon(4.0, worksheet.lever_graphs_c3469, 0.002); end
  def test_lever_graphs_d3469; assert_equal("International fast growth", worksheet.lever_graphs_d3469); end
  def test_lever_graphs_k3469; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k3469, 0.002); end
  def test_lever_graphs_l3469; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l3469, 0.002); end
  def test_lever_graphs_m3469; assert_in_epsilon(308.3096749216857, worksheet.lever_graphs_m3469, 0.002); end
  def test_lever_graphs_n3469; assert_in_epsilon(330.6828780235829, worksheet.lever_graphs_n3469, 0.002); end
  def test_lever_graphs_o3469; assert_in_epsilon(354.6796442431989, worksheet.lever_graphs_o3469, 0.002); end
  def test_lever_graphs_p3469; assert_in_epsilon(380.41779118515706, worksheet.lever_graphs_p3469, 0.002); end
  def test_lever_graphs_q3469; assert_in_epsilon(408.02368616046897, worksheet.lever_graphs_q3469, 0.002); end
  def test_lever_graphs_r3469; assert_in_epsilon(437.63286661571004, worksheet.lever_graphs_r3469, 0.002); end
  def test_lever_graphs_s3469; assert_in_epsilon(469.3907055850704, worksheet.lever_graphs_s3469, 0.002); end
  def test_lever_graphs_b3407; assert_equal("Type of travel", worksheet.lever_graphs_b3407); end
  def test_lever_graphs_c3407; assert_equal("Level", worksheet.lever_graphs_c3407); end
  def test_lever_graphs_d3407; assert_equal("Type of city", worksheet.lever_graphs_d3407); end
  def test_lever_graphs_e3407; assert_equal("1985", worksheet.lever_graphs_e3407); end
  def test_lever_graphs_f3407; assert_equal("1990", worksheet.lever_graphs_f3407); end
  def test_lever_graphs_g3407; assert_equal("1995", worksheet.lever_graphs_g3407); end
  def test_lever_graphs_h3407; assert_equal("2000", worksheet.lever_graphs_h3407); end
  def test_lever_graphs_i3407; assert_equal("2005", worksheet.lever_graphs_i3407); end
  def test_lever_graphs_j3407; assert_equal("2010", worksheet.lever_graphs_j3407); end
  def test_lever_graphs_k3407; assert_equal("2011", worksheet.lever_graphs_k3407); end
  def test_lever_graphs_l3407; assert_equal("2015", worksheet.lever_graphs_l3407); end
  def test_lever_graphs_m3407; assert_equal("2020", worksheet.lever_graphs_m3407); end
  def test_lever_graphs_n3407; assert_equal("2025", worksheet.lever_graphs_n3407); end
  def test_lever_graphs_o3407; assert_equal("2030", worksheet.lever_graphs_o3407); end
  def test_lever_graphs_p3407; assert_equal("2035", worksheet.lever_graphs_p3407); end
  def test_lever_graphs_q3407; assert_equal("2040", worksheet.lever_graphs_q3407); end
  def test_lever_graphs_r3407; assert_equal("2045", worksheet.lever_graphs_r3407); end
  def test_lever_graphs_s3407; assert_equal("2050", worksheet.lever_graphs_s3407); end
  def test_lever_graphs_b3408; assert_equal("Urban", worksheet.lever_graphs_b3408); end
  def test_lever_graphs_c3408; assert_in_delta(1.0, worksheet.lever_graphs_c3408, 0.002); end
  def test_lever_graphs_d3408; assert_equal("Automobile city", worksheet.lever_graphs_d3408); end
  def test_lever_graphs_k3408; assert_in_delta(0.0, (worksheet.lever_graphs_k3408||0), 0.002); end
  def test_lever_graphs_l3408; assert_in_delta(0.0058, worksheet.lever_graphs_l3408, 0.002); end
  def test_lever_graphs_m3408; assert_in_delta(0.0048, worksheet.lever_graphs_m3408, 0.002); end
  def test_lever_graphs_n3408; assert_in_delta(0.0048, worksheet.lever_graphs_n3408, 0.002); end
  def test_lever_graphs_o3408; assert_in_delta(0.0019, worksheet.lever_graphs_o3408, 0.002); end
  def test_lever_graphs_p3408; assert_in_delta(0.0019, worksheet.lever_graphs_p3408, 0.002); end
  def test_lever_graphs_q3408; assert_in_delta(0.0019, worksheet.lever_graphs_q3408, 0.002); end
  def test_lever_graphs_r3408; assert_in_delta(0.0019, worksheet.lever_graphs_r3408, 0.002); end
  def test_lever_graphs_s3408; assert_in_delta(0.0002, worksheet.lever_graphs_s3408, 0.002); end
  def test_lever_graphs_b3409; assert_equal("Urban", worksheet.lever_graphs_b3409); end
  def test_lever_graphs_c3409; assert_in_epsilon(2.0, worksheet.lever_graphs_c3409, 0.002); end
  def test_lever_graphs_d3409; assert_equal("Automobile city", worksheet.lever_graphs_d3409); end
  def test_lever_graphs_k3409; assert_in_delta(0.0, (worksheet.lever_graphs_k3409||0), 0.002); end
  def test_lever_graphs_l3409; assert_in_delta(0.0058, worksheet.lever_graphs_l3409, 0.002); end
  def test_lever_graphs_m3409; assert_in_delta(0.0048, worksheet.lever_graphs_m3409, 0.002); end
  def test_lever_graphs_n3409; assert_in_delta(0.0019, worksheet.lever_graphs_n3409, 0.002); end
  def test_lever_graphs_o3409; assert_in_delta(0.0019, worksheet.lever_graphs_o3409, 0.002); end
  def test_lever_graphs_p3409; assert_in_delta(0.0019, worksheet.lever_graphs_p3409, 0.002); end
  def test_lever_graphs_q3409; assert_in_delta(0.0019, worksheet.lever_graphs_q3409, 0.002); end
  def test_lever_graphs_r3409; assert_in_delta(-0.002, worksheet.lever_graphs_r3409, 0.002); end
  def test_lever_graphs_s3409; assert_in_delta(-0.002, worksheet.lever_graphs_s3409, 0.002); end
  def test_lever_graphs_b3410; assert_equal("Urban", worksheet.lever_graphs_b3410); end
  def test_lever_graphs_c3410; assert_in_epsilon(3.0, worksheet.lever_graphs_c3410, 0.002); end
  def test_lever_graphs_d3410; assert_equal("Automobile city", worksheet.lever_graphs_d3410); end
  def test_lever_graphs_k3410; assert_in_delta(0.0, (worksheet.lever_graphs_k3410||0), 0.002); end
  def test_lever_graphs_l3410; assert_in_delta(0.0058, worksheet.lever_graphs_l3410, 0.002); end
  def test_lever_graphs_m3410; assert_in_delta(0.0028, worksheet.lever_graphs_m3410, 0.002); end
  def test_lever_graphs_n3410; assert_in_delta(0.0015, worksheet.lever_graphs_n3410, 0.002); end
  def test_lever_graphs_o3410; assert_in_delta(0.0, (worksheet.lever_graphs_o3410||0), 0.002); end
  def test_lever_graphs_p3410; assert_in_delta(-0.002, worksheet.lever_graphs_p3410, 0.002); end
  def test_lever_graphs_q3410; assert_in_delta(-0.003, worksheet.lever_graphs_q3410, 0.002); end
  def test_lever_graphs_r3410; assert_in_delta(-0.004, worksheet.lever_graphs_r3410, 0.002); end
  def test_lever_graphs_s3410; assert_in_delta(-0.005, worksheet.lever_graphs_s3410, 0.002); end
  def test_lever_graphs_b3411; assert_equal("Urban", worksheet.lever_graphs_b3411); end
  def test_lever_graphs_c3411; assert_in_epsilon(4.0, worksheet.lever_graphs_c3411, 0.002); end
  def test_lever_graphs_d3411; assert_equal("Automobile city", worksheet.lever_graphs_d3411); end
  def test_lever_graphs_k3411; assert_in_delta(0.0, (worksheet.lever_graphs_k3411||0), 0.002); end
  def test_lever_graphs_l3411; assert_in_delta(0.0058, worksheet.lever_graphs_l3411, 0.002); end
  def test_lever_graphs_m3411; assert_in_delta(0.002, worksheet.lever_graphs_m3411, 0.002); end
  def test_lever_graphs_n3411; assert_in_delta(0.001, worksheet.lever_graphs_n3411, 0.002); end
  def test_lever_graphs_o3411; assert_in_delta(-0.001, worksheet.lever_graphs_o3411, 0.002); end
  def test_lever_graphs_p3411; assert_in_delta(-0.003, worksheet.lever_graphs_p3411, 0.002); end
  def test_lever_graphs_q3411; assert_in_delta(-0.004, worksheet.lever_graphs_q3411, 0.002); end
  def test_lever_graphs_r3411; assert_in_delta(-0.005, worksheet.lever_graphs_r3411, 0.002); end
  def test_lever_graphs_s3411; assert_in_delta(-0.006, worksheet.lever_graphs_s3411, 0.002); end
  def test_lever_graphs_b3412; assert_equal("Urban", worksheet.lever_graphs_b3412); end
  def test_lever_graphs_c3412; assert_in_delta(1.0, worksheet.lever_graphs_c3412, 0.002); end
  def test_lever_graphs_d3412; assert_equal("Transit city", worksheet.lever_graphs_d3412); end
  def test_lever_graphs_k3412; assert_in_delta(0.0, (worksheet.lever_graphs_k3412||0), 0.002); end
  def test_lever_graphs_l3412; assert_in_delta(0.025, worksheet.lever_graphs_l3412, 0.002); end
  def test_lever_graphs_m3412; assert_in_delta(0.015, worksheet.lever_graphs_m3412, 0.002); end
  def test_lever_graphs_n3412; assert_in_delta(0.012, worksheet.lever_graphs_n3412, 0.002); end
  def test_lever_graphs_o3412; assert_in_delta(0.0075, worksheet.lever_graphs_o3412, 0.002); end
  def test_lever_graphs_p3412; assert_in_delta(0.0075, worksheet.lever_graphs_p3412, 0.002); end
  def test_lever_graphs_q3412; assert_in_delta(0.005, worksheet.lever_graphs_q3412, 0.002); end
  def test_lever_graphs_r3412; assert_in_delta(0.005, worksheet.lever_graphs_r3412, 0.002); end
  def test_lever_graphs_s3412; assert_in_delta(0.002, worksheet.lever_graphs_s3412, 0.002); end
  def test_lever_graphs_b3413; assert_equal("Urban", worksheet.lever_graphs_b3413); end
  def test_lever_graphs_c3413; assert_in_epsilon(2.0, worksheet.lever_graphs_c3413, 0.002); end
  def test_lever_graphs_d3413; assert_equal("Transit city", worksheet.lever_graphs_d3413); end
  def test_lever_graphs_k3413; assert_in_delta(0.0, (worksheet.lever_graphs_k3413||0), 0.002); end
  def test_lever_graphs_l3413; assert_in_delta(0.025, worksheet.lever_graphs_l3413, 0.002); end
  def test_lever_graphs_m3413; assert_in_delta(0.015, worksheet.lever_graphs_m3413, 0.002); end
  def test_lever_graphs_n3413; assert_in_delta(0.0075, worksheet.lever_graphs_n3413, 0.002); end
  def test_lever_graphs_o3413; assert_in_delta(0.0075, worksheet.lever_graphs_o3413, 0.002); end
  def test_lever_graphs_p3413; assert_in_delta(0.005, worksheet.lever_graphs_p3413, 0.002); end
  def test_lever_graphs_q3413; assert_in_delta(0.005, worksheet.lever_graphs_q3413, 0.002); end
  def test_lever_graphs_r3413; assert_in_delta(0.002, worksheet.lever_graphs_r3413, 0.002); end
  def test_lever_graphs_s3413; assert_in_delta(0.0002, worksheet.lever_graphs_s3413, 0.002); end
  def test_lever_graphs_b3414; assert_equal("Urban", worksheet.lever_graphs_b3414); end
  def test_lever_graphs_c3414; assert_in_epsilon(3.0, worksheet.lever_graphs_c3414, 0.002); end
  def test_lever_graphs_d3414; assert_equal("Transit city", worksheet.lever_graphs_d3414); end
  def test_lever_graphs_k3414; assert_in_delta(0.0, (worksheet.lever_graphs_k3414||0), 0.002); end
  def test_lever_graphs_l3414; assert_in_delta(0.025, worksheet.lever_graphs_l3414, 0.002); end
  def test_lever_graphs_m3414; assert_in_delta(0.013, worksheet.lever_graphs_m3414, 0.002); end
  def test_lever_graphs_n3414; assert_in_delta(0.0068, worksheet.lever_graphs_n3414, 0.002); end
  def test_lever_graphs_o3414; assert_in_delta(0.004, worksheet.lever_graphs_o3414, 0.002); end
  def test_lever_graphs_p3414; assert_in_delta(0.004, worksheet.lever_graphs_p3414, 0.002); end
  def test_lever_graphs_q3414; assert_in_delta(0.002, worksheet.lever_graphs_q3414, 0.002); end
  def test_lever_graphs_r3414; assert_in_delta(0.002, worksheet.lever_graphs_r3414, 0.002); end
  def test_lever_graphs_s3414; assert_in_delta(0.0002, worksheet.lever_graphs_s3414, 0.002); end
  def test_lever_graphs_b3415; assert_equal("Urban", worksheet.lever_graphs_b3415); end
  def test_lever_graphs_c3415; assert_in_epsilon(4.0, worksheet.lever_graphs_c3415, 0.002); end
  def test_lever_graphs_d3415; assert_equal("Transit city", worksheet.lever_graphs_d3415); end
  def test_lever_graphs_k3415; assert_in_delta(0.0, (worksheet.lever_graphs_k3415||0), 0.002); end
  def test_lever_graphs_l3415; assert_in_delta(0.025, worksheet.lever_graphs_l3415, 0.002); end
  def test_lever_graphs_m3415; assert_in_delta(0.013, worksheet.lever_graphs_m3415, 0.002); end
  def test_lever_graphs_n3415; assert_in_delta(0.005, worksheet.lever_graphs_n3415, 0.002); end
  def test_lever_graphs_o3415; assert_in_delta(0.004, worksheet.lever_graphs_o3415, 0.002); end
  def test_lever_graphs_p3415; assert_in_delta(0.002, worksheet.lever_graphs_p3415, 0.002); end
  def test_lever_graphs_q3415; assert_in_delta(0.001, worksheet.lever_graphs_q3415, 0.002); end
  def test_lever_graphs_r3415; assert_in_delta(0.0005, worksheet.lever_graphs_r3415, 0.002); end
  def test_lever_graphs_s3415; assert_in_delta(0.0002, worksheet.lever_graphs_s3415, 0.002); end
  def test_lever_graphs_b3416; assert_equal("Urban", worksheet.lever_graphs_b3416); end
  def test_lever_graphs_c3416; assert_in_delta(1.0, worksheet.lever_graphs_c3416, 0.002); end
  def test_lever_graphs_d3416; assert_equal("Booming city", worksheet.lever_graphs_d3416); end
  def test_lever_graphs_k3416; assert_in_delta(0.0, (worksheet.lever_graphs_k3416||0), 0.002); end
  def test_lever_graphs_l3416; assert_in_delta(0.0312, worksheet.lever_graphs_l3416, 0.002); end
  def test_lever_graphs_m3416; assert_in_delta(0.025, worksheet.lever_graphs_m3416, 0.002); end
  def test_lever_graphs_n3416; assert_in_delta(0.01, worksheet.lever_graphs_n3416, 0.002); end
  def test_lever_graphs_o3416; assert_in_delta(0.0075, worksheet.lever_graphs_o3416, 0.002); end
  def test_lever_graphs_p3416; assert_in_delta(0.005, worksheet.lever_graphs_p3416, 0.002); end
  def test_lever_graphs_q3416; assert_in_delta(0.0025, worksheet.lever_graphs_q3416, 0.002); end
  def test_lever_graphs_r3416; assert_in_delta(0.0025, worksheet.lever_graphs_r3416, 0.002); end
  def test_lever_graphs_s3416; assert_in_delta(0.0025, worksheet.lever_graphs_s3416, 0.002); end
  def test_lever_graphs_b3417; assert_equal("Urban", worksheet.lever_graphs_b3417); end
  def test_lever_graphs_c3417; assert_in_epsilon(2.0, worksheet.lever_graphs_c3417, 0.002); end
  def test_lever_graphs_d3417; assert_equal("Booming city", worksheet.lever_graphs_d3417); end
  def test_lever_graphs_k3417; assert_in_delta(0.0, (worksheet.lever_graphs_k3417||0), 0.002); end
  def test_lever_graphs_l3417; assert_in_delta(0.0312, worksheet.lever_graphs_l3417, 0.002); end
  def test_lever_graphs_m3417; assert_in_delta(0.015, worksheet.lever_graphs_m3417, 0.002); end
  def test_lever_graphs_n3417; assert_in_delta(0.01, worksheet.lever_graphs_n3417, 0.002); end
  def test_lever_graphs_o3417; assert_in_delta(0.0075, worksheet.lever_graphs_o3417, 0.002); end
  def test_lever_graphs_p3417; assert_in_delta(0.005, worksheet.lever_graphs_p3417, 0.002); end
  def test_lever_graphs_q3417; assert_in_delta(0.0025, worksheet.lever_graphs_q3417, 0.002); end
  def test_lever_graphs_r3417; assert_in_delta(0.001, worksheet.lever_graphs_r3417, 0.002); end
  def test_lever_graphs_s3417; assert_in_delta(0.001, worksheet.lever_graphs_s3417, 0.002); end
  def test_lever_graphs_b3418; assert_equal("Urban", worksheet.lever_graphs_b3418); end
  def test_lever_graphs_c3418; assert_in_epsilon(3.0, worksheet.lever_graphs_c3418, 0.002); end
  def test_lever_graphs_d3418; assert_equal("Booming city", worksheet.lever_graphs_d3418); end
  def test_lever_graphs_k3418; assert_in_delta(0.0, (worksheet.lever_graphs_k3418||0), 0.002); end
  def test_lever_graphs_l3418; assert_in_delta(0.0312, worksheet.lever_graphs_l3418, 0.002); end
  def test_lever_graphs_m3418; assert_in_delta(0.01, worksheet.lever_graphs_m3418, 0.002); end
  def test_lever_graphs_n3418; assert_in_delta(0.0075, worksheet.lever_graphs_n3418, 0.002); end
  def test_lever_graphs_o3418; assert_in_delta(0.006, worksheet.lever_graphs_o3418, 0.002); end
  def test_lever_graphs_p3418; assert_in_delta(0.003, worksheet.lever_graphs_p3418, 0.002); end
  def test_lever_graphs_q3418; assert_in_delta(0.002, worksheet.lever_graphs_q3418, 0.002); end
  def test_lever_graphs_r3418; assert_in_delta(0.001, worksheet.lever_graphs_r3418, 0.002); end
  def test_lever_graphs_s3418; assert_in_delta(0.0005, worksheet.lever_graphs_s3418, 0.002); end
  def test_lever_graphs_b3419; assert_equal("Urban", worksheet.lever_graphs_b3419); end
  def test_lever_graphs_c3419; assert_in_epsilon(4.0, worksheet.lever_graphs_c3419, 0.002); end
  def test_lever_graphs_d3419; assert_equal("Booming city", worksheet.lever_graphs_d3419); end
  def test_lever_graphs_k3419; assert_in_delta(0.0, (worksheet.lever_graphs_k3419||0), 0.002); end
  def test_lever_graphs_l3419; assert_in_delta(0.0312, worksheet.lever_graphs_l3419, 0.002); end
  def test_lever_graphs_m3419; assert_in_delta(0.0075, worksheet.lever_graphs_m3419, 0.002); end
  def test_lever_graphs_n3419; assert_in_delta(0.005, worksheet.lever_graphs_n3419, 0.002); end
  def test_lever_graphs_o3419; assert_in_delta(0.0035, worksheet.lever_graphs_o3419, 0.002); end
  def test_lever_graphs_p3419; assert_in_delta(0.0025, worksheet.lever_graphs_p3419, 0.002); end
  def test_lever_graphs_q3419; assert_in_delta(0.001, worksheet.lever_graphs_q3419, 0.002); end
  def test_lever_graphs_r3419; assert_in_delta(0.0002, worksheet.lever_graphs_r3419, 0.002); end
  def test_lever_graphs_s3419; assert_in_delta(0.0002, worksheet.lever_graphs_s3419, 0.002); end
  def test_lever_graphs_b3420; assert_equal("Rural", worksheet.lever_graphs_b3420); end
  def test_lever_graphs_c3420; assert_in_delta(1.0, worksheet.lever_graphs_c3420, 0.002); end
  def test_lever_graphs_d3420; assert_equal("Developed", worksheet.lever_graphs_d3420); end
  def test_lever_graphs_k3420; assert_in_delta(0.0, (worksheet.lever_graphs_k3420||0), 0.002); end
  def test_lever_graphs_l3420; assert_in_delta(0.0085, worksheet.lever_graphs_l3420, 0.002); end
  def test_lever_graphs_m3420; assert_in_delta(0.0093, worksheet.lever_graphs_m3420, 0.002); end
  def test_lever_graphs_n3420; assert_in_delta(0.0093, worksheet.lever_graphs_n3420, 0.002); end
  def test_lever_graphs_o3420; assert_in_delta(0.0093, worksheet.lever_graphs_o3420, 0.002); end
  def test_lever_graphs_p3420; assert_in_delta(0.0093, worksheet.lever_graphs_p3420, 0.002); end
  def test_lever_graphs_q3420; assert_in_delta(0.0093, worksheet.lever_graphs_q3420, 0.002); end
  def test_lever_graphs_r3420; assert_in_delta(0.005, worksheet.lever_graphs_r3420, 0.002); end
  def test_lever_graphs_s3420; assert_in_delta(0.005, worksheet.lever_graphs_s3420, 0.002); end
  def test_lever_graphs_b3421; assert_equal("Rural", worksheet.lever_graphs_b3421); end
  def test_lever_graphs_c3421; assert_in_epsilon(2.0, worksheet.lever_graphs_c3421, 0.002); end
  def test_lever_graphs_d3421; assert_equal("Developed", worksheet.lever_graphs_d3421); end
  def test_lever_graphs_k3421; assert_in_delta(0.0, (worksheet.lever_graphs_k3421||0), 0.002); end
  def test_lever_graphs_l3421; assert_in_delta(0.0085, worksheet.lever_graphs_l3421, 0.002); end
  def test_lever_graphs_m3421; assert_in_delta(0.0075, worksheet.lever_graphs_m3421, 0.002); end
  def test_lever_graphs_n3421; assert_in_delta(0.0075, worksheet.lever_graphs_n3421, 0.002); end
  def test_lever_graphs_o3421; assert_in_delta(0.0075, worksheet.lever_graphs_o3421, 0.002); end
  def test_lever_graphs_p3421; assert_in_delta(0.0075, worksheet.lever_graphs_p3421, 0.002); end
  def test_lever_graphs_q3421; assert_in_delta(0.0025, worksheet.lever_graphs_q3421, 0.002); end
  def test_lever_graphs_r3421; assert_in_delta(0.0025, worksheet.lever_graphs_r3421, 0.002); end
  def test_lever_graphs_s3421; assert_in_delta(0.0025, worksheet.lever_graphs_s3421, 0.002); end
  def test_lever_graphs_b3422; assert_equal("Rural", worksheet.lever_graphs_b3422); end
  def test_lever_graphs_c3422; assert_in_epsilon(3.0, worksheet.lever_graphs_c3422, 0.002); end
  def test_lever_graphs_d3422; assert_equal("Developed", worksheet.lever_graphs_d3422); end
  def test_lever_graphs_k3422; assert_in_delta(0.0, (worksheet.lever_graphs_k3422||0), 0.002); end
  def test_lever_graphs_l3422; assert_in_delta(0.0085, worksheet.lever_graphs_l3422, 0.002); end
  def test_lever_graphs_m3422; assert_in_delta(0.005, worksheet.lever_graphs_m3422, 0.002); end
  def test_lever_graphs_n3422; assert_in_delta(0.005, worksheet.lever_graphs_n3422, 0.002); end
  def test_lever_graphs_o3422; assert_in_delta(0.0025, worksheet.lever_graphs_o3422, 0.002); end
  def test_lever_graphs_p3422; assert_in_delta(0.0025, worksheet.lever_graphs_p3422, 0.002); end
  def test_lever_graphs_q3422; assert_in_delta(0.0015, worksheet.lever_graphs_q3422, 0.002); end
  def test_lever_graphs_r3422; assert_in_delta(0.0, (worksheet.lever_graphs_r3422||0), 0.002); end
  def test_lever_graphs_s3422; assert_in_delta(-0.0015, worksheet.lever_graphs_s3422, 0.002); end
  def test_lever_graphs_b3423; assert_equal("Rural", worksheet.lever_graphs_b3423); end
  def test_lever_graphs_c3423; assert_in_epsilon(4.0, worksheet.lever_graphs_c3423, 0.002); end
  def test_lever_graphs_d3423; assert_equal("Developed", worksheet.lever_graphs_d3423); end
  def test_lever_graphs_k3423; assert_in_delta(0.0, (worksheet.lever_graphs_k3423||0), 0.002); end
  def test_lever_graphs_l3423; assert_in_delta(0.0085, worksheet.lever_graphs_l3423, 0.002); end
  def test_lever_graphs_m3423; assert_in_delta(0.0034877600610832005, worksheet.lever_graphs_m3423, 0.002); end
  def test_lever_graphs_n3423; assert_in_delta(0.0, (worksheet.lever_graphs_n3423||0), 0.002); end
  def test_lever_graphs_o3423; assert_in_delta(-0.0015, worksheet.lever_graphs_o3423, 0.002); end
  def test_lever_graphs_p3423; assert_in_delta(-0.0015, worksheet.lever_graphs_p3423, 0.002); end
  def test_lever_graphs_q3423; assert_in_delta(-0.0015, worksheet.lever_graphs_q3423, 0.002); end
  def test_lever_graphs_r3423; assert_in_delta(-0.0015, worksheet.lever_graphs_r3423, 0.002); end
  def test_lever_graphs_s3423; assert_in_delta(-0.0015, worksheet.lever_graphs_s3423, 0.002); end
  def test_lever_graphs_b3424; assert_equal("Rural", worksheet.lever_graphs_b3424); end
  def test_lever_graphs_c3424; assert_in_delta(1.0, worksheet.lever_graphs_c3424, 0.002); end
  def test_lever_graphs_d3424; assert_equal("Developing", worksheet.lever_graphs_d3424); end
  def test_lever_graphs_k3424; assert_in_delta(0.0, (worksheet.lever_graphs_k3424||0), 0.002); end
  def test_lever_graphs_l3424; assert_in_delta(0.0312, worksheet.lever_graphs_l3424, 0.002); end
  def test_lever_graphs_m3424; assert_in_delta(0.025, worksheet.lever_graphs_m3424, 0.002); end
  def test_lever_graphs_n3424; assert_in_delta(0.0225, worksheet.lever_graphs_n3424, 0.002); end
  def test_lever_graphs_o3424; assert_in_delta(0.0225, worksheet.lever_graphs_o3424, 0.002); end
  def test_lever_graphs_p3424; assert_in_delta(0.02, worksheet.lever_graphs_p3424, 0.002); end
  def test_lever_graphs_q3424; assert_in_delta(0.02, worksheet.lever_graphs_q3424, 0.002); end
  def test_lever_graphs_r3424; assert_in_delta(0.02, worksheet.lever_graphs_r3424, 0.002); end
  def test_lever_graphs_s3424; assert_in_delta(0.02, worksheet.lever_graphs_s3424, 0.002); end
  def test_lever_graphs_b3425; assert_equal("Rural", worksheet.lever_graphs_b3425); end
  def test_lever_graphs_c3425; assert_in_epsilon(2.0, worksheet.lever_graphs_c3425, 0.002); end
  def test_lever_graphs_d3425; assert_equal("Developing", worksheet.lever_graphs_d3425); end
  def test_lever_graphs_k3425; assert_in_delta(0.0, (worksheet.lever_graphs_k3425||0), 0.002); end
  def test_lever_graphs_l3425; assert_in_delta(0.0312, worksheet.lever_graphs_l3425, 0.002); end
  def test_lever_graphs_m3425; assert_in_delta(0.025, worksheet.lever_graphs_m3425, 0.002); end
  def test_lever_graphs_n3425; assert_in_delta(0.02, worksheet.lever_graphs_n3425, 0.002); end
  def test_lever_graphs_o3425; assert_in_delta(0.02, worksheet.lever_graphs_o3425, 0.002); end
  def test_lever_graphs_p3425; assert_in_delta(0.015, worksheet.lever_graphs_p3425, 0.002); end
  def test_lever_graphs_q3425; assert_in_delta(0.015, worksheet.lever_graphs_q3425, 0.002); end
  def test_lever_graphs_r3425; assert_in_delta(0.015, worksheet.lever_graphs_r3425, 0.002); end
  def test_lever_graphs_s3425; assert_in_delta(0.015, worksheet.lever_graphs_s3425, 0.002); end
  def test_lever_graphs_b3426; assert_equal("Rural", worksheet.lever_graphs_b3426); end
  def test_lever_graphs_c3426; assert_in_epsilon(3.0, worksheet.lever_graphs_c3426, 0.002); end
  def test_lever_graphs_d3426; assert_equal("Developing", worksheet.lever_graphs_d3426); end
  def test_lever_graphs_k3426; assert_in_delta(0.0, (worksheet.lever_graphs_k3426||0), 0.002); end
  def test_lever_graphs_l3426; assert_in_delta(0.0312, worksheet.lever_graphs_l3426, 0.002); end
  def test_lever_graphs_m3426; assert_in_delta(0.02, worksheet.lever_graphs_m3426, 0.002); end
  def test_lever_graphs_n3426; assert_in_delta(0.015, worksheet.lever_graphs_n3426, 0.002); end
  def test_lever_graphs_o3426; assert_in_delta(0.015, worksheet.lever_graphs_o3426, 0.002); end
  def test_lever_graphs_p3426; assert_in_delta(0.015, worksheet.lever_graphs_p3426, 0.002); end
  def test_lever_graphs_q3426; assert_in_delta(0.015, worksheet.lever_graphs_q3426, 0.002); end
  def test_lever_graphs_r3426; assert_in_delta(0.01, worksheet.lever_graphs_r3426, 0.002); end
  def test_lever_graphs_s3426; assert_in_delta(0.01, worksheet.lever_graphs_s3426, 0.002); end
  def test_lever_graphs_b3427; assert_equal("Rural", worksheet.lever_graphs_b3427); end
  def test_lever_graphs_c3427; assert_in_epsilon(4.0, worksheet.lever_graphs_c3427, 0.002); end
  def test_lever_graphs_d3427; assert_equal("Developing", worksheet.lever_graphs_d3427); end
  def test_lever_graphs_k3427; assert_in_delta(0.0, (worksheet.lever_graphs_k3427||0), 0.002); end
  def test_lever_graphs_l3427; assert_in_delta(0.0312, worksheet.lever_graphs_l3427, 0.002); end
  def test_lever_graphs_m3427; assert_in_delta(0.02, worksheet.lever_graphs_m3427, 0.002); end
  def test_lever_graphs_n3427; assert_in_delta(0.015, worksheet.lever_graphs_n3427, 0.002); end
  def test_lever_graphs_o3427; assert_in_delta(0.015, worksheet.lever_graphs_o3427, 0.002); end
  def test_lever_graphs_p3427; assert_in_delta(0.015, worksheet.lever_graphs_p3427, 0.002); end
  def test_lever_graphs_q3427; assert_in_delta(0.01, worksheet.lever_graphs_q3427, 0.002); end
  def test_lever_graphs_r3427; assert_in_delta(0.005, worksheet.lever_graphs_r3427, 0.002); end
  def test_lever_graphs_s3427; assert_in_delta(0.005, worksheet.lever_graphs_s3427, 0.002); end
  def test_lever_graphs_b3428; assert_equal("International", worksheet.lever_graphs_b3428); end
  def test_lever_graphs_c3428; assert_in_delta(1.0, worksheet.lever_graphs_c3428, 0.002); end
  def test_lever_graphs_d3428; assert_equal("International slow growth", worksheet.lever_graphs_d3428); end
  def test_lever_graphs_k3428; assert_in_delta(0.0, (worksheet.lever_graphs_k3428||0), 0.002); end
  def test_lever_graphs_l3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3428, 0.002); end
  def test_lever_graphs_m3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_m3428, 0.002); end
  def test_lever_graphs_n3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_n3428, 0.002); end
  def test_lever_graphs_o3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_o3428, 0.002); end
  def test_lever_graphs_p3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_p3428, 0.002); end
  def test_lever_graphs_q3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_q3428, 0.002); end
  def test_lever_graphs_r3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_r3428, 0.002); end
  def test_lever_graphs_s3428; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_s3428, 0.002); end
  def test_lever_graphs_b3429; assert_equal("International", worksheet.lever_graphs_b3429); end
  def test_lever_graphs_c3429; assert_in_epsilon(2.0, worksheet.lever_graphs_c3429, 0.002); end
  def test_lever_graphs_d3429; assert_equal("International slow growth", worksheet.lever_graphs_d3429); end
  def test_lever_graphs_k3429; assert_in_delta(0.0, (worksheet.lever_graphs_k3429||0), 0.002); end
  def test_lever_graphs_l3429; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3429, 0.002); end
  def test_lever_graphs_m3429; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_m3429, 0.002); end
  def test_lever_graphs_n3429; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_n3429, 0.002); end
  def test_lever_graphs_o3429; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_o3429, 0.002); end
  def test_lever_graphs_p3429; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_p3429, 0.002); end
  def test_lever_graphs_q3429; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_q3429, 0.002); end
  def test_lever_graphs_r3429; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_r3429, 0.002); end
  def test_lever_graphs_s3429; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_s3429, 0.002); end
  def test_lever_graphs_b3430; assert_equal("International", worksheet.lever_graphs_b3430); end
  def test_lever_graphs_c3430; assert_in_epsilon(3.0, worksheet.lever_graphs_c3430, 0.002); end
  def test_lever_graphs_d3430; assert_equal("International slow growth", worksheet.lever_graphs_d3430); end
  def test_lever_graphs_k3430; assert_in_delta(0.0, (worksheet.lever_graphs_k3430||0), 0.002); end
  def test_lever_graphs_l3430; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3430, 0.002); end
  def test_lever_graphs_m3430; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_m3430, 0.002); end
  def test_lever_graphs_n3430; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_n3430, 0.002); end
  def test_lever_graphs_o3430; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_o3430, 0.002); end
  def test_lever_graphs_p3430; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_p3430, 0.002); end
  def test_lever_graphs_q3430; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_q3430, 0.002); end
  def test_lever_graphs_r3430; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_r3430, 0.002); end
  def test_lever_graphs_s3430; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_s3430, 0.002); end
  def test_lever_graphs_b3431; assert_equal("International", worksheet.lever_graphs_b3431); end
  def test_lever_graphs_c3431; assert_in_epsilon(4.0, worksheet.lever_graphs_c3431, 0.002); end
  def test_lever_graphs_d3431; assert_equal("International slow growth", worksheet.lever_graphs_d3431); end
  def test_lever_graphs_k3431; assert_in_delta(0.0, (worksheet.lever_graphs_k3431||0), 0.002); end
  def test_lever_graphs_l3431; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3431, 0.002); end
  def test_lever_graphs_m3431; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_m3431, 0.002); end
  def test_lever_graphs_n3431; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_n3431, 0.002); end
  def test_lever_graphs_o3431; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_o3431, 0.002); end
  def test_lever_graphs_p3431; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_p3431, 0.002); end
  def test_lever_graphs_q3431; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_q3431, 0.002); end
  def test_lever_graphs_r3431; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_r3431, 0.002); end
  def test_lever_graphs_s3431; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_s3431, 0.002); end
  def test_lever_graphs_b3432; assert_equal("International", worksheet.lever_graphs_b3432); end
  def test_lever_graphs_c3432; assert_in_delta(1.0, worksheet.lever_graphs_c3432, 0.002); end
  def test_lever_graphs_d3432; assert_equal("International fast growth", worksheet.lever_graphs_d3432); end
  def test_lever_graphs_k3432; assert_in_delta(0.0, (worksheet.lever_graphs_k3432||0), 0.002); end
  def test_lever_graphs_l3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3432, 0.002); end
  def test_lever_graphs_m3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_m3432, 0.002); end
  def test_lever_graphs_n3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_n3432, 0.002); end
  def test_lever_graphs_o3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_o3432, 0.002); end
  def test_lever_graphs_p3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_p3432, 0.002); end
  def test_lever_graphs_q3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_q3432, 0.002); end
  def test_lever_graphs_r3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_r3432, 0.002); end
  def test_lever_graphs_s3432; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_s3432, 0.002); end
  def test_lever_graphs_b3433; assert_equal("International", worksheet.lever_graphs_b3433); end
  def test_lever_graphs_c3433; assert_in_epsilon(2.0, worksheet.lever_graphs_c3433, 0.002); end
  def test_lever_graphs_d3433; assert_equal("International fast growth", worksheet.lever_graphs_d3433); end
  def test_lever_graphs_k3433; assert_in_delta(0.0, (worksheet.lever_graphs_k3433||0), 0.002); end
  def test_lever_graphs_l3433; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3433, 0.002); end
  def test_lever_graphs_m3433; assert_in_delta(0.042105358044495, worksheet.lever_graphs_m3433, 0.002); end
  def test_lever_graphs_n3433; assert_in_delta(0.042105358044495, worksheet.lever_graphs_n3433, 0.002); end
  def test_lever_graphs_o3433; assert_in_delta(0.042105358044495, worksheet.lever_graphs_o3433, 0.002); end
  def test_lever_graphs_p3433; assert_in_delta(0.042105358044495, worksheet.lever_graphs_p3433, 0.002); end
  def test_lever_graphs_q3433; assert_in_delta(0.042105358044495, worksheet.lever_graphs_q3433, 0.002); end
  def test_lever_graphs_r3433; assert_in_delta(0.042105358044495, worksheet.lever_graphs_r3433, 0.002); end
  def test_lever_graphs_s3433; assert_in_delta(0.042105358044495, worksheet.lever_graphs_s3433, 0.002); end
  def test_lever_graphs_b3434; assert_equal("International", worksheet.lever_graphs_b3434); end
  def test_lever_graphs_c3434; assert_in_epsilon(3.0, worksheet.lever_graphs_c3434, 0.002); end
  def test_lever_graphs_d3434; assert_equal("International fast growth", worksheet.lever_graphs_d3434); end
  def test_lever_graphs_k3434; assert_in_delta(0.0, (worksheet.lever_graphs_k3434||0), 0.002); end
  def test_lever_graphs_l3434; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3434, 0.002); end
  def test_lever_graphs_m3434; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_m3434, 0.002); end
  def test_lever_graphs_n3434; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_n3434, 0.002); end
  def test_lever_graphs_o3434; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_o3434, 0.002); end
  def test_lever_graphs_p3434; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_p3434, 0.002); end
  def test_lever_graphs_q3434; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_q3434, 0.002); end
  def test_lever_graphs_r3434; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_r3434, 0.002); end
  def test_lever_graphs_s3434; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_s3434, 0.002); end
  def test_lever_graphs_b3435; assert_equal("International", worksheet.lever_graphs_b3435); end
  def test_lever_graphs_c3435; assert_in_epsilon(4.0, worksheet.lever_graphs_c3435, 0.002); end
  def test_lever_graphs_d3435; assert_equal("International fast growth", worksheet.lever_graphs_d3435); end
  def test_lever_graphs_k3435; assert_in_delta(0.0, (worksheet.lever_graphs_k3435||0), 0.002); end
  def test_lever_graphs_l3435; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3435, 0.002); end
  def test_lever_graphs_m3435; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_m3435, 0.002); end
  def test_lever_graphs_n3435; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_n3435, 0.002); end
  def test_lever_graphs_o3435; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_o3435, 0.002); end
  def test_lever_graphs_p3435; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_p3435, 0.002); end
  def test_lever_graphs_q3435; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_q3435, 0.002); end
  def test_lever_graphs_r3435; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_r3435, 0.002); end
  def test_lever_graphs_s3435; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_s3435, 0.002); end
  def test_lever_graphs_f3508; assert_equal("Type of travel", worksheet.lever_graphs_f3508); end
  def test_lever_graphs_g3508; assert_equal("Level", worksheet.lever_graphs_g3508); end
  def test_lever_graphs_h3508; assert_equal("Notes", worksheet.lever_graphs_h3508); end
  def test_lever_graphs_i3508; assert_equal("…", worksheet.lever_graphs_i3508); end
  def test_lever_graphs_j3508; assert_equal("Type of city", worksheet.lever_graphs_j3508); end
  def test_lever_graphs_k3508; assert_equal("2011", worksheet.lever_graphs_k3508); end
  def test_lever_graphs_l3508; assert_equal("2015", worksheet.lever_graphs_l3508); end
  def test_lever_graphs_m3508; assert_equal("2020", worksheet.lever_graphs_m3508); end
  def test_lever_graphs_n3508; assert_equal("2025", worksheet.lever_graphs_n3508); end
  def test_lever_graphs_o3508; assert_equal("2030", worksheet.lever_graphs_o3508); end
  def test_lever_graphs_p3508; assert_equal("2035", worksheet.lever_graphs_p3508); end
  def test_lever_graphs_q3508; assert_equal("2040", worksheet.lever_graphs_q3508); end
  def test_lever_graphs_r3508; assert_equal("2045", worksheet.lever_graphs_r3508); end
  def test_lever_graphs_s3508; assert_equal("2050", worksheet.lever_graphs_s3508); end
  def test_lever_graphs_f3509; assert_equal("Urban", worksheet.lever_graphs_f3509); end
  def test_lever_graphs_g3509; assert_in_delta(1.0, worksheet.lever_graphs_g3509, 0.002); end
  def test_lever_graphs_j3509; assert_equal("Automobile city", worksheet.lever_graphs_j3509); end
  def test_lever_graphs_k3509; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3509, 0.002); end
  def test_lever_graphs_l3509; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3509, 0.002); end
  def test_lever_graphs_m3509; assert_in_epsilon(5770006285828.047, worksheet.lever_graphs_m3509, 0.002); end
  def test_lever_graphs_n3509; assert_in_epsilon(6370751046993.881, worksheet.lever_graphs_n3509, 0.002); end
  def test_lever_graphs_o3509; assert_in_epsilon(6869623077074.309, worksheet.lever_graphs_o3509, 0.002); end
  def test_lever_graphs_p3509; assert_in_epsilon(7349094693207.585, worksheet.lever_graphs_p3509, 0.002); end
  def test_lever_graphs_q3509; assert_in_epsilon(7810835330229.266, worksheet.lever_graphs_q3509, 0.002); end
  def test_lever_graphs_r3509; assert_in_epsilon(8267262538186.196, worksheet.lever_graphs_r3509, 0.002); end
  def test_lever_graphs_s3509; assert_in_epsilon(8641602846371.22, worksheet.lever_graphs_s3509, 0.002); end
  def test_lever_graphs_f3510; assert_equal("Urban", worksheet.lever_graphs_f3510); end
  def test_lever_graphs_g3510; assert_in_epsilon(2.0, worksheet.lever_graphs_g3510, 0.002); end
  def test_lever_graphs_j3510; assert_equal("Automobile city", worksheet.lever_graphs_j3510); end
  def test_lever_graphs_k3510; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3510, 0.002); end
  def test_lever_graphs_l3510; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3510, 0.002); end
  def test_lever_graphs_m3510; assert_in_epsilon(5770006285828.047, worksheet.lever_graphs_m3510, 0.002); end
  def test_lever_graphs_n3510; assert_in_epsilon(6279345586990.636, worksheet.lever_graphs_n3510, 0.002); end
  def test_lever_graphs_o3510; assert_in_epsilon(6771059963749.519, worksheet.lever_graphs_o3510, 0.002); end
  def test_lever_graphs_p3510; assert_in_epsilon(7243652277378.604, worksheet.lever_graphs_p3510, 0.002); end
  def test_lever_graphs_q3510; assert_in_epsilon(7698768010206.44, worksheet.lever_graphs_q3510, 0.002); end
  def test_lever_graphs_r3510; assert_in_epsilon(7991279192298.541, worksheet.lever_graphs_r3510, 0.002); end
  def test_lever_graphs_s3510; assert_in_epsilon(8261660280839.308, worksheet.lever_graphs_s3510, 0.002); end
  def test_lever_graphs_f3511; assert_equal("Urban", worksheet.lever_graphs_f3511); end
  def test_lever_graphs_g3511; assert_in_epsilon(3.0, worksheet.lever_graphs_g3511, 0.002); end
  def test_lever_graphs_j3511; assert_equal("Automobile city", worksheet.lever_graphs_j3511); end
  def test_lever_graphs_k3511; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3511, 0.002); end
  def test_lever_graphs_l3511; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3511, 0.002); end
  def test_lever_graphs_m3511; assert_in_epsilon(5712810006069.065, worksheet.lever_graphs_m3511, 0.002); end
  def test_lever_graphs_n3511; assert_in_epsilon(6204699670096.028, worksheet.lever_graphs_n3511, 0.002); end
  def test_lever_graphs_o3511; assert_in_epsilon(6627369067665.72, worksheet.lever_graphs_o3511, 0.002); end
  def test_lever_graphs_p3511; assert_in_epsilon(6953010965974.846, worksheet.lever_graphs_p3511, 0.002); end
  def test_lever_graphs_q3511; assert_in_epsilon(7210916416360.04, worksheet.lever_graphs_q3511, 0.002); end
  def test_lever_graphs_r3511; assert_in_epsilon(7410192977703.536, worksheet.lever_graphs_r3511, 0.002); end
  def test_lever_graphs_s3511; assert_in_epsilon(7546459476873.182, worksheet.lever_graphs_s3511, 0.002); end
  def test_lever_graphs_f3512; assert_equal("Urban", worksheet.lever_graphs_f3512); end
  def test_lever_graphs_g3512; assert_in_epsilon(4.0, worksheet.lever_graphs_g3512, 0.002); end
  def test_lever_graphs_j3512; assert_equal("Automobile city", worksheet.lever_graphs_j3512); end
  def test_lever_graphs_k3512; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_k3512, 0.002); end
  def test_lever_graphs_l3512; assert_in_epsilon(5171198867397.896, worksheet.lever_graphs_l3512, 0.002); end
  def test_lever_graphs_m3512; assert_in_epsilon(5690058899963.342, worksheet.lever_graphs_m3512, 0.002); end
  def test_lever_graphs_n3512; assert_in_epsilon(6164578189380.335, worksheet.lever_graphs_n3512, 0.002); end
  def test_lever_graphs_o3512; assert_in_epsilon(6551657684640.563, worksheet.lever_graphs_o3512, 0.002); end
  def test_lever_graphs_p3512; assert_in_epsilon(6839211605975.7705, worksheet.lever_graphs_p3512, 0.002); end
  def test_lever_graphs_q3512; assert_in_epsilon(7057396030660.884, worksheet.lever_graphs_q3512, 0.002); end
  def test_lever_graphs_r3512; assert_in_epsilon(7216095248230.405, worksheet.lever_graphs_r3512, 0.002); end
  def test_lever_graphs_s3512; assert_in_epsilon(7311938020591.433, worksheet.lever_graphs_s3512, 0.002); end
  def test_lever_graphs_f3513; assert_equal("Urban", worksheet.lever_graphs_f3513); end
  def test_lever_graphs_g3513; assert_in_delta(1.0, worksheet.lever_graphs_g3513, 0.002); end
  def test_lever_graphs_j3513; assert_equal("Transit city", worksheet.lever_graphs_j3513); end
  def test_lever_graphs_k3513; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3513, 0.002); end
  def test_lever_graphs_l3513; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_l3513, 0.002); end
  def test_lever_graphs_m3513; assert_in_epsilon(11944684415846.242, worksheet.lever_graphs_m3513, 0.002); end
  def test_lever_graphs_n3513; assert_in_epsilon(13235827530101.955, worksheet.lever_graphs_n3513, 0.002); end
  def test_lever_graphs_o3513; assert_in_epsilon(14190784947728.174, worksheet.lever_graphs_o3513, 0.002); end
  def test_lever_graphs_p3513; assert_in_epsilon(15070141029144.732, worksheet.lever_graphs_p3513, 0.002); end
  def test_lever_graphs_q3513; assert_in_epsilon(15675831359910.969, worksheet.lever_graphs_q3513, 0.002); end
  def test_lever_graphs_r3513; assert_in_epsilon(16207211361196.072, worksheet.lever_graphs_r3513, 0.002); end
  def test_lever_graphs_s3513; assert_in_epsilon(16407151742107.824, worksheet.lever_graphs_s3513, 0.002); end
  def test_lever_graphs_f3514; assert_equal("Urban", worksheet.lever_graphs_f3514); end
  def test_lever_graphs_g3514; assert_in_epsilon(2.0, worksheet.lever_graphs_g3514, 0.002); end
  def test_lever_graphs_j3514; assert_equal("Transit city", worksheet.lever_graphs_j3514); end
  def test_lever_graphs_k3514; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3514, 0.002); end
  def test_lever_graphs_l3514; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_l3514, 0.002); end
  def test_lever_graphs_m3514; assert_in_epsilon(11944684415846.242, worksheet.lever_graphs_m3514, 0.002); end
  def test_lever_graphs_n3514; assert_in_epsilon(12944158165792.258, worksheet.lever_graphs_n3514, 0.002); end
  def test_lever_graphs_o3514; assert_in_epsilon(13878071804908.338, worksheet.lever_graphs_o3514, 0.002); end
  def test_lever_graphs_p3514; assert_in_epsilon(14556101082230.662, worksheet.lever_graphs_p3514, 0.002); end
  def test_lever_graphs_q3514; assert_in_epsilon(15141131418848.78, worksheet.lever_graphs_q3514, 0.002); end
  def test_lever_graphs_r3514; assert_in_epsilon(15422129337445.027, worksheet.lever_graphs_r3514, 0.002); end
  def test_lever_graphs_s3514; assert_in_epsilon(15472656469008.55, worksheet.lever_graphs_s3514, 0.002); end
  def test_lever_graphs_f3515; assert_equal("Urban", worksheet.lever_graphs_f3515); end
  def test_lever_graphs_g3515; assert_in_epsilon(3.0, worksheet.lever_graphs_g3515, 0.002); end
  def test_lever_graphs_j3515; assert_equal("Transit city", worksheet.lever_graphs_j3515); end
  def test_lever_graphs_k3515; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3515, 0.002); end
  def test_lever_graphs_l3515; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_l3515, 0.002); end
  def test_lever_graphs_m3515; assert_in_epsilon(11827465652983.773, worksheet.lever_graphs_m3515, 0.002); end
  def test_lever_graphs_n3515; assert_in_epsilon(12772666916212.598, worksheet.lever_graphs_n3515, 0.002); end
  def test_lever_graphs_o3515; assert_in_epsilon(13457989838237.373, worksheet.lever_graphs_o3515, 0.002); end
  def test_lever_graphs_p3515; assert_in_epsilon(14045408793406.547, worksheet.lever_graphs_p3515, 0.002); end
  def test_lever_graphs_q3515; assert_in_epsilon(14393153230797.615, worksheet.lever_graphs_q3515, 0.002); end
  def test_lever_graphs_r3515; assert_in_epsilon(14660269735371.121, worksheet.lever_graphs_r3515, 0.002); end
  def test_lever_graphs_s3515; assert_in_epsilon(14708300805625.299, worksheet.lever_graphs_s3515, 0.002); end
  def test_lever_graphs_f3516; assert_equal("Urban", worksheet.lever_graphs_f3516); end
  def test_lever_graphs_g3516; assert_in_epsilon(4.0, worksheet.lever_graphs_g3516, 0.002); end
  def test_lever_graphs_j3516; assert_equal("Transit city", worksheet.lever_graphs_j3516); end
  def test_lever_graphs_k3516; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_k3516, 0.002); end
  def test_lever_graphs_l3516; assert_in_epsilon(10495445774460.697, worksheet.lever_graphs_l3516, 0.002); end
  def test_lever_graphs_m3516; assert_in_epsilon(11827465652983.773, worksheet.lever_graphs_m3516, 0.002); end
  def test_lever_graphs_n3516; assert_in_epsilon(12658896855503.084, worksheet.lever_graphs_n3516, 0.002); end
  def test_lever_graphs_o3516; assert_in_epsilon(13338115396120.604, worksheet.lever_graphs_o3516, 0.002); end
  def test_lever_graphs_p3516; assert_in_epsilon(13782204888835.062, worksheet.lever_graphs_p3516, 0.002); end
  def test_lever_graphs_q3516; assert_in_epsilon(14053097089503.79, worksheet.lever_graphs_q3516, 0.002); end
  def test_lever_graphs_r3516; assert_in_epsilon(14207082943313.594, worksheet.lever_graphs_r3516, 0.002); end
  def test_lever_graphs_s3516; assert_in_epsilon(14253629249164.355, worksheet.lever_graphs_s3516, 0.002); end
  def test_lever_graphs_f3517; assert_equal("Urban", worksheet.lever_graphs_f3517); end
  def test_lever_graphs_g3517; assert_in_delta(1.0, worksheet.lever_graphs_g3517, 0.002); end
  def test_lever_graphs_j3517; assert_equal("Booming city", worksheet.lever_graphs_j3517); end
  def test_lever_graphs_k3517; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3517, 0.002); end
  def test_lever_graphs_l3517; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_l3517, 0.002); end
  def test_lever_graphs_m3517; assert_in_epsilon(31178217029490.883, worksheet.lever_graphs_m3517, 0.002); end
  def test_lever_graphs_n3517; assert_in_epsilon(36201910536681.73, worksheet.lever_graphs_n3517, 0.002); end
  def test_lever_graphs_o3517; assert_in_epsilon(41125307012147.8, worksheet.lever_graphs_o3517, 0.002); end
  def test_lever_graphs_p3517; assert_in_epsilon(45764699162571.23, worksheet.lever_graphs_p3517, 0.002); end
  def test_lever_graphs_q3517; assert_in_epsilon(49956436639087.61, worksheet.lever_graphs_q3517, 0.002); end
  def test_lever_graphs_r3517; assert_in_epsilon(54292860412290.055, worksheet.lever_graphs_r3517, 0.002); end
  def test_lever_graphs_s3517; assert_in_epsilon(58754926774635.62, worksheet.lever_graphs_s3517, 0.002); end
  def test_lever_graphs_f3518; assert_equal("Urban", worksheet.lever_graphs_f3518); end
  def test_lever_graphs_g3518; assert_in_epsilon(2.0, worksheet.lever_graphs_g3518, 0.002); end
  def test_lever_graphs_j3518; assert_equal("Booming city", worksheet.lever_graphs_j3518); end
  def test_lever_graphs_k3518; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3518, 0.002); end
  def test_lever_graphs_l3518; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_l3518, 0.002); end
  def test_lever_graphs_m3518; assert_in_epsilon(29686716158523.164, worksheet.lever_graphs_m3518, 0.002); end
  def test_lever_graphs_n3518; assert_in_epsilon(34470086646781.824, worksheet.lever_graphs_n3518, 0.002); end
  def test_lever_graphs_o3518; assert_in_epsilon(39157958104113.24, worksheet.lever_graphs_o3518, 0.002); end
  def test_lever_graphs_p3518; assert_in_epsilon(43575411410934.03, worksheet.lever_graphs_p3518, 0.002); end
  def test_lever_graphs_q3518; assert_in_epsilon(47566624909726.52, worksheet.lever_graphs_q3518, 0.002); end
  def test_lever_graphs_r3518; assert_in_epsilon(51310008692464.26, worksheet.lever_graphs_r3518, 0.002); end
  def test_lever_graphs_s3518; assert_in_epsilon(55112756807202.13, worksheet.lever_graphs_s3518, 0.002); end
  def test_lever_graphs_f3519; assert_equal("Urban", worksheet.lever_graphs_f3519); end
  def test_lever_graphs_g3519; assert_in_epsilon(3.0, worksheet.lever_graphs_g3519, 0.002); end
  def test_lever_graphs_j3519; assert_equal("Booming city", worksheet.lever_graphs_j3519); end
  def test_lever_graphs_k3519; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3519, 0.002); end
  def test_lever_graphs_l3519; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_l3519, 0.002); end
  def test_lever_graphs_m3519; assert_in_epsilon(28962684793027.652, worksheet.lever_graphs_m3519, 0.002); end
  def test_lever_graphs_n3519; assert_in_epsilon(33215243294784.016, worksheet.lever_graphs_n3519, 0.002); end
  def test_lever_graphs_o3519; assert_in_epsilon(37452406609503.63, worksheet.lever_graphs_o3519, 0.002); end
  def test_lever_graphs_p3519; assert_in_epsilon(41264400961330.1, worksheet.lever_graphs_p3519, 0.002); end
  def test_lever_graphs_q3519; assert_in_epsilon(44931724466893.08, worksheet.lever_graphs_q3519, 0.002); end
  def test_lever_graphs_r3519; assert_in_epsilon(48467747655820.54, worksheet.lever_graphs_r3519, 0.002); end
  def test_lever_graphs_s3519; assert_in_epsilon(51929956982955.5, worksheet.lever_graphs_s3519, 0.002); end
  def test_lever_graphs_f3520; assert_equal("Urban", worksheet.lever_graphs_f3520); end
  def test_lever_graphs_g3520; assert_in_epsilon(4.0, worksheet.lever_graphs_g3520, 0.002); end
  def test_lever_graphs_j3520; assert_equal("Booming city", worksheet.lever_graphs_j3520); end
  def test_lever_graphs_k3520; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_k3520, 0.002); end
  def test_lever_graphs_l3520; assert_in_epsilon(24675005592268.375, worksheet.lever_graphs_l3520, 0.002); end
  def test_lever_graphs_m3520; assert_in_epsilon(28606005837255.477, worksheet.lever_graphs_m3520, 0.002); end
  def test_lever_graphs_n3520; assert_in_epsilon(32401183801898.68, worksheet.lever_graphs_n3520, 0.002); end
  def test_lever_graphs_o3520; assert_in_epsilon(36082793270653.43, worksheet.lever_graphs_o3520, 0.002); end
  def test_lever_graphs_p3520; assert_in_epsilon(39656392700129.39, worksheet.lever_graphs_p3520, 0.002); end
  def test_lever_graphs_q3520; assert_in_epsilon(42965762995993.46, worksheet.lever_graphs_q3520, 0.002); end
  def test_lever_graphs_r3520; assert_in_epsilon(46162162264194.836, worksheet.lever_graphs_r3520, 0.002); end
  def test_lever_graphs_s3520; assert_in_epsilon(49385568123453.85, worksheet.lever_graphs_s3520, 0.002); end
  def test_lever_graphs_f3521; assert_equal("Rural", worksheet.lever_graphs_f3521); end
  def test_lever_graphs_g3521; assert_in_delta(1.0, worksheet.lever_graphs_g3521, 0.002); end
  def test_lever_graphs_j3521; assert_equal("Developed", worksheet.lever_graphs_j3521); end
  def test_lever_graphs_k3521; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3521, 0.002); end
  def test_lever_graphs_l3521; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3521, 0.002); end
  def test_lever_graphs_m3521; assert_in_epsilon(6813123340819.391, worksheet.lever_graphs_m3521, 0.002); end
  def test_lever_graphs_n3521; assert_in_epsilon(6860388098157.445, worksheet.lever_graphs_n3521, 0.002); end
  def test_lever_graphs_o3521; assert_in_epsilon(6877078896253.531, worksheet.lever_graphs_o3521, 0.002); end
  def test_lever_graphs_p3521; assert_in_epsilon(6868130148301.212, worksheet.lever_graphs_p3521, 0.002); end
  def test_lever_graphs_q3521; assert_in_epsilon(6828962049884.475, worksheet.lever_graphs_q3521, 0.002); end
  def test_lever_graphs_r3521; assert_in_epsilon(6592735854237.43, worksheet.lever_graphs_r3521, 0.002); end
  def test_lever_graphs_s3521; assert_in_epsilon(6311010846238.058, worksheet.lever_graphs_s3521, 0.002); end
  def test_lever_graphs_f3522; assert_equal("Rural", worksheet.lever_graphs_f3522); end
  def test_lever_graphs_g3522; assert_in_epsilon(2.0, worksheet.lever_graphs_g3522, 0.002); end
  def test_lever_graphs_j3522; assert_equal("Developed", worksheet.lever_graphs_j3522); end
  def test_lever_graphs_k3522; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3522, 0.002); end
  def test_lever_graphs_l3522; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3522, 0.002); end
  def test_lever_graphs_m3522; assert_in_epsilon(6752586544435.684, worksheet.lever_graphs_m3522, 0.002); end
  def test_lever_graphs_n3522; assert_in_epsilon(6739016200637.021, worksheet.lever_graphs_n3522, 0.002); end
  def test_lever_graphs_o3522; assert_in_epsilon(6695387700266.412, worksheet.lever_graphs_o3522, 0.002); end
  def test_lever_graphs_p3522; assert_in_epsilon(6627262111161.863, worksheet.lever_graphs_p3522, 0.002); end
  def test_lever_graphs_q3522; assert_in_epsilon(6370461137040.822, worksheet.lever_graphs_q3522, 0.002); end
  def test_lever_graphs_r3522; assert_in_epsilon(6073981217792.462, worksheet.lever_graphs_r3522, 0.002); end
  def test_lever_graphs_s3522; assert_in_epsilon(5742464159557.68, worksheet.lever_graphs_s3522, 0.002); end
  def test_lever_graphs_f3523; assert_equal("Rural", worksheet.lever_graphs_f3523); end
  def test_lever_graphs_g3523; assert_in_epsilon(3.0, worksheet.lever_graphs_g3523, 0.002); end
  def test_lever_graphs_j3523; assert_equal("Developed", worksheet.lever_graphs_j3523); end
  def test_lever_graphs_k3523; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3523, 0.002); end
  def test_lever_graphs_l3523; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3523, 0.002); end
  def test_lever_graphs_m3523; assert_in_epsilon(6669222301248.492, worksheet.lever_graphs_m3523, 0.002); end
  def test_lever_graphs_n3523; assert_in_epsilon(6573649887645.622, worksheet.lever_graphs_n3523, 0.002); end
  def test_lever_graphs_o3523; assert_in_epsilon(6370630727040.085, worksheet.lever_graphs_o3523, 0.002); end
  def test_lever_graphs_p3523; assert_in_epsilon(6150883220859.31, worksheet.lever_graphs_p3523, 0.002); end
  def test_lever_graphs_q3523; assert_in_epsilon(5883111325236.978, worksheet.lever_graphs_q3523, 0.002); end
  def test_lever_graphs_r3523; assert_in_epsilon(5539718977244.4, worksheet.lever_graphs_r3523, 0.002); end
  def test_lever_graphs_s3523; assert_in_epsilon(5133706339400.762, worksheet.lever_graphs_s3523, 0.002); end
  def test_lever_graphs_f3524; assert_equal("Rural", worksheet.lever_graphs_f3524); end
  def test_lever_graphs_g3524; assert_in_epsilon(4.0, worksheet.lever_graphs_g3524, 0.002); end
  def test_lever_graphs_j3524; assert_equal("Developed", worksheet.lever_graphs_j3524); end
  def test_lever_graphs_k3524; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_k3524, 0.002); end
  def test_lever_graphs_l3524; assert_in_epsilon(6731609561968.717, worksheet.lever_graphs_l3524, 0.002); end
  def test_lever_graphs_m3524; assert_in_epsilon(6619196637391.429, worksheet.lever_graphs_m3524, 0.002); end
  def test_lever_graphs_n3524; assert_in_epsilon(6363650949055.589, worksheet.lever_graphs_n3524, 0.002); end
  def test_lever_graphs_o3524; assert_in_epsilon(6045060503326.514, worksheet.lever_graphs_o3524, 0.002); end
  def test_lever_graphs_p3524; assert_in_epsilon(5721028894934.223, worksheet.lever_graphs_p3524, 0.002); end
  def test_lever_graphs_q3524; assert_in_epsilon(5390503147851.514, worksheet.lever_graphs_q3524, 0.002); end
  def test_lever_graphs_r3524; assert_in_epsilon(5037908988492.173, worksheet.lever_graphs_r3524, 0.002); end
  def test_lever_graphs_s3524; assert_in_epsilon(4668674605658.669, worksheet.lever_graphs_s3524, 0.002); end
  def test_lever_graphs_f3525; assert_equal("Rural", worksheet.lever_graphs_f3525); end
  def test_lever_graphs_g3525; assert_in_delta(1.0, worksheet.lever_graphs_g3525, 0.002); end
  def test_lever_graphs_j3525; assert_equal("Developing", worksheet.lever_graphs_j3525); end
  def test_lever_graphs_k3525; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3525, 0.002); end
  def test_lever_graphs_l3525; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_l3525, 0.002); end
  def test_lever_graphs_m3525; assert_in_epsilon(15930599290990.635, worksheet.lever_graphs_m3525, 0.002); end
  def test_lever_graphs_n3525; assert_in_epsilon(17858983333897.76, worksheet.lever_graphs_n3525, 0.002); end
  def test_lever_graphs_o3525; assert_in_epsilon(19962668778717.836, worksheet.lever_graphs_o3525, 0.002); end
  def test_lever_graphs_p3525; assert_in_epsilon(21998178690902.17, worksheet.lever_graphs_p3525, 0.002); end
  def test_lever_graphs_q3525; assert_in_epsilon(24179398775550.055, worksheet.lever_graphs_q3525, 0.002); end
  def test_lever_graphs_r3525; assert_in_epsilon(26415234184191.64, worksheet.lever_graphs_r3525, 0.002); end
  def test_lever_graphs_s3525; assert_in_epsilon(28678497464036.676, worksheet.lever_graphs_s3525, 0.002); end
  def test_lever_graphs_f3526; assert_equal("Rural", worksheet.lever_graphs_f3526); end
  def test_lever_graphs_g3526; assert_in_epsilon(2.0, worksheet.lever_graphs_g3526, 0.002); end
  def test_lever_graphs_j3526; assert_equal("Developing", worksheet.lever_graphs_j3526); end
  def test_lever_graphs_k3526; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3526, 0.002); end
  def test_lever_graphs_l3526; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_l3526, 0.002); end
  def test_lever_graphs_m3526; assert_in_epsilon(15930599290990.635, worksheet.lever_graphs_m3526, 0.002); end
  def test_lever_graphs_n3526; assert_in_epsilon(17641723350989.363, worksheet.lever_graphs_n3526, 0.002); end
  def test_lever_graphs_o3526; assert_in_epsilon(19479919230111.387, worksheet.lever_graphs_o3526, 0.002); end
  def test_lever_graphs_p3526; assert_in_epsilon(20945205646488.188, worksheet.lever_graphs_p3526, 0.002); end
  def test_lever_graphs_q3526; assert_in_epsilon(22463258432664.656, worksheet.lever_graphs_q3526, 0.002); end
  def test_lever_graphs_r3526; assert_in_epsilon(23944792252539.88, worksheet.lever_graphs_r3526, 0.002); end
  def test_lever_graphs_s3526; assert_in_epsilon(25365437327504.418, worksheet.lever_graphs_s3526, 0.002); end
  def test_lever_graphs_f3527; assert_equal("Rural", worksheet.lever_graphs_f3527); end
  def test_lever_graphs_g3527; assert_in_epsilon(3.0, worksheet.lever_graphs_g3527, 0.002); end
  def test_lever_graphs_j3527; assert_equal("Developing", worksheet.lever_graphs_j3527); end
  def test_lever_graphs_k3527; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3527, 0.002); end
  def test_lever_graphs_l3527; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_l3527, 0.002); end
  def test_lever_graphs_m3527; assert_in_epsilon(15545820385833.295, worksheet.lever_graphs_m3527, 0.002); end
  def test_lever_graphs_n3527; assert_in_epsilon(16797780103096.658, worksheet.lever_graphs_n3527, 0.002); end
  def test_lever_graphs_o3527; assert_in_epsilon(18097866844154.742, worksheet.lever_graphs_o3527, 0.002); end
  def test_lever_graphs_p3527; assert_in_epsilon(19459194791097.383, worksheet.lever_graphs_p3527, 0.002); end
  def test_lever_graphs_q3527; assert_in_epsilon(20869545463606.957, worksheet.lever_graphs_q3527, 0.002); end
  def test_lever_graphs_r3527; assert_in_epsilon(21703409652183.94, worksheet.lever_graphs_r3527, 0.002); end
  def test_lever_graphs_s3527; assert_in_epsilon(22430342571809.72, worksheet.lever_graphs_s3527, 0.002); end
  def test_lever_graphs_f3528; assert_equal("Rural", worksheet.lever_graphs_f3528); end
  def test_lever_graphs_g3528; assert_in_epsilon(4.0, worksheet.lever_graphs_g3528, 0.002); end
  def test_lever_graphs_j3528; assert_equal("Developing", worksheet.lever_graphs_j3528); end
  def test_lever_graphs_k3528; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_k3528, 0.002); end
  def test_lever_graphs_l3528; assert_in_epsilon(13986606979924.908, worksheet.lever_graphs_l3528, 0.002); end
  def test_lever_graphs_m3528; assert_in_epsilon(15545820385833.295, worksheet.lever_graphs_m3528, 0.002); end
  def test_lever_graphs_n3528; assert_in_epsilon(16797780103096.658, worksheet.lever_graphs_n3528, 0.002); end
  def test_lever_graphs_o3528; assert_in_epsilon(18097866844154.742, worksheet.lever_graphs_o3528, 0.002); end
  def test_lever_graphs_p3528; assert_in_epsilon(19459194791097.383, worksheet.lever_graphs_p3528, 0.002); end
  def test_lever_graphs_q3528; assert_in_epsilon(20360556681600.906, worksheet.lever_graphs_q3528, 0.002); end
  def test_lever_graphs_r3528; assert_in_epsilon(20655136308366.53, worksheet.lever_graphs_r3528, 0.002); end
  def test_lever_graphs_s3528; assert_in_epsilon(20823774103068.1, worksheet.lever_graphs_s3528, 0.002); end
  def test_lever_graphs_f3529; assert_equal("International", worksheet.lever_graphs_f3529); end
  def test_lever_graphs_g3529; assert_in_delta(1.0, worksheet.lever_graphs_g3529, 0.002); end
  def test_lever_graphs_j3529; assert_equal("International slow growth", worksheet.lever_graphs_j3529); end
  def test_lever_graphs_k3529; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3529, 0.002); end
  def test_lever_graphs_l3529; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3529, 0.002); end
  def test_lever_graphs_m3529; assert_in_epsilon(5116359699546.063, worksheet.lever_graphs_m3529, 0.002); end
  def test_lever_graphs_n3529; assert_in_epsilon(5798700654526.816, worksheet.lever_graphs_n3529, 0.002); end
  def test_lever_graphs_o3529; assert_in_epsilon(6535985392974.534, worksheet.lever_graphs_o3529, 0.002); end
  def test_lever_graphs_p3529; assert_in_epsilon(7332058590767.87, worksheet.lever_graphs_p3529, 0.002); end
  def test_lever_graphs_q3529; assert_in_epsilon(8188950461781.942, worksheet.lever_graphs_q3529, 0.002); end
  def test_lever_graphs_r3529; assert_in_epsilon(9106468388033.11, worksheet.lever_graphs_r3529, 0.002); end
  def test_lever_graphs_s3529; assert_in_epsilon(10083922574157.883, worksheet.lever_graphs_s3529, 0.002); end
  def test_lever_graphs_f3530; assert_equal("International", worksheet.lever_graphs_f3530); end
  def test_lever_graphs_g3530; assert_in_epsilon(2.0, worksheet.lever_graphs_g3530, 0.002); end
  def test_lever_graphs_j3530; assert_equal("International slow growth", worksheet.lever_graphs_j3530); end
  def test_lever_graphs_k3530; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3530, 0.002); end
  def test_lever_graphs_l3530; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3530, 0.002); end
  def test_lever_graphs_m3530; assert_in_epsilon(4963173501663.59, worksheet.lever_graphs_m3530, 0.002); end
  def test_lever_graphs_n3530; assert_in_epsilon(5456667183540.511, worksheet.lever_graphs_n3530, 0.002); end
  def test_lever_graphs_o3530; assert_in_epsilon(5966315798897.56, worksheet.lever_graphs_o3530, 0.002); end
  def test_lever_graphs_p3530; assert_in_epsilon(6492612429152.186, worksheet.lever_graphs_p3530, 0.002); end
  def test_lever_graphs_q3530; assert_in_epsilon(7034288625143.366, worksheet.lever_graphs_q3530, 0.002); end
  def test_lever_graphs_r3530; assert_in_epsilon(7588226968133.119, worksheet.lever_graphs_r3530, 0.002); end
  def test_lever_graphs_s3530; assert_in_epsilon(8151137486706.55, worksheet.lever_graphs_s3530, 0.002); end
  def test_lever_graphs_f3531; assert_equal("International", worksheet.lever_graphs_f3531); end
  def test_lever_graphs_g3531; assert_in_epsilon(3.0, worksheet.lever_graphs_g3531, 0.002); end
  def test_lever_graphs_j3531; assert_equal("International slow growth", worksheet.lever_graphs_j3531); end
  def test_lever_graphs_k3531; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3531, 0.002); end
  def test_lever_graphs_l3531; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3531, 0.002); end
  def test_lever_graphs_m3531; assert_in_epsilon(4757240883863.283, worksheet.lever_graphs_m3531, 0.002); end
  def test_lever_graphs_n3531; assert_in_epsilon(5013243923384.648, worksheet.lever_graphs_n3531, 0.002); end
  def test_lever_graphs_o3531; assert_in_epsilon(5254039002003.484, worksheet.lever_graphs_o3531, 0.002); end
  def test_lever_graphs_p3531; assert_in_epsilon(5480273326575.201, worksheet.lever_graphs_p3531, 0.002); end
  def test_lever_graphs_q3531; assert_in_epsilon(5691131355557.158, worksheet.lever_graphs_q3531, 0.002); end
  def test_lever_graphs_r3531; assert_in_epsilon(5884565796265.762, worksheet.lever_graphs_r3531, 0.002); end
  def test_lever_graphs_s3531; assert_in_epsilon(6058819498169.161, worksheet.lever_graphs_s3531, 0.002); end
  def test_lever_graphs_f3532; assert_equal("International", worksheet.lever_graphs_f3532); end
  def test_lever_graphs_g3532; assert_in_epsilon(4.0, worksheet.lever_graphs_g3532, 0.002); end
  def test_lever_graphs_j3532; assert_equal("International slow growth", worksheet.lever_graphs_j3532); end
  def test_lever_graphs_k3532; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_k3532, 0.002); end
  def test_lever_graphs_l3532; assert_in_epsilon(4486625265288.134, worksheet.lever_graphs_l3532, 0.002); end
  def test_lever_graphs_m3532; assert_in_epsilon(4437219717127.221, worksheet.lever_graphs_m3532, 0.002); end
  def test_lever_graphs_n3532; assert_in_epsilon(4361445191283.9976, worksheet.lever_graphs_n3532, 0.002); end
  def test_lever_graphs_o3532; assert_in_epsilon(4263445022230.834, worksheet.lever_graphs_o3532, 0.002); end
  def test_lever_graphs_p3532; assert_in_epsilon(4147872378757.677, worksheet.lever_graphs_p3532, 0.002); end
  def test_lever_graphs_q3532; assert_in_epsilon(4017700577361.6455, worksheet.lever_graphs_q3532, 0.002); end
  def test_lever_graphs_r3532; assert_in_epsilon(3874798942894.1045, worksheet.lever_graphs_r3532, 0.002); end
  def test_lever_graphs_s3532; assert_in_epsilon(3721161811903.7007, worksheet.lever_graphs_s3532, 0.002); end
  def test_lever_graphs_f3533; assert_equal("International", worksheet.lever_graphs_f3533); end
  def test_lever_graphs_g3533; assert_in_delta(1.0, worksheet.lever_graphs_g3533, 0.002); end
  def test_lever_graphs_j3533; assert_equal("International fast growth", worksheet.lever_graphs_j3533); end
  def test_lever_graphs_k3533; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3533, 0.002); end
  def test_lever_graphs_l3533; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3533, 0.002); end
  def test_lever_graphs_m3533; assert_in_epsilon(2384097147912.68, worksheet.lever_graphs_m3533, 0.002); end
  def test_lever_graphs_n3533; assert_in_epsilon(3256662822013.7827, worksheet.lever_graphs_n3533, 0.002); end
  def test_lever_graphs_o3533; assert_in_epsilon(4426137440432.912, worksheet.lever_graphs_o3533, 0.002); end
  def test_lever_graphs_p3533; assert_in_epsilon(5989808588231.523, worksheet.lever_graphs_p3533, 0.002); end
  def test_lever_graphs_q3533; assert_in_epsilon(8074200549519.234, worksheet.lever_graphs_q3533, 0.002); end
  def test_lever_graphs_r3533; assert_in_epsilon(10842436341770.746, worksheet.lever_graphs_r3533, 0.002); end
  def test_lever_graphs_s3533; assert_in_epsilon(14505888415235.67, worksheet.lever_graphs_s3533, 0.002); end
  def test_lever_graphs_f3534; assert_equal("International", worksheet.lever_graphs_f3534); end
  def test_lever_graphs_g3534; assert_in_epsilon(2.0, worksheet.lever_graphs_g3534, 0.002); end
  def test_lever_graphs_j3534; assert_equal("International fast growth", worksheet.lever_graphs_j3534); end
  def test_lever_graphs_k3534; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3534, 0.002); end
  def test_lever_graphs_l3534; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3534, 0.002); end
  def test_lever_graphs_m3534; assert_in_epsilon(2256786271425.642, worksheet.lever_graphs_m3534, 0.002); end
  def test_lever_graphs_n3534; assert_in_epsilon(2918137572443.4985, worksheet.lever_graphs_n3534, 0.002); end
  def test_lever_graphs_o3534; assert_in_epsilon(3754259986232.103, worksheet.lever_graphs_o3534, 0.002); end
  def test_lever_graphs_p3534; assert_in_epsilon(4809266862130.464, worksheet.lever_graphs_p3534, 0.002); end
  def test_lever_graphs_q3534; assert_in_epsilon(6136658383465.779, worksheet.lever_graphs_q3534, 0.002); end
  def test_lever_graphs_r3534; assert_in_epsilon(7800559956522.215, worksheet.lever_graphs_r3534, 0.002); end
  def test_lever_graphs_s3534; assert_in_epsilon(9878925577438.08, worksheet.lever_graphs_s3534, 0.002); end
  def test_lever_graphs_f3535; assert_equal("International", worksheet.lever_graphs_f3535); end
  def test_lever_graphs_g3535; assert_in_epsilon(3.0, worksheet.lever_graphs_g3535, 0.002); end
  def test_lever_graphs_j3535; assert_equal("International fast growth", worksheet.lever_graphs_j3535); end
  def test_lever_graphs_k3535; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3535, 0.002); end
  def test_lever_graphs_l3535; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3535, 0.002); end
  def test_lever_graphs_m3535; assert_in_epsilon(2106430665017.3262, worksheet.lever_graphs_m3535, 0.002); end
  def test_lever_graphs_n3535; assert_in_epsilon(2542255742205.995, worksheet.lever_graphs_n3535, 0.002); end
  def test_lever_graphs_o3535; assert_in_epsilon(3052773313092.0254, worksheet.lever_graphs_o3535, 0.002); end
  def test_lever_graphs_p3535; assert_in_epsilon(3650108931936.997, worksheet.lever_graphs_p3535, 0.002); end
  def test_lever_graphs_q3535; assert_in_epsilon(4347260188533.1104, worksheet.lever_graphs_q3535, 0.002); end
  def test_lever_graphs_r3535; assert_in_epsilon(5157820250714.642, worksheet.lever_graphs_r3535, 0.002); end
  def test_lever_graphs_s3535; assert_in_epsilon(6096869154453.556, worksheet.lever_graphs_s3535, 0.002); end
  def test_lever_graphs_f3536; assert_equal("International", worksheet.lever_graphs_f3536); end
  def test_lever_graphs_g3536; assert_in_epsilon(4.0, worksheet.lever_graphs_g3536, 0.002); end
  def test_lever_graphs_j3536; assert_equal("International fast growth", worksheet.lever_graphs_j3536); end
  def test_lever_graphs_k3536; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_k3536, 0.002); end
  def test_lever_graphs_l3536; assert_in_epsilon(1735351689666.2114, worksheet.lever_graphs_l3536, 0.002); end
  def test_lever_graphs_m3536; assert_in_epsilon(1969503887599.12, worksheet.lever_graphs_m3536, 0.002); end
  def test_lever_graphs_n3536; assert_in_epsilon(2222483701169.1313, worksheet.lever_graphs_n3536, 0.002); end
  def test_lever_graphs_o3536; assert_in_epsilon(2495304662807.9087, worksheet.lever_graphs_o3536, 0.002); end
  def test_lever_graphs_p3536; assert_in_epsilon(2789616614868.6494, worksheet.lever_graphs_p3536, 0.002); end
  def test_lever_graphs_q3536; assert_in_epsilon(3106447393394.8965, worksheet.lever_graphs_q3536, 0.002); end
  def test_lever_graphs_r3536; assert_in_epsilon(3446071199855.789, worksheet.lever_graphs_r3536, 0.002); end
  def test_lever_graphs_s3536; assert_in_epsilon(3808680933596.9814, worksheet.lever_graphs_s3536, 0.002); end
  def test_lever_graphs_f3539; assert_equal("Type of travel", worksheet.lever_graphs_f3539); end
  def test_lever_graphs_g3539; assert_equal("Level", worksheet.lever_graphs_g3539); end
  def test_lever_graphs_h3539; assert_equal("Notes", worksheet.lever_graphs_h3539); end
  def test_lever_graphs_i3539; assert_equal("…", worksheet.lever_graphs_i3539); end
  def test_lever_graphs_j3539; assert_equal("…2", worksheet.lever_graphs_j3539); end
  def test_lever_graphs_k3539; assert_equal("2011", worksheet.lever_graphs_k3539); end
  def test_lever_graphs_l3539; assert_equal("2015", worksheet.lever_graphs_l3539); end
  def test_lever_graphs_m3539; assert_equal("2020", worksheet.lever_graphs_m3539); end
  def test_lever_graphs_n3539; assert_equal("2025", worksheet.lever_graphs_n3539); end
  def test_lever_graphs_o3539; assert_equal("2030", worksheet.lever_graphs_o3539); end
  def test_lever_graphs_p3539; assert_equal("2035", worksheet.lever_graphs_p3539); end
  def test_lever_graphs_q3539; assert_equal("2040", worksheet.lever_graphs_q3539); end
  def test_lever_graphs_r3539; assert_equal("2045", worksheet.lever_graphs_r3539); end
  def test_lever_graphs_s3539; assert_equal("2050", worksheet.lever_graphs_s3539); end
  def test_lever_graphs_f3540; assert_equal("Urban", worksheet.lever_graphs_f3540); end
  def test_lever_graphs_g3540; assert_in_delta(1.0, worksheet.lever_graphs_g3540, 0.002); end
  def test_lever_graphs_k3540; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3540, 0.002); end
  def test_lever_graphs_l3540; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_l3540, 0.002); end
  def test_lever_graphs_m3540; assert_in_epsilon(48892907731165.17, worksheet.lever_graphs_m3540, 0.002); end
  def test_lever_graphs_n3540; assert_in_epsilon(55808489113777.56, worksheet.lever_graphs_n3540, 0.002); end
  def test_lever_graphs_o3540; assert_in_epsilon(62185715036950.28, worksheet.lever_graphs_o3540, 0.002); end
  def test_lever_graphs_p3540; assert_in_epsilon(68183934884923.55, worksheet.lever_graphs_p3540, 0.002); end
  def test_lever_graphs_q3540; assert_in_epsilon(73443103329227.84, worksheet.lever_graphs_q3540, 0.002); end
  def test_lever_graphs_r3540; assert_in_epsilon(78767334311672.33, worksheet.lever_graphs_r3540, 0.002); end
  def test_lever_graphs_s3540; assert_in_epsilon(83803681363114.66, worksheet.lever_graphs_s3540, 0.002); end
  def test_lever_graphs_f3541; assert_equal("Urban", worksheet.lever_graphs_f3541); end
  def test_lever_graphs_g3541; assert_in_epsilon(2.0, worksheet.lever_graphs_g3541, 0.002); end
  def test_lever_graphs_k3541; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3541, 0.002); end
  def test_lever_graphs_l3541; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_l3541, 0.002); end
  def test_lever_graphs_m3541; assert_in_epsilon(47401406860197.45, worksheet.lever_graphs_m3541, 0.002); end
  def test_lever_graphs_n3541; assert_in_epsilon(53693590399564.72, worksheet.lever_graphs_n3541, 0.002); end
  def test_lever_graphs_o3541; assert_in_epsilon(59807089872771.09, worksheet.lever_graphs_o3541, 0.002); end
  def test_lever_graphs_p3541; assert_in_epsilon(65375164770543.3, worksheet.lever_graphs_p3541, 0.002); end
  def test_lever_graphs_q3541; assert_in_epsilon(70406524338781.75, worksheet.lever_graphs_q3541, 0.002); end
  def test_lever_graphs_r3541; assert_in_epsilon(74723417222207.83, worksheet.lever_graphs_r3541, 0.002); end
  def test_lever_graphs_s3541; assert_in_epsilon(78847073557050.0, worksheet.lever_graphs_s3541, 0.002); end
  def test_lever_graphs_f3542; assert_equal("Urban", worksheet.lever_graphs_f3542); end
  def test_lever_graphs_g3542; assert_in_epsilon(3.0, worksheet.lever_graphs_g3542, 0.002); end
  def test_lever_graphs_k3542; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3542, 0.002); end
  def test_lever_graphs_l3542; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_l3542, 0.002); end
  def test_lever_graphs_m3542; assert_in_epsilon(46502960452080.49, worksheet.lever_graphs_m3542, 0.002); end
  def test_lever_graphs_n3542; assert_in_epsilon(52192609881092.64, worksheet.lever_graphs_n3542, 0.002); end
  def test_lever_graphs_o3542; assert_in_epsilon(57537765515406.73, worksheet.lever_graphs_o3542, 0.002); end
  def test_lever_graphs_p3542; assert_in_epsilon(62262820720711.49, worksheet.lever_graphs_p3542, 0.002); end
  def test_lever_graphs_q3542; assert_in_epsilon(66535794114050.734, worksheet.lever_graphs_q3542, 0.002); end
  def test_lever_graphs_r3542; assert_in_epsilon(70538210368895.19, worksheet.lever_graphs_r3542, 0.002); end
  def test_lever_graphs_s3542; assert_in_epsilon(74184717265453.98, worksheet.lever_graphs_s3542, 0.002); end
  def test_lever_graphs_f3543; assert_equal("Urban", worksheet.lever_graphs_f3543); end
  def test_lever_graphs_g3543; assert_in_epsilon(4.0, worksheet.lever_graphs_g3543, 0.002); end
  def test_lever_graphs_k3543; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_k3543, 0.002); end
  def test_lever_graphs_l3543; assert_in_epsilon(40341650234126.97, worksheet.lever_graphs_l3543, 0.002); end
  def test_lever_graphs_m3543; assert_in_epsilon(46123530390202.59, worksheet.lever_graphs_m3543, 0.002); end
  def test_lever_graphs_n3543; assert_in_epsilon(51224658846782.09, worksheet.lever_graphs_n3543, 0.002); end
  def test_lever_graphs_o3543; assert_in_epsilon(55972566351414.59, worksheet.lever_graphs_o3543, 0.002); end
  def test_lever_graphs_p3543; assert_in_epsilon(60277809194940.22, worksheet.lever_graphs_p3543, 0.002); end
  def test_lever_graphs_q3543; assert_in_epsilon(64076256116158.13, worksheet.lever_graphs_q3543, 0.002); end
  def test_lever_graphs_r3543; assert_in_epsilon(67585340455738.836, worksheet.lever_graphs_r3543, 0.002); end
  def test_lever_graphs_s3543; assert_in_epsilon(70951135393209.64, worksheet.lever_graphs_s3543, 0.002); end
  def test_lever_graphs_f3544; assert_equal("Rural", worksheet.lever_graphs_f3544); end
  def test_lever_graphs_g3544; assert_in_delta(1.0, worksheet.lever_graphs_g3544, 0.002); end
  def test_lever_graphs_k3544; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3544, 0.002); end
  def test_lever_graphs_l3544; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_l3544, 0.002); end
  def test_lever_graphs_m3544; assert_in_epsilon(22743722631810.023, worksheet.lever_graphs_m3544, 0.002); end
  def test_lever_graphs_n3544; assert_in_epsilon(24719371432055.207, worksheet.lever_graphs_n3544, 0.002); end
  def test_lever_graphs_o3544; assert_in_epsilon(26839747674971.367, worksheet.lever_graphs_o3544, 0.002); end
  def test_lever_graphs_p3544; assert_in_epsilon(28866308839203.383, worksheet.lever_graphs_p3544, 0.002); end
  def test_lever_graphs_q3544; assert_in_epsilon(31008360825434.53, worksheet.lever_graphs_q3544, 0.002); end
  def test_lever_graphs_r3544; assert_in_epsilon(33007970038429.07, worksheet.lever_graphs_r3544, 0.002); end
  def test_lever_graphs_s3544; assert_in_epsilon(34989508310274.734, worksheet.lever_graphs_s3544, 0.002); end
  def test_lever_graphs_f3545; assert_equal("Rural", worksheet.lever_graphs_f3545); end
  def test_lever_graphs_g3545; assert_in_epsilon(2.0, worksheet.lever_graphs_g3545, 0.002); end
  def test_lever_graphs_k3545; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3545, 0.002); end
  def test_lever_graphs_l3545; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_l3545, 0.002); end
  def test_lever_graphs_m3545; assert_in_epsilon(22683185835426.32, worksheet.lever_graphs_m3545, 0.002); end
  def test_lever_graphs_n3545; assert_in_epsilon(24380739551626.383, worksheet.lever_graphs_n3545, 0.002); end
  def test_lever_graphs_o3545; assert_in_epsilon(26175306930377.797, worksheet.lever_graphs_o3545, 0.002); end
  def test_lever_graphs_p3545; assert_in_epsilon(27572467757650.05, worksheet.lever_graphs_p3545, 0.002); end
  def test_lever_graphs_q3545; assert_in_epsilon(28833719569705.477, worksheet.lever_graphs_q3545, 0.002); end
  def test_lever_graphs_r3545; assert_in_epsilon(30018773470332.34, worksheet.lever_graphs_r3545, 0.002); end
  def test_lever_graphs_s3545; assert_in_epsilon(31107901487062.098, worksheet.lever_graphs_s3545, 0.002); end
  def test_lever_graphs_f3546; assert_equal("Rural", worksheet.lever_graphs_f3546); end
  def test_lever_graphs_g3546; assert_in_epsilon(3.0, worksheet.lever_graphs_g3546, 0.002); end
  def test_lever_graphs_k3546; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3546, 0.002); end
  def test_lever_graphs_l3546; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_l3546, 0.002); end
  def test_lever_graphs_m3546; assert_in_epsilon(22215042687081.79, worksheet.lever_graphs_m3546, 0.002); end
  def test_lever_graphs_n3546; assert_in_epsilon(23371429990742.28, worksheet.lever_graphs_n3546, 0.002); end
  def test_lever_graphs_o3546; assert_in_epsilon(24468497571194.83, worksheet.lever_graphs_o3546, 0.002); end
  def test_lever_graphs_p3546; assert_in_epsilon(25610078011956.69, worksheet.lever_graphs_p3546, 0.002); end
  def test_lever_graphs_q3546; assert_in_epsilon(26752656788843.934, worksheet.lever_graphs_q3546, 0.002); end
  def test_lever_graphs_r3546; assert_in_epsilon(27243128629428.344, worksheet.lever_graphs_r3546, 0.002); end
  def test_lever_graphs_s3546; assert_in_epsilon(27564048911210.48, worksheet.lever_graphs_s3546, 0.002); end
  def test_lever_graphs_f3547; assert_equal("Rural", worksheet.lever_graphs_f3547); end
  def test_lever_graphs_g3547; assert_in_epsilon(4.0, worksheet.lever_graphs_g3547, 0.002); end
  def test_lever_graphs_k3547; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_k3547, 0.002); end
  def test_lever_graphs_l3547; assert_in_epsilon(20718216541893.625, worksheet.lever_graphs_l3547, 0.002); end
  def test_lever_graphs_m3547; assert_in_epsilon(22165017023224.723, worksheet.lever_graphs_m3547, 0.002); end
  def test_lever_graphs_n3547; assert_in_epsilon(23161431052152.246, worksheet.lever_graphs_n3547, 0.002); end
  def test_lever_graphs_o3547; assert_in_epsilon(24142927347481.258, worksheet.lever_graphs_o3547, 0.002); end
  def test_lever_graphs_p3547; assert_in_epsilon(25180223686031.605, worksheet.lever_graphs_p3547, 0.002); end
  def test_lever_graphs_q3547; assert_in_epsilon(25751059829452.42, worksheet.lever_graphs_q3547, 0.002); end
  def test_lever_graphs_r3547; assert_in_epsilon(25693045296858.703, worksheet.lever_graphs_r3547, 0.002); end
  def test_lever_graphs_s3547; assert_in_epsilon(25492448708726.77, worksheet.lever_graphs_s3547, 0.002); end
  def test_lever_graphs_f3548; assert_equal("International", worksheet.lever_graphs_f3548); end
  def test_lever_graphs_g3548; assert_in_delta(1.0, worksheet.lever_graphs_g3548, 0.002); end
  def test_lever_graphs_k3548; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3548, 0.002); end
  def test_lever_graphs_l3548; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3548, 0.002); end
  def test_lever_graphs_m3548; assert_in_epsilon(7500456847458.744, worksheet.lever_graphs_m3548, 0.002); end
  def test_lever_graphs_n3548; assert_in_epsilon(9055363476540.6, worksheet.lever_graphs_n3548, 0.002); end
  def test_lever_graphs_o3548; assert_in_epsilon(10962122833407.445, worksheet.lever_graphs_o3548, 0.002); end
  def test_lever_graphs_p3548; assert_in_epsilon(13321867178999.395, worksheet.lever_graphs_p3548, 0.002); end
  def test_lever_graphs_q3548; assert_in_epsilon(16263151011301.176, worksheet.lever_graphs_q3548, 0.002); end
  def test_lever_graphs_r3548; assert_in_epsilon(19948904729803.855, worksheet.lever_graphs_r3548, 0.002); end
  def test_lever_graphs_s3548; assert_in_epsilon(24589810989393.555, worksheet.lever_graphs_s3548, 0.002); end
  def test_lever_graphs_f3549; assert_equal("International", worksheet.lever_graphs_f3549); end
  def test_lever_graphs_g3549; assert_in_epsilon(2.0, worksheet.lever_graphs_g3549, 0.002); end
  def test_lever_graphs_k3549; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3549, 0.002); end
  def test_lever_graphs_l3549; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3549, 0.002); end
  def test_lever_graphs_m3549; assert_in_epsilon(7219959773089.232, worksheet.lever_graphs_m3549, 0.002); end
  def test_lever_graphs_n3549; assert_in_epsilon(8374804755984.01, worksheet.lever_graphs_n3549, 0.002); end
  def test_lever_graphs_o3549; assert_in_epsilon(9720575785129.662, worksheet.lever_graphs_o3549, 0.002); end
  def test_lever_graphs_p3549; assert_in_epsilon(11301879291282.648, worksheet.lever_graphs_p3549, 0.002); end
  def test_lever_graphs_q3549; assert_in_epsilon(13170947008609.145, worksheet.lever_graphs_q3549, 0.002); end
  def test_lever_graphs_r3549; assert_in_epsilon(15388786924655.334, worksheet.lever_graphs_r3549, 0.002); end
  def test_lever_graphs_s3549; assert_in_epsilon(18030063064144.63, worksheet.lever_graphs_s3549, 0.002); end
  def test_lever_graphs_f3550; assert_equal("International", worksheet.lever_graphs_f3550); end
  def test_lever_graphs_g3550; assert_in_epsilon(3.0, worksheet.lever_graphs_g3550, 0.002); end
  def test_lever_graphs_k3550; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3550, 0.002); end
  def test_lever_graphs_l3550; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3550, 0.002); end
  def test_lever_graphs_m3550; assert_in_epsilon(6863671548880.609, worksheet.lever_graphs_m3550, 0.002); end
  def test_lever_graphs_n3550; assert_in_epsilon(7555499665590.644, worksheet.lever_graphs_n3550, 0.002); end
  def test_lever_graphs_o3550; assert_in_epsilon(8306812315095.51, worksheet.lever_graphs_o3550, 0.002); end
  def test_lever_graphs_p3550; assert_in_epsilon(9130382258512.2, worksheet.lever_graphs_p3550, 0.002); end
  def test_lever_graphs_q3550; assert_in_epsilon(10038391544090.27, worksheet.lever_graphs_q3550, 0.002); end
  def test_lever_graphs_r3550; assert_in_epsilon(11042386046980.402, worksheet.lever_graphs_r3550, 0.002); end
  def test_lever_graphs_s3550; assert_in_epsilon(12155688652622.717, worksheet.lever_graphs_s3550, 0.002); end
  def test_lever_graphs_f3551; assert_equal("International", worksheet.lever_graphs_f3551); end
  def test_lever_graphs_g3551; assert_in_epsilon(4.0, worksheet.lever_graphs_g3551, 0.002); end
  def test_lever_graphs_k3551; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_k3551, 0.002); end
  def test_lever_graphs_l3551; assert_in_epsilon(6221976954954.346, worksheet.lever_graphs_l3551, 0.002); end
  def test_lever_graphs_m3551; assert_in_epsilon(6406723604726.341, worksheet.lever_graphs_m3551, 0.002); end
  def test_lever_graphs_n3551; assert_in_epsilon(6583928892453.129, worksheet.lever_graphs_n3551, 0.002); end
  def test_lever_graphs_o3551; assert_in_epsilon(6758749685038.742, worksheet.lever_graphs_o3551, 0.002); end
  def test_lever_graphs_p3551; assert_in_epsilon(6937488993626.326, worksheet.lever_graphs_p3551, 0.002); end
  def test_lever_graphs_q3551; assert_in_epsilon(7124147970756.542, worksheet.lever_graphs_q3551, 0.002); end
  def test_lever_graphs_r3551; assert_in_epsilon(7320870142749.894, worksheet.lever_graphs_r3551, 0.002); end
  def test_lever_graphs_s3551; assert_in_epsilon(7529842745500.682, worksheet.lever_graphs_s3551, 0.002); end
  def test_lever_graphs_f3554; assert_equal("Type of travel", worksheet.lever_graphs_f3554); end
  def test_lever_graphs_g3554; assert_equal("Level", worksheet.lever_graphs_g3554); end
  def test_lever_graphs_h3554; assert_equal("Notes", worksheet.lever_graphs_h3554); end
  def test_lever_graphs_i3554; assert_equal("…", worksheet.lever_graphs_i3554); end
  def test_lever_graphs_j3554; assert_equal("…2", worksheet.lever_graphs_j3554); end
  def test_lever_graphs_k3554; assert_equal("2011", worksheet.lever_graphs_k3554); end
  def test_lever_graphs_l3554; assert_equal("2015", worksheet.lever_graphs_l3554); end
  def test_lever_graphs_m3554; assert_equal("2020", worksheet.lever_graphs_m3554); end
  def test_lever_graphs_n3554; assert_equal("2025", worksheet.lever_graphs_n3554); end
  def test_lever_graphs_o3554; assert_equal("2030", worksheet.lever_graphs_o3554); end
  def test_lever_graphs_p3554; assert_equal("2035", worksheet.lever_graphs_p3554); end
  def test_lever_graphs_q3554; assert_equal("2040", worksheet.lever_graphs_q3554); end
  def test_lever_graphs_r3554; assert_equal("2045", worksheet.lever_graphs_r3554); end
  def test_lever_graphs_s3554; assert_equal("2050", worksheet.lever_graphs_s3554); end
  def test_lever_graphs_f3555; assert_equal("Urban", worksheet.lever_graphs_f3555); end
  def test_lever_graphs_g3555; assert_in_delta(1.0, worksheet.lever_graphs_g3555, 0.002); end
  def test_lever_graphs_k3555; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3555, 0.002); end
  def test_lever_graphs_l3555; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3555, 0.002); end
  def test_lever_graphs_m3555; assert_in_epsilon(11270.80216501231, worksheet.lever_graphs_m3555, 0.002); end
  def test_lever_graphs_n3555; assert_in_epsilon(11859.577718427718, worksheet.lever_graphs_n3555, 0.002); end
  def test_lever_graphs_o3555; assert_in_epsilon(12294.142033584072, worksheet.lever_graphs_o3555, 0.002); end
  def test_lever_graphs_p3555; assert_in_epsilon(12640.149743377651, worksheet.lever_graphs_p3555, 0.002); end
  def test_lever_graphs_q3555; assert_in_epsilon(12850.008246738349, worksheet.lever_graphs_q3555, 0.002); end
  def test_lever_graphs_r3555; assert_in_epsilon(13060.574958158688, worksheet.lever_graphs_r3555, 0.002); end
  def test_lever_graphs_s3555; assert_in_epsilon(13221.141651050195, worksheet.lever_graphs_s3555, 0.002); end
  def test_lever_graphs_f3556; assert_equal("Urban", worksheet.lever_graphs_f3556); end
  def test_lever_graphs_g3556; assert_in_epsilon(2.0, worksheet.lever_graphs_g3556, 0.002); end
  def test_lever_graphs_k3556; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3556, 0.002); end
  def test_lever_graphs_l3556; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3556, 0.002); end
  def test_lever_graphs_m3556; assert_in_epsilon(10926.981107405105, worksheet.lever_graphs_m3556, 0.002); end
  def test_lever_graphs_n3556; assert_in_epsilon(11410.151366521372, worksheet.lever_graphs_n3556, 0.002); end
  def test_lever_graphs_o3556; assert_in_epsilon(11823.886837584474, worksheet.lever_graphs_o3556, 0.002); end
  def test_lever_graphs_p3556; assert_in_epsilon(12119.451210792073, worksheet.lever_graphs_p3556, 0.002); end
  def test_lever_graphs_q3556; assert_in_epsilon(12318.711728749626, worksheet.lever_graphs_q3556, 0.002); end
  def test_lever_graphs_r3556; assert_in_epsilon(12390.044683990156, worksheet.lever_graphs_r3556, 0.002); end
  def test_lever_graphs_s3556; assert_in_epsilon(12439.171063997617, worksheet.lever_graphs_s3556, 0.002); end
  def test_lever_graphs_f3557; assert_equal("Urban", worksheet.lever_graphs_f3557); end
  def test_lever_graphs_g3557; assert_in_epsilon(3.0, worksheet.lever_graphs_g3557, 0.002); end
  def test_lever_graphs_k3557; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3557, 0.002); end
  def test_lever_graphs_l3557; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3557, 0.002); end
  def test_lever_graphs_m3557; assert_in_epsilon(10719.871074648809, worksheet.lever_graphs_m3557, 0.002); end
  def test_lever_graphs_n3557; assert_in_epsilon(11091.185642930926, worksheet.lever_graphs_n3557, 0.002); end
  def test_lever_graphs_o3557; assert_in_epsilon(11375.240457091271, worksheet.lever_graphs_o3557, 0.002); end
  def test_lever_graphs_p3557; assert_in_epsilon(11542.475198639346, worksheet.lever_graphs_p3557, 0.002); end
  def test_lever_graphs_q3557; assert_in_epsilon(11641.467534890806, worksheet.lever_graphs_q3557, 0.002); end
  def test_lever_graphs_r3557; assert_in_epsilon(11696.086861235844, worksheet.lever_graphs_r3557, 0.002); end
  def test_lever_graphs_s3557; assert_in_epsilon(11703.622554001171, worksheet.lever_graphs_s3557, 0.002); end
  def test_lever_graphs_f3558; assert_equal("Urban", worksheet.lever_graphs_f3558); end
  def test_lever_graphs_g3558; assert_in_epsilon(4.0, worksheet.lever_graphs_g3558, 0.002); end
  def test_lever_graphs_k3558; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3558, 0.002); end
  def test_lever_graphs_l3558; assert_in_epsilon(10194.274948810013, worksheet.lever_graphs_l3558, 0.002); end
  def test_lever_graphs_m3558; assert_in_epsilon(10632.404786360165, worksheet.lever_graphs_m3558, 0.002); end
  def test_lever_graphs_n3558; assert_in_epsilon(10885.49129962708, worksheet.lever_graphs_n3558, 0.002); end
  def test_lever_graphs_o3558; assert_in_epsilon(11065.799923657953, worksheet.lever_graphs_o3558, 0.002); end
  def test_lever_graphs_p3558; assert_in_epsilon(11174.487593194952, worksheet.lever_graphs_p3558, 0.002); end
  def test_lever_graphs_q3558; assert_in_epsilon(11211.13327444421, worksheet.lever_graphs_q3558, 0.002); end
  def test_lever_graphs_r3558; assert_in_epsilon(11206.465380713618, worksheet.lever_graphs_r3558, 0.002); end
  def test_lever_graphs_s3558; assert_in_epsilon(11193.482148736977, worksheet.lever_graphs_s3558, 0.002); end
  def test_lever_graphs_f3559; assert_equal("Rural", worksheet.lever_graphs_f3559); end
  def test_lever_graphs_g3559; assert_in_delta(1.0, worksheet.lever_graphs_g3559, 0.002); end
  def test_lever_graphs_k3559; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3559, 0.002); end
  def test_lever_graphs_l3559; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3559, 0.002); end
  def test_lever_graphs_m3559; assert_in_epsilon(6731.433122965088, worksheet.lever_graphs_m3559, 0.002); end
  def test_lever_graphs_n3559; assert_in_epsilon(7318.53503461338, worksheet.lever_graphs_n3559, 0.002); end
  def test_lever_graphs_o3559; assert_in_epsilon(7971.936700748705, worksheet.lever_graphs_o3559, 0.002); end
  def test_lever_graphs_p3559; assert_in_epsilon(8618.835299829303, worksheet.lever_graphs_p3559, 0.002); end
  def test_lever_graphs_q3559; assert_in_epsilon(9330.666145830264, worksheet.lever_graphs_q3559, 0.002); end
  def test_lever_graphs_r3559; assert_in_epsilon(10071.038455242127, worksheet.lever_graphs_r3559, 0.002); end
  def test_lever_graphs_s3559; assert_in_epsilon(10892.240488440504, worksheet.lever_graphs_s3559, 0.002); end
  def test_lever_graphs_f3560; assert_equal("Rural", worksheet.lever_graphs_f3560); end
  def test_lever_graphs_g3560; assert_in_epsilon(2.0, worksheet.lever_graphs_g3560, 0.002); end
  def test_lever_graphs_k3560; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3560, 0.002); end
  def test_lever_graphs_l3560; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3560, 0.002); end
  def test_lever_graphs_m3560; assert_in_epsilon(6713.516117779423, worksheet.lever_graphs_m3560, 0.002); end
  def test_lever_graphs_n3560; assert_in_epsilon(7218.278064586157, worksheet.lever_graphs_n3560, 0.002); end
  def test_lever_graphs_o3560; assert_in_epsilon(7774.584638373032, worksheet.lever_graphs_o3560, 0.002); end
  def test_lever_graphs_p3560; assert_in_epsilon(8232.523241430052, worksheet.lever_graphs_p3560, 0.002); end
  def test_lever_graphs_q3560; assert_in_epsilon(8676.29903308971, worksheet.lever_graphs_q3560, 0.002); end
  def test_lever_graphs_r3560; assert_in_epsilon(9159.006798871516, worksheet.lever_graphs_r3560, 0.002); end
  def test_lever_graphs_s3560; assert_in_epsilon(9683.895557580525, worksheet.lever_graphs_s3560, 0.002); end
  def test_lever_graphs_f3561; assert_equal("Rural", worksheet.lever_graphs_f3561); end
  def test_lever_graphs_g3561; assert_in_epsilon(3.0, worksheet.lever_graphs_g3561, 0.002); end
  def test_lever_graphs_k3561; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3561, 0.002); end
  def test_lever_graphs_l3561; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3561, 0.002); end
  def test_lever_graphs_m3561; assert_in_epsilon(6574.96033489065, worksheet.lever_graphs_m3561, 0.002); end
  def test_lever_graphs_n3561; assert_in_epsilon(6919.457060888556, worksheet.lever_graphs_n3561, 0.002); end
  def test_lever_graphs_o3561; assert_in_epsilon(7267.6284502438675, worksheet.lever_graphs_o3561, 0.002); end
  def test_lever_graphs_p3561; assert_in_epsilon(7646.597479102077, worksheet.lever_graphs_p3561, 0.002); end
  def test_lever_graphs_q3561; assert_in_epsilon(8050.090439025464, worksheet.lever_graphs_q3561, 0.002); end
  def test_lever_graphs_r3561; assert_in_epsilon(8312.131759349428, worksheet.lever_graphs_r3561, 0.002); end
  def test_lever_graphs_s3561; assert_in_epsilon(8580.693587165293, worksheet.lever_graphs_s3561, 0.002); end
  def test_lever_graphs_f3562; assert_equal("Rural", worksheet.lever_graphs_f3562); end
  def test_lever_graphs_g3562; assert_in_epsilon(4.0, worksheet.lever_graphs_g3562, 0.002); end
  def test_lever_graphs_k3562; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3562, 0.002); end
  def test_lever_graphs_l3562; assert_in_epsilon(6152.408116175827, worksheet.lever_graphs_l3562, 0.002); end
  def test_lever_graphs_m3562; assert_in_epsilon(6560.154297368244, worksheet.lever_graphs_m3562, 0.002); end
  def test_lever_graphs_n3562; assert_in_epsilon(6857.283773289915, worksheet.lever_graphs_n3562, 0.002); end
  def test_lever_graphs_o3562; assert_in_epsilon(7170.9276449112795, worksheet.lever_graphs_o3562, 0.002); end
  def test_lever_graphs_p3562; assert_in_epsilon(7518.252575058235, worksheet.lever_graphs_p3562, 0.002); end
  def test_lever_graphs_q3562; assert_in_epsilon(7748.701826664657, worksheet.lever_graphs_q3562, 0.002); end
  def test_lever_graphs_r3562; assert_in_epsilon(7839.1869271478745, worksheet.lever_graphs_r3562, 0.002); end
  def test_lever_graphs_s3562; assert_in_epsilon(7935.8040562447195, worksheet.lever_graphs_s3562, 0.002); end
  def test_lever_graphs_f3563; assert_equal("International", worksheet.lever_graphs_f3563); end
  def test_lever_graphs_g3563; assert_in_delta(1.0, worksheet.lever_graphs_g3563, 0.002); end
  def test_lever_graphs_k3563; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3563, 0.002); end
  def test_lever_graphs_l3563; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3563, 0.002); end
  def test_lever_graphs_m3563; assert_in_epsilon(971.971078424184, worksheet.lever_graphs_m3563, 0.002); end
  def test_lever_graphs_n3563; assert_in_epsilon(1120.240111020011, worksheet.lever_graphs_n3563, 0.002); end
  def test_lever_graphs_o3563; assert_in_epsilon(1301.151905754007, worksheet.lever_graphs_o3563, 0.002); end
  def test_lever_graphs_p3563; assert_in_epsilon(1523.6401820699998, worksheet.lever_graphs_p3563, 0.002); end
  def test_lever_graphs_q3563; assert_in_epsilon(1799.2824634043834, worksheet.lever_graphs_q3563, 0.002); end
  def test_lever_graphs_r3563; assert_in_epsilon(2143.099060207938, worksheet.lever_graphs_r3563, 0.002); end
  def test_lever_graphs_s3563; assert_in_epsilon(2574.5945547161623, worksheet.lever_graphs_s3563, 0.002); end
  def test_lever_graphs_f3564; assert_equal("International", worksheet.lever_graphs_f3564); end
  def test_lever_graphs_g3564; assert_in_epsilon(2.0, worksheet.lever_graphs_g3564, 0.002); end
  def test_lever_graphs_k3564; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3564, 0.002); end
  def test_lever_graphs_l3564; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3564, 0.002); end
  def test_lever_graphs_m3564; assert_in_epsilon(935.6219533756032, worksheet.lever_graphs_m3564, 0.002); end
  def test_lever_graphs_n3564; assert_in_epsilon(1036.0481093795418, worksheet.lever_graphs_n3564, 0.002); end
  def test_lever_graphs_o3564; assert_in_epsilon(1153.7861689802146, worksheet.lever_graphs_o3564, 0.002); end
  def test_lever_graphs_p3564; assert_in_epsilon(1292.6114027205344, worksheet.lever_graphs_p3564, 0.002); end
  def test_lever_graphs_q3564; assert_in_epsilon(1457.174809638739, worksheet.lever_graphs_q3564, 0.002); end
  def test_lever_graphs_r3564; assert_in_epsilon(1653.2082960272533, worksheet.lever_graphs_r3564, 0.002); end
  def test_lever_graphs_s3564; assert_in_epsilon(1887.777917697634, worksheet.lever_graphs_s3564, 0.002); end
  def test_lever_graphs_f3565; assert_equal("International", worksheet.lever_graphs_f3565); end
  def test_lever_graphs_g3565; assert_in_epsilon(3.0, worksheet.lever_graphs_g3565, 0.002); end
  def test_lever_graphs_k3565; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3565, 0.002); end
  def test_lever_graphs_l3565; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3565, 0.002); end
  def test_lever_graphs_m3565; assert_in_epsilon(889.4511858401264, worksheet.lever_graphs_m3565, 0.002); end
  def test_lever_graphs_n3565; assert_in_epsilon(934.6917775437978, worksheet.lever_graphs_n3565, 0.002); end
  def test_lever_graphs_o3565; assert_in_epsilon(985.9791610424517, worksheet.lever_graphs_o3565, 0.002); end
  def test_lever_graphs_p3565; assert_in_epsilon(1044.2543150901697, worksheet.lever_graphs_p3565, 0.002); end
  def test_lever_graphs_q3565; assert_in_epsilon(1110.6028501805924, worksheet.lever_graphs_q3565, 0.002); end
  def test_lever_graphs_r3565; assert_in_epsilon(1186.2770152178489, worksheet.lever_graphs_r3565, 0.002); end
  def test_lever_graphs_s3565; assert_in_epsilon(1272.721039920418, worksheet.lever_graphs_s3565, 0.002); end
  def test_lever_graphs_f3566; assert_equal("International", worksheet.lever_graphs_f3566); end
  def test_lever_graphs_g3566; assert_in_epsilon(4.0, worksheet.lever_graphs_g3566, 0.002); end
  def test_lever_graphs_k3566; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3566, 0.002); end
  def test_lever_graphs_l3566; assert_in_epsilon(849.4419294600638, worksheet.lever_graphs_l3566, 0.002); end
  def test_lever_graphs_m3566; assert_in_epsilon(830.2361013331315, worksheet.lever_graphs_m3566, 0.002); end
  def test_lever_graphs_n3566; assert_in_epsilon(814.4986396777115, worksheet.lever_graphs_n3566, 0.002); end
  def test_lever_graphs_o3566; assert_in_epsilon(802.2314807859979, worksheet.lever_graphs_o3566, 0.002); end
  def test_lever_graphs_p3566; assert_in_epsilon(793.450111109077, worksheet.lever_graphs_p3566, 0.002); end
  def test_lever_graphs_q3566; assert_in_epsilon(788.1839442782499, worksheet.lever_graphs_q3566, 0.002); end
  def test_lever_graphs_r3566; assert_in_epsilon(786.4767582649091, worksheet.lever_graphs_r3566, 0.002); end
  def test_lever_graphs_s3566; assert_in_epsilon(788.3871957697046, worksheet.lever_graphs_s3566, 0.002); end
  def test_lever_graphs_b1245; assert_equal("Level", worksheet.lever_graphs_b1245); end
  def test_lever_graphs_c1245; assert_equal("1975", worksheet.lever_graphs_c1245); end
  def test_lever_graphs_d1245; assert_equal("1980", worksheet.lever_graphs_d1245); end
  def test_lever_graphs_e1245; assert_equal("1985", worksheet.lever_graphs_e1245); end
  def test_lever_graphs_f1245; assert_equal("1990", worksheet.lever_graphs_f1245); end
  def test_lever_graphs_g1245; assert_equal("1995", worksheet.lever_graphs_g1245); end
  def test_lever_graphs_h1245; assert_equal("2000", worksheet.lever_graphs_h1245); end
  def test_lever_graphs_i1245; assert_equal("2005", worksheet.lever_graphs_i1245); end
  def test_lever_graphs_j1245; assert_equal("2010", worksheet.lever_graphs_j1245); end
  def test_lever_graphs_k1245; assert_equal("2011", worksheet.lever_graphs_k1245); end
  def test_lever_graphs_l1245; assert_equal("2015", worksheet.lever_graphs_l1245); end
  def test_lever_graphs_m1245; assert_equal("2020", worksheet.lever_graphs_m1245); end
  def test_lever_graphs_n1245; assert_equal("2025", worksheet.lever_graphs_n1245); end
  def test_lever_graphs_o1245; assert_equal("2030", worksheet.lever_graphs_o1245); end
  def test_lever_graphs_p1245; assert_equal("2035", worksheet.lever_graphs_p1245); end
  def test_lever_graphs_q1245; assert_equal("2040", worksheet.lever_graphs_q1245); end
  def test_lever_graphs_r1245; assert_equal("2045", worksheet.lever_graphs_r1245); end
  def test_lever_graphs_s1245; assert_equal("2050", worksheet.lever_graphs_s1245); end
  def test_lever_graphs_b1246; assert_equal("Historic data", worksheet.lever_graphs_b1246); end
  def test_lever_graphs_b1247; assert_in_delta(1.0, worksheet.lever_graphs_b1247, 0.002); end
  def test_lever_graphs_k1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1247, 0.002); end
  def test_lever_graphs_l1247; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1247, 0.002); end
  def test_lever_graphs_m1247; assert_in_epsilon(25126.063462143684, worksheet.lever_graphs_m1247, 0.002); end
  def test_lever_graphs_n1247; assert_in_epsilon(26316.35999020017, worksheet.lever_graphs_n1247, 0.002); end
  def test_lever_graphs_o1247; assert_in_epsilon(27563.044413114836, worksheet.lever_graphs_o1247, 0.002); end
  def test_lever_graphs_p1247; assert_in_epsilon(28868.787993561808, worksheet.lever_graphs_p1247, 0.002); end
  def test_lever_graphs_q1247; assert_in_epsilon(30236.388539891228, worksheet.lever_graphs_q1247, 0.002); end
  def test_lever_graphs_r1247; assert_in_epsilon(30999.895240592334, worksheet.lever_graphs_r1247, 0.002); end
  def test_lever_graphs_s1247; assert_in_epsilon(31782.68144225786, worksheet.lever_graphs_s1247, 0.002); end
  def test_lever_graphs_b1248; assert_in_epsilon(2.0, worksheet.lever_graphs_b1248, 0.002); end
  def test_lever_graphs_k1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1248, 0.002); end
  def test_lever_graphs_l1248; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1248, 0.002); end
  def test_lever_graphs_m1248; assert_in_epsilon(24902.81029151358, worksheet.lever_graphs_m1248, 0.002); end
  def test_lever_graphs_n1248; assert_in_epsilon(25850.778961526437, worksheet.lever_graphs_n1248, 0.002); end
  def test_lever_graphs_o1248; assert_in_epsilon(26834.833703304143, worksheet.lever_graphs_o1248, 0.002); end
  def test_lever_graphs_p1248; assert_in_epsilon(27856.34819576311, worksheet.lever_graphs_p1248, 0.002); end
  def test_lever_graphs_q1248; assert_in_epsilon(28206.297927970198, worksheet.lever_graphs_q1248, 0.002); end
  def test_lever_graphs_r1248; assert_in_epsilon(28560.64395843617, worksheet.lever_graphs_r1248, 0.002); end
  def test_lever_graphs_s1248; assert_in_epsilon(28919.441516345676, worksheet.lever_graphs_s1248, 0.002); end
  def test_lever_graphs_b1249; assert_in_epsilon(3.0, worksheet.lever_graphs_b1249, 0.002); end
  def test_lever_graphs_k1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1249, 0.002); end
  def test_lever_graphs_l1249; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1249, 0.002); end
  def test_lever_graphs_m1249; assert_in_epsilon(24595.371961101227, worksheet.lever_graphs_m1249, 0.002); end
  def test_lever_graphs_n1249; assert_in_epsilon(25216.43592427136, worksheet.lever_graphs_n1249, 0.002); end
  def test_lever_graphs_o1249; assert_in_epsilon(25533.22134556568, worksheet.lever_graphs_o1249, 0.002); end
  def test_lever_graphs_p1249; assert_in_epsilon(25853.98643327463, worksheet.lever_graphs_p1249, 0.002); end
  def test_lever_graphs_q1249; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_q1249, 0.002); end
  def test_lever_graphs_r1249; assert_in_epsilon(26048.47391944562, worksheet.lever_graphs_r1249, 0.002); end
  def test_lever_graphs_s1249; assert_in_epsilon(25853.695577236133, worksheet.lever_graphs_s1249, 0.002); end
  def test_lever_graphs_b1250; assert_in_epsilon(4.0, worksheet.lever_graphs_b1250, 0.002); end
  def test_lever_graphs_k1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1250, 0.002); end
  def test_lever_graphs_l1250; assert_in_epsilon(23989.60438824997, worksheet.lever_graphs_l1250, 0.002); end
  def test_lever_graphs_m1250; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_m1250, 0.002); end
  def test_lever_graphs_n1250; assert_in_epsilon(24410.882712641902, worksheet.lever_graphs_n1250, 0.002); end
  def test_lever_graphs_o1250; assert_in_epsilon(24228.349513908553, worksheet.lever_graphs_o1250, 0.002); end
  def test_lever_graphs_p1250; assert_in_epsilon(24047.18121332461, worksheet.lever_graphs_p1250, 0.002); end
  def test_lever_graphs_q1250; assert_in_epsilon(23867.367604818126, worksheet.lever_graphs_q1250, 0.002); end
  def test_lever_graphs_r1250; assert_in_epsilon(23688.89855863341, worksheet.lever_graphs_r1250, 0.002); end
  def test_lever_graphs_s1250; assert_in_epsilon(23511.764020760354, worksheet.lever_graphs_s1250, 0.002); end
  def test_lever_graphs_b1255; assert_equal("Level", worksheet.lever_graphs_b1255); end
  def test_lever_graphs_c1255; assert_equal("1975", worksheet.lever_graphs_c1255); end
  def test_lever_graphs_d1255; assert_equal("1980", worksheet.lever_graphs_d1255); end
  def test_lever_graphs_e1255; assert_equal("1985", worksheet.lever_graphs_e1255); end
  def test_lever_graphs_f1255; assert_equal("1990", worksheet.lever_graphs_f1255); end
  def test_lever_graphs_g1255; assert_equal("1995", worksheet.lever_graphs_g1255); end
  def test_lever_graphs_h1255; assert_equal("2000", worksheet.lever_graphs_h1255); end
  def test_lever_graphs_i1255; assert_equal("2005", worksheet.lever_graphs_i1255); end
  def test_lever_graphs_j1255; assert_equal("2010", worksheet.lever_graphs_j1255); end
  def test_lever_graphs_k1255; assert_equal("2011", worksheet.lever_graphs_k1255); end
  def test_lever_graphs_l1255; assert_equal("2015", worksheet.lever_graphs_l1255); end
  def test_lever_graphs_m1255; assert_equal("2020", worksheet.lever_graphs_m1255); end
  def test_lever_graphs_n1255; assert_equal("2025", worksheet.lever_graphs_n1255); end
  def test_lever_graphs_o1255; assert_equal("2030", worksheet.lever_graphs_o1255); end
  def test_lever_graphs_p1255; assert_equal("2035", worksheet.lever_graphs_p1255); end
  def test_lever_graphs_q1255; assert_equal("2040", worksheet.lever_graphs_q1255); end
  def test_lever_graphs_r1255; assert_equal("2045", worksheet.lever_graphs_r1255); end
  def test_lever_graphs_s1255; assert_equal("2050", worksheet.lever_graphs_s1255); end
  def test_lever_graphs_b1256; assert_equal("Historic data", worksheet.lever_graphs_b1256); end
  def test_lever_graphs_b1257; assert_in_delta(1.0, worksheet.lever_graphs_b1257, 0.002); end
  def test_lever_graphs_k1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1257, 0.002); end
  def test_lever_graphs_l1257; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l1257, 0.002); end
  def test_lever_graphs_m1257; assert_in_epsilon(5126.373992430952, worksheet.lever_graphs_m1257, 0.002); end
  def test_lever_graphs_n1257; assert_in_epsilon(5729.633859682868, worksheet.lever_graphs_n1257, 0.002); end
  def test_lever_graphs_o1257; assert_in_epsilon(6403.883956671072, worksheet.lever_graphs_o1257, 0.002); end
  def test_lever_graphs_p1257; assert_in_epsilon(7070.405342480992, worksheet.lever_graphs_p1257, 0.002); end
  def test_lever_graphs_q1257; assert_in_epsilon(7806.298809475985, worksheet.lever_graphs_q1257, 0.002); end
  def test_lever_graphs_r1257; assert_in_epsilon(8618.78465958545, worksheet.lever_graphs_r1257, 0.002); end
  def test_lever_graphs_s1257; assert_in_epsilon(9515.834689562942, worksheet.lever_graphs_s1257, 0.002); end
  def test_lever_graphs_b1258; assert_in_epsilon(2.0, worksheet.lever_graphs_b1258, 0.002); end
  def test_lever_graphs_k1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1258, 0.002); end
  def test_lever_graphs_l1258; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l1258, 0.002); end
  def test_lever_graphs_m1258; assert_in_epsilon(5126.373992430952, worksheet.lever_graphs_m1258, 0.002); end
  def test_lever_graphs_n1258; assert_in_epsilon(5659.931115066756, worksheet.lever_graphs_n1258, 0.002); end
  def test_lever_graphs_o1258; assert_in_epsilon(6249.021291579576, worksheet.lever_graphs_o1258, 0.002); end
  def test_lever_graphs_p1258; assert_in_epsilon(6731.97067735155, worksheet.lever_graphs_p1258, 0.002); end
  def test_lever_graphs_q1258; assert_in_epsilon(7252.244325329481, worksheet.lever_graphs_q1258, 0.002); end
  def test_lever_graphs_r1258; assert_in_epsilon(7812.726803938676, worksheet.lever_graphs_r1258, 0.002); end
  def test_lever_graphs_s1258; assert_in_epsilon(8416.525612601828, worksheet.lever_graphs_s1258, 0.002); end
  def test_lever_graphs_b1259; assert_in_epsilon(3.0, worksheet.lever_graphs_b1259, 0.002); end
  def test_lever_graphs_k1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1259, 0.002); end
  def test_lever_graphs_l1259; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l1259, 0.002); end
  def test_lever_graphs_m1259; assert_in_epsilon(5002.554383626268, worksheet.lever_graphs_m1259, 0.002); end
  def test_lever_graphs_n1259; assert_in_epsilon(5389.171816042234, worksheet.lever_graphs_n1259, 0.002); end
  def test_lever_graphs_o1259; assert_in_epsilon(5805.668591606803, worksheet.lever_graphs_o1259, 0.002); end
  def test_lever_graphs_p1259; assert_in_epsilon(6254.353905591933, worksheet.lever_graphs_p1259, 0.002); end
  def test_lever_graphs_q1259; assert_in_epsilon(6737.715417125951, worksheet.lever_graphs_q1259, 0.002); end
  def test_lever_graphs_r1259; assert_in_epsilon(7081.4066181130875, worksheet.lever_graphs_r1259, 0.002); end
  def test_lever_graphs_s1259; assert_in_epsilon(7442.629524481507, worksheet.lever_graphs_s1259, 0.002); end
  def test_lever_graphs_b1260; assert_in_epsilon(4.0, worksheet.lever_graphs_b1260, 0.002); end
  def test_lever_graphs_k1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1260, 0.002); end
  def test_lever_graphs_l1260; assert_in_epsilon(4530.9676331000155, worksheet.lever_graphs_l1260, 0.002); end
  def test_lever_graphs_m1260; assert_in_epsilon(5002.554383626268, worksheet.lever_graphs_m1260, 0.002); end
  def test_lever_graphs_n1260; assert_in_epsilon(5389.171816042234, worksheet.lever_graphs_n1260, 0.002); end
  def test_lever_graphs_o1260; assert_in_epsilon(5805.668591606803, worksheet.lever_graphs_o1260, 0.002); end
  def test_lever_graphs_p1260; assert_in_epsilon(6254.353905591933, worksheet.lever_graphs_p1260, 0.002); end
  def test_lever_graphs_q1260; assert_in_epsilon(6573.388811659307, worksheet.lever_graphs_q1260, 0.002); end
  def test_lever_graphs_r1260; assert_in_epsilon(6739.375116452095, worksheet.lever_graphs_r1260, 0.002); end
  def test_lever_graphs_s1260; assert_in_epsilon(6909.552783443009, worksheet.lever_graphs_s1260, 0.002); end
  def test_lever_graphs_b1275; assert_equal("Level", worksheet.lever_graphs_b1275); end
  def test_lever_graphs_c1275; assert_equal("1975", worksheet.lever_graphs_c1275); end
  def test_lever_graphs_d1275; assert_equal("1980", worksheet.lever_graphs_d1275); end
  def test_lever_graphs_e1275; assert_equal("1985", worksheet.lever_graphs_e1275); end
  def test_lever_graphs_f1275; assert_equal("1990", worksheet.lever_graphs_f1275); end
  def test_lever_graphs_g1275; assert_equal("1995", worksheet.lever_graphs_g1275); end
  def test_lever_graphs_h1275; assert_equal("2000", worksheet.lever_graphs_h1275); end
  def test_lever_graphs_i1275; assert_equal("2005", worksheet.lever_graphs_i1275); end
  def test_lever_graphs_j1275; assert_equal("2010", worksheet.lever_graphs_j1275); end
  def test_lever_graphs_k1275; assert_equal("2011", worksheet.lever_graphs_k1275); end
  def test_lever_graphs_l1275; assert_equal("2015", worksheet.lever_graphs_l1275); end
  def test_lever_graphs_m1275; assert_equal("2020", worksheet.lever_graphs_m1275); end
  def test_lever_graphs_n1275; assert_equal("2025", worksheet.lever_graphs_n1275); end
  def test_lever_graphs_o1275; assert_equal("2030", worksheet.lever_graphs_o1275); end
  def test_lever_graphs_p1275; assert_equal("2035", worksheet.lever_graphs_p1275); end
  def test_lever_graphs_q1275; assert_equal("2040", worksheet.lever_graphs_q1275); end
  def test_lever_graphs_r1275; assert_equal("2045", worksheet.lever_graphs_r1275); end
  def test_lever_graphs_s1275; assert_equal("2050", worksheet.lever_graphs_s1275); end
  def test_lever_graphs_b1276; assert_equal("Historic data", worksheet.lever_graphs_b1276); end
  def test_lever_graphs_b1277; assert_in_delta(1.0, worksheet.lever_graphs_b1277, 0.002); end
  def test_lever_graphs_k1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1277, 0.002); end
  def test_lever_graphs_l1277; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1277, 0.002); end
  def test_lever_graphs_m1277; assert_in_epsilon(373.2108483170911, worksheet.lever_graphs_m1277, 0.002); end
  def test_lever_graphs_n1277; assert_in_epsilon(484.5581698391798, worksheet.lever_graphs_n1277, 0.002); end
  def test_lever_graphs_o1277; assert_in_epsilon(629.1259244383089, worksheet.lever_graphs_o1277, 0.002); end
  def test_lever_graphs_p1277; assert_in_epsilon(816.8254162997989, worksheet.lever_graphs_p1277, 0.002); end
  def test_lever_graphs_q1277; assert_in_epsilon(1060.5249836255393, worksheet.lever_graphs_q1277, 0.002); end
  def test_lever_graphs_r1277; assert_in_epsilon(1376.9322286626152, worksheet.lever_graphs_r1277, 0.002); end
  def test_lever_graphs_s1277; assert_in_epsilon(1787.7394607416759, worksheet.lever_graphs_s1277, 0.002); end
  def test_lever_graphs_b1278; assert_in_epsilon(2.0, worksheet.lever_graphs_b1278, 0.002); end
  def test_lever_graphs_k1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1278, 0.002); end
  def test_lever_graphs_l1278; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1278, 0.002); end
  def test_lever_graphs_m1278; assert_in_epsilon(353.28137511784706, worksheet.lever_graphs_m1278, 0.002); end
  def test_lever_graphs_n1278; assert_in_epsilon(434.189069830633, worksheet.lever_graphs_n1278, 0.002); end
  def test_lever_graphs_o1278; assert_in_epsilon(533.6260602402377, worksheet.lever_graphs_o1278, 0.002); end
  def test_lever_graphs_p1278; assert_in_epsilon(655.8358833827733, worksheet.lever_graphs_p1278, 0.002); end
  def test_lever_graphs_q1278; assert_in_epsilon(806.0339214670718, worksheet.lever_graphs_q1278, 0.002); end
  def test_lever_graphs_r1278; assert_in_epsilon(990.6299716394122, worksheet.lever_graphs_r1278, 0.002); end
  def test_lever_graphs_s1278; assert_in_epsilon(1217.5017881680963, worksheet.lever_graphs_s1278, 0.002); end
  def test_lever_graphs_b1279; assert_in_epsilon(3.0, worksheet.lever_graphs_b1279, 0.002); end
  def test_lever_graphs_k1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1279, 0.002); end
  def test_lever_graphs_l1279; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1279, 0.002); end
  def test_lever_graphs_m1279; assert_in_epsilon(329.7444385185951, worksheet.lever_graphs_m1279, 0.002); end
  def test_lever_graphs_n1279; assert_in_epsilon(378.26169211608646, worksheet.lever_graphs_n1279, 0.002); end
  def test_lever_graphs_o1279; assert_in_epsilon(433.9175767916894, worksheet.lever_graphs_o1279, 0.002); end
  def test_lever_graphs_p1279; assert_in_epsilon(497.76244164579106, worksheet.lever_graphs_p1279, 0.002); end
  def test_lever_graphs_q1279; assert_in_epsilon(571.0011798672197, worksheet.lever_graphs_q1279, 0.002); end
  def test_lever_graphs_r1279; assert_in_epsilon(655.0159677209424, worksheet.lever_graphs_r1279, 0.002); end
  def test_lever_graphs_s1279; assert_in_epsilon(751.3923492577945, worksheet.lever_graphs_s1279, 0.002); end
  def test_lever_graphs_b1280; assert_in_epsilon(4.0, worksheet.lever_graphs_b1280, 0.002); end
  def test_lever_graphs_k1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1280, 0.002); end
  def test_lever_graphs_l1280; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_l1280, 0.002); end
  def test_lever_graphs_m1280; assert_in_epsilon(308.3096749216857, worksheet.lever_graphs_m1280, 0.002); end
  def test_lever_graphs_n1280; assert_in_epsilon(330.6828780235829, worksheet.lever_graphs_n1280, 0.002); end
  def test_lever_graphs_o1280; assert_in_epsilon(354.6796442431989, worksheet.lever_graphs_o1280, 0.002); end
  def test_lever_graphs_p1280; assert_in_epsilon(380.41779118515706, worksheet.lever_graphs_p1280, 0.002); end
  def test_lever_graphs_q1280; assert_in_epsilon(408.02368616046897, worksheet.lever_graphs_q1280, 0.002); end
  def test_lever_graphs_r1280; assert_in_epsilon(437.63286661571004, worksheet.lever_graphs_r1280, 0.002); end
  def test_lever_graphs_s1280; assert_in_epsilon(469.3907055850704, worksheet.lever_graphs_s1280, 0.002); end
  def test_lever_graphs_b3605; assert_equal("Type of travel", worksheet.lever_graphs_b3605); end
  def test_lever_graphs_c3605; assert_equal("Level", worksheet.lever_graphs_c3605); end
  def test_lever_graphs_d3605; assert_equal("Type of city", worksheet.lever_graphs_d3605); end
  def test_lever_graphs_e3605; assert_equal("1985", worksheet.lever_graphs_e3605); end
  def test_lever_graphs_f3605; assert_equal("1990", worksheet.lever_graphs_f3605); end
  def test_lever_graphs_g3605; assert_equal("1995", worksheet.lever_graphs_g3605); end
  def test_lever_graphs_h3605; assert_equal("2000", worksheet.lever_graphs_h3605); end
  def test_lever_graphs_i3605; assert_equal("2005", worksheet.lever_graphs_i3605); end
  def test_lever_graphs_j3605; assert_equal("2010", worksheet.lever_graphs_j3605); end
  def test_lever_graphs_k3605; assert_equal("2011", worksheet.lever_graphs_k3605); end
  def test_lever_graphs_l3605; assert_equal("2015", worksheet.lever_graphs_l3605); end
  def test_lever_graphs_m3605; assert_equal("2020", worksheet.lever_graphs_m3605); end
  def test_lever_graphs_n3605; assert_equal("2025", worksheet.lever_graphs_n3605); end
  def test_lever_graphs_o3605; assert_equal("2030", worksheet.lever_graphs_o3605); end
  def test_lever_graphs_p3605; assert_equal("2035", worksheet.lever_graphs_p3605); end
  def test_lever_graphs_q3605; assert_equal("2040", worksheet.lever_graphs_q3605); end
  def test_lever_graphs_r3605; assert_equal("2045", worksheet.lever_graphs_r3605); end
  def test_lever_graphs_s3605; assert_equal("2050", worksheet.lever_graphs_s3605); end
  def test_lever_graphs_b3606; assert_equal("Urban", worksheet.lever_graphs_b3606); end
  def test_lever_graphs_c3606; assert_in_delta(1.0, worksheet.lever_graphs_c3606, 0.002); end
  def test_lever_graphs_d3606; assert_equal("Automobile city", worksheet.lever_graphs_d3606); end
  def test_lever_graphs_k3606; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3606, 0.002); end
  def test_lever_graphs_l3606; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3606, 0.002); end
  def test_lever_graphs_m3606; assert_in_delta(0.7564256843752442, worksheet.lever_graphs_m3606, 0.002); end
  def test_lever_graphs_n3606; assert_in_delta(0.7601021662557219, worksheet.lever_graphs_n3606, 0.002); end
  def test_lever_graphs_o3606; assert_in_delta(0.7637786481361997, worksheet.lever_graphs_o3606, 0.002); end
  def test_lever_graphs_p3606; assert_in_delta(0.7674551300166776, worksheet.lever_graphs_p3606, 0.002); end
  def test_lever_graphs_q3606; assert_in_delta(0.7711316118971554, worksheet.lever_graphs_q3606, 0.002); end
  def test_lever_graphs_r3606; assert_in_delta(0.7748080937776333, worksheet.lever_graphs_r3606, 0.002); end
  def test_lever_graphs_s3606; assert_in_delta(0.7784845756581111, worksheet.lever_graphs_s3606, 0.002); end
  def test_lever_graphs_b3607; assert_equal("Urban", worksheet.lever_graphs_b3607); end
  def test_lever_graphs_c3607; assert_in_epsilon(2.0, worksheet.lever_graphs_c3607, 0.002); end
  def test_lever_graphs_d3607; assert_equal("Automobile city", worksheet.lever_graphs_d3607); end
  def test_lever_graphs_k3607; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3607, 0.002); end
  def test_lever_graphs_l3607; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3607, 0.002); end
  def test_lever_graphs_m3607; assert_in_delta(0.7438123937568311, worksheet.lever_graphs_m3607, 0.002); end
  def test_lever_graphs_n3607; assert_in_delta(0.7348755850188957, worksheet.lever_graphs_n3607, 0.002); end
  def test_lever_graphs_o3607; assert_in_delta(0.7259387762809606, worksheet.lever_graphs_o3607, 0.002); end
  def test_lever_graphs_p3607; assert_in_delta(0.7170019675430253, worksheet.lever_graphs_p3607, 0.002); end
  def test_lever_graphs_q3607; assert_in_delta(0.7080651588050901, worksheet.lever_graphs_q3607, 0.002); end
  def test_lever_graphs_r3607; assert_in_delta(0.6991283500671549, worksheet.lever_graphs_r3607, 0.002); end
  def test_lever_graphs_s3607; assert_in_delta(0.6901915413292197, worksheet.lever_graphs_s3607, 0.002); end
  def test_lever_graphs_b3608; assert_equal("Urban", worksheet.lever_graphs_b3608); end
  def test_lever_graphs_c3608; assert_in_epsilon(3.0, worksheet.lever_graphs_c3608, 0.002); end
  def test_lever_graphs_d3608; assert_equal("Automobile city", worksheet.lever_graphs_d3608); end
  def test_lever_graphs_k3608; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3608, 0.002); end
  def test_lever_graphs_l3608; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3608, 0.002); end
  def test_lever_graphs_m3608; assert_in_delta(0.7308811167931706, worksheet.lever_graphs_m3608, 0.002); end
  def test_lever_graphs_n3608; assert_in_delta(0.709013031091575, worksheet.lever_graphs_n3608, 0.002); end
  def test_lever_graphs_o3608; assert_in_delta(0.6871449453899793, worksheet.lever_graphs_o3608, 0.002); end
  def test_lever_graphs_p3608; assert_in_delta(0.6652768596883837, worksheet.lever_graphs_p3608, 0.002); end
  def test_lever_graphs_q3608; assert_in_delta(0.643408773986788, worksheet.lever_graphs_q3608, 0.002); end
  def test_lever_graphs_r3608; assert_in_delta(0.6215406882851924, worksheet.lever_graphs_r3608, 0.002); end
  def test_lever_graphs_s3608; assert_in_delta(0.5996726025835968, worksheet.lever_graphs_s3608, 0.002); end
  def test_lever_graphs_b3609; assert_equal("Urban", worksheet.lever_graphs_b3609); end
  def test_lever_graphs_c3609; assert_in_epsilon(4.0, worksheet.lever_graphs_c3609, 0.002); end
  def test_lever_graphs_d3609; assert_equal("Automobile city", worksheet.lever_graphs_d3609); end
  def test_lever_graphs_k3609; assert_in_delta(0.7598986494851144, worksheet.lever_graphs_k3609, 0.002); end
  def test_lever_graphs_l3609; assert_in_delta(0.7527492024947663, worksheet.lever_graphs_l3609, 0.002); end
  def test_lever_graphs_m3609; assert_in_delta(0.7094742748670191, worksheet.lever_graphs_m3609, 0.002); end
  def test_lever_graphs_n3609; assert_in_delta(0.666199347239272, worksheet.lever_graphs_n3609, 0.002); end
  def test_lever_graphs_o3609; assert_in_delta(0.6229244196115248, worksheet.lever_graphs_o3609, 0.002); end
  def test_lever_graphs_p3609; assert_in_delta(0.5796494919837776, worksheet.lever_graphs_p3609, 0.002); end
  def test_lever_graphs_q3609; assert_in_delta(0.5363745643560305, worksheet.lever_graphs_q3609, 0.002); end
  def test_lever_graphs_r3609; assert_in_delta(0.4930996367282833, worksheet.lever_graphs_r3609, 0.002); end
  def test_lever_graphs_s3609; assert_in_delta(0.4498247091005362, worksheet.lever_graphs_s3609, 0.002); end
  def test_lever_graphs_b3610; assert_equal("Urban", worksheet.lever_graphs_b3610); end
  def test_lever_graphs_c3610; assert_in_delta(1.0, worksheet.lever_graphs_c3610, 0.002); end
  def test_lever_graphs_d3610; assert_equal("Transit city", worksheet.lever_graphs_d3610); end
  def test_lever_graphs_k3610; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3610, 0.002); end
  def test_lever_graphs_l3610; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3610, 0.002); end
  def test_lever_graphs_m3610; assert_in_delta(0.5548206986906596, worksheet.lever_graphs_m3610, 0.002); end
  def test_lever_graphs_n3610; assert_in_delta(0.5810079924034668, worksheet.lever_graphs_n3610, 0.002); end
  def test_lever_graphs_o3610; assert_in_delta(0.6071952861162738, worksheet.lever_graphs_o3610, 0.002); end
  def test_lever_graphs_p3610; assert_in_delta(0.6333825798290809, worksheet.lever_graphs_p3610, 0.002); end
  def test_lever_graphs_q3610; assert_in_delta(0.659569873541888, worksheet.lever_graphs_q3610, 0.002); end
  def test_lever_graphs_r3610; assert_in_delta(0.685757167254695, worksheet.lever_graphs_r3610, 0.002); end
  def test_lever_graphs_s3610; assert_in_delta(0.7119444609675022, worksheet.lever_graphs_s3610, 0.002); end
  def test_lever_graphs_b3611; assert_equal("Urban", worksheet.lever_graphs_b3611); end
  def test_lever_graphs_c3611; assert_in_epsilon(2.0, worksheet.lever_graphs_c3611, 0.002); end
  def test_lever_graphs_d3611; assert_equal("Transit city", worksheet.lever_graphs_d3611); end
  def test_lever_graphs_k3611; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3611, 0.002); end
  def test_lever_graphs_l3611; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3611, 0.002); end
  def test_lever_graphs_m3611; assert_in_delta(0.537213984240831, worksheet.lever_graphs_m3611, 0.002); end
  def test_lever_graphs_n3611; assert_in_delta(0.5457945635038093, worksheet.lever_graphs_n3611, 0.002); end
  def test_lever_graphs_o3611; assert_in_delta(0.5543751427667877, worksheet.lever_graphs_o3611, 0.002); end
  def test_lever_graphs_p3611; assert_in_delta(0.5629557220297661, worksheet.lever_graphs_p3611, 0.002); end
  def test_lever_graphs_q3611; assert_in_delta(0.5715363012927444, worksheet.lever_graphs_q3611, 0.002); end
  def test_lever_graphs_r3611; assert_in_delta(0.5801168805557227, worksheet.lever_graphs_r3611, 0.002); end
  def test_lever_graphs_s3611; assert_in_delta(0.5886974598187011, worksheet.lever_graphs_s3611, 0.002); end
  def test_lever_graphs_b3612; assert_equal("Urban", worksheet.lever_graphs_b3612); end
  def test_lever_graphs_c3612; assert_in_epsilon(3.0, worksheet.lever_graphs_c3612, 0.002); end
  def test_lever_graphs_d3612; assert_equal("Transit city", worksheet.lever_graphs_d3612); end
  def test_lever_graphs_k3612; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3612, 0.002); end
  def test_lever_graphs_l3612; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3612, 0.002); end
  def test_lever_graphs_m3612; assert_in_delta(0.5130081744099613, worksheet.lever_graphs_m3612, 0.002); end
  def test_lever_graphs_n3612; assert_in_delta(0.49738294384207, worksheet.lever_graphs_n3612, 0.002); end
  def test_lever_graphs_o3612; assert_in_delta(0.4817577132741787, worksheet.lever_graphs_o3612, 0.002); end
  def test_lever_graphs_p3612; assert_in_delta(0.4661324827062874, worksheet.lever_graphs_p3612, 0.002); end
  def test_lever_graphs_q3612; assert_in_delta(0.45050725213839615, worksheet.lever_graphs_q3612, 0.002); end
  def test_lever_graphs_r3612; assert_in_delta(0.4348820215705048, worksheet.lever_graphs_r3612, 0.002); end
  def test_lever_graphs_s3612; assert_in_delta(0.41925679100261354, worksheet.lever_graphs_s3612, 0.002); end
  def test_lever_graphs_b3613; assert_equal("Urban", worksheet.lever_graphs_b3613); end
  def test_lever_graphs_c3613; assert_in_epsilon(4.0, worksheet.lever_graphs_c3613, 0.002); end
  def test_lever_graphs_d3613; assert_equal("Transit city", worksheet.lever_graphs_d3613); end
  def test_lever_graphs_k3613; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_k3613, 0.002); end
  def test_lever_graphs_l3613; assert_in_delta(0.5286334049778526, worksheet.lever_graphs_l3613, 0.002); end
  def test_lever_graphs_m3613; assert_in_delta(0.5032816995125248, worksheet.lever_graphs_m3613, 0.002); end
  def test_lever_graphs_n3613; assert_in_delta(0.47792999404719694, worksheet.lever_graphs_n3613, 0.002); end
  def test_lever_graphs_o3613; assert_in_delta(0.4525782885818691, worksheet.lever_graphs_o3613, 0.002); end
  def test_lever_graphs_p3613; assert_in_delta(0.42722658311654127, worksheet.lever_graphs_p3613, 0.002); end
  def test_lever_graphs_q3613; assert_in_delta(0.4018748776512135, worksheet.lever_graphs_q3613, 0.002); end
  def test_lever_graphs_r3613; assert_in_delta(0.37652317218588566, worksheet.lever_graphs_r3613, 0.002); end
  def test_lever_graphs_s3613; assert_in_delta(0.3511714667205578, worksheet.lever_graphs_s3613, 0.002); end
  def test_lever_graphs_b3614; assert_equal("Urban", worksheet.lever_graphs_b3614); end
  def test_lever_graphs_c3614; assert_in_delta(1.0, worksheet.lever_graphs_c3614, 0.002); end
  def test_lever_graphs_d3614; assert_equal("Booming city", worksheet.lever_graphs_d3614); end
  def test_lever_graphs_k3614; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3614, 0.002); end
  def test_lever_graphs_l3614; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3614, 0.002); end
  def test_lever_graphs_m3614; assert_in_delta(0.31050995715561247, worksheet.lever_graphs_m3614, 0.002); end
  def test_lever_graphs_n3614; assert_in_delta(0.36198433254592766, worksheet.lever_graphs_n3614, 0.002); end
  def test_lever_graphs_o3614; assert_in_delta(0.41345870793624273, worksheet.lever_graphs_o3614, 0.002); end
  def test_lever_graphs_p3614; assert_in_delta(0.4649330833265579, worksheet.lever_graphs_p3614, 0.002); end
  def test_lever_graphs_q3614; assert_in_delta(0.5164074587168731, worksheet.lever_graphs_q3614, 0.002); end
  def test_lever_graphs_r3614; assert_in_delta(0.5678818341071882, worksheet.lever_graphs_r3614, 0.002); end
  def test_lever_graphs_s3614; assert_in_delta(0.6193562094975034, worksheet.lever_graphs_s3614, 0.002); end
  def test_lever_graphs_b3615; assert_equal("Urban", worksheet.lever_graphs_b3615); end
  def test_lever_graphs_c3615; assert_in_epsilon(2.0, worksheet.lever_graphs_c3615, 0.002); end
  def test_lever_graphs_d3615; assert_equal("Booming city", worksheet.lever_graphs_d3615); end
  def test_lever_graphs_k3615; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3615, 0.002); end
  def test_lever_graphs_l3615; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3615, 0.002); end
  def test_lever_graphs_m3615; assert_in_delta(0.2925744303520426, worksheet.lever_graphs_m3615, 0.002); end
  def test_lever_graphs_n3615; assert_in_delta(0.32611327893878794, worksheet.lever_graphs_n3615, 0.002); end
  def test_lever_graphs_o3615; assert_in_delta(0.3596521275255332, worksheet.lever_graphs_o3615, 0.002); end
  def test_lever_graphs_p3615; assert_in_delta(0.39319097611227855, worksheet.lever_graphs_p3615, 0.002); end
  def test_lever_graphs_q3615; assert_in_delta(0.4267298246990239, worksheet.lever_graphs_q3615, 0.002); end
  def test_lever_graphs_r3615; assert_in_delta(0.46026867328576915, worksheet.lever_graphs_r3615, 0.002); end
  def test_lever_graphs_s3615; assert_in_delta(0.4938075218725145, worksheet.lever_graphs_s3615, 0.002); end
  def test_lever_graphs_b3616; assert_equal("Urban", worksheet.lever_graphs_b3616); end
  def test_lever_graphs_c3616; assert_in_epsilon(3.0, worksheet.lever_graphs_c3616, 0.002); end
  def test_lever_graphs_d3616; assert_equal("Booming city", worksheet.lever_graphs_d3616); end
  def test_lever_graphs_k3616; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3616, 0.002); end
  def test_lever_graphs_l3616; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3616, 0.002); end
  def test_lever_graphs_m3616; assert_in_delta(0.2803334158042677, worksheet.lever_graphs_m3616, 0.002); end
  def test_lever_graphs_n3616; assert_in_delta(0.3016312498432381, worksheet.lever_graphs_n3616, 0.002); end
  def test_lever_graphs_o3616; assert_in_delta(0.3229290838822084, worksheet.lever_graphs_o3616, 0.002); end
  def test_lever_graphs_p3616; assert_in_delta(0.34422691792117877, worksheet.lever_graphs_p3616, 0.002); end
  def test_lever_graphs_q3616; assert_in_delta(0.36552475196014916, worksheet.lever_graphs_q3616, 0.002); end
  def test_lever_graphs_r3616; assert_in_delta(0.38682258599911956, worksheet.lever_graphs_r3616, 0.002); end
  def test_lever_graphs_s3616; assert_in_delta(0.4081204200380899, worksheet.lever_graphs_s3616, 0.002); end
  def test_lever_graphs_b3617; assert_equal("Urban", worksheet.lever_graphs_b3617); end
  def test_lever_graphs_c3617; assert_in_epsilon(4.0, worksheet.lever_graphs_c3617, 0.002); end
  def test_lever_graphs_d3617; assert_equal("Booming city", worksheet.lever_graphs_d3617); end
  def test_lever_graphs_k3617; assert_in_delta(0.2322045028959011, worksheet.lever_graphs_k3617, 0.002); end
  def test_lever_graphs_l3617; assert_in_delta(0.25903558176529734, worksheet.lever_graphs_l3617, 0.002); end
  def test_lever_graphs_m3617; assert_in_delta(0.2582657164254323, worksheet.lever_graphs_m3617, 0.002); end
  def test_lever_graphs_n3617; assert_in_delta(0.25749585108556716, worksheet.lever_graphs_n3617, 0.002); end
  def test_lever_graphs_o3617; assert_in_delta(0.2567259857457021, worksheet.lever_graphs_o3617, 0.002); end
  def test_lever_graphs_p3617; assert_in_delta(0.25595612040583704, worksheet.lever_graphs_p3617, 0.002); end
  def test_lever_graphs_q3617; assert_in_delta(0.255186255065972, worksheet.lever_graphs_q3617, 0.002); end
  def test_lever_graphs_r3617; assert_in_delta(0.2544163897261069, worksheet.lever_graphs_r3617, 0.002); end
  def test_lever_graphs_s3617; assert_in_delta(0.25364652438624186, worksheet.lever_graphs_s3617, 0.002); end
  def test_lever_graphs_b3618; assert_equal("Rural", worksheet.lever_graphs_b3618); end
  def test_lever_graphs_c3618; assert_in_delta(1.0, worksheet.lever_graphs_c3618, 0.002); end
  def test_lever_graphs_d3618; assert_equal("Developed", worksheet.lever_graphs_d3618); end
  def test_lever_graphs_k3618; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3618, 0.002); end
  def test_lever_graphs_l3618; assert_in_delta(0.837, worksheet.lever_graphs_l3618, 0.002); end
  def test_lever_graphs_m3618; assert_in_delta(0.8440924080869752, worksheet.lever_graphs_m3618, 0.002); end
  def test_lever_graphs_n3618; assert_in_delta(0.8511848161739506, worksheet.lever_graphs_n3618, 0.002); end
  def test_lever_graphs_o3618; assert_in_delta(0.8582772242609258, worksheet.lever_graphs_o3618, 0.002); end
  def test_lever_graphs_p3618; assert_in_delta(0.865369632347901, worksheet.lever_graphs_p3618, 0.002); end
  def test_lever_graphs_q3618; assert_in_delta(0.8724620404348763, worksheet.lever_graphs_q3618, 0.002); end
  def test_lever_graphs_r3618; assert_in_delta(0.8795544485218515, worksheet.lever_graphs_r3618, 0.002); end
  def test_lever_graphs_s3618; assert_in_delta(0.8866468566088268, worksheet.lever_graphs_s3618, 0.002); end
  def test_lever_graphs_b3619; assert_equal("Rural", worksheet.lever_graphs_b3619); end
  def test_lever_graphs_c3619; assert_in_epsilon(2.0, worksheet.lever_graphs_c3619, 0.002); end
  def test_lever_graphs_d3619; assert_equal("Developed", worksheet.lever_graphs_d3619); end
  def test_lever_graphs_k3619; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3619, 0.002); end
  def test_lever_graphs_l3619; assert_in_delta(0.837, worksheet.lever_graphs_l3619, 0.002); end
  def test_lever_graphs_m3619; assert_in_delta(0.8221028569712652, worksheet.lever_graphs_m3619, 0.002); end
  def test_lever_graphs_n3619; assert_in_delta(0.8072057139425305, worksheet.lever_graphs_n3619, 0.002); end
  def test_lever_graphs_o3619; assert_in_delta(0.7923085709137957, worksheet.lever_graphs_o3619, 0.002); end
  def test_lever_graphs_p3619; assert_in_delta(0.7774114278850609, worksheet.lever_graphs_p3619, 0.002); end
  def test_lever_graphs_q3619; assert_in_delta(0.7625142848563262, worksheet.lever_graphs_q3619, 0.002); end
  def test_lever_graphs_r3619; assert_in_delta(0.7476171418275914, worksheet.lever_graphs_r3619, 0.002); end
  def test_lever_graphs_s3619; assert_in_delta(0.7327199987988567, worksheet.lever_graphs_s3619, 0.002); end
  def test_lever_graphs_b3620; assert_equal("Rural", worksheet.lever_graphs_b3620); end
  def test_lever_graphs_c3620; assert_in_epsilon(3.0, worksheet.lever_graphs_c3620, 0.002); end
  def test_lever_graphs_d3620; assert_equal("Developed", worksheet.lever_graphs_d3620); end
  def test_lever_graphs_k3620; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3620, 0.002); end
  def test_lever_graphs_l3620; assert_in_delta(0.837, worksheet.lever_graphs_l3620, 0.002); end
  def test_lever_graphs_m3620; assert_in_delta(0.8148409079778636, worksheet.lever_graphs_m3620, 0.002); end
  def test_lever_graphs_n3620; assert_in_delta(0.7926818159557275, worksheet.lever_graphs_n3620, 0.002); end
  def test_lever_graphs_o3620; assert_in_delta(0.7705227239335912, worksheet.lever_graphs_o3620, 0.002); end
  def test_lever_graphs_p3620; assert_in_delta(0.7483636319114549, worksheet.lever_graphs_p3620, 0.002); end
  def test_lever_graphs_q3620; assert_in_delta(0.7262045398893188, worksheet.lever_graphs_q3620, 0.002); end
  def test_lever_graphs_r3620; assert_in_delta(0.7040454478671825, worksheet.lever_graphs_r3620, 0.002); end
  def test_lever_graphs_s3620; assert_in_delta(0.6818863558450463, worksheet.lever_graphs_s3620, 0.002); end
  def test_lever_graphs_b3621; assert_equal("Rural", worksheet.lever_graphs_b3621); end
  def test_lever_graphs_c3621; assert_in_epsilon(4.0, worksheet.lever_graphs_c3621, 0.002); end
  def test_lever_graphs_d3621; assert_equal("Developed", worksheet.lever_graphs_d3621); end
  def test_lever_graphs_k3621; assert_in_delta(0.8491000766064025, worksheet.lever_graphs_k3621, 0.002); end
  def test_lever_graphs_l3621; assert_in_delta(0.837, worksheet.lever_graphs_l3621, 0.002); end
  def test_lever_graphs_m3621; assert_in_delta(0.8051188937340755, worksheet.lever_graphs_m3621, 0.002); end
  def test_lever_graphs_n3621; assert_in_delta(0.7732377874681513, worksheet.lever_graphs_n3621, 0.002); end
  def test_lever_graphs_o3621; assert_in_delta(0.741356681202227, worksheet.lever_graphs_o3621, 0.002); end
  def test_lever_graphs_p3621; assert_in_delta(0.7094755749363026, worksheet.lever_graphs_p3621, 0.002); end
  def test_lever_graphs_q3621; assert_in_delta(0.6775944686703783, worksheet.lever_graphs_q3621, 0.002); end
  def test_lever_graphs_r3621; assert_in_delta(0.645713362404454, worksheet.lever_graphs_r3621, 0.002); end
  def test_lever_graphs_s3621; assert_in_delta(0.6138322561385297, worksheet.lever_graphs_s3621, 0.002); end
  def test_lever_graphs_b3622; assert_equal("Rural", worksheet.lever_graphs_b3622); end
  def test_lever_graphs_c3622; assert_in_delta(1.0, worksheet.lever_graphs_c3622, 0.002); end
  def test_lever_graphs_d3622; assert_equal("Developing", worksheet.lever_graphs_d3622); end
  def test_lever_graphs_k3622; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3622, 0.002); end
  def test_lever_graphs_l3622; assert_in_delta(0.268, worksheet.lever_graphs_l3622, 0.002); end
  def test_lever_graphs_m3622; assert_in_delta(0.31055301575875255, worksheet.lever_graphs_m3622, 0.002); end
  def test_lever_graphs_n3622; assert_in_delta(0.3531060315175051, worksheet.lever_graphs_n3622, 0.002); end
  def test_lever_graphs_o3622; assert_in_delta(0.3956590472762576, worksheet.lever_graphs_o3622, 0.002); end
  def test_lever_graphs_p3622; assert_in_delta(0.43821206303501015, worksheet.lever_graphs_p3622, 0.002); end
  def test_lever_graphs_q3622; assert_in_delta(0.48076507879376273, worksheet.lever_graphs_q3622, 0.002); end
  def test_lever_graphs_r3622; assert_in_delta(0.5233180945525152, worksheet.lever_graphs_r3622, 0.002); end
  def test_lever_graphs_s3622; assert_in_delta(0.5658711103112678, worksheet.lever_graphs_s3622, 0.002); end
  def test_lever_graphs_b3623; assert_equal("Rural", worksheet.lever_graphs_b3623); end
  def test_lever_graphs_c3623; assert_in_epsilon(2.0, worksheet.lever_graphs_c3623, 0.002); end
  def test_lever_graphs_d3623; assert_equal("Developing", worksheet.lever_graphs_d3623); end
  def test_lever_graphs_k3623; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3623, 0.002); end
  def test_lever_graphs_l3623; assert_in_delta(0.268, worksheet.lever_graphs_l3623, 0.002); end
  def test_lever_graphs_m3623; assert_in_delta(0.30890561410088335, worksheet.lever_graphs_m3623, 0.002); end
  def test_lever_graphs_n3623; assert_in_delta(0.3498112282017667, worksheet.lever_graphs_n3623, 0.002); end
  def test_lever_graphs_o3623; assert_in_delta(0.39071684230265, worksheet.lever_graphs_o3623, 0.002); end
  def test_lever_graphs_p3623; assert_in_delta(0.43162245640353336, worksheet.lever_graphs_p3623, 0.002); end
  def test_lever_graphs_q3623; assert_in_delta(0.47252807050441675, worksheet.lever_graphs_q3623, 0.002); end
  def test_lever_graphs_r3623; assert_in_delta(0.5134336846053001, worksheet.lever_graphs_r3623, 0.002); end
  def test_lever_graphs_s3623; assert_in_delta(0.5543392987061835, worksheet.lever_graphs_s3623, 0.002); end
  def test_lever_graphs_b3624; assert_equal("Rural", worksheet.lever_graphs_b3624); end
  def test_lever_graphs_c3624; assert_in_epsilon(3.0, worksheet.lever_graphs_c3624, 0.002); end
  def test_lever_graphs_d3624; assert_equal("Developing", worksheet.lever_graphs_d3624); end
  def test_lever_graphs_k3624; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3624, 0.002); end
  def test_lever_graphs_l3624; assert_in_delta(0.268, worksheet.lever_graphs_l3624, 0.002); end
  def test_lever_graphs_m3624; assert_in_delta(0.29418878869440607, worksheet.lever_graphs_m3624, 0.002); end
  def test_lever_graphs_n3624; assert_in_delta(0.3203775773888122, worksheet.lever_graphs_n3624, 0.002); end
  def test_lever_graphs_o3624; assert_in_delta(0.3465663660832182, worksheet.lever_graphs_o3624, 0.002); end
  def test_lever_graphs_p3624; assert_in_delta(0.37275515477762433, worksheet.lever_graphs_p3624, 0.002); end
  def test_lever_graphs_q3624; assert_in_delta(0.3989439434720304, worksheet.lever_graphs_q3624, 0.002); end
  def test_lever_graphs_r3624; assert_in_delta(0.42513273216643643, worksheet.lever_graphs_r3624, 0.002); end
  def test_lever_graphs_s3624; assert_in_delta(0.45132152086084254, worksheet.lever_graphs_s3624, 0.002); end
  def test_lever_graphs_b3625; assert_equal("Rural", worksheet.lever_graphs_b3625); end
  def test_lever_graphs_c3625; assert_in_epsilon(4.0, worksheet.lever_graphs_c3625, 0.002); end
  def test_lever_graphs_d3625; assert_equal("Developing", worksheet.lever_graphs_d3625); end
  def test_lever_graphs_k3625; assert_in_delta(0.2354651116534186, worksheet.lever_graphs_k3625, 0.002); end
  def test_lever_graphs_l3625; assert_in_delta(0.268, worksheet.lever_graphs_l3625, 0.002); end
  def test_lever_graphs_m3625; assert_in_delta(0.28422560441717665, worksheet.lever_graphs_m3625, 0.002); end
  def test_lever_graphs_n3625; assert_in_delta(0.30045120883435333, worksheet.lever_graphs_n3625, 0.002); end
  def test_lever_graphs_o3625; assert_in_delta(0.31667681325152996, worksheet.lever_graphs_o3625, 0.002); end
  def test_lever_graphs_p3625; assert_in_delta(0.33290241766870665, worksheet.lever_graphs_p3625, 0.002); end
  def test_lever_graphs_q3625; assert_in_delta(0.34912802208588334, worksheet.lever_graphs_q3625, 0.002); end
  def test_lever_graphs_r3625; assert_in_delta(0.36535362650306, worksheet.lever_graphs_r3625, 0.002); end
  def test_lever_graphs_s3625; assert_in_delta(0.38157923092023666, worksheet.lever_graphs_s3625, 0.002); end
  def test_lever_graphs_b3626; assert_equal("International", worksheet.lever_graphs_b3626); end
  def test_lever_graphs_c3626; assert_in_delta(1.0, worksheet.lever_graphs_c3626, 0.002); end
  def test_lever_graphs_d3626; assert_equal("International slow growth", worksheet.lever_graphs_d3626); end
  def test_lever_graphs_k3626; assert_in_delta(0.0, (worksheet.lever_graphs_k3626||0), 0.002); end
  def test_lever_graphs_l3626; assert_in_delta(0.0, (worksheet.lever_graphs_l3626||0), 0.002); end
  def test_lever_graphs_m3626; assert_in_delta(0.0, (worksheet.lever_graphs_m3626||0), 0.002); end
  def test_lever_graphs_n3626; assert_in_delta(0.0, (worksheet.lever_graphs_n3626||0), 0.002); end
  def test_lever_graphs_o3626; assert_in_delta(0.0, (worksheet.lever_graphs_o3626||0), 0.002); end
  def test_lever_graphs_p3626; assert_in_delta(0.0, (worksheet.lever_graphs_p3626||0), 0.002); end
  def test_lever_graphs_q3626; assert_in_delta(0.0, (worksheet.lever_graphs_q3626||0), 0.002); end
  def test_lever_graphs_r3626; assert_in_delta(0.0, (worksheet.lever_graphs_r3626||0), 0.002); end
  def test_lever_graphs_s3626; assert_in_delta(0.0, (worksheet.lever_graphs_s3626||0), 0.002); end
  def test_lever_graphs_b3627; assert_equal("International", worksheet.lever_graphs_b3627); end
  def test_lever_graphs_c3627; assert_in_epsilon(2.0, worksheet.lever_graphs_c3627, 0.002); end
  def test_lever_graphs_d3627; assert_equal("International slow growth", worksheet.lever_graphs_d3627); end
  def test_lever_graphs_k3627; assert_in_delta(0.0, (worksheet.lever_graphs_k3627||0), 0.002); end
  def test_lever_graphs_l3627; assert_in_delta(0.0, (worksheet.lever_graphs_l3627||0), 0.002); end
  def test_lever_graphs_m3627; assert_in_delta(0.0, (worksheet.lever_graphs_m3627||0), 0.002); end
  def test_lever_graphs_n3627; assert_in_delta(0.0, (worksheet.lever_graphs_n3627||0), 0.002); end
  def test_lever_graphs_o3627; assert_in_delta(0.0, (worksheet.lever_graphs_o3627||0), 0.002); end
  def test_lever_graphs_p3627; assert_in_delta(0.0, (worksheet.lever_graphs_p3627||0), 0.002); end
  def test_lever_graphs_q3627; assert_in_delta(0.0, (worksheet.lever_graphs_q3627||0), 0.002); end
  def test_lever_graphs_r3627; assert_in_delta(0.0, (worksheet.lever_graphs_r3627||0), 0.002); end
  def test_lever_graphs_s3627; assert_in_delta(0.0, (worksheet.lever_graphs_s3627||0), 0.002); end
  def test_lever_graphs_b3628; assert_equal("International", worksheet.lever_graphs_b3628); end
  def test_lever_graphs_c3628; assert_in_epsilon(3.0, worksheet.lever_graphs_c3628, 0.002); end
  def test_lever_graphs_d3628; assert_equal("International slow growth", worksheet.lever_graphs_d3628); end
  def test_lever_graphs_k3628; assert_in_delta(0.0, (worksheet.lever_graphs_k3628||0), 0.002); end
  def test_lever_graphs_l3628; assert_in_delta(0.0, (worksheet.lever_graphs_l3628||0), 0.002); end
  def test_lever_graphs_m3628; assert_in_delta(0.0, (worksheet.lever_graphs_m3628||0), 0.002); end
  def test_lever_graphs_n3628; assert_in_delta(0.0, (worksheet.lever_graphs_n3628||0), 0.002); end
  def test_lever_graphs_o3628; assert_in_delta(0.0, (worksheet.lever_graphs_o3628||0), 0.002); end
  def test_lever_graphs_p3628; assert_in_delta(0.0, (worksheet.lever_graphs_p3628||0), 0.002); end
  def test_lever_graphs_q3628; assert_in_delta(0.0, (worksheet.lever_graphs_q3628||0), 0.002); end
  def test_lever_graphs_r3628; assert_in_delta(0.0, (worksheet.lever_graphs_r3628||0), 0.002); end
  def test_lever_graphs_s3628; assert_in_delta(0.0, (worksheet.lever_graphs_s3628||0), 0.002); end
  def test_lever_graphs_b3629; assert_equal("International", worksheet.lever_graphs_b3629); end
  def test_lever_graphs_c3629; assert_in_epsilon(4.0, worksheet.lever_graphs_c3629, 0.002); end
  def test_lever_graphs_d3629; assert_equal("International slow growth", worksheet.lever_graphs_d3629); end
  def test_lever_graphs_k3629; assert_in_delta(0.0, (worksheet.lever_graphs_k3629||0), 0.002); end
  def test_lever_graphs_l3629; assert_in_delta(0.0, (worksheet.lever_graphs_l3629||0), 0.002); end
  def test_lever_graphs_m3629; assert_in_delta(0.0, (worksheet.lever_graphs_m3629||0), 0.002); end
  def test_lever_graphs_n3629; assert_in_delta(0.0, (worksheet.lever_graphs_n3629||0), 0.002); end
  def test_lever_graphs_o3629; assert_in_delta(0.0, (worksheet.lever_graphs_o3629||0), 0.002); end
  def test_lever_graphs_p3629; assert_in_delta(0.0, (worksheet.lever_graphs_p3629||0), 0.002); end
  def test_lever_graphs_q3629; assert_in_delta(0.0, (worksheet.lever_graphs_q3629||0), 0.002); end
  def test_lever_graphs_r3629; assert_in_delta(0.0, (worksheet.lever_graphs_r3629||0), 0.002); end
  def test_lever_graphs_s3629; assert_in_delta(0.0, (worksheet.lever_graphs_s3629||0), 0.002); end
  def test_lever_graphs_b3630; assert_equal("International", worksheet.lever_graphs_b3630); end
  def test_lever_graphs_c3630; assert_in_delta(1.0, worksheet.lever_graphs_c3630, 0.002); end
  def test_lever_graphs_d3630; assert_equal("International fast growth", worksheet.lever_graphs_d3630); end
  def test_lever_graphs_k3630; assert_in_delta(0.0, (worksheet.lever_graphs_k3630||0), 0.002); end
  def test_lever_graphs_l3630; assert_in_delta(0.0, (worksheet.lever_graphs_l3630||0), 0.002); end
  def test_lever_graphs_m3630; assert_in_delta(0.0, (worksheet.lever_graphs_m3630||0), 0.002); end
  def test_lever_graphs_n3630; assert_in_delta(0.0, (worksheet.lever_graphs_n3630||0), 0.002); end
  def test_lever_graphs_o3630; assert_in_delta(0.0, (worksheet.lever_graphs_o3630||0), 0.002); end
  def test_lever_graphs_p3630; assert_in_delta(0.0, (worksheet.lever_graphs_p3630||0), 0.002); end
  def test_lever_graphs_q3630; assert_in_delta(0.0, (worksheet.lever_graphs_q3630||0), 0.002); end
  def test_lever_graphs_r3630; assert_in_delta(0.0, (worksheet.lever_graphs_r3630||0), 0.002); end
  def test_lever_graphs_s3630; assert_in_delta(0.0, (worksheet.lever_graphs_s3630||0), 0.002); end
  def test_lever_graphs_b3631; assert_equal("International", worksheet.lever_graphs_b3631); end
  def test_lever_graphs_c3631; assert_in_epsilon(2.0, worksheet.lever_graphs_c3631, 0.002); end
  def test_lever_graphs_d3631; assert_equal("International fast growth", worksheet.lever_graphs_d3631); end
  def test_lever_graphs_k3631; assert_in_delta(0.0, (worksheet.lever_graphs_k3631||0), 0.002); end
  def test_lever_graphs_l3631; assert_in_delta(0.0, (worksheet.lever_graphs_l3631||0), 0.002); end
  def test_lever_graphs_m3631; assert_in_delta(0.0, (worksheet.lever_graphs_m3631||0), 0.002); end
  def test_lever_graphs_n3631; assert_in_delta(0.0, (worksheet.lever_graphs_n3631||0), 0.002); end
  def test_lever_graphs_o3631; assert_in_delta(0.0, (worksheet.lever_graphs_o3631||0), 0.002); end
  def test_lever_graphs_p3631; assert_in_delta(0.0, (worksheet.lever_graphs_p3631||0), 0.002); end
  def test_lever_graphs_q3631; assert_in_delta(0.0, (worksheet.lever_graphs_q3631||0), 0.002); end
  def test_lever_graphs_r3631; assert_in_delta(0.0, (worksheet.lever_graphs_r3631||0), 0.002); end
  def test_lever_graphs_s3631; assert_in_delta(0.0, (worksheet.lever_graphs_s3631||0), 0.002); end
  def test_lever_graphs_b3632; assert_equal("International", worksheet.lever_graphs_b3632); end
  def test_lever_graphs_c3632; assert_in_epsilon(3.0, worksheet.lever_graphs_c3632, 0.002); end
  def test_lever_graphs_d3632; assert_equal("International fast growth", worksheet.lever_graphs_d3632); end
  def test_lever_graphs_k3632; assert_in_delta(0.0, (worksheet.lever_graphs_k3632||0), 0.002); end
  def test_lever_graphs_l3632; assert_in_delta(0.0, (worksheet.lever_graphs_l3632||0), 0.002); end
  def test_lever_graphs_m3632; assert_in_delta(0.0, (worksheet.lever_graphs_m3632||0), 0.002); end
  def test_lever_graphs_n3632; assert_in_delta(0.0, (worksheet.lever_graphs_n3632||0), 0.002); end
  def test_lever_graphs_o3632; assert_in_delta(0.0, (worksheet.lever_graphs_o3632||0), 0.002); end
  def test_lever_graphs_p3632; assert_in_delta(0.0, (worksheet.lever_graphs_p3632||0), 0.002); end
  def test_lever_graphs_q3632; assert_in_delta(0.0, (worksheet.lever_graphs_q3632||0), 0.002); end
  def test_lever_graphs_r3632; assert_in_delta(0.0, (worksheet.lever_graphs_r3632||0), 0.002); end
  def test_lever_graphs_s3632; assert_in_delta(0.0, (worksheet.lever_graphs_s3632||0), 0.002); end
  def test_lever_graphs_b3633; assert_equal("International", worksheet.lever_graphs_b3633); end
  def test_lever_graphs_c3633; assert_in_epsilon(4.0, worksheet.lever_graphs_c3633, 0.002); end
  def test_lever_graphs_d3633; assert_equal("International fast growth", worksheet.lever_graphs_d3633); end
  def test_lever_graphs_k3633; assert_in_delta(0.0, (worksheet.lever_graphs_k3633||0), 0.002); end
  def test_lever_graphs_l3633; assert_in_delta(0.0, (worksheet.lever_graphs_l3633||0), 0.002); end
  def test_lever_graphs_m3633; assert_in_delta(0.0, (worksheet.lever_graphs_m3633||0), 0.002); end
  def test_lever_graphs_n3633; assert_in_delta(0.0, (worksheet.lever_graphs_n3633||0), 0.002); end
  def test_lever_graphs_o3633; assert_in_delta(0.0, (worksheet.lever_graphs_o3633||0), 0.002); end
  def test_lever_graphs_p3633; assert_in_delta(0.0, (worksheet.lever_graphs_p3633||0), 0.002); end
  def test_lever_graphs_q3633; assert_in_delta(0.0, (worksheet.lever_graphs_q3633||0), 0.002); end
  def test_lever_graphs_r3633; assert_in_delta(0.0, (worksheet.lever_graphs_r3633||0), 0.002); end
  def test_lever_graphs_s3633; assert_in_delta(0.0, (worksheet.lever_graphs_s3633||0), 0.002); end
  def test_lever_graphs_b3639; assert_equal("Type of travel", worksheet.lever_graphs_b3639); end
  def test_lever_graphs_c3639; assert_equal("Level", worksheet.lever_graphs_c3639); end
  def test_lever_graphs_d3639; assert_equal("Type of city", worksheet.lever_graphs_d3639); end
  def test_lever_graphs_e3639; assert_equal("1985", worksheet.lever_graphs_e3639); end
  def test_lever_graphs_f3639; assert_equal("1990", worksheet.lever_graphs_f3639); end
  def test_lever_graphs_g3639; assert_equal("1995", worksheet.lever_graphs_g3639); end
  def test_lever_graphs_h3639; assert_equal("2000", worksheet.lever_graphs_h3639); end
  def test_lever_graphs_i3639; assert_equal("2005", worksheet.lever_graphs_i3639); end
  def test_lever_graphs_j3639; assert_equal("2010", worksheet.lever_graphs_j3639); end
  def test_lever_graphs_k3639; assert_equal("2011", worksheet.lever_graphs_k3639); end
  def test_lever_graphs_l3639; assert_equal("2015", worksheet.lever_graphs_l3639); end
  def test_lever_graphs_m3639; assert_equal("2020", worksheet.lever_graphs_m3639); end
  def test_lever_graphs_n3639; assert_equal("2025", worksheet.lever_graphs_n3639); end
  def test_lever_graphs_o3639; assert_equal("2030", worksheet.lever_graphs_o3639); end
  def test_lever_graphs_p3639; assert_equal("2035", worksheet.lever_graphs_p3639); end
  def test_lever_graphs_q3639; assert_equal("2040", worksheet.lever_graphs_q3639); end
  def test_lever_graphs_r3639; assert_equal("2045", worksheet.lever_graphs_r3639); end
  def test_lever_graphs_s3639; assert_equal("2050", worksheet.lever_graphs_s3639); end
  def test_lever_graphs_b3640; assert_equal("Urban", worksheet.lever_graphs_b3640); end
  def test_lever_graphs_c3640; assert_in_delta(1.0, worksheet.lever_graphs_c3640, 0.002); end
  def test_lever_graphs_d3640; assert_equal("Automobile city", worksheet.lever_graphs_d3640); end
  def test_lever_graphs_k3640; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3640, 0.002); end
  def test_lever_graphs_l3640; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3640, 0.002); end
  def test_lever_graphs_m3640; assert_in_epsilon(9306.106718825675, worksheet.lever_graphs_m3640, 0.002); end
  def test_lever_graphs_n3640; assert_in_epsilon(9577.93452583689, worksheet.lever_graphs_n3640, 0.002); end
  def test_lever_graphs_o3640; assert_in_epsilon(9716.039907280776, worksheet.lever_graphs_o3640, 0.002); end
  def test_lever_graphs_p3640; assert_in_epsilon(9855.908278024184, worksheet.lever_graphs_p3640, 0.002); end
  def test_lever_graphs_q3640; assert_in_epsilon(9997.560703295736, worksheet.lever_graphs_q3640, 0.002); end
  def test_lever_graphs_r3640; assert_in_epsilon(10141.018489763575, worksheet.lever_graphs_r3640, 0.002); end
  def test_lever_graphs_s3640; assert_in_epsilon(10199.33106554591, worksheet.lever_graphs_s3640, 0.002); end
  def test_lever_graphs_b3641; assert_equal("Urban", worksheet.lever_graphs_b3641); end
  def test_lever_graphs_c3641; assert_in_epsilon(2.0, worksheet.lever_graphs_c3641, 0.002); end
  def test_lever_graphs_d3641; assert_equal("Automobile city", worksheet.lever_graphs_d3641); end
  def test_lever_graphs_k3641; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3641, 0.002); end
  def test_lever_graphs_l3641; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3641, 0.002); end
  def test_lever_graphs_m3641; assert_in_epsilon(9150.928713907104, worksheet.lever_graphs_m3641, 0.002); end
  def test_lever_graphs_n3641; assert_in_epsilon(9127.197825305117, worksheet.lever_graphs_n3641, 0.002); end
  def test_lever_graphs_o3641; assert_in_epsilon(9102.182161344705, worksheet.lever_graphs_o3641, 0.002); end
  def test_lever_graphs_p3641; assert_in_epsilon(9075.859376408569, worksheet.lever_graphs_p3641, 0.002); end
  def test_lever_graphs_q3641; assert_in_epsilon(9048.206815531837, worksheet.lever_graphs_q3641, 0.002); end
  def test_lever_graphs_r3641; assert_in_epsilon(8845.021921868583, worksheet.lever_graphs_r3641, 0.002); end
  def test_lever_graphs_s3641; assert_in_epsilon(8644.98689276609, worksheet.lever_graphs_s3641, 0.002); end
  def test_lever_graphs_b3642; assert_equal("Urban", worksheet.lever_graphs_b3642); end
  def test_lever_graphs_c3642; assert_in_epsilon(3.0, worksheet.lever_graphs_c3642, 0.002); end
  def test_lever_graphs_d3642; assert_equal("Automobile city", worksheet.lever_graphs_d3642); end
  def test_lever_graphs_k3642; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3642, 0.002); end
  def test_lever_graphs_l3642; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3642, 0.002); end
  def test_lever_graphs_m3642; assert_in_epsilon(8902.705303783388, worksheet.lever_graphs_m3642, 0.002); end
  def test_lever_graphs_n3642; assert_in_epsilon(8701.301987398034, worksheet.lever_graphs_n3642, 0.002); end
  def test_lever_graphs_o3642; assert_in_epsilon(8432.92776967324, worksheet.lever_graphs_o3642, 0.002); end
  def test_lever_graphs_p3642; assert_in_epsilon(8083.233946059662, worksheet.lever_graphs_p3642, 0.002); end
  def test_lever_graphs_q3642; assert_in_epsilon(7700.971236015493, worksheet.lever_graphs_q3642, 0.002); end
  def test_lever_graphs_r3642; assert_in_epsilon(7291.63261432435, worksheet.lever_graphs_r3642, 0.002); end
  def test_lever_graphs_s3642; assert_in_epsilon(6860.959025859904, worksheet.lever_graphs_s3642, 0.002); end
  def test_lever_graphs_b3643; assert_equal("Urban", worksheet.lever_graphs_b3643); end
  def test_lever_graphs_c3643; assert_in_epsilon(4.0, worksheet.lever_graphs_c3643, 0.002); end
  def test_lever_graphs_d3643; assert_equal("Automobile city", worksheet.lever_graphs_d3643); end
  def test_lever_graphs_k3643; assert_in_epsilon(8918.930449006788, worksheet.lever_graphs_k3643, 0.002); end
  def test_lever_graphs_l3643; assert_in_epsilon(9041.779958301404, worksheet.lever_graphs_l3643, 0.002); end
  def test_lever_graphs_m3643; assert_in_epsilon(8607.536840770963, worksheet.lever_graphs_m3643, 0.002); end
  def test_lever_graphs_n3643; assert_in_epsilon(8123.007002035949, worksheet.lever_graphs_n3643, 0.002); end
  def test_lever_graphs_o3643; assert_in_epsilon(7557.452428639823, worksheet.lever_graphs_o3643, 0.002); end
  def test_lever_graphs_p3643; assert_in_epsilon(6927.576288199299, worksheet.lever_graphs_p3643, 0.002); end
  def test_lever_graphs_q3643; assert_in_epsilon(6283.197691865801, worksheet.lever_graphs_q3643, 0.002); end
  def test_lever_graphs_r3643; assert_in_epsilon(5633.296832389788, worksheet.lever_graphs_r3643, 0.002); end
  def test_lever_graphs_s3643; assert_in_epsilon(4986.584503534419, worksheet.lever_graphs_s3643, 0.002); end
  def test_lever_graphs_b3644; assert_equal("Urban", worksheet.lever_graphs_b3644); end
  def test_lever_graphs_c3644; assert_in_delta(1.0, worksheet.lever_graphs_c3644, 0.002); end
  def test_lever_graphs_d3644; assert_equal("Transit city", worksheet.lever_graphs_d3644); end
  def test_lever_graphs_k3644; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3644, 0.002); end
  def test_lever_graphs_l3644; assert_in_epsilon(4806.391365574918, worksheet.lever_graphs_l3644, 0.002); end
  def test_lever_graphs_m3644; assert_in_epsilon(5434.347346568582, worksheet.lever_graphs_m3644, 0.002); end
  def test_lever_graphs_n3644; assert_in_epsilon(6040.590675844044, worksheet.lever_graphs_n3644, 0.002); end
  def test_lever_graphs_o3644; assert_in_epsilon(6553.1629424225, worksheet.lever_graphs_o3644, 0.002); end
  def test_lever_graphs_p3644; assert_in_epsilon(7096.005837183592, worksheet.lever_graphs_p3644, 0.002); end
  def test_lever_graphs_q3644; assert_in_epsilon(7575.982605558889, worksheet.lever_graphs_q3644, 0.002); end
  def test_lever_graphs_r3644; assert_in_epsilon(8075.674807392872, worksheet.lever_graphs_r3644, 0.002); end
  def test_lever_graphs_s3644; assert_in_epsilon(8468.240628261521, worksheet.lever_graphs_s3644, 0.002); end
  def test_lever_graphs_b3645; assert_equal("Urban", worksheet.lever_graphs_b3645); end
  def test_lever_graphs_c3645; assert_in_epsilon(2.0, worksheet.lever_graphs_c3645, 0.002); end
  def test_lever_graphs_d3645; assert_equal("Transit city", worksheet.lever_graphs_d3645); end
  def test_lever_graphs_k3645; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3645, 0.002); end
  def test_lever_graphs_l3645; assert_in_epsilon(4806.391365574918, worksheet.lever_graphs_l3645, 0.002); end
  def test_lever_graphs_m3645; assert_in_epsilon(5261.893430955813, worksheet.lever_graphs_m3645, 0.002); end
  def test_lever_graphs_n3645; assert_in_epsilon(5549.4407428339, worksheet.lever_graphs_n3645, 0.002); end
  def test_lever_graphs_o3645; assert_in_epsilon(5851.255144148329, worksheet.lever_graphs_o3645, 0.002); end
  def test_lever_graphs_p3645; assert_in_epsilon(6091.858869975642, worksheet.lever_graphs_p3645, 0.002); end
  def test_lever_graphs_q3645; assert_in_epsilon(6340.88277581999, worksheet.lever_graphs_q3645, 0.002); end
  def test_lever_graphs_r3645; assert_in_epsilon(6500.698366016866, worksheet.lever_graphs_r3645, 0.002); end
  def test_lever_graphs_s3645; assert_in_epsilon(6603.450475619976, worksheet.lever_graphs_s3645, 0.002); end
  def test_lever_graphs_b3646; assert_equal("Urban", worksheet.lever_graphs_b3646); end
  def test_lever_graphs_c3646; assert_in_epsilon(3.0, worksheet.lever_graphs_c3646, 0.002); end
  def test_lever_graphs_d3646; assert_equal("Transit city", worksheet.lever_graphs_d3646); end
  def test_lever_graphs_k3646; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3646, 0.002); end
  def test_lever_graphs_l3646; assert_in_epsilon(4806.391365574918, worksheet.lever_graphs_l3646, 0.002); end
  def test_lever_graphs_m3646; assert_in_epsilon(4975.4920848031215, worksheet.lever_graphs_m3646, 0.002); end
  def test_lever_graphs_n3646; assert_in_epsilon(4990.208334139963, worksheet.lever_graphs_n3646, 0.002); end
  def test_lever_graphs_o3646; assert_in_epsilon(4930.8867672277165, worksheet.lever_graphs_o3646, 0.002); end
  def test_lever_graphs_p3646; assert_in_epsilon(4867.145001206521, worksheet.lever_graphs_p3646, 0.002); end
  def test_lever_graphs_q3646; assert_in_epsilon(4751.2218662644145, worksheet.lever_graphs_q3646, 0.002); end
  def test_lever_graphs_r3646; assert_in_epsilon(4632.480352376426, worksheet.lever_graphs_r3646, 0.002); end
  def test_lever_graphs_s3646; assert_in_epsilon(4470.50401343541, worksheet.lever_graphs_s3646, 0.002); end
  def test_lever_graphs_b3647; assert_equal("Urban", worksheet.lever_graphs_b3647); end
  def test_lever_graphs_c3647; assert_in_epsilon(4.0, worksheet.lever_graphs_c3647, 0.002); end
  def test_lever_graphs_d3647; assert_equal("Transit city", worksheet.lever_graphs_d3647); end
  def test_lever_graphs_k3647; assert_in_epsilon(4297.810771691249, worksheet.lever_graphs_k3647, 0.002); end
  def test_lever_graphs_l3647; assert_in_epsilon(4806.391365574918, worksheet.lever_graphs_l3647, 0.002); end
  def test_lever_graphs_m3647; assert_in_epsilon(4881.158307527755, worksheet.lever_graphs_m3647, 0.002); end
  def test_lever_graphs_n3647; assert_in_epsilon(4752.327371630895, worksheet.lever_graphs_n3647, 0.002); end
  def test_lever_graphs_o3647; assert_in_epsilon(4590.968817677933, worksheet.lever_graphs_o3647, 0.002); end
  def test_lever_graphs_p3647; assert_in_epsilon(4377.311998361603, worksheet.lever_graphs_p3647, 0.002); end
  def test_lever_graphs_q3647; assert_in_epsilon(4138.190508704261, worksheet.lever_graphs_q3647, 0.002); end
  def test_lever_graphs_r3647; assert_in_epsilon(3886.8411864397094, worksheet.lever_graphs_r3647, 0.002); end
  def test_lever_graphs_s3647; assert_in_epsilon(3628.7626236348015, worksheet.lever_graphs_s3647, 0.002); end
  def test_lever_graphs_b3648; assert_equal("Urban", worksheet.lever_graphs_b3648); end
  def test_lever_graphs_c3648; assert_in_delta(1.0, worksheet.lever_graphs_c3648, 0.002); end
  def test_lever_graphs_d3648; assert_equal("Booming city", worksheet.lever_graphs_d3648); end
  def test_lever_graphs_k3648; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3648, 0.002); end
  def test_lever_graphs_l3648; assert_in_epsilon(2694.166592184805, worksheet.lever_graphs_l3648, 0.002); end
  def test_lever_graphs_m3648; assert_in_epsilon(3653.9271205873715, worksheet.lever_graphs_m3648, 0.002); end
  def test_lever_graphs_n3648; assert_in_epsilon(4476.937095436142, worksheet.lever_graphs_n3648, 0.002); end
  def test_lever_graphs_o3648; assert_in_epsilon(5308.216598619517, worksheet.lever_graphs_o3648, 0.002); end
  def test_lever_graphs_p3648; assert_in_epsilon(6119.800317182176, worksheet.lever_graphs_p3648, 0.002); end
  def test_lever_graphs_q3648; assert_in_epsilon(6882.7376236591945, worksheet.lever_graphs_q3648, 0.002); end
  def test_lever_graphs_r3648; assert_in_epsilon(7663.878139729308, worksheet.lever_graphs_r3648, 0.002); end
  def test_lever_graphs_s3648; assert_in_epsilon(8463.55881970637, worksheet.lever_graphs_s3648, 0.002); end
  def test_lever_graphs_b3649; assert_equal("Urban", worksheet.lever_graphs_b3649); end
  def test_lever_graphs_c3649; assert_in_epsilon(2.0, worksheet.lever_graphs_c3649, 0.002); end
  def test_lever_graphs_d3649; assert_equal("Booming city", worksheet.lever_graphs_d3649); end
  def test_lever_graphs_k3649; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3649, 0.002); end
  def test_lever_graphs_l3649; assert_in_epsilon(2694.166592184805, worksheet.lever_graphs_l3649, 0.002); end
  def test_lever_graphs_m3649; assert_in_epsilon(3278.1709846044055, worksheet.lever_graphs_m3649, 0.002); end
  def test_lever_graphs_n3649; assert_in_epsilon(3840.3480474838375, worksheet.lever_graphs_n3649, 0.002); end
  def test_lever_graphs_o3649; assert_in_epsilon(4396.529692471385, worksheet.lever_graphs_o3649, 0.002); end
  def test_lever_graphs_p3649; assert_in_epsilon(4927.892526920857, worksheet.lever_graphs_p3649, 0.002); end
  def test_lever_graphs_q3649; assert_in_epsilon(5415.425547235206, worksheet.lever_graphs_q3649, 0.002); end
  def test_lever_graphs_r3649; assert_in_epsilon(5870.314871418801, worksheet.lever_graphs_r3649, 0.002); end
  def test_lever_graphs_s3649; assert_in_epsilon(6329.626267467375, worksheet.lever_graphs_s3649, 0.002); end
  def test_lever_graphs_b3650; assert_equal("Urban", worksheet.lever_graphs_b3650); end
  def test_lever_graphs_c3650; assert_in_epsilon(3.0, worksheet.lever_graphs_c3650, 0.002); end
  def test_lever_graphs_d3650; assert_equal("Booming city", worksheet.lever_graphs_d3650); end
  def test_lever_graphs_k3650; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3650, 0.002); end
  def test_lever_graphs_l3650; assert_in_epsilon(2694.166592184805, worksheet.lever_graphs_l3650, 0.002); end
  def test_lever_graphs_m3650; assert_in_epsilon(3064.409220198641, worksheet.lever_graphs_m3650, 0.002); end
  def test_lever_graphs_n3650; assert_in_epsilon(3422.7367606213625, worksheet.lever_graphs_n3650, 0.002); end
  def test_lever_graphs_o3650; assert_in_epsilon(3775.671743342208, worksheet.lever_graphs_o3650, 0.002); end
  def test_lever_graphs_p3650; assert_in_epsilon(4085.4186079816072, worksheet.lever_graphs_p3650, 0.002); end
  def test_lever_graphs_q3650; assert_in_epsilon(4381.745335688027, worksheet.lever_graphs_q3650, 0.002); end
  def test_lever_graphs_r3650; assert_in_epsilon(4660.285821011969, worksheet.lever_graphs_r3650, 0.002); end
  def test_lever_graphs_s3650; assert_in_epsilon(4929.178200992586, worksheet.lever_graphs_s3650, 0.002); end
  def test_lever_graphs_b3651; assert_equal("Urban", worksheet.lever_graphs_b3651); end
  def test_lever_graphs_c3651; assert_in_epsilon(4.0, worksheet.lever_graphs_c3651, 0.002); end
  def test_lever_graphs_d3651; assert_equal("Booming city", worksheet.lever_graphs_d3651); end
  def test_lever_graphs_k3651; assert_in_epsilon(2135.8170176364983, worksheet.lever_graphs_k3651, 0.002); end
  def test_lever_graphs_l3651; assert_in_epsilon(2694.166592184805, worksheet.lever_graphs_l3651, 0.002); end
  def test_lever_graphs_m3651; assert_in_epsilon(2788.412725800497, worksheet.lever_graphs_m3651, 0.002); end
  def test_lever_graphs_n3651; assert_in_epsilon(2850.301762175454, worksheet.lever_graphs_n3651, 0.002); end
  def test_lever_graphs_o3651; assert_in_epsilon(2891.8603695202933, worksheet.lever_graphs_o3651, 0.002); end
  def test_lever_graphs_p3651; assert_in_epsilon(2919.4088140583217, worksheet.lever_graphs_p3651, 0.002); end
  def test_lever_graphs_q3651; assert_in_epsilon(2925.2100847363354, worksheet.lever_graphs_q3651, 0.002); end
  def test_lever_graphs_r3651; assert_in_epsilon(2919.302639922647, worksheet.lever_graphs_r3651, 0.002); end
  def test_lever_graphs_s3651; assert_in_epsilon(2913.3804479412406, worksheet.lever_graphs_s3651, 0.002); end
  def test_lever_graphs_b3652; assert_equal("Rural", worksheet.lever_graphs_b3652); end
  def test_lever_graphs_c3652; assert_in_delta(1.0, worksheet.lever_graphs_c3652, 0.002); end
  def test_lever_graphs_d3652; assert_equal("Developed", worksheet.lever_graphs_d3652); end
  def test_lever_graphs_k3652; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3652, 0.002); end
  def test_lever_graphs_l3652; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3652, 0.002); end
  def test_lever_graphs_m3652; assert_in_epsilon(21208.719413507024, worksheet.lever_graphs_m3652, 0.002); end
  def test_lever_graphs_n3652; assert_in_epsilon(22400.08604062604, worksheet.lever_graphs_n3652, 0.002); end
  def test_lever_graphs_o3652; assert_in_epsilon(23656.73325106882, worksheet.lever_graphs_o3652, 0.002); end
  def test_lever_graphs_p3652; assert_in_epsilon(24982.17245231808, worksheet.lever_graphs_p3652, 0.002); end
  def test_lever_graphs_q3652; assert_in_epsilon(26380.101240895212, worksheet.lever_graphs_q3652, 0.002); end
  def test_lever_graphs_r3652; assert_in_epsilon(27266.095762574358, worksheet.lever_graphs_r3652, 0.002); end
  def test_lever_graphs_s3652; assert_in_epsilon(28180.014595377626, worksheet.lever_graphs_s3652, 0.002); end
  def test_lever_graphs_b3653; assert_equal("Rural", worksheet.lever_graphs_b3653); end
  def test_lever_graphs_c3653; assert_in_epsilon(2.0, worksheet.lever_graphs_c3653, 0.002); end
  def test_lever_graphs_d3653; assert_equal("Developed", worksheet.lever_graphs_d3653); end
  def test_lever_graphs_k3653; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3653, 0.002); end
  def test_lever_graphs_l3653; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3653, 0.002); end
  def test_lever_graphs_m3653; assert_in_epsilon(20472.671487266736, worksheet.lever_graphs_m3653, 0.002); end
  def test_lever_graphs_n3653; assert_in_epsilon(20866.896487609494, worksheet.lever_graphs_n3653, 0.002); end
  def test_lever_graphs_o3653; assert_in_epsilon(21261.468742174264, worksheet.lever_graphs_o3653, 0.002); end
  def test_lever_graphs_p3653; assert_in_epsilon(21655.84342653164, worksheet.lever_graphs_p3653, 0.002); end
  def test_lever_graphs_q3653; assert_in_epsilon(21507.705092990673, worksheet.lever_graphs_q3653, 0.002); end
  def test_lever_graphs_r3653; assert_in_epsilon(21352.427004961515, worksheet.lever_graphs_r3653, 0.002); end
  def test_lever_graphs_s3653; assert_in_epsilon(21189.85315312041, worksheet.lever_graphs_s3653, 0.002); end
  def test_lever_graphs_b3654; assert_equal("Rural", worksheet.lever_graphs_b3654); end
  def test_lever_graphs_c3654; assert_in_epsilon(3.0, worksheet.lever_graphs_c3654, 0.002); end
  def test_lever_graphs_d3654; assert_equal("Developed", worksheet.lever_graphs_d3654); end
  def test_lever_graphs_k3654; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3654, 0.002); end
  def test_lever_graphs_l3654; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3654, 0.002); end
  def test_lever_graphs_m3654; assert_in_epsilon(20041.315220837012, worksheet.lever_graphs_m3654, 0.002); end
  def test_lever_graphs_n3654; assert_in_epsilon(19988.610220382667, worksheet.lever_graphs_n3654, 0.002); end
  def test_lever_graphs_o3654; assert_in_epsilon(19673.927261984583, worksheet.lever_graphs_o3654, 0.002); end
  def test_lever_graphs_p3654; assert_in_epsilon(19348.183186594884, worksheet.lever_graphs_p3654, 0.002); end
  def test_lever_graphs_q3654; assert_in_epsilon(18916.520017489926, worksheet.lever_graphs_q3654, 0.002); end
  def test_lever_graphs_r3654; assert_in_epsilon(18339.309486872713, worksheet.lever_graphs_r3654, 0.002); end
  def test_lever_graphs_s3654; assert_in_epsilon(17629.282262288736, worksheet.lever_graphs_s3654, 0.002); end
  def test_lever_graphs_b3655; assert_equal("Rural", worksheet.lever_graphs_b3655); end
  def test_lever_graphs_c3655; assert_in_epsilon(4.0, worksheet.lever_graphs_c3655, 0.002); end
  def test_lever_graphs_d3655; assert_equal("Developed", worksheet.lever_graphs_d3655); end
  def test_lever_graphs_k3655; assert_in_epsilon(19691.47987657908, worksheet.lever_graphs_k3655, 0.002); end
  def test_lever_graphs_l3655; assert_in_epsilon(20079.298872965224, worksheet.lever_graphs_l3655, 0.002); end
  def test_lever_graphs_m3655; assert_in_epsilon(19653.662884674515, worksheet.lever_graphs_m3655, 0.002); end
  def test_lever_graphs_n3655; assert_in_epsilon(18875.41693886777, worksheet.lever_graphs_n3655, 0.002); end
  def test_lever_graphs_o3655; assert_in_epsilon(17961.848786638835, worksheet.lever_graphs_o3655, 0.002); end
  def test_lever_graphs_p3655; assert_in_epsilon(17060.887716920934, worksheet.lever_graphs_p3655, 0.002); end
  def test_lever_graphs_q3655; assert_in_epsilon(16172.396270747338, worksheet.lever_graphs_q3655, 0.002); end
  def test_lever_graphs_r3655; assert_in_epsilon(15296.238339953203, worksheet.lever_graphs_r3655, 0.002); end
  def test_lever_graphs_s3655; assert_in_epsilon(14432.279154660037, worksheet.lever_graphs_s3655, 0.002); end
  def test_lever_graphs_b3656; assert_equal("Rural", worksheet.lever_graphs_b3656); end
  def test_lever_graphs_c3656; assert_in_delta(1.0, worksheet.lever_graphs_c3656, 0.002); end
  def test_lever_graphs_d3656; assert_equal("Developing", worksheet.lever_graphs_d3656); end
  def test_lever_graphs_k3656; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3656, 0.002); end
  def test_lever_graphs_l3656; assert_in_epsilon(1214.2993256708041, worksheet.lever_graphs_l3656, 0.002); end
  def test_lever_graphs_m3656; assert_in_epsilon(1592.0109032566686, worksheet.lever_graphs_m3656, 0.002); end
  def test_lever_graphs_n3656; assert_in_epsilon(2023.1682742409432, worksheet.lever_graphs_n3656, 0.002); end
  def test_lever_graphs_o3656; assert_in_epsilon(2533.7546251641875, worksheet.lever_graphs_o3656, 0.002); end
  def test_lever_graphs_p3656; assert_in_epsilon(3098.336911622353, worksheet.lever_graphs_p3656, 0.002); end
  def test_lever_graphs_q3656; assert_in_epsilon(3752.995862225378, worksheet.lever_graphs_q3656, 0.002); end
  def test_lever_graphs_r3656; assert_in_epsilon(4510.365965412706, worksheet.lever_graphs_r3656, 0.002); end
  def test_lever_graphs_s3656; assert_in_epsilon(5384.73594132146, worksheet.lever_graphs_s3656, 0.002); end
  def test_lever_graphs_b3657; assert_equal("Rural", worksheet.lever_graphs_b3657); end
  def test_lever_graphs_c3657; assert_in_epsilon(2.0, worksheet.lever_graphs_c3657, 0.002); end
  def test_lever_graphs_d3657; assert_equal("Developing", worksheet.lever_graphs_d3657); end
  def test_lever_graphs_k3657; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3657, 0.002); end
  def test_lever_graphs_l3657; assert_in_epsilon(1214.2993256708041, worksheet.lever_graphs_l3657, 0.002); end
  def test_lever_graphs_m3657; assert_in_epsilon(1583.5657062426803, worksheet.lever_graphs_m3657, 0.002); end
  def test_lever_graphs_n3657; assert_in_epsilon(1979.907454898897, worksheet.lever_graphs_n3657, 0.002); end
  def test_lever_graphs_o3657; assert_in_epsilon(2441.597866528, worksheet.lever_graphs_o3657, 0.002); end
  def test_lever_graphs_p3657; assert_in_epsilon(2905.669720195034, worksheet.lever_graphs_p3657, 0.002); end
  def test_lever_graphs_q3657; assert_in_epsilon(3426.8890178745455, worksheet.lever_graphs_q3657, 0.002); end
  def test_lever_graphs_r3657; assert_in_epsilon(4011.317109760825, worksheet.lever_graphs_r3657, 0.002); end
  def test_lever_graphs_s3657; assert_in_epsilon(4665.6109056323285, worksheet.lever_graphs_s3657, 0.002); end
  def test_lever_graphs_b3658; assert_equal("Rural", worksheet.lever_graphs_b3658); end
  def test_lever_graphs_c3658; assert_in_epsilon(3.0, worksheet.lever_graphs_c3658, 0.002); end
  def test_lever_graphs_d3658; assert_equal("Developing", worksheet.lever_graphs_d3658); end
  def test_lever_graphs_k3658; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3658, 0.002); end
  def test_lever_graphs_l3658; assert_in_epsilon(1214.2993256708041, worksheet.lever_graphs_l3658, 0.002); end
  def test_lever_graphs_m3658; assert_in_epsilon(1471.695414496903, worksheet.lever_graphs_m3658, 0.002); end
  def test_lever_graphs_n3658; assert_in_epsilon(1726.5698105556764, worksheet.lever_graphs_n3658, 0.002); end
  def test_lever_graphs_o3658; assert_in_epsilon(2012.0494664766452, worksheet.lever_graphs_o3658, 0.002); end
  def test_lever_graphs_p3658; assert_in_epsilon(2331.34265811296, worksheet.lever_graphs_p3658, 0.002); end
  def test_lever_graphs_q3658; assert_in_epsilon(2687.970758500523, worksheet.lever_graphs_q3658, 0.002); end
  def test_lever_graphs_r3658; assert_in_epsilon(3010.5377431399015, worksheet.lever_graphs_r3658, 0.002); end
  def test_lever_graphs_s3658; assert_in_epsilon(3359.0188761928034, worksheet.lever_graphs_s3658, 0.002); end
  def test_lever_graphs_b3659; assert_equal("Rural", worksheet.lever_graphs_b3659); end
  def test_lever_graphs_c3659; assert_in_epsilon(4.0, worksheet.lever_graphs_c3659, 0.002); end
  def test_lever_graphs_d3659; assert_equal("Developing", worksheet.lever_graphs_d3659); end
  def test_lever_graphs_k3659; assert_in_epsilon(943.5087023952483, worksheet.lever_graphs_k3659, 0.002); end
  def test_lever_graphs_l3659; assert_in_epsilon(1214.2993256708041, worksheet.lever_graphs_l3659, 0.002); end
  def test_lever_graphs_m3659; assert_in_epsilon(1421.8540433159726, worksheet.lever_graphs_m3659, 0.002); end
  def test_lever_graphs_n3659; assert_in_epsilon(1619.1831867459166, worksheet.lever_graphs_n3659, 0.002); end
  def test_lever_graphs_o3659; assert_in_epsilon(1838.5206283845405, worksheet.lever_graphs_o3659, 0.002); end
  def test_lever_graphs_p3659; assert_in_epsilon(2082.0895361272724, worksheet.lever_graphs_p3659, 0.002); end
  def test_lever_graphs_q3659; assert_in_epsilon(2294.954234216089, worksheet.lever_graphs_q3659, 0.002); end
  def test_lever_graphs_r3659; assert_in_epsilon(2462.2551391602556, worksheet.lever_graphs_r3659, 0.002); end
  def test_lever_graphs_s3659; assert_in_epsilon(2636.5418371089636, worksheet.lever_graphs_s3659, 0.002); end
  def test_lever_graphs_b3660; assert_equal("International", worksheet.lever_graphs_b3660); end
  def test_lever_graphs_c3660; assert_in_delta(1.0, worksheet.lever_graphs_c3660, 0.002); end
  def test_lever_graphs_d3660; assert_equal("International slow growth", worksheet.lever_graphs_d3660); end
  def test_lever_graphs_k3660; assert_in_delta(0.0, (worksheet.lever_graphs_k3660||0), 0.002); end
  def test_lever_graphs_l3660; assert_in_delta(0.0, (worksheet.lever_graphs_l3660||0), 0.002); end
  def test_lever_graphs_m3660; assert_in_delta(0.0, (worksheet.lever_graphs_m3660||0), 0.002); end
  def test_lever_graphs_n3660; assert_in_delta(0.0, (worksheet.lever_graphs_n3660||0), 0.002); end
  def test_lever_graphs_o3660; assert_in_delta(0.0, (worksheet.lever_graphs_o3660||0), 0.002); end
  def test_lever_graphs_p3660; assert_in_delta(0.0, (worksheet.lever_graphs_p3660||0), 0.002); end
  def test_lever_graphs_q3660; assert_in_delta(0.0, (worksheet.lever_graphs_q3660||0), 0.002); end
  def test_lever_graphs_r3660; assert_in_delta(0.0, (worksheet.lever_graphs_r3660||0), 0.002); end
  def test_lever_graphs_s3660; assert_in_delta(0.0, (worksheet.lever_graphs_s3660||0), 0.002); end
  def test_lever_graphs_b3661; assert_equal("International", worksheet.lever_graphs_b3661); end
  def test_lever_graphs_c3661; assert_in_epsilon(2.0, worksheet.lever_graphs_c3661, 0.002); end
  def test_lever_graphs_d3661; assert_equal("International slow growth", worksheet.lever_graphs_d3661); end
  def test_lever_graphs_k3661; assert_in_delta(0.0, (worksheet.lever_graphs_k3661||0), 0.002); end
  def test_lever_graphs_l3661; assert_in_delta(0.0, (worksheet.lever_graphs_l3661||0), 0.002); end
  def test_lever_graphs_m3661; assert_in_delta(0.0, (worksheet.lever_graphs_m3661||0), 0.002); end
  def test_lever_graphs_n3661; assert_in_delta(0.0, (worksheet.lever_graphs_n3661||0), 0.002); end
  def test_lever_graphs_o3661; assert_in_delta(0.0, (worksheet.lever_graphs_o3661||0), 0.002); end
  def test_lever_graphs_p3661; assert_in_delta(0.0, (worksheet.lever_graphs_p3661||0), 0.002); end
  def test_lever_graphs_q3661; assert_in_delta(0.0, (worksheet.lever_graphs_q3661||0), 0.002); end
  def test_lever_graphs_r3661; assert_in_delta(0.0, (worksheet.lever_graphs_r3661||0), 0.002); end
  def test_lever_graphs_s3661; assert_in_delta(0.0, (worksheet.lever_graphs_s3661||0), 0.002); end
  def test_lever_graphs_b3662; assert_equal("International", worksheet.lever_graphs_b3662); end
  def test_lever_graphs_c3662; assert_in_epsilon(3.0, worksheet.lever_graphs_c3662, 0.002); end
  def test_lever_graphs_d3662; assert_equal("International slow growth", worksheet.lever_graphs_d3662); end
  def test_lever_graphs_k3662; assert_in_delta(0.0, (worksheet.lever_graphs_k3662||0), 0.002); end
  def test_lever_graphs_l3662; assert_in_delta(0.0, (worksheet.lever_graphs_l3662||0), 0.002); end
  def test_lever_graphs_m3662; assert_in_delta(0.0, (worksheet.lever_graphs_m3662||0), 0.002); end
  def test_lever_graphs_n3662; assert_in_delta(0.0, (worksheet.lever_graphs_n3662||0), 0.002); end
  def test_lever_graphs_o3662; assert_in_delta(0.0, (worksheet.lever_graphs_o3662||0), 0.002); end
  def test_lever_graphs_p3662; assert_in_delta(0.0, (worksheet.lever_graphs_p3662||0), 0.002); end
  def test_lever_graphs_q3662; assert_in_delta(0.0, (worksheet.lever_graphs_q3662||0), 0.002); end
  def test_lever_graphs_r3662; assert_in_delta(0.0, (worksheet.lever_graphs_r3662||0), 0.002); end
  def test_lever_graphs_s3662; assert_in_delta(0.0, (worksheet.lever_graphs_s3662||0), 0.002); end
  def test_lever_graphs_b3663; assert_equal("International", worksheet.lever_graphs_b3663); end
  def test_lever_graphs_c3663; assert_in_epsilon(4.0, worksheet.lever_graphs_c3663, 0.002); end
  def test_lever_graphs_d3663; assert_equal("International slow growth", worksheet.lever_graphs_d3663); end
  def test_lever_graphs_k3663; assert_in_delta(0.0, (worksheet.lever_graphs_k3663||0), 0.002); end
  def test_lever_graphs_l3663; assert_in_delta(0.0, (worksheet.lever_graphs_l3663||0), 0.002); end
  def test_lever_graphs_m3663; assert_in_delta(0.0, (worksheet.lever_graphs_m3663||0), 0.002); end
  def test_lever_graphs_n3663; assert_in_delta(0.0, (worksheet.lever_graphs_n3663||0), 0.002); end
  def test_lever_graphs_o3663; assert_in_delta(0.0, (worksheet.lever_graphs_o3663||0), 0.002); end
  def test_lever_graphs_p3663; assert_in_delta(0.0, (worksheet.lever_graphs_p3663||0), 0.002); end
  def test_lever_graphs_q3663; assert_in_delta(0.0, (worksheet.lever_graphs_q3663||0), 0.002); end
  def test_lever_graphs_r3663; assert_in_delta(0.0, (worksheet.lever_graphs_r3663||0), 0.002); end
  def test_lever_graphs_s3663; assert_in_delta(0.0, (worksheet.lever_graphs_s3663||0), 0.002); end
  def test_lever_graphs_b3664; assert_equal("International", worksheet.lever_graphs_b3664); end
  def test_lever_graphs_c3664; assert_in_delta(1.0, worksheet.lever_graphs_c3664, 0.002); end
  def test_lever_graphs_d3664; assert_equal("International fast growth", worksheet.lever_graphs_d3664); end
  def test_lever_graphs_k3664; assert_in_delta(0.0, (worksheet.lever_graphs_k3664||0), 0.002); end
  def test_lever_graphs_l3664; assert_in_delta(0.0, (worksheet.lever_graphs_l3664||0), 0.002); end
  def test_lever_graphs_m3664; assert_in_delta(0.0, (worksheet.lever_graphs_m3664||0), 0.002); end
  def test_lever_graphs_n3664; assert_in_delta(0.0, (worksheet.lever_graphs_n3664||0), 0.002); end
  def test_lever_graphs_o3664; assert_in_delta(0.0, (worksheet.lever_graphs_o3664||0), 0.002); end
  def test_lever_graphs_p3664; assert_in_delta(0.0, (worksheet.lever_graphs_p3664||0), 0.002); end
  def test_lever_graphs_q3664; assert_in_delta(0.0, (worksheet.lever_graphs_q3664||0), 0.002); end
  def test_lever_graphs_r3664; assert_in_delta(0.0, (worksheet.lever_graphs_r3664||0), 0.002); end
  def test_lever_graphs_s3664; assert_in_delta(0.0, (worksheet.lever_graphs_s3664||0), 0.002); end
  def test_lever_graphs_b3665; assert_equal("International", worksheet.lever_graphs_b3665); end
  def test_lever_graphs_c3665; assert_in_epsilon(2.0, worksheet.lever_graphs_c3665, 0.002); end
  def test_lever_graphs_d3665; assert_equal("International fast growth", worksheet.lever_graphs_d3665); end
  def test_lever_graphs_k3665; assert_in_delta(0.0, (worksheet.lever_graphs_k3665||0), 0.002); end
  def test_lever_graphs_l3665; assert_in_delta(0.0, (worksheet.lever_graphs_l3665||0), 0.002); end
  def test_lever_graphs_m3665; assert_in_delta(0.0, (worksheet.lever_graphs_m3665||0), 0.002); end
  def test_lever_graphs_n3665; assert_in_delta(0.0, (worksheet.lever_graphs_n3665||0), 0.002); end
  def test_lever_graphs_o3665; assert_in_delta(0.0, (worksheet.lever_graphs_o3665||0), 0.002); end
  def test_lever_graphs_p3665; assert_in_delta(0.0, (worksheet.lever_graphs_p3665||0), 0.002); end
  def test_lever_graphs_q3665; assert_in_delta(0.0, (worksheet.lever_graphs_q3665||0), 0.002); end
  def test_lever_graphs_r3665; assert_in_delta(0.0, (worksheet.lever_graphs_r3665||0), 0.002); end
  def test_lever_graphs_s3665; assert_in_delta(0.0, (worksheet.lever_graphs_s3665||0), 0.002); end
  def test_lever_graphs_b3666; assert_equal("International", worksheet.lever_graphs_b3666); end
  def test_lever_graphs_c3666; assert_in_epsilon(3.0, worksheet.lever_graphs_c3666, 0.002); end
  def test_lever_graphs_d3666; assert_equal("International fast growth", worksheet.lever_graphs_d3666); end
  def test_lever_graphs_k3666; assert_in_delta(0.0, (worksheet.lever_graphs_k3666||0), 0.002); end
  def test_lever_graphs_l3666; assert_in_delta(0.0, (worksheet.lever_graphs_l3666||0), 0.002); end
  def test_lever_graphs_m3666; assert_in_delta(0.0, (worksheet.lever_graphs_m3666||0), 0.002); end
  def test_lever_graphs_n3666; assert_in_delta(0.0, (worksheet.lever_graphs_n3666||0), 0.002); end
  def test_lever_graphs_o3666; assert_in_delta(0.0, (worksheet.lever_graphs_o3666||0), 0.002); end
  def test_lever_graphs_p3666; assert_in_delta(0.0, (worksheet.lever_graphs_p3666||0), 0.002); end
  def test_lever_graphs_q3666; assert_in_delta(0.0, (worksheet.lever_graphs_q3666||0), 0.002); end
  def test_lever_graphs_r3666; assert_in_delta(0.0, (worksheet.lever_graphs_r3666||0), 0.002); end
  def test_lever_graphs_s3666; assert_in_delta(0.0, (worksheet.lever_graphs_s3666||0), 0.002); end
  def test_lever_graphs_b3667; assert_equal("International", worksheet.lever_graphs_b3667); end
  def test_lever_graphs_c3667; assert_in_epsilon(4.0, worksheet.lever_graphs_c3667, 0.002); end
  def test_lever_graphs_d3667; assert_equal("International fast growth", worksheet.lever_graphs_d3667); end
  def test_lever_graphs_k3667; assert_in_delta(0.0, (worksheet.lever_graphs_k3667||0), 0.002); end
  def test_lever_graphs_l3667; assert_in_delta(0.0, (worksheet.lever_graphs_l3667||0), 0.002); end
  def test_lever_graphs_m3667; assert_in_delta(0.0, (worksheet.lever_graphs_m3667||0), 0.002); end
  def test_lever_graphs_n3667; assert_in_delta(0.0, (worksheet.lever_graphs_n3667||0), 0.002); end
  def test_lever_graphs_o3667; assert_in_delta(0.0, (worksheet.lever_graphs_o3667||0), 0.002); end
  def test_lever_graphs_p3667; assert_in_delta(0.0, (worksheet.lever_graphs_p3667||0), 0.002); end
  def test_lever_graphs_q3667; assert_in_delta(0.0, (worksheet.lever_graphs_q3667||0), 0.002); end
  def test_lever_graphs_r3667; assert_in_delta(0.0, (worksheet.lever_graphs_r3667||0), 0.002); end
  def test_lever_graphs_s3667; assert_in_delta(0.0, (worksheet.lever_graphs_s3667||0), 0.002); end
  def test_lever_graphs_f3475; assert_equal("Type of travel", worksheet.lever_graphs_f3475); end
  def test_lever_graphs_g3475; assert_equal("Level", worksheet.lever_graphs_g3475); end
  def test_lever_graphs_h3475; assert_equal("Notes", worksheet.lever_graphs_h3475); end
  def test_lever_graphs_i3475; assert_equal("…", worksheet.lever_graphs_i3475); end
  def test_lever_graphs_j3475; assert_equal("Type of city", worksheet.lever_graphs_j3475); end
  def test_lever_graphs_k3475; assert_equal("2011", worksheet.lever_graphs_k3475); end
  def test_lever_graphs_l3475; assert_equal("2015", worksheet.lever_graphs_l3475); end
  def test_lever_graphs_m3475; assert_equal("2020", worksheet.lever_graphs_m3475); end
  def test_lever_graphs_n3475; assert_equal("2025", worksheet.lever_graphs_n3475); end
  def test_lever_graphs_o3475; assert_equal("2030", worksheet.lever_graphs_o3475); end
  def test_lever_graphs_p3475; assert_equal("2035", worksheet.lever_graphs_p3475); end
  def test_lever_graphs_q3475; assert_equal("2040", worksheet.lever_graphs_q3475); end
  def test_lever_graphs_r3475; assert_equal("2045", worksheet.lever_graphs_r3475); end
  def test_lever_graphs_s3475; assert_equal("2050", worksheet.lever_graphs_s3475); end
  def test_lever_graphs_f3476; assert_equal("Urban", worksheet.lever_graphs_f3476); end
  def test_lever_graphs_g3476; assert_in_delta(1.0, worksheet.lever_graphs_g3476, 0.002); end
  def test_lever_graphs_j3476; assert_equal("Automobile city", worksheet.lever_graphs_j3476); end
  def test_lever_graphs_k3476; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3476, 0.002); end
  def test_lever_graphs_l3476; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3476, 0.002); end
  def test_lever_graphs_m3476; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3476, 0.002); end
  def test_lever_graphs_n3476; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3476, 0.002); end
  def test_lever_graphs_o3476; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3476, 0.002); end
  def test_lever_graphs_p3476; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3476, 0.002); end
  def test_lever_graphs_q3476; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3476, 0.002); end
  def test_lever_graphs_r3476; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3476, 0.002); end
  def test_lever_graphs_s3476; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3476, 0.002); end
  def test_lever_graphs_f3477; assert_equal("Urban", worksheet.lever_graphs_f3477); end
  def test_lever_graphs_g3477; assert_in_epsilon(2.0, worksheet.lever_graphs_g3477, 0.002); end
  def test_lever_graphs_j3477; assert_equal("Automobile city", worksheet.lever_graphs_j3477); end
  def test_lever_graphs_k3477; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3477, 0.002); end
  def test_lever_graphs_l3477; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3477, 0.002); end
  def test_lever_graphs_m3477; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3477, 0.002); end
  def test_lever_graphs_n3477; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3477, 0.002); end
  def test_lever_graphs_o3477; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3477, 0.002); end
  def test_lever_graphs_p3477; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3477, 0.002); end
  def test_lever_graphs_q3477; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3477, 0.002); end
  def test_lever_graphs_r3477; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3477, 0.002); end
  def test_lever_graphs_s3477; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3477, 0.002); end
  def test_lever_graphs_f3478; assert_equal("Urban", worksheet.lever_graphs_f3478); end
  def test_lever_graphs_g3478; assert_in_epsilon(3.0, worksheet.lever_graphs_g3478, 0.002); end
  def test_lever_graphs_j3478; assert_equal("Automobile city", worksheet.lever_graphs_j3478); end
  def test_lever_graphs_k3478; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3478, 0.002); end
  def test_lever_graphs_l3478; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3478, 0.002); end
  def test_lever_graphs_m3478; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3478, 0.002); end
  def test_lever_graphs_n3478; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3478, 0.002); end
  def test_lever_graphs_o3478; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3478, 0.002); end
  def test_lever_graphs_p3478; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3478, 0.002); end
  def test_lever_graphs_q3478; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3478, 0.002); end
  def test_lever_graphs_r3478; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3478, 0.002); end
  def test_lever_graphs_s3478; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3478, 0.002); end
  def test_lever_graphs_f3479; assert_equal("Urban", worksheet.lever_graphs_f3479); end
  def test_lever_graphs_g3479; assert_in_epsilon(4.0, worksheet.lever_graphs_g3479, 0.002); end
  def test_lever_graphs_j3479; assert_equal("Automobile city", worksheet.lever_graphs_j3479); end
  def test_lever_graphs_k3479; assert_in_epsilon(397068596.5145826, worksheet.lever_graphs_k3479, 0.002); end
  def test_lever_graphs_l3479; assert_in_epsilon(430514328.07781744, worksheet.lever_graphs_l3479, 0.002); end
  def test_lever_graphs_m3479; assert_in_epsilon(469001816.278086, worksheet.lever_graphs_m3479, 0.002); end
  def test_lever_graphs_n3479; assert_in_epsilon(505580995.40494, worksheet.lever_graphs_n3479, 0.002); end
  def test_lever_graphs_o3479; assert_in_epsilon(540021601.0929803, worksheet.lever_graphs_o3479, 0.002); end
  def test_lever_graphs_p3479; assert_in_epsilon(572255774.3213063, worksheet.lever_graphs_p3479, 0.002); end
  def test_lever_graphs_q3479; assert_in_epsilon(602465162.9749422, worksheet.lever_graphs_q3479, 0.002); end
  def test_lever_graphs_r3479; assert_in_epsilon(631646804.947362, worksheet.lever_graphs_r3479, 0.002); end
  def test_lever_graphs_s3479; assert_in_epsilon(659587818.223562, worksheet.lever_graphs_s3479, 0.002); end
  def test_lever_graphs_f3480; assert_equal("Urban", worksheet.lever_graphs_f3480); end
  def test_lever_graphs_g3480; assert_in_delta(1.0, worksheet.lever_graphs_g3480, 0.002); end
  def test_lever_graphs_j3480; assert_equal("Transit city", worksheet.lever_graphs_j3480); end
  def test_lever_graphs_k3480; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3480, 0.002); end
  def test_lever_graphs_l3480; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3480, 0.002); end
  def test_lever_graphs_m3480; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3480, 0.002); end
  def test_lever_graphs_n3480; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3480, 0.002); end
  def test_lever_graphs_o3480; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3480, 0.002); end
  def test_lever_graphs_p3480; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3480, 0.002); end
  def test_lever_graphs_q3480; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3480, 0.002); end
  def test_lever_graphs_r3480; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3480, 0.002); end
  def test_lever_graphs_s3480; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3480, 0.002); end
  def test_lever_graphs_f3481; assert_equal("Urban", worksheet.lever_graphs_f3481); end
  def test_lever_graphs_g3481; assert_in_epsilon(2.0, worksheet.lever_graphs_g3481, 0.002); end
  def test_lever_graphs_j3481; assert_equal("Transit city", worksheet.lever_graphs_j3481); end
  def test_lever_graphs_k3481; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3481, 0.002); end
  def test_lever_graphs_l3481; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3481, 0.002); end
  def test_lever_graphs_m3481; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3481, 0.002); end
  def test_lever_graphs_n3481; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3481, 0.002); end
  def test_lever_graphs_o3481; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3481, 0.002); end
  def test_lever_graphs_p3481; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3481, 0.002); end
  def test_lever_graphs_q3481; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3481, 0.002); end
  def test_lever_graphs_r3481; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3481, 0.002); end
  def test_lever_graphs_s3481; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3481, 0.002); end
  def test_lever_graphs_f3482; assert_equal("Urban", worksheet.lever_graphs_f3482); end
  def test_lever_graphs_g3482; assert_in_epsilon(3.0, worksheet.lever_graphs_g3482, 0.002); end
  def test_lever_graphs_j3482; assert_equal("Transit city", worksheet.lever_graphs_j3482); end
  def test_lever_graphs_k3482; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3482, 0.002); end
  def test_lever_graphs_l3482; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3482, 0.002); end
  def test_lever_graphs_m3482; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3482, 0.002); end
  def test_lever_graphs_n3482; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3482, 0.002); end
  def test_lever_graphs_o3482; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3482, 0.002); end
  def test_lever_graphs_p3482; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3482, 0.002); end
  def test_lever_graphs_q3482; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3482, 0.002); end
  def test_lever_graphs_r3482; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3482, 0.002); end
  def test_lever_graphs_s3482; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3482, 0.002); end
  def test_lever_graphs_f3483; assert_equal("Urban", worksheet.lever_graphs_f3483); end
  def test_lever_graphs_g3483; assert_in_epsilon(4.0, worksheet.lever_graphs_g3483, 0.002); end
  def test_lever_graphs_j3483; assert_equal("Transit city", worksheet.lever_graphs_j3483); end
  def test_lever_graphs_k3483; assert_in_epsilon(1090152342.1017332, worksheet.lever_graphs_k3483, 0.002); end
  def test_lever_graphs_l3483; assert_in_epsilon(1154346954.8177166, worksheet.lever_graphs_l3483, 0.002); end
  def test_lever_graphs_m3483; assert_in_epsilon(1219494767.3751185, worksheet.lever_graphs_m3483, 0.002); end
  def test_lever_graphs_n3483; assert_in_epsilon(1273074438.2027743, worksheet.lever_graphs_n3483, 0.002); end
  def test_lever_graphs_o3483; assert_in_epsilon(1314873108.1856847, worksheet.lever_graphs_o3483, 0.002); end
  def test_lever_graphs_p3483; assert_in_epsilon(1345146131.8436923, worksheet.lever_graphs_p3483, 0.002); end
  def test_lever_graphs_q3483; assert_in_epsilon(1364747867.8388145, worksheet.lever_graphs_q3483, 0.002); end
  def test_lever_graphs_r3483; assert_in_epsilon(1376257912.4629226, worksheet.lever_graphs_r3483, 0.002); end
  def test_lever_graphs_s3483; assert_in_epsilon(1379386972.5505197, worksheet.lever_graphs_s3483, 0.002); end
  def test_lever_graphs_f3484; assert_equal("Urban", worksheet.lever_graphs_f3484); end
  def test_lever_graphs_g3484; assert_in_delta(1.0, worksheet.lever_graphs_g3484, 0.002); end
  def test_lever_graphs_j3484; assert_equal("Booming city", worksheet.lever_graphs_j3484); end
  def test_lever_graphs_k3484; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3484, 0.002); end
  def test_lever_graphs_l3484; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3484, 0.002); end
  def test_lever_graphs_m3484; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3484, 0.002); end
  def test_lever_graphs_n3484; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3484, 0.002); end
  def test_lever_graphs_o3484; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3484, 0.002); end
  def test_lever_graphs_p3484; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3484, 0.002); end
  def test_lever_graphs_q3484; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3484, 0.002); end
  def test_lever_graphs_r3484; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3484, 0.002); end
  def test_lever_graphs_s3484; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3484, 0.002); end
  def test_lever_graphs_f3485; assert_equal("Urban", worksheet.lever_graphs_f3485); end
  def test_lever_graphs_g3485; assert_in_epsilon(2.0, worksheet.lever_graphs_g3485, 0.002); end
  def test_lever_graphs_j3485; assert_equal("Booming city", worksheet.lever_graphs_j3485); end
  def test_lever_graphs_k3485; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3485, 0.002); end
  def test_lever_graphs_l3485; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3485, 0.002); end
  def test_lever_graphs_m3485; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3485, 0.002); end
  def test_lever_graphs_n3485; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3485, 0.002); end
  def test_lever_graphs_o3485; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3485, 0.002); end
  def test_lever_graphs_p3485; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3485, 0.002); end
  def test_lever_graphs_q3485; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3485, 0.002); end
  def test_lever_graphs_r3485; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3485, 0.002); end
  def test_lever_graphs_s3485; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3485, 0.002); end
  def test_lever_graphs_f3486; assert_equal("Urban", worksheet.lever_graphs_f3486); end
  def test_lever_graphs_g3486; assert_in_epsilon(3.0, worksheet.lever_graphs_g3486, 0.002); end
  def test_lever_graphs_j3486; assert_equal("Booming city", worksheet.lever_graphs_j3486); end
  def test_lever_graphs_k3486; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3486, 0.002); end
  def test_lever_graphs_l3486; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3486, 0.002); end
  def test_lever_graphs_m3486; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3486, 0.002); end
  def test_lever_graphs_n3486; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3486, 0.002); end
  def test_lever_graphs_o3486; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3486, 0.002); end
  def test_lever_graphs_p3486; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3486, 0.002); end
  def test_lever_graphs_q3486; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3486, 0.002); end
  def test_lever_graphs_r3486; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3486, 0.002); end
  def test_lever_graphs_s3486; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3486, 0.002); end
  def test_lever_graphs_f3487; assert_equal("Urban", worksheet.lever_graphs_f3487); end
  def test_lever_graphs_g3487; assert_in_epsilon(4.0, worksheet.lever_graphs_g3487, 0.002); end
  def test_lever_graphs_j3487; assert_equal("Booming city", worksheet.lever_graphs_j3487); end
  def test_lever_graphs_k3487; assert_in_epsilon(2144578717.9360871, worksheet.lever_graphs_k3487, 0.002); end
  def test_lever_graphs_l3487; assert_in_epsilon(2372423608.546018, worksheet.lever_graphs_l3487, 0.002); end
  def test_lever_graphs_m3487; assert_in_epsilon(2649518316.736254, worksheet.lever_graphs_m3487, 0.002); end
  def test_lever_graphs_n3487; assert_in_epsilon(2927118282.6908765, worksheet.lever_graphs_n3487, 0.002); end
  def test_lever_graphs_o3487; assert_in_epsilon(3203263466.1415253, worksheet.lever_graphs_o3487, 0.002); end
  def test_lever_graphs_p3487; assert_in_epsilon(3476832835.44841, worksheet.lever_graphs_p3487, 0.002); end
  def test_lever_graphs_q3487; assert_in_epsilon(3748199902.704751, worksheet.lever_graphs_q3487, 0.002); end
  def test_lever_graphs_r3487; assert_in_epsilon(4023019232.2637615, worksheet.lever_graphs_r3487, 0.002); end
  def test_lever_graphs_s3487; assert_in_epsilon(4299636773.565211, worksheet.lever_graphs_s3487, 0.002); end
  def test_lever_graphs_f3488; assert_equal("Rural", worksheet.lever_graphs_f3488); end
  def test_lever_graphs_g3488; assert_in_delta(1.0, worksheet.lever_graphs_g3488, 0.002); end
  def test_lever_graphs_j3488; assert_equal("Developed", worksheet.lever_graphs_j3488); end
  def test_lever_graphs_k3488; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3488, 0.002); end
  def test_lever_graphs_l3488; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3488, 0.002); end
  def test_lever_graphs_m3488; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3488, 0.002); end
  def test_lever_graphs_n3488; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3488, 0.002); end
  def test_lever_graphs_o3488; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3488, 0.002); end
  def test_lever_graphs_p3488; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3488, 0.002); end
  def test_lever_graphs_q3488; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3488, 0.002); end
  def test_lever_graphs_r3488; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3488, 0.002); end
  def test_lever_graphs_s3488; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3488, 0.002); end
  def test_lever_graphs_f3489; assert_equal("Rural", worksheet.lever_graphs_f3489); end
  def test_lever_graphs_g3489; assert_in_epsilon(2.0, worksheet.lever_graphs_g3489, 0.002); end
  def test_lever_graphs_j3489; assert_equal("Developed", worksheet.lever_graphs_j3489); end
  def test_lever_graphs_k3489; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3489, 0.002); end
  def test_lever_graphs_l3489; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3489, 0.002); end
  def test_lever_graphs_m3489; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3489, 0.002); end
  def test_lever_graphs_n3489; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3489, 0.002); end
  def test_lever_graphs_o3489; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3489, 0.002); end
  def test_lever_graphs_p3489; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3489, 0.002); end
  def test_lever_graphs_q3489; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3489, 0.002); end
  def test_lever_graphs_r3489; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3489, 0.002); end
  def test_lever_graphs_s3489; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3489, 0.002); end
  def test_lever_graphs_f3490; assert_equal("Rural", worksheet.lever_graphs_f3490); end
  def test_lever_graphs_g3490; assert_in_epsilon(3.0, worksheet.lever_graphs_g3490, 0.002); end
  def test_lever_graphs_j3490; assert_equal("Developed", worksheet.lever_graphs_j3490); end
  def test_lever_graphs_k3490; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3490, 0.002); end
  def test_lever_graphs_l3490; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3490, 0.002); end
  def test_lever_graphs_m3490; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3490, 0.002); end
  def test_lever_graphs_n3490; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3490, 0.002); end
  def test_lever_graphs_o3490; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3490, 0.002); end
  def test_lever_graphs_p3490; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3490, 0.002); end
  def test_lever_graphs_q3490; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3490, 0.002); end
  def test_lever_graphs_r3490; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3490, 0.002); end
  def test_lever_graphs_s3490; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3490, 0.002); end
  def test_lever_graphs_f3491; assert_equal("Rural", worksheet.lever_graphs_f3491); end
  def test_lever_graphs_g3491; assert_in_epsilon(4.0, worksheet.lever_graphs_g3491, 0.002); end
  def test_lever_graphs_j3491; assert_equal("Developed", worksheet.lever_graphs_j3491); end
  def test_lever_graphs_k3491; assert_in_epsilon(286066178.2474379, worksheet.lever_graphs_k3491, 0.002); end
  def test_lever_graphs_l3491; assert_in_epsilon(280605276.06140256, worksheet.lever_graphs_l3491, 0.002); end
  def test_lever_graphs_m3491; assert_in_epsilon(271157610.94388777, worksheet.lever_graphs_m3491, 0.002); end
  def test_lever_graphs_n3491; assert_in_epsilon(260689096.0874587, worksheet.lever_graphs_n3491, 0.002); end
  def test_lever_graphs_o3491; assert_in_epsilon(249503603.20071656, worksheet.lever_graphs_o3491, 0.002); end
  def test_lever_graphs_p3491; assert_in_epsilon(237908503.4616941, worksheet.lever_graphs_p3491, 0.002); end
  def test_lever_graphs_q3491; assert_in_epsilon(225852437.39922655, worksheet.lever_graphs_q3491, 0.002); end
  def test_lever_graphs_r3491; assert_in_epsilon(212669617.2058244, worksheet.lever_graphs_r3491, 0.002); end
  def test_lever_graphs_s3491; assert_in_epsilon(198567602.22399032, worksheet.lever_graphs_s3491, 0.002); end
  def test_lever_graphs_f3492; assert_equal("Rural", worksheet.lever_graphs_f3492); end
  def test_lever_graphs_g3492; assert_in_delta(1.0, worksheet.lever_graphs_g3492, 0.002); end
  def test_lever_graphs_j3492; assert_equal("Developing", worksheet.lever_graphs_j3492); end
  def test_lever_graphs_k3492; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3492, 0.002); end
  def test_lever_graphs_l3492; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3492, 0.002); end
  def test_lever_graphs_m3492; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3492, 0.002); end
  def test_lever_graphs_n3492; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3492, 0.002); end
  def test_lever_graphs_o3492; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3492, 0.002); end
  def test_lever_graphs_p3492; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3492, 0.002); end
  def test_lever_graphs_q3492; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3492, 0.002); end
  def test_lever_graphs_r3492; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3492, 0.002); end
  def test_lever_graphs_s3492; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3492, 0.002); end
  def test_lever_graphs_f3493; assert_equal("Rural", worksheet.lever_graphs_f3493); end
  def test_lever_graphs_g3493; assert_in_epsilon(2.0, worksheet.lever_graphs_g3493, 0.002); end
  def test_lever_graphs_j3493; assert_equal("Developing", worksheet.lever_graphs_j3493); end
  def test_lever_graphs_k3493; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3493, 0.002); end
  def test_lever_graphs_l3493; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3493, 0.002); end
  def test_lever_graphs_m3493; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3493, 0.002); end
  def test_lever_graphs_n3493; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3493, 0.002); end
  def test_lever_graphs_o3493; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3493, 0.002); end
  def test_lever_graphs_p3493; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3493, 0.002); end
  def test_lever_graphs_q3493; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3493, 0.002); end
  def test_lever_graphs_r3493; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3493, 0.002); end
  def test_lever_graphs_s3493; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3493, 0.002); end
  def test_lever_graphs_f3494; assert_equal("Rural", worksheet.lever_graphs_f3494); end
  def test_lever_graphs_g3494; assert_in_epsilon(3.0, worksheet.lever_graphs_g3494, 0.002); end
  def test_lever_graphs_j3494; assert_equal("Developing", worksheet.lever_graphs_j3494); end
  def test_lever_graphs_k3494; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3494, 0.002); end
  def test_lever_graphs_l3494; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3494, 0.002); end
  def test_lever_graphs_m3494; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3494, 0.002); end
  def test_lever_graphs_n3494; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3494, 0.002); end
  def test_lever_graphs_o3494; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3494, 0.002); end
  def test_lever_graphs_p3494; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3494, 0.002); end
  def test_lever_graphs_q3494; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3494, 0.002); end
  def test_lever_graphs_r3494; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3494, 0.002); end
  def test_lever_graphs_s3494; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3494, 0.002); end
  def test_lever_graphs_f3495; assert_equal("Rural", worksheet.lever_graphs_f3495); end
  def test_lever_graphs_g3495; assert_in_epsilon(4.0, worksheet.lever_graphs_g3495, 0.002); end
  def test_lever_graphs_j3495; assert_equal("Developing", worksheet.lever_graphs_j3495); end
  def test_lever_graphs_k3495; assert_in_epsilon(3048573877.200159, worksheet.lever_graphs_k3495, 0.002); end
  def test_lever_graphs_l3495; assert_in_epsilon(3086891832.4970455, worksheet.lever_graphs_l3495, 0.002); end
  def test_lever_graphs_m3495; assert_in_epsilon(3107576488.666654, worksheet.lever_graphs_m3495, 0.002); end
  def test_lever_graphs_n3495; assert_in_epsilon(3116950187.6139507, worksheet.lever_graphs_n3495, 0.002); end
  def test_lever_graphs_o3495; assert_in_epsilon(3117275221.3790927, worksheet.lever_graphs_o3495, 0.002); end
  def test_lever_graphs_p3495; assert_in_epsilon(3111303754.924898, worksheet.lever_graphs_p3495, 0.002); end
  def test_lever_graphs_q3495; assert_in_epsilon(3097421629.0822654, worksheet.lever_graphs_q3495, 0.002); end
  def test_lever_graphs_r3495; assert_in_epsilon(3064844433.12013, worksheet.lever_graphs_r3495, 0.002); end
  def test_lever_graphs_s3495; assert_in_epsilon(3013765833.436716, worksheet.lever_graphs_s3495, 0.002); end
  def test_lever_graphs_f3496; assert_equal("International", worksheet.lever_graphs_f3496); end
  def test_lever_graphs_g3496; assert_in_delta(1.0, worksheet.lever_graphs_g3496, 0.002); end
  def test_lever_graphs_j3496; assert_equal("International slow growth", worksheet.lever_graphs_j3496); end
  def test_lever_graphs_k3496; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3496, 0.002); end
  def test_lever_graphs_l3496; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3496, 0.002); end
  def test_lever_graphs_m3496; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3496, 0.002); end
  def test_lever_graphs_n3496; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3496, 0.002); end
  def test_lever_graphs_o3496; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3496, 0.002); end
  def test_lever_graphs_p3496; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3496, 0.002); end
  def test_lever_graphs_q3496; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3496, 0.002); end
  def test_lever_graphs_r3496; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3496, 0.002); end
  def test_lever_graphs_s3496; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3496, 0.002); end
  def test_lever_graphs_f3497; assert_equal("International", worksheet.lever_graphs_f3497); end
  def test_lever_graphs_g3497; assert_in_epsilon(2.0, worksheet.lever_graphs_g3497, 0.002); end
  def test_lever_graphs_j3497; assert_equal("International slow growth", worksheet.lever_graphs_j3497); end
  def test_lever_graphs_k3497; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3497, 0.002); end
  def test_lever_graphs_l3497; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3497, 0.002); end
  def test_lever_graphs_m3497; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3497, 0.002); end
  def test_lever_graphs_n3497; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3497, 0.002); end
  def test_lever_graphs_o3497; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3497, 0.002); end
  def test_lever_graphs_p3497; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3497, 0.002); end
  def test_lever_graphs_q3497; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3497, 0.002); end
  def test_lever_graphs_r3497; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3497, 0.002); end
  def test_lever_graphs_s3497; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3497, 0.002); end
  def test_lever_graphs_f3498; assert_equal("International", worksheet.lever_graphs_f3498); end
  def test_lever_graphs_g3498; assert_in_epsilon(3.0, worksheet.lever_graphs_g3498, 0.002); end
  def test_lever_graphs_j3498; assert_equal("International slow growth", worksheet.lever_graphs_j3498); end
  def test_lever_graphs_k3498; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3498, 0.002); end
  def test_lever_graphs_l3498; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3498, 0.002); end
  def test_lever_graphs_m3498; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3498, 0.002); end
  def test_lever_graphs_n3498; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3498, 0.002); end
  def test_lever_graphs_o3498; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3498, 0.002); end
  def test_lever_graphs_p3498; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3498, 0.002); end
  def test_lever_graphs_q3498; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3498, 0.002); end
  def test_lever_graphs_r3498; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3498, 0.002); end
  def test_lever_graphs_s3498; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3498, 0.002); end
  def test_lever_graphs_f3499; assert_equal("International", worksheet.lever_graphs_f3499); end
  def test_lever_graphs_g3499; assert_in_epsilon(4.0, worksheet.lever_graphs_g3499, 0.002); end
  def test_lever_graphs_j3499; assert_equal("International slow growth", worksheet.lever_graphs_j3499); end
  def test_lever_graphs_k3499; assert_in_epsilon(1244925862.2743177, worksheet.lever_graphs_k3499, 0.002); end
  def test_lever_graphs_l3499; assert_in_epsilon(1287730160.870671, worksheet.lever_graphs_l3499, 0.002); end
  def test_lever_graphs_m3499; assert_in_epsilon(1328678667.470224, worksheet.lever_graphs_m3499, 0.002); end
  def test_lever_graphs_n3499; assert_in_epsilon(1362521629.8376985, worksheet.lever_graphs_n3499, 0.002); end
  def test_lever_graphs_o3499; assert_in_epsilon(1389560983.0529628, worksheet.lever_graphs_o3499, 0.002); end
  def test_lever_graphs_p3499; assert_in_epsilon(1410412952.938605, worksheet.lever_graphs_p3499, 0.002); end
  def test_lever_graphs_q3499; assert_in_epsilon(1425287340.22343, worksheet.lever_graphs_q3499, 0.002); end
  def test_lever_graphs_r3499; assert_in_epsilon(1434095228.3867798, worksheet.lever_graphs_r3499, 0.002); end
  def test_lever_graphs_s3499; assert_in_epsilon(1436849666.8815818, worksheet.lever_graphs_s3499, 0.002); end
  def test_lever_graphs_f3500; assert_equal("International", worksheet.lever_graphs_f3500); end
  def test_lever_graphs_g3500; assert_in_delta(1.0, worksheet.lever_graphs_g3500, 0.002); end
  def test_lever_graphs_j3500; assert_equal("International fast growth", worksheet.lever_graphs_j3500); end
  def test_lever_graphs_k3500; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3500, 0.002); end
  def test_lever_graphs_l3500; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3500, 0.002); end
  def test_lever_graphs_m3500; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3500, 0.002); end
  def test_lever_graphs_n3500; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3500, 0.002); end
  def test_lever_graphs_o3500; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3500, 0.002); end
  def test_lever_graphs_p3500; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3500, 0.002); end
  def test_lever_graphs_q3500; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3500, 0.002); end
  def test_lever_graphs_r3500; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3500, 0.002); end
  def test_lever_graphs_s3500; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3500, 0.002); end
  def test_lever_graphs_f3501; assert_equal("International", worksheet.lever_graphs_f3501); end
  def test_lever_graphs_g3501; assert_in_epsilon(2.0, worksheet.lever_graphs_g3501, 0.002); end
  def test_lever_graphs_j3501; assert_equal("International fast growth", worksheet.lever_graphs_j3501); end
  def test_lever_graphs_k3501; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3501, 0.002); end
  def test_lever_graphs_l3501; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3501, 0.002); end
  def test_lever_graphs_m3501; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3501, 0.002); end
  def test_lever_graphs_n3501; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3501, 0.002); end
  def test_lever_graphs_o3501; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3501, 0.002); end
  def test_lever_graphs_p3501; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3501, 0.002); end
  def test_lever_graphs_q3501; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3501, 0.002); end
  def test_lever_graphs_r3501; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3501, 0.002); end
  def test_lever_graphs_s3501; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3501, 0.002); end
  def test_lever_graphs_f3502; assert_equal("International", worksheet.lever_graphs_f3502); end
  def test_lever_graphs_g3502; assert_in_epsilon(3.0, worksheet.lever_graphs_g3502, 0.002); end
  def test_lever_graphs_j3502; assert_equal("International fast growth", worksheet.lever_graphs_j3502); end
  def test_lever_graphs_k3502; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3502, 0.002); end
  def test_lever_graphs_l3502; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3502, 0.002); end
  def test_lever_graphs_m3502; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3502, 0.002); end
  def test_lever_graphs_n3502; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3502, 0.002); end
  def test_lever_graphs_o3502; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3502, 0.002); end
  def test_lever_graphs_p3502; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3502, 0.002); end
  def test_lever_graphs_q3502; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3502, 0.002); end
  def test_lever_graphs_r3502; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3502, 0.002); end
  def test_lever_graphs_s3502; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3502, 0.002); end
  def test_lever_graphs_f3503; assert_equal("International", worksheet.lever_graphs_f3503); end
  def test_lever_graphs_g3503; assert_in_epsilon(4.0, worksheet.lever_graphs_g3503, 0.002); end
  def test_lever_graphs_j3503; assert_equal("International fast growth", worksheet.lever_graphs_j3503); end
  def test_lever_graphs_k3503; assert_in_epsilon(5721513849.725682, worksheet.lever_graphs_k3503, 0.002); end
  def test_lever_graphs_l3503; assert_in_epsilon(6037051839.12933, worksheet.lever_graphs_l3503, 0.002); end
  def test_lever_graphs_m3503; assert_in_epsilon(6388070332.529777, worksheet.lever_graphs_m3503, 0.002); end
  def test_lever_graphs_n3503; assert_in_epsilon(6720891370.162302, worksheet.lever_graphs_n3503, 0.002); end
  def test_lever_graphs_o3503; assert_in_epsilon(7035376016.947037, worksheet.lever_graphs_o3503, 0.002); end
  def test_lever_graphs_p3503; assert_in_epsilon(7333034047.061396, worksheet.lever_graphs_p3503, 0.002); end
  def test_lever_graphs_q3503; assert_in_epsilon(7613399659.77657, worksheet.lever_graphs_q3503, 0.002); end
  def test_lever_graphs_r3503; assert_in_epsilon(7874342771.61322, worksheet.lever_graphs_r3503, 0.002); end
  def test_lever_graphs_s3503; assert_in_epsilon(8114095333.118419, worksheet.lever_graphs_s3503, 0.002); end
  def test_lever_graphs_a3957; assert_equal("Technology code", worksheet.lever_graphs_a3957); end
  def test_lever_graphs_b3957; assert_equal("Level", worksheet.lever_graphs_b3957); end
  def test_lever_graphs_c3957; assert_equal("1975", worksheet.lever_graphs_c3957); end
  def test_lever_graphs_d3957; assert_equal("1980", worksheet.lever_graphs_d3957); end
  def test_lever_graphs_e3957; assert_equal("1985", worksheet.lever_graphs_e3957); end
  def test_lever_graphs_f3957; assert_equal("1990", worksheet.lever_graphs_f3957); end
  def test_lever_graphs_g3957; assert_equal("1995", worksheet.lever_graphs_g3957); end
  def test_lever_graphs_h3957; assert_equal("2000", worksheet.lever_graphs_h3957); end
  def test_lever_graphs_i3957; assert_equal("2005", worksheet.lever_graphs_i3957); end
  def test_lever_graphs_j3957; assert_equal("2010", worksheet.lever_graphs_j3957); end
  def test_lever_graphs_k3957; assert_equal("2011", worksheet.lever_graphs_k3957); end
  def test_lever_graphs_l3957; assert_equal("2015", worksheet.lever_graphs_l3957); end
  def test_lever_graphs_m3957; assert_equal("2020", worksheet.lever_graphs_m3957); end
  def test_lever_graphs_n3957; assert_equal("2025", worksheet.lever_graphs_n3957); end
  def test_lever_graphs_o3957; assert_equal("2030", worksheet.lever_graphs_o3957); end
  def test_lever_graphs_p3957; assert_equal("2035", worksheet.lever_graphs_p3957); end
  def test_lever_graphs_q3957; assert_equal("2040", worksheet.lever_graphs_q3957); end
  def test_lever_graphs_r3957; assert_equal("2045", worksheet.lever_graphs_r3957); end
  def test_lever_graphs_s3957; assert_equal("2050", worksheet.lever_graphs_s3957); end
  def test_lever_graphs_t3957; assert_equal("Column1", worksheet.lever_graphs_t3957); end
  def test_lever_graphs_u3957; assert_equal("Column2", worksheet.lever_graphs_u3957); end
  def test_lever_graphs_a3958; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a3958); end
  def test_lever_graphs_b3958; assert_in_delta(1.0, worksheet.lever_graphs_b3958, 0.002); end
  def test_lever_graphs_k3958; assert_in_delta(0.0, (worksheet.lever_graphs_k3958||0), 0.002); end
  def test_lever_graphs_l3958; assert_in_epsilon(9.0, worksheet.lever_graphs_l3958, 0.002); end
  def test_lever_graphs_m3958; assert_in_epsilon(16.0, worksheet.lever_graphs_m3958, 0.002); end
  def test_lever_graphs_n3958; assert_in_epsilon(7.2, worksheet.lever_graphs_n3958, 0.002); end
  def test_lever_graphs_o3958; assert_in_epsilon(7.2, worksheet.lever_graphs_o3958, 0.002); end
  def test_lever_graphs_p3958; assert_in_epsilon(6.8, worksheet.lever_graphs_p3958, 0.002); end
  def test_lever_graphs_q3958; assert_in_epsilon(6.4, worksheet.lever_graphs_q3958, 0.002); end
  def test_lever_graphs_r3958; assert_in_epsilon(5.6, worksheet.lever_graphs_r3958, 0.002); end
  def test_lever_graphs_s3958; assert_in_epsilon(4.8, worksheet.lever_graphs_s3958, 0.002); end
  def test_lever_graphs_t3958; assert_equal("Solid fueled", worksheet.lever_graphs_t3958); end
  def test_lever_graphs_u3958; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u3958); end
  def test_lever_graphs_a3959; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a3959); end
  def test_lever_graphs_b3959; assert_in_epsilon(2.0, worksheet.lever_graphs_b3959, 0.002); end
  def test_lever_graphs_k3959; assert_in_delta(0.0, (worksheet.lever_graphs_k3959||0), 0.002); end
  def test_lever_graphs_l3959; assert_in_epsilon(9.0, worksheet.lever_graphs_l3959, 0.002); end
  def test_lever_graphs_m3959; assert_in_epsilon(18.0, worksheet.lever_graphs_m3959, 0.002); end
  def test_lever_graphs_n3959; assert_in_epsilon(16.2, worksheet.lever_graphs_n3959, 0.002); end
  def test_lever_graphs_o3959; assert_in_epsilon(51.300000000000004, worksheet.lever_graphs_o3959, 0.002); end
  def test_lever_graphs_p3959; assert_in_epsilon(67.83, worksheet.lever_graphs_p3959, 0.002); end
  def test_lever_graphs_q3959; assert_in_epsilon(89.36000000000001, worksheet.lever_graphs_q3959, 0.002); end
  def test_lever_graphs_r3959; assert_in_epsilon(109.48, worksheet.lever_graphs_r3959, 0.002); end
  def test_lever_graphs_s3959; assert_in_epsilon(147.0, worksheet.lever_graphs_s3959, 0.002); end
  def test_lever_graphs_t3959; assert_equal("Solid fueled", worksheet.lever_graphs_t3959); end
  def test_lever_graphs_u3959; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u3959); end
  def test_lever_graphs_a3960; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a3960); end
  def test_lever_graphs_b3960; assert_in_epsilon(3.0, worksheet.lever_graphs_b3960, 0.002); end
  def test_lever_graphs_k3960; assert_in_delta(0.0, (worksheet.lever_graphs_k3960||0), 0.002); end
  def test_lever_graphs_l3960; assert_in_epsilon(9.0, worksheet.lever_graphs_l3960, 0.002); end
  def test_lever_graphs_m3960; assert_in_epsilon(31.3, worksheet.lever_graphs_m3960, 0.002); end
  def test_lever_graphs_n3960; assert_in_epsilon(49.005, worksheet.lever_graphs_n3960, 0.002); end
  def test_lever_graphs_o3960; assert_in_epsilon(171.0, worksheet.lever_graphs_o3960, 0.002); end
  def test_lever_graphs_p3960; assert_in_epsilon(227.71499999999997, worksheet.lever_graphs_p3960, 0.002); end
  def test_lever_graphs_q3960; assert_in_epsilon(302.2, worksheet.lever_graphs_q3960, 0.002); end
  def test_lever_graphs_r3960; assert_in_epsilon(372.85499999999996, worksheet.lever_graphs_r3960, 0.002); end
  def test_lever_graphs_s3960; assert_in_epsilon(446.09999999999997, worksheet.lever_graphs_s3960, 0.002); end
  def test_lever_graphs_t3960; assert_equal("Solid fueled", worksheet.lever_graphs_t3960); end
  def test_lever_graphs_u3960; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u3960); end
  def test_lever_graphs_a3961; assert_equal("CCS.solid.ultra.elec", worksheet.lever_graphs_a3961); end
  def test_lever_graphs_b3961; assert_in_epsilon(4.0, worksheet.lever_graphs_b3961, 0.002); end
  def test_lever_graphs_k3961; assert_in_delta(0.0, (worksheet.lever_graphs_k3961||0), 0.002); end
  def test_lever_graphs_l3961; assert_in_epsilon(9.0, worksheet.lever_graphs_l3961, 0.002); end
  def test_lever_graphs_m3961; assert_in_epsilon(380.0, worksheet.lever_graphs_m3961, 0.002); end
  def test_lever_graphs_n3961; assert_in_epsilon(342.0, worksheet.lever_graphs_n3961, 0.002); end
  def test_lever_graphs_o3961; assert_in_epsilon(570.015, worksheet.lever_graphs_o3961, 0.002); end
  def test_lever_graphs_p3961; assert_in_epsilon(753.695, worksheet.lever_graphs_p3961, 0.002); end
  def test_lever_graphs_q3961; assert_in_epsilon(993.1200000000001, worksheet.lever_graphs_q3961, 0.002); end
  def test_lever_graphs_r3961; assert_in_epsilon(1050.0, worksheet.lever_graphs_r3961, 0.002); end
  def test_lever_graphs_s3961; assert_in_epsilon(1110.0, worksheet.lever_graphs_s3961, 0.002); end
  def test_lever_graphs_t3961; assert_equal("Solid fueled", worksheet.lever_graphs_t3961); end
  def test_lever_graphs_u3961; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_u3961); end
  def test_lever_graphs_a3962; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a3962); end
  def test_lever_graphs_b3962; assert_in_delta(1.0, worksheet.lever_graphs_b3962, 0.002); end
  def test_lever_graphs_k3962; assert_in_delta(0.0, (worksheet.lever_graphs_k3962||0), 0.002); end
  def test_lever_graphs_l3962; assert_in_delta(0.0, (worksheet.lever_graphs_l3962||0), 0.002); end
  def test_lever_graphs_m3962; assert_in_delta(0.0, (worksheet.lever_graphs_m3962||0), 0.002); end
  def test_lever_graphs_n3962; assert_in_epsilon(7.2, worksheet.lever_graphs_n3962, 0.002); end
  def test_lever_graphs_o3962; assert_in_epsilon(7.2, worksheet.lever_graphs_o3962, 0.002); end
  def test_lever_graphs_p3962; assert_in_epsilon(6.8, worksheet.lever_graphs_p3962, 0.002); end
  def test_lever_graphs_q3962; assert_in_epsilon(6.4, worksheet.lever_graphs_q3962, 0.002); end
  def test_lever_graphs_r3962; assert_in_epsilon(5.6, worksheet.lever_graphs_r3962, 0.002); end
  def test_lever_graphs_s3962; assert_in_epsilon(4.8, worksheet.lever_graphs_s3962, 0.002); end
  def test_lever_graphs_t3962; assert_equal("Solid fueled", worksheet.lever_graphs_t3962); end
  def test_lever_graphs_u3962; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u3962); end
  def test_lever_graphs_a3963; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a3963); end
  def test_lever_graphs_b3963; assert_in_epsilon(2.0, worksheet.lever_graphs_b3963, 0.002); end
  def test_lever_graphs_k3963; assert_in_delta(0.0, (worksheet.lever_graphs_k3963||0), 0.002); end
  def test_lever_graphs_l3963; assert_in_delta(0.0, (worksheet.lever_graphs_l3963||0), 0.002); end
  def test_lever_graphs_m3963; assert_in_delta(0.0, (worksheet.lever_graphs_m3963||0), 0.002); end
  def test_lever_graphs_n3963; assert_in_epsilon(16.2, worksheet.lever_graphs_n3963, 0.002); end
  def test_lever_graphs_o3963; assert_in_epsilon(51.300000000000004, worksheet.lever_graphs_o3963, 0.002); end
  def test_lever_graphs_p3963; assert_in_epsilon(67.83, worksheet.lever_graphs_p3963, 0.002); end
  def test_lever_graphs_q3963; assert_in_epsilon(89.36000000000001, worksheet.lever_graphs_q3963, 0.002); end
  def test_lever_graphs_r3963; assert_in_epsilon(109.48, worksheet.lever_graphs_r3963, 0.002); end
  def test_lever_graphs_s3963; assert_in_epsilon(147.0, worksheet.lever_graphs_s3963, 0.002); end
  def test_lever_graphs_t3963; assert_equal("Solid fueled", worksheet.lever_graphs_t3963); end
  def test_lever_graphs_u3963; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u3963); end
  def test_lever_graphs_a3964; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a3964); end
  def test_lever_graphs_b3964; assert_in_epsilon(3.0, worksheet.lever_graphs_b3964, 0.002); end
  def test_lever_graphs_k3964; assert_in_delta(0.0, (worksheet.lever_graphs_k3964||0), 0.002); end
  def test_lever_graphs_l3964; assert_in_delta(0.0, (worksheet.lever_graphs_l3964||0), 0.002); end
  def test_lever_graphs_m3964; assert_in_delta(0.0, (worksheet.lever_graphs_m3964||0), 0.002); end
  def test_lever_graphs_n3964; assert_in_epsilon(49.005, worksheet.lever_graphs_n3964, 0.002); end
  def test_lever_graphs_o3964; assert_in_epsilon(171.0, worksheet.lever_graphs_o3964, 0.002); end
  def test_lever_graphs_p3964; assert_in_epsilon(227.71499999999997, worksheet.lever_graphs_p3964, 0.002); end
  def test_lever_graphs_q3964; assert_in_epsilon(302.2, worksheet.lever_graphs_q3964, 0.002); end
  def test_lever_graphs_r3964; assert_in_epsilon(372.85499999999996, worksheet.lever_graphs_r3964, 0.002); end
  def test_lever_graphs_s3964; assert_in_epsilon(446.09999999999997, worksheet.lever_graphs_s3964, 0.002); end
  def test_lever_graphs_t3964; assert_equal("Solid fueled", worksheet.lever_graphs_t3964); end
  def test_lever_graphs_u3964; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u3964); end
  def test_lever_graphs_a3965; assert_equal("CCS.solid.super.elec", worksheet.lever_graphs_a3965); end
  def test_lever_graphs_b3965; assert_in_epsilon(4.0, worksheet.lever_graphs_b3965, 0.002); end
  def test_lever_graphs_k3965; assert_in_delta(0.0, (worksheet.lever_graphs_k3965||0), 0.002); end
  def test_lever_graphs_l3965; assert_in_delta(0.0, (worksheet.lever_graphs_l3965||0), 0.002); end
  def test_lever_graphs_m3965; assert_in_delta(0.0, (worksheet.lever_graphs_m3965||0), 0.002); end
  def test_lever_graphs_n3965; assert_in_epsilon(342.0, worksheet.lever_graphs_n3965, 0.002); end
  def test_lever_graphs_o3965; assert_in_epsilon(570.015, worksheet.lever_graphs_o3965, 0.002); end
  def test_lever_graphs_p3965; assert_in_epsilon(753.695, worksheet.lever_graphs_p3965, 0.002); end
  def test_lever_graphs_q3965; assert_in_epsilon(993.1200000000001, worksheet.lever_graphs_q3965, 0.002); end
  def test_lever_graphs_r3965; assert_in_epsilon(1050.0, worksheet.lever_graphs_r3965, 0.002); end
  def test_lever_graphs_s3965; assert_in_epsilon(1110.0, worksheet.lever_graphs_s3965, 0.002); end
  def test_lever_graphs_t3965; assert_equal("Solid fueled", worksheet.lever_graphs_t3965); end
  def test_lever_graphs_u3965; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_u3965); end
  def test_lever_graphs_a3966; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a3966); end
  def test_lever_graphs_b3966; assert_in_delta(1.0, worksheet.lever_graphs_b3966, 0.002); end
  def test_lever_graphs_k3966; assert_in_delta(0.0, (worksheet.lever_graphs_k3966||0), 0.002); end
  def test_lever_graphs_l3966; assert_in_delta(0.0, (worksheet.lever_graphs_l3966||0), 0.002); end
  def test_lever_graphs_m3966; assert_in_delta(0.0, (worksheet.lever_graphs_m3966||0), 0.002); end
  def test_lever_graphs_n3966; assert_in_delta(0.0, (worksheet.lever_graphs_n3966||0), 0.002); end
  def test_lever_graphs_o3966; assert_in_delta(0.0, (worksheet.lever_graphs_o3966||0), 0.002); end
  def test_lever_graphs_p3966; assert_in_delta(0.0, (worksheet.lever_graphs_p3966||0), 0.002); end
  def test_lever_graphs_q3966; assert_in_delta(0.0, (worksheet.lever_graphs_q3966||0), 0.002); end
  def test_lever_graphs_r3966; assert_in_delta(0.0, (worksheet.lever_graphs_r3966||0), 0.002); end
  def test_lever_graphs_s3966; assert_in_delta(0.0, (worksheet.lever_graphs_s3966||0), 0.002); end
  def test_lever_graphs_t3966; assert_equal("Solid fueled", worksheet.lever_graphs_t3966); end
  def test_lever_graphs_u3966; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u3966); end
  def test_lever_graphs_a3967; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a3967); end
  def test_lever_graphs_b3967; assert_in_epsilon(2.0, worksheet.lever_graphs_b3967, 0.002); end
  def test_lever_graphs_k3967; assert_in_delta(0.0, (worksheet.lever_graphs_k3967||0), 0.002); end
  def test_lever_graphs_l3967; assert_in_delta(0.0, (worksheet.lever_graphs_l3967||0), 0.002); end
  def test_lever_graphs_m3967; assert_in_delta(0.0, (worksheet.lever_graphs_m3967||0), 0.002); end
  def test_lever_graphs_n3967; assert_in_delta(0.0, (worksheet.lever_graphs_n3967||0), 0.002); end
  def test_lever_graphs_o3967; assert_in_delta(0.0, (worksheet.lever_graphs_o3967||0), 0.002); end
  def test_lever_graphs_p3967; assert_in_delta(0.0, (worksheet.lever_graphs_p3967||0), 0.002); end
  def test_lever_graphs_q3967; assert_in_delta(0.0, (worksheet.lever_graphs_q3967||0), 0.002); end
  def test_lever_graphs_r3967; assert_in_delta(0.0, (worksheet.lever_graphs_r3967||0), 0.002); end
  def test_lever_graphs_s3967; assert_in_delta(0.0, (worksheet.lever_graphs_s3967||0), 0.002); end
  def test_lever_graphs_t3967; assert_equal("Solid fueled", worksheet.lever_graphs_t3967); end
  def test_lever_graphs_u3967; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u3967); end
  def test_lever_graphs_a3968; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a3968); end
  def test_lever_graphs_b3968; assert_in_epsilon(3.0, worksheet.lever_graphs_b3968, 0.002); end
  def test_lever_graphs_k3968; assert_in_delta(0.0, (worksheet.lever_graphs_k3968||0), 0.002); end
  def test_lever_graphs_l3968; assert_in_delta(0.0, (worksheet.lever_graphs_l3968||0), 0.002); end
  def test_lever_graphs_m3968; assert_in_delta(0.0, (worksheet.lever_graphs_m3968||0), 0.002); end
  def test_lever_graphs_n3968; assert_in_delta(0.0, (worksheet.lever_graphs_n3968||0), 0.002); end
  def test_lever_graphs_o3968; assert_in_delta(0.0, (worksheet.lever_graphs_o3968||0), 0.002); end
  def test_lever_graphs_p3968; assert_in_delta(0.0, (worksheet.lever_graphs_p3968||0), 0.002); end
  def test_lever_graphs_q3968; assert_in_delta(0.0, (worksheet.lever_graphs_q3968||0), 0.002); end
  def test_lever_graphs_r3968; assert_in_delta(0.0, (worksheet.lever_graphs_r3968||0), 0.002); end
  def test_lever_graphs_s3968; assert_in_delta(0.0, (worksheet.lever_graphs_s3968||0), 0.002); end
  def test_lever_graphs_t3968; assert_equal("Solid fueled", worksheet.lever_graphs_t3968); end
  def test_lever_graphs_u3968; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u3968); end
  def test_lever_graphs_a3969; assert_equal("CCS.solid.sub.elec", worksheet.lever_graphs_a3969); end
  def test_lever_graphs_b3969; assert_in_epsilon(4.0, worksheet.lever_graphs_b3969, 0.002); end
  def test_lever_graphs_k3969; assert_in_delta(0.0, (worksheet.lever_graphs_k3969||0), 0.002); end
  def test_lever_graphs_l3969; assert_in_delta(0.0, (worksheet.lever_graphs_l3969||0), 0.002); end
  def test_lever_graphs_m3969; assert_in_delta(0.0, (worksheet.lever_graphs_m3969||0), 0.002); end
  def test_lever_graphs_n3969; assert_in_delta(0.0, (worksheet.lever_graphs_n3969||0), 0.002); end
  def test_lever_graphs_o3969; assert_in_delta(0.0, (worksheet.lever_graphs_o3969||0), 0.002); end
  def test_lever_graphs_p3969; assert_in_delta(0.0, (worksheet.lever_graphs_p3969||0), 0.002); end
  def test_lever_graphs_q3969; assert_in_delta(0.0, (worksheet.lever_graphs_q3969||0), 0.002); end
  def test_lever_graphs_r3969; assert_in_delta(0.0, (worksheet.lever_graphs_r3969||0), 0.002); end
  def test_lever_graphs_s3969; assert_in_delta(0.0, (worksheet.lever_graphs_s3969||0), 0.002); end
  def test_lever_graphs_t3969; assert_equal("Solid fueled", worksheet.lever_graphs_t3969); end
  def test_lever_graphs_u3969; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_u3969); end
  def test_lever_graphs_a3970; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a3970); end
  def test_lever_graphs_b3970; assert_in_delta(1.0, worksheet.lever_graphs_b3970, 0.002); end
  def test_lever_graphs_k3970; assert_in_delta(0.0, (worksheet.lever_graphs_k3970||0), 0.002); end
  def test_lever_graphs_l3970; assert_in_delta(0.0, (worksheet.lever_graphs_l3970||0), 0.002); end
  def test_lever_graphs_m3970; assert_in_delta(0.0, (worksheet.lever_graphs_m3970||0), 0.002); end
  def test_lever_graphs_n3970; assert_in_delta(0.0, (worksheet.lever_graphs_n3970||0), 0.002); end
  def test_lever_graphs_o3970; assert_in_delta(0.0, (worksheet.lever_graphs_o3970||0), 0.002); end
  def test_lever_graphs_p3970; assert_in_delta(0.0, (worksheet.lever_graphs_p3970||0), 0.002); end
  def test_lever_graphs_q3970; assert_in_delta(0.0, (worksheet.lever_graphs_q3970||0), 0.002); end
  def test_lever_graphs_r3970; assert_in_delta(0.0, (worksheet.lever_graphs_r3970||0), 0.002); end
  def test_lever_graphs_s3970; assert_in_delta(0.0, (worksheet.lever_graphs_s3970||0), 0.002); end
  def test_lever_graphs_t3970; assert_equal("Liquid fueled", worksheet.lever_graphs_t3970); end
  def test_lever_graphs_u3970; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u3970); end
  def test_lever_graphs_a3971; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a3971); end
  def test_lever_graphs_b3971; assert_in_epsilon(2.0, worksheet.lever_graphs_b3971, 0.002); end
  def test_lever_graphs_k3971; assert_in_delta(0.0, (worksheet.lever_graphs_k3971||0), 0.002); end
  def test_lever_graphs_l3971; assert_in_delta(0.0, (worksheet.lever_graphs_l3971||0), 0.002); end
  def test_lever_graphs_m3971; assert_in_delta(0.0, (worksheet.lever_graphs_m3971||0), 0.002); end
  def test_lever_graphs_n3971; assert_in_delta(0.0, (worksheet.lever_graphs_n3971||0), 0.002); end
  def test_lever_graphs_o3971; assert_in_delta(0.0, (worksheet.lever_graphs_o3971||0), 0.002); end
  def test_lever_graphs_p3971; assert_in_delta(0.0, (worksheet.lever_graphs_p3971||0), 0.002); end
  def test_lever_graphs_q3971; assert_in_delta(0.0, (worksheet.lever_graphs_q3971||0), 0.002); end
  def test_lever_graphs_r3971; assert_in_delta(0.0, (worksheet.lever_graphs_r3971||0), 0.002); end
  def test_lever_graphs_s3971; assert_in_delta(0.0, (worksheet.lever_graphs_s3971||0), 0.002); end
  def test_lever_graphs_t3971; assert_equal("Liquid fueled", worksheet.lever_graphs_t3971); end
  def test_lever_graphs_u3971; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u3971); end
  def test_lever_graphs_a3972; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a3972); end
  def test_lever_graphs_b3972; assert_in_epsilon(3.0, worksheet.lever_graphs_b3972, 0.002); end
  def test_lever_graphs_k3972; assert_in_delta(0.0, (worksheet.lever_graphs_k3972||0), 0.002); end
  def test_lever_graphs_l3972; assert_in_delta(0.0, (worksheet.lever_graphs_l3972||0), 0.002); end
  def test_lever_graphs_m3972; assert_in_delta(0.0, (worksheet.lever_graphs_m3972||0), 0.002); end
  def test_lever_graphs_n3972; assert_in_delta(0.0, (worksheet.lever_graphs_n3972||0), 0.002); end
  def test_lever_graphs_o3972; assert_in_delta(0.0, (worksheet.lever_graphs_o3972||0), 0.002); end
  def test_lever_graphs_p3972; assert_in_delta(0.0, (worksheet.lever_graphs_p3972||0), 0.002); end
  def test_lever_graphs_q3972; assert_in_delta(0.0, (worksheet.lever_graphs_q3972||0), 0.002); end
  def test_lever_graphs_r3972; assert_in_delta(0.0, (worksheet.lever_graphs_r3972||0), 0.002); end
  def test_lever_graphs_s3972; assert_in_delta(0.0, (worksheet.lever_graphs_s3972||0), 0.002); end
  def test_lever_graphs_t3972; assert_equal("Liquid fueled", worksheet.lever_graphs_t3972); end
  def test_lever_graphs_u3972; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u3972); end
  def test_lever_graphs_a3973; assert_equal("CCS.liquid.new.tech.elec", worksheet.lever_graphs_a3973); end
  def test_lever_graphs_b3973; assert_in_epsilon(4.0, worksheet.lever_graphs_b3973, 0.002); end
  def test_lever_graphs_k3973; assert_in_delta(0.0, (worksheet.lever_graphs_k3973||0), 0.002); end
  def test_lever_graphs_l3973; assert_in_delta(0.0, (worksheet.lever_graphs_l3973||0), 0.002); end
  def test_lever_graphs_m3973; assert_in_delta(0.0, (worksheet.lever_graphs_m3973||0), 0.002); end
  def test_lever_graphs_n3973; assert_in_delta(0.0, (worksheet.lever_graphs_n3973||0), 0.002); end
  def test_lever_graphs_o3973; assert_in_delta(0.0, (worksheet.lever_graphs_o3973||0), 0.002); end
  def test_lever_graphs_p3973; assert_in_delta(0.0, (worksheet.lever_graphs_p3973||0), 0.002); end
  def test_lever_graphs_q3973; assert_in_delta(0.0, (worksheet.lever_graphs_q3973||0), 0.002); end
  def test_lever_graphs_r3973; assert_in_delta(0.0, (worksheet.lever_graphs_r3973||0), 0.002); end
  def test_lever_graphs_s3973; assert_in_delta(0.0, (worksheet.lever_graphs_s3973||0), 0.002); end
  def test_lever_graphs_t3973; assert_equal("Liquid fueled", worksheet.lever_graphs_t3973); end
  def test_lever_graphs_u3973; assert_equal("Liquid-fuel efficient power plant", worksheet.lever_graphs_u3973); end
  def test_lever_graphs_a3974; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a3974); end
  def test_lever_graphs_b3974; assert_in_delta(1.0, worksheet.lever_graphs_b3974, 0.002); end
  def test_lever_graphs_k3974; assert_in_delta(0.0, (worksheet.lever_graphs_k3974||0), 0.002); end
  def test_lever_graphs_l3974; assert_in_delta(0.0, (worksheet.lever_graphs_l3974||0), 0.002); end
  def test_lever_graphs_m3974; assert_in_delta(0.0, (worksheet.lever_graphs_m3974||0), 0.002); end
  def test_lever_graphs_n3974; assert_in_delta(0.0, (worksheet.lever_graphs_n3974||0), 0.002); end
  def test_lever_graphs_o3974; assert_in_delta(0.0, (worksheet.lever_graphs_o3974||0), 0.002); end
  def test_lever_graphs_p3974; assert_in_delta(0.0, (worksheet.lever_graphs_p3974||0), 0.002); end
  def test_lever_graphs_q3974; assert_in_delta(0.0, (worksheet.lever_graphs_q3974||0), 0.002); end
  def test_lever_graphs_r3974; assert_in_delta(0.0, (worksheet.lever_graphs_r3974||0), 0.002); end
  def test_lever_graphs_s3974; assert_in_delta(0.0, (worksheet.lever_graphs_s3974||0), 0.002); end
  def test_lever_graphs_t3974; assert_equal("Liquid fueled", worksheet.lever_graphs_t3974); end
  def test_lever_graphs_u3974; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u3974); end
  def test_lever_graphs_a3975; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a3975); end
  def test_lever_graphs_b3975; assert_in_epsilon(2.0, worksheet.lever_graphs_b3975, 0.002); end
  def test_lever_graphs_k3975; assert_in_delta(0.0, (worksheet.lever_graphs_k3975||0), 0.002); end
  def test_lever_graphs_l3975; assert_in_delta(0.0, (worksheet.lever_graphs_l3975||0), 0.002); end
  def test_lever_graphs_m3975; assert_in_delta(0.0, (worksheet.lever_graphs_m3975||0), 0.002); end
  def test_lever_graphs_n3975; assert_in_delta(0.0, (worksheet.lever_graphs_n3975||0), 0.002); end
  def test_lever_graphs_o3975; assert_in_delta(0.0, (worksheet.lever_graphs_o3975||0), 0.002); end
  def test_lever_graphs_p3975; assert_in_delta(0.0, (worksheet.lever_graphs_p3975||0), 0.002); end
  def test_lever_graphs_q3975; assert_in_delta(0.0, (worksheet.lever_graphs_q3975||0), 0.002); end
  def test_lever_graphs_r3975; assert_in_delta(0.0, (worksheet.lever_graphs_r3975||0), 0.002); end
  def test_lever_graphs_s3975; assert_in_delta(0.0, (worksheet.lever_graphs_s3975||0), 0.002); end
  def test_lever_graphs_t3975; assert_equal("Liquid fueled", worksheet.lever_graphs_t3975); end
  def test_lever_graphs_u3975; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u3975); end
  def test_lever_graphs_a3976; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a3976); end
  def test_lever_graphs_b3976; assert_in_epsilon(3.0, worksheet.lever_graphs_b3976, 0.002); end
  def test_lever_graphs_k3976; assert_in_delta(0.0, (worksheet.lever_graphs_k3976||0), 0.002); end
  def test_lever_graphs_l3976; assert_in_delta(0.0, (worksheet.lever_graphs_l3976||0), 0.002); end
  def test_lever_graphs_m3976; assert_in_delta(0.0, (worksheet.lever_graphs_m3976||0), 0.002); end
  def test_lever_graphs_n3976; assert_in_delta(0.0, (worksheet.lever_graphs_n3976||0), 0.002); end
  def test_lever_graphs_o3976; assert_in_delta(0.0, (worksheet.lever_graphs_o3976||0), 0.002); end
  def test_lever_graphs_p3976; assert_in_delta(0.0, (worksheet.lever_graphs_p3976||0), 0.002); end
  def test_lever_graphs_q3976; assert_in_delta(0.0, (worksheet.lever_graphs_q3976||0), 0.002); end
  def test_lever_graphs_r3976; assert_in_delta(0.0, (worksheet.lever_graphs_r3976||0), 0.002); end
  def test_lever_graphs_s3976; assert_in_delta(0.0, (worksheet.lever_graphs_s3976||0), 0.002); end
  def test_lever_graphs_t3976; assert_equal("Liquid fueled", worksheet.lever_graphs_t3976); end
  def test_lever_graphs_u3976; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u3976); end
  def test_lever_graphs_a3977; assert_equal("CCS.liquid.old.tech.elec", worksheet.lever_graphs_a3977); end
  def test_lever_graphs_b3977; assert_in_epsilon(4.0, worksheet.lever_graphs_b3977, 0.002); end
  def test_lever_graphs_k3977; assert_in_delta(0.0, (worksheet.lever_graphs_k3977||0), 0.002); end
  def test_lever_graphs_l3977; assert_in_delta(0.0, (worksheet.lever_graphs_l3977||0), 0.002); end
  def test_lever_graphs_m3977; assert_in_delta(0.0, (worksheet.lever_graphs_m3977||0), 0.002); end
  def test_lever_graphs_n3977; assert_in_delta(0.0, (worksheet.lever_graphs_n3977||0), 0.002); end
  def test_lever_graphs_o3977; assert_in_delta(0.0, (worksheet.lever_graphs_o3977||0), 0.002); end
  def test_lever_graphs_p3977; assert_in_delta(0.0, (worksheet.lever_graphs_p3977||0), 0.002); end
  def test_lever_graphs_q3977; assert_in_delta(0.0, (worksheet.lever_graphs_q3977||0), 0.002); end
  def test_lever_graphs_r3977; assert_in_delta(0.0, (worksheet.lever_graphs_r3977||0), 0.002); end
  def test_lever_graphs_s3977; assert_in_delta(0.0, (worksheet.lever_graphs_s3977||0), 0.002); end
  def test_lever_graphs_t3977; assert_equal("Liquid fueled", worksheet.lever_graphs_t3977); end
  def test_lever_graphs_u3977; assert_equal("liquid-fuel inefficient power plant", worksheet.lever_graphs_u3977); end
  def test_lever_graphs_a3978; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a3978); end
  def test_lever_graphs_b3978; assert_in_delta(1.0, worksheet.lever_graphs_b3978, 0.002); end
  def test_lever_graphs_k3978; assert_in_delta(0.0, (worksheet.lever_graphs_k3978||0), 0.002); end
  def test_lever_graphs_l3978; assert_in_delta(0.0, (worksheet.lever_graphs_l3978||0), 0.002); end
  def test_lever_graphs_m3978; assert_in_delta(0.0, (worksheet.lever_graphs_m3978||0), 0.002); end
  def test_lever_graphs_n3978; assert_in_epsilon(1.6, worksheet.lever_graphs_n3978, 0.002); end
  def test_lever_graphs_o3978; assert_in_epsilon(1.6, worksheet.lever_graphs_o3978, 0.002); end
  def test_lever_graphs_p3978; assert_in_epsilon(2.4, worksheet.lever_graphs_p3978, 0.002); end
  def test_lever_graphs_q3978; assert_in_epsilon(3.2, worksheet.lever_graphs_q3978, 0.002); end
  def test_lever_graphs_r3978; assert_in_epsilon(4.8, worksheet.lever_graphs_r3978, 0.002); end
  def test_lever_graphs_s3978; assert_in_epsilon(6.4, worksheet.lever_graphs_s3978, 0.002); end
  def test_lever_graphs_t3978; assert_equal("Gas fueled", worksheet.lever_graphs_t3978); end
  def test_lever_graphs_u3978; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u3978); end
  def test_lever_graphs_a3979; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a3979); end
  def test_lever_graphs_b3979; assert_in_epsilon(2.0, worksheet.lever_graphs_b3979, 0.002); end
  def test_lever_graphs_k3979; assert_in_delta(0.0, (worksheet.lever_graphs_k3979||0), 0.002); end
  def test_lever_graphs_l3979; assert_in_delta(0.0, (worksheet.lever_graphs_l3979||0), 0.002); end
  def test_lever_graphs_m3979; assert_in_delta(0.0, (worksheet.lever_graphs_m3979||0), 0.002); end
  def test_lever_graphs_n3979; assert_in_epsilon(3.6, worksheet.lever_graphs_n3979, 0.002); end
  def test_lever_graphs_o3979; assert_in_epsilon(11.4, worksheet.lever_graphs_o3979, 0.002); end
  def test_lever_graphs_p3979; assert_in_epsilon(23.939999999999998, worksheet.lever_graphs_p3979, 0.002); end
  def test_lever_graphs_q3979; assert_in_epsilon(44.68000000000001, worksheet.lever_graphs_q3979, 0.002); end
  def test_lever_graphs_r3979; assert_in_epsilon(93.84, worksheet.lever_graphs_r3979, 0.002); end
  def test_lever_graphs_s3979; assert_in_epsilon(196.0, worksheet.lever_graphs_s3979, 0.002); end
  def test_lever_graphs_t3979; assert_equal("Gas fueled", worksheet.lever_graphs_t3979); end
  def test_lever_graphs_u3979; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u3979); end
  def test_lever_graphs_a3980; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a3980); end
  def test_lever_graphs_b3980; assert_in_epsilon(3.0, worksheet.lever_graphs_b3980, 0.002); end
  def test_lever_graphs_k3980; assert_in_delta(0.0, (worksheet.lever_graphs_k3980||0), 0.002); end
  def test_lever_graphs_l3980; assert_in_delta(0.0, (worksheet.lever_graphs_l3980||0), 0.002); end
  def test_lever_graphs_m3980; assert_in_delta(0.0, (worksheet.lever_graphs_m3980||0), 0.002); end
  def test_lever_graphs_n3980; assert_in_epsilon(10.89, worksheet.lever_graphs_n3980, 0.002); end
  def test_lever_graphs_o3980; assert_in_epsilon(38.0, worksheet.lever_graphs_o3980, 0.002); end
  def test_lever_graphs_p3980; assert_in_epsilon(80.36999999999999, worksheet.lever_graphs_p3980, 0.002); end
  def test_lever_graphs_q3980; assert_in_epsilon(151.1, worksheet.lever_graphs_q3980, 0.002); end
  def test_lever_graphs_r3980; assert_in_epsilon(319.59, worksheet.lever_graphs_r3980, 0.002); end
  def test_lever_graphs_s3980; assert_in_epsilon(594.8000000000001, worksheet.lever_graphs_s3980, 0.002); end
  def test_lever_graphs_t3980; assert_equal("Gas fueled", worksheet.lever_graphs_t3980); end
  def test_lever_graphs_u3980; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u3980); end
  def test_lever_graphs_a3981; assert_equal("CCS.gas.OC.elec", worksheet.lever_graphs_a3981); end
  def test_lever_graphs_b3981; assert_in_epsilon(4.0, worksheet.lever_graphs_b3981, 0.002); end
  def test_lever_graphs_k3981; assert_in_delta(0.0, (worksheet.lever_graphs_k3981||0), 0.002); end
  def test_lever_graphs_l3981; assert_in_delta(0.0, (worksheet.lever_graphs_l3981||0), 0.002); end
  def test_lever_graphs_m3981; assert_in_delta(0.0, (worksheet.lever_graphs_m3981||0), 0.002); end
  def test_lever_graphs_n3981; assert_in_epsilon(76.0, worksheet.lever_graphs_n3981, 0.002); end
  def test_lever_graphs_o3981; assert_in_epsilon(126.67000000000002, worksheet.lever_graphs_o3981, 0.002); end
  def test_lever_graphs_p3981; assert_in_epsilon(266.01, worksheet.lever_graphs_p3981, 0.002); end
  def test_lever_graphs_q3981; assert_in_epsilon(496.56000000000006, worksheet.lever_graphs_q3981, 0.002); end
  def test_lever_graphs_r3981; assert_in_epsilon(900.0, worksheet.lever_graphs_r3981, 0.002); end
  def test_lever_graphs_s3981; assert_in_epsilon(1480.0, worksheet.lever_graphs_s3981, 0.002); end
  def test_lever_graphs_t3981; assert_equal("Gas fueled", worksheet.lever_graphs_t3981); end
  def test_lever_graphs_u3981; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_u3981); end
  def test_lever_graphs_a3982; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a3982); end
  def test_lever_graphs_b3982; assert_in_delta(1.0, worksheet.lever_graphs_b3982, 0.002); end
  def test_lever_graphs_k3982; assert_in_delta(0.0, (worksheet.lever_graphs_k3982||0), 0.002); end
  def test_lever_graphs_l3982; assert_in_delta(0.0, (worksheet.lever_graphs_l3982||0), 0.002); end
  def test_lever_graphs_m3982; assert_in_delta(0.0, (worksheet.lever_graphs_m3982||0), 0.002); end
  def test_lever_graphs_n3982; assert_in_delta(0.0, (worksheet.lever_graphs_n3982||0), 0.002); end
  def test_lever_graphs_o3982; assert_in_delta(0.0, (worksheet.lever_graphs_o3982||0), 0.002); end
  def test_lever_graphs_p3982; assert_in_delta(0.0, (worksheet.lever_graphs_p3982||0), 0.002); end
  def test_lever_graphs_q3982; assert_in_delta(0.0, (worksheet.lever_graphs_q3982||0), 0.002); end
  def test_lever_graphs_r3982; assert_in_delta(0.0, (worksheet.lever_graphs_r3982||0), 0.002); end
  def test_lever_graphs_s3982; assert_in_delta(0.0, (worksheet.lever_graphs_s3982||0), 0.002); end
  def test_lever_graphs_t3982; assert_equal("Gas fueled", worksheet.lever_graphs_t3982); end
  def test_lever_graphs_u3982; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u3982); end
  def test_lever_graphs_a3983; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a3983); end
  def test_lever_graphs_b3983; assert_in_epsilon(2.0, worksheet.lever_graphs_b3983, 0.002); end
  def test_lever_graphs_k3983; assert_in_delta(0.0, (worksheet.lever_graphs_k3983||0), 0.002); end
  def test_lever_graphs_l3983; assert_in_delta(0.0, (worksheet.lever_graphs_l3983||0), 0.002); end
  def test_lever_graphs_m3983; assert_in_delta(0.0, (worksheet.lever_graphs_m3983||0), 0.002); end
  def test_lever_graphs_n3983; assert_in_delta(0.0, (worksheet.lever_graphs_n3983||0), 0.002); end
  def test_lever_graphs_o3983; assert_in_delta(0.0, (worksheet.lever_graphs_o3983||0), 0.002); end
  def test_lever_graphs_p3983; assert_in_delta(0.0, (worksheet.lever_graphs_p3983||0), 0.002); end
  def test_lever_graphs_q3983; assert_in_delta(0.0, (worksheet.lever_graphs_q3983||0), 0.002); end
  def test_lever_graphs_r3983; assert_in_delta(0.0, (worksheet.lever_graphs_r3983||0), 0.002); end
  def test_lever_graphs_s3983; assert_in_delta(0.0, (worksheet.lever_graphs_s3983||0), 0.002); end
  def test_lever_graphs_t3983; assert_equal("Gas fueled", worksheet.lever_graphs_t3983); end
  def test_lever_graphs_u3983; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u3983); end
  def test_lever_graphs_a3984; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a3984); end
  def test_lever_graphs_b3984; assert_in_epsilon(3.0, worksheet.lever_graphs_b3984, 0.002); end
  def test_lever_graphs_k3984; assert_in_delta(0.0, (worksheet.lever_graphs_k3984||0), 0.002); end
  def test_lever_graphs_l3984; assert_in_delta(0.0, (worksheet.lever_graphs_l3984||0), 0.002); end
  def test_lever_graphs_m3984; assert_in_delta(0.0, (worksheet.lever_graphs_m3984||0), 0.002); end
  def test_lever_graphs_n3984; assert_in_delta(0.0, (worksheet.lever_graphs_n3984||0), 0.002); end
  def test_lever_graphs_o3984; assert_in_delta(0.0, (worksheet.lever_graphs_o3984||0), 0.002); end
  def test_lever_graphs_p3984; assert_in_delta(0.0, (worksheet.lever_graphs_p3984||0), 0.002); end
  def test_lever_graphs_q3984; assert_in_delta(0.0, (worksheet.lever_graphs_q3984||0), 0.002); end
  def test_lever_graphs_r3984; assert_in_delta(0.0, (worksheet.lever_graphs_r3984||0), 0.002); end
  def test_lever_graphs_s3984; assert_in_delta(0.0, (worksheet.lever_graphs_s3984||0), 0.002); end
  def test_lever_graphs_t3984; assert_equal("Gas fueled", worksheet.lever_graphs_t3984); end
  def test_lever_graphs_u3984; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u3984); end
  def test_lever_graphs_a3985; assert_equal("CCS.gas.CC.elec", worksheet.lever_graphs_a3985); end
  def test_lever_graphs_b3985; assert_in_epsilon(4.0, worksheet.lever_graphs_b3985, 0.002); end
  def test_lever_graphs_k3985; assert_in_delta(0.0, (worksheet.lever_graphs_k3985||0), 0.002); end
  def test_lever_graphs_l3985; assert_in_delta(0.0, (worksheet.lever_graphs_l3985||0), 0.002); end
  def test_lever_graphs_m3985; assert_in_delta(0.0, (worksheet.lever_graphs_m3985||0), 0.002); end
  def test_lever_graphs_n3985; assert_in_delta(0.0, (worksheet.lever_graphs_n3985||0), 0.002); end
  def test_lever_graphs_o3985; assert_in_delta(0.0, (worksheet.lever_graphs_o3985||0), 0.002); end
  def test_lever_graphs_p3985; assert_in_delta(0.0, (worksheet.lever_graphs_p3985||0), 0.002); end
  def test_lever_graphs_q3985; assert_in_delta(0.0, (worksheet.lever_graphs_q3985||0), 0.002); end
  def test_lever_graphs_r3985; assert_in_delta(0.0, (worksheet.lever_graphs_r3985||0), 0.002); end
  def test_lever_graphs_s3985; assert_in_delta(0.0, (worksheet.lever_graphs_s3985||0), 0.002); end
  def test_lever_graphs_t3985; assert_equal("Gas fueled", worksheet.lever_graphs_t3985); end
  def test_lever_graphs_u3985; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_u3985); end
  def test_webtool_graphs_b39; assert_equal("Area", worksheet.webtool_graphs_b39); end
  def test_webtool_graphs_c39; assert_equal("Description", worksheet.webtool_graphs_c39); end
  def test_webtool_graphs_d39; assert_equal("1975", worksheet.webtool_graphs_d39); end
  def test_webtool_graphs_e39; assert_equal("1980", worksheet.webtool_graphs_e39); end
  def test_webtool_graphs_f39; assert_equal("1985", worksheet.webtool_graphs_f39); end
  def test_webtool_graphs_g39; assert_equal("1990", worksheet.webtool_graphs_g39); end
  def test_webtool_graphs_h39; assert_equal("1995", worksheet.webtool_graphs_h39); end
  def test_webtool_graphs_i39; assert_equal("2000", worksheet.webtool_graphs_i39); end
  def test_webtool_graphs_j39; assert_equal("2005", worksheet.webtool_graphs_j39); end
  def test_webtool_graphs_k39; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k39, 0.002); end
  def test_webtool_graphs_l39; assert_equal("2011", worksheet.webtool_graphs_l39); end
  def test_webtool_graphs_m39; assert_equal("2015", worksheet.webtool_graphs_m39); end
  def test_webtool_graphs_n39; assert_equal("2020", worksheet.webtool_graphs_n39); end
  def test_webtool_graphs_o39; assert_equal("2025", worksheet.webtool_graphs_o39); end
  def test_webtool_graphs_p39; assert_equal("2030", worksheet.webtool_graphs_p39); end
  def test_webtool_graphs_q39; assert_equal("2035", worksheet.webtool_graphs_q39); end
  def test_webtool_graphs_r39; assert_equal("2040", worksheet.webtool_graphs_r39); end
  def test_webtool_graphs_s39; assert_equal("2045", worksheet.webtool_graphs_s39); end
  def test_webtool_graphs_t39; assert_equal("2050", worksheet.webtool_graphs_t39); end
  def test_webtool_graphs_b40; assert_equal("Urban", worksheet.webtool_graphs_b40); end
  def test_webtool_graphs_c40; assert_equal("urban", worksheet.webtool_graphs_c40); end
  def test_webtool_graphs_l40; assert_in_epsilon(5.958364024436915, worksheet.webtool_graphs_l40, 0.002); end
  def test_webtool_graphs_m40; assert_in_epsilon(6.195, worksheet.webtool_graphs_m40, 0.002); end
  def test_webtool_graphs_n40; assert_in_epsilon(6.675568266727666, worksheet.webtool_graphs_n40, 0.002); end
  def test_webtool_graphs_o40; assert_in_epsilon(7.156136533455333, worksheet.webtool_graphs_o40, 0.002); end
  def test_webtool_graphs_p40; assert_in_epsilon(7.636704800183002, worksheet.webtool_graphs_p40, 0.002); end
  def test_webtool_graphs_q40; assert_in_epsilon(8.117273066910668, worksheet.webtool_graphs_q40, 0.002); end
  def test_webtool_graphs_r40; assert_in_epsilon(8.597841333638337, worksheet.webtool_graphs_r40, 0.002); end
  def test_webtool_graphs_s40; assert_in_epsilon(9.078409600366003, worksheet.webtool_graphs_s40, 0.002); end
  def test_webtool_graphs_t40; assert_in_epsilon(9.558977867093672, worksheet.webtool_graphs_t40, 0.002); end
  def test_webtool_graphs_b41; assert_equal("Rural", worksheet.webtool_graphs_b41); end
  def test_webtool_graphs_c41; assert_equal("rural", worksheet.webtool_graphs_c41); end
  def test_webtool_graphs_l41; assert_in_epsilon(3.4791820122184576, worksheet.webtool_graphs_l41, 0.002); end
  def test_webtool_graphs_m41; assert_in_epsilon(5.098, worksheet.webtool_graphs_m41, 0.002); end
  def test_webtool_graphs_n41; assert_in_epsilon(5.442575801867429, worksheet.webtool_graphs_n41, 0.002); end
  def test_webtool_graphs_o41; assert_in_epsilon(5.787151603734858, worksheet.webtool_graphs_o41, 0.002); end
  def test_webtool_graphs_p41; assert_in_epsilon(6.131727405602287, worksheet.webtool_graphs_p41, 0.002); end
  def test_webtool_graphs_q41; assert_in_epsilon(6.476303207469717, worksheet.webtool_graphs_q41, 0.002); end
  def test_webtool_graphs_r41; assert_in_epsilon(6.820879009337146, worksheet.webtool_graphs_r41, 0.002); end
  def test_webtool_graphs_s41; assert_in_epsilon(7.165454811204575, worksheet.webtool_graphs_s41, 0.002); end
  def test_webtool_graphs_t41; assert_in_epsilon(7.510030613072004, worksheet.webtool_graphs_t41, 0.002); end
  def test_webtool_graphs_b389; assert_equal("Type of city", worksheet.webtool_graphs_b389); end
  def test_webtool_graphs_c389; assert_equal("Energy description", worksheet.webtool_graphs_c389); end
  def test_webtool_graphs_d389; assert_equal("1975", worksheet.webtool_graphs_d389); end
  def test_webtool_graphs_e389; assert_equal("1980", worksheet.webtool_graphs_e389); end
  def test_webtool_graphs_f389; assert_equal("1985", worksheet.webtool_graphs_f389); end
  def test_webtool_graphs_g389; assert_equal("1990", worksheet.webtool_graphs_g389); end
  def test_webtool_graphs_h389; assert_equal("1995", worksheet.webtool_graphs_h389); end
  def test_webtool_graphs_i389; assert_equal("2000", worksheet.webtool_graphs_i389); end
  def test_webtool_graphs_j389; assert_equal("2005", worksheet.webtool_graphs_j389); end
  def test_webtool_graphs_k389; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k389, 0.002); end
  def test_webtool_graphs_l389; assert_equal("2011", worksheet.webtool_graphs_l389); end
  def test_webtool_graphs_m389; assert_equal("2015", worksheet.webtool_graphs_m389); end
  def test_webtool_graphs_n389; assert_equal("2020", worksheet.webtool_graphs_n389); end
  def test_webtool_graphs_o389; assert_equal("2025", worksheet.webtool_graphs_o389); end
  def test_webtool_graphs_p389; assert_equal("2030", worksheet.webtool_graphs_p389); end
  def test_webtool_graphs_q389; assert_equal("2035", worksheet.webtool_graphs_q389); end
  def test_webtool_graphs_r389; assert_equal("2040", worksheet.webtool_graphs_r389); end
  def test_webtool_graphs_s389; assert_equal("2045", worksheet.webtool_graphs_s389); end
  def test_webtool_graphs_t389; assert_equal("2050", worksheet.webtool_graphs_t389); end
  def test_webtool_graphs_b390; assert_equal("All", worksheet.webtool_graphs_b390); end
  def test_webtool_graphs_c390; assert_equal("Global Heating", worksheet.webtool_graphs_c390); end
  def test_webtool_graphs_j390; assert_equal("", worksheet.webtool_graphs_j390); end
  def test_webtool_graphs_l390; assert_in_epsilon(33.96364333779204, worksheet.webtool_graphs_l390, 0.002); end
  def test_webtool_graphs_m390; assert_in_epsilon(35.98007831980968, worksheet.webtool_graphs_m390, 0.002); end
  def test_webtool_graphs_n390; assert_in_epsilon(37.68820022072218, worksheet.webtool_graphs_n390, 0.002); end
  def test_webtool_graphs_o390; assert_in_epsilon(38.89850796640654, worksheet.webtool_graphs_o390, 0.002); end
  def test_webtool_graphs_p390; assert_in_epsilon(39.74306778447201, worksheet.webtool_graphs_p390, 0.002); end
  def test_webtool_graphs_q390; assert_in_epsilon(40.47025230784443, worksheet.webtool_graphs_q390, 0.002); end
  def test_webtool_graphs_r390; assert_in_epsilon(40.85682422710526, worksheet.webtool_graphs_r390, 0.002); end
  def test_webtool_graphs_s390; assert_in_epsilon(41.20349868010442, worksheet.webtool_graphs_s390, 0.002); end
  def test_webtool_graphs_t390; assert_in_epsilon(41.221528293303, worksheet.webtool_graphs_t390, 0.002); end
  def test_webtool_graphs_b391; assert_equal("All", worksheet.webtool_graphs_b391); end
  def test_webtool_graphs_c391; assert_equal("Global Cooling", worksheet.webtool_graphs_c391); end
  def test_webtool_graphs_l391; assert_in_epsilon(4.628649152766226, worksheet.webtool_graphs_l391, 0.002); end
  def test_webtool_graphs_m391; assert_in_epsilon(5.508123862979256, worksheet.webtool_graphs_m391, 0.002); end
  def test_webtool_graphs_n391; assert_in_epsilon(6.712966080138285, worksheet.webtool_graphs_n391, 0.002); end
  def test_webtool_graphs_o391; assert_in_epsilon(8.015693149220917, worksheet.webtool_graphs_o391, 0.002); end
  def test_webtool_graphs_p391; assert_in_epsilon(9.389304788675584, worksheet.webtool_graphs_p391, 0.002); end
  def test_webtool_graphs_q391; assert_in_epsilon(10.785069128120671, worksheet.webtool_graphs_q391, 0.002); end
  def test_webtool_graphs_r391; assert_in_epsilon(12.202976902659078, worksheet.webtool_graphs_r391, 0.002); end
  def test_webtool_graphs_s391; assert_in_epsilon(13.582150525056585, worksheet.webtool_graphs_s391, 0.002); end
  def test_webtool_graphs_t391; assert_in_epsilon(14.927413426716765, worksheet.webtool_graphs_t391, 0.002); end
  def test_webtool_graphs_b392; assert_equal("All", worksheet.webtool_graphs_b392); end
  def test_webtool_graphs_c392; assert_equal("Global Hot water", worksheet.webtool_graphs_c392); end
  def test_webtool_graphs_l392; assert_in_epsilon(20.64814831202377, worksheet.webtool_graphs_l392, 0.002); end
  def test_webtool_graphs_m392; assert_in_epsilon(22.394160941356258, worksheet.webtool_graphs_m392, 0.002); end
  def test_webtool_graphs_n392; assert_in_epsilon(23.919669481473726, worksheet.webtool_graphs_n392, 0.002); end
  def test_webtool_graphs_o392; assert_in_epsilon(25.42109495650463, worksheet.webtool_graphs_o392, 0.002); end
  def test_webtool_graphs_p392; assert_in_epsilon(26.81743565027899, worksheet.webtool_graphs_p392, 0.002); end
  def test_webtool_graphs_q392; assert_in_epsilon(28.000686909155093, worksheet.webtool_graphs_q392, 0.002); end
  def test_webtool_graphs_r392; assert_in_epsilon(29.077221539751392, worksheet.webtool_graphs_r392, 0.002); end
  def test_webtool_graphs_s392; assert_in_epsilon(29.941659844986358, worksheet.webtool_graphs_s392, 0.002); end
  def test_webtool_graphs_t392; assert_in_epsilon(30.686157039619722, worksheet.webtool_graphs_t392, 0.002); end
  def test_webtool_graphs_b393; assert_equal("All", worksheet.webtool_graphs_b393); end
  def test_webtool_graphs_c393; assert_equal("Global Appliances", worksheet.webtool_graphs_c393); end
  def test_webtool_graphs_l393; assert_in_epsilon(21.626193072260964, worksheet.webtool_graphs_l393, 0.002); end
  def test_webtool_graphs_m393; assert_in_epsilon(24.597267154647966, worksheet.webtool_graphs_m393, 0.002); end
  def test_webtool_graphs_n393; assert_in_epsilon(27.54565088640981, worksheet.webtool_graphs_n393, 0.002); end
  def test_webtool_graphs_o393; assert_in_epsilon(30.568758847517095, worksheet.webtool_graphs_o393, 0.002); end
  def test_webtool_graphs_p393; assert_in_epsilon(33.6058781747328, worksheet.webtool_graphs_p393, 0.002); end
  def test_webtool_graphs_q393; assert_in_epsilon(36.564888584180764, worksheet.webtool_graphs_q393, 0.002); end
  def test_webtool_graphs_r393; assert_in_epsilon(39.493302602763706, worksheet.webtool_graphs_r393, 0.002); end
  def test_webtool_graphs_s393; assert_in_epsilon(42.28453600355034, worksheet.webtool_graphs_s393, 0.002); end
  def test_webtool_graphs_t393; assert_in_epsilon(44.995321193861585, worksheet.webtool_graphs_t393, 0.002); end
  def test_webtool_graphs_b394; assert_equal("All", worksheet.webtool_graphs_b394); end
  def test_webtool_graphs_c394; assert_equal("Global Cooking", worksheet.webtool_graphs_c394); end
  def test_webtool_graphs_l394; assert_in_epsilon(24.331916753204318, worksheet.webtool_graphs_l394, 0.002); end
  def test_webtool_graphs_m394; assert_in_epsilon(23.78985015284648, worksheet.webtool_graphs_m394, 0.002); end
  def test_webtool_graphs_n394; assert_in_epsilon(22.866319960062626, worksheet.webtool_graphs_n394, 0.002); end
  def test_webtool_graphs_o394; assert_in_epsilon(22.00942583911199, worksheet.webtool_graphs_o394, 0.002); end
  def test_webtool_graphs_p394; assert_in_epsilon(21.211794071221334, worksheet.webtool_graphs_p394, 0.002); end
  def test_webtool_graphs_q394; assert_in_epsilon(20.49146533692284, worksheet.webtool_graphs_q394, 0.002); end
  def test_webtool_graphs_r394; assert_in_epsilon(19.785055798011946, worksheet.webtool_graphs_r394, 0.002); end
  def test_webtool_graphs_s394; assert_in_epsilon(19.12075571391712, worksheet.webtool_graphs_s394, 0.002); end
  def test_webtool_graphs_t394; assert_in_epsilon(18.440677810392458, worksheet.webtool_graphs_t394, 0.002); end
  def test_webtool_graphs_b395; assert_equal("All", worksheet.webtool_graphs_b395); end
  def test_webtool_graphs_c395; assert_equal("Global Lighting", worksheet.webtool_graphs_c395); end
  def test_webtool_graphs_l395; assert_in_epsilon(7.473070166508138, worksheet.webtool_graphs_l395, 0.002); end
  def test_webtool_graphs_m395; assert_in_epsilon(8.566262925209225, worksheet.webtool_graphs_m395, 0.002); end
  def test_webtool_graphs_n395; assert_in_epsilon(9.708365400548766, worksheet.webtool_graphs_n395, 0.002); end
  def test_webtool_graphs_o395; assert_in_epsilon(10.890552444923493, worksheet.webtool_graphs_o395, 0.002); end
  def test_webtool_graphs_p395; assert_in_epsilon(12.093911223930817, worksheet.webtool_graphs_p395, 0.002); end
  def test_webtool_graphs_q395; assert_in_epsilon(13.288967375512637, worksheet.webtool_graphs_q395, 0.002); end
  def test_webtool_graphs_r395; assert_in_epsilon(14.488999417257958, worksheet.webtool_graphs_r395, 0.002); end
  def test_webtool_graphs_s395; assert_in_epsilon(15.659139346297279, worksheet.webtool_graphs_s395, 0.002); end
  def test_webtool_graphs_t395; assert_in_epsilon(16.815752747453953, worksheet.webtool_graphs_t395, 0.002); end
  def test_webtool_graphs_b396; assert_equal("All", worksheet.webtool_graphs_b396); end
  def test_webtool_graphs_c396; assert_equal("Global Other", worksheet.webtool_graphs_c396); end
  def test_webtool_graphs_l396; assert_in_epsilon(3.616434616787921, worksheet.webtool_graphs_l396, 0.002); end
  def test_webtool_graphs_m396; assert_in_epsilon(3.8144569151957914, worksheet.webtool_graphs_m396, 0.002); end
  def test_webtool_graphs_n396; assert_in_epsilon(4.170012434414536, worksheet.webtool_graphs_n396, 0.002); end
  def test_webtool_graphs_o396; assert_in_epsilon(4.508741890001253, worksheet.webtool_graphs_o396, 0.002); end
  def test_webtool_graphs_p396; assert_in_epsilon(4.826946042286894, worksheet.webtool_graphs_p396, 0.002); end
  def test_webtool_graphs_q396; assert_in_epsilon(5.122420314846898, worksheet.webtool_graphs_q396, 0.002); end
  def test_webtool_graphs_r396; assert_in_epsilon(5.39196456271064, worksheet.webtool_graphs_r396, 0.002); end
  def test_webtool_graphs_s396; assert_in_epsilon(5.6314888846351066, worksheet.webtool_graphs_s396, 0.002); end
  def test_webtool_graphs_t396; assert_in_epsilon(5.837442321028545, worksheet.webtool_graphs_t396, 0.002); end
  def test_webtool_graphs_b397; assert_equal("All", worksheet.webtool_graphs_b397); end
  def test_webtool_graphs_c397; assert_equal("Global Heat (delivered to end user)", worksheet.webtool_graphs_c397); end
  def test_webtool_graphs_l397; assert_in_epsilon(6.045102447345095, worksheet.webtool_graphs_l397, 0.002); end
  def test_webtool_graphs_m397; assert_in_epsilon(6.272164875688021, worksheet.webtool_graphs_m397, 0.002); end
  def test_webtool_graphs_n397; assert_in_epsilon(6.653079387023473, worksheet.webtool_graphs_n397, 0.002); end
  def test_webtool_graphs_o397; assert_in_epsilon(7.12765815870082, worksheet.webtool_graphs_o397, 0.002); end
  def test_webtool_graphs_p397; assert_in_epsilon(7.601317763753689, worksheet.webtool_graphs_p397, 0.002); end
  def test_webtool_graphs_q397; assert_in_epsilon(8.054388443292947, worksheet.webtool_graphs_q397, 0.002); end
  def test_webtool_graphs_r397; assert_in_epsilon(8.549722683163171, worksheet.webtool_graphs_r397, 0.002); end
  def test_webtool_graphs_s397; assert_in_epsilon(9.05306384837282, worksheet.webtool_graphs_s397, 0.002); end
  def test_webtool_graphs_t397; assert_in_epsilon(9.617337903956575, worksheet.webtool_graphs_t397, 0.002); end
  def test_webtool_graphs_b398; assert_equal("All", worksheet.webtool_graphs_b398); end
  def test_webtool_graphs_c398; assert_equal("Global Distribution losses and own use", worksheet.webtool_graphs_c398); end
  def test_webtool_graphs_l398; assert_in_delta(0.7166873527496946, worksheet.webtool_graphs_l398, 0.002); end
  def test_webtool_graphs_m398; assert_in_delta(0.7484728909849601, worksheet.webtool_graphs_m398, 0.002); end
  def test_webtool_graphs_n398; assert_in_delta(0.7918480916665818, worksheet.webtool_graphs_n398, 0.002); end
  def test_webtool_graphs_o398; assert_in_delta(0.8365100955200155, worksheet.webtool_graphs_o398, 0.002); end
  def test_webtool_graphs_p398; assert_in_delta(0.8756772213009487, worksheet.webtool_graphs_p398, 0.002); end
  def test_webtool_graphs_q398; assert_in_delta(0.9066648628937255, worksheet.webtool_graphs_q398, 0.002); end
  def test_webtool_graphs_r398; assert_in_delta(0.9341889995148165, worksheet.webtool_graphs_r398, 0.002); end
  def test_webtool_graphs_s398; assert_in_delta(0.9547418820260187, worksheet.webtool_graphs_s398, 0.002); end
  def test_webtool_graphs_t398; assert_in_delta(0.9729308856931045, worksheet.webtool_graphs_t398, 0.002); end
  def test_webtool_graphs_b399; assert_equal("All", worksheet.webtool_graphs_b399); end
  def test_webtool_graphs_c399; assert_equal("Global Conversion losses", worksheet.webtool_graphs_c399); end
  def test_webtool_graphs_l399; assert_in_delta(0.39594228845936885, worksheet.webtool_graphs_l399, 0.002); end
  def test_webtool_graphs_m399; assert_in_delta(0.4035423076066873, worksheet.webtool_graphs_m399, 0.002); end
  def test_webtool_graphs_n399; assert_in_delta(0.4076168754785666, worksheet.webtool_graphs_n399, 0.002); end
  def test_webtool_graphs_o399; assert_in_delta(0.4107916658147558, worksheet.webtool_graphs_o399, 0.002); end
  def test_webtool_graphs_p399; assert_in_delta(0.40988819406538124, worksheet.webtool_graphs_p399, 0.002); end
  def test_webtool_graphs_q399; assert_in_delta(0.40416371787392824, worksheet.webtool_graphs_q399, 0.002); end
  def test_webtool_graphs_r399; assert_in_delta(0.3962231558949928, worksheet.webtool_graphs_r399, 0.002); end
  def test_webtool_graphs_s399; assert_in_delta(0.3849264846420117, worksheet.webtool_graphs_s399, 0.002); end
  def test_webtool_graphs_t399; assert_in_delta(0.3725110164157768, worksheet.webtool_graphs_t399, 0.002); end
  def test_webtool_graphs_b400; assert_equal("TOTAL", worksheet.webtool_graphs_b400); end
  def test_webtool_graphs_c400; assert_equal("TOTAL", worksheet.webtool_graphs_c400); end
  def test_webtool_graphs_l400; assert_in_epsilon(123.44578749989753, worksheet.webtool_graphs_l400, 0.002); end
  def test_webtool_graphs_m400; assert_in_epsilon(132.07438034632435, worksheet.webtool_graphs_m400, 0.002); end
  def test_webtool_graphs_n400; assert_in_epsilon(140.46372881793857, worksheet.webtool_graphs_n400, 0.002); end
  def test_webtool_graphs_o400; assert_in_epsilon(148.68773501372152, worksheet.webtool_graphs_o400, 0.002); end
  def test_webtool_graphs_p400; assert_in_epsilon(156.57522091471844, worksheet.webtool_graphs_p400, 0.002); end
  def test_webtool_graphs_q400; assert_in_epsilon(164.08896698064393, worksheet.webtool_graphs_q400, 0.002); end
  def test_webtool_graphs_r400; assert_in_epsilon(171.17647988883294, worksheet.webtool_graphs_r400, 0.002); end
  def test_webtool_graphs_s400; assert_in_epsilon(177.81596121358805, worksheet.webtool_graphs_s400, 0.002); end
  def test_webtool_graphs_t400; assert_in_epsilon(183.88707263844148, worksheet.webtool_graphs_t400, 0.002); end
  def test_webtool_graphs_b64; assert_equal("Area", worksheet.webtool_graphs_b64); end
  def test_webtool_graphs_c64; assert_equal("calculation from table above", worksheet.webtool_graphs_c64); end
  def test_webtool_graphs_d64; assert_equal("1975", worksheet.webtool_graphs_d64); end
  def test_webtool_graphs_e64; assert_equal("1980", worksheet.webtool_graphs_e64); end
  def test_webtool_graphs_f64; assert_equal("1985", worksheet.webtool_graphs_f64); end
  def test_webtool_graphs_g64; assert_equal("1990", worksheet.webtool_graphs_g64); end
  def test_webtool_graphs_h64; assert_equal("1995", worksheet.webtool_graphs_h64); end
  def test_webtool_graphs_i64; assert_equal("2000", worksheet.webtool_graphs_i64); end
  def test_webtool_graphs_j64; assert_equal("2005", worksheet.webtool_graphs_j64); end
  def test_webtool_graphs_k64; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k64, 0.002); end
  def test_webtool_graphs_l64; assert_equal("2011", worksheet.webtool_graphs_l64); end
  def test_webtool_graphs_m64; assert_equal("2015", worksheet.webtool_graphs_m64); end
  def test_webtool_graphs_n64; assert_equal("2020", worksheet.webtool_graphs_n64); end
  def test_webtool_graphs_o64; assert_equal("2025", worksheet.webtool_graphs_o64); end
  def test_webtool_graphs_p64; assert_equal("2030", worksheet.webtool_graphs_p64); end
  def test_webtool_graphs_q64; assert_equal("2035", worksheet.webtool_graphs_q64); end
  def test_webtool_graphs_r64; assert_equal("2040", worksheet.webtool_graphs_r64); end
  def test_webtool_graphs_s64; assert_equal("2045", worksheet.webtool_graphs_s64); end
  def test_webtool_graphs_t64; assert_equal("2050", worksheet.webtool_graphs_t64); end
  def test_webtool_graphs_b65; assert_equal("Urban", worksheet.webtool_graphs_b65); end
  def test_webtool_graphs_c65; assert_equal("Urban", worksheet.webtool_graphs_c65); end
  def test_webtool_graphs_l65; assert_in_epsilon(11195.511648122409, worksheet.webtool_graphs_l65, 0.002); end
  def test_webtool_graphs_m65; assert_in_epsilon(11067.29024409641, worksheet.webtool_graphs_m65, 0.002); end
  def test_webtool_graphs_n65; assert_in_epsilon(10775.61767558202, worksheet.webtool_graphs_n65, 0.002); end
  def test_webtool_graphs_o65; assert_in_epsilon(10501.4642647574, worksheet.webtool_graphs_o65, 0.002); end
  def test_webtool_graphs_p65; assert_in_epsilon(10245.652002005847, worksheet.webtool_graphs_p65, 0.002); end
  def test_webtool_graphs_q65; assert_in_epsilon(10009.35961773705, worksheet.webtool_graphs_q65, 0.002); end
  def test_webtool_graphs_r65; assert_in_epsilon(9778.915474440168, worksheet.webtool_graphs_r65, 0.002); end
  def test_webtool_graphs_s65; assert_in_epsilon(9555.733283481793, worksheet.webtool_graphs_s65, 0.002); end
  def test_webtool_graphs_t65; assert_in_epsilon(9328.99750264881, worksheet.webtool_graphs_t65, 0.002); end
  def test_webtool_graphs_b66; assert_equal("Rural", worksheet.webtool_graphs_b66); end
  def test_webtool_graphs_c66; assert_equal("Rural", worksheet.webtool_graphs_c66); end
  def test_webtool_graphs_l66; assert_in_epsilon(9232.336409801414, worksheet.webtool_graphs_l66, 0.002); end
  def test_webtool_graphs_m66; assert_in_epsilon(9291.266152497592, worksheet.webtool_graphs_m66, 0.002); end
  def test_webtool_graphs_n66; assert_in_epsilon(8942.553547963826, worksheet.webtool_graphs_n66, 0.002); end
  def test_webtool_graphs_o66; assert_in_epsilon(8666.323607870634, worksheet.webtool_graphs_o66, 0.002); end
  def test_webtool_graphs_p66; assert_in_epsilon(8439.957878406101, worksheet.webtool_graphs_p66, 0.002); end
  def test_webtool_graphs_q66; assert_in_epsilon(8245.243060702851, worksheet.webtool_graphs_q66, 0.002); end
  def test_webtool_graphs_r66; assert_in_epsilon(8075.3260647796715, worksheet.webtool_graphs_r66, 0.002); end
  def test_webtool_graphs_s66; assert_in_epsilon(7922.603320817819, worksheet.webtool_graphs_s66, 0.002); end
  def test_webtool_graphs_t66; assert_in_epsilon(7781.116376941601, worksheet.webtool_graphs_t66, 0.002); end
  def test_webtool_graphs_b55; assert_equal("Area", worksheet.webtool_graphs_b55); end
  def test_webtool_graphs_c55; assert_equal("Tech description", worksheet.webtool_graphs_c55); end
  def test_webtool_graphs_d55; assert_equal("1975", worksheet.webtool_graphs_d55); end
  def test_webtool_graphs_e55; assert_equal("1980", worksheet.webtool_graphs_e55); end
  def test_webtool_graphs_f55; assert_equal("1985", worksheet.webtool_graphs_f55); end
  def test_webtool_graphs_g55; assert_equal("1990", worksheet.webtool_graphs_g55); end
  def test_webtool_graphs_h55; assert_equal("1995", worksheet.webtool_graphs_h55); end
  def test_webtool_graphs_i55; assert_equal("2000", worksheet.webtool_graphs_i55); end
  def test_webtool_graphs_j55; assert_equal("2005", worksheet.webtool_graphs_j55); end
  def test_webtool_graphs_k55; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k55, 0.002); end
  def test_webtool_graphs_l55; assert_equal("2011", worksheet.webtool_graphs_l55); end
  def test_webtool_graphs_m55; assert_equal("2015", worksheet.webtool_graphs_m55); end
  def test_webtool_graphs_n55; assert_equal("2020", worksheet.webtool_graphs_n55); end
  def test_webtool_graphs_o55; assert_equal("2025", worksheet.webtool_graphs_o55); end
  def test_webtool_graphs_p55; assert_equal("2030", worksheet.webtool_graphs_p55); end
  def test_webtool_graphs_q55; assert_equal("2035", worksheet.webtool_graphs_q55); end
  def test_webtool_graphs_r55; assert_equal("2040", worksheet.webtool_graphs_r55); end
  def test_webtool_graphs_s55; assert_equal("2045", worksheet.webtool_graphs_s55); end
  def test_webtool_graphs_t55; assert_equal("2050", worksheet.webtool_graphs_t55); end
  def test_webtool_graphs_b56; assert_equal("Urban", worksheet.webtool_graphs_b56); end
  def test_webtool_graphs_c56; assert_equal("Urban", worksheet.webtool_graphs_c56); end
  def test_webtool_graphs_l56; assert_in_epsilon(58.55019171635433, worksheet.webtool_graphs_l56, 0.002); end
  def test_webtool_graphs_m56; assert_in_epsilon(63.852725174365865, worksheet.webtool_graphs_m56, 0.002); end
  def test_webtool_graphs_n56; assert_in_epsilon(69.22962575185132, worksheet.webtool_graphs_n56, 0.002); end
  def test_webtool_graphs_o56; assert_in_epsilon(74.3646199203869, worksheet.webtool_graphs_o56, 0.002); end
  def test_webtool_graphs_p56; assert_in_epsilon(79.26043172634465, worksheet.webtool_graphs_p56, 0.002); end
  def test_webtool_graphs_q56; assert_in_epsilon(83.94899323298391, worksheet.webtool_graphs_q56, 0.002); end
  def test_webtool_graphs_r56; assert_in_epsilon(88.36747537125345, worksheet.webtool_graphs_r56, 0.002); end
  def test_webtool_graphs_s56; assert_in_epsilon(92.68313929591184, worksheet.webtool_graphs_s56, 0.002); end
  def test_webtool_graphs_t56; assert_in_epsilon(96.76291328833439, worksheet.webtool_graphs_t56, 0.002); end
  def test_webtool_graphs_b57; assert_equal("Rural", worksheet.webtool_graphs_b57); end
  def test_webtool_graphs_c57; assert_equal("Rural", worksheet.webtool_graphs_c57); end
  def test_webtool_graphs_l57; assert_in_epsilon(27.707866917741953, worksheet.webtool_graphs_l57, 0.002); end
  def test_webtool_graphs_m57; assert_in_epsilon(28.525188254772207, worksheet.webtool_graphs_m57, 0.002); end
  def test_webtool_graphs_n57; assert_in_epsilon(28.00077418916069, worksheet.webtool_graphs_n57, 0.002); end
  def test_webtool_graphs_o57; assert_in_epsilon(27.58220667701392, worksheet.webtool_graphs_o57, 0.002); end
  def test_webtool_graphs_p57; assert_in_epsilon(27.232301663733736, worksheet.webtool_graphs_p57, 0.002); end
  def test_webtool_graphs_q57; assert_in_epsilon(26.92469240397589, worksheet.webtool_graphs_q57, 0.002); end
  def test_webtool_graphs_r57; assert_in_epsilon(26.62789855265577, worksheet.webtool_graphs_r57, 0.002); end
  def test_webtool_graphs_s57; assert_in_epsilon(26.22797622560562, worksheet.webtool_graphs_s57, 0.002); end
  def test_webtool_graphs_t57; assert_in_epsilon(25.709698598828506, worksheet.webtool_graphs_t57, 0.002); end
  def test_webtool_graphs_b58; assert_equal("Non residential", worksheet.webtool_graphs_b58); end
  def test_webtool_graphs_c58; assert_equal("Non residential", worksheet.webtool_graphs_c58); end
  def test_webtool_graphs_l58; assert_in_epsilon(30.0299967772471, worksheet.webtool_graphs_l58, 0.002); end
  def test_webtool_graphs_m58; assert_in_epsilon(32.272286842906595, worksheet.webtool_graphs_m58, 0.002); end
  def test_webtool_graphs_n58; assert_in_epsilon(35.380784522757914, worksheet.webtool_graphs_n58, 0.002); end
  def test_webtool_graphs_o58; assert_in_epsilon(38.36594849628507, worksheet.webtool_graphs_o58, 0.002); end
  def test_webtool_graphs_p58; assert_in_epsilon(41.19560434552005, worksheet.webtool_graphs_p58, 0.002); end
  def test_webtool_graphs_q58; assert_in_epsilon(43.85006431962357, worksheet.webtool_graphs_q58, 0.002); end
  def test_webtool_graphs_r58; assert_in_epsilon(46.300971126350774, worksheet.webtool_graphs_r58, 0.002); end
  def test_webtool_graphs_s58; assert_in_epsilon(48.51211347702974, worksheet.webtool_graphs_s58, 0.002); end
  def test_webtool_graphs_t58; assert_in_epsilon(50.451680945213134, worksheet.webtool_graphs_t58, 0.002); end
  def test_webtool_graphs_b374; assert_equal("Type of city", worksheet.webtool_graphs_b374); end
  def test_webtool_graphs_c374; assert_equal("Energy description", worksheet.webtool_graphs_c374); end
  def test_webtool_graphs_d374; assert_equal("1975", worksheet.webtool_graphs_d374); end
  def test_webtool_graphs_e374; assert_equal("1980", worksheet.webtool_graphs_e374); end
  def test_webtool_graphs_f374; assert_equal("1985", worksheet.webtool_graphs_f374); end
  def test_webtool_graphs_g374; assert_equal("1990", worksheet.webtool_graphs_g374); end
  def test_webtool_graphs_h374; assert_equal("1995", worksheet.webtool_graphs_h374); end
  def test_webtool_graphs_i374; assert_equal("2000", worksheet.webtool_graphs_i374); end
  def test_webtool_graphs_j374; assert_equal("2005", worksheet.webtool_graphs_j374); end
  def test_webtool_graphs_k374; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k374, 0.002); end
  def test_webtool_graphs_l374; assert_equal("2011", worksheet.webtool_graphs_l374); end
  def test_webtool_graphs_m374; assert_equal("2015", worksheet.webtool_graphs_m374); end
  def test_webtool_graphs_n374; assert_equal("2020", worksheet.webtool_graphs_n374); end
  def test_webtool_graphs_o374; assert_equal("2025", worksheet.webtool_graphs_o374); end
  def test_webtool_graphs_p374; assert_equal("2030", worksheet.webtool_graphs_p374); end
  def test_webtool_graphs_q374; assert_equal("2035", worksheet.webtool_graphs_q374); end
  def test_webtool_graphs_r374; assert_equal("2040", worksheet.webtool_graphs_r374); end
  def test_webtool_graphs_s374; assert_equal("2045", worksheet.webtool_graphs_s374); end
  def test_webtool_graphs_t374; assert_equal("2050", worksheet.webtool_graphs_t374); end
  def test_webtool_graphs_b375; assert_equal("All", worksheet.webtool_graphs_b375); end
  def test_webtool_graphs_c375; assert_equal("Global Solar", worksheet.webtool_graphs_c375); end
  def test_webtool_graphs_j375; assert_equal("", worksheet.webtool_graphs_j375); end
  def test_webtool_graphs_l375; assert_in_epsilon(1.402397457347961, worksheet.webtool_graphs_l375, 0.002); end
  def test_webtool_graphs_m375; assert_in_epsilon(1.500109021216029, worksheet.webtool_graphs_m375, 0.002); end
  def test_webtool_graphs_n375; assert_in_epsilon(1.7166942633792643, worksheet.webtool_graphs_n375, 0.002); end
  def test_webtool_graphs_o375; assert_in_epsilon(1.9540944232515194, worksheet.webtool_graphs_o375, 0.002); end
  def test_webtool_graphs_p375; assert_in_epsilon(2.2059155750273263, worksheet.webtool_graphs_p375, 0.002); end
  def test_webtool_graphs_q375; assert_in_epsilon(2.4624078115015773, worksheet.webtool_graphs_q375, 0.002); end
  def test_webtool_graphs_r375; assert_in_epsilon(2.730667030941664, worksheet.webtool_graphs_r375, 0.002); end
  def test_webtool_graphs_s375; assert_in_epsilon(2.9984907336209288, worksheet.webtool_graphs_s375, 0.002); end
  def test_webtool_graphs_t375; assert_in_epsilon(3.271530074113727, worksheet.webtool_graphs_t375, 0.002); end
  def test_webtool_graphs_b376; assert_equal("All", worksheet.webtool_graphs_b376); end
  def test_webtool_graphs_c376; assert_equal("Global Environmental heat", worksheet.webtool_graphs_c376); end
  def test_webtool_graphs_l376; assert_in_epsilon(4.838497586627763, worksheet.webtool_graphs_l376, 0.002); end
  def test_webtool_graphs_m376; assert_in_epsilon(5.562592127353521, worksheet.webtool_graphs_m376, 0.002); end
  def test_webtool_graphs_n376; assert_in_epsilon(6.5915502231697465, worksheet.webtool_graphs_n376, 0.002); end
  def test_webtool_graphs_o376; assert_in_epsilon(7.688096772541611, worksheet.webtool_graphs_o376, 0.002); end
  def test_webtool_graphs_p376; assert_in_epsilon(8.82972364345737, worksheet.webtool_graphs_p376, 0.002); end
  def test_webtool_graphs_q376; assert_in_epsilon(9.980445203849193, worksheet.webtool_graphs_q376, 0.002); end
  def test_webtool_graphs_r376; assert_in_epsilon(11.14339862628133, worksheet.webtool_graphs_r376, 0.002); end
  def test_webtool_graphs_s376; assert_in_epsilon(12.274974083635158, worksheet.webtool_graphs_s376, 0.002); end
  def test_webtool_graphs_t376; assert_in_epsilon(13.381832968790894, worksheet.webtool_graphs_t376, 0.002); end
  def test_webtool_graphs_b377; assert_equal("All", worksheet.webtool_graphs_b377); end
  def test_webtool_graphs_c377; assert_equal("Global Heat (supplied to grid)", worksheet.webtool_graphs_c377); end
  def test_webtool_graphs_l377; assert_in_epsilon(9.643214837702256, worksheet.webtool_graphs_l377, 0.002); end
  def test_webtool_graphs_m377; assert_in_epsilon(10.12386740155792, worksheet.webtool_graphs_m377, 0.002); end
  def test_webtool_graphs_n377; assert_in_epsilon(10.78451391397407, worksheet.webtool_graphs_n377, 0.002); end
  def test_webtool_graphs_o377; assert_in_epsilon(11.470907906007206, worksheet.webtool_graphs_o377, 0.002); end
  def test_webtool_graphs_p377; assert_in_epsilon(12.08978061646663, worksheet.webtool_graphs_p377, 0.002); end
  def test_webtool_graphs_q377; assert_in_epsilon(12.602277566642273, worksheet.webtool_graphs_q377, 0.002); end
  def test_webtool_graphs_r377; assert_in_epsilon(13.072097715399975, worksheet.webtool_graphs_r377, 0.002); end
  def test_webtool_graphs_s377; assert_in_epsilon(13.448859177161731, worksheet.webtool_graphs_s377, 0.002); end
  def test_webtool_graphs_t377; assert_in_epsilon(13.79594031672798, worksheet.webtool_graphs_t377, 0.002); end
  def test_webtool_graphs_b378; assert_equal("All", worksheet.webtool_graphs_b378); end
  def test_webtool_graphs_c378; assert_equal("Global Liquid hydrocarbons", worksheet.webtool_graphs_c378); end
  def test_webtool_graphs_l378; assert_in_epsilon(10.013419080141805, worksheet.webtool_graphs_l378, 0.002); end
  def test_webtool_graphs_m378; assert_in_epsilon(10.606281667967881, worksheet.webtool_graphs_m378, 0.002); end
  def test_webtool_graphs_n378; assert_in_epsilon(11.003979732436541, worksheet.webtool_graphs_n378, 0.002); end
  def test_webtool_graphs_o378; assert_in_epsilon(11.323201555077798, worksheet.webtool_graphs_o378, 0.002); end
  def test_webtool_graphs_p378; assert_in_epsilon(11.53753413813651, worksheet.webtool_graphs_p378, 0.002); end
  def test_webtool_graphs_q378; assert_in_epsilon(11.616686260734106, worksheet.webtool_graphs_q378, 0.002); end
  def test_webtool_graphs_r378; assert_in_epsilon(11.60393303757813, worksheet.webtool_graphs_r378, 0.002); end
  def test_webtool_graphs_s378; assert_in_epsilon(11.471057241914142, worksheet.webtool_graphs_s378, 0.002); end
  def test_webtool_graphs_t378; assert_in_epsilon(11.26144261268126, worksheet.webtool_graphs_t378, 0.002); end
  def test_webtool_graphs_b379; assert_equal("All", worksheet.webtool_graphs_b379); end
  def test_webtool_graphs_c379; assert_equal("Global Solid hydrocarbons", worksheet.webtool_graphs_c379); end
  def test_webtool_graphs_j379; assert_equal("", worksheet.webtool_graphs_j379); end
  def test_webtool_graphs_l379; assert_in_epsilon(16.515138578626978, worksheet.webtool_graphs_l379, 0.002); end
  def test_webtool_graphs_m379; assert_in_epsilon(17.35229316026313, worksheet.webtool_graphs_m379, 0.002); end
  def test_webtool_graphs_n379; assert_in_epsilon(17.706974024005458, worksheet.webtool_graphs_n379, 0.002); end
  def test_webtool_graphs_o379; assert_in_epsilon(17.95381609424331, worksheet.webtool_graphs_o379, 0.002); end
  def test_webtool_graphs_p379; assert_in_epsilon(18.047793534318046, worksheet.webtool_graphs_p379, 0.002); end
  def test_webtool_graphs_q379; assert_in_epsilon(17.97954100294176, worksheet.webtool_graphs_q379, 0.002); end
  def test_webtool_graphs_r379; assert_in_epsilon(17.78805162871768, worksheet.webtool_graphs_r379, 0.002); end
  def test_webtool_graphs_s379; assert_in_epsilon(17.475963550920863, worksheet.webtool_graphs_s379, 0.002); end
  def test_webtool_graphs_t379; assert_in_epsilon(17.035939201482954, worksheet.webtool_graphs_t379, 0.002); end
  def test_webtool_graphs_b380; assert_equal("All", worksheet.webtool_graphs_b380); end
  def test_webtool_graphs_c380; assert_equal("Global Traditional biomass", worksheet.webtool_graphs_c380); end
  def test_webtool_graphs_l380; assert_in_epsilon(21.54205008268555, worksheet.webtool_graphs_l380, 0.002); end
  def test_webtool_graphs_m380; assert_in_epsilon(20.13743480733188, worksheet.webtool_graphs_m380, 0.002); end
  def test_webtool_graphs_n380; assert_in_epsilon(18.372579440328177, worksheet.webtool_graphs_n380, 0.002); end
  def test_webtool_graphs_o380; assert_in_epsilon(16.443000493732548, worksheet.webtool_graphs_o380, 0.002); end
  def test_webtool_graphs_p380; assert_in_epsilon(14.557821870704695, worksheet.webtool_graphs_p380, 0.002); end
  def test_webtool_graphs_q380; assert_in_epsilon(13.090001432070835, worksheet.webtool_graphs_q380, 0.002); end
  def test_webtool_graphs_r380; assert_in_epsilon(11.66525366781175, worksheet.webtool_graphs_r380, 0.002); end
  def test_webtool_graphs_s380; assert_in_epsilon(10.704073673733559, worksheet.webtool_graphs_s380, 0.002); end
  def test_webtool_graphs_t380; assert_in_epsilon(9.771654172468239, worksheet.webtool_graphs_t380, 0.002); end
  def test_webtool_graphs_b381; assert_equal("All", worksheet.webtool_graphs_b381); end
  def test_webtool_graphs_c381; assert_equal("Global Gaseous hydrocarbons", worksheet.webtool_graphs_c381); end
  def test_webtool_graphs_l381; assert_in_epsilon(22.695227630580543, worksheet.webtool_graphs_l381, 0.002); end
  def test_webtool_graphs_m381; assert_in_epsilon(24.730895989680693, worksheet.webtool_graphs_m381, 0.002); end
  def test_webtool_graphs_n381; assert_in_epsilon(26.57736267997516, worksheet.webtool_graphs_n381, 0.002); end
  def test_webtool_graphs_o381; assert_in_epsilon(28.299133946122932, worksheet.webtool_graphs_o381, 0.002); end
  def test_webtool_graphs_p381; assert_in_epsilon(29.827830885739132, worksheet.webtool_graphs_p381, 0.002); end
  def test_webtool_graphs_q381; assert_in_epsilon(31.062962464199757, worksheet.webtool_graphs_q381, 0.002); end
  def test_webtool_graphs_r381; assert_in_epsilon(32.09614543041406, worksheet.webtool_graphs_r381, 0.002); end
  def test_webtool_graphs_s381; assert_in_epsilon(32.83074988885337, worksheet.webtool_graphs_s381, 0.002); end
  def test_webtool_graphs_t381; assert_in_epsilon(33.37547345416125, worksheet.webtool_graphs_t381, 0.002); end
  def test_webtool_graphs_b382; assert_equal("All", worksheet.webtool_graphs_b382); end
  def test_webtool_graphs_c382; assert_equal("Global Electricity (delivered to end user)", worksheet.webtool_graphs_c382); end
  def test_webtool_graphs_l382; assert_in_epsilon(36.79584224618469, worksheet.webtool_graphs_l382, 0.002); end
  def test_webtool_graphs_m382; assert_in_epsilon(42.06090617095328, worksheet.webtool_graphs_m382, 0.002); end
  def test_webtool_graphs_n382; assert_in_epsilon(47.71007454067013, worksheet.webtool_graphs_n382, 0.002); end
  def test_webtool_graphs_o382; assert_in_epsilon(53.55548382274457, worksheet.webtool_graphs_o382, 0.002); end
  def test_webtool_graphs_p382; assert_in_epsilon(59.478820650868755, worksheet.webtool_graphs_p382, 0.002); end
  def test_webtool_graphs_q382; assert_in_epsilon(65.29464523870446, worksheet.webtool_graphs_q382, 0.002); end
  def test_webtool_graphs_r382; assert_in_epsilon(71.07693275168836, worksheet.webtool_graphs_r382, 0.002); end
  def test_webtool_graphs_s382; assert_in_epsilon(76.6117928637483, worksheet.webtool_graphs_s382, 0.002); end
  def test_webtool_graphs_t382; assert_in_epsilon(81.99325983801518, worksheet.webtool_graphs_t382, 0.002); end
  def test_webtool_graphs_b383; assert_equal("TOTAL", worksheet.webtool_graphs_b383); end
  def test_webtool_graphs_c383; assert_equal("TOTAL", worksheet.webtool_graphs_c383); end
  def test_webtool_graphs_l383; assert_in_epsilon(123.44578749989755, worksheet.webtool_graphs_l383, 0.002); end
  def test_webtool_graphs_m383; assert_in_epsilon(132.07438034632435, worksheet.webtool_graphs_m383, 0.002); end
  def test_webtool_graphs_n383; assert_in_epsilon(140.46372881793855, worksheet.webtool_graphs_n383, 0.002); end
  def test_webtool_graphs_o383; assert_in_epsilon(148.6877350137215, worksheet.webtool_graphs_o383, 0.002); end
  def test_webtool_graphs_p383; assert_in_epsilon(156.57522091471847, worksheet.webtool_graphs_p383, 0.002); end
  def test_webtool_graphs_q383; assert_in_epsilon(164.08896698064396, worksheet.webtool_graphs_q383, 0.002); end
  def test_webtool_graphs_r383; assert_in_epsilon(171.17647988883294, worksheet.webtool_graphs_r383, 0.002); end
  def test_webtool_graphs_s383; assert_in_epsilon(177.81596121358808, worksheet.webtool_graphs_s383, 0.002); end
  def test_webtool_graphs_t383; assert_in_epsilon(183.88707263844148, worksheet.webtool_graphs_t383, 0.002); end
  def test_webtool_graphs_b27; assert_equal("Type of city", worksheet.webtool_graphs_b27); end
  def test_webtool_graphs_c27; assert_equal("Description", worksheet.webtool_graphs_c27); end
  def test_webtool_graphs_d27; assert_equal("1975", worksheet.webtool_graphs_d27); end
  def test_webtool_graphs_e27; assert_equal("1980", worksheet.webtool_graphs_e27); end
  def test_webtool_graphs_f27; assert_equal("1985", worksheet.webtool_graphs_f27); end
  def test_webtool_graphs_g27; assert_equal("1990", worksheet.webtool_graphs_g27); end
  def test_webtool_graphs_h27; assert_equal("1995", worksheet.webtool_graphs_h27); end
  def test_webtool_graphs_i27; assert_equal("2000", worksheet.webtool_graphs_i27); end
  def test_webtool_graphs_j27; assert_equal("2005", worksheet.webtool_graphs_j27); end
  def test_webtool_graphs_k27; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k27, 0.002); end
  def test_webtool_graphs_l27; assert_equal("2011", worksheet.webtool_graphs_l27); end
  def test_webtool_graphs_m27; assert_equal("2015", worksheet.webtool_graphs_m27); end
  def test_webtool_graphs_n27; assert_equal("2020", worksheet.webtool_graphs_n27); end
  def test_webtool_graphs_o27; assert_equal("2025", worksheet.webtool_graphs_o27); end
  def test_webtool_graphs_p27; assert_equal("2030", worksheet.webtool_graphs_p27); end
  def test_webtool_graphs_q27; assert_equal("2035", worksheet.webtool_graphs_q27); end
  def test_webtool_graphs_r27; assert_equal("2040", worksheet.webtool_graphs_r27); end
  def test_webtool_graphs_s27; assert_equal("2045", worksheet.webtool_graphs_s27); end
  def test_webtool_graphs_t27; assert_equal("2050", worksheet.webtool_graphs_t27); end
  def test_webtool_graphs_b28; assert_equal("All", worksheet.webtool_graphs_b28); end
  def test_webtool_graphs_c28; assert_equal("Global urban house size", worksheet.webtool_graphs_c28); end
  def test_webtool_graphs_j28; assert_equal("", worksheet.webtool_graphs_j28); end
  def test_webtool_graphs_l28; assert_in_epsilon(92.0, worksheet.webtool_graphs_l28, 0.002); end
  def test_webtool_graphs_m28; assert_in_epsilon(93.2, worksheet.webtool_graphs_m28, 0.002); end
  def test_webtool_graphs_n28; assert_in_epsilon(94.81428571428569, worksheet.webtool_graphs_n28, 0.002); end
  def test_webtool_graphs_o28; assert_in_epsilon(96.42857142857142, worksheet.webtool_graphs_o28, 0.002); end
  def test_webtool_graphs_p28; assert_in_epsilon(98.04285714285713, worksheet.webtool_graphs_p28, 0.002); end
  def test_webtool_graphs_q28; assert_in_epsilon(99.65714285714286, worksheet.webtool_graphs_q28, 0.002); end
  def test_webtool_graphs_r28; assert_in_epsilon(101.27142857142856, worksheet.webtool_graphs_r28, 0.002); end
  def test_webtool_graphs_s28; assert_in_epsilon(102.88571428571426, worksheet.webtool_graphs_s28, 0.002); end
  def test_webtool_graphs_t28; assert_in_epsilon(104.49999999999999, worksheet.webtool_graphs_t28, 0.002); end
  def test_webtool_graphs_b29; assert_equal("All", worksheet.webtool_graphs_b29); end
  def test_webtool_graphs_c29; assert_equal("Global rural house size", worksheet.webtool_graphs_c29); end
  def test_webtool_graphs_l29; assert_in_epsilon(78.0, worksheet.webtool_graphs_l29, 0.002); end
  def test_webtool_graphs_m29; assert_in_epsilon(79.0, worksheet.webtool_graphs_m29, 0.002); end
  def test_webtool_graphs_n29; assert_in_epsilon(81.21428571428571, worksheet.webtool_graphs_n29, 0.002); end
  def test_webtool_graphs_o29; assert_in_epsilon(83.42857142857142, worksheet.webtool_graphs_o29, 0.002); end
  def test_webtool_graphs_p29; assert_in_epsilon(85.64285714285712, worksheet.webtool_graphs_p29, 0.002); end
  def test_webtool_graphs_q29; assert_in_epsilon(87.85714285714286, worksheet.webtool_graphs_q29, 0.002); end
  def test_webtool_graphs_r29; assert_in_epsilon(90.07142857142857, worksheet.webtool_graphs_r29, 0.002); end
  def test_webtool_graphs_s29; assert_in_epsilon(92.28571428571429, worksheet.webtool_graphs_s29, 0.002); end
  def test_webtool_graphs_t29; assert_in_epsilon(94.50000000000001, worksheet.webtool_graphs_t29, 0.002); end
  def test_webtool_graphs_b30; assert_equal("Weighted average", worksheet.webtool_graphs_b30); end
  def test_webtool_graphs_c30; assert_equal("Average household size", worksheet.webtool_graphs_c30); end
  def test_webtool_graphs_l30; assert_in_epsilon(86.89531887762217, worksheet.webtool_graphs_l30, 0.002); end
  def test_webtool_graphs_m30; assert_in_epsilon(88.268159816611, worksheet.webtool_graphs_m30, 0.002); end
  def test_webtool_graphs_n30; assert_in_epsilon(90.3579427442914, worksheet.webtool_graphs_n30, 0.002); end
  def test_webtool_graphs_o30; assert_in_epsilon(92.39751489304857, worksheet.webtool_graphs_o30, 0.002); end
  def test_webtool_graphs_p30; assert_in_epsilon(94.3931985796366, worksheet.webtool_graphs_p30, 0.002); end
  def test_webtool_graphs_q30; assert_in_epsilon(96.35033457811633, worksheet.webtool_graphs_q30, 0.002); end
  def test_webtool_graphs_r30; assert_in_epsilon(98.27715182786126, worksheet.webtool_graphs_r30, 0.002); end
  def test_webtool_graphs_s30; assert_in_epsilon(100.18838466581188, worksheet.webtool_graphs_s30, 0.002); end
  def test_webtool_graphs_t30; assert_in_epsilon(102.0840737884767, worksheet.webtool_graphs_t30, 0.002); end
  def test_webtool_graphs_b8; assert_equal("Type of city", worksheet.webtool_graphs_b8); end
  def test_webtool_graphs_c8; assert_equal("Description", worksheet.webtool_graphs_c8); end
  def test_webtool_graphs_d8; assert_equal("1975", worksheet.webtool_graphs_d8); end
  def test_webtool_graphs_e8; assert_equal("1980", worksheet.webtool_graphs_e8); end
  def test_webtool_graphs_f8; assert_equal("1985", worksheet.webtool_graphs_f8); end
  def test_webtool_graphs_g8; assert_equal("1990", worksheet.webtool_graphs_g8); end
  def test_webtool_graphs_h8; assert_equal("1995", worksheet.webtool_graphs_h8); end
  def test_webtool_graphs_i8; assert_equal("2000", worksheet.webtool_graphs_i8); end
  def test_webtool_graphs_j8; assert_equal("2005", worksheet.webtool_graphs_j8); end
  def test_webtool_graphs_k8; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k8, 0.002); end
  def test_webtool_graphs_l8; assert_equal("2011", worksheet.webtool_graphs_l8); end
  def test_webtool_graphs_m8; assert_equal("2015", worksheet.webtool_graphs_m8); end
  def test_webtool_graphs_n8; assert_equal("2020", worksheet.webtool_graphs_n8); end
  def test_webtool_graphs_o8; assert_equal("2025", worksheet.webtool_graphs_o8); end
  def test_webtool_graphs_p8; assert_equal("2030", worksheet.webtool_graphs_p8); end
  def test_webtool_graphs_q8; assert_equal("2035", worksheet.webtool_graphs_q8); end
  def test_webtool_graphs_r8; assert_equal("2040", worksheet.webtool_graphs_r8); end
  def test_webtool_graphs_s8; assert_equal("2045", worksheet.webtool_graphs_s8); end
  def test_webtool_graphs_t8; assert_equal("2050", worksheet.webtool_graphs_t8); end
  def test_webtool_graphs_b9; assert_equal("All", worksheet.webtool_graphs_b9); end
  def test_webtool_graphs_c9; assert_equal("Global urban heating season temperature", worksheet.webtool_graphs_c9); end
  def test_webtool_graphs_j9; assert_equal("", worksheet.webtool_graphs_j9); end
  def test_webtool_graphs_l9; assert_in_epsilon(17.5, worksheet.webtool_graphs_l9, 0.002); end
  def test_webtool_graphs_m9; assert_in_epsilon(17.653846153846153, worksheet.webtool_graphs_m9, 0.002); end
  def test_webtool_graphs_n9; assert_in_epsilon(17.931868131868132, worksheet.webtool_graphs_n9, 0.002); end
  def test_webtool_graphs_o9; assert_in_epsilon(18.20989010989011, worksheet.webtool_graphs_o9, 0.002); end
  def test_webtool_graphs_p9; assert_in_epsilon(18.487912087912086, worksheet.webtool_graphs_p9, 0.002); end
  def test_webtool_graphs_q9; assert_in_epsilon(18.76593406593406, worksheet.webtool_graphs_q9, 0.002); end
  def test_webtool_graphs_r9; assert_in_epsilon(19.043956043956044, worksheet.webtool_graphs_r9, 0.002); end
  def test_webtool_graphs_s9; assert_in_epsilon(19.32197802197802, worksheet.webtool_graphs_s9, 0.002); end
  def test_webtool_graphs_t9; assert_in_epsilon(19.6, worksheet.webtool_graphs_t9, 0.002); end
  def test_webtool_graphs_b10; assert_equal("All", worksheet.webtool_graphs_b10); end
  def test_webtool_graphs_c10; assert_equal("Global rural heating season temperature", worksheet.webtool_graphs_c10); end
  def test_webtool_graphs_l10; assert_in_epsilon(13.0, worksheet.webtool_graphs_l10, 0.002); end
  def test_webtool_graphs_m10; assert_in_epsilon(13.410256410256412, worksheet.webtool_graphs_m10, 0.002); end
  def test_webtool_graphs_n10; assert_in_epsilon(13.865934065934066, worksheet.webtool_graphs_n10, 0.002); end
  def test_webtool_graphs_o10; assert_in_epsilon(14.321611721611724, worksheet.webtool_graphs_o10, 0.002); end
  def test_webtool_graphs_p10; assert_in_epsilon(14.777289377289378, worksheet.webtool_graphs_p10, 0.002); end
  def test_webtool_graphs_q10; assert_in_epsilon(15.232967032967032, worksheet.webtool_graphs_q10, 0.002); end
  def test_webtool_graphs_r10; assert_in_epsilon(15.68864468864469, worksheet.webtool_graphs_r10, 0.002); end
  def test_webtool_graphs_s10; assert_in_epsilon(16.144322344322344, worksheet.webtool_graphs_s10, 0.002); end
  def test_webtool_graphs_t10; assert_in_epsilon(16.6, worksheet.webtool_graphs_t10, 0.002); end
  def test_webtool_graphs_b11; assert_equal("All", worksheet.webtool_graphs_b11); end
  def test_webtool_graphs_c11; assert_equal("Global non residential heating season temperature", worksheet.webtool_graphs_c11); end
  def test_webtool_graphs_l11; assert_in_epsilon(20.0, worksheet.webtool_graphs_l11, 0.002); end
  def test_webtool_graphs_m11; assert_in_epsilon(20.102564102564102, worksheet.webtool_graphs_m11, 0.002); end
  def test_webtool_graphs_n11; assert_in_epsilon(20.4021978021978, worksheet.webtool_graphs_n11, 0.002); end
  def test_webtool_graphs_o11; assert_in_epsilon(20.7018315018315, worksheet.webtool_graphs_o11, 0.002); end
  def test_webtool_graphs_p11; assert_in_epsilon(21.0014652014652, worksheet.webtool_graphs_p11, 0.002); end
  def test_webtool_graphs_q11; assert_in_epsilon(21.3010989010989, worksheet.webtool_graphs_q11, 0.002); end
  def test_webtool_graphs_r11; assert_in_epsilon(21.600732600732606, worksheet.webtool_graphs_r11, 0.002); end
  def test_webtool_graphs_s11; assert_in_epsilon(21.9003663003663, worksheet.webtool_graphs_s11, 0.002); end
  def test_webtool_graphs_t11; assert_in_epsilon(22.200000000000003, worksheet.webtool_graphs_t11, 0.002); end
  def test_webtool_graphs_b12; assert_equal("All", worksheet.webtool_graphs_b12); end
  def test_webtool_graphs_c12; assert_equal("Global urban cooling season temperature", worksheet.webtool_graphs_c12); end
  def test_webtool_graphs_j12; assert_equal("", worksheet.webtool_graphs_j12); end
  def test_webtool_graphs_l12; assert_in_epsilon(26.5, worksheet.webtool_graphs_l12, 0.002); end
  def test_webtool_graphs_m12; assert_in_epsilon(26.346153846153847, worksheet.webtool_graphs_m12, 0.002); end
  def test_webtool_graphs_n12; assert_in_epsilon(26.068131868131864, worksheet.webtool_graphs_n12, 0.002); end
  def test_webtool_graphs_o12; assert_in_epsilon(25.790109890109893, worksheet.webtool_graphs_o12, 0.002); end
  def test_webtool_graphs_p12; assert_in_epsilon(25.51208791208791, worksheet.webtool_graphs_p12, 0.002); end
  def test_webtool_graphs_q12; assert_in_epsilon(25.23406593406593, worksheet.webtool_graphs_q12, 0.002); end
  def test_webtool_graphs_r12; assert_in_epsilon(24.956043956043956, worksheet.webtool_graphs_r12, 0.002); end
  def test_webtool_graphs_s12; assert_in_epsilon(24.678021978021974, worksheet.webtool_graphs_s12, 0.002); end
  def test_webtool_graphs_t12; assert_in_epsilon(24.4, worksheet.webtool_graphs_t12, 0.002); end
  def test_webtool_graphs_b13; assert_equal("All", worksheet.webtool_graphs_b13); end
  def test_webtool_graphs_c13; assert_equal("Global rural cooling season temperature", worksheet.webtool_graphs_c13); end
  def test_webtool_graphs_l13; assert_in_epsilon(29.0, worksheet.webtool_graphs_l13, 0.002); end
  def test_webtool_graphs_m13; assert_in_epsilon(28.58974358974359, worksheet.webtool_graphs_m13, 0.002); end
  def test_webtool_graphs_n13; assert_in_epsilon(27.991208791208788, worksheet.webtool_graphs_n13, 0.002); end
  def test_webtool_graphs_o13; assert_in_epsilon(27.39267399267399, worksheet.webtool_graphs_o13, 0.002); end
  def test_webtool_graphs_p13; assert_in_epsilon(26.79413919413919, worksheet.webtool_graphs_p13, 0.002); end
  def test_webtool_graphs_q13; assert_in_epsilon(26.19560439560439, worksheet.webtool_graphs_q13, 0.002); end
  def test_webtool_graphs_r13; assert_in_epsilon(25.597069597069595, worksheet.webtool_graphs_r13, 0.002); end
  def test_webtool_graphs_s13; assert_in_epsilon(24.9985347985348, worksheet.webtool_graphs_s13, 0.002); end
  def test_webtool_graphs_t13; assert_in_epsilon(24.4, worksheet.webtool_graphs_t13, 0.002); end
  def test_webtool_graphs_b14; assert_equal("All", worksheet.webtool_graphs_b14); end
  def test_webtool_graphs_c14; assert_equal("Global non residential cooling season temperature", worksheet.webtool_graphs_c14); end
  def test_webtool_graphs_l14; assert_in_epsilon(23.0, worksheet.webtool_graphs_l14, 0.002); end
  def test_webtool_graphs_m14; assert_in_epsilon(23.102564102564102, worksheet.webtool_graphs_m14, 0.002); end
  def test_webtool_graphs_n14; assert_in_epsilon(23.14505494505494, worksheet.webtool_graphs_n14, 0.002); end
  def test_webtool_graphs_o14; assert_in_epsilon(23.187545787545787, worksheet.webtool_graphs_o14, 0.002); end
  def test_webtool_graphs_p14; assert_in_epsilon(23.23003663003663, worksheet.webtool_graphs_p14, 0.002); end
  def test_webtool_graphs_q14; assert_in_epsilon(23.27252747252747, worksheet.webtool_graphs_q14, 0.002); end
  def test_webtool_graphs_r14; assert_in_epsilon(23.315018315018314, worksheet.webtool_graphs_r14, 0.002); end
  def test_webtool_graphs_s14; assert_in_epsilon(23.357509157509156, worksheet.webtool_graphs_s14, 0.002); end
  def test_webtool_graphs_t14; assert_in_epsilon(23.4, worksheet.webtool_graphs_t14, 0.002); end
  def test_webtool_graphs_b47; assert_equal("Area", worksheet.webtool_graphs_b47); end
  def test_webtool_graphs_c47; assert_equal("Description", worksheet.webtool_graphs_c47); end
  def test_webtool_graphs_d47; assert_equal("1975", worksheet.webtool_graphs_d47); end
  def test_webtool_graphs_e47; assert_equal("1980", worksheet.webtool_graphs_e47); end
  def test_webtool_graphs_f47; assert_equal("1985", worksheet.webtool_graphs_f47); end
  def test_webtool_graphs_g47; assert_equal("1990", worksheet.webtool_graphs_g47); end
  def test_webtool_graphs_h47; assert_equal("1995", worksheet.webtool_graphs_h47); end
  def test_webtool_graphs_i47; assert_equal("2000", worksheet.webtool_graphs_i47); end
  def test_webtool_graphs_j47; assert_equal("2005", worksheet.webtool_graphs_j47); end
  def test_webtool_graphs_k47; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k47, 0.002); end
  def test_webtool_graphs_l47; assert_equal("2011", worksheet.webtool_graphs_l47); end
  def test_webtool_graphs_m47; assert_equal("2015", worksheet.webtool_graphs_m47); end
  def test_webtool_graphs_n47; assert_equal("2020", worksheet.webtool_graphs_n47); end
  def test_webtool_graphs_o47; assert_equal("2025", worksheet.webtool_graphs_o47); end
  def test_webtool_graphs_p47; assert_equal("2030", worksheet.webtool_graphs_p47); end
  def test_webtool_graphs_q47; assert_equal("2035", worksheet.webtool_graphs_q47); end
  def test_webtool_graphs_r47; assert_equal("2040", worksheet.webtool_graphs_r47); end
  def test_webtool_graphs_s47; assert_equal("2045", worksheet.webtool_graphs_s47); end
  def test_webtool_graphs_t47; assert_equal("2050", worksheet.webtool_graphs_t47); end
  def test_webtool_graphs_b48; assert_equal("Urban", worksheet.webtool_graphs_b48); end
  def test_webtool_graphs_c48; assert_equal("Urban lighting", worksheet.webtool_graphs_c48); end
  def test_webtool_graphs_l48; assert_in_epsilon(24.0, worksheet.webtool_graphs_l48, 0.002); end
  def test_webtool_graphs_m48; assert_in_epsilon(25.641025641025642, worksheet.webtool_graphs_m48, 0.002); end
  def test_webtool_graphs_n48; assert_in_epsilon(26.906593406593405, worksheet.webtool_graphs_n48, 0.002); end
  def test_webtool_graphs_o48; assert_in_epsilon(28.172161172161175, worksheet.webtool_graphs_o48, 0.002); end
  def test_webtool_graphs_p48; assert_in_epsilon(29.437728937728934, worksheet.webtool_graphs_p48, 0.002); end
  def test_webtool_graphs_q48; assert_in_epsilon(30.7032967032967, worksheet.webtool_graphs_q48, 0.002); end
  def test_webtool_graphs_r48; assert_in_epsilon(31.96886446886447, worksheet.webtool_graphs_r48, 0.002); end
  def test_webtool_graphs_s48; assert_in_epsilon(33.234432234432234, worksheet.webtool_graphs_s48, 0.002); end
  def test_webtool_graphs_t48; assert_in_epsilon(34.5, worksheet.webtool_graphs_t48, 0.002); end
  def test_webtool_graphs_b49; assert_equal("Rural", worksheet.webtool_graphs_b49); end
  def test_webtool_graphs_c49; assert_equal("Rural lighting", worksheet.webtool_graphs_c49); end
  def test_webtool_graphs_l49; assert_in_epsilon(12.0, worksheet.webtool_graphs_l49, 0.002); end
  def test_webtool_graphs_m49; assert_in_epsilon(13.846153846153847, worksheet.webtool_graphs_m49, 0.002); end
  def test_webtool_graphs_n49; assert_in_epsilon(15.368131868131869, worksheet.webtool_graphs_n49, 0.002); end
  def test_webtool_graphs_o49; assert_in_epsilon(16.89010989010989, worksheet.webtool_graphs_o49, 0.002); end
  def test_webtool_graphs_p49; assert_in_epsilon(18.412087912087912, worksheet.webtool_graphs_p49, 0.002); end
  def test_webtool_graphs_q49; assert_in_epsilon(19.93406593406593, worksheet.webtool_graphs_q49, 0.002); end
  def test_webtool_graphs_r49; assert_in_epsilon(21.456043956043956, worksheet.webtool_graphs_r49, 0.002); end
  def test_webtool_graphs_s49; assert_in_epsilon(22.978021978021975, worksheet.webtool_graphs_s49, 0.002); end
  def test_webtool_graphs_t49; assert_in_epsilon(24.5, worksheet.webtool_graphs_t49, 0.002); end
  def test_webtool_graphs_b352; assert_equal("Area", worksheet.webtool_graphs_b352); end
  def test_webtool_graphs_c352; assert_equal("Technology code", worksheet.webtool_graphs_c352); end
  def test_webtool_graphs_d352; assert_equal("1975", worksheet.webtool_graphs_d352); end
  def test_webtool_graphs_e352; assert_equal("1980", worksheet.webtool_graphs_e352); end
  def test_webtool_graphs_f352; assert_equal("1985", worksheet.webtool_graphs_f352); end
  def test_webtool_graphs_g352; assert_equal("1990", worksheet.webtool_graphs_g352); end
  def test_webtool_graphs_h352; assert_equal("1995", worksheet.webtool_graphs_h352); end
  def test_webtool_graphs_i352; assert_equal("2000", worksheet.webtool_graphs_i352); end
  def test_webtool_graphs_j352; assert_equal("2005", worksheet.webtool_graphs_j352); end
  def test_webtool_graphs_k352; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k352, 0.002); end
  def test_webtool_graphs_l352; assert_equal("2011", worksheet.webtool_graphs_l352); end
  def test_webtool_graphs_m352; assert_equal("2015", worksheet.webtool_graphs_m352); end
  def test_webtool_graphs_n352; assert_equal("2020", worksheet.webtool_graphs_n352); end
  def test_webtool_graphs_o352; assert_equal("2025", worksheet.webtool_graphs_o352); end
  def test_webtool_graphs_p352; assert_equal("2030", worksheet.webtool_graphs_p352); end
  def test_webtool_graphs_q352; assert_equal("2035", worksheet.webtool_graphs_q352); end
  def test_webtool_graphs_r352; assert_equal("2040", worksheet.webtool_graphs_r352); end
  def test_webtool_graphs_s352; assert_equal("2045", worksheet.webtool_graphs_s352); end
  def test_webtool_graphs_t352; assert_equal("2050", worksheet.webtool_graphs_t352); end
  def test_webtool_graphs_b353; assert_equal("Rural", worksheet.webtool_graphs_b353); end
  def test_webtool_graphs_c353; assert_equal("heater.solar.rural.space", worksheet.webtool_graphs_c353); end
  def test_webtool_graphs_l353; assert_in_delta(0.0, (worksheet.webtool_graphs_l353||0), 0.002); end
  def test_webtool_graphs_m353; assert_in_delta(0.0, (worksheet.webtool_graphs_m353||0), 0.002); end
  def test_webtool_graphs_n353; assert_in_delta(0.0007142857142857149, worksheet.webtool_graphs_n353, 0.002); end
  def test_webtool_graphs_o353; assert_in_delta(0.0014285714285714299, worksheet.webtool_graphs_o353, 0.002); end
  def test_webtool_graphs_p353; assert_in_delta(0.0021428571428571447, worksheet.webtool_graphs_p353, 0.002); end
  def test_webtool_graphs_q353; assert_in_delta(0.0028571428571428597, worksheet.webtool_graphs_q353, 0.002); end
  def test_webtool_graphs_r353; assert_in_delta(0.0035714285714285752, worksheet.webtool_graphs_r353, 0.002); end
  def test_webtool_graphs_s353; assert_in_delta(0.004285714285714289, worksheet.webtool_graphs_s353, 0.002); end
  def test_webtool_graphs_t353; assert_in_delta(0.0050000000000000044, worksheet.webtool_graphs_t353, 0.002); end
  def test_webtool_graphs_b354; assert_equal("Rural", worksheet.webtool_graphs_b354); end
  def test_webtool_graphs_c354; assert_equal("heater.heatpump.rural.space", worksheet.webtool_graphs_c354); end
  def test_webtool_graphs_l354; assert_in_delta(0.005, worksheet.webtool_graphs_l354, 0.002); end
  def test_webtool_graphs_m354; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_m354, 0.002); end
  def test_webtool_graphs_n354; assert_in_delta(0.007071428571428573, worksheet.webtool_graphs_n354, 0.002); end
  def test_webtool_graphs_o354; assert_in_delta(0.009142857142857147, worksheet.webtool_graphs_o354, 0.002); end
  def test_webtool_graphs_p354; assert_in_delta(0.011214285714285722, worksheet.webtool_graphs_p354, 0.002); end
  def test_webtool_graphs_q354; assert_in_delta(0.013285714285714293, worksheet.webtool_graphs_q354, 0.002); end
  def test_webtool_graphs_r354; assert_in_delta(0.015357142857142868, worksheet.webtool_graphs_r354, 0.002); end
  def test_webtool_graphs_s354; assert_in_delta(0.01742857142857144, worksheet.webtool_graphs_s354, 0.002); end
  def test_webtool_graphs_t354; assert_in_delta(0.019500000000000014, worksheet.webtool_graphs_t354, 0.002); end
  def test_webtool_graphs_b355; assert_equal("Rural", worksheet.webtool_graphs_b355); end
  def test_webtool_graphs_c355; assert_equal("heater.electricity.rural.space", worksheet.webtool_graphs_c355); end
  def test_webtool_graphs_l355; assert_in_delta(0.01, worksheet.webtool_graphs_l355, 0.002); end
  def test_webtool_graphs_m355; assert_in_delta(0.02435897435897436, worksheet.webtool_graphs_m355, 0.002); end
  def test_webtool_graphs_n355; assert_in_delta(0.04087912087912088, worksheet.webtool_graphs_n355, 0.002); end
  def test_webtool_graphs_o355; assert_in_delta(0.057399267399267394, worksheet.webtool_graphs_o355, 0.002); end
  def test_webtool_graphs_p355; assert_in_delta(0.07391941391941392, worksheet.webtool_graphs_p355, 0.002); end
  def test_webtool_graphs_q355; assert_in_delta(0.09043956043956043, worksheet.webtool_graphs_q355, 0.002); end
  def test_webtool_graphs_r355; assert_in_delta(0.10695970695970695, worksheet.webtool_graphs_r355, 0.002); end
  def test_webtool_graphs_s355; assert_in_delta(0.12347985347985345, worksheet.webtool_graphs_s355, 0.002); end
  def test_webtool_graphs_t355; assert_in_delta(0.13999999999999999, worksheet.webtool_graphs_t355, 0.002); end
  def test_webtool_graphs_c356; assert_equal("% of rural space heating that is zero-carbon", worksheet.webtool_graphs_c356); end
  def test_webtool_graphs_l356; assert_in_delta(0.005, worksheet.webtool_graphs_l356, 0.002); end
  def test_webtool_graphs_m356; assert_in_delta(0.005000000000000001, worksheet.webtool_graphs_m356, 0.002); end
  def test_webtool_graphs_n356; assert_in_delta(0.007785714285714288, worksheet.webtool_graphs_n356, 0.002); end
  def test_webtool_graphs_o356; assert_in_delta(0.010571428571428577, worksheet.webtool_graphs_o356, 0.002); end
  def test_webtool_graphs_p356; assert_in_delta(0.013357142857142866, worksheet.webtool_graphs_p356, 0.002); end
  def test_webtool_graphs_q356; assert_in_delta(0.016142857142857153, worksheet.webtool_graphs_q356, 0.002); end
  def test_webtool_graphs_r356; assert_in_delta(0.018928571428571444, worksheet.webtool_graphs_r356, 0.002); end
  def test_webtool_graphs_s356; assert_in_delta(0.021714285714285728, worksheet.webtool_graphs_s356, 0.002); end
  def test_webtool_graphs_t356; assert_in_delta(0.02450000000000002, worksheet.webtool_graphs_t356, 0.002); end
  def test_webtool_graphs_c357; assert_equal("% of rural space heating by zero carbon and electric technologies", worksheet.webtool_graphs_c357); end
  def test_webtool_graphs_l357; assert_in_delta(0.015, worksheet.webtool_graphs_l357, 0.002); end
  def test_webtool_graphs_m357; assert_in_delta(0.02935897435897436, worksheet.webtool_graphs_m357, 0.002); end
  def test_webtool_graphs_n357; assert_in_delta(0.04866483516483516, worksheet.webtool_graphs_n357, 0.002); end
  def test_webtool_graphs_o357; assert_in_delta(0.06797069597069597, worksheet.webtool_graphs_o357, 0.002); end
  def test_webtool_graphs_p357; assert_in_delta(0.0872765567765568, worksheet.webtool_graphs_p357, 0.002); end
  def test_webtool_graphs_q357; assert_in_delta(0.10658241758241759, worksheet.webtool_graphs_q357, 0.002); end
  def test_webtool_graphs_r357; assert_in_delta(0.1258882783882784, worksheet.webtool_graphs_r357, 0.002); end
  def test_webtool_graphs_s357; assert_in_delta(0.14519413919413918, worksheet.webtool_graphs_s357, 0.002); end
  def test_webtool_graphs_t357; assert_in_delta(0.1645, worksheet.webtool_graphs_t357, 0.002); end
  def test_webtool_graphs_b340; assert_equal("Type of city", worksheet.webtool_graphs_b340); end
  def test_webtool_graphs_c340; assert_equal("Technology code", worksheet.webtool_graphs_c340); end
  def test_webtool_graphs_d340; assert_equal("1975", worksheet.webtool_graphs_d340); end
  def test_webtool_graphs_e340; assert_equal("1980", worksheet.webtool_graphs_e340); end
  def test_webtool_graphs_f340; assert_equal("1985", worksheet.webtool_graphs_f340); end
  def test_webtool_graphs_g340; assert_equal("1990", worksheet.webtool_graphs_g340); end
  def test_webtool_graphs_h340; assert_equal("1995", worksheet.webtool_graphs_h340); end
  def test_webtool_graphs_i340; assert_equal("2000", worksheet.webtool_graphs_i340); end
  def test_webtool_graphs_j340; assert_equal("2005", worksheet.webtool_graphs_j340); end
  def test_webtool_graphs_k340; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k340, 0.002); end
  def test_webtool_graphs_l340; assert_equal("2011", worksheet.webtool_graphs_l340); end
  def test_webtool_graphs_m340; assert_equal("2015", worksheet.webtool_graphs_m340); end
  def test_webtool_graphs_n340; assert_equal("2020", worksheet.webtool_graphs_n340); end
  def test_webtool_graphs_o340; assert_equal("2025", worksheet.webtool_graphs_o340); end
  def test_webtool_graphs_p340; assert_equal("2030", worksheet.webtool_graphs_p340); end
  def test_webtool_graphs_q340; assert_equal("2035", worksheet.webtool_graphs_q340); end
  def test_webtool_graphs_r340; assert_equal("2040", worksheet.webtool_graphs_r340); end
  def test_webtool_graphs_s340; assert_equal("2045", worksheet.webtool_graphs_s340); end
  def test_webtool_graphs_t340; assert_equal("2050", worksheet.webtool_graphs_t340); end
  def test_webtool_graphs_b341; assert_equal("Urban", worksheet.webtool_graphs_b341); end
  def test_webtool_graphs_c341; assert_equal("heater.solar.urban.space", worksheet.webtool_graphs_c341); end
  def test_webtool_graphs_l341; assert_in_delta(0.0, (worksheet.webtool_graphs_l341||0), 0.002); end
  def test_webtool_graphs_m341; assert_in_delta(0.0, (worksheet.webtool_graphs_m341||0), 0.002); end
  def test_webtool_graphs_n341; assert_in_delta(0.0007142857142857149, worksheet.webtool_graphs_n341, 0.002); end
  def test_webtool_graphs_o341; assert_in_delta(0.0014285714285714299, worksheet.webtool_graphs_o341, 0.002); end
  def test_webtool_graphs_p341; assert_in_delta(0.0021428571428571447, worksheet.webtool_graphs_p341, 0.002); end
  def test_webtool_graphs_q341; assert_in_delta(0.0028571428571428597, worksheet.webtool_graphs_q341, 0.002); end
  def test_webtool_graphs_r341; assert_in_delta(0.0035714285714285752, worksheet.webtool_graphs_r341, 0.002); end
  def test_webtool_graphs_s341; assert_in_delta(0.004285714285714289, worksheet.webtool_graphs_s341, 0.002); end
  def test_webtool_graphs_t341; assert_in_delta(0.0050000000000000044, worksheet.webtool_graphs_t341, 0.002); end
  def test_webtool_graphs_b342; assert_equal("Urban", worksheet.webtool_graphs_b342); end
  def test_webtool_graphs_c342; assert_equal("heater.heatpump.urban.space", worksheet.webtool_graphs_c342); end
  def test_webtool_graphs_l342; assert_in_delta(0.02, worksheet.webtool_graphs_l342, 0.002); end
  def test_webtool_graphs_m342; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_m342, 0.002); end
  def test_webtool_graphs_n342; assert_in_delta(0.02185714285714286, worksheet.webtool_graphs_n342, 0.002); end
  def test_webtool_graphs_o342; assert_in_delta(0.023714285714285722, worksheet.webtool_graphs_o342, 0.002); end
  def test_webtool_graphs_p342; assert_in_delta(0.02557142857142858, worksheet.webtool_graphs_p342, 0.002); end
  def test_webtool_graphs_q342; assert_in_delta(0.027428571428571434, worksheet.webtool_graphs_q342, 0.002); end
  def test_webtool_graphs_r342; assert_in_delta(0.029285714285714297, worksheet.webtool_graphs_r342, 0.002); end
  def test_webtool_graphs_s342; assert_in_delta(0.031142857142857153, worksheet.webtool_graphs_s342, 0.002); end
  def test_webtool_graphs_t342; assert_in_delta(0.033000000000000015, worksheet.webtool_graphs_t342, 0.002); end
  def test_webtool_graphs_b343; assert_equal("Urban", worksheet.webtool_graphs_b343); end
  def test_webtool_graphs_c343; assert_equal("heater.electricity.urban.space", worksheet.webtool_graphs_c343); end
  def test_webtool_graphs_l343; assert_in_delta(0.03, worksheet.webtool_graphs_l343, 0.002); end
  def test_webtool_graphs_m343; assert_in_delta(0.03512820512820513, worksheet.webtool_graphs_m343, 0.002); end
  def test_webtool_graphs_n343; assert_in_delta(0.04110989010989011, worksheet.webtool_graphs_n343, 0.002); end
  def test_webtool_graphs_o343; assert_in_delta(0.04709157509157509, worksheet.webtool_graphs_o343, 0.002); end
  def test_webtool_graphs_p343; assert_in_delta(0.053073260073260076, worksheet.webtool_graphs_p343, 0.002); end
  def test_webtool_graphs_q343; assert_in_delta(0.05905494505494505, worksheet.webtool_graphs_q343, 0.002); end
  def test_webtool_graphs_r343; assert_in_delta(0.06503663003663004, worksheet.webtool_graphs_r343, 0.002); end
  def test_webtool_graphs_s343; assert_in_delta(0.07101831501831503, worksheet.webtool_graphs_s343, 0.002); end
  def test_webtool_graphs_t343; assert_in_delta(0.077, worksheet.webtool_graphs_t343, 0.002); end
  def test_webtool_graphs_c344; assert_equal("% of urban space heating that is zero-carbon", worksheet.webtool_graphs_c344); end
  def test_webtool_graphs_l344; assert_in_delta(0.02, worksheet.webtool_graphs_l344, 0.002); end
  def test_webtool_graphs_m344; assert_in_delta(0.020000000000000004, worksheet.webtool_graphs_m344, 0.002); end
  def test_webtool_graphs_n344; assert_in_delta(0.022571428571428576, worksheet.webtool_graphs_n344, 0.002); end
  def test_webtool_graphs_o344; assert_in_delta(0.02514285714285715, worksheet.webtool_graphs_o344, 0.002); end
  def test_webtool_graphs_p344; assert_in_delta(0.027714285714285723, worksheet.webtool_graphs_p344, 0.002); end
  def test_webtool_graphs_q344; assert_in_delta(0.030285714285714294, worksheet.webtool_graphs_q344, 0.002); end
  def test_webtool_graphs_r344; assert_in_delta(0.03285714285714287, worksheet.webtool_graphs_r344, 0.002); end
  def test_webtool_graphs_s344; assert_in_delta(0.03542857142857144, worksheet.webtool_graphs_s344, 0.002); end
  def test_webtool_graphs_t344; assert_in_delta(0.03800000000000002, worksheet.webtool_graphs_t344, 0.002); end
  def test_webtool_graphs_c345; assert_equal("% of urban space heating by zero carbon and electric technologies", worksheet.webtool_graphs_c345); end
  def test_webtool_graphs_l345; assert_in_delta(0.05, worksheet.webtool_graphs_l345, 0.002); end
  def test_webtool_graphs_m345; assert_in_delta(0.055128205128205134, worksheet.webtool_graphs_m345, 0.002); end
  def test_webtool_graphs_n345; assert_in_delta(0.06368131868131868, worksheet.webtool_graphs_n345, 0.002); end
  def test_webtool_graphs_o345; assert_in_delta(0.07223443223443224, worksheet.webtool_graphs_o345, 0.002); end
  def test_webtool_graphs_p345; assert_in_delta(0.0807875457875458, worksheet.webtool_graphs_p345, 0.002); end
  def test_webtool_graphs_q345; assert_in_delta(0.08934065934065935, worksheet.webtool_graphs_q345, 0.002); end
  def test_webtool_graphs_r345; assert_in_delta(0.0978937728937729, worksheet.webtool_graphs_r345, 0.002); end
  def test_webtool_graphs_s345; assert_in_delta(0.10644688644688646, worksheet.webtool_graphs_s345, 0.002); end
  def test_webtool_graphs_t345; assert_in_delta(0.11500000000000002, worksheet.webtool_graphs_t345, 0.002); end
  def test_webtool_graphs_b536; assert_equal("Type of city", worksheet.webtool_graphs_b536); end
  def test_webtool_graphs_c536; assert_equal("Tech description", worksheet.webtool_graphs_c536); end
  def test_webtool_graphs_d536; assert_equal("1975", worksheet.webtool_graphs_d536); end
  def test_webtool_graphs_e536; assert_equal("1980", worksheet.webtool_graphs_e536); end
  def test_webtool_graphs_f536; assert_equal("1985", worksheet.webtool_graphs_f536); end
  def test_webtool_graphs_g536; assert_equal("1990", worksheet.webtool_graphs_g536); end
  def test_webtool_graphs_h536; assert_equal("1995", worksheet.webtool_graphs_h536); end
  def test_webtool_graphs_i536; assert_equal("2000", worksheet.webtool_graphs_i536); end
  def test_webtool_graphs_j536; assert_equal("2005", worksheet.webtool_graphs_j536); end
  def test_webtool_graphs_k536; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k536, 0.002); end
  def test_webtool_graphs_l536; assert_equal("2011", worksheet.webtool_graphs_l536); end
  def test_webtool_graphs_m536; assert_equal("2015", worksheet.webtool_graphs_m536); end
  def test_webtool_graphs_n536; assert_equal("2020", worksheet.webtool_graphs_n536); end
  def test_webtool_graphs_o536; assert_equal("2025", worksheet.webtool_graphs_o536); end
  def test_webtool_graphs_p536; assert_equal("2030", worksheet.webtool_graphs_p536); end
  def test_webtool_graphs_q536; assert_equal("2035", worksheet.webtool_graphs_q536); end
  def test_webtool_graphs_r536; assert_equal("2040", worksheet.webtool_graphs_r536); end
  def test_webtool_graphs_s536; assert_equal("2045", worksheet.webtool_graphs_s536); end
  def test_webtool_graphs_t536; assert_equal("2050", worksheet.webtool_graphs_t536); end
  def test_webtool_graphs_b537; assert_equal("All", worksheet.webtool_graphs_b537); end
  def test_webtool_graphs_c537; assert_equal("Global urban incandescent light bulb", worksheet.webtool_graphs_c537); end
  def test_webtool_graphs_l537; assert_in_epsilon(4810296518.840451, worksheet.webtool_graphs_l537, 0.002); end
  def test_webtool_graphs_m537; assert_in_epsilon(5414549311.174678, worksheet.webtool_graphs_m537, 0.002); end
  def test_webtool_graphs_n537; assert_in_epsilon(5740709562.902803, worksheet.webtool_graphs_n537, 0.002); end
  def test_webtool_graphs_o537; assert_in_epsilon(6298681520.919191, worksheet.webtool_graphs_o537, 0.002); end
  def test_webtool_graphs_p537; assert_in_epsilon(6810733166.500703, worksheet.webtool_graphs_p537, 0.002); end
  def test_webtool_graphs_q537; assert_in_epsilon(7226274701.501088, worksheet.webtool_graphs_q537, 0.002); end
  def test_webtool_graphs_r537; assert_in_epsilon(7620837337.22794, worksheet.webtool_graphs_r537, 0.002); end
  def test_webtool_graphs_s537; assert_in_epsilon(7900255300.908498, worksheet.webtool_graphs_s537, 0.002); end
  def test_webtool_graphs_t537; assert_in_epsilon(8159007590.480132, worksheet.webtool_graphs_t537, 0.002); end
  def test_webtool_graphs_b538; assert_equal("All", worksheet.webtool_graphs_b538); end
  def test_webtool_graphs_c538; assert_equal("Global urban halogens light bulb", worksheet.webtool_graphs_c538); end
  def test_webtool_graphs_l538; assert_in_epsilon(169065325.99887288, worksheet.webtool_graphs_l538, 0.002); end
  def test_webtool_graphs_m538; assert_in_epsilon(192344055.99089646, worksheet.webtool_graphs_m538, 0.002); end
  def test_webtool_graphs_n538; assert_in_epsilon(208494596.3624605, worksheet.webtool_graphs_n538, 0.002); end
  def test_webtool_graphs_o538; assert_in_epsilon(237661992.19572943, worksheet.webtool_graphs_o538, 0.002); end
  def test_webtool_graphs_p538; assert_in_epsilon(267628903.94874018, worksheet.webtool_graphs_p538, 0.002); end
  def test_webtool_graphs_q538; assert_in_epsilon(296437954.78441024, worksheet.webtool_graphs_q538, 0.002); end
  def test_webtool_graphs_r538; assert_in_epsilon(327731007.950021, worksheet.webtool_graphs_r538, 0.002); end
  def test_webtool_graphs_s538; assert_in_epsilon(357295091.75835776, worksheet.webtool_graphs_s538, 0.002); end
  def test_webtool_graphs_t538; assert_in_epsilon(390041788.5017236, worksheet.webtool_graphs_t538, 0.002); end
  def test_webtool_graphs_b539; assert_equal("All", worksheet.webtool_graphs_b539); end
  def test_webtool_graphs_c539; assert_equal("Global urban compact fluorescent lamp", worksheet.webtool_graphs_c539); end
  def test_webtool_graphs_l539; assert_in_epsilon(1404064225.1034694, worksheet.webtool_graphs_l539, 0.002); end
  def test_webtool_graphs_m539; assert_in_epsilon(1639002272.4386554, worksheet.webtool_graphs_m539, 0.002); end
  def test_webtool_graphs_n539; assert_in_epsilon(2007885410.0196095, worksheet.webtool_graphs_n539, 0.002); end
  def test_webtool_graphs_o539; assert_in_epsilon(2511600233.851224, worksheet.webtool_graphs_o539, 0.002); end
  def test_webtool_graphs_p539; assert_in_epsilon(3083415473.278544, worksheet.webtool_graphs_p539, 0.002); end
  def test_webtool_graphs_q539; assert_in_epsilon(3702703300.4706097, worksheet.webtool_graphs_q539, 0.002); end
  def test_webtool_graphs_r539; assert_in_epsilon(4416049834.569175, worksheet.webtool_graphs_r539, 0.002); end
  def test_webtool_graphs_s539; assert_in_epsilon(5172036577.552783, worksheet.webtool_graphs_s539, 0.002); end
  def test_webtool_graphs_t539; assert_in_epsilon(6043565078.512742, worksheet.webtool_graphs_t539, 0.002); end
  def test_webtool_graphs_b540; assert_equal("All", worksheet.webtool_graphs_b540); end
  def test_webtool_graphs_c540; assert_equal("Global urban LEDs bulb", worksheet.webtool_graphs_c540); end
  def test_webtool_graphs_l540; assert_in_epsilon(16533880.618812757, worksheet.webtool_graphs_l540, 0.002); end
  def test_webtool_graphs_m540; assert_in_epsilon(18860593.8144567, worksheet.webtool_graphs_m540, 0.002); end
  def test_webtool_graphs_n540; assert_in_epsilon(38576367.926708415, worksheet.webtool_graphs_n540, 0.002); end
  def test_webtool_graphs_o540; assert_in_epsilon(53678753.54126936, worksheet.webtool_graphs_o540, 0.002); end
  def test_webtool_graphs_p540; assert_in_epsilon(71370654.80419262, worksheet.webtool_graphs_p540, 0.002); end
  def test_webtool_graphs_q540; assert_in_epsilon(91079538.21435753, worksheet.webtool_graphs_q540, 0.002); end
  def test_webtool_graphs_r540; assert_in_epsilon(114038506.47269821, worksheet.webtool_graphs_r540, 0.002); end
  def test_webtool_graphs_s540; assert_in_epsilon(138757240.86300963, worksheet.webtool_graphs_s540, 0.002); end
  def test_webtool_graphs_t540; assert_in_epsilon(167574755.32800668, worksheet.webtool_graphs_t540, 0.002); end
  def test_webtool_graphs_b541; assert_equal("All", worksheet.webtool_graphs_b541); end
  def test_webtool_graphs_c541; assert_equal("Global rural incandescent light bulb", worksheet.webtool_graphs_c541); end
  def test_webtool_graphs_l541; assert_in_epsilon(1072934914.0831571, worksheet.webtool_graphs_l541, 0.002); end
  def test_webtool_graphs_m541; assert_in_epsilon(1246279154.9939184, worksheet.webtool_graphs_m541, 0.002); end
  def test_webtool_graphs_n541; assert_in_epsilon(1303788543.966381, worksheet.webtool_graphs_n541, 0.002); end
  def test_webtool_graphs_o541; assert_in_epsilon(1472087160.74239, worksheet.webtool_graphs_o541, 0.002); end
  def test_webtool_graphs_p541; assert_in_epsilon(1637537775.2281208, worksheet.webtool_graphs_p541, 0.002); end
  def test_webtool_graphs_q541; assert_in_epsilon(1792483931.9271908, worksheet.webtool_graphs_q541, 0.002); end
  def test_webtool_graphs_r541; assert_in_epsilon(1954692397.6820834, worksheet.webtool_graphs_r541, 0.002); end
  def test_webtool_graphs_s541; assert_in_epsilon(2101678568.767624, worksheet.webtool_graphs_s541, 0.002); end
  def test_webtool_graphs_t541; assert_in_epsilon(2236307271.2380075, worksheet.webtool_graphs_t541, 0.002); end
  def test_webtool_graphs_b542; assert_equal("All", worksheet.webtool_graphs_b542); end
  def test_webtool_graphs_c542; assert_equal("Global rural halogens light bulb", worksheet.webtool_graphs_c542); end
  def test_webtool_graphs_l542; assert_in_epsilon(36389342.08802943, worksheet.webtool_graphs_l542, 0.002); end
  def test_webtool_graphs_m542; assert_in_epsilon(41829014.91995709, worksheet.webtool_graphs_m542, 0.002); end
  def test_webtool_graphs_n542; assert_in_epsilon(42538504.23027559, worksheet.webtool_graphs_n542, 0.002); end
  def test_webtool_graphs_o542; assert_in_epsilon(47830058.931300834, worksheet.webtool_graphs_o542, 0.002); end
  def test_webtool_graphs_p542; assert_in_epsilon(52929228.04407418, worksheet.webtool_graphs_p542, 0.002); end
  def test_webtool_graphs_q542; assert_in_epsilon(57590870.04399565, worksheet.webtool_graphs_q542, 0.002); end
  def test_webtool_graphs_r542; assert_in_epsilon(62508723.28755833, worksheet.webtool_graphs_r542, 0.002); end
  def test_webtool_graphs_s542; assert_in_epsilon(66832258.378775924, worksheet.webtool_graphs_s542, 0.002); end
  def test_webtool_graphs_t542; assert_in_epsilon(70714458.72672357, worksheet.webtool_graphs_t542, 0.002); end
  def test_webtool_graphs_b543; assert_equal("All", worksheet.webtool_graphs_b543); end
  def test_webtool_graphs_c543; assert_equal("Global rural compact fluorescent lamp", worksheet.webtool_graphs_c543); end
  def test_webtool_graphs_l543; assert_in_epsilon(260727856.6932884, worksheet.webtool_graphs_l543, 0.002); end
  def test_webtool_graphs_m543; assert_in_epsilon(296992342.23947275, worksheet.webtool_graphs_m543, 0.002); end
  def test_webtool_graphs_n543; assert_in_epsilon(316583980.4404465, worksheet.webtool_graphs_n543, 0.002); end
  def test_webtool_graphs_o543; assert_in_epsilon(365914882.79956865, worksheet.webtool_graphs_o543, 0.002); end
  def test_webtool_graphs_p543; assert_in_epsilon(415897240.75913805, worksheet.webtool_graphs_p543, 0.002); end
  def test_webtool_graphs_q543; assert_in_epsilon(464469575.6400568, worksheet.webtool_graphs_q543, 0.002); end
  def test_webtool_graphs_r543; assert_in_epsilon(517698878.7084093, worksheet.webtool_graphs_r543, 0.002); end
  def test_webtool_graphs_s543; assert_in_epsilon(567981578.8075216, worksheet.webtool_graphs_s543, 0.002); end
  def test_webtool_graphs_t543; assert_in_epsilon(616567192.2633344, worksheet.webtool_graphs_t543, 0.002); end
  def test_webtool_graphs_b544; assert_equal("All", worksheet.webtool_graphs_b544); end
  def test_webtool_graphs_c544; assert_equal("Global rural LEDs bulb", worksheet.webtool_graphs_c544); end
  def test_webtool_graphs_l544; assert_in_epsilon(2108334.4233524976, worksheet.webtool_graphs_l544, 0.002); end
  def test_webtool_graphs_m544; assert_in_epsilon(2325921.336629604, worksheet.webtool_graphs_m544, 0.002); end
  def test_webtool_graphs_n544; assert_in_epsilon(3797645.960920862, worksheet.webtool_graphs_n544, 0.002); end
  def test_webtool_graphs_o544; assert_in_epsilon(4860766.429177596, worksheet.webtool_graphs_o544, 0.002); end
  def test_webtool_graphs_p544; assert_in_epsilon(6026760.835583104, worksheet.webtool_graphs_p544, 0.002); end
  def test_webtool_graphs_q544; assert_in_epsilon(7249884.801730925, worksheet.webtool_graphs_q544, 0.002); end
  def test_webtool_graphs_r544; assert_in_epsilon(8632846.91901872, worksheet.webtool_graphs_r544, 0.002); end
  def test_webtool_graphs_s544; assert_in_epsilon(10027669.36707097, worksheet.webtool_graphs_s544, 0.002); end
  def test_webtool_graphs_t544; assert_in_epsilon(11447727.32641989, worksheet.webtool_graphs_t544, 0.002); end
  def test_webtool_graphs_b545; assert_equal("TOTAL", worksheet.webtool_graphs_b545); end
  def test_webtool_graphs_c545; assert_equal("TOTAL", worksheet.webtool_graphs_c545); end
  def test_webtool_graphs_l545; assert_in_epsilon(7772120397.849433, worksheet.webtool_graphs_l545, 0.002); end
  def test_webtool_graphs_m545; assert_in_epsilon(8852182666.908665, worksheet.webtool_graphs_m545, 0.002); end
  def test_webtool_graphs_n545; assert_in_epsilon(9662374611.809607, worksheet.webtool_graphs_n545, 0.002); end
  def test_webtool_graphs_o545; assert_in_epsilon(10992315369.409851, worksheet.webtool_graphs_o545, 0.002); end
  def test_webtool_graphs_p545; assert_in_epsilon(12345539203.399097, worksheet.webtool_graphs_p545, 0.002); end
  def test_webtool_graphs_q545; assert_in_epsilon(13638289757.383438, worksheet.webtool_graphs_q545, 0.002); end
  def test_webtool_graphs_r545; assert_in_epsilon(15022189532.816902, worksheet.webtool_graphs_r545, 0.002); end
  def test_webtool_graphs_s545; assert_in_epsilon(16314864286.403643, worksheet.webtool_graphs_s545, 0.002); end
  def test_webtool_graphs_t545; assert_in_epsilon(17695225862.37709, worksheet.webtool_graphs_t545, 0.002); end
  def test_webtool_graphs_b528; assert_equal("Type of city", worksheet.webtool_graphs_b528); end
  def test_webtool_graphs_c528; assert_equal("Technology code", worksheet.webtool_graphs_c528); end
  def test_webtool_graphs_d528; assert_equal("1975", worksheet.webtool_graphs_d528); end
  def test_webtool_graphs_e528; assert_equal("1980", worksheet.webtool_graphs_e528); end
  def test_webtool_graphs_f528; assert_equal("1985", worksheet.webtool_graphs_f528); end
  def test_webtool_graphs_g528; assert_equal("1990", worksheet.webtool_graphs_g528); end
  def test_webtool_graphs_h528; assert_equal("1995", worksheet.webtool_graphs_h528); end
  def test_webtool_graphs_i528; assert_equal("2000", worksheet.webtool_graphs_i528); end
  def test_webtool_graphs_j528; assert_equal("2005", worksheet.webtool_graphs_j528); end
  def test_webtool_graphs_k528; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k528, 0.002); end
  def test_webtool_graphs_l528; assert_equal("2011", worksheet.webtool_graphs_l528); end
  def test_webtool_graphs_m528; assert_equal("2015", worksheet.webtool_graphs_m528); end
  def test_webtool_graphs_n528; assert_equal("2020", worksheet.webtool_graphs_n528); end
  def test_webtool_graphs_o528; assert_equal("2025", worksheet.webtool_graphs_o528); end
  def test_webtool_graphs_p528; assert_equal("2030", worksheet.webtool_graphs_p528); end
  def test_webtool_graphs_q528; assert_equal("2035", worksheet.webtool_graphs_q528); end
  def test_webtool_graphs_r528; assert_equal("2040", worksheet.webtool_graphs_r528); end
  def test_webtool_graphs_s528; assert_equal("2045", worksheet.webtool_graphs_s528); end
  def test_webtool_graphs_t528; assert_equal("2050", worksheet.webtool_graphs_t528); end
  def test_webtool_graphs_b529; assert_equal("All", worksheet.webtool_graphs_b529); end
  def test_webtool_graphs_c529; assert_equal("appliances.refrigerator.urban", worksheet.webtool_graphs_c529); end
  def test_webtool_graphs_l529; assert_in_epsilon(132969809.14237256, worksheet.webtool_graphs_l529, 0.002); end
  def test_webtool_graphs_m529; assert_in_epsilon(145301691.58197936, worksheet.webtool_graphs_m529, 0.002); end
  def test_webtool_graphs_n529; assert_in_epsilon(169127126.2113824, worksheet.webtool_graphs_n529, 0.002); end
  def test_webtool_graphs_o529; assert_in_epsilon(198868979.0374685, worksheet.webtool_graphs_o529, 0.002); end
  def test_webtool_graphs_p529; assert_in_epsilon(231952597.67824894, worksheet.webtool_graphs_p529, 0.002); end
  def test_webtool_graphs_q529; assert_in_epsilon(267118782.15794617, worksheet.webtool_graphs_q529, 0.002); end
  def test_webtool_graphs_r529; assert_in_epsilon(309495761.9788562, worksheet.webtool_graphs_r529, 0.002); end
  def test_webtool_graphs_s529; assert_in_epsilon(355259256.8381138, worksheet.webtool_graphs_s529, 0.002); end
  def test_webtool_graphs_t529; assert_in_epsilon(411594604.81859636, worksheet.webtool_graphs_t529, 0.002); end
  def test_webtool_graphs_b530; assert_equal("All", worksheet.webtool_graphs_b530); end
  def test_webtool_graphs_c530; assert_equal("appliances.refrigerator.rural", worksheet.webtool_graphs_c530); end
  def test_webtool_graphs_l530; assert_in_epsilon(26336578.36666131, worksheet.webtool_graphs_l530, 0.002); end
  def test_webtool_graphs_m530; assert_in_epsilon(28543951.61180577, worksheet.webtool_graphs_m530, 0.002); end
  def test_webtool_graphs_n530; assert_in_epsilon(33905691.763643235, worksheet.webtool_graphs_n530, 0.002); end
  def test_webtool_graphs_o530; assert_in_epsilon(39765023.787794426, worksheet.webtool_graphs_o530, 0.002); end
  def test_webtool_graphs_p530; assert_in_epsilon(45982793.25374581, worksheet.webtool_graphs_p530, 0.002); end
  def test_webtool_graphs_q530; assert_in_epsilon(52461984.640945256, worksheet.webtool_graphs_q530, 0.002); end
  def test_webtool_graphs_r530; assert_in_epsilon(60155275.62724385, worksheet.webtool_graphs_r530, 0.002); end
  def test_webtool_graphs_s530; assert_in_epsilon(68242262.08113423, worksheet.webtool_graphs_s530, 0.002); end
  def test_webtool_graphs_t530; assert_in_epsilon(77116153.26704738, worksheet.webtool_graphs_t530, 0.002); end
  def test_webtool_graphs_b531; assert_equal("TOTAL", worksheet.webtool_graphs_b531); end
  def test_webtool_graphs_c531; assert_equal("TOTAL", worksheet.webtool_graphs_c531); end
  def test_webtool_graphs_l531; assert_in_epsilon(159306387.50903386, worksheet.webtool_graphs_l531, 0.002); end
  def test_webtool_graphs_m531; assert_in_epsilon(173845643.19378513, worksheet.webtool_graphs_m531, 0.002); end
  def test_webtool_graphs_n531; assert_in_epsilon(203032817.97502562, worksheet.webtool_graphs_n531, 0.002); end
  def test_webtool_graphs_o531; assert_in_epsilon(238634002.8252629, worksheet.webtool_graphs_o531, 0.002); end
  def test_webtool_graphs_p531; assert_in_epsilon(277935390.93199474, worksheet.webtool_graphs_p531, 0.002); end
  def test_webtool_graphs_q531; assert_in_epsilon(319580766.7988914, worksheet.webtool_graphs_q531, 0.002); end
  def test_webtool_graphs_r531; assert_in_epsilon(369651037.6061001, worksheet.webtool_graphs_r531, 0.002); end
  def test_webtool_graphs_s531; assert_in_epsilon(423501518.919248, worksheet.webtool_graphs_s531, 0.002); end
  def test_webtool_graphs_t531; assert_in_epsilon(488710758.08564377, worksheet.webtool_graphs_t531, 0.002); end
  def test_webtool_graphs_b520; assert_equal("Type of city", worksheet.webtool_graphs_b520); end
  def test_webtool_graphs_c520; assert_equal("Technology code", worksheet.webtool_graphs_c520); end
  def test_webtool_graphs_d520; assert_equal("1975", worksheet.webtool_graphs_d520); end
  def test_webtool_graphs_e520; assert_equal("1980", worksheet.webtool_graphs_e520); end
  def test_webtool_graphs_f520; assert_equal("1985", worksheet.webtool_graphs_f520); end
  def test_webtool_graphs_g520; assert_equal("1990", worksheet.webtool_graphs_g520); end
  def test_webtool_graphs_h520; assert_equal("1995", worksheet.webtool_graphs_h520); end
  def test_webtool_graphs_i520; assert_equal("2000", worksheet.webtool_graphs_i520); end
  def test_webtool_graphs_j520; assert_equal("2005", worksheet.webtool_graphs_j520); end
  def test_webtool_graphs_k520; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k520, 0.002); end
  def test_webtool_graphs_l520; assert_equal("2011", worksheet.webtool_graphs_l520); end
  def test_webtool_graphs_m520; assert_equal("2015", worksheet.webtool_graphs_m520); end
  def test_webtool_graphs_n520; assert_equal("2020", worksheet.webtool_graphs_n520); end
  def test_webtool_graphs_o520; assert_equal("2025", worksheet.webtool_graphs_o520); end
  def test_webtool_graphs_p520; assert_equal("2030", worksheet.webtool_graphs_p520); end
  def test_webtool_graphs_q520; assert_equal("2035", worksheet.webtool_graphs_q520); end
  def test_webtool_graphs_r520; assert_equal("2040", worksheet.webtool_graphs_r520); end
  def test_webtool_graphs_s520; assert_equal("2045", worksheet.webtool_graphs_s520); end
  def test_webtool_graphs_t520; assert_equal("2050", worksheet.webtool_graphs_t520); end
  def test_webtool_graphs_b521; assert_equal("All", worksheet.webtool_graphs_b521); end
  def test_webtool_graphs_c521; assert_equal("appliances.tv.urban", worksheet.webtool_graphs_c521); end
  def test_webtool_graphs_l521; assert_in_epsilon(391117887.95654863, worksheet.webtool_graphs_l521, 0.002); end
  def test_webtool_graphs_m521; assert_in_epsilon(433206539.8105667, worksheet.webtool_graphs_m521, 0.002); end
  def test_webtool_graphs_n521; assert_in_epsilon(519175972.06891614, worksheet.webtool_graphs_n521, 0.002); end
  def test_webtool_graphs_o521; assert_in_epsilon(615661940.5245456, worksheet.webtool_graphs_o521, 0.002); end
  def test_webtool_graphs_p521; assert_in_epsilon(723865130.6965346, worksheet.webtool_graphs_p521, 0.002); end
  def test_webtool_graphs_q521; assert_in_epsilon(840816281.9371569, worksheet.webtool_graphs_q521, 0.002); end
  def test_webtool_graphs_r521; assert_in_epsilon(977115563.5398353, worksheet.webtool_graphs_r521, 0.002); end
  def test_webtool_graphs_s521; assert_in_epsilon(1125204664.6958318, worksheet.webtool_graphs_s521, 0.002); end
  def test_webtool_graphs_t521; assert_in_epsilon(1300105195.4494324, worksheet.webtool_graphs_t521, 0.002); end
  def test_webtool_graphs_b522; assert_equal("All", worksheet.webtool_graphs_b522); end
  def test_webtool_graphs_c522; assert_equal("appliances.tv.rural", worksheet.webtool_graphs_c522); end
  def test_webtool_graphs_l522; assert_in_epsilon(81555587.42768046, worksheet.webtool_graphs_l522, 0.002); end
  def test_webtool_graphs_m522; assert_in_epsilon(90384069.77152127, worksheet.webtool_graphs_m522, 0.002); end
  def test_webtool_graphs_n522; assert_in_epsilon(108323746.71805769, worksheet.webtool_graphs_n522, 0.002); end
  def test_webtool_graphs_o522; assert_in_epsilon(128524006.47703604, worksheet.webtool_graphs_o522, 0.002); end
  def test_webtool_graphs_p522; assert_in_epsilon(150511678.3588423, worksheet.webtool_graphs_p522, 0.002); end
  def test_webtool_graphs_q522; assert_in_epsilon(173886141.8337614, worksheet.webtool_graphs_q522, 0.002); end
  def test_webtool_graphs_r522; assert_in_epsilon(200650893.95814252, worksheet.webtool_graphs_r522, 0.002); end
  def test_webtool_graphs_s522; assert_in_epsilon(229050619.78502536, worksheet.webtool_graphs_s522, 0.002); end
  def test_webtool_graphs_t522; assert_in_epsilon(259681092.01757938, worksheet.webtool_graphs_t522, 0.002); end
  def test_webtool_graphs_b523; assert_equal("TOTAL", worksheet.webtool_graphs_b523); end
  def test_webtool_graphs_c523; assert_equal("TOTAL", worksheet.webtool_graphs_c523); end
  def test_webtool_graphs_l523; assert_in_epsilon(472673475.38422906, worksheet.webtool_graphs_l523, 0.002); end
  def test_webtool_graphs_m523; assert_in_epsilon(523590609.582088, worksheet.webtool_graphs_m523, 0.002); end
  def test_webtool_graphs_n523; assert_in_epsilon(627499718.7869738, worksheet.webtool_graphs_n523, 0.002); end
  def test_webtool_graphs_o523; assert_in_epsilon(744185947.0015815, worksheet.webtool_graphs_o523, 0.002); end
  def test_webtool_graphs_p523; assert_in_epsilon(874376809.055377, worksheet.webtool_graphs_p523, 0.002); end
  def test_webtool_graphs_q523; assert_in_epsilon(1014702423.7709184, worksheet.webtool_graphs_q523, 0.002); end
  def test_webtool_graphs_r523; assert_in_epsilon(1177766457.4979777, worksheet.webtool_graphs_r523, 0.002); end
  def test_webtool_graphs_s523; assert_in_epsilon(1354255284.4808571, worksheet.webtool_graphs_s523, 0.002); end
  def test_webtool_graphs_t523; assert_in_epsilon(1559786287.4670117, worksheet.webtool_graphs_t523, 0.002); end
  def test_webtool_graphs_c563; assert_equal("Fuel type", worksheet.webtool_graphs_c563); end
  def test_webtool_graphs_d563; assert_equal("1980", worksheet.webtool_graphs_d563); end
  def test_webtool_graphs_e563; assert_equal("1985", worksheet.webtool_graphs_e563); end
  def test_webtool_graphs_f563; assert_equal("1990", worksheet.webtool_graphs_f563); end
  def test_webtool_graphs_g563; assert_equal("1995", worksheet.webtool_graphs_g563); end
  def test_webtool_graphs_h563; assert_equal("2000", worksheet.webtool_graphs_h563); end
  def test_webtool_graphs_i563; assert_equal("2005", worksheet.webtool_graphs_i563); end
  def test_webtool_graphs_j563; assert_in_epsilon(2010.0, worksheet.webtool_graphs_j563, 0.002); end
  def test_webtool_graphs_k563; assert_equal("2011", worksheet.webtool_graphs_k563); end
  def test_webtool_graphs_l563; assert_equal("2015", worksheet.webtool_graphs_l563); end
  def test_webtool_graphs_m563; assert_equal("2020", worksheet.webtool_graphs_m563); end
  def test_webtool_graphs_n563; assert_equal("2025", worksheet.webtool_graphs_n563); end
  def test_webtool_graphs_o563; assert_equal("2030", worksheet.webtool_graphs_o563); end
  def test_webtool_graphs_p563; assert_equal("2035", worksheet.webtool_graphs_p563); end
  def test_webtool_graphs_q563; assert_equal("2040", worksheet.webtool_graphs_q563); end
  def test_webtool_graphs_r563; assert_equal("2045", worksheet.webtool_graphs_r563); end
  def test_webtool_graphs_s563; assert_equal("2050", worksheet.webtool_graphs_s563); end
  def test_webtool_graphs_c564; assert_equal("CO2e", worksheet.webtool_graphs_c564); end
  def test_webtool_graphs_k564; assert_in_epsilon(533.9514822157969, worksheet.webtool_graphs_k564, 0.002); end
  def test_webtool_graphs_l564; assert_in_epsilon(477.2420658733282, worksheet.webtool_graphs_l564, 0.002); end
  def test_webtool_graphs_m564; assert_in_epsilon(471.8324067642895, worksheet.webtool_graphs_m564, 0.002); end
  def test_webtool_graphs_n564; assert_in_epsilon(479.4634892029558, worksheet.webtool_graphs_n564, 0.002); end
  def test_webtool_graphs_o564; assert_in_epsilon(487.19215147943015, worksheet.webtool_graphs_o564, 0.002); end
  def test_webtool_graphs_p564; assert_in_epsilon(484.49436334251885, worksheet.webtool_graphs_p564, 0.002); end
  def test_webtool_graphs_q564; assert_in_epsilon(478.31838246447995, worksheet.webtool_graphs_q564, 0.002); end
  def test_webtool_graphs_r564; assert_in_epsilon(456.05375259394754, worksheet.webtool_graphs_r564, 0.002); end
  def test_webtool_graphs_s564; assert_in_epsilon(439.07356390391527, worksheet.webtool_graphs_s564, 0.002); end
  def test_webtool_graphs_c327; assert_equal("Description", worksheet.webtool_graphs_c327); end
  def test_webtool_graphs_d327; assert_equal("1980", worksheet.webtool_graphs_d327); end
  def test_webtool_graphs_e327; assert_equal("1985", worksheet.webtool_graphs_e327); end
  def test_webtool_graphs_f327; assert_equal("1990", worksheet.webtool_graphs_f327); end
  def test_webtool_graphs_g327; assert_equal("1995", worksheet.webtool_graphs_g327); end
  def test_webtool_graphs_h327; assert_equal("2000", worksheet.webtool_graphs_h327); end
  def test_webtool_graphs_i327; assert_equal("2005", worksheet.webtool_graphs_i327); end
  def test_webtool_graphs_j327; assert_in_epsilon(2010.0, worksheet.webtool_graphs_j327, 0.002); end
  def test_webtool_graphs_k327; assert_equal("2011", worksheet.webtool_graphs_k327); end
  def test_webtool_graphs_l327; assert_equal("2015", worksheet.webtool_graphs_l327); end
  def test_webtool_graphs_m327; assert_equal("2020", worksheet.webtool_graphs_m327); end
  def test_webtool_graphs_n327; assert_equal("2025", worksheet.webtool_graphs_n327); end
  def test_webtool_graphs_o327; assert_equal("2030", worksheet.webtool_graphs_o327); end
  def test_webtool_graphs_p327; assert_equal("2035", worksheet.webtool_graphs_p327); end
  def test_webtool_graphs_q327; assert_equal("2040", worksheet.webtool_graphs_q327); end
  def test_webtool_graphs_r327; assert_equal("2045", worksheet.webtool_graphs_r327); end
  def test_webtool_graphs_s327; assert_equal("2050", worksheet.webtool_graphs_s327); end
  def test_webtool_graphs_c328; assert_equal("Coal", worksheet.webtool_graphs_c328); end
  def test_webtool_graphs_k328; assert_in_delta(1.0, worksheet.webtool_graphs_k328, 0.002); end
  def test_webtool_graphs_l328; assert_in_epsilon(1.0958871471146148, worksheet.webtool_graphs_l328, 0.002); end
  def test_webtool_graphs_m328; assert_in_epsilon(1.215746081007883, worksheet.webtool_graphs_m328, 0.002); end
  def test_webtool_graphs_n328; assert_in_epsilon(1.326363153773178, worksheet.webtool_graphs_n328, 0.002); end
  def test_webtool_graphs_o328; assert_in_epsilon(1.4437766325801937, worksheet.webtool_graphs_o328, 0.002); end
  def test_webtool_graphs_p328; assert_in_epsilon(1.5345317920063903, worksheet.webtool_graphs_p328, 0.002); end
  def test_webtool_graphs_q328; assert_in_epsilon(1.5990652019006624, worksheet.webtool_graphs_q328, 0.002); end
  def test_webtool_graphs_r328; assert_in_epsilon(1.5976725108777565, worksheet.webtool_graphs_r328, 0.002); end
  def test_webtool_graphs_s328; assert_in_epsilon(1.5750692380630962, worksheet.webtool_graphs_s328, 0.002); end
  def test_webtool_graphs_c329; assert_equal("Oil", worksheet.webtool_graphs_c329); end
  def test_webtool_graphs_k329; assert_in_delta(1.0, worksheet.webtool_graphs_k329, 0.002); end
  def test_webtool_graphs_l329; assert_in_epsilon(1.0581863131546616, worksheet.webtool_graphs_l329, 0.002); end
  def test_webtool_graphs_m329; assert_in_epsilon(1.1309192045979886, worksheet.webtool_graphs_m329, 0.002); end
  def test_webtool_graphs_n329; assert_in_epsilon(1.1412766365309825, worksheet.webtool_graphs_n329, 0.002); end
  def test_webtool_graphs_o329; assert_in_epsilon(1.137507020983242, worksheet.webtool_graphs_o329, 0.002); end
  def test_webtool_graphs_p329; assert_in_epsilon(1.1300352817204176, worksheet.webtool_graphs_p329, 0.002); end
  def test_webtool_graphs_q329; assert_in_epsilon(1.1371088944798762, worksheet.webtool_graphs_q329, 0.002); end
  def test_webtool_graphs_r329; assert_in_epsilon(1.2032138403556651, worksheet.webtool_graphs_r329, 0.002); end
  def test_webtool_graphs_s329; assert_in_epsilon(1.283213861843931, worksheet.webtool_graphs_s329, 0.002); end
  def test_webtool_graphs_c330; assert_equal("Iron and Steel", worksheet.webtool_graphs_c330); end
  def test_webtool_graphs_k330; assert_in_delta(1.0, worksheet.webtool_graphs_k330, 0.002); end
  def test_webtool_graphs_l330; assert_in_epsilon(1.059710263110211, worksheet.webtool_graphs_l330, 0.002); end
  def test_webtool_graphs_m330; assert_in_epsilon(1.1352065176682904, worksheet.webtool_graphs_m330, 0.002); end
  def test_webtool_graphs_n330; assert_in_epsilon(1.2240911681600557, worksheet.webtool_graphs_n330, 0.002); end
  def test_webtool_graphs_o330; assert_in_epsilon(1.3110190660503527, worksheet.webtool_graphs_o330, 0.002); end
  def test_webtool_graphs_p330; assert_in_epsilon(1.3903574267401526, worksheet.webtool_graphs_p330, 0.002); end
  def test_webtool_graphs_q330; assert_in_epsilon(1.477793243875721, worksheet.webtool_graphs_q330, 0.002); end
  def test_webtool_graphs_r330; assert_in_epsilon(1.570497458033831, worksheet.webtool_graphs_r330, 0.002); end
  def test_webtool_graphs_s330; assert_in_epsilon(1.668047631914724, worksheet.webtool_graphs_s330, 0.002); end
  def test_webtool_graphs_c362; assert_equal("Description", worksheet.webtool_graphs_c362); end
  def test_webtool_graphs_d362; assert_equal("1980", worksheet.webtool_graphs_d362); end
  def test_webtool_graphs_e362; assert_equal("1985", worksheet.webtool_graphs_e362); end
  def test_webtool_graphs_f362; assert_equal("1990", worksheet.webtool_graphs_f362); end
  def test_webtool_graphs_g362; assert_equal("1995", worksheet.webtool_graphs_g362); end
  def test_webtool_graphs_h362; assert_equal("2000", worksheet.webtool_graphs_h362); end
  def test_webtool_graphs_i362; assert_equal("2005", worksheet.webtool_graphs_i362); end
  def test_webtool_graphs_j362; assert_in_epsilon(2010.0, worksheet.webtool_graphs_j362, 0.002); end
  def test_webtool_graphs_k362; assert_equal("2011", worksheet.webtool_graphs_k362); end
  def test_webtool_graphs_l362; assert_equal("2015", worksheet.webtool_graphs_l362); end
  def test_webtool_graphs_m362; assert_equal("2020", worksheet.webtool_graphs_m362); end
  def test_webtool_graphs_n362; assert_equal("2025", worksheet.webtool_graphs_n362); end
  def test_webtool_graphs_o362; assert_equal("2030", worksheet.webtool_graphs_o362); end
  def test_webtool_graphs_p362; assert_equal("2035", worksheet.webtool_graphs_p362); end
  def test_webtool_graphs_q362; assert_equal("2040", worksheet.webtool_graphs_q362); end
  def test_webtool_graphs_r362; assert_equal("2045", worksheet.webtool_graphs_r362); end
  def test_webtool_graphs_s362; assert_equal("2050", worksheet.webtool_graphs_s362); end
  def test_webtool_graphs_c363; assert_equal("Global urban insulation", worksheet.webtool_graphs_c363); end
  def test_webtool_graphs_k363; assert_in_epsilon(16.9, worksheet.webtool_graphs_k363, 0.002); end
  def test_webtool_graphs_l363; assert_in_epsilon(16.8, worksheet.webtool_graphs_l363, 0.002); end
  def test_webtool_graphs_m363; assert_in_epsilon(16.071428571428573, worksheet.webtool_graphs_m363, 0.002); end
  def test_webtool_graphs_n363; assert_in_epsilon(15.342857142857143, worksheet.webtool_graphs_n363, 0.002); end
  def test_webtool_graphs_o363; assert_in_epsilon(14.614285714285714, worksheet.webtool_graphs_o363, 0.002); end
  def test_webtool_graphs_p363; assert_in_epsilon(13.885714285714284, worksheet.webtool_graphs_p363, 0.002); end
  def test_webtool_graphs_q363; assert_in_epsilon(13.157142857142855, worksheet.webtool_graphs_q363, 0.002); end
  def test_webtool_graphs_r363; assert_in_epsilon(12.428571428571427, worksheet.webtool_graphs_r363, 0.002); end
  def test_webtool_graphs_s363; assert_in_epsilon(11.7, worksheet.webtool_graphs_s363, 0.002); end
  def test_webtool_graphs_c364; assert_equal("Global rural insulation", worksheet.webtool_graphs_c364); end
  def test_webtool_graphs_k364; assert_in_epsilon(18.700000000000003, worksheet.webtool_graphs_k364, 0.002); end
  def test_webtool_graphs_l364; assert_in_epsilon(18.5, worksheet.webtool_graphs_l364, 0.002); end
  def test_webtool_graphs_m364; assert_in_epsilon(17.52857142857143, worksheet.webtool_graphs_m364, 0.002); end
  def test_webtool_graphs_n364; assert_in_epsilon(16.557142857142857, worksheet.webtool_graphs_n364, 0.002); end
  def test_webtool_graphs_o364; assert_in_epsilon(15.585714285714285, worksheet.webtool_graphs_o364, 0.002); end
  def test_webtool_graphs_p364; assert_in_epsilon(14.614285714285714, worksheet.webtool_graphs_p364, 0.002); end
  def test_webtool_graphs_q364; assert_in_epsilon(13.642857142857144, worksheet.webtool_graphs_q364, 0.002); end
  def test_webtool_graphs_r364; assert_in_epsilon(12.671428571428569, worksheet.webtool_graphs_r364, 0.002); end
  def test_webtool_graphs_s364; assert_in_epsilon(11.7, worksheet.webtool_graphs_s364, 0.002); end
  def test_webtool_graphs_c365; assert_equal("Global non residential insulation", worksheet.webtool_graphs_c365); end
  def test_webtool_graphs_k365; assert_in_epsilon(14.8, worksheet.webtool_graphs_k365, 0.002); end
  def test_webtool_graphs_l365; assert_in_epsilon(14.700000000000001, worksheet.webtool_graphs_l365, 0.002); end
  def test_webtool_graphs_m365; assert_in_epsilon(14.27142857142857, worksheet.webtool_graphs_m365, 0.002); end
  def test_webtool_graphs_n365; assert_in_epsilon(13.842857142857145, worksheet.webtool_graphs_n365, 0.002); end
  def test_webtool_graphs_o365; assert_in_epsilon(13.414285714285713, worksheet.webtool_graphs_o365, 0.002); end
  def test_webtool_graphs_p365; assert_in_epsilon(12.985714285714284, worksheet.webtool_graphs_p365, 0.002); end
  def test_webtool_graphs_q365; assert_in_epsilon(12.557142857142859, worksheet.webtool_graphs_q365, 0.002); end
  def test_webtool_graphs_r365; assert_in_epsilon(12.128571428571426, worksheet.webtool_graphs_r365, 0.002); end
  def test_webtool_graphs_s365; assert_in_epsilon(11.7, worksheet.webtool_graphs_s365, 0.002); end
  def test_webtool_graphs_b444; assert_equal("Energy description", worksheet.webtool_graphs_b444); end
  def test_webtool_graphs_c444; assert_equal("Technology code", worksheet.webtool_graphs_c444); end
  def test_webtool_graphs_d444; assert_equal("1975", worksheet.webtool_graphs_d444); end
  def test_webtool_graphs_e444; assert_equal("1980", worksheet.webtool_graphs_e444); end
  def test_webtool_graphs_f444; assert_equal("1985", worksheet.webtool_graphs_f444); end
  def test_webtool_graphs_g444; assert_equal("1990", worksheet.webtool_graphs_g444); end
  def test_webtool_graphs_h444; assert_equal("1995", worksheet.webtool_graphs_h444); end
  def test_webtool_graphs_i444; assert_equal("2000", worksheet.webtool_graphs_i444); end
  def test_webtool_graphs_j444; assert_equal("2005", worksheet.webtool_graphs_j444); end
  def test_webtool_graphs_k444; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k444, 0.002); end
  def test_webtool_graphs_l444; assert_equal("2011", worksheet.webtool_graphs_l444); end
  def test_webtool_graphs_m444; assert_equal("2015", worksheet.webtool_graphs_m444); end
  def test_webtool_graphs_n444; assert_equal("2020", worksheet.webtool_graphs_n444); end
  def test_webtool_graphs_o444; assert_equal("2025", worksheet.webtool_graphs_o444); end
  def test_webtool_graphs_p444; assert_equal("2030", worksheet.webtool_graphs_p444); end
  def test_webtool_graphs_q444; assert_equal("2035", worksheet.webtool_graphs_q444); end
  def test_webtool_graphs_r444; assert_equal("2040", worksheet.webtool_graphs_r444); end
  def test_webtool_graphs_s444; assert_equal("2045", worksheet.webtool_graphs_s444); end
  def test_webtool_graphs_t444; assert_equal("2050", worksheet.webtool_graphs_t444); end
  def test_webtool_graphs_b445; assert_equal("Global Materials", worksheet.webtool_graphs_b445); end
  def test_webtool_graphs_c445; assert_equal("Aluminium.Alumina", worksheet.webtool_graphs_c445); end
  def test_webtool_graphs_j445; assert_equal("", worksheet.webtool_graphs_j445); end
  def test_webtool_graphs_l445; assert_in_epsilon(1.3689321930948124, worksheet.webtool_graphs_l445, 0.002); end
  def test_webtool_graphs_m445; assert_in_epsilon(1.5199408073465115, worksheet.webtool_graphs_m445, 0.002); end
  def test_webtool_graphs_n445; assert_in_epsilon(1.6842116180412907, worksheet.webtool_graphs_n445, 0.002); end
  def test_webtool_graphs_o445; assert_in_epsilon(1.928762859908468, worksheet.webtool_graphs_o445, 0.002); end
  def test_webtool_graphs_p445; assert_in_epsilon(2.1890102119860084, worksheet.webtool_graphs_p445, 0.002); end
  def test_webtool_graphs_q445; assert_in_epsilon(2.4531914837333817, worksheet.webtool_graphs_q445, 0.002); end
  def test_webtool_graphs_r445; assert_in_epsilon(2.749078834795957, worksheet.webtool_graphs_r445, 0.002); end
  def test_webtool_graphs_s445; assert_in_epsilon(3.0690407739360577, worksheet.webtool_graphs_s445, 0.002); end
  def test_webtool_graphs_t445; assert_in_epsilon(3.4279030347206105, worksheet.webtool_graphs_t445, 0.002); end
  def test_webtool_graphs_b446; assert_equal("Global Materials", worksheet.webtool_graphs_b446); end
  def test_webtool_graphs_c446; assert_equal("Aluminium.Primary", worksheet.webtool_graphs_c446); end
  def test_webtool_graphs_l446; assert_in_epsilon(2.7584780625440373, worksheet.webtool_graphs_l446, 0.002); end
  def test_webtool_graphs_m446; assert_in_epsilon(3.0470758623084637, worksheet.webtool_graphs_m446, 0.002); end
  def test_webtool_graphs_n446; assert_in_epsilon(3.3570801405964152, worksheet.webtool_graphs_n446, 0.002); end
  def test_webtool_graphs_o446; assert_in_epsilon(3.8224159301751355, worksheet.webtool_graphs_o446, 0.002); end
  def test_webtool_graphs_p446; assert_in_epsilon(4.313068791510379, worksheet.webtool_graphs_p446, 0.002); end
  def test_webtool_graphs_q446; assert_in_epsilon(4.805458127876107, worksheet.webtool_graphs_q446, 0.002); end
  def test_webtool_graphs_r446; assert_in_epsilon(5.353531760740598, worksheet.webtool_graphs_r446, 0.002); end
  def test_webtool_graphs_s446; assert_in_epsilon(5.94142474069983, worksheet.webtool_graphs_s446, 0.002); end
  def test_webtool_graphs_t446; assert_in_epsilon(6.59684008091053, worksheet.webtool_graphs_t446, 0.002); end
  def test_webtool_graphs_b447; assert_equal("Global Materials", worksheet.webtool_graphs_b447); end
  def test_webtool_graphs_c447; assert_equal("Aluminium.Secondary", worksheet.webtool_graphs_c447); end
  def test_webtool_graphs_l447; assert_in_delta(0.26361993307490655, worksheet.webtool_graphs_l447, 0.002); end
  def test_webtool_graphs_m447; assert_in_delta(0.27032465849615295, worksheet.webtool_graphs_m447, 0.002); end
  def test_webtool_graphs_n447; assert_in_delta(0.26354369501781594, worksheet.webtool_graphs_n447, 0.002); end
  def test_webtool_graphs_o447; assert_in_delta(0.26351571713876293, worksheet.webtool_graphs_o447, 0.002); end
  def test_webtool_graphs_p447; assert_in_delta(0.2586267225432753, worksheet.webtool_graphs_p447, 0.002); end
  def test_webtool_graphs_q447; assert_in_delta(0.24759164942913187, worksheet.webtool_graphs_q447, 0.002); end
  def test_webtool_graphs_r447; assert_in_delta(0.2332616034059938, worksheet.webtool_graphs_r447, 0.002); end
  def test_webtool_graphs_s447; assert_in_delta(0.2142940978354198, worksheet.webtool_graphs_s447, 0.002); end
  def test_webtool_graphs_t447; assert_in_delta(0.19114351300662855, worksheet.webtool_graphs_t447, 0.002); end
  def test_webtool_graphs_b448; assert_equal("TOTAL", worksheet.webtool_graphs_b448); end
  def test_webtool_graphs_c448; assert_equal("TOTAL", worksheet.webtool_graphs_c448); end
  def test_webtool_graphs_l448; assert_in_epsilon(4.391030188713756, worksheet.webtool_graphs_l448, 0.002); end
  def test_webtool_graphs_m448; assert_in_epsilon(4.837341328151129, worksheet.webtool_graphs_m448, 0.002); end
  def test_webtool_graphs_n448; assert_in_epsilon(5.304835453655522, worksheet.webtool_graphs_n448, 0.002); end
  def test_webtool_graphs_o448; assert_in_epsilon(6.014694507222366, worksheet.webtool_graphs_o448, 0.002); end
  def test_webtool_graphs_p448; assert_in_epsilon(6.760705726039663, worksheet.webtool_graphs_p448, 0.002); end
  def test_webtool_graphs_q448; assert_in_epsilon(7.50624126103862, worksheet.webtool_graphs_q448, 0.002); end
  def test_webtool_graphs_r448; assert_in_epsilon(8.33587219894255, worksheet.webtool_graphs_r448, 0.002); end
  def test_webtool_graphs_s448; assert_in_epsilon(9.224759612471308, worksheet.webtool_graphs_s448, 0.002); end
  def test_webtool_graphs_t448; assert_in_epsilon(10.215886628637769, worksheet.webtool_graphs_t448, 0.002); end
  def test_webtool_graphs_c435; assert_equal("Technology code", worksheet.webtool_graphs_c435); end
  def test_webtool_graphs_d435; assert_equal("1975", worksheet.webtool_graphs_d435); end
  def test_webtool_graphs_e435; assert_equal("1980", worksheet.webtool_graphs_e435); end
  def test_webtool_graphs_f435; assert_equal("1985", worksheet.webtool_graphs_f435); end
  def test_webtool_graphs_g435; assert_equal("1990", worksheet.webtool_graphs_g435); end
  def test_webtool_graphs_h435; assert_equal("1995", worksheet.webtool_graphs_h435); end
  def test_webtool_graphs_i435; assert_equal("2000", worksheet.webtool_graphs_i435); end
  def test_webtool_graphs_j435; assert_equal("2005", worksheet.webtool_graphs_j435); end
  def test_webtool_graphs_k435; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k435, 0.002); end
  def test_webtool_graphs_l435; assert_equal("2011", worksheet.webtool_graphs_l435); end
  def test_webtool_graphs_m435; assert_equal("2015", worksheet.webtool_graphs_m435); end
  def test_webtool_graphs_n435; assert_equal("2020", worksheet.webtool_graphs_n435); end
  def test_webtool_graphs_o435; assert_equal("2025", worksheet.webtool_graphs_o435); end
  def test_webtool_graphs_p435; assert_equal("2030", worksheet.webtool_graphs_p435); end
  def test_webtool_graphs_q435; assert_equal("2035", worksheet.webtool_graphs_q435); end
  def test_webtool_graphs_r435; assert_equal("2040", worksheet.webtool_graphs_r435); end
  def test_webtool_graphs_s435; assert_equal("2045", worksheet.webtool_graphs_s435); end
  def test_webtool_graphs_t435; assert_equal("2050", worksheet.webtool_graphs_t435); end
  def test_webtool_graphs_c436; assert_equal("Aluminium.Alumina", worksheet.webtool_graphs_c436); end
  def test_webtool_graphs_j436; assert_equal("", worksheet.webtool_graphs_j436); end
  def test_webtool_graphs_l436; assert_in_delta(0.073193371324196, worksheet.webtool_graphs_l436, 0.002); end
  def test_webtool_graphs_m436; assert_in_delta(0.0788359947500898, worksheet.webtool_graphs_m436, 0.002); end
  def test_webtool_graphs_n436; assert_in_delta(0.08447874103588884, worksheet.webtool_graphs_n436, 0.002); end
  def test_webtool_graphs_o436; assert_in_delta(0.09370530145925891, worksheet.webtool_graphs_o436, 0.002); end
  def test_webtool_graphs_p436; assert_in_delta(0.1031265530212765, worksheet.webtool_graphs_p436, 0.002); end
  def test_webtool_graphs_q436; assert_in_delta(0.11219033364499184, worksheet.webtool_graphs_q436, 0.002); end
  def test_webtool_graphs_r436; assert_in_delta(0.12216552866489894, worksheet.webtool_graphs_r436, 0.002); end
  def test_webtool_graphs_s436; assert_in_delta(0.13264590771800172, worksheet.webtool_graphs_s436, 0.002); end
  def test_webtool_graphs_t436; assert_in_delta(0.14423443716018589, worksheet.webtool_graphs_t436, 0.002); end
  def test_webtool_graphs_c437; assert_equal("Aluminium.Primary", worksheet.webtool_graphs_c437); end
  def test_webtool_graphs_l437; assert_in_delta(0.04738999999999999, worksheet.webtool_graphs_l437, 0.002); end
  def test_webtool_graphs_m437; assert_in_delta(0.051043389908338725, worksheet.webtool_graphs_m437, 0.002); end
  def test_webtool_graphs_n437; assert_in_delta(0.05469685936392066, worksheet.webtool_graphs_n437, 0.002); end
  def test_webtool_graphs_o437; assert_in_delta(0.060670715883342434, worksheet.webtool_graphs_o437, 0.002); end
  def test_webtool_graphs_p437; assert_in_delta(0.06677062771205772, worksheet.webtool_graphs_p437, 0.002); end
  def test_webtool_graphs_q437; assert_in_delta(0.07263909033356121, worksheet.webtool_graphs_q437, 0.002); end
  def test_webtool_graphs_r437; assert_in_delta(0.0790976600570346, worksheet.webtool_graphs_r437, 0.002); end
  def test_webtool_graphs_s437; assert_in_delta(0.08588331775172743, worksheet.webtool_graphs_s437, 0.002); end
  def test_webtool_graphs_t437; assert_in_delta(0.09338646182515203, worksheet.webtool_graphs_t437, 0.002); end
  def test_webtool_graphs_c438; assert_equal("Aluminium.Secondary", worksheet.webtool_graphs_c438); end
  def test_webtool_graphs_l438; assert_in_delta(0.020309999999999995, worksheet.webtool_graphs_l438, 0.002); end
  def test_webtool_graphs_m438; assert_in_delta(0.021875738532145163, worksheet.webtool_graphs_m438, 0.002); end
  def test_webtool_graphs_n438; assert_in_delta(0.023441511155965995, worksheet.webtool_graphs_n438, 0.002); end
  def test_webtool_graphs_o438; assert_in_delta(0.026001735378575325, worksheet.webtool_graphs_o438, 0.002); end
  def test_webtool_graphs_p438; assert_in_delta(0.028615983305167594, worksheet.webtool_graphs_p438, 0.002); end
  def test_webtool_graphs_q438; assert_in_delta(0.03113103871438337, worksheet.webtool_graphs_q438, 0.002); end
  def test_webtool_graphs_r438; assert_in_delta(0.033898997167300535, worksheet.webtool_graphs_r438, 0.002); end
  def test_webtool_graphs_s438; assert_in_delta(0.03680713617931176, worksheet.webtool_graphs_s438, 0.002); end
  def test_webtool_graphs_t438; assert_in_delta(0.04002276935363658, worksheet.webtool_graphs_t438, 0.002); end
  def test_webtool_graphs_c439; assert_equal("TOTAL - Primary and Secondary", worksheet.webtool_graphs_c439); end
  def test_webtool_graphs_l439; assert_in_delta(0.06769999999999998, worksheet.webtool_graphs_l439, 0.002); end
  def test_webtool_graphs_m439; assert_in_delta(0.07291912844048389, worksheet.webtool_graphs_m439, 0.002); end
  def test_webtool_graphs_n439; assert_in_delta(0.07813837051988665, worksheet.webtool_graphs_n439, 0.002); end
  def test_webtool_graphs_o439; assert_in_delta(0.08667245126191776, worksheet.webtool_graphs_o439, 0.002); end
  def test_webtool_graphs_p439; assert_in_delta(0.09538661101722531, worksheet.webtool_graphs_p439, 0.002); end
  def test_webtool_graphs_q439; assert_in_delta(0.10377012904794458, worksheet.webtool_graphs_q439, 0.002); end
  def test_webtool_graphs_r439; assert_in_delta(0.11299665722433513, worksheet.webtool_graphs_r439, 0.002); end
  def test_webtool_graphs_s439; assert_in_delta(0.1226904539310392, worksheet.webtool_graphs_s439, 0.002); end
  def test_webtool_graphs_t439; assert_in_delta(0.1334092311787886, worksheet.webtool_graphs_t439, 0.002); end
  def test_webtool_graphs_b509; assert_equal("Energy description", worksheet.webtool_graphs_b509); end
  def test_webtool_graphs_c509; assert_equal("Technology code", worksheet.webtool_graphs_c509); end
  def test_webtool_graphs_d509; assert_equal("1975", worksheet.webtool_graphs_d509); end
  def test_webtool_graphs_e509; assert_equal("1980", worksheet.webtool_graphs_e509); end
  def test_webtool_graphs_f509; assert_equal("1985", worksheet.webtool_graphs_f509); end
  def test_webtool_graphs_g509; assert_equal("1990", worksheet.webtool_graphs_g509); end
  def test_webtool_graphs_h509; assert_equal("1995", worksheet.webtool_graphs_h509); end
  def test_webtool_graphs_i509; assert_equal("2000", worksheet.webtool_graphs_i509); end
  def test_webtool_graphs_j509; assert_equal("2005", worksheet.webtool_graphs_j509); end
  def test_webtool_graphs_k509; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k509, 0.002); end
  def test_webtool_graphs_l509; assert_equal("2011", worksheet.webtool_graphs_l509); end
  def test_webtool_graphs_m509; assert_equal("2015", worksheet.webtool_graphs_m509); end
  def test_webtool_graphs_n509; assert_equal("2020", worksheet.webtool_graphs_n509); end
  def test_webtool_graphs_o509; assert_equal("2025", worksheet.webtool_graphs_o509); end
  def test_webtool_graphs_p509; assert_equal("2030", worksheet.webtool_graphs_p509); end
  def test_webtool_graphs_q509; assert_equal("2035", worksheet.webtool_graphs_q509); end
  def test_webtool_graphs_r509; assert_equal("2040", worksheet.webtool_graphs_r509); end
  def test_webtool_graphs_s509; assert_equal("2045", worksheet.webtool_graphs_s509); end
  def test_webtool_graphs_t509; assert_equal("2050", worksheet.webtool_graphs_t509); end
  def test_webtool_graphs_b510; assert_equal("Global Materials", worksheet.webtool_graphs_b510); end
  def test_webtool_graphs_c510; assert_equal("Cement", worksheet.webtool_graphs_c510); end
  def test_webtool_graphs_j510; assert_equal("", worksheet.webtool_graphs_j510); end
  def test_webtool_graphs_l510; assert_in_epsilon(10.600379598268718, worksheet.webtool_graphs_l510, 0.002); end
  def test_webtool_graphs_m510; assert_in_epsilon(10.88713066842193, worksheet.webtool_graphs_m510, 0.002); end
  def test_webtool_graphs_n510; assert_in_epsilon(11.844692704567436, worksheet.webtool_graphs_n510, 0.002); end
  def test_webtool_graphs_o510; assert_in_epsilon(12.282485129235006, worksheet.webtool_graphs_o510, 0.002); end
  def test_webtool_graphs_p510; assert_in_epsilon(12.665008173677574, worksheet.webtool_graphs_p510, 0.002); end
  def test_webtool_graphs_q510; assert_in_epsilon(12.993291922951574, worksheet.webtool_graphs_q510, 0.002); end
  def test_webtool_graphs_r510; assert_in_epsilon(13.235364234610211, worksheet.webtool_graphs_r510, 0.002); end
  def test_webtool_graphs_s510; assert_in_epsilon(13.447195644252087, worksheet.webtool_graphs_s510, 0.002); end
  def test_webtool_graphs_t510; assert_in_epsilon(13.668343037514825, worksheet.webtool_graphs_t510, 0.002); end
  def test_webtool_graphs_b511; assert_equal("TOTAL", worksheet.webtool_graphs_b511); end
  def test_webtool_graphs_c511; assert_equal("TOTAL", worksheet.webtool_graphs_c511); end
  def test_webtool_graphs_l511; assert_in_epsilon(10.600379598268718, worksheet.webtool_graphs_l511, 0.002); end
  def test_webtool_graphs_m511; assert_in_epsilon(10.88713066842193, worksheet.webtool_graphs_m511, 0.002); end
  def test_webtool_graphs_n511; assert_in_epsilon(11.844692704567436, worksheet.webtool_graphs_n511, 0.002); end
  def test_webtool_graphs_o511; assert_in_epsilon(12.282485129235006, worksheet.webtool_graphs_o511, 0.002); end
  def test_webtool_graphs_p511; assert_in_epsilon(12.665008173677574, worksheet.webtool_graphs_p511, 0.002); end
  def test_webtool_graphs_q511; assert_in_epsilon(12.993291922951574, worksheet.webtool_graphs_q511, 0.002); end
  def test_webtool_graphs_r511; assert_in_epsilon(13.235364234610211, worksheet.webtool_graphs_r511, 0.002); end
  def test_webtool_graphs_s511; assert_in_epsilon(13.447195644252087, worksheet.webtool_graphs_s511, 0.002); end
  def test_webtool_graphs_t511; assert_in_epsilon(13.668343037514825, worksheet.webtool_graphs_t511, 0.002); end
  def test_webtool_graphs_c502; assert_equal("Technology code", worksheet.webtool_graphs_c502); end
  def test_webtool_graphs_d502; assert_equal("1975", worksheet.webtool_graphs_d502); end
  def test_webtool_graphs_e502; assert_equal("1980", worksheet.webtool_graphs_e502); end
  def test_webtool_graphs_f502; assert_equal("1985", worksheet.webtool_graphs_f502); end
  def test_webtool_graphs_g502; assert_equal("1990", worksheet.webtool_graphs_g502); end
  def test_webtool_graphs_h502; assert_equal("1995", worksheet.webtool_graphs_h502); end
  def test_webtool_graphs_i502; assert_equal("2000", worksheet.webtool_graphs_i502); end
  def test_webtool_graphs_j502; assert_equal("2005", worksheet.webtool_graphs_j502); end
  def test_webtool_graphs_k502; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k502, 0.002); end
  def test_webtool_graphs_l502; assert_equal("2011", worksheet.webtool_graphs_l502); end
  def test_webtool_graphs_m502; assert_equal("2015", worksheet.webtool_graphs_m502); end
  def test_webtool_graphs_n502; assert_equal("2020", worksheet.webtool_graphs_n502); end
  def test_webtool_graphs_o502; assert_equal("2025", worksheet.webtool_graphs_o502); end
  def test_webtool_graphs_p502; assert_equal("2030", worksheet.webtool_graphs_p502); end
  def test_webtool_graphs_q502; assert_equal("2035", worksheet.webtool_graphs_q502); end
  def test_webtool_graphs_r502; assert_equal("2040", worksheet.webtool_graphs_r502); end
  def test_webtool_graphs_s502; assert_equal("2045", worksheet.webtool_graphs_s502); end
  def test_webtool_graphs_t502; assert_equal("2050", worksheet.webtool_graphs_t502); end
  def test_webtool_graphs_c503; assert_equal("Cement", worksheet.webtool_graphs_c503); end
  def test_webtool_graphs_j503; assert_equal("", worksheet.webtool_graphs_j503); end
  def test_webtool_graphs_l503; assert_in_epsilon(3.6351730407050002, worksheet.webtool_graphs_l503, 0.002); end
  def test_webtool_graphs_m503; assert_in_epsilon(3.8041530934560948, worksheet.webtool_graphs_m503, 0.002); end
  def test_webtool_graphs_n503; assert_in_epsilon(4.2006984399738645, worksheet.webtool_graphs_n503, 0.002); end
  def test_webtool_graphs_o503; assert_in_epsilon(4.421675609588938, worksheet.webtool_graphs_o503, 0.002); end
  def test_webtool_graphs_p503; assert_in_epsilon(4.628707346708822, worksheet.webtool_graphs_p503, 0.002); end
  def test_webtool_graphs_q503; assert_in_epsilon(4.82146159378052, worksheet.webtool_graphs_q503, 0.002); end
  def test_webtool_graphs_r503; assert_in_epsilon(4.987160137833482, worksheet.webtool_graphs_r503, 0.002); end
  def test_webtool_graphs_s503; assert_in_epsilon(5.145892241660797, worksheet.webtool_graphs_s503, 0.002); end
  def test_webtool_graphs_t503; assert_in_epsilon(5.312648402556242, worksheet.webtool_graphs_t503, 0.002); end
  def test_webtool_graphs_c504; assert_equal("TOTAL", worksheet.webtool_graphs_c504); end
  def test_webtool_graphs_l504; assert_in_epsilon(3.6351730407050002, worksheet.webtool_graphs_l504, 0.002); end
  def test_webtool_graphs_m504; assert_in_epsilon(3.8041530934560948, worksheet.webtool_graphs_m504, 0.002); end
  def test_webtool_graphs_n504; assert_in_epsilon(4.2006984399738645, worksheet.webtool_graphs_n504, 0.002); end
  def test_webtool_graphs_o504; assert_in_epsilon(4.421675609588938, worksheet.webtool_graphs_o504, 0.002); end
  def test_webtool_graphs_p504; assert_in_epsilon(4.628707346708822, worksheet.webtool_graphs_p504, 0.002); end
  def test_webtool_graphs_q504; assert_in_epsilon(4.82146159378052, worksheet.webtool_graphs_q504, 0.002); end
  def test_webtool_graphs_r504; assert_in_epsilon(4.987160137833482, worksheet.webtool_graphs_r504, 0.002); end
  def test_webtool_graphs_s504; assert_in_epsilon(5.145892241660797, worksheet.webtool_graphs_s504, 0.002); end
  def test_webtool_graphs_t504; assert_in_epsilon(5.312648402556242, worksheet.webtool_graphs_t504, 0.002); end
  def test_webtool_graphs_b467; assert_equal("Energy description", worksheet.webtool_graphs_b467); end
  def test_webtool_graphs_c467; assert_equal("Technology code", worksheet.webtool_graphs_c467); end
  def test_webtool_graphs_d467; assert_equal("1975", worksheet.webtool_graphs_d467); end
  def test_webtool_graphs_e467; assert_equal("1980", worksheet.webtool_graphs_e467); end
  def test_webtool_graphs_f467; assert_equal("1985", worksheet.webtool_graphs_f467); end
  def test_webtool_graphs_g467; assert_equal("1990", worksheet.webtool_graphs_g467); end
  def test_webtool_graphs_h467; assert_equal("1995", worksheet.webtool_graphs_h467); end
  def test_webtool_graphs_i467; assert_equal("2000", worksheet.webtool_graphs_i467); end
  def test_webtool_graphs_j467; assert_equal("2005", worksheet.webtool_graphs_j467); end
  def test_webtool_graphs_k467; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k467, 0.002); end
  def test_webtool_graphs_l467; assert_equal("2011", worksheet.webtool_graphs_l467); end
  def test_webtool_graphs_m467; assert_equal("2015", worksheet.webtool_graphs_m467); end
  def test_webtool_graphs_n467; assert_equal("2020", worksheet.webtool_graphs_n467); end
  def test_webtool_graphs_o467; assert_equal("2025", worksheet.webtool_graphs_o467); end
  def test_webtool_graphs_p467; assert_equal("2030", worksheet.webtool_graphs_p467); end
  def test_webtool_graphs_q467; assert_equal("2035", worksheet.webtool_graphs_q467); end
  def test_webtool_graphs_r467; assert_equal("2040", worksheet.webtool_graphs_r467); end
  def test_webtool_graphs_s467; assert_equal("2045", worksheet.webtool_graphs_s467); end
  def test_webtool_graphs_t467; assert_equal("2050", worksheet.webtool_graphs_t467); end
  def test_webtool_graphs_b468; assert_equal("Global Materials", worksheet.webtool_graphs_b468); end
  def test_webtool_graphs_c468; assert_equal("Chemicals & petrochemicals.HVC", worksheet.webtool_graphs_c468); end
  def test_webtool_graphs_j468; assert_equal("", worksheet.webtool_graphs_j468); end
  def test_webtool_graphs_l468; assert_in_epsilon(19.460745993692754, worksheet.webtool_graphs_l468, 0.002); end
  def test_webtool_graphs_m468; assert_in_epsilon(20.89299409631658, worksheet.webtool_graphs_m468, 0.002); end
  def test_webtool_graphs_n468; assert_in_epsilon(22.22427147090194, worksheet.webtool_graphs_n468, 0.002); end
  def test_webtool_graphs_o468; assert_in_epsilon(25.112915525065453, worksheet.webtool_graphs_o468, 0.002); end
  def test_webtool_graphs_p468; assert_in_epsilon(28.192161607807996, worksheet.webtool_graphs_p468, 0.002); end
  def test_webtool_graphs_q468; assert_in_epsilon(31.349976307394805, worksheet.webtool_graphs_q468, 0.002); end
  def test_webtool_graphs_r468; assert_in_epsilon(34.98104825841384, worksheet.webtool_graphs_r468, 0.002); end
  def test_webtool_graphs_s468; assert_in_epsilon(38.788117346870436, worksheet.webtool_graphs_s468, 0.002); end
  def test_webtool_graphs_t468; assert_in_epsilon(43.13611204623663, worksheet.webtool_graphs_t468, 0.002); end
  def test_webtool_graphs_b469; assert_equal("Global Materials", worksheet.webtool_graphs_b469); end
  def test_webtool_graphs_c469; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.webtool_graphs_c469); end
  def test_webtool_graphs_l469; assert_in_epsilon(5.957349170600305, worksheet.webtool_graphs_l469, 0.002); end
  def test_webtool_graphs_m469; assert_in_epsilon(6.219172136917445, worksheet.webtool_graphs_m469, 0.002); end
  def test_webtool_graphs_n469; assert_in_epsilon(6.558346218053398, worksheet.webtool_graphs_n469, 0.002); end
  def test_webtool_graphs_o469; assert_in_epsilon(6.878132453780812, worksheet.webtool_graphs_o469, 0.002); end
  def test_webtool_graphs_p469; assert_in_epsilon(7.193884612852133, worksheet.webtool_graphs_p469, 0.002); end
  def test_webtool_graphs_q469; assert_in_epsilon(7.5208359606456385, worksheet.webtool_graphs_q469, 0.002); end
  def test_webtool_graphs_r469; assert_in_epsilon(7.8584647271285615, worksheet.webtool_graphs_r469, 0.002); end
  def test_webtool_graphs_s469; assert_in_epsilon(8.17498339514108, worksheet.webtool_graphs_s469, 0.002); end
  def test_webtool_graphs_t469; assert_in_epsilon(8.509000839084159, worksheet.webtool_graphs_t469, 0.002); end
  def test_webtool_graphs_b470; assert_equal("Global Materials", worksheet.webtool_graphs_b470); end
  def test_webtool_graphs_c470; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.webtool_graphs_c470); end
  def test_webtool_graphs_l470; assert_in_epsilon(1.6638113188620842, worksheet.webtool_graphs_l470, 0.002); end
  def test_webtool_graphs_m470; assert_in_epsilon(1.7711086788287844, worksheet.webtool_graphs_m470, 0.002); end
  def test_webtool_graphs_n470; assert_in_epsilon(1.8875419808890774, worksheet.webtool_graphs_n470, 0.002); end
  def test_webtool_graphs_o470; assert_in_epsilon(2.132968142509748, worksheet.webtool_graphs_o470, 0.002); end
  def test_webtool_graphs_p470; assert_in_epsilon(2.394412671790251, worksheet.webtool_graphs_p470, 0.002); end
  def test_webtool_graphs_q470; assert_in_epsilon(2.661404596821886, worksheet.webtool_graphs_q470, 0.002); end
  def test_webtool_graphs_r470; assert_in_epsilon(2.969527688557563, worksheet.webtool_graphs_r470, 0.002); end
  def test_webtool_graphs_s470; assert_in_epsilon(3.2903838833037837, worksheet.webtool_graphs_s470, 0.002); end
  def test_webtool_graphs_t470; assert_in_epsilon(3.660761228193368, worksheet.webtool_graphs_t470, 0.002); end
  def test_webtool_graphs_b471; assert_equal("Global Materials", worksheet.webtool_graphs_b471); end
  def test_webtool_graphs_c471; assert_equal("Chemicals & petrochemicals.Others", worksheet.webtool_graphs_c471); end
  def test_webtool_graphs_l471; assert_in_epsilon(12.7269993633999, worksheet.webtool_graphs_l471, 0.002); end
  def test_webtool_graphs_m471; assert_in_epsilon(13.489472554806799, worksheet.webtool_graphs_m471, 0.002); end
  def test_webtool_graphs_n471; assert_in_epsilon(14.385139851553767, worksheet.webtool_graphs_n471, 0.002); end
  def test_webtool_graphs_o471; assert_in_epsilon(16.265576628582863, worksheet.webtool_graphs_o471, 0.002); end
  def test_webtool_graphs_p471; assert_in_epsilon(18.270550720895322, worksheet.webtool_graphs_p471, 0.002); end
  def test_webtool_graphs_q471; assert_in_epsilon(20.32034113770992, worksheet.webtool_graphs_q471, 0.002); end
  def test_webtool_graphs_r471; assert_in_epsilon(22.6868835407752, worksheet.webtool_graphs_r471, 0.002); end
  def test_webtool_graphs_s471; assert_in_epsilon(25.15366758229584, worksheet.webtool_graphs_s471, 0.002); end
  def test_webtool_graphs_t471; assert_in_epsilon(28.00227723696474, worksheet.webtool_graphs_t471, 0.002); end
  def test_webtool_graphs_b472; assert_equal("TOTAL", worksheet.webtool_graphs_b472); end
  def test_webtool_graphs_c472; assert_equal("TOTAL", worksheet.webtool_graphs_c472); end
  def test_webtool_graphs_l472; assert_in_epsilon(39.80890584655504, worksheet.webtool_graphs_l472, 0.002); end
  def test_webtool_graphs_m472; assert_in_epsilon(42.37274746686961, worksheet.webtool_graphs_m472, 0.002); end
  def test_webtool_graphs_n472; assert_in_epsilon(45.05529952139818, worksheet.webtool_graphs_n472, 0.002); end
  def test_webtool_graphs_o472; assert_in_epsilon(50.38959274993888, worksheet.webtool_graphs_o472, 0.002); end
  def test_webtool_graphs_p472; assert_in_epsilon(56.0510096133457, worksheet.webtool_graphs_p472, 0.002); end
  def test_webtool_graphs_q472; assert_in_epsilon(61.85255800257225, worksheet.webtool_graphs_q472, 0.002); end
  def test_webtool_graphs_r472; assert_in_epsilon(68.49592421487517, worksheet.webtool_graphs_r472, 0.002); end
  def test_webtool_graphs_s472; assert_in_epsilon(75.40715220761115, worksheet.webtool_graphs_s472, 0.002); end
  def test_webtool_graphs_t472; assert_in_epsilon(83.3081513504789, worksheet.webtool_graphs_t472, 0.002); end
  def test_webtool_graphs_c457; assert_equal("Technology code", worksheet.webtool_graphs_c457); end
  def test_webtool_graphs_d457; assert_equal("1975", worksheet.webtool_graphs_d457); end
  def test_webtool_graphs_e457; assert_equal("1980", worksheet.webtool_graphs_e457); end
  def test_webtool_graphs_f457; assert_equal("1985", worksheet.webtool_graphs_f457); end
  def test_webtool_graphs_g457; assert_equal("1990", worksheet.webtool_graphs_g457); end
  def test_webtool_graphs_h457; assert_equal("1995", worksheet.webtool_graphs_h457); end
  def test_webtool_graphs_i457; assert_equal("2000", worksheet.webtool_graphs_i457); end
  def test_webtool_graphs_j457; assert_equal("2005", worksheet.webtool_graphs_j457); end
  def test_webtool_graphs_k457; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k457, 0.002); end
  def test_webtool_graphs_l457; assert_equal("2011", worksheet.webtool_graphs_l457); end
  def test_webtool_graphs_m457; assert_equal("2015", worksheet.webtool_graphs_m457); end
  def test_webtool_graphs_n457; assert_equal("2020", worksheet.webtool_graphs_n457); end
  def test_webtool_graphs_o457; assert_equal("2025", worksheet.webtool_graphs_o457); end
  def test_webtool_graphs_p457; assert_equal("2030", worksheet.webtool_graphs_p457); end
  def test_webtool_graphs_q457; assert_equal("2035", worksheet.webtool_graphs_q457); end
  def test_webtool_graphs_r457; assert_equal("2040", worksheet.webtool_graphs_r457); end
  def test_webtool_graphs_s457; assert_equal("2045", worksheet.webtool_graphs_s457); end
  def test_webtool_graphs_t457; assert_equal("2050", worksheet.webtool_graphs_t457); end
  def test_webtool_graphs_c458; assert_equal("Chemicals & petrochemicals.HVC", worksheet.webtool_graphs_c458); end
  def test_webtool_graphs_j458; assert_equal("", worksheet.webtool_graphs_j458); end
  def test_webtool_graphs_l458; assert_in_delta(0.31954321918044004, worksheet.webtool_graphs_l458, 0.002); end
  def test_webtool_graphs_m458; assert_in_delta(0.3471608407192139, worksheet.webtool_graphs_m458, 0.002); end
  def test_webtool_graphs_n458; assert_in_delta(0.37317169862575356, worksheet.webtool_graphs_n458, 0.002); end
  def test_webtool_graphs_o458; assert_in_delta(0.42651336502258447, worksheet.webtool_graphs_o458, 0.002); end
  def test_webtool_graphs_p458; assert_in_delta(0.48446088579503066, worksheet.webtool_graphs_p458, 0.002); end
  def test_webtool_graphs_q458; assert_in_delta(0.545233411436868, worksheet.webtool_graphs_q458, 0.002); end
  def test_webtool_graphs_r458; assert_in_delta(0.6159694349953778, worksheet.webtool_graphs_r458, 0.002); end
  def test_webtool_graphs_s458; assert_in_delta(0.6916936202975246, worksheet.webtool_graphs_s458, 0.002); end
  def test_webtool_graphs_t458; assert_in_delta(0.7792454880184397, worksheet.webtool_graphs_t458, 0.002); end
  def test_webtool_graphs_c459; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.webtool_graphs_c459); end
  def test_webtool_graphs_l459; assert_in_delta(0.163870192214286, worksheet.webtool_graphs_l459, 0.002); end
  def test_webtool_graphs_m459; assert_in_delta(0.174195527095652, worksheet.webtool_graphs_m459, 0.002); end
  def test_webtool_graphs_n459; assert_in_delta(0.18590762298195943, worksheet.webtool_graphs_n459, 0.002); end
  def test_webtool_graphs_o459; assert_in_delta(0.1973504062574045, worksheet.webtool_graphs_o459, 0.002); end
  def test_webtool_graphs_p459; assert_in_delta(0.2089601382927213, worksheet.webtool_graphs_p459, 0.002); end
  def test_webtool_graphs_q459; assert_in_delta(0.22119136582406507, worksheet.webtool_graphs_q459, 0.002); end
  def test_webtool_graphs_r459; assert_in_delta(0.2340524631829295, worksheet.webtool_graphs_r459, 0.002); end
  def test_webtool_graphs_s459; assert_in_delta(0.24660909199334158, worksheet.webtool_graphs_s459, 0.002); end
  def test_webtool_graphs_t459; assert_in_delta(0.260029517472818, worksheet.webtool_graphs_t459, 0.002); end
  def test_webtool_graphs_c460; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.webtool_graphs_c460); end
  def test_webtool_graphs_l460; assert_in_delta(0.058019539949628204, worksheet.webtool_graphs_l460, 0.002); end
  def test_webtool_graphs_m460; assert_in_delta(0.06302548807506542, worksheet.webtool_graphs_m460, 0.002); end
  def test_webtool_graphs_n460; assert_in_delta(0.06795648736990331, worksheet.webtool_graphs_n460, 0.002); end
  def test_webtool_graphs_o460; assert_in_delta(0.07770487953887459, worksheet.webtool_graphs_o460, 0.002); end
  def test_webtool_graphs_p460; assert_in_delta(0.08827963547016228, worksheet.webtool_graphs_p460, 0.002); end
  def test_webtool_graphs_q460; assert_in_delta(0.09932069538544551, worksheet.webtool_graphs_q460, 0.002); end
  def test_webtool_graphs_r460; assert_in_delta(0.11219023434911034, worksheet.webtool_graphs_r460, 0.002); end
  def test_webtool_graphs_s460; assert_in_delta(0.1258712206623117, worksheet.webtool_graphs_s460, 0.002); end
  def test_webtool_graphs_t460; assert_in_delta(0.14182042599952172, worksheet.webtool_graphs_t460, 0.002); end
  def test_webtool_graphs_c461; assert_equal("Chemicals & petrochemicals.Others", worksheet.webtool_graphs_c461); end
  def test_webtool_graphs_l461; assert_in_delta(0.20897587114113103, worksheet.webtool_graphs_l461, 0.002); end
  def test_webtool_graphs_m461; assert_in_delta(0.22700638933049935, worksheet.webtool_graphs_m461, 0.002); end
  def test_webtool_graphs_n461; assert_in_delta(0.2447669554109902, worksheet.webtool_graphs_n461, 0.002); end
  def test_webtool_graphs_o461; assert_in_delta(0.27987889782736936, worksheet.webtool_graphs_o461, 0.002); end
  def test_webtool_graphs_p461; assert_in_delta(0.31796725279819926, worksheet.webtool_graphs_p461, 0.002); end
  def test_webtool_graphs_q461; assert_in_delta(0.357735150236216, worksheet.webtool_graphs_q461, 0.002); end
  def test_webtool_graphs_r461; assert_in_delta(0.40408889792969155, worksheet.webtool_graphs_r461, 0.002); end
  def test_webtool_graphs_s461; assert_in_delta(0.45336533196128315, worksheet.webtool_graphs_s461, 0.002); end
  def test_webtool_graphs_t461; assert_in_delta(0.5108114799701419, worksheet.webtool_graphs_t461, 0.002); end
  def test_webtool_graphs_c462; assert_equal("TOTAL", worksheet.webtool_graphs_c462); end
  def test_webtool_graphs_l462; assert_in_delta(0.7504088224854852, worksheet.webtool_graphs_l462, 0.002); end
  def test_webtool_graphs_m462; assert_in_delta(0.8113882452204305, worksheet.webtool_graphs_m462, 0.002); end
  def test_webtool_graphs_n462; assert_in_delta(0.8718027643886066, worksheet.webtool_graphs_n462, 0.002); end
  def test_webtool_graphs_o462; assert_in_delta(0.9814475486462328, worksheet.webtool_graphs_o462, 0.002); end
  def test_webtool_graphs_p462; assert_in_epsilon(1.0996679123561135, worksheet.webtool_graphs_p462, 0.002); end
  def test_webtool_graphs_q462; assert_in_epsilon(1.2234806228825945, worksheet.webtool_graphs_q462, 0.002); end
  def test_webtool_graphs_r462; assert_in_epsilon(1.3663010304571093, worksheet.webtool_graphs_r462, 0.002); end
  def test_webtool_graphs_s462; assert_in_epsilon(1.517539264914461, worksheet.webtool_graphs_s462, 0.002); end
  def test_webtool_graphs_t462; assert_in_epsilon(1.6919069114609213, worksheet.webtool_graphs_t462, 0.002); end
  def test_webtool_graphs_b490; assert_equal("Energy description", worksheet.webtool_graphs_b490); end
  def test_webtool_graphs_c490; assert_equal("Technology code", worksheet.webtool_graphs_c490); end
  def test_webtool_graphs_d490; assert_equal("1975", worksheet.webtool_graphs_d490); end
  def test_webtool_graphs_e490; assert_equal("1980", worksheet.webtool_graphs_e490); end
  def test_webtool_graphs_f490; assert_equal("1985", worksheet.webtool_graphs_f490); end
  def test_webtool_graphs_g490; assert_equal("1990", worksheet.webtool_graphs_g490); end
  def test_webtool_graphs_h490; assert_equal("1995", worksheet.webtool_graphs_h490); end
  def test_webtool_graphs_i490; assert_equal("2000", worksheet.webtool_graphs_i490); end
  def test_webtool_graphs_j490; assert_equal("2005", worksheet.webtool_graphs_j490); end
  def test_webtool_graphs_k490; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k490, 0.002); end
  def test_webtool_graphs_l490; assert_equal("2011", worksheet.webtool_graphs_l490); end
  def test_webtool_graphs_m490; assert_equal("2015", worksheet.webtool_graphs_m490); end
  def test_webtool_graphs_n490; assert_equal("2020", worksheet.webtool_graphs_n490); end
  def test_webtool_graphs_o490; assert_equal("2025", worksheet.webtool_graphs_o490); end
  def test_webtool_graphs_p490; assert_equal("2030", worksheet.webtool_graphs_p490); end
  def test_webtool_graphs_q490; assert_equal("2035", worksheet.webtool_graphs_q490); end
  def test_webtool_graphs_r490; assert_equal("2040", worksheet.webtool_graphs_r490); end
  def test_webtool_graphs_s490; assert_equal("2045", worksheet.webtool_graphs_s490); end
  def test_webtool_graphs_t490; assert_equal("2050", worksheet.webtool_graphs_t490); end
  def test_webtool_graphs_b491; assert_equal("Global Materials", worksheet.webtool_graphs_b491); end
  def test_webtool_graphs_c491; assert_equal("Pulp & paper.Pulp", worksheet.webtool_graphs_c491); end
  def test_webtool_graphs_j491; assert_equal("", worksheet.webtool_graphs_j491); end
  def test_webtool_graphs_l491; assert_in_epsilon(3.020565131792657, worksheet.webtool_graphs_l491, 0.002); end
  def test_webtool_graphs_m491; assert_in_epsilon(3.1398048731801484, worksheet.webtool_graphs_m491, 0.002); end
  def test_webtool_graphs_n491; assert_in_epsilon(3.2531560865929414, worksheet.webtool_graphs_n491, 0.002); end
  def test_webtool_graphs_o491; assert_in_epsilon(3.510088507476607, worksheet.webtool_graphs_o491, 0.002); end
  def test_webtool_graphs_p491; assert_in_epsilon(3.7652604279711506, worksheet.webtool_graphs_p491, 0.002); end
  def test_webtool_graphs_q491; assert_in_epsilon(4.008024381961799, worksheet.webtool_graphs_q491, 0.002); end
  def test_webtool_graphs_r491; assert_in_epsilon(4.274654552364053, worksheet.webtool_graphs_r491, 0.002); end
  def test_webtool_graphs_s491; assert_in_epsilon(4.531054066924015, worksheet.webtool_graphs_s491, 0.002); end
  def test_webtool_graphs_t491; assert_in_epsilon(4.814406329744195, worksheet.webtool_graphs_t491, 0.002); end
  def test_webtool_graphs_b492; assert_equal("Global Materials", worksheet.webtool_graphs_b492); end
  def test_webtool_graphs_c492; assert_equal("Pulp & paper.Virgin", worksheet.webtool_graphs_c492); end
  def test_webtool_graphs_l492; assert_in_epsilon(3.059951650403277, worksheet.webtool_graphs_l492, 0.002); end
  def test_webtool_graphs_m492; assert_in_epsilon(3.1807641896010903, worksheet.webtool_graphs_m492, 0.002); end
  def test_webtool_graphs_n492; assert_in_epsilon(3.2956173709767977, worksheet.webtool_graphs_n492, 0.002); end
  def test_webtool_graphs_o492; assert_in_epsilon(3.5559284785495793, worksheet.webtool_graphs_o492, 0.002); end
  def test_webtool_graphs_p492; assert_in_epsilon(3.814459757797597, worksheet.webtool_graphs_p492, 0.002); end
  def test_webtool_graphs_q492; assert_in_epsilon(4.060424501664727, worksheet.webtool_graphs_q492, 0.002); end
  def test_webtool_graphs_r492; assert_in_epsilon(4.330571127501414, worksheet.webtool_graphs_r492, 0.002); end
  def test_webtool_graphs_s492; assert_in_epsilon(4.590357011359913, worksheet.webtool_graphs_s492, 0.002); end
  def test_webtool_graphs_t492; assert_in_epsilon(4.877452264062475, worksheet.webtool_graphs_t492, 0.002); end
  def test_webtool_graphs_b493; assert_equal("Global Materials", worksheet.webtool_graphs_b493); end
  def test_webtool_graphs_c493; assert_equal("Pulp & paper.Recycled", worksheet.webtool_graphs_c493); end
  def test_webtool_graphs_l493; assert_in_delta(0.5308491227739531, worksheet.webtool_graphs_l493, 0.002); end
  def test_webtool_graphs_m493; assert_in_delta(0.5670653646556778, worksheet.webtool_graphs_m493, 0.002); end
  def test_webtool_graphs_n493; assert_in_delta(0.5919422753801, worksheet.webtool_graphs_n493, 0.002); end
  def test_webtool_graphs_o493; assert_in_delta(0.643471326788899, worksheet.webtool_graphs_o493, 0.002); end
  def test_webtool_graphs_p493; assert_in_delta(0.6954015015077294, worksheet.webtool_graphs_p493, 0.002); end
  def test_webtool_graphs_q493; assert_in_delta(0.7457501339491747, worksheet.webtool_graphs_q493, 0.002); end
  def test_webtool_graphs_r493; assert_in_delta(0.8012709739483965, worksheet.webtool_graphs_r493, 0.002); end
  def test_webtool_graphs_s493; assert_in_delta(0.8556303156558033, worksheet.webtool_graphs_s493, 0.002); end
  def test_webtool_graphs_t493; assert_in_delta(0.9158649361208299, worksheet.webtool_graphs_t493, 0.002); end
  def test_webtool_graphs_b494; assert_equal("TOTAL", worksheet.webtool_graphs_b494); end
  def test_webtool_graphs_c494; assert_equal("TOTAL", worksheet.webtool_graphs_c494); end
  def test_webtool_graphs_l494; assert_in_epsilon(6.611365904969887, worksheet.webtool_graphs_l494, 0.002); end
  def test_webtool_graphs_m494; assert_in_epsilon(6.887634427436916, worksheet.webtool_graphs_m494, 0.002); end
  def test_webtool_graphs_n494; assert_in_epsilon(7.14071573294984, worksheet.webtool_graphs_n494, 0.002); end
  def test_webtool_graphs_o494; assert_in_epsilon(7.709488312815085, worksheet.webtool_graphs_o494, 0.002); end
  def test_webtool_graphs_p494; assert_in_epsilon(8.275121687276478, worksheet.webtool_graphs_p494, 0.002); end
  def test_webtool_graphs_q494; assert_in_epsilon(8.814199017575701, worksheet.webtool_graphs_q494, 0.002); end
  def test_webtool_graphs_r494; assert_in_epsilon(9.406496653813862, worksheet.webtool_graphs_r494, 0.002); end
  def test_webtool_graphs_s494; assert_in_epsilon(9.97704139393973, worksheet.webtool_graphs_s494, 0.002); end
  def test_webtool_graphs_t494; assert_in_epsilon(10.6077235299275, worksheet.webtool_graphs_t494, 0.002); end
  def test_webtool_graphs_c481; assert_equal("Technology code", worksheet.webtool_graphs_c481); end
  def test_webtool_graphs_d481; assert_equal("1975", worksheet.webtool_graphs_d481); end
  def test_webtool_graphs_e481; assert_equal("1980", worksheet.webtool_graphs_e481); end
  def test_webtool_graphs_f481; assert_equal("1985", worksheet.webtool_graphs_f481); end
  def test_webtool_graphs_g481; assert_equal("1990", worksheet.webtool_graphs_g481); end
  def test_webtool_graphs_h481; assert_equal("1995", worksheet.webtool_graphs_h481); end
  def test_webtool_graphs_i481; assert_equal("2000", worksheet.webtool_graphs_i481); end
  def test_webtool_graphs_j481; assert_equal("2005", worksheet.webtool_graphs_j481); end
  def test_webtool_graphs_k481; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k481, 0.002); end
  def test_webtool_graphs_l481; assert_equal("2011", worksheet.webtool_graphs_l481); end
  def test_webtool_graphs_m481; assert_equal("2015", worksheet.webtool_graphs_m481); end
  def test_webtool_graphs_n481; assert_equal("2020", worksheet.webtool_graphs_n481); end
  def test_webtool_graphs_o481; assert_equal("2025", worksheet.webtool_graphs_o481); end
  def test_webtool_graphs_p481; assert_equal("2030", worksheet.webtool_graphs_p481); end
  def test_webtool_graphs_q481; assert_equal("2035", worksheet.webtool_graphs_q481); end
  def test_webtool_graphs_r481; assert_equal("2040", worksheet.webtool_graphs_r481); end
  def test_webtool_graphs_s481; assert_equal("2045", worksheet.webtool_graphs_s481); end
  def test_webtool_graphs_t481; assert_equal("2050", worksheet.webtool_graphs_t481); end
  def test_webtool_graphs_c482; assert_equal("Pulp & paper.Pulp", worksheet.webtool_graphs_c482); end
  def test_webtool_graphs_j482; assert_equal("", worksheet.webtool_graphs_j482); end
  def test_webtool_graphs_l482; assert_in_delta(0.186797304, worksheet.webtool_graphs_l482, 0.002); end
  def test_webtool_graphs_m482; assert_in_delta(0.20113086975848055, worksheet.webtool_graphs_m482, 0.002); end
  def test_webtool_graphs_n482; assert_in_delta(0.21593509684457937, worksheet.webtool_graphs_n482, 0.002); end
  def test_webtool_graphs_o482; assert_in_delta(0.2416093852239838, worksheet.webtool_graphs_o482, 0.002); end
  def test_webtool_graphs_p482; assert_in_delta(0.26898070856609013, worksheet.webtool_graphs_p482, 0.002); end
  def test_webtool_graphs_q482; assert_in_delta(0.2974124897667316, worksheet.webtool_graphs_q482, 0.002); end
  def test_webtool_graphs_r482; assert_in_delta(0.329781310280613, worksheet.webtool_graphs_r482, 0.002); end
  def test_webtool_graphs_s482; assert_in_delta(0.36377835470048864, worksheet.webtool_graphs_s482, 0.002); end
  def test_webtool_graphs_t482; assert_in_delta(0.40265632335168927, worksheet.webtool_graphs_t482, 0.002); end
  def test_webtool_graphs_c483; assert_equal("Pulp & paper.Virgin", worksheet.webtool_graphs_c483); end
  def test_webtool_graphs_l483; assert_in_delta(0.40310187100000006, worksheet.webtool_graphs_l483, 0.002); end
  def test_webtool_graphs_m483; assert_in_delta(0.43403319094744985, worksheet.webtool_graphs_m483, 0.002); end
  def test_webtool_graphs_n483; assert_in_delta(0.4659801811305379, worksheet.webtool_graphs_n483, 0.002); end
  def test_webtool_graphs_o483; assert_in_delta(0.5213843730579091, worksheet.webtool_graphs_o483, 0.002); end
  def test_webtool_graphs_p483; assert_in_delta(0.5804507054657313, worksheet.webtool_graphs_p483, 0.002); end
  def test_webtool_graphs_q483; assert_in_delta(0.6418054678334003, worksheet.webtool_graphs_q483, 0.002); end
  def test_webtool_graphs_r483; assert_in_delta(0.7116562195937618, worksheet.webtool_graphs_r483, 0.002); end
  def test_webtool_graphs_s483; assert_in_delta(0.7850206200463612, worksheet.webtool_graphs_s483, 0.002); end
  def test_webtool_graphs_t483; assert_in_delta(0.8689178796341032, worksheet.webtool_graphs_t483, 0.002); end
  def test_webtool_graphs_c484; assert_equal("Pulp & paper.Recycled", worksheet.webtool_graphs_c484); end
  def test_webtool_graphs_l484; assert_in_delta(0.20804958999999998, worksheet.webtool_graphs_l484, 0.002); end
  def test_webtool_graphs_m484; assert_in_delta(0.22401391290741157, worksheet.webtool_graphs_m484, 0.002); end
  def test_webtool_graphs_n484; assert_in_delta(0.24050244518049918, worksheet.webtool_graphs_n484, 0.002); end
  def test_webtool_graphs_o484; assert_in_delta(0.2690977463786195, worksheet.webtool_graphs_o484, 0.002); end
  def test_webtool_graphs_p484; assert_in_delta(0.2995831574479497, worksheet.webtool_graphs_p484, 0.002); end
  def test_webtool_graphs_q484; assert_in_delta(0.3312496766915207, worksheet.webtool_graphs_q484, 0.002); end
  def test_webtool_graphs_r484; assert_in_delta(0.367301159729502, worksheet.webtool_graphs_r484, 0.002); end
  def test_webtool_graphs_s484; assert_in_delta(0.40516611281665627, worksheet.webtool_graphs_s484, 0.002); end
  def test_webtool_graphs_t484; assert_in_delta(0.44846730220595904, worksheet.webtool_graphs_t484, 0.002); end
  def test_webtool_graphs_c485; assert_equal("TOTAL - just virgin & recycled", worksheet.webtool_graphs_c485); end
  def test_webtool_graphs_l485; assert_in_delta(0.6111514610000001, worksheet.webtool_graphs_l485, 0.002); end
  def test_webtool_graphs_m485; assert_in_delta(0.6580471038548614, worksheet.webtool_graphs_m485, 0.002); end
  def test_webtool_graphs_n485; assert_in_delta(0.7064826263110371, worksheet.webtool_graphs_n485, 0.002); end
  def test_webtool_graphs_o485; assert_in_delta(0.7904821194365286, worksheet.webtool_graphs_o485, 0.002); end
  def test_webtool_graphs_p485; assert_in_delta(0.880033862913681, worksheet.webtool_graphs_p485, 0.002); end
  def test_webtool_graphs_q485; assert_in_delta(0.973055144524921, worksheet.webtool_graphs_q485, 0.002); end
  def test_webtool_graphs_r485; assert_in_epsilon(1.0789573793232639, worksheet.webtool_graphs_r485, 0.002); end
  def test_webtool_graphs_s485; assert_in_epsilon(1.1901867328630176, worksheet.webtool_graphs_s485, 0.002); end
  def test_webtool_graphs_t485; assert_in_epsilon(1.3173851818400621, worksheet.webtool_graphs_t485, 0.002); end
  def test_webtool_graphs_b421; assert_equal("Energy description", worksheet.webtool_graphs_b421); end
  def test_webtool_graphs_c421; assert_equal("Technology code", worksheet.webtool_graphs_c421); end
  def test_webtool_graphs_d421; assert_equal("1975", worksheet.webtool_graphs_d421); end
  def test_webtool_graphs_e421; assert_equal("1980", worksheet.webtool_graphs_e421); end
  def test_webtool_graphs_f421; assert_equal("1985", worksheet.webtool_graphs_f421); end
  def test_webtool_graphs_g421; assert_equal("1990", worksheet.webtool_graphs_g421); end
  def test_webtool_graphs_h421; assert_equal("1995", worksheet.webtool_graphs_h421); end
  def test_webtool_graphs_i421; assert_equal("2000", worksheet.webtool_graphs_i421); end
  def test_webtool_graphs_j421; assert_equal("2005", worksheet.webtool_graphs_j421); end
  def test_webtool_graphs_k421; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k421, 0.002); end
  def test_webtool_graphs_l421; assert_equal("2011", worksheet.webtool_graphs_l421); end
  def test_webtool_graphs_m421; assert_equal("2015", worksheet.webtool_graphs_m421); end
  def test_webtool_graphs_n421; assert_equal("2020", worksheet.webtool_graphs_n421); end
  def test_webtool_graphs_o421; assert_equal("2025", worksheet.webtool_graphs_o421); end
  def test_webtool_graphs_p421; assert_equal("2030", worksheet.webtool_graphs_p421); end
  def test_webtool_graphs_q421; assert_equal("2035", worksheet.webtool_graphs_q421); end
  def test_webtool_graphs_r421; assert_equal("2040", worksheet.webtool_graphs_r421); end
  def test_webtool_graphs_s421; assert_equal("2045", worksheet.webtool_graphs_s421); end
  def test_webtool_graphs_t421; assert_equal("2050", worksheet.webtool_graphs_t421); end
  def test_webtool_graphs_b422; assert_equal("Global Materials", worksheet.webtool_graphs_b422); end
  def test_webtool_graphs_c422; assert_equal("Steel.Oxygen", worksheet.webtool_graphs_c422); end
  def test_webtool_graphs_j422; assert_equal("", worksheet.webtool_graphs_j422); end
  def test_webtool_graphs_l422; assert_in_epsilon(21.619770962298666, worksheet.webtool_graphs_l422, 0.002); end
  def test_webtool_graphs_m422; assert_in_epsilon(22.085924994310147, worksheet.webtool_graphs_m422, 0.002); end
  def test_webtool_graphs_n422; assert_in_epsilon(23.07262864492792, worksheet.webtool_graphs_n422, 0.002); end
  def test_webtool_graphs_o422; assert_in_epsilon(24.252356113349347, worksheet.webtool_graphs_o422, 0.002); end
  def test_webtool_graphs_p422; assert_in_epsilon(25.309551727300033, worksheet.webtool_graphs_p422, 0.002); end
  def test_webtool_graphs_q422; assert_in_epsilon(26.14250094257869, worksheet.webtool_graphs_q422, 0.002); end
  def test_webtool_graphs_r422; assert_in_epsilon(27.050899735900185, worksheet.webtool_graphs_r422, 0.002); end
  def test_webtool_graphs_s422; assert_in_epsilon(27.97347819425863, worksheet.webtool_graphs_s422, 0.002); end
  def test_webtool_graphs_t422; assert_in_epsilon(28.896406625402868, worksheet.webtool_graphs_t422, 0.002); end
  def test_webtool_graphs_b423; assert_equal("Global Materials", worksheet.webtool_graphs_b423); end
  def test_webtool_graphs_c423; assert_equal("Steel.OxygenHisarna", worksheet.webtool_graphs_c423); end
  def test_webtool_graphs_l423; assert_in_delta(0.0, (worksheet.webtool_graphs_l423||0), 0.002); end
  def test_webtool_graphs_m423; assert_in_delta(0.3815790522488694, worksheet.webtool_graphs_m423, 0.002); end
  def test_webtool_graphs_n423; assert_in_delta(0.8579617610401943, worksheet.webtool_graphs_n423, 0.002); end
  def test_webtool_graphs_o423; assert_in_epsilon(1.404053781195336, worksheet.webtool_graphs_o423, 0.002); end
  def test_webtool_graphs_p423; assert_in_epsilon(2.0108639215511843, worksheet.webtool_graphs_p423, 0.002); end
  def test_webtool_graphs_q423; assert_in_epsilon(2.6641901657047553, worksheet.webtool_graphs_q423, 0.002); end
  def test_webtool_graphs_r423; assert_in_epsilon(3.3902823124175483, worksheet.webtool_graphs_r423, 0.002); end
  def test_webtool_graphs_s423; assert_in_epsilon(4.18964017045536, worksheet.webtool_graphs_s423, 0.002); end
  def test_webtool_graphs_t423; assert_in_epsilon(5.0656860169186935, worksheet.webtool_graphs_t423, 0.002); end
  def test_webtool_graphs_b424; assert_equal("Global Materials", worksheet.webtool_graphs_b424); end
  def test_webtool_graphs_c424; assert_equal("Steel.Electric", worksheet.webtool_graphs_c424); end
  def test_webtool_graphs_l424; assert_in_epsilon(2.6697592633263763, worksheet.webtool_graphs_l424, 0.002); end
  def test_webtool_graphs_m424; assert_in_epsilon(2.929256483984991, worksheet.webtool_graphs_m424, 0.002); end
  def test_webtool_graphs_n424; assert_in_epsilon(3.1404848134539227, worksheet.webtool_graphs_n424, 0.002); end
  def test_webtool_graphs_o424; assert_in_epsilon(3.3881573569183407, worksheet.webtool_graphs_o424, 0.002); end
  def test_webtool_graphs_p424; assert_in_epsilon(3.629641542548831, worksheet.webtool_graphs_p424, 0.002); end
  def test_webtool_graphs_q424; assert_in_epsilon(3.8491377473549493, worksheet.webtool_graphs_q424, 0.002); end
  def test_webtool_graphs_r424; assert_in_epsilon(4.089880074478328, worksheet.webtool_graphs_r424, 0.002); end
  def test_webtool_graphs_s424; assert_in_epsilon(4.343820565168382, worksheet.webtool_graphs_s424, 0.002); end
  def test_webtool_graphs_t424; assert_in_epsilon(4.609552437463069, worksheet.webtool_graphs_t424, 0.002); end
  def test_webtool_graphs_b425; assert_equal("Global Materials", worksheet.webtool_graphs_b425); end
  def test_webtool_graphs_c425; assert_equal("Steel.ElectricDRI", worksheet.webtool_graphs_c425); end
  def test_webtool_graphs_l425; assert_in_delta(0.48100793205535164, worksheet.webtool_graphs_l425, 0.002); end
  def test_webtool_graphs_m425; assert_in_delta(0.5713195299691578, worksheet.webtool_graphs_m425, 0.002); end
  def test_webtool_graphs_n425; assert_in_delta(0.6669587844477082, worksheet.webtool_graphs_n425, 0.002); end
  def test_webtool_graphs_o425; assert_in_delta(0.7813491291705992, worksheet.webtool_graphs_o425, 0.002); end
  def test_webtool_graphs_p425; assert_in_delta(0.906619268779637, worksheet.webtool_graphs_p425, 0.002); end
  def test_webtool_graphs_q425; assert_in_epsilon(1.0389494213610955, worksheet.webtool_graphs_q425, 0.002); end
  def test_webtool_graphs_r425; assert_in_epsilon(1.1903671686916757, worksheet.webtool_graphs_r425, 0.002); end
  def test_webtool_graphs_s425; assert_in_epsilon(1.3605744448482313, worksheet.webtool_graphs_s425, 0.002); end
  def test_webtool_graphs_t425; assert_in_epsilon(1.5509348568648815, worksheet.webtool_graphs_t425, 0.002); end
  def test_webtool_graphs_b426; assert_equal("Global Materials", worksheet.webtool_graphs_b426); end
  def test_webtool_graphs_c426; assert_equal("Steel.Others", worksheet.webtool_graphs_c426); end
  def test_webtool_graphs_j426; assert_equal("", worksheet.webtool_graphs_j426); end
  def test_webtool_graphs_l426; assert_in_epsilon(6.671485699703609, worksheet.webtool_graphs_l426, 0.002); end
  def test_webtool_graphs_m426; assert_in_epsilon(6.910175002719285, worksheet.webtool_graphs_m426, 0.002); end
  def test_webtool_graphs_n426; assert_in_epsilon(7.3328790333423335, worksheet.webtool_graphs_n426, 0.002); end
  def test_webtool_graphs_o426; assert_in_epsilon(7.832243500158532, worksheet.webtool_graphs_o426, 0.002); end
  def test_webtool_graphs_p426; assert_in_epsilon(8.308621749471945, worksheet.webtool_graphs_p426, 0.002); end
  def test_webtool_graphs_q426; assert_in_epsilon(8.727071891890253, worksheet.webtool_graphs_q426, 0.002); end
  def test_webtool_graphs_r426; assert_in_epsilon(9.186544456389171, worksheet.webtool_graphs_r426, 0.002); end
  def test_webtool_graphs_s426; assert_in_epsilon(9.668212804418548, worksheet.webtool_graphs_s426, 0.002); end
  def test_webtool_graphs_t426; assert_in_epsilon(10.168611621039314, worksheet.webtool_graphs_t426, 0.002); end
  def test_webtool_graphs_b427; assert_equal("TOTAL", worksheet.webtool_graphs_b427); end
  def test_webtool_graphs_c427; assert_equal("TOTAL", worksheet.webtool_graphs_c427); end
  def test_webtool_graphs_l427; assert_in_epsilon(31.442023857384005, worksheet.webtool_graphs_l427, 0.002); end
  def test_webtool_graphs_m427; assert_in_epsilon(32.87825506323245, worksheet.webtool_graphs_m427, 0.002); end
  def test_webtool_graphs_n427; assert_in_epsilon(35.07091303721208, worksheet.webtool_graphs_n427, 0.002); end
  def test_webtool_graphs_o427; assert_in_epsilon(37.658159880792155, worksheet.webtool_graphs_o427, 0.002); end
  def test_webtool_graphs_p427; assert_in_epsilon(40.16529820965163, worksheet.webtool_graphs_p427, 0.002); end
  def test_webtool_graphs_q427; assert_in_epsilon(42.42185016888975, worksheet.webtool_graphs_q427, 0.002); end
  def test_webtool_graphs_r427; assert_in_epsilon(44.9079737478769, worksheet.webtool_graphs_r427, 0.002); end
  def test_webtool_graphs_s427; assert_in_epsilon(47.53572617914915, worksheet.webtool_graphs_s427, 0.002); end
  def test_webtool_graphs_t427; assert_in_epsilon(50.29119155768883, worksheet.webtool_graphs_t427, 0.002); end
  def test_webtool_graphs_c409; assert_equal("Technology code", worksheet.webtool_graphs_c409); end
  def test_webtool_graphs_d409; assert_equal("1975", worksheet.webtool_graphs_d409); end
  def test_webtool_graphs_e409; assert_equal("1980", worksheet.webtool_graphs_e409); end
  def test_webtool_graphs_f409; assert_equal("1985", worksheet.webtool_graphs_f409); end
  def test_webtool_graphs_g409; assert_equal("1990", worksheet.webtool_graphs_g409); end
  def test_webtool_graphs_h409; assert_equal("1995", worksheet.webtool_graphs_h409); end
  def test_webtool_graphs_i409; assert_equal("2000", worksheet.webtool_graphs_i409); end
  def test_webtool_graphs_j409; assert_equal("2005", worksheet.webtool_graphs_j409); end
  def test_webtool_graphs_k409; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k409, 0.002); end
  def test_webtool_graphs_l409; assert_equal("2011", worksheet.webtool_graphs_l409); end
  def test_webtool_graphs_m409; assert_equal("2015", worksheet.webtool_graphs_m409); end
  def test_webtool_graphs_n409; assert_equal("2020", worksheet.webtool_graphs_n409); end
  def test_webtool_graphs_o409; assert_equal("2025", worksheet.webtool_graphs_o409); end
  def test_webtool_graphs_p409; assert_equal("2030", worksheet.webtool_graphs_p409); end
  def test_webtool_graphs_q409; assert_equal("2035", worksheet.webtool_graphs_q409); end
  def test_webtool_graphs_r409; assert_equal("2040", worksheet.webtool_graphs_r409); end
  def test_webtool_graphs_s409; assert_equal("2045", worksheet.webtool_graphs_s409); end
  def test_webtool_graphs_t409; assert_equal("2050", worksheet.webtool_graphs_t409); end
  def test_webtool_graphs_c410; assert_equal("Steel.Oxygen", worksheet.webtool_graphs_c410); end
  def test_webtool_graphs_j410; assert_equal("", worksheet.webtool_graphs_j410); end
  def test_webtool_graphs_l410; assert_in_epsilon(1.072617, worksheet.webtool_graphs_l410, 0.002); end
  def test_webtool_graphs_m410; assert_in_epsilon(1.1360167346705667, worksheet.webtool_graphs_m410, 0.002); end
  def test_webtool_graphs_n410; assert_in_epsilon(1.2167617070880286, worksheet.webtool_graphs_n410, 0.002); end
  def test_webtool_graphs_o410; assert_in_epsilon(1.3118311203751507, worksheet.webtool_graphs_o410, 0.002); end
  def test_webtool_graphs_p410; assert_in_epsilon(1.4047761254805924, worksheet.webtool_graphs_p410, 0.002); end
  def test_webtool_graphs_q410; assert_in_epsilon(1.489563265910586, worksheet.webtool_graphs_q410, 0.002); end
  def test_webtool_graphs_r410; assert_in_epsilon(1.5830002696970975, worksheet.webtool_graphs_r410, 0.002); end
  def test_webtool_graphs_s410; assert_in_epsilon(1.6820535037389175, worksheet.webtool_graphs_s410, 0.002); end
  def test_webtool_graphs_t410; assert_in_epsilon(1.7862683707680451, worksheet.webtool_graphs_t410, 0.002); end
  def test_webtool_graphs_c411; assert_equal("Steel.OxygenHisarna", worksheet.webtool_graphs_c411); end
  def test_webtool_graphs_l411; assert_in_delta(0.0, (worksheet.webtool_graphs_l411||0), 0.002); end
  def test_webtool_graphs_m411; assert_in_delta(0.0, (worksheet.webtool_graphs_m411||0), 0.002); end
  def test_webtool_graphs_n411; assert_in_delta(0.0, (worksheet.webtool_graphs_n411||0), 0.002); end
  def test_webtool_graphs_o411; assert_in_delta(0.0, (worksheet.webtool_graphs_o411||0), 0.002); end
  def test_webtool_graphs_p411; assert_in_delta(0.0, (worksheet.webtool_graphs_p411||0), 0.002); end
  def test_webtool_graphs_q411; assert_in_delta(0.0, (worksheet.webtool_graphs_q411||0), 0.002); end
  def test_webtool_graphs_r411; assert_in_delta(0.0, (worksheet.webtool_graphs_r411||0), 0.002); end
  def test_webtool_graphs_s411; assert_in_delta(0.0, (worksheet.webtool_graphs_s411||0), 0.002); end
  def test_webtool_graphs_t411; assert_in_delta(0.0, (worksheet.webtool_graphs_t411||0), 0.002); end
  def test_webtool_graphs_c412; assert_equal("Steel.Electric", worksheet.webtool_graphs_c412); end
  def test_webtool_graphs_l412; assert_in_delta(0.36884110344827586, worksheet.webtool_graphs_l412, 0.002); end
  def test_webtool_graphs_m412; assert_in_delta(0.39064238768507215, worksheet.webtool_graphs_m412, 0.002); end
  def test_webtool_graphs_n412; assert_in_delta(0.418408183606969, worksheet.webtool_graphs_n412, 0.002); end
  def test_webtool_graphs_o412; assert_in_delta(0.45109972895913325, worksheet.webtool_graphs_o412, 0.002); end
  def test_webtool_graphs_p412; assert_in_delta(0.4830607534842869, worksheet.webtool_graphs_p412, 0.002); end
  def test_webtool_graphs_q412; assert_in_delta(0.5122165308348442, worksheet.webtool_graphs_q412, 0.002); end
  def test_webtool_graphs_r412; assert_in_delta(0.5443467390820729, worksheet.webtool_graphs_r412, 0.002); end
  def test_webtool_graphs_s412; assert_in_delta(0.5784082019752633, worksheet.webtool_graphs_s412, 0.002); end
  def test_webtool_graphs_t412; assert_in_delta(0.6142445970265619, worksheet.webtool_graphs_t412, 0.002); end
  def test_webtool_graphs_c413; assert_equal("Steel.ElectricDRI", worksheet.webtool_graphs_c413); end
  def test_webtool_graphs_l413; assert_in_delta(0.07684189655172412, worksheet.webtool_graphs_l413, 0.002); end
  def test_webtool_graphs_m413; assert_in_delta(0.08138383076772336, worksheet.webtool_graphs_m413, 0.002); end
  def test_webtool_graphs_n413; assert_in_delta(0.08716837158478521, worksheet.webtool_graphs_n413, 0.002); end
  def test_webtool_graphs_o413; assert_in_delta(0.09397911019981942, worksheet.webtool_graphs_o413, 0.002); end
  def test_webtool_graphs_p413; assert_in_delta(0.1006376569758931, worksheet.webtool_graphs_p413, 0.002); end
  def test_webtool_graphs_q413; assert_in_delta(0.10671177725725921, worksheet.webtool_graphs_q413, 0.002); end
  def test_webtool_graphs_r413; assert_in_delta(0.11340557064209851, worksheet.webtool_graphs_r413, 0.002); end
  def test_webtool_graphs_s413; assert_in_delta(0.1205017087448465, worksheet.webtool_graphs_s413, 0.002); end
  def test_webtool_graphs_t413; assert_in_delta(0.12796762438053372, worksheet.webtool_graphs_t413, 0.002); end
  def test_webtool_graphs_c414; assert_equal("Steel.Others", worksheet.webtool_graphs_c414); end
  def test_webtool_graphs_l414; assert_in_delta(0.3, worksheet.webtool_graphs_l414, 0.002); end
  def test_webtool_graphs_m414; assert_in_delta(0.3177322570881964, worksheet.webtool_graphs_m414, 0.002); end
  def test_webtool_graphs_n414; assert_in_delta(0.34031579969962117, worksheet.webtool_graphs_n414, 0.002); end
  def test_webtool_graphs_o414; assert_in_delta(0.36690574185617536, worksheet.webtool_graphs_o414, 0.002); end
  def test_webtool_graphs_p414; assert_in_delta(0.39290150878102603, worksheet.webtool_graphs_p414, 0.002); end
  def test_webtool_graphs_q414; assert_in_delta(0.4166156044265341, worksheet.webtool_graphs_q414, 0.002); end
  def test_webtool_graphs_r414; assert_in_delta(0.44274897834840327, worksheet.webtool_graphs_r414, 0.002); end
  def test_webtool_graphs_s414; assert_in_delta(0.4704531544080275, worksheet.webtool_graphs_s414, 0.002); end
  def test_webtool_graphs_t414; assert_in_delta(0.4996009864009367, worksheet.webtool_graphs_t414, 0.002); end
  def test_webtool_graphs_c415; assert_equal("TOTAL", worksheet.webtool_graphs_c415); end
  def test_webtool_graphs_l415; assert_in_epsilon(1.8183, worksheet.webtool_graphs_l415, 0.002); end
  def test_webtool_graphs_m415; assert_in_epsilon(1.9257752102115586, worksheet.webtool_graphs_m415, 0.002); end
  def test_webtool_graphs_n415; assert_in_epsilon(2.062654061979404, worksheet.webtool_graphs_n415, 0.002); end
  def test_webtool_graphs_o415; assert_in_epsilon(2.2238157013902784, worksheet.webtool_graphs_o415, 0.002); end
  def test_webtool_graphs_p415; assert_in_epsilon(2.381376044721798, worksheet.webtool_graphs_p415, 0.002); end
  def test_webtool_graphs_q415; assert_in_epsilon(2.5251071784292236, worksheet.webtool_graphs_q415, 0.002); end
  def test_webtool_graphs_r415; assert_in_epsilon(2.6835015577696724, worksheet.webtool_graphs_r415, 0.002); end
  def test_webtool_graphs_s415; assert_in_epsilon(2.8514165688670543, worksheet.webtool_graphs_s415, 0.002); end
  def test_webtool_graphs_t415; assert_in_epsilon(3.0280815785760775, worksheet.webtool_graphs_t415, 0.002); end
  def test_webtool_graphs_c169; assert_equal("Level", worksheet.webtool_graphs_c169); end
  def test_webtool_graphs_d169; assert_equal("1975", worksheet.webtool_graphs_d169); end
  def test_webtool_graphs_e169; assert_equal("1980", worksheet.webtool_graphs_e169); end
  def test_webtool_graphs_f169; assert_equal("1985", worksheet.webtool_graphs_f169); end
  def test_webtool_graphs_g169; assert_equal("1990", worksheet.webtool_graphs_g169); end
  def test_webtool_graphs_h169; assert_equal("1995", worksheet.webtool_graphs_h169); end
  def test_webtool_graphs_i169; assert_equal("2000", worksheet.webtool_graphs_i169); end
  def test_webtool_graphs_j169; assert_equal("2005", worksheet.webtool_graphs_j169); end
  def test_webtool_graphs_k169; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k169, 0.002); end
  def test_webtool_graphs_l169; assert_equal("2011", worksheet.webtool_graphs_l169); end
  def test_webtool_graphs_m169; assert_equal("2015", worksheet.webtool_graphs_m169); end
  def test_webtool_graphs_n169; assert_equal("2020", worksheet.webtool_graphs_n169); end
  def test_webtool_graphs_o169; assert_equal("2025", worksheet.webtool_graphs_o169); end
  def test_webtool_graphs_p169; assert_equal("2030", worksheet.webtool_graphs_p169); end
  def test_webtool_graphs_q169; assert_equal("2035", worksheet.webtool_graphs_q169); end
  def test_webtool_graphs_r169; assert_equal("2040", worksheet.webtool_graphs_r169); end
  def test_webtool_graphs_s169; assert_equal("2045", worksheet.webtool_graphs_s169); end
  def test_webtool_graphs_t169; assert_equal("2050", worksheet.webtool_graphs_t169); end
  def test_webtool_graphs_c170; assert_equal("Historic data", worksheet.webtool_graphs_c170); end
  def test_webtool_graphs_c171; assert_equal("Urban", worksheet.webtool_graphs_c171); end
  def test_webtool_graphs_l171; assert_in_delta(0.14693270333150854, worksheet.webtool_graphs_l171, 0.002); end
  def test_webtool_graphs_m171; assert_in_delta(0.16670271750783786, worksheet.webtool_graphs_m171, 0.002); end
  def test_webtool_graphs_n171; assert_in_delta(0.17553267707976447, worksheet.webtool_graphs_n171, 0.002); end
  def test_webtool_graphs_o171; assert_in_delta(0.1813227754516348, worksheet.webtool_graphs_o171, 0.002); end
  def test_webtool_graphs_p171; assert_in_delta(0.18670446442585642, worksheet.webtool_graphs_p171, 0.002); end
  def test_webtool_graphs_q171; assert_in_delta(0.19089109622633157, worksheet.webtool_graphs_q171, 0.002); end
  def test_webtool_graphs_r171; assert_in_delta(0.19426227376149777, worksheet.webtool_graphs_r171, 0.002); end
  def test_webtool_graphs_s171; assert_in_delta(0.1962711730728977, worksheet.webtool_graphs_s171, 0.002); end
  def test_webtool_graphs_t171; assert_in_delta(0.1981300893438245, worksheet.webtool_graphs_t171, 0.002); end
  def test_webtool_graphs_c172; assert_equal("Rural", worksheet.webtool_graphs_c172); end
  def test_webtool_graphs_l172; assert_in_delta(0.09451208719370718, worksheet.webtool_graphs_l172, 0.002); end
  def test_webtool_graphs_m172; assert_in_delta(0.10319531392487662, worksheet.webtool_graphs_m172, 0.002); end
  def test_webtool_graphs_n172; assert_in_delta(0.11135916135886026, worksheet.webtool_graphs_n172, 0.002); end
  def test_webtool_graphs_o172; assert_in_delta(0.11987765200149492, worksheet.webtool_graphs_o172, 0.002); end
  def test_webtool_graphs_p172; assert_in_delta(0.12973176115561322, worksheet.webtool_graphs_p172, 0.002); end
  def test_webtool_graphs_q172; assert_in_delta(0.13978956039162518, worksheet.webtool_graphs_q172, 0.002); end
  def test_webtool_graphs_r172; assert_in_delta(0.1503558510444376, worksheet.webtool_graphs_r172, 0.002); end
  def test_webtool_graphs_s172; assert_in_delta(0.16162457191065627, worksheet.webtool_graphs_s172, 0.002); end
  def test_webtool_graphs_t172; assert_in_delta(0.17438734162612796, worksheet.webtool_graphs_t172, 0.002); end
  def test_webtool_graphs_c173; assert_equal("Average", worksheet.webtool_graphs_c173); end
  def test_webtool_graphs_l173; assert_in_delta(0.12184041896087834, worksheet.webtool_graphs_l173, 0.002); end
  def test_webtool_graphs_m173; assert_in_delta(0.13750580790183506, worksheet.webtool_graphs_m173, 0.002); end
  def test_webtool_graphs_n173; assert_in_delta(0.1474346728738337, worksheet.webtool_graphs_n173, 0.002); end
  def test_webtool_graphs_o173; assert_in_delta(0.1556480434099743, worksheet.webtool_graphs_o173, 0.002); end
  def test_webtool_graphs_p173; assert_in_delta(0.16393699554753438, worksheet.webtool_graphs_p173, 0.002); end
  def test_webtool_graphs_q173; assert_in_delta(0.17131644903741625, worksheet.webtool_graphs_q173, 0.002); end
  def test_webtool_graphs_r173; assert_in_delta(0.1781191020853926, worksheet.webtool_graphs_r173, 0.002); end
  def test_webtool_graphs_s173; assert_in_delta(0.1840720563032221, worksheet.webtool_graphs_s173, 0.002); end
  def test_webtool_graphs_t173; assert_in_delta(0.19014453164790923, worksheet.webtool_graphs_t173, 0.002); end
  def test_webtool_graphs_b125; assert_equal("Type of city", worksheet.webtool_graphs_b125); end
  def test_webtool_graphs_c125; assert_equal(".", worksheet.webtool_graphs_c125); end
  def test_webtool_graphs_d125; assert_equal("1975", worksheet.webtool_graphs_d125); end
  def test_webtool_graphs_e125; assert_equal("1980", worksheet.webtool_graphs_e125); end
  def test_webtool_graphs_f125; assert_equal("1985", worksheet.webtool_graphs_f125); end
  def test_webtool_graphs_g125; assert_equal("1990", worksheet.webtool_graphs_g125); end
  def test_webtool_graphs_h125; assert_equal("1995", worksheet.webtool_graphs_h125); end
  def test_webtool_graphs_i125; assert_equal("2000", worksheet.webtool_graphs_i125); end
  def test_webtool_graphs_j125; assert_equal("2005", worksheet.webtool_graphs_j125); end
  def test_webtool_graphs_k125; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k125, 0.002); end
  def test_webtool_graphs_l125; assert_equal("2011", worksheet.webtool_graphs_l125); end
  def test_webtool_graphs_m125; assert_equal("2015", worksheet.webtool_graphs_m125); end
  def test_webtool_graphs_n125; assert_equal("2020", worksheet.webtool_graphs_n125); end
  def test_webtool_graphs_o125; assert_equal("2025", worksheet.webtool_graphs_o125); end
  def test_webtool_graphs_p125; assert_equal("2030", worksheet.webtool_graphs_p125); end
  def test_webtool_graphs_q125; assert_equal("2035", worksheet.webtool_graphs_q125); end
  def test_webtool_graphs_r125; assert_equal("2040", worksheet.webtool_graphs_r125); end
  def test_webtool_graphs_s125; assert_equal("2045", worksheet.webtool_graphs_s125); end
  def test_webtool_graphs_t125; assert_equal("2050", worksheet.webtool_graphs_t125); end
  def test_webtool_graphs_b126; assert_equal("Automobile city", worksheet.webtool_graphs_b126); end
  def test_webtool_graphs_l126; assert_in_epsilon(8918.930449006788, worksheet.webtool_graphs_l126, 0.002); end
  def test_webtool_graphs_m126; assert_in_epsilon(9041.779958301404, worksheet.webtool_graphs_m126, 0.002); end
  def test_webtool_graphs_n126; assert_in_epsilon(9091.916544710388, worksheet.webtool_graphs_n126, 0.002); end
  def test_webtool_graphs_o126; assert_in_epsilon(9030.51827350002, worksheet.webtool_graphs_o126, 0.002); end
  def test_webtool_graphs_p126; assert_in_epsilon(8947.175414946329, worksheet.webtool_graphs_p126, 0.002); end
  def test_webtool_graphs_q126; assert_in_epsilon(8835.799816934708, worksheet.webtool_graphs_q126, 0.002); end
  def test_webtool_graphs_r126; assert_in_epsilon(8710.422588768872, worksheet.webtool_graphs_r126, 0.002); end
  def test_webtool_graphs_s126; assert_in_epsilon(8455.251190127457, worksheet.webtool_graphs_s126, 0.002); end
  def test_webtool_graphs_t126; assert_in_epsilon(8192.890509650273, worksheet.webtool_graphs_t126, 0.002); end
  def test_webtool_graphs_b127; assert_equal("Transit city", worksheet.webtool_graphs_b127); end
  def test_webtool_graphs_l127; assert_in_epsilon(4297.810771691249, worksheet.webtool_graphs_l127, 0.002); end
  def test_webtool_graphs_m127; assert_in_epsilon(4806.391365574918, worksheet.webtool_graphs_m127, 0.002); end
  def test_webtool_graphs_n127; assert_in_epsilon(5199.081277073991, worksheet.webtool_graphs_n127, 0.002); end
  def test_webtool_graphs_o127; assert_in_epsilon(5429.2403102038825, worksheet.webtool_graphs_o127, 0.002); end
  def test_webtool_graphs_p127; assert_in_epsilon(5645.713066800187, worksheet.webtool_graphs_p127, 0.002); end
  def test_webtool_graphs_q127; assert_in_epsilon(5819.674459136306, worksheet.webtool_graphs_q127, 0.002); end
  def test_webtool_graphs_r127; assert_in_epsilon(5980.821670829502, worksheet.webtool_graphs_r127, 0.002); end
  def test_webtool_graphs_s127; assert_in_epsilon(6082.141431669585, worksheet.webtool_graphs_s127, 0.002); end
  def test_webtool_graphs_t127; assert_in_epsilon(6129.539127109365, worksheet.webtool_graphs_t127, 0.002); end
  def test_webtool_graphs_b128; assert_equal("Booming city", worksheet.webtool_graphs_b128); end
  def test_webtool_graphs_l128; assert_in_epsilon(2135.8170176364983, worksheet.webtool_graphs_l128, 0.002); end
  def test_webtool_graphs_m128; assert_in_epsilon(2694.166592184805, worksheet.webtool_graphs_m128, 0.002); end
  def test_webtool_graphs_n128; assert_in_epsilon(3226.790566458258, worksheet.webtool_graphs_n128, 0.002); end
  def test_webtool_graphs_o128; assert_in_epsilon(3740.8985299078986, worksheet.webtool_graphs_o128, 0.002); end
  def test_webtool_graphs_p128; assert_in_epsilon(4249.664636837677, worksheet.webtool_graphs_p128, 0.002); end
  def test_webtool_graphs_q128; assert_in_epsilon(4727.334099595344, worksheet.webtool_graphs_q128, 0.002); end
  def test_webtool_graphs_r128; assert_in_epsilon(5171.018022640063, worksheet.webtool_graphs_r128, 0.002); end
  def test_webtool_graphs_s128; assert_in_epsilon(5586.744203761589, worksheet.webtool_graphs_s128, 0.002); end
  def test_webtool_graphs_t128; assert_in_epsilon(6002.0071452589755, worksheet.webtool_graphs_t128, 0.002); end
  def test_webtool_graphs_b129; assert_equal("Developed", worksheet.webtool_graphs_b129); end
  def test_webtool_graphs_l129; assert_in_epsilon(19691.47987657908, worksheet.webtool_graphs_l129, 0.002); end
  def test_webtool_graphs_m129; assert_in_epsilon(20079.298872965224, worksheet.webtool_graphs_m129, 0.002); end
  def test_webtool_graphs_n129; assert_in_epsilon(20360.54967760836, worksheet.webtool_graphs_n129, 0.002); end
  def test_webtool_graphs_o129; assert_in_epsilon(20637.545420797924, worksheet.webtool_graphs_o129, 0.002); end
  def test_webtool_graphs_p129; assert_in_epsilon(20831.896291281093, worksheet.webtool_graphs_p129, 0.002); end
  def test_webtool_graphs_q129; assert_in_epsilon(21019.0240373037, worksheet.webtool_graphs_q129, 0.002); end
  def test_webtool_graphs_r129; assert_in_epsilon(20800.958390719603, worksheet.webtool_graphs_r129, 0.002); end
  def test_webtool_graphs_s129; assert_in_epsilon(20529.35655838458, worksheet.webtool_graphs_s129, 0.002); end
  def test_webtool_graphs_t129; assert_in_epsilon(20205.936108935803, worksheet.webtool_graphs_t129, 0.002); end
  def test_webtool_graphs_b130; assert_equal("Developing", worksheet.webtool_graphs_b130); end
  def test_webtool_graphs_l130; assert_in_epsilon(943.5087023952483, worksheet.webtool_graphs_l130, 0.002); end
  def test_webtool_graphs_m130; assert_in_epsilon(1214.2993256708041, worksheet.webtool_graphs_m130, 0.002); end
  def test_webtool_graphs_n130; assert_in_epsilon(1557.0337967834105, worksheet.webtool_graphs_n130, 0.002); end
  def test_webtool_graphs_o130; assert_in_epsilon(1918.2202597335604, worksheet.webtool_graphs_o130, 0.002); end
  def test_webtool_graphs_p130; assert_in_epsilon(2334.399142998802, worksheet.webtool_graphs_p130, 0.002); end
  def test_webtool_graphs_q130; assert_in_epsilon(2764.8008764714637, worksheet.webtool_graphs_q130, 0.002); end
  def test_webtool_graphs_r130; assert_in_epsilon(3247.7860089425826, worksheet.webtool_graphs_r130, 0.002); end
  def test_webtool_graphs_s130; assert_in_epsilon(3760.9972846396136, worksheet.webtool_graphs_s130, 0.002); end
  def test_webtool_graphs_t130; assert_in_epsilon(4329.769416946532, worksheet.webtool_graphs_t130, 0.002); end
  def test_webtool_graphs_b131; assert_equal("International slow growth", worksheet.webtool_graphs_b131); end
  def test_webtool_graphs_l131; assert_in_delta(0.0, (worksheet.webtool_graphs_l131||0), 0.002); end
  def test_webtool_graphs_m131; assert_in_delta(0.0, (worksheet.webtool_graphs_m131||0), 0.002); end
  def test_webtool_graphs_n131; assert_in_delta(0.0, (worksheet.webtool_graphs_n131||0), 0.002); end
  def test_webtool_graphs_o131; assert_in_delta(0.0, (worksheet.webtool_graphs_o131||0), 0.002); end
  def test_webtool_graphs_p131; assert_in_delta(0.0, (worksheet.webtool_graphs_p131||0), 0.002); end
  def test_webtool_graphs_q131; assert_in_delta(0.0, (worksheet.webtool_graphs_q131||0), 0.002); end
  def test_webtool_graphs_r131; assert_in_delta(0.0, (worksheet.webtool_graphs_r131||0), 0.002); end
  def test_webtool_graphs_s131; assert_in_delta(0.0, (worksheet.webtool_graphs_s131||0), 0.002); end
  def test_webtool_graphs_t131; assert_in_delta(0.0, (worksheet.webtool_graphs_t131||0), 0.002); end
  def test_webtool_graphs_b132; assert_equal("International fast growth", worksheet.webtool_graphs_b132); end
  def test_webtool_graphs_l132; assert_in_delta(0.0, (worksheet.webtool_graphs_l132||0), 0.002); end
  def test_webtool_graphs_m132; assert_in_delta(0.0, (worksheet.webtool_graphs_m132||0), 0.002); end
  def test_webtool_graphs_n132; assert_in_delta(0.0, (worksheet.webtool_graphs_n132||0), 0.002); end
  def test_webtool_graphs_o132; assert_in_delta(0.0, (worksheet.webtool_graphs_o132||0), 0.002); end
  def test_webtool_graphs_p132; assert_in_delta(0.0, (worksheet.webtool_graphs_p132||0), 0.002); end
  def test_webtool_graphs_q132; assert_in_delta(0.0, (worksheet.webtool_graphs_q132||0), 0.002); end
  def test_webtool_graphs_r132; assert_in_delta(0.0, (worksheet.webtool_graphs_r132||0), 0.002); end
  def test_webtool_graphs_s132; assert_in_delta(0.0, (worksheet.webtool_graphs_s132||0), 0.002); end
  def test_webtool_graphs_t132; assert_in_delta(0.0, (worksheet.webtool_graphs_t132||0), 0.002); end
  def test_webtool_graphs_b143; assert_equal("Type of city", worksheet.webtool_graphs_b143); end
  def test_webtool_graphs_c143; assert_equal(".", worksheet.webtool_graphs_c143); end
  def test_webtool_graphs_d143; assert_equal("1975", worksheet.webtool_graphs_d143); end
  def test_webtool_graphs_e143; assert_equal("1980", worksheet.webtool_graphs_e143); end
  def test_webtool_graphs_f143; assert_equal("1985", worksheet.webtool_graphs_f143); end
  def test_webtool_graphs_g143; assert_equal("1990", worksheet.webtool_graphs_g143); end
  def test_webtool_graphs_h143; assert_equal("1995", worksheet.webtool_graphs_h143); end
  def test_webtool_graphs_i143; assert_equal("2000", worksheet.webtool_graphs_i143); end
  def test_webtool_graphs_j143; assert_equal("2005", worksheet.webtool_graphs_j143); end
  def test_webtool_graphs_k143; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k143, 0.002); end
  def test_webtool_graphs_l143; assert_equal("2011", worksheet.webtool_graphs_l143); end
  def test_webtool_graphs_m143; assert_equal("2015", worksheet.webtool_graphs_m143); end
  def test_webtool_graphs_n143; assert_equal("2020", worksheet.webtool_graphs_n143); end
  def test_webtool_graphs_o143; assert_equal("2025", worksheet.webtool_graphs_o143); end
  def test_webtool_graphs_p143; assert_equal("2030", worksheet.webtool_graphs_p143); end
  def test_webtool_graphs_q143; assert_equal("2035", worksheet.webtool_graphs_q143); end
  def test_webtool_graphs_r143; assert_equal("2040", worksheet.webtool_graphs_r143); end
  def test_webtool_graphs_s143; assert_equal("2045", worksheet.webtool_graphs_s143); end
  def test_webtool_graphs_t143; assert_equal("2050", worksheet.webtool_graphs_t143); end
  def test_webtool_graphs_b144; assert_equal("Urban", worksheet.webtool_graphs_b144); end
  def test_webtool_graphs_l144; assert_in_epsilon(3526.3848799562056, worksheet.webtool_graphs_l144, 0.002); end
  def test_webtool_graphs_m144; assert_in_epsilon(4000.865220188108, worksheet.webtool_graphs_m144, 0.002); end
  def test_webtool_graphs_n144; assert_in_epsilon(4415.341794665331, worksheet.webtool_graphs_n144, 0.002); end
  def test_webtool_graphs_o144; assert_in_epsilon(4765.961839266873, worksheet.webtool_graphs_o144, 0.002); end
  def test_webtool_graphs_p144; assert_in_epsilon(5114.086760106903, worksheet.webtool_graphs_p144, 0.002); end
  def test_webtool_graphs_q144; assert_in_epsilon(5435.5811119415575, worksheet.webtool_graphs_q144, 0.002); end
  def test_webtool_graphs_r144; assert_in_epsilon(5737.476787502847, worksheet.webtool_graphs_r144, 0.002); end
  def test_webtool_graphs_s144; assert_in_epsilon(6000.226059682279, worksheet.webtool_graphs_s144, 0.002); end
  def test_webtool_graphs_t144; assert_in_epsilon(6257.740741835357, worksheet.webtool_graphs_t144, 0.002); end
  def test_webtool_graphs_b145; assert_equal("Rural", worksheet.webtool_graphs_b145); end
  def test_webtool_graphs_l145; assert_in_epsilon(2551.826354230094, worksheet.webtool_graphs_l145, 0.002); end
  def test_webtool_graphs_m145; assert_in_epsilon(2786.273475971669, worksheet.webtool_graphs_m145, 0.002); end
  def test_webtool_graphs_n145; assert_in_epsilon(3066.0949697764736, worksheet.webtool_graphs_n145, 0.002); end
  def test_webtool_graphs_o145; assert_in_epsilon(3362.993826630672, worksheet.webtool_graphs_o145, 0.002); end
  def test_webtool_graphs_p145; assert_in_epsilon(3705.20264069141, worksheet.webtool_graphs_p145, 0.002); end
  def test_webtool_graphs_q145; assert_in_epsilon(4061.4744160999894, worksheet.webtool_graphs_q145, 0.002); end
  def test_webtool_graphs_r145; assert_in_epsilon(4440.714033296124, worksheet.webtool_graphs_r145, 0.002); end
  def test_webtool_graphs_s145; assert_in_epsilon(4849.053809542206, worksheet.webtool_graphs_s145, 0.002); end
  def test_webtool_graphs_t145; assert_in_epsilon(5311.140876565352, worksheet.webtool_graphs_t145, 0.002); end
  def test_webtool_graphs_b146; assert_equal("Average", worksheet.webtool_graphs_b146); end
  def test_webtool_graphs_l146; assert_in_epsilon(3059.8909417877144, worksheet.webtool_graphs_l146, 0.002); end
  def test_webtool_graphs_m146; assert_in_epsilon(3442.4685079408605, worksheet.webtool_graphs_m146, 0.002); end
  def test_webtool_graphs_n146; assert_in_epsilon(3824.5818443231296, worksheet.webtool_graphs_n146, 0.002); end
  def test_webtool_graphs_o146; assert_in_epsilon(4179.734230550539, worksheet.webtool_graphs_o146, 0.002); end
  def test_webtool_graphs_p146; assert_in_epsilon(4551.067568445904, worksheet.webtool_graphs_p146, 0.002); end
  def test_webtool_graphs_q146; assert_in_epsilon(4909.224059620697, worksheet.webtool_graphs_q146, 0.002); end
  def test_webtool_graphs_r146; assert_in_epsilon(5260.693153836329, worksheet.webtool_graphs_r146, 0.002); end
  def test_webtool_graphs_s146; assert_in_epsilon(5594.8966989260025, worksheet.webtool_graphs_s146, 0.002); end
  def test_webtool_graphs_t146; assert_in_epsilon(5939.364455782118, worksheet.webtool_graphs_t146, 0.002); end
  def test_webtool_graphs_b103; assert_equal("Automobile city", worksheet.webtool_graphs_b103); end
  def test_webtool_graphs_l103; assert_in_epsilon(11737.0, worksheet.webtool_graphs_l103, 0.002); end
  def test_webtool_graphs_m103; assert_in_epsilon(12011.67656948035, worksheet.webtool_graphs_m103, 0.002); end
  def test_webtool_graphs_n103; assert_in_epsilon(12266.04955510127, worksheet.webtool_graphs_n103, 0.002); end
  def test_webtool_graphs_o103; assert_in_epsilon(12375.60672604644, worksheet.webtool_graphs_o103, 0.002); end
  def test_webtool_graphs_p103; assert_in_epsilon(12458.123714228803, worksheet.webtool_graphs_p103, 0.002); end
  def test_webtool_graphs_q103; assert_in_epsilon(12503.662303608913, worksheet.webtool_graphs_q103, 0.002); end
  def test_webtool_graphs_r103; assert_in_epsilon(12530.568306776691, worksheet.webtool_graphs_r103, 0.002); end
  def test_webtool_graphs_s103; assert_in_epsilon(12368.515785695039, worksheet.webtool_graphs_s103, 0.002); end
  def test_webtool_graphs_t103; assert_in_epsilon(12190.209486794192, worksheet.webtool_graphs_t103, 0.002); end
  def test_webtool_graphs_b104; assert_equal("Transit city", worksheet.webtool_graphs_b104); end
  def test_webtool_graphs_l104; assert_in_epsilon(8237.0, worksheet.webtool_graphs_l104, 0.002); end
  def test_webtool_graphs_m104; assert_in_epsilon(9092.106780078124, worksheet.webtool_graphs_m104, 0.002); end
  def test_webtool_graphs_n104; assert_in_epsilon(9765.865310065976, worksheet.webtool_graphs_n104, 0.002); end
  def test_webtool_graphs_o104; assert_in_epsilon(10127.05905491678, worksheet.webtool_graphs_o104, 0.002); end
  def test_webtool_graphs_p104; assert_in_epsilon(10457.897081490017, worksheet.webtool_graphs_p104, 0.002); end
  def test_webtool_graphs_q104; assert_in_epsilon(10705.978695612404, worksheet.webtool_graphs_q104, 0.002); end
  def test_webtool_graphs_r104; assert_in_epsilon(10927.25832769744, worksheet.webtool_graphs_r104, 0.002); end
  def test_webtool_graphs_s104; assert_in_epsilon(11036.968876362718, worksheet.webtool_graphs_s104, 0.002); end
  def test_webtool_graphs_t104; assert_in_epsilon(11048.010260909676, worksheet.webtool_graphs_t104, 0.002); end
  def test_webtool_graphs_b105; assert_equal("Booming city", worksheet.webtool_graphs_b105); end
  def test_webtool_graphs_l105; assert_in_epsilon(9198.0, worksheet.webtool_graphs_l105, 0.002); end
  def test_webtool_graphs_m105; assert_in_epsilon(10400.758744510593, worksheet.webtool_graphs_m105, 0.002); end
  def test_webtool_graphs_n105; assert_in_epsilon(11122.022972217885, worksheet.webtool_graphs_n105, 0.002); end
  def test_webtool_graphs_o105; assert_in_epsilon(11646.021249058504, worksheet.webtool_graphs_o105, 0.002); end
  def test_webtool_graphs_p105; assert_in_epsilon(12062.372813814192, worksheet.webtool_graphs_p105, 0.002); end
  def test_webtool_graphs_q105; assert_in_epsilon(12330.090588931875, worksheet.webtool_graphs_q105, 0.002); end
  def test_webtool_graphs_r105; assert_in_epsilon(12475.651684669445, worksheet.webtool_graphs_r105, 0.002); end
  def test_webtool_graphs_s105; assert_in_epsilon(12538.154824428539, worksheet.webtool_graphs_s105, 0.002); end
  def test_webtool_graphs_t105; assert_in_epsilon(12591.53264763364, worksheet.webtool_graphs_t105, 0.002); end
  def test_webtool_graphs_b106; assert_equal("Developed", worksheet.webtool_graphs_b106); end
  def test_webtool_graphs_l106; assert_in_epsilon(23191.0, worksheet.webtool_graphs_l106, 0.002); end
  def test_webtool_graphs_m106; assert_in_epsilon(23989.60438824997, worksheet.webtool_graphs_m106, 0.002); end
  def test_webtool_graphs_n106; assert_in_epsilon(24810.257828472648, worksheet.webtool_graphs_n106, 0.002); end
  def test_webtool_graphs_o106; assert_in_epsilon(25658.984764950197, worksheet.webtool_graphs_o106, 0.002); end
  def test_webtool_graphs_p106; assert_in_epsilon(26438.04713229092, worksheet.webtool_graphs_p106, 0.002); end
  def test_webtool_graphs_q106; assert_in_epsilon(27240.763520933207, worksheet.webtool_graphs_q106, 0.002); end
  def test_webtool_graphs_r106; assert_in_epsilon(27541.733276406438, worksheet.webtool_graphs_r106, 0.002); end
  def test_webtool_graphs_s106; assert_in_epsilon(27783.56838551335, worksheet.webtool_graphs_s106, 0.002); end
  def test_webtool_graphs_t106; assert_in_epsilon(27964.63173312677, worksheet.webtool_graphs_t106, 0.002); end
  def test_webtool_graphs_b107; assert_equal("Developing", worksheet.webtool_graphs_b107); end
  def test_webtool_graphs_l107; assert_in_epsilon(4007.0, worksheet.webtool_graphs_l107, 0.002); end
  def test_webtool_graphs_m107; assert_in_epsilon(4530.9676331000155, worksheet.webtool_graphs_m107, 0.002); end
  def test_webtool_graphs_n107; assert_in_epsilon(5088.973563806325, worksheet.webtool_graphs_n107, 0.002); end
  def test_webtool_graphs_o107; assert_in_epsilon(5577.445836716928, worksheet.webtool_graphs_o107, 0.002); end
  def test_webtool_graphs_p107; assert_in_epsilon(6112.804806603019, worksheet.webtool_graphs_p107, 0.002); end
  def test_webtool_graphs_q107; assert_in_epsilon(6585.226837020949, worksheet.webtool_graphs_q107, 0.002); end
  def test_webtool_graphs_r107; assert_in_epsilon(7094.159533472762, worksheet.webtool_graphs_r107, 0.002); end
  def test_webtool_graphs_s107; assert_in_epsilon(7586.120132005357, worksheet.webtool_graphs_s107, 0.002); end
  def test_webtool_graphs_t107; assert_in_epsilon(8112.196855128412, worksheet.webtool_graphs_t107, 0.002); end
  def test_webtool_graphs_b108; assert_equal("International slow growth", worksheet.webtool_graphs_b108); end
  def test_webtool_graphs_l108; assert_in_epsilon(3216.16253150423, worksheet.webtool_graphs_l108, 0.002); end
  def test_webtool_graphs_m108; assert_in_epsilon(3484.134643747568, worksheet.webtool_graphs_m108, 0.002); end
  def test_webtool_graphs_n108; assert_in_epsilon(3688.3706771357956, worksheet.webtool_graphs_n108, 0.002); end
  def test_webtool_graphs_o108; assert_in_epsilon(3904.578795876411, worksheet.webtool_graphs_o108, 0.002); end
  def test_webtool_graphs_p108; assert_in_epsilon(4133.4607900762185, worksheet.webtool_graphs_p108, 0.002); end
  def test_webtool_graphs_q108; assert_in_epsilon(4375.759587984587, worksheet.webtool_graphs_q108, 0.002); end
  def test_webtool_graphs_r108; assert_in_epsilon(4632.26166746485, worksheet.webtool_graphs_r108, 0.002); end
  def test_webtool_graphs_s108; assert_in_epsilon(4903.7996088234395, worksheet.webtool_graphs_s108, 0.002); end
  def test_webtool_graphs_t108; assert_in_epsilon(5191.254797282972, worksheet.webtool_graphs_t108, 0.002); end
  def test_webtool_graphs_b109; assert_equal("International fast growth", worksheet.webtool_graphs_b109); end
  def test_webtool_graphs_l109; assert_in_epsilon(233.26483269454, worksheet.webtool_graphs_l109, 0.002); end
  def test_webtool_graphs_m109; assert_in_epsilon(287.4501885868328, worksheet.webtool_graphs_m109, 0.002); end
  def test_webtool_graphs_n109; assert_in_epsilon(346.0836144827904, worksheet.webtool_graphs_n109, 0.002); end
  def test_webtool_graphs_o109; assert_in_epsilon(416.6769512391238, worksheet.webtool_graphs_o109, 0.002); end
  def test_webtool_graphs_p109; assert_in_epsilon(501.6697538639603, worksheet.webtool_graphs_p109, 0.002); end
  def test_webtool_graphs_q109; assert_in_epsilon(603.9991921643295, worksheet.webtool_graphs_q109, 0.002); end
  def test_webtool_graphs_r109; assert_in_epsilon(727.2015530641119, worksheet.webtool_graphs_r109, 0.002); end
  def test_webtool_graphs_s109; assert_in_epsilon(875.5344471304858, worksheet.webtool_graphs_s109, 0.002); end
  def test_webtool_graphs_t109; assert_in_epsilon(1054.1239425055292, worksheet.webtool_graphs_t109, 0.002); end
  def test_webtool_graphs_b113; assert_equal("Type of city", worksheet.webtool_graphs_b113); end
  def test_webtool_graphs_c113; assert_equal(".", worksheet.webtool_graphs_c113); end
  def test_webtool_graphs_d113; assert_equal("1975", worksheet.webtool_graphs_d113); end
  def test_webtool_graphs_e113; assert_equal("1980", worksheet.webtool_graphs_e113); end
  def test_webtool_graphs_f113; assert_equal("1985", worksheet.webtool_graphs_f113); end
  def test_webtool_graphs_g113; assert_equal("1990", worksheet.webtool_graphs_g113); end
  def test_webtool_graphs_h113; assert_equal("1995", worksheet.webtool_graphs_h113); end
  def test_webtool_graphs_i113; assert_equal("2000", worksheet.webtool_graphs_i113); end
  def test_webtool_graphs_j113; assert_equal("2005", worksheet.webtool_graphs_j113); end
  def test_webtool_graphs_k113; assert_equal("2010", worksheet.webtool_graphs_k113); end
  def test_webtool_graphs_l113; assert_equal("2011", worksheet.webtool_graphs_l113); end
  def test_webtool_graphs_m113; assert_equal("2015", worksheet.webtool_graphs_m113); end
  def test_webtool_graphs_n113; assert_equal("2020", worksheet.webtool_graphs_n113); end
  def test_webtool_graphs_o113; assert_equal("2025", worksheet.webtool_graphs_o113); end
  def test_webtool_graphs_p113; assert_equal("2030", worksheet.webtool_graphs_p113); end
  def test_webtool_graphs_q113; assert_equal("2035", worksheet.webtool_graphs_q113); end
  def test_webtool_graphs_r113; assert_equal("2040", worksheet.webtool_graphs_r113); end
  def test_webtool_graphs_s113; assert_equal("2045", worksheet.webtool_graphs_s113); end
  def test_webtool_graphs_t113; assert_equal("2050", worksheet.webtool_graphs_t113); end
  def test_webtool_graphs_b114; assert_equal("Urban", worksheet.webtool_graphs_b114); end
  def test_webtool_graphs_l114; assert_in_epsilon(9187.12956717257, worksheet.webtool_graphs_l114, 0.002); end
  def test_webtool_graphs_m114; assert_in_epsilon(10194.274948810013, worksheet.webtool_graphs_m114, 0.002); end
  def test_webtool_graphs_n114; assert_in_epsilon(10864.468156676125, worksheet.webtool_graphs_n114, 0.002); end
  def test_webtool_graphs_o114; assert_in_epsilon(11313.475001700785, worksheet.webtool_graphs_o114, 0.002); end
  def test_webtool_graphs_p114; assert_in_epsilon(11687.539150543824, worksheet.webtool_graphs_p114, 0.002); end
  def test_webtool_graphs_q114; assert_in_epsilon(11943.503702211865, worksheet.webtool_graphs_q114, 0.002); end
  def test_webtool_graphs_r114; assert_in_epsilon(12111.709270532288, worksheet.webtool_graphs_r114, 0.002); end
  def test_webtool_graphs_s114; assert_in_epsilon(12177.81683740558, worksheet.webtool_graphs_s114, 0.002); end
  def test_webtool_graphs_t114; assert_in_epsilon(12213.875409001868, worksheet.webtool_graphs_t114, 0.002); end
  def test_webtool_graphs_b115; assert_equal("Rural", worksheet.webtool_graphs_b115); end
  def test_webtool_graphs_l115; assert_in_epsilon(5652.722918290269, worksheet.webtool_graphs_l115, 0.002); end
  def test_webtool_graphs_m115; assert_in_epsilon(6152.408116175827, worksheet.webtool_graphs_m115, 0.002); end
  def test_webtool_graphs_n115; assert_in_epsilon(6671.689506611237, worksheet.webtool_graphs_n115, 0.002); end
  def test_webtool_graphs_o115; assert_in_epsilon(7127.356230200211, worksheet.webtool_graphs_o115, 0.002); end
  def test_webtool_graphs_p115; assert_in_epsilon(7619.057952536879, worksheet.webtool_graphs_p115, 0.002); end
  def test_webtool_graphs_q115; assert_in_epsilon(8052.475682883874, worksheet.webtool_graphs_q115, 0.002); end
  def test_webtool_graphs_r115; assert_in_epsilon(8483.793453624112, worksheet.webtool_graphs_r115, 0.002); end
  def test_webtool_graphs_s115; assert_in_epsilon(8896.681588845126, worksheet.webtool_graphs_s115, 0.002); end
  def test_webtool_graphs_t115; assert_in_epsilon(9339.357880279356, worksheet.webtool_graphs_t115, 0.002); end
  def test_webtool_graphs_b116; assert_equal("International", worksheet.webtool_graphs_b116); end
  def test_webtool_graphs_l116; assert_in_epsilon(766.3185363489457, worksheet.webtool_graphs_l116, 0.002); end
  def test_webtool_graphs_m116; assert_in_epsilon(849.4419294600638, worksheet.webtool_graphs_m116, 0.002); end
  def test_webtool_graphs_n116; assert_in_epsilon(921.5624230728797, worksheet.webtool_graphs_n116, 0.002); end
  def test_webtool_graphs_o116; assert_in_epsilon(1004.5897185404, worksheet.webtool_graphs_o116, 0.002); end
  def test_webtool_graphs_p116; assert_in_epsilon(1100.6766215143705, worksheet.webtool_graphs_p116, 0.002); end
  def test_webtool_graphs_q116; assert_in_epsilon(1212.4251044670784, worksheet.webtool_graphs_q116, 0.002); end
  def test_webtool_graphs_r116; assert_in_epsilon(1342.9804536795255, worksheet.webtool_graphs_r116, 0.002); end
  def test_webtool_graphs_s116; assert_in_epsilon(1496.1451067342307, worksheet.webtool_graphs_s116, 0.002); end
  def test_webtool_graphs_t116; assert_in_epsilon(1676.516291171811, worksheet.webtool_graphs_t116, 0.002); end
  def test_webtool_graphs_b117; assert_equal("Average global distance travelled per person (urban and rural - excluding international)", worksheet.webtool_graphs_b117); end
  def test_webtool_graphs_l117; assert_in_epsilon(7495.307851798881, worksheet.webtool_graphs_l117, 0.002); end
  def test_webtool_graphs_m117; assert_in_epsilon(8336.06608033121, worksheet.webtool_graphs_m117, 0.002); end
  def test_webtool_graphs_n117; assert_in_epsilon(9028.684176000677, worksheet.webtool_graphs_n117, 0.002); end
  def test_webtool_graphs_o117; assert_in_epsilon(9564.312957294514, worksheet.webtool_graphs_o117, 0.002); end
  def test_webtool_graphs_p117; assert_in_epsilon(10061.690037885668, worksheet.webtool_graphs_p117, 0.002); end
  def test_webtool_graphs_q117; assert_in_epsilon(10453.02989479255, worksheet.webtool_graphs_q117, 0.002); end
  def test_webtool_graphs_r117; assert_in_epsilon(10777.825427701027, worksheet.webtool_graphs_r117, 0.002); end
  def test_webtool_graphs_s117; assert_in_epsilon(11022.524523251837, worksheet.webtool_graphs_s117, 0.002); end
  def test_webtool_graphs_t117; assert_in_epsilon(11247.069635446673, worksheet.webtool_graphs_t117, 0.002); end
  def test_webtool_graphs_b118; assert_equal("Average global distance travelled per person (including domestic&international)", worksheet.webtool_graphs_b118); end
  def test_webtool_graphs_l118; assert_in_epsilon(8261.626388147826, worksheet.webtool_graphs_l118, 0.002); end
  def test_webtool_graphs_m118; assert_in_epsilon(9185.508009791272, worksheet.webtool_graphs_m118, 0.002); end
  def test_webtool_graphs_n118; assert_in_epsilon(9950.246599073556, worksheet.webtool_graphs_n118, 0.002); end
  def test_webtool_graphs_o118; assert_in_epsilon(10568.902675834914, worksheet.webtool_graphs_o118, 0.002); end
  def test_webtool_graphs_p118; assert_in_epsilon(11162.366659400039, worksheet.webtool_graphs_p118, 0.002); end
  def test_webtool_graphs_q118; assert_in_epsilon(11665.454999259628, worksheet.webtool_graphs_q118, 0.002); end
  def test_webtool_graphs_r118; assert_in_epsilon(12120.805881380553, worksheet.webtool_graphs_r118, 0.002); end
  def test_webtool_graphs_s118; assert_in_epsilon(12518.669629986069, worksheet.webtool_graphs_s118, 0.002); end
  def test_webtool_graphs_t118; assert_in_epsilon(12923.585926618483, worksheet.webtool_graphs_t118, 0.002); end
  def test_webtool_graphs_b75; assert_equal("Type of city", worksheet.webtool_graphs_b75); end
  def test_webtool_graphs_c75; assert_equal(".", worksheet.webtool_graphs_c75); end
  def test_webtool_graphs_d75; assert_equal("1975", worksheet.webtool_graphs_d75); end
  def test_webtool_graphs_e75; assert_equal("1980", worksheet.webtool_graphs_e75); end
  def test_webtool_graphs_f75; assert_equal("1985", worksheet.webtool_graphs_f75); end
  def test_webtool_graphs_g75; assert_equal("1990", worksheet.webtool_graphs_g75); end
  def test_webtool_graphs_h75; assert_equal("1995", worksheet.webtool_graphs_h75); end
  def test_webtool_graphs_i75; assert_equal("2000", worksheet.webtool_graphs_i75); end
  def test_webtool_graphs_j75; assert_equal("2005", worksheet.webtool_graphs_j75); end
  def test_webtool_graphs_k75; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k75, 0.002); end
  def test_webtool_graphs_l75; assert_equal("2011", worksheet.webtool_graphs_l75); end
  def test_webtool_graphs_m75; assert_equal("2015", worksheet.webtool_graphs_m75); end
  def test_webtool_graphs_n75; assert_equal("2020", worksheet.webtool_graphs_n75); end
  def test_webtool_graphs_o75; assert_equal("2025", worksheet.webtool_graphs_o75); end
  def test_webtool_graphs_p75; assert_equal("2030", worksheet.webtool_graphs_p75); end
  def test_webtool_graphs_q75; assert_equal("2035", worksheet.webtool_graphs_q75); end
  def test_webtool_graphs_r75; assert_equal("2040", worksheet.webtool_graphs_r75); end
  def test_webtool_graphs_s75; assert_equal("2045", worksheet.webtool_graphs_s75); end
  def test_webtool_graphs_t75; assert_equal("2050", worksheet.webtool_graphs_t75); end
  def test_webtool_graphs_b76; assert_equal("Automobile city", worksheet.webtool_graphs_b76); end
  def test_webtool_graphs_l76; assert_in_delta(0.7598986494851144, worksheet.webtool_graphs_l76, 0.002); end
  def test_webtool_graphs_m76; assert_in_delta(0.7527492024947663, worksheet.webtool_graphs_m76, 0.002); end
  def test_webtool_graphs_n76; assert_in_delta(0.7412261383640989, worksheet.webtool_graphs_n76, 0.002); end
  def test_webtool_graphs_o76; assert_in_delta(0.7297030742334315, worksheet.webtool_graphs_o76, 0.002); end
  def test_webtool_graphs_p76; assert_in_delta(0.7181800101027643, worksheet.webtool_graphs_p76, 0.002); end
  def test_webtool_graphs_q76; assert_in_delta(0.7066569459720968, worksheet.webtool_graphs_q76, 0.002); end
  def test_webtool_graphs_r76; assert_in_delta(0.6951338818414297, worksheet.webtool_graphs_r76, 0.002); end
  def test_webtool_graphs_s76; assert_in_delta(0.6836108177107624, worksheet.webtool_graphs_s76, 0.002); end
  def test_webtool_graphs_t76; assert_in_delta(0.6720877535800951, worksheet.webtool_graphs_t76, 0.002); end
  def test_webtool_graphs_b77; assert_equal("Transit city", worksheet.webtool_graphs_b77); end
  def test_webtool_graphs_l77; assert_in_delta(0.5217689415674699, worksheet.webtool_graphs_l77, 0.002); end
  def test_webtool_graphs_m77; assert_in_delta(0.5286334049778526, worksheet.webtool_graphs_m77, 0.002); end
  def test_webtool_graphs_n77; assert_in_delta(0.532372822274657, worksheet.webtool_graphs_n77, 0.002); end
  def test_webtool_graphs_o77; assert_in_delta(0.5361122395714615, worksheet.webtool_graphs_o77, 0.002); end
  def test_webtool_graphs_p77; assert_in_delta(0.5398516568682659, worksheet.webtool_graphs_p77, 0.002); end
  def test_webtool_graphs_q77; assert_in_delta(0.5435910741650704, worksheet.webtool_graphs_q77, 0.002); end
  def test_webtool_graphs_r77; assert_in_delta(0.5473304914618746, worksheet.webtool_graphs_r77, 0.002); end
  def test_webtool_graphs_s77; assert_in_delta(0.5510699087586791, worksheet.webtool_graphs_s77, 0.002); end
  def test_webtool_graphs_t77; assert_in_delta(0.5548093260554836, worksheet.webtool_graphs_t77, 0.002); end
  def test_webtool_graphs_b78; assert_equal("Booming city", worksheet.webtool_graphs_b78); end
  def test_webtool_graphs_l78; assert_in_delta(0.2322045028959011, worksheet.webtool_graphs_l78, 0.002); end
  def test_webtool_graphs_m78; assert_in_delta(0.25903558176529734, worksheet.webtool_graphs_m78, 0.002); end
  def test_webtool_graphs_n78; assert_in_delta(0.2901262274424876, worksheet.webtool_graphs_n78, 0.002); end
  def test_webtool_graphs_o78; assert_in_delta(0.32121687311967795, worksheet.webtool_graphs_o78, 0.002); end
  def test_webtool_graphs_p78; assert_in_delta(0.3523075187968683, worksheet.webtool_graphs_p78, 0.002); end
  def test_webtool_graphs_q78; assert_in_delta(0.38339816447405856, worksheet.webtool_graphs_q78, 0.002); end
  def test_webtool_graphs_r78; assert_in_delta(0.41448881015124894, worksheet.webtool_graphs_r78, 0.002); end
  def test_webtool_graphs_s78; assert_in_delta(0.4455794558284393, worksheet.webtool_graphs_s78, 0.002); end
  def test_webtool_graphs_t78; assert_in_delta(0.47667010150562955, worksheet.webtool_graphs_t78, 0.002); end
  def test_webtool_graphs_b79; assert_equal("Developed", worksheet.webtool_graphs_b79); end
  def test_webtool_graphs_l79; assert_in_delta(0.8491000766064025, worksheet.webtool_graphs_l79, 0.002); end
  def test_webtool_graphs_m79; assert_in_delta(0.837, worksheet.webtool_graphs_m79, 0.002); end
  def test_webtool_graphs_n79; assert_in_delta(0.8206504671725849, worksheet.webtool_graphs_n79, 0.002); end
  def test_webtool_graphs_o79; assert_in_delta(0.8043009343451699, worksheet.webtool_graphs_o79, 0.002); end
  def test_webtool_graphs_p79; assert_in_delta(0.7879514015177549, worksheet.webtool_graphs_p79, 0.002); end
  def test_webtool_graphs_q79; assert_in_delta(0.7716018686903398, worksheet.webtool_graphs_q79, 0.002); end
  def test_webtool_graphs_r79; assert_in_delta(0.7552523358629246, worksheet.webtool_graphs_r79, 0.002); end
  def test_webtool_graphs_s79; assert_in_delta(0.7389028030355096, worksheet.webtool_graphs_s79, 0.002); end
  def test_webtool_graphs_t79; assert_in_delta(0.7225532702080946, worksheet.webtool_graphs_t79, 0.002); end
  def test_webtool_graphs_b80; assert_equal("Developing", worksheet.webtool_graphs_b80); end
  def test_webtool_graphs_l80; assert_in_delta(0.2354651116534186, worksheet.webtool_graphs_l80, 0.002); end
  def test_webtool_graphs_m80; assert_in_delta(0.268, worksheet.webtool_graphs_m80, 0.002); end
  def test_webtool_graphs_n80; assert_in_delta(0.3059622490195879, worksheet.webtool_graphs_n80, 0.002); end
  def test_webtool_graphs_o80; assert_in_delta(0.3439244980391758, worksheet.webtool_graphs_o80, 0.002); end
  def test_webtool_graphs_p80; assert_in_delta(0.3818867470587637, worksheet.webtool_graphs_p80, 0.002); end
  def test_webtool_graphs_q80; assert_in_delta(0.4198489960783516, worksheet.webtool_graphs_q80, 0.002); end
  def test_webtool_graphs_r80; assert_in_delta(0.45781124509793947, worksheet.webtool_graphs_r80, 0.002); end
  def test_webtool_graphs_s80; assert_in_delta(0.49577349411752736, worksheet.webtool_graphs_s80, 0.002); end
  def test_webtool_graphs_t80; assert_in_delta(0.5337357431371152, worksheet.webtool_graphs_t80, 0.002); end
  def test_webtool_graphs_b81; assert_equal("International slow growth", worksheet.webtool_graphs_b81); end
  def test_webtool_graphs_l81; assert_in_delta(0.0, (worksheet.webtool_graphs_l81||0), 0.002); end
  def test_webtool_graphs_m81; assert_in_delta(0.0, (worksheet.webtool_graphs_m81||0), 0.002); end
  def test_webtool_graphs_n81; assert_in_delta(0.0, (worksheet.webtool_graphs_n81||0), 0.002); end
  def test_webtool_graphs_o81; assert_in_delta(0.0, (worksheet.webtool_graphs_o81||0), 0.002); end
  def test_webtool_graphs_p81; assert_in_delta(0.0, (worksheet.webtool_graphs_p81||0), 0.002); end
  def test_webtool_graphs_q81; assert_in_delta(0.0, (worksheet.webtool_graphs_q81||0), 0.002); end
  def test_webtool_graphs_r81; assert_in_delta(0.0, (worksheet.webtool_graphs_r81||0), 0.002); end
  def test_webtool_graphs_s81; assert_in_delta(0.0, (worksheet.webtool_graphs_s81||0), 0.002); end
  def test_webtool_graphs_t81; assert_in_delta(0.0, (worksheet.webtool_graphs_t81||0), 0.002); end
  def test_webtool_graphs_b82; assert_equal("International fast growth", worksheet.webtool_graphs_b82); end
  def test_webtool_graphs_l82; assert_in_delta(0.0, (worksheet.webtool_graphs_l82||0), 0.002); end
  def test_webtool_graphs_m82; assert_in_delta(0.0, (worksheet.webtool_graphs_m82||0), 0.002); end
  def test_webtool_graphs_n82; assert_in_delta(0.0, (worksheet.webtool_graphs_n82||0), 0.002); end
  def test_webtool_graphs_o82; assert_in_delta(0.0, (worksheet.webtool_graphs_o82||0), 0.002); end
  def test_webtool_graphs_p82; assert_in_delta(0.0, (worksheet.webtool_graphs_p82||0), 0.002); end
  def test_webtool_graphs_q82; assert_in_delta(0.0, (worksheet.webtool_graphs_q82||0), 0.002); end
  def test_webtool_graphs_r82; assert_in_delta(0.0, (worksheet.webtool_graphs_r82||0), 0.002); end
  def test_webtool_graphs_s82; assert_in_delta(0.0, (worksheet.webtool_graphs_s82||0), 0.002); end
  def test_webtool_graphs_t82; assert_in_delta(0.0, (worksheet.webtool_graphs_t82||0), 0.002); end
  def test_webtool_graphs_b136; assert_equal("Type of city", worksheet.webtool_graphs_b136); end
  def test_webtool_graphs_c136; assert_equal(".", worksheet.webtool_graphs_c136); end
  def test_webtool_graphs_d136; assert_equal("1975", worksheet.webtool_graphs_d136); end
  def test_webtool_graphs_e136; assert_equal("1980", worksheet.webtool_graphs_e136); end
  def test_webtool_graphs_f136; assert_equal("1985", worksheet.webtool_graphs_f136); end
  def test_webtool_graphs_g136; assert_equal("1990", worksheet.webtool_graphs_g136); end
  def test_webtool_graphs_h136; assert_equal("1995", worksheet.webtool_graphs_h136); end
  def test_webtool_graphs_i136; assert_equal("2000", worksheet.webtool_graphs_i136); end
  def test_webtool_graphs_j136; assert_equal("2005", worksheet.webtool_graphs_j136); end
  def test_webtool_graphs_k136; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k136, 0.002); end
  def test_webtool_graphs_l136; assert_equal("2011", worksheet.webtool_graphs_l136); end
  def test_webtool_graphs_m136; assert_equal("2015", worksheet.webtool_graphs_m136); end
  def test_webtool_graphs_n136; assert_equal("2020", worksheet.webtool_graphs_n136); end
  def test_webtool_graphs_o136; assert_equal("2025", worksheet.webtool_graphs_o136); end
  def test_webtool_graphs_p136; assert_equal("2030", worksheet.webtool_graphs_p136); end
  def test_webtool_graphs_q136; assert_equal("2035", worksheet.webtool_graphs_q136); end
  def test_webtool_graphs_r136; assert_equal("2040", worksheet.webtool_graphs_r136); end
  def test_webtool_graphs_s136; assert_equal("2045", worksheet.webtool_graphs_s136); end
  def test_webtool_graphs_t136; assert_equal("2050", worksheet.webtool_graphs_t136); end
  def test_webtool_graphs_b137; assert_equal("Urban", worksheet.webtool_graphs_b137); end
  def test_webtool_graphs_l137; assert_in_delta(0.383839680737352, worksheet.webtool_graphs_l137, 0.002); end
  def test_webtool_graphs_m137; assert_in_delta(0.39246196912269204, worksheet.webtool_graphs_m137, 0.002); end
  def test_webtool_graphs_n137; assert_in_delta(0.40640201903966555, worksheet.webtool_graphs_n137, 0.002); end
  def test_webtool_graphs_o137; assert_in_delta(0.42126418616299527, worksheet.webtool_graphs_o137, 0.002); end
  def test_webtool_graphs_p137; assert_in_delta(0.43756745489652055, worksheet.webtool_graphs_p137, 0.002); end
  def test_webtool_graphs_q137; assert_in_delta(0.4551077512484817, worksheet.webtool_graphs_q137, 0.002); end
  def test_webtool_graphs_r137; assert_in_delta(0.473713219112854, worksheet.webtool_graphs_r137, 0.002); end
  def test_webtool_graphs_s137; assert_in_delta(0.49271771285407145, worksheet.webtool_graphs_s137, 0.002); end
  def test_webtool_graphs_t137; assert_in_delta(0.5123468622598916, worksheet.webtool_graphs_t137, 0.002); end
  def test_webtool_graphs_b138; assert_equal("Rural", worksheet.webtool_graphs_b138); end
  def test_webtool_graphs_l138; assert_in_delta(0.451433121898344, worksheet.webtool_graphs_l138, 0.002); end
  def test_webtool_graphs_m138; assert_in_delta(0.452875268245947, worksheet.webtool_graphs_m138, 0.002); end
  def test_webtool_graphs_n138; assert_in_delta(0.4595679949940957, worksheet.webtool_graphs_n138, 0.002); end
  def test_webtool_graphs_o138; assert_in_delta(0.4718430955339248, worksheet.webtool_graphs_o138, 0.002); end
  def test_webtool_graphs_p138; assert_in_delta(0.4863071870266727, worksheet.webtool_graphs_p138, 0.002); end
  def test_webtool_graphs_q138; assert_in_delta(0.5043758684963123, worksheet.webtool_graphs_q138, 0.002); end
  def test_webtool_graphs_r138; assert_in_delta(0.5234349536644056, worksheet.webtool_graphs_r138, 0.002); end
  def test_webtool_graphs_s138; assert_in_delta(0.5450407279521015, worksheet.webtool_graphs_s138, 0.002); end
  def test_webtool_graphs_t138; assert_in_delta(0.5686837301502453, worksheet.webtool_graphs_t138, 0.002); end
  def test_webtool_graphs_b139; assert_equal("Average", worksheet.webtool_graphs_b139); end
  def test_webtool_graphs_l139; assert_in_delta(0.4082408624554811, worksheet.webtool_graphs_l139, 0.002); end
  def test_webtool_graphs_m139; assert_in_delta(0.41296079886690196, worksheet.webtool_graphs_m139, 0.002); end
  def test_webtool_graphs_n139; assert_in_delta(0.42360345868441446, worksheet.webtool_graphs_n139, 0.002); end
  def test_webtool_graphs_o139; assert_in_delta(0.43701353659310543, worksheet.webtool_graphs_o139, 0.002); end
  def test_webtool_graphs_p139; assert_in_delta(0.45231641516580157, worksheet.webtool_graphs_p139, 0.002); end
  def test_webtool_graphs_q139; assert_in_delta(0.4696460365110364, worksheet.webtool_graphs_q139, 0.002); end
  def test_webtool_graphs_r139; assert_in_delta(0.48810339238891026, worksheet.webtool_graphs_r139, 0.002); end
  def test_webtool_graphs_s139; assert_in_delta(0.5075875936700035, worksheet.webtool_graphs_s139, 0.002); end
  def test_webtool_graphs_t139; assert_in_delta(0.5280810600712742, worksheet.webtool_graphs_t139, 0.002); end
  def test_webtool_graphs_c250; assert_equal("Technology code", worksheet.webtool_graphs_c250); end
  def test_webtool_graphs_d250; assert_equal("1975", worksheet.webtool_graphs_d250); end
  def test_webtool_graphs_e250; assert_equal("1980", worksheet.webtool_graphs_e250); end
  def test_webtool_graphs_f250; assert_equal("1985", worksheet.webtool_graphs_f250); end
  def test_webtool_graphs_g250; assert_equal("1990", worksheet.webtool_graphs_g250); end
  def test_webtool_graphs_h250; assert_equal("1995", worksheet.webtool_graphs_h250); end
  def test_webtool_graphs_i250; assert_equal("2000", worksheet.webtool_graphs_i250); end
  def test_webtool_graphs_j250; assert_equal("2005", worksheet.webtool_graphs_j250); end
  def test_webtool_graphs_k250; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k250, 0.002); end
  def test_webtool_graphs_l250; assert_equal("2011", worksheet.webtool_graphs_l250); end
  def test_webtool_graphs_m250; assert_equal("2015", worksheet.webtool_graphs_m250); end
  def test_webtool_graphs_n250; assert_equal("2020", worksheet.webtool_graphs_n250); end
  def test_webtool_graphs_o250; assert_equal("2025", worksheet.webtool_graphs_o250); end
  def test_webtool_graphs_p250; assert_equal("2030", worksheet.webtool_graphs_p250); end
  def test_webtool_graphs_q250; assert_equal("2035", worksheet.webtool_graphs_q250); end
  def test_webtool_graphs_r250; assert_equal("2040", worksheet.webtool_graphs_r250); end
  def test_webtool_graphs_s250; assert_equal("2045", worksheet.webtool_graphs_s250); end
  def test_webtool_graphs_t250; assert_equal("2050", worksheet.webtool_graphs_t250); end
  def test_webtool_graphs_c251; assert_equal("Historic data", worksheet.webtool_graphs_c251); end
  def test_webtool_graphs_c252; assert_equal("Hydrogen", worksheet.webtool_graphs_c252); end
  def test_webtool_graphs_l252; assert_in_delta(0.0, (worksheet.webtool_graphs_l252||0), 0.002); end
  def test_webtool_graphs_m252; assert_in_delta(0.0, (worksheet.webtool_graphs_m252||0), 0.002); end
  def test_webtool_graphs_n252; assert_in_delta(0.0, (worksheet.webtool_graphs_n252||0), 0.002); end
  def test_webtool_graphs_o252; assert_in_delta(0.0, (worksheet.webtool_graphs_o252||0), 0.002); end
  def test_webtool_graphs_p252; assert_in_delta(0.0, (worksheet.webtool_graphs_p252||0), 0.002); end
  def test_webtool_graphs_q252; assert_in_delta(0.0, (worksheet.webtool_graphs_q252||0), 0.002); end
  def test_webtool_graphs_r252; assert_in_delta(0.0, (worksheet.webtool_graphs_r252||0), 0.002); end
  def test_webtool_graphs_s252; assert_in_delta(0.0, (worksheet.webtool_graphs_s252||0), 0.002); end
  def test_webtool_graphs_t252; assert_in_delta(0.0, (worksheet.webtool_graphs_t252||0), 0.002); end
  def test_webtool_graphs_c253; assert_equal("Electric", worksheet.webtool_graphs_c253); end
  def test_webtool_graphs_l253; assert_in_epsilon(1843862.7539329836, worksheet.webtool_graphs_l253, 0.002); end
  def test_webtool_graphs_m253; assert_in_epsilon(10838586.540711742, worksheet.webtool_graphs_m253, 0.002); end
  def test_webtool_graphs_n253; assert_in_epsilon(13713893.901646186, worksheet.webtool_graphs_n253, 0.002); end
  def test_webtool_graphs_o253; assert_in_epsilon(16814432.914921522, worksheet.webtool_graphs_o253, 0.002); end
  def test_webtool_graphs_p253; assert_in_epsilon(20281415.8102998, worksheet.webtool_graphs_p253, 0.002); end
  def test_webtool_graphs_q253; assert_in_epsilon(23980993.566779576, worksheet.webtool_graphs_q253, 0.002); end
  def test_webtool_graphs_r253; assert_in_epsilon(27914291.062709633, worksheet.webtool_graphs_r253, 0.002); end
  def test_webtool_graphs_s253; assert_in_epsilon(31987653.910760384, worksheet.webtool_graphs_s253, 0.002); end
  def test_webtool_graphs_t253; assert_in_epsilon(36321199.27639881, worksheet.webtool_graphs_t253, 0.002); end
  def test_webtool_graphs_c254; assert_equal("ICEs", worksheet.webtool_graphs_c254); end
  def test_webtool_graphs_l254; assert_in_epsilon(846950046.366128, worksheet.webtool_graphs_l254, 0.002); end
  def test_webtool_graphs_m254; assert_in_epsilon(986200365.4612781, worksheet.webtool_graphs_m254, 0.002); end
  def test_webtool_graphs_n254; assert_in_epsilon(1106041369.3810945, worksheet.webtool_graphs_n254, 0.002); end
  def test_webtool_graphs_o254; assert_in_epsilon(1214318088.7342043, worksheet.webtool_graphs_o254, 0.002); end
  def test_webtool_graphs_p254; assert_in_epsilon(1323324842.8870409, worksheet.webtool_graphs_p254, 0.002); end
  def test_webtool_graphs_q254; assert_in_epsilon(1424647252.3613973, worksheet.webtool_graphs_q254, 0.002); end
  def test_webtool_graphs_r254; assert_in_epsilon(1519913346.0213192, worksheet.webtool_graphs_r254, 0.002); end
  def test_webtool_graphs_s254; assert_in_epsilon(1605536088.1224594, worksheet.webtool_graphs_s254, 0.002); end
  def test_webtool_graphs_t254; assert_in_epsilon(1688935766.3525445, worksheet.webtool_graphs_t254, 0.002); end
  def test_webtool_graphs_c255; assert_equal("PHs", worksheet.webtool_graphs_c255); end
  def test_webtool_graphs_l255; assert_in_epsilon(24.055719645422165, worksheet.webtool_graphs_l255, 0.002); end
  def test_webtool_graphs_m255; assert_in_epsilon(10161114.612829462, worksheet.webtool_graphs_m255, 0.002); end
  def test_webtool_graphs_n255; assert_in_epsilon(17961101.181742437, worksheet.webtool_graphs_n255, 0.002); end
  def test_webtool_graphs_o255; assert_in_epsilon(27034895.875624686, worksheet.webtool_graphs_o255, 0.002); end
  def test_webtool_graphs_p255; assert_in_epsilon(37552600.759917326, worksheet.webtool_graphs_p255, 0.002); end
  def test_webtool_graphs_q255; assert_in_epsilon(49268046.45867297, worksheet.webtool_graphs_q255, 0.002); end
  def test_webtool_graphs_r255; assert_in_epsilon(62135175.386882216, worksheet.webtool_graphs_r255, 0.002); end
  def test_webtool_graphs_s255; assert_in_epsilon(75899581.59783238, worksheet.webtool_graphs_s255, 0.002); end
  def test_webtool_graphs_t255; assert_in_epsilon(90802998.19099703, worksheet.webtool_graphs_t255, 0.002); end
  def test_webtool_graphs_c256; assert_equal("Total cars", worksheet.webtool_graphs_c256); end
  def test_webtool_graphs_l256; assert_in_epsilon(848793933.1757805, worksheet.webtool_graphs_l256, 0.002); end
  def test_webtool_graphs_m256; assert_in_epsilon(1007200066.6148193, worksheet.webtool_graphs_m256, 0.002); end
  def test_webtool_graphs_n256; assert_in_epsilon(1137716364.464483, worksheet.webtool_graphs_n256, 0.002); end
  def test_webtool_graphs_o256; assert_in_epsilon(1258167417.5247505, worksheet.webtool_graphs_o256, 0.002); end
  def test_webtool_graphs_p256; assert_in_epsilon(1381158859.457258, worksheet.webtool_graphs_p256, 0.002); end
  def test_webtool_graphs_q256; assert_in_epsilon(1497896292.3868499, worksheet.webtool_graphs_q256, 0.002); end
  def test_webtool_graphs_r256; assert_in_epsilon(1609962812.470911, worksheet.webtool_graphs_r256, 0.002); end
  def test_webtool_graphs_s256; assert_in_epsilon(1713423323.6310523, worksheet.webtool_graphs_s256, 0.002); end
  def test_webtool_graphs_t256; assert_in_epsilon(1816059963.8199406, worksheet.webtool_graphs_t256, 0.002); end
  def test_webtool_graphs_b266; assert_equal("Type of city", worksheet.webtool_graphs_b266); end
  def test_webtool_graphs_c266; assert_equal("Notes", worksheet.webtool_graphs_c266); end
  def test_webtool_graphs_d266; assert_equal("1975", worksheet.webtool_graphs_d266); end
  def test_webtool_graphs_e266; assert_equal("1980", worksheet.webtool_graphs_e266); end
  def test_webtool_graphs_f266; assert_equal("1985", worksheet.webtool_graphs_f266); end
  def test_webtool_graphs_g266; assert_equal("1990", worksheet.webtool_graphs_g266); end
  def test_webtool_graphs_h266; assert_equal("1995", worksheet.webtool_graphs_h266); end
  def test_webtool_graphs_i266; assert_equal("2000", worksheet.webtool_graphs_i266); end
  def test_webtool_graphs_j266; assert_equal("2005", worksheet.webtool_graphs_j266); end
  def test_webtool_graphs_k266; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k266, 0.002); end
  def test_webtool_graphs_l266; assert_equal("2011", worksheet.webtool_graphs_l266); end
  def test_webtool_graphs_m266; assert_equal("2015", worksheet.webtool_graphs_m266); end
  def test_webtool_graphs_n266; assert_equal("2020", worksheet.webtool_graphs_n266); end
  def test_webtool_graphs_o266; assert_equal("2025", worksheet.webtool_graphs_o266); end
  def test_webtool_graphs_p266; assert_equal("2030", worksheet.webtool_graphs_p266); end
  def test_webtool_graphs_q266; assert_equal("2035", worksheet.webtool_graphs_q266); end
  def test_webtool_graphs_r266; assert_equal("2040", worksheet.webtool_graphs_r266); end
  def test_webtool_graphs_s266; assert_equal("2045", worksheet.webtool_graphs_s266); end
  def test_webtool_graphs_t266; assert_equal("2050", worksheet.webtool_graphs_t266); end
  def test_webtool_graphs_b267; assert_equal("Passenger", worksheet.webtool_graphs_b267); end
  def test_webtool_graphs_c267; assert_equal("Light road", worksheet.webtool_graphs_c267); end
  def test_webtool_graphs_j267; assert_equal("", worksheet.webtool_graphs_j267); end
  def test_webtool_graphs_l267; assert_in_epsilon(43.16580477080003, worksheet.webtool_graphs_l267, 0.002); end
  def test_webtool_graphs_m267; assert_in_epsilon(46.814636061588544, worksheet.webtool_graphs_m267, 0.002); end
  def test_webtool_graphs_n267; assert_in_epsilon(51.24450832331844, worksheet.webtool_graphs_n267, 0.002); end
  def test_webtool_graphs_o267; assert_in_epsilon(54.17677702148804, worksheet.webtool_graphs_o267, 0.002); end
  def test_webtool_graphs_p267; assert_in_epsilon(57.27867871097314, worksheet.webtool_graphs_p267, 0.002); end
  def test_webtool_graphs_q267; assert_in_epsilon(60.66654396399341, worksheet.webtool_graphs_q267, 0.002); end
  def test_webtool_graphs_r267; assert_in_epsilon(64.24929728622975, worksheet.webtool_graphs_r267, 0.002); end
  def test_webtool_graphs_s267; assert_in_epsilon(67.89615586011675, worksheet.webtool_graphs_s267, 0.002); end
  def test_webtool_graphs_t267; assert_in_epsilon(72.01382268084511, worksheet.webtool_graphs_t267, 0.002); end
  def test_webtool_graphs_b268; assert_equal("Passenger", worksheet.webtool_graphs_b268); end
  def test_webtool_graphs_c268; assert_equal("Heavy road", worksheet.webtool_graphs_c268); end
  def test_webtool_graphs_l268; assert_in_epsilon(4.7790467678844175, worksheet.webtool_graphs_l268, 0.002); end
  def test_webtool_graphs_m268; assert_in_epsilon(5.218579651032442, worksheet.webtool_graphs_m268, 0.002); end
  def test_webtool_graphs_n268; assert_in_epsilon(5.6702547161631545, worksheet.webtool_graphs_n268, 0.002); end
  def test_webtool_graphs_o268; assert_in_epsilon(5.900937823588933, worksheet.webtool_graphs_o268, 0.002); end
  def test_webtool_graphs_p268; assert_in_epsilon(6.094516051555617, worksheet.webtool_graphs_p268, 0.002); end
  def test_webtool_graphs_q268; assert_in_epsilon(6.270989577045155, worksheet.webtool_graphs_q268, 0.002); end
  def test_webtool_graphs_r268; assert_in_epsilon(6.424906362843626, worksheet.webtool_graphs_r268, 0.002); end
  def test_webtool_graphs_s268; assert_in_epsilon(6.554749353265654, worksheet.webtool_graphs_s268, 0.002); end
  def test_webtool_graphs_t268; assert_in_epsilon(6.697510237864741, worksheet.webtool_graphs_t268, 0.002); end
  def test_webtool_graphs_b269; assert_equal("Passenger", worksheet.webtool_graphs_b269); end
  def test_webtool_graphs_c269; assert_equal("Rail", worksheet.webtool_graphs_c269); end
  def test_webtool_graphs_l269; assert_in_delta(0.7509191366126841, worksheet.webtool_graphs_l269, 0.002); end
  def test_webtool_graphs_m269; assert_in_delta(0.7912608087154815, worksheet.webtool_graphs_m269, 0.002); end
  def test_webtool_graphs_n269; assert_in_delta(0.8358038496453293, worksheet.webtool_graphs_n269, 0.002); end
  def test_webtool_graphs_o269; assert_in_delta(0.8484025551211654, worksheet.webtool_graphs_o269, 0.002); end
  def test_webtool_graphs_p269; assert_in_delta(0.865002800433982, worksheet.webtool_graphs_p269, 0.002); end
  def test_webtool_graphs_q269; assert_in_delta(0.8797872650688979, worksheet.webtool_graphs_q269, 0.002); end
  def test_webtool_graphs_r269; assert_in_delta(0.8979078249827442, worksheet.webtool_graphs_r269, 0.002); end
  def test_webtool_graphs_s269; assert_in_delta(0.9163579337534122, worksheet.webtool_graphs_s269, 0.002); end
  def test_webtool_graphs_t269; assert_in_delta(0.9426375715936482, worksheet.webtool_graphs_t269, 0.002); end
  def test_webtool_graphs_b270; assert_equal("Passenger", worksheet.webtool_graphs_b270); end
  def test_webtool_graphs_c270; assert_equal("Plane", worksheet.webtool_graphs_c270); end
  def test_webtool_graphs_l270; assert_in_epsilon(11.200783672219371, worksheet.webtool_graphs_l270, 0.002); end
  def test_webtool_graphs_m270; assert_in_epsilon(11.800577234949882, worksheet.webtool_graphs_m270, 0.002); end
  def test_webtool_graphs_n270; assert_in_epsilon(12.291544597310669, worksheet.webtool_graphs_n270, 0.002); end
  def test_webtool_graphs_o270; assert_in_epsilon(12.565568165661261, worksheet.webtool_graphs_o270, 0.002); end
  def test_webtool_graphs_p270; assert_in_epsilon(13.036264956042015, worksheet.webtool_graphs_p270, 0.002); end
  def test_webtool_graphs_q270; assert_in_epsilon(13.752257703603455, worksheet.webtool_graphs_q270, 0.002); end
  def test_webtool_graphs_r270; assert_in_epsilon(14.670283978145154, worksheet.webtool_graphs_r270, 0.002); end
  def test_webtool_graphs_s270; assert_in_epsilon(15.812399843259053, worksheet.webtool_graphs_s270, 0.002); end
  def test_webtool_graphs_t270; assert_in_epsilon(17.223441487623536, worksheet.webtool_graphs_t270, 0.002); end
  def test_webtool_graphs_b271; assert_equal("Passenger", worksheet.webtool_graphs_b271); end
  def test_webtool_graphs_c271; assert_equal("Ship", worksheet.webtool_graphs_c271); end
  def test_webtool_graphs_l271; assert_in_delta(0.0, (worksheet.webtool_graphs_l271||0), 0.002); end
  def test_webtool_graphs_m271; assert_in_delta(0.0, (worksheet.webtool_graphs_m271||0), 0.002); end
  def test_webtool_graphs_n271; assert_in_delta(0.0, (worksheet.webtool_graphs_n271||0), 0.002); end
  def test_webtool_graphs_o271; assert_in_delta(0.0, (worksheet.webtool_graphs_o271||0), 0.002); end
  def test_webtool_graphs_p271; assert_in_delta(0.0, (worksheet.webtool_graphs_p271||0), 0.002); end
  def test_webtool_graphs_q271; assert_in_delta(0.0, (worksheet.webtool_graphs_q271||0), 0.002); end
  def test_webtool_graphs_r271; assert_in_delta(0.0, (worksheet.webtool_graphs_r271||0), 0.002); end
  def test_webtool_graphs_s271; assert_in_delta(0.0, (worksheet.webtool_graphs_s271||0), 0.002); end
  def test_webtool_graphs_t271; assert_in_delta(0.0, (worksheet.webtool_graphs_t271||0), 0.002); end
  def test_webtool_graphs_b272; assert_equal("Freight", worksheet.webtool_graphs_b272); end
  def test_webtool_graphs_c272; assert_equal("Light road", worksheet.webtool_graphs_c272); end
  def test_webtool_graphs_l272; assert_in_epsilon(8.268555700992671, worksheet.webtool_graphs_l272, 0.002); end
  def test_webtool_graphs_m272; assert_in_epsilon(9.117290978980812, worksheet.webtool_graphs_m272, 0.002); end
  def test_webtool_graphs_n272; assert_in_epsilon(10.537784090500246, worksheet.webtool_graphs_n272, 0.002); end
  def test_webtool_graphs_o272; assert_in_epsilon(11.870140336993217, worksheet.webtool_graphs_o272, 0.002); end
  def test_webtool_graphs_p272; assert_in_epsilon(12.77684001041387, worksheet.webtool_graphs_p272, 0.002); end
  def test_webtool_graphs_q272; assert_in_epsilon(13.335778317209696, worksheet.webtool_graphs_q272, 0.002); end
  def test_webtool_graphs_r272; assert_in_epsilon(13.562922390891668, worksheet.webtool_graphs_r272, 0.002); end
  def test_webtool_graphs_s272; assert_in_epsilon(13.60155096823834, worksheet.webtool_graphs_s272, 0.002); end
  def test_webtool_graphs_t272; assert_in_epsilon(13.46368451642379, worksheet.webtool_graphs_t272, 0.002); end
  def test_webtool_graphs_b273; assert_equal("Freight", worksheet.webtool_graphs_b273); end
  def test_webtool_graphs_c273; assert_equal("Heavy road", worksheet.webtool_graphs_c273); end
  def test_webtool_graphs_l273; assert_in_epsilon(20.117802797248675, worksheet.webtool_graphs_l273, 0.002); end
  def test_webtool_graphs_m273; assert_in_epsilon(22.14812876673222, worksheet.webtool_graphs_m273, 0.002); end
  def test_webtool_graphs_n273; assert_in_epsilon(25.324957874861234, worksheet.webtool_graphs_n273, 0.002); end
  def test_webtool_graphs_o273; assert_in_epsilon(28.396830847823576, worksheet.webtool_graphs_o273, 0.002); end
  def test_webtool_graphs_p273; assert_in_epsilon(30.61750198438639, worksheet.webtool_graphs_p273, 0.002); end
  def test_webtool_graphs_q273; assert_in_epsilon(31.6255349212691, worksheet.webtool_graphs_q273, 0.002); end
  def test_webtool_graphs_r273; assert_in_epsilon(31.848757785955215, worksheet.webtool_graphs_r273, 0.002); end
  def test_webtool_graphs_s273; assert_in_epsilon(31.713179585185856, worksheet.webtool_graphs_s273, 0.002); end
  def test_webtool_graphs_t273; assert_in_epsilon(31.114932307038686, worksheet.webtool_graphs_t273, 0.002); end
  def test_webtool_graphs_b274; assert_equal("Freight", worksheet.webtool_graphs_b274); end
  def test_webtool_graphs_c274; assert_equal("Rail", worksheet.webtool_graphs_c274); end
  def test_webtool_graphs_l274; assert_in_epsilon(1.8915190729369558, worksheet.webtool_graphs_l274, 0.002); end
  def test_webtool_graphs_m274; assert_in_epsilon(2.00637792358068, worksheet.webtool_graphs_m274, 0.002); end
  def test_webtool_graphs_n274; assert_in_epsilon(2.235932126193877, worksheet.webtool_graphs_n274, 0.002); end
  def test_webtool_graphs_o274; assert_in_epsilon(2.4350075551457535, worksheet.webtool_graphs_o274, 0.002); end
  def test_webtool_graphs_p274; assert_in_epsilon(2.5408379627962283, worksheet.webtool_graphs_p274, 0.002); end
  def test_webtool_graphs_q274; assert_in_epsilon(2.5643965179627433, worksheet.webtool_graphs_q274, 0.002); end
  def test_webtool_graphs_r274; assert_in_epsilon(2.5241965860226503, worksheet.webtool_graphs_r274, 0.002); end
  def test_webtool_graphs_s274; assert_in_epsilon(2.453543588668228, worksheet.webtool_graphs_s274, 0.002); end
  def test_webtool_graphs_t274; assert_in_epsilon(2.3544402320856888, worksheet.webtool_graphs_t274, 0.002); end
  def test_webtool_graphs_b275; assert_equal("Freight", worksheet.webtool_graphs_b275); end
  def test_webtool_graphs_c275; assert_equal("Plane", worksheet.webtool_graphs_c275); end
  def test_webtool_graphs_l275; assert_in_delta(0.6868555598518657, worksheet.webtool_graphs_l275, 0.002); end
  def test_webtool_graphs_m275; assert_in_delta(0.7772556138468222, worksheet.webtool_graphs_m275, 0.002); end
  def test_webtool_graphs_n275; assert_in_delta(0.8933161675974783, worksheet.webtool_graphs_n275, 0.002); end
  def test_webtool_graphs_o275; assert_in_epsilon(1.0213525910903052, worksheet.webtool_graphs_o275, 0.002); end
  def test_webtool_graphs_p275; assert_in_epsilon(1.1392795312539732, worksheet.webtool_graphs_p275, 0.002); end
  def test_webtool_graphs_q275; assert_in_epsilon(1.1801859109266848, worksheet.webtool_graphs_q275, 0.002); end
  def test_webtool_graphs_r275; assert_in_epsilon(1.1922212263416998, worksheet.webtool_graphs_r275, 0.002); end
  def test_webtool_graphs_s275; assert_in_epsilon(1.1980119620123828, worksheet.webtool_graphs_s275, 0.002); end
  def test_webtool_graphs_t275; assert_in_epsilon(1.1796903870142794, worksheet.webtool_graphs_t275, 0.002); end
  def test_webtool_graphs_b276; assert_equal("Freight", worksheet.webtool_graphs_b276); end
  def test_webtool_graphs_c276; assert_equal("Ship", worksheet.webtool_graphs_c276); end
  def test_webtool_graphs_l276; assert_in_epsilon(9.498632856887696, worksheet.webtool_graphs_l276, 0.002); end
  def test_webtool_graphs_m276; assert_in_epsilon(10.496700756454167, worksheet.webtool_graphs_m276, 0.002); end
  def test_webtool_graphs_n276; assert_in_epsilon(11.935197203117486, worksheet.webtool_graphs_n276, 0.002); end
  def test_webtool_graphs_o276; assert_in_epsilon(13.49627588956715, worksheet.webtool_graphs_o276, 0.002); end
  def test_webtool_graphs_p276; assert_in_epsilon(14.887326831438754, worksheet.webtool_graphs_p276, 0.002); end
  def test_webtool_graphs_q276; assert_in_epsilon(15.278518745166082, worksheet.webtool_graphs_q276, 0.002); end
  def test_webtool_graphs_r276; assert_in_epsilon(15.296010786158826, worksheet.webtool_graphs_r276, 0.002); end
  def test_webtool_graphs_s276; assert_in_epsilon(15.234369964722188, worksheet.webtool_graphs_s276, 0.002); end
  def test_webtool_graphs_t276; assert_in_epsilon(14.876631090864748, worksheet.webtool_graphs_t276, 0.002); end
  def test_webtool_graphs_c277; assert_equal("TOTAL", worksheet.webtool_graphs_c277); end
  def test_webtool_graphs_l277; assert_in_epsilon(100.35992033543437, worksheet.webtool_graphs_l277, 0.002); end
  def test_webtool_graphs_m277; assert_in_epsilon(109.17080779588105, worksheet.webtool_graphs_m277, 0.002); end
  def test_webtool_graphs_n277; assert_in_epsilon(120.96929894870792, worksheet.webtool_graphs_n277, 0.002); end
  def test_webtool_graphs_o277; assert_in_epsilon(130.71129278647942, worksheet.webtool_graphs_o277, 0.002); end
  def test_webtool_graphs_p277; assert_in_epsilon(139.23624883929398, worksheet.webtool_graphs_p277, 0.002); end
  def test_webtool_graphs_q277; assert_in_epsilon(145.55399292224521, worksheet.webtool_graphs_q277, 0.002); end
  def test_webtool_graphs_r277; assert_in_epsilon(150.66650422757132, worksheet.webtool_graphs_r277, 0.002); end
  def test_webtool_graphs_s277; assert_in_epsilon(155.38031905922185, worksheet.webtool_graphs_s277, 0.002); end
  def test_webtool_graphs_t277; assert_in_epsilon(159.86679051135422, worksheet.webtool_graphs_t277, 0.002); end
  def test_webtool_graphs_b286; assert_equal("Energy description", worksheet.webtool_graphs_b286); end
  def test_webtool_graphs_c286; assert_equal(".", worksheet.webtool_graphs_c286); end
  def test_webtool_graphs_d286; assert_equal("1975", worksheet.webtool_graphs_d286); end
  def test_webtool_graphs_e286; assert_equal("1980", worksheet.webtool_graphs_e286); end
  def test_webtool_graphs_f286; assert_equal("1985", worksheet.webtool_graphs_f286); end
  def test_webtool_graphs_g286; assert_equal("1990", worksheet.webtool_graphs_g286); end
  def test_webtool_graphs_h286; assert_equal("1995", worksheet.webtool_graphs_h286); end
  def test_webtool_graphs_i286; assert_equal("2000", worksheet.webtool_graphs_i286); end
  def test_webtool_graphs_j286; assert_equal("2005", worksheet.webtool_graphs_j286); end
  def test_webtool_graphs_k286; assert_in_epsilon(2010.0, worksheet.webtool_graphs_k286, 0.002); end
  def test_webtool_graphs_l286; assert_equal("2011", worksheet.webtool_graphs_l286); end
  def test_webtool_graphs_m286; assert_equal("2015", worksheet.webtool_graphs_m286); end
  def test_webtool_graphs_n286; assert_equal("2020", worksheet.webtool_graphs_n286); end
  def test_webtool_graphs_o286; assert_equal("2025", worksheet.webtool_graphs_o286); end
  def test_webtool_graphs_p286; assert_equal("2030", worksheet.webtool_graphs_p286); end
  def test_webtool_graphs_q286; assert_equal("2035", worksheet.webtool_graphs_q286); end
  def test_webtool_graphs_r286; assert_equal("2040", worksheet.webtool_graphs_r286); end
  def test_webtool_graphs_s286; assert_equal("2045", worksheet.webtool_graphs_s286); end
  def test_webtool_graphs_t286; assert_equal("2050", worksheet.webtool_graphs_t286); end
  def test_webtool_graphs_b287; assert_equal("Global Liquid hydrocarbons", worksheet.webtool_graphs_b287); end
  def test_webtool_graphs_j287; assert_equal("", worksheet.webtool_graphs_j287); end
  def test_webtool_graphs_l287; assert_in_epsilon(98.39054841752518, worksheet.webtool_graphs_l287, 0.002); end
  def test_webtool_graphs_m287; assert_in_epsilon(105.86292976774138, worksheet.webtool_graphs_m287, 0.002); end
  def test_webtool_graphs_n287; assert_in_epsilon(116.68673933519176, worksheet.webtool_graphs_n287, 0.002); end
  def test_webtool_graphs_o287; assert_in_epsilon(125.39334769411627, worksheet.webtool_graphs_o287, 0.002); end
  def test_webtool_graphs_p287; assert_in_epsilon(132.8660841659394, worksheet.webtool_graphs_p287, 0.002); end
  def test_webtool_graphs_q287; assert_in_epsilon(138.1573213541533, worksheet.webtool_graphs_q287, 0.002); end
  def test_webtool_graphs_r287; assert_in_epsilon(142.2555316230428, worksheet.webtool_graphs_r287, 0.002); end
  def test_webtool_graphs_s287; assert_in_epsilon(145.95585283561493, worksheet.webtool_graphs_s287, 0.002); end
  def test_webtool_graphs_t287; assert_in_epsilon(149.4220560373985, worksheet.webtool_graphs_t287, 0.002); end
  def test_webtool_graphs_b288; assert_equal("Global Electricity (delivered to end user)", worksheet.webtool_graphs_b288); end
  def test_webtool_graphs_l288; assert_in_epsilon(1.6221723137825577, worksheet.webtool_graphs_l288, 0.002); end
  def test_webtool_graphs_m288; assert_in_epsilon(2.3745922490601874, worksheet.webtool_graphs_m288, 0.002); end
  def test_webtool_graphs_n288; assert_in_epsilon(2.9776003938529816, worksheet.webtool_graphs_n288, 0.002); end
  def test_webtool_graphs_o288; assert_in_epsilon(3.604820723994971, worksheet.webtool_graphs_o288, 0.002); end
  def test_webtool_graphs_p288; assert_in_epsilon(4.234278644133775, worksheet.webtool_graphs_p288, 0.002); end
  def test_webtool_graphs_q288; assert_in_epsilon(4.8456242002036145, worksheet.webtool_graphs_q288, 0.002); end
  def test_webtool_graphs_r288; assert_in_epsilon(5.459434039919715, worksheet.webtool_graphs_r288, 0.002); end
  def test_webtool_graphs_s288; assert_in_epsilon(6.080402700901868, worksheet.webtool_graphs_s288, 0.002); end
  def test_webtool_graphs_t288; assert_in_epsilon(6.720790431930237, worksheet.webtool_graphs_t288, 0.002); end
  def test_webtool_graphs_b289; assert_equal("Global Gaseous hydrocarbons", worksheet.webtool_graphs_b289); end
  def test_webtool_graphs_l289; assert_in_delta(0.34719953575088347, worksheet.webtool_graphs_l289, 0.002); end
  def test_webtool_graphs_m289; assert_in_delta(0.7896803613558725, worksheet.webtool_graphs_m289, 0.002); end
  def test_webtool_graphs_n289; assert_in_epsilon(1.1619706661451512, worksheet.webtool_graphs_n289, 0.002); end
  def test_webtool_graphs_o289; assert_in_epsilon(1.577623296398619, worksheet.webtool_graphs_o289, 0.002); end
  def test_webtool_graphs_p289; assert_in_epsilon(2.0198544253434547, worksheet.webtool_graphs_p289, 0.002); end
  def test_webtool_graphs_q289; assert_in_epsilon(2.4607055561905673, worksheet.webtool_graphs_q289, 0.002); end
  def test_webtool_graphs_r289; assert_in_epsilon(2.889856549937341, worksheet.webtool_graphs_r289, 0.002); end
  def test_webtool_graphs_s289; assert_in_epsilon(3.312652705570765, worksheet.webtool_graphs_s289, 0.002); end
  def test_webtool_graphs_t289; assert_in_epsilon(3.7239440420254746, worksheet.webtool_graphs_t289, 0.002); end
  def test_webtool_graphs_b290; assert_equal("Global H2", worksheet.webtool_graphs_b290); end
  def test_webtool_graphs_l290; assert_in_delta(6.837572495941478e-08, worksheet.webtool_graphs_l290, 0.002); end
  def test_webtool_graphs_m290; assert_in_delta(0.14360541772363922, worksheet.webtool_graphs_m290, 0.002); end
  def test_webtool_graphs_n290; assert_in_delta(0.14298855351802184, worksheet.webtool_graphs_n290, 0.002); end
  def test_webtool_graphs_o290; assert_in_delta(0.13550107196952046, worksheet.webtool_graphs_o290, 0.002); end
  def test_webtool_graphs_p290; assert_in_delta(0.11603160387732207, worksheet.webtool_graphs_p290, 0.002); end
  def test_webtool_graphs_q290; assert_in_delta(0.09034181169773167, worksheet.webtool_graphs_q290, 0.002); end
  def test_webtool_graphs_r290; assert_in_delta(0.06168201467145384, worksheet.webtool_graphs_r290, 0.002); end
  def test_webtool_graphs_s290; assert_in_delta(0.0314108171342785, worksheet.webtool_graphs_s290, 0.002); end
  def test_webtool_graphs_t290; assert_in_delta(0.0, (worksheet.webtool_graphs_t290||0), 0.002); end
  def test_webtool_graphs_b291; assert_equal("TOTAL", worksheet.webtool_graphs_b291); end
  def test_webtool_graphs_l291; assert_in_epsilon(100.35992033543435, worksheet.webtool_graphs_l291, 0.002); end
  def test_webtool_graphs_m291; assert_in_epsilon(109.17080779588107, worksheet.webtool_graphs_m291, 0.002); end
  def test_webtool_graphs_n291; assert_in_epsilon(120.96929894870792, worksheet.webtool_graphs_n291, 0.002); end
  def test_webtool_graphs_o291; assert_in_epsilon(130.7112927864794, worksheet.webtool_graphs_o291, 0.002); end
  def test_webtool_graphs_p291; assert_in_epsilon(139.23624883929398, worksheet.webtool_graphs_p291, 0.002); end
  def test_webtool_graphs_q291; assert_in_epsilon(145.55399292224521, worksheet.webtool_graphs_q291, 0.002); end
  def test_webtool_graphs_r291; assert_in_epsilon(150.66650422757132, worksheet.webtool_graphs_r291, 0.002); end
  def test_webtool_graphs_s291; assert_in_epsilon(155.38031905922185, worksheet.webtool_graphs_s291, 0.002); end
  def test_webtool_graphs_t291; assert_in_epsilon(159.8667905113542, worksheet.webtool_graphs_t291, 0.002); end
  def test_webtool_graphs_b602; assert_equal("Description", worksheet.webtool_graphs_b602); end
  def test_webtool_graphs_c602; assert_equal("1975", worksheet.webtool_graphs_c602); end
  def test_webtool_graphs_d602; assert_equal("1980", worksheet.webtool_graphs_d602); end
  def test_webtool_graphs_e602; assert_equal("1985", worksheet.webtool_graphs_e602); end
  def test_webtool_graphs_f602; assert_equal("1990", worksheet.webtool_graphs_f602); end
  def test_webtool_graphs_g602; assert_equal("1995", worksheet.webtool_graphs_g602); end
  def test_webtool_graphs_h602; assert_equal("2000", worksheet.webtool_graphs_h602); end
  def test_webtool_graphs_i602; assert_equal("2005", worksheet.webtool_graphs_i602); end
  def test_webtool_graphs_j602; assert_equal("2010", worksheet.webtool_graphs_j602); end
  def test_webtool_graphs_k602; assert_equal("2011", worksheet.webtool_graphs_k602); end
  def test_webtool_graphs_l602; assert_equal("2015", worksheet.webtool_graphs_l602); end
  def test_webtool_graphs_m602; assert_equal("2020", worksheet.webtool_graphs_m602); end
  def test_webtool_graphs_n602; assert_equal("2025", worksheet.webtool_graphs_n602); end
  def test_webtool_graphs_o602; assert_equal("2030", worksheet.webtool_graphs_o602); end
  def test_webtool_graphs_p602; assert_equal("2035", worksheet.webtool_graphs_p602); end
  def test_webtool_graphs_q602; assert_equal("2040", worksheet.webtool_graphs_q602); end
  def test_webtool_graphs_r602; assert_equal("2045", worksheet.webtool_graphs_r602); end
  def test_webtool_graphs_s602; assert_equal("2050", worksheet.webtool_graphs_s602); end
  def test_webtool_graphs_b603; assert_equal("Historic data", worksheet.webtool_graphs_b603); end
  def test_webtool_graphs_b604; assert_equal("Cows and other bovines ", worksheet.webtool_graphs_b604); end
  def test_webtool_graphs_k604; assert_in_delta(0.6347500417422869, worksheet.webtool_graphs_k604, 0.002); end
  def test_webtool_graphs_l604; assert_in_delta(0.6605208934370237, worksheet.webtool_graphs_l604, 0.002); end
  def test_webtool_graphs_m604; assert_in_delta(0.6987017561519465, worksheet.webtool_graphs_m604, 0.002); end
  def test_webtool_graphs_n604; assert_in_delta(0.7384889250949518, worksheet.webtool_graphs_n604, 0.002); end
  def test_webtool_graphs_o604; assert_in_delta(0.7798824002660397, worksheet.webtool_graphs_o604, 0.002); end
  def test_webtool_graphs_p604; assert_in_delta(0.82288218166521, worksheet.webtool_graphs_p604, 0.002); end
  def test_webtool_graphs_q604; assert_in_delta(0.8674882692924629, worksheet.webtool_graphs_q604, 0.002); end
  def test_webtool_graphs_r604; assert_in_delta(0.9137006631477982, worksheet.webtool_graphs_r604, 0.002); end
  def test_webtool_graphs_s604; assert_in_delta(0.9615193632312162, worksheet.webtool_graphs_s604, 0.002); end
  def test_webtool_graphs_b610; assert_equal("Description", worksheet.webtool_graphs_b610); end
  def test_webtool_graphs_c610; assert_equal("1975", worksheet.webtool_graphs_c610); end
  def test_webtool_graphs_d610; assert_equal("1980", worksheet.webtool_graphs_d610); end
  def test_webtool_graphs_e610; assert_equal("1985", worksheet.webtool_graphs_e610); end
  def test_webtool_graphs_f610; assert_equal("1990", worksheet.webtool_graphs_f610); end
  def test_webtool_graphs_g610; assert_equal("1995", worksheet.webtool_graphs_g610); end
  def test_webtool_graphs_h610; assert_equal("2000", worksheet.webtool_graphs_h610); end
  def test_webtool_graphs_i610; assert_equal("2005", worksheet.webtool_graphs_i610); end
  def test_webtool_graphs_j610; assert_equal("2010", worksheet.webtool_graphs_j610); end
  def test_webtool_graphs_k610; assert_equal("2011", worksheet.webtool_graphs_k610); end
  def test_webtool_graphs_l610; assert_equal("2015", worksheet.webtool_graphs_l610); end
  def test_webtool_graphs_m610; assert_equal("2020", worksheet.webtool_graphs_m610); end
  def test_webtool_graphs_n610; assert_equal("2025", worksheet.webtool_graphs_n610); end
  def test_webtool_graphs_o610; assert_equal("2030", worksheet.webtool_graphs_o610); end
  def test_webtool_graphs_p610; assert_equal("2035", worksheet.webtool_graphs_p610); end
  def test_webtool_graphs_q610; assert_equal("2040", worksheet.webtool_graphs_q610); end
  def test_webtool_graphs_r610; assert_equal("2045", worksheet.webtool_graphs_r610); end
  def test_webtool_graphs_s610; assert_equal("2050", worksheet.webtool_graphs_s610); end
  def test_webtool_graphs_b611; assert_equal("Historic data", worksheet.webtool_graphs_b611); end
  def test_webtool_graphs_b612; assert_equal("Developed Countries", worksheet.webtool_graphs_b612); end
  def test_webtool_graphs_k612; assert_in_delta(0.124, worksheet.webtool_graphs_k612, 0.002); end
  def test_webtool_graphs_b613; assert_equal("Developing Countries", worksheet.webtool_graphs_b613); end
  def test_webtool_graphs_k613; assert_in_delta(0.006, worksheet.webtool_graphs_k613, 0.002); end
  def test_webtool_graphs_b614; assert_equal("Cows and other bovines ", worksheet.webtool_graphs_b614); end
  def test_webtool_graphs_k614; assert_in_delta(0.06, worksheet.webtool_graphs_k614, 0.002); end
  def test_webtool_graphs_l614; assert_in_delta(0.06, worksheet.webtool_graphs_l614, 0.002); end
  def test_webtool_graphs_m614; assert_in_delta(0.06, worksheet.webtool_graphs_m614, 0.002); end
  def test_webtool_graphs_n614; assert_in_delta(0.06, worksheet.webtool_graphs_n614, 0.002); end
  def test_webtool_graphs_o614; assert_in_delta(0.06, worksheet.webtool_graphs_o614, 0.002); end
  def test_webtool_graphs_p614; assert_in_delta(0.06, worksheet.webtool_graphs_p614, 0.002); end
  def test_webtool_graphs_q614; assert_in_delta(0.06, worksheet.webtool_graphs_q614, 0.002); end
  def test_webtool_graphs_r614; assert_in_delta(0.06, worksheet.webtool_graphs_r614, 0.002); end
  def test_webtool_graphs_s614; assert_in_delta(0.06, worksheet.webtool_graphs_s614, 0.002); end
  def test_webtool_graphs_b626; assert_equal("Description", worksheet.webtool_graphs_b626); end
  def test_webtool_graphs_c626; assert_equal("1975", worksheet.webtool_graphs_c626); end
  def test_webtool_graphs_d626; assert_equal("1980", worksheet.webtool_graphs_d626); end
  def test_webtool_graphs_e626; assert_equal("1985", worksheet.webtool_graphs_e626); end
  def test_webtool_graphs_f626; assert_equal("1990", worksheet.webtool_graphs_f626); end
  def test_webtool_graphs_g626; assert_equal("1995", worksheet.webtool_graphs_g626); end
  def test_webtool_graphs_h626; assert_equal("2000", worksheet.webtool_graphs_h626); end
  def test_webtool_graphs_i626; assert_equal("2005", worksheet.webtool_graphs_i626); end
  def test_webtool_graphs_j626; assert_equal("2010", worksheet.webtool_graphs_j626); end
  def test_webtool_graphs_k626; assert_equal("2011", worksheet.webtool_graphs_k626); end
  def test_webtool_graphs_l626; assert_equal("2015", worksheet.webtool_graphs_l626); end
  def test_webtool_graphs_m626; assert_equal("2020", worksheet.webtool_graphs_m626); end
  def test_webtool_graphs_n626; assert_equal("2025", worksheet.webtool_graphs_n626); end
  def test_webtool_graphs_o626; assert_equal("2030", worksheet.webtool_graphs_o626); end
  def test_webtool_graphs_p626; assert_equal("2035", worksheet.webtool_graphs_p626); end
  def test_webtool_graphs_q626; assert_equal("2040", worksheet.webtool_graphs_q626); end
  def test_webtool_graphs_r626; assert_equal("2045", worksheet.webtool_graphs_r626); end
  def test_webtool_graphs_s626; assert_equal("2050", worksheet.webtool_graphs_s626); end
  def test_webtool_graphs_b627; assert_equal("Historic data", worksheet.webtool_graphs_b627); end
  def test_webtool_graphs_b628; assert_equal("Crop yields", worksheet.webtool_graphs_b628); end
  def test_webtool_graphs_k628; assert_in_delta(0.10041822124385165, worksheet.webtool_graphs_k628, 0.002); end
  def test_webtool_graphs_l628; assert_in_delta(0.10532575337972867, worksheet.webtool_graphs_l628, 0.002); end
  def test_webtool_graphs_m628; assert_in_delta(0.10849795160829481, worksheet.webtool_graphs_m628, 0.002); end
  def test_webtool_graphs_n628; assert_in_delta(0.11167014983686095, worksheet.webtool_graphs_n628, 0.002); end
  def test_webtool_graphs_o628; assert_in_delta(0.11484234806542706, worksheet.webtool_graphs_o628, 0.002); end
  def test_webtool_graphs_p628; assert_in_delta(0.1180145462939932, worksheet.webtool_graphs_p628, 0.002); end
  def test_webtool_graphs_q628; assert_in_delta(0.12118674452255931, worksheet.webtool_graphs_q628, 0.002); end
  def test_webtool_graphs_r628; assert_in_delta(0.12435894275112545, worksheet.webtool_graphs_r628, 0.002); end
  def test_webtool_graphs_s628; assert_in_delta(0.1275311409796916, worksheet.webtool_graphs_s628, 0.002); end
  def test_outputs_summary_table_d194; assert_equal("Unit", worksheet.outputs_summary_table_d194); end
  def test_outputs_summary_table_e194; assert_equal("2011", worksheet.outputs_summary_table_e194); end
  def test_outputs_summary_table_f194; assert_equal("2050", worksheet.outputs_summary_table_f194); end
  def test_outputs_summary_table_g194; assert_equal("% increase", worksheet.outputs_summary_table_g194); end
  def test_outputs_summary_table_c196; assert_equal("ICE gas&liquid fueled cars", worksheet.outputs_summary_table_c196); end
  def test_outputs_summary_table_d196; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d196); end
  def test_outputs_summary_table_e196; assert_equal("846,950,046", worksheet.outputs_summary_table_e196); end
  def test_outputs_summary_table_f196; assert_equal("1,688,935,766", worksheet.outputs_summary_table_f196); end
  def test_outputs_summary_table_g196; assert_equal("99%", worksheet.outputs_summary_table_g196); end
  def test_outputs_summary_table_c197; assert_equal("Hybrids", worksheet.outputs_summary_table_c197); end
  def test_outputs_summary_table_d197; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d197); end
  def test_outputs_summary_table_e197; assert_equal("24", worksheet.outputs_summary_table_e197); end
  def test_outputs_summary_table_f197; assert_equal("90,802,998", worksheet.outputs_summary_table_f197); end
  def test_outputs_summary_table_g197; assert_equal("377469373%", worksheet.outputs_summary_table_g197); end
  def test_outputs_summary_table_c198; assert_equal("Electric vehicles", worksheet.outputs_summary_table_c198); end
  def test_outputs_summary_table_d198; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d198); end
  def test_outputs_summary_table_e198; assert_equal("1,843,863", worksheet.outputs_summary_table_e198); end
  def test_outputs_summary_table_f198; assert_equal("36,321,199", worksheet.outputs_summary_table_f198); end
  def test_outputs_summary_table_g198; assert_equal("1870%", worksheet.outputs_summary_table_g198); end
  def test_outputs_summary_table_c199; assert_equal("Hydrogen", worksheet.outputs_summary_table_c199); end
  def test_outputs_summary_table_d199; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d199); end
  def test_outputs_summary_table_e199; assert_equal("0", worksheet.outputs_summary_table_e199); end
  def test_outputs_summary_table_f199; assert_equal("0", worksheet.outputs_summary_table_f199); end
  def test_outputs_summary_table_g199; assert_equal("", worksheet.outputs_summary_table_g199); end
  def test_outputs_summary_table_c5; assert_equal("Supertable", worksheet.outputs_summary_table_c5); end
  def test_outputs_summary_table_d5; assert_equal("webtool.supertable", worksheet.outputs_summary_table_d5); end
  def test_outputs_summary_table_e5; assert_equal("Formatted numbers", worksheet.outputs_summary_table_e5); end
  def test_outputs_summary_table_f6; assert_equal("User’s pathway", worksheet.outputs_summary_table_f6); end
  def test_outputs_summary_table_g6; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g6); end
  def test_outputs_summary_table_c7; assert_equal("Name", worksheet.outputs_summary_table_c7); end
  def test_outputs_summary_table_d7; assert_equal("Unit", worksheet.outputs_summary_table_d7); end
  def test_outputs_summary_table_e7; assert_equal("2011", worksheet.outputs_summary_table_e7); end
  def test_outputs_summary_table_f7; assert_equal("2050", worksheet.outputs_summary_table_f7); end
  def test_outputs_summary_table_g7; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g7); end
  def test_outputs_summary_table_b8; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b8); end
  def test_outputs_summary_table_c8; assert_equal("GHG emissions (t CO2e) per capita", worksheet.outputs_summary_table_c8); end
  def test_outputs_summary_table_d8; assert_equal("t CO2e / capita", worksheet.outputs_summary_table_d8); end
  def test_outputs_summary_table_e8; assert_equal("6.4", worksheet.outputs_summary_table_e8); end
  def test_outputs_summary_table_f8; assert_equal("8.5", worksheet.outputs_summary_table_f8); end
  def test_outputs_summary_table_g8; assert_equal("33%", worksheet.outputs_summary_table_g8); end
  def test_outputs_summary_table_c9; assert_equal("Cumulative emissions by 2100 (Gt CO2e)", worksheet.outputs_summary_table_c9); end
  def test_outputs_summary_table_d9; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d9); end
  def test_outputs_summary_table_e9; assert_equal("7,397", worksheet.outputs_summary_table_e9); end
  def test_outputs_summary_table_c10; assert_equal("Temperature change in 2100 (⁰C)", worksheet.outputs_summary_table_c10); end
  def test_outputs_summary_table_d10; assert_equal("⁰C", worksheet.outputs_summary_table_d10); end
  def test_outputs_summary_table_e10; assert_equal("2.1⁰C to 6.3⁰C higher", worksheet.outputs_summary_table_e10); end
  def test_outputs_summary_table_b12; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b12); end
  def test_outputs_summary_table_c12; assert_equal("Population (billions of people)", worksheet.outputs_summary_table_c12); end
  def test_outputs_summary_table_d12; assert_equal("billions of people", worksheet.outputs_summary_table_d12); end
  def test_outputs_summary_table_e12; assert_equal("7.0", worksheet.outputs_summary_table_e12); end
  def test_outputs_summary_table_f12; assert_equal("9.6", worksheet.outputs_summary_table_f12); end
  def test_outputs_summary_table_g12; assert_equal("37%", worksheet.outputs_summary_table_g12); end
  def test_outputs_summary_table_c13; assert_equal("% population in urban areas", worksheet.outputs_summary_table_c13); end
  def test_outputs_summary_table_d13; assert_equal("%", worksheet.outputs_summary_table_d13); end
  def test_outputs_summary_table_e13; assert_equal("52.1%", worksheet.outputs_summary_table_e13); end
  def test_outputs_summary_table_f13; assert_equal("66.4%", worksheet.outputs_summary_table_f13); end
  def test_outputs_summary_table_g13; assert_equal("27%", worksheet.outputs_summary_table_g13); end
  def test_outputs_summary_table_b15; assert_equal("Energy", worksheet.outputs_summary_table_b15); end
  def test_outputs_summary_table_c15; assert_equal("Total energy supply (EJ / year)", worksheet.outputs_summary_table_c15); end
  def test_outputs_summary_table_d15; assert_equal("EJ / year", worksheet.outputs_summary_table_d15); end
  def test_outputs_summary_table_e15; assert_equal("582", worksheet.outputs_summary_table_e15); end
  def test_outputs_summary_table_f15; assert_equal("935", worksheet.outputs_summary_table_f15); end
  def test_outputs_summary_table_g15; assert_equal("61%", worksheet.outputs_summary_table_g15); end
  def test_outputs_summary_table_c16; assert_equal("Total energy supply (EJ / year)", worksheet.outputs_summary_table_c16); end
  def test_outputs_summary_table_d16; assert_equal("EJ / year", worksheet.outputs_summary_table_d16); end
  def test_outputs_summary_table_e16; assert_equal("372", worksheet.outputs_summary_table_e16); end
  def test_outputs_summary_table_f16; assert_equal("581", worksheet.outputs_summary_table_f16); end
  def test_outputs_summary_table_g16; assert_equal("56%", worksheet.outputs_summary_table_g16); end
  def test_outputs_summary_table_c17; assert_equal("Energy demand (kWh / capita)", worksheet.outputs_summary_table_c17); end
  def test_outputs_summary_table_d17; assert_equal("kWh / capita", worksheet.outputs_summary_table_d17); end
  def test_outputs_summary_table_e17; assert_equal("14,849", worksheet.outputs_summary_table_e17); end
  def test_outputs_summary_table_f17; assert_equal("16,893", worksheet.outputs_summary_table_f17); end
  def test_outputs_summary_table_g17; assert_equal("14%", worksheet.outputs_summary_table_g17); end
  def test_outputs_summary_table_c18; assert_equal("Proportion of primary energy from fossil fuels ", worksheet.outputs_summary_table_c18); end
  def test_outputs_summary_table_d18; assert_equal("%", worksheet.outputs_summary_table_d18); end
  def test_outputs_summary_table_e18; assert_equal("82.2%", worksheet.outputs_summary_table_e18); end
  def test_outputs_summary_table_f18; assert_equal("82.8%", worksheet.outputs_summary_table_f18); end
  def test_outputs_summary_table_g18; assert_equal("1%", worksheet.outputs_summary_table_g18); end
  def test_outputs_summary_table_c19; assert_equal("Bioenergy supply (EJ / year)", worksheet.outputs_summary_table_c19); end
  def test_outputs_summary_table_d19; assert_equal("EJ / year", worksheet.outputs_summary_table_d19); end
  def test_outputs_summary_table_e19; assert_equal("53.5", worksheet.outputs_summary_table_e19); end
  def test_outputs_summary_table_f19; assert_equal("57.9", worksheet.outputs_summary_table_f19); end
  def test_outputs_summary_table_g19; assert_equal("8%", worksheet.outputs_summary_table_g19); end
  def test_outputs_summary_table_c20; assert_equal("% of oil reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c20); end
  def test_outputs_summary_table_d20; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d20); end
  def test_outputs_summary_table_e20; assert_equal("100%", worksheet.outputs_summary_table_e20); end
  def test_outputs_summary_table_f20; assert_equal("12% to 22%", worksheet.outputs_summary_table_f20); end
  def test_outputs_summary_table_c21; assert_equal("% of gas reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c21); end
  def test_outputs_summary_table_d21; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d21); end
  def test_outputs_summary_table_e21; assert_equal("100%", worksheet.outputs_summary_table_e21); end
  def test_outputs_summary_table_f21; assert_equal("30% to 33%", worksheet.outputs_summary_table_f21); end
  def test_outputs_summary_table_c22; assert_equal("% of coal reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c22); end
  def test_outputs_summary_table_d22; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d22); end
  def test_outputs_summary_table_e22; assert_equal("100%", worksheet.outputs_summary_table_e22); end
  def test_outputs_summary_table_f22; assert_equal("68% to 71%", worksheet.outputs_summary_table_f22); end
  def test_outputs_summary_table_b24; assert_equal("Electricity", worksheet.outputs_summary_table_b24); end
  def test_outputs_summary_table_c24; assert_equal("Electricity demand (kWh / capita)", worksheet.outputs_summary_table_c24); end
  def test_outputs_summary_table_d24; assert_equal("kWh / capita", worksheet.outputs_summary_table_d24); end
  def test_outputs_summary_table_e24; assert_equal("2,857", worksheet.outputs_summary_table_e24); end
  def test_outputs_summary_table_f24; assert_equal("4,052", worksheet.outputs_summary_table_f24); end
  def test_outputs_summary_table_g24; assert_equal("42%", worksheet.outputs_summary_table_g24); end
  def test_outputs_summary_table_c25; assert_equal("Wind capacity (GW)", worksheet.outputs_summary_table_c25); end
  def test_outputs_summary_table_d25; assert_equal("GW", worksheet.outputs_summary_table_d25); end
  def test_outputs_summary_table_e25; assert_equal("238", worksheet.outputs_summary_table_e25); end
  def test_outputs_summary_table_f25; assert_equal("463", worksheet.outputs_summary_table_f25); end
  def test_outputs_summary_table_g25; assert_equal("95%", worksheet.outputs_summary_table_g25); end
  def test_outputs_summary_table_c26; assert_equal("Solar capacity (GW)", worksheet.outputs_summary_table_c26); end
  def test_outputs_summary_table_d26; assert_equal("GW", worksheet.outputs_summary_table_d26); end
  def test_outputs_summary_table_e26; assert_equal("71", worksheet.outputs_summary_table_e26); end
  def test_outputs_summary_table_f26; assert_equal("441", worksheet.outputs_summary_table_f26); end
  def test_outputs_summary_table_g26; assert_equal("518%", worksheet.outputs_summary_table_g26); end
  def test_outputs_summary_table_c27; assert_equal("Nuclear capacity (GW)", worksheet.outputs_summary_table_c27); end
  def test_outputs_summary_table_d27; assert_equal("GW", worksheet.outputs_summary_table_d27); end
  def test_outputs_summary_table_e27; assert_equal("364", worksheet.outputs_summary_table_e27); end
  def test_outputs_summary_table_f27; assert_equal("480", worksheet.outputs_summary_table_f27); end
  def test_outputs_summary_table_g27; assert_equal("32%", worksheet.outputs_summary_table_g27); end
  def test_outputs_summary_table_c28; assert_equal("Hydro-electric capacity (GW)", worksheet.outputs_summary_table_c28); end
  def test_outputs_summary_table_d28; assert_equal("GW", worksheet.outputs_summary_table_d28); end
  def test_outputs_summary_table_e28; assert_equal("970", worksheet.outputs_summary_table_e28); end
  def test_outputs_summary_table_f28; assert_equal("1,694", worksheet.outputs_summary_table_f28); end
  def test_outputs_summary_table_g28; assert_equal("75%", worksheet.outputs_summary_table_g28); end
  def test_outputs_summary_table_c29; assert_equal("CCS for power (GW)", worksheet.outputs_summary_table_c29); end
  def test_outputs_summary_table_d29; assert_equal("GW", worksheet.outputs_summary_table_d29); end
  def test_outputs_summary_table_e29; assert_equal("0", worksheet.outputs_summary_table_e29); end
  def test_outputs_summary_table_f29; assert_equal("16", worksheet.outputs_summary_table_f29); end
  def test_outputs_summary_table_g29; assert_equal("", worksheet.outputs_summary_table_g29); end
  def test_outputs_summary_table_c30; assert_equal("Unabated fossil fuel capacity (GW)", worksheet.outputs_summary_table_c30); end
  def test_outputs_summary_table_d30; assert_equal("GW", worksheet.outputs_summary_table_d30); end
  def test_outputs_summary_table_e30; assert_equal("3,705", worksheet.outputs_summary_table_e30); end
  def test_outputs_summary_table_f30; assert_equal("17,407", worksheet.outputs_summary_table_f30); end
  def test_outputs_summary_table_g30; assert_equal("370%", worksheet.outputs_summary_table_g30); end
  def test_outputs_summary_table_c31; assert_equal("Storage capacity (GW)", worksheet.outputs_summary_table_c31); end
  def test_outputs_summary_table_d31; assert_equal("GW", worksheet.outputs_summary_table_d31); end
  def test_outputs_summary_table_e31; assert_equal("120", worksheet.outputs_summary_table_e31); end
  def test_outputs_summary_table_f31; assert_equal("328", worksheet.outputs_summary_table_f31); end
  def test_outputs_summary_table_g31; assert_equal("173%", worksheet.outputs_summary_table_g31); end
  def test_outputs_summary_table_c32; assert_equal("Efficiency of unabated fossil fuel power generation", worksheet.outputs_summary_table_c32); end
  def test_outputs_summary_table_d32; assert_equal("% efficiency", worksheet.outputs_summary_table_d32); end
  def test_outputs_summary_table_e32; assert_equal("39%", worksheet.outputs_summary_table_e32); end
  def test_outputs_summary_table_f32; assert_equal("40%", worksheet.outputs_summary_table_f32); end
  def test_outputs_summary_table_g32; assert_equal("3%", worksheet.outputs_summary_table_g32); end
  def test_outputs_summary_table_c33; assert_equal("Efficiency of CCS fossil fuel power generation", worksheet.outputs_summary_table_c33); end
  def test_outputs_summary_table_d33; assert_equal("% efficiency", worksheet.outputs_summary_table_d33); end
  def test_outputs_summary_table_e33; assert_equal("n / a", worksheet.outputs_summary_table_e33); end
  def test_outputs_summary_table_f33; assert_equal("44%", worksheet.outputs_summary_table_f33); end
  def test_outputs_summary_table_g33; assert_equal("", worksheet.outputs_summary_table_g33); end
  def test_outputs_summary_table_c34; assert_equal("Emissions intensity (global average g CO2e / kWh)", worksheet.outputs_summary_table_c34); end
  def test_outputs_summary_table_d34; assert_equal("g CO2e / kWh", worksheet.outputs_summary_table_d34); end
  def test_outputs_summary_table_e34; assert_equal("534", worksheet.outputs_summary_table_e34); end
  def test_outputs_summary_table_f34; assert_equal("439", worksheet.outputs_summary_table_f34); end
  def test_outputs_summary_table_g34; assert_equal("-18%", worksheet.outputs_summary_table_g34); end
  def test_outputs_summary_table_b37; assert_equal("Transport", worksheet.outputs_summary_table_b37); end
  def test_outputs_summary_table_c37; assert_equal("Number of passenger vehicles on the road (thousands)", worksheet.outputs_summary_table_c37); end
  def test_outputs_summary_table_d37; assert_equal("000's", worksheet.outputs_summary_table_d37); end
  def test_outputs_summary_table_e37; assert_equal("1,471,639", worksheet.outputs_summary_table_e37); end
  def test_outputs_summary_table_f37; assert_equal("3,153,377", worksheet.outputs_summary_table_f37); end
  def test_outputs_summary_table_g37; assert_equal("114%", worksheet.outputs_summary_table_g37); end
  def test_outputs_summary_table_c38; assert_equal("% urban cars that are zero emission (electric/hydrogen)", worksheet.outputs_summary_table_c38); end
  def test_outputs_summary_table_d38; assert_equal("% of urban cars", worksheet.outputs_summary_table_d38); end
  def test_outputs_summary_table_e38; assert_equal("0.2%", worksheet.outputs_summary_table_e38); end
  def test_outputs_summary_table_f38; assert_equal("2.0%", worksheet.outputs_summary_table_f38); end
  def test_outputs_summary_table_g38; assert_equal("821%", worksheet.outputs_summary_table_g38); end
  def test_outputs_summary_table_c39; assert_equal("Efficiency of urban ICE cars (lge per 100km)", worksheet.outputs_summary_table_c39); end
  def test_outputs_summary_table_d39; assert_equal("lge per 100km", worksheet.outputs_summary_table_d39); end
  def test_outputs_summary_table_e39; assert_equal("8.6", worksheet.outputs_summary_table_e39); end
  def test_outputs_summary_table_f39; assert_equal("5.5", worksheet.outputs_summary_table_f39); end
  def test_outputs_summary_table_g39; assert_equal("-36%", worksheet.outputs_summary_table_g39); end
  def test_outputs_summary_table_c40; assert_equal("Total domestic passenger km travelled per capita (including walking, cycles, motorcycles, cars and public transport, but not international/plane travel)", worksheet.outputs_summary_table_c40); end
  def test_outputs_summary_table_d40; assert_equal("Passenger km / capita", worksheet.outputs_summary_table_d40); end
  def test_outputs_summary_table_e40; assert_equal("7,495", worksheet.outputs_summary_table_e40); end
  def test_outputs_summary_table_f40; assert_equal("11,247", worksheet.outputs_summary_table_f40); end
  def test_outputs_summary_table_g40; assert_equal("50%", worksheet.outputs_summary_table_g40); end
  def test_outputs_summary_table_c41; assert_equal("Total passenger km travelled per capita (includes domestic, international and plane travel)", worksheet.outputs_summary_table_c41); end
  def test_outputs_summary_table_d41; assert_equal("Passenger km / capita", worksheet.outputs_summary_table_d41); end
  def test_outputs_summary_table_e41; assert_equal("8,262", worksheet.outputs_summary_table_e41); end
  def test_outputs_summary_table_f41; assert_equal("12,924", worksheet.outputs_summary_table_f41); end
  def test_outputs_summary_table_g41; assert_equal("56%", worksheet.outputs_summary_table_g41); end
  def test_outputs_summary_table_c42; assert_equal("% of passenger km travelled using cars (excludes international & plane travel)", worksheet.outputs_summary_table_c42); end
  def test_outputs_summary_table_d42; assert_equal("% of total passenger km", worksheet.outputs_summary_table_d42); end
  def test_outputs_summary_table_e42; assert_equal("41.6%", worksheet.outputs_summary_table_e42); end
  def test_outputs_summary_table_f42; assert_equal("53.1%", worksheet.outputs_summary_table_f42); end
  def test_outputs_summary_table_g42; assert_equal("28%", worksheet.outputs_summary_table_g42); end
  def test_outputs_summary_table_c43; assert_equal("Distance travelled per person by air (global average)", worksheet.outputs_summary_table_c43); end
  def test_outputs_summary_table_d43; assert_equal("average km per year / capita", worksheet.outputs_summary_table_d43); end
  def test_outputs_summary_table_e43; assert_equal("766", worksheet.outputs_summary_table_e43); end
  def test_outputs_summary_table_f43; assert_equal("1,447", worksheet.outputs_summary_table_f43); end
  def test_outputs_summary_table_g43; assert_equal("89%", worksheet.outputs_summary_table_g43); end
  def test_outputs_summary_table_c44; assert_equal("Domestic freight (Tonne km / capita)", worksheet.outputs_summary_table_c44); end
  def test_outputs_summary_table_d44; assert_equal("Tonne km / capita", worksheet.outputs_summary_table_d44); end
  def test_outputs_summary_table_e44; assert_equal("2,647", worksheet.outputs_summary_table_e44); end
  def test_outputs_summary_table_f44; assert_equal("3,502", worksheet.outputs_summary_table_f44); end
  def test_outputs_summary_table_g44; assert_equal("32%", worksheet.outputs_summary_table_g44); end
  def test_outputs_summary_table_c45; assert_equal("International freight (Tonne km / capita)", worksheet.outputs_summary_table_c45); end
  def test_outputs_summary_table_d45; assert_equal("Tonne km / capita", worksheet.outputs_summary_table_d45); end
  def test_outputs_summary_table_e45; assert_equal("9,577", worksheet.outputs_summary_table_e45); end
  def test_outputs_summary_table_f45; assert_equal("14,079", worksheet.outputs_summary_table_f45); end
  def test_outputs_summary_table_g45; assert_equal("47%", worksheet.outputs_summary_table_g45); end
  def test_outputs_summary_table_c46; assert_equal("Air freight (as % of international freight tonne-km)", worksheet.outputs_summary_table_c46); end
  def test_outputs_summary_table_d46; assert_equal("% of international freight tonne-km", worksheet.outputs_summary_table_d46); end
  def test_outputs_summary_table_e46; assert_equal("0.27%", worksheet.outputs_summary_table_e46); end
  def test_outputs_summary_table_f46; assert_equal("0.31%", worksheet.outputs_summary_table_f46); end
  def test_outputs_summary_table_g46; assert_equal("16%", worksheet.outputs_summary_table_g46); end
  def test_outputs_summary_table_b48; assert_equal("Buildings", worksheet.outputs_summary_table_b48); end
  def test_outputs_summary_table_c48; assert_equal("Number of appliances per household", worksheet.outputs_summary_table_c48); end
  def test_outputs_summary_table_d48; assert_equal("No. of appliances", worksheet.outputs_summary_table_d48); end
  def test_outputs_summary_table_e48; assert_equal("5.1", worksheet.outputs_summary_table_e48); end
  def test_outputs_summary_table_f48; assert_equal("9.1", worksheet.outputs_summary_table_f48); end
  def test_outputs_summary_table_g48; assert_equal("79%", worksheet.outputs_summary_table_g48); end
  def test_outputs_summary_table_c49; assert_equal("Number of refrigerators in an average urban household", worksheet.outputs_summary_table_c49); end
  def test_outputs_summary_table_d49; assert_equal("products per urban household", worksheet.outputs_summary_table_d49); end
  def test_outputs_summary_table_e49; assert_equal("1.0", worksheet.outputs_summary_table_e49); end
  def test_outputs_summary_table_f49; assert_equal("1.2", worksheet.outputs_summary_table_f49); end
  def test_outputs_summary_table_g49; assert_equal("29%", worksheet.outputs_summary_table_g49); end
  def test_outputs_summary_table_c50; assert_equal("Refrigerator average power (W) in urban areas", worksheet.outputs_summary_table_c50); end
  def test_outputs_summary_table_d50; assert_equal("Average power (W)", worksheet.outputs_summary_table_d50); end
  def test_outputs_summary_table_e50; assert_equal("66", worksheet.outputs_summary_table_e50); end
  def test_outputs_summary_table_f50; assert_equal("52", worksheet.outputs_summary_table_f50); end
  def test_outputs_summary_table_g50; assert_equal("-21%", worksheet.outputs_summary_table_g50); end
  def test_outputs_summary_table_c51; assert_equal("Building temperature in warm months (⁰C)", worksheet.outputs_summary_table_c51); end
  def test_outputs_summary_table_d51; assert_equal("⁰C", worksheet.outputs_summary_table_d51); end
  def test_outputs_summary_table_e51; assert_equal("27.4", worksheet.outputs_summary_table_e51); end
  def test_outputs_summary_table_f51; assert_equal("24.4", worksheet.outputs_summary_table_f51); end
  def test_outputs_summary_table_g51; assert_equal("-11%", worksheet.outputs_summary_table_g51); end
  def test_outputs_summary_table_c52; assert_equal("Building temperature in cold months (⁰C)", worksheet.outputs_summary_table_c52); end
  def test_outputs_summary_table_d52; assert_equal("⁰C", worksheet.outputs_summary_table_d52); end
  def test_outputs_summary_table_e52; assert_equal("15.9", worksheet.outputs_summary_table_e52); end
  def test_outputs_summary_table_f52; assert_equal("18.9", worksheet.outputs_summary_table_f52); end
  def test_outputs_summary_table_g52; assert_equal("19%", worksheet.outputs_summary_table_g52); end
  def test_outputs_summary_table_c53; assert_equal("Home/building insulation  (rate of heat loss in GW / M ha*℃)", worksheet.outputs_summary_table_c53); end
  def test_outputs_summary_table_d53; assert_equal("GW / M ha*℃", worksheet.outputs_summary_table_d53); end
  def test_outputs_summary_table_e53; assert_equal("17.6", worksheet.outputs_summary_table_e53); end
  def test_outputs_summary_table_f53; assert_equal("11.7", worksheet.outputs_summary_table_f53); end
  def test_outputs_summary_table_g53; assert_equal("-33%", worksheet.outputs_summary_table_g53); end
  def test_outputs_summary_table_c54; assert_equal("% urban households using zero-carbon space heating (heat-pumps & solar)", worksheet.outputs_summary_table_c54); end
  def test_outputs_summary_table_d54; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d54); end
  def test_outputs_summary_table_e54; assert_equal("2.0%", worksheet.outputs_summary_table_e54); end
  def test_outputs_summary_table_f54; assert_equal("3.8%", worksheet.outputs_summary_table_f54); end
  def test_outputs_summary_table_g54; assert_equal("90%", worksheet.outputs_summary_table_g54); end
  def test_outputs_summary_table_c55; assert_equal("% urban households using heat-pumps for space heating", worksheet.outputs_summary_table_c55); end
  def test_outputs_summary_table_d55; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d55); end
  def test_outputs_summary_table_e55; assert_equal("2.0%", worksheet.outputs_summary_table_e55); end
  def test_outputs_summary_table_f55; assert_equal("3.3%", worksheet.outputs_summary_table_f55); end
  def test_outputs_summary_table_g55; assert_equal("65%", worksheet.outputs_summary_table_g55); end
  def test_outputs_summary_table_c56; assert_equal("% urban households using solar-powered space heating", worksheet.outputs_summary_table_c56); end
  def test_outputs_summary_table_d56; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d56); end
  def test_outputs_summary_table_e56; assert_equal("0.0%", worksheet.outputs_summary_table_e56); end
  def test_outputs_summary_table_f56; assert_equal("0.5%", worksheet.outputs_summary_table_f56); end
  def test_outputs_summary_table_g56; assert_equal("", worksheet.outputs_summary_table_g56); end
  def test_outputs_summary_table_c57; assert_equal("% urban households using electric-powered space heating", worksheet.outputs_summary_table_c57); end
  def test_outputs_summary_table_d57; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d57); end
  def test_outputs_summary_table_e57; assert_equal("3.0%", worksheet.outputs_summary_table_e57); end
  def test_outputs_summary_table_f57; assert_equal("7.7%", worksheet.outputs_summary_table_f57); end
  def test_outputs_summary_table_g57; assert_equal("157%", worksheet.outputs_summary_table_g57); end
  def test_outputs_summary_table_c58; assert_equal("% urban households that have access to electricity", worksheet.outputs_summary_table_c58); end
  def test_outputs_summary_table_d58; assert_equal("% of urban households", worksheet.outputs_summary_table_d58); end
  def test_outputs_summary_table_e58; assert_equal("93.7%", worksheet.outputs_summary_table_e58); end
  def test_outputs_summary_table_f58; assert_equal("98.0%", worksheet.outputs_summary_table_f58); end
  def test_outputs_summary_table_g58; assert_equal("5%", worksheet.outputs_summary_table_g58); end
  def test_outputs_summary_table_c59; assert_equal("% rural households that have access to electricity", worksheet.outputs_summary_table_c59); end
  def test_outputs_summary_table_d59; assert_equal("% of rural households", worksheet.outputs_summary_table_d59); end
  def test_outputs_summary_table_e59; assert_equal("68.0%", worksheet.outputs_summary_table_e59); end
  def test_outputs_summary_table_f59; assert_equal("81.0%", worksheet.outputs_summary_table_f59); end
  def test_outputs_summary_table_g59; assert_equal("19%", worksheet.outputs_summary_table_g59); end
  def test_outputs_summary_table_b61; assert_equal("Manufacturing", worksheet.outputs_summary_table_b61); end
  def test_outputs_summary_table_c61; assert_equal("Iron, steel and aluminium output (Gt)", worksheet.outputs_summary_table_c61); end
  def test_outputs_summary_table_d61; assert_equal("Gt", worksheet.outputs_summary_table_d61); end
  def test_outputs_summary_table_e61; assert_equal("1.8", worksheet.outputs_summary_table_e61); end
  def test_outputs_summary_table_f61; assert_equal("3.0", worksheet.outputs_summary_table_f61); end
  def test_outputs_summary_table_g61; assert_equal("65%", worksheet.outputs_summary_table_g61); end
  def test_outputs_summary_table_c62; assert_equal("Paper and other output (Gt)", worksheet.outputs_summary_table_c62); end
  def test_outputs_summary_table_d62; assert_equal("Gt", worksheet.outputs_summary_table_d62); end
  def test_outputs_summary_table_e62; assert_equal("0.6", worksheet.outputs_summary_table_e62); end
  def test_outputs_summary_table_f62; assert_equal("1.3", worksheet.outputs_summary_table_f62); end
  def test_outputs_summary_table_g62; assert_equal("116%", worksheet.outputs_summary_table_g62); end
  def test_outputs_summary_table_c63; assert_equal("Chemicals output (Gt)", worksheet.outputs_summary_table_c63); end
  def test_outputs_summary_table_d63; assert_equal("Gt", worksheet.outputs_summary_table_d63); end
  def test_outputs_summary_table_e63; assert_equal("0.8", worksheet.outputs_summary_table_e63); end
  def test_outputs_summary_table_f63; assert_equal("1.5", worksheet.outputs_summary_table_f63); end
  def test_outputs_summary_table_g63; assert_equal("104%", worksheet.outputs_summary_table_g63); end
  def test_outputs_summary_table_c64; assert_equal("Cement output (Gt)", worksheet.outputs_summary_table_c64); end
  def test_outputs_summary_table_d64; assert_equal("Gt", worksheet.outputs_summary_table_d64); end
  def test_outputs_summary_table_e64; assert_equal("3.6", worksheet.outputs_summary_table_e64); end
  def test_outputs_summary_table_f64; assert_equal("5.2", worksheet.outputs_summary_table_f64); end
  def test_outputs_summary_table_g64; assert_equal("44%", worksheet.outputs_summary_table_g64); end
  def test_outputs_summary_table_c65; assert_equal("Timber output (Gt)", worksheet.outputs_summary_table_c65); end
  def test_outputs_summary_table_d65; assert_equal("Gt", worksheet.outputs_summary_table_d65); end
  def test_outputs_summary_table_e65; assert_equal("0.8", worksheet.outputs_summary_table_e65); end
  def test_outputs_summary_table_f65; assert_equal("1.3", worksheet.outputs_summary_table_f65); end
  def test_outputs_summary_table_g65; assert_equal("66%", worksheet.outputs_summary_table_g65); end
  def test_outputs_summary_table_c66; assert_equal("Global Oxygen steel technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c66); end
  def test_outputs_summary_table_d66; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d66); end
  def test_outputs_summary_table_e66; assert_equal("0.0%", worksheet.outputs_summary_table_e66); end
  def test_outputs_summary_table_f66; assert_equal("4.5%", worksheet.outputs_summary_table_f66); end
  def test_outputs_summary_table_g66; assert_equal("", worksheet.outputs_summary_table_g66); end
  def test_outputs_summary_table_c67; assert_equal("Global Pulp & paper: Pulp technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c67); end
  def test_outputs_summary_table_d67; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d67); end
  def test_outputs_summary_table_e67; assert_equal("0.0%", worksheet.outputs_summary_table_e67); end
  def test_outputs_summary_table_f67; assert_equal("20.0%", worksheet.outputs_summary_table_f67); end
  def test_outputs_summary_table_g67; assert_equal("", worksheet.outputs_summary_table_g67); end
  def test_outputs_summary_table_c68; assert_equal("Global Chemicals: High Value Chemicals  technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c68); end
  def test_outputs_summary_table_d68; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d68); end
  def test_outputs_summary_table_e68; assert_equal("0.0%", worksheet.outputs_summary_table_e68); end
  def test_outputs_summary_table_f68; assert_equal("0.0%", worksheet.outputs_summary_table_f68); end
  def test_outputs_summary_table_g68; assert_equal("", worksheet.outputs_summary_table_g68); end
  def test_outputs_summary_table_c69; assert_equal("Global Cement technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c69); end
  def test_outputs_summary_table_d69; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d69); end
  def test_outputs_summary_table_e69; assert_equal("0.0%", worksheet.outputs_summary_table_e69); end
  def test_outputs_summary_table_f69; assert_equal("7.8%", worksheet.outputs_summary_table_f69); end
  def test_outputs_summary_table_g69; assert_equal("", worksheet.outputs_summary_table_g69); end
  def test_outputs_summary_table_c70; assert_equal("% of manufacturing emissions captured by CCS", worksheet.outputs_summary_table_c70); end
  def test_outputs_summary_table_d70; assert_equal("%", worksheet.outputs_summary_table_d70); end
  def test_outputs_summary_table_e70; assert_equal("0.0%", worksheet.outputs_summary_table_e70); end
  def test_outputs_summary_table_f70; assert_equal("0.0%", worksheet.outputs_summary_table_f70); end
  def test_outputs_summary_table_g70; assert_equal("", worksheet.outputs_summary_table_g70); end
  def test_outputs_summary_table_c71; assert_equal("Demand for consumer packaging (% of 2011 tonne demand)", worksheet.outputs_summary_table_c71); end
  def test_outputs_summary_table_d71; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d71); end
  def test_outputs_summary_table_e71; assert_equal("100.0%", worksheet.outputs_summary_table_e71); end
  def test_outputs_summary_table_f71; assert_equal("283.8%", worksheet.outputs_summary_table_f71); end
  def test_outputs_summary_table_g71; assert_equal("184%", worksheet.outputs_summary_table_g71); end
  def test_outputs_summary_table_c72; assert_equal("Demand for electrical equipment (% of 2011 tonne demand)", worksheet.outputs_summary_table_c72); end
  def test_outputs_summary_table_d72; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d72); end
  def test_outputs_summary_table_e72; assert_equal("100.0%", worksheet.outputs_summary_table_e72); end
  def test_outputs_summary_table_f72; assert_equal("239.9%", worksheet.outputs_summary_table_f72); end
  def test_outputs_summary_table_g72; assert_equal("140%", worksheet.outputs_summary_table_g72); end
  def test_outputs_summary_table_c73; assert_equal("Lifespan of refrigerator (years) in urban areas", worksheet.outputs_summary_table_c73); end
  def test_outputs_summary_table_d73; assert_equal("Refrigerator lifespan (years)", worksheet.outputs_summary_table_d73); end
  def test_outputs_summary_table_e73; assert_equal("15", worksheet.outputs_summary_table_e73); end
  def test_outputs_summary_table_f73; assert_equal("10", worksheet.outputs_summary_table_f73); end
  def test_outputs_summary_table_g73; assert_equal("-33%", worksheet.outputs_summary_table_g73); end
  def test_outputs_summary_table_b75; assert_equal("Land", worksheet.outputs_summary_table_b75); end
  def test_outputs_summary_table_c75; assert_equal("Crop yields (EJ per M ha)", worksheet.outputs_summary_table_c75); end
  def test_outputs_summary_table_d75; assert_equal("EJ per M ha", worksheet.outputs_summary_table_d75); end
  def test_outputs_summary_table_e75; assert_equal("0.03", worksheet.outputs_summary_table_e75); end
  def test_outputs_summary_table_f75; assert_equal("0.04", worksheet.outputs_summary_table_f75); end
  def test_outputs_summary_table_g75; assert_equal("27%", worksheet.outputs_summary_table_g75); end
  def test_outputs_summary_table_c76; assert_equal("Crop yields (W/m2)", worksheet.outputs_summary_table_c76); end
  def test_outputs_summary_table_d76; assert_equal("W/m2", worksheet.outputs_summary_table_d76); end
  def test_outputs_summary_table_e76; assert_equal("0.10", worksheet.outputs_summary_table_e76); end
  def test_outputs_summary_table_f76; assert_equal("0.13", worksheet.outputs_summary_table_f76); end
  def test_outputs_summary_table_g76; assert_equal("27%", worksheet.outputs_summary_table_g76); end
  def test_outputs_summary_table_c77; assert_equal("Livestock yields for cows and other bovines (% increase from 2011 in non-intensive animal yields and carrying capacity of pasture)", worksheet.outputs_summary_table_c77); end
  def test_outputs_summary_table_d77; assert_equal("% increase from 2011 in non-intensive animal yields (animals per area) and carrying capacity of pasture", worksheet.outputs_summary_table_d77); end
  def test_outputs_summary_table_e77; assert_equal("0.0%", worksheet.outputs_summary_table_e77); end
  def test_outputs_summary_table_f77; assert_equal("51.5%", worksheet.outputs_summary_table_f77); end
  def test_outputs_summary_table_g77; assert_equal("", worksheet.outputs_summary_table_g77); end
  def test_outputs_summary_table_c78; assert_equal("Increase in non-intensive animal yields (animals per area)", worksheet.outputs_summary_table_c78); end
  def test_outputs_summary_table_d78; assert_equal("Cows per hectare", worksheet.outputs_summary_table_d78); end
  def test_outputs_summary_table_e78; assert_equal("0.6", worksheet.outputs_summary_table_e78); end
  def test_outputs_summary_table_f78; assert_equal("1.0", worksheet.outputs_summary_table_f78); end
  def test_outputs_summary_table_g78; assert_equal("51%", worksheet.outputs_summary_table_g78); end
  def test_outputs_summary_table_c79; assert_equal("Intensification of beef production", worksheet.outputs_summary_table_c79); end
  def test_outputs_summary_table_d79; assert_equal("% of beef produced intensively", worksheet.outputs_summary_table_d79); end
  def test_outputs_summary_table_e79; assert_equal("6.0%", worksheet.outputs_summary_table_e79); end
  def test_outputs_summary_table_f79; assert_equal("6.0%", worksheet.outputs_summary_table_f79); end
  def test_outputs_summary_table_g79; assert_equal("0%", worksheet.outputs_summary_table_g79); end
  def test_outputs_summary_table_c80; assert_equal("Intensification of animals (feedlot systems)", worksheet.outputs_summary_table_c80); end
  def test_outputs_summary_table_d80; assert_equal("Increase in energy crop yields (NPP) and change in crop mix from base year", worksheet.outputs_summary_table_d80); end
  def test_outputs_summary_table_e80; assert_equal("12.1%", worksheet.outputs_summary_table_e80); end
  def test_outputs_summary_table_f80; assert_equal("25.8%", worksheet.outputs_summary_table_f80); end
  def test_outputs_summary_table_g80; assert_equal("113%", worksheet.outputs_summary_table_g80); end
  def test_outputs_summary_table_c81; assert_equal("% of productive land used for bioenergy", worksheet.outputs_summary_table_c81); end
  def test_outputs_summary_table_d81; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d81); end
  def test_outputs_summary_table_e81; assert_equal("1.1%", worksheet.outputs_summary_table_e81); end
  def test_outputs_summary_table_f81; assert_equal("1.1%", worksheet.outputs_summary_table_f81); end
  def test_outputs_summary_table_g81; assert_equal("0%", worksheet.outputs_summary_table_g81); end
  def test_outputs_summary_table_c82; assert_equal("% of productive land used for food (livestock and food crops)", worksheet.outputs_summary_table_c82); end
  def test_outputs_summary_table_d82; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d82); end
  def test_outputs_summary_table_e82; assert_equal("52.0%", worksheet.outputs_summary_table_e82); end
  def test_outputs_summary_table_f82; assert_equal("57.1%", worksheet.outputs_summary_table_f82); end
  def test_outputs_summary_table_g82; assert_equal("10%", worksheet.outputs_summary_table_g82); end
  def test_outputs_summary_table_c83; assert_equal("% of productive land used for commercial forestry", worksheet.outputs_summary_table_c83); end
  def test_outputs_summary_table_d83; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d83); end
  def test_outputs_summary_table_e83; assert_equal("3.0%", worksheet.outputs_summary_table_e83); end
  def test_outputs_summary_table_f83; assert_equal("5.4%", worksheet.outputs_summary_table_f83); end
  def test_outputs_summary_table_g83; assert_equal("80%", worksheet.outputs_summary_table_g83); end
  def test_outputs_summary_table_c84; assert_equal("% of productive land used for native forest", worksheet.outputs_summary_table_c84); end
  def test_outputs_summary_table_d84; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d84); end
  def test_outputs_summary_table_e84; assert_equal("40.6%", worksheet.outputs_summary_table_e84); end
  def test_outputs_summary_table_f84; assert_equal("31.9%", worksheet.outputs_summary_table_f84); end
  def test_outputs_summary_table_g84; assert_equal("-21%", worksheet.outputs_summary_table_g84); end
  def test_outputs_summary_table_b86; assert_equal("Food", worksheet.outputs_summary_table_b86); end
  def test_outputs_summary_table_c86; assert_equal("Calories consumed per head (kCal)", worksheet.outputs_summary_table_c86); end
  def test_outputs_summary_table_d86; assert_equal("kCal", worksheet.outputs_summary_table_d86); end
  def test_outputs_summary_table_e86; assert_equal("2,180", worksheet.outputs_summary_table_e86); end
  def test_outputs_summary_table_f86; assert_equal("2,330", worksheet.outputs_summary_table_f86); end
  def test_outputs_summary_table_g86; assert_equal("7%", worksheet.outputs_summary_table_g86); end
  def test_outputs_summary_table_c87; assert_equal("Calories from meat (kCal)", worksheet.outputs_summary_table_c87); end
  def test_outputs_summary_table_d87; assert_equal("kCal", worksheet.outputs_summary_table_d87); end
  def test_outputs_summary_table_e87; assert_equal("187", worksheet.outputs_summary_table_e87); end
  def test_outputs_summary_table_f87; assert_equal("220", worksheet.outputs_summary_table_f87); end
  def test_outputs_summary_table_g87; assert_equal("18%", worksheet.outputs_summary_table_g87); end
  def test_outputs_summary_table_b89; assert_equal("Cost", worksheet.outputs_summary_table_b89); end
  def test_outputs_summary_table_c89; assert_equal("Cost in 2050 - point estimate ($bn)", worksheet.outputs_summary_table_c89); end
  def test_outputs_summary_table_d89; assert_equal("$bn", worksheet.outputs_summary_table_d89); end
  def test_outputs_summary_table_e89; assert_equal("n / a", worksheet.outputs_summary_table_e89); end
  def test_outputs_summary_table_f89; assert_equal("49067.9", worksheet.outputs_summary_table_f89); end
  def test_outputs_summary_table_g89; assert_equal("", worksheet.outputs_summary_table_g89); end
  def test_outputs_summary_table_c90; assert_equal("Cost in 2050 - high estimate ($bn)", worksheet.outputs_summary_table_c90); end
  def test_outputs_summary_table_d90; assert_equal("$bn", worksheet.outputs_summary_table_d90); end
  def test_outputs_summary_table_e90; assert_equal("n / a", worksheet.outputs_summary_table_e90); end
  def test_outputs_summary_table_f90; assert_equal("77211.9", worksheet.outputs_summary_table_f90); end
  def test_outputs_summary_table_g90; assert_equal("", worksheet.outputs_summary_table_g90); end
  def test_outputs_summary_table_c91; assert_equal("Cost in 2050 - low estimate ($bn)", worksheet.outputs_summary_table_c91); end
  def test_outputs_summary_table_d91; assert_equal("$bn", worksheet.outputs_summary_table_d91); end
  def test_outputs_summary_table_e91; assert_equal("n / a", worksheet.outputs_summary_table_e91); end
  def test_outputs_summary_table_f91; assert_equal("34898.7", worksheet.outputs_summary_table_f91); end
  def test_outputs_summary_table_g91; assert_equal("", worksheet.outputs_summary_table_g91); end
  def test_outputs_summary_table_c92; assert_equal("Fuel costs as % of total costs", worksheet.outputs_summary_table_c92); end
  def test_outputs_summary_table_d92; assert_equal("% ($bn)", worksheet.outputs_summary_table_d92); end
  def test_outputs_summary_table_e92; assert_equal("n / a", worksheet.outputs_summary_table_e92); end
  def test_outputs_summary_table_f92; assert_equal("9.0%", worksheet.outputs_summary_table_f92); end
  def test_outputs_summary_table_g92; assert_equal("", worksheet.outputs_summary_table_g92); end
  def test_outputs_summary_table_c93; assert_equal("Tax levied by fossil fuel exporters in 2050 ($bn)", worksheet.outputs_summary_table_c93); end
  def test_outputs_summary_table_d93; assert_equal("$bn", worksheet.outputs_summary_table_d93); end
  def test_outputs_summary_table_e93; assert_equal("n / a", worksheet.outputs_summary_table_e93); end
  def test_outputs_summary_table_f93; assert_equal("6642.4", worksheet.outputs_summary_table_f93); end
  def test_outputs_summary_table_g93; assert_equal("", worksheet.outputs_summary_table_g93); end
  def test_outputs_summary_table_b95; assert_equal("Emissions saved", worksheet.outputs_summary_table_b95); end
  def test_outputs_summary_table_c95; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2e)", worksheet.outputs_summary_table_c95); end
  def test_outputs_summary_table_d95; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d95); end
  def test_outputs_summary_table_e95; assert_equal("0.000", worksheet.outputs_summary_table_e95); end
  def test_outputs_summary_table_f95; assert_equal("0.000", worksheet.outputs_summary_table_f95); end
  def test_outputs_summary_table_g95; assert_equal("", worksheet.outputs_summary_table_g95); end
  def test_outputs_summary_table_d100; assert_equal("Unit", worksheet.outputs_summary_table_d100); end
  def test_outputs_summary_table_e100; assert_equal("2011", worksheet.outputs_summary_table_e100); end
  def test_outputs_summary_table_f100; assert_equal("2050", worksheet.outputs_summary_table_f100); end
  def test_outputs_summary_table_g100; assert_equal("% increase", worksheet.outputs_summary_table_g100); end
  def test_outputs_summary_table_b101; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b101); end
  def test_outputs_summary_table_c101; assert_equal("Cumulative emissions by each year (Gt CO2e)", worksheet.outputs_summary_table_c101); end
  def test_outputs_summary_table_d101; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d101); end
  def test_outputs_summary_table_e101; assert_equal("1,890", worksheet.outputs_summary_table_e101); end
  def test_outputs_summary_table_f101; assert_equal("3,903", worksheet.outputs_summary_table_f101); end
  def test_outputs_summary_table_g101; assert_equal("", worksheet.outputs_summary_table_g101); end
  def test_outputs_summary_table_c102; assert_equal("Post-2050 emissions trajectory", worksheet.outputs_summary_table_c102); end
  def test_outputs_summary_table_d102; assert_equal("% emissions increase every year: a proportion of average yearly change for the previous 15 year period", worksheet.outputs_summary_table_d102); end
  def test_outputs_summary_table_e102; assert_equal("49.5%", worksheet.outputs_summary_table_e102); end
  def test_outputs_summary_table_g102; assert_equal("", worksheet.outputs_summary_table_g102); end
  def test_outputs_summary_table_b104; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b104); end
  def test_outputs_summary_table_c104; assert_equal("Urban population (billions of people)", worksheet.outputs_summary_table_c104); end
  def test_outputs_summary_table_d104; assert_equal("billions of people", worksheet.outputs_summary_table_d104); end
  def test_outputs_summary_table_e104; assert_equal("3.6", worksheet.outputs_summary_table_e104); end
  def test_outputs_summary_table_f104; assert_equal("6.3", worksheet.outputs_summary_table_f104); end
  def test_outputs_summary_table_g104; assert_equal("75%", worksheet.outputs_summary_table_g104); end
  def test_outputs_summary_table_c105; assert_equal("Rural population (billions of people)", worksheet.outputs_summary_table_c105); end
  def test_outputs_summary_table_d105; assert_equal("billions of people", worksheet.outputs_summary_table_d105); end
  def test_outputs_summary_table_e105; assert_equal("3.3", worksheet.outputs_summary_table_e105); end
  def test_outputs_summary_table_f105; assert_equal("3.2", worksheet.outputs_summary_table_f105); end
  def test_outputs_summary_table_g105; assert_equal("-4%", worksheet.outputs_summary_table_g105); end
  def test_outputs_summary_table_b107; assert_equal("Electricity", worksheet.outputs_summary_table_b107); end
  def test_outputs_summary_table_c107; assert_equal("Electricity demand (kWh per capita)", worksheet.outputs_summary_table_c107); end
  def test_outputs_summary_table_d107; assert_equal("kWh per capita", worksheet.outputs_summary_table_d107); end
  def test_outputs_summary_table_e107; assert_equal("2,857", worksheet.outputs_summary_table_e107); end
  def test_outputs_summary_table_f107; assert_equal("4,052", worksheet.outputs_summary_table_f107); end
  def test_outputs_summary_table_g107; assert_equal("42%", worksheet.outputs_summary_table_g107); end
  def test_outputs_summary_table_c108; assert_equal("Offshore wind capacity (GW)", worksheet.outputs_summary_table_c108); end
  def test_outputs_summary_table_d108; assert_equal("GW", worksheet.outputs_summary_table_d108); end
  def test_outputs_summary_table_e108; assert_equal("4", worksheet.outputs_summary_table_e108); end
  def test_outputs_summary_table_f108; assert_equal("91", worksheet.outputs_summary_table_f108); end
  def test_outputs_summary_table_g108; assert_equal("2120%", worksheet.outputs_summary_table_g108); end
  def test_outputs_summary_table_c109; assert_equal("Onshore wind capacity (GW)", worksheet.outputs_summary_table_c109); end
  def test_outputs_summary_table_d109; assert_equal("GW", worksheet.outputs_summary_table_d109); end
  def test_outputs_summary_table_e109; assert_equal("234", worksheet.outputs_summary_table_e109); end
  def test_outputs_summary_table_f109; assert_equal("372", worksheet.outputs_summary_table_f109); end
  def test_outputs_summary_table_g109; assert_equal("59%", worksheet.outputs_summary_table_g109); end
  def test_outputs_summary_table_c110; assert_equal("Solar PV capacity (GW)", worksheet.outputs_summary_table_c110); end
  def test_outputs_summary_table_d110; assert_equal("GW", worksheet.outputs_summary_table_d110); end
  def test_outputs_summary_table_e110; assert_equal("70", worksheet.outputs_summary_table_e110); end
  def test_outputs_summary_table_f110; assert_equal("363", worksheet.outputs_summary_table_f110); end
  def test_outputs_summary_table_g110; assert_equal("421%", worksheet.outputs_summary_table_g110); end
  def test_outputs_summary_table_c111; assert_equal("CSP capacity (GW)", worksheet.outputs_summary_table_c111); end
  def test_outputs_summary_table_d111; assert_equal("GW", worksheet.outputs_summary_table_d111); end
  def test_outputs_summary_table_e111; assert_equal("2", worksheet.outputs_summary_table_e111); end
  def test_outputs_summary_table_f111; assert_equal("78", worksheet.outputs_summary_table_f111); end
  def test_outputs_summary_table_g111; assert_equal("4750%", worksheet.outputs_summary_table_g111); end
  def test_outputs_summary_table_c112; assert_equal("Unabated (GW)", worksheet.outputs_summary_table_c112); end
  def test_outputs_summary_table_d112; assert_equal("GW", worksheet.outputs_summary_table_d112); end
  def test_outputs_summary_table_e112; assert_equal("3,705", worksheet.outputs_summary_table_e112); end
  def test_outputs_summary_table_f112; assert_equal("17,407", worksheet.outputs_summary_table_f112); end
  def test_outputs_summary_table_g112; assert_equal("370%", worksheet.outputs_summary_table_g112); end
  def test_outputs_summary_table_c113; assert_equal("Emissions intensity", worksheet.outputs_summary_table_c113); end
  def test_outputs_summary_table_d113; assert_equal("g CO2e / kWh", worksheet.outputs_summary_table_d113); end
  def test_outputs_summary_table_e113; assert_equal("534", worksheet.outputs_summary_table_e113); end
  def test_outputs_summary_table_f113; assert_equal("439", worksheet.outputs_summary_table_f113); end
  def test_outputs_summary_table_g113; assert_equal("-18%", worksheet.outputs_summary_table_g113); end
  def test_outputs_summary_table_b115; assert_equal("Transport", worksheet.outputs_summary_table_b115); end
  def test_outputs_summary_table_c115; assert_equal("Light road (number of vehicles)", worksheet.outputs_summary_table_c115); end
  def test_outputs_summary_table_d115; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d115); end
  def test_outputs_summary_table_e115; assert_equal("1,456,126,459", worksheet.outputs_summary_table_e115); end
  def test_outputs_summary_table_f115; assert_equal("3,119,035,773", worksheet.outputs_summary_table_f115); end
  def test_outputs_summary_table_g115; assert_equal("114%", worksheet.outputs_summary_table_g115); end
  def test_outputs_summary_table_c116; assert_equal("Heavy road (number of vehicles)", worksheet.outputs_summary_table_c116); end
  def test_outputs_summary_table_d116; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d116); end
  def test_outputs_summary_table_e116; assert_equal("15,512,285", worksheet.outputs_summary_table_e116); end
  def test_outputs_summary_table_f116; assert_equal("34,341,400", worksheet.outputs_summary_table_f116); end
  def test_outputs_summary_table_g116; assert_equal("121%", worksheet.outputs_summary_table_g116); end
  def test_outputs_summary_table_c117; assert_equal("Rail (number of vehicles)", worksheet.outputs_summary_table_c117); end
  def test_outputs_summary_table_d117; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d117); end
  def test_outputs_summary_table_e117; assert_equal("81,412", worksheet.outputs_summary_table_e117); end
  def test_outputs_summary_table_f117; assert_equal("139,882", worksheet.outputs_summary_table_f117); end
  def test_outputs_summary_table_g117; assert_equal("72%", worksheet.outputs_summary_table_g117); end
  def test_outputs_summary_table_c118; assert_equal("Plane (number of vehicles)", worksheet.outputs_summary_table_c118); end
  def test_outputs_summary_table_d118; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d118); end
  def test_outputs_summary_table_e118; assert_equal("24,997", worksheet.outputs_summary_table_e118); end
  def test_outputs_summary_table_f118; assert_equal("62,215", worksheet.outputs_summary_table_f118); end
  def test_outputs_summary_table_g118; assert_equal("149%", worksheet.outputs_summary_table_g118); end
  def test_outputs_summary_table_c119; assert_equal("Air freight (as % of international freight tonne-km)", worksheet.outputs_summary_table_c119); end
  def test_outputs_summary_table_d119; assert_equal("% of international freight tonne-km", worksheet.outputs_summary_table_d119); end
  def test_outputs_summary_table_e119; assert_equal("0.3%", worksheet.outputs_summary_table_e119); end
  def test_outputs_summary_table_f119; assert_equal("0.3%", worksheet.outputs_summary_table_f119); end
  def test_outputs_summary_table_g119; assert_equal("16%", worksheet.outputs_summary_table_g119); end
  def test_outputs_summary_table_c120; assert_equal("car.passenger.urban.ICE.liquid", worksheet.outputs_summary_table_c120); end
  def test_outputs_summary_table_d120; assert_equal("% of urban cars", worksheet.outputs_summary_table_d120); end
  def test_outputs_summary_table_e120; assert_equal("98.8%", worksheet.outputs_summary_table_e120); end
  def test_outputs_summary_table_f120; assert_equal("91.0%", worksheet.outputs_summary_table_f120); end
  def test_outputs_summary_table_g120; assert_equal("", worksheet.outputs_summary_table_g120); end
  def test_outputs_summary_table_c121; assert_equal("car.passenger.urban.ICE.gas", worksheet.outputs_summary_table_c121); end
  def test_outputs_summary_table_d121; assert_equal("% of urban cars", worksheet.outputs_summary_table_d121); end
  def test_outputs_summary_table_e121; assert_equal("1.0%", worksheet.outputs_summary_table_e121); end
  def test_outputs_summary_table_f121; assert_equal("2.0%", worksheet.outputs_summary_table_f121); end
  def test_outputs_summary_table_g121; assert_equal("", worksheet.outputs_summary_table_g121); end
  def test_outputs_summary_table_c122; assert_equal("car.passenger.urban.PH", worksheet.outputs_summary_table_c122); end
  def test_outputs_summary_table_d122; assert_equal("% of urban cars", worksheet.outputs_summary_table_d122); end
  def test_outputs_summary_table_e122; assert_equal("0.0%", worksheet.outputs_summary_table_e122); end
  def test_outputs_summary_table_f122; assert_equal("5.0%", worksheet.outputs_summary_table_f122); end
  def test_outputs_summary_table_g122; assert_equal("", worksheet.outputs_summary_table_g122); end
  def test_outputs_summary_table_c123; assert_equal("car.passenger.urban.EV", worksheet.outputs_summary_table_c123); end
  def test_outputs_summary_table_d123; assert_equal("% of urban cars", worksheet.outputs_summary_table_d123); end
  def test_outputs_summary_table_e123; assert_equal("0.2%", worksheet.outputs_summary_table_e123); end
  def test_outputs_summary_table_f123; assert_equal("2.0%", worksheet.outputs_summary_table_f123); end
  def test_outputs_summary_table_g123; assert_equal("", worksheet.outputs_summary_table_g123); end
  def test_outputs_summary_table_c124; assert_equal("car.passenger.urban.H2", worksheet.outputs_summary_table_c124); end
  def test_outputs_summary_table_d124; assert_equal("% of urban cars", worksheet.outputs_summary_table_d124); end
  def test_outputs_summary_table_e124; assert_equal("0.0%", worksheet.outputs_summary_table_e124); end
  def test_outputs_summary_table_f124; assert_equal("0.0%", worksheet.outputs_summary_table_f124); end
  def test_outputs_summary_table_g124; assert_equal("", worksheet.outputs_summary_table_g124); end
  def test_outputs_summary_table_c125; assert_equal("Distance travelled per person by air (global average)", worksheet.outputs_summary_table_c125); end
  def test_outputs_summary_table_d125; assert_equal("average km per year / capita", worksheet.outputs_summary_table_d125); end
  def test_outputs_summary_table_e125; assert_equal("766", worksheet.outputs_summary_table_e125); end
  def test_outputs_summary_table_f125; assert_equal("1,447", worksheet.outputs_summary_table_f125); end
  def test_outputs_summary_table_g125; assert_equal("89%", worksheet.outputs_summary_table_g125); end
  def test_outputs_summary_table_c126; assert_equal("Distance travelled: Plane short haul - traditional", worksheet.outputs_summary_table_c126); end
  def test_outputs_summary_table_d126; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d126); end
  def test_outputs_summary_table_e126; assert_equal("1,913,806", worksheet.outputs_summary_table_e126); end
  def test_outputs_summary_table_f126; assert_equal("3,811,485", worksheet.outputs_summary_table_f126); end
  def test_outputs_summary_table_g126; assert_equal("99%", worksheet.outputs_summary_table_g126); end
  def test_outputs_summary_table_c127; assert_equal("Distance travelled: Plane short haul - hydrogen", worksheet.outputs_summary_table_c127); end
  def test_outputs_summary_table_d127; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d127); end
  def test_outputs_summary_table_e127; assert_equal("0", worksheet.outputs_summary_table_e127); end
  def test_outputs_summary_table_f127; assert_equal("0", worksheet.outputs_summary_table_f127); end
  def test_outputs_summary_table_g127; assert_equal("", worksheet.outputs_summary_table_g127); end
  def test_outputs_summary_table_c128; assert_equal("Distance travelled: Plane long haul - traditional", worksheet.outputs_summary_table_c128); end
  def test_outputs_summary_table_d128; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d128); end
  def test_outputs_summary_table_e128; assert_equal("3,424,706", worksheet.outputs_summary_table_e128); end
  def test_outputs_summary_table_f128; assert_equal("10,007,371", worksheet.outputs_summary_table_f128); end
  def test_outputs_summary_table_g128; assert_equal("192%", worksheet.outputs_summary_table_g128); end
  def test_outputs_summary_table_c129; assert_equal("Distance travelled: Plane long haul - hydrogen", worksheet.outputs_summary_table_c129); end
  def test_outputs_summary_table_d129; assert_equal("Million passenger-km travelled", worksheet.outputs_summary_table_d129); end
  def test_outputs_summary_table_e129; assert_equal("0", worksheet.outputs_summary_table_e129); end
  def test_outputs_summary_table_f129; assert_equal("0", worksheet.outputs_summary_table_f129); end
  def test_outputs_summary_table_g129; assert_equal("", worksheet.outputs_summary_table_g129); end
  def test_outputs_summary_table_b132; assert_equal("Buildings", worksheet.outputs_summary_table_b132); end
  def test_outputs_summary_table_c132; assert_equal("Global Urban solid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c132); end
  def test_outputs_summary_table_d132; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d132); end
  def test_outputs_summary_table_e132; assert_equal("7%", worksheet.outputs_summary_table_e132); end
  def test_outputs_summary_table_f132; assert_equal("2%", worksheet.outputs_summary_table_f132); end
  def test_outputs_summary_table_g132; assert_equal("-73%", worksheet.outputs_summary_table_g132); end
  def test_outputs_summary_table_c133; assert_equal("Global urban liquid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c133); end
  def test_outputs_summary_table_d133; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d133); end
  def test_outputs_summary_table_e133; assert_equal("14%", worksheet.outputs_summary_table_e133); end
  def test_outputs_summary_table_f133; assert_equal("13%", worksheet.outputs_summary_table_f133); end
  def test_outputs_summary_table_g133; assert_equal("-9%", worksheet.outputs_summary_table_g133); end
  def test_outputs_summary_table_c134; assert_equal("Global urban gas boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c134); end
  def test_outputs_summary_table_d134; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d134); end
  def test_outputs_summary_table_e134; assert_equal("55%", worksheet.outputs_summary_table_e134); end
  def test_outputs_summary_table_f134; assert_equal("51%", worksheet.outputs_summary_table_f134); end
  def test_outputs_summary_table_g134; assert_equal("-8%", worksheet.outputs_summary_table_g134); end
  def test_outputs_summary_table_c135; assert_equal("Global urban heat pump used by people with access to electricity for space heating", worksheet.outputs_summary_table_c135); end
  def test_outputs_summary_table_d135; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d135); end
  def test_outputs_summary_table_e135; assert_equal("2%", worksheet.outputs_summary_table_e135); end
  def test_outputs_summary_table_f135; assert_equal("3%", worksheet.outputs_summary_table_f135); end
  def test_outputs_summary_table_g135; assert_equal("65%", worksheet.outputs_summary_table_g135); end
  def test_outputs_summary_table_c136; assert_equal("Global urban electricity heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c136); end
  def test_outputs_summary_table_d136; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d136); end
  def test_outputs_summary_table_e136; assert_equal("3%", worksheet.outputs_summary_table_e136); end
  def test_outputs_summary_table_f136; assert_equal("8%", worksheet.outputs_summary_table_f136); end
  def test_outputs_summary_table_g136; assert_equal("157%", worksheet.outputs_summary_table_g136); end
  def test_outputs_summary_table_c137; assert_equal("Global urban solar heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c137); end
  def test_outputs_summary_table_d137; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d137); end
  def test_outputs_summary_table_e137; assert_equal("0%", worksheet.outputs_summary_table_e137); end
  def test_outputs_summary_table_f137; assert_equal("1%", worksheet.outputs_summary_table_f137); end
  def test_outputs_summary_table_g137; assert_equal("", worksheet.outputs_summary_table_g137); end
  def test_outputs_summary_table_c138; assert_equal("Global urban chp used by people with access to electricity for space heating", worksheet.outputs_summary_table_c138); end
  def test_outputs_summary_table_d138; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d138); end
  def test_outputs_summary_table_e138; assert_equal("2%", worksheet.outputs_summary_table_e138); end
  def test_outputs_summary_table_f138; assert_equal("3%", worksheet.outputs_summary_table_f138); end
  def test_outputs_summary_table_g138; assert_equal("30%", worksheet.outputs_summary_table_g138); end
  def test_outputs_summary_table_c139; assert_equal("Global urban district heating used by people with access to electricity for space heating", worksheet.outputs_summary_table_c139); end
  def test_outputs_summary_table_d139; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d139); end
  def test_outputs_summary_table_e139; assert_equal("17%", worksheet.outputs_summary_table_e139); end
  def test_outputs_summary_table_f139; assert_equal("21%", worksheet.outputs_summary_table_f139); end
  def test_outputs_summary_table_g139; assert_equal("22%", worksheet.outputs_summary_table_g139); end
  def test_outputs_summary_table_c140; assert_equal("% urban households using hydrocarbons (and all district heating) for space heating", worksheet.outputs_summary_table_c140); end
  def test_outputs_summary_table_d140; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d140); end
  def test_outputs_summary_table_e140; assert_equal("95%", worksheet.outputs_summary_table_e140); end
  def test_outputs_summary_table_f140; assert_equal("89%", worksheet.outputs_summary_table_f140); end
  def test_outputs_summary_table_g140; assert_equal("-7%", worksheet.outputs_summary_table_g140); end
  def test_outputs_summary_table_c141; assert_equal("Global Urban households with access to electricity", worksheet.outputs_summary_table_c141); end
  def test_outputs_summary_table_d141; assert_equal("% of urban households", worksheet.outputs_summary_table_d141); end
  def test_outputs_summary_table_e141; assert_equal("94%", worksheet.outputs_summary_table_e141); end
  def test_outputs_summary_table_f141; assert_equal("98%", worksheet.outputs_summary_table_f141); end
  def test_outputs_summary_table_g141; assert_equal("5%", worksheet.outputs_summary_table_g141); end
  def test_outputs_summary_table_c142; assert_equal("Global Rural households with access to electricity", worksheet.outputs_summary_table_c142); end
  def test_outputs_summary_table_d142; assert_equal("% of rural households", worksheet.outputs_summary_table_d142); end
  def test_outputs_summary_table_e142; assert_equal("68%", worksheet.outputs_summary_table_e142); end
  def test_outputs_summary_table_f142; assert_equal("81%", worksheet.outputs_summary_table_f142); end
  def test_outputs_summary_table_g142; assert_equal("19%", worksheet.outputs_summary_table_g142); end
  def test_outputs_summary_table_c143; assert_equal("Global Urban households with no access to electricity", worksheet.outputs_summary_table_c143); end
  def test_outputs_summary_table_d143; assert_equal("% of urban households", worksheet.outputs_summary_table_d143); end
  def test_outputs_summary_table_e143; assert_equal("6%", worksheet.outputs_summary_table_e143); end
  def test_outputs_summary_table_f143; assert_equal("2%", worksheet.outputs_summary_table_f143); end
  def test_outputs_summary_table_g143; assert_equal("-68%", worksheet.outputs_summary_table_g143); end
  def test_outputs_summary_table_c144; assert_equal("Global Rural households with no access to electricity", worksheet.outputs_summary_table_c144); end
  def test_outputs_summary_table_d144; assert_equal("% of rural households", worksheet.outputs_summary_table_d144); end
  def test_outputs_summary_table_e144; assert_equal("32%", worksheet.outputs_summary_table_e144); end
  def test_outputs_summary_table_f144; assert_equal("19%", worksheet.outputs_summary_table_f144); end
  def test_outputs_summary_table_g144; assert_equal("-41%", worksheet.outputs_summary_table_g144); end
  def test_outputs_summary_table_c145; assert_equal("% urban space heating from heat pumps", worksheet.outputs_summary_table_c145); end
  def test_outputs_summary_table_d145; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d145); end
  def test_outputs_summary_table_e145; assert_equal("2.0%", worksheet.outputs_summary_table_e145); end
  def test_outputs_summary_table_f145; assert_equal("3.3%", worksheet.outputs_summary_table_f145); end
  def test_outputs_summary_table_g145; assert_equal("65%", worksheet.outputs_summary_table_g145); end
  def test_outputs_summary_table_c146; assert_equal("% urban space heating from solar", worksheet.outputs_summary_table_c146); end
  def test_outputs_summary_table_d146; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d146); end
  def test_outputs_summary_table_e146; assert_equal("0.0%", worksheet.outputs_summary_table_e146); end
  def test_outputs_summary_table_f146; assert_equal("0.5%", worksheet.outputs_summary_table_f146); end
  def test_outputs_summary_table_g146; assert_equal("", worksheet.outputs_summary_table_g146); end
  def test_outputs_summary_table_c147; assert_equal("% urban space heating from district heating", worksheet.outputs_summary_table_c147); end
  def test_outputs_summary_table_d147; assert_equal("% of urban space heating ", worksheet.outputs_summary_table_d147); end
  def test_outputs_summary_table_e147; assert_equal("17.0%", worksheet.outputs_summary_table_e147); end
  def test_outputs_summary_table_f147; assert_equal("20.8%", worksheet.outputs_summary_table_f147); end
  def test_outputs_summary_table_g147; assert_equal("22%", worksheet.outputs_summary_table_g147); end
  def test_outputs_summary_table_b149; assert_equal("Manufacturing", worksheet.outputs_summary_table_b149); end
  def test_outputs_summary_table_c149; assert_equal("Electrical equipment (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c149); end
  def test_outputs_summary_table_d149; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d149); end
  def test_outputs_summary_table_e149; assert_equal("100%", worksheet.outputs_summary_table_e149); end
  def test_outputs_summary_table_f149; assert_equal("240%", worksheet.outputs_summary_table_f149); end
  def test_outputs_summary_table_g149; assert_equal("140%", worksheet.outputs_summary_table_g149); end
  def test_outputs_summary_table_c150; assert_equal("Consumer packaging (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c150); end
  def test_outputs_summary_table_d150; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d150); end
  def test_outputs_summary_table_e150; assert_equal("100%", worksheet.outputs_summary_table_e150); end
  def test_outputs_summary_table_f150; assert_equal("284%", worksheet.outputs_summary_table_f150); end
  def test_outputs_summary_table_g150; assert_equal("184%", worksheet.outputs_summary_table_g150); end
  def test_outputs_summary_table_c151; assert_equal("Metal goods (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c151); end
  def test_outputs_summary_table_d151; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d151); end
  def test_outputs_summary_table_e151; assert_equal("100%", worksheet.outputs_summary_table_e151); end
  def test_outputs_summary_table_f151; assert_equal("284%", worksheet.outputs_summary_table_f151); end
  def test_outputs_summary_table_g151; assert_equal("184%", worksheet.outputs_summary_table_g151); end
  def test_outputs_summary_table_c152; assert_equal("IPCC emissions sector G.X2.A (Gt CO2)", worksheet.outputs_summary_table_c152); end
  def test_outputs_summary_table_d152; assert_equal("Gt CO2", worksheet.outputs_summary_table_d152); end
  def test_outputs_summary_table_e152; assert_equal("0.0", worksheet.outputs_summary_table_e152); end
  def test_outputs_summary_table_f152; assert_equal("0.0", worksheet.outputs_summary_table_f152); end
  def test_outputs_summary_table_g152; assert_equal("", worksheet.outputs_summary_table_g152); end
  def test_outputs_summary_table_c153; assert_equal("IPCC emissions sector G.X2.B (Gt CO2)", worksheet.outputs_summary_table_c153); end
  def test_outputs_summary_table_d153; assert_equal("Gt CO2", worksheet.outputs_summary_table_d153); end
  def test_outputs_summary_table_e153; assert_equal("0.0", worksheet.outputs_summary_table_e153); end
  def test_outputs_summary_table_f153; assert_equal("0.0", worksheet.outputs_summary_table_f153); end
  def test_outputs_summary_table_g153; assert_equal("", worksheet.outputs_summary_table_g153); end
  def test_outputs_summary_table_c154; assert_equal("IPCC emissions sector G.1A (Gt CO2)", worksheet.outputs_summary_table_c154); end
  def test_outputs_summary_table_d154; assert_equal("Gt CO2", worksheet.outputs_summary_table_d154); end
  def test_outputs_summary_table_e154; assert_equal("4.3", worksheet.outputs_summary_table_e154); end
  def test_outputs_summary_table_f154; assert_equal("6.3", worksheet.outputs_summary_table_f154); end
  def test_outputs_summary_table_g154; assert_equal("44%", worksheet.outputs_summary_table_g154); end
  def test_outputs_summary_table_c155; assert_equal("IPCC emissions sector G.2 (Gt CO2)", worksheet.outputs_summary_table_c155); end
  def test_outputs_summary_table_d155; assert_equal("Gt CO2", worksheet.outputs_summary_table_d155); end
  def test_outputs_summary_table_e155; assert_equal("2.4", worksheet.outputs_summary_table_e155); end
  def test_outputs_summary_table_f155; assert_equal("3.9", worksheet.outputs_summary_table_f155); end
  def test_outputs_summary_table_g155; assert_equal("64%", worksheet.outputs_summary_table_g155); end
  def test_outputs_summary_table_b157; assert_equal("Land", worksheet.outputs_summary_table_b157); end
  def test_outputs_summary_table_c157; assert_equal("Productive land for forest", worksheet.outputs_summary_table_c157); end
  def test_outputs_summary_table_d157; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d157); end
  def test_outputs_summary_table_e157; assert_equal("37%", worksheet.outputs_summary_table_e157); end
  def test_outputs_summary_table_f157; assert_equal("37%", worksheet.outputs_summary_table_f157); end
  def test_outputs_summary_table_g157; assert_equal("0%", worksheet.outputs_summary_table_g157); end
  def test_outputs_summary_table_c158; assert_equal("Productive land for bioenergy", worksheet.outputs_summary_table_c158); end
  def test_outputs_summary_table_d158; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d158); end
  def test_outputs_summary_table_e158; assert_equal("54%", worksheet.outputs_summary_table_e158); end
  def test_outputs_summary_table_f158; assert_equal("54%", worksheet.outputs_summary_table_f158); end
  def test_outputs_summary_table_g158; assert_equal("0%", worksheet.outputs_summary_table_g158); end
  def test_outputs_summary_table_c159; assert_equal("Land for animals (M ha)", worksheet.outputs_summary_table_c159); end
  def test_outputs_summary_table_d159; assert_equal("M ha", worksheet.outputs_summary_table_d159); end
  def test_outputs_summary_table_e159; assert_equal("3,363", worksheet.outputs_summary_table_e159); end
  def test_outputs_summary_table_f159; assert_equal("3,697", worksheet.outputs_summary_table_f159); end
  def test_outputs_summary_table_g159; assert_equal("10%", worksheet.outputs_summary_table_g159); end
  def test_outputs_summary_table_c160; assert_equal("Land for food crops (M ha)", worksheet.outputs_summary_table_c160); end
  def test_outputs_summary_table_d160; assert_equal("M ha", worksheet.outputs_summary_table_d160); end
  def test_outputs_summary_table_e160; assert_equal("1,443", worksheet.outputs_summary_table_e160); end
  def test_outputs_summary_table_f160; assert_equal("1,575", worksheet.outputs_summary_table_f160); end
  def test_outputs_summary_table_g160; assert_equal("9%", worksheet.outputs_summary_table_g160); end
  def test_outputs_summary_table_c161; assert_equal("Land for non-food crops  (M ha)", worksheet.outputs_summary_table_c161); end
  def test_outputs_summary_table_d161; assert_equal("M ha", worksheet.outputs_summary_table_d161); end
  def test_outputs_summary_table_e161; assert_equal("60", worksheet.outputs_summary_table_e161); end
  def test_outputs_summary_table_f161; assert_equal("56", worksheet.outputs_summary_table_f161); end
  def test_outputs_summary_table_g161; assert_equal("-7%", worksheet.outputs_summary_table_g161); end
  def test_outputs_summary_table_c162; assert_equal("Forest (M ha)", worksheet.outputs_summary_table_c162); end
  def test_outputs_summary_table_d162; assert_equal("M ha", worksheet.outputs_summary_table_d162); end
  def test_outputs_summary_table_e162; assert_equal("3,753", worksheet.outputs_summary_table_e162); end
  def test_outputs_summary_table_f162; assert_equal("2,949", worksheet.outputs_summary_table_f162); end
  def test_outputs_summary_table_g162; assert_equal("-21%", worksheet.outputs_summary_table_g162); end
  def test_outputs_summary_table_c163; assert_equal("Commercial forest (M ha)", worksheet.outputs_summary_table_c163); end
  def test_outputs_summary_table_d163; assert_equal("M ha", worksheet.outputs_summary_table_d163); end
  def test_outputs_summary_table_e163; assert_equal("274", worksheet.outputs_summary_table_e163); end
  def test_outputs_summary_table_f163; assert_equal("494", worksheet.outputs_summary_table_f163); end
  def test_outputs_summary_table_g163; assert_equal("80%", worksheet.outputs_summary_table_g163); end
  def test_outputs_summary_table_c164; assert_equal("Land for energy crops (M ha)", worksheet.outputs_summary_table_c164); end
  def test_outputs_summary_table_d164; assert_equal("M ha", worksheet.outputs_summary_table_d164); end
  def test_outputs_summary_table_e164; assert_equal("98", worksheet.outputs_summary_table_e164); end
  def test_outputs_summary_table_f164; assert_equal("98", worksheet.outputs_summary_table_f164); end
  def test_outputs_summary_table_g164; assert_equal("0%", worksheet.outputs_summary_table_g164); end
  def test_outputs_summary_table_c165; assert_equal("Natural grassland (M ha)", worksheet.outputs_summary_table_c165); end
  def test_outputs_summary_table_d165; assert_equal("M ha", worksheet.outputs_summary_table_d165); end
  def test_outputs_summary_table_e165; assert_equal("0", worksheet.outputs_summary_table_e165); end
  def test_outputs_summary_table_f165; assert_equal("0", worksheet.outputs_summary_table_f165); end
  def test_outputs_summary_table_g165; assert_equal("", worksheet.outputs_summary_table_g165); end
  def test_outputs_summary_table_c166; assert_equal("Settlements and infrastructure (M ha)", worksheet.outputs_summary_table_c166); end
  def test_outputs_summary_table_d166; assert_equal("M ha", worksheet.outputs_summary_table_d166); end
  def test_outputs_summary_table_e166; assert_equal("245", worksheet.outputs_summary_table_e166); end
  def test_outputs_summary_table_f166; assert_equal("368", worksheet.outputs_summary_table_f166); end
  def test_outputs_summary_table_g166; assert_equal("50%", worksheet.outputs_summary_table_g166); end
  def test_outputs_summary_table_c167; assert_equal("Desert, ice etc (M ha)", worksheet.outputs_summary_table_c167); end
  def test_outputs_summary_table_d167; assert_equal("M ha", worksheet.outputs_summary_table_d167); end
  def test_outputs_summary_table_e167; assert_equal("3,836", worksheet.outputs_summary_table_e167); end
  def test_outputs_summary_table_f167; assert_equal("3,836", worksheet.outputs_summary_table_f167); end
  def test_outputs_summary_table_g167; assert_equal("0%", worksheet.outputs_summary_table_g167); end
  def test_outputs_summary_table_c168; assert_equal("Total productive land (all excluding desert, ice) (M ha)", worksheet.outputs_summary_table_c168); end
  def test_outputs_summary_table_d168; assert_equal("M ha", worksheet.outputs_summary_table_d168); end
  def test_outputs_summary_table_e168; assert_equal("9,236", worksheet.outputs_summary_table_e168); end
  def test_outputs_summary_table_f168; assert_equal("9,236", worksheet.outputs_summary_table_f168); end
  def test_outputs_summary_table_g168; assert_equal("0%", worksheet.outputs_summary_table_g168); end
  def test_outputs_summary_table_c169; assert_equal("% of land used for food (livestock)", worksheet.outputs_summary_table_c169); end
  def test_outputs_summary_table_d169; assert_equal("% of all productive land ()", worksheet.outputs_summary_table_d169); end
  def test_outputs_summary_table_e169; assert_equal("36.4%", worksheet.outputs_summary_table_e169); end
  def test_outputs_summary_table_f169; assert_equal("40.0%", worksheet.outputs_summary_table_f169); end
  def test_outputs_summary_table_g169; assert_equal("10%", worksheet.outputs_summary_table_g169); end
  def test_outputs_summary_table_c170; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2)", worksheet.outputs_summary_table_c170); end
  def test_outputs_summary_table_d170; assert_equal("Gt CO2", worksheet.outputs_summary_table_d170); end
  def test_outputs_summary_table_e170; assert_equal("0.0", worksheet.outputs_summary_table_e170); end
  def test_outputs_summary_table_f170; assert_equal("0.0", worksheet.outputs_summary_table_f170); end
  def test_outputs_summary_table_g170; assert_equal("", worksheet.outputs_summary_table_g170); end
  def test_outputs_summary_table_b173; assert_equal("Cost", worksheet.outputs_summary_table_b173); end
  def test_outputs_summary_table_c173; assert_equal("Cost in 2050 - point estimate ($bn)", worksheet.outputs_summary_table_c173); end
  def test_outputs_summary_table_d173; assert_equal("$bn", worksheet.outputs_summary_table_d173); end
  def test_outputs_summary_table_e173; assert_equal("n / a", worksheet.outputs_summary_table_e173); end
  def test_outputs_summary_table_f173; assert_equal("4423.5", worksheet.outputs_summary_table_f173); end
  def test_outputs_summary_table_g173; assert_equal("", worksheet.outputs_summary_table_g173); end
  def test_outputs_summary_table_c174; assert_equal("Fuel tax rate - coal", worksheet.outputs_summary_table_c174); end
  def test_outputs_summary_table_d174; assert_equal("%", worksheet.outputs_summary_table_d174); end
  def test_outputs_summary_table_e174; assert_equal("n / a", worksheet.outputs_summary_table_e174); end
  def test_outputs_summary_table_f174; assert_equal("39.0%", worksheet.outputs_summary_table_f174); end
  def test_outputs_summary_table_g174; assert_equal("", worksheet.outputs_summary_table_g174); end
  def test_outputs_summary_table_c175; assert_equal("Fuel tax rate - oil", worksheet.outputs_summary_table_c175); end
  def test_outputs_summary_table_d175; assert_equal("%", worksheet.outputs_summary_table_d175); end
  def test_outputs_summary_table_e175; assert_equal("n / a", worksheet.outputs_summary_table_e175); end
  def test_outputs_summary_table_f175; assert_equal("67.0%", worksheet.outputs_summary_table_f175); end
  def test_outputs_summary_table_g175; assert_equal("", worksheet.outputs_summary_table_g175); end
  def test_outputs_summary_table_c176; assert_equal("Fuel tax rate - gas", worksheet.outputs_summary_table_c176); end
  def test_outputs_summary_table_d176; assert_equal("%", worksheet.outputs_summary_table_d176); end
  def test_outputs_summary_table_e176; assert_equal("n / a", worksheet.outputs_summary_table_e176); end
  def test_outputs_summary_table_f176; assert_equal("60.0%", worksheet.outputs_summary_table_f176); end
  def test_outputs_summary_table_g176; assert_equal("", worksheet.outputs_summary_table_g176); end
  def test_outputs_summary_table_c177; assert_equal("Fuel cost (excluding tax) - coal", worksheet.outputs_summary_table_c177); end
  def test_outputs_summary_table_d177; assert_equal("$bn", worksheet.outputs_summary_table_d177); end
  def test_outputs_summary_table_e177; assert_equal("n / a", worksheet.outputs_summary_table_e177); end
  def test_outputs_summary_table_f177; assert_equal("679.5", worksheet.outputs_summary_table_f177); end
  def test_outputs_summary_table_g177; assert_equal("", worksheet.outputs_summary_table_g177); end
  def test_outputs_summary_table_c178; assert_equal("Fuel cost (excluding tax) - oil", worksheet.outputs_summary_table_c178); end
  def test_outputs_summary_table_d178; assert_equal("$bn", worksheet.outputs_summary_table_d178); end
  def test_outputs_summary_table_e178; assert_equal("n / a", worksheet.outputs_summary_table_e178); end
  def test_outputs_summary_table_f178; assert_equal("2366.4", worksheet.outputs_summary_table_f178); end
  def test_outputs_summary_table_g178; assert_equal("", worksheet.outputs_summary_table_g178); end
  def test_outputs_summary_table_c179; assert_equal("Fuel cost (excluding tax) - gas", worksheet.outputs_summary_table_c179); end
  def test_outputs_summary_table_d179; assert_equal("$bn", worksheet.outputs_summary_table_d179); end
  def test_outputs_summary_table_e179; assert_equal("n / a", worksheet.outputs_summary_table_e179); end
  def test_outputs_summary_table_f179; assert_equal("935.7", worksheet.outputs_summary_table_f179); end
  def test_outputs_summary_table_g179; assert_equal("", worksheet.outputs_summary_table_g179); end
  def test_outputs_summary_table_c180; assert_equal("Tax amount paid to exporters - coal", worksheet.outputs_summary_table_c180); end
  def test_outputs_summary_table_d180; assert_equal("$bn", worksheet.outputs_summary_table_d180); end
  def test_outputs_summary_table_e180; assert_equal("n / a", worksheet.outputs_summary_table_e180); end
  def test_outputs_summary_table_f180; assert_equal("434.4", worksheet.outputs_summary_table_f180); end
  def test_outputs_summary_table_g180; assert_equal("", worksheet.outputs_summary_table_g180); end
  def test_outputs_summary_table_c181; assert_equal("Tax amount paid to exporters - oil", worksheet.outputs_summary_table_c181); end
  def test_outputs_summary_table_d181; assert_equal("$bn", worksheet.outputs_summary_table_d181); end
  def test_outputs_summary_table_e181; assert_equal("n / a", worksheet.outputs_summary_table_e181); end
  def test_outputs_summary_table_f181; assert_equal("4804.5", worksheet.outputs_summary_table_f181); end
  def test_outputs_summary_table_g181; assert_equal("", worksheet.outputs_summary_table_g181); end
  def test_outputs_summary_table_c182; assert_equal("Tax amount paid to exporters - gas", worksheet.outputs_summary_table_c182); end
  def test_outputs_summary_table_d182; assert_equal("$bn", worksheet.outputs_summary_table_d182); end
  def test_outputs_summary_table_e182; assert_equal("n / a", worksheet.outputs_summary_table_e182); end
  def test_outputs_summary_table_f182; assert_equal("1403.5", worksheet.outputs_summary_table_f182); end
  def test_outputs_summary_table_g182; assert_equal("", worksheet.outputs_summary_table_g182); end
  def test_outputs_summary_table_c183; assert_equal("Checking calculations below", worksheet.outputs_summary_table_c183); end
  def test_outputs_summary_table_c184; assert_equal("Fuel amount paid (if tax added back in) - coal", worksheet.outputs_summary_table_c184); end
  def test_outputs_summary_table_d184; assert_equal("$bn", worksheet.outputs_summary_table_d184); end
  def test_outputs_summary_table_f184; assert_equal("1113.9", worksheet.outputs_summary_table_f184); end
  def test_outputs_summary_table_c185; assert_equal("Fuel amount paid (if tax added back in) - oil", worksheet.outputs_summary_table_c185); end
  def test_outputs_summary_table_d185; assert_equal("$bn", worksheet.outputs_summary_table_d185); end
  def test_outputs_summary_table_f185; assert_equal("7170.9", worksheet.outputs_summary_table_f185); end
  def test_outputs_summary_table_c186; assert_equal("Fuel amount paid (if tax added back in) - gas", worksheet.outputs_summary_table_c186); end
  def test_outputs_summary_table_d186; assert_equal("$bn", worksheet.outputs_summary_table_d186); end
  def test_outputs_summary_table_f186; assert_equal("2339.2", worksheet.outputs_summary_table_f186); end
  def test_outputs_summary_table_c187; assert_equal("Checking - coal", worksheet.outputs_summary_table_c187); end
  def test_outputs_summary_table_d187; assert_equal("%", worksheet.outputs_summary_table_d187); end
  def test_outputs_summary_table_f187; assert_equal("0.4", worksheet.outputs_summary_table_f187); end
  def test_outputs_summary_table_c188; assert_equal("Checking - oil", worksheet.outputs_summary_table_c188); end
  def test_outputs_summary_table_d188; assert_equal("%", worksheet.outputs_summary_table_d188); end
  def test_outputs_summary_table_f188; assert_equal("0.7", worksheet.outputs_summary_table_f188); end
  def test_outputs_summary_table_c189; assert_equal("Checking - gas", worksheet.outputs_summary_table_c189); end
  def test_outputs_summary_table_d189; assert_equal("%", worksheet.outputs_summary_table_d189); end
  def test_outputs_summary_table_f189; assert_equal("0.6", worksheet.outputs_summary_table_f189); end
  def test_outputs_energy_d62; assert_equal("Transport", worksheet.outputs_energy_d62); end
  def test_outputs_energy_f62; assert_equal("Excludes pipeline transport", worksheet.outputs_energy_f62); end
  def test_outputs_energy_h62; assert_in_epsilon(45.51369989, worksheet.outputs_energy_h62, 0.002); end
  def test_outputs_energy_i62; assert_in_epsilon(51.52193813, worksheet.outputs_energy_i62, 0.002); end
  def test_outputs_energy_j62; assert_in_epsilon(54.43186451, worksheet.outputs_energy_j62, 0.002); end
  def test_outputs_energy_k62; assert_in_epsilon(63.75351718, worksheet.outputs_energy_k62, 0.002); end
  def test_outputs_energy_l62; assert_in_epsilon(69.78995546, worksheet.outputs_energy_l62, 0.002); end
  def test_outputs_energy_m62; assert_in_epsilon(79.59210571, worksheet.outputs_energy_m62, 0.002); end
  def test_outputs_energy_n62; assert_in_epsilon(89.33971209, worksheet.outputs_energy_n62, 0.002); end
  def test_outputs_energy_o62; assert_in_epsilon(98.25619647, worksheet.outputs_energy_o62, 0.002); end
  def test_outputs_energy_p62; assert_in_epsilon(99.72109669, worksheet.outputs_energy_p62, 0.002); end
  def test_outputs_energy_r62; assert_in_epsilon(100.3599203354344, worksheet.outputs_energy_r62, 0.002); end
  def test_outputs_energy_s62; assert_in_epsilon(109.17080779588105, worksheet.outputs_energy_s62, 0.002); end
  def test_outputs_energy_t62; assert_in_epsilon(120.96929894870792, worksheet.outputs_energy_t62, 0.002); end
  def test_outputs_energy_u62; assert_in_epsilon(130.7112927864794, worksheet.outputs_energy_u62, 0.002); end
  def test_outputs_energy_v62; assert_in_epsilon(139.23624883929398, worksheet.outputs_energy_v62, 0.002); end
  def test_outputs_energy_w62; assert_in_epsilon(145.55399292224524, worksheet.outputs_energy_w62, 0.002); end
  def test_outputs_energy_x62; assert_in_epsilon(150.6665042275713, worksheet.outputs_energy_x62, 0.002); end
  def test_outputs_energy_y62; assert_in_epsilon(155.38031905922188, worksheet.outputs_energy_y62, 0.002); end
  def test_outputs_energy_z62; assert_in_epsilon(159.86679051135422, worksheet.outputs_energy_z62, 0.002); end
  def test_outputs_energy_d64; assert_equal("Residential, public and commercial", worksheet.outputs_energy_d64); end
  def test_outputs_energy_h64; assert_in_epsilon(64.751263, worksheet.outputs_energy_h64, 0.002); end
  def test_outputs_energy_i64; assert_in_epsilon(71.065102, worksheet.outputs_energy_i64, 0.002); end
  def test_outputs_energy_j64; assert_in_epsilon(78.65053599999999, worksheet.outputs_energy_j64, 0.002); end
  def test_outputs_energy_k64; assert_in_epsilon(83.372944, worksheet.outputs_energy_k64, 0.002); end
  def test_outputs_energy_l64; assert_in_epsilon(93.688429, worksheet.outputs_energy_l64, 0.002); end
  def test_outputs_energy_m64; assert_in_epsilon(99.817678, worksheet.outputs_energy_m64, 0.002); end
  def test_outputs_energy_n64; assert_in_epsilon(108.462211, worksheet.outputs_energy_n64, 0.002); end
  def test_outputs_energy_o64; assert_in_epsilon(116.897329, worksheet.outputs_energy_o64, 0.002); end
  def test_outputs_energy_p64; assert_in_epsilon(116.729656, worksheet.outputs_energy_p64, 0.002); end
  def test_outputs_energy_r64; assert_in_epsilon(116.28805541134336, worksheet.outputs_energy_r64, 0.002); end
  def test_outputs_energy_s64; assert_in_epsilon(124.65020027204466, worksheet.outputs_energy_s64, 0.002); end
  def test_outputs_energy_t64; assert_in_epsilon(132.61118446376992, worksheet.outputs_energy_t64, 0.002); end
  def test_outputs_energy_u64; assert_in_epsilon(140.31277509368593, worksheet.outputs_energy_u64, 0.002); end
  def test_outputs_energy_v64; assert_in_epsilon(147.68833773559845, worksheet.outputs_energy_v64, 0.002); end
  def test_outputs_energy_w64; assert_in_epsilon(154.72374995658333, worksheet.outputs_energy_w64, 0.002); end
  def test_outputs_energy_x64; assert_in_epsilon(161.29634505025996, worksheet.outputs_energy_x64, 0.002); end
  def test_outputs_energy_y64; assert_in_epsilon(167.4232289985472, worksheet.outputs_energy_y64, 0.002); end
  def test_outputs_energy_z64; assert_in_epsilon(172.924292832376, worksheet.outputs_energy_z64, 0.002); end
  def test_outputs_energy_d66; assert_equal("Manufacturing", worksheet.outputs_energy_d66); end
  def test_outputs_energy_h66; assert_in_epsilon(77.74494084, worksheet.outputs_energy_h66, 0.002); end
  def test_outputs_energy_i66; assert_in_epsilon(90.57849988, worksheet.outputs_energy_i66, 0.002); end
  def test_outputs_energy_j66; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j66, 0.002); end
  def test_outputs_energy_k66; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k66, 0.002); end
  def test_outputs_energy_l66; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l66, 0.002); end
  def test_outputs_energy_m66; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m66, 0.002); end
  def test_outputs_energy_n66; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n66, 0.002); end
  def test_outputs_energy_o66; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o66, 0.002); end
  def test_outputs_energy_p66; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p66, 0.002); end
  def test_outputs_energy_r66; assert_in_epsilon(143.34762076351507, worksheet.outputs_energy_r66, 0.002); end
  def test_outputs_energy_s66; assert_in_epsilon(149.90858087649326, worksheet.outputs_energy_s66, 0.002); end
  def test_outputs_energy_t66; assert_in_epsilon(159.8509979034199, worksheet.outputs_energy_t66, 0.002); end
  def test_outputs_energy_u66; assert_in_epsilon(171.54208720827913, worksheet.outputs_energy_u66, 0.002); end
  def test_outputs_energy_v66; assert_in_epsilon(183.17957432831474, worksheet.outputs_energy_v66, 0.002); end
  def test_outputs_energy_w66; assert_in_epsilon(194.2986143701665, worksheet.outputs_energy_w66, 0.002); end
  def test_outputs_energy_x66; assert_in_epsilon(206.34206575053076, worksheet.outputs_energy_x66, 0.002); end
  def test_outputs_energy_y66; assert_in_epsilon(218.67279995702322, worksheet.outputs_energy_y66, 0.002); end
  def test_outputs_energy_z66; assert_in_epsilon(232.2583775808071, worksheet.outputs_energy_z66, 0.002); end
  def test_outputs_energy_d68; assert_equal("Other end uses", worksheet.outputs_energy_d68); end
  def test_outputs_energy_h68; assert_in_epsilon(11.382796, worksheet.outputs_energy_h68, 0.002); end
  def test_outputs_energy_i68; assert_in_epsilon(12.904924, worksheet.outputs_energy_i68, 0.002); end
  def test_outputs_energy_j68; assert_in_epsilon(13.314676, worksheet.outputs_energy_j68, 0.002); end
  def test_outputs_energy_k68; assert_in_epsilon(18.042997, worksheet.outputs_energy_k68, 0.002); end
  def test_outputs_energy_l68; assert_in_epsilon(11.223171, worksheet.outputs_energy_l68, 0.002); end
  def test_outputs_energy_m68; assert_in_epsilon(9.567384, worksheet.outputs_energy_m68, 0.002); end
  def test_outputs_energy_n68; assert_in_epsilon(11.61567, worksheet.outputs_energy_n68, 0.002); end
  def test_outputs_energy_o68; assert_in_epsilon(12.64839, worksheet.outputs_energy_o68, 0.002); end
  def test_outputs_energy_p68; assert_in_epsilon(12.784689, worksheet.outputs_energy_p68, 0.002); end
  def test_outputs_energy_r68; assert_in_epsilon(12.417000000000002, worksheet.outputs_energy_r68, 0.002); end
  def test_outputs_energy_s68; assert_in_epsilon(12.675419290980274, worksheet.outputs_energy_s68, 0.002); end
  def test_outputs_energy_t68; assert_in_epsilon(13.206791447913298, worksheet.outputs_energy_t68, 0.002); end
  def test_outputs_energy_u68; assert_in_epsilon(13.69789476151457, worksheet.outputs_energy_u68, 0.002); end
  def test_outputs_energy_v68; assert_in_epsilon(14.155822188852017, worksheet.outputs_energy_v68, 0.002); end
  def test_outputs_energy_w68; assert_in_epsilon(14.579349450122548, worksheet.outputs_energy_w68, 0.002); end
  def test_outputs_energy_x68; assert_in_epsilon(14.997623353547471, worksheet.outputs_energy_x68, 0.002); end
  def test_outputs_energy_y68; assert_in_epsilon(15.38024567738328, worksheet.outputs_energy_y68, 0.002); end
  def test_outputs_energy_z68; assert_in_epsilon(15.780562540624299, worksheet.outputs_energy_z68, 0.002); end
  def test_outputs_energy_d70; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_d70); end
  def test_outputs_energy_h70; assert_in_delta(0.0, (worksheet.outputs_energy_h70||0), 0.002); end
  def test_outputs_energy_i70; assert_in_delta(0.0, (worksheet.outputs_energy_i70||0), 0.002); end
  def test_outputs_energy_j70; assert_in_delta(0.0, (worksheet.outputs_energy_j70||0), 0.002); end
  def test_outputs_energy_k70; assert_in_delta(0.0, (worksheet.outputs_energy_k70||0), 0.002); end
  def test_outputs_energy_l70; assert_in_delta(0.0, (worksheet.outputs_energy_l70||0), 0.002); end
  def test_outputs_energy_m70; assert_in_delta(0.0, (worksheet.outputs_energy_m70||0), 0.002); end
  def test_outputs_energy_n70; assert_in_delta(0.0, (worksheet.outputs_energy_n70||0), 0.002); end
  def test_outputs_energy_o70; assert_in_delta(0.0, (worksheet.outputs_energy_o70||0), 0.002); end
  def test_outputs_energy_p70; assert_in_delta(0.0, (worksheet.outputs_energy_p70||0), 0.002); end
  def test_outputs_energy_r70; assert_in_delta(0.0, (worksheet.outputs_energy_r70||0), 0.002); end
  def test_outputs_energy_s70; assert_in_delta(0.0, (worksheet.outputs_energy_s70||0), 0.002); end
  def test_outputs_energy_t70; assert_in_delta(0.0, (worksheet.outputs_energy_t70||0), 0.002); end
  def test_outputs_energy_u70; assert_in_delta(0.0, (worksheet.outputs_energy_u70||0), 0.002); end
  def test_outputs_energy_v70; assert_in_delta(0.0, (worksheet.outputs_energy_v70||0), 0.002); end
  def test_outputs_energy_w70; assert_in_delta(0.0, (worksheet.outputs_energy_w70||0), 0.002); end
  def test_outputs_energy_x70; assert_in_delta(0.0, (worksheet.outputs_energy_x70||0), 0.002); end
  def test_outputs_energy_y70; assert_in_delta(0.0, (worksheet.outputs_energy_y70||0), 0.002); end
  def test_outputs_energy_z70; assert_in_delta(0.0, (worksheet.outputs_energy_z70||0), 0.002); end
  def test_outputs_energy_d110; assert_equal("Description", worksheet.outputs_energy_d110); end
  def test_outputs_energy_f110; assert_equal("Notes", worksheet.outputs_energy_f110); end
  def test_outputs_energy_h110; assert_equal("1975", worksheet.outputs_energy_h110); end
  def test_outputs_energy_i110; assert_equal("1980", worksheet.outputs_energy_i110); end
  def test_outputs_energy_j110; assert_equal("1985", worksheet.outputs_energy_j110); end
  def test_outputs_energy_k110; assert_equal("1990", worksheet.outputs_energy_k110); end
  def test_outputs_energy_l110; assert_equal("1995", worksheet.outputs_energy_l110); end
  def test_outputs_energy_m110; assert_equal("2000", worksheet.outputs_energy_m110); end
  def test_outputs_energy_n110; assert_equal("2005", worksheet.outputs_energy_n110); end
  def test_outputs_energy_o110; assert_in_epsilon(2010.0, worksheet.outputs_energy_o110, 0.002); end
  def test_outputs_energy_p110; assert_in_epsilon(2011.0, worksheet.outputs_energy_p110, 0.002); end
  def test_outputs_energy_r110; assert_in_epsilon(2011.0, worksheet.outputs_energy_r110, 0.002); end
  def test_outputs_energy_s110; assert_equal("2015", worksheet.outputs_energy_s110); end
  def test_outputs_energy_t110; assert_equal("2020", worksheet.outputs_energy_t110); end
  def test_outputs_energy_u110; assert_equal("2025", worksheet.outputs_energy_u110); end
  def test_outputs_energy_v110; assert_equal("2030", worksheet.outputs_energy_v110); end
  def test_outputs_energy_w110; assert_equal("2035", worksheet.outputs_energy_w110); end
  def test_outputs_energy_x110; assert_equal("2040", worksheet.outputs_energy_x110); end
  def test_outputs_energy_y110; assert_equal("2045", worksheet.outputs_energy_y110); end
  def test_outputs_energy_z110; assert_equal("2050", worksheet.outputs_energy_z110); end
  def test_outputs_energy_d111; assert_equal("Global nuclear fission", worksheet.outputs_energy_d111); end
  def test_outputs_energy_h111; assert_in_epsilon(4.19362582, worksheet.outputs_energy_h111, 0.002); end
  def test_outputs_energy_i111; assert_in_epsilon(7.8046283700000005, worksheet.outputs_energy_i111, 0.002); end
  def test_outputs_energy_j111; assert_in_epsilon(16.30822419, worksheet.outputs_energy_j111, 0.002); end
  def test_outputs_energy_k111; assert_in_epsilon(22.00642022, worksheet.outputs_energy_k111, 0.002); end
  def test_outputs_energy_l111; assert_in_epsilon(25.464435710000004, worksheet.outputs_energy_l111, 0.002); end
  def test_outputs_energy_m111; assert_in_epsilon(28.28553115, worksheet.outputs_energy_m111, 0.002); end
  def test_outputs_energy_n111; assert_in_epsilon(30.221805240000002, worksheet.outputs_energy_n111, 0.002); end
  def test_outputs_energy_o111; assert_in_epsilon(30.10136047, worksheet.outputs_energy_o111, 0.002); end
  def test_outputs_energy_p111; assert_in_epsilon(28.219279020000002, worksheet.outputs_energy_p111, 0.002); end
  def test_outputs_energy_r111; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_r111, 0.002); end
  def test_outputs_energy_s111; assert_in_epsilon(29.87001951581473, worksheet.outputs_energy_s111, 0.002); end
  def test_outputs_energy_t111; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_t111, 0.002); end
  def test_outputs_energy_u111; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_u111, 0.002); end
  def test_outputs_energy_v111; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_v111, 0.002); end
  def test_outputs_energy_w111; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_w111, 0.002); end
  def test_outputs_energy_x111; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_x111, 0.002); end
  def test_outputs_energy_y111; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_y111, 0.002); end
  def test_outputs_energy_z111; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_z111, 0.002); end
  def test_outputs_energy_d113; assert_equal("Global solar, wind, wave and tidal", worksheet.outputs_energy_d113); end
  def test_outputs_energy_h113; assert_in_delta(0.0020015000000000002, worksheet.outputs_energy_h113, 0.002); end
  def test_outputs_energy_i113; assert_in_delta(0.00299071, worksheet.outputs_energy_i113, 0.002); end
  def test_outputs_energy_j113; assert_in_delta(0.01511665, worksheet.outputs_energy_j113, 0.002); end
  def test_outputs_energy_k113; assert_in_delta(0.09888171, worksheet.outputs_energy_k113, 0.002); end
  def test_outputs_energy_l113; assert_in_delta(0.13671401, worksheet.outputs_energy_l113, 0.002); end
  def test_outputs_energy_m113; assert_in_delta(0.33011757999999997, worksheet.outputs_energy_m113, 0.002); end
  def test_outputs_energy_n113; assert_in_delta(0.6894200899999999, worksheet.outputs_energy_n113, 0.002); end
  def test_outputs_energy_o113; assert_in_epsilon(1.98106908, worksheet.outputs_energy_o113, 0.002); end
  def test_outputs_energy_p113; assert_in_epsilon(2.55947734, worksheet.outputs_energy_p113, 0.002); end
  def test_outputs_energy_r113; assert_in_epsilon(1.835384616144, worksheet.outputs_energy_r113, 0.002); end
  def test_outputs_energy_s113; assert_in_epsilon(3.446450807984755, worksheet.outputs_energy_s113, 0.002); end
  def test_outputs_energy_t113; assert_in_epsilon(4.435826167076694, worksheet.outputs_energy_t113, 0.002); end
  def test_outputs_energy_u113; assert_in_epsilon(5.075782974158291, worksheet.outputs_energy_u113, 0.002); end
  def test_outputs_energy_v113; assert_in_epsilon(5.411762193297449, worksheet.outputs_energy_v113, 0.002); end
  def test_outputs_energy_w113; assert_in_epsilon(4.873570487771148, worksheet.outputs_energy_w113, 0.002); end
  def test_outputs_energy_x113; assert_in_epsilon(5.7255696711834405, worksheet.outputs_energy_x113, 0.002); end
  def test_outputs_energy_y113; assert_in_epsilon(8.944207940911523, worksheet.outputs_energy_y113, 0.002); end
  def test_outputs_energy_z113; assert_in_epsilon(11.457227449909787, worksheet.outputs_energy_z113, 0.002); end
  def test_outputs_energy_d115; assert_equal("Global geothermal", worksheet.outputs_energy_d115); end
  def test_outputs_energy_h115; assert_in_delta(0.30633308, worksheet.outputs_energy_h115, 0.002); end
  def test_outputs_energy_i115; assert_in_delta(0.51899125, worksheet.outputs_energy_i115, 0.002); end
  def test_outputs_energy_j115; assert_in_delta(0.87833525, worksheet.outputs_energy_j115, 0.002); end
  def test_outputs_energy_k115; assert_in_epsilon(1.42030705, worksheet.outputs_energy_k115, 0.002); end
  def test_outputs_energy_l115; assert_in_epsilon(1.64006674, worksheet.outputs_energy_l115, 0.002); end
  def test_outputs_energy_m115; assert_in_epsilon(2.1821505699999997, worksheet.outputs_energy_m115, 0.002); end
  def test_outputs_energy_n115; assert_in_epsilon(2.25915872, worksheet.outputs_energy_n115, 0.002); end
  def test_outputs_energy_o115; assert_in_epsilon(2.70416419, worksheet.outputs_energy_o115, 0.002); end
  def test_outputs_energy_p115; assert_in_epsilon(2.75792299, worksheet.outputs_energy_p115, 0.002); end
  def test_outputs_energy_r115; assert_in_epsilon(2.6331345863999998, worksheet.outputs_energy_r115, 0.002); end
  def test_outputs_energy_s115; assert_in_epsilon(3.333192775560331, worksheet.outputs_energy_s115, 0.002); end
  def test_outputs_energy_t115; assert_in_epsilon(4.05129719053816, worksheet.outputs_energy_t115, 0.002); end
  def test_outputs_energy_u115; assert_in_epsilon(4.604258176820889, worksheet.outputs_energy_u115, 0.002); end
  def test_outputs_energy_v115; assert_in_epsilon(5.397928321023374, worksheet.outputs_energy_v115, 0.002); end
  def test_outputs_energy_w115; assert_in_epsilon(8.324611130012148, worksheet.outputs_energy_w115, 0.002); end
  def test_outputs_energy_x115; assert_in_epsilon(10.340892269938646, worksheet.outputs_energy_x115, 0.002); end
  def test_outputs_energy_y115; assert_in_epsilon(14.435253893337357, worksheet.outputs_energy_y115, 0.002); end
  def test_outputs_energy_z115; assert_in_epsilon(18.07530311459353, worksheet.outputs_energy_z115, 0.002); end
  def test_outputs_energy_d117; assert_equal("Global hydro", worksheet.outputs_energy_d117); end
  def test_outputs_energy_h117; assert_in_epsilon(5.19828432, worksheet.outputs_energy_h117, 0.002); end
  def test_outputs_energy_i117; assert_in_epsilon(6.1818085300000005, worksheet.outputs_energy_i117, 0.002); end
  def test_outputs_energy_j117; assert_in_epsilon(7.10472662, worksheet.outputs_energy_j117, 0.002); end
  def test_outputs_energy_k117; assert_in_epsilon(7.721542830000001, worksheet.outputs_energy_k117, 0.002); end
  def test_outputs_energy_l117; assert_in_epsilon(8.93036678, worksheet.outputs_energy_l117, 0.002); end
  def test_outputs_energy_m117; assert_in_epsilon(9.43535406, worksheet.outputs_energy_m117, 0.002); end
  def test_outputs_energy_n117; assert_in_epsilon(10.548209940000001, worksheet.outputs_energy_n117, 0.002); end
  def test_outputs_energy_o117; assert_in_epsilon(12.39218819, worksheet.outputs_energy_o117, 0.002); end
  def test_outputs_energy_p117; assert_in_epsilon(12.56761896, worksheet.outputs_energy_p117, 0.002); end
  def test_outputs_energy_r117; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r117, 0.002); end
  def test_outputs_energy_s117; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s117, 0.002); end
  def test_outputs_energy_t117; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t117, 0.002); end
  def test_outputs_energy_u117; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u117, 0.002); end
  def test_outputs_energy_v117; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v117, 0.002); end
  def test_outputs_energy_w117; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w117, 0.002); end
  def test_outputs_energy_x117; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x117, 0.002); end
  def test_outputs_energy_y117; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y117, 0.002); end
  def test_outputs_energy_z117; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z117, 0.002); end
  def test_outputs_energy_d119; assert_equal("Global bioenergy and waste", worksheet.outputs_energy_d119); end
  def test_outputs_energy_f119; assert_equal("Includes non-renewable waste", worksheet.outputs_energy_f119); end
  def test_outputs_energy_h119; assert_in_epsilon(27.98767366, worksheet.outputs_energy_h119, 0.002); end
  def test_outputs_energy_i119; assert_in_epsilon(31.29700324, worksheet.outputs_energy_i119, 0.002); end
  def test_outputs_energy_j119; assert_in_epsilon(34.98284341, worksheet.outputs_energy_j119, 0.002); end
  def test_outputs_energy_k119; assert_in_epsilon(37.95396458, worksheet.outputs_energy_k119, 0.002); end
  def test_outputs_energy_l119; assert_in_epsilon(40.54645287, worksheet.outputs_energy_l119, 0.002); end
  def test_outputs_energy_m119; assert_in_epsilon(43.24484074, worksheet.outputs_energy_m119, 0.002); end
  def test_outputs_energy_n119; assert_in_epsilon(47.20029634, worksheet.outputs_energy_n119, 0.002); end
  def test_outputs_energy_o119; assert_in_epsilon(54.22172151, worksheet.outputs_energy_o119, 0.002); end
  def test_outputs_energy_p119; assert_in_epsilon(54.93713229, worksheet.outputs_energy_p119, 0.002); end
  def test_outputs_energy_r119; assert_in_epsilon(54.95978748959785, worksheet.outputs_energy_r119, 0.002); end
  def test_outputs_energy_s119; assert_in_epsilon(55.38238548421626, worksheet.outputs_energy_s119, 0.002); end
  def test_outputs_energy_t119; assert_in_epsilon(55.69236093063955, worksheet.outputs_energy_t119, 0.002); end
  def test_outputs_energy_u119; assert_in_epsilon(55.91246365799694, worksheet.outputs_energy_u119, 0.002); end
  def test_outputs_energy_v119; assert_in_epsilon(56.16254471416842, worksheet.outputs_energy_v119, 0.002); end
  def test_outputs_energy_w119; assert_in_epsilon(56.740839517839994, worksheet.outputs_energy_w119, 0.002); end
  def test_outputs_energy_x119; assert_in_epsilon(57.27678648250382, worksheet.outputs_energy_x119, 0.002); end
  def test_outputs_energy_y119; assert_in_epsilon(58.361978350622316, worksheet.outputs_energy_y119, 0.002); end
  def test_outputs_energy_z119; assert_in_epsilon(59.35192551164495, worksheet.outputs_energy_z119, 0.002); end
  def test_outputs_energy_d121; assert_equal("Global heat", worksheet.outputs_energy_d121); end
  def test_outputs_energy_h121; assert_in_delta(0.0, (worksheet.outputs_energy_h121||0), 0.002); end
  def test_outputs_energy_i121; assert_in_delta(0.0, (worksheet.outputs_energy_i121||0), 0.002); end
  def test_outputs_energy_j121; assert_in_delta(0.0, (worksheet.outputs_energy_j121||0), 0.002); end
  def test_outputs_energy_k121; assert_in_delta(0.00596866, worksheet.outputs_energy_k121, 0.002); end
  def test_outputs_energy_l121; assert_in_delta(0.01832307, worksheet.outputs_energy_l121, 0.002); end
  def test_outputs_energy_m121; assert_in_delta(0.0302848, worksheet.outputs_energy_m121, 0.002); end
  def test_outputs_energy_n121; assert_in_delta(0.03805726, worksheet.outputs_energy_n121, 0.002); end
  def test_outputs_energy_o121; assert_in_delta(0.04253198, worksheet.outputs_energy_o121, 0.002); end
  def test_outputs_energy_p121; assert_in_delta(0.04491708, worksheet.outputs_energy_p121, 0.002); end
  def test_outputs_energy_r121; assert_in_epsilon(4.838497586627763, worksheet.outputs_energy_r121, 0.002); end
  def test_outputs_energy_s121; assert_in_epsilon(5.562592127353522, worksheet.outputs_energy_s121, 0.002); end
  def test_outputs_energy_t121; assert_in_epsilon(6.5915502231697465, worksheet.outputs_energy_t121, 0.002); end
  def test_outputs_energy_u121; assert_in_epsilon(7.688096772541612, worksheet.outputs_energy_u121, 0.002); end
  def test_outputs_energy_v121; assert_in_epsilon(8.829723643457369, worksheet.outputs_energy_v121, 0.002); end
  def test_outputs_energy_w121; assert_in_epsilon(9.980445203849193, worksheet.outputs_energy_w121, 0.002); end
  def test_outputs_energy_x121; assert_in_epsilon(11.14339862628133, worksheet.outputs_energy_x121, 0.002); end
  def test_outputs_energy_y121; assert_in_epsilon(12.274974083635156, worksheet.outputs_energy_y121, 0.002); end
  def test_outputs_energy_z121; assert_in_epsilon(13.381832968790896, worksheet.outputs_energy_z121, 0.002); end
  def test_outputs_energy_d123; assert_equal("Global coal and peat", worksheet.outputs_energy_d123); end
  def test_outputs_energy_h123; assert_in_epsilon(64.46762364, worksheet.outputs_energy_h123, 0.002); end
  def test_outputs_energy_i123; assert_in_epsilon(74.84613603, worksheet.outputs_energy_i123, 0.002); end
  def test_outputs_energy_j123; assert_in_epsilon(84.35058561, worksheet.outputs_energy_j123, 0.002); end
  def test_outputs_energy_k123; assert_in_epsilon(93.38481894, worksheet.outputs_energy_k123, 0.002); end
  def test_outputs_energy_l123; assert_in_epsilon(93.03324736, worksheet.outputs_energy_l123, 0.002); end
  def test_outputs_energy_m123; assert_in_epsilon(98.72034811, worksheet.outputs_energy_m123, 0.002); end
  def test_outputs_energy_n123; assert_in_epsilon(124.50467193, worksheet.outputs_energy_n123, 0.002); end
  def test_outputs_energy_o123; assert_in_epsilon(150.53606094, worksheet.outputs_energy_o123, 0.002); end
  def test_outputs_energy_p123; assert_in_epsilon(158.09611592, worksheet.outputs_energy_p123, 0.002); end
  def test_outputs_energy_r123; assert_in_epsilon(180.6642308098179, worksheet.outputs_energy_r123, 0.002); end
  def test_outputs_energy_s123; assert_in_epsilon(182.6331438242346, worksheet.outputs_energy_s123, 0.002); end
  def test_outputs_energy_t123; assert_in_epsilon(193.24002087645243, worksheet.outputs_energy_t123, 0.002); end
  def test_outputs_energy_u123; assert_in_epsilon(214.42856557665675, worksheet.outputs_energy_u123, 0.002); end
  def test_outputs_energy_v123; assert_in_epsilon(230.96096897735788, worksheet.outputs_energy_v123, 0.002); end
  def test_outputs_energy_w123; assert_in_epsilon(243.64696188923077, worksheet.outputs_energy_w123, 0.002); end
  def test_outputs_energy_x123; assert_in_epsilon(252.1094473165332, worksheet.outputs_energy_x123, 0.002); end
  def test_outputs_energy_y123; assert_in_epsilon(246.68506243420256, worksheet.outputs_energy_y123, 0.002); end
  def test_outputs_energy_z123; assert_in_epsilon(244.3096353420925, worksheet.outputs_energy_z123, 0.002); end
  def test_outputs_energy_d125; assert_equal("Global oil ", worksheet.outputs_energy_d125); end
  def test_outputs_energy_h125; assert_in_epsilon(116.5233284, worksheet.outputs_energy_h125, 0.002); end
  def test_outputs_energy_i125; assert_in_epsilon(131.85643926000003, worksheet.outputs_energy_i125, 0.002); end
  def test_outputs_energy_j125; assert_in_epsilon(122.84000791, worksheet.outputs_energy_j125, 0.002); end
  def test_outputs_energy_k125; assert_in_epsilon(137.87919456, worksheet.outputs_energy_k125, 0.002); end
  def test_outputs_energy_l125; assert_in_epsilon(143.51359745, worksheet.outputs_energy_l125, 0.002); end
  def test_outputs_energy_m125; assert_in_epsilon(156.74377747, worksheet.outputs_energy_m125, 0.002); end
  def test_outputs_energy_n125; assert_in_epsilon(171.78327319000002, worksheet.outputs_energy_n125, 0.002); end
  def test_outputs_energy_o125; assert_in_epsilon(175.91941010000002, worksheet.outputs_energy_o125, 0.002); end
  def test_outputs_energy_p125; assert_in_epsilon(176.66494085000002, worksheet.outputs_energy_p125, 0.002); end
  def test_outputs_energy_r125; assert_in_epsilon(177.6479519504388, worksheet.outputs_energy_r125, 0.002); end
  def test_outputs_energy_s125; assert_in_epsilon(188.0527483016532, worksheet.outputs_energy_s125, 0.002); end
  def test_outputs_energy_t125; assert_in_epsilon(215.4396639565267, worksheet.outputs_energy_t125, 0.002); end
  def test_outputs_energy_u125; assert_in_epsilon(232.1559259325896, worksheet.outputs_energy_u125, 0.002); end
  def test_outputs_energy_v125; assert_in_epsilon(252.82064364865593, worksheet.outputs_energy_v125, 0.002); end
  def test_outputs_energy_w125; assert_in_epsilon(262.3324255827043, worksheet.outputs_energy_w125, 0.002); end
  def test_outputs_energy_x125; assert_in_epsilon(276.7374477188204, worksheet.outputs_energy_x125, 0.002); end
  def test_outputs_energy_y125; assert_in_epsilon(292.93255893304996, worksheet.outputs_energy_y125, 0.002); end
  def test_outputs_energy_z125; assert_in_epsilon(306.80696142233325, worksheet.outputs_energy_z125, 0.002); end
  def test_outputs_energy_d127; assert_equal("Global gas ", worksheet.outputs_energy_d127); end
  def test_outputs_energy_h127; assert_in_epsilon(41.88575614, worksheet.outputs_energy_h127, 0.002); end
  def test_outputs_energy_i127; assert_in_epsilon(51.657453589999996, worksheet.outputs_energy_i127, 0.002); end
  def test_outputs_energy_j127; assert_in_epsilon(59.13014466, worksheet.outputs_energy_j127, 0.002); end
  def test_outputs_energy_k127; assert_in_epsilon(69.82757047999999, worksheet.outputs_energy_k127, 0.002); end
  def test_outputs_energy_l127; assert_in_epsilon(75.88166314, worksheet.outputs_energy_l127, 0.002); end
  def test_outputs_energy_m127; assert_in_epsilon(86.75456712, worksheet.outputs_energy_m127, 0.002); end
  def test_outputs_energy_n127; assert_in_epsilon(99.02950624, worksheet.outputs_energy_n127, 0.002); end
  def test_outputs_energy_o127; assert_in_epsilon(114.72290836, worksheet.outputs_energy_o127, 0.002); end
  def test_outputs_energy_p127; assert_in_epsilon(116.68415746000001, worksheet.outputs_energy_p127, 0.002); end
  def test_outputs_energy_r127; assert_in_epsilon(119.90406352063884, worksheet.outputs_energy_r127, 0.002); end
  def test_outputs_energy_s127; assert_in_epsilon(123.33755314071672, worksheet.outputs_energy_s127, 0.002); end
  def test_outputs_energy_t127; assert_in_epsilon(133.71320717808786, worksheet.outputs_energy_t127, 0.002); end
  def test_outputs_energy_u127; assert_in_epsilon(145.0516174547396, worksheet.outputs_energy_u127, 0.002); end
  def test_outputs_energy_v127; assert_in_epsilon(155.9899612260687, worksheet.outputs_energy_v127, 0.002); end
  def test_outputs_energy_w127; assert_in_epsilon(167.44540660580472, worksheet.outputs_energy_w127, 0.002); end
  def test_outputs_energy_x127; assert_in_epsilon(184.20969522057604, worksheet.outputs_energy_x127, 0.002); end
  def test_outputs_energy_y127; assert_in_epsilon(202.7831392457193, worksheet.outputs_energy_y127, 0.002); end
  def test_outputs_energy_z127; assert_in_epsilon(223.14283640957504, worksheet.outputs_energy_z127, 0.002); end
  def test_outputs_energy_c467; assert_equal("Description", worksheet.outputs_energy_c467); end
  def test_outputs_energy_r467; assert_in_epsilon(2011.0, worksheet.outputs_energy_r467, 0.002); end
  def test_outputs_energy_s467; assert_equal("2015", worksheet.outputs_energy_s467); end
  def test_outputs_energy_t467; assert_equal("2020", worksheet.outputs_energy_t467); end
  def test_outputs_energy_u467; assert_equal("2025", worksheet.outputs_energy_u467); end
  def test_outputs_energy_v467; assert_equal("2030", worksheet.outputs_energy_v467); end
  def test_outputs_energy_w467; assert_equal("2035", worksheet.outputs_energy_w467); end
  def test_outputs_energy_x467; assert_equal("2040", worksheet.outputs_energy_x467); end
  def test_outputs_energy_y467; assert_equal("2045", worksheet.outputs_energy_y467); end
  def test_outputs_energy_z467; assert_equal("2050", worksheet.outputs_energy_z467); end
  def test_outputs_energy_c468; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_c468); end
  def test_outputs_energy_i468; assert_equal("G.M.02", worksheet.outputs_energy_i468); end
  def test_outputs_energy_r468; assert_in_epsilon(1.3689321930948124, worksheet.outputs_energy_r468, 0.002); end
  def test_outputs_energy_s468; assert_in_epsilon(1.5199408073465115, worksheet.outputs_energy_s468, 0.002); end
  def test_outputs_energy_t468; assert_in_epsilon(1.6842116180412907, worksheet.outputs_energy_t468, 0.002); end
  def test_outputs_energy_u468; assert_in_epsilon(1.928762859908468, worksheet.outputs_energy_u468, 0.002); end
  def test_outputs_energy_v468; assert_in_epsilon(2.1890102119860084, worksheet.outputs_energy_v468, 0.002); end
  def test_outputs_energy_w468; assert_in_epsilon(2.4531914837333817, worksheet.outputs_energy_w468, 0.002); end
  def test_outputs_energy_x468; assert_in_epsilon(2.749078834795957, worksheet.outputs_energy_x468, 0.002); end
  def test_outputs_energy_y468; assert_in_epsilon(3.0690407739360577, worksheet.outputs_energy_y468, 0.002); end
  def test_outputs_energy_z468; assert_in_epsilon(3.4279030347206105, worksheet.outputs_energy_z468, 0.002); end
  def test_outputs_energy_c469; assert_equal("Aluminium.Primary", worksheet.outputs_energy_c469); end
  def test_outputs_energy_i469; assert_equal("G.M.02", worksheet.outputs_energy_i469); end
  def test_outputs_energy_r469; assert_in_epsilon(2.7584780625440373, worksheet.outputs_energy_r469, 0.002); end
  def test_outputs_energy_s469; assert_in_epsilon(3.0470758623084637, worksheet.outputs_energy_s469, 0.002); end
  def test_outputs_energy_t469; assert_in_epsilon(3.3570801405964152, worksheet.outputs_energy_t469, 0.002); end
  def test_outputs_energy_u469; assert_in_epsilon(3.8224159301751355, worksheet.outputs_energy_u469, 0.002); end
  def test_outputs_energy_v469; assert_in_epsilon(4.313068791510379, worksheet.outputs_energy_v469, 0.002); end
  def test_outputs_energy_w469; assert_in_epsilon(4.805458127876107, worksheet.outputs_energy_w469, 0.002); end
  def test_outputs_energy_x469; assert_in_epsilon(5.353531760740598, worksheet.outputs_energy_x469, 0.002); end
  def test_outputs_energy_y469; assert_in_epsilon(5.94142474069983, worksheet.outputs_energy_y469, 0.002); end
  def test_outputs_energy_z469; assert_in_epsilon(6.59684008091053, worksheet.outputs_energy_z469, 0.002); end
  def test_outputs_energy_c470; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_c470); end
  def test_outputs_energy_i470; assert_equal("G.M.02", worksheet.outputs_energy_i470); end
  def test_outputs_energy_r470; assert_in_delta(0.26361993307490655, worksheet.outputs_energy_r470, 0.002); end
  def test_outputs_energy_s470; assert_in_delta(0.27032465849615295, worksheet.outputs_energy_s470, 0.002); end
  def test_outputs_energy_t470; assert_in_delta(0.26354369501781594, worksheet.outputs_energy_t470, 0.002); end
  def test_outputs_energy_u470; assert_in_delta(0.26351571713876293, worksheet.outputs_energy_u470, 0.002); end
  def test_outputs_energy_v470; assert_in_delta(0.2586267225432753, worksheet.outputs_energy_v470, 0.002); end
  def test_outputs_energy_w470; assert_in_delta(0.24759164942913187, worksheet.outputs_energy_w470, 0.002); end
  def test_outputs_energy_x470; assert_in_delta(0.2332616034059938, worksheet.outputs_energy_x470, 0.002); end
  def test_outputs_energy_y470; assert_in_delta(0.2142940978354198, worksheet.outputs_energy_y470, 0.002); end
  def test_outputs_energy_z470; assert_in_delta(0.19114351300662855, worksheet.outputs_energy_z470, 0.002); end
  def test_outputs_energy_c471; assert_equal("Total", worksheet.outputs_energy_c471); end
  def test_outputs_energy_r471; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r471, 0.002); end
  def test_outputs_energy_s471; assert_in_epsilon(4.837341328151129, worksheet.outputs_energy_s471, 0.002); end
  def test_outputs_energy_t471; assert_in_epsilon(5.304835453655522, worksheet.outputs_energy_t471, 0.002); end
  def test_outputs_energy_u471; assert_in_epsilon(6.014694507222366, worksheet.outputs_energy_u471, 0.002); end
  def test_outputs_energy_v471; assert_in_epsilon(6.760705726039663, worksheet.outputs_energy_v471, 0.002); end
  def test_outputs_energy_w471; assert_in_epsilon(7.50624126103862, worksheet.outputs_energy_w471, 0.002); end
  def test_outputs_energy_x471; assert_in_epsilon(8.33587219894255, worksheet.outputs_energy_x471, 0.002); end
  def test_outputs_energy_y471; assert_in_epsilon(9.224759612471308, worksheet.outputs_energy_y471, 0.002); end
  def test_outputs_energy_z471; assert_in_epsilon(10.215886628637769, worksheet.outputs_energy_z471, 0.002); end
  def test_outputs_energy_r138; assert_in_epsilon(4.636459473060736, worksheet.outputs_energy_r138, 0.002); end
  def test_outputs_energy_r140; assert_in_epsilon(15.40635993385157, worksheet.outputs_energy_r140, 0.002); end
  def test_outputs_energy_r142; assert_in_epsilon(11.875, worksheet.outputs_energy_r142, 0.002); end
  def test_outputs_energy_r144; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_r144, 0.002); end
  def test_outputs_energy_z138; assert_in_epsilon(7.264578817556409, worksheet.outputs_energy_z138, 0.002); end
  def test_outputs_energy_z140; assert_in_epsilon(13.618193876459015, worksheet.outputs_energy_z140, 0.002); end
  def test_outputs_energy_z142; assert_in_epsilon(27.19758064516129, worksheet.outputs_energy_z142, 0.002); end
  def test_outputs_energy_z144; assert_in_epsilon(9.771654172468239, worksheet.outputs_energy_z144, 0.002); end
  def test_outputs_energy_d154; assert_equal("Losses", worksheet.outputs_energy_d154); end
  def test_outputs_energy_r154; assert_in_epsilon(3.9977608155712576, worksheet.outputs_energy_r154, 0.002); end
  def test_outputs_energy_s154; assert_in_epsilon(4.366446347999858, worksheet.outputs_energy_s154, 0.002); end
  def test_outputs_energy_t154; assert_in_epsilon(4.6041439840440805, worksheet.outputs_energy_t154, 0.002); end
  def test_outputs_energy_u154; assert_in_epsilon(4.786136068149978, worksheet.outputs_energy_u154, 0.002); end
  def test_outputs_energy_v154; assert_in_epsilon(4.916289906954837, worksheet.outputs_energy_v154, 0.002); end
  def test_outputs_energy_w154; assert_in_epsilon(4.997859808560264, worksheet.outputs_energy_w154, 0.002); end
  def test_outputs_energy_x154; assert_in_epsilon(5.029245547396918, worksheet.outputs_energy_x154, 0.002); end
  def test_outputs_energy_y154; assert_in_epsilon(5.000556082244476, worksheet.outputs_energy_y154, 0.002); end
  def test_outputs_energy_z154; assert_in_epsilon(4.920925446235721, worksheet.outputs_energy_z154, 0.002); end
  def test_outputs_energy_d155; assert_equal("Oversupply", worksheet.outputs_energy_d155); end
  def test_outputs_energy_r155; assert_in_delta(0.0, (worksheet.outputs_energy_r155||0), 0.002); end
  def test_outputs_energy_s155; assert_in_delta(0.0, (worksheet.outputs_energy_s155||0), 0.002); end
  def test_outputs_energy_t155; assert_in_delta(0.0, (worksheet.outputs_energy_t155||0), 0.002); end
  def test_outputs_energy_u155; assert_in_delta(0.0, (worksheet.outputs_energy_u155||0), 0.002); end
  def test_outputs_energy_v155; assert_in_delta(0.0, (worksheet.outputs_energy_v155||0), 0.002); end
  def test_outputs_energy_w155; assert_in_delta(0.0, (worksheet.outputs_energy_w155||0), 0.002); end
  def test_outputs_energy_x155; assert_in_delta(0.0, (worksheet.outputs_energy_x155||0), 0.002); end
  def test_outputs_energy_y155; assert_in_delta(0.0, (worksheet.outputs_energy_y155||0), 0.002); end
  def test_outputs_energy_z155; assert_in_delta(0.0, (worksheet.outputs_energy_z155||0), 0.002); end
  def test_outputs_energy_d156; assert_equal("Transport", worksheet.outputs_energy_d156); end
  def test_outputs_energy_r156; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r156, 0.002); end
  def test_outputs_energy_s156; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_s156, 0.002); end
  def test_outputs_energy_t156; assert_in_epsilon(4.974371484014922, worksheet.outputs_energy_t156, 0.002); end
  def test_outputs_energy_u156; assert_in_epsilon(5.945900516219489, worksheet.outputs_energy_u156, 0.002); end
  def test_outputs_energy_v156; assert_in_epsilon(7.006951265636585, worksheet.outputs_energy_v156, 0.002); end
  def test_outputs_energy_w156; assert_in_epsilon(8.162026749699242, worksheet.outputs_energy_w156, 0.002); end
  def test_outputs_energy_x156; assert_in_epsilon(9.415792306948514, worksheet.outputs_energy_x156, 0.002); end
  def test_outputs_energy_y156; assert_in_epsilon(10.773082977569354, worksheet.outputs_energy_y156, 0.002); end
  def test_outputs_energy_z156; assert_in_epsilon(12.23891129032258, worksheet.outputs_energy_z156, 0.002); end
  def test_outputs_energy_d157; assert_equal("Electricity (unabated thermal)", worksheet.outputs_energy_d157); end
  def test_outputs_energy_r157; assert_in_epsilon(4.8310407981897665, worksheet.outputs_energy_r157, 0.002); end
  def test_outputs_energy_s157; assert_in_epsilon(5.08404323060805, worksheet.outputs_energy_s157, 0.002); end
  def test_outputs_energy_t157; assert_in_epsilon(5.265784767823702, worksheet.outputs_energy_t157, 0.002); end
  def test_outputs_energy_u157; assert_in_epsilon(5.472606485241791, worksheet.outputs_energy_u157, 0.002); end
  def test_outputs_energy_v157; assert_in_epsilon(5.666635469386362, worksheet.outputs_energy_v157, 0.002); end
  def test_outputs_energy_w157; assert_in_epsilon(5.83543996714595, worksheet.outputs_energy_w157, 0.002); end
  def test_outputs_energy_x157; assert_in_epsilon(5.980484626882422, worksheet.outputs_energy_x157, 0.002); end
  def test_outputs_energy_y157; assert_in_epsilon(6.133731464082599, worksheet.outputs_energy_y157, 0.002); end
  def test_outputs_energy_z157; assert_in_epsilon(6.2511524217067675, worksheet.outputs_energy_z157, 0.002); end
  def test_outputs_energy_d158; assert_equal("Electricity (carbon capture and storage)", worksheet.outputs_energy_d158); end
  def test_outputs_energy_r158; assert_in_delta(0.0, (worksheet.outputs_energy_r158||0), 0.002); end
  def test_outputs_energy_s158; assert_in_delta(0.014570012729438371, worksheet.outputs_energy_s158, 0.002); end
  def test_outputs_energy_t158; assert_in_delta(0.027820023388540845, worksheet.outputs_energy_t158, 0.002); end
  def test_outputs_energy_u158; assert_in_delta(0.02404589053457793, worksheet.outputs_energy_u158, 0.002); end
  def test_outputs_energy_v158; assert_in_delta(0.022804805598332534, worksheet.outputs_energy_v158, 0.002); end
  def test_outputs_energy_w158; assert_in_delta(0.021104249023740838, worksheet.outputs_energy_w158, 0.002); end
  def test_outputs_energy_x158; assert_in_delta(0.017581666555353356, worksheet.outputs_energy_x158, 0.002); end
  def test_outputs_energy_y158; assert_in_delta(0.013231096201687534, worksheet.outputs_energy_y158, 0.002); end
  def test_outputs_energy_z158; assert_in_delta(0.010130702457885226, worksheet.outputs_energy_z158, 0.002); end
  def test_outputs_energy_d159; assert_equal("Buildings", worksheet.outputs_energy_d159); end
  def test_outputs_energy_r159; assert_in_epsilon(35.10494060924812, worksheet.outputs_energy_r159, 0.002); end
  def test_outputs_energy_s159; assert_in_epsilon(34.31698677597052, worksheet.outputs_energy_s159, 0.002); end
  def test_outputs_energy_t159; assert_in_epsilon(33.08104682612455, worksheet.outputs_energy_t159, 0.002); end
  def test_outputs_energy_u159; assert_in_epsilon(31.70719781235136, worksheet.outputs_energy_u159, 0.002); end
  def test_outputs_energy_v159; assert_in_epsilon(30.34822847491263, worksheet.outputs_energy_v159, 0.002); end
  def test_outputs_energy_w159; assert_in_epsilon(29.32934424685101, worksheet.outputs_energy_w159, 0.002); end
  def test_outputs_energy_x159; assert_in_epsilon(28.276667500466615, worksheet.outputs_energy_x159, 0.002); end
  def test_outputs_energy_y159; assert_in_epsilon(27.71266140652802, worksheet.outputs_energy_y159, 0.002); end
  def test_outputs_energy_z159; assert_in_epsilon(27.07304666366346, worksheet.outputs_energy_z159, 0.002); end
  def test_outputs_energy_d160; assert_equal("Manufacturing", worksheet.outputs_energy_d160); end
  def test_outputs_energy_r160; assert_in_epsilon(5.726127266588708, worksheet.outputs_energy_r160, 0.002); end
  def test_outputs_energy_s160; assert_in_epsilon(6.0124046428815605, worksheet.outputs_energy_s160, 0.002); end
  def test_outputs_energy_t160; assert_in_epsilon(6.239275845243755, worksheet.outputs_energy_t160, 0.002); end
  def test_outputs_energy_u160; assert_in_epsilon(6.476658885499748, worksheet.outputs_energy_u160, 0.002); end
  def test_outputs_energy_v160; assert_in_epsilon(6.70171679167966, worksheet.outputs_energy_v160, 0.002); end
  def test_outputs_energy_w160; assert_in_epsilon(6.895146496559789, worksheet.outputs_energy_w160, 0.002); end
  def test_outputs_energy_x160; assert_in_epsilon(7.057096834253994, worksheet.outputs_energy_x160, 0.002); end
  def test_outputs_energy_y160; assert_in_epsilon(7.228797323996178, worksheet.outputs_energy_y160, 0.002); end
  def test_outputs_energy_z160; assert_in_epsilon(7.357840987258533, worksheet.outputs_energy_z160, 0.002); end
  def test_outputs_energy_d137; assert_equal("Bioenergy", worksheet.outputs_energy_d137); end
  def test_outputs_energy_r137; assert_in_epsilon(2011.0, worksheet.outputs_energy_r137, 0.002); end
  def test_outputs_energy_s137; assert_equal("2015", worksheet.outputs_energy_s137); end
  def test_outputs_energy_t137; assert_equal("2020", worksheet.outputs_energy_t137); end
  def test_outputs_energy_u137; assert_equal("2025", worksheet.outputs_energy_u137); end
  def test_outputs_energy_v137; assert_equal("2030", worksheet.outputs_energy_v137); end
  def test_outputs_energy_w137; assert_equal("2035", worksheet.outputs_energy_w137); end
  def test_outputs_energy_x137; assert_equal("2040", worksheet.outputs_energy_x137); end
  def test_outputs_energy_y137; assert_equal("2045", worksheet.outputs_energy_y137); end
  def test_outputs_energy_z137; assert_equal("2050", worksheet.outputs_energy_z137); end
  def test_outputs_energy_d138; assert_equal("Waste", worksheet.outputs_energy_d138); end
  def test_outputs_energy_s138; assert_in_epsilon(5.716288590257487, worksheet.outputs_energy_s138, 0.002); end
  def test_outputs_energy_t138; assert_in_epsilon(5.965368862661819, worksheet.outputs_energy_t138, 0.002); end
  def test_outputs_energy_u138; assert_in_epsilon(6.191164681804312, worksheet.outputs_energy_u138, 0.002); end
  def test_outputs_energy_v138; assert_in_epsilon(6.4078613357107725, worksheet.outputs_energy_v138, 0.002); end
  def test_outputs_energy_w138; assert_in_epsilon(6.6289325902727905, worksheet.outputs_energy_w138, 0.002); end
  def test_outputs_energy_x138; assert_in_epsilon(6.853615746499254, worksheet.outputs_energy_x138, 0.002); end
  def test_outputs_energy_y138; assert_in_epsilon(7.054410494029212, worksheet.outputs_energy_y138, 0.002); end
  def test_outputs_energy_d140; assert_equal("Forest residues", worksheet.outputs_energy_d140); end
  def test_outputs_energy_s140; assert_in_epsilon(15.415402117714985, worksheet.outputs_energy_s140, 0.002); end
  def test_outputs_energy_t140; assert_in_epsilon(15.266424854998649, worksheet.outputs_energy_t140, 0.002); end
  def test_outputs_energy_u140; assert_in_epsilon(15.180928121233908, worksheet.outputs_energy_u140, 0.002); end
  def test_outputs_energy_v140; assert_in_epsilon(15.054533454943398, worksheet.outputs_energy_v140, 0.002); end
  def test_outputs_energy_w140; assert_in_epsilon(14.79809145133814, worksheet.outputs_energy_w140, 0.002); end
  def test_outputs_energy_x140; assert_in_epsilon(14.41510117610231, worksheet.outputs_energy_x140, 0.002); end
  def test_outputs_energy_y140; assert_in_epsilon(14.103137107065317, worksheet.outputs_energy_y140, 0.002); end
  def test_outputs_energy_d142; assert_equal("Bioenergy crops", worksheet.outputs_energy_d142); end
  def test_outputs_energy_s142; assert_in_epsilon(12.613341968911918, worksheet.outputs_energy_s142, 0.002); end
  def test_outputs_energy_t142; assert_in_epsilon(14.588069772650911, worksheet.outputs_energy_t142, 0.002); end
  def test_outputs_energy_u142; assert_in_epsilon(16.59745236122618, worksheet.outputs_energy_u142, 0.002); end
  def test_outputs_energy_v142; assert_in_epsilon(18.642410052809545, worksheet.outputs_energy_v142, 0.002); end
  def test_outputs_energy_w142; assert_in_epsilon(20.72389604415823, worksheet.outputs_energy_w142, 0.002); end
  def test_outputs_energy_x142; assert_in_epsilon(22.84289789209051, worksheet.outputs_energy_x142, 0.002); end
  def test_outputs_energy_y142; assert_in_epsilon(25.00043907579423, worksheet.outputs_energy_y142, 0.002); end
  def test_outputs_energy_d144; assert_equal("Traditional biomass", worksheet.outputs_energy_d144); end
  def test_outputs_energy_s144; assert_in_epsilon(20.13743480733188, worksheet.outputs_energy_s144, 0.002); end
  def test_outputs_energy_t144; assert_in_epsilon(18.372579440328174, worksheet.outputs_energy_t144, 0.002); end
  def test_outputs_energy_u144; assert_in_epsilon(16.443000493732548, worksheet.outputs_energy_u144, 0.002); end
  def test_outputs_energy_v144; assert_in_epsilon(14.557821870704695, worksheet.outputs_energy_v144, 0.002); end
  def test_outputs_energy_w144; assert_in_epsilon(13.090001432070835, worksheet.outputs_energy_w144, 0.002); end
  def test_outputs_energy_x144; assert_in_epsilon(11.66525366781175, worksheet.outputs_energy_x144, 0.002); end
  def test_outputs_energy_y144; assert_in_epsilon(10.704073673733559, worksheet.outputs_energy_y144, 0.002); end
  def test_outputs_energy_d145; assert_equal("Total", worksheet.outputs_energy_d145); end
  def test_outputs_energy_r145; assert_in_epsilon(53.45986948959785, worksheet.outputs_energy_r145, 0.002); end
  def test_outputs_energy_s145; assert_in_epsilon(53.88246748421627, worksheet.outputs_energy_s145, 0.002); end
  def test_outputs_energy_t145; assert_in_epsilon(54.19244293063955, worksheet.outputs_energy_t145, 0.002); end
  def test_outputs_energy_u145; assert_in_epsilon(54.41254565799695, worksheet.outputs_energy_u145, 0.002); end
  def test_outputs_energy_v145; assert_in_epsilon(54.662626714168404, worksheet.outputs_energy_v145, 0.002); end
  def test_outputs_energy_w145; assert_in_epsilon(55.24092151783999, worksheet.outputs_energy_w145, 0.002); end
  def test_outputs_energy_x145; assert_in_epsilon(55.77686848250383, worksheet.outputs_energy_x145, 0.002); end
  def test_outputs_energy_y145; assert_in_epsilon(56.862060350622315, worksheet.outputs_energy_y145, 0.002); end
  def test_outputs_energy_z145; assert_in_epsilon(57.85200751164495, worksheet.outputs_energy_z145, 0.002); end
  def test_outputs_energy_d146; assert_equal("Biocrops unused", worksheet.outputs_energy_d146); end
  def test_outputs_energy_r146; assert_in_delta(0.0, (worksheet.outputs_energy_r146||0), 0.002); end
  def test_outputs_energy_s146; assert_in_delta(0.0, (worksheet.outputs_energy_s146||0), 0.002); end
  def test_outputs_energy_t146; assert_in_delta(0.0, (worksheet.outputs_energy_t146||0), 0.002); end
  def test_outputs_energy_u146; assert_in_delta(0.0, (worksheet.outputs_energy_u146||0), 0.002); end
  def test_outputs_energy_v146; assert_in_delta(0.0, (worksheet.outputs_energy_v146||0), 0.002); end
  def test_outputs_energy_w146; assert_in_delta(0.0, (worksheet.outputs_energy_w146||0), 0.002); end
  def test_outputs_energy_x146; assert_in_delta(0.0, (worksheet.outputs_energy_x146||0), 0.002); end
  def test_outputs_energy_y146; assert_in_delta(0.0, (worksheet.outputs_energy_y146||0), 0.002); end
  def test_outputs_energy_z146; assert_in_delta(0.0, (worksheet.outputs_energy_z146||0), 0.002); end
  def test_outputs_energy_c437; assert_equal("Description", worksheet.outputs_energy_c437); end
  def test_outputs_energy_d437; assert_equal(".", worksheet.outputs_energy_d437); end
  def test_outputs_energy_e437; assert_equal("Notes", worksheet.outputs_energy_e437); end
  def test_outputs_energy_g437; assert_equal("..", worksheet.outputs_energy_g437); end
  def test_outputs_energy_h437; assert_equal("…", worksheet.outputs_energy_h437); end
  def test_outputs_energy_i437; assert_equal("….", worksheet.outputs_energy_i437); end
  def test_outputs_energy_j437; assert_equal("…..", worksheet.outputs_energy_j437); end
  def test_outputs_energy_k437; assert_equal("……", worksheet.outputs_energy_k437); end
  def test_outputs_energy_l437; assert_equal("…….", worksheet.outputs_energy_l437); end
  def test_outputs_energy_m437; assert_equal("……..", worksheet.outputs_energy_m437); end
  def test_outputs_energy_n437; assert_equal("……….", worksheet.outputs_energy_n437); end
  def test_outputs_energy_o437; assert_equal("………..", worksheet.outputs_energy_o437); end
  def test_outputs_energy_r437; assert_equal("2011", worksheet.outputs_energy_r437); end
  def test_outputs_energy_s437; assert_equal("2015", worksheet.outputs_energy_s437); end
  def test_outputs_energy_t437; assert_equal("2020", worksheet.outputs_energy_t437); end
  def test_outputs_energy_u437; assert_equal("2025", worksheet.outputs_energy_u437); end
  def test_outputs_energy_v437; assert_equal("2030", worksheet.outputs_energy_v437); end
  def test_outputs_energy_w437; assert_equal("2035", worksheet.outputs_energy_w437); end
  def test_outputs_energy_x437; assert_equal("2040", worksheet.outputs_energy_x437); end
  def test_outputs_energy_y437; assert_equal("2045", worksheet.outputs_energy_y437); end
  def test_outputs_energy_z437; assert_equal("2050", worksheet.outputs_energy_z437); end
  def test_outputs_energy_c438; assert_equal("Solid", worksheet.outputs_energy_c438); end
  def test_outputs_energy_r438; assert_in_epsilon(42.64841001653711, worksheet.outputs_energy_r438, 0.002); end
  def test_outputs_energy_s438; assert_in_epsilon(41.68486163608711, worksheet.outputs_energy_s438, 0.002); end
  def test_outputs_energy_t438; assert_in_epsilon(40.67173639341688, worksheet.outputs_energy_t438, 0.002); end
  def test_outputs_energy_u438; assert_in_epsilon(39.55179596992577, worksheet.outputs_energy_u438, 0.002); end
  def test_outputs_energy_v438; assert_in_epsilon(38.42755207919089, worksheet.outputs_energy_v438, 0.002); end
  def test_outputs_energy_w438; assert_in_epsilon(37.58049964867682, worksheet.outputs_energy_w438, 0.002); end
  def test_outputs_energy_x438; assert_in_epsilon(36.637455309280575, worksheet.outputs_energy_x438, 0.002); end
  def test_outputs_energy_y438; assert_in_epsilon(36.21400452175466, worksheet.outputs_energy_y438, 0.002); end
  def test_outputs_energy_z438; assert_in_epsilon(35.62875933924984, worksheet.outputs_energy_z438, 0.002); end
  def test_outputs_energy_c439; assert_equal("Liquid bioenergy", worksheet.outputs_energy_c439); end
  def test_outputs_energy_r439; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r439, 0.002); end
  def test_outputs_energy_s439; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_s439, 0.002); end
  def test_outputs_energy_t439; assert_in_epsilon(4.974371484014922, worksheet.outputs_energy_t439, 0.002); end
  def test_outputs_energy_u439; assert_in_epsilon(5.945900516219489, worksheet.outputs_energy_u439, 0.002); end
  def test_outputs_energy_v439; assert_in_epsilon(7.006951265636585, worksheet.outputs_energy_v439, 0.002); end
  def test_outputs_energy_w439; assert_in_epsilon(8.162026749699242, worksheet.outputs_energy_w439, 0.002); end
  def test_outputs_energy_x439; assert_in_epsilon(9.415792306948514, worksheet.outputs_energy_x439, 0.002); end
  def test_outputs_energy_y439; assert_in_epsilon(10.773082977569354, worksheet.outputs_energy_y439, 0.002); end
  def test_outputs_energy_z439; assert_in_epsilon(12.23891129032258, worksheet.outputs_energy_z439, 0.002); end
  def test_outputs_energy_c440; assert_equal("Gas", worksheet.outputs_energy_c440); end
  def test_outputs_energy_r440; assert_in_epsilon(3.013698657489478, worksheet.outputs_energy_r440, 0.002); end
  def test_outputs_energy_s440; assert_in_epsilon(3.743143026102454, worksheet.outputs_energy_s440, 0.002); end
  def test_outputs_energy_t440; assert_in_epsilon(3.9421910691636683, worksheet.outputs_energy_t440, 0.002); end
  def test_outputs_energy_u440; assert_in_epsilon(4.128713103701706, worksheet.outputs_energy_u440, 0.002); end
  def test_outputs_energy_v440; assert_in_epsilon(4.3118334623860965, worksheet.outputs_energy_v440, 0.002); end
  def test_outputs_energy_w440; assert_in_epsilon(4.500535310903666, worksheet.outputs_energy_w440, 0.002); end
  def test_outputs_energy_x440; assert_in_epsilon(4.6943753188778095, worksheet.outputs_energy_x440, 0.002); end
  def test_outputs_energy_y440; assert_in_epsilon(4.874416769053826, worksheet.outputs_energy_y440, 0.002); end
  def test_outputs_energy_z440; assert_in_epsilon(5.063411435836817, worksheet.outputs_energy_z440, 0.002); end
  def test_outputs_energy_c441; assert_equal("Losses", worksheet.outputs_energy_c441); end
  def test_outputs_energy_r441; assert_in_epsilon(3.9977608155712616, worksheet.outputs_energy_r441, 0.002); end
  def test_outputs_energy_s441; assert_in_epsilon(4.366446347999869, worksheet.outputs_energy_s441, 0.002); end
  def test_outputs_energy_t441; assert_in_epsilon(4.604143984044079, worksheet.outputs_energy_t441, 0.002); end
  def test_outputs_energy_u441; assert_in_epsilon(4.786136068149986, worksheet.outputs_energy_u441, 0.002); end
  def test_outputs_energy_v441; assert_in_epsilon(4.91628990695483, worksheet.outputs_energy_v441, 0.002); end
  def test_outputs_energy_w441; assert_in_epsilon(4.997859808560264, worksheet.outputs_energy_w441, 0.002); end
  def test_outputs_energy_x441; assert_in_epsilon(5.029245547396933, worksheet.outputs_energy_x441, 0.002); end
  def test_outputs_energy_y441; assert_in_epsilon(5.000556082244479, worksheet.outputs_energy_y441, 0.002); end
  def test_outputs_energy_z441; assert_in_epsilon(4.920925446235714, worksheet.outputs_energy_z441, 0.002); end
  def test_outputs_energy_c442; assert_equal("Solid oversupply", worksheet.outputs_energy_c442); end
  def test_outputs_energy_e442; assert_equal("solid global oversupply", worksheet.outputs_energy_e442); end
  def test_outputs_energy_r442; assert_in_delta(0.0, (worksheet.outputs_energy_r442||0), 0.002); end
  def test_outputs_energy_s442; assert_in_delta(0.0, (worksheet.outputs_energy_s442||0), 0.002); end
  def test_outputs_energy_t442; assert_in_delta(0.0, (worksheet.outputs_energy_t442||0), 0.002); end
  def test_outputs_energy_u442; assert_in_delta(0.0, (worksheet.outputs_energy_u442||0), 0.002); end
  def test_outputs_energy_v442; assert_in_delta(0.0, (worksheet.outputs_energy_v442||0), 0.002); end
  def test_outputs_energy_w442; assert_in_delta(0.0, (worksheet.outputs_energy_w442||0), 0.002); end
  def test_outputs_energy_x442; assert_in_delta(0.0, (worksheet.outputs_energy_x442||0), 0.002); end
  def test_outputs_energy_y442; assert_in_delta(0.0, (worksheet.outputs_energy_y442||0), 0.002); end
  def test_outputs_energy_z442; assert_in_delta(0.0, (worksheet.outputs_energy_z442||0), 0.002); end
  def test_outputs_energy_c443; assert_equal("Liquid oversupply", worksheet.outputs_energy_c443); end
  def test_outputs_energy_e443; assert_equal("liquid global oversupply", worksheet.outputs_energy_e443); end
  def test_outputs_energy_r443; assert_in_delta(0.0, (worksheet.outputs_energy_r443||0), 0.002); end
  def test_outputs_energy_s443; assert_in_delta(0.0, (worksheet.outputs_energy_s443||0), 0.002); end
  def test_outputs_energy_t443; assert_in_delta(0.0, (worksheet.outputs_energy_t443||0), 0.002); end
  def test_outputs_energy_u443; assert_in_delta(0.0, (worksheet.outputs_energy_u443||0), 0.002); end
  def test_outputs_energy_v443; assert_in_delta(0.0, (worksheet.outputs_energy_v443||0), 0.002); end
  def test_outputs_energy_w443; assert_in_delta(0.0, (worksheet.outputs_energy_w443||0), 0.002); end
  def test_outputs_energy_x443; assert_in_delta(0.0, (worksheet.outputs_energy_x443||0), 0.002); end
  def test_outputs_energy_y443; assert_in_delta(0.0, (worksheet.outputs_energy_y443||0), 0.002); end
  def test_outputs_energy_z443; assert_in_delta(0.0, (worksheet.outputs_energy_z443||0), 0.002); end
  def test_outputs_energy_d34; assert_equal("RESIDENTIAL", worksheet.outputs_energy_d34); end
  def test_outputs_energy_d35; assert_equal("Global Heating", worksheet.outputs_energy_d35); end
  def test_outputs_energy_p35; assert_in_epsilon(25.25, worksheet.outputs_energy_p35, 0.002); end
  def test_outputs_energy_r35; assert_in_epsilon(25.292160061938944, worksheet.outputs_energy_r35, 0.002); end
  def test_outputs_energy_s35; assert_in_epsilon(26.85317139395041, worksheet.outputs_energy_s35, 0.002); end
  def test_outputs_energy_t35; assert_in_epsilon(27.80025682604075, worksheet.outputs_energy_t35, 0.002); end
  def test_outputs_energy_u35; assert_in_epsilon(28.314027516305952, worksheet.outputs_energy_u35, 0.002); end
  def test_outputs_energy_v35; assert_in_epsilon(28.537441355569804, worksheet.outputs_energy_v35, 0.002); end
  def test_outputs_energy_w35; assert_in_epsilon(28.726097810328216, worksheet.outputs_energy_w35, 0.002); end
  def test_outputs_energy_x35; assert_in_epsilon(28.666071093528288, worksheet.outputs_energy_x35, 0.002); end
  def test_outputs_energy_y35; assert_in_epsilon(28.668973616467333, worksheet.outputs_energy_y35, 0.002); end
  def test_outputs_energy_z35; assert_in_epsilon(28.45510550591398, worksheet.outputs_energy_z35, 0.002); end
  def test_outputs_energy_d36; assert_equal("Global Cooling", worksheet.outputs_energy_d36); end
  def test_outputs_energy_p36; assert_in_epsilon(2.44, worksheet.outputs_energy_p36, 0.002); end
  def test_outputs_energy_r36; assert_in_epsilon(2.6984428076468663, worksheet.outputs_energy_r36, 0.002); end
  def test_outputs_energy_s36; assert_in_epsilon(3.4171458121997906, worksheet.outputs_energy_s36, 0.002); end
  def test_outputs_energy_t36; assert_in_epsilon(4.355271927846234, worksheet.outputs_energy_t36, 0.002); end
  def test_outputs_energy_u36; assert_in_epsilon(5.388386638963863, worksheet.outputs_energy_u36, 0.002); end
  def test_outputs_energy_v36; assert_in_epsilon(6.49242791223406, worksheet.outputs_energy_v36, 0.002); end
  def test_outputs_energy_w36; assert_in_epsilon(7.620927164817011, worksheet.outputs_energy_w36, 0.002); end
  def test_outputs_energy_x36; assert_in_epsilon(8.776916742421747, worksheet.outputs_energy_x36, 0.002); end
  def test_outputs_energy_y36; assert_in_epsilon(9.903360457599804, worksheet.outputs_energy_y36, 0.002); end
  def test_outputs_energy_z36; assert_in_epsilon(11.008847992756433, worksheet.outputs_energy_z36, 0.002); end
  def test_outputs_energy_d37; assert_equal("Global Hot water", worksheet.outputs_energy_d37); end
  def test_outputs_energy_p37; assert_in_epsilon(22.61, worksheet.outputs_energy_p37, 0.002); end
  def test_outputs_energy_r37; assert_in_epsilon(20.64814831202377, worksheet.outputs_energy_r37, 0.002); end
  def test_outputs_energy_s37; assert_in_epsilon(22.39416094135626, worksheet.outputs_energy_s37, 0.002); end
  def test_outputs_energy_t37; assert_in_epsilon(23.919669481473726, worksheet.outputs_energy_t37, 0.002); end
  def test_outputs_energy_u37; assert_in_epsilon(25.421094956504625, worksheet.outputs_energy_u37, 0.002); end
  def test_outputs_energy_v37; assert_in_epsilon(26.81743565027899, worksheet.outputs_energy_v37, 0.002); end
  def test_outputs_energy_w37; assert_in_epsilon(28.000686909155093, worksheet.outputs_energy_w37, 0.002); end
  def test_outputs_energy_x37; assert_in_epsilon(29.077221539751392, worksheet.outputs_energy_x37, 0.002); end
  def test_outputs_energy_y37; assert_in_epsilon(29.94165984498636, worksheet.outputs_energy_y37, 0.002); end
  def test_outputs_energy_z37; assert_in_epsilon(30.686157039619722, worksheet.outputs_energy_z37, 0.002); end
  def test_outputs_energy_d38; assert_equal("Global Appliances", worksheet.outputs_energy_d38); end
  def test_outputs_energy_p38; assert_in_epsilon(10.0, worksheet.outputs_energy_p38, 0.002); end
  def test_outputs_energy_r38; assert_in_epsilon(10.049316153808602, worksheet.outputs_energy_r38, 0.002); end
  def test_outputs_energy_s38; assert_in_epsilon(12.121796717015723, worksheet.outputs_energy_s38, 0.002); end
  def test_outputs_energy_t38; assert_in_epsilon(13.93131116530532, worksheet.outputs_energy_t38, 0.002); end
  def test_outputs_energy_u38; assert_in_epsilon(15.872288310586361, worksheet.outputs_energy_u38, 0.002); end
  def test_outputs_energy_v38; assert_in_epsilon(17.89506162050538, worksheet.outputs_energy_v38, 0.002); end
  def test_outputs_energy_w38; assert_in_epsilon(19.913592309097695, worksheet.outputs_energy_w38, 0.002); end
  def test_outputs_energy_x38; assert_in_epsilon(21.984637775674063, worksheet.outputs_energy_x38, 0.002); end
  def test_outputs_energy_y38; assert_in_epsilon(24.013673521607718, worksheet.outputs_energy_y38, 0.002); end
  def test_outputs_energy_z38; assert_in_epsilon(26.06768392290569, worksheet.outputs_energy_z38, 0.002); end
  def test_outputs_energy_d39; assert_equal("Global Cooking", worksheet.outputs_energy_d39); end
  def test_outputs_energy_p39; assert_in_epsilon(24.16, worksheet.outputs_energy_p39, 0.002); end
  def test_outputs_energy_r39; assert_in_epsilon(24.331916753204318, worksheet.outputs_energy_r39, 0.002); end
  def test_outputs_energy_s39; assert_in_epsilon(23.78985015284648, worksheet.outputs_energy_s39, 0.002); end
  def test_outputs_energy_t39; assert_in_epsilon(22.86631996006263, worksheet.outputs_energy_t39, 0.002); end
  def test_outputs_energy_u39; assert_in_epsilon(22.00942583911199, worksheet.outputs_energy_u39, 0.002); end
  def test_outputs_energy_v39; assert_in_epsilon(21.211794071221334, worksheet.outputs_energy_v39, 0.002); end
  def test_outputs_energy_w39; assert_in_epsilon(20.49146533692284, worksheet.outputs_energy_w39, 0.002); end
  def test_outputs_energy_x39; assert_in_epsilon(19.785055798011946, worksheet.outputs_energy_x39, 0.002); end
  def test_outputs_energy_y39; assert_in_epsilon(19.12075571391712, worksheet.outputs_energy_y39, 0.002); end
  def test_outputs_energy_z39; assert_in_epsilon(18.440677810392458, worksheet.outputs_energy_z39, 0.002); end
  def test_outputs_energy_d40; assert_equal("Global Lighting", worksheet.outputs_energy_d40); end
  def test_outputs_energy_p40; assert_in_epsilon(3.24, worksheet.outputs_energy_p40, 0.002); end
  def test_outputs_energy_r40; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_r40, 0.002); end
  def test_outputs_energy_s40; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_s40, 0.002); end
  def test_outputs_energy_t40; assert_in_epsilon(4.357570580283354, worksheet.outputs_energy_t40, 0.002); end
  def test_outputs_energy_u40; assert_in_epsilon(4.941603335928053, worksheet.outputs_energy_u40, 0.002); end
  def test_outputs_energy_v40; assert_in_epsilon(5.538572780268812, worksheet.outputs_energy_v40, 0.002); end
  def test_outputs_energy_w40; assert_in_epsilon(6.120916106638935, worksheet.outputs_energy_w40, 0.002); end
  def test_outputs_energy_x40; assert_in_epsilon(6.705470974521779, worksheet.outputs_energy_x40, 0.002); end
  def test_outputs_energy_y40; assert_in_epsilon(7.262692366939133, worksheet.outputs_energy_y40, 0.002); end
  def test_outputs_energy_z40; assert_in_epsilon(7.814139615574607, worksheet.outputs_energy_z40, 0.002); end
  def test_outputs_energy_d42; assert_equal("NON-RESIDENTIAL", worksheet.outputs_energy_d42); end
  def test_outputs_energy_d43; assert_equal("Global Heating", worksheet.outputs_energy_d43); end
  def test_outputs_energy_f43; assert_equal("Non-residential", worksheet.outputs_energy_f43); end
  def test_outputs_energy_p43; assert_in_epsilon(8.27, worksheet.outputs_energy_p43, 0.002); end
  def test_outputs_energy_r43; assert_in_epsilon(8.671483275853106, worksheet.outputs_energy_r43, 0.002); end
  def test_outputs_energy_s43; assert_in_epsilon(9.126906925859267, worksheet.outputs_energy_s43, 0.002); end
  def test_outputs_energy_t43; assert_in_epsilon(9.887943394681429, worksheet.outputs_energy_t43, 0.002); end
  def test_outputs_energy_u43; assert_in_epsilon(10.584480450100589, worksheet.outputs_energy_u43, 0.002); end
  def test_outputs_energy_v43; assert_in_epsilon(11.205626428902214, worksheet.outputs_energy_v43, 0.002); end
  def test_outputs_energy_w43; assert_in_epsilon(11.74415449751623, worksheet.outputs_energy_w43, 0.002); end
  def test_outputs_energy_x43; assert_in_epsilon(12.190753133576978, worksheet.outputs_energy_x43, 0.002); end
  def test_outputs_energy_y43; assert_in_epsilon(12.534525063637089, worksheet.outputs_energy_y43, 0.002); end
  def test_outputs_energy_z43; assert_in_epsilon(12.766422787389015, worksheet.outputs_energy_z43, 0.002); end
  def test_outputs_energy_d44; assert_equal("Global Cooling", worksheet.outputs_energy_d44); end
  def test_outputs_energy_f44; assert_equal("Non-residential", worksheet.outputs_energy_f44); end
  def test_outputs_energy_p44; assert_in_epsilon(1.96, worksheet.outputs_energy_p44, 0.002); end
  def test_outputs_energy_r44; assert_in_epsilon(1.9302063451193594, worksheet.outputs_energy_r44, 0.002); end
  def test_outputs_energy_s44; assert_in_epsilon(2.090978050779465, worksheet.outputs_energy_s44, 0.002); end
  def test_outputs_energy_t44; assert_in_epsilon(2.3576941522920514, worksheet.outputs_energy_t44, 0.002); end
  def test_outputs_energy_u44; assert_in_epsilon(2.627306510257056, worksheet.outputs_energy_u44, 0.002); end
  def test_outputs_energy_v44; assert_in_epsilon(2.896876876441524, worksheet.outputs_energy_v44, 0.002); end
  def test_outputs_energy_w44; assert_in_epsilon(3.1641419633036607, worksheet.outputs_energy_w44, 0.002); end
  def test_outputs_energy_x44; assert_in_epsilon(3.4260601602373315, worksheet.outputs_energy_x44, 0.002); end
  def test_outputs_energy_y44; assert_in_epsilon(3.6787900674567795, worksheet.outputs_energy_y44, 0.002); end
  def test_outputs_energy_z44; assert_in_epsilon(3.918565433960332, worksheet.outputs_energy_z44, 0.002); end
  def test_outputs_energy_d45; assert_equal("Global Appliances", worksheet.outputs_energy_d45); end
  def test_outputs_energy_f45; assert_equal("Non-residential", worksheet.outputs_energy_f45); end
  def test_outputs_energy_p45; assert_in_epsilon(12.36, worksheet.outputs_energy_p45, 0.002); end
  def test_outputs_energy_r45; assert_in_epsilon(11.576876918452358, worksheet.outputs_energy_r45, 0.002); end
  def test_outputs_energy_s45; assert_in_epsilon(12.475470437632243, worksheet.outputs_energy_s45, 0.002); end
  def test_outputs_energy_t45; assert_in_epsilon(13.61433972110449, worksheet.outputs_energy_t45, 0.002); end
  def test_outputs_energy_u45; assert_in_epsilon(14.696470536930734, worksheet.outputs_energy_u45, 0.002); end
  def test_outputs_energy_v45; assert_in_epsilon(15.710816554227419, worksheet.outputs_energy_v45, 0.002); end
  def test_outputs_energy_w45; assert_in_epsilon(16.651296275083077, worksheet.outputs_energy_w45, 0.002); end
  def test_outputs_energy_x45; assert_in_epsilon(17.508664827089643, worksheet.outputs_energy_x45, 0.002); end
  def test_outputs_energy_y45; assert_in_epsilon(18.270862481942626, worksheet.outputs_energy_y45, 0.002); end
  def test_outputs_energy_z45; assert_in_epsilon(18.927637270955895, worksheet.outputs_energy_z45, 0.002); end
  def test_outputs_energy_d46; assert_equal("Global Lighting", worksheet.outputs_energy_d46); end
  def test_outputs_energy_f46; assert_equal("Non-residential", worksheet.outputs_energy_f46); end
  def test_outputs_energy_p46; assert_in_epsilon(4.21, worksheet.outputs_energy_p46, 0.002); end
  def test_outputs_energy_r46; assert_in_epsilon(4.234995621034355, worksheet.outputs_energy_r46, 0.002); end
  def test_outputs_energy_s46; assert_in_epsilon(4.76447451343983, worksheet.outputs_energy_s46, 0.002); end
  def test_outputs_energy_t46; assert_in_epsilon(5.350794820265411, worksheet.outputs_energy_t46, 0.002); end
  def test_outputs_energy_u46; assert_in_epsilon(5.94894910899544, worksheet.outputs_energy_u46, 0.002); end
  def test_outputs_energy_v46; assert_in_epsilon(6.555338443662006, worksheet.outputs_energy_v46, 0.002); end
  def test_outputs_energy_w46; assert_in_epsilon(7.168051268873704, worksheet.outputs_energy_w46, 0.002); end
  def test_outputs_energy_x46; assert_in_epsilon(7.783528442736179, worksheet.outputs_energy_x46, 0.002); end
  def test_outputs_energy_y46; assert_in_epsilon(8.396446979358144, worksheet.outputs_energy_y46, 0.002); end
  def test_outputs_energy_z46; assert_in_epsilon(9.001613131879346, worksheet.outputs_energy_z46, 0.002); end
  def test_outputs_energy_d47; assert_equal("Global Other", worksheet.outputs_energy_d47); end
  def test_outputs_energy_f47; assert_equal("Non-residential", worksheet.outputs_energy_f47); end
  def test_outputs_energy_p47; assert_in_epsilon(3.57, worksheet.outputs_energy_p47, 0.002); end
  def test_outputs_energy_r47; assert_in_epsilon(3.616434616787921, worksheet.outputs_energy_r47, 0.002); end
  def test_outputs_energy_s47; assert_in_epsilon(3.8144569151957914, worksheet.outputs_energy_s47, 0.002); end
  def test_outputs_energy_t47; assert_in_epsilon(4.170012434414536, worksheet.outputs_energy_t47, 0.002); end
  def test_outputs_energy_u47; assert_in_epsilon(4.508741890001253, worksheet.outputs_energy_u47, 0.002); end
  def test_outputs_energy_v47; assert_in_epsilon(4.826946042286894, worksheet.outputs_energy_v47, 0.002); end
  def test_outputs_energy_w47; assert_in_epsilon(5.122420314846898, worksheet.outputs_energy_w47, 0.002); end
  def test_outputs_energy_x47; assert_in_epsilon(5.39196456271064, worksheet.outputs_energy_x47, 0.002); end
  def test_outputs_energy_y47; assert_in_epsilon(5.6314888846351066, worksheet.outputs_energy_y47, 0.002); end
  def test_outputs_energy_z47; assert_in_epsilon(5.837442321028545, worksheet.outputs_energy_z47, 0.002); end
  def test_outputs_energy_p368; assert_in_epsilon(2011.0, worksheet.outputs_energy_p368, 0.002); end
  def test_outputs_energy_r368; assert_in_epsilon(2011.0, worksheet.outputs_energy_r368, 0.002); end
  def test_outputs_energy_s368; assert_equal("2015", worksheet.outputs_energy_s368); end
  def test_outputs_energy_t368; assert_equal("2020", worksheet.outputs_energy_t368); end
  def test_outputs_energy_u368; assert_equal("2025", worksheet.outputs_energy_u368); end
  def test_outputs_energy_v368; assert_equal("2030", worksheet.outputs_energy_v368); end
  def test_outputs_energy_w368; assert_equal("2035", worksheet.outputs_energy_w368); end
  def test_outputs_energy_x368; assert_equal("2040", worksheet.outputs_energy_x368); end
  def test_outputs_energy_y368; assert_equal("2045", worksheet.outputs_energy_y368); end
  def test_outputs_energy_z368; assert_equal("2050", worksheet.outputs_energy_z368); end
  def test_outputs_energy_c369; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c369); end
  def test_outputs_energy_d369; assert_equal("G.C.01", worksheet.outputs_energy_d369); end
  def test_outputs_energy_e369; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e369); end
  def test_outputs_energy_i369; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i369); end
  def test_outputs_energy_j369; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j369); end
  def test_outputs_energy_k369; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k369); end
  def test_outputs_energy_l369; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l369); end
  def test_outputs_energy_m369; assert_equal("non-residential", worksheet.outputs_energy_m369); end
  def test_outputs_energy_p369; assert_in_epsilon(16.66424835831506, worksheet.outputs_energy_p369, 0.002); end
  def test_outputs_energy_r369; assert_in_epsilon(15.060656702653787, worksheet.outputs_energy_r369, 0.002); end
  def test_outputs_energy_s369; assert_in_epsilon(15.833304091433988, worksheet.outputs_energy_s369, 0.002); end
  def test_outputs_energy_t369; assert_in_epsilon(16.11411287989238, worksheet.outputs_energy_t369, 0.002); end
  def test_outputs_energy_u369; assert_in_epsilon(16.286018107233872, worksheet.outputs_energy_u369, 0.002); end
  def test_outputs_energy_v369; assert_in_epsilon(16.317455558985397, worksheet.outputs_energy_v369, 0.002); end
  def test_outputs_energy_w369; assert_in_epsilon(16.20401770787535, worksheet.outputs_energy_w369, 0.002); end
  def test_outputs_energy_x369; assert_in_epsilon(15.975106037910631, worksheet.outputs_energy_x369, 0.002); end
  def test_outputs_energy_y369; assert_in_epsilon(15.639916509464971, worksheet.outputs_energy_y369, 0.002); end
  def test_outputs_energy_z369; assert_in_epsilon(15.181960915270711, worksheet.outputs_energy_z369, 0.002); end
  def test_outputs_energy_c370; assert_equal("Traditional biomass", worksheet.outputs_energy_c370); end
  def test_outputs_energy_d370; assert_equal("G.BM.13", worksheet.outputs_energy_d370); end
  def test_outputs_energy_e370; assert_equal("Global Traditional biomass", worksheet.outputs_energy_e370); end
  def test_outputs_energy_i370; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i370); end
  def test_outputs_energy_j370; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j370); end
  def test_outputs_energy_k370; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k370); end
  def test_outputs_energy_l370; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l370); end
  def test_outputs_energy_m370; assert_equal("non-residential", worksheet.outputs_energy_m370); end
  def test_outputs_energy_p370; assert_in_epsilon(23.83575164168494, worksheet.outputs_energy_p370, 0.002); end
  def test_outputs_energy_r370; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_r370, 0.002); end
  def test_outputs_energy_s370; assert_in_epsilon(20.13743480733188, worksheet.outputs_energy_s370, 0.002); end
  def test_outputs_energy_t370; assert_in_epsilon(18.372579440328174, worksheet.outputs_energy_t370, 0.002); end
  def test_outputs_energy_u370; assert_in_epsilon(16.443000493732548, worksheet.outputs_energy_u370, 0.002); end
  def test_outputs_energy_v370; assert_in_epsilon(14.557821870704695, worksheet.outputs_energy_v370, 0.002); end
  def test_outputs_energy_w370; assert_in_epsilon(13.090001432070835, worksheet.outputs_energy_w370, 0.002); end
  def test_outputs_energy_x370; assert_in_epsilon(11.66525366781175, worksheet.outputs_energy_x370, 0.002); end
  def test_outputs_energy_y370; assert_in_epsilon(10.704073673733559, worksheet.outputs_energy_y370, 0.002); end
  def test_outputs_energy_z370; assert_in_epsilon(9.771654172468239, worksheet.outputs_energy_z370, 0.002); end
  def test_outputs_energy_c371; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c371); end
  def test_outputs_energy_d371; assert_equal("G.C.02", worksheet.outputs_energy_d371); end
  def test_outputs_energy_e371; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e371); end
  def test_outputs_energy_i371; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i371); end
  def test_outputs_energy_j371; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j371); end
  def test_outputs_energy_k371; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k371); end
  def test_outputs_energy_l371; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l371); end
  def test_outputs_energy_m371; assert_equal("non-residential", worksheet.outputs_energy_m371); end
  def test_outputs_energy_p371; assert_in_epsilon(12.95, worksheet.outputs_energy_p371, 0.002); end
  def test_outputs_energy_r371; assert_in_epsilon(9.286178142155208, worksheet.outputs_energy_r371, 0.002); end
  def test_outputs_energy_s371; assert_in_epsilon(9.87794588368314, worksheet.outputs_energy_s371, 0.002); end
  def test_outputs_energy_t371; assert_in_epsilon(10.282740668732435, worksheet.outputs_energy_t371, 0.002); end
  def test_outputs_energy_u371; assert_in_epsilon(10.613194355554196, worksheet.outputs_energy_u371, 0.002); end
  def test_outputs_energy_v371; assert_in_epsilon(10.84844315106692, worksheet.outputs_energy_v371, 0.002); end
  def test_outputs_energy_w371; assert_in_epsilon(10.9590999181948, worksheet.outputs_energy_w371, 0.002); end
  def test_outputs_energy_x371; assert_in_epsilon(10.983778240039005, worksheet.outputs_energy_x371, 0.002); end
  def test_outputs_energy_y371; assert_in_epsilon(10.895720342739217, worksheet.outputs_energy_y371, 0.002); end
  def test_outputs_energy_z371; assert_in_epsilon(10.734522468178834, worksheet.outputs_energy_z371, 0.002); end
  def test_outputs_energy_c372; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c372); end
  def test_outputs_energy_d372; assert_equal("G.C.03", worksheet.outputs_energy_d372); end
  def test_outputs_energy_e372; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e372); end
  def test_outputs_energy_i372; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i372); end
  def test_outputs_energy_j372; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j372); end
  def test_outputs_energy_k372; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k372); end
  def test_outputs_energy_l372; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l372); end
  def test_outputs_energy_m372; assert_equal("non-residential", worksheet.outputs_energy_m372); end
  def test_outputs_energy_p372; assert_in_epsilon(24.88, worksheet.outputs_energy_p372, 0.002); end
  def test_outputs_energy_r372; assert_in_epsilon(22.00838896692654, worksheet.outputs_energy_r372, 0.002); end
  def test_outputs_energy_s372; assert_in_epsilon(24.045366993399064, worksheet.outputs_energy_s372, 0.002); end
  def test_outputs_energy_t372; assert_in_epsilon(25.889714544155495, worksheet.outputs_energy_t372, 0.002); end
  def test_outputs_energy_u372; assert_in_epsilon(27.612070220110866, worksheet.outputs_energy_u372, 0.002); end
  def test_outputs_energy_v372; assert_in_epsilon(29.149438059621602, worksheet.outputs_energy_v372, 0.002); end
  def test_outputs_energy_w372; assert_in_epsilon(30.40246919126859, worksheet.outputs_energy_w372, 0.002); end
  def test_outputs_energy_x372; assert_in_epsilon(31.458392960969686, worksheet.outputs_energy_x372, 0.002); end
  def test_outputs_energy_y372; assert_in_epsilon(32.22231009810011, worksheet.outputs_energy_y372, 0.002); end
  def test_outputs_energy_z372; assert_in_epsilon(32.7992199818712, worksheet.outputs_energy_z372, 0.002); end
  def test_outputs_energy_c373; assert_equal("Electricity grid", worksheet.outputs_energy_c373); end
  def test_outputs_energy_d373; assert_equal("G.E.01", worksheet.outputs_energy_d373); end
  def test_outputs_energy_e373; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e373); end
  def test_outputs_energy_i373; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i373); end
  def test_outputs_energy_j373; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j373); end
  def test_outputs_energy_k373; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k373); end
  def test_outputs_energy_l373; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l373); end
  def test_outputs_energy_m373; assert_equal("non-residential", worksheet.outputs_energy_m373); end
  def test_outputs_energy_p373; assert_in_epsilon(34.28, worksheet.outputs_energy_p373, 0.002); end
  def test_outputs_energy_r373; assert_in_epsilon(36.79584224618469, worksheet.outputs_energy_r373, 0.002); end
  def test_outputs_energy_s373; assert_in_epsilon(42.06090617095327, worksheet.outputs_energy_s373, 0.002); end
  def test_outputs_energy_t373; assert_in_epsilon(47.71007454067013, worksheet.outputs_energy_t373, 0.002); end
  def test_outputs_energy_u373; assert_in_epsilon(53.55548382274458, worksheet.outputs_energy_u373, 0.002); end
  def test_outputs_energy_v373; assert_in_epsilon(59.478820650868755, worksheet.outputs_energy_v373, 0.002); end
  def test_outputs_energy_w373; assert_in_epsilon(65.29464523870446, worksheet.outputs_energy_w373, 0.002); end
  def test_outputs_energy_x373; assert_in_epsilon(71.07693275168836, worksheet.outputs_energy_x373, 0.002); end
  def test_outputs_energy_y373; assert_in_epsilon(76.61179286374829, worksheet.outputs_energy_y373, 0.002); end
  def test_outputs_energy_z373; assert_in_epsilon(81.99325983801518, worksheet.outputs_energy_z373, 0.002); end
  def test_outputs_energy_c374; assert_equal("Heat network", worksheet.outputs_energy_c374); end
  def test_outputs_energy_d374; assert_equal("G.H.01", worksheet.outputs_energy_d374); end
  def test_outputs_energy_e374; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e374); end
  def test_outputs_energy_i374; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i374); end
  def test_outputs_energy_j374; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j374); end
  def test_outputs_energy_k374; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k374); end
  def test_outputs_energy_l374; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l374); end
  def test_outputs_energy_m374; assert_equal("non-residential", worksheet.outputs_energy_m374); end
  def test_outputs_energy_p374; assert_in_epsilon(5.46, worksheet.outputs_energy_p374, 0.002); end
  def test_outputs_energy_r374; assert_in_epsilon(5.601306145677334, worksheet.outputs_energy_r374, 0.002); end
  def test_outputs_energy_s374; assert_in_epsilon(5.890769318374725, worksheet.outputs_energy_s374, 0.002); end
  def test_outputs_energy_t374; assert_in_epsilon(6.214716289531424, worksheet.outputs_energy_t374, 0.002); end
  def test_outputs_energy_u374; assert_in_epsilon(6.465909981208657, worksheet.outputs_energy_u374, 0.002); end
  def test_outputs_energy_v374; assert_in_epsilon(6.628729237557376, worksheet.outputs_energy_v374, 0.002); end
  def test_outputs_energy_w374; assert_in_epsilon(6.67921807241306, worksheet.outputs_energy_w374, 0.002); end
  def test_outputs_energy_x374; assert_in_epsilon(6.631160235606925, worksheet.outputs_energy_x374, 0.002); end
  def test_outputs_energy_y374; assert_in_epsilon(6.461810268332378, worksheet.outputs_energy_y374, 0.002); end
  def test_outputs_energy_z374; assert_in_epsilon(6.193113590797987, worksheet.outputs_energy_z374, 0.002); end
  def test_outputs_energy_c375; assert_equal("Solar", worksheet.outputs_energy_c375); end
  def test_outputs_energy_d375; assert_equal("G.R.01", worksheet.outputs_energy_d375); end
  def test_outputs_energy_e375; assert_equal("Global Solar", worksheet.outputs_energy_e375); end
  def test_outputs_energy_f375; assert_equal("G.R.07", worksheet.outputs_energy_f375); end
  def test_outputs_energy_g375; assert_equal("Global Environmental heat", worksheet.outputs_energy_g375); end
  def test_outputs_energy_i375; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i375); end
  def test_outputs_energy_j375; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j375); end
  def test_outputs_energy_k375; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k375); end
  def test_outputs_energy_l375; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l375); end
  def test_outputs_energy_m375; assert_equal("non-residential", worksheet.outputs_energy_m375); end
  def test_outputs_energy_r375; assert_in_epsilon(5.993633125060281, worksheet.outputs_energy_r375, 0.002); end
  def test_outputs_energy_s375; assert_in_epsilon(6.804473006868597, worksheet.outputs_energy_s375, 0.002); end
  def test_outputs_energy_t375; assert_in_epsilon(8.027246100459884, worksheet.outputs_energy_t375, 0.002); end
  def test_outputs_energy_u375; assert_in_epsilon(9.337098113101193, worksheet.outputs_energy_u375, 0.002); end
  def test_outputs_energy_v375; assert_in_epsilon(10.707629206793694, worksheet.outputs_energy_v375, 0.002); end
  def test_outputs_energy_w375; assert_in_epsilon(12.094298396056264, worksheet.outputs_energy_w375, 0.002); end
  def test_outputs_energy_x375; assert_in_epsilon(13.505721156233625, worksheet.outputs_energy_x375, 0.002); end
  def test_outputs_energy_y375; assert_in_epsilon(14.887605242428668, worksheet.outputs_energy_y375, 0.002); end
  def test_outputs_energy_z375; assert_in_epsilon(16.250561865773875, worksheet.outputs_energy_z375, 0.002); end
  def test_outputs_energy_c480; assert_equal("Description", worksheet.outputs_energy_c480); end
  def test_outputs_energy_r480; assert_in_epsilon(2011.0, worksheet.outputs_energy_r480, 0.002); end
  def test_outputs_energy_s480; assert_equal("2015", worksheet.outputs_energy_s480); end
  def test_outputs_energy_t480; assert_equal("2020", worksheet.outputs_energy_t480); end
  def test_outputs_energy_u480; assert_equal("2025", worksheet.outputs_energy_u480); end
  def test_outputs_energy_v480; assert_equal("2030", worksheet.outputs_energy_v480); end
  def test_outputs_energy_w480; assert_equal("2035", worksheet.outputs_energy_w480); end
  def test_outputs_energy_x480; assert_equal("2040", worksheet.outputs_energy_x480); end
  def test_outputs_energy_y480; assert_equal("2045", worksheet.outputs_energy_y480); end
  def test_outputs_energy_z480; assert_equal("2050", worksheet.outputs_energy_z480); end
  def test_outputs_energy_c481; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_c481); end
  def test_outputs_energy_i481; assert_equal("G.M.02", worksheet.outputs_energy_i481); end
  def test_outputs_energy_r481; assert_in_epsilon(19.460745993692754, worksheet.outputs_energy_r481, 0.002); end
  def test_outputs_energy_s481; assert_in_epsilon(20.89299409631658, worksheet.outputs_energy_s481, 0.002); end
  def test_outputs_energy_t481; assert_in_epsilon(22.22427147090194, worksheet.outputs_energy_t481, 0.002); end
  def test_outputs_energy_u481; assert_in_epsilon(25.112915525065453, worksheet.outputs_energy_u481, 0.002); end
  def test_outputs_energy_v481; assert_in_epsilon(28.192161607807996, worksheet.outputs_energy_v481, 0.002); end
  def test_outputs_energy_w481; assert_in_epsilon(31.349976307394805, worksheet.outputs_energy_w481, 0.002); end
  def test_outputs_energy_x481; assert_in_epsilon(34.98104825841384, worksheet.outputs_energy_x481, 0.002); end
  def test_outputs_energy_y481; assert_in_epsilon(38.788117346870436, worksheet.outputs_energy_y481, 0.002); end
  def test_outputs_energy_z481; assert_in_epsilon(43.13611204623663, worksheet.outputs_energy_z481, 0.002); end
  def test_outputs_energy_c482; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_c482); end
  def test_outputs_energy_i482; assert_equal("G.M.02", worksheet.outputs_energy_i482); end
  def test_outputs_energy_r482; assert_in_epsilon(5.957349170600305, worksheet.outputs_energy_r482, 0.002); end
  def test_outputs_energy_s482; assert_in_epsilon(6.219172136917445, worksheet.outputs_energy_s482, 0.002); end
  def test_outputs_energy_t482; assert_in_epsilon(6.558346218053398, worksheet.outputs_energy_t482, 0.002); end
  def test_outputs_energy_u482; assert_in_epsilon(6.878132453780812, worksheet.outputs_energy_u482, 0.002); end
  def test_outputs_energy_v482; assert_in_epsilon(7.193884612852133, worksheet.outputs_energy_v482, 0.002); end
  def test_outputs_energy_w482; assert_in_epsilon(7.5208359606456385, worksheet.outputs_energy_w482, 0.002); end
  def test_outputs_energy_x482; assert_in_epsilon(7.8584647271285615, worksheet.outputs_energy_x482, 0.002); end
  def test_outputs_energy_y482; assert_in_epsilon(8.17498339514108, worksheet.outputs_energy_y482, 0.002); end
  def test_outputs_energy_z482; assert_in_epsilon(8.509000839084159, worksheet.outputs_energy_z482, 0.002); end
  def test_outputs_energy_c483; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_c483); end
  def test_outputs_energy_i483; assert_equal("G.M.02", worksheet.outputs_energy_i483); end
  def test_outputs_energy_r483; assert_in_epsilon(1.6638113188620842, worksheet.outputs_energy_r483, 0.002); end
  def test_outputs_energy_s483; assert_in_epsilon(1.7711086788287844, worksheet.outputs_energy_s483, 0.002); end
  def test_outputs_energy_t483; assert_in_epsilon(1.8875419808890774, worksheet.outputs_energy_t483, 0.002); end
  def test_outputs_energy_u483; assert_in_epsilon(2.132968142509748, worksheet.outputs_energy_u483, 0.002); end
  def test_outputs_energy_v483; assert_in_epsilon(2.394412671790251, worksheet.outputs_energy_v483, 0.002); end
  def test_outputs_energy_w483; assert_in_epsilon(2.661404596821886, worksheet.outputs_energy_w483, 0.002); end
  def test_outputs_energy_x483; assert_in_epsilon(2.969527688557563, worksheet.outputs_energy_x483, 0.002); end
  def test_outputs_energy_y483; assert_in_epsilon(3.2903838833037837, worksheet.outputs_energy_y483, 0.002); end
  def test_outputs_energy_z483; assert_in_epsilon(3.660761228193368, worksheet.outputs_energy_z483, 0.002); end
  def test_outputs_energy_c484; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_c484); end
  def test_outputs_energy_i484; assert_equal("G.M.02", worksheet.outputs_energy_i484); end
  def test_outputs_energy_r484; assert_in_epsilon(12.7269993633999, worksheet.outputs_energy_r484, 0.002); end
  def test_outputs_energy_s484; assert_in_epsilon(13.489472554806799, worksheet.outputs_energy_s484, 0.002); end
  def test_outputs_energy_t484; assert_in_epsilon(14.385139851553767, worksheet.outputs_energy_t484, 0.002); end
  def test_outputs_energy_u484; assert_in_epsilon(16.265576628582863, worksheet.outputs_energy_u484, 0.002); end
  def test_outputs_energy_v484; assert_in_epsilon(18.270550720895322, worksheet.outputs_energy_v484, 0.002); end
  def test_outputs_energy_w484; assert_in_epsilon(20.32034113770992, worksheet.outputs_energy_w484, 0.002); end
  def test_outputs_energy_x484; assert_in_epsilon(22.6868835407752, worksheet.outputs_energy_x484, 0.002); end
  def test_outputs_energy_y484; assert_in_epsilon(25.15366758229584, worksheet.outputs_energy_y484, 0.002); end
  def test_outputs_energy_z484; assert_in_epsilon(28.00227723696474, worksheet.outputs_energy_z484, 0.002); end
  def test_outputs_energy_c485; assert_equal("Total", worksheet.outputs_energy_c485); end
  def test_outputs_energy_r485; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r485, 0.002); end
  def test_outputs_energy_s485; assert_in_epsilon(42.37274746686961, worksheet.outputs_energy_s485, 0.002); end
  def test_outputs_energy_t485; assert_in_epsilon(45.05529952139818, worksheet.outputs_energy_t485, 0.002); end
  def test_outputs_energy_u485; assert_in_epsilon(50.38959274993888, worksheet.outputs_energy_u485, 0.002); end
  def test_outputs_energy_v485; assert_in_epsilon(56.0510096133457, worksheet.outputs_energy_v485, 0.002); end
  def test_outputs_energy_w485; assert_in_epsilon(61.85255800257225, worksheet.outputs_energy_w485, 0.002); end
  def test_outputs_energy_x485; assert_in_epsilon(68.49592421487517, worksheet.outputs_energy_x485, 0.002); end
  def test_outputs_energy_y485; assert_in_epsilon(75.40715220761115, worksheet.outputs_energy_y485, 0.002); end
  def test_outputs_energy_z485; assert_in_epsilon(83.3081513504789, worksheet.outputs_energy_z485, 0.002); end
  def test_outputs_energy_d208; assert_in_epsilon(946.0, worksheet.outputs_energy_d208, 0.002); end
  def test_outputs_energy_d209; assert_in_epsilon(861.0, worksheet.outputs_energy_d209, 0.002); end
  def test_outputs_energy_d238; assert_in_epsilon(14500.0, worksheet.outputs_energy_d238, 0.002); end
  def test_outputs_energy_d239; assert_in_epsilon(10800.0, worksheet.outputs_energy_d239, 0.002); end
  def test_outputs_energy_d240; assert_in_epsilon(12650.0, worksheet.outputs_energy_d240, 0.002); end
  def test_outputs_energy_h208; assert_in_epsilon(273.3947379939242, worksheet.outputs_energy_h208, 0.002); end
  def test_outputs_energy_h221; assert_in_epsilon(130.76098519633203, worksheet.outputs_energy_h221, 0.002); end
  def test_outputs_energy_h214; assert_in_epsilon(206166711967860.4, worksheet.outputs_energy_h214, 0.002); end
  def test_outputs_energy_h228; assert_in_delta(0.0026304746169559024, worksheet.outputs_energy_h228, 0.002); end
  def test_outputs_energy_d305; assert_equal("Technology description", worksheet.outputs_energy_d305); end
  def test_outputs_energy_h305; assert_equal("1975", worksheet.outputs_energy_h305); end
  def test_outputs_energy_i305; assert_equal("1980", worksheet.outputs_energy_i305); end
  def test_outputs_energy_j305; assert_equal("1985", worksheet.outputs_energy_j305); end
  def test_outputs_energy_k305; assert_equal("1990", worksheet.outputs_energy_k305); end
  def test_outputs_energy_l305; assert_equal("1995", worksheet.outputs_energy_l305); end
  def test_outputs_energy_m305; assert_equal("2000", worksheet.outputs_energy_m305); end
  def test_outputs_energy_n305; assert_equal("2005", worksheet.outputs_energy_n305); end
  def test_outputs_energy_o305; assert_in_epsilon(2010.0, worksheet.outputs_energy_o305, 0.002); end
  def test_outputs_energy_p305; assert_in_epsilon(2011.0, worksheet.outputs_energy_p305, 0.002); end
  def test_outputs_energy_r305; assert_in_epsilon(2011.0, worksheet.outputs_energy_r305, 0.002); end
  def test_outputs_energy_s305; assert_equal("2015", worksheet.outputs_energy_s305); end
  def test_outputs_energy_t305; assert_equal("2020", worksheet.outputs_energy_t305); end
  def test_outputs_energy_u305; assert_equal("2025", worksheet.outputs_energy_u305); end
  def test_outputs_energy_v305; assert_equal("2030", worksheet.outputs_energy_v305); end
  def test_outputs_energy_w305; assert_equal("2035", worksheet.outputs_energy_w305); end
  def test_outputs_energy_x305; assert_equal("2040", worksheet.outputs_energy_x305); end
  def test_outputs_energy_y305; assert_equal("2045", worksheet.outputs_energy_y305); end
  def test_outputs_energy_z305; assert_equal("2050", worksheet.outputs_energy_z305); end
  def test_outputs_energy_d306; assert_equal("Unabated solid fuel power plants", worksheet.outputs_energy_d306); end
  def test_outputs_energy_h306; assert_in_epsilon(8.6961132, worksheet.outputs_energy_h306, 0.002); end
  def test_outputs_energy_i306; assert_in_epsilon(11.4665868, worksheet.outputs_energy_i306, 0.002); end
  def test_outputs_energy_j306; assert_in_epsilon(13.906404, worksheet.outputs_energy_j306, 0.002); end
  def test_outputs_energy_k306; assert_in_epsilon(16.4052396, worksheet.outputs_energy_k306, 0.002); end
  def test_outputs_energy_l306; assert_in_epsilon(18.456966, worksheet.outputs_energy_l306, 0.002); end
  def test_outputs_energy_m306; assert_in_epsilon(22.2185448, worksheet.outputs_energy_m306, 0.002); end
  def test_outputs_energy_n306; assert_in_epsilon(27.2447424, worksheet.outputs_energy_n306, 0.002); end
  def test_outputs_energy_o306; assert_in_epsilon(32.5517508, worksheet.outputs_energy_o306, 0.002); end
  def test_outputs_energy_p306; assert_in_epsilon(34.4380896, worksheet.outputs_energy_p306, 0.002); end
  def test_outputs_energy_r306; assert_in_epsilon(35.624996120177215, worksheet.outputs_energy_r306, 0.002); end
  def test_outputs_energy_s306; assert_in_epsilon(35.56228522043536, worksheet.outputs_energy_s306, 0.002); end
  def test_outputs_energy_t306; assert_in_epsilon(36.613264301897516, worksheet.outputs_energy_t306, 0.002); end
  def test_outputs_energy_u306; assert_in_epsilon(41.52926472410843, worksheet.outputs_energy_u306, 0.002); end
  def test_outputs_energy_v306; assert_in_epsilon(45.21233317016304, worksheet.outputs_energy_v306, 0.002); end
  def test_outputs_energy_w306; assert_in_epsilon(47.92135569397678, worksheet.outputs_energy_w306, 0.002); end
  def test_outputs_energy_x306; assert_in_epsilon(49.38513290525071, worksheet.outputs_energy_x306, 0.002); end
  def test_outputs_energy_y306; assert_in_epsilon(46.854808537013675, worksheet.outputs_energy_y306, 0.002); end
  def test_outputs_energy_z306; assert_in_epsilon(45.11876400603229, worksheet.outputs_energy_z306, 0.002); end
  def test_outputs_energy_d307; assert_equal("Unabated liquid fuel power plants", worksheet.outputs_energy_d307); end
  def test_outputs_energy_h307; assert_in_epsilon(5.200236, worksheet.outputs_energy_h307, 0.002); end
  def test_outputs_energy_i307; assert_in_epsilon(5.9519628, worksheet.outputs_energy_i307, 0.002); end
  def test_outputs_energy_j307; assert_in_epsilon(4.2661512, worksheet.outputs_energy_j307, 0.002); end
  def test_outputs_energy_k307; assert_in_epsilon(4.7950164, worksheet.outputs_energy_k307, 0.002); end
  def test_outputs_energy_l307; assert_in_epsilon(4.4350452, worksheet.outputs_energy_l307, 0.002); end
  def test_outputs_energy_m307; assert_in_epsilon(4.320846, worksheet.outputs_energy_m307, 0.002); end
  def test_outputs_energy_n307; assert_in_epsilon(4.1088132, worksheet.outputs_energy_n307, 0.002); end
  def test_outputs_energy_o307; assert_in_epsilon(3.4785432, worksheet.outputs_energy_o307, 0.002); end
  def test_outputs_energy_p307; assert_in_epsilon(3.808314, worksheet.outputs_energy_p307, 0.002); end
  def test_outputs_energy_r307; assert_in_epsilon(3.9499660506851924, worksheet.outputs_energy_r307, 0.002); end
  def test_outputs_energy_s307; assert_in_epsilon(3.9430129011563437, worksheet.outputs_energy_s307, 0.002); end
  def test_outputs_energy_t307; assert_in_epsilon(7.845699493263751, worksheet.outputs_energy_t307, 0.002); end
  def test_outputs_energy_u307; assert_in_epsilon(8.89912815516609, worksheet.outputs_energy_u307, 0.002); end
  def test_outputs_energy_v307; assert_in_epsilon(11.72171600707931, worksheet.outputs_energy_v307, 0.002); end
  def test_outputs_energy_w307; assert_in_epsilon(13.823467988647145, worksheet.outputs_energy_w307, 0.002); end
  def test_outputs_energy_x307; assert_in_epsilon(16.125757683347167, worksheet.outputs_energy_x307, 0.002); end
  def test_outputs_energy_y307; assert_in_epsilon(19.16787621968741, worksheet.outputs_energy_y307, 0.002); end
  def test_outputs_energy_z307; assert_in_epsilon(21.43141290286534, worksheet.outputs_energy_z307, 0.002); end
  def test_outputs_energy_d308; assert_equal("Unabated gas fuel power plants", worksheet.outputs_energy_d308); end
  def test_outputs_energy_h308; assert_in_epsilon(2.9048472, worksheet.outputs_energy_h308, 0.002); end
  def test_outputs_energy_i308; assert_in_epsilon(3.597156, worksheet.outputs_energy_i308, 0.002); end
  def test_outputs_energy_j308; assert_in_epsilon(4.4971236, worksheet.outputs_energy_j308, 0.002); end
  def test_outputs_energy_k308; assert_in_epsilon(6.229368, worksheet.outputs_energy_k308, 0.002); end
  def test_outputs_energy_l308; assert_in_epsilon(7.2358848, worksheet.outputs_energy_l308, 0.002); end
  def test_outputs_energy_m308; assert_in_epsilon(9.8646876, worksheet.outputs_energy_m308, 0.002); end
  def test_outputs_energy_n308; assert_in_epsilon(13.20507, worksheet.outputs_energy_n308, 0.002); end
  def test_outputs_energy_o308; assert_in_epsilon(17.210952, worksheet.outputs_energy_o308, 0.002); end
  def test_outputs_energy_p308; assert_in_epsilon(17.4675924, worksheet.outputs_energy_p308, 0.002); end
  def test_outputs_energy_r308; assert_in_epsilon(18.640053162892926, worksheet.outputs_energy_r308, 0.002); end
  def test_outputs_energy_s308; assert_in_epsilon(18.607240962685584, worksheet.outputs_energy_s308, 0.002); end
  def test_outputs_energy_t308; assert_in_epsilon(20.921865315369995, worksheet.outputs_energy_t308, 0.002); end
  def test_outputs_energy_u308; assert_in_epsilon(23.73100841377624, worksheet.outputs_energy_u308, 0.002); end
  def test_outputs_energy_v308; assert_in_epsilon(26.792493730466976, worksheet.outputs_energy_v308, 0.002); end
  def test_outputs_energy_w308; assert_in_epsilon(30.41162957502371, worksheet.outputs_energy_w308, 0.002); end
  def test_outputs_energy_x308; assert_in_epsilon(35.275094932321934, worksheet.outputs_energy_x308, 0.002); end
  def test_outputs_energy_y308; assert_in_epsilon(40.465516463784546, worksheet.outputs_energy_y308, 0.002); end
  def test_outputs_energy_z308; assert_in_epsilon(46.24673310618309, worksheet.outputs_energy_z308, 0.002); end
  def test_outputs_energy_d309; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_d309); end
  def test_outputs_energy_h309; assert_in_delta(0.0, (worksheet.outputs_energy_h309||0), 0.002); end
  def test_outputs_energy_i309; assert_in_delta(0.0, (worksheet.outputs_energy_i309||0), 0.002); end
  def test_outputs_energy_j309; assert_in_delta(0.0, (worksheet.outputs_energy_j309||0), 0.002); end
  def test_outputs_energy_k309; assert_in_delta(0.0, (worksheet.outputs_energy_k309||0), 0.002); end
  def test_outputs_energy_l309; assert_in_delta(0.0, (worksheet.outputs_energy_l309||0), 0.002); end
  def test_outputs_energy_m309; assert_in_delta(0.0, (worksheet.outputs_energy_m309||0), 0.002); end
  def test_outputs_energy_n309; assert_in_delta(0.0, (worksheet.outputs_energy_n309||0), 0.002); end
  def test_outputs_energy_o309; assert_in_delta(0.0, (worksheet.outputs_energy_o309||0), 0.002); end
  def test_outputs_energy_p309; assert_in_delta(0.0, (worksheet.outputs_energy_p309||0), 0.002); end
  def test_outputs_energy_r309; assert_in_delta(0.0, (worksheet.outputs_energy_r309||0), 0.002); end
  def test_outputs_energy_s309; assert_in_delta(0.17041103999999999, worksheet.outputs_energy_s309, 0.002); end
  def test_outputs_energy_t309; assert_in_delta(0.35344512, worksheet.outputs_energy_t309, 0.002); end
  def test_outputs_energy_u309; assert_in_delta(0.3332482559999999, worksheet.outputs_energy_u309, 0.002); end
  def test_outputs_energy_v309; assert_in_delta(0.34460899199999995, worksheet.outputs_energy_v309, 0.002); end
  def test_outputs_energy_w309; assert_in_delta(0.34082208, worksheet.outputs_energy_w309, 0.002); end
  def test_outputs_energy_x309; assert_in_delta(0.30295296000000005, worksheet.outputs_energy_x309, 0.002); end
  def test_outputs_energy_y309; assert_in_delta(0.234788544, worksheet.outputs_energy_y309, 0.002); end
  def test_outputs_energy_z309; assert_in_delta(0.186820992, worksheet.outputs_energy_z309, 0.002); end
  def test_outputs_energy_d310; assert_equal("Nuclear", worksheet.outputs_energy_d310); end
  def test_outputs_energy_h310; assert_in_epsilon(1.3810068, worksheet.outputs_energy_h310, 0.002); end
  def test_outputs_energy_i310; assert_in_epsilon(2.56815, worksheet.outputs_energy_i310, 0.002); end
  def test_outputs_energy_j310; assert_in_epsilon(5.3715528, worksheet.outputs_energy_j310, 0.002); end
  def test_outputs_energy_k310; assert_in_epsilon(7.2464472, worksheet.outputs_energy_k310, 0.002); end
  def test_outputs_energy_l310; assert_in_epsilon(8.3950236, worksheet.outputs_energy_l310, 0.002); end
  def test_outputs_energy_m310; assert_in_epsilon(9.3262428, worksheet.outputs_energy_m310, 0.002); end
  def test_outputs_energy_n310; assert_in_epsilon(9.9646272, worksheet.outputs_energy_n310, 0.002); end
  def test_outputs_energy_o310; assert_in_epsilon(9.9226368, worksheet.outputs_energy_o310, 0.002); end
  def test_outputs_energy_p310; assert_in_epsilon(9.3012444, worksheet.outputs_energy_p310, 0.002); end
  def test_outputs_energy_r310; assert_in_epsilon(8.730094464, worksheet.outputs_energy_r310, 0.002); end
  def test_outputs_energy_s310; assert_in_epsilon(9.95326704, worksheet.outputs_energy_s310, 0.002); end
  def test_outputs_energy_t310; assert_in_epsilon(10.85265864, worksheet.outputs_energy_t310, 0.002); end
  def test_outputs_energy_u310; assert_in_epsilon(11.072930688, worksheet.outputs_energy_u310, 0.002); end
  def test_outputs_energy_v310; assert_in_epsilon(10.881060480000002, worksheet.outputs_energy_v310, 0.002); end
  def test_outputs_energy_w310; assert_in_epsilon(12.161983463999999, worksheet.outputs_energy_w310, 0.002); end
  def test_outputs_energy_x310; assert_in_epsilon(12.089558772, worksheet.outputs_energy_x310, 0.002); end
  def test_outputs_energy_y310; assert_in_epsilon(12.475823796, worksheet.outputs_energy_y310, 0.002); end
  def test_outputs_energy_z310; assert_in_epsilon(12.862088819999997, worksheet.outputs_energy_z310, 0.002); end
  def test_outputs_energy_d311; assert_equal("Wind, solar, marine", worksheet.outputs_energy_d311); end
  def test_outputs_energy_h311; assert_in_delta(0.0018612, worksheet.outputs_energy_h311, 0.002); end
  def test_outputs_energy_i311; assert_in_delta(0.0018216, worksheet.outputs_energy_i311, 0.002); end
  def test_outputs_energy_j311; assert_in_delta(0.0025236, worksheet.outputs_energy_j311, 0.002); end
  def test_outputs_energy_k311; assert_in_delta(0.0188136, worksheet.outputs_energy_k311, 0.002); end
  def test_outputs_energy_l311; assert_in_delta(0.0368568, worksheet.outputs_energy_l311, 0.002); end
  def test_outputs_energy_m311; assert_in_delta(0.1244772, worksheet.outputs_energy_m311, 0.002); end
  def test_outputs_energy_n311; assert_in_delta(0.4177584, worksheet.outputs_energy_n311, 0.002); end
  def test_outputs_energy_o311; assert_in_epsilon(1.370574, worksheet.outputs_energy_o311, 0.002); end
  def test_outputs_energy_p311; assert_in_epsilon(1.8177696, worksheet.outputs_energy_p311, 0.002); end
  def test_outputs_energy_r311; assert_in_epsilon(1.8149072401439998, worksheet.outputs_energy_r311, 0.002); end
  def test_outputs_energy_s311; assert_in_epsilon(3.3442219871999996, worksheet.outputs_energy_s311, 0.002); end
  def test_outputs_energy_t311; assert_in_epsilon(3.7862240443199995, worksheet.outputs_energy_t311, 0.002); end
  def test_outputs_energy_u311; assert_in_epsilon(4.13805025944, worksheet.outputs_energy_u311, 0.002); end
  def test_outputs_energy_v311; assert_in_epsilon(4.171763243519999, worksheet.outputs_energy_v311, 0.002); end
  def test_outputs_energy_w311; assert_in_epsilon(3.4584289415999994, worksheet.outputs_energy_w311, 0.002); end
  def test_outputs_energy_x311; assert_in_epsilon(4.373895983039999, worksheet.outputs_energy_x311, 0.002); end
  def test_outputs_energy_y311; assert_in_epsilon(6.8422714955999995, worksheet.outputs_energy_y311, 0.002); end
  def test_outputs_energy_z311; assert_in_epsilon(8.848293454799997, worksheet.outputs_energy_z311, 0.002); end
  def test_outputs_energy_d312; assert_equal("Hydro", worksheet.outputs_energy_d312); end
  def test_outputs_energy_h312; assert_in_epsilon(5.1973488, worksheet.outputs_energy_h312, 0.002); end
  def test_outputs_energy_i312; assert_in_epsilon(6.180696, worksheet.outputs_energy_i312, 0.002); end
  def test_outputs_energy_j312; assert_in_epsilon(7.103448, worksheet.outputs_energy_j312, 0.002); end
  def test_outputs_energy_k312; assert_in_epsilon(7.7201532, worksheet.outputs_energy_k312, 0.002); end
  def test_outputs_energy_l312; assert_in_epsilon(8.9287596, worksheet.outputs_energy_l312, 0.002); end
  def test_outputs_energy_m312; assert_in_epsilon(9.433656, worksheet.outputs_energy_m312, 0.002); end
  def test_outputs_energy_n312; assert_in_epsilon(10.5463116, worksheet.outputs_energy_n312, 0.002); end
  def test_outputs_energy_o312; assert_in_epsilon(12.389958, worksheet.outputs_energy_o312, 0.002); end
  def test_outputs_energy_p312; assert_in_epsilon(12.5653572, worksheet.outputs_energy_p312, 0.002); end
  def test_outputs_energy_r312; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r312, 0.002); end
  def test_outputs_energy_s312; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s312, 0.002); end
  def test_outputs_energy_t312; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t312, 0.002); end
  def test_outputs_energy_u312; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u312, 0.002); end
  def test_outputs_energy_v312; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v312, 0.002); end
  def test_outputs_energy_w312; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w312, 0.002); end
  def test_outputs_energy_x312; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x312, 0.002); end
  def test_outputs_energy_y312; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y312, 0.002); end
  def test_outputs_energy_z312; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z312, 0.002); end
  def test_outputs_energy_d313; assert_equal("Geothermal", worksheet.outputs_energy_d313); end
  def test_outputs_energy_h313; assert_in_delta(0.0288324, worksheet.outputs_energy_h313, 0.002); end
  def test_outputs_energy_i313; assert_in_delta(0.0491184, worksheet.outputs_energy_i313, 0.002); end
  def test_outputs_energy_j313; assert_in_delta(0.0825156, worksheet.outputs_energy_j313, 0.002); end
  def test_outputs_energy_k313; assert_in_delta(0.1309248, worksheet.outputs_energy_k313, 0.002); end
  def test_outputs_energy_l313; assert_in_delta(0.143226, worksheet.outputs_energy_l313, 0.002); end
  def test_outputs_energy_m313; assert_in_delta(0.1867716, worksheet.outputs_energy_m313, 0.002); end
  def test_outputs_energy_n313; assert_in_delta(0.2097468, worksheet.outputs_energy_n313, 0.002); end
  def test_outputs_energy_o313; assert_in_delta(0.2452896, worksheet.outputs_energy_o313, 0.002); end
  def test_outputs_energy_p313; assert_in_delta(0.2491632, worksheet.outputs_energy_p313, 0.002); end
  def test_outputs_energy_r313; assert_in_delta(0.26331345864, worksheet.outputs_energy_r313, 0.002); end
  def test_outputs_energy_s313; assert_in_delta(0.334037196, worksheet.outputs_energy_s313, 0.002); end
  def test_outputs_energy_t313; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_t313, 0.002); end
  def test_outputs_energy_u313; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_u313, 0.002); end
  def test_outputs_energy_v313; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_v313, 0.002); end
  def test_outputs_energy_w313; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_w313, 0.002); end
  def test_outputs_energy_x313; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_x313, 0.002); end
  def test_outputs_energy_y313; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_y313, 0.002); end
  def test_outputs_energy_z313; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_z313, 0.002); end
  def test_outputs_energy_d314; assert_equal("Total", worksheet.outputs_energy_d314); end
  def test_outputs_energy_h314; assert_in_epsilon(23.4102456, worksheet.outputs_energy_h314, 0.002); end
  def test_outputs_energy_i314; assert_in_epsilon(29.815491599999998, worksheet.outputs_energy_i314, 0.002); end
  def test_outputs_energy_j314; assert_in_epsilon(35.2297188, worksheet.outputs_energy_j314, 0.002); end
  def test_outputs_energy_k314; assert_in_epsilon(42.545962800000005, worksheet.outputs_energy_k314, 0.002); end
  def test_outputs_energy_l314; assert_in_epsilon(47.631762, worksheet.outputs_energy_l314, 0.002); end
  def test_outputs_energy_m314; assert_in_epsilon(55.475226000000006, worksheet.outputs_energy_m314, 0.002); end
  def test_outputs_energy_n314; assert_in_epsilon(65.6970696, worksheet.outputs_energy_n314, 0.002); end
  def test_outputs_energy_o314; assert_in_epsilon(77.1697044, worksheet.outputs_energy_o314, 0.002); end
  def test_outputs_energy_p314; assert_in_epsilon(79.6475304, worksheet.outputs_energy_p314, 0.002); end
  def test_outputs_energy_r314; assert_in_epsilon(82.18600545653933, worksheet.outputs_energy_r314, 0.002); end
  def test_outputs_energy_s314; assert_in_epsilon(90.23366314747729, worksheet.outputs_energy_s314, 0.002); end
  def test_outputs_energy_t314; assert_in_epsilon(99.87291353085126, worksheet.outputs_energy_t314, 0.002); end
  def test_outputs_energy_u314; assert_in_epsilon(109.92510942449077, worksheet.outputs_energy_u314, 0.002); end
  def test_outputs_energy_v314; assert_in_epsilon(120.09857667522934, worksheet.outputs_energy_v314, 0.002); end
  def test_outputs_energy_w314; assert_in_epsilon(130.06189605524764, worksheet.outputs_energy_w314, 0.002); end
  def test_outputs_energy_x314; assert_in_epsilon(140.06050430235982, worksheet.outputs_energy_x314, 0.002); end
  def test_outputs_energy_y314; assert_in_epsilon(149.70167967448563, worksheet.outputs_energy_y314, 0.002); end
  def test_outputs_energy_z314; assert_in_epsilon(159.5240747682807, worksheet.outputs_energy_z314, 0.002); end
  def test_outputs_energy_d315; assert_equal("Demand for electricity to grid", worksheet.outputs_energy_d315); end
  def test_outputs_energy_f315; assert_equal("Net balance", worksheet.outputs_energy_f315); end
  def test_outputs_energy_g315; assert_equal("G.E.02", worksheet.outputs_energy_g315); end
  def test_outputs_energy_r315; assert_in_epsilon(82.18600545653935, worksheet.outputs_energy_r315, 0.002); end
  def test_outputs_energy_s315; assert_in_epsilon(90.2336631474773, worksheet.outputs_energy_s315, 0.002); end
  def test_outputs_energy_t315; assert_in_epsilon(99.87291353085126, worksheet.outputs_energy_t315, 0.002); end
  def test_outputs_energy_u315; assert_in_epsilon(109.92510942449078, worksheet.outputs_energy_u315, 0.002); end
  def test_outputs_energy_v315; assert_in_epsilon(120.09857667522935, worksheet.outputs_energy_v315, 0.002); end
  def test_outputs_energy_w315; assert_in_epsilon(130.06189605524764, worksheet.outputs_energy_w315, 0.002); end
  def test_outputs_energy_x315; assert_in_epsilon(140.06050430235985, worksheet.outputs_energy_x315, 0.002); end
  def test_outputs_energy_y315; assert_in_epsilon(149.7016796744856, worksheet.outputs_energy_y315, 0.002); end
  def test_outputs_energy_z315; assert_in_epsilon(159.52407476828068, worksheet.outputs_energy_z315, 0.002); end
  def test_outputs_energy_d221; assert_in_epsilon(193.88275276125742, worksheet.outputs_energy_d221, 0.002); end
  def test_outputs_energy_d222; assert_in_epsilon(187.29999999999998, worksheet.outputs_energy_d222, 0.002); end
  def test_outputs_energy_d223; assert_in_epsilon(191.07196261682242, worksheet.outputs_energy_d223, 0.002); end
  def test_outputs_energy_d252; assert_in_epsilon(511000.0, worksheet.outputs_energy_d252, 0.002); end
  def test_outputs_energy_d253; assert_in_epsilon(1300.0, worksheet.outputs_energy_d253, 0.002); end
  def test_outputs_energy_d254; assert_in_epsilon(400.0, worksheet.outputs_energy_d254, 0.002); end
  def test_outputs_energy_d255; assert_in_epsilon(346.99999999999994, worksheet.outputs_energy_d255, 0.002); end
  def test_outputs_energy_c324; assert_equal("Description", worksheet.outputs_energy_c324); end
  def test_outputs_energy_d324; assert_equal("Note for lookups", worksheet.outputs_energy_d324); end
  def test_outputs_energy_e324; assert_equal("Note for lookups 2", worksheet.outputs_energy_e324); end
  def test_outputs_energy_f324; assert_equal("Note for lookups 3", worksheet.outputs_energy_f324); end
  def test_outputs_energy_g324; assert_equal("Note for lookups 4", worksheet.outputs_energy_g324); end
  def test_outputs_energy_j324; assert_equal("1985", worksheet.outputs_energy_j324); end
  def test_outputs_energy_k324; assert_equal("1990", worksheet.outputs_energy_k324); end
  def test_outputs_energy_l324; assert_equal("1995", worksheet.outputs_energy_l324); end
  def test_outputs_energy_m324; assert_equal("2000", worksheet.outputs_energy_m324); end
  def test_outputs_energy_n324; assert_equal("2005", worksheet.outputs_energy_n324); end
  def test_outputs_energy_o324; assert_in_epsilon(2010.0, worksheet.outputs_energy_o324, 0.002); end
  def test_outputs_energy_p324; assert_in_epsilon(2011.0, worksheet.outputs_energy_p324, 0.002); end
  def test_outputs_energy_r324; assert_in_epsilon(2011.0, worksheet.outputs_energy_r324, 0.002); end
  def test_outputs_energy_s324; assert_equal("2015", worksheet.outputs_energy_s324); end
  def test_outputs_energy_t324; assert_equal("2020", worksheet.outputs_energy_t324); end
  def test_outputs_energy_u324; assert_equal("2025", worksheet.outputs_energy_u324); end
  def test_outputs_energy_v324; assert_equal("2030", worksheet.outputs_energy_v324); end
  def test_outputs_energy_w324; assert_equal("2035", worksheet.outputs_energy_w324); end
  def test_outputs_energy_x324; assert_equal("2040", worksheet.outputs_energy_x324); end
  def test_outputs_energy_y324; assert_equal("2045", worksheet.outputs_energy_y324); end
  def test_outputs_energy_z324; assert_equal("2050", worksheet.outputs_energy_z324); end
  def test_outputs_energy_c325; assert_equal("Iron and steel", worksheet.outputs_energy_c325); end
  def test_outputs_energy_d325; assert_equal("Steel.Oxygen", worksheet.outputs_energy_d325); end
  def test_outputs_energy_e325; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_e325); end
  def test_outputs_energy_f325; assert_equal("Steel.Electric", worksheet.outputs_energy_f325); end
  def test_outputs_energy_g325; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_g325); end
  def test_outputs_energy_h325; assert_equal("Steel.others", worksheet.outputs_energy_h325); end
  def test_outputs_energy_i325; assert_equal("G.M.02", worksheet.outputs_energy_i325); end
  def test_outputs_energy_r325; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r325, 0.002); end
  def test_outputs_energy_s325; assert_in_epsilon(32.87825506323245, worksheet.outputs_energy_s325, 0.002); end
  def test_outputs_energy_t325; assert_in_epsilon(35.07091303721208, worksheet.outputs_energy_t325, 0.002); end
  def test_outputs_energy_u325; assert_in_epsilon(37.658159880792155, worksheet.outputs_energy_u325, 0.002); end
  def test_outputs_energy_v325; assert_in_epsilon(40.16529820965163, worksheet.outputs_energy_v325, 0.002); end
  def test_outputs_energy_w325; assert_in_epsilon(42.42185016888975, worksheet.outputs_energy_w325, 0.002); end
  def test_outputs_energy_x325; assert_in_epsilon(44.9079737478769, worksheet.outputs_energy_x325, 0.002); end
  def test_outputs_energy_y325; assert_in_epsilon(47.53572617914915, worksheet.outputs_energy_y325, 0.002); end
  def test_outputs_energy_z325; assert_in_epsilon(50.29119155768883, worksheet.outputs_energy_z325, 0.002); end
  def test_outputs_energy_c326; assert_equal("Aluminium", worksheet.outputs_energy_c326); end
  def test_outputs_energy_d326; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_d326); end
  def test_outputs_energy_e326; assert_equal("Aluminium.Primary", worksheet.outputs_energy_e326); end
  def test_outputs_energy_f326; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_f326); end
  def test_outputs_energy_i326; assert_equal("G.M.02", worksheet.outputs_energy_i326); end
  def test_outputs_energy_r326; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r326, 0.002); end
  def test_outputs_energy_s326; assert_in_epsilon(4.837341328151129, worksheet.outputs_energy_s326, 0.002); end
  def test_outputs_energy_t326; assert_in_epsilon(5.304835453655522, worksheet.outputs_energy_t326, 0.002); end
  def test_outputs_energy_u326; assert_in_epsilon(6.014694507222366, worksheet.outputs_energy_u326, 0.002); end
  def test_outputs_energy_v326; assert_in_epsilon(6.760705726039663, worksheet.outputs_energy_v326, 0.002); end
  def test_outputs_energy_w326; assert_in_epsilon(7.50624126103862, worksheet.outputs_energy_w326, 0.002); end
  def test_outputs_energy_x326; assert_in_epsilon(8.33587219894255, worksheet.outputs_energy_x326, 0.002); end
  def test_outputs_energy_y326; assert_in_epsilon(9.224759612471308, worksheet.outputs_energy_y326, 0.002); end
  def test_outputs_energy_z326; assert_in_epsilon(10.215886628637769, worksheet.outputs_energy_z326, 0.002); end
  def test_outputs_energy_c327; assert_equal("Chemicals", worksheet.outputs_energy_c327); end
  def test_outputs_energy_d327; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_d327); end
  def test_outputs_energy_e327; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_e327); end
  def test_outputs_energy_f327; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_f327); end
  def test_outputs_energy_g327; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_g327); end
  def test_outputs_energy_i327; assert_equal("G.M.02", worksheet.outputs_energy_i327); end
  def test_outputs_energy_r327; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r327, 0.002); end
  def test_outputs_energy_s327; assert_in_epsilon(42.37274746686961, worksheet.outputs_energy_s327, 0.002); end
  def test_outputs_energy_t327; assert_in_epsilon(45.05529952139818, worksheet.outputs_energy_t327, 0.002); end
  def test_outputs_energy_u327; assert_in_epsilon(50.38959274993888, worksheet.outputs_energy_u327, 0.002); end
  def test_outputs_energy_v327; assert_in_epsilon(56.0510096133457, worksheet.outputs_energy_v327, 0.002); end
  def test_outputs_energy_w327; assert_in_epsilon(61.85255800257225, worksheet.outputs_energy_w327, 0.002); end
  def test_outputs_energy_x327; assert_in_epsilon(68.49592421487517, worksheet.outputs_energy_x327, 0.002); end
  def test_outputs_energy_y327; assert_in_epsilon(75.40715220761115, worksheet.outputs_energy_y327, 0.002); end
  def test_outputs_energy_z327; assert_in_epsilon(83.3081513504789, worksheet.outputs_energy_z327, 0.002); end
  def test_outputs_energy_c328; assert_equal("Pulp and paper", worksheet.outputs_energy_c328); end
  def test_outputs_energy_d328; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_d328); end
  def test_outputs_energy_e328; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_e328); end
  def test_outputs_energy_f328; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_f328); end
  def test_outputs_energy_i328; assert_equal("G.M.02", worksheet.outputs_energy_i328); end
  def test_outputs_energy_r328; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r328, 0.002); end
  def test_outputs_energy_s328; assert_in_epsilon(6.887634427436916, worksheet.outputs_energy_s328, 0.002); end
  def test_outputs_energy_t328; assert_in_epsilon(7.14071573294984, worksheet.outputs_energy_t328, 0.002); end
  def test_outputs_energy_u328; assert_in_epsilon(7.709488312815085, worksheet.outputs_energy_u328, 0.002); end
  def test_outputs_energy_v328; assert_in_epsilon(8.275121687276478, worksheet.outputs_energy_v328, 0.002); end
  def test_outputs_energy_w328; assert_in_epsilon(8.814199017575701, worksheet.outputs_energy_w328, 0.002); end
  def test_outputs_energy_x328; assert_in_epsilon(9.406496653813862, worksheet.outputs_energy_x328, 0.002); end
  def test_outputs_energy_y328; assert_in_epsilon(9.97704139393973, worksheet.outputs_energy_y328, 0.002); end
  def test_outputs_energy_z328; assert_in_epsilon(10.6077235299275, worksheet.outputs_energy_z328, 0.002); end
  def test_outputs_energy_c329; assert_equal("Cement", worksheet.outputs_energy_c329); end
  def test_outputs_energy_d329; assert_equal("Cement", worksheet.outputs_energy_d329); end
  def test_outputs_energy_i329; assert_equal("G.M.02", worksheet.outputs_energy_i329); end
  def test_outputs_energy_r329; assert_in_epsilon(10.600379598268718, worksheet.outputs_energy_r329, 0.002); end
  def test_outputs_energy_s329; assert_in_epsilon(10.88713066842193, worksheet.outputs_energy_s329, 0.002); end
  def test_outputs_energy_t329; assert_in_epsilon(11.844692704567436, worksheet.outputs_energy_t329, 0.002); end
  def test_outputs_energy_u329; assert_in_epsilon(12.282485129235006, worksheet.outputs_energy_u329, 0.002); end
  def test_outputs_energy_v329; assert_in_epsilon(12.665008173677574, worksheet.outputs_energy_v329, 0.002); end
  def test_outputs_energy_w329; assert_in_epsilon(12.993291922951574, worksheet.outputs_energy_w329, 0.002); end
  def test_outputs_energy_x329; assert_in_epsilon(13.235364234610211, worksheet.outputs_energy_x329, 0.002); end
  def test_outputs_energy_y329; assert_in_epsilon(13.447195644252087, worksheet.outputs_energy_y329, 0.002); end
  def test_outputs_energy_z329; assert_in_epsilon(13.668343037514825, worksheet.outputs_energy_z329, 0.002); end
  def test_outputs_energy_c330; assert_equal("Other", worksheet.outputs_energy_c330); end
  def test_outputs_energy_d330; assert_equal("Other industries", worksheet.outputs_energy_d330); end
  def test_outputs_energy_i330; assert_equal("G.M.02", worksheet.outputs_energy_i330); end
  def test_outputs_energy_r330; assert_in_epsilon(44.35126743259007, worksheet.outputs_energy_r330, 0.002); end
  def test_outputs_energy_s330; assert_in_epsilon(45.63934650311042, worksheet.outputs_energy_s330, 0.002); end
  def test_outputs_energy_t330; assert_in_epsilon(48.544989537170736, worksheet.outputs_energy_t330, 0.002); end
  def test_outputs_energy_u330; assert_in_epsilon(50.327181187782934, worksheet.outputs_energy_u330, 0.002); end
  def test_outputs_energy_v330; assert_in_epsilon(51.8575856845921, worksheet.outputs_energy_v330, 0.002); end
  def test_outputs_energy_w330; assert_in_epsilon(53.07986735885225, worksheet.outputs_energy_w330, 0.002); end
  def test_outputs_energy_x330; assert_in_epsilon(54.126199601400444, worksheet.outputs_energy_x330, 0.002); end
  def test_outputs_energy_y330; assert_in_epsilon(55.05524328342939, worksheet.outputs_energy_y330, 0.002); end
  def test_outputs_energy_z330; assert_in_epsilon(55.98422837731232, worksheet.outputs_energy_z330, 0.002); end
  def test_outputs_energy_c331; assert_equal("Timber", worksheet.outputs_energy_c331); end
  def test_outputs_energy_d331; assert_equal("Timber", worksheet.outputs_energy_d331); end
  def test_outputs_energy_i331; assert_equal("G.M.02", worksheet.outputs_energy_i331); end
  def test_outputs_energy_r331; assert_in_epsilon(6.142647935033603, worksheet.outputs_energy_r331, 0.002); end
  def test_outputs_energy_s331; assert_in_epsilon(6.406125419270791, worksheet.outputs_energy_s331, 0.002); end
  def test_outputs_energy_t331; assert_in_epsilon(6.889551916466089, worksheet.outputs_energy_t331, 0.002); end
  def test_outputs_energy_u331; assert_in_epsilon(7.1604854404927085, worksheet.outputs_energy_u331, 0.002); end
  def test_outputs_energy_v331; assert_in_epsilon(7.404845233731581, worksheet.outputs_energy_v331, 0.002); end
  def test_outputs_energy_w331; assert_in_epsilon(7.630606638286352, worksheet.outputs_energy_w331, 0.002); end
  def test_outputs_energy_x331; assert_in_epsilon(7.8342350990116145, worksheet.outputs_energy_x331, 0.002); end
  def test_outputs_energy_y331; assert_in_epsilon(8.025681636170408, worksheet.outputs_energy_y331, 0.002); end
  def test_outputs_energy_z331; assert_in_epsilon(8.18285309924693, worksheet.outputs_energy_z331, 0.002); end
  def test_outputs_energy_c332; assert_equal("Total", worksheet.outputs_energy_c332); end
  def test_outputs_energy_j332; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j332, 0.002); end
  def test_outputs_energy_k332; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k332, 0.002); end
  def test_outputs_energy_l332; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l332, 0.002); end
  def test_outputs_energy_m332; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m332, 0.002); end
  def test_outputs_energy_n332; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n332, 0.002); end
  def test_outputs_energy_o332; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o332, 0.002); end
  def test_outputs_energy_p332; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p332, 0.002); end
  def test_outputs_energy_r332; assert_in_epsilon(143.3476207635151, worksheet.outputs_energy_r332, 0.002); end
  def test_outputs_energy_s332; assert_in_epsilon(149.90858087649323, worksheet.outputs_energy_s332, 0.002); end
  def test_outputs_energy_t332; assert_in_epsilon(159.85099790341988, worksheet.outputs_energy_t332, 0.002); end
  def test_outputs_energy_u332; assert_in_epsilon(171.54208720827916, worksheet.outputs_energy_u332, 0.002); end
  def test_outputs_energy_v332; assert_in_epsilon(183.17957432831474, worksheet.outputs_energy_v332, 0.002); end
  def test_outputs_energy_w332; assert_in_epsilon(194.2986143701665, worksheet.outputs_energy_w332, 0.002); end
  def test_outputs_energy_x332; assert_in_epsilon(206.34206575053076, worksheet.outputs_energy_x332, 0.002); end
  def test_outputs_energy_y332; assert_in_epsilon(218.67279995702324, worksheet.outputs_energy_y332, 0.002); end
  def test_outputs_energy_z332; assert_in_epsilon(232.2583775808071, worksheet.outputs_energy_z332, 0.002); end
  def test_outputs_energy_c354; assert_equal("Description", worksheet.outputs_energy_c354); end
  def test_outputs_energy_p354; assert_in_epsilon(2011.0, worksheet.outputs_energy_p354, 0.002); end
  def test_outputs_energy_r354; assert_in_epsilon(2011.0, worksheet.outputs_energy_r354, 0.002); end
  def test_outputs_energy_s354; assert_equal("2015", worksheet.outputs_energy_s354); end
  def test_outputs_energy_t354; assert_equal("2020", worksheet.outputs_energy_t354); end
  def test_outputs_energy_u354; assert_equal("2025", worksheet.outputs_energy_u354); end
  def test_outputs_energy_v354; assert_equal("2030", worksheet.outputs_energy_v354); end
  def test_outputs_energy_w354; assert_equal("2035", worksheet.outputs_energy_w354); end
  def test_outputs_energy_x354; assert_equal("2040", worksheet.outputs_energy_x354); end
  def test_outputs_energy_y354; assert_equal("2045", worksheet.outputs_energy_y354); end
  def test_outputs_energy_z354; assert_equal("2050", worksheet.outputs_energy_z354); end
  def test_outputs_energy_c355; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c355); end
  def test_outputs_energy_d355; assert_equal("G.C.01", worksheet.outputs_energy_d355); end
  def test_outputs_energy_e355; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e355); end
  def test_outputs_energy_f355; assert_equal("G.FF.01", worksheet.outputs_energy_f355); end
  def test_outputs_energy_g355; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_g355); end
  def test_outputs_energy_k355; assert_equal("Global manufacturing", worksheet.outputs_energy_k355); end
  def test_outputs_energy_p355; assert_in_epsilon(50.46, worksheet.outputs_energy_p355, 0.002); end
  def test_outputs_energy_r355; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_r355, 0.002); end
  def test_outputs_energy_s355; assert_in_epsilon(52.662638234121516, worksheet.outputs_energy_s355, 0.002); end
  def test_outputs_energy_t355; assert_in_epsilon(56.258200763341726, worksheet.outputs_energy_t355, 0.002); end
  def test_outputs_energy_u355; assert_in_epsilon(59.76222804822574, worksheet.outputs_energy_u355, 0.002); end
  def test_outputs_energy_v355; assert_in_epsilon(62.93770782435111, worksheet.outputs_energy_v355, 0.002); end
  def test_outputs_energy_w355; assert_in_epsilon(65.78981415006456, worksheet.outputs_energy_w355, 0.002); end
  def test_outputs_energy_x355; assert_in_epsilon(68.769418858025, worksheet.outputs_energy_x355, 0.002); end
  def test_outputs_energy_y355; assert_in_epsilon(71.79091331068926, worksheet.outputs_energy_y355, 0.002); end
  def test_outputs_energy_z355; assert_in_epsilon(74.97560347260675, worksheet.outputs_energy_z355, 0.002); end
  def test_outputs_energy_c356; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c356); end
  def test_outputs_energy_d356; assert_equal("G.C.02", worksheet.outputs_energy_d356); end
  def test_outputs_energy_e356; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e356); end
  def test_outputs_energy_f356; assert_equal("G.FF.02", worksheet.outputs_energy_f356); end
  def test_outputs_energy_g356; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_g356); end
  def test_outputs_energy_k356; assert_equal("Global manufacturing", worksheet.outputs_energy_k356); end
  def test_outputs_energy_p356; assert_in_epsilon(30.59, worksheet.outputs_energy_p356, 0.002); end
  def test_outputs_energy_r356; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_r356, 0.002); end
  def test_outputs_energy_s356; assert_in_epsilon(32.5914041713648, worksheet.outputs_energy_s356, 0.002); end
  def test_outputs_energy_t356; assert_in_epsilon(34.710604827122424, worksheet.outputs_energy_t356, 0.002); end
  def test_outputs_energy_u356; assert_in_epsilon(38.13829244080774, worksheet.outputs_energy_u356, 0.002); end
  def test_outputs_energy_v356; assert_in_epsilon(41.70138261106817, worksheet.outputs_energy_v356, 0.002); end
  def test_outputs_energy_w356; assert_in_epsilon(45.270002925022254, worksheet.outputs_energy_w356, 0.002); end
  def test_outputs_energy_x356; assert_in_epsilon(49.27992628934742, worksheet.outputs_energy_x356, 0.002); end
  def test_outputs_energy_y356; assert_in_epsilon(53.4464372688997, worksheet.outputs_energy_y356, 0.002); end
  def test_outputs_energy_z356; assert_in_epsilon(58.165726404609295, worksheet.outputs_energy_z356, 0.002); end
  def test_outputs_energy_c357; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c357); end
  def test_outputs_energy_d357; assert_equal("G.C.03", worksheet.outputs_energy_d357); end
  def test_outputs_energy_e357; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e357); end
  def test_outputs_energy_f357; assert_equal("G.FF.03", worksheet.outputs_energy_f357); end
  def test_outputs_energy_g357; assert_equal("Global Natural gas", worksheet.outputs_energy_g357); end
  def test_outputs_energy_k357; assert_equal("Global manufacturing", worksheet.outputs_energy_k357); end
  def test_outputs_energy_p357; assert_in_epsilon(27.89, worksheet.outputs_energy_p357, 0.002); end
  def test_outputs_energy_r357; assert_in_epsilon(27.233246077496677, worksheet.outputs_energy_r357, 0.002); end
  def test_outputs_energy_s357; assert_in_epsilon(28.623908778702972, worksheet.outputs_energy_s357, 0.002); end
  def test_outputs_energy_t357; assert_in_epsilon(30.55290093738514, worksheet.outputs_energy_t357, 0.002); end
  def test_outputs_energy_u357; assert_in_epsilon(32.77828226532515, worksheet.outputs_energy_u357, 0.002); end
  def test_outputs_energy_v357; assert_in_epsilon(35.00073201282161, worksheet.outputs_energy_v357, 0.002); end
  def test_outputs_energy_w357; assert_in_epsilon(37.153407344346405, worksheet.outputs_energy_w357, 0.002); end
  def test_outputs_energy_x357; assert_in_epsilon(39.46812875116846, worksheet.outputs_energy_x357, 0.002); end
  def test_outputs_energy_y357; assert_in_epsilon(41.80203249155731, worksheet.outputs_energy_y357, 0.002); end
  def test_outputs_energy_z357; assert_in_epsilon(44.37848801208401, worksheet.outputs_energy_z357, 0.002); end
  def test_outputs_energy_c358; assert_equal("Electricity grid", worksheet.outputs_energy_c358); end
  def test_outputs_energy_d358; assert_equal("G.E.01", worksheet.outputs_energy_d358); end
  def test_outputs_energy_e358; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e358); end
  def test_outputs_energy_k358; assert_equal("Global manufacturing", worksheet.outputs_energy_k358); end
  def test_outputs_energy_p358; assert_in_epsilon(28.68, worksheet.outputs_energy_p358, 0.002); end
  def test_outputs_energy_r358; assert_in_epsilon(29.285413529720426, worksheet.outputs_energy_r358, 0.002); end
  def test_outputs_energy_s358; assert_in_epsilon(30.50876144050821, worksheet.outputs_energy_s358, 0.002); end
  def test_outputs_energy_t358; assert_in_epsilon(32.45796214673477, worksheet.outputs_energy_t358, 0.002); end
  def test_outputs_energy_u358; assert_in_epsilon(34.54644635237625, worksheet.outputs_energy_u358, 0.002); end
  def test_outputs_energy_v358; assert_in_epsilon(36.58870242315401, worksheet.outputs_energy_v358, 0.002); end
  def test_outputs_energy_w358; assert_in_epsilon(38.495964146263525, worksheet.outputs_energy_w358, 0.002); end
  def test_outputs_energy_x358; assert_in_epsilon(40.52795923221533, worksheet.outputs_energy_x358, 0.002); end
  def test_outputs_energy_y358; assert_in_epsilon(42.59127077930369, worksheet.outputs_energy_y358, 0.002); end
  def test_outputs_energy_z358; assert_in_epsilon(44.86077220939399, worksheet.outputs_energy_z358, 0.002); end
  def test_outputs_energy_c359; assert_equal("Heat network", worksheet.outputs_energy_c359); end
  def test_outputs_energy_d359; assert_equal("G.H.01", worksheet.outputs_energy_d359); end
  def test_outputs_energy_e359; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e359); end
  def test_outputs_energy_k359; assert_equal("Global manufacturing", worksheet.outputs_energy_k359); end
  def test_outputs_energy_p359; assert_in_epsilon(5.31, worksheet.outputs_energy_p359, 0.002); end
  def test_outputs_energy_r359; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_r359, 0.002); end
  def test_outputs_energy_s359; assert_in_epsilon(5.521868251795736, worksheet.outputs_energy_s359, 0.002); end
  def test_outputs_energy_t359; assert_in_epsilon(5.871329228835805, worksheet.outputs_energy_t359, 0.002); end
  def test_outputs_energy_u359; assert_in_epsilon(6.316838101544244, worksheet.outputs_energy_u359, 0.002); end
  def test_outputs_energy_v359; assert_in_epsilon(6.763391589250489, worksheet.outputs_energy_v359, 0.002); end
  def test_outputs_energy_w359; assert_in_epsilon(7.191392401910964, worksheet.outputs_energy_w359, 0.002); end
  def test_outputs_energy_x359; assert_in_epsilon(7.66196773713294, worksheet.outputs_energy_x359, 0.002); end
  def test_outputs_energy_y359; assert_in_epsilon(8.142660323135106, worksheet.outputs_energy_y359, 0.002); end
  def test_outputs_energy_z359; assert_in_epsilon(8.683238405900775, worksheet.outputs_energy_z359, 0.002); end
  def test_outputs_energy_d214; assert_in_epsilon(242607775716314.97, worksheet.outputs_energy_d214, 0.002); end
  def test_outputs_energy_d215; assert_in_epsilon(265349795354999.97, worksheet.outputs_energy_d215, 0.002); end
  def test_outputs_energy_d216; assert_in_epsilon(234824234714999.97, worksheet.outputs_energy_d216, 0.002); end
  def test_outputs_energy_d245; assert_in_epsilon(636000000000000.0, worksheet.outputs_energy_d245, 0.002); end
  def test_outputs_energy_d246; assert_in_epsilon(477000000000000.0, worksheet.outputs_energy_d246, 0.002); end
  def test_outputs_energy_d247; assert_in_epsilon(365700000000000.0, worksheet.outputs_energy_d247, 0.002); end
  def test_outputs_energy_c494; assert_equal("Description", worksheet.outputs_energy_c494); end
  def test_outputs_energy_r494; assert_in_epsilon(2011.0, worksheet.outputs_energy_r494, 0.002); end
  def test_outputs_energy_s494; assert_equal("2015", worksheet.outputs_energy_s494); end
  def test_outputs_energy_t494; assert_equal("2020", worksheet.outputs_energy_t494); end
  def test_outputs_energy_u494; assert_equal("2025", worksheet.outputs_energy_u494); end
  def test_outputs_energy_v494; assert_equal("2030", worksheet.outputs_energy_v494); end
  def test_outputs_energy_w494; assert_equal("2035", worksheet.outputs_energy_w494); end
  def test_outputs_energy_x494; assert_equal("2040", worksheet.outputs_energy_x494); end
  def test_outputs_energy_y494; assert_equal("2045", worksheet.outputs_energy_y494); end
  def test_outputs_energy_z494; assert_equal("2050", worksheet.outputs_energy_z494); end
  def test_outputs_energy_c495; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_c495); end
  def test_outputs_energy_i495; assert_equal("G.M.02", worksheet.outputs_energy_i495); end
  def test_outputs_energy_r495; assert_in_epsilon(3.020565131792657, worksheet.outputs_energy_r495, 0.002); end
  def test_outputs_energy_s495; assert_in_epsilon(3.1398048731801484, worksheet.outputs_energy_s495, 0.002); end
  def test_outputs_energy_t495; assert_in_epsilon(3.2531560865929414, worksheet.outputs_energy_t495, 0.002); end
  def test_outputs_energy_u495; assert_in_epsilon(3.510088507476607, worksheet.outputs_energy_u495, 0.002); end
  def test_outputs_energy_v495; assert_in_epsilon(3.7652604279711506, worksheet.outputs_energy_v495, 0.002); end
  def test_outputs_energy_w495; assert_in_epsilon(4.008024381961799, worksheet.outputs_energy_w495, 0.002); end
  def test_outputs_energy_x495; assert_in_epsilon(4.274654552364053, worksheet.outputs_energy_x495, 0.002); end
  def test_outputs_energy_y495; assert_in_epsilon(4.531054066924015, worksheet.outputs_energy_y495, 0.002); end
  def test_outputs_energy_z495; assert_in_epsilon(4.814406329744195, worksheet.outputs_energy_z495, 0.002); end
  def test_outputs_energy_c496; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_c496); end
  def test_outputs_energy_i496; assert_equal("G.M.02", worksheet.outputs_energy_i496); end
  def test_outputs_energy_r496; assert_in_epsilon(3.059951650403277, worksheet.outputs_energy_r496, 0.002); end
  def test_outputs_energy_s496; assert_in_epsilon(3.1807641896010903, worksheet.outputs_energy_s496, 0.002); end
  def test_outputs_energy_t496; assert_in_epsilon(3.2956173709767977, worksheet.outputs_energy_t496, 0.002); end
  def test_outputs_energy_u496; assert_in_epsilon(3.5559284785495793, worksheet.outputs_energy_u496, 0.002); end
  def test_outputs_energy_v496; assert_in_epsilon(3.814459757797597, worksheet.outputs_energy_v496, 0.002); end
  def test_outputs_energy_w496; assert_in_epsilon(4.060424501664727, worksheet.outputs_energy_w496, 0.002); end
  def test_outputs_energy_x496; assert_in_epsilon(4.330571127501414, worksheet.outputs_energy_x496, 0.002); end
  def test_outputs_energy_y496; assert_in_epsilon(4.590357011359913, worksheet.outputs_energy_y496, 0.002); end
  def test_outputs_energy_z496; assert_in_epsilon(4.877452264062475, worksheet.outputs_energy_z496, 0.002); end
  def test_outputs_energy_c497; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_c497); end
  def test_outputs_energy_i497; assert_equal("G.M.02", worksheet.outputs_energy_i497); end
  def test_outputs_energy_r497; assert_in_delta(0.5308491227739531, worksheet.outputs_energy_r497, 0.002); end
  def test_outputs_energy_s497; assert_in_delta(0.5670653646556778, worksheet.outputs_energy_s497, 0.002); end
  def test_outputs_energy_t497; assert_in_delta(0.5919422753801, worksheet.outputs_energy_t497, 0.002); end
  def test_outputs_energy_u497; assert_in_delta(0.643471326788899, worksheet.outputs_energy_u497, 0.002); end
  def test_outputs_energy_v497; assert_in_delta(0.6954015015077294, worksheet.outputs_energy_v497, 0.002); end
  def test_outputs_energy_w497; assert_in_delta(0.7457501339491747, worksheet.outputs_energy_w497, 0.002); end
  def test_outputs_energy_x497; assert_in_delta(0.8012709739483965, worksheet.outputs_energy_x497, 0.002); end
  def test_outputs_energy_y497; assert_in_delta(0.8556303156558033, worksheet.outputs_energy_y497, 0.002); end
  def test_outputs_energy_z497; assert_in_delta(0.9158649361208299, worksheet.outputs_energy_z497, 0.002); end
  def test_outputs_energy_c498; assert_equal("Total", worksheet.outputs_energy_c498); end
  def test_outputs_energy_r498; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r498, 0.002); end
  def test_outputs_energy_s498; assert_in_epsilon(6.887634427436916, worksheet.outputs_energy_s498, 0.002); end
  def test_outputs_energy_t498; assert_in_epsilon(7.14071573294984, worksheet.outputs_energy_t498, 0.002); end
  def test_outputs_energy_u498; assert_in_epsilon(7.709488312815085, worksheet.outputs_energy_u498, 0.002); end
  def test_outputs_energy_v498; assert_in_epsilon(8.275121687276478, worksheet.outputs_energy_v498, 0.002); end
  def test_outputs_energy_w498; assert_in_epsilon(8.814199017575701, worksheet.outputs_energy_w498, 0.002); end
  def test_outputs_energy_x498; assert_in_epsilon(9.406496653813862, worksheet.outputs_energy_x498, 0.002); end
  def test_outputs_energy_y498; assert_in_epsilon(9.97704139393973, worksheet.outputs_energy_y498, 0.002); end
  def test_outputs_energy_z498; assert_in_epsilon(10.6077235299275, worksheet.outputs_energy_z498, 0.002); end
  def test_outputs_energy_c398; assert_equal("Description", worksheet.outputs_energy_c398); end
  def test_outputs_energy_r398; assert_in_epsilon(2011.0, worksheet.outputs_energy_r398, 0.002); end
  def test_outputs_energy_s398; assert_equal("2015", worksheet.outputs_energy_s398); end
  def test_outputs_energy_t398; assert_equal("2020", worksheet.outputs_energy_t398); end
  def test_outputs_energy_u398; assert_equal("2025", worksheet.outputs_energy_u398); end
  def test_outputs_energy_v398; assert_equal("2030", worksheet.outputs_energy_v398); end
  def test_outputs_energy_w398; assert_equal("2035", worksheet.outputs_energy_w398); end
  def test_outputs_energy_x398; assert_equal("2040", worksheet.outputs_energy_x398); end
  def test_outputs_energy_y398; assert_equal("2045", worksheet.outputs_energy_y398); end
  def test_outputs_energy_z398; assert_equal("2050", worksheet.outputs_energy_z398); end
  def test_outputs_energy_c399; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c399); end
  def test_outputs_energy_e399; assert_equal("G.C.01", worksheet.outputs_energy_e399); end
  def test_outputs_energy_f399; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f399); end
  def test_outputs_energy_k399; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k399); end
  def test_outputs_energy_r399; assert_in_epsilon(99.96425579799836, worksheet.outputs_energy_r399, 0.002); end
  def test_outputs_energy_s399; assert_in_epsilon(99.21168912213203, worksheet.outputs_energy_s399, 0.002); end
  def test_outputs_energy_t399; assert_in_epsilon(101.25397935672275, worksheet.outputs_energy_t399, 0.002); end
  def test_outputs_energy_u399; assert_in_epsilon(113.19534067338495, worksheet.outputs_energy_u399, 0.002); end
  def test_outputs_energy_v399; assert_in_epsilon(121.51843751622079, worksheet.outputs_energy_v399, 0.002); end
  def test_outputs_energy_w399; assert_in_epsilon(126.9323205962694, worksheet.outputs_energy_w399, 0.002); end
  def test_outputs_energy_x399; assert_in_epsilon(128.81254870158486, worksheet.outputs_energy_x399, 0.002); end
  def test_outputs_energy_y399; assert_in_epsilon(120.28215544741668, worksheet.outputs_energy_y399, 0.002); end
  def test_outputs_energy_z399; assert_in_epsilon(113.98641877770709, worksheet.outputs_energy_z399, 0.002); end
  def test_outputs_energy_c400; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c400); end
  def test_outputs_energy_e400; assert_equal("G.C.02", worksheet.outputs_energy_e400); end
  def test_outputs_energy_f400; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f400); end
  def test_outputs_energy_k400; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k400); end
  def test_outputs_energy_r400; assert_in_epsilon(11.603025273887752, worksheet.outputs_energy_r400, 0.002); end
  def test_outputs_energy_s400; assert_in_epsilon(11.408506911143634, worksheet.outputs_energy_s400, 0.002); end
  def test_outputs_energy_t400; assert_in_epsilon(22.363602409682926, worksheet.outputs_energy_t400, 0.002); end
  def test_outputs_energy_u400; assert_in_epsilon(25.099250014958024, worksheet.outputs_energy_u400, 0.002); end
  def test_outputs_energy_v400; assert_in_epsilon(32.554604599443174, worksheet.outputs_energy_v400, 0.002); end
  def test_outputs_energy_w400; assert_in_epsilon(37.6997301357319, worksheet.outputs_energy_w400, 0.002); end
  def test_outputs_energy_x400; assert_in_epsilon(43.38722636050451, worksheet.outputs_energy_x400, 0.002); end
  def test_outputs_energy_y400; assert_in_epsilon(51.13698649442448, worksheet.outputs_energy_y400, 0.002); end
  def test_outputs_energy_z400; assert_in_epsilon(56.69814809637913, worksheet.outputs_energy_z400, 0.002); end
  def test_outputs_energy_c401; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c401); end
  def test_outputs_energy_e401; assert_equal("G.C.03", worksheet.outputs_energy_e401); end
  def test_outputs_energy_f401; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f401); end
  def test_outputs_energy_k401; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k401); end
  def test_outputs_energy_r401; assert_in_epsilon(41.931025391305454, worksheet.outputs_energy_r401, 0.002); end
  def test_outputs_energy_s401; assert_in_epsilon(41.16360849911386, worksheet.outputs_energy_s401, 0.002); end
  def test_outputs_energy_t401; assert_in_epsilon(44.96648508888798, worksheet.outputs_energy_t401, 0.002); end
  def test_outputs_energy_u401; assert_in_epsilon(49.271112552290596, worksheet.outputs_energy_u401, 0.002); end
  def test_outputs_energy_v401; assert_in_epsilon(54.83494780534271, worksheet.outputs_energy_v401, 0.002); end
  def test_outputs_energy_w401; assert_in_epsilon(61.425872967674124, worksheet.outputs_energy_w401, 0.002); end
  def test_outputs_energy_x401; assert_in_epsilon(70.60799719697418, worksheet.outputs_energy_x401, 0.002); end
  def test_outputs_energy_y401; assert_in_epsilon(81.4643670139678, worksheet.outputs_energy_y401, 0.002); end
  def test_outputs_energy_z401; assert_in_epsilon(93.60018042738005, worksheet.outputs_energy_z401, 0.002); end
  def test_outputs_energy_n208; assert_in_epsilon(672.6052620060758, worksheet.outputs_energy_n208, 0.002); end
  def test_outputs_energy_n209; assert_in_epsilon(587.6052620060758, worksheet.outputs_energy_n209, 0.002); end
  def test_outputs_energy_n221; assert_in_epsilon(63.12176756492539, worksheet.outputs_energy_n221, 0.002); end
  def test_outputs_energy_n222; assert_in_epsilon(56.53901480366795, worksheet.outputs_energy_n222, 0.002); end
  def test_outputs_energy_n223; assert_in_epsilon(60.31097742049039, worksheet.outputs_energy_n223, 0.002); end
  def test_outputs_energy_n214; assert_in_epsilon(36441063748454.56, worksheet.outputs_energy_n214, 0.002); end
  def test_outputs_energy_n215; assert_in_epsilon(59183083387139.56, worksheet.outputs_energy_n215, 0.002); end
  def test_outputs_energy_n216; assert_in_epsilon(28657522747139.562, worksheet.outputs_energy_n216, 0.002); end
  def test_outputs_energy_c452; assert_equal("Description", worksheet.outputs_energy_c452); end
  def test_outputs_energy_r452; assert_in_epsilon(2011.0, worksheet.outputs_energy_r452, 0.002); end
  def test_outputs_energy_s452; assert_equal("2015", worksheet.outputs_energy_s452); end
  def test_outputs_energy_t452; assert_equal("2020", worksheet.outputs_energy_t452); end
  def test_outputs_energy_u452; assert_equal("2025", worksheet.outputs_energy_u452); end
  def test_outputs_energy_v452; assert_equal("2030", worksheet.outputs_energy_v452); end
  def test_outputs_energy_w452; assert_equal("2035", worksheet.outputs_energy_w452); end
  def test_outputs_energy_x452; assert_equal("2040", worksheet.outputs_energy_x452); end
  def test_outputs_energy_y452; assert_equal("2045", worksheet.outputs_energy_y452); end
  def test_outputs_energy_z452; assert_equal("2050", worksheet.outputs_energy_z452); end
  def test_outputs_energy_c453; assert_equal("Steel.Oxygen", worksheet.outputs_energy_c453); end
  def test_outputs_energy_i453; assert_equal("G.M.02", worksheet.outputs_energy_i453); end
  def test_outputs_energy_r453; assert_in_epsilon(21.619770962298666, worksheet.outputs_energy_r453, 0.002); end
  def test_outputs_energy_s453; assert_in_epsilon(22.085924994310147, worksheet.outputs_energy_s453, 0.002); end
  def test_outputs_energy_t453; assert_in_epsilon(23.07262864492792, worksheet.outputs_energy_t453, 0.002); end
  def test_outputs_energy_u453; assert_in_epsilon(24.252356113349347, worksheet.outputs_energy_u453, 0.002); end
  def test_outputs_energy_v453; assert_in_epsilon(25.309551727300033, worksheet.outputs_energy_v453, 0.002); end
  def test_outputs_energy_w453; assert_in_epsilon(26.14250094257869, worksheet.outputs_energy_w453, 0.002); end
  def test_outputs_energy_x453; assert_in_epsilon(27.050899735900185, worksheet.outputs_energy_x453, 0.002); end
  def test_outputs_energy_y453; assert_in_epsilon(27.97347819425863, worksheet.outputs_energy_y453, 0.002); end
  def test_outputs_energy_z453; assert_in_epsilon(28.896406625402868, worksheet.outputs_energy_z453, 0.002); end
  def test_outputs_energy_c454; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_c454); end
  def test_outputs_energy_i454; assert_equal("G.M.02", worksheet.outputs_energy_i454); end
  def test_outputs_energy_r454; assert_in_delta(0.0, (worksheet.outputs_energy_r454||0), 0.002); end
  def test_outputs_energy_s454; assert_in_delta(0.3815790522488694, worksheet.outputs_energy_s454, 0.002); end
  def test_outputs_energy_t454; assert_in_delta(0.8579617610401943, worksheet.outputs_energy_t454, 0.002); end
  def test_outputs_energy_u454; assert_in_epsilon(1.404053781195336, worksheet.outputs_energy_u454, 0.002); end
  def test_outputs_energy_v454; assert_in_epsilon(2.0108639215511843, worksheet.outputs_energy_v454, 0.002); end
  def test_outputs_energy_w454; assert_in_epsilon(2.6641901657047553, worksheet.outputs_energy_w454, 0.002); end
  def test_outputs_energy_x454; assert_in_epsilon(3.3902823124175483, worksheet.outputs_energy_x454, 0.002); end
  def test_outputs_energy_y454; assert_in_epsilon(4.18964017045536, worksheet.outputs_energy_y454, 0.002); end
  def test_outputs_energy_z454; assert_in_epsilon(5.0656860169186935, worksheet.outputs_energy_z454, 0.002); end
  def test_outputs_energy_c455; assert_equal("Steel.Electric", worksheet.outputs_energy_c455); end
  def test_outputs_energy_i455; assert_equal("G.M.02", worksheet.outputs_energy_i455); end
  def test_outputs_energy_r455; assert_in_epsilon(2.6697592633263763, worksheet.outputs_energy_r455, 0.002); end
  def test_outputs_energy_s455; assert_in_epsilon(2.929256483984991, worksheet.outputs_energy_s455, 0.002); end
  def test_outputs_energy_t455; assert_in_epsilon(3.1404848134539227, worksheet.outputs_energy_t455, 0.002); end
  def test_outputs_energy_u455; assert_in_epsilon(3.3881573569183407, worksheet.outputs_energy_u455, 0.002); end
  def test_outputs_energy_v455; assert_in_epsilon(3.629641542548831, worksheet.outputs_energy_v455, 0.002); end
  def test_outputs_energy_w455; assert_in_epsilon(3.8491377473549493, worksheet.outputs_energy_w455, 0.002); end
  def test_outputs_energy_x455; assert_in_epsilon(4.089880074478328, worksheet.outputs_energy_x455, 0.002); end
  def test_outputs_energy_y455; assert_in_epsilon(4.343820565168382, worksheet.outputs_energy_y455, 0.002); end
  def test_outputs_energy_z455; assert_in_epsilon(4.609552437463069, worksheet.outputs_energy_z455, 0.002); end
  def test_outputs_energy_c456; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_c456); end
  def test_outputs_energy_i456; assert_equal("G.M.02", worksheet.outputs_energy_i456); end
  def test_outputs_energy_r456; assert_in_delta(0.48100793205535164, worksheet.outputs_energy_r456, 0.002); end
  def test_outputs_energy_s456; assert_in_delta(0.5713195299691578, worksheet.outputs_energy_s456, 0.002); end
  def test_outputs_energy_t456; assert_in_delta(0.6669587844477082, worksheet.outputs_energy_t456, 0.002); end
  def test_outputs_energy_u456; assert_in_delta(0.7813491291705992, worksheet.outputs_energy_u456, 0.002); end
  def test_outputs_energy_v456; assert_in_delta(0.906619268779637, worksheet.outputs_energy_v456, 0.002); end
  def test_outputs_energy_w456; assert_in_epsilon(1.0389494213610955, worksheet.outputs_energy_w456, 0.002); end
  def test_outputs_energy_x456; assert_in_epsilon(1.1903671686916757, worksheet.outputs_energy_x456, 0.002); end
  def test_outputs_energy_y456; assert_in_epsilon(1.3605744448482313, worksheet.outputs_energy_y456, 0.002); end
  def test_outputs_energy_z456; assert_in_epsilon(1.5509348568648815, worksheet.outputs_energy_z456, 0.002); end
  def test_outputs_energy_c457; assert_equal("Steel.others", worksheet.outputs_energy_c457); end
  def test_outputs_energy_i457; assert_equal("G.M.02", worksheet.outputs_energy_i457); end
  def test_outputs_energy_r457; assert_in_epsilon(6.671485699703609, worksheet.outputs_energy_r457, 0.002); end
  def test_outputs_energy_s457; assert_in_epsilon(6.910175002719285, worksheet.outputs_energy_s457, 0.002); end
  def test_outputs_energy_t457; assert_in_epsilon(7.3328790333423335, worksheet.outputs_energy_t457, 0.002); end
  def test_outputs_energy_u457; assert_in_epsilon(7.832243500158532, worksheet.outputs_energy_u457, 0.002); end
  def test_outputs_energy_v457; assert_in_epsilon(8.308621749471945, worksheet.outputs_energy_v457, 0.002); end
  def test_outputs_energy_w457; assert_in_epsilon(8.727071891890253, worksheet.outputs_energy_w457, 0.002); end
  def test_outputs_energy_x457; assert_in_epsilon(9.186544456389171, worksheet.outputs_energy_x457, 0.002); end
  def test_outputs_energy_y457; assert_in_epsilon(9.668212804418548, worksheet.outputs_energy_y457, 0.002); end
  def test_outputs_energy_z457; assert_in_epsilon(10.168611621039314, worksheet.outputs_energy_z457, 0.002); end
  def test_outputs_energy_c458; assert_equal("Total", worksheet.outputs_energy_c458); end
  def test_outputs_energy_r458; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r458, 0.002); end
  def test_outputs_energy_s458; assert_in_epsilon(32.87825506323245, worksheet.outputs_energy_s458, 0.002); end
  def test_outputs_energy_t458; assert_in_epsilon(35.07091303721208, worksheet.outputs_energy_t458, 0.002); end
  def test_outputs_energy_u458; assert_in_epsilon(37.658159880792155, worksheet.outputs_energy_u458, 0.002); end
  def test_outputs_energy_v458; assert_in_epsilon(40.16529820965163, worksheet.outputs_energy_v458, 0.002); end
  def test_outputs_energy_w458; assert_in_epsilon(42.42185016888975, worksheet.outputs_energy_w458, 0.002); end
  def test_outputs_energy_x458; assert_in_epsilon(44.9079737478769, worksheet.outputs_energy_x458, 0.002); end
  def test_outputs_energy_y458; assert_in_epsilon(47.53572617914915, worksheet.outputs_energy_y458, 0.002); end
  def test_outputs_energy_z458; assert_in_epsilon(50.29119155768883, worksheet.outputs_energy_z458, 0.002); end
  def test_outputs_energy_c341; assert_equal("Description", worksheet.outputs_energy_c341); end
  def test_outputs_energy_r341; assert_in_epsilon(2011.0, worksheet.outputs_energy_r341, 0.002); end
  def test_outputs_energy_s341; assert_equal("2015", worksheet.outputs_energy_s341); end
  def test_outputs_energy_t341; assert_equal("2020", worksheet.outputs_energy_t341); end
  def test_outputs_energy_u341; assert_equal("2025", worksheet.outputs_energy_u341); end
  def test_outputs_energy_v341; assert_equal("2030", worksheet.outputs_energy_v341); end
  def test_outputs_energy_w341; assert_equal("2035", worksheet.outputs_energy_w341); end
  def test_outputs_energy_x341; assert_equal("2040", worksheet.outputs_energy_x341); end
  def test_outputs_energy_y341; assert_equal("2045", worksheet.outputs_energy_y341); end
  def test_outputs_energy_z341; assert_equal("2050", worksheet.outputs_energy_z341); end
  def test_outputs_energy_c342; assert_equal("G.T.01", worksheet.outputs_energy_c342); end
  def test_outputs_energy_d342; assert_equal("Global Road transport", worksheet.outputs_energy_d342); end
  def test_outputs_energy_r342; assert_in_epsilon(76.33121003692581, worksheet.outputs_energy_r342, 0.002); end
  def test_outputs_energy_s342; assert_in_epsilon(83.29863545833402, worksheet.outputs_energy_s342, 0.002); end
  def test_outputs_energy_t342; assert_in_epsilon(92.77750500484308, worksheet.outputs_energy_t342, 0.002); end
  def test_outputs_energy_u342; assert_in_epsilon(100.34468602989375, worksheet.outputs_energy_u342, 0.002); end
  def test_outputs_energy_v342; assert_in_epsilon(106.76753675732903, worksheet.outputs_energy_v342, 0.002); end
  def test_outputs_energy_w342; assert_in_epsilon(111.89884677951738, worksheet.outputs_energy_w342, 0.002); end
  def test_outputs_energy_x342; assert_in_epsilon(116.08588382592025, worksheet.outputs_energy_x342, 0.002); end
  def test_outputs_energy_y342; assert_in_epsilon(119.76563576680661, worksheet.outputs_energy_y342, 0.002); end
  def test_outputs_energy_z342; assert_in_epsilon(123.28994974217233, worksheet.outputs_energy_z342, 0.002); end
  def test_outputs_energy_c343; assert_equal("G.T.02", worksheet.outputs_energy_c343); end
  def test_outputs_energy_d343; assert_equal("Global Rail transport", worksheet.outputs_energy_d343); end
  def test_outputs_energy_r343; assert_in_epsilon(2.6424382095496397, worksheet.outputs_energy_r343, 0.002); end
  def test_outputs_energy_s343; assert_in_epsilon(2.7976387322961616, worksheet.outputs_energy_s343, 0.002); end
  def test_outputs_energy_t343; assert_in_epsilon(3.071735975839207, worksheet.outputs_energy_t343, 0.002); end
  def test_outputs_energy_u343; assert_in_epsilon(3.283410110266919, worksheet.outputs_energy_u343, 0.002); end
  def test_outputs_energy_v343; assert_in_epsilon(3.40584076323021, worksheet.outputs_energy_v343, 0.002); end
  def test_outputs_energy_w343; assert_in_epsilon(3.4441837830316415, worksheet.outputs_energy_w343, 0.002); end
  def test_outputs_energy_x343; assert_in_epsilon(3.4221044110053946, worksheet.outputs_energy_x343, 0.002); end
  def test_outputs_energy_y343; assert_in_epsilon(3.3699015224216398, worksheet.outputs_energy_y343, 0.002); end
  def test_outputs_energy_z343; assert_in_epsilon(3.2970778036793376, worksheet.outputs_energy_z343, 0.002); end
  def test_outputs_energy_c344; assert_equal("G.T.03", worksheet.outputs_energy_c344); end
  def test_outputs_energy_d344; assert_equal("Global Aviation transport", worksheet.outputs_energy_d344); end
  def test_outputs_energy_r344; assert_in_epsilon(11.887639232071237, worksheet.outputs_energy_r344, 0.002); end
  def test_outputs_energy_s344; assert_in_epsilon(12.577832848796705, worksheet.outputs_energy_s344, 0.002); end
  def test_outputs_energy_t344; assert_in_epsilon(13.184860764908146, worksheet.outputs_energy_t344, 0.002); end
  def test_outputs_energy_u344; assert_in_epsilon(13.586920756751567, worksheet.outputs_energy_u344, 0.002); end
  def test_outputs_energy_v344; assert_in_epsilon(14.175544487295987, worksheet.outputs_energy_v344, 0.002); end
  def test_outputs_energy_w344; assert_in_epsilon(14.93244361453014, worksheet.outputs_energy_w344, 0.002); end
  def test_outputs_energy_x344; assert_in_epsilon(15.862505204486853, worksheet.outputs_energy_x344, 0.002); end
  def test_outputs_energy_y344; assert_in_epsilon(17.010411805271435, worksheet.outputs_energy_y344, 0.002); end
  def test_outputs_energy_z344; assert_in_epsilon(18.403131874637815, worksheet.outputs_energy_z344, 0.002); end
  def test_outputs_energy_c345; assert_equal("G.T.04", worksheet.outputs_energy_c345); end
  def test_outputs_energy_d345; assert_equal("Global Water transport", worksheet.outputs_energy_d345); end
  def test_outputs_energy_r345; assert_in_epsilon(9.498632856887696, worksheet.outputs_energy_r345, 0.002); end
  def test_outputs_energy_s345; assert_in_epsilon(10.496700756454167, worksheet.outputs_energy_s345, 0.002); end
  def test_outputs_energy_t345; assert_in_epsilon(11.935197203117486, worksheet.outputs_energy_t345, 0.002); end
  def test_outputs_energy_u345; assert_in_epsilon(13.49627588956715, worksheet.outputs_energy_u345, 0.002); end
  def test_outputs_energy_v345; assert_in_epsilon(14.887326831438754, worksheet.outputs_energy_v345, 0.002); end
  def test_outputs_energy_w345; assert_in_epsilon(15.278518745166082, worksheet.outputs_energy_w345, 0.002); end
  def test_outputs_energy_x345; assert_in_epsilon(15.296010786158826, worksheet.outputs_energy_x345, 0.002); end
  def test_outputs_energy_y345; assert_in_epsilon(15.234369964722188, worksheet.outputs_energy_y345, 0.002); end
  def test_outputs_energy_z345; assert_in_epsilon(14.876631090864748, worksheet.outputs_energy_z345, 0.002); end
  def test_outputs_energy_c384; assert_equal("Description", worksheet.outputs_energy_c384); end
  def test_outputs_energy_p384; assert_in_epsilon(2011.0, worksheet.outputs_energy_p384, 0.002); end
  def test_outputs_energy_r384; assert_in_epsilon(2011.0, worksheet.outputs_energy_r384, 0.002); end
  def test_outputs_energy_s384; assert_equal("2015", worksheet.outputs_energy_s384); end
  def test_outputs_energy_t384; assert_equal("2020", worksheet.outputs_energy_t384); end
  def test_outputs_energy_u384; assert_equal("2025", worksheet.outputs_energy_u384); end
  def test_outputs_energy_v384; assert_equal("2030", worksheet.outputs_energy_v384); end
  def test_outputs_energy_w384; assert_equal("2035", worksheet.outputs_energy_w384); end
  def test_outputs_energy_x384; assert_equal("2040", worksheet.outputs_energy_x384); end
  def test_outputs_energy_y384; assert_equal("2045", worksheet.outputs_energy_y384); end
  def test_outputs_energy_z384; assert_equal("2050", worksheet.outputs_energy_z384); end
  def test_outputs_energy_c385; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c385); end
  def test_outputs_energy_e385; assert_equal("G.C.01", worksheet.outputs_energy_e385); end
  def test_outputs_energy_f385; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f385); end
  def test_outputs_energy_k385; assert_equal("Global transport", worksheet.outputs_energy_k385); end
  def test_outputs_energy_p385; assert_in_delta(0.01, worksheet.outputs_energy_p385, 0.002); end
  def test_outputs_energy_r385; assert_in_delta(0.0, (worksheet.outputs_energy_r385||0), 0.002); end
  def test_outputs_energy_s385; assert_in_delta(0.0, (worksheet.outputs_energy_s385||0), 0.002); end
  def test_outputs_energy_t385; assert_in_delta(0.0, (worksheet.outputs_energy_t385||0), 0.002); end
  def test_outputs_energy_u385; assert_in_delta(0.0, (worksheet.outputs_energy_u385||0), 0.002); end
  def test_outputs_energy_v385; assert_in_delta(0.0, (worksheet.outputs_energy_v385||0), 0.002); end
  def test_outputs_energy_w385; assert_in_delta(0.0, (worksheet.outputs_energy_w385||0), 0.002); end
  def test_outputs_energy_x385; assert_in_delta(0.0, (worksheet.outputs_energy_x385||0), 0.002); end
  def test_outputs_energy_y385; assert_in_delta(0.0, (worksheet.outputs_energy_y385||0), 0.002); end
  def test_outputs_energy_z385; assert_in_delta(0.0, (worksheet.outputs_energy_z385||0), 0.002); end
  def test_outputs_energy_c386; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c386); end
  def test_outputs_energy_e386; assert_equal("G.C.02", worksheet.outputs_energy_e386); end
  def test_outputs_energy_f386; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f386); end
  def test_outputs_energy_k386; assert_equal("Global transport", worksheet.outputs_energy_k386); end
  def test_outputs_energy_p386; assert_in_epsilon(97.66, worksheet.outputs_energy_p386, 0.002); end
  def test_outputs_energy_r386; assert_in_epsilon(98.39054841752521, worksheet.outputs_energy_r386, 0.002); end
  def test_outputs_energy_s386; assert_in_epsilon(105.86292976774135, worksheet.outputs_energy_s386, 0.002); end
  def test_outputs_energy_t386; assert_in_epsilon(116.68673933519179, worksheet.outputs_energy_t386, 0.002); end
  def test_outputs_energy_u386; assert_in_epsilon(125.39334769411627, worksheet.outputs_energy_u386, 0.002); end
  def test_outputs_energy_v386; assert_in_epsilon(132.8660841659394, worksheet.outputs_energy_v386, 0.002); end
  def test_outputs_energy_w386; assert_in_epsilon(138.1573213541533, worksheet.outputs_energy_w386, 0.002); end
  def test_outputs_energy_x386; assert_in_epsilon(142.25553162304283, worksheet.outputs_energy_x386, 0.002); end
  def test_outputs_energy_y386; assert_in_epsilon(145.95585283561493, worksheet.outputs_energy_y386, 0.002); end
  def test_outputs_energy_z386; assert_in_epsilon(149.4220560373985, worksheet.outputs_energy_z386, 0.002); end
  def test_outputs_energy_c387; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c387); end
  def test_outputs_energy_e387; assert_equal("G.C.03", worksheet.outputs_energy_e387); end
  def test_outputs_energy_f387; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f387); end
  def test_outputs_energy_k387; assert_equal("Global transport", worksheet.outputs_energy_k387); end
  def test_outputs_energy_p387; assert_in_delta(0.8, worksheet.outputs_energy_p387, 0.002); end
  def test_outputs_energy_r387; assert_in_delta(0.3471995357508835, worksheet.outputs_energy_r387, 0.002); end
  def test_outputs_energy_s387; assert_in_delta(0.7896803613558725, worksheet.outputs_energy_s387, 0.002); end
  def test_outputs_energy_t387; assert_in_epsilon(1.1619706661451512, worksheet.outputs_energy_t387, 0.002); end
  def test_outputs_energy_u387; assert_in_epsilon(1.5776232963986192, worksheet.outputs_energy_u387, 0.002); end
  def test_outputs_energy_v387; assert_in_epsilon(2.0198544253434547, worksheet.outputs_energy_v387, 0.002); end
  def test_outputs_energy_w387; assert_in_epsilon(2.460705556190567, worksheet.outputs_energy_w387, 0.002); end
  def test_outputs_energy_x387; assert_in_epsilon(2.88985654993734, worksheet.outputs_energy_x387, 0.002); end
  def test_outputs_energy_y387; assert_in_epsilon(3.3126527055707653, worksheet.outputs_energy_y387, 0.002); end
  def test_outputs_energy_z387; assert_in_epsilon(3.723944042025474, worksheet.outputs_energy_z387, 0.002); end
  def test_outputs_energy_c388; assert_equal("Electricity grid", worksheet.outputs_energy_c388); end
  def test_outputs_energy_e388; assert_equal("G.E.01", worksheet.outputs_energy_e388); end
  def test_outputs_energy_f388; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_f388); end
  def test_outputs_energy_k388; assert_equal("Global transport", worksheet.outputs_energy_k388); end
  def test_outputs_energy_p388; assert_in_delta(0.75, worksheet.outputs_energy_p388, 0.002); end
  def test_outputs_energy_r388; assert_in_epsilon(1.6221723137825577, worksheet.outputs_energy_r388, 0.002); end
  def test_outputs_energy_s388; assert_in_epsilon(2.374592249060187, worksheet.outputs_energy_s388, 0.002); end
  def test_outputs_energy_t388; assert_in_epsilon(2.977600393852982, worksheet.outputs_energy_t388, 0.002); end
  def test_outputs_energy_u388; assert_in_epsilon(3.604820723994971, worksheet.outputs_energy_u388, 0.002); end
  def test_outputs_energy_v388; assert_in_epsilon(4.234278644133776, worksheet.outputs_energy_v388, 0.002); end
  def test_outputs_energy_w388; assert_in_epsilon(4.8456242002036145, worksheet.outputs_energy_w388, 0.002); end
  def test_outputs_energy_x388; assert_in_epsilon(5.459434039919716, worksheet.outputs_energy_x388, 0.002); end
  def test_outputs_energy_y388; assert_in_epsilon(6.080402700901868, worksheet.outputs_energy_y388, 0.002); end
  def test_outputs_energy_z388; assert_in_epsilon(6.720790431930237, worksheet.outputs_energy_z388, 0.002); end
  def test_outputs_energy_c389; assert_equal("Hydrogen", worksheet.outputs_energy_c389); end
  def test_outputs_energy_e389; assert_equal("G.HY.01", worksheet.outputs_energy_e389); end
  def test_outputs_energy_f389; assert_equal("Global H2", worksheet.outputs_energy_f389); end
  def test_outputs_energy_k389; assert_equal("Global transport", worksheet.outputs_energy_k389); end
  def test_outputs_energy_p389; assert_in_delta(0.0, (worksheet.outputs_energy_p389||0), 0.002); end
  def test_outputs_energy_r389; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_r389, 0.002); end
  def test_outputs_energy_s389; assert_in_delta(0.14360541772363922, worksheet.outputs_energy_s389, 0.002); end
  def test_outputs_energy_t389; assert_in_delta(0.14298855351802184, worksheet.outputs_energy_t389, 0.002); end
  def test_outputs_energy_u389; assert_in_delta(0.13550107196952046, worksheet.outputs_energy_u389, 0.002); end
  def test_outputs_energy_v389; assert_in_delta(0.11603160387732207, worksheet.outputs_energy_v389, 0.002); end
  def test_outputs_energy_w389; assert_in_delta(0.09034181169773167, worksheet.outputs_energy_w389, 0.002); end
  def test_outputs_energy_x389; assert_in_delta(0.06168201467145384, worksheet.outputs_energy_x389, 0.002); end
  def test_outputs_energy_y389; assert_in_delta(0.0314108171342785, worksheet.outputs_energy_y389, 0.002); end
  def test_outputs_energy_z389; assert_in_delta(0.0, (worksheet.outputs_energy_z389||0), 0.002); end
  def test_outputs_energy_d228; assert_in_delta(0.0063, worksheet.outputs_energy_d228, 0.002); end
  def test_outputs_energy_d229; assert_in_delta(0.016, worksheet.outputs_energy_d229, 0.002); end
  def test_outputs_energy_d230; assert_in_delta(0.038, worksheet.outputs_energy_d230, 0.002); end
  def test_outputs_energy_d260; assert_in_epsilon(4.0, worksheet.outputs_energy_d260, 0.002); end
  def test_outputs_energy_c180; assert_equal("Column1", worksheet.outputs_energy_c180); end
  def test_outputs_energy_d180; assert_equal("Description", worksheet.outputs_energy_d180); end
  def test_outputs_energy_e180; assert_equal("Column2", worksheet.outputs_energy_e180); end
  def test_outputs_energy_f180; assert_equal("Column3", worksheet.outputs_energy_f180); end
  def test_outputs_energy_g180; assert_equal("Notes", worksheet.outputs_energy_g180); end
  def test_outputs_energy_h180; assert_equal("Column4", worksheet.outputs_energy_h180); end
  def test_outputs_energy_i180; assert_equal("Column5", worksheet.outputs_energy_i180); end
  def test_outputs_energy_j180; assert_equal("Column6", worksheet.outputs_energy_j180); end
  def test_outputs_energy_k180; assert_equal("Column7", worksheet.outputs_energy_k180); end
  def test_outputs_energy_l180; assert_equal("Column8", worksheet.outputs_energy_l180); end
  def test_outputs_energy_m180; assert_equal("Column9", worksheet.outputs_energy_m180); end
  def test_outputs_energy_n180; assert_equal("Column10", worksheet.outputs_energy_n180); end
  def test_outputs_energy_o180; assert_equal("Column11", worksheet.outputs_energy_o180); end
  def test_outputs_energy_p180; assert_equal("Column12", worksheet.outputs_energy_p180); end
  def test_outputs_energy_q180; assert_equal("Column13", worksheet.outputs_energy_q180); end
  def test_outputs_energy_r180; assert_equal("2011", worksheet.outputs_energy_r180); end
  def test_outputs_energy_s180; assert_equal("2015", worksheet.outputs_energy_s180); end
  def test_outputs_energy_t180; assert_equal("2020", worksheet.outputs_energy_t180); end
  def test_outputs_energy_u180; assert_equal("2025", worksheet.outputs_energy_u180); end
  def test_outputs_energy_v180; assert_equal("2030", worksheet.outputs_energy_v180); end
  def test_outputs_energy_w180; assert_equal("2035", worksheet.outputs_energy_w180); end
  def test_outputs_energy_x180; assert_equal("2040", worksheet.outputs_energy_x180); end
  def test_outputs_energy_y180; assert_equal("2045", worksheet.outputs_energy_y180); end
  def test_outputs_energy_z180; assert_equal("2050", worksheet.outputs_energy_z180); end
  def test_outputs_energy_c181; assert_equal("G.Q.01", worksheet.outputs_energy_c181); end
  def test_outputs_energy_d181; assert_equal("Global Coal reserves ", worksheet.outputs_energy_d181); end
  def test_outputs_energy_g181; assert_equal("Gt", worksheet.outputs_energy_g181); end
  def test_outputs_energy_r181; assert_in_epsilon(6.922001180452792, worksheet.outputs_energy_r181, 0.002); end
  def test_outputs_energy_s181; assert_in_epsilon(27.838879282302873, worksheet.outputs_energy_s181, 0.002); end
  def test_outputs_energy_t181; assert_in_epsilon(56.84461751707234, worksheet.outputs_energy_t181, 0.002); end
  def test_outputs_energy_u181; assert_in_epsilon(88.48950047708462, worksheet.outputs_energy_u181, 0.002); end
  def test_outputs_energy_v181; assert_in_epsilon(122.93567943526008, worksheet.outputs_energy_v181, 0.002); end
  def test_outputs_energy_w181; assert_in_epsilon(159.5471299405901, worksheet.outputs_energy_w181, 0.002); end
  def test_outputs_energy_x181; assert_in_epsilon(197.6982433936621, worksheet.outputs_energy_x181, 0.002); end
  def test_outputs_energy_y181; assert_in_epsilon(235.8161294879267, worksheet.outputs_energy_y181, 0.002); end
  def test_outputs_energy_z181; assert_in_epsilon(273.3947379939242, worksheet.outputs_energy_z181, 0.002); end
  def test_outputs_energy_c182; assert_equal("G.Q.02", worksheet.outputs_energy_c182); end
  def test_outputs_energy_d182; assert_equal("Global Oil reserves ", worksheet.outputs_energy_d182); end
  def test_outputs_energy_g182; assert_equal("l", worksheet.outputs_energy_g182); end
  def test_outputs_energy_r182; assert_in_epsilon(4630125793916.433, worksheet.outputs_energy_r182, 0.002); end
  def test_outputs_energy_s182; assert_in_epsilon(19062873807438.008, worksheet.outputs_energy_s182, 0.002); end
  def test_outputs_energy_t182; assert_in_epsilon(40452614819747.266, worksheet.outputs_energy_t182, 0.002); end
  def test_outputs_energy_u182; assert_in_epsilon(64002264134147.7, worksheet.outputs_energy_u182, 0.002); end
  def test_outputs_energy_v182; assert_in_epsilon(89551926373165.9, worksheet.outputs_energy_v182, 0.002); end
  def test_outputs_energy_w182; assert_in_epsilon(116529256244681.55, worksheet.outputs_energy_w182, 0.002); end
  def test_outputs_energy_x182; assert_in_epsilon(144817064391619.62, worksheet.outputs_energy_x182, 0.002); end
  def test_outputs_energy_y182; assert_in_epsilon(174723293123179.12, worksheet.outputs_energy_y182, 0.002); end
  def test_outputs_energy_z182; assert_in_epsilon(206166711967860.4, worksheet.outputs_energy_z182, 0.002); end
  def test_outputs_energy_c183; assert_equal("G.Q.03", worksheet.outputs_energy_c183); end
  def test_outputs_energy_d183; assert_equal("Global Gas reserves ", worksheet.outputs_energy_d183); end
  def test_outputs_energy_g183; assert_equal("T.m3", worksheet.outputs_energy_g183); end
  def test_outputs_energy_r183; assert_in_epsilon(3.0232191346146142, worksheet.outputs_energy_r183, 0.002); end
  def test_outputs_energy_s183; assert_in_epsilon(12.266018152064127, worksheet.outputs_energy_s183, 0.002); end
  def test_outputs_energy_t183; assert_in_epsilon(25.3591982006771, worksheet.outputs_energy_t183, 0.002); end
  def test_outputs_energy_u183; assert_in_epsilon(39.559497200002234, worksheet.outputs_energy_u183, 0.002); end
  def test_outputs_energy_v183; assert_in_epsilon(54.87810920637431, worksheet.outputs_energy_v183, 0.002); end
  def test_outputs_energy_w183; assert_in_epsilon(71.33249856220334, worksheet.outputs_energy_w183, 0.002); end
  def test_outputs_energy_x183; assert_in_epsilon(89.27686058911303, worksheet.outputs_energy_x183, 0.002); end
  def test_outputs_energy_y183; assert_in_epsilon(109.02601679275706, worksheet.outputs_energy_y183, 0.002); end
  def test_outputs_energy_z183; assert_in_epsilon(130.76098519633203, worksheet.outputs_energy_z183, 0.002); end
  def test_outputs_climate_impacts_c533; assert_equal("In order to avoid the most dangerous impacts of global climate change the international community agreed limiting global average temperature increase to no more than 2°C above pre-industrial levels (UNFCCC Cancun 2010).", worksheet.outputs_climate_impacts_c533); end
  def test_outputs_climate_impacts_h55; assert_in_epsilon(3300000.0, worksheet.outputs_climate_impacts_h55, 0.002); end
  def test_outputs_climate_impacts_i55; assert_in_epsilon(8100000.0, worksheet.outputs_climate_impacts_i55, 0.002); end
  def test_outputs_climate_impacts_i60; assert_in_epsilon(650000.0, worksheet.outputs_climate_impacts_i60, 0.002); end
  def test_outputs_climate_impacts_i65; assert_in_epsilon(1.8, worksheet.outputs_climate_impacts_i65, 0.002); end
  def test_outputs_climate_impacts_i70; assert_in_delta(0.39, worksheet.outputs_climate_impacts_i70, 0.002); end
  def test_outputs_climate_impacts_d11; assert_in_epsilon(3.8348125395261965, worksheet.outputs_climate_impacts_d11, 0.002); end
  def test_outputs_climate_impacts_d12; assert_in_delta(0.8646766358544182, worksheet.outputs_climate_impacts_d12, 0.002); end
  def test_outputs_climate_impacts_e11; assert_in_epsilon(6.334484948698848, worksheet.outputs_climate_impacts_e11, 0.002); end
  def test_outputs_climate_impacts_e12; assert_in_epsilon(2.1445410929782738, worksheet.outputs_climate_impacts_e12, 0.002); end
  def test_outputs_climate_impacts_d26; assert_in_epsilon(1870.0, worksheet.outputs_climate_impacts_d26, 0.002); end
  def test_outputs_climate_impacts_e26; assert_in_epsilon(1880.0, worksheet.outputs_climate_impacts_e26, 0.002); end
  def test_outputs_climate_impacts_f26; assert_in_epsilon(1890.0, worksheet.outputs_climate_impacts_f26, 0.002); end
  def test_outputs_climate_impacts_g26; assert_in_epsilon(1900.0, worksheet.outputs_climate_impacts_g26, 0.002); end
  def test_outputs_climate_impacts_h26; assert_in_epsilon(1910.0, worksheet.outputs_climate_impacts_h26, 0.002); end
  def test_outputs_climate_impacts_i26; assert_in_epsilon(1920.0, worksheet.outputs_climate_impacts_i26, 0.002); end
  def test_outputs_climate_impacts_j26; assert_in_epsilon(1930.0, worksheet.outputs_climate_impacts_j26, 0.002); end
  def test_outputs_climate_impacts_k26; assert_in_epsilon(1940.0, worksheet.outputs_climate_impacts_k26, 0.002); end
  def test_outputs_climate_impacts_l26; assert_in_epsilon(1950.0, worksheet.outputs_climate_impacts_l26, 0.002); end
  def test_outputs_climate_impacts_m26; assert_in_epsilon(1960.0, worksheet.outputs_climate_impacts_m26, 0.002); end
  def test_outputs_climate_impacts_n26; assert_in_epsilon(1970.0, worksheet.outputs_climate_impacts_n26, 0.002); end
  def test_outputs_climate_impacts_o26; assert_in_epsilon(1980.0, worksheet.outputs_climate_impacts_o26, 0.002); end
  def test_outputs_climate_impacts_p26; assert_in_epsilon(1990.0, worksheet.outputs_climate_impacts_p26, 0.002); end
  def test_outputs_climate_impacts_q26; assert_in_epsilon(2000.0, worksheet.outputs_climate_impacts_q26, 0.002); end
  def test_outputs_climate_impacts_r26; assert_in_epsilon(2005.0, worksheet.outputs_climate_impacts_r26, 0.002); end
  def test_outputs_climate_impacts_s26; assert_in_epsilon(2010.0, worksheet.outputs_climate_impacts_s26, 0.002); end
  def test_outputs_climate_impacts_t26; assert_in_epsilon(2011.0, worksheet.outputs_climate_impacts_t26, 0.002); end
  def test_outputs_climate_impacts_u26; assert_in_epsilon(2013.0, worksheet.outputs_climate_impacts_u26, 0.002); end
  def test_outputs_climate_impacts_v26; assert_in_epsilon(2015.0, worksheet.outputs_climate_impacts_v26, 0.002); end
  def test_outputs_climate_impacts_w26; assert_in_epsilon(2020.0, worksheet.outputs_climate_impacts_w26, 0.002); end
  def test_outputs_climate_impacts_x26; assert_in_epsilon(2025.0, worksheet.outputs_climate_impacts_x26, 0.002); end
  def test_outputs_climate_impacts_y26; assert_in_epsilon(2030.0, worksheet.outputs_climate_impacts_y26, 0.002); end
  def test_outputs_climate_impacts_z26; assert_in_epsilon(2035.0, worksheet.outputs_climate_impacts_z26, 0.002); end
  def test_outputs_climate_impacts_aa26; assert_in_epsilon(2040.0, worksheet.outputs_climate_impacts_aa26, 0.002); end
  def test_outputs_climate_impacts_ab26; assert_in_epsilon(2045.0, worksheet.outputs_climate_impacts_ab26, 0.002); end
  def test_outputs_climate_impacts_ac26; assert_in_epsilon(2050.0, worksheet.outputs_climate_impacts_ac26, 0.002); end
  def test_outputs_climate_impacts_ad26; assert_in_epsilon(2055.0, worksheet.outputs_climate_impacts_ad26, 0.002); end
  def test_outputs_climate_impacts_ae26; assert_in_epsilon(2060.0, worksheet.outputs_climate_impacts_ae26, 0.002); end
  def test_outputs_climate_impacts_af26; assert_in_epsilon(2065.0, worksheet.outputs_climate_impacts_af26, 0.002); end
  def test_outputs_climate_impacts_ag26; assert_in_epsilon(2070.0, worksheet.outputs_climate_impacts_ag26, 0.002); end
  def test_outputs_climate_impacts_ah26; assert_in_epsilon(2075.0, worksheet.outputs_climate_impacts_ah26, 0.002); end
  def test_outputs_climate_impacts_ai26; assert_in_epsilon(2080.0, worksheet.outputs_climate_impacts_ai26, 0.002); end
  def test_outputs_climate_impacts_aj26; assert_in_epsilon(2085.0, worksheet.outputs_climate_impacts_aj26, 0.002); end
  def test_outputs_climate_impacts_ak26; assert_in_epsilon(2090.0, worksheet.outputs_climate_impacts_ak26, 0.002); end
  def test_outputs_climate_impacts_al26; assert_in_epsilon(2095.0, worksheet.outputs_climate_impacts_al26, 0.002); end
  def test_outputs_climate_impacts_am26; assert_in_epsilon(2100.0, worksheet.outputs_climate_impacts_am26, 0.002); end
  def test_outputs_climate_impacts_c27; assert_equal("High estimate", worksheet.outputs_climate_impacts_c27); end
  def test_outputs_climate_impacts_w27; assert_in_epsilon(2.2315785564754034, worksheet.outputs_climate_impacts_w27, 0.002); end
  def test_outputs_climate_impacts_x27; assert_in_epsilon(2.450227465171916, worksheet.outputs_climate_impacts_x27, 0.002); end
  def test_outputs_climate_impacts_y27; assert_in_epsilon(2.685983550282761, worksheet.outputs_climate_impacts_y27, 0.002); end
  def test_outputs_climate_impacts_z27; assert_in_epsilon(2.9464583524417267, worksheet.outputs_climate_impacts_z27, 0.002); end
  def test_outputs_climate_impacts_aa27; assert_in_epsilon(3.2326042901843257, worksheet.outputs_climate_impacts_aa27, 0.002); end
  def test_outputs_climate_impacts_ab27; assert_in_epsilon(3.5290171919851634, worksheet.outputs_climate_impacts_ab27, 0.002); end
  def test_outputs_climate_impacts_ac27; assert_in_epsilon(3.8348125395261965, worksheet.outputs_climate_impacts_ac27, 0.002); end
  def test_outputs_climate_impacts_ad27; assert_in_epsilon(4.086194058329994, worksheet.outputs_climate_impacts_ad27, 0.002); end
  def test_outputs_climate_impacts_ae27; assert_in_epsilon(4.327508992813304, worksheet.outputs_climate_impacts_ae27, 0.002); end
  def test_outputs_climate_impacts_af27; assert_in_epsilon(4.572468622149427, worksheet.outputs_climate_impacts_af27, 0.002); end
  def test_outputs_climate_impacts_ag27; assert_in_epsilon(4.820529349389352, worksheet.outputs_climate_impacts_ag27, 0.002); end
  def test_outputs_climate_impacts_ah27; assert_in_epsilon(5.070396784958231, worksheet.outputs_climate_impacts_ah27, 0.002); end
  def test_outputs_climate_impacts_ai27; assert_in_epsilon(5.32167538320623, worksheet.outputs_climate_impacts_ai27, 0.002); end
  def test_outputs_climate_impacts_aj27; assert_in_epsilon(5.573996611324688, worksheet.outputs_climate_impacts_aj27, 0.002); end
  def test_outputs_climate_impacts_ak27; assert_in_epsilon(5.8270208220881035, worksheet.outputs_climate_impacts_ak27, 0.002); end
  def test_outputs_climate_impacts_al27; assert_in_epsilon(6.080565900758618, worksheet.outputs_climate_impacts_al27, 0.002); end
  def test_outputs_climate_impacts_am27; assert_in_epsilon(6.334484948698848, worksheet.outputs_climate_impacts_am27, 0.002); end
  def test_outputs_climate_impacts_c28; assert_equal("Actual (NASA)", worksheet.outputs_climate_impacts_c28); end
  def test_outputs_climate_impacts_f28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_f28, 0.002); end
  def test_outputs_climate_impacts_g28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_g28, 0.002); end
  def test_outputs_climate_impacts_h28; assert_in_delta(-0.231, worksheet.outputs_climate_impacts_h28, 0.002); end
  def test_outputs_climate_impacts_i28; assert_in_delta(-0.061000000000000026, worksheet.outputs_climate_impacts_i28, 0.002); end
  def test_outputs_climate_impacts_j28; assert_in_delta(0.059, worksheet.outputs_climate_impacts_j28, 0.002); end
  def test_outputs_climate_impacts_k28; assert_in_delta(0.259, worksheet.outputs_climate_impacts_k28, 0.002); end
  def test_outputs_climate_impacts_l28; assert_in_delta(0.119, worksheet.outputs_climate_impacts_l28, 0.002); end
  def test_outputs_climate_impacts_m28; assert_in_delta(0.22899999999999998, worksheet.outputs_climate_impacts_m28, 0.002); end
  def test_outputs_climate_impacts_n28; assert_in_delta(0.209, worksheet.outputs_climate_impacts_n28, 0.002); end
  def test_outputs_climate_impacts_o28; assert_in_delta(0.359, worksheet.outputs_climate_impacts_o28, 0.002); end
  def test_outputs_climate_impacts_p28; assert_in_delta(0.519, worksheet.outputs_climate_impacts_p28, 0.002); end
  def test_outputs_climate_impacts_q28; assert_in_delta(0.719, worksheet.outputs_climate_impacts_q28, 0.002); end
  def test_outputs_climate_impacts_r28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_r28, 0.002); end
  def test_outputs_climate_impacts_s28; assert_in_delta(0.7789999999999999, worksheet.outputs_climate_impacts_s28, 0.002); end
  def test_outputs_climate_impacts_t28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_t28, 0.002); end
  def test_outputs_climate_impacts_u28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_u28, 0.002); end
  def test_outputs_climate_impacts_c29; assert_equal("Actual (HadCRUT3)", worksheet.outputs_climate_impacts_c29); end
  def test_outputs_climate_impacts_d29; assert_in_delta(-0.0020333333333333314, worksheet.outputs_climate_impacts_d29, 0.002); end
  def test_outputs_climate_impacts_e29; assert_in_delta(0.08556666666666674, worksheet.outputs_climate_impacts_e29, 0.002); end
  def test_outputs_climate_impacts_f29; assert_in_delta(-0.08383333333333326, worksheet.outputs_climate_impacts_f29, 0.002); end
  def test_outputs_climate_impacts_g29; assert_in_delta(-0.06043333333333328, worksheet.outputs_climate_impacts_g29, 0.002); end
  def test_outputs_climate_impacts_h29; assert_in_delta(-0.2668333333333333, worksheet.outputs_climate_impacts_h29, 0.002); end
  def test_outputs_climate_impacts_i29; assert_in_delta(-0.052633333333333254, worksheet.outputs_climate_impacts_i29, 0.002); end
  def test_outputs_climate_impacts_j29; assert_in_delta(0.06776666666666673, worksheet.outputs_climate_impacts_j29, 0.002); end
  def test_outputs_climate_impacts_k29; assert_in_delta(0.29756666666666676, worksheet.outputs_climate_impacts_k29, 0.002); end
  def test_outputs_climate_impacts_l29; assert_in_delta(0.08816666666666673, worksheet.outputs_climate_impacts_l29, 0.002); end
  def test_outputs_climate_impacts_m29; assert_in_delta(0.23116666666666674, worksheet.outputs_climate_impacts_m29, 0.002); end
  def test_outputs_climate_impacts_n29; assert_in_delta(0.18496666666666672, worksheet.outputs_climate_impacts_n29, 0.002); end
  def test_outputs_climate_impacts_o29; assert_in_delta(0.3201666666666667, worksheet.outputs_climate_impacts_o29, 0.002); end
  def test_outputs_climate_impacts_p29; assert_in_delta(0.44456666666666667, worksheet.outputs_climate_impacts_p29, 0.002); end
  def test_outputs_climate_impacts_q29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_q29, 0.002); end
  def test_outputs_climate_impacts_r29; assert_in_delta(0.7283666666666667, worksheet.outputs_climate_impacts_r29, 0.002); end
  def test_outputs_climate_impacts_s29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_s29, 0.002); end
  def test_outputs_climate_impacts_t29; assert_in_delta(0.7063666666666668, worksheet.outputs_climate_impacts_t29, 0.002); end
  def test_outputs_climate_impacts_u29; assert_in_delta(0.7391666666666667, worksheet.outputs_climate_impacts_u29, 0.002); end
  def test_outputs_climate_impacts_c30; assert_equal("Actual (HadCRUT4)", worksheet.outputs_climate_impacts_c30); end
  def test_outputs_climate_impacts_d30; assert_in_delta(0.024, worksheet.outputs_climate_impacts_d30, 0.002); end
  def test_outputs_climate_impacts_e30; assert_in_delta(0.117, worksheet.outputs_climate_impacts_e30, 0.002); end
  def test_outputs_climate_impacts_f30; assert_in_delta(-0.052, worksheet.outputs_climate_impacts_f30, 0.002); end
  def test_outputs_climate_impacts_g30; assert_in_delta(-0.027, worksheet.outputs_climate_impacts_g30, 0.002); end
  def test_outputs_climate_impacts_h30; assert_in_delta(-0.224, worksheet.outputs_climate_impacts_h30, 0.002); end
  def test_outputs_climate_impacts_i30; assert_in_delta(0.012, worksheet.outputs_climate_impacts_i30, 0.002); end
  def test_outputs_climate_impacts_j30; assert_in_delta(0.103, worksheet.outputs_climate_impacts_j30, 0.002); end
  def test_outputs_climate_impacts_k30; assert_in_delta(0.278, worksheet.outputs_climate_impacts_k30, 0.002); end
  def test_outputs_climate_impacts_l30; assert_in_delta(0.227, worksheet.outputs_climate_impacts_l30, 0.002); end
  def test_outputs_climate_impacts_m30; assert_in_delta(0.302, worksheet.outputs_climate_impacts_m30, 0.002); end
  def test_outputs_climate_impacts_n30; assert_in_delta(0.214, worksheet.outputs_climate_impacts_n30, 0.002); end
  def test_outputs_climate_impacts_o30; assert_in_delta(0.336, worksheet.outputs_climate_impacts_o30, 0.002); end
  def test_outputs_climate_impacts_p30; assert_in_delta(0.481, worksheet.outputs_climate_impacts_p30, 0.002); end
  def test_outputs_climate_impacts_q30; assert_in_delta(0.698, worksheet.outputs_climate_impacts_q30, 0.002); end
  def test_outputs_climate_impacts_r30; assert_in_delta(0.78, worksheet.outputs_climate_impacts_r30, 0.002); end
  def test_outputs_climate_impacts_s30; assert_in_delta(0.744, worksheet.outputs_climate_impacts_s30, 0.002); end
  def test_outputs_climate_impacts_t30; assert_in_delta(0.764, worksheet.outputs_climate_impacts_t30, 0.002); end
  def test_outputs_climate_impacts_u30; assert_in_delta(0.774, worksheet.outputs_climate_impacts_u30, 0.002); end
  def test_outputs_climate_impacts_c31; assert_equal("Low estimate", worksheet.outputs_climate_impacts_c31); end
  def test_outputs_climate_impacts_w31; assert_in_delta(0.354220463268042, worksheet.outputs_climate_impacts_w31, 0.002); end
  def test_outputs_climate_impacts_x31; assert_in_delta(0.42383643090180323, worksheet.outputs_climate_impacts_x31, 0.002); end
  def test_outputs_climate_impacts_y31; assert_in_delta(0.4988991791605626, worksheet.outputs_climate_impacts_y31, 0.002); end
  def test_outputs_climate_impacts_z31; assert_in_delta(0.5818321583581767, worksheet.outputs_climate_impacts_z31, 0.002); end
  def test_outputs_climate_impacts_aa31; assert_in_delta(0.6729386105201247, worksheet.outputs_climate_impacts_aa31, 0.002); end
  def test_outputs_climate_impacts_ab31; assert_in_delta(0.767313977408592, worksheet.outputs_climate_impacts_ab31, 0.002); end
  def test_outputs_climate_impacts_ac31; assert_in_delta(0.8646766358544182, worksheet.outputs_climate_impacts_ac31, 0.002); end
  def test_outputs_climate_impacts_ad31; assert_in_delta(0.9836296122999775, worksheet.outputs_climate_impacts_ad31, 0.002); end
  def test_outputs_climate_impacts_ae31; assert_in_epsilon(1.1082332741752636, worksheet.outputs_climate_impacts_ae31, 0.002); end
  def test_outputs_climate_impacts_af31; assert_in_epsilon(1.234718884741586, worksheet.outputs_climate_impacts_af31, 0.002); end
  def test_outputs_climate_impacts_ag31; assert_in_epsilon(1.3628057561477103, worksheet.outputs_climate_impacts_ag31, 0.002); end
  def test_outputs_climate_impacts_ah31; assert_in_epsilon(1.4918255266063132, worksheet.outputs_climate_impacts_ah31, 0.002); end
  def test_outputs_climate_impacts_ai31; assert_in_epsilon(1.6215739549811627, worksheet.outputs_climate_impacts_ai31, 0.002); end
  def test_outputs_climate_impacts_aj31; assert_in_epsilon(1.7518607482944197, worksheet.outputs_climate_impacts_aj31, 0.002); end
  def test_outputs_climate_impacts_ak31; assert_in_epsilon(1.8825105287223534, worksheet.outputs_climate_impacts_ak31, 0.002); end
  def test_outputs_climate_impacts_al31; assert_in_epsilon(2.0134292607952267, worksheet.outputs_climate_impacts_al31, 0.002); end
  def test_outputs_climate_impacts_am31; assert_in_epsilon(2.1445410929782738, worksheet.outputs_climate_impacts_am31, 0.002); end
  def test_outputs_climate_impacts_f3; assert_equal("no warning", worksheet.outputs_climate_impacts_f3); end
  def test_conversions_b66; assert_equal("Unit", worksheet.conversions_b66); end
  def test_conversions_c66; assert_equal("Name", worksheet.conversions_c66); end
  def test_conversions_d66; assert_equal("Name in formulae", worksheet.conversions_d66); end
  def test_conversions_e66; assert_equal("m^2", worksheet.conversions_e66); end
  def test_conversions_f66; assert_equal("M ha", worksheet.conversions_f66); end
  def test_conversions_b67; assert_equal("ha", worksheet.conversions_b67); end
  def test_conversions_c67; assert_equal("Hectares", worksheet.conversions_c67); end
  def test_conversions_d67; assert_equal("Unit.ha", worksheet.conversions_d67); end
  def test_conversions_e67; assert_in_epsilon(10000.0, worksheet.conversions_e67, 0.002); end
  def test_conversions_f67; assert_in_delta(1.0e-06, worksheet.conversions_f67, 0.002); end
  def test_conversions_b68; assert_equal("M ha", worksheet.conversions_b68); end
  def test_conversions_c68; assert_equal("Million hectares", worksheet.conversions_c68); end
  def test_conversions_d68; assert_equal("Unit.Mha", worksheet.conversions_d68); end
  def test_conversions_e68; assert_in_epsilon(10000000000.0, worksheet.conversions_e68, 0.002); end
  def test_conversions_f68; assert_in_delta(1.0, worksheet.conversions_f68, 0.002); end
  def test_conversions_b69; assert_equal("acres", worksheet.conversions_b69); end
  def test_conversions_c69; assert_equal("Acres", worksheet.conversions_c69); end
  def test_conversions_d69; assert_equal("Unit.acre", worksheet.conversions_d69); end
  def test_conversions_e69; assert_in_epsilon(4046.8564224, worksheet.conversions_e69, 0.002); end
  def test_conversions_f69; assert_in_delta(4.0468564224000004e-07, worksheet.conversions_f69, 0.002); end
  def test_conversions_b70; assert_equal("km^2", worksheet.conversions_b70); end
  def test_conversions_c70; assert_equal("Square kilometres", worksheet.conversions_c70); end
  def test_conversions_d70; assert_equal("Unit.km2", worksheet.conversions_d70); end
  def test_conversions_e70; assert_in_epsilon(1000000.0, worksheet.conversions_e70, 0.002); end
  def test_conversions_f70; assert_in_delta(0.0001, worksheet.conversions_f70, 0.002); end
  def test_conversions_b71; assert_equal("m^2", worksheet.conversions_b71); end
  def test_conversions_c71; assert_equal("Square metres", worksheet.conversions_c71); end
  def test_conversions_d71; assert_equal("Unit.m2", worksheet.conversions_d71); end
  def test_conversions_e71; assert_in_delta(1.0, worksheet.conversions_e71, 0.002); end
  def test_conversions_f71; assert_in_delta(1.0e-10, worksheet.conversions_f71, 0.002); end
  def test_conversions_b72; assert_equal("Football pitch", worksheet.conversions_b72); end
  def test_conversions_c72; assert_equal("Football pitch", worksheet.conversions_c72); end
  def test_conversions_d72; assert_equal("unit.footballpitch", worksheet.conversions_d72); end
  def test_conversions_e72; assert_in_epsilon(7140.0, worksheet.conversions_e72, 0.002); end
  def test_conversions_f72; assert_in_delta(7.14e-07, worksheet.conversions_f72, 0.002); end
  def test_conversions_b73; assert_equal("Australia", worksheet.conversions_b73); end
  def test_conversions_c73; assert_equal("Australia", worksheet.conversions_c73); end
  def test_conversions_d73; assert_equal("Unit.Australia", worksheet.conversions_d73); end
  def test_conversions_e73; assert_in_epsilon(7686850000000.0, worksheet.conversions_e73, 0.002); end
  def test_conversions_f73; assert_in_epsilon(768.685, worksheet.conversions_f73, 0.002); end
  def test_conversions_b74; assert_equal("India", worksheet.conversions_b74); end
  def test_conversions_c74; assert_equal("India", worksheet.conversions_c74); end
  def test_conversions_d74; assert_equal("Unit.India", worksheet.conversions_d74); end
  def test_conversions_e74; assert_in_epsilon(3287263000000.0, worksheet.conversions_e74, 0.002); end
  def test_conversions_f74; assert_in_epsilon(328.7263, worksheet.conversions_f74, 0.002); end
  def test_conversions_b75; assert_equal("Brazil", worksheet.conversions_b75); end
  def test_conversions_c75; assert_equal("Brazil", worksheet.conversions_c75); end
  def test_conversions_d75; assert_equal("Unit.Brazil", worksheet.conversions_d75); end
  def test_conversions_e75; assert_in_epsilon(8515767000000.0, worksheet.conversions_e75, 0.002); end
  def test_conversions_f75; assert_in_epsilon(851.5767, worksheet.conversions_f75, 0.002); end
  def test_conversions_b76; assert_equal("China", worksheet.conversions_b76); end
  def test_conversions_c76; assert_equal("China", worksheet.conversions_c76); end
  def test_conversions_d76; assert_equal("Unit.China", worksheet.conversions_d76); end
  def test_conversions_e76; assert_in_epsilon(9706961000000.0, worksheet.conversions_e76, 0.002); end
  def test_conversions_f76; assert_in_epsilon(970.6961, worksheet.conversions_f76, 0.002); end
  def test_conversions_b77; assert_equal("South Africa", worksheet.conversions_b77); end
  def test_conversions_c77; assert_equal("South Africa", worksheet.conversions_c77); end
  def test_conversions_d77; assert_equal("Unit.SouthAfrica", worksheet.conversions_d77); end
  def test_conversions_e77; assert_in_epsilon(1221037000000.0, worksheet.conversions_e77, 0.002); end
  def test_conversions_f77; assert_in_epsilon(122.1037, worksheet.conversions_f77, 0.002); end
  def test_conversions_b6; assert_equal("Unit", worksheet.conversions_b6); end
  def test_conversions_c6; assert_equal("Name", worksheet.conversions_c6); end
  def test_conversions_d6; assert_equal("Name in formulae", worksheet.conversions_d6); end
  def test_conversions_e6; assert_equal("Joules", worksheet.conversions_e6); end
  def test_conversions_f6; assert_equal("EJ", worksheet.conversions_f6); end
  def test_conversions_b7; assert_equal("EJ", worksheet.conversions_b7); end
  def test_conversions_c7; assert_equal("Exajoules", worksheet.conversions_c7); end
  def test_conversions_d7; assert_equal("Unit.EJ", worksheet.conversions_d7); end
  def test_conversions_e7; assert_in_epsilon(1.0e+18, worksheet.conversions_e7, 0.002); end
  def test_conversions_f7; assert_in_delta(1.0, worksheet.conversions_f7, 0.002); end
  def test_conversions_b8; assert_equal("PJ", worksheet.conversions_b8); end
  def test_conversions_c8; assert_equal("Petajoules", worksheet.conversions_c8); end
  def test_conversions_d8; assert_equal("Unit.PJ", worksheet.conversions_d8); end
  def test_conversions_e8; assert_in_epsilon(1.0e+15, worksheet.conversions_e8, 0.002); end
  def test_conversions_f8; assert_in_delta(0.001, worksheet.conversions_f8, 0.002); end
  def test_conversions_b9; assert_equal("TJ", worksheet.conversions_b9); end
  def test_conversions_c9; assert_equal("Terajoules", worksheet.conversions_c9); end
  def test_conversions_d9; assert_equal("Unit.TJ", worksheet.conversions_d9); end
  def test_conversions_e9; assert_in_epsilon(1000000000000.0, worksheet.conversions_e9, 0.002); end
  def test_conversions_f9; assert_in_delta(1.0e-06, worksheet.conversions_f9, 0.002); end
  def test_conversions_b10; assert_equal("GJ", worksheet.conversions_b10); end
  def test_conversions_c10; assert_equal("Gigajoules", worksheet.conversions_c10); end
  def test_conversions_d10; assert_equal("Unit.GJ", worksheet.conversions_d10); end
  def test_conversions_e10; assert_in_epsilon(1000000000.0, worksheet.conversions_e10, 0.002); end
  def test_conversions_f10; assert_in_delta(1.0e-09, worksheet.conversions_f10, 0.002); end
  def test_conversions_b11; assert_equal("MJ", worksheet.conversions_b11); end
  def test_conversions_c11; assert_equal("Megajoules", worksheet.conversions_c11); end
  def test_conversions_d11; assert_equal("Unit.MJ", worksheet.conversions_d11); end
  def test_conversions_e11; assert_in_epsilon(1000000.0, worksheet.conversions_e11, 0.002); end
  def test_conversions_f11; assert_in_delta(1.0e-12, worksheet.conversions_f11, 0.002); end
  def test_conversions_b12; assert_equal("J", worksheet.conversions_b12); end
  def test_conversions_c12; assert_equal("Joules", worksheet.conversions_c12); end
  def test_conversions_d12; assert_equal("Unit.J", worksheet.conversions_d12); end
  def test_conversions_e12; assert_in_delta(1.0, worksheet.conversions_e12, 0.002); end
  def test_conversions_f12; assert_in_delta(1.0e-18, worksheet.conversions_f12, 0.002); end
  def test_conversions_b13; assert_equal("TWh", worksheet.conversions_b13); end
  def test_conversions_c13; assert_equal("Terawatt-hours", worksheet.conversions_c13); end
  def test_conversions_d13; assert_equal("Unit.TWh", worksheet.conversions_d13); end
  def test_conversions_e13; assert_in_epsilon(3.6e+15, worksheet.conversions_e13, 0.002); end
  def test_conversions_f13; assert_in_delta(0.0036, worksheet.conversions_f13, 0.002); end
  def test_conversions_b14; assert_equal("GWh", worksheet.conversions_b14); end
  def test_conversions_c14; assert_equal("Gigawatt-hours", worksheet.conversions_c14); end
  def test_conversions_d14; assert_equal("Unit.GWh", worksheet.conversions_d14); end
  def test_conversions_e14; assert_in_epsilon(3600000000000.0, worksheet.conversions_e14, 0.002); end
  def test_conversions_f14; assert_in_delta(3.6e-06, worksheet.conversions_f14, 0.002); end
  def test_conversions_b15; assert_equal("MWh", worksheet.conversions_b15); end
  def test_conversions_c15; assert_equal("Megawatt-hours", worksheet.conversions_c15); end
  def test_conversions_d15; assert_equal("Unit.MWh", worksheet.conversions_d15); end
  def test_conversions_e15; assert_in_epsilon(3600000000.0, worksheet.conversions_e15, 0.002); end
  def test_conversions_f15; assert_in_delta(3.6e-09, worksheet.conversions_f15, 0.002); end
  def test_conversions_b16; assert_equal("kWh", worksheet.conversions_b16); end
  def test_conversions_c16; assert_equal("Kilowatt-hours", worksheet.conversions_c16); end
  def test_conversions_d16; assert_equal("Unit.kWh", worksheet.conversions_d16); end
  def test_conversions_e16; assert_in_epsilon(3600000.0, worksheet.conversions_e16, 0.002); end
  def test_conversions_f16; assert_in_delta(3.6e-12, worksheet.conversions_f16, 0.002); end
  def test_conversions_b17; assert_equal("boe", worksheet.conversions_b17); end
  def test_conversions_c17; assert_equal("Barrel of oil equivalent", worksheet.conversions_c17); end
  def test_conversions_d17; assert_equal("Unit.boe", worksheet.conversions_d17); end
  def test_conversions_e17; assert_in_epsilon(5861520000.0, worksheet.conversions_e17, 0.002); end
  def test_conversions_f17; assert_in_delta(5.86152e-09, worksheet.conversions_f17, 0.002); end
  def test_conversions_b18; assert_equal("Mboe", worksheet.conversions_b18); end
  def test_conversions_c18; assert_equal("Million barrels of oil equivalent", worksheet.conversions_c18); end
  def test_conversions_d18; assert_equal("Unit.Mboe", worksheet.conversions_d18); end
  def test_conversions_e18; assert_in_epsilon(5.86152e+15, worksheet.conversions_e18, 0.002); end
  def test_conversions_f18; assert_in_delta(0.00586152, worksheet.conversions_f18, 0.002); end
  def test_conversions_b19; assert_equal("toe", worksheet.conversions_b19); end
  def test_conversions_c19; assert_equal("Tonnes of oil equivalent", worksheet.conversions_c19); end
  def test_conversions_d19; assert_equal("Unit.toe", worksheet.conversions_d19); end
  def test_conversions_e19; assert_in_epsilon(41868000000.0, worksheet.conversions_e19, 0.002); end
  def test_conversions_f19; assert_in_delta(4.1868e-08, worksheet.conversions_f19, 0.002); end
  def test_conversions_b20; assert_equal("ktoe", worksheet.conversions_b20); end
  def test_conversions_c20; assert_equal("Kilotonnes of oil equivalent", worksheet.conversions_c20); end
  def test_conversions_d20; assert_equal("Unit.ktoe", worksheet.conversions_d20); end
  def test_conversions_e20; assert_in_epsilon(41868000000000.0, worksheet.conversions_e20, 0.002); end
  def test_conversions_f20; assert_in_delta(4.1868e-05, worksheet.conversions_f20, 0.002); end
  def test_conversions_b21; assert_equal("Mtoe", worksheet.conversions_b21); end
  def test_conversions_c21; assert_equal("Megatonnes of oil equivalent", worksheet.conversions_c21); end
  def test_conversions_d21; assert_equal("Unit.Mtoe", worksheet.conversions_d21); end
  def test_conversions_e21; assert_in_epsilon(4.1868e+16, worksheet.conversions_e21, 0.002); end
  def test_conversions_f21; assert_in_delta(0.041868, worksheet.conversions_f21, 0.002); end
  def test_conversions_b22; assert_equal("tce", worksheet.conversions_b22); end
  def test_conversions_c22; assert_equal("Tonnes of coal equivalent", worksheet.conversions_c22); end
  def test_conversions_d22; assert_equal("unit.tce", worksheet.conversions_d22); end
  def test_conversions_e22; assert_in_epsilon(29307600000.0, worksheet.conversions_e22, 0.002); end
  def test_conversions_f22; assert_in_delta(0.0293076, worksheet.conversions_f22, 0.002); end
  def test_conversions_b23; assert_equal("Mtce", worksheet.conversions_b23); end
  def test_conversions_c23; assert_equal("Million tonnes of coal equivalent", worksheet.conversions_c23); end
  def test_conversions_d23; assert_equal("unit.Mtce", worksheet.conversions_d23); end
  def test_conversions_e23; assert_in_epsilon(2.93076e+16, worksheet.conversions_e23, 0.002); end
  def test_conversions_f23; assert_in_delta(0.0293076, worksheet.conversions_f23, 0.002); end
  def test_conversions_b24; assert_equal("therm", worksheet.conversions_b24); end
  def test_conversions_c24; assert_equal("Therms", worksheet.conversions_c24); end
  def test_conversions_d24; assert_equal("Unit.therm", worksheet.conversions_d24); end
  def test_conversions_e24; assert_in_epsilon(105506136.12882091, worksheet.conversions_e24, 0.002); end
  def test_conversions_f24; assert_in_delta(1.055061361288209e-10, worksheet.conversions_f24, 0.002); end
  def test_conversions_b25; assert_equal("Btu", worksheet.conversions_b25); end
  def test_conversions_c25; assert_equal("British Thermal Unit", worksheet.conversions_c25); end
  def test_conversions_d25; assert_equal("Unit.Btu", worksheet.conversions_d25); end
  def test_conversions_e25; assert_in_epsilon(1055.0613612882091, worksheet.conversions_e25, 0.002); end
  def test_conversions_f25; assert_in_delta(1.055061361288209e-15, worksheet.conversions_f25, 0.002); end
  def test_conversions_b26; assert_equal("Mbtu", worksheet.conversions_b26); end
  def test_conversions_c26; assert_equal("Million British Thermal Units", worksheet.conversions_c26); end
  def test_conversions_d26; assert_equal("Unit.Mbtu", worksheet.conversions_d26); end
  def test_conversions_e26; assert_in_epsilon(1055061361.2882091, worksheet.conversions_e26, 0.002); end
  def test_conversions_f26; assert_in_delta(1.055061361288209e-09, worksheet.conversions_f26, 0.002); end
  def test_conversions_b27; assert_equal("calorie", worksheet.conversions_b27); end
  def test_conversions_c27; assert_equal("Calorie (NOT food calorie)", worksheet.conversions_c27); end
  def test_conversions_d27; assert_equal("Unit.calorie.not.food", worksheet.conversions_d27); end
  def test_conversions_e27; assert_in_epsilon(4.184, worksheet.conversions_e27, 0.002); end
  def test_conversions_f27; assert_in_delta(4.184e-18, worksheet.conversions_f27, 0.002); end
  def test_conversions_b28; assert_equal("kcal", worksheet.conversions_b28); end
  def test_conversions_c28; assert_equal("Food calories", worksheet.conversions_c28); end
  def test_conversions_d28; assert_equal("unit.kcal.food", worksheet.conversions_d28); end
  def test_conversions_e28; assert_in_epsilon(4184.0, worksheet.conversions_e28, 0.002); end
  def test_conversions_f28; assert_in_delta(4.184e-15, worksheet.conversions_f28, 0.002); end
  def test_conversions_b29; assert_equal("GW y", worksheet.conversions_b29); end
  def test_conversions_c29; assert_equal("Gigawatt-years", worksheet.conversions_c29); end
  def test_conversions_d29; assert_equal("Unit.GWyear", worksheet.conversions_d29); end
  def test_conversions_e29; assert_in_epsilon(3.15576e+16, worksheet.conversions_e29, 0.002); end
  def test_conversions_f29; assert_in_delta(0.0315576, worksheet.conversions_f29, 0.002); end
  def test_conversions_b33; assert_equal("Unit", worksheet.conversions_b33); end
  def test_conversions_c33; assert_equal("Name", worksheet.conversions_c33); end
  def test_conversions_d33; assert_equal("Name in formulae", worksheet.conversions_d33); end
  def test_conversions_e33; assert_equal("Watts", worksheet.conversions_e33); end
  def test_conversions_f33; assert_equal("GW", worksheet.conversions_f33); end
  def test_conversions_b34; assert_equal("GW", worksheet.conversions_b34); end
  def test_conversions_c34; assert_equal("Gigawatts", worksheet.conversions_c34); end
  def test_conversions_d34; assert_equal("Unit.GW", worksheet.conversions_d34); end
  def test_conversions_e34; assert_in_epsilon(1000000000.0, worksheet.conversions_e34, 0.002); end
  def test_conversions_f34; assert_in_delta(1.0, worksheet.conversions_f34, 0.002); end
  def test_conversions_b35; assert_equal("MW", worksheet.conversions_b35); end
  def test_conversions_c35; assert_equal("Megawatts", worksheet.conversions_c35); end
  def test_conversions_d35; assert_equal("Unit.MW", worksheet.conversions_d35); end
  def test_conversions_e35; assert_in_epsilon(1000000.0, worksheet.conversions_e35, 0.002); end
  def test_conversions_f35; assert_in_delta(0.001, worksheet.conversions_f35, 0.002); end
  def test_conversions_b36; assert_equal("kW", worksheet.conversions_b36); end
  def test_conversions_c36; assert_equal("Kilowatts", worksheet.conversions_c36); end
  def test_conversions_d36; assert_equal("Unit.kW", worksheet.conversions_d36); end
  def test_conversions_e36; assert_in_epsilon(1000.0, worksheet.conversions_e36, 0.002); end
  def test_conversions_f36; assert_in_delta(1.0e-06, worksheet.conversions_f36, 0.002); end
  def test_conversions_b37; assert_equal("W", worksheet.conversions_b37); end
  def test_conversions_c37; assert_equal("Watts", worksheet.conversions_c37); end
  def test_conversions_d37; assert_equal("Unit.W", worksheet.conversions_d37); end
  def test_conversions_e37; assert_in_delta(1.0, worksheet.conversions_e37, 0.002); end
  def test_conversions_f37; assert_in_delta(1.0e-09, worksheet.conversions_f37, 0.002); end
  def test_conversions_b38; assert_equal("mcm/d", worksheet.conversions_b38); end
  def test_conversions_c38; assert_equal("mcm/d natural gas", worksheet.conversions_c38); end
  def test_conversions_d38; assert_equal("Unit.mcm.d", worksheet.conversions_d38); end
  def test_conversions_e38; assert_in_epsilon(335648148.1481481, worksheet.conversions_e38, 0.002); end
  def test_conversions_f38; assert_in_delta(0.33564814814814814, worksheet.conversions_f38, 0.002); end
  def test_conversions_b39; assert_equal("Mtoe/y", worksheet.conversions_b39); end
  def test_conversions_c39; assert_equal("Mtoe per year", worksheet.conversions_c39); end
  def test_conversions_d39; assert_equal("Unit.Mtoe.y", worksheet.conversions_d39); end
  def test_conversions_e39; assert_in_epsilon(1326716860.597764, worksheet.conversions_e39, 0.002); end
  def test_conversions_f39; assert_in_epsilon(1.326716860597764, worksheet.conversions_f39, 0.002); end
  def test_outputs_physical_implications_q111; assert_in_epsilon(1881.480009051027, worksheet.outputs_physical_implications_q111, 0.002); end
  def test_outputs_physical_implications_q112; assert_in_epsilon(371.4442794447485, worksheet.outputs_physical_implications_q112, 0.002); end
  def test_outputs_physical_implications_q113; assert_in_epsilon(1451.6093514783934, worksheet.outputs_physical_implications_q113, 0.002); end
  def test_outputs_physical_implications_q114; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q114||0), 0.002); end
  def test_outputs_physical_implications_q115; assert_in_epsilon(364.0, worksheet.outputs_physical_implications_q115, 0.002); end
  def test_outputs_physical_implications_q116; assert_in_epsilon(237.67, worksheet.outputs_physical_implications_q116, 0.002); end
  def test_outputs_physical_implications_q117; assert_in_epsilon(970.0, worksheet.outputs_physical_implications_q117, 0.002); end
  def test_outputs_physical_implications_q118; assert_in_delta(0.527, worksheet.outputs_physical_implications_q118, 0.002); end
  def test_outputs_physical_implications_q119; assert_in_epsilon(71.28999999999999, worksheet.outputs_physical_implications_q119, 0.002); end
  def test_outputs_physical_implications_q120; assert_in_epsilon(11.43, worksheet.outputs_physical_implications_q120, 0.002); end
  def test_outputs_physical_implications_q121; assert_in_epsilon(120.0, worksheet.outputs_physical_implications_q121, 0.002); end
  def test_outputs_physical_implications_y111; assert_in_epsilon(5264.46037112854, worksheet.outputs_physical_implications_y111, 0.002); end
  def test_outputs_physical_implications_y112; assert_in_epsilon(3998.321908688229, worksheet.outputs_physical_implications_y112, 0.002); end
  def test_outputs_physical_implications_y113; assert_in_epsilon(8144.634346088831, worksheet.outputs_physical_implications_y113, 0.002); end
  def test_outputs_physical_implications_y114; assert_in_epsilon(16.0, worksheet.outputs_physical_implications_y114, 0.002); end
  def test_outputs_physical_implications_y115; assert_in_epsilon(479.49999999999994, worksheet.outputs_physical_implications_y115, 0.002); end
  def test_outputs_physical_implications_y116; assert_in_epsilon(463.3999999999999, worksheet.outputs_physical_implications_y116, 0.002); end
  def test_outputs_physical_implications_y117; assert_in_epsilon(1693.8, worksheet.outputs_physical_implications_y117, 0.002); end
  def test_outputs_physical_implications_y118; assert_in_epsilon(34.7, worksheet.outputs_physical_implications_y118, 0.002); end
  def test_outputs_physical_implications_y119; assert_in_epsilon(440.86199999999985, worksheet.outputs_physical_implications_y119, 0.002); end
  def test_outputs_physical_implications_y120; assert_in_epsilon(68.79999999999998, worksheet.outputs_physical_implications_y120, 0.002); end
  def test_outputs_physical_implications_y121; assert_in_epsilon(327.7, worksheet.outputs_physical_implications_y121, 0.002); end
  def test_outputs_physical_implications_q89; assert_in_epsilon(32.351, worksheet.outputs_physical_implications_q89, 0.002); end
  def test_outputs_physical_implications_q90; assert_in_epsilon(43.757999999999996, worksheet.outputs_physical_implications_q90, 0.002); end
  def test_outputs_physical_implications_q91; assert_in_epsilon(99.48399999999998, worksheet.outputs_physical_implications_q91, 0.002); end
  def test_outputs_physical_implications_q92; assert_in_epsilon(8.975999999999999, worksheet.outputs_physical_implications_q92, 0.002); end
  def test_outputs_physical_implications_q93; assert_in_epsilon(2.430999999999989, worksheet.outputs_physical_implications_q93, 0.002); end
  def test_outputs_physical_implications_q94; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q94, 0.002); end
  def test_outputs_physical_implications_q95; assert_in_epsilon(7.0, worksheet.outputs_physical_implications_q95, 0.002); end
  def test_outputs_physical_implications_q96; assert_in_epsilon(26.964000000000002, worksheet.outputs_physical_implications_q96, 0.002); end
  def test_outputs_physical_implications_q97; assert_in_epsilon(26.964000000000002, worksheet.outputs_physical_implications_q97, 0.002); end
  def test_outputs_physical_implications_q98; assert_in_epsilon(100.15199999999999, worksheet.outputs_physical_implications_q98, 0.002); end
  def test_outputs_physical_implications_q99; assert_in_epsilon(1771.9200000000003, worksheet.outputs_physical_implications_q99, 0.002); end
  def test_outputs_physical_implications_y89; assert_in_epsilon(40.92, worksheet.outputs_physical_implications_y89, 0.002); end
  def test_outputs_physical_implications_y90; assert_in_epsilon(65.56, worksheet.outputs_physical_implications_y90, 0.002); end
  def test_outputs_physical_implications_y91; assert_in_epsilon(96.58, worksheet.outputs_physical_implications_y91, 0.002); end
  def test_outputs_physical_implications_y92; assert_in_epsilon(13.200000000000003, worksheet.outputs_physical_implications_y92, 0.002); end
  def test_outputs_physical_implications_y93; assert_in_epsilon(3.7400000000000033, worksheet.outputs_physical_implications_y93, 0.002); end
  def test_outputs_physical_implications_y94; assert_in_epsilon(70.58823529411767, worksheet.outputs_physical_implications_y94, 0.002); end
  def test_outputs_physical_implications_y95; assert_in_epsilon(8.23529411764706, worksheet.outputs_physical_implications_y95, 0.002); end
  def test_outputs_physical_implications_y96; assert_in_epsilon(42.65470588235294, worksheet.outputs_physical_implications_y96, 0.002); end
  def test_outputs_physical_implications_y97; assert_in_epsilon(38.592352941176465, worksheet.outputs_physical_implications_y97, 0.002); end
  def test_outputs_physical_implications_y98; assert_in_epsilon(134.05764705882353, worksheet.outputs_physical_implications_y98, 0.002); end
  def test_outputs_physical_implications_y99; assert_in_epsilon(1815.8717647058822, worksheet.outputs_physical_implications_y99, 0.002); end
  def test_outputs_physical_implications_c296; assert_equal("Technology category", worksheet.outputs_physical_implications_c296); end
  def test_outputs_physical_implications_q296; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q296, 0.002); end
  def test_outputs_physical_implications_r296; assert_equal("2015", worksheet.outputs_physical_implications_r296); end
  def test_outputs_physical_implications_s296; assert_equal("2020", worksheet.outputs_physical_implications_s296); end
  def test_outputs_physical_implications_t296; assert_equal("2025", worksheet.outputs_physical_implications_t296); end
  def test_outputs_physical_implications_u296; assert_equal("2030", worksheet.outputs_physical_implications_u296); end
  def test_outputs_physical_implications_v296; assert_equal("2035", worksheet.outputs_physical_implications_v296); end
  def test_outputs_physical_implications_w296; assert_equal("2040", worksheet.outputs_physical_implications_w296); end
  def test_outputs_physical_implications_x296; assert_equal("2045", worksheet.outputs_physical_implications_x296); end
  def test_outputs_physical_implications_y296; assert_equal("2050", worksheet.outputs_physical_implications_y296); end
  def test_outputs_physical_implications_c297; assert_equal("Light road", worksheet.outputs_physical_implications_c297); end
  def test_outputs_physical_implications_q297; assert_in_epsilon(104512.00105377422, worksheet.outputs_physical_implications_q297, 0.002); end
  def test_outputs_physical_implications_r297; assert_in_epsilon(121802.73711958692, worksheet.outputs_physical_implications_r297, 0.002); end
  def test_outputs_physical_implications_s297; assert_in_epsilon(146789.92007080888, worksheet.outputs_physical_implications_s297, 0.002); end
  def test_outputs_physical_implications_t297; assert_in_epsilon(172416.00217770613, worksheet.outputs_physical_implications_t297, 0.002); end
  def test_outputs_physical_implications_u297; assert_in_epsilon(193539.07315038054, worksheet.outputs_physical_implications_u297, 0.002); end
  def test_outputs_physical_implications_v297; assert_in_epsilon(210664.4360736797, worksheet.outputs_physical_implications_v297, 0.002); end
  def test_outputs_physical_implications_w297; assert_in_epsilon(223441.1823208008, worksheet.outputs_physical_implications_w297, 0.002); end
  def test_outputs_physical_implications_x297; assert_in_epsilon(233702.07950169782, worksheet.outputs_physical_implications_x297, 0.002); end
  def test_outputs_physical_implications_y297; assert_in_epsilon(241288.79738948715, worksheet.outputs_physical_implications_y297, 0.002); end
  def test_outputs_physical_implications_c298; assert_equal("Heavy road", worksheet.outputs_physical_implications_c298); end
  def test_outputs_physical_implications_q298; assert_in_epsilon(52118.56449426207, worksheet.outputs_physical_implications_q298, 0.002); end
  def test_outputs_physical_implications_r298; assert_in_epsilon(60519.680985166066, worksheet.outputs_physical_implications_r298, 0.002); end
  def test_outputs_physical_implications_s298; assert_in_epsilon(72187.22412474449, worksheet.outputs_physical_implications_s298, 0.002); end
  def test_outputs_physical_implications_t298; assert_in_epsilon(84439.73967759797, worksheet.outputs_physical_implications_t298, 0.002); end
  def test_outputs_physical_implications_u298; assert_in_epsilon(94983.74231641048, worksheet.outputs_physical_implications_u298, 0.002); end
  def test_outputs_physical_implications_v298; assert_in_epsilon(102358.96946617795, worksheet.outputs_physical_implications_v298, 0.002); end
  def test_outputs_physical_implications_w298; assert_in_epsilon(107546.23991928076, worksheet.outputs_physical_implications_w298, 0.002); end
  def test_outputs_physical_implications_x298; assert_in_epsilon(111731.62775869867, worksheet.outputs_physical_implications_x298, 0.002); end
  def test_outputs_physical_implications_y298; assert_in_epsilon(114383.69016352671, worksheet.outputs_physical_implications_y298, 0.002); end
  def test_outputs_physical_implications_c299; assert_equal("Rail", worksheet.outputs_physical_implications_c299); end
  def test_outputs_physical_implications_q299; assert_in_epsilon(84.04510232546681, worksheet.outputs_physical_implications_q299, 0.002); end
  def test_outputs_physical_implications_r299; assert_in_epsilon(92.791210061716, worksheet.outputs_physical_implications_r299, 0.002); end
  def test_outputs_physical_implications_s299; assert_in_epsilon(106.12018611953417, worksheet.outputs_physical_implications_s299, 0.002); end
  def test_outputs_physical_implications_t299; assert_in_epsilon(118.6021625515966, worksheet.outputs_physical_implications_t299, 0.002); end
  def test_outputs_physical_implications_u299; assert_in_epsilon(127.00760523799573, worksheet.outputs_physical_implications_u299, 0.002); end
  def test_outputs_physical_implications_v299; assert_in_epsilon(131.5545555351415, worksheet.outputs_physical_implications_v299, 0.002); end
  def test_outputs_physical_implications_w299; assert_in_epsilon(132.89825365038865, worksheet.outputs_physical_implications_w299, 0.002); end
  def test_outputs_physical_implications_x299; assert_in_epsilon(132.57835695432544, worksheet.outputs_physical_implications_x299, 0.002); end
  def test_outputs_physical_implications_y299; assert_in_epsilon(130.5739642406222, worksheet.outputs_physical_implications_y299, 0.002); end
  def test_outputs_physical_implications_c300; assert_equal("Ship", worksheet.outputs_physical_implications_c300); end
  def test_outputs_physical_implications_q300; assert_in_epsilon(84.8437433279107, worksheet.outputs_physical_implications_q300, 0.002); end
  def test_outputs_physical_implications_r300; assert_in_epsilon(95.6550285192462, worksheet.outputs_physical_implications_r300, 0.002); end
  def test_outputs_physical_implications_s300; assert_in_epsilon(110.26173452384086, worksheet.outputs_physical_implications_s300, 0.002); end
  def test_outputs_physical_implications_t300; assert_in_epsilon(125.94712215768718, worksheet.outputs_physical_implications_t300, 0.002); end
  def test_outputs_physical_implications_u300; assert_in_epsilon(139.91876108226506, worksheet.outputs_physical_implications_u300, 0.002); end
  def test_outputs_physical_implications_v300; assert_in_epsilon(145.75945369953388, worksheet.outputs_physical_implications_v300, 0.002); end
  def test_outputs_physical_implications_w300; assert_in_epsilon(148.11366416379184, worksheet.outputs_physical_implications_w300, 0.002); end
  def test_outputs_physical_implications_x300; assert_in_epsilon(149.54416363154488, worksheet.outputs_physical_implications_x300, 0.002); end
  def test_outputs_physical_implications_y300; assert_in_epsilon(148.2069427595682, worksheet.outputs_physical_implications_y300, 0.002); end
  def test_outputs_physical_implications_c301; assert_equal("Plane", worksheet.outputs_physical_implications_c301); end
  def test_outputs_physical_implications_q301; assert_in_epsilon(1.8014330268291616, worksheet.outputs_physical_implications_q301, 0.002); end
  def test_outputs_physical_implications_r301; assert_in_epsilon(2.110073457829745, worksheet.outputs_physical_implications_r301, 0.002); end
  def test_outputs_physical_implications_s301; assert_in_epsilon(2.5157263474493963, worksheet.outputs_physical_implications_s301, 0.002); end
  def test_outputs_physical_implications_t301; assert_in_epsilon(2.9837279204308107, worksheet.outputs_physical_implications_t301, 0.002); end
  def test_outputs_physical_implications_u301; assert_in_epsilon(3.452549843263047, worksheet.outputs_physical_implications_u301, 0.002); end
  def test_outputs_physical_implications_v301; assert_in_epsilon(3.7101122099819728, worksheet.outputs_physical_implications_v301, 0.002); end
  def test_outputs_physical_implications_w301; assert_in_epsilon(3.887955101293789, worksheet.outputs_physical_implications_w301, 0.002); end
  def test_outputs_physical_implications_x301; assert_in_epsilon(4.052790281946729, worksheet.outputs_physical_implications_x301, 0.002); end
  def test_outputs_physical_implications_y301; assert_in_epsilon(4.139905363625595, worksheet.outputs_physical_implications_y301, 0.002); end
  def test_outputs_physical_implications_c302; assert_equal("Total", worksheet.outputs_physical_implications_c302); end
  def test_outputs_physical_implications_q302; assert_in_epsilon(156801.25582671652, worksheet.outputs_physical_implications_q302, 0.002); end
  def test_outputs_physical_implications_r302; assert_in_epsilon(182512.97441679178, worksheet.outputs_physical_implications_r302, 0.002); end
  def test_outputs_physical_implications_s302; assert_in_epsilon(219196.04184254422, worksheet.outputs_physical_implications_s302, 0.002); end
  def test_outputs_physical_implications_t302; assert_in_epsilon(257103.27486793383, worksheet.outputs_physical_implications_t302, 0.002); end
  def test_outputs_physical_implications_u302; assert_in_epsilon(288793.19438295456, worksheet.outputs_physical_implications_u302, 0.002); end
  def test_outputs_physical_implications_v302; assert_in_epsilon(313304.4296613023, worksheet.outputs_physical_implications_v302, 0.002); end
  def test_outputs_physical_implications_w302; assert_in_epsilon(331272.32211299706, worksheet.outputs_physical_implications_w302, 0.002); end
  def test_outputs_physical_implications_x302; assert_in_epsilon(345719.88257126434, worksheet.outputs_physical_implications_x302, 0.002); end
  def test_outputs_physical_implications_y302; assert_in_epsilon(355955.40836537763, worksheet.outputs_physical_implications_y302, 0.002); end
  def test_outputs_physical_implications_c56; assert_equal("Type of land", worksheet.outputs_physical_implications_c56); end
  def test_outputs_physical_implications_l56; assert_in_epsilon(1990.0, worksheet.outputs_physical_implications_l56, 0.002); end
  def test_outputs_physical_implications_m56; assert_in_epsilon(1995.0, worksheet.outputs_physical_implications_m56, 0.002); end
  def test_outputs_physical_implications_n56; assert_in_epsilon(2000.0, worksheet.outputs_physical_implications_n56, 0.002); end
  def test_outputs_physical_implications_o56; assert_in_epsilon(2005.0, worksheet.outputs_physical_implications_o56, 0.002); end
  def test_outputs_physical_implications_p56; assert_in_epsilon(2010.0, worksheet.outputs_physical_implications_p56, 0.002); end
  def test_outputs_physical_implications_q56; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q56, 0.002); end
  def test_outputs_physical_implications_r56; assert_equal("2015", worksheet.outputs_physical_implications_r56); end
  def test_outputs_physical_implications_s56; assert_equal("2020", worksheet.outputs_physical_implications_s56); end
  def test_outputs_physical_implications_t56; assert_equal("2025", worksheet.outputs_physical_implications_t56); end
  def test_outputs_physical_implications_u56; assert_equal("2030", worksheet.outputs_physical_implications_u56); end
  def test_outputs_physical_implications_v56; assert_equal("2035", worksheet.outputs_physical_implications_v56); end
  def test_outputs_physical_implications_w56; assert_equal("2040", worksheet.outputs_physical_implications_w56); end
  def test_outputs_physical_implications_x56; assert_equal("2045", worksheet.outputs_physical_implications_x56); end
  def test_outputs_physical_implications_y56; assert_equal("2050", worksheet.outputs_physical_implications_y56); end
  def test_outputs_physical_implications_c57; assert_equal("Land for animals", worksheet.outputs_physical_implications_c57); end
  def test_outputs_physical_implications_l57; assert_in_epsilon(3305.27405, worksheet.outputs_physical_implications_l57, 0.002); end
  def test_outputs_physical_implications_m57; assert_in_epsilon(3394.7165, worksheet.outputs_physical_implications_m57, 0.002); end
  def test_outputs_physical_implications_n57; assert_in_epsilon(3417.6424, worksheet.outputs_physical_implications_n57, 0.002); end
  def test_outputs_physical_implications_o57; assert_in_epsilon(3388.2637000000004, worksheet.outputs_physical_implications_o57, 0.002); end
  def test_outputs_physical_implications_p57; assert_in_epsilon(3358.24029, worksheet.outputs_physical_implications_p57, 0.002); end
  def test_outputs_physical_implications_q57; assert_in_epsilon(3362.6790000000005, worksheet.outputs_physical_implications_q57, 0.002); end
  def test_outputs_physical_implications_r57; assert_in_epsilon(3383.696452262766, worksheet.outputs_physical_implications_r57, 0.002); end
  def test_outputs_physical_implications_s57; assert_in_epsilon(3406.3464556253043, worksheet.outputs_physical_implications_s57, 0.002); end
  def test_outputs_physical_implications_t57; assert_in_epsilon(3417.1172873879277, worksheet.outputs_physical_implications_t57, 0.002); end
  def test_outputs_physical_implications_u57; assert_in_epsilon(3437.656570907084, worksheet.outputs_physical_implications_u57, 0.002); end
  def test_outputs_physical_implications_v57; assert_in_epsilon(3484.5554138230927, worksheet.outputs_physical_implications_v57, 0.002); end
  def test_outputs_physical_implications_w57; assert_in_epsilon(3554.47214244929, worksheet.outputs_physical_implications_w57, 0.002); end
  def test_outputs_physical_implications_x57; assert_in_epsilon(3610.163213317937, worksheet.outputs_physical_implications_x57, 0.002); end
  def test_outputs_physical_implications_y57; assert_in_epsilon(3696.560406988589, worksheet.outputs_physical_implications_y57, 0.002); end
  def test_outputs_physical_implications_c58; assert_equal("Land for food crops", worksheet.outputs_physical_implications_c58); end
  def test_outputs_physical_implications_l58; assert_in_epsilon(1435.159, worksheet.outputs_physical_implications_l58, 0.002); end
  def test_outputs_physical_implications_m58; assert_in_epsilon(1435.5399510204102, worksheet.outputs_physical_implications_m58, 0.002); end
  def test_outputs_physical_implications_n58; assert_in_epsilon(1428.67608979592, worksheet.outputs_physical_implications_n58, 0.002); end
  def test_outputs_physical_implications_o58; assert_in_epsilon(1446.4106385714301, worksheet.outputs_physical_implications_o58, 0.002); end
  def test_outputs_physical_implications_p58; assert_in_epsilon(1438.53226734694, worksheet.outputs_physical_implications_p58, 0.002); end
  def test_outputs_physical_implications_q58; assert_in_epsilon(1443.03019, worksheet.outputs_physical_implications_q58, 0.002); end
  def test_outputs_physical_implications_r58; assert_in_epsilon(1433.9199088344578, worksheet.outputs_physical_implications_r58, 0.002); end
  def test_outputs_physical_implications_s58; assert_in_epsilon(1461.219392800743, worksheet.outputs_physical_implications_s58, 0.002); end
  def test_outputs_physical_implications_t58; assert_in_epsilon(1482.3924627066822, worksheet.outputs_physical_implications_t58, 0.002); end
  def test_outputs_physical_implications_u58; assert_in_epsilon(1501.239936786646, worksheet.outputs_physical_implications_u58, 0.002); end
  def test_outputs_physical_implications_v58; assert_in_epsilon(1521.07456905648, worksheet.outputs_physical_implications_v58, 0.002); end
  def test_outputs_physical_implications_w58; assert_in_epsilon(1541.7237748839575, worksheet.outputs_physical_implications_w58, 0.002); end
  def test_outputs_physical_implications_x58; assert_in_epsilon(1557.081439999378, worksheet.outputs_physical_implications_x58, 0.002); end
  def test_outputs_physical_implications_y58; assert_in_epsilon(1574.7637435003835, worksheet.outputs_physical_implications_y58, 0.002); end
  def test_outputs_physical_implications_c59; assert_equal("Land for non-food crops ", worksheet.outputs_physical_implications_c59); end
  def test_outputs_physical_implications_l59; assert_in_epsilon(48.0, worksheet.outputs_physical_implications_l59, 0.002); end
  def test_outputs_physical_implications_m59; assert_in_epsilon(50.8571428571429, worksheet.outputs_physical_implications_m59, 0.002); end
  def test_outputs_physical_implications_n59; assert_in_epsilon(53.7142857142857, worksheet.outputs_physical_implications_n59, 0.002); end
  def test_outputs_physical_implications_o59; assert_in_epsilon(56.571428571428605, worksheet.outputs_physical_implications_o59, 0.002); end
  def test_outputs_physical_implications_p59; assert_in_epsilon(59.4285714285714, worksheet.outputs_physical_implications_p59, 0.002); end
  def test_outputs_physical_implications_q59; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q59, 0.002); end
  def test_outputs_physical_implications_r59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_r59, 0.002); end
  def test_outputs_physical_implications_s59; assert_in_epsilon(58.87252747252747, worksheet.outputs_physical_implications_s59, 0.002); end
  def test_outputs_physical_implications_t59; assert_in_epsilon(58.36043956043956, worksheet.outputs_physical_implications_t59, 0.002); end
  def test_outputs_physical_implications_u59; assert_in_epsilon(57.848351648351645, worksheet.outputs_physical_implications_u59, 0.002); end
  def test_outputs_physical_implications_v59; assert_in_epsilon(57.33626373626373, worksheet.outputs_physical_implications_v59, 0.002); end
  def test_outputs_physical_implications_w59; assert_in_epsilon(56.824175824175825, worksheet.outputs_physical_implications_w59, 0.002); end
  def test_outputs_physical_implications_x59; assert_in_epsilon(56.31208791208791, worksheet.outputs_physical_implications_x59, 0.002); end
  def test_outputs_physical_implications_y59; assert_in_epsilon(55.800000000000004, worksheet.outputs_physical_implications_y59, 0.002); end
  def test_outputs_physical_implications_c60; assert_equal("Forest", worksheet.outputs_physical_implications_c60); end
  def test_outputs_physical_implications_l60; assert_in_epsilon(3949.19954, worksheet.outputs_physical_implications_l60, 0.002); end
  def test_outputs_physical_implications_m60; assert_in_epsilon(3894.5365409523797, worksheet.outputs_physical_implications_m60, 0.002); end
  def test_outputs_physical_implications_n60; assert_in_epsilon(3839.87336190476, worksheet.outputs_physical_implications_n60, 0.002); end
  def test_outputs_physical_implications_o60; assert_in_epsilon(3802.6219428571403, worksheet.outputs_physical_implications_o60, 0.002); end
  def test_outputs_physical_implications_p60; assert_in_epsilon(3761.66904380952, worksheet.outputs_physical_implications_p60, 0.002); end
  def test_outputs_physical_implications_q60; assert_in_epsilon(3753.47833, worksheet.outputs_physical_implications_q60, 0.002); end
  def test_outputs_physical_implications_r60; assert_in_epsilon(3708.141023486827, worksheet.outputs_physical_implications_r60, 0.002); end
  def test_outputs_physical_implications_s60; assert_in_epsilon(3615.1038606434995, worksheet.outputs_physical_implications_s60, 0.002); end
  def test_outputs_physical_implications_t60; assert_in_epsilon(3539.7222918912084, worksheet.outputs_physical_implications_t60, 0.002); end
  def test_outputs_physical_implications_u60; assert_in_epsilon(3457.226030968486, worksheet.outputs_physical_implications_u60, 0.002); end
  def test_outputs_physical_implications_v60; assert_in_epsilon(3347.764474929827, worksheet.outputs_physical_implications_v60, 0.002); end
  def test_outputs_physical_implications_w60; assert_in_epsilon(3213.3037653302945, worksheet.outputs_physical_implications_w60, 0.002); end
  def test_outputs_physical_implications_x60; assert_in_epsilon(3098.3330253553795, worksheet.outputs_physical_implications_x60, 0.002); end
  def test_outputs_physical_implications_y60; assert_in_epsilon(2949.1771697458553, worksheet.outputs_physical_implications_y60, 0.002); end
  def test_outputs_physical_implications_c61; assert_equal("Commercial forest", worksheet.outputs_physical_implications_c61); end
  def test_outputs_physical_implications_l61; assert_in_epsilon(219.20000000000002, worksheet.outputs_physical_implications_l61, 0.002); end
  def test_outputs_physical_implications_m61; assert_in_epsilon(232.247619047619, worksheet.outputs_physical_implications_m61, 0.002); end
  def test_outputs_physical_implications_n61; assert_in_epsilon(245.295238095238, worksheet.outputs_physical_implications_n61, 0.002); end
  def test_outputs_physical_implications_o61; assert_in_epsilon(258.34285714285704, worksheet.outputs_physical_implications_o61, 0.002); end
  def test_outputs_physical_implications_p61; assert_in_epsilon(271.39047619047597, worksheet.outputs_physical_implications_p61, 0.002); end
  def test_outputs_physical_implications_q61; assert_in_epsilon(274.0, worksheet.outputs_physical_implications_q61, 0.002); end
  def test_outputs_physical_implications_r61; assert_in_epsilon(291.06086517927804, worksheet.outputs_physical_implications_r61, 0.002); end
  def test_outputs_physical_implications_s61; assert_in_epsilon(316.0822346196215, worksheet.outputs_physical_implications_s61, 0.002); end
  def test_outputs_physical_implications_t61; assert_in_epsilon(342.65290348682817, worksheet.outputs_physical_implications_t61, 0.002); end
  def test_outputs_physical_implications_u61; assert_in_epsilon(370.08699060161524, worksheet.outputs_physical_implications_u61, 0.002); end
  def test_outputs_physical_implications_v61; assert_in_epsilon(398.2304694192561, worksheet.outputs_physical_implications_v61, 0.002); end
  def test_outputs_physical_implications_w61; assert_in_epsilon(428.6435905537759, worksheet.outputs_physical_implications_w61, 0.002); end
  def test_outputs_physical_implications_x61; assert_in_epsilon(460.29206439145537, worksheet.outputs_physical_implications_x61, 0.002); end
  def test_outputs_physical_implications_y61; assert_in_epsilon(494.3861997651739, worksheet.outputs_physical_implications_y61, 0.002); end
  def test_outputs_physical_implications_c62; assert_equal("Land for energy crops", worksheet.outputs_physical_implications_c62); end
  def test_outputs_physical_implications_l62; assert_in_epsilon(36.0, worksheet.outputs_physical_implications_l62, 0.002); end
  def test_outputs_physical_implications_m62; assert_in_epsilon(36.429306122449, worksheet.outputs_physical_implications_m62, 0.002); end
  def test_outputs_physical_implications_n62; assert_in_epsilon(36.430224489795904, worksheet.outputs_physical_implications_n62, 0.002); end
  def test_outputs_physical_implications_o62; assert_in_epsilon(36.431142857142795, worksheet.outputs_physical_implications_o62, 0.002); end
  def test_outputs_physical_implications_p62; assert_in_epsilon(36.4320612244898, worksheet.outputs_physical_implications_p62, 0.002); end
  def test_outputs_physical_implications_q62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_q62, 0.002); end
  def test_outputs_physical_implications_r62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_r62, 0.002); end
  def test_outputs_physical_implications_s62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_s62, 0.002); end
  def test_outputs_physical_implications_t62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_t62, 0.002); end
  def test_outputs_physical_implications_u62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_u62, 0.002); end
  def test_outputs_physical_implications_v62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_v62, 0.002); end
  def test_outputs_physical_implications_w62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_w62, 0.002); end
  def test_outputs_physical_implications_x62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_x62, 0.002); end
  def test_outputs_physical_implications_y62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_y62, 0.002); end
  def test_outputs_physical_implications_c63; assert_equal("Natural grassland", worksheet.outputs_physical_implications_c63); end
  def test_outputs_physical_implications_l63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_l63||0), 0.002); end
  def test_outputs_physical_implications_m63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_m63||0), 0.002); end
  def test_outputs_physical_implications_n63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_n63||0), 0.002); end
  def test_outputs_physical_implications_o63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_o63||0), 0.002); end
  def test_outputs_physical_implications_p63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_p63||0), 0.002); end
  def test_outputs_physical_implications_q63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q63||0), 0.002); end
  def test_outputs_physical_implications_r63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_r63||0), 0.002); end
  def test_outputs_physical_implications_s63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_s63||0), 0.002); end
  def test_outputs_physical_implications_t63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_t63||0), 0.002); end
  def test_outputs_physical_implications_u63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_u63||0), 0.002); end
  def test_outputs_physical_implications_v63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_v63||0), 0.002); end
  def test_outputs_physical_implications_w63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_w63||0), 0.002); end
  def test_outputs_physical_implications_x63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_x63||0), 0.002); end
  def test_outputs_physical_implications_y63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_y63||0), 0.002); end
  def test_outputs_physical_implications_c64; assert_equal("Settlements and infrastructure", worksheet.outputs_physical_implications_c64); end
  def test_outputs_physical_implications_l64; assert_in_epsilon(196.0, worksheet.outputs_physical_implications_l64, 0.002); end
  def test_outputs_physical_implications_m64; assert_in_epsilon(207.666666666667, worksheet.outputs_physical_implications_m64, 0.002); end
  def test_outputs_physical_implications_n64; assert_in_epsilon(219.333333333333, worksheet.outputs_physical_implications_n64, 0.002); end
  def test_outputs_physical_implications_o64; assert_in_epsilon(231.0, worksheet.outputs_physical_implications_o64, 0.002); end
  def test_outputs_physical_implications_p64; assert_in_epsilon(242.666666666667, worksheet.outputs_physical_implications_p64, 0.002); end
  def test_outputs_physical_implications_q64; assert_in_epsilon(245.0, worksheet.outputs_physical_implications_q64, 0.002); end
  def test_outputs_physical_implications_r64; assert_in_epsilon(261.98465485205844, worksheet.outputs_physical_implications_r64, 0.002); end
  def test_outputs_physical_implications_s64; assert_in_epsilon(280.56304883830444, worksheet.outputs_physical_implications_s64, 0.002); end
  def test_outputs_physical_implications_t64; assert_in_epsilon(297.94213496691447, worksheet.outputs_physical_implications_t64, 0.002); end
  def test_outputs_physical_implications_u64; assert_in_epsilon(314.1296390878191, worksheet.outputs_physical_implications_u64, 0.002); end
  def test_outputs_physical_implications_v64; assert_in_epsilon(329.22632903508304, worksheet.outputs_physical_implications_v64, 0.002); end
  def test_outputs_physical_implications_w64; assert_in_epsilon(343.22007095850836, worksheet.outputs_physical_implications_w64, 0.002); end
  def test_outputs_physical_implications_x64; assert_in_epsilon(356.0056890237634, worksheet.outputs_physical_implications_x64, 0.002); end
  def test_outputs_physical_implications_y64; assert_in_epsilon(367.5, worksheet.outputs_physical_implications_y64, 0.002); end
  def test_outputs_physical_implications_c65; assert_equal("Desert, ice etc", worksheet.outputs_physical_implications_c65); end
  def test_outputs_physical_implications_l65; assert_in_epsilon(3878.6295800000003, worksheet.outputs_physical_implications_l65, 0.002); end
  def test_outputs_physical_implications_m65; assert_in_epsilon(3768.11670333333, worksheet.outputs_physical_implications_m65, 0.002); end
  def test_outputs_physical_implications_n65; assert_in_epsilon(3781.4923166666704, worksheet.outputs_physical_implications_n65, 0.002); end
  def test_outputs_physical_implications_o65; assert_in_epsilon(3802.21538, worksheet.outputs_physical_implications_o65, 0.002); end
  def test_outputs_physical_implications_p65; assert_in_epsilon(3850.9266033333297, worksheet.outputs_physical_implications_p65, 0.002); end
  def test_outputs_physical_implications_q65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_q65, 0.002); end
  def test_outputs_physical_implications_r65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_r65, 0.002); end
  def test_outputs_physical_implications_s65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_s65, 0.002); end
  def test_outputs_physical_implications_t65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_t65, 0.002); end
  def test_outputs_physical_implications_u65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_u65, 0.002); end
  def test_outputs_physical_implications_v65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_v65, 0.002); end
  def test_outputs_physical_implications_w65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_w65, 0.002); end
  def test_outputs_physical_implications_x65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_x65, 0.002); end
  def test_outputs_physical_implications_y65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_y65, 0.002); end
  def test_outputs_physical_implications_c287; assert_equal("Technology category", worksheet.outputs_physical_implications_c287); end
  def test_outputs_physical_implications_q287; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q287, 0.002); end
  def test_outputs_physical_implications_r287; assert_equal("2015", worksheet.outputs_physical_implications_r287); end
  def test_outputs_physical_implications_s287; assert_equal("2020", worksheet.outputs_physical_implications_s287); end
  def test_outputs_physical_implications_t287; assert_equal("2025", worksheet.outputs_physical_implications_t287); end
  def test_outputs_physical_implications_u287; assert_equal("2030", worksheet.outputs_physical_implications_u287); end
  def test_outputs_physical_implications_v287; assert_equal("2035", worksheet.outputs_physical_implications_v287); end
  def test_outputs_physical_implications_w287; assert_equal("2040", worksheet.outputs_physical_implications_w287); end
  def test_outputs_physical_implications_x287; assert_equal("2045", worksheet.outputs_physical_implications_x287); end
  def test_outputs_physical_implications_y287; assert_equal("2050", worksheet.outputs_physical_implications_y287); end
  def test_outputs_physical_implications_c288; assert_equal("Light road", worksheet.outputs_physical_implications_c288); end
  def test_outputs_physical_implications_q288; assert_in_epsilon(1456126.4593140536, worksheet.outputs_physical_implications_q288, 0.002); end
  def test_outputs_physical_implications_r288; assert_in_epsilon(1730053.4388228192, worksheet.outputs_physical_implications_r288, 0.002); end
  def test_outputs_physical_implications_s288; assert_in_epsilon(1969144.1626437132, worksheet.outputs_physical_implications_s288, 0.002); end
  def test_outputs_physical_implications_t288; assert_in_epsilon(2185550.6716460437, worksheet.outputs_physical_implications_t288, 0.002); end
  def test_outputs_physical_implications_u288; assert_in_epsilon(2402741.130368893, worksheet.outputs_physical_implications_u288, 0.002); end
  def test_outputs_physical_implications_v288; assert_in_epsilon(2601256.636975259, worksheet.outputs_physical_implications_v288, 0.002); end
  def test_outputs_physical_implications_w288; assert_in_epsilon(2788414.050020917, worksheet.outputs_physical_implications_w288, 0.002); end
  def test_outputs_physical_implications_x288; assert_in_epsilon(2956415.731077549, worksheet.outputs_physical_implications_x288, 0.002); end
  def test_outputs_physical_implications_y288; assert_in_epsilon(3119035.773486961, worksheet.outputs_physical_implications_y288, 0.002); end
  def test_outputs_physical_implications_c289; assert_equal("Heavy road", worksheet.outputs_physical_implications_c289); end
  def test_outputs_physical_implications_q289; assert_in_epsilon(15512.285452212032, worksheet.outputs_physical_implications_q289, 0.002); end
  def test_outputs_physical_implications_r289; assert_in_epsilon(18497.59066542302, worksheet.outputs_physical_implications_r289, 0.002); end
  def test_outputs_physical_implications_s289; assert_in_epsilon(21494.23466480909, worksheet.outputs_physical_implications_s289, 0.002); end
  def test_outputs_physical_implications_t289; assert_in_epsilon(24188.966352377414, worksheet.outputs_physical_implications_t289, 0.002); end
  def test_outputs_physical_implications_u289; assert_in_epsilon(26770.47164869646, worksheet.outputs_physical_implications_u289, 0.002); end
  def test_outputs_physical_implications_v289; assert_in_epsilon(29044.75064860239, worksheet.outputs_physical_implications_v289, 0.002); end
  def test_outputs_physical_implications_w289; assert_in_epsilon(31062.78784169544, worksheet.outputs_physical_implications_w289, 0.002); end
  def test_outputs_physical_implications_x289; assert_in_epsilon(32783.26582276118, worksheet.outputs_physical_implications_x289, 0.002); end
  def test_outputs_physical_implications_y289; assert_in_epsilon(34341.39951617111, worksheet.outputs_physical_implications_y289, 0.002); end
  def test_outputs_physical_implications_c290; assert_equal("Rail", worksheet.outputs_physical_implications_c290); end
  def test_outputs_physical_implications_q290; assert_in_epsilon(81.4115591866842, worksheet.outputs_physical_implications_q290, 0.002); end
  def test_outputs_physical_implications_r290; assert_in_epsilon(91.77208229575537, worksheet.outputs_physical_implications_r290, 0.002); end
  def test_outputs_physical_implications_s290; assert_in_epsilon(102.26986624814094, worksheet.outputs_physical_implications_s290, 0.002); end
  def test_outputs_physical_implications_t290; assert_in_epsilon(110.51055881400272, worksheet.outputs_physical_implications_t290, 0.002); end
  def test_outputs_physical_implications_u290; assert_in_epsilon(118.24345925211657, worksheet.outputs_physical_implications_u290, 0.002); end
  def test_outputs_physical_implications_v290; assert_in_epsilon(124.5163004846425, worksheet.outputs_physical_implications_v290, 0.002); end
  def test_outputs_physical_implications_w290; assert_in_epsilon(130.21736232696153, worksheet.outputs_physical_implications_w290, 0.002); end
  def test_outputs_physical_implications_x290; assert_in_epsilon(135.0344102546242, worksheet.outputs_physical_implications_x290, 0.002); end
  def test_outputs_physical_implications_y290; assert_in_epsilon(139.88201387749885, worksheet.outputs_physical_implications_y290, 0.002); end
  def test_outputs_physical_implications_c291; assert_equal("Plane", worksheet.outputs_physical_implications_c291); end
  def test_outputs_physical_implications_q291; assert_in_epsilon(24.99654391376603, worksheet.outputs_physical_implications_q291, 0.002); end
  def test_outputs_physical_implications_r291; assert_in_epsilon(28.469768089299162, worksheet.outputs_physical_implications_r291, 0.002); end
  def test_outputs_physical_implications_s291; assert_in_epsilon(31.828339524473336, worksheet.outputs_physical_implications_s291, 0.002); end
  def test_outputs_physical_implications_t291; assert_in_epsilon(35.53631156493303, worksheet.outputs_physical_implications_t291, 0.002); end
  def test_outputs_physical_implications_u291; assert_in_epsilon(39.66197301005781, worksheet.outputs_physical_implications_u291, 0.002); end
  def test_outputs_physical_implications_v291; assert_in_epsilon(44.295537413982245, worksheet.outputs_physical_implications_v291, 0.002); end
  def test_outputs_physical_implications_w291; assert_in_epsilon(49.53107496171928, worksheet.outputs_physical_implications_w291, 0.002); end
  def test_outputs_physical_implications_x291; assert_in_epsilon(55.46642902289421, worksheet.outputs_physical_implications_x291, 0.002); end
  def test_outputs_physical_implications_y291; assert_in_epsilon(62.21548748122321, worksheet.outputs_physical_implications_y291, 0.002); end
  def test_outputs_physical_implications_c292; assert_equal("Total", worksheet.outputs_physical_implications_c292); end
  def test_outputs_physical_implications_q292; assert_in_epsilon(1471745.152869366, worksheet.outputs_physical_implications_q292, 0.002); end
  def test_outputs_physical_implications_r292; assert_in_epsilon(1748671.2713386272, worksheet.outputs_physical_implications_r292, 0.002); end
  def test_outputs_physical_implications_s292; assert_in_epsilon(1990772.495514295, worksheet.outputs_physical_implications_s292, 0.002); end
  def test_outputs_physical_implications_t292; assert_in_epsilon(2209885.6848688, worksheet.outputs_physical_implications_t292, 0.002); end
  def test_outputs_physical_implications_u292; assert_in_epsilon(2429669.507449852, worksheet.outputs_physical_implications_u292, 0.002); end
  def test_outputs_physical_implications_v292; assert_in_epsilon(2630470.19946176, worksheet.outputs_physical_implications_v292, 0.002); end
  def test_outputs_physical_implications_w292; assert_in_epsilon(2819656.586299901, worksheet.outputs_physical_implications_w292, 0.002); end
  def test_outputs_physical_implications_x292; assert_in_epsilon(2989389.497739588, worksheet.outputs_physical_implications_x292, 0.002); end
  def test_outputs_physical_implications_y292; assert_in_epsilon(3153579.270504491, worksheet.outputs_physical_implications_y292, 0.002); end
  def test_outputs_physical_implications_q48; assert_in_delta(0.8432926393963501, worksheet.outputs_physical_implications_q48, 0.002); end
  def test_outputs_physical_implications_y48; assert_in_delta(0.9389292544041041, worksheet.outputs_physical_implications_y48, 0.002); end
  def test_outputs_physical_implications_q9; assert_in_epsilon(6966439712.0, worksheet.outputs_physical_implications_q9, 0.002); end
  def test_outputs_physical_implications_y9; assert_in_epsilon(9550945000.0, worksheet.outputs_physical_implications_y9, 0.002); end
  def test_outputs_physical_implications_q35; assert_in_epsilon(833660013.8618993, worksheet.outputs_physical_implications_q35, 0.002); end
  def test_outputs_physical_implications_y35; assert_in_epsilon(917809553.0459162, worksheet.outputs_physical_implications_y35, 0.002); end
  def test_outputs_physical_implications_q30; assert_in_epsilon(1452719862.6209612, worksheet.outputs_physical_implications_q30, 0.002); end
  def test_outputs_physical_implications_y30; assert_in_epsilon(2881187074.6996784, worksheet.outputs_physical_implications_y30, 0.002); end
  def test_outputs_physical_implications_q21; assert_in_delta(0.5213279389034929, worksheet.outputs_physical_implications_q21, 0.002); end
  def test_outputs_physical_implications_y21; assert_in_delta(0.663663288223238, worksheet.outputs_physical_implications_y21, 0.002); end
  def test_outputs_physical_implications_c151; assert_equal("Description", worksheet.outputs_physical_implications_c151); end
  def test_outputs_physical_implications_d151; assert_equal("Column1", worksheet.outputs_physical_implications_d151); end
  def test_outputs_physical_implications_e151; assert_equal("Column2", worksheet.outputs_physical_implications_e151); end
  def test_outputs_physical_implications_f151; assert_equal("Column3", worksheet.outputs_physical_implications_f151); end
  def test_outputs_physical_implications_g151; assert_equal("Column4", worksheet.outputs_physical_implications_g151); end
  def test_outputs_physical_implications_h151; assert_equal("Column5", worksheet.outputs_physical_implications_h151); end
  def test_outputs_physical_implications_i151; assert_equal("Column6", worksheet.outputs_physical_implications_i151); end
  def test_outputs_physical_implications_j151; assert_equal("Column7", worksheet.outputs_physical_implications_j151); end
  def test_outputs_physical_implications_k151; assert_equal("Column8", worksheet.outputs_physical_implications_k151); end
  def test_outputs_physical_implications_l151; assert_equal("Column9", worksheet.outputs_physical_implications_l151); end
  def test_outputs_physical_implications_m151; assert_equal("Column10", worksheet.outputs_physical_implications_m151); end
  def test_outputs_physical_implications_n151; assert_equal("Column11", worksheet.outputs_physical_implications_n151); end
  def test_outputs_physical_implications_o151; assert_equal("Column12", worksheet.outputs_physical_implications_o151); end
  def test_outputs_physical_implications_p151; assert_equal("Column13", worksheet.outputs_physical_implications_p151); end
  def test_outputs_physical_implications_q151; assert_equal("2011", worksheet.outputs_physical_implications_q151); end
  def test_outputs_physical_implications_r151; assert_equal("2015", worksheet.outputs_physical_implications_r151); end
  def test_outputs_physical_implications_s151; assert_equal("2020", worksheet.outputs_physical_implications_s151); end
  def test_outputs_physical_implications_t151; assert_equal("2025", worksheet.outputs_physical_implications_t151); end
  def test_outputs_physical_implications_u151; assert_equal("2030", worksheet.outputs_physical_implications_u151); end
  def test_outputs_physical_implications_v151; assert_equal("2035", worksheet.outputs_physical_implications_v151); end
  def test_outputs_physical_implications_w151; assert_equal("2040", worksheet.outputs_physical_implications_w151); end
  def test_outputs_physical_implications_x151; assert_equal("2045", worksheet.outputs_physical_implications_x151); end
  def test_outputs_physical_implications_y151; assert_equal("2050", worksheet.outputs_physical_implications_y151); end
  def test_outputs_physical_implications_c152; assert_equal("Iron and steel", worksheet.outputs_physical_implications_c152); end
  def test_outputs_physical_implications_e152; assert_equal("Steel.Oxygen", worksheet.outputs_physical_implications_e152); end
  def test_outputs_physical_implications_f152; assert_equal("Steel.OxygenHisarna", worksheet.outputs_physical_implications_f152); end
  def test_outputs_physical_implications_g152; assert_equal("Steel.Electric", worksheet.outputs_physical_implications_g152); end
  def test_outputs_physical_implications_h152; assert_equal("Steel.ElectricDRI", worksheet.outputs_physical_implications_h152); end
  def test_outputs_physical_implications_q152; assert_in_epsilon(1.5183, worksheet.outputs_physical_implications_q152, 0.002); end
  def test_outputs_physical_implications_r152; assert_in_epsilon(1.6089580924802336, worksheet.outputs_physical_implications_r152, 0.002); end
  def test_outputs_physical_implications_s152; assert_in_epsilon(1.7235840557757651, worksheet.outputs_physical_implications_s152, 0.002); end
  def test_outputs_physical_implications_t152; assert_in_epsilon(1.8585376206174125, worksheet.outputs_physical_implications_t152, 0.002); end
  def test_outputs_physical_implications_u152; assert_in_epsilon(1.9905202479842505, worksheet.outputs_physical_implications_u152, 0.002); end
  def test_outputs_physical_implications_v152; assert_in_epsilon(2.1109796810195736, worksheet.outputs_physical_implications_v152, 0.002); end
  def test_outputs_physical_implications_w152; assert_in_epsilon(2.2437334821765074, worksheet.outputs_physical_implications_w152, 0.002); end
  def test_outputs_physical_implications_x152; assert_in_epsilon(2.3844862905327653, worksheet.outputs_physical_implications_x152, 0.002); end
  def test_outputs_physical_implications_y152; assert_in_epsilon(2.532596719536125, worksheet.outputs_physical_implications_y152, 0.002); end
  def test_outputs_physical_implications_c153; assert_equal("Aluminium", worksheet.outputs_physical_implications_c153); end
  def test_outputs_physical_implications_f153; assert_equal("Aluminium.Primary", worksheet.outputs_physical_implications_f153); end
  def test_outputs_physical_implications_g153; assert_equal("Aluminium.Secondary", worksheet.outputs_physical_implications_g153); end
  def test_outputs_physical_implications_q153; assert_in_delta(0.06769999999999998, worksheet.outputs_physical_implications_q153, 0.002); end
  def test_outputs_physical_implications_r153; assert_in_delta(0.07374063215441716, worksheet.outputs_physical_implications_r153, 0.002); end
  def test_outputs_physical_implications_s153; assert_in_delta(0.0792596805800577, worksheet.outputs_physical_implications_s153, 0.002); end
  def test_outputs_physical_implications_t153; assert_in_delta(0.08814139350324346, worksheet.outputs_physical_implications_t153, 0.002); end
  def test_outputs_physical_implications_u153; assert_in_delta(0.0972377970466128, worksheet.outputs_physical_implications_u153, 0.002); end
  def test_outputs_physical_implications_v153; assert_in_delta(0.10602770933862343, worksheet.outputs_physical_implications_v153, 0.002); end
  def test_outputs_physical_implications_w153; assert_in_delta(0.11570868624000749, worksheet.outputs_physical_implications_w153, 0.002); end
  def test_outputs_physical_implications_x153; assert_in_delta(0.1259042630181811, worksheet.outputs_physical_implications_x153, 0.002); end
  def test_outputs_physical_implications_y153; assert_in_delta(0.13717446136664985, worksheet.outputs_physical_implications_y153, 0.002); end
  def test_outputs_physical_implications_c154; assert_equal("Chemicals", worksheet.outputs_physical_implications_c154); end
  def test_outputs_physical_implications_e154; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_physical_implications_e154); end
  def test_outputs_physical_implications_f154; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_physical_implications_f154); end
  def test_outputs_physical_implications_g154; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_physical_implications_g154); end
  def test_outputs_physical_implications_h154; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_physical_implications_h154); end
  def test_outputs_physical_implications_q154; assert_in_delta(0.7504088224854855, worksheet.outputs_physical_implications_q154, 0.002); end
  def test_outputs_physical_implications_r154; assert_in_delta(0.8003168308667783, worksheet.outputs_physical_implications_r154, 0.002); end
  def test_outputs_physical_implications_s154; assert_in_delta(0.8500150002026412, worksheet.outputs_physical_implications_s154, 0.002); end
  def test_outputs_physical_implications_t154; assert_in_delta(0.9454996673454956, worksheet.outputs_physical_implications_t154, 0.002); end
  def test_outputs_physical_implications_u154; assert_in_epsilon(1.0465127919875852, worksheet.outputs_physical_implications_u154, 0.002); end
  def test_outputs_physical_implications_v154; assert_in_epsilon(1.149943808878809, worksheet.outputs_physical_implications_v154, 0.002); end
  def test_outputs_physical_implications_w154; assert_in_epsilon(1.267975962886878, worksheet.outputs_physical_implications_w154, 0.002); end
  def test_outputs_physical_implications_x154; assert_in_epsilon(1.3902768195975397, worksheet.outputs_physical_implications_x154, 0.002); end
  def test_outputs_physical_implications_y154; assert_in_epsilon(1.5297993805437624, worksheet.outputs_physical_implications_y154, 0.002); end
  def test_outputs_physical_implications_c155; assert_equal("Pulp and paper", worksheet.outputs_physical_implications_c155); end
  def test_outputs_physical_implications_f155; assert_equal("Pulp & paper.Virgin", worksheet.outputs_physical_implications_f155); end
  def test_outputs_physical_implications_g155; assert_equal("Pulp & paper.Recycled", worksheet.outputs_physical_implications_g155); end
  def test_outputs_physical_implications_q155; assert_in_delta(0.6111514610000001, worksheet.outputs_physical_implications_q155, 0.002); end
  def test_outputs_physical_implications_r155; assert_in_delta(0.6580471038548614, worksheet.outputs_physical_implications_r155, 0.002); end
  def test_outputs_physical_implications_s155; assert_in_delta(0.7064826263110371, worksheet.outputs_physical_implications_s155, 0.002); end
  def test_outputs_physical_implications_t155; assert_in_delta(0.7904821194365286, worksheet.outputs_physical_implications_t155, 0.002); end
  def test_outputs_physical_implications_u155; assert_in_delta(0.880033862913681, worksheet.outputs_physical_implications_u155, 0.002); end
  def test_outputs_physical_implications_v155; assert_in_delta(0.973055144524921, worksheet.outputs_physical_implications_v155, 0.002); end
  def test_outputs_physical_implications_w155; assert_in_epsilon(1.0789573793232639, worksheet.outputs_physical_implications_w155, 0.002); end
  def test_outputs_physical_implications_x155; assert_in_epsilon(1.1901867328630176, worksheet.outputs_physical_implications_x155, 0.002); end
  def test_outputs_physical_implications_y155; assert_in_epsilon(1.3173851818400621, worksheet.outputs_physical_implications_y155, 0.002); end
  def test_outputs_physical_implications_c156; assert_equal("Cement", worksheet.outputs_physical_implications_c156); end
  def test_outputs_physical_implications_e156; assert_equal("Cement", worksheet.outputs_physical_implications_e156); end
  def test_outputs_physical_implications_q156; assert_in_epsilon(3.6351730407050002, worksheet.outputs_physical_implications_q156, 0.002); end
  def test_outputs_physical_implications_r156; assert_in_epsilon(3.78368920087841, worksheet.outputs_physical_implications_r156, 0.002); end
  def test_outputs_physical_implications_s156; assert_in_epsilon(4.171894946744669, worksheet.outputs_physical_implications_s156, 0.002); end
  def test_outputs_physical_implications_t156; assert_in_epsilon(4.384827498858687, worksheet.outputs_physical_implications_t156, 0.002); end
  def test_outputs_physical_implications_u156; assert_in_epsilon(4.583302481733695, worksheet.outputs_physical_implications_u156, 0.002); end
  def test_outputs_physical_implications_v156; assert_in_epsilon(4.7670538246901835, worksheet.outputs_physical_implications_v156, 0.002); end
  def test_outputs_physical_implications_w156; assert_in_epsilon(4.92352999119981, worksheet.outputs_physical_implications_w156, 0.002); end
  def test_outputs_physical_implications_x156; assert_in_epsilon(5.072654387590614, worksheet.outputs_physical_implications_x156, 0.002); end
  def test_outputs_physical_implications_y156; assert_in_epsilon(5.229213259394096, worksheet.outputs_physical_implications_y156, 0.002); end
  def test_outputs_physical_implications_c157; assert_equal("Timber", worksheet.outputs_physical_implications_c157); end
  def test_outputs_physical_implications_e157; assert_equal("Timber", worksheet.outputs_physical_implications_e157); end
  def test_outputs_physical_implications_q157; assert_in_delta(0.8091999999999999, worksheet.outputs_physical_implications_q157, 0.002); end
  def test_outputs_physical_implications_r157; assert_in_delta(0.8615602664674533, worksheet.outputs_physical_implications_r157, 0.002); end
  def test_outputs_physical_implications_s157; assert_in_delta(0.9514534372440924, worksheet.outputs_physical_implications_s157, 0.002); end
  def test_outputs_physical_implications_t157; assert_in_epsilon(1.0161534885393337, worksheet.outputs_physical_implications_t157, 0.002); end
  def test_outputs_physical_implications_u157; assert_in_epsilon(1.0806489969418713, worksheet.outputs_physical_implications_u157, 0.002); end
  def test_outputs_physical_implications_v157; assert_in_epsilon(1.146120308399442, worksheet.outputs_physical_implications_v157, 0.002); end
  def test_outputs_physical_implications_w157; assert_in_epsilon(1.2121090134386125, worksheet.outputs_physical_implications_w157, 0.002); end
  def test_outputs_physical_implications_x157; assert_in_epsilon(1.2802510398293916, worksheet.outputs_physical_implications_x157, 0.002); end
  def test_outputs_physical_implications_y157; assert_in_epsilon(1.3471165094493895, worksheet.outputs_physical_implications_y157, 0.002); end
  def test_outputs_costs_c7; assert_equal("Sector", worksheet.outputs_costs_c7); end
  def test_outputs_costs_d7; assert_equal("Sector number", worksheet.outputs_costs_d7); end
  def test_outputs_costs_f7; assert_equal("Low", worksheet.outputs_costs_f7); end
  def test_outputs_costs_g7; assert_equal("Point", worksheet.outputs_costs_g7); end
  def test_outputs_costs_h7; assert_equal("High", worksheet.outputs_costs_h7); end
  def test_outputs_costs_c8; assert_equal("Transport", worksheet.outputs_costs_c8); end
  def test_outputs_costs_d8; assert_in_epsilon(10.0, worksheet.outputs_costs_d8, 0.002); end
  def test_outputs_costs_f8; assert_in_epsilon(20266.982109664325, worksheet.outputs_costs_f8, 0.002); end
  def test_outputs_costs_g8; assert_in_epsilon(28828.120226165607, worksheet.outputs_costs_g8, 0.002); end
  def test_outputs_costs_h8; assert_in_epsilon(50473.11769828265, worksheet.outputs_costs_h8, 0.002); end
  def test_outputs_costs_c9; assert_equal("Buildings", worksheet.outputs_costs_c9); end
  def test_outputs_costs_d9; assert_in_epsilon(20.0, worksheet.outputs_costs_d9, 0.002); end
  def test_outputs_costs_f9; assert_in_epsilon(8423.920223212946, worksheet.outputs_costs_f9, 0.002); end
  def test_outputs_costs_g9; assert_in_epsilon(10371.330569852298, worksheet.outputs_costs_g9, 0.002); end
  def test_outputs_costs_h9; assert_in_epsilon(12320.615641694887, worksheet.outputs_costs_h9, 0.002); end
  def test_outputs_costs_c10; assert_equal("Manufacturing", worksheet.outputs_costs_c10); end
  def test_outputs_costs_d10; assert_in_epsilon(30.0, worksheet.outputs_costs_d10, 0.002); end
  def test_outputs_costs_f10; assert_in_epsilon(401.7819843944909, worksheet.outputs_costs_f10, 0.002); end
  def test_outputs_costs_g10; assert_in_epsilon(630.3134345953641, worksheet.outputs_costs_g10, 0.002); end
  def test_outputs_costs_h10; assert_in_epsilon(854.0649509417212, worksheet.outputs_costs_h10, 0.002); end
  def test_outputs_costs_c11; assert_equal("Power", worksheet.outputs_costs_c11); end
  def test_outputs_costs_d11; assert_in_epsilon(40.0, worksheet.outputs_costs_d11, 0.002); end
  def test_outputs_costs_f11; assert_in_epsilon(3569.8944391621444, worksheet.outputs_costs_f11, 0.002); end
  def test_outputs_costs_g11; assert_in_epsilon(4814.628544827657, worksheet.outputs_costs_g11, 0.002); end
  def test_outputs_costs_h11; assert_in_epsilon(6206.6879255827935, worksheet.outputs_costs_h11, 0.002); end
  def test_outputs_costs_c12; assert_equal("Total capital and operating costs", worksheet.outputs_costs_c12); end
  def test_outputs_costs_f12; assert_in_epsilon(32662.578756433923, worksheet.outputs_costs_f12, 0.002); end
  def test_outputs_costs_g12; assert_in_epsilon(44644.39277544093, worksheet.outputs_costs_g12, 0.002); end
  def test_outputs_costs_h12; assert_in_epsilon(69854.48621650206, worksheet.outputs_costs_h12, 0.002); end
  def test_outputs_costs_c832; assert_equal("Category", worksheet.outputs_costs_c832); end
  def test_outputs_costs_j832; assert_equal("2011", worksheet.outputs_costs_j832); end
  def test_outputs_costs_k832; assert_equal("2015", worksheet.outputs_costs_k832); end
  def test_outputs_costs_l832; assert_equal("2020", worksheet.outputs_costs_l832); end
  def test_outputs_costs_m832; assert_equal("2025", worksheet.outputs_costs_m832); end
  def test_outputs_costs_n832; assert_equal("2030", worksheet.outputs_costs_n832); end
  def test_outputs_costs_o832; assert_equal("2035", worksheet.outputs_costs_o832); end
  def test_outputs_costs_p832; assert_equal("2040", worksheet.outputs_costs_p832); end
  def test_outputs_costs_q832; assert_equal("2045", worksheet.outputs_costs_q832); end
  def test_outputs_costs_r832; assert_equal("2050", worksheet.outputs_costs_r832); end
  def test_outputs_costs_c833; assert_equal("Global GDP ", worksheet.outputs_costs_c833); end
  def test_outputs_costs_j833; assert_in_epsilon(100.0, worksheet.outputs_costs_j833, 0.002); end
  def test_outputs_costs_k833; assert_in_epsilon(113.68978797009366, worksheet.outputs_costs_k833, 0.002); end
  def test_outputs_costs_l833; assert_in_epsilon(136.0264497041611, worksheet.outputs_costs_l833, 0.002); end
  def test_outputs_costs_m833; assert_in_epsilon(159.60336208454257, worksheet.outputs_costs_m833, 0.002); end
  def test_outputs_costs_n833; assert_in_epsilon(185.494998695573, worksheet.outputs_costs_n833, 0.002); end
  def test_outputs_costs_o833; assert_in_epsilon(213.78734093191275, worksheet.outputs_costs_o833, 0.002); end
  def test_outputs_costs_p833; assert_in_epsilon(243.75824201543904, worksheet.outputs_costs_p833, 0.002); end
  def test_outputs_costs_q833; assert_in_epsilon(273.93872026972474, worksheet.outputs_costs_q833, 0.002); end
  def test_outputs_costs_r833; assert_in_epsilon(304.3979665327325, worksheet.outputs_costs_r833, 0.002); end
  def test_outputs_costs_j713; assert_equal("2011", worksheet.outputs_costs_j713); end
  def test_outputs_costs_k713; assert_equal("2015", worksheet.outputs_costs_k713); end
  def test_outputs_costs_l713; assert_equal("2020", worksheet.outputs_costs_l713); end
  def test_outputs_costs_m713; assert_equal("2025", worksheet.outputs_costs_m713); end
  def test_outputs_costs_n713; assert_equal("2030", worksheet.outputs_costs_n713); end
  def test_outputs_costs_o713; assert_equal("2035", worksheet.outputs_costs_o713); end
  def test_outputs_costs_p713; assert_equal("2040", worksheet.outputs_costs_p713); end
  def test_outputs_costs_q713; assert_equal("2045", worksheet.outputs_costs_q713); end
  def test_outputs_costs_r713; assert_equal("2050", worksheet.outputs_costs_r713); end
  def test_outputs_costs_c714; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c714); end
  def test_outputs_costs_j714; assert_in_epsilon(17483.35979159827, worksheet.outputs_costs_j714, 0.002); end
  def test_outputs_costs_k714; assert_in_epsilon(24216.200516228153, worksheet.outputs_costs_k714, 0.002); end
  def test_outputs_costs_l714; assert_in_epsilon(30088.49535351288, worksheet.outputs_costs_l714, 0.002); end
  def test_outputs_costs_m714; assert_in_epsilon(36604.79692990493, worksheet.outputs_costs_m714, 0.002); end
  def test_outputs_costs_n714; assert_in_epsilon(41785.395683611336, worksheet.outputs_costs_n714, 0.002); end
  def test_outputs_costs_o714; assert_in_epsilon(46732.077452603044, worksheet.outputs_costs_o714, 0.002); end
  def test_outputs_costs_p714; assert_in_epsilon(52831.31503478599, worksheet.outputs_costs_p714, 0.002); end
  def test_outputs_costs_q714; assert_in_epsilon(59004.79331963543, worksheet.outputs_costs_q714, 0.002); end
  def test_outputs_costs_r714; assert_in_epsilon(66293.96806161045, worksheet.outputs_costs_r714, 0.002); end
  def test_outputs_costs_c715; assert_equal("Operating costs", worksheet.outputs_costs_c715); end
  def test_outputs_costs_j715; assert_in_epsilon(1383.689763378246, worksheet.outputs_costs_j715, 0.002); end
  def test_outputs_costs_k715; assert_in_epsilon(1653.9706140322814, worksheet.outputs_costs_k715, 0.002); end
  def test_outputs_costs_l715; assert_in_epsilon(1909.5641776886036, worksheet.outputs_costs_l715, 0.002); end
  def test_outputs_costs_m715; assert_in_epsilon(2148.5256118486723, worksheet.outputs_costs_m715, 0.002); end
  def test_outputs_costs_n715; assert_in_epsilon(2419.7424007077902, worksheet.outputs_costs_n715, 0.002); end
  def test_outputs_costs_o715; assert_in_epsilon(2650.1585394717554, worksheet.outputs_costs_o715, 0.002); end
  def test_outputs_costs_p715; assert_in_epsilon(2909.690688337717, worksheet.outputs_costs_p715, 0.002); end
  def test_outputs_costs_q715; assert_in_epsilon(3191.1941339174746, worksheet.outputs_costs_q715, 0.002); end
  def test_outputs_costs_r715; assert_in_epsilon(3560.518154891584, worksheet.outputs_costs_r715, 0.002); end
  def test_outputs_costs_c716; assert_equal("Fuel costs", worksheet.outputs_costs_c716); end
  def test_outputs_costs_j716; assert_in_epsilon(2390.0004026459824, worksheet.outputs_costs_j716, 0.002); end
  def test_outputs_costs_k716; assert_in_epsilon(2708.3309534673167, worksheet.outputs_costs_k716, 0.002); end
  def test_outputs_costs_l716; assert_in_epsilon(3301.299873525583, worksheet.outputs_costs_l716, 0.002); end
  def test_outputs_costs_m716; assert_in_epsilon(3900.5561158469013, worksheet.outputs_costs_m716, 0.002); end
  def test_outputs_costs_n716; assert_in_epsilon(4575.404846925945, worksheet.outputs_costs_n716, 0.002); end
  def test_outputs_costs_o716; assert_in_epsilon(5169.733077142464, worksheet.outputs_costs_o716, 0.002); end
  def test_outputs_costs_p716; assert_in_epsilon(5866.960126931675, worksheet.outputs_costs_p716, 0.002); end
  def test_outputs_costs_q716; assert_in_epsilon(6596.450912348777, worksheet.outputs_costs_q716, 0.002); end
  def test_outputs_costs_r716; assert_in_epsilon(7357.440260624206, worksheet.outputs_costs_r716, 0.002); end
  def test_outputs_costs_c717; assert_equal("Total", worksheet.outputs_costs_c717); end
  def test_outputs_costs_j717; assert_in_epsilon(21257.049957622497, worksheet.outputs_costs_j717, 0.002); end
  def test_outputs_costs_k717; assert_in_epsilon(28578.50208372775, worksheet.outputs_costs_k717, 0.002); end
  def test_outputs_costs_l717; assert_in_epsilon(35299.35940472707, worksheet.outputs_costs_l717, 0.002); end
  def test_outputs_costs_m717; assert_in_epsilon(42653.8786576005, worksheet.outputs_costs_m717, 0.002); end
  def test_outputs_costs_n717; assert_in_epsilon(48780.54293124507, worksheet.outputs_costs_n717, 0.002); end
  def test_outputs_costs_o717; assert_in_epsilon(54551.96906921726, worksheet.outputs_costs_o717, 0.002); end
  def test_outputs_costs_p717; assert_in_epsilon(61607.965850055385, worksheet.outputs_costs_p717, 0.002); end
  def test_outputs_costs_q717; assert_in_epsilon(68792.43836590167, worksheet.outputs_costs_q717, 0.002); end
  def test_outputs_costs_r717; assert_in_epsilon(77211.92647712624, worksheet.outputs_costs_r717, 0.002); end
  def test_outputs_costs_j735; assert_equal("2011", worksheet.outputs_costs_j735); end
  def test_outputs_costs_k735; assert_equal("2015", worksheet.outputs_costs_k735); end
  def test_outputs_costs_l735; assert_equal("2020", worksheet.outputs_costs_l735); end
  def test_outputs_costs_m735; assert_equal("2025", worksheet.outputs_costs_m735); end
  def test_outputs_costs_n735; assert_equal("2030", worksheet.outputs_costs_n735); end
  def test_outputs_costs_o735; assert_equal("2035", worksheet.outputs_costs_o735); end
  def test_outputs_costs_p735; assert_equal("2040", worksheet.outputs_costs_p735); end
  def test_outputs_costs_q735; assert_equal("2045", worksheet.outputs_costs_q735); end
  def test_outputs_costs_r735; assert_equal("2050", worksheet.outputs_costs_r735); end
  def test_outputs_costs_c736; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c736); end
  def test_outputs_costs_j736; assert_in_epsilon(17482.87973601526, worksheet.outputs_costs_j736, 0.002); end
  def test_outputs_costs_k736; assert_in_epsilon(22124.360166377817, worksheet.outputs_costs_k736, 0.002); end
  def test_outputs_costs_l736; assert_in_epsilon(24878.554441981967, worksheet.outputs_costs_l736, 0.002); end
  def test_outputs_costs_m736; assert_in_epsilon(27502.005224128505, worksheet.outputs_costs_m736, 0.002); end
  def test_outputs_costs_n736; assert_in_epsilon(28139.989113285643, worksheet.outputs_costs_n736, 0.002); end
  def test_outputs_costs_o736; assert_in_epsilon(28374.677832669768, worksheet.outputs_costs_o736, 0.002); end
  def test_outputs_costs_p736; assert_in_epsilon(29204.660744556168, worksheet.outputs_costs_p736, 0.002); end
  def test_outputs_costs_q736; assert_in_epsilon(29624.083097960167, worksheet.outputs_costs_q736, 0.002); end
  def test_outputs_costs_r736; assert_in_epsilon(30568.422069350825, worksheet.outputs_costs_r736, 0.002); end
  def test_outputs_costs_c737; assert_equal("Operating costs", worksheet.outputs_costs_c737); end
  def test_outputs_costs_j737; assert_in_epsilon(1353.952301284296, worksheet.outputs_costs_j737, 0.002); end
  def test_outputs_costs_k737; assert_in_epsilon(1550.4305929305299, worksheet.outputs_costs_k737, 0.002); end
  def test_outputs_costs_l737; assert_in_epsilon(1690.881888482221, worksheet.outputs_costs_l737, 0.002); end
  def test_outputs_costs_m737; assert_in_epsilon(1794.8833405031257, worksheet.outputs_costs_m737, 0.002); end
  def test_outputs_costs_n737; assert_in_epsilon(1902.2176431953685, worksheet.outputs_costs_n737, 0.002); end
  def test_outputs_costs_o737; assert_in_epsilon(1956.837702974424, worksheet.outputs_costs_o737, 0.002); end
  def test_outputs_costs_p737; assert_in_epsilon(2009.2510794325628, worksheet.outputs_costs_p737, 0.002); end
  def test_outputs_costs_q737; assert_in_epsilon(2043.1905035406317, worksheet.outputs_costs_q737, 0.002); end
  def test_outputs_costs_r737; assert_in_epsilon(2094.156687083079, worksheet.outputs_costs_r737, 0.002); end
  def test_outputs_costs_c738; assert_equal("Fuel costs", worksheet.outputs_costs_c738); end
  def test_outputs_costs_j738; assert_in_epsilon(2390.0004026459824, worksheet.outputs_costs_j738, 0.002); end
  def test_outputs_costs_k738; assert_in_epsilon(2375.6618250291667, worksheet.outputs_costs_k738, 0.002); end
  def test_outputs_costs_l738; assert_in_epsilon(2462.23485527153, worksheet.outputs_costs_l738, 0.002); end
  def test_outputs_costs_m738; assert_in_epsilon(2491.153235870717, worksheet.outputs_costs_m738, 0.002); end
  def test_outputs_costs_n738; assert_in_epsilon(2503.8996585256905, worksheet.outputs_costs_n738, 0.002); end
  def test_outputs_costs_o738; assert_in_epsilon(2442.1701189404735, worksheet.outputs_costs_o738, 0.002); end
  def test_outputs_costs_p738; assert_in_epsilon(2391.9327176577367, worksheet.outputs_costs_p738, 0.002); end
  def test_outputs_costs_q738; assert_in_epsilon(2319.7666121479165, worksheet.outputs_costs_q738, 0.002); end
  def test_outputs_costs_r738; assert_in_epsilon(2236.1596035330895, worksheet.outputs_costs_r738, 0.002); end
  def test_outputs_costs_c739; assert_equal("Total", worksheet.outputs_costs_c739); end
  def test_outputs_costs_j739; assert_in_epsilon(21226.832439945538, worksheet.outputs_costs_j739, 0.002); end
  def test_outputs_costs_k739; assert_in_epsilon(26050.452584337516, worksheet.outputs_costs_k739, 0.002); end
  def test_outputs_costs_l739; assert_in_epsilon(29031.67118573572, worksheet.outputs_costs_l739, 0.002); end
  def test_outputs_costs_m739; assert_in_epsilon(31788.041800502346, worksheet.outputs_costs_m739, 0.002); end
  def test_outputs_costs_n739; assert_in_epsilon(32546.106415006703, worksheet.outputs_costs_n739, 0.002); end
  def test_outputs_costs_o739; assert_in_epsilon(32773.68565458466, worksheet.outputs_costs_o739, 0.002); end
  def test_outputs_costs_p739; assert_in_epsilon(33605.84454164647, worksheet.outputs_costs_p739, 0.002); end
  def test_outputs_costs_q739; assert_in_epsilon(33987.04021364872, worksheet.outputs_costs_q739, 0.002); end
  def test_outputs_costs_r739; assert_in_epsilon(34898.73835996699, worksheet.outputs_costs_r739, 0.002); end
  def test_outputs_costs_j724; assert_equal("2011", worksheet.outputs_costs_j724); end
  def test_outputs_costs_k724; assert_equal("2015", worksheet.outputs_costs_k724); end
  def test_outputs_costs_l724; assert_equal("2020", worksheet.outputs_costs_l724); end
  def test_outputs_costs_m724; assert_equal("2025", worksheet.outputs_costs_m724); end
  def test_outputs_costs_n724; assert_equal("2030", worksheet.outputs_costs_n724); end
  def test_outputs_costs_o724; assert_equal("2035", worksheet.outputs_costs_o724); end
  def test_outputs_costs_p724; assert_equal("2040", worksheet.outputs_costs_p724); end
  def test_outputs_costs_q724; assert_equal("2045", worksheet.outputs_costs_q724); end
  def test_outputs_costs_r724; assert_equal("2050", worksheet.outputs_costs_r724); end
  def test_outputs_costs_c725; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c725); end
  def test_outputs_costs_j725; assert_in_epsilon(17483.119756253236, worksheet.outputs_costs_j725, 0.002); end
  def test_outputs_costs_k725; assert_in_epsilon(22777.598080217605, worksheet.outputs_costs_k725, 0.002); end
  def test_outputs_costs_l725; assert_in_epsilon(26448.330194280075, worksheet.outputs_costs_l725, 0.002); end
  def test_outputs_costs_m725; assert_in_epsilon(30251.03503405577, worksheet.outputs_costs_m725, 0.002); end
  def test_outputs_costs_n725; assert_in_epsilon(32304.94362321648, worksheet.outputs_costs_n725, 0.002); end
  def test_outputs_costs_o725; assert_in_epsilon(33994.45027041364, worksheet.outputs_costs_o725, 0.002); end
  def test_outputs_costs_p725; assert_in_epsilon(36484.623052961026, worksheet.outputs_costs_p725, 0.002); end
  def test_outputs_costs_q725; assert_in_epsilon(38734.992363474725, worksheet.outputs_costs_q725, 0.002); end
  def test_outputs_costs_r725; assert_in_epsilon(41791.65064835345, worksheet.outputs_costs_r725, 0.002); end
  def test_outputs_costs_c726; assert_equal("Operating costs", worksheet.outputs_costs_c726); end
  def test_outputs_costs_j726; assert_in_epsilon(1367.7099787443422, worksheet.outputs_costs_j726, 0.002); end
  def test_outputs_costs_k726; assert_in_epsilon(1604.7642516359595, worksheet.outputs_costs_k726, 0.002); end
  def test_outputs_costs_l726; assert_in_epsilon(1807.4786257456042, worksheet.outputs_costs_l726, 0.002); end
  def test_outputs_costs_m726; assert_in_epsilon(1983.9927175451512, worksheet.outputs_costs_m726, 0.002); end
  def test_outputs_costs_n726; assert_in_epsilon(2179.4619590413713, worksheet.outputs_costs_n726, 0.002); end
  def test_outputs_costs_o726; assert_in_epsilon(2325.8733982639765, worksheet.outputs_costs_o726, 0.002); end
  def test_outputs_costs_p726; assert_in_epsilon(2486.736574614692, worksheet.outputs_costs_p726, 0.002); end
  def test_outputs_costs_q726; assert_in_epsilon(2646.67579454725, worksheet.outputs_costs_q726, 0.002); end
  def test_outputs_costs_r726; assert_in_epsilon(2852.742127087496, worksheet.outputs_costs_r726, 0.002); end
  def test_outputs_costs_c727; assert_equal("Fuel costs", worksheet.outputs_costs_c727); end
  def test_outputs_costs_j727; assert_in_epsilon(2390.0004026459824, worksheet.outputs_costs_j727, 0.002); end
  def test_outputs_costs_k727; assert_in_epsilon(2517.534538589807, worksheet.outputs_costs_k727, 0.002); end
  def test_outputs_costs_l727; assert_in_epsilon(2818.7960541917164, worksheet.outputs_costs_l727, 0.002); end
  def test_outputs_costs_m727; assert_in_epsilon(3091.675675144488, worksheet.outputs_costs_m727, 0.002); end
  def test_outputs_costs_n727; assert_in_epsilon(3386.6711605439014, worksheet.outputs_costs_n727, 0.002); end
  def test_outputs_costs_o727; assert_in_epsilon(3607.2538342588673, worksheet.outputs_costs_o727, 0.002); end
  def test_outputs_costs_p727; assert_in_epsilon(3878.182733582804, worksheet.outputs_costs_p727, 0.002); end
  def test_outputs_costs_q727; assert_in_epsilon(4146.26360345702, worksheet.outputs_costs_q727, 0.002); end
  def test_outputs_costs_r727; assert_in_epsilon(4423.543215989031, worksheet.outputs_costs_r727, 0.002); end
  def test_outputs_costs_c728; assert_equal("Total", worksheet.outputs_costs_c728); end
  def test_outputs_costs_j728; assert_in_epsilon(21240.83013764356, worksheet.outputs_costs_j728, 0.002); end
  def test_outputs_costs_k728; assert_in_epsilon(26899.896870443372, worksheet.outputs_costs_k728, 0.002); end
  def test_outputs_costs_l728; assert_in_epsilon(31074.604874217395, worksheet.outputs_costs_l728, 0.002); end
  def test_outputs_costs_m728; assert_in_epsilon(35326.703426745415, worksheet.outputs_costs_m728, 0.002); end
  def test_outputs_costs_n728; assert_in_epsilon(37871.07674280176, worksheet.outputs_costs_n728, 0.002); end
  def test_outputs_costs_o728; assert_in_epsilon(39927.57750293648, worksheet.outputs_costs_o728, 0.002); end
  def test_outputs_costs_p728; assert_in_epsilon(42849.54236115852, worksheet.outputs_costs_p728, 0.002); end
  def test_outputs_costs_q728; assert_in_epsilon(45527.93176147899, worksheet.outputs_costs_q728, 0.002); end
  def test_outputs_costs_r728; assert_in_epsilon(49067.93599142998, worksheet.outputs_costs_r728, 0.002); end
  def test_outputs_costs_b788; assert_equal("Transport indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b788); end
  def test_outputs_costs_e788; assert_equal("Sector code:", worksheet.outputs_costs_e788); end
  def test_outputs_costs_f788; assert_in_epsilon(10.0, worksheet.outputs_costs_f788, 0.002); end
  def test_outputs_costs_i788; assert_equal("NON AMORTISED", worksheet.outputs_costs_i788); end
  def test_outputs_costs_c790; assert_equal("Category", worksheet.outputs_costs_c790); end
  def test_outputs_costs_j790; assert_equal("2011", worksheet.outputs_costs_j790); end
  def test_outputs_costs_k790; assert_equal("2015", worksheet.outputs_costs_k790); end
  def test_outputs_costs_l790; assert_equal("2020", worksheet.outputs_costs_l790); end
  def test_outputs_costs_m790; assert_equal("2025", worksheet.outputs_costs_m790); end
  def test_outputs_costs_n790; assert_equal("2030", worksheet.outputs_costs_n790); end
  def test_outputs_costs_o790; assert_equal("2035", worksheet.outputs_costs_o790); end
  def test_outputs_costs_p790; assert_equal("2040", worksheet.outputs_costs_p790); end
  def test_outputs_costs_q790; assert_equal("2045", worksheet.outputs_costs_q790); end
  def test_outputs_costs_r790; assert_equal("2050", worksheet.outputs_costs_r790); end
  def test_outputs_costs_c791; assert_equal("High", worksheet.outputs_costs_c791); end
  def test_outputs_costs_j791; assert_in_epsilon(100.0, worksheet.outputs_costs_j791, 0.002); end
  def test_outputs_costs_k791; assert_in_epsilon(118.9912757016899, worksheet.outputs_costs_k791, 0.002); end
  def test_outputs_costs_l791; assert_in_epsilon(135.45505148088913, worksheet.outputs_costs_l791, 0.002); end
  def test_outputs_costs_m791; assert_in_epsilon(156.97660735559367, worksheet.outputs_costs_m791, 0.002); end
  def test_outputs_costs_n791; assert_in_epsilon(178.66031351796744, worksheet.outputs_costs_n791, 0.002); end
  def test_outputs_costs_o791; assert_in_epsilon(197.28828153099212, worksheet.outputs_costs_o791, 0.002); end
  def test_outputs_costs_p791; assert_in_epsilon(216.62383073697825, worksheet.outputs_costs_p791, 0.002); end
  def test_outputs_costs_q791; assert_in_epsilon(236.38536972532216, worksheet.outputs_costs_q791, 0.002); end
  def test_outputs_costs_r791; assert_in_epsilon(257.66760558838325, worksheet.outputs_costs_r791, 0.002); end
  def test_outputs_costs_c792; assert_equal("Point", worksheet.outputs_costs_c792); end
  def test_outputs_costs_j792; assert_in_epsilon(100.0, worksheet.outputs_costs_j792, 0.002); end
  def test_outputs_costs_k792; assert_in_epsilon(109.45540956671917, worksheet.outputs_costs_k792, 0.002); end
  def test_outputs_costs_l792; assert_in_epsilon(113.09139254071103, worksheet.outputs_costs_l792, 0.002); end
  def test_outputs_costs_m792; assert_in_epsilon(120.5629878764185, worksheet.outputs_costs_m792, 0.002); end
  def test_outputs_costs_n792; assert_in_epsilon(127.18927891472217, worksheet.outputs_costs_n792, 0.002); end
  def test_outputs_costs_o792; assert_in_epsilon(130.57860087019858, worksheet.outputs_costs_o792, 0.002); end
  def test_outputs_costs_p792; assert_in_epsilon(134.33943260634146, worksheet.outputs_costs_p792, 0.002); end
  def test_outputs_costs_q792; assert_in_epsilon(138.13079885972368, worksheet.outputs_costs_q792, 0.002); end
  def test_outputs_costs_r792; assert_in_epsilon(142.1056940876681, worksheet.outputs_costs_r792, 0.002); end
  def test_outputs_costs_c793; assert_equal("Low", worksheet.outputs_costs_c793); end
  def test_outputs_costs_j793; assert_in_epsilon(100.0, worksheet.outputs_costs_j793, 0.002); end
  def test_outputs_costs_k793; assert_in_epsilon(105.73512871345274, worksheet.outputs_costs_k793, 0.002); end
  def test_outputs_costs_l793; assert_in_epsilon(104.44969773249677, worksheet.outputs_costs_l793, 0.002); end
  def test_outputs_costs_m793; assert_in_epsilon(106.3649749309591, worksheet.outputs_costs_m793, 0.002); end
  def test_outputs_costs_n793; assert_in_epsilon(106.94052333571689, worksheet.outputs_costs_n793, 0.002); end
  def test_outputs_costs_o793; assert_in_epsilon(104.27760904724535, worksheet.outputs_costs_o793, 0.002); end
  def test_outputs_costs_p793; assert_in_epsilon(101.68828729356446, worksheet.outputs_costs_p793, 0.002); end
  def test_outputs_costs_q793; assert_in_epsilon(98.87754289185457, worksheet.outputs_costs_q793, 0.002); end
  def test_outputs_costs_r793; assert_in_epsilon(95.72896153803465, worksheet.outputs_costs_r793, 0.002); end
  def test_outputs_costs_b798; assert_equal("Buildings indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b798); end
  def test_outputs_costs_e798; assert_equal("Sector code:", worksheet.outputs_costs_e798); end
  def test_outputs_costs_f798; assert_in_epsilon(20.0, worksheet.outputs_costs_f798, 0.002); end
  def test_outputs_costs_i798; assert_equal("NON AMORTISED", worksheet.outputs_costs_i798); end
  def test_outputs_costs_c800; assert_equal("Category", worksheet.outputs_costs_c800); end
  def test_outputs_costs_j800; assert_equal("2011", worksheet.outputs_costs_j800); end
  def test_outputs_costs_k800; assert_equal("2015", worksheet.outputs_costs_k800); end
  def test_outputs_costs_l800; assert_equal("2020", worksheet.outputs_costs_l800); end
  def test_outputs_costs_m800; assert_equal("2025", worksheet.outputs_costs_m800); end
  def test_outputs_costs_n800; assert_equal("2030", worksheet.outputs_costs_n800); end
  def test_outputs_costs_o800; assert_equal("2035", worksheet.outputs_costs_o800); end
  def test_outputs_costs_p800; assert_equal("2040", worksheet.outputs_costs_p800); end
  def test_outputs_costs_q800; assert_equal("2045", worksheet.outputs_costs_q800); end
  def test_outputs_costs_r800; assert_equal("2050", worksheet.outputs_costs_r800); end
  def test_outputs_costs_c801; assert_equal("High", worksheet.outputs_costs_c801); end
  def test_outputs_costs_j801; assert_in_epsilon(100.0, worksheet.outputs_costs_j801, 0.002); end
  def test_outputs_costs_k801; assert_in_epsilon(110.32765500202868, worksheet.outputs_costs_k801, 0.002); end
  def test_outputs_costs_l801; assert_in_epsilon(119.31367965444693, worksheet.outputs_costs_l801, 0.002); end
  def test_outputs_costs_m801; assert_in_epsilon(135.69128142502584, worksheet.outputs_costs_m801, 0.002); end
  def test_outputs_costs_n801; assert_in_epsilon(152.8895810827366, worksheet.outputs_costs_n801, 0.002); end
  def test_outputs_costs_o801; assert_in_epsilon(170.34089379361887, worksheet.outputs_costs_o801, 0.002); end
  def test_outputs_costs_p801; assert_in_epsilon(190.79790636312697, worksheet.outputs_costs_p801, 0.002); end
  def test_outputs_costs_q801; assert_in_epsilon(211.8750556831428, worksheet.outputs_costs_q801, 0.002); end
  def test_outputs_costs_r801; assert_in_epsilon(236.4379604418672, worksheet.outputs_costs_r801, 0.002); end
  def test_outputs_costs_c802; assert_equal("Point", worksheet.outputs_costs_c802); end
  def test_outputs_costs_j802; assert_in_epsilon(100.0, worksheet.outputs_costs_j802, 0.002); end
  def test_outputs_costs_k802; assert_in_epsilon(108.15625662215635, worksheet.outputs_costs_k802, 0.002); end
  def test_outputs_costs_l802; assert_in_epsilon(114.14459635610909, worksheet.outputs_costs_l802, 0.002); end
  def test_outputs_costs_m802; assert_in_epsilon(126.74598159878443, worksheet.outputs_costs_m802, 0.002); end
  def test_outputs_costs_n802; assert_in_epsilon(139.4980874569772, worksheet.outputs_costs_n802, 0.002); end
  def test_outputs_costs_o802; assert_in_epsilon(151.8794103004449, worksheet.outputs_costs_o802, 0.002); end
  def test_outputs_costs_p802; assert_in_epsilon(166.31167660159917, worksheet.outputs_costs_p802, 0.002); end
  def test_outputs_costs_q802; assert_in_epsilon(180.62062829755925, worksheet.outputs_costs_q802, 0.002); end
  def test_outputs_costs_r802; assert_in_epsilon(197.20182771800438, worksheet.outputs_costs_r802, 0.002); end
  def test_outputs_costs_c803; assert_equal("Low", worksheet.outputs_costs_c803); end
  def test_outputs_costs_j803; assert_in_epsilon(100.0, worksheet.outputs_costs_j803, 0.002); end
  def test_outputs_costs_k803; assert_in_epsilon(105.97771809716967, worksheet.outputs_costs_k803, 0.002); end
  def test_outputs_costs_l803; assert_in_epsilon(108.96089657778649, worksheet.outputs_costs_l803, 0.002); end
  def test_outputs_costs_m803; assert_in_epsilon(117.77371236746073, worksheet.outputs_costs_m803, 0.002); end
  def test_outputs_costs_n803; assert_in_epsilon(126.06532795911801, worksheet.outputs_costs_n803, 0.002); end
  def test_outputs_costs_o803; assert_in_epsilon(133.3606327852751, worksheet.outputs_costs_o803, 0.002); end
  def test_outputs_costs_p803; assert_in_epsilon(141.74884180182994, worksheet.outputs_costs_p803, 0.002); end
  def test_outputs_costs_q803; assert_in_epsilon(149.26831155833722, worksheet.outputs_costs_q803, 0.002); end
  def test_outputs_costs_r803; assert_in_epsilon(157.84269240653072, worksheet.outputs_costs_r803, 0.002); end
  def test_outputs_costs_b808; assert_equal("Manufacturing indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b808); end
  def test_outputs_costs_e808; assert_equal("Sector code:", worksheet.outputs_costs_e808); end
  def test_outputs_costs_f808; assert_in_epsilon(30.0, worksheet.outputs_costs_f808, 0.002); end
  def test_outputs_costs_i808; assert_equal("NON AMORTISED", worksheet.outputs_costs_i808); end
  def test_outputs_costs_c810; assert_equal("Category", worksheet.outputs_costs_c810); end
  def test_outputs_costs_k810; assert_in_epsilon(2015.0, worksheet.outputs_costs_k810, 0.002); end
  def test_outputs_costs_l810; assert_equal("2020", worksheet.outputs_costs_l810); end
  def test_outputs_costs_m810; assert_equal("2025", worksheet.outputs_costs_m810); end
  def test_outputs_costs_n810; assert_equal("2030", worksheet.outputs_costs_n810); end
  def test_outputs_costs_o810; assert_equal("2035", worksheet.outputs_costs_o810); end
  def test_outputs_costs_p810; assert_equal("2040", worksheet.outputs_costs_p810); end
  def test_outputs_costs_q810; assert_equal("2045", worksheet.outputs_costs_q810); end
  def test_outputs_costs_r810; assert_equal("2050", worksheet.outputs_costs_r810); end
  def test_outputs_costs_c811; assert_equal("High", worksheet.outputs_costs_c811); end
  def test_outputs_costs_k811; assert_in_epsilon(100.0, worksheet.outputs_costs_k811, 0.002); end
  def test_outputs_costs_l811; assert_in_epsilon(143.40521294723746, worksheet.outputs_costs_l811, 0.002); end
  def test_outputs_costs_m811; assert_in_epsilon(178.22047164265683, worksheet.outputs_costs_m811, 0.002); end
  def test_outputs_costs_n811; assert_in_epsilon(217.73416330227442, worksheet.outputs_costs_n811, 0.002); end
  def test_outputs_costs_o811; assert_in_epsilon(260.2757925233282, worksheet.outputs_costs_o811, 0.002); end
  def test_outputs_costs_p811; assert_in_epsilon(308.616010719673, worksheet.outputs_costs_p811, 0.002); end
  def test_outputs_costs_q811; assert_in_epsilon(362.266651291573, worksheet.outputs_costs_q811, 0.002); end
  def test_outputs_costs_r811; assert_in_epsilon(424.82331550680544, worksheet.outputs_costs_r811, 0.002); end
  def test_outputs_costs_c812; assert_equal("Point", worksheet.outputs_costs_c812); end
  def test_outputs_costs_k812; assert_in_epsilon(100.0, worksheet.outputs_costs_k812, 0.002); end
  def test_outputs_costs_l812; assert_in_epsilon(139.11995937821112, worksheet.outputs_costs_l812, 0.002); end
  def test_outputs_costs_m812; assert_in_epsilon(165.02302696326763, worksheet.outputs_costs_m812, 0.002); end
  def test_outputs_costs_n812; assert_in_epsilon(193.6192687275942, worksheet.outputs_costs_n812, 0.002); end
  def test_outputs_costs_o812; assert_in_epsilon(223.17252300091707, worksheet.outputs_costs_o812, 0.002); end
  def test_outputs_costs_p812; assert_in_epsilon(256.32354982040954, worksheet.outputs_costs_p812, 0.002); end
  def test_outputs_costs_q812; assert_in_epsilon(292.3629190276622, worksheet.outputs_costs_q812, 0.002); end
  def test_outputs_costs_r812; assert_in_epsilon(334.21823008023955, worksheet.outputs_costs_r812, 0.002); end
  def test_outputs_costs_c813; assert_equal("Low", worksheet.outputs_costs_c813); end
  def test_outputs_costs_k813; assert_in_epsilon(100.0, worksheet.outputs_costs_k813, 0.002); end
  def test_outputs_costs_l813; assert_in_epsilon(132.37076713481522, worksheet.outputs_costs_l813, 0.002); end
  def test_outputs_costs_m813; assert_in_epsilon(145.0546517855382, worksheet.outputs_costs_m813, 0.002); end
  def test_outputs_costs_n813; assert_in_epsilon(157.6634470621044, worksheet.outputs_costs_n813, 0.002); end
  def test_outputs_costs_o813; assert_in_epsilon(168.3919559735093, worksheet.outputs_costs_o813, 0.002); end
  def test_outputs_costs_p813; assert_in_epsilon(179.64714323073088, worksheet.outputs_costs_p813, 0.002); end
  def test_outputs_costs_q813; assert_in_epsilon(190.49005912704274, worksheet.outputs_costs_q813, 0.002); end
  def test_outputs_costs_r813; assert_in_epsilon(202.8867919945781, worksheet.outputs_costs_r813, 0.002); end
  def test_outputs_costs_b818; assert_equal("Power indexed (capex + opex, non-amortised)", worksheet.outputs_costs_b818); end
  def test_outputs_costs_e818; assert_equal("Sector code:", worksheet.outputs_costs_e818); end
  def test_outputs_costs_f818; assert_in_epsilon(40.0, worksheet.outputs_costs_f818, 0.002); end
  def test_outputs_costs_i818; assert_equal("NON AMORTISED", worksheet.outputs_costs_i818); end
  def test_outputs_costs_c820; assert_equal("Category", worksheet.outputs_costs_c820); end
  def test_outputs_costs_j820; assert_equal("2011", worksheet.outputs_costs_j820); end
  def test_outputs_costs_k820; assert_equal("2015", worksheet.outputs_costs_k820); end
  def test_outputs_costs_l820; assert_equal("2020", worksheet.outputs_costs_l820); end
  def test_outputs_costs_m820; assert_equal("2025", worksheet.outputs_costs_m820); end
  def test_outputs_costs_n820; assert_equal("2030", worksheet.outputs_costs_n820); end
  def test_outputs_costs_o820; assert_equal("2035", worksheet.outputs_costs_o820); end
  def test_outputs_costs_p820; assert_equal("2040", worksheet.outputs_costs_p820); end
  def test_outputs_costs_q820; assert_equal("2045", worksheet.outputs_costs_q820); end
  def test_outputs_costs_r820; assert_equal("2050", worksheet.outputs_costs_r820); end
  def test_outputs_costs_c821; assert_equal("High", worksheet.outputs_costs_c821); end
  def test_outputs_costs_j821; assert_in_epsilon(100.0, worksheet.outputs_costs_j821, 0.002); end
  def test_outputs_costs_k821; assert_in_epsilon(108.59173210048738, worksheet.outputs_costs_k821, 0.002); end
  def test_outputs_costs_l821; assert_in_epsilon(101.40327419335557, worksheet.outputs_costs_l821, 0.002); end
  def test_outputs_costs_m821; assert_in_epsilon(96.45215992953916, worksheet.outputs_costs_m821, 0.002); end
  def test_outputs_costs_n821; assert_in_epsilon(132.1964633269193, worksheet.outputs_costs_n821, 0.002); end
  def test_outputs_costs_o821; assert_in_epsilon(117.21397423173858, worksheet.outputs_costs_o821, 0.002); end
  def test_outputs_costs_p821; assert_in_epsilon(162.7951309432738, worksheet.outputs_costs_p821, 0.002); end
  def test_outputs_costs_q821; assert_in_epsilon(219.2646538138033, worksheet.outputs_costs_q821, 0.002); end
  def test_outputs_costs_r821; assert_in_epsilon(314.69612573497557, worksheet.outputs_costs_r821, 0.002); end
  def test_outputs_costs_c822; assert_equal("Point", worksheet.outputs_costs_c822); end
  def test_outputs_costs_j822; assert_in_epsilon(100.0, worksheet.outputs_costs_j822, 0.002); end
  def test_outputs_costs_k822; assert_in_epsilon(106.4101763976859, worksheet.outputs_costs_k822, 0.002); end
  def test_outputs_costs_l822; assert_in_epsilon(94.88660008716829, worksheet.outputs_costs_l822, 0.002); end
  def test_outputs_costs_m822; assert_in_epsilon(86.78622923396652, worksheet.outputs_costs_m822, 0.002); end
  def test_outputs_costs_n822; assert_in_epsilon(114.46429894114394, worksheet.outputs_costs_n822, 0.002); end
  def test_outputs_costs_o822; assert_in_epsilon(95.86477640568023, worksheet.outputs_costs_o822, 0.002); end
  def test_outputs_costs_p822; assert_in_epsilon(125.51448924581095, worksheet.outputs_costs_p822, 0.002); end
  def test_outputs_costs_q822; assert_in_epsilon(156.5590890741685, worksheet.outputs_costs_q822, 0.002); end
  def test_outputs_costs_r822; assert_in_epsilon(228.8779080764733, worksheet.outputs_costs_r822, 0.002); end
  def test_outputs_costs_c823; assert_equal("Low", worksheet.outputs_costs_c823); end
  def test_outputs_costs_j823; assert_in_epsilon(100.0, worksheet.outputs_costs_j823, 0.002); end
  def test_outputs_costs_k823; assert_in_epsilon(100.22133439347304, worksheet.outputs_costs_k823, 0.002); end
  def test_outputs_costs_l823; assert_in_epsilon(85.59263620341052, worksheet.outputs_costs_l823, 0.002); end
  def test_outputs_costs_m823; assert_in_epsilon(73.49698035922296, worksheet.outputs_costs_m823, 0.002); end
  def test_outputs_costs_n823; assert_in_epsilon(92.60600922860473, worksheet.outputs_costs_n823, 0.002); end
  def test_outputs_costs_o823; assert_in_epsilon(70.67744794066654, worksheet.outputs_costs_o823, 0.002); end
  def test_outputs_costs_p823; assert_in_epsilon(90.42657669105326, worksheet.outputs_costs_p823, 0.002); end
  def test_outputs_costs_q823; assert_in_epsilon(107.98334786420803, worksheet.outputs_costs_q823, 0.002); end
  def test_outputs_costs_r823; assert_in_epsilon(158.51005652731877, worksheet.outputs_costs_r823, 0.002); end
  def test_outputs_costs_b756; assert_equal("High indexed (non-amortised)", worksheet.outputs_costs_b756); end
  def test_outputs_costs_i756; assert_equal("NON AMORTISED", worksheet.outputs_costs_i756); end
  def test_outputs_costs_c758; assert_equal("Category", worksheet.outputs_costs_c758); end
  def test_outputs_costs_j758; assert_equal("2011", worksheet.outputs_costs_j758); end
  def test_outputs_costs_k758; assert_equal("2015", worksheet.outputs_costs_k758); end
  def test_outputs_costs_l758; assert_equal("2020", worksheet.outputs_costs_l758); end
  def test_outputs_costs_m758; assert_equal("2025", worksheet.outputs_costs_m758); end
  def test_outputs_costs_n758; assert_equal("2030", worksheet.outputs_costs_n758); end
  def test_outputs_costs_o758; assert_equal("2035", worksheet.outputs_costs_o758); end
  def test_outputs_costs_p758; assert_equal("2040", worksheet.outputs_costs_p758); end
  def test_outputs_costs_q758; assert_equal("2045", worksheet.outputs_costs_q758); end
  def test_outputs_costs_r758; assert_equal("2050", worksheet.outputs_costs_r758); end
  def test_outputs_costs_c759; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c759); end
  def test_outputs_costs_j759; assert_in_epsilon(100.0, worksheet.outputs_costs_j759, 0.002); end
  def test_outputs_costs_k759; assert_in_epsilon(138.50999353033615, worksheet.outputs_costs_k759, 0.002); end
  def test_outputs_costs_l759; assert_in_epsilon(172.0979017315201, worksheet.outputs_costs_l759, 0.002); end
  def test_outputs_costs_m759; assert_in_epsilon(209.36935100709638, worksheet.outputs_costs_m759, 0.002); end
  def test_outputs_costs_n759; assert_in_epsilon(239.00094822558967, worksheet.outputs_costs_n759, 0.002); end
  def test_outputs_costs_o759; assert_in_epsilon(267.2946047536036, worksheet.outputs_costs_o759, 0.002); end
  def test_outputs_costs_p759; assert_in_epsilon(302.18056291545514, worksheet.outputs_costs_p759, 0.002); end
  def test_outputs_costs_q759; assert_in_epsilon(337.49115743754544, worksheet.outputs_costs_q759, 0.002); end
  def test_outputs_costs_r759; assert_in_epsilon(379.18322823436034, worksheet.outputs_costs_r759, 0.002); end
  def test_outputs_costs_c760; assert_equal("Operating costs", worksheet.outputs_costs_c760); end
  def test_outputs_costs_j760; assert_in_epsilon(100.0, worksheet.outputs_costs_j760, 0.002); end
  def test_outputs_costs_k760; assert_in_epsilon(119.53334177989083, worksheet.outputs_costs_k760, 0.002); end
  def test_outputs_costs_l760; assert_in_epsilon(138.0052254651684, worksheet.outputs_costs_l760, 0.002); end
  def test_outputs_costs_m760; assert_in_epsilon(155.2750962472323, worksheet.outputs_costs_m760, 0.002); end
  def test_outputs_costs_n760; assert_in_epsilon(174.87607878228758, worksheet.outputs_costs_n760, 0.002); end
  def test_outputs_costs_o760; assert_in_epsilon(191.52837649108972, worksheet.outputs_costs_o760, 0.002); end
  def test_outputs_costs_p760; assert_in_epsilon(210.28490383811004, worksheet.outputs_costs_p760, 0.002); end
  def test_outputs_costs_q760; assert_in_epsilon(230.62930856164238, worksheet.outputs_costs_q760, 0.002); end
  def test_outputs_costs_r760; assert_in_epsilon(257.3205532863568, worksheet.outputs_costs_r760, 0.002); end
  def test_outputs_costs_c761; assert_equal("Fuel costs", worksheet.outputs_costs_c761); end
  def test_outputs_costs_j761; assert_in_epsilon(100.0, worksheet.outputs_costs_j761, 0.002); end
  def test_outputs_costs_k761; assert_in_epsilon(113.31926766493048, worksheet.outputs_costs_k761, 0.002); end
  def test_outputs_costs_l761; assert_in_epsilon(138.1296785502921, worksheet.outputs_costs_l761, 0.002); end
  def test_outputs_costs_m761; assert_in_epsilon(163.20315726844962, worksheet.outputs_costs_m761, 0.002); end
  def test_outputs_costs_n761; assert_in_epsilon(191.4395010921542, worksheet.outputs_costs_n761, 0.002); end
  def test_outputs_costs_o761; assert_in_epsilon(216.30678686995304, worksheet.outputs_costs_o761, 0.002); end
  def test_outputs_costs_p761; assert_in_epsilon(245.4794618626981, worksheet.outputs_costs_p761, 0.002); end
  def test_outputs_costs_q761; assert_in_epsilon(276.0020837254174, worksheet.outputs_costs_q761, 0.002); end
  def test_outputs_costs_r761; assert_in_epsilon(307.84263686645176, worksheet.outputs_costs_r761, 0.002); end
  def test_outputs_costs_c762; assert_equal("Total", worksheet.outputs_costs_c762); end
  def test_outputs_costs_j762; assert_in_epsilon(100.0, worksheet.outputs_costs_j762, 0.002); end
  def test_outputs_costs_k762; assert_in_epsilon(134.4424656323484, worksheet.outputs_costs_k762, 0.002); end
  def test_outputs_costs_l762; assert_in_epsilon(166.05954012950505, worksheet.outputs_costs_l762, 0.002); end
  def test_outputs_costs_m762; assert_in_epsilon(200.6575641616977, worksheet.outputs_costs_m762, 0.002); end
  def test_outputs_costs_n762; assert_in_epsilon(229.47936345115005, worksheet.outputs_costs_n762, 0.002); end
  def test_outputs_costs_o762; assert_in_epsilon(256.63000829358094, worksheet.outputs_costs_o762, 0.002); end
  def test_outputs_costs_p762; assert_in_epsilon(289.8236866022116, worksheet.outputs_costs_p762, 0.002); end
  def test_outputs_costs_q762; assert_in_epsilon(323.62175609054174, worksheet.outputs_costs_q762, 0.002); end
  def test_outputs_costs_r762; assert_in_epsilon(363.2297361630797, worksheet.outputs_costs_r762, 0.002); end
  def test_outputs_costs_b766; assert_equal("Point indexed (non-amortised)", worksheet.outputs_costs_b766); end
  def test_outputs_costs_i766; assert_equal("NON AMORTISED", worksheet.outputs_costs_i766); end
  def test_outputs_costs_c768; assert_equal("Category", worksheet.outputs_costs_c768); end
  def test_outputs_costs_j768; assert_equal("2011", worksheet.outputs_costs_j768); end
  def test_outputs_costs_k768; assert_equal("2015", worksheet.outputs_costs_k768); end
  def test_outputs_costs_l768; assert_equal("2020", worksheet.outputs_costs_l768); end
  def test_outputs_costs_m768; assert_equal("2025", worksheet.outputs_costs_m768); end
  def test_outputs_costs_n768; assert_equal("2030", worksheet.outputs_costs_n768); end
  def test_outputs_costs_o768; assert_equal("2035", worksheet.outputs_costs_o768); end
  def test_outputs_costs_p768; assert_equal("2040", worksheet.outputs_costs_p768); end
  def test_outputs_costs_q768; assert_equal("2045", worksheet.outputs_costs_q768); end
  def test_outputs_costs_r768; assert_equal("2050", worksheet.outputs_costs_r768); end
  def test_outputs_costs_c769; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c769); end
  def test_outputs_costs_j769; assert_in_epsilon(100.0, worksheet.outputs_costs_j769, 0.002); end
  def test_outputs_costs_k769; assert_in_epsilon(130.2833727491381, worksheet.outputs_costs_k769, 0.002); end
  def test_outputs_costs_l769; assert_in_epsilon(151.27923713283624, worksheet.outputs_costs_l769, 0.002); end
  def test_outputs_costs_m769; assert_in_epsilon(173.0299595027129, worksheet.outputs_costs_m769, 0.002); end
  def test_outputs_costs_n769; assert_in_epsilon(184.77791191507387, worksheet.outputs_costs_n769, 0.002); end
  def test_outputs_costs_o769; assert_in_epsilon(194.44155702391018, worksheet.outputs_costs_o769, 0.002); end
  def test_outputs_costs_p769; assert_in_epsilon(208.6848546576561, worksheet.outputs_costs_p769, 0.002); end
  def test_outputs_costs_q769; assert_in_epsilon(221.55652368405399, worksheet.outputs_costs_q769, 0.002); end
  def test_outputs_costs_r769; assert_in_epsilon(239.04000676655954, worksheet.outputs_costs_r769, 0.002); end
  def test_outputs_costs_c770; assert_equal("Operating costs", worksheet.outputs_costs_c770); end
  def test_outputs_costs_j770; assert_in_epsilon(100.0, worksheet.outputs_costs_j770, 0.002); end
  def test_outputs_costs_k770; assert_in_epsilon(117.33220321381661, worksheet.outputs_costs_k770, 0.002); end
  def test_outputs_costs_l770; assert_in_epsilon(132.15364761796954, worksheet.outputs_costs_l770, 0.002); end
  def test_outputs_costs_m770; assert_in_epsilon(145.05946058583282, worksheet.outputs_costs_m770, 0.002); end
  def test_outputs_costs_n770; assert_in_epsilon(159.35117772864953, worksheet.outputs_costs_n770, 0.002); end
  def test_outputs_costs_o770; assert_in_epsilon(170.05603778655606, worksheet.outputs_costs_o770, 0.002); end
  def test_outputs_costs_p770; assert_in_epsilon(181.817535388438, worksheet.outputs_costs_p770, 0.002); end
  def test_outputs_costs_q770; assert_in_epsilon(193.51147799455936, worksheet.outputs_costs_q770, 0.002); end
  def test_outputs_costs_r770; assert_in_epsilon(208.5780005572908, worksheet.outputs_costs_r770, 0.002); end
  def test_outputs_costs_c771; assert_equal("Fuel costs", worksheet.outputs_costs_c771); end
  def test_outputs_costs_j771; assert_in_epsilon(100.0, worksheet.outputs_costs_j771, 0.002); end
  def test_outputs_costs_k771; assert_in_epsilon(105.33615541665311, worksheet.outputs_costs_k771, 0.002); end
  def test_outputs_costs_l771; assert_in_epsilon(117.94123762786867, worksheet.outputs_costs_l771, 0.002); end
  def test_outputs_costs_m771; assert_in_epsilon(129.35879306638097, worksheet.outputs_costs_m771, 0.002); end
  def test_outputs_costs_n771; assert_in_epsilon(141.70169832584546, worksheet.outputs_costs_n771, 0.002); end
  def test_outputs_costs_o771; assert_in_epsilon(150.93109734480618, worksheet.outputs_costs_o771, 0.002); end
  def test_outputs_costs_p771; assert_in_epsilon(162.267032645235, worksheet.outputs_costs_p771, 0.002); end
  def test_outputs_costs_q771; assert_in_epsilon(173.48380355361735, worksheet.outputs_costs_q771, 0.002); end
  def test_outputs_costs_r771; assert_in_epsilon(185.08545902719104, worksheet.outputs_costs_r771, 0.002); end
  def test_outputs_costs_c772; assert_equal("Total", worksheet.outputs_costs_c772); end
  def test_outputs_costs_j772; assert_in_epsilon(100.0, worksheet.outputs_costs_j772, 0.002); end
  def test_outputs_costs_k772; assert_in_epsilon(126.64239907822936, worksheet.outputs_costs_k772, 0.002); end
  def test_outputs_costs_l772; assert_in_epsilon(146.29656502523488, worksheet.outputs_costs_l772, 0.002); end
  def test_outputs_costs_m772; assert_in_epsilon(166.31507901444255, worksheet.outputs_costs_m772, 0.002); end
  def test_outputs_costs_n772; assert_in_epsilon(178.29376958147054, worksheet.outputs_costs_n772, 0.002); end
  def test_outputs_costs_o772; assert_in_epsilon(187.97559814847244, worksheet.outputs_costs_o772, 0.002); end
  def test_outputs_costs_p772; assert_in_epsilon(201.73195719511656, worksheet.outputs_costs_p772, 0.002); end
  def test_outputs_costs_q772; assert_in_epsilon(214.34158395152926, worksheet.outputs_costs_q772, 0.002); end
  def test_outputs_costs_r772; assert_in_epsilon(231.00761916301232, worksheet.outputs_costs_r772, 0.002); end
  def test_outputs_costs_b776; assert_equal("Low indexed (non-amortised)", worksheet.outputs_costs_b776); end
  def test_outputs_costs_i776; assert_equal("NON AMORTISED", worksheet.outputs_costs_i776); end
  def test_outputs_costs_c778; assert_equal("Category", worksheet.outputs_costs_c778); end
  def test_outputs_costs_j778; assert_equal("2011", worksheet.outputs_costs_j778); end
  def test_outputs_costs_k778; assert_equal("2015", worksheet.outputs_costs_k778); end
  def test_outputs_costs_l778; assert_equal("2020", worksheet.outputs_costs_l778); end
  def test_outputs_costs_m778; assert_equal("2025", worksheet.outputs_costs_m778); end
  def test_outputs_costs_n778; assert_equal("2030", worksheet.outputs_costs_n778); end
  def test_outputs_costs_o778; assert_equal("2035", worksheet.outputs_costs_o778); end
  def test_outputs_costs_p778; assert_equal("2040", worksheet.outputs_costs_p778); end
  def test_outputs_costs_q778; assert_equal("2045", worksheet.outputs_costs_q778); end
  def test_outputs_costs_r778; assert_equal("2050", worksheet.outputs_costs_r778); end
  def test_outputs_costs_c779; assert_equal("Capital costs (including opportunity costs)", worksheet.outputs_costs_c779); end
  def test_outputs_costs_j779; assert_in_epsilon(100.0, worksheet.outputs_costs_j779, 0.002); end
  def test_outputs_costs_k779; assert_in_epsilon(126.54871794834214, worksheet.outputs_costs_k779, 0.002); end
  def test_outputs_costs_l779; assert_in_epsilon(142.30238277468322, worksheet.outputs_costs_l779, 0.002); end
  def test_outputs_costs_m779; assert_in_epsilon(157.3082103143085, worksheet.outputs_costs_m779, 0.002); end
  def test_outputs_costs_n779; assert_in_epsilon(160.95740254573974, worksheet.outputs_costs_n779, 0.002); end
  def test_outputs_costs_o779; assert_in_epsilon(162.2997942050535, worksheet.outputs_costs_o779, 0.002); end
  def test_outputs_costs_p779; assert_in_epsilon(167.04719809056218, worksheet.outputs_costs_p779, 0.002); end
  def test_outputs_costs_q779; assert_in_epsilon(169.4462442416375, worksheet.outputs_costs_q779, 0.002); end
  def test_outputs_costs_r779; assert_in_epsilon(174.84775123390543, worksheet.outputs_costs_r779, 0.002); end
  def test_outputs_costs_c780; assert_equal("Operating costs", worksheet.outputs_costs_c780); end
  def test_outputs_costs_j780; assert_in_epsilon(100.0, worksheet.outputs_costs_j780, 0.002); end
  def test_outputs_costs_k780; assert_in_epsilon(114.51146332554431, worksheet.outputs_costs_k780, 0.002); end
  def test_outputs_costs_l780; assert_in_epsilon(124.88489342485177, worksheet.outputs_costs_l780, 0.002); end
  def test_outputs_costs_m780; assert_in_epsilon(132.56621660900336, worksheet.outputs_costs_m780, 0.002); end
  def test_outputs_costs_n780; assert_in_epsilon(140.49369696340216, worksheet.outputs_costs_n780, 0.002); end
  def test_outputs_costs_o780; assert_in_epsilon(144.52781690449945, worksheet.outputs_costs_o780, 0.002); end
  def test_outputs_costs_p780; assert_in_epsilon(148.39895596962174, worksheet.outputs_costs_p780, 0.002); end
  def test_outputs_costs_q780; assert_in_epsilon(150.9056487146967, worksheet.outputs_costs_q780, 0.002); end
  def test_outputs_costs_r780; assert_in_epsilon(154.6699012289177, worksheet.outputs_costs_r780, 0.002); end
  def test_outputs_costs_c781; assert_equal("Fuel costs", worksheet.outputs_costs_c781); end
  def test_outputs_costs_j781; assert_in_epsilon(100.0, worksheet.outputs_costs_j781, 0.002); end
  def test_outputs_costs_k781; assert_in_epsilon(99.4000596150134, worksheet.outputs_costs_k781, 0.002); end
  def test_outputs_costs_l781; assert_in_epsilon(103.0223615253611, worksheet.outputs_costs_l781, 0.002); end
  def test_outputs_costs_m781; assert_in_epsilon(104.23233540516344, worksheet.outputs_costs_m781, 0.002); end
  def test_outputs_costs_n781; assert_in_epsilon(104.76565843895295, worksheet.outputs_costs_n781, 0.002); end
  def test_outputs_costs_o781; assert_in_epsilon(102.18283295001682, worksheet.outputs_costs_o781, 0.002); end
  def test_outputs_costs_p781; assert_in_epsilon(100.08084998687093, worksheet.outputs_costs_p781, 0.002); end
  def test_outputs_costs_q781; assert_in_epsilon(97.06134817298316, worksheet.outputs_costs_q781, 0.002); end
  def test_outputs_costs_r781; assert_in_epsilon(93.56314756505584, worksheet.outputs_costs_r781, 0.002); end
  def test_outputs_costs_c782; assert_equal("Total", worksheet.outputs_costs_c782); end
  def test_outputs_costs_j782; assert_in_epsilon(100.0, worksheet.outputs_costs_j782, 0.002); end
  def test_outputs_costs_k782; assert_in_epsilon(122.72416366426245, worksheet.outputs_costs_k782, 0.002); end
  def test_outputs_costs_l782; assert_in_epsilon(136.76873960291275, worksheet.outputs_costs_l782, 0.002); end
  def test_outputs_costs_m782; assert_in_epsilon(149.75405252025396, worksheet.outputs_costs_m782, 0.002); end
  def test_outputs_costs_n782; assert_in_epsilon(153.3253089319162, worksheet.outputs_costs_n782, 0.002); end
  def test_outputs_costs_o782; assert_in_epsilon(154.39743893634255, worksheet.outputs_costs_o782, 0.002); end
  def test_outputs_costs_p782; assert_in_epsilon(158.31775483564655, worksheet.outputs_costs_p782, 0.002); end
  def test_outputs_costs_q782; assert_in_epsilon(160.1135746928048, worksheet.outputs_costs_q782, 0.002); end
  def test_outputs_costs_r782; assert_in_epsilon(164.40860151273958, worksheet.outputs_costs_r782, 0.002); end
  def test_outputs_costs_c746; assert_equal("Year", worksheet.outputs_costs_c746); end
  def test_outputs_costs_j746; assert_equal("2011", worksheet.outputs_costs_j746); end
  def test_outputs_costs_k746; assert_equal("2015", worksheet.outputs_costs_k746); end
  def test_outputs_costs_l746; assert_equal("2020", worksheet.outputs_costs_l746); end
  def test_outputs_costs_m746; assert_equal("2025", worksheet.outputs_costs_m746); end
  def test_outputs_costs_n746; assert_equal("2030", worksheet.outputs_costs_n746); end
  def test_outputs_costs_o746; assert_equal("2035", worksheet.outputs_costs_o746); end
  def test_outputs_costs_p746; assert_equal("2040", worksheet.outputs_costs_p746); end
  def test_outputs_costs_q746; assert_equal("2045", worksheet.outputs_costs_q746); end
  def test_outputs_costs_r746; assert_equal("2050", worksheet.outputs_costs_r746); end
  def test_outputs_costs_c747; assert_equal("High", worksheet.outputs_costs_c747); end
  def test_outputs_costs_j747; assert_in_epsilon(21257.049957622497, worksheet.outputs_costs_j747, 0.002); end
  def test_outputs_costs_k747; assert_in_epsilon(28578.50208372775, worksheet.outputs_costs_k747, 0.002); end
  def test_outputs_costs_l747; assert_in_epsilon(35299.35940472707, worksheet.outputs_costs_l747, 0.002); end
  def test_outputs_costs_m747; assert_in_epsilon(42653.8786576005, worksheet.outputs_costs_m747, 0.002); end
  def test_outputs_costs_n747; assert_in_epsilon(48780.54293124507, worksheet.outputs_costs_n747, 0.002); end
  def test_outputs_costs_o747; assert_in_epsilon(54551.96906921726, worksheet.outputs_costs_o747, 0.002); end
  def test_outputs_costs_p747; assert_in_epsilon(61607.965850055385, worksheet.outputs_costs_p747, 0.002); end
  def test_outputs_costs_q747; assert_in_epsilon(68792.43836590167, worksheet.outputs_costs_q747, 0.002); end
  def test_outputs_costs_r747; assert_in_epsilon(77211.92647712624, worksheet.outputs_costs_r747, 0.002); end
  def test_outputs_costs_c748; assert_equal("Point", worksheet.outputs_costs_c748); end
  def test_outputs_costs_j748; assert_in_epsilon(21240.83013764356, worksheet.outputs_costs_j748, 0.002); end
  def test_outputs_costs_k748; assert_in_epsilon(26899.896870443372, worksheet.outputs_costs_k748, 0.002); end
  def test_outputs_costs_l748; assert_in_epsilon(31074.604874217395, worksheet.outputs_costs_l748, 0.002); end
  def test_outputs_costs_m748; assert_in_epsilon(35326.703426745415, worksheet.outputs_costs_m748, 0.002); end
  def test_outputs_costs_n748; assert_in_epsilon(37871.07674280176, worksheet.outputs_costs_n748, 0.002); end
  def test_outputs_costs_o748; assert_in_epsilon(39927.57750293648, worksheet.outputs_costs_o748, 0.002); end
  def test_outputs_costs_p748; assert_in_epsilon(42849.54236115852, worksheet.outputs_costs_p748, 0.002); end
  def test_outputs_costs_q748; assert_in_epsilon(45527.93176147899, worksheet.outputs_costs_q748, 0.002); end
  def test_outputs_costs_r748; assert_in_epsilon(49067.93599142998, worksheet.outputs_costs_r748, 0.002); end
  def test_outputs_costs_c749; assert_equal("Low", worksheet.outputs_costs_c749); end
  def test_outputs_costs_j749; assert_in_epsilon(21226.832439945538, worksheet.outputs_costs_j749, 0.002); end
  def test_outputs_costs_k749; assert_in_epsilon(26050.452584337516, worksheet.outputs_costs_k749, 0.002); end
  def test_outputs_costs_l749; assert_in_epsilon(29031.67118573572, worksheet.outputs_costs_l749, 0.002); end
  def test_outputs_costs_m749; assert_in_epsilon(31788.041800502346, worksheet.outputs_costs_m749, 0.002); end
  def test_outputs_costs_n749; assert_in_epsilon(32546.106415006703, worksheet.outputs_costs_n749, 0.002); end
  def test_outputs_costs_o749; assert_in_epsilon(32773.68565458466, worksheet.outputs_costs_o749, 0.002); end
  def test_outputs_costs_p749; assert_in_epsilon(33605.84454164647, worksheet.outputs_costs_p749, 0.002); end
  def test_outputs_costs_q749; assert_in_epsilon(33987.04021364872, worksheet.outputs_costs_q749, 0.002); end
  def test_outputs_costs_r749; assert_in_epsilon(34898.73835996699, worksheet.outputs_costs_r749, 0.002); end
  def test_outputs_costs_br654; assert_in_epsilon(620.1604038468662, worksheet.outputs_costs_br654, 0.002); end
  def test_outputs_costs_br655; assert_in_epsilon(1739.4917114671525, worksheet.outputs_costs_br655, 0.002); end
  def test_outputs_costs_br656; assert_in_epsilon(599.3194591099375, worksheet.outputs_costs_br656, 0.002); end
  def test_outputs_costs_br657; assert_in_epsilon(280.0117156533271, worksheet.outputs_costs_br657, 0.002); end
  def test_outputs_costs_br658; assert_in_epsilon(87.28575308358845, worksheet.outputs_costs_br658, 0.002); end
  def test_outputs_costs_br659; assert_in_epsilon(21.262398974175287, worksheet.outputs_costs_br659, 0.002); end
  def test_outputs_costs_br660; assert_in_epsilon(2.4115785416993756, worksheet.outputs_costs_br660, 0.002); end
  def test_outputs_costs_br669; assert_in_epsilon(756.441812361, worksheet.outputs_costs_br669, 0.002); end
  def test_outputs_costs_br670; assert_in_epsilon(2757.0270903983383, worksheet.outputs_costs_br670, 0.002); end
  def test_outputs_costs_br671; assert_in_epsilon(674.5270235273898, worksheet.outputs_costs_br671, 0.002); end
  def test_outputs_costs_br672; assert_in_epsilon(319.5171469544247, worksheet.outputs_costs_br672, 0.002); end
  def test_outputs_costs_br673; assert_in_epsilon(103.3628754679482, worksheet.outputs_costs_br673, 0.002); end
  def test_outputs_costs_br674; assert_in_epsilon(24.670655635793466, worksheet.outputs_costs_br674, 0.002); end
  def test_outputs_costs_br675; assert_in_epsilon(2.933320413616866, worksheet.outputs_costs_br675, 0.002); end
  def test_outputs_costs_br699; assert_in_epsilon(445.72020094877485, worksheet.outputs_costs_br699, 0.002); end
  def test_outputs_costs_br700; assert_in_epsilon(1098.821287695665, worksheet.outputs_costs_br700, 0.002); end
  def test_outputs_costs_br701; assert_in_epsilon(474.543272690073, worksheet.outputs_costs_br701, 0.002); end
  def test_outputs_costs_br702; assert_in_epsilon(266.8432385529612, worksheet.outputs_costs_br702, 0.002); end
  def test_outputs_costs_br703; assert_in_epsilon(81.92671228880185, worksheet.outputs_costs_br703, 0.002); end
  def test_outputs_costs_br704; assert_in_epsilon(20.126313420302566, worksheet.outputs_costs_br704, 0.002); end
  def test_outputs_costs_br705; assert_in_epsilon(2.2376645843935457, worksheet.outputs_costs_br705, 0.002); end
  def test_outputs_costs_br684; assert_in_epsilon(620.1604038468662, worksheet.outputs_costs_br684, 0.002); end
  def test_outputs_costs_br685; assert_in_epsilon(1739.4917114671525, worksheet.outputs_costs_br685, 0.002); end
  def test_outputs_costs_br686; assert_in_epsilon(599.3194591099375, worksheet.outputs_costs_br686, 0.002); end
  def test_outputs_costs_br687; assert_in_epsilon(280.0117156533271, worksheet.outputs_costs_br687, 0.002); end
  def test_outputs_costs_br688; assert_in_epsilon(87.28575308358845, worksheet.outputs_costs_br688, 0.002); end
  def test_outputs_costs_br689; assert_in_epsilon(21.262398974175287, worksheet.outputs_costs_br689, 0.002); end
  def test_outputs_costs_br690; assert_in_epsilon(2.4115785416993756, worksheet.outputs_costs_br690, 0.002); end
  def test_outputs_costs_c18; assert_equal("Cost", worksheet.outputs_costs_c18); end
  def test_outputs_costs_e18; assert_equal("Chosen cost", worksheet.outputs_costs_e18); end
  def test_outputs_costs_f18; assert_equal("Low", worksheet.outputs_costs_f18); end
  def test_outputs_costs_g18; assert_equal("Point", worksheet.outputs_costs_g18); end
  def test_outputs_costs_h18; assert_equal("High", worksheet.outputs_costs_h18); end
  def test_outputs_costs_c19; assert_equal("Fuel", worksheet.outputs_costs_c19); end
  def test_outputs_costs_e19; assert_in_epsilon(3349.9430206767465, worksheet.outputs_costs_e19, 0.002); end
  def test_outputs_costs_f19; assert_in_epsilon(2390.2186901809723, worksheet.outputs_costs_f19, 0.002); end
  def test_outputs_costs_g19; assert_in_epsilon(3349.9430206767465, worksheet.outputs_costs_g19, 0.002); end
  def test_outputs_costs_h19; assert_in_epsilon(4638.479924758511, worksheet.outputs_costs_h19, 0.002); end
  def test_outputs_costs_c25; assert_equal("Scenario", worksheet.outputs_costs_c25); end
  def test_outputs_costs_j25; assert_equal("2011", worksheet.outputs_costs_j25); end
  def test_outputs_costs_k25; assert_equal("2015", worksheet.outputs_costs_k25); end
  def test_outputs_costs_l25; assert_equal("2020", worksheet.outputs_costs_l25); end
  def test_outputs_costs_m25; assert_equal("2025", worksheet.outputs_costs_m25); end
  def test_outputs_costs_n25; assert_equal("2030", worksheet.outputs_costs_n25); end
  def test_outputs_costs_o25; assert_equal("2035", worksheet.outputs_costs_o25); end
  def test_outputs_costs_p25; assert_equal("2040", worksheet.outputs_costs_p25); end
  def test_outputs_costs_q25; assert_equal("2045", worksheet.outputs_costs_q25); end
  def test_outputs_costs_r25; assert_equal("2050", worksheet.outputs_costs_r25); end
  def test_outputs_costs_c26; assert_equal("Global GDP", worksheet.outputs_costs_c26); end
  def test_outputs_costs_j26; assert_in_epsilon(67175.5376197859, worksheet.outputs_costs_j26, 0.002); end
  def test_outputs_costs_k26; assert_in_epsilon(76371.7262877051, worksheet.outputs_costs_k26, 0.002); end
  def test_outputs_costs_l26; assert_in_epsilon(91376.4988938779, worksheet.outputs_costs_l26, 0.002); end
  def test_outputs_costs_m26; assert_in_epsilon(107214.416539545, worksheet.outputs_costs_m26, 0.002); end
  def test_outputs_costs_n26; assert_in_epsilon(124607.262631566, worksheet.outputs_costs_n26, 0.002); end
  def test_outputs_costs_o26; assert_in_epsilon(143612.795634057, worksheet.outputs_costs_o26, 0.002); end
  def test_outputs_costs_p26; assert_in_epsilon(163745.90956641, worksheet.outputs_costs_p26, 0.002); end
  def test_outputs_costs_q26; assert_in_epsilon(184019.80808994902, worksheet.outputs_costs_q26, 0.002); end
  def test_outputs_costs_r26; assert_in_epsilon(204480.970522059, worksheet.outputs_costs_r26, 0.002); end
  def test_outputs_costs_j27; assert_in_epsilon(409.0, worksheet.outputs_costs_j27, 0.002); end
  def test_outputs_costs_nb38; assert_in_epsilon(171.31971162923872, worksheet.outputs_costs_nb38, 0.002); end
  def test_outputs_costs_nb39; assert_in_epsilon(371.93732030943613, worksheet.outputs_costs_nb39, 0.002); end
  def test_outputs_costs_nb40; assert_in_epsilon(314.6340975237081, worksheet.outputs_costs_nb40, 0.002); end
  def test_outputs_costs_nb41; assert_in_epsilon(4801.23291684035, worksheet.outputs_costs_nb41, 0.002); end
  def test_outputs_costs_nb42; assert_in_epsilon(114.07909145393342, worksheet.outputs_costs_nb42, 0.002); end
  def test_outputs_costs_nb43; assert_in_epsilon(499.13353901960863, worksheet.outputs_costs_nb43, 0.002); end
  def test_outputs_costs_nb44; assert_in_epsilon(255.25173887393316, worksheet.outputs_costs_nb44, 0.002); end
  def test_outputs_costs_nb45; assert_in_delta(0.0, (worksheet.outputs_costs_nb45||0), 0.002); end
  def test_outputs_costs_nb46; assert_in_epsilon(815.2136010814071, worksheet.outputs_costs_nb46, 0.002); end
  def test_outputs_costs_nb47; assert_in_epsilon(31.72720945861318, worksheet.outputs_costs_nb47, 0.002); end
  def test_outputs_costs_nb48; assert_in_epsilon(41.31887615655367, worksheet.outputs_costs_nb48, 0.002); end
  def test_outputs_costs_nb49; assert_in_epsilon(12.10329334105158, worksheet.outputs_costs_nb49, 0.002); end
  def test_outputs_costs_nb50; assert_in_delta(0.0, (worksheet.outputs_costs_nb50||0), 0.002); end
  def test_outputs_costs_nb51; assert_in_epsilon(9.063231874939337, worksheet.outputs_costs_nb51, 0.002); end
  def test_outputs_costs_nb52; assert_in_epsilon(81.72942635872508, worksheet.outputs_costs_nb52, 0.002); end
  def test_outputs_costs_nb53; assert_in_epsilon(67.33363571906881, worksheet.outputs_costs_nb53, 0.002); end
  def test_outputs_costs_nb54; assert_in_epsilon(204.02671094277935, worksheet.outputs_costs_nb54, 0.002); end
  def test_outputs_costs_nb55; assert_in_epsilon(163.70537215271133, worksheet.outputs_costs_nb55, 0.002); end
  def test_outputs_costs_nb56; assert_in_epsilon(2036.4692864298381, worksheet.outputs_costs_nb56, 0.002); end
  def test_outputs_costs_nb57; assert_in_epsilon(49.86508849902617, worksheet.outputs_costs_nb57, 0.002); end
  def test_outputs_costs_nb58; assert_in_epsilon(186.3014307452548, worksheet.outputs_costs_nb58, 0.002); end
  def test_outputs_costs_nb59; assert_in_epsilon(89.23951761017003, worksheet.outputs_costs_nb59, 0.002); end
  def test_outputs_costs_nb60; assert_in_delta(0.0, (worksheet.outputs_costs_nb60||0), 0.002); end
  def test_outputs_costs_nb61; assert_in_epsilon(129.91963355395552, worksheet.outputs_costs_nb61, 0.002); end
  def test_outputs_costs_nb62; assert_in_epsilon(5.221494223614091, worksheet.outputs_costs_nb62, 0.002); end
  def test_outputs_costs_nb63; assert_in_epsilon(6.588233045292191, worksheet.outputs_costs_nb63, 0.002); end
  def test_outputs_costs_nb64; assert_in_epsilon(1.9157894069207435, worksheet.outputs_costs_nb64, 0.002); end
  def test_outputs_costs_nb65; assert_in_delta(0.0, (worksheet.outputs_costs_nb65||0), 0.002); end
  def test_outputs_costs_nb66; assert_in_epsilon(59.215866239861604, worksheet.outputs_costs_nb66, 0.002); end
  def test_outputs_costs_nb67; assert_in_epsilon(120.04617816915706, worksheet.outputs_costs_nb67, 0.002); end
  def test_outputs_costs_nb68; assert_in_epsilon(364.0303376070459, worksheet.outputs_costs_nb68, 0.002); end
  def test_outputs_costs_nb69; assert_in_delta(0.0, (worksheet.outputs_costs_nb69||0), 0.002); end
  def test_outputs_costs_nb70; assert_in_epsilon(1771.4218867030727, worksheet.outputs_costs_nb70, 0.002); end
  def test_outputs_costs_nb71; assert_in_delta(0.0, (worksheet.outputs_costs_nb71||0), 0.002); end
  def test_outputs_costs_nb72; assert_in_epsilon(85.73505175078623, worksheet.outputs_costs_nb72, 0.002); end
  def test_outputs_costs_nb73; assert_in_epsilon(79.29091069483579, worksheet.outputs_costs_nb73, 0.002); end
  def test_outputs_costs_nb74; assert_in_epsilon(1015.9958090195955, worksheet.outputs_costs_nb74, 0.002); end
  def test_outputs_costs_nb75; assert_in_epsilon(71.03404437820194, worksheet.outputs_costs_nb75, 0.002); end
  def test_outputs_costs_nb76; assert_in_epsilon(93.2862205722384, worksheet.outputs_costs_nb76, 0.002); end
  def test_outputs_costs_nb77; assert_in_delta(0.42699710896530263, worksheet.outputs_costs_nb77, 0.002); end
  def test_outputs_costs_nb78; assert_in_delta(0.42471153548583324, worksheet.outputs_costs_nb78, 0.002); end
  def test_outputs_costs_nb79; assert_in_epsilon(848.0477293560383, worksheet.outputs_costs_nb79, 0.002); end
  def test_outputs_costs_nb80; assert_in_epsilon(76.31703499371382, worksheet.outputs_costs_nb80, 0.002); end
  def test_outputs_costs_nb81; assert_in_epsilon(93.31975697042328, worksheet.outputs_costs_nb81, 0.002); end
  def test_outputs_costs_nb82; assert_in_delta(0.20079145044045063, worksheet.outputs_costs_nb82, 0.002); end
  def test_outputs_costs_nb83; assert_in_delta(0.3866334498611378, worksheet.outputs_costs_nb83, 0.002); end
  def test_outputs_costs_nb84; assert_in_epsilon(140.17995962280344, worksheet.outputs_costs_nb84, 0.002); end
  def test_outputs_costs_nb85; assert_in_epsilon(209.9185862932601, worksheet.outputs_costs_nb85, 0.002); end
  def test_outputs_costs_nb86; assert_in_epsilon(350.5413763986307, worksheet.outputs_costs_nb86, 0.002); end
  def test_outputs_costs_nb87; assert_in_epsilon(10.106042745076582, worksheet.outputs_costs_nb87, 0.002); end
  def test_outputs_costs_nb88; assert_in_epsilon(312.53558343408076, worksheet.outputs_costs_nb88, 0.002); end
  def test_outputs_costs_nb89; assert_in_epsilon(28.36734219128391, worksheet.outputs_costs_nb89, 0.002); end
  def test_outputs_costs_nb90; assert_in_epsilon(34.70196735510706, worksheet.outputs_costs_nb90, 0.002); end
  def test_outputs_costs_nb91; assert_in_delta(0.00035618390002545866, worksheet.outputs_costs_nb91, 0.002); end
  def test_outputs_costs_nb92; assert_in_delta(0.1504135823837047, worksheet.outputs_costs_nb92, 0.002); end
  def test_outputs_costs_nb93; assert_in_epsilon(11.349039250179757, worksheet.outputs_costs_nb93, 0.002); end
  def test_outputs_costs_nb94; assert_in_epsilon(17.133725978177935, worksheet.outputs_costs_nb94, 0.002); end
  def test_outputs_costs_nb95; assert_in_epsilon(1874.576291676589, worksheet.outputs_costs_nb95, 0.002); end
  def test_outputs_costs_nb96; assert_in_delta(0.0, (worksheet.outputs_costs_nb96||0), 0.002); end
  def test_outputs_costs_nb97; assert_in_epsilon(149.81693206726547, worksheet.outputs_costs_nb97, 0.002); end
  def test_outputs_costs_nb98; assert_in_delta(0.0, (worksheet.outputs_costs_nb98||0), 0.002); end
  def test_outputs_costs_nb99; assert_in_epsilon(24540.781434419165, worksheet.outputs_costs_nb99, 0.002); end
  def test_outputs_costs_nb100; assert_in_epsilon(2140.7185822099405, worksheet.outputs_costs_nb100, 0.002); end
  def test_outputs_costs_nb101; assert_in_epsilon(5513.729858624951, worksheet.outputs_costs_nb101, 0.002); end
  def test_outputs_costs_nb102; assert_in_epsilon(47.50321642986956, worksheet.outputs_costs_nb102, 0.002); end
  def test_outputs_costs_nb103; assert_in_epsilon(357.3958603259787, worksheet.outputs_costs_nb103, 0.002); end
  def test_outputs_costs_nb104; assert_in_epsilon(1462.250601447382, worksheet.outputs_costs_nb104, 0.002); end
  def test_outputs_costs_nb105; assert_in_epsilon(94.74634296256683, worksheet.outputs_costs_nb105, 0.002); end
  def test_outputs_costs_nb106; assert_in_epsilon(157.64949818998787, worksheet.outputs_costs_nb106, 0.002); end
  def test_outputs_costs_nb107; assert_in_epsilon(13.042217796740726, worksheet.outputs_costs_nb107, 0.002); end
  def test_outputs_costs_nb108; assert_in_epsilon(169.34695404511925, worksheet.outputs_costs_nb108, 0.002); end
  def test_outputs_costs_nb109; assert_in_epsilon(238.45279132178257, worksheet.outputs_costs_nb109, 0.002); end
  def test_outputs_costs_nb110; assert_in_epsilon(69.56587859125625, worksheet.outputs_costs_nb110, 0.002); end
  def test_outputs_costs_nb111; assert_in_epsilon(175.71549774749965, worksheet.outputs_costs_nb111, 0.002); end
  def test_outputs_costs_nb112; assert_in_epsilon(14.636817725324121, worksheet.outputs_costs_nb112, 0.002); end
  def test_outputs_costs_nb113; assert_in_epsilon(74.66860759795091, worksheet.outputs_costs_nb113, 0.002); end
  def test_outputs_costs_nb114; assert_in_epsilon(3.1488863600548482, worksheet.outputs_costs_nb114, 0.002); end
  def test_outputs_costs_nb115; assert_in_delta(0.0, (worksheet.outputs_costs_nb115||0), 0.002); end
  def test_outputs_costs_nb116; assert_in_epsilon(641.784985534252, worksheet.outputs_costs_nb116, 0.002); end
  def test_outputs_costs_nb117; assert_in_epsilon(19.93797855948987, worksheet.outputs_costs_nb117, 0.002); end
  def test_outputs_costs_nb118; assert_in_epsilon(47.63375887214217, worksheet.outputs_costs_nb118, 0.002); end
  def test_outputs_costs_nb119; assert_in_epsilon(147.8713621770907, worksheet.outputs_costs_nb119, 0.002); end
  def test_outputs_costs_nb120; assert_in_epsilon(4.905739328755101, worksheet.outputs_costs_nb120, 0.002); end
  def test_outputs_costs_nb121; assert_in_epsilon(11.718530587541528, worksheet.outputs_costs_nb121, 0.002); end
  def test_outputs_costs_nb122; assert_in_epsilon(154.14296119079938, worksheet.outputs_costs_nb122, 0.002); end
  def test_outputs_costs_nb123; assert_in_epsilon(252.8028632441978, worksheet.outputs_costs_nb123, 0.002); end
  def test_outputs_costs_nb124; assert_in_epsilon(278.87057032545715, worksheet.outputs_costs_nb124, 0.002); end
  def test_outputs_costs_nb125; assert_in_epsilon(450.5923689829174, worksheet.outputs_costs_nb125, 0.002); end
  def test_outputs_costs_nb126; assert_in_epsilon(99.84222418207719, worksheet.outputs_costs_nb126, 0.002); end
  def test_outputs_costs_nb127; assert_in_epsilon(90.85800318117286, worksheet.outputs_costs_nb127, 0.002); end
  def test_outputs_costs_nb128; assert_in_epsilon(16.43414374585738, worksheet.outputs_costs_nb128, 0.002); end
  def test_outputs_costs_nb129; assert_in_epsilon(425.4476241567092, worksheet.outputs_costs_nb129, 0.002); end
  def test_outputs_costs_nb130; assert_in_epsilon(28.98498217039593, worksheet.outputs_costs_nb130, 0.002); end
  def test_outputs_costs_nb131; assert_in_epsilon(1.4810366205207788, worksheet.outputs_costs_nb131, 0.002); end
  def test_outputs_costs_nb132; assert_in_epsilon(11.404166007149136, worksheet.outputs_costs_nb132, 0.002); end
  def test_outputs_costs_nb133; assert_in_epsilon(15.984796568779865, worksheet.outputs_costs_nb133, 0.002); end
  def test_outputs_costs_nb134; assert_in_epsilon(39.15697385532819, worksheet.outputs_costs_nb134, 0.002); end
  def test_outputs_costs_nb135; assert_in_delta(0.0, (worksheet.outputs_costs_nb135||0), 0.002); end
  def test_outputs_costs_nb136; assert_in_epsilon(339.8255782359237, worksheet.outputs_costs_nb136, 0.002); end
  def test_outputs_costs_nb137; assert_in_epsilon(239.96877270390576, worksheet.outputs_costs_nb137, 0.002); end
  def test_outputs_costs_nb138; assert_in_epsilon(327.07230312572, worksheet.outputs_costs_nb138, 0.002); end
  def test_outputs_costs_nb139; assert_in_epsilon(214.1353368403926, worksheet.outputs_costs_nb139, 0.002); end
  def test_outputs_costs_nb140; assert_in_epsilon(1163.5169388529553, worksheet.outputs_costs_nb140, 0.002); end
  def test_outputs_costs_nb141; assert_in_epsilon(1771.0682255627564, worksheet.outputs_costs_nb141, 0.002); end
  def test_outputs_costs_nb142; assert_in_epsilon(64.14056740792535, worksheet.outputs_costs_nb142, 0.002); end
  def test_outputs_costs_nb143; assert_in_epsilon(29.582717362418364, worksheet.outputs_costs_nb143, 0.002); end
  def test_outputs_costs_nb144; assert_in_epsilon(80.19352871065105, worksheet.outputs_costs_nb144, 0.002); end
  def test_outputs_costs_nb145; assert_in_epsilon(21.663928336519746, worksheet.outputs_costs_nb145, 0.002); end
  def test_outputs_costs_nb146; assert_in_epsilon(232.8648614121768, worksheet.outputs_costs_nb146, 0.002); end
  def test_outputs_costs_nb147; assert_in_epsilon(396.7975928608555, worksheet.outputs_costs_nb147, 0.002); end
  def test_outputs_costs_nb148; assert_in_epsilon(14.819860008688568, worksheet.outputs_costs_nb148, 0.002); end
  def test_outputs_costs_nb149; assert_in_epsilon(56.23206017340607, worksheet.outputs_costs_nb149, 0.002); end
  def test_outputs_costs_nb150; assert_in_epsilon(156.7014294289711, worksheet.outputs_costs_nb150, 0.002); end
  def test_outputs_costs_nb151; assert_in_epsilon(130.41924566610402, worksheet.outputs_costs_nb151, 0.002); end
  def test_outputs_costs_nb152; assert_in_epsilon(25.346533588671694, worksheet.outputs_costs_nb152, 0.002); end
  def test_outputs_costs_nb153; assert_in_epsilon(4.169156491201543, worksheet.outputs_costs_nb153, 0.002); end
  def test_outputs_costs_nb154; assert_in_epsilon(8.75601861771092, worksheet.outputs_costs_nb154, 0.002); end
  def test_outputs_costs_nb155; assert_in_epsilon(3.6617816472754705, worksheet.outputs_costs_nb155, 0.002); end
  def test_outputs_costs_nb156; assert_in_epsilon(6.2133845380480395, worksheet.outputs_costs_nb156, 0.002); end
  def test_outputs_costs_nb157; assert_in_epsilon(38.70871685975706, worksheet.outputs_costs_nb157, 0.002); end
  def test_outputs_costs_nb158; assert_in_epsilon(37.841421773122306, worksheet.outputs_costs_nb158, 0.002); end
  def test_outputs_costs_nb159; assert_in_epsilon(1.492930256825348, worksheet.outputs_costs_nb159, 0.002); end
  def test_outputs_costs_nb160; assert_in_epsilon(22.33488698234533, worksheet.outputs_costs_nb160, 0.002); end
  def test_outputs_costs_nb161; assert_in_epsilon(1.971481609388678, worksheet.outputs_costs_nb161, 0.002); end
  def test_outputs_costs_nb162; assert_in_epsilon(7.112436209273475, worksheet.outputs_costs_nb162, 0.002); end
  def test_outputs_costs_nb163; assert_in_delta(0.2584802345196276, worksheet.outputs_costs_nb163, 0.002); end
  def test_outputs_costs_nb164; assert_in_epsilon(2.2222563715318593, worksheet.outputs_costs_nb164, 0.002); end
  def test_outputs_costs_nb165; assert_in_delta(0.13704992266699212, worksheet.outputs_costs_nb165, 0.002); end
  def test_outputs_costs_nb166; assert_in_epsilon(10.17114110293316, worksheet.outputs_costs_nb166, 0.002); end
  def test_outputs_costs_nb167; assert_in_epsilon(40.68456441173264, worksheet.outputs_costs_nb167, 0.002); end
  def test_outputs_costs_nb168; assert_in_epsilon(26.694725076493423, worksheet.outputs_costs_nb168, 0.002); end
  def test_outputs_costs_nb169; assert_in_epsilon(106.77890030597369, worksheet.outputs_costs_nb169, 0.002); end
  def test_outputs_costs_nb170; assert_in_epsilon(4.515568586309428, worksheet.outputs_costs_nb170, 0.002); end
  def test_outputs_costs_nb171; assert_in_epsilon(12.366209467739923, worksheet.outputs_costs_nb171, 0.002); end
  def test_outputs_costs_nb172; assert_in_delta(0.5084176155265172, worksheet.outputs_costs_nb172, 0.002); end
  def test_outputs_costs_nb173; assert_in_epsilon(7.061739706627984, worksheet.outputs_costs_nb173, 0.002); end
  def test_outputs_costs_nb174; assert_in_epsilon(38.02593170634723, worksheet.outputs_costs_nb174, 0.002); end
  def test_outputs_costs_nb175; assert_in_epsilon(33.7873368100312, worksheet.outputs_costs_nb175, 0.002); end
  def test_outputs_costs_nb176; assert_in_delta(0.0, (worksheet.outputs_costs_nb176||0), 0.002); end
  def test_outputs_costs_nb177; assert_in_delta(0.192581350602409, worksheet.outputs_costs_nb177, 0.002); end
  def test_outputs_costs_nb178; assert_in_delta(0.17639702661905454, worksheet.outputs_costs_nb178, 0.002); end
  def test_outputs_costs_nb179; assert_in_epsilon(10.549561169256867, worksheet.outputs_costs_nb179, 0.002); end
  def test_outputs_costs_nb180; assert_in_delta(0.0038088937250341736, worksheet.outputs_costs_nb180, 0.002); end
  def test_outputs_costs_nb181; assert_in_delta(0.006140918023724125, worksheet.outputs_costs_nb181, 0.002); end
  def test_outputs_costs_nb182; assert_in_epsilon(25.819406669151682, worksheet.outputs_costs_nb182, 0.002); end
  def test_outputs_costs_nb183; assert_in_epsilon(1.6249607824970798, worksheet.outputs_costs_nb183, 0.002); end
  def test_outputs_costs_nb184; assert_in_epsilon(8.340908708779713, worksheet.outputs_costs_nb184, 0.002); end
  def test_outputs_costs_nb185; assert_in_epsilon(1.98613511095252, worksheet.outputs_costs_nb185, 0.002); end
  def test_outputs_costs_nb186; assert_in_epsilon(960.459473310343, worksheet.outputs_costs_nb186, 0.002); end
  def test_outputs_costs_nb187; assert_in_epsilon(7.076870680018588, worksheet.outputs_costs_nb187, 0.002); end
  def test_outputs_costs_nb188; assert_in_epsilon(1.95499753926906, worksheet.outputs_costs_nb188, 0.002); end
  def test_outputs_costs_nb189; assert_in_epsilon(1.9575455067730503, worksheet.outputs_costs_nb189, 0.002); end
  def test_outputs_costs_nb190; assert_in_epsilon(1.2164860561678956, worksheet.outputs_costs_nb190, 0.002); end
  def test_outputs_costs_nb191; assert_in_epsilon(1.4481115591328473, worksheet.outputs_costs_nb191, 0.002); end
  def test_outputs_costs_nb192; assert_in_epsilon(7.716710186241717, worksheet.outputs_costs_nb192, 0.002); end
  def test_outputs_costs_nb193; assert_in_epsilon(133.3142198590008, worksheet.outputs_costs_nb193, 0.002); end
  def test_outputs_costs_nb194; assert_in_epsilon(46.940981343900944, worksheet.outputs_costs_nb194, 0.002); end
  def test_outputs_costs_nb195; assert_in_epsilon(-4.9315427871024315, worksheet.outputs_costs_nb195, 0.002); end
  def test_outputs_costs_nb196; assert_in_epsilon(5.3272479054852635, worksheet.outputs_costs_nb196, 0.002); end
  def test_outputs_costs_nb197; assert_in_epsilon(2.3585403773297644, worksheet.outputs_costs_nb197, 0.002); end
  def test_outputs_costs_nb198; assert_in_epsilon(17.82011347609678, worksheet.outputs_costs_nb198, 0.002); end
  def test_outputs_costs_nb199; assert_in_delta(0.23713102950169168, worksheet.outputs_costs_nb199, 0.002); end
  def test_outputs_costs_nb200; assert_in_delta(0.012876641008839135, worksheet.outputs_costs_nb200, 0.002); end
  def test_outputs_costs_nb201; assert_in_delta(0.0017903006134640514, worksheet.outputs_costs_nb201, 0.002); end
  def test_outputs_costs_nb202; assert_in_delta(0.0015620614231128373, worksheet.outputs_costs_nb202, 0.002); end
  def test_outputs_costs_nb203; assert_in_delta(0.025595609697621712, worksheet.outputs_costs_nb203, 0.002); end
  def test_outputs_costs_nb204; assert_in_epsilon(35.668217040197334, worksheet.outputs_costs_nb204, 0.002); end
  def test_outputs_costs_nb205; assert_in_epsilon(38.66254666127589, worksheet.outputs_costs_nb205, 0.002); end
  def test_outputs_costs_nb206; assert_in_epsilon(8.549590267070045, worksheet.outputs_costs_nb206, 0.002); end
  def test_outputs_costs_nb207; assert_in_epsilon(34.09439058764314, worksheet.outputs_costs_nb207, 0.002); end
  def test_outputs_costs_nb208; assert_in_epsilon(51.81206516716786, worksheet.outputs_costs_nb208, 0.002); end
  def test_outputs_costs_nb209; assert_in_epsilon(476.45291521516947, worksheet.outputs_costs_nb209, 0.002); end
  def test_outputs_costs_nb210; assert_in_epsilon(136.14099555467777, worksheet.outputs_costs_nb210, 0.002); end
  def test_outputs_costs_nb211; assert_in_epsilon(460.1834283475006, worksheet.outputs_costs_nb211, 0.002); end
  def test_outputs_costs_nb212; assert_in_epsilon(1970.7080508797062, worksheet.outputs_costs_nb212, 0.002); end
  def test_outputs_costs_nb213; assert_in_epsilon(189.00398296049747, worksheet.outputs_costs_nb213, 0.002); end
  def test_outputs_costs_nb214; assert_in_epsilon(499.763890841939, worksheet.outputs_costs_nb214, 0.002); end
  def test_outputs_costs_nb215; assert_in_epsilon(1013.7523957281635, worksheet.outputs_costs_nb215, 0.002); end
  def test_outputs_costs_nb216; assert_in_epsilon(160.1698083166296, worksheet.outputs_costs_nb216, 0.002); end
  def test_outputs_costs_nb217; assert_in_epsilon(8.907675087214063, worksheet.outputs_costs_nb217, 0.002); end
  def test_outputs_costs_nb218; assert_in_epsilon(2.4758993428727107, worksheet.outputs_costs_nb218, 0.002); end
  def test_outputs_costs_nb219; assert_in_delta(0.0, (worksheet.outputs_costs_nb219||0), 0.002); end
  def test_outputs_costs_nb220; assert_in_delta(0.0, (worksheet.outputs_costs_nb220||0), 0.002); end
  def test_outputs_costs_nb221; assert_in_delta(0.0, (worksheet.outputs_costs_nb221||0), 0.002); end
  def test_outputs_costs_nb222; assert_in_epsilon(1.469245358321318, worksheet.outputs_costs_nb222, 0.002); end
  def test_outputs_costs_nb223; assert_in_delta(0.0, (worksheet.outputs_costs_nb223||0), 0.002); end
  def test_outputs_costs_nb224; assert_in_epsilon(297.3539648600467, worksheet.outputs_costs_nb224, 0.002); end
  def test_outputs_costs_nb225; assert_in_epsilon(92.88183756937879, worksheet.outputs_costs_nb225, 0.002); end
  def test_outputs_costs_nb226; assert_in_epsilon(46.240578202342306, worksheet.outputs_costs_nb226, 0.002); end
  def test_outputs_costs_nb227; assert_in_epsilon(827.676596452399, worksheet.outputs_costs_nb227, 0.002); end
  def test_outputs_costs_nb228; assert_in_epsilon(13.049665475382312, worksheet.outputs_costs_nb228, 0.002); end
  def test_outputs_costs_nb229; assert_in_epsilon(35.7351243764001, worksheet.outputs_costs_nb229, 0.002); end
  def test_outputs_costs_nb230; assert_in_epsilon(167.85890639901865, worksheet.outputs_costs_nb230, 0.002); end
  def test_outputs_costs_nb231; assert_in_epsilon(61.41854840841203, worksheet.outputs_costs_nb231, 0.002); end
  def test_outputs_costs_nb232; assert_in_epsilon(47.52620602343951, worksheet.outputs_costs_nb232, 0.002); end
  def test_outputs_costs_nb233; assert_in_epsilon(174.37112539845225, worksheet.outputs_costs_nb233, 0.002); end
  def test_outputs_costs_nb449; assert_in_epsilon(116.67827852198339, worksheet.outputs_costs_nb449, 0.002); end
  def test_outputs_costs_nb450; assert_in_epsilon(251.6367607145052, worksheet.outputs_costs_nb450, 0.002); end
  def test_outputs_costs_nb451; assert_in_epsilon(212.35118102482562, worksheet.outputs_costs_nb451, 0.002); end
  def test_outputs_costs_nb452; assert_in_epsilon(2742.3934120648682, worksheet.outputs_costs_nb452, 0.002); end
  def test_outputs_costs_nb453; assert_in_epsilon(77.06300847980012, worksheet.outputs_costs_nb453, 0.002); end
  def test_outputs_costs_nb454; assert_in_epsilon(265.1663256644752, worksheet.outputs_costs_nb454, 0.002); end
  def test_outputs_costs_nb455; assert_in_epsilon(132.0396474539993, worksheet.outputs_costs_nb455, 0.002); end
  def test_outputs_costs_nb456; assert_in_delta(0.0, (worksheet.outputs_costs_nb456||0), 0.002); end
  def test_outputs_costs_nb457; assert_in_epsilon(558.8797682764915, worksheet.outputs_costs_nb457, 0.002); end
  def test_outputs_costs_nb458; assert_in_epsilon(21.711803271139587, worksheet.outputs_costs_nb458, 0.002); end
  def test_outputs_costs_nb459; assert_in_epsilon(28.900618953977265, worksheet.outputs_costs_nb459, 0.002); end
  def test_outputs_costs_nb460; assert_in_epsilon(8.911682778680813, worksheet.outputs_costs_nb460, 0.002); end
  def test_outputs_costs_nb461; assert_in_delta(0.0, (worksheet.outputs_costs_nb461||0), 0.002); end
  def test_outputs_costs_nb462; assert_in_epsilon(6.78831178640934, worksheet.outputs_costs_nb462, 0.002); end
  def test_outputs_costs_nb463; assert_in_epsilon(61.240899741798344, worksheet.outputs_costs_nb463, 0.002); end
  def test_outputs_costs_nb464; assert_in_epsilon(46.140748691484035, worksheet.outputs_costs_nb464, 0.002); end
  def test_outputs_costs_nb465; assert_in_epsilon(138.11511523293956, worksheet.outputs_costs_nb465, 0.002); end
  def test_outputs_costs_nb466; assert_in_epsilon(110.56837222298793, worksheet.outputs_costs_nb466, 0.002); end
  def test_outputs_costs_nb467; assert_in_epsilon(1377.4090777643917, worksheet.outputs_costs_nb467, 0.002); end
  def test_outputs_costs_nb468; assert_in_epsilon(33.68903051091, worksheet.outputs_costs_nb468, 0.002); end
  def test_outputs_costs_nb469; assert_in_epsilon(126.50490285127535, worksheet.outputs_costs_nb469, 0.002); end
  def test_outputs_costs_nb470; assert_in_epsilon(60.98490421179982, worksheet.outputs_costs_nb470, 0.002); end
  def test_outputs_costs_nb471; assert_in_delta(0.0, (worksheet.outputs_costs_nb471||0), 0.002); end
  def test_outputs_costs_nb472; assert_in_epsilon(89.02899120251678, worksheet.outputs_costs_nb472, 0.002); end
  def test_outputs_costs_nb473; assert_in_epsilon(3.569508644778115, worksheet.outputs_costs_nb473, 0.002); end
  def test_outputs_costs_nb474; assert_in_epsilon(4.6058493027486405, worksheet.outputs_costs_nb474, 0.002); end
  def test_outputs_costs_nb475; assert_in_epsilon(1.4088083159820872, worksheet.outputs_costs_nb475, 0.002); end
  def test_outputs_costs_nb476; assert_in_delta(0.0, (worksheet.outputs_costs_nb476||0), 0.002); end
  def test_outputs_costs_nb477; assert_in_epsilon(44.14628507191402, worksheet.outputs_costs_nb477, 0.002); end
  def test_outputs_costs_nb478; assert_in_epsilon(89.5124581391896, worksheet.outputs_costs_nb478, 0.002); end
  def test_outputs_costs_nb479; assert_in_epsilon(254.20265051524177, worksheet.outputs_costs_nb479, 0.002); end
  def test_outputs_costs_nb480; assert_in_delta(0.0, (worksheet.outputs_costs_nb480||0), 0.002); end
  def test_outputs_costs_nb481; assert_in_epsilon(1229.823539047873, worksheet.outputs_costs_nb481, 0.002); end
  def test_outputs_costs_nb482; assert_in_delta(0.0, (worksheet.outputs_costs_nb482||0), 0.002); end
  def test_outputs_costs_nb483; assert_in_epsilon(59.654280981139614, worksheet.outputs_costs_nb483, 0.002); end
  def test_outputs_costs_nb484; assert_in_epsilon(55.99824501748544, worksheet.outputs_costs_nb484, 0.002); end
  def test_outputs_costs_nb485; assert_in_epsilon(687.6883457867402, worksheet.outputs_costs_nb485, 0.002); end
  def test_outputs_costs_nb486; assert_in_epsilon(47.99144951246687, worksheet.outputs_costs_nb486, 0.002); end
  def test_outputs_costs_nb487; assert_in_epsilon(63.383377233928286, worksheet.outputs_costs_nb487, 0.002); end
  def test_outputs_costs_nb488; assert_in_delta(0.3269777017833293, worksheet.outputs_costs_nb488, 0.002); end
  def test_outputs_costs_nb489; assert_in_delta(0.3459202284032735, worksheet.outputs_costs_nb489, 0.002); end
  def test_outputs_costs_nb490; assert_in_epsilon(574.605927692684, worksheet.outputs_costs_nb490, 0.002); end
  def test_outputs_costs_nb491; assert_in_epsilon(51.60273780297634, worksheet.outputs_costs_nb491, 0.002); end
  def test_outputs_costs_nb492; assert_in_epsilon(63.66260026227721, worksheet.outputs_costs_nb492, 0.002); end
  def test_outputs_costs_nb493; assert_in_delta(0.15210366685531193, worksheet.outputs_costs_nb493, 0.002); end
  def test_outputs_costs_nb494; assert_in_delta(0.3149264604040836, worksheet.outputs_costs_nb494, 0.002); end
  def test_outputs_costs_nb495; assert_in_epsilon(104.91288606364706, worksheet.outputs_costs_nb495, 0.002); end
  def test_outputs_costs_nb496; assert_in_epsilon(157.28701354219254, worksheet.outputs_costs_nb496, 0.002); end
  def test_outputs_costs_nb497; assert_in_epsilon(279.13698694537993, worksheet.outputs_costs_nb497, 0.002); end
  def test_outputs_costs_nb498; assert_in_epsilon(9.67267815120499, worksheet.outputs_costs_nb498, 0.002); end
  def test_outputs_costs_nb499; assert_in_epsilon(211.82403117881196, worksheet.outputs_costs_nb499, 0.002); end
  def test_outputs_costs_nb500; assert_in_epsilon(19.187043390667025, worksheet.outputs_costs_nb500, 0.002); end
  def test_outputs_costs_nb501; assert_in_epsilon(23.68560876351045, worksheet.outputs_costs_nb501, 0.002); end
  def test_outputs_costs_nb502; assert_in_delta(0.0002698606033935662, worksheet.outputs_costs_nb502, 0.002); end
  def test_outputs_costs_nb503; assert_in_delta(0.12254021740581449, worksheet.outputs_costs_nb503, 0.002); end
  def test_outputs_costs_nb504; assert_in_epsilon(8.522229795017944, worksheet.outputs_costs_nb504, 0.002); end
  def test_outputs_costs_nb505; assert_in_epsilon(12.87790205345261, worksheet.outputs_costs_nb505, 0.002); end
  def test_outputs_costs_nb506; assert_in_epsilon(1479.7156514747412, worksheet.outputs_costs_nb506, 0.002); end
  def test_outputs_costs_nb507; assert_in_delta(0.0, (worksheet.outputs_costs_nb507||0), 0.002); end
  def test_outputs_costs_nb508; assert_in_epsilon(105.72277080670641, worksheet.outputs_costs_nb508, 0.002); end
  def test_outputs_costs_nb509; assert_in_delta(0.0, (worksheet.outputs_costs_nb509||0), 0.002); end
  def test_outputs_costs_nb510; assert_in_epsilon(6071.562202455743, worksheet.outputs_costs_nb510, 0.002); end
  def test_outputs_costs_nb511; assert_in_epsilon(579.5491134061575, worksheet.outputs_costs_nb511, 0.002); end
  def test_outputs_costs_nb512; assert_in_epsilon(1504.0043487529579, worksheet.outputs_costs_nb512, 0.002); end
  def test_outputs_costs_nb513; assert_in_epsilon(35.024099406304906, worksheet.outputs_costs_nb513, 0.002); end
  def test_outputs_costs_nb514; assert_in_epsilon(246.0606042781823, worksheet.outputs_costs_nb514, 0.002); end
  def test_outputs_costs_nb515; assert_in_epsilon(1005.8665649567505, worksheet.outputs_costs_nb515, 0.002); end
  def test_outputs_costs_nb516; assert_in_epsilon(64.38480968370166, worksheet.outputs_costs_nb516, 0.002); end
  def test_outputs_costs_nb517; assert_in_epsilon(106.78462929069765, worksheet.outputs_costs_nb517, 0.002); end
  def test_outputs_costs_nb518; assert_in_epsilon(8.941420393454628, worksheet.outputs_costs_nb518, 0.002); end
  def test_outputs_costs_nb519; assert_in_epsilon(120.27241514966161, worksheet.outputs_costs_nb519, 0.002); end
  def test_outputs_costs_nb520; assert_in_epsilon(172.3661737467919, worksheet.outputs_costs_nb520, 0.002); end
  def test_outputs_costs_nb521; assert_in_epsilon(48.060103636626664, worksheet.outputs_costs_nb521, 0.002); end
  def test_outputs_costs_nb522; assert_in_epsilon(121.20748872826229, worksheet.outputs_costs_nb522, 0.002); end
  def test_outputs_costs_nb523; assert_in_epsilon(9.953416997353777, worksheet.outputs_costs_nb523, 0.002); end
  def test_outputs_costs_nb524; assert_in_epsilon(50.60814139657252, worksheet.outputs_costs_nb524, 0.002); end
  def test_outputs_costs_nb525; assert_in_epsilon(2.16648909737095, worksheet.outputs_costs_nb525, 0.002); end
  def test_outputs_costs_nb526; assert_in_delta(0.0, (worksheet.outputs_costs_nb526||0), 0.002); end
  def test_outputs_costs_nb527; assert_in_epsilon(435.3733536060978, worksheet.outputs_costs_nb527, 0.002); end
  def test_outputs_costs_nb528; assert_in_epsilon(13.496016510626095, worksheet.outputs_costs_nb528, 0.002); end
  def test_outputs_costs_nb529; assert_in_epsilon(32.24357683359926, worksheet.outputs_costs_nb529, 0.002); end
  def test_outputs_costs_nb530; assert_in_epsilon(100.47166831623778, worksheet.outputs_costs_nb530, 0.002); end
  def test_outputs_costs_nb531; assert_in_epsilon(3.3246465940718224, worksheet.outputs_costs_nb531, 0.002); end
  def test_outputs_costs_nb532; assert_in_epsilon(7.941783138958304, worksheet.outputs_costs_nb532, 0.002); end
  def test_outputs_costs_nb533; assert_in_epsilon(110.44446960790587, worksheet.outputs_costs_nb533, 0.002); end
  def test_outputs_costs_nb534; assert_in_epsilon(174.05690607850082, worksheet.outputs_costs_nb534, 0.002); end
  def test_outputs_costs_nb535; assert_in_epsilon(192.62618196120894, worksheet.outputs_costs_nb535, 0.002); end
  def test_outputs_costs_nb536; assert_in_epsilon(324.77850918404465, worksheet.outputs_costs_nb536, 0.002); end
  def test_outputs_costs_nb537; assert_in_epsilon(68.85702184777509, worksheet.outputs_costs_nb537, 0.002); end
  def test_outputs_costs_nb538; assert_in_epsilon(62.542864849188845, worksheet.outputs_costs_nb538, 0.002); end
  def test_outputs_costs_nb539; assert_in_epsilon(11.522683997260032, worksheet.outputs_costs_nb539, 0.002); end
  def test_outputs_costs_nb540; assert_in_epsilon(307.22141329008366, worksheet.outputs_costs_nb540, 0.002); end
  def test_outputs_costs_nb541; assert_in_epsilon(20.00943153286885, worksheet.outputs_costs_nb541, 0.002); end
  def test_outputs_costs_nb542; assert_in_epsilon(1.0271074454637006, worksheet.outputs_costs_nb542, 0.002); end
  def test_outputs_costs_nb543; assert_in_epsilon(8.133536685905167, worksheet.outputs_costs_nb543, 0.002); end
  def test_outputs_costs_nb544; assert_in_epsilon(11.019133338254976, worksheet.outputs_costs_nb544, 0.002); end
  def test_outputs_costs_nb545; assert_in_epsilon(27.017925141995683, worksheet.outputs_costs_nb545, 0.002); end
  def test_outputs_costs_nb546; assert_in_delta(0.0, (worksheet.outputs_costs_nb546||0), 0.002); end
  def test_outputs_costs_nb547; assert_in_epsilon(230.1115637058198, worksheet.outputs_costs_nb547, 0.002); end
  def test_outputs_costs_nb548; assert_in_epsilon(162.40001269388418, worksheet.outputs_costs_nb548, 0.002); end
  def test_outputs_costs_nb549; assert_in_epsilon(221.30507238504154, worksheet.outputs_costs_nb549, 0.002); end
  def test_outputs_costs_nb550; assert_in_epsilon(144.74616974335254, worksheet.outputs_costs_nb550, 0.002); end
  def test_outputs_costs_nb551; assert_in_epsilon(780.1085779727796, worksheet.outputs_costs_nb551, 0.002); end
  def test_outputs_costs_nb552; assert_in_epsilon(1187.4225457473167, worksheet.outputs_costs_nb552, 0.002); end
  def test_outputs_costs_nb553; assert_in_epsilon(43.449616094884185, worksheet.outputs_costs_nb553, 0.002); end
  def test_outputs_costs_nb554; assert_in_epsilon(19.838862444847386, worksheet.outputs_costs_nb554, 0.002); end
  def test_outputs_costs_nb555; assert_in_epsilon(54.26563354433152, worksheet.outputs_costs_nb555, 0.002); end
  def test_outputs_costs_nb556; assert_in_epsilon(14.852785688658074, worksheet.outputs_costs_nb556, 0.002); end
  def test_outputs_costs_nb557; assert_in_epsilon(156.14515327766105, worksheet.outputs_costs_nb557, 0.002); end
  def test_outputs_costs_nb558; assert_in_epsilon(266.09889204840124, worksheet.outputs_costs_nb558, 0.002); end
  def test_outputs_costs_nb559; assert_in_epsilon(10.123071041787849, worksheet.outputs_costs_nb559, 0.002); end
  def test_outputs_costs_nb560; assert_in_epsilon(38.51150264783574, worksheet.outputs_costs_nb560, 0.002); end
  def test_outputs_costs_nb561; assert_in_epsilon(107.29728788113832, worksheet.outputs_costs_nb561, 0.002); end
  def test_outputs_costs_nb562; assert_in_epsilon(87.42105914817037, worksheet.outputs_costs_nb562, 0.002); end
  def test_outputs_costs_nb563; assert_in_epsilon(17.279644598146696, worksheet.outputs_costs_nb563, 0.002); end
  def test_outputs_costs_nb564; assert_in_epsilon(2.8483412808340187, worksheet.outputs_costs_nb564, 0.002); end
  def test_outputs_costs_nb565; assert_in_epsilon(6.010948308137517, worksheet.outputs_costs_nb565, 0.002); end
  def test_outputs_costs_nb566; assert_in_epsilon(2.510398802865647, worksheet.outputs_costs_nb566, 0.002); end
  def test_outputs_costs_nb567; assert_in_epsilon(4.165782154394047, worksheet.outputs_costs_nb567, 0.002); end
  def test_outputs_costs_nb568; assert_in_epsilon(26.436620191247457, worksheet.outputs_costs_nb568, 0.002); end
  def test_outputs_costs_nb569; assert_in_epsilon(25.272721977954873, worksheet.outputs_costs_nb569, 0.002); end
  def test_outputs_costs_nb570; assert_in_epsilon(1.0006767251601028, worksheet.outputs_costs_nb570, 0.002); end
  def test_outputs_costs_nb571; assert_in_epsilon(14.970392050565435, worksheet.outputs_costs_nb571, 0.002); end
  def test_outputs_costs_nb572; assert_in_epsilon(1.3473960684556454, worksheet.outputs_costs_nb572, 0.002); end
  def test_outputs_costs_nb573; assert_in_epsilon(4.7536239273327485, worksheet.outputs_costs_nb573, 0.002); end
  def test_outputs_costs_nb574; assert_in_delta(0.17332833795150365, worksheet.outputs_costs_nb574, 0.002); end
  def test_outputs_costs_nb575; assert_in_epsilon(1.4903409985014464, worksheet.outputs_costs_nb575, 0.002); end
  def test_outputs_costs_nb576; assert_in_delta(0.09390085405220974, worksheet.outputs_costs_nb576, 0.002); end
  def test_outputs_costs_nb577; assert_in_epsilon(7.2706813748515975, worksheet.outputs_costs_nb577, 0.002); end
  def test_outputs_costs_nb578; assert_in_epsilon(29.08272549940639, worksheet.outputs_costs_nb578, 0.002); end
  def test_outputs_costs_nb579; assert_in_epsilon(19.43731686917368, worksheet.outputs_costs_nb579, 0.002); end
  def test_outputs_costs_nb580; assert_in_epsilon(77.74926747669473, worksheet.outputs_costs_nb580, 0.002); end
  def test_outputs_costs_nb581; assert_in_epsilon(3.0734157361130334, worksheet.outputs_costs_nb581, 0.002); end
  def test_outputs_costs_nb582; assert_in_epsilon(8.471346617984661, worksheet.outputs_costs_nb582, 0.002); end
  def test_outputs_costs_nb583; assert_in_delta(0.3434526231153455, worksheet.outputs_costs_nb583, 0.002); end
  def test_outputs_costs_nb584; assert_in_epsilon(4.716120051048262, worksheet.outputs_costs_nb584, 0.002); end
  def test_outputs_costs_nb585; assert_in_epsilon(25.378698999890496, worksheet.outputs_costs_nb585, 0.002); end
  def test_outputs_costs_nb586; assert_in_epsilon(22.55170285546583, worksheet.outputs_costs_nb586, 0.002); end
  def test_outputs_costs_nb587; assert_in_delta(0.0, (worksheet.outputs_costs_nb587||0), 0.002); end
  def test_outputs_costs_nb588; assert_in_delta(0.1285900288543396, worksheet.outputs_costs_nb588, 0.002); end
  def test_outputs_costs_nb589; assert_in_delta(0.1183656608015222, worksheet.outputs_costs_nb589, 0.002); end
  def test_outputs_costs_nb590; assert_in_epsilon(7.044433159206756, worksheet.outputs_costs_nb590, 0.002); end
  def test_outputs_costs_nb591; assert_in_delta(0.0027710574286227106, worksheet.outputs_costs_nb591, 0.002); end
  def test_outputs_costs_nb592; assert_in_delta(0.004155320983677555, worksheet.outputs_costs_nb592, 0.002); end
  def test_outputs_costs_nb593; assert_in_epsilon(17.21831944095787, worksheet.outputs_costs_nb593, 0.002); end
  def test_outputs_costs_nb594; assert_in_epsilon(1.0960028351984643, worksheet.outputs_costs_nb594, 0.002); end
  def test_outputs_costs_nb595; assert_in_epsilon(5.643161432861793, worksheet.outputs_costs_nb595, 0.002); end
  def test_outputs_costs_nb596; assert_in_epsilon(1.3557878149848324, worksheet.outputs_costs_nb596, 0.002); end
  def test_outputs_costs_nb597; assert_in_epsilon(651.7387157489444, worksheet.outputs_costs_nb597, 0.002); end
  def test_outputs_costs_nb598; assert_in_epsilon(2.4172534467822326, worksheet.outputs_costs_nb598, 0.002); end
  def test_outputs_costs_nb599; assert_in_delta(0.6494598067701002, worksheet.outputs_costs_nb599, 0.002); end
  def test_outputs_costs_nb600; assert_in_epsilon(1.0299952708908686, worksheet.outputs_costs_nb600, 0.002); end
  def test_outputs_costs_nb601; assert_in_delta(0.5226164364066439, worksheet.outputs_costs_nb601, 0.002); end
  def test_outputs_costs_nb602; assert_in_delta(0.6193585848422212, worksheet.outputs_costs_nb602, 0.002); end
  def test_outputs_costs_nb603; assert_in_epsilon(3.848082742165064, worksheet.outputs_costs_nb603, 0.002); end
  def test_outputs_costs_nb604; assert_in_epsilon(92.98456951385126, worksheet.outputs_costs_nb604, 0.002); end
  def test_outputs_costs_nb605; assert_in_epsilon(32.684642269077315, worksheet.outputs_costs_nb605, 0.002); end
  def test_outputs_costs_nb606; assert_in_epsilon(-3.433795102198782, worksheet.outputs_costs_nb606, 0.002); end
  def test_outputs_costs_nb607; assert_in_epsilon(2.013547431106774, worksheet.outputs_costs_nb607, 0.002); end
  def test_outputs_costs_nb608; assert_in_delta(0.6781042466988825, worksheet.outputs_costs_nb608, 0.002); end
  def test_outputs_costs_nb609; assert_in_epsilon(9.267466717105883, worksheet.outputs_costs_nb609, 0.002); end
  def test_outputs_costs_nb610; assert_in_delta(0.10647268584738533, worksheet.outputs_costs_nb610, 0.002); end
  def test_outputs_costs_nb611; assert_in_delta(0.0030997508723788576, worksheet.outputs_costs_nb611, 0.002); end
  def test_outputs_costs_nb612; assert_in_delta(0.0008024104228766951, worksheet.outputs_costs_nb612, 0.002); end
  def test_outputs_costs_nb613; assert_in_delta(0.0007333675774663819, worksheet.outputs_costs_nb613, 0.002); end
  def test_outputs_costs_nb614; assert_in_delta(0.015196511800700974, worksheet.outputs_costs_nb614, 0.002); end
  def test_outputs_costs_nb615; assert_in_epsilon(17.92185262690665, worksheet.outputs_costs_nb615, 0.002); end
  def test_outputs_costs_nb616; assert_in_epsilon(19.09112174170602, worksheet.outputs_costs_nb616, 0.002); end
  def test_outputs_costs_nb617; assert_in_epsilon(4.079062878657228, worksheet.outputs_costs_nb617, 0.002); end
  def test_outputs_costs_nb618; assert_in_epsilon(10.992923271638968, worksheet.outputs_costs_nb618, 0.002); end
  def test_outputs_costs_nb619; assert_in_epsilon(24.952093152280256, worksheet.outputs_costs_nb619, 0.002); end
  def test_outputs_costs_nb620; assert_in_epsilon(186.57600817897458, worksheet.outputs_costs_nb620, 0.002); end
  def test_outputs_costs_nb621; assert_in_epsilon(93.72398698517978, worksheet.outputs_costs_nb621, 0.002); end
  def test_outputs_costs_nb622; assert_in_epsilon(223.050596516427, worksheet.outputs_costs_nb622, 0.002); end
  def test_outputs_costs_nb623; assert_in_epsilon(1275.5760875416295, worksheet.outputs_costs_nb623, 0.002); end
  def test_outputs_costs_nb624; assert_in_epsilon(23.829936244989966, worksheet.outputs_costs_nb624, 0.002); end
  def test_outputs_costs_nb625; assert_in_epsilon(184.6276049948319, worksheet.outputs_costs_nb625, 0.002); end
  def test_outputs_costs_nb626; assert_in_epsilon(792.7264183025446, worksheet.outputs_costs_nb626, 0.002); end
  def test_outputs_costs_nb627; assert_in_epsilon(123.19314190088329, worksheet.outputs_costs_nb627, 0.002); end
  def test_outputs_costs_nb628; assert_in_epsilon(8.52275292615301, worksheet.outputs_costs_nb628, 0.002); end
  def test_outputs_costs_nb629; assert_in_epsilon(2.3479016762369245, worksheet.outputs_costs_nb629, 0.002); end
  def test_outputs_costs_nb630; assert_in_delta(0.0, (worksheet.outputs_costs_nb630||0), 0.002); end
  def test_outputs_costs_nb631; assert_in_delta(0.0, (worksheet.outputs_costs_nb631||0), 0.002); end
  def test_outputs_costs_nb632; assert_in_delta(0.0, (worksheet.outputs_costs_nb632||0), 0.002); end
  def test_outputs_costs_nb633; assert_in_epsilon(1.2220003488742965, worksheet.outputs_costs_nb633, 0.002); end
  def test_outputs_costs_nb634; assert_in_delta(0.0, (worksheet.outputs_costs_nb634||0), 0.002); end
  def test_outputs_costs_nb635; assert_in_epsilon(151.15108646544655, worksheet.outputs_costs_nb635, 0.002); end
  def test_outputs_costs_nb636; assert_in_epsilon(15.937649730639542, worksheet.outputs_costs_nb636, 0.002); end
  def test_outputs_costs_nb637; assert_in_epsilon(25.796556597910488, worksheet.outputs_costs_nb637, 0.002); end
  def test_outputs_costs_nb638; assert_in_epsilon(418.4216877917368, worksheet.outputs_costs_nb638, 0.002); end
  def test_outputs_costs_nb639; assert_in_epsilon(3.229784119798925, worksheet.outputs_costs_nb639, 0.002); end
  def test_outputs_costs_nb640; assert_in_epsilon(17.9532812182982, worksheet.outputs_costs_nb640, 0.002); end
  def test_outputs_costs_nb641; assert_in_epsilon(59.066284628922965, worksheet.outputs_costs_nb641, 0.002); end
  def test_outputs_costs_nb642; assert_in_epsilon(29.942093803561107, worksheet.outputs_costs_nb642, 0.002); end
  def test_outputs_costs_nb643; assert_in_epsilon(29.15578893663437, worksheet.outputs_costs_nb643, 0.002); end
  def test_outputs_costs_nb644; assert_in_epsilon(90.41979843144495, worksheet.outputs_costs_nb644, 0.002); end
  def test_outputs_costs_nb242; assert_in_epsilon(143.99899507561108, worksheet.outputs_costs_nb242, 0.002); end
  def test_outputs_costs_nb243; assert_in_epsilon(311.7870405119707, worksheet.outputs_costs_nb243, 0.002); end
  def test_outputs_costs_nb244; assert_in_epsilon(263.4926392742669, worksheet.outputs_costs_nb244, 0.002); end
  def test_outputs_costs_nb245; assert_in_epsilon(3847.2944191856686, worksheet.outputs_costs_nb245, 0.002); end
  def test_outputs_costs_nb246; assert_in_epsilon(95.57104996686677, worksheet.outputs_costs_nb246, 0.002); end
  def test_outputs_costs_nb247; assert_in_epsilon(352.3764594299689, worksheet.outputs_costs_nb247, 0.002); end
  def test_outputs_costs_nb248; assert_in_epsilon(172.6625443680843, worksheet.outputs_costs_nb248, 0.002); end
  def test_outputs_costs_nb249; assert_in_delta(0.0, (worksheet.outputs_costs_nb249||0), 0.002); end
  def test_outputs_costs_nb250; assert_in_epsilon(687.0466846789493, worksheet.outputs_costs_nb250, 0.002); end
  def test_outputs_costs_nb251; assert_in_epsilon(26.719506364876384, worksheet.outputs_costs_nb251, 0.002); end
  def test_outputs_costs_nb252; assert_in_epsilon(35.10974755526547, worksheet.outputs_costs_nb252, 0.002); end
  def test_outputs_costs_nb253; assert_in_epsilon(10.507488059866198, worksheet.outputs_costs_nb253, 0.002); end
  def test_outputs_costs_nb254; assert_in_delta(0.0, (worksheet.outputs_costs_nb254||0), 0.002); end
  def test_outputs_costs_nb255; assert_in_epsilon(7.925771830674338, worksheet.outputs_costs_nb255, 0.002); end
  def test_outputs_costs_nb256; assert_in_epsilon(71.4851630502617, worksheet.outputs_costs_nb256, 0.002); end
  def test_outputs_costs_nb257; assert_in_epsilon(56.73719220527643, worksheet.outputs_costs_nb257, 0.002); end
  def test_outputs_costs_nb258; assert_in_epsilon(171.07091308785942, worksheet.outputs_costs_nb258, 0.002); end
  def test_outputs_costs_nb259; assert_in_epsilon(137.13687218784963, worksheet.outputs_costs_nb259, 0.002); end
  def test_outputs_costs_nb260; assert_in_epsilon(1706.939182097115, worksheet.outputs_costs_nb260, 0.002); end
  def test_outputs_costs_nb261; assert_in_epsilon(41.777059504968086, worksheet.outputs_costs_nb261, 0.002); end
  def test_outputs_costs_nb262; assert_in_epsilon(156.4031667982651, worksheet.outputs_costs_nb262, 0.002); end
  def test_outputs_costs_nb263; assert_in_epsilon(75.11221091098494, worksheet.outputs_costs_nb263, 0.002); end
  def test_outputs_costs_nb264; assert_in_delta(0.0, (worksheet.outputs_costs_nb264||0), 0.002); end
  def test_outputs_costs_nb265; assert_in_epsilon(109.47431237823614, worksheet.outputs_costs_nb265, 0.002); end
  def test_outputs_costs_nb266; assert_in_epsilon(4.395501434196103, worksheet.outputs_costs_nb266, 0.002); end
  def test_outputs_costs_nb267; assert_in_epsilon(5.597041174020416, worksheet.outputs_costs_nb267, 0.002); end
  def test_outputs_costs_nb268; assert_in_epsilon(1.6622988614514154, worksheet.outputs_costs_nb268, 0.002); end
  def test_outputs_costs_nb269; assert_in_delta(0.0, (worksheet.outputs_costs_nb269||0), 0.002); end
  def test_outputs_costs_nb270; assert_in_epsilon(51.68107565588781, worksheet.outputs_costs_nb270, 0.002); end
  def test_outputs_costs_nb271; assert_in_epsilon(104.77931815417332, worksheet.outputs_costs_nb271, 0.002); end
  def test_outputs_costs_nb272; assert_in_epsilon(309.11649406114384, worksheet.outputs_costs_nb272, 0.002); end
  def test_outputs_costs_nb273; assert_in_delta(0.0, (worksheet.outputs_costs_nb273||0), 0.002); end
  def test_outputs_costs_nb274; assert_in_epsilon(1500.6227128754729, worksheet.outputs_costs_nb274, 0.002); end
  def test_outputs_costs_nb275; assert_in_delta(0.0, (worksheet.outputs_costs_nb275||0), 0.002); end
  def test_outputs_costs_nb276; assert_in_epsilon(72.69466636596292, worksheet.outputs_costs_nb276, 0.002); end
  def test_outputs_costs_nb277; assert_in_epsilon(67.64457785616062, worksheet.outputs_costs_nb277, 0.002); end
  def test_outputs_costs_nb278; assert_in_epsilon(851.8420774031679, worksheet.outputs_costs_nb278, 0.002); end
  def test_outputs_costs_nb279; assert_in_epsilon(59.512746945334406, worksheet.outputs_costs_nb279, 0.002); end
  def test_outputs_costs_nb280; assert_in_epsilon(78.33479890308334, worksheet.outputs_costs_nb280, 0.002); end
  def test_outputs_costs_nb281; assert_in_delta(0.37698740537431596, worksheet.outputs_costs_nb281, 0.002); end
  def test_outputs_costs_nb282; assert_in_delta(0.3853158819445532, worksheet.outputs_costs_nb282, 0.002); end
  def test_outputs_costs_nb283; assert_in_epsilon(711.326828524361, worksheet.outputs_costs_nb283, 0.002); end
  def test_outputs_costs_nb284; assert_in_epsilon(63.95988639834508, worksheet.outputs_costs_nb284, 0.002); end
  def test_outputs_costs_nb285; assert_in_epsilon(78.49117861635024, worksheet.outputs_costs_nb285, 0.002); end
  def test_outputs_costs_nb286; assert_in_delta(0.17644755864788128, worksheet.outputs_costs_nb286, 0.002); end
  def test_outputs_costs_nb287; assert_in_delta(0.3507799551326106, worksheet.outputs_costs_nb287, 0.002); end
  def test_outputs_costs_nb288; assert_in_epsilon(122.54642284322524, worksheet.outputs_costs_nb288, 0.002); end
  def test_outputs_costs_nb289; assert_in_epsilon(183.6027999177263, worksheet.outputs_costs_nb289, 0.002); end
  def test_outputs_costs_nb290; assert_in_epsilon(314.8391816720052, worksheet.outputs_costs_nb290, 0.002); end
  def test_outputs_costs_nb291; assert_in_epsilon(9.889360448140787, worksheet.outputs_costs_nb291, 0.002); end
  def test_outputs_costs_nb292; assert_in_epsilon(262.1798073064463, worksheet.outputs_costs_nb292, 0.002); end
  def test_outputs_costs_nb293; assert_in_epsilon(23.77719279097547, worksheet.outputs_costs_nb293, 0.002); end
  def test_outputs_costs_nb294; assert_in_epsilon(29.19378805930875, worksheet.outputs_costs_nb294, 0.002); end
  def test_outputs_costs_nb295; assert_in_delta(0.00031302225170951243, worksheet.outputs_costs_nb295, 0.002); end
  def test_outputs_costs_nb296; assert_in_delta(0.13647689989475958, worksheet.outputs_costs_nb296, 0.002); end
  def test_outputs_costs_nb297; assert_in_epsilon(9.93563452259885, worksheet.outputs_costs_nb297, 0.002); end
  def test_outputs_costs_nb298; assert_in_epsilon(15.005814015815275, worksheet.outputs_costs_nb298, 0.002); end
  def test_outputs_costs_nb299; assert_in_epsilon(1677.145971575665, worksheet.outputs_costs_nb299, 0.002); end
  def test_outputs_costs_nb300; assert_in_delta(0.0, (worksheet.outputs_costs_nb300||0), 0.002); end
  def test_outputs_costs_nb301; assert_in_epsilon(127.76985143698593, worksheet.outputs_costs_nb301, 0.002); end
  def test_outputs_costs_nb302; assert_in_delta(0.0, (worksheet.outputs_costs_nb302||0), 0.002); end
  def test_outputs_costs_nb303; assert_in_epsilon(10086.609861578227, worksheet.outputs_costs_nb303, 0.002); end
  def test_outputs_costs_nb304; assert_in_epsilon(872.2683888068667, worksheet.outputs_costs_nb304, 0.002); end
  def test_outputs_costs_nb305; assert_in_epsilon(2649.640208716384, worksheet.outputs_costs_nb305, 0.002); end
  def test_outputs_costs_nb306; assert_in_epsilon(41.26365791808723, worksheet.outputs_costs_nb306, 0.002); end
  def test_outputs_costs_nb307; assert_in_epsilon(301.7282323020804, worksheet.outputs_costs_nb307, 0.002); end
  def test_outputs_costs_nb308; assert_in_epsilon(1234.058583202066, worksheet.outputs_costs_nb308, 0.002); end
  def test_outputs_costs_nb309; assert_in_epsilon(79.56557632313424, worksheet.outputs_costs_nb309, 0.002); end
  def test_outputs_costs_nb310; assert_in_epsilon(132.21706374034278, worksheet.outputs_costs_nb310, 0.002); end
  def test_outputs_costs_nb311; assert_in_epsilon(10.991819095097679, worksheet.outputs_costs_nb311, 0.002); end
  def test_outputs_costs_nb312; assert_in_epsilon(144.80968459739046, worksheet.outputs_costs_nb312, 0.002); end
  def test_outputs_costs_nb313; assert_in_epsilon(205.40948253428724, worksheet.outputs_costs_nb313, 0.002); end
  def test_outputs_costs_nb314; assert_in_epsilon(58.81299111394146, worksheet.outputs_costs_nb314, 0.002); end
  def test_outputs_costs_nb315; assert_in_epsilon(148.46149323788097, worksheet.outputs_costs_nb315, 0.002); end
  def test_outputs_costs_nb316; assert_in_epsilon(12.29511736133895, worksheet.outputs_costs_nb316, 0.002); end
  def test_outputs_costs_nb317; assert_in_epsilon(62.638374497261715, worksheet.outputs_costs_nb317, 0.002); end
  def test_outputs_costs_nb318; assert_in_epsilon(2.657687728712899, worksheet.outputs_costs_nb318, 0.002); end
  def test_outputs_costs_nb319; assert_in_delta(0.0, (worksheet.outputs_costs_nb319||0), 0.002); end
  def test_outputs_costs_nb320; assert_in_epsilon(538.5791695701749, worksheet.outputs_costs_nb320, 0.002); end
  def test_outputs_costs_nb321; assert_in_epsilon(16.716997535057985, worksheet.outputs_costs_nb321, 0.002); end
  def test_outputs_costs_nb322; assert_in_epsilon(39.93866785287072, worksheet.outputs_costs_nb322, 0.002); end
  def test_outputs_costs_nb323; assert_in_epsilon(124.17151524666426, worksheet.outputs_costs_nb323, 0.002); end
  def test_outputs_costs_nb324; assert_in_epsilon(4.115192961413462, worksheet.outputs_costs_nb324, 0.002); end
  def test_outputs_costs_nb325; assert_in_epsilon(9.830156863249917, worksheet.outputs_costs_nb325, 0.002); end
  def test_outputs_costs_nb326; assert_in_epsilon(132.29371539935264, worksheet.outputs_costs_nb326, 0.002); end
  def test_outputs_costs_nb327; assert_in_epsilon(213.42988466134932, worksheet.outputs_costs_nb327, 0.002); end
  def test_outputs_costs_nb328; assert_in_epsilon(235.74837614333308, worksheet.outputs_costs_nb328, 0.002); end
  def test_outputs_costs_nb329; assert_in_epsilon(387.685439083481, worksheet.outputs_costs_nb329, 0.002); end
  def test_outputs_costs_nb330; assert_in_epsilon(84.34962301492612, worksheet.outputs_costs_nb330, 0.002); end
  def test_outputs_costs_nb331; assert_in_epsilon(76.70043401518085, worksheet.outputs_costs_nb331, 0.002); end
  def test_outputs_costs_nb332; assert_in_epsilon(13.978413871558704, worksheet.outputs_costs_nb332, 0.002); end
  def test_outputs_costs_nb333; assert_in_epsilon(366.3345187233964, worksheet.outputs_costs_nb333, 0.002); end
  def test_outputs_costs_nb334; assert_in_epsilon(24.49720685163239, worksheet.outputs_costs_nb334, 0.002); end
  def test_outputs_costs_nb335; assert_in_epsilon(1.2540720329922397, worksheet.outputs_costs_nb335, 0.002); end
  def test_outputs_costs_nb336; assert_in_epsilon(9.76885134652715, worksheet.outputs_costs_nb336, 0.002); end
  def test_outputs_costs_nb337; assert_in_epsilon(13.50196495351742, worksheet.outputs_costs_nb337, 0.002); end
  def test_outputs_costs_nb338; assert_in_epsilon(33.08744949866194, worksheet.outputs_costs_nb338, 0.002); end
  def test_outputs_costs_nb339; assert_in_delta(0.0, (worksheet.outputs_costs_nb339||0), 0.002); end
  def test_outputs_costs_nb340; assert_in_epsilon(284.9685709708718, worksheet.outputs_costs_nb340, 0.002); end
  def test_outputs_costs_nb341; assert_in_epsilon(201.18439269889498, worksheet.outputs_costs_nb341, 0.002); end
  def test_outputs_costs_nb342; assert_in_epsilon(274.1886877553808, worksheet.outputs_costs_nb342, 0.002); end
  def test_outputs_costs_nb343; assert_in_epsilon(179.44075329187257, worksheet.outputs_costs_nb343, 0.002); end
  def test_outputs_costs_nb344; assert_in_epsilon(971.8127584128674, worksheet.outputs_costs_nb344, 0.002); end
  def test_outputs_costs_nb345; assert_in_epsilon(1479.245385655037, worksheet.outputs_costs_nb345, 0.002); end
  def test_outputs_costs_nb346; assert_in_epsilon(53.795091751404776, worksheet.outputs_costs_nb346, 0.002); end
  def test_outputs_costs_nb347; assert_in_epsilon(24.71078990363288, worksheet.outputs_costs_nb347, 0.002); end
  def test_outputs_costs_nb348; assert_in_epsilon(67.22958112749129, worksheet.outputs_costs_nb348, 0.002); end
  def test_outputs_costs_nb349; assert_in_epsilon(18.25835701258891, worksheet.outputs_costs_nb349, 0.002); end
  def test_outputs_costs_nb350; assert_in_epsilon(194.50500734491897, worksheet.outputs_costs_nb350, 0.002); end
  def test_outputs_costs_nb351; assert_in_epsilon(331.44824245462837, worksheet.outputs_costs_nb351, 0.002); end
  def test_outputs_costs_nb352; assert_in_epsilon(12.471465525238209, worksheet.outputs_costs_nb352, 0.002); end
  def test_outputs_costs_nb353; assert_in_epsilon(47.37178141062091, worksheet.outputs_costs_nb353, 0.002); end
  def test_outputs_costs_nb354; assert_in_epsilon(131.99935865505472, worksheet.outputs_costs_nb354, 0.002); end
  def test_outputs_costs_nb355; assert_in_epsilon(108.92015240713718, worksheet.outputs_costs_nb355, 0.002); end
  def test_outputs_costs_nb356; assert_in_epsilon(21.313089093409193, worksheet.outputs_costs_nb356, 0.002); end
  def test_outputs_costs_nb357; assert_in_epsilon(3.5087488860177802, worksheet.outputs_costs_nb357, 0.002); end
  def test_outputs_costs_nb358; assert_in_epsilon(7.383483462924218, worksheet.outputs_costs_nb358, 0.002); end
  def test_outputs_costs_nb359; assert_in_epsilon(3.0860902250705586, worksheet.outputs_costs_nb359, 0.002); end
  def test_outputs_costs_nb360; assert_in_epsilon(5.189583346221044, worksheet.outputs_costs_nb360, 0.002); end
  def test_outputs_costs_nb361; assert_in_epsilon(32.572668525502266, worksheet.outputs_costs_nb361, 0.002); end
  def test_outputs_costs_nb362; assert_in_epsilon(31.55707187553859, worksheet.outputs_costs_nb362, 0.002); end
  def test_outputs_costs_nb363; assert_in_epsilon(1.246803490992725, worksheet.outputs_costs_nb363, 0.002); end
  def test_outputs_costs_nb364; assert_in_epsilon(18.652639516455384, worksheet.outputs_costs_nb364, 0.002); end
  def test_outputs_costs_nb365; assert_in_epsilon(1.6594388389221617, worksheet.outputs_costs_nb365, 0.002); end
  def test_outputs_costs_nb366; assert_in_epsilon(5.933030068303112, worksheet.outputs_costs_nb366, 0.002); end
  def test_outputs_costs_nb367; assert_in_delta(0.21590428623556562, worksheet.outputs_costs_nb367, 0.002); end
  def test_outputs_costs_nb368; assert_in_epsilon(1.8562986850166532, worksheet.outputs_costs_nb368, 0.002); end
  def test_outputs_costs_nb369; assert_in_delta(0.11547538835960092, worksheet.outputs_costs_nb369, 0.002); end
  def test_outputs_costs_nb370; assert_in_epsilon(8.72091123889238, worksheet.outputs_costs_nb370, 0.002); end
  def test_outputs_costs_nb371; assert_in_epsilon(34.88364495556952, worksheet.outputs_costs_nb371, 0.002); end
  def test_outputs_costs_nb372; assert_in_epsilon(23.066020972833552, worksheet.outputs_costs_nb372, 0.002); end
  def test_outputs_costs_nb373; assert_in_epsilon(92.26408389133421, worksheet.outputs_costs_nb373, 0.002); end
  def test_outputs_costs_nb374; assert_in_epsilon(3.794492161211231, worksheet.outputs_costs_nb374, 0.002); end
  def test_outputs_costs_nb375; assert_in_epsilon(10.418778042862293, worksheet.outputs_costs_nb375, 0.002); end
  def test_outputs_costs_nb376; assert_in_delta(0.42593511932093137, worksheet.outputs_costs_nb376, 0.002); end
  def test_outputs_costs_nb377; assert_in_epsilon(5.888929878838122, worksheet.outputs_costs_nb377, 0.002); end
  def test_outputs_costs_nb378; assert_in_epsilon(31.702315353118856, worksheet.outputs_costs_nb378, 0.002); end
  def test_outputs_costs_nb379; assert_in_epsilon(28.169519832748517, worksheet.outputs_costs_nb379, 0.002); end
  def test_outputs_costs_nb380; assert_in_delta(0.0, (worksheet.outputs_costs_nb380||0), 0.002); end
  def test_outputs_costs_nb381; assert_in_delta(0.16058568972837428, worksheet.outputs_costs_nb381, 0.002); end
  def test_outputs_costs_nb382; assert_in_delta(0.14738134371028838, worksheet.outputs_costs_nb382, 0.002); end
  def test_outputs_costs_nb383; assert_in_epsilon(8.796997164231811, worksheet.outputs_costs_nb383, 0.002); end
  def test_outputs_costs_nb384; assert_in_delta(0.0032899755768284428, worksheet.outputs_costs_nb384, 0.002); end
  def test_outputs_costs_nb385; assert_in_delta(0.005148119503700841, worksheet.outputs_costs_nb385, 0.002); end
  def test_outputs_costs_nb386; assert_in_epsilon(21.51886305505478, worksheet.outputs_costs_nb386, 0.002); end
  def test_outputs_costs_nb387; assert_in_epsilon(1.3604818088477721, worksheet.outputs_costs_nb387, 0.002); end
  def test_outputs_costs_nb388; assert_in_epsilon(6.992035070820753, worksheet.outputs_costs_nb388, 0.002); end
  def test_outputs_costs_nb389; assert_in_epsilon(1.670961462968676, worksheet.outputs_costs_nb389, 0.002); end
  def test_outputs_costs_nb390; assert_in_epsilon(806.0990945296437, worksheet.outputs_costs_nb390, 0.002); end
  def test_outputs_costs_nb391; assert_in_epsilon(4.216130873850206, worksheet.outputs_costs_nb391, 0.002); end
  def test_outputs_costs_nb392; assert_in_epsilon(1.1513337900302698, worksheet.outputs_costs_nb392, 0.002); end
  def test_outputs_costs_nb393; assert_in_epsilon(1.411259107505403, worksheet.outputs_costs_nb393, 0.002); end
  def test_outputs_costs_nb394; assert_in_delta(0.8118764199429421, worksheet.outputs_costs_nb394, 0.002); end
  def test_outputs_costs_nb395; assert_in_delta(0.9183846505880572, worksheet.outputs_costs_nb395, 0.002); end
  def test_outputs_costs_nb396; assert_in_epsilon(5.910172191213423, worksheet.outputs_costs_nb396, 0.002); end
  def test_outputs_costs_nb397; assert_in_epsilon(113.149394686426, worksheet.outputs_costs_nb397, 0.002); end
  def test_outputs_costs_nb398; assert_in_epsilon(39.81281180648914, worksheet.outputs_costs_nb398, 0.002); end
  def test_outputs_costs_nb399; assert_in_epsilon(-4.182668944650607, worksheet.outputs_costs_nb399, 0.002); end
  def test_outputs_costs_nb400; assert_in_epsilon(3.8432485972483015, worksheet.outputs_costs_nb400, 0.002); end
  def test_outputs_costs_nb401; assert_in_epsilon(1.455674082508816, worksheet.outputs_costs_nb401, 0.002); end
  def test_outputs_costs_nb402; assert_in_epsilon(14.264054762036924, worksheet.outputs_costs_nb402, 0.002); end
  def test_outputs_costs_nb403; assert_in_delta(0.1904737883001122, worksheet.outputs_costs_nb403, 0.002); end
  def test_outputs_costs_nb404; assert_in_delta(0.006902224059639914, worksheet.outputs_costs_nb404, 0.002); end
  def test_outputs_costs_nb405; assert_in_delta(0.0013696886413240915, worksheet.outputs_costs_nb405, 0.002); end
  def test_outputs_costs_nb406; assert_in_delta(0.0012137722759151261, worksheet.outputs_costs_nb406, 0.002); end
  def test_outputs_costs_nb407; assert_in_delta(0.021650920082989394, worksheet.outputs_costs_nb407, 0.002); end
  def test_outputs_costs_nb408; assert_in_epsilon(26.8336877658664, worksheet.outputs_costs_nb408, 0.002); end
  def test_outputs_costs_nb409; assert_in_epsilon(29.52330513632534, worksheet.outputs_costs_nb409, 0.002); end
  def test_outputs_costs_nb410; assert_in_epsilon(6.591495173593682, worksheet.outputs_costs_nb410, 0.002); end
  def test_outputs_costs_nb411; assert_in_epsilon(22.85657125908414, worksheet.outputs_costs_nb411, 0.002); end
  def test_outputs_costs_nb412; assert_in_epsilon(39.32212785626054, worksheet.outputs_costs_nb412, 0.002); end
  def test_outputs_costs_nb413; assert_in_epsilon(330.7119498296021, worksheet.outputs_costs_nb413, 0.002); end
  def test_outputs_costs_nb414; assert_in_epsilon(114.6222782112646, worksheet.outputs_costs_nb414, 0.002); end
  def test_outputs_costs_nb415; assert_in_epsilon(298.280646458383, worksheet.outputs_costs_nb415, 0.002); end
  def test_outputs_costs_nb416; assert_in_epsilon(1700.2584368486193, worksheet.outputs_costs_nb416, 0.002); end
  def test_outputs_costs_nb417; assert_in_epsilon(29.037889805422434, worksheet.outputs_costs_nb417, 0.002); end
  def test_outputs_costs_nb418; assert_in_epsilon(258.0751466834546, worksheet.outputs_costs_nb418, 0.002); end
  def test_outputs_costs_nb419; assert_in_epsilon(752.077437400279, worksheet.outputs_costs_nb419, 0.002); end
  def test_outputs_costs_nb420; assert_in_epsilon(140.15919459844417, worksheet.outputs_costs_nb420, 0.002); end
  def test_outputs_costs_nb421; assert_in_epsilon(8.61721692615301, worksheet.outputs_costs_nb421, 0.002); end
  def test_outputs_costs_nb422; assert_in_epsilon(2.667761067594161, worksheet.outputs_costs_nb422, 0.002); end
  def test_outputs_costs_nb423; assert_in_delta(0.0, (worksheet.outputs_costs_nb423||0), 0.002); end
  def test_outputs_costs_nb424; assert_in_delta(0.0, (worksheet.outputs_costs_nb424||0), 0.002); end
  def test_outputs_costs_nb425; assert_in_delta(0.0, (worksheet.outputs_costs_nb425||0), 0.002); end
  def test_outputs_costs_nb426; assert_in_epsilon(1.3079905924484811, worksheet.outputs_costs_nb426, 0.002); end
  def test_outputs_costs_nb427; assert_in_delta(0.0, (worksheet.outputs_costs_nb427||0), 0.002); end
  def test_outputs_costs_nb428; assert_in_epsilon(287.89873735314535, worksheet.outputs_costs_nb428, 0.002); end
  def test_outputs_costs_nb429; assert_in_epsilon(88.81143797572273, worksheet.outputs_costs_nb429, 0.002); end
  def test_outputs_costs_nb430; assert_in_epsilon(34.346864284231515, worksheet.outputs_costs_nb430, 0.002); end
  def test_outputs_costs_nb431; assert_in_epsilon(779.8854549901728, worksheet.outputs_costs_nb431, 0.002); end
  def test_outputs_costs_nb432; assert_in_epsilon(8.249058035328815, worksheet.outputs_costs_nb432, 0.002); end
  def test_outputs_costs_nb433; assert_in_epsilon(21.74299726958907, worksheet.outputs_costs_nb433, 0.002); end
  def test_outputs_costs_nb434; assert_in_epsilon(74.25953215746601, worksheet.outputs_costs_nb434, 0.002); end
  def test_outputs_costs_nb435; assert_in_epsilon(31.332722564370638, worksheet.outputs_costs_nb435, 0.002); end
  def test_outputs_costs_nb436; assert_in_epsilon(41.77379012884651, worksheet.outputs_costs_nb436, 0.002); end
  def test_outputs_costs_nb437; assert_in_epsilon(141.22395147672069, worksheet.outputs_costs_nb437, 0.002); end
  def test_outputs_emissions_p216; assert_in_delta(0.09722222222222222, worksheet.outputs_emissions_p216, 0.002); end
  def test_outputs_emissions_h145; assert_in_delta(0.21613567908999795, worksheet.outputs_emissions_h145, 0.002); end
  def test_outputs_emissions_i145; assert_in_delta(0.21394604776644002, worksheet.outputs_emissions_i145, 0.002); end
  def test_outputs_emissions_j145; assert_in_delta(0.21806406453805793, worksheet.outputs_emissions_j145, 0.002); end
  def test_outputs_emissions_k145; assert_in_delta(0.2350098363903014, worksheet.outputs_emissions_k145, 0.002); end
  def test_outputs_emissions_l145; assert_in_delta(0.24810553785709447, worksheet.outputs_emissions_l145, 0.002); end
  def test_outputs_emissions_p145; assert_in_delta(0.2547569080810489, worksheet.outputs_emissions_p145, 0.002); end
  def test_outputs_emissions_q145; assert_in_delta(0.26449999741314456, worksheet.outputs_emissions_q145, 0.002); end
  def test_outputs_emissions_r145; assert_in_delta(0.28293052002030883, worksheet.outputs_emissions_r145, 0.002); end
  def test_outputs_emissions_s145; assert_in_delta(0.302258571888727, worksheet.outputs_emissions_s145, 0.002); end
  def test_outputs_emissions_t145; assert_in_delta(0.32170908549148924, worksheet.outputs_emissions_t145, 0.002); end
  def test_outputs_emissions_u145; assert_in_delta(0.34110859534174276, worksheet.outputs_emissions_u145, 0.002); end
  def test_outputs_emissions_v145; assert_in_delta(0.36288655629394284, worksheet.outputs_emissions_v145, 0.002); end
  def test_outputs_emissions_w145; assert_in_delta(0.3827146322473579, worksheet.outputs_emissions_w145, 0.002); end
  def test_outputs_emissions_x145; assert_in_delta(0.4054040368706252, worksheet.outputs_emissions_x145, 0.002); end
  def test_outputs_emissions_y145; assert_in_delta(0.4160127847228908, worksheet.outputs_emissions_y145, 0.002); end
  def test_outputs_emissions_z145; assert_in_delta(0.42477861241366727, worksheet.outputs_emissions_z145, 0.002); end
  def test_outputs_emissions_aa145; assert_in_delta(0.4317191691411083, worksheet.outputs_emissions_aa145, 0.002); end
  def test_outputs_emissions_ab145; assert_in_delta(0.436061165965738, worksheet.outputs_emissions_ab145, 0.002); end
  def test_outputs_emissions_ac145; assert_in_delta(0.4393691488708078, worksheet.outputs_emissions_ac145, 0.002); end
  def test_outputs_emissions_ad145; assert_in_delta(0.441776587386236, worksheet.outputs_emissions_ad145, 0.002); end
  def test_outputs_emissions_ae145; assert_in_delta(0.44343606139668207, worksheet.outputs_emissions_ae145, 0.002); end
  def test_outputs_emissions_af145; assert_in_delta(0.4446529191427878, worksheet.outputs_emissions_af145, 0.002); end
  def test_outputs_emissions_ag145; assert_in_delta(0.4455247412376645, worksheet.outputs_emissions_ag145, 0.002); end
  def test_outputs_emissions_ah145; assert_in_delta(0.4461431866231502, worksheet.outputs_emissions_ah145, 0.002); end
  def test_outputs_emissions_h100; assert_in_epsilon(25.34891757, worksheet.outputs_emissions_h100, 0.002); end
  def test_outputs_emissions_i100; assert_in_epsilon(26.374524320000003, worksheet.outputs_emissions_i100, 0.002); end
  def test_outputs_emissions_j100; assert_in_epsilon(28.35797029, worksheet.outputs_emissions_j100, 0.002); end
  def test_outputs_emissions_k100; assert_in_epsilon(31.52379656, worksheet.outputs_emissions_k100, 0.002); end
  def test_outputs_emissions_l100; assert_in_epsilon(35.02307894, worksheet.outputs_emissions_l100, 0.002); end
  def test_outputs_emissions_p100; assert_in_epsilon(34.77853275600183, worksheet.outputs_emissions_p100, 0.002); end
  def test_outputs_emissions_q100; assert_in_epsilon(36.90989014223631, worksheet.outputs_emissions_q100, 0.002); end
  def test_outputs_emissions_r100; assert_in_epsilon(44.23140519539136, worksheet.outputs_emissions_r100, 0.002); end
  def test_outputs_emissions_s100; assert_in_epsilon(46.69557293850091, worksheet.outputs_emissions_s100, 0.002); end
  def test_outputs_emissions_t100; assert_in_epsilon(51.34556764436824, worksheet.outputs_emissions_t100, 0.002); end
  def test_outputs_emissions_u100; assert_in_epsilon(56.975058246393246, worksheet.outputs_emissions_u100, 0.002); end
  def test_outputs_emissions_v100; assert_in_epsilon(62.021124169212456, worksheet.outputs_emissions_v100, 0.002); end
  def test_outputs_emissions_w100; assert_in_epsilon(61.2446611544995, worksheet.outputs_emissions_w100, 0.002); end
  def test_outputs_emissions_x100; assert_in_epsilon(65.92289273392701, worksheet.outputs_emissions_x100, 0.002); end
  def test_outputs_emissions_y100; assert_in_epsilon(67.39928542437009, worksheet.outputs_emissions_y100, 0.002); end
  def test_outputs_emissions_z100; assert_in_epsilon(68.2866820314711, worksheet.outputs_emissions_z100, 0.002); end
  def test_outputs_emissions_aa100; assert_in_epsilon(69.44861547617141, worksheet.outputs_emissions_aa100, 0.002); end
  def test_outputs_emissions_ab100; assert_in_epsilon(70.03035972864174, worksheet.outputs_emissions_ab100, 0.002); end
  def test_outputs_emissions_ac100; assert_in_epsilon(70.46448698884656, worksheet.outputs_emissions_ac100, 0.002); end
  def test_outputs_emissions_ad100; assert_in_epsilon(70.8238248068135, worksheet.outputs_emissions_ad100, 0.002); end
  def test_outputs_emissions_ae100; assert_in_epsilon(71.05073434636945, worksheet.outputs_emissions_ae100, 0.002); end
  def test_outputs_emissions_af100; assert_in_epsilon(71.21909615829452, worksheet.outputs_emissions_af100, 0.002); end
  def test_outputs_emissions_ag100; assert_in_epsilon(71.34360667125343, worksheet.outputs_emissions_ag100, 0.002); end
  def test_outputs_emissions_ah100; assert_in_epsilon(71.42937067888602, worksheet.outputs_emissions_ah100, 0.002); end
  def test_outputs_emissions_d4; assert_equal("2260 Gt CO2", worksheet.outputs_emissions_d4); end
  def test_outputs_emissions_d5; assert_equal("3010 Gt CO2", worksheet.outputs_emissions_d5); end
  def test_outputs_emissions_c91; assert_equal("Column1", worksheet.outputs_emissions_c91); end
  def test_outputs_emissions_d91; assert_equal("IPCC Sector", worksheet.outputs_emissions_d91); end
  def test_outputs_emissions_h91; assert_equal("1990", worksheet.outputs_emissions_h91); end
  def test_outputs_emissions_i91; assert_equal("1995", worksheet.outputs_emissions_i91); end
  def test_outputs_emissions_j91; assert_equal("2000", worksheet.outputs_emissions_j91); end
  def test_outputs_emissions_k91; assert_equal("2005", worksheet.outputs_emissions_k91); end
  def test_outputs_emissions_l91; assert_equal("2010", worksheet.outputs_emissions_l91); end
  def test_outputs_emissions_n91; assert_equal("2011 historic", worksheet.outputs_emissions_n91); end
  def test_outputs_emissions_p91; assert_equal("2011", worksheet.outputs_emissions_p91); end
  def test_outputs_emissions_q91; assert_equal("2015", worksheet.outputs_emissions_q91); end
  def test_outputs_emissions_r91; assert_equal("2020", worksheet.outputs_emissions_r91); end
  def test_outputs_emissions_s91; assert_equal("2025", worksheet.outputs_emissions_s91); end
  def test_outputs_emissions_t91; assert_equal("2030", worksheet.outputs_emissions_t91); end
  def test_outputs_emissions_u91; assert_equal("2035", worksheet.outputs_emissions_u91); end
  def test_outputs_emissions_v91; assert_equal("2040", worksheet.outputs_emissions_v91); end
  def test_outputs_emissions_w91; assert_equal("2045", worksheet.outputs_emissions_w91); end
  def test_outputs_emissions_x91; assert_equal("2050", worksheet.outputs_emissions_x91); end
  def test_outputs_emissions_y91; assert_equal("2055", worksheet.outputs_emissions_y91); end
  def test_outputs_emissions_z91; assert_equal("2060", worksheet.outputs_emissions_z91); end
  def test_outputs_emissions_aa91; assert_equal("2065", worksheet.outputs_emissions_aa91); end
  def test_outputs_emissions_ab91; assert_equal("2070", worksheet.outputs_emissions_ab91); end
  def test_outputs_emissions_ac91; assert_equal("2075", worksheet.outputs_emissions_ac91); end
  def test_outputs_emissions_ad91; assert_equal("2080", worksheet.outputs_emissions_ad91); end
  def test_outputs_emissions_ae91; assert_equal("2085", worksheet.outputs_emissions_ae91); end
  def test_outputs_emissions_af91; assert_equal("2090", worksheet.outputs_emissions_af91); end
  def test_outputs_emissions_ag91; assert_equal("2095", worksheet.outputs_emissions_ag91); end
  def test_outputs_emissions_ah91; assert_equal("2100", worksheet.outputs_emissions_ah91); end
  def test_outputs_emissions_c92; assert_equal("G.1A", worksheet.outputs_emissions_c92); end
  def test_outputs_emissions_d92; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d92); end
  def test_outputs_emissions_h92; assert_in_epsilon(20.98869, worksheet.outputs_emissions_h92, 0.002); end
  def test_outputs_emissions_i92; assert_in_epsilon(21.850990000000003, worksheet.outputs_emissions_i92, 0.002); end
  def test_outputs_emissions_j92; assert_in_epsilon(23.75862, worksheet.outputs_emissions_j92, 0.002); end
  def test_outputs_emissions_k92; assert_in_epsilon(27.50138, worksheet.outputs_emissions_k92, 0.002); end
  def test_outputs_emissions_l92; assert_in_epsilon(30.509400000000003, worksheet.outputs_emissions_l92, 0.002); end
  def test_outputs_emissions_p92; assert_in_epsilon(29.702138294393187, worksheet.outputs_emissions_p92, 0.002); end
  def test_outputs_emissions_q92; assert_in_epsilon(30.48229343756382, worksheet.outputs_emissions_q92, 0.002); end
  def test_outputs_emissions_r92; assert_in_epsilon(33.42129258812744, worksheet.outputs_emissions_r92, 0.002); end
  def test_outputs_emissions_s92; assert_in_epsilon(36.55414665063101, worksheet.outputs_emissions_s92, 0.002); end
  def test_outputs_emissions_t92; assert_in_epsilon(39.51862431286497, worksheet.outputs_emissions_t92, 0.002); end
  def test_outputs_emissions_u92; assert_in_epsilon(41.47295229352492, worksheet.outputs_emissions_u92, 0.002); end
  def test_outputs_emissions_v92; assert_in_epsilon(43.620734592601025, worksheet.outputs_emissions_v92, 0.002); end
  def test_outputs_emissions_w92; assert_in_epsilon(44.75769352388728, worksheet.outputs_emissions_w92, 0.002); end
  def test_outputs_emissions_x92; assert_in_epsilon(46.05788655282561, worksheet.outputs_emissions_x92, 0.002); end
  def test_outputs_emissions_c93; assert_equal("G.1B", worksheet.outputs_emissions_c93); end
  def test_outputs_emissions_d93; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d93); end
  def test_outputs_emissions_h93; assert_in_delta(0.16401936, worksheet.outputs_emissions_h93, 0.002); end
  def test_outputs_emissions_i93; assert_in_delta(0.20241883000000002, worksheet.outputs_emissions_i93, 0.002); end
  def test_outputs_emissions_j93; assert_in_delta(0.17221180000000003, worksheet.outputs_emissions_j93, 0.002); end
  def test_outputs_emissions_k93; assert_in_delta(0.21541402, worksheet.outputs_emissions_k93, 0.002); end
  def test_outputs_emissions_l93; assert_in_delta(0.22069656, worksheet.outputs_emissions_l93, 0.002); end
  def test_outputs_emissions_p93; assert_in_delta(0.05052058458188013, worksheet.outputs_emissions_p93, 0.002); end
  def test_outputs_emissions_q93; assert_in_delta(0.05212172488785966, worksheet.outputs_emissions_q93, 0.002); end
  def test_outputs_emissions_r93; assert_in_delta(0.05684578562889413, worksheet.outputs_emissions_r93, 0.002); end
  def test_outputs_emissions_s93; assert_in_delta(0.0616269158987148, worksheet.outputs_emissions_s93, 0.002); end
  def test_outputs_emissions_t93; assert_in_delta(0.06636938306267175, worksheet.outputs_emissions_t93, 0.002); end
  def test_outputs_emissions_u93; assert_in_delta(0.07096550457854875, worksheet.outputs_emissions_u93, 0.002); end
  def test_outputs_emissions_v93; assert_in_delta(0.07769075903446407, worksheet.outputs_emissions_v93, 0.002); end
  def test_outputs_emissions_w93; assert_in_delta(0.08512627524306239, worksheet.outputs_emissions_w93, 0.002); end
  def test_outputs_emissions_x93; assert_in_delta(0.09316611170311433, worksheet.outputs_emissions_x93, 0.002); end
  def test_outputs_emissions_c94; assert_equal("G.2", worksheet.outputs_emissions_c94); end
  def test_outputs_emissions_d94; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d94); end
  def test_outputs_emissions_h94; assert_in_delta(0.5752480000000001, worksheet.outputs_emissions_h94, 0.002); end
  def test_outputs_emissions_i94; assert_in_delta(0.721808, worksheet.outputs_emissions_i94, 0.002); end
  def test_outputs_emissions_j94; assert_in_delta(0.828064, worksheet.outputs_emissions_j94, 0.002); end
  def test_outputs_emissions_k94; assert_in_epsilon(1.17248, worksheet.outputs_emissions_k94, 0.002); end
  def test_outputs_emissions_l94; assert_in_epsilon(1.65306856, worksheet.outputs_emissions_l94, 0.002); end
  def test_outputs_emissions_p94; assert_in_epsilon(2.3859600570267654, worksheet.outputs_emissions_p94, 0.002); end
  def test_outputs_emissions_q94; assert_in_epsilon(2.507313292365391, worksheet.outputs_emissions_q94, 0.002); end
  def test_outputs_emissions_r94; assert_in_epsilon(2.709291122879614, worksheet.outputs_emissions_r94, 0.002); end
  def test_outputs_emissions_s94; assert_in_epsilon(2.9070424427855373, worksheet.outputs_emissions_s94, 0.002); end
  def test_outputs_emissions_t94; assert_in_epsilon(3.1028599229416787, worksheet.outputs_emissions_t94, 0.002); end
  def test_outputs_emissions_u94; assert_in_epsilon(3.2901365144438004, worksheet.outputs_emissions_u94, 0.002); end
  def test_outputs_emissions_v94; assert_in_epsilon(3.487241396799801, worksheet.outputs_emissions_v94, 0.002); end
  def test_outputs_emissions_w94; assert_in_epsilon(3.6895910413777186, worksheet.outputs_emissions_w94, 0.002); end
  def test_outputs_emissions_x94; assert_in_epsilon(3.9089735254767413, worksheet.outputs_emissions_x94, 0.002); end
  def test_outputs_emissions_c95; assert_equal("G.3", worksheet.outputs_emissions_c95); end
  def test_outputs_emissions_d95; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d95); end
  def test_outputs_emissions_h95; assert_in_delta(0.0, (worksheet.outputs_emissions_h95||0), 0.002); end
  def test_outputs_emissions_i95; assert_in_delta(0.0, (worksheet.outputs_emissions_i95||0), 0.002); end
  def test_outputs_emissions_j95; assert_in_delta(0.0, (worksheet.outputs_emissions_j95||0), 0.002); end
  def test_outputs_emissions_k95; assert_in_delta(0.0, (worksheet.outputs_emissions_k95||0), 0.002); end
  def test_outputs_emissions_l95; assert_in_delta(0.0, (worksheet.outputs_emissions_l95||0), 0.002); end
  def test_outputs_emissions_p95; assert_in_delta(0.0, (worksheet.outputs_emissions_p95||0), 0.002); end
  def test_outputs_emissions_q95; assert_in_delta(0.0, (worksheet.outputs_emissions_q95||0), 0.002); end
  def test_outputs_emissions_r95; assert_in_delta(0.0, (worksheet.outputs_emissions_r95||0), 0.002); end
  def test_outputs_emissions_s95; assert_in_delta(0.0, (worksheet.outputs_emissions_s95||0), 0.002); end
  def test_outputs_emissions_t95; assert_in_delta(0.0, (worksheet.outputs_emissions_t95||0), 0.002); end
  def test_outputs_emissions_u95; assert_in_delta(0.0, (worksheet.outputs_emissions_u95||0), 0.002); end
  def test_outputs_emissions_v95; assert_in_delta(0.0, (worksheet.outputs_emissions_v95||0), 0.002); end
  def test_outputs_emissions_w95; assert_in_delta(0.0, (worksheet.outputs_emissions_w95||0), 0.002); end
  def test_outputs_emissions_x95; assert_in_delta(0.0, (worksheet.outputs_emissions_x95||0), 0.002); end
  def test_outputs_emissions_c96; assert_equal("G.4", worksheet.outputs_emissions_c96); end
  def test_outputs_emissions_d96; assert_equal("Global Agriculture", worksheet.outputs_emissions_d96); end
  def test_outputs_emissions_h96; assert_in_delta(0.0, (worksheet.outputs_emissions_h96||0), 0.002); end
  def test_outputs_emissions_i96; assert_in_delta(0.0, (worksheet.outputs_emissions_i96||0), 0.002); end
  def test_outputs_emissions_j96; assert_in_delta(0.0, (worksheet.outputs_emissions_j96||0), 0.002); end
  def test_outputs_emissions_k96; assert_in_delta(0.0, (worksheet.outputs_emissions_k96||0), 0.002); end
  def test_outputs_emissions_l96; assert_in_delta(0.0, (worksheet.outputs_emissions_l96||0), 0.002); end
  def test_outputs_emissions_p96; assert_in_delta(0.0, (worksheet.outputs_emissions_p96||0), 0.002); end
  def test_outputs_emissions_q96; assert_in_delta(0.0, (worksheet.outputs_emissions_q96||0), 0.002); end
  def test_outputs_emissions_r96; assert_in_delta(0.0, (worksheet.outputs_emissions_r96||0), 0.002); end
  def test_outputs_emissions_s96; assert_in_delta(0.0, (worksheet.outputs_emissions_s96||0), 0.002); end
  def test_outputs_emissions_t96; assert_in_delta(0.0, (worksheet.outputs_emissions_t96||0), 0.002); end
  def test_outputs_emissions_u96; assert_in_delta(0.0, (worksheet.outputs_emissions_u96||0), 0.002); end
  def test_outputs_emissions_v96; assert_in_delta(0.0, (worksheet.outputs_emissions_v96||0), 0.002); end
  def test_outputs_emissions_w96; assert_in_delta(0.0, (worksheet.outputs_emissions_w96||0), 0.002); end
  def test_outputs_emissions_x96; assert_in_delta(0.0, (worksheet.outputs_emissions_x96||0), 0.002); end
  def test_outputs_emissions_c97; assert_equal("G.5", worksheet.outputs_emissions_c97); end
  def test_outputs_emissions_d97; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d97); end
  def test_outputs_emissions_h97; assert_in_epsilon(3.6209602100000002, worksheet.outputs_emissions_h97, 0.002); end
  def test_outputs_emissions_i97; assert_in_epsilon(3.59930749, worksheet.outputs_emissions_i97, 0.002); end
  def test_outputs_emissions_j97; assert_in_epsilon(3.59907449, worksheet.outputs_emissions_j97, 0.002); end
  def test_outputs_emissions_k97; assert_in_epsilon(2.63452254, worksheet.outputs_emissions_k97, 0.002); end
  def test_outputs_emissions_l97; assert_in_epsilon(2.6399138200000003, worksheet.outputs_emissions_l97, 0.002); end
  def test_outputs_emissions_p97; assert_in_epsilon(2.63991382, worksheet.outputs_emissions_p97, 0.002); end
  def test_outputs_emissions_q97; assert_in_epsilon(3.8681616874192404, worksheet.outputs_emissions_q97, 0.002); end
  def test_outputs_emissions_r97; assert_in_epsilon(8.04397569875541, worksheet.outputs_emissions_r97, 0.002); end
  def test_outputs_emissions_s97; assert_in_epsilon(7.172756929185643, worksheet.outputs_emissions_s97, 0.002); end
  def test_outputs_emissions_t97; assert_in_epsilon(8.657714025498919, worksheet.outputs_emissions_t97, 0.002); end
  def test_outputs_emissions_u97; assert_in_epsilon(12.141003933845976, worksheet.outputs_emissions_u97, 0.002); end
  def test_outputs_emissions_v97; assert_in_epsilon(14.835457420777168, worksheet.outputs_emissions_v97, 0.002); end
  def test_outputs_emissions_w97; assert_in_epsilon(12.712250313991433, worksheet.outputs_emissions_w97, 0.002); end
  def test_outputs_emissions_x97; assert_in_epsilon(15.862866543921555, worksheet.outputs_emissions_x97, 0.002); end
  def test_outputs_emissions_c98; assert_equal("G.6", worksheet.outputs_emissions_c98); end
  def test_outputs_emissions_d98; assert_equal("Global Waste", worksheet.outputs_emissions_d98); end
  def test_outputs_emissions_h98; assert_in_delta(0.0, (worksheet.outputs_emissions_h98||0), 0.002); end
  def test_outputs_emissions_i98; assert_in_delta(0.0, (worksheet.outputs_emissions_i98||0), 0.002); end
  def test_outputs_emissions_j98; assert_in_delta(0.0, (worksheet.outputs_emissions_j98||0), 0.002); end
  def test_outputs_emissions_k98; assert_in_delta(0.0, (worksheet.outputs_emissions_k98||0), 0.002); end
  def test_outputs_emissions_l98; assert_in_delta(0.0, (worksheet.outputs_emissions_l98||0), 0.002); end
  def test_outputs_emissions_p98; assert_in_delta(0.0, (worksheet.outputs_emissions_p98||0), 0.002); end
  def test_outputs_emissions_q98; assert_in_delta(0.0, (worksheet.outputs_emissions_q98||0), 0.002); end
  def test_outputs_emissions_r98; assert_in_delta(0.0, (worksheet.outputs_emissions_r98||0), 0.002); end
  def test_outputs_emissions_s98; assert_in_delta(0.0, (worksheet.outputs_emissions_s98||0), 0.002); end
  def test_outputs_emissions_t98; assert_in_delta(0.0, (worksheet.outputs_emissions_t98||0), 0.002); end
  def test_outputs_emissions_u98; assert_in_delta(0.0, (worksheet.outputs_emissions_u98||0), 0.002); end
  def test_outputs_emissions_v98; assert_in_delta(0.0, (worksheet.outputs_emissions_v98||0), 0.002); end
  def test_outputs_emissions_w98; assert_in_delta(0.0, (worksheet.outputs_emissions_w98||0), 0.002); end
  def test_outputs_emissions_x98; assert_in_delta(0.0, (worksheet.outputs_emissions_x98||0), 0.002); end
  def test_outputs_emissions_c99; assert_equal("G.7", worksheet.outputs_emissions_c99); end
  def test_outputs_emissions_d99; assert_equal("Global Other", worksheet.outputs_emissions_d99); end
  def test_outputs_emissions_h99; assert_in_delta(0.0, (worksheet.outputs_emissions_h99||0), 0.002); end
  def test_outputs_emissions_i99; assert_in_delta(0.0, (worksheet.outputs_emissions_i99||0), 0.002); end
  def test_outputs_emissions_j99; assert_in_delta(0.0, (worksheet.outputs_emissions_j99||0), 0.002); end
  def test_outputs_emissions_k99; assert_in_delta(0.0, (worksheet.outputs_emissions_k99||0), 0.002); end
  def test_outputs_emissions_l99; assert_in_delta(0.0, (worksheet.outputs_emissions_l99||0), 0.002); end
  def test_outputs_emissions_p99; assert_in_delta(0.0, (worksheet.outputs_emissions_p99||0), 0.002); end
  def test_outputs_emissions_q99; assert_in_delta(0.0, (worksheet.outputs_emissions_q99||0), 0.002); end
  def test_outputs_emissions_r99; assert_in_delta(0.0, (worksheet.outputs_emissions_r99||0), 0.002); end
  def test_outputs_emissions_s99; assert_in_delta(0.0, (worksheet.outputs_emissions_s99||0), 0.002); end
  def test_outputs_emissions_t99; assert_in_delta(0.0, (worksheet.outputs_emissions_t99||0), 0.002); end
  def test_outputs_emissions_u99; assert_in_delta(0.0, (worksheet.outputs_emissions_u99||0), 0.002); end
  def test_outputs_emissions_v99; assert_in_delta(0.0, (worksheet.outputs_emissions_v99||0), 0.002); end
  def test_outputs_emissions_w99; assert_in_delta(0.0, (worksheet.outputs_emissions_w99||0), 0.002); end
  def test_outputs_emissions_x99; assert_in_delta(0.0, (worksheet.outputs_emissions_x99||0), 0.002); end
  def test_outputs_emissions_d100; assert_equal("Total", worksheet.outputs_emissions_d100); end
  def test_outputs_emissions_d101; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d101); end
  def test_outputs_emissions_h101; assert_in_epsilon(805.0, worksheet.outputs_emissions_h101, 0.002); end
  def test_outputs_emissions_i101; assert_in_epsilon(920.0, worksheet.outputs_emissions_i101, 0.002); end
  def test_outputs_emissions_j101; assert_in_epsilon(1041.0, worksheet.outputs_emissions_j101, 0.002); end
  def test_outputs_emissions_k101; assert_in_epsilon(1178.0, worksheet.outputs_emissions_k101, 0.002); end
  def test_outputs_emissions_l101; assert_in_epsilon(1855.2214672439982, worksheet.outputs_emissions_l101, 0.002); end
  def test_outputs_emissions_n101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_n101, 0.002); end
  def test_outputs_emissions_p101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_p101, 0.002); end
  def test_outputs_emissions_q101; assert_in_epsilon(2033.3768457964763, worksheet.outputs_emissions_q101, 0.002); end
  def test_outputs_emissions_r101; assert_in_epsilon(2236.2300841405454, worksheet.outputs_emissions_r101, 0.002); end
  def test_outputs_emissions_s101; assert_in_epsilon(2463.547529475276, worksheet.outputs_emissions_s101, 0.002); end
  def test_outputs_emissions_t101; assert_in_epsilon(2708.650380932449, worksheet.outputs_emissions_t101, 0.002); end
  def test_outputs_emissions_u101; assert_in_epsilon(2979.4519456593525, worksheet.outputs_emissions_u101, 0.002); end
  def test_outputs_emissions_v101; assert_in_epsilon(3276.9424016983667, worksheet.outputs_emissions_v101, 0.002); end
  def test_outputs_emissions_w101; assert_in_epsilon(3585.106865007647, worksheet.outputs_emissions_w101, 0.002); end
  def test_outputs_emissions_x101; assert_in_epsilon(3903.025749728713, worksheet.outputs_emissions_x101, 0.002); end
  def test_outputs_emissions_y101; assert_in_epsilon(4236.331195124456, worksheet.outputs_emissions_y101, 0.002); end
  def test_outputs_emissions_z101; assert_in_epsilon(4575.546113764059, worksheet.outputs_emissions_z101, 0.002); end
  def test_outputs_emissions_aa101; assert_in_epsilon(4919.884357533165, worksheet.outputs_emissions_aa101, 0.002); end
  def test_outputs_emissions_ab101; assert_in_epsilon(5268.581795545198, worksheet.outputs_emissions_ab101, 0.002); end
  def test_outputs_emissions_ac101; assert_in_epsilon(5619.818912338918, worksheet.outputs_emissions_ac101, 0.002); end
  def test_outputs_emissions_ad101; assert_in_epsilon(5973.0396918280685, worksheet.outputs_emissions_ad101, 0.002); end
  def test_outputs_emissions_ae101; assert_in_epsilon(6327.726089711026, worksheet.outputs_emissions_ae101, 0.002); end
  def test_outputs_emissions_af101; assert_in_epsilon(6683.4006659726865, worksheet.outputs_emissions_af101, 0.002); end
  def test_outputs_emissions_ag101; assert_in_epsilon(7039.807423046556, worksheet.outputs_emissions_ag101, 0.002); end
  def test_outputs_emissions_ah101; assert_in_epsilon(7396.739866421905, worksheet.outputs_emissions_ah101, 0.002); end
  def test_outputs_emissions_d63; assert_equal("Gas", worksheet.outputs_emissions_d63); end
  def test_outputs_emissions_h63; assert_in_epsilon(1990.0, worksheet.outputs_emissions_h63, 0.002); end
  def test_outputs_emissions_i63; assert_in_epsilon(1995.0, worksheet.outputs_emissions_i63, 0.002); end
  def test_outputs_emissions_j63; assert_in_epsilon(2000.0, worksheet.outputs_emissions_j63, 0.002); end
  def test_outputs_emissions_k63; assert_in_epsilon(2005.0, worksheet.outputs_emissions_k63, 0.002); end
  def test_outputs_emissions_l63; assert_in_epsilon(2010.0, worksheet.outputs_emissions_l63, 0.002); end
  def test_outputs_emissions_p63; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p63, 0.002); end
  def test_outputs_emissions_q63; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q63, 0.002); end
  def test_outputs_emissions_r63; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r63, 0.002); end
  def test_outputs_emissions_s63; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s63, 0.002); end
  def test_outputs_emissions_t63; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t63, 0.002); end
  def test_outputs_emissions_u63; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u63, 0.002); end
  def test_outputs_emissions_v63; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v63, 0.002); end
  def test_outputs_emissions_w63; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w63, 0.002); end
  def test_outputs_emissions_x63; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x63, 0.002); end
  def test_outputs_emissions_y63; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y63, 0.002); end
  def test_outputs_emissions_z63; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z63, 0.002); end
  def test_outputs_emissions_aa63; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa63, 0.002); end
  def test_outputs_emissions_ab63; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab63, 0.002); end
  def test_outputs_emissions_ac63; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac63, 0.002); end
  def test_outputs_emissions_ad63; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad63, 0.002); end
  def test_outputs_emissions_ae63; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae63, 0.002); end
  def test_outputs_emissions_af63; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af63, 0.002); end
  def test_outputs_emissions_ag63; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag63, 0.002); end
  def test_outputs_emissions_ah63; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah63, 0.002); end
  def test_outputs_emissions_d64; assert_equal("CO2", worksheet.outputs_emissions_d64); end
  def test_outputs_emissions_h64; assert_in_epsilon(25.34891757, worksheet.outputs_emissions_h64, 0.002); end
  def test_outputs_emissions_i64; assert_in_epsilon(26.374524320000003, worksheet.outputs_emissions_i64, 0.002); end
  def test_outputs_emissions_j64; assert_in_epsilon(28.35797029, worksheet.outputs_emissions_j64, 0.002); end
  def test_outputs_emissions_k64; assert_in_epsilon(31.52379656, worksheet.outputs_emissions_k64, 0.002); end
  def test_outputs_emissions_l64; assert_in_epsilon(35.02307894, worksheet.outputs_emissions_l64, 0.002); end
  def test_outputs_emissions_p64; assert_in_epsilon(34.77853275600183, worksheet.outputs_emissions_p64, 0.002); end
  def test_outputs_emissions_q64; assert_in_epsilon(36.90989014223631, worksheet.outputs_emissions_q64, 0.002); end
  def test_outputs_emissions_r64; assert_in_epsilon(44.23140519539136, worksheet.outputs_emissions_r64, 0.002); end
  def test_outputs_emissions_s64; assert_in_epsilon(46.69557293850091, worksheet.outputs_emissions_s64, 0.002); end
  def test_outputs_emissions_t64; assert_in_epsilon(51.34556764436824, worksheet.outputs_emissions_t64, 0.002); end
  def test_outputs_emissions_u64; assert_in_epsilon(56.975058246393246, worksheet.outputs_emissions_u64, 0.002); end
  def test_outputs_emissions_v64; assert_in_epsilon(62.021124169212456, worksheet.outputs_emissions_v64, 0.002); end
  def test_outputs_emissions_w64; assert_in_epsilon(61.2446611544995, worksheet.outputs_emissions_w64, 0.002); end
  def test_outputs_emissions_x64; assert_in_epsilon(65.92289273392701, worksheet.outputs_emissions_x64, 0.002); end
  def test_outputs_emissions_y64; assert_in_epsilon(67.39928542437009, worksheet.outputs_emissions_y64, 0.002); end
  def test_outputs_emissions_z64; assert_in_epsilon(68.2866820314711, worksheet.outputs_emissions_z64, 0.002); end
  def test_outputs_emissions_aa64; assert_in_epsilon(69.44861547617141, worksheet.outputs_emissions_aa64, 0.002); end
  def test_outputs_emissions_ab64; assert_in_epsilon(70.03035972864174, worksheet.outputs_emissions_ab64, 0.002); end
  def test_outputs_emissions_ac64; assert_in_epsilon(70.46448698884656, worksheet.outputs_emissions_ac64, 0.002); end
  def test_outputs_emissions_ad64; assert_in_epsilon(70.8238248068135, worksheet.outputs_emissions_ad64, 0.002); end
  def test_outputs_emissions_ae64; assert_in_epsilon(71.05073434636945, worksheet.outputs_emissions_ae64, 0.002); end
  def test_outputs_emissions_af64; assert_in_epsilon(71.21909615829452, worksheet.outputs_emissions_af64, 0.002); end
  def test_outputs_emissions_ag64; assert_in_epsilon(71.34360667125343, worksheet.outputs_emissions_ag64, 0.002); end
  def test_outputs_emissions_ah64; assert_in_epsilon(71.42937067888602, worksheet.outputs_emissions_ah64, 0.002); end
  def test_outputs_emissions_d65; assert_equal("CH4", worksheet.outputs_emissions_d65); end
  def test_outputs_emissions_h65; assert_in_epsilon(6.2679346936099405, worksheet.outputs_emissions_h65, 0.002); end
  def test_outputs_emissions_i65; assert_in_epsilon(6.204435385226761, worksheet.outputs_emissions_i65, 0.002); end
  def test_outputs_emissions_j65; assert_in_epsilon(6.32385787160368, worksheet.outputs_emissions_j65, 0.002); end
  def test_outputs_emissions_k65; assert_in_epsilon(6.815285255318741, worksheet.outputs_emissions_k65, 0.002); end
  def test_outputs_emissions_l65; assert_in_epsilon(7.19506059785574, worksheet.outputs_emissions_l65, 0.002); end
  def test_outputs_emissions_p65; assert_in_epsilon(7.387950334350418, worksheet.outputs_emissions_p65, 0.002); end
  def test_outputs_emissions_q65; assert_in_epsilon(7.6704999249811925, worksheet.outputs_emissions_q65, 0.002); end
  def test_outputs_emissions_r65; assert_in_epsilon(8.204985080588957, worksheet.outputs_emissions_r65, 0.002); end
  def test_outputs_emissions_s65; assert_in_epsilon(8.765498584773084, worksheet.outputs_emissions_s65, 0.002); end
  def test_outputs_emissions_t65; assert_in_epsilon(9.329563479253189, worksheet.outputs_emissions_t65, 0.002); end
  def test_outputs_emissions_u65; assert_in_epsilon(9.89214926491054, worksheet.outputs_emissions_u65, 0.002); end
  def test_outputs_emissions_v65; assert_in_epsilon(10.523710132524343, worksheet.outputs_emissions_v65, 0.002); end
  def test_outputs_emissions_w65; assert_in_epsilon(11.09872433517338, worksheet.outputs_emissions_w65, 0.002); end
  def test_outputs_emissions_x65; assert_in_epsilon(11.75671706924813, worksheet.outputs_emissions_x65, 0.002); end
  def test_outputs_emissions_y65; assert_in_epsilon(12.064370756963834, worksheet.outputs_emissions_y65, 0.002); end
  def test_outputs_emissions_z65; assert_in_epsilon(12.31857975999635, worksheet.outputs_emissions_z65, 0.002); end
  def test_outputs_emissions_aa65; assert_in_epsilon(12.519855905092141, worksheet.outputs_emissions_aa65, 0.002); end
  def test_outputs_emissions_ab65; assert_in_epsilon(12.645773813006402, worksheet.outputs_emissions_ab65, 0.002); end
  def test_outputs_emissions_ac65; assert_in_epsilon(12.741705317253427, worksheet.outputs_emissions_ac65, 0.002); end
  def test_outputs_emissions_ad65; assert_in_epsilon(12.811521034200844, worksheet.outputs_emissions_ad65, 0.002); end
  def test_outputs_emissions_ae65; assert_in_epsilon(12.85964578050378, worksheet.outputs_emissions_ae65, 0.002); end
  def test_outputs_emissions_af65; assert_in_epsilon(12.894934655140847, worksheet.outputs_emissions_af65, 0.002); end
  def test_outputs_emissions_ag65; assert_in_epsilon(12.92021749589227, worksheet.outputs_emissions_ag65, 0.002); end
  def test_outputs_emissions_ah65; assert_in_epsilon(12.938152412071357, worksheet.outputs_emissions_ah65, 0.002); end
  def test_outputs_emissions_d66; assert_equal("N2O", worksheet.outputs_emissions_d66); end
  def test_outputs_emissions_h66; assert_in_epsilon(3.2380841507989895, worksheet.outputs_emissions_h66, 0.002); end
  def test_outputs_emissions_i66; assert_in_epsilon(3.1897596536509, worksheet.outputs_emissions_i66, 0.002); end
  def test_outputs_emissions_j66; assert_in_epsilon(3.13992066945797, worksheet.outputs_emissions_j66, 0.002); end
  def test_outputs_emissions_k66; assert_in_epsilon(3.3631391265087096, worksheet.outputs_emissions_k66, 0.002); end
  def test_outputs_emissions_l66; assert_in_epsilon(3.5161561617384898, worksheet.outputs_emissions_l66, 0.002); end
  def test_outputs_emissions_p66; assert_in_epsilon(2.3760171551339595, worksheet.outputs_emissions_p66, 0.002); end
  def test_outputs_emissions_q66; assert_in_epsilon(2.448360857002692, worksheet.outputs_emissions_q66, 0.002); end
  def test_outputs_emissions_r66; assert_in_epsilon(2.5761087892202226, worksheet.outputs_emissions_r66, 0.002); end
  def test_outputs_emissions_s66; assert_in_epsilon(2.705841891815241, worksheet.outputs_emissions_s66, 0.002); end
  def test_outputs_emissions_t66; assert_in_epsilon(2.8370290024371148, worksheet.outputs_emissions_t66, 0.002); end
  def test_outputs_emissions_u66; assert_in_epsilon(2.9695257096403567, worksheet.outputs_emissions_u66, 0.002); end
  def test_outputs_emissions_v66; assert_in_epsilon(3.1216175015774756, worksheet.outputs_emissions_v66, 0.002); end
  def test_outputs_emissions_w66; assert_in_epsilon(3.266612329504675, worksheet.outputs_emissions_w66, 0.002); end
  def test_outputs_emissions_x66; assert_in_epsilon(3.4324196646461176, worksheet.outputs_emissions_x66, 0.002); end
  def test_outputs_emissions_y66; assert_in_epsilon(3.508797167222068, worksheet.outputs_emissions_y66, 0.002); end
  def test_outputs_emissions_z66; assert_in_epsilon(3.572681812053426, worksheet.outputs_emissions_z66, 0.002); end
  def test_outputs_emissions_aa66; assert_in_epsilon(3.62318327667397, worksheet.outputs_emissions_aa66, 0.002); end
  def test_outputs_emissions_ab66; assert_in_epsilon(3.6546592726585656, worksheet.outputs_emissions_ab66, 0.002); end
  def test_outputs_emissions_ac66; assert_in_epsilon(3.6787265200555876, worksheet.outputs_emissions_ac66, 0.002); end
  def test_outputs_emissions_ad66; assert_in_epsilon(3.6962238968759444, worksheet.outputs_emissions_ad66, 0.002); end
  def test_outputs_emissions_ae66; assert_in_epsilon(3.70827559920927, worksheet.outputs_emissions_ae66, 0.002); end
  def test_outputs_emissions_af66; assert_in_epsilon(3.717122293090137, worksheet.outputs_emissions_af66, 0.002); end
  def test_outputs_emissions_ag66; assert_in_epsilon(3.7234575956408373, worksheet.outputs_emissions_ag66, 0.002); end
  def test_outputs_emissions_ah66; assert_in_epsilon(3.7279511559370446, worksheet.outputs_emissions_ah66, 0.002); end
  def test_outputs_emissions_d67; assert_equal("Total", worksheet.outputs_emissions_d67); end
  def test_outputs_emissions_h67; assert_in_epsilon(34.85493641440893, worksheet.outputs_emissions_h67, 0.002); end
  def test_outputs_emissions_i67; assert_in_epsilon(35.76871935887767, worksheet.outputs_emissions_i67, 0.002); end
  def test_outputs_emissions_j67; assert_in_epsilon(37.821748831061655, worksheet.outputs_emissions_j67, 0.002); end
  def test_outputs_emissions_k67; assert_in_epsilon(41.70222094182745, worksheet.outputs_emissions_k67, 0.002); end
  def test_outputs_emissions_l67; assert_in_epsilon(45.73429569959423, worksheet.outputs_emissions_l67, 0.002); end
  def test_outputs_emissions_p67; assert_in_epsilon(44.5425002454862, worksheet.outputs_emissions_p67, 0.002); end
  def test_outputs_emissions_q67; assert_in_epsilon(47.02875092422019, worksheet.outputs_emissions_q67, 0.002); end
  def test_outputs_emissions_r67; assert_in_epsilon(55.01249906520054, worksheet.outputs_emissions_r67, 0.002); end
  def test_outputs_emissions_s67; assert_in_epsilon(58.16691341508923, worksheet.outputs_emissions_s67, 0.002); end
  def test_outputs_emissions_t67; assert_in_epsilon(63.51216012605854, worksheet.outputs_emissions_t67, 0.002); end
  def test_outputs_emissions_u67; assert_in_epsilon(69.83673322094414, worksheet.outputs_emissions_u67, 0.002); end
  def test_outputs_emissions_v67; assert_in_epsilon(75.66645180331427, worksheet.outputs_emissions_v67, 0.002); end
  def test_outputs_emissions_w67; assert_in_epsilon(75.60999781917755, worksheet.outputs_emissions_w67, 0.002); end
  def test_outputs_emissions_x67; assert_in_epsilon(81.11202946782126, worksheet.outputs_emissions_x67, 0.002); end
  def test_outputs_emissions_y67; assert_in_epsilon(82.972453348556, worksheet.outputs_emissions_y67, 0.002); end
  def test_outputs_emissions_z67; assert_in_epsilon(84.17794360352089, worksheet.outputs_emissions_z67, 0.002); end
  def test_outputs_emissions_aa67; assert_in_epsilon(85.59165465793753, worksheet.outputs_emissions_aa67, 0.002); end
  def test_outputs_emissions_ab67; assert_in_epsilon(86.3307928143067, worksheet.outputs_emissions_ab67, 0.002); end
  def test_outputs_emissions_ac67; assert_in_epsilon(86.88491882615557, worksheet.outputs_emissions_ac67, 0.002); end
  def test_outputs_emissions_ad67; assert_in_epsilon(87.3315697378903, worksheet.outputs_emissions_ad67, 0.002); end
  def test_outputs_emissions_ae67; assert_in_epsilon(87.61865572608251, worksheet.outputs_emissions_ae67, 0.002); end
  def test_outputs_emissions_af67; assert_in_epsilon(87.8311531065255, worksheet.outputs_emissions_af67, 0.002); end
  def test_outputs_emissions_ag67; assert_in_epsilon(87.98728176278654, worksheet.outputs_emissions_ag67, 0.002); end
  def test_outputs_emissions_ah67; assert_in_epsilon(88.09547424689443, worksheet.outputs_emissions_ah67, 0.002); end
  def test_outputs_emissions_c45; assert_equal("Column1", worksheet.outputs_emissions_c45); end
  def test_outputs_emissions_d45; assert_equal("IPCC Sector", worksheet.outputs_emissions_d45); end
  def test_outputs_emissions_h45; assert_equal("1990", worksheet.outputs_emissions_h45); end
  def test_outputs_emissions_i45; assert_equal("1995", worksheet.outputs_emissions_i45); end
  def test_outputs_emissions_j45; assert_equal("2000", worksheet.outputs_emissions_j45); end
  def test_outputs_emissions_k45; assert_equal("2005", worksheet.outputs_emissions_k45); end
  def test_outputs_emissions_l45; assert_equal("2010", worksheet.outputs_emissions_l45); end
  def test_outputs_emissions_m45; assert_equal("….", worksheet.outputs_emissions_m45); end
  def test_outputs_emissions_p45; assert_equal("2011", worksheet.outputs_emissions_p45); end
  def test_outputs_emissions_q45; assert_equal("2015", worksheet.outputs_emissions_q45); end
  def test_outputs_emissions_r45; assert_equal("2020", worksheet.outputs_emissions_r45); end
  def test_outputs_emissions_s45; assert_equal("2025", worksheet.outputs_emissions_s45); end
  def test_outputs_emissions_t45; assert_equal("2030", worksheet.outputs_emissions_t45); end
  def test_outputs_emissions_u45; assert_equal("2035", worksheet.outputs_emissions_u45); end
  def test_outputs_emissions_v45; assert_equal("2040", worksheet.outputs_emissions_v45); end
  def test_outputs_emissions_w45; assert_equal("2045", worksheet.outputs_emissions_w45); end
  def test_outputs_emissions_x45; assert_equal("2050", worksheet.outputs_emissions_x45); end
  def test_outputs_emissions_y45; assert_equal("2055", worksheet.outputs_emissions_y45); end
  def test_outputs_emissions_z45; assert_equal("2060", worksheet.outputs_emissions_z45); end
  def test_outputs_emissions_aa45; assert_equal("2065", worksheet.outputs_emissions_aa45); end
  def test_outputs_emissions_ab45; assert_equal("2070", worksheet.outputs_emissions_ab45); end
  def test_outputs_emissions_ac45; assert_equal("2075", worksheet.outputs_emissions_ac45); end
  def test_outputs_emissions_ad45; assert_equal("2080", worksheet.outputs_emissions_ad45); end
  def test_outputs_emissions_ae45; assert_equal("2085", worksheet.outputs_emissions_ae45); end
  def test_outputs_emissions_af45; assert_equal("2090", worksheet.outputs_emissions_af45); end
  def test_outputs_emissions_ag45; assert_equal("2095", worksheet.outputs_emissions_ag45); end
  def test_outputs_emissions_ah45; assert_equal("2100", worksheet.outputs_emissions_ah45); end
  def test_outputs_emissions_c46; assert_equal("G.1A", worksheet.outputs_emissions_c46); end
  def test_outputs_emissions_d46; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d46); end
  def test_outputs_emissions_h46; assert_in_epsilon(21.62825807111542, worksheet.outputs_emissions_h46, 0.002); end
  def test_outputs_emissions_i46; assert_in_epsilon(22.511665420052775, worksheet.outputs_emissions_i46, 0.002); end
  def test_outputs_emissions_j46; assert_in_epsilon(24.432527742912075, worksheet.outputs_emissions_j46, 0.002); end
  def test_outputs_emissions_k46; assert_in_epsilon(28.22731050431886, worksheet.outputs_emissions_k46, 0.002); end
  def test_outputs_emissions_l46; assert_in_epsilon(31.28377980273924, worksheet.outputs_emissions_l46, 0.002); end
  def test_outputs_emissions_p46; assert_in_epsilon(30.02966207380202, worksheet.outputs_emissions_p46, 0.002); end
  def test_outputs_emissions_q46; assert_in_epsilon(30.827598895755134, worksheet.outputs_emissions_q46, 0.002); end
  def test_outputs_emissions_r46; assert_in_epsilon(33.800890247799316, worksheet.outputs_emissions_r46, 0.002); end
  def test_outputs_emissions_s46; assert_in_epsilon(36.96526105024069, worksheet.outputs_emissions_s46, 0.002); end
  def test_outputs_emissions_t46; assert_in_epsilon(39.95751006002423, worksheet.outputs_emissions_t46, 0.002); end
  def test_outputs_emissions_u46; assert_in_epsilon(41.927463393439176, worksheet.outputs_emissions_u46, 0.002); end
  def test_outputs_emissions_v46; assert_in_epsilon(44.09625896394992, worksheet.outputs_emissions_v46, 0.002); end
  def test_outputs_emissions_w46; assert_in_epsilon(45.247295362030144, worksheet.outputs_emissions_w46, 0.002); end
  def test_outputs_emissions_x46; assert_in_epsilon(46.562549657579524, worksheet.outputs_emissions_x46, 0.002); end
  def test_outputs_emissions_c47; assert_equal("G.1B", worksheet.outputs_emissions_c47); end
  def test_outputs_emissions_d47; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d47); end
  def test_outputs_emissions_h47; assert_in_epsilon(1.97211881029452, worksheet.outputs_emissions_h47, 0.002); end
  def test_outputs_emissions_i47; assert_in_epsilon(1.92072397186996, worksheet.outputs_emissions_i47, 0.002); end
  def test_outputs_emissions_j47; assert_in_epsilon(2.0150954274728803, worksheet.outputs_emissions_j47, 0.002); end
  def test_outputs_emissions_k47; assert_in_epsilon(2.27969998630441, worksheet.outputs_emissions_k47, 0.002); end
  def test_outputs_emissions_l47; assert_in_epsilon(2.48650439282281, worksheet.outputs_emissions_l47, 0.002); end
  def test_outputs_emissions_p47; assert_in_epsilon(2.078699667490392, worksheet.outputs_emissions_p47, 0.002); end
  def test_outputs_emissions_q47; assert_in_epsilon(2.135992078964154, worksheet.outputs_emissions_q47, 0.002); end
  def test_outputs_emissions_r47; assert_in_epsilon(2.321561157252534, worksheet.outputs_emissions_r47, 0.002); end
  def test_outputs_emissions_s47; assert_in_epsilon(2.5378294739776406, worksheet.outputs_emissions_s47, 0.002); end
  def test_outputs_emissions_t47; assert_in_epsilon(2.7388690391494266, worksheet.outputs_emissions_t47, 0.002); end
  def test_outputs_emissions_u47; assert_in_epsilon(2.8966034040156576, worksheet.outputs_emissions_u47, 0.002); end
  def test_outputs_emissions_v47; assert_in_epsilon(3.079650601971564, worksheet.outputs_emissions_v47, 0.002); end
  def test_outputs_emissions_w47; assert_in_epsilon(3.2112559389383293, worksheet.outputs_emissions_w47, 0.002); end
  def test_outputs_emissions_x47; assert_in_epsilon(3.3631292664375767, worksheet.outputs_emissions_x47, 0.002); end
  def test_outputs_emissions_c48; assert_equal("G.2", worksheet.outputs_emissions_c48); end
  def test_outputs_emissions_d48; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d48); end
  def test_outputs_emissions_h48; assert_in_delta(0.8635527545553001, worksheet.outputs_emissions_h48, 0.002); end
  def test_outputs_emissions_i48; assert_in_epsilon(1.0090538613606506, worksheet.outputs_emissions_i48, 0.002); end
  def test_outputs_emissions_j48; assert_in_epsilon(1.05186394402772, worksheet.outputs_emissions_j48, 0.002); end
  def test_outputs_emissions_k48; assert_in_epsilon(1.3834269715517598, worksheet.outputs_emissions_k48, 0.002); end
  def test_outputs_emissions_l48; assert_in_epsilon(1.8539335657936016, worksheet.outputs_emissions_l48, 0.002); end
  def test_outputs_emissions_p48; assert_in_epsilon(2.5111122709267653, worksheet.outputs_emissions_p48, 0.002); end
  def test_outputs_emissions_q48; assert_in_epsilon(2.6412846563443706, worksheet.outputs_emissions_q48, 0.002); end
  def test_outputs_emissions_r48; assert_in_epsilon(2.851991089398621, worksheet.outputs_emissions_r48, 0.002); end
  def test_outputs_emissions_s48; assert_in_epsilon(3.0678932219595554, worksheet.outputs_emissions_s48, 0.002); end
  def test_outputs_emissions_t48; assert_in_epsilon(3.283004702291703, worksheet.outputs_emissions_t48, 0.002); end
  def test_outputs_emissions_u48; assert_in_epsilon(3.48996908796255, worksheet.outputs_emissions_u48, 0.002); end
  def test_outputs_emissions_v48; assert_in_epsilon(3.7097179957385036, worksheet.outputs_emissions_v48, 0.002); end
  def test_outputs_emissions_w48; assert_in_epsilon(3.935689461875017, worksheet.outputs_emissions_w48, 0.002); end
  def test_outputs_emissions_x48; assert_in_epsilon(4.182185963143025, worksheet.outputs_emissions_x48, 0.002); end
  def test_outputs_emissions_c49; assert_equal("G.3", worksheet.outputs_emissions_c49); end
  def test_outputs_emissions_d49; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d49); end
  def test_outputs_emissions_h49; assert_in_delta(0.0, (worksheet.outputs_emissions_h49||0), 0.002); end
  def test_outputs_emissions_i49; assert_in_delta(0.0, (worksheet.outputs_emissions_i49||0), 0.002); end
  def test_outputs_emissions_j49; assert_in_delta(0.0, (worksheet.outputs_emissions_j49||0), 0.002); end
  def test_outputs_emissions_k49; assert_in_delta(0.0, (worksheet.outputs_emissions_k49||0), 0.002); end
  def test_outputs_emissions_l49; assert_in_delta(0.0, (worksheet.outputs_emissions_l49||0), 0.002); end
  def test_outputs_emissions_p49; assert_in_delta(0.0, (worksheet.outputs_emissions_p49||0), 0.002); end
  def test_outputs_emissions_q49; assert_in_delta(0.0, (worksheet.outputs_emissions_q49||0), 0.002); end
  def test_outputs_emissions_r49; assert_in_delta(0.0, (worksheet.outputs_emissions_r49||0), 0.002); end
  def test_outputs_emissions_s49; assert_in_delta(0.0, (worksheet.outputs_emissions_s49||0), 0.002); end
  def test_outputs_emissions_t49; assert_in_delta(0.0, (worksheet.outputs_emissions_t49||0), 0.002); end
  def test_outputs_emissions_u49; assert_in_delta(0.0, (worksheet.outputs_emissions_u49||0), 0.002); end
  def test_outputs_emissions_v49; assert_in_delta(0.0, (worksheet.outputs_emissions_v49||0), 0.002); end
  def test_outputs_emissions_w49; assert_in_delta(0.0, (worksheet.outputs_emissions_w49||0), 0.002); end
  def test_outputs_emissions_x49; assert_in_delta(0.0, (worksheet.outputs_emissions_x49||0), 0.002); end
  def test_outputs_emissions_c50; assert_equal("G.4", worksheet.outputs_emissions_c50); end
  def test_outputs_emissions_d50; assert_equal("Global Agriculture", worksheet.outputs_emissions_d50); end
  def test_outputs_emissions_h50; assert_in_epsilon(5.62178989983279, worksheet.outputs_emissions_h50, 0.002); end
  def test_outputs_emissions_i50; assert_in_epsilon(5.501831340352361, worksheet.outputs_emissions_i50, 0.002); end
  def test_outputs_emissions_j50; assert_in_epsilon(5.42376971473413, worksheet.outputs_emissions_j50, 0.002); end
  def test_outputs_emissions_k50; assert_in_epsilon(5.79845056426927, worksheet.outputs_emissions_k50, 0.002); end
  def test_outputs_emissions_l50; assert_in_epsilon(5.99880140697078, worksheet.outputs_emissions_l50, 0.002); end
  def test_outputs_emissions_p50; assert_in_epsilon(5.811749701999231, worksheet.outputs_emissions_p50, 0.002); end
  def test_outputs_emissions_q50; assert_in_epsilon(6.0558490114779735, worksheet.outputs_emissions_q50, 0.002); end
  def test_outputs_emissions_r50; assert_in_epsilon(6.414883970554872, worksheet.outputs_emissions_r50, 0.002); end
  def test_outputs_emissions_s50; assert_in_epsilon(6.769063057976225, worksheet.outputs_emissions_s50, 0.002); end
  def test_outputs_emissions_t50; assert_in_epsilon(7.147195735725347, worksheet.outputs_emissions_t50, 0.002); end
  def test_outputs_emissions_u50; assert_in_epsilon(7.577890569486761, worksheet.outputs_emissions_u50, 0.002); end
  def test_outputs_emissions_v50; assert_in_epsilon(8.063409575155962, worksheet.outputs_emissions_v50, 0.002); end
  def test_outputs_emissions_w50; assert_in_epsilon(8.547716006602524, worksheet.outputs_emissions_w50, 0.002); end
  def test_outputs_emissions_x50; assert_in_epsilon(9.107872941787516, worksheet.outputs_emissions_x50, 0.002); end
  def test_outputs_emissions_c51; assert_equal("G.5", worksheet.outputs_emissions_c51); end
  def test_outputs_emissions_d51; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d51); end
  def test_outputs_emissions_h51; assert_in_epsilon(3.6209602100000002, worksheet.outputs_emissions_h51, 0.002); end
  def test_outputs_emissions_i51; assert_in_epsilon(3.59930749, worksheet.outputs_emissions_i51, 0.002); end
  def test_outputs_emissions_j51; assert_in_epsilon(3.59907449, worksheet.outputs_emissions_j51, 0.002); end
  def test_outputs_emissions_k51; assert_in_epsilon(2.63452254, worksheet.outputs_emissions_k51, 0.002); end
  def test_outputs_emissions_l51; assert_in_epsilon(2.6399138200000003, worksheet.outputs_emissions_l51, 0.002); end
  def test_outputs_emissions_p51; assert_in_epsilon(2.63991382, worksheet.outputs_emissions_p51, 0.002); end
  def test_outputs_emissions_q51; assert_in_epsilon(3.8681616874192404, worksheet.outputs_emissions_q51, 0.002); end
  def test_outputs_emissions_r51; assert_in_epsilon(8.04397569875541, worksheet.outputs_emissions_r51, 0.002); end
  def test_outputs_emissions_s51; assert_in_epsilon(7.172756929185643, worksheet.outputs_emissions_s51, 0.002); end
  def test_outputs_emissions_t51; assert_in_epsilon(8.657714025498919, worksheet.outputs_emissions_t51, 0.002); end
  def test_outputs_emissions_u51; assert_in_epsilon(12.141003933845976, worksheet.outputs_emissions_u51, 0.002); end
  def test_outputs_emissions_v51; assert_in_epsilon(14.835457420777168, worksheet.outputs_emissions_v51, 0.002); end
  def test_outputs_emissions_w51; assert_in_epsilon(12.712250313991433, worksheet.outputs_emissions_w51, 0.002); end
  def test_outputs_emissions_x51; assert_in_epsilon(15.862866543921555, worksheet.outputs_emissions_x51, 0.002); end
  def test_outputs_emissions_c52; assert_equal("G.6", worksheet.outputs_emissions_c52); end
  def test_outputs_emissions_d52; assert_equal("Global Waste", worksheet.outputs_emissions_d52); end
  def test_outputs_emissions_h52; assert_in_epsilon(1.1482566686108997, worksheet.outputs_emissions_h52, 0.002); end
  def test_outputs_emissions_i52; assert_in_epsilon(1.2261372752419115, worksheet.outputs_emissions_i52, 0.002); end
  def test_outputs_emissions_j52; assert_in_epsilon(1.2994175119148552, worksheet.outputs_emissions_j52, 0.002); end
  def test_outputs_emissions_k52; assert_in_epsilon(1.3788103753831609, worksheet.outputs_emissions_k52, 0.002); end
  def test_outputs_emissions_l52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_l52, 0.002); end
  def test_outputs_emissions_p52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_p52, 0.002); end
  def test_outputs_emissions_q52; assert_in_epsilon(1.4998645942593172, worksheet.outputs_emissions_q52, 0.002); end
  def test_outputs_emissions_r52; assert_in_epsilon(1.5791969014397902, worksheet.outputs_emissions_r52, 0.002); end
  def test_outputs_emissions_s52; assert_in_epsilon(1.654109681749471, worksheet.outputs_emissions_s52, 0.002); end
  def test_outputs_emissions_t52; assert_in_epsilon(1.727866563368921, worksheet.outputs_emissions_t52, 0.002); end
  def test_outputs_emissions_u52; assert_in_epsilon(1.8038028321940167, worksheet.outputs_emissions_u52, 0.002); end
  def test_outputs_emissions_v52; assert_in_epsilon(1.8819572457211533, worksheet.outputs_emissions_v52, 0.002); end
  def test_outputs_emissions_w52; assert_in_epsilon(1.955790735740104, worksheet.outputs_emissions_w52, 0.002); end
  def test_outputs_emissions_x52; assert_in_epsilon(2.033425094952068, worksheet.outputs_emissions_x52, 0.002); end
  def test_outputs_emissions_c53; assert_equal("G.7", worksheet.outputs_emissions_c53); end
  def test_outputs_emissions_d53; assert_equal("Global Other", worksheet.outputs_emissions_d53); end
  def test_outputs_emissions_h53; assert_in_delta(0.0, (worksheet.outputs_emissions_h53||0), 0.002); end
  def test_outputs_emissions_i53; assert_in_delta(0.0, (worksheet.outputs_emissions_i53||0), 0.002); end
  def test_outputs_emissions_j53; assert_in_delta(0.0, (worksheet.outputs_emissions_j53||0), 0.002); end
  def test_outputs_emissions_k53; assert_in_delta(0.0, (worksheet.outputs_emissions_k53||0), 0.002); end
  def test_outputs_emissions_l53; assert_in_delta(0.0, (worksheet.outputs_emissions_l53||0), 0.002); end
  def test_outputs_emissions_p53; assert_in_delta(0.0, (worksheet.outputs_emissions_p53||0), 0.002); end
  def test_outputs_emissions_q53; assert_in_delta(0.0, (worksheet.outputs_emissions_q53||0), 0.002); end
  def test_outputs_emissions_r53; assert_in_delta(0.0, (worksheet.outputs_emissions_r53||0), 0.002); end
  def test_outputs_emissions_s53; assert_in_delta(0.0, (worksheet.outputs_emissions_s53||0), 0.002); end
  def test_outputs_emissions_t53; assert_in_delta(0.0, (worksheet.outputs_emissions_t53||0), 0.002); end
  def test_outputs_emissions_u53; assert_in_delta(0.0, (worksheet.outputs_emissions_u53||0), 0.002); end
  def test_outputs_emissions_v53; assert_in_delta(0.0, (worksheet.outputs_emissions_v53||0), 0.002); end
  def test_outputs_emissions_w53; assert_in_delta(0.0, (worksheet.outputs_emissions_w53||0), 0.002); end
  def test_outputs_emissions_x53; assert_in_delta(0.0, (worksheet.outputs_emissions_x53||0), 0.002); end
  def test_outputs_emissions_d54; assert_equal("Total", worksheet.outputs_emissions_d54); end
  def test_outputs_emissions_h54; assert_in_epsilon(34.85493641440893, worksheet.outputs_emissions_h54, 0.002); end
  def test_outputs_emissions_i54; assert_in_epsilon(35.76871935887767, worksheet.outputs_emissions_i54, 0.002); end
  def test_outputs_emissions_j54; assert_in_epsilon(37.821748831061655, worksheet.outputs_emissions_j54, 0.002); end
  def test_outputs_emissions_k54; assert_in_epsilon(41.70222094182745, worksheet.outputs_emissions_k54, 0.002); end
  def test_outputs_emissions_l54; assert_in_epsilon(45.73429569959423, worksheet.outputs_emissions_l54, 0.002); end
  def test_outputs_emissions_p54; assert_in_epsilon(44.5425002454862, worksheet.outputs_emissions_p54, 0.002); end
  def test_outputs_emissions_q54; assert_in_epsilon(47.02875092422019, worksheet.outputs_emissions_q54, 0.002); end
  def test_outputs_emissions_r54; assert_in_epsilon(55.01249906520054, worksheet.outputs_emissions_r54, 0.002); end
  def test_outputs_emissions_s54; assert_in_epsilon(58.16691341508923, worksheet.outputs_emissions_s54, 0.002); end
  def test_outputs_emissions_t54; assert_in_epsilon(63.51216012605854, worksheet.outputs_emissions_t54, 0.002); end
  def test_outputs_emissions_u54; assert_in_epsilon(69.83673322094414, worksheet.outputs_emissions_u54, 0.002); end
  def test_outputs_emissions_v54; assert_in_epsilon(75.66645180331427, worksheet.outputs_emissions_v54, 0.002); end
  def test_outputs_emissions_w54; assert_in_epsilon(75.60999781917755, worksheet.outputs_emissions_w54, 0.002); end
  def test_outputs_emissions_x54; assert_in_epsilon(81.11202946782126, worksheet.outputs_emissions_x54, 0.002); end
  def test_outputs_emissions_y54; assert_in_epsilon(82.972453348556, worksheet.outputs_emissions_y54, 0.002); end
  def test_outputs_emissions_z54; assert_in_epsilon(84.17794360352089, worksheet.outputs_emissions_z54, 0.002); end
  def test_outputs_emissions_aa54; assert_in_epsilon(85.59165465793753, worksheet.outputs_emissions_aa54, 0.002); end
  def test_outputs_emissions_ab54; assert_in_epsilon(86.3307928143067, worksheet.outputs_emissions_ab54, 0.002); end
  def test_outputs_emissions_ac54; assert_in_epsilon(86.88491882615557, worksheet.outputs_emissions_ac54, 0.002); end
  def test_outputs_emissions_ad54; assert_in_epsilon(87.3315697378903, worksheet.outputs_emissions_ad54, 0.002); end
  def test_outputs_emissions_ae54; assert_in_epsilon(87.61865572608251, worksheet.outputs_emissions_ae54, 0.002); end
  def test_outputs_emissions_af54; assert_in_epsilon(87.8311531065255, worksheet.outputs_emissions_af54, 0.002); end
  def test_outputs_emissions_ag54; assert_in_epsilon(87.98728176278654, worksheet.outputs_emissions_ag54, 0.002); end
  def test_outputs_emissions_ah54; assert_in_epsilon(88.09547424689443, worksheet.outputs_emissions_ah54, 0.002); end
  def test_outputs_emissions_d13; assert_equal("IPCC Sector", worksheet.outputs_emissions_d13); end
  def test_outputs_emissions_p13; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p13, 0.002); end
  def test_outputs_emissions_q13; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q13, 0.002); end
  def test_outputs_emissions_r13; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r13, 0.002); end
  def test_outputs_emissions_s13; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s13, 0.002); end
  def test_outputs_emissions_t13; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t13, 0.002); end
  def test_outputs_emissions_u13; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u13, 0.002); end
  def test_outputs_emissions_v13; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v13, 0.002); end
  def test_outputs_emissions_w13; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w13, 0.002); end
  def test_outputs_emissions_x13; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x13, 0.002); end
  def test_outputs_emissions_y13; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y13, 0.002); end
  def test_outputs_emissions_z13; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z13, 0.002); end
  def test_outputs_emissions_aa13; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa13, 0.002); end
  def test_outputs_emissions_ab13; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab13, 0.002); end
  def test_outputs_emissions_ac13; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac13, 0.002); end
  def test_outputs_emissions_ad13; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad13, 0.002); end
  def test_outputs_emissions_ae13; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae13, 0.002); end
  def test_outputs_emissions_af13; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af13, 0.002); end
  def test_outputs_emissions_ag13; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag13, 0.002); end
  def test_outputs_emissions_ah13; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah13, 0.002); end
  def test_outputs_emissions_c14; assert_equal("G.1A", worksheet.outputs_emissions_c14); end
  def test_outputs_emissions_d14; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d14); end
  def test_outputs_emissions_p14; assert_in_epsilon(4.310618237616353, worksheet.outputs_emissions_p14, 0.002); end
  def test_outputs_emissions_q14; assert_in_epsilon(4.208671178985959, worksheet.outputs_emissions_q14, 0.002); end
  def test_outputs_emissions_r14; assert_in_epsilon(4.380198221789942, worksheet.outputs_emissions_r14, 0.002); end
  def test_outputs_emissions_s14; assert_in_epsilon(4.572976915844915, worksheet.outputs_emissions_s14, 0.002); end
  def test_outputs_emissions_t14; assert_in_epsilon(4.742766629593103, worksheet.outputs_emissions_t14, 0.002); end
  def test_outputs_emissions_u14; assert_in_epsilon(4.7953013718089865, worksheet.outputs_emissions_u14, 0.002); end
  def test_outputs_emissions_v14; assert_in_epsilon(4.87861333885662, worksheet.outputs_emissions_v14, 0.002); end
  def test_outputs_emissions_w14; assert_in_epsilon(4.860890233359253, worksheet.outputs_emissions_w14, 0.002); end
  def test_outputs_emissions_x14; assert_in_epsilon(4.875177237182239, worksheet.outputs_emissions_x14, 0.002); end
  def test_outputs_emissions_c15; assert_equal("G.1B", worksheet.outputs_emissions_c15); end
  def test_outputs_emissions_d15; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d15); end
  def test_outputs_emissions_p15; assert_in_delta(0.2983876633439804, worksheet.outputs_emissions_p15, 0.002); end
  def test_outputs_emissions_q15; assert_in_delta(0.2916116928755223, worksheet.outputs_emissions_q15, 0.002); end
  def test_outputs_emissions_r15; assert_in_delta(0.3008470480577422, worksheet.outputs_emissions_r15, 0.002); end
  def test_outputs_emissions_s15; assert_in_delta(0.3139551912017412, worksheet.outputs_emissions_s15, 0.002); end
  def test_outputs_emissions_t15; assert_in_delta(0.3250907441977817, worksheet.outputs_emissions_t15, 0.002); end
  def test_outputs_emissions_u15; assert_in_delta(0.33128849571749647, worksheet.outputs_emissions_u15, 0.002); end
  def test_outputs_emissions_v15; assert_in_delta(0.3407188015218985, worksheet.outputs_emissions_v15, 0.002); end
  def test_outputs_emissions_w15; assert_in_delta(0.344983330064435, worksheet.outputs_emissions_w15, 0.002); end
  def test_outputs_emissions_x15; assert_in_delta(0.3521252887999644, worksheet.outputs_emissions_x15, 0.002); end
  def test_outputs_emissions_c16; assert_equal("G.2", worksheet.outputs_emissions_c16); end
  def test_outputs_emissions_d16; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d16); end
  def test_outputs_emissions_p16; assert_in_delta(0.36045848019057186, worksheet.outputs_emissions_p16, 0.002); end
  def test_outputs_emissions_q16; assert_in_delta(0.36059566774060586, worksheet.outputs_emissions_q16, 0.002); end
  def test_outputs_emissions_r16; assert_in_delta(0.3695845348084563, worksheet.outputs_emissions_r16, 0.002); end
  def test_outputs_emissions_s16; assert_in_delta(0.3795294415811187, worksheet.outputs_emissions_s16, 0.002); end
  def test_outputs_emissions_t16; assert_in_delta(0.38967706254559564, worksheet.outputs_emissions_t16, 0.002); end
  def test_outputs_emissions_u16; assert_in_delta(0.3991525410930666, worksheet.outputs_emissions_u16, 0.002); end
  def test_outputs_emissions_v16; assert_in_delta(0.41042664667318424, worksheet.outputs_emissions_v16, 0.002); end
  def test_outputs_emissions_w16; assert_in_delta(0.42280879583395375, worksheet.outputs_emissions_w16, 0.002); end
  def test_outputs_emissions_x16; assert_in_delta(0.4378819020675991, worksheet.outputs_emissions_x16, 0.002); end
  def test_outputs_emissions_c17; assert_equal("G.3", worksheet.outputs_emissions_c17); end
  def test_outputs_emissions_d17; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d17); end
  def test_outputs_emissions_p17; assert_in_delta(0.0, (worksheet.outputs_emissions_p17||0), 0.002); end
  def test_outputs_emissions_q17; assert_in_delta(0.0, (worksheet.outputs_emissions_q17||0), 0.002); end
  def test_outputs_emissions_r17; assert_in_delta(0.0, (worksheet.outputs_emissions_r17||0), 0.002); end
  def test_outputs_emissions_s17; assert_in_delta(0.0, (worksheet.outputs_emissions_s17||0), 0.002); end
  def test_outputs_emissions_t17; assert_in_delta(0.0, (worksheet.outputs_emissions_t17||0), 0.002); end
  def test_outputs_emissions_u17; assert_in_delta(0.0, (worksheet.outputs_emissions_u17||0), 0.002); end
  def test_outputs_emissions_v17; assert_in_delta(0.0, (worksheet.outputs_emissions_v17||0), 0.002); end
  def test_outputs_emissions_w17; assert_in_delta(0.0, (worksheet.outputs_emissions_w17||0), 0.002); end
  def test_outputs_emissions_x17; assert_in_delta(0.0, (worksheet.outputs_emissions_x17||0), 0.002); end
  def test_outputs_emissions_c18; assert_equal("G.4", worksheet.outputs_emissions_c18); end
  def test_outputs_emissions_d18; assert_equal("Global Agriculture", worksheet.outputs_emissions_d18); end
  def test_outputs_emissions_p18; assert_in_delta(0.8342496228006158, worksheet.outputs_emissions_p18, 0.002); end
  def test_outputs_emissions_q18; assert_in_delta(0.8267616717436741, worksheet.outputs_emissions_q18, 0.002); end
  def test_outputs_emissions_r18; assert_in_delta(0.8312935888616918, worksheet.outputs_emissions_r18, 0.002); end
  def test_outputs_emissions_s18; assert_in_delta(0.8374016096884106, worksheet.outputs_emissions_s18, 0.002); end
  def test_outputs_emissions_t18; assert_in_delta(0.8483381817247234, worksheet.outputs_emissions_t18, 0.002); end
  def test_outputs_emissions_u18; assert_in_delta(0.8666937158178875, worksheet.outputs_emissions_u18, 0.002); end
  def test_outputs_emissions_v18; assert_in_delta(0.8920996573015485, worksheet.outputs_emissions_v18, 0.002); end
  def test_outputs_emissions_w18; assert_in_delta(0.9182760852682827, worksheet.outputs_emissions_w18, 0.002); end
  def test_outputs_emissions_x18; assert_in_delta(0.9536096105450839, worksheet.outputs_emissions_x18, 0.002); end
  def test_outputs_emissions_c19; assert_equal("G.5", worksheet.outputs_emissions_c19); end
  def test_outputs_emissions_d19; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d19); end
  def test_outputs_emissions_p19; assert_in_delta(0.3789473431389396, worksheet.outputs_emissions_p19, 0.002); end
  def test_outputs_emissions_q19; assert_in_delta(0.5280923974828521, worksheet.outputs_emissions_q19, 0.002); end
  def test_outputs_emissions_r19; assert_in_epsilon(1.0424047353043893, worksheet.outputs_emissions_r19, 0.002); end
  def test_outputs_emissions_s19; assert_in_delta(0.8873426273265566, worksheet.outputs_emissions_s19, 0.002); end
  def test_outputs_emissions_t19; assert_in_epsilon(1.0276295271405493, worksheet.outputs_emissions_t19, 0.002); end
  def test_outputs_emissions_u19; assert_in_epsilon(1.3885832365480086, worksheet.outputs_emissions_u19, 0.002); end
  def test_outputs_emissions_v19; assert_in_epsilon(1.6413288147689113, worksheet.outputs_emissions_v19, 0.002); end
  def test_outputs_emissions_w19; assert_in_epsilon(1.3656695477792764, worksheet.outputs_emissions_w19, 0.002); end
  def test_outputs_emissions_x19; assert_in_epsilon(1.6608687982101829, worksheet.outputs_emissions_x19, 0.002); end
  def test_outputs_emissions_c20; assert_equal("G.6", worksheet.outputs_emissions_c20); end
  def test_outputs_emissions_d20; assert_equal("Global Waste", worksheet.outputs_emissions_d20); end
  def test_outputs_emissions_p20; assert_in_delta(0.21120726972391873, worksheet.outputs_emissions_p20, 0.002); end
  def test_outputs_emissions_q20; assert_in_delta(0.20476576562405777, worksheet.outputs_emissions_q20, 0.002); end
  def test_outputs_emissions_r20; assert_in_delta(0.20464536314966186, worksheet.outputs_emissions_r20, 0.002); end
  def test_outputs_emissions_s20; assert_in_delta(0.20463010881040852, worksheet.outputs_emissions_s20, 0.002); end
  def test_outputs_emissions_t20; assert_in_delta(0.20508955299830975, worksheet.outputs_emissions_t20, 0.002); end
  def test_outputs_emissions_u20; assert_in_delta(0.20630339867034325, worksheet.outputs_emissions_u20, 0.002); end
  def test_outputs_emissions_v20; assert_in_delta(0.2082113525693669, worksheet.outputs_emissions_v20, 0.002); end
  def test_outputs_emissions_w20; assert_in_delta(0.21010944432783502, worksheet.outputs_emissions_w20, 0.002); end
  def test_outputs_emissions_x20; assert_in_delta(0.21290302634473005, worksheet.outputs_emissions_x20, 0.002); end
  def test_outputs_emissions_c21; assert_equal("G.7", worksheet.outputs_emissions_c21); end
  def test_outputs_emissions_d21; assert_equal("Global Other", worksheet.outputs_emissions_d21); end
  def test_outputs_emissions_p21; assert_in_delta(0.0, (worksheet.outputs_emissions_p21||0), 0.002); end
  def test_outputs_emissions_q21; assert_in_delta(0.0, (worksheet.outputs_emissions_q21||0), 0.002); end
  def test_outputs_emissions_r21; assert_in_delta(0.0, (worksheet.outputs_emissions_r21||0), 0.002); end
  def test_outputs_emissions_s21; assert_in_delta(0.0, (worksheet.outputs_emissions_s21||0), 0.002); end
  def test_outputs_emissions_t21; assert_in_delta(0.0, (worksheet.outputs_emissions_t21||0), 0.002); end
  def test_outputs_emissions_u21; assert_in_delta(0.0, (worksheet.outputs_emissions_u21||0), 0.002); end
  def test_outputs_emissions_v21; assert_in_delta(0.0, (worksheet.outputs_emissions_v21||0), 0.002); end
  def test_outputs_emissions_w21; assert_in_delta(0.0, (worksheet.outputs_emissions_w21||0), 0.002); end
  def test_outputs_emissions_x21; assert_in_delta(0.0, (worksheet.outputs_emissions_x21||0), 0.002); end
  def test_outputs_emissions_d22; assert_equal("Total", worksheet.outputs_emissions_d22); end
  def test_outputs_emissions_p22; assert_in_epsilon(6.3938686168143795, worksheet.outputs_emissions_p22, 0.002); end
  def test_outputs_emissions_q22; assert_in_epsilon(6.420498374452671, worksheet.outputs_emissions_q22, 0.002); end
  def test_outputs_emissions_r22; assert_in_epsilon(7.128973491971882, worksheet.outputs_emissions_r22, 0.002); end
  def test_outputs_emissions_s22; assert_in_epsilon(7.195835894453151, worksheet.outputs_emissions_s22, 0.002); end
  def test_outputs_emissions_t22; assert_in_epsilon(7.5385916982000625, worksheet.outputs_emissions_t22, 0.002); end
  def test_outputs_emissions_u22; assert_in_epsilon(7.987322759655788, worksheet.outputs_emissions_u22, 0.002); end
  def test_outputs_emissions_v22; assert_in_epsilon(8.371398611691529, worksheet.outputs_emissions_v22, 0.002); end
  def test_outputs_emissions_w22; assert_in_epsilon(8.122737436633036, worksheet.outputs_emissions_w22, 0.002); end
  def test_outputs_emissions_x22; assert_in_epsilon(8.4925658631498, worksheet.outputs_emissions_x22, 0.002); end
  def test_outputs_emissions_p217; assert_in_delta(0.20277777777777778, worksheet.outputs_emissions_p217, 0.002); end
  def test_outputs_emissions_p214; assert_in_delta(0.1483198561710547, worksheet.outputs_emissions_p214, 0.002); end
  def test_outputs_emissions_q214; assert_in_delta(0.13256724052036895, worksheet.outputs_emissions_q214, 0.002); end
  def test_outputs_emissions_r214; assert_in_delta(0.13106455743452486, worksheet.outputs_emissions_r214, 0.002); end
  def test_outputs_emissions_s214; assert_in_delta(0.13318430255637662, worksheet.outputs_emissions_s214, 0.002); end
  def test_outputs_emissions_t214; assert_in_delta(0.1353311531887306, worksheet.outputs_emissions_t214, 0.002); end
  def test_outputs_emissions_u214; assert_in_delta(0.13458176759514412, worksheet.outputs_emissions_u214, 0.002); end
  def test_outputs_emissions_v214; assert_in_delta(0.13286621735124443, worksheet.outputs_emissions_v214, 0.002); end
  def test_outputs_emissions_w214; assert_in_delta(0.1266815979427632, worksheet.outputs_emissions_w214, 0.002); end
  def test_outputs_emissions_x214; assert_in_delta(0.12196487886219869, worksheet.outputs_emissions_x214, 0.002); end
  def test_outputs_emissions_p219; assert_in_delta(0.0, (worksheet.outputs_emissions_p219||0), 0.002); end
  def test_outputs_emissions_q219; assert_in_delta(-0.10620705856482585, worksheet.outputs_emissions_q219, 0.002); end
  def test_outputs_emissions_r219; assert_in_delta(-0.11633842684306277, worksheet.outputs_emissions_r219, 0.002); end
  def test_outputs_emissions_s219; assert_in_delta(-0.10204671178498523, worksheet.outputs_emissions_s219, 0.002); end
  def test_outputs_emissions_t219; assert_in_delta(-0.08757224634403946, worksheet.outputs_emissions_t219, 0.002); end
  def test_outputs_emissions_u219; assert_in_delta(-0.09262474310969315, worksheet.outputs_emissions_u219, 0.002); end
  def test_outputs_emissions_v219; assert_in_delta(-0.10419130127788052, worksheet.outputs_emissions_v219, 0.002); end
  def test_outputs_emissions_w219; assert_in_delta(-0.14588915325899768, worksheet.outputs_emissions_w219, 0.002); end
  def test_outputs_emissions_x219; assert_in_delta(-0.17769014877186287, worksheet.outputs_emissions_x219, 0.002); end
  def test_outputs_emissions_h183; assert_in_delta(0.012219185474713169, worksheet.outputs_emissions_h183, 0.002); end
  def test_outputs_emissions_i183; assert_in_delta(0.01203682888170151, worksheet.outputs_emissions_i183, 0.002); end
  def test_outputs_emissions_j183; assert_in_delta(0.011848757243237622, worksheet.outputs_emissions_j183, 0.002); end
  def test_outputs_emissions_k183; assert_in_delta(0.012691091043429093, worksheet.outputs_emissions_k183, 0.002); end
  def test_outputs_emissions_l183; assert_in_delta(0.013268513817881094, worksheet.outputs_emissions_l183, 0.002); end
  def test_outputs_emissions_p183; assert_in_delta(0.00896610247220362, worksheet.outputs_emissions_p183, 0.002); end
  def test_outputs_emissions_q183; assert_in_delta(0.009239097573595064, worksheet.outputs_emissions_q183, 0.002); end
  def test_outputs_emissions_r183; assert_in_delta(0.009721165242340462, worksheet.outputs_emissions_r183, 0.002); end
  def test_outputs_emissions_s183; assert_in_delta(0.010210724120057513, worksheet.outputs_emissions_s183, 0.002); end
  def test_outputs_emissions_t183; assert_in_delta(0.010705769820517415, worksheet.outputs_emissions_t183, 0.002); end
  def test_outputs_emissions_u183; assert_in_delta(0.011205757394869271, worksheet.outputs_emissions_u183, 0.002); end
  def test_outputs_emissions_v183; assert_in_delta(0.011779688685198022, worksheet.outputs_emissions_v183, 0.002); end
  def test_outputs_emissions_w183; assert_in_delta(0.012326838979262924, worksheet.outputs_emissions_w183, 0.002); end
  def test_outputs_emissions_x183; assert_in_delta(0.012952527036400444, worksheet.outputs_emissions_x183, 0.002); end
  def test_outputs_emissions_y183; assert_in_delta(0.013240744027253087, worksheet.outputs_emissions_y183, 0.002); end
  def test_outputs_emissions_z183; assert_in_delta(0.013481818158692174, worksheet.outputs_emissions_z183, 0.002); end
  def test_outputs_emissions_aa183; assert_in_delta(0.013672389723298, worksheet.outputs_emissions_aa183, 0.002); end
  def test_outputs_emissions_ab183; assert_in_delta(0.013791167066636096, worksheet.outputs_emissions_ab183, 0.002); end
  def test_outputs_emissions_ac183; assert_in_delta(0.013881986868134293, worksheet.outputs_emissions_ac183, 0.002); end
  def test_outputs_emissions_ad183; assert_in_delta(0.013948014705192243, worksheet.outputs_emissions_ad183, 0.002); end
  def test_outputs_emissions_ae183; assert_in_delta(0.013993492827204794, worksheet.outputs_emissions_ae183, 0.002); end
  def test_outputs_emissions_af183; assert_in_delta(0.01402687657769863, worksheet.outputs_emissions_af183, 0.002); end
  def test_outputs_emissions_ag183; assert_in_delta(0.014050783379776745, worksheet.outputs_emissions_ag183, 0.002); end
  def test_outputs_emissions_ah183; assert_in_delta(0.014067740211083188, worksheet.outputs_emissions_ah183, 0.002); end
  def test_outputs_emissions_c174; assert_equal("Column1", worksheet.outputs_emissions_c174); end
  def test_outputs_emissions_d174; assert_equal("IPCC Sector", worksheet.outputs_emissions_d174); end
  def test_outputs_emissions_h174; assert_equal("1990", worksheet.outputs_emissions_h174); end
  def test_outputs_emissions_i174; assert_equal("1995", worksheet.outputs_emissions_i174); end
  def test_outputs_emissions_j174; assert_equal("2000", worksheet.outputs_emissions_j174); end
  def test_outputs_emissions_k174; assert_equal("2005", worksheet.outputs_emissions_k174); end
  def test_outputs_emissions_l174; assert_equal("2010", worksheet.outputs_emissions_l174); end
  def test_outputs_emissions_p174; assert_equal("2011", worksheet.outputs_emissions_p174); end
  def test_outputs_emissions_q174; assert_equal("2015", worksheet.outputs_emissions_q174); end
  def test_outputs_emissions_r174; assert_equal("2020", worksheet.outputs_emissions_r174); end
  def test_outputs_emissions_s174; assert_equal("2025", worksheet.outputs_emissions_s174); end
  def test_outputs_emissions_t174; assert_equal("2030", worksheet.outputs_emissions_t174); end
  def test_outputs_emissions_u174; assert_equal("2035", worksheet.outputs_emissions_u174); end
  def test_outputs_emissions_v174; assert_equal("2040", worksheet.outputs_emissions_v174); end
  def test_outputs_emissions_w174; assert_equal("2045", worksheet.outputs_emissions_w174); end
  def test_outputs_emissions_x174; assert_equal("2050", worksheet.outputs_emissions_x174); end
  def test_outputs_emissions_y174; assert_equal("2055", worksheet.outputs_emissions_y174); end
  def test_outputs_emissions_z174; assert_equal("2060", worksheet.outputs_emissions_z174); end
  def test_outputs_emissions_aa174; assert_equal("2065", worksheet.outputs_emissions_aa174); end
  def test_outputs_emissions_ab174; assert_equal("2070", worksheet.outputs_emissions_ab174); end
  def test_outputs_emissions_ac174; assert_equal("2075", worksheet.outputs_emissions_ac174); end
  def test_outputs_emissions_ad174; assert_equal("2080", worksheet.outputs_emissions_ad174); end
  def test_outputs_emissions_ae174; assert_equal("2085", worksheet.outputs_emissions_ae174); end
  def test_outputs_emissions_af174; assert_equal("2090", worksheet.outputs_emissions_af174); end
  def test_outputs_emissions_ag174; assert_equal("2095", worksheet.outputs_emissions_ag174); end
  def test_outputs_emissions_ah174; assert_equal("2100", worksheet.outputs_emissions_ah174); end
  def test_outputs_emissions_c175; assert_equal("G.1A", worksheet.outputs_emissions_c175); end
  def test_outputs_emissions_d175; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d175); end
  def test_outputs_emissions_h175; assert_in_delta(0.0009130686233989812, worksheet.outputs_emissions_h175, 0.002); end
  def test_outputs_emissions_i175; assert_in_delta(0.0009965133809872679, worksheet.outputs_emissions_i175, 0.002); end
  def test_outputs_emissions_j175; assert_in_delta(0.001054643547268351, worksheet.outputs_emissions_j175, 0.002); end
  def test_outputs_emissions_k175; assert_in_delta(0.001146013024618166, worksheet.outputs_emissions_k175, 0.002); end
  def test_outputs_emissions_l175; assert_in_delta(0.0012359546542829699, worksheet.outputs_emissions_l175, 0.002); end
  def test_outputs_emissions_p175; assert_in_delta(0.001043235770873186, worksheet.outputs_emissions_p175, 0.002); end
  def test_outputs_emissions_q175; assert_in_delta(0.0011051360680983755, worksheet.outputs_emissions_q175, 0.002); end
  def test_outputs_emissions_r175; assert_in_delta(0.0012153309640164226, worksheet.outputs_emissions_r175, 0.002); end
  def test_outputs_emissions_s175; assert_in_delta(0.0013139411406871112, worksheet.outputs_emissions_s175, 0.002); end
  def test_outputs_emissions_t175; assert_in_delta(0.0013995019051878438, worksheet.outputs_emissions_t175, 0.002); end
  def test_outputs_emissions_u175; assert_in_delta(0.0014457940007782063, worksheet.outputs_emissions_u175, 0.002); end
  def test_outputs_emissions_v175; assert_in_delta(0.0015111899734854047, worksheet.outputs_emissions_v175, 0.002); end
  def test_outputs_emissions_w175; assert_in_delta(0.00155699164196636, worksheet.outputs_emissions_w175, 0.002); end
  def test_outputs_emissions_x175; assert_in_delta(0.0016054313620741155, worksheet.outputs_emissions_x175, 0.002); end
  def test_outputs_emissions_c176; assert_equal("G.1B", worksheet.outputs_emissions_c176); end
  def test_outputs_emissions_d176; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d176); end
  def test_outputs_emissions_h176; assert_in_delta(0.0, (worksheet.outputs_emissions_h176||0), 0.002); end
  def test_outputs_emissions_i176; assert_in_delta(0.0, (worksheet.outputs_emissions_i176||0), 0.002); end
  def test_outputs_emissions_j176; assert_in_delta(0.0, (worksheet.outputs_emissions_j176||0), 0.002); end
  def test_outputs_emissions_k176; assert_in_delta(0.0, (worksheet.outputs_emissions_k176||0), 0.002); end
  def test_outputs_emissions_l176; assert_in_delta(0.0, (worksheet.outputs_emissions_l176||0), 0.002); end
  def test_outputs_emissions_p176; assert_in_delta(0.0, (worksheet.outputs_emissions_p176||0), 0.002); end
  def test_outputs_emissions_q176; assert_in_delta(0.0, (worksheet.outputs_emissions_q176||0), 0.002); end
  def test_outputs_emissions_r176; assert_in_delta(0.0, (worksheet.outputs_emissions_r176||0), 0.002); end
  def test_outputs_emissions_s176; assert_in_delta(0.0, (worksheet.outputs_emissions_s176||0), 0.002); end
  def test_outputs_emissions_t176; assert_in_delta(0.0, (worksheet.outputs_emissions_t176||0), 0.002); end
  def test_outputs_emissions_u176; assert_in_delta(0.0, (worksheet.outputs_emissions_u176||0), 0.002); end
  def test_outputs_emissions_v176; assert_in_delta(0.0, (worksheet.outputs_emissions_v176||0), 0.002); end
  def test_outputs_emissions_w176; assert_in_delta(0.0, (worksheet.outputs_emissions_w176||0), 0.002); end
  def test_outputs_emissions_x176; assert_in_delta(0.0, (worksheet.outputs_emissions_x176||0), 0.002); end
  def test_outputs_emissions_c177; assert_equal("G.2", worksheet.outputs_emissions_c177); end
  def test_outputs_emissions_d177; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d177); end
  def test_outputs_emissions_h177; assert_in_delta(0.0010588904336770641, worksheet.outputs_emissions_h177, 0.002); end
  def test_outputs_emissions_i177; assert_in_delta(0.001058384026600717, worksheet.outputs_emissions_i177, 0.002); end
  def test_outputs_emissions_j177; assert_in_delta(0.0008160774983504037, worksheet.outputs_emissions_j177, 0.002); end
  def test_outputs_emissions_k177; assert_in_delta(0.0007678739913186566, worksheet.outputs_emissions_k177, 0.002); end
  def test_outputs_emissions_l177; assert_in_delta(0.0007341236710068264, worksheet.outputs_emissions_l177, 0.002); end
  def test_outputs_emissions_p177; assert_in_delta(0.00044470400000000014, worksheet.outputs_emissions_p177, 0.002); end
  def test_outputs_emissions_q177; assert_in_delta(0.0004761890533183457, worksheet.outputs_emissions_q177, 0.002); end
  def test_outputs_emissions_r177; assert_in_delta(0.0005071836866066881, worksheet.outputs_emissions_r177, 0.002); end
  def test_outputs_emissions_s177; assert_in_delta(0.0005721484567291445, worksheet.outputs_emissions_s177, 0.002); end
  def test_outputs_emissions_t177; assert_in_delta(0.0006412589000168379, worksheet.outputs_emissions_t177, 0.002); end
  def test_outputs_emissions_u177; assert_in_delta(0.0007118417561077084, worksheet.outputs_emissions_u177, 0.002); end
  def test_outputs_emissions_v177; assert_in_delta(0.0007930533518787336, worksheet.outputs_emissions_v177, 0.002); end
  def test_outputs_emissions_w177; assert_in_delta(0.0008777668822892909, worksheet.outputs_emissions_w177, 0.002); end
  def test_outputs_emissions_x177; assert_in_delta(0.0009750671256146219, worksheet.outputs_emissions_x177, 0.002); end
  def test_outputs_emissions_c178; assert_equal("G.3", worksheet.outputs_emissions_c178); end
  def test_outputs_emissions_d178; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d178); end
  def test_outputs_emissions_h178; assert_in_delta(0.0, (worksheet.outputs_emissions_h178||0), 0.002); end
  def test_outputs_emissions_i178; assert_in_delta(0.0, (worksheet.outputs_emissions_i178||0), 0.002); end
  def test_outputs_emissions_j178; assert_in_delta(0.0, (worksheet.outputs_emissions_j178||0), 0.002); end
  def test_outputs_emissions_k178; assert_in_delta(0.0, (worksheet.outputs_emissions_k178||0), 0.002); end
  def test_outputs_emissions_l178; assert_in_delta(0.0, (worksheet.outputs_emissions_l178||0), 0.002); end
  def test_outputs_emissions_p178; assert_in_delta(0.0, (worksheet.outputs_emissions_p178||0), 0.002); end
  def test_outputs_emissions_q178; assert_in_delta(0.0, (worksheet.outputs_emissions_q178||0), 0.002); end
  def test_outputs_emissions_r178; assert_in_delta(0.0, (worksheet.outputs_emissions_r178||0), 0.002); end
  def test_outputs_emissions_s178; assert_in_delta(0.0, (worksheet.outputs_emissions_s178||0), 0.002); end
  def test_outputs_emissions_t178; assert_in_delta(0.0, (worksheet.outputs_emissions_t178||0), 0.002); end
  def test_outputs_emissions_u178; assert_in_delta(0.0, (worksheet.outputs_emissions_u178||0), 0.002); end
  def test_outputs_emissions_v178; assert_in_delta(0.0, (worksheet.outputs_emissions_v178||0), 0.002); end
  def test_outputs_emissions_w178; assert_in_delta(0.0, (worksheet.outputs_emissions_w178||0), 0.002); end
  def test_outputs_emissions_x178; assert_in_delta(0.0, (worksheet.outputs_emissions_x178||0), 0.002); end
  def test_outputs_emissions_c179; assert_equal("G.4", worksheet.outputs_emissions_c179); end
  def test_outputs_emissions_d179; assert_equal("Global Agriculture", worksheet.outputs_emissions_d179); end
  def test_outputs_emissions_h179; assert_in_delta(0.009956991391139623, worksheet.outputs_emissions_h179, 0.002); end
  def test_outputs_emissions_i179; assert_in_delta(0.009679164975862868, worksheet.outputs_emissions_i179, 0.002); end
  def test_outputs_emissions_j179; assert_in_delta(0.009651220745010868, worksheet.outputs_emissions_j179, 0.002); end
  def test_outputs_emissions_k179; assert_in_delta(0.01042663335693185, worksheet.outputs_emissions_k179, 0.002); end
  def test_outputs_emissions_l179; assert_in_delta(0.010931037319002792, worksheet.outputs_emissions_l179, 0.002); end
  def test_outputs_emissions_p179; assert_in_delta(0.007110764527741934, worksheet.outputs_emissions_p179, 0.002); end
  def test_outputs_emissions_q179; assert_in_delta(0.007283257379626233, worksheet.outputs_emissions_q179, 0.002); end
  def test_outputs_emissions_r179; assert_in_delta(0.007604326301124401, worksheet.outputs_emissions_r179, 0.002); end
  def test_outputs_emissions_s179; assert_in_delta(0.007911604566576807, worksheet.outputs_emissions_s179, 0.002); end
  def test_outputs_emissions_t179; assert_in_delta(0.00823356202081918, worksheet.outputs_emissions_t179, 0.002); end
  def test_outputs_emissions_u179; assert_in_delta(0.008597713413697982, worksheet.outputs_emissions_u179, 0.002); end
  def test_outputs_emissions_v179; assert_in_delta(0.009005522036675973, worksheet.outputs_emissions_v179, 0.002); end
  def test_outputs_emissions_w179; assert_in_delta(0.00940372096435994, worksheet.outputs_emissions_w179, 0.002); end
  def test_outputs_emissions_x179; assert_in_delta(0.009864283816367163, worksheet.outputs_emissions_x179, 0.002); end
  def test_outputs_emissions_c180; assert_equal("G.5", worksheet.outputs_emissions_c180); end
  def test_outputs_emissions_d180; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d180); end
  def test_outputs_emissions_h180; assert_in_delta(0.0, (worksheet.outputs_emissions_h180||0), 0.002); end
  def test_outputs_emissions_i180; assert_in_delta(0.0, (worksheet.outputs_emissions_i180||0), 0.002); end
  def test_outputs_emissions_j180; assert_in_delta(0.0, (worksheet.outputs_emissions_j180||0), 0.002); end
  def test_outputs_emissions_k180; assert_in_delta(0.0, (worksheet.outputs_emissions_k180||0), 0.002); end
  def test_outputs_emissions_l180; assert_in_delta(0.0, (worksheet.outputs_emissions_l180||0), 0.002); end
  def test_outputs_emissions_p180; assert_in_delta(0.0, (worksheet.outputs_emissions_p180||0), 0.002); end
  def test_outputs_emissions_q180; assert_in_delta(0.0, (worksheet.outputs_emissions_q180||0), 0.002); end
  def test_outputs_emissions_r180; assert_in_delta(0.0, (worksheet.outputs_emissions_r180||0), 0.002); end
  def test_outputs_emissions_s180; assert_in_delta(0.0, (worksheet.outputs_emissions_s180||0), 0.002); end
  def test_outputs_emissions_t180; assert_in_delta(0.0, (worksheet.outputs_emissions_t180||0), 0.002); end
  def test_outputs_emissions_u180; assert_in_delta(0.0, (worksheet.outputs_emissions_u180||0), 0.002); end
  def test_outputs_emissions_v180; assert_in_delta(0.0, (worksheet.outputs_emissions_v180||0), 0.002); end
  def test_outputs_emissions_w180; assert_in_delta(0.0, (worksheet.outputs_emissions_w180||0), 0.002); end
  def test_outputs_emissions_x180; assert_in_delta(0.0, (worksheet.outputs_emissions_x180||0), 0.002); end
  def test_outputs_emissions_c181; assert_equal("G.6", worksheet.outputs_emissions_c181); end
  def test_outputs_emissions_d181; assert_equal("Global Waste", worksheet.outputs_emissions_d181); end
  def test_outputs_emissions_h181; assert_in_delta(0.0002902350264975083, worksheet.outputs_emissions_h181, 0.002); end
  def test_outputs_emissions_i181; assert_in_delta(0.0003027664982506464, worksheet.outputs_emissions_i181, 0.002); end
  def test_outputs_emissions_j181; assert_in_delta(0.0003268154526079815, worksheet.outputs_emissions_j181, 0.002); end
  def test_outputs_emissions_k181; assert_in_delta(0.0003505706705604558, worksheet.outputs_emissions_k181, 0.002); end
  def test_outputs_emissions_l181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_l181, 0.002); end
  def test_outputs_emissions_p181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_p181, 0.002); end
  def test_outputs_emissions_q181; assert_in_delta(0.00037451507255210957, worksheet.outputs_emissions_q181, 0.002); end
  def test_outputs_emissions_r181; assert_in_delta(0.00039432429059295106, worksheet.outputs_emissions_r181, 0.002); end
  def test_outputs_emissions_s181; assert_in_delta(0.00041302995606445, worksheet.outputs_emissions_s181, 0.002); end
  def test_outputs_emissions_t181; assert_in_delta(0.0004314469944935536, worksheet.outputs_emissions_t181, 0.002); end
  def test_outputs_emissions_u181; assert_in_delta(0.0004504082242853745, worksheet.outputs_emissions_u181, 0.002); end
  def test_outputs_emissions_v181; assert_in_delta(0.00046992332315790817, worksheet.outputs_emissions_v181, 0.002); end
  def test_outputs_emissions_w181; assert_in_delta(0.0004883594906473329, worksheet.outputs_emissions_w181, 0.002); end
  def test_outputs_emissions_x181; assert_in_delta(0.0005077447323445432, worksheet.outputs_emissions_x181, 0.002); end
  def test_outputs_emissions_c182; assert_equal("G.7", worksheet.outputs_emissions_c182); end
  def test_outputs_emissions_d182; assert_equal("Global Other", worksheet.outputs_emissions_d182); end
  def test_outputs_emissions_h182; assert_in_delta(0.0, (worksheet.outputs_emissions_h182||0), 0.002); end
  def test_outputs_emissions_i182; assert_in_delta(0.0, (worksheet.outputs_emissions_i182||0), 0.002); end
  def test_outputs_emissions_j182; assert_in_delta(0.0, (worksheet.outputs_emissions_j182||0), 0.002); end
  def test_outputs_emissions_k182; assert_in_delta(0.0, (worksheet.outputs_emissions_k182||0), 0.002); end
  def test_outputs_emissions_l182; assert_in_delta(0.0, (worksheet.outputs_emissions_l182||0), 0.002); end
  def test_outputs_emissions_p182; assert_in_delta(0.0, (worksheet.outputs_emissions_p182||0), 0.002); end
  def test_outputs_emissions_q182; assert_in_delta(0.0, (worksheet.outputs_emissions_q182||0), 0.002); end
  def test_outputs_emissions_r182; assert_in_delta(0.0, (worksheet.outputs_emissions_r182||0), 0.002); end
  def test_outputs_emissions_s182; assert_in_delta(0.0, (worksheet.outputs_emissions_s182||0), 0.002); end
  def test_outputs_emissions_t182; assert_in_delta(0.0, (worksheet.outputs_emissions_t182||0), 0.002); end
  def test_outputs_emissions_u182; assert_in_delta(0.0, (worksheet.outputs_emissions_u182||0), 0.002); end
  def test_outputs_emissions_v182; assert_in_delta(0.0, (worksheet.outputs_emissions_v182||0), 0.002); end
  def test_outputs_emissions_w182; assert_in_delta(0.0, (worksheet.outputs_emissions_w182||0), 0.002); end
  def test_outputs_emissions_x182; assert_in_delta(0.0, (worksheet.outputs_emissions_x182||0), 0.002); end
  def test_outputs_emissions_d183; assert_equal("Total", worksheet.outputs_emissions_d183); end
  def test_outputs_emissions_d184; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d184); end
  def test_outputs_emissions_p184; assert_in_delta(0.00896610247220362, worksheet.outputs_emissions_p184, 0.002); end
  def test_outputs_emissions_q184; assert_in_delta(0.018205200045798682, worksheet.outputs_emissions_q184, 0.002); end
  def test_outputs_emissions_r184; assert_in_delta(0.027926365288139146, worksheet.outputs_emissions_r184, 0.002); end
  def test_outputs_emissions_s184; assert_in_delta(0.038137089408196656, worksheet.outputs_emissions_s184, 0.002); end
  def test_outputs_emissions_t184; assert_in_delta(0.04884285922871407, worksheet.outputs_emissions_t184, 0.002); end
  def test_outputs_emissions_u184; assert_in_delta(0.060048616623583344, worksheet.outputs_emissions_u184, 0.002); end
  def test_outputs_emissions_v184; assert_in_delta(0.07182830530878137, worksheet.outputs_emissions_v184, 0.002); end
  def test_outputs_emissions_w184; assert_in_delta(0.0841551442880443, worksheet.outputs_emissions_w184, 0.002); end
  def test_outputs_emissions_x184; assert_in_delta(0.09710767132444474, worksheet.outputs_emissions_x184, 0.002); end
  def test_outputs_emissions_c213; assert_equal("Fuel type", worksheet.outputs_emissions_c213); end
  def test_outputs_emissions_d213; assert_equal("…", worksheet.outputs_emissions_d213); end
  def test_outputs_emissions_e213; assert_equal("Notes", worksheet.outputs_emissions_e213); end
  def test_outputs_emissions_f213; assert_equal("..", worksheet.outputs_emissions_f213); end
  def test_outputs_emissions_g213; assert_equal("..2", worksheet.outputs_emissions_g213); end
  def test_outputs_emissions_h213; assert_equal("….", worksheet.outputs_emissions_h213); end
  def test_outputs_emissions_i213; assert_equal("Column1", worksheet.outputs_emissions_i213); end
  def test_outputs_emissions_j213; assert_equal("Column2", worksheet.outputs_emissions_j213); end
  def test_outputs_emissions_k213; assert_equal("Column3", worksheet.outputs_emissions_k213); end
  def test_outputs_emissions_l213; assert_equal("Column4", worksheet.outputs_emissions_l213); end
  def test_outputs_emissions_m213; assert_equal("Column5", worksheet.outputs_emissions_m213); end
  def test_outputs_emissions_n213; assert_equal("Column6", worksheet.outputs_emissions_n213); end
  def test_outputs_emissions_o213; assert_equal("Column7", worksheet.outputs_emissions_o213); end
  def test_outputs_emissions_p213; assert_equal("2011", worksheet.outputs_emissions_p213); end
  def test_outputs_emissions_q213; assert_equal("2015", worksheet.outputs_emissions_q213); end
  def test_outputs_emissions_r213; assert_equal("2020", worksheet.outputs_emissions_r213); end
  def test_outputs_emissions_s213; assert_equal("2025", worksheet.outputs_emissions_s213); end
  def test_outputs_emissions_t213; assert_equal("2030", worksheet.outputs_emissions_t213); end
  def test_outputs_emissions_u213; assert_equal("2035", worksheet.outputs_emissions_u213); end
  def test_outputs_emissions_v213; assert_equal("2040", worksheet.outputs_emissions_v213); end
  def test_outputs_emissions_w213; assert_equal("2045", worksheet.outputs_emissions_w213); end
  def test_outputs_emissions_x213; assert_equal("2050", worksheet.outputs_emissions_x213); end
  def test_outputs_emissions_c214; assert_equal("CO2e", worksheet.outputs_emissions_c214); end
  def test_outputs_emissions_e214; assert_equal("Total", worksheet.outputs_emissions_e214); end
  def test_detailed_lever_guides_b69; assert_equal("Lever", worksheet.detailed_lever_guides_b69); end
  def test_detailed_lever_guides_c69; assert_equal("What is it", worksheet.detailed_lever_guides_c69); end
  def test_detailed_lever_guides_d69; assert_equal("Key constraints", worksheet.detailed_lever_guides_d69); end
  def test_detailed_lever_guides_e69; assert_equal("State of development of this technique", worksheet.detailed_lever_guides_e69); end
  def test_detailed_lever_guides_b70; assert_equal("Biochar", worksheet.detailed_lever_guides_b70); end
  def test_detailed_lever_guides_c70; assert_equal("Biomass contains carbon taken from the carbon dioxide air through the process of photosynthesis. Heating biomass in an oxygen-deficient environment results in incomplete combustion and the production of a char that has high carbon content, some of which is ‘recalcitrant’ (meaning resistant to decomposing and being re-released back into the atmosphere). If this char is buried, then this carbon is sequestered away from the atmosphere. ", worksheet.detailed_lever_guides_c70); end
  def test_detailed_lever_guides_d70; assert_equal("• Carbon stability: the proportion of recalcitrant carbon in a biochar is a function of many factors: the biomass feedstock, the method of producing the biochar, and the characteristics of the soil into which the biochar is placed. \r• Dispute for natural resources: the availability of biomass to produce the biochar.\r• Impacts on human health: Biochar dust poses a potential hazard to human health.\r• Impacts on soil biota: The addition of biochar alters the property of the soil. In many cases it can lead to enhanced crop yields. However, it can also lead to increased production of methane, and cause impacts on the biological diversity of the soil.\r• Albedo effect: the addition of large amounts of biochar to soils may result in reduced albedo (ability of the surface of the earth to reflect heat energy from the sun), thereby counteracting some of the cooling benefit of removing carbon dioxide.\r• Fire impacts: if a land area into which biochar has been added is affected by fire (e.g. fire use as an agronomical practice, accidental fire, or even as the result of a warming climate), then the carbon stored may be released back into the atmosphere.", worksheet.detailed_lever_guides_d70); end
  def test_detailed_lever_guides_e70; assert_equal("Biochar is produced from the pyrolysis of biomass, similar to the production of charcoal. Research is underway to enhance the understanding of the long-term behaviour of biochar as a means of storing carbon away from the atmosphere (sequestration potential). Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e70); end
  def test_detailed_lever_guides_b71; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b71); end
  def test_detailed_lever_guides_c71; assert_equal("Direct air capture (DAC) involves using chemical processes to directly capture carbon dioxide from ambient air. Typically this will involve using an alkaline material (such as sodium hydroxide) which reacts with carbon dioxide, or a material which adsorbs the carbon dioxide. The carbon dioxide is then stored underground in suitable geological formations. DAC differs from carbon capture and storage (CCS), in that CCS involves capturing carbon dioxide from large stationary sources, such as power plants or cement plants (4-30% concentration) rather than from ambient air (~0.04% concentration). ", worksheet.detailed_lever_guides_c71); end
  def test_detailed_lever_guides_d71; assert_equal("• Energy penalty: this is the amount of energy that is required to run such systems, which may counteract the carbon savings made through the DAC process.\r• Physical constraints: given the low initial concentration of carbon dioxide in ambient air, it is necessary to treat 1.4 million cubic metres of air to remove a single tonne of carbon dioxide. These volumes indicate that the scale of the machinery is likely to be large with significant resource implications.\r• Water: many, but not all, DAC techniques have a significant water requirement.\r• Costs: it is unlikely that DAC from ambient air will be cost competitive with CCS, as the starting concentration of the carbon dioxide feedstock is so much lower. It would make economic sense to first exhaust all potential CCS opportunities before applying DAC. The exception to this would be if large quantities of extra low-carbon energy ¬¬¬(known as “stranded energy”) were available in locations close to geological storage sites.\r• Geological storage: DAC will compete with geological storage space with CCS from large stationary plants.", worksheet.detailed_lever_guides_d71); end
  def test_detailed_lever_guides_e71; assert_equal("There are about a dozen proposed Direct Air Capture (DAC) technologies that have been demonstrated at small scales. Technically the process works – in fact, the removal of carbon dioxide from ambient air in submarines and spacecraft has been practised for decades. The real questions are around the carbon balance of the systems and the economics. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e71); end
  def test_detailed_lever_guides_b72; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b72); end
  def test_detailed_lever_guides_c72; assert_equal("Ocean fertilisation (OF) involves enhancing the biological capacity of the oceans to draw down more carbon dioxide from the atmosphere. Photosynthesising organisms incorporate carbon dioxide from the air into their cells as they grow and multiply. Some of this carbon will eventually end up in the deep ocean where it will be effectively stored away from the atmosphere. Some parts of the ocean are deficient in micronutrients such as iron, which organisms need to grow. By adding iron filings, more photosynthesis can occur and more carbon can be transported from the atmosphere to the deep ocean. ", worksheet.detailed_lever_guides_c72); end
  def test_detailed_lever_guides_d72; assert_equal("• Biological constraints: The effectiveness of OF is limited by the area of ocean that is deficient in micronutrients. Once iron is no longer a constraint, photosynthetic activity can increase up to the point that the next constraining factor limits growth (typically the availability of nitrate).\r• Logistics: some proponents of OF have suggested that it may be possible to boost macronutrients such as nitrate as a means of enhancing photosynthetic capacity. While that may be possible, the quantity of material that is required to boost photosynthesis may be impractical.\r• Impacts on marine biodiversity: serious environmental concerns have been raised about OF. The introduction of micronutrients into the ocean will alter its ecology, favouring certain types of organism over others that thrive in low-iron waters. In addition, increased photosynthetic activity could lead to increased ocean acidification and a decrease in dissolved oxygen.\r• Efficacy: it is not sufficient for photosynthetic activity to just increase – for the technique to have a positive impact on the climate, the carbon must be transferred from the atmosphere to the deep ocean. Some studies show that a large fraction of the carbon is released back into the atmosphere as the algae die or enter the food chain, so the efficacy of the technique has been questioned. \r• Governance: the governance issues relating to OF are complicated. Rules established by the London Convention/London Protocol (LC/LP) restrict activities to small-scale scientific experiments, while the Convention on Biological Diversity also seeks to restrict such activities.", worksheet.detailed_lever_guides_d72); end
  def test_detailed_lever_guides_e72; assert_equal("A small number of Ocean fertilisation (OF) experiments have been undertaken, most with the approval of national research establishments, but some without such approval. Those experiments conducted without approval have been highly controversial. The results of the officially approved experiments have indicated, at least in some instances, that there has been a net carbon drawdown, but there are still many unanswered questions as to the long-term effects of this technique. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e72); end
  def test_detailed_lever_guides_b73; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b73); end
  def test_detailed_lever_guides_c73; assert_equal("Enhanced weathering – oceanic (EW-O) seeks to enhance the chemical capacity of the oceans to draw down carbon dioxide by introducing alkaline materials that increase the pH of the ocean and allow more carbon to be stored as dissolved inorganic carbon (DIC) in the ocean. Various proposed methods have been suggested – adding limestone (calcium carbonate), hydrated lime (calcium hydroxide) or finely ground olivine (magnesium silicate), or by electrolysis of seawater.", worksheet.detailed_lever_guides_c73); end
  def test_detailed_lever_guides_d73; assert_equal("• Impacts on ocean biota: The increase in pH will affect ecosystems as certain organisms will be more suited to it than others. However, adding alkaline materials could counteract the ocean acidification process that has been caused by higher levels of carbon dioxide in the atmosphere and affects some species. Calcium and magnesium ion concentrations will become higher than historical levels, though.\r• Energy penalty and costs: the process for obtaining alkaline materials is likely to be costly both in economic and energy terms. There are few naturally occurring deposits of alkaline materials that could be added to the ocean, but it may be possible to manufacture such materials.\r• Logistics: to have a real impact on the concentration of carbon dioxide in the atmosphere would require a massive mining, mineral processing and distribution industry.\r• Governance: the application of EW-O would involve governance challenges, as the ocean is a global commons (an international global resource). An amendment (currently in progress) to the LC/LP would permit small scale research activities, but deployment would require further amendments. ", worksheet.detailed_lever_guides_d73); end
  def test_detailed_lever_guides_e73; assert_equal("Enhanced weathering (oceanic) (EW-O) has been studied in the laboratory and has been modelled, but it has not been researched in the open environment. The processes required to generate alkaline materials are well established at an industrial scale. However, the environmental impacts of adding them into the oceans are not known. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e73); end
  def test_detailed_lever_guides_b74; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b74); end
  def test_detailed_lever_guides_c74; assert_equal("As silicate minerals weather, they absorb carbon dioxide from the atmosphere and store it in carbonate minerals. Enhanced weathering – terrestrial (EW-T) seeks to accelerate this natural process, which is usually very slow. The main proposed method involves grinding minerals like olivine (magnesium silicate) into a fine dust, which will react more quickly because of the higher surface-area-to-volume ratio.", worksheet.detailed_lever_guides_c74); end
  def test_detailed_lever_guides_d74; assert_equal("• Energy penalty and costs: the energy and cost requirements for grinding appropriate minerals sufficiently are high.\r• Impacts on human health: the particle size to which such minerals need to be ground to is often smaller than 10 microns in diameter - a size which can cause harm to health.\r• Geological constraints: there is an upper limit as to the amount of carbon dioxide that can be sequestered via this method, based on the saturation state of silicic acid that is produced when the magnesium silicate reacts.\r• Land use impacts: this technique will affect soils, for example by introducing trace metals present in the olivine, changing the pH. The places currently identified as most suitable for enhanced weathering (tropical areas that have high rainfall and high temperatures) are also some of the most important areas for biodiversity globally. \r• Transboundary effects: while EW-T would occur on territory under the jurisdiction of individual states, runoff from EW-T could have transboundary effects by altering the pH of river systems and potentially enhancing the saturation state of silicic acid in coastal waters. ", worksheet.detailed_lever_guides_d74); end
  def test_detailed_lever_guides_e74; assert_equal("Enhanced weathering (terrestrial) (EW-T) has been studied in the laboratory and has been modelled, but it has had little research in the open environment (although proponents of EW-T have marketed ground olivine as a soil additive already). Technical and theoretical modelling of the particle sizes indicate that while there would be some carbon dioxide drawdown, it is far less than has been claimed. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e74); end
  def test_detailed_lever_guides_u5; assert_equal("Lever controls", worksheet.detailed_lever_guides_u5); end
  def test_detailed_lever_guides_v5; assert_equal("One-pager context", worksheet.detailed_lever_guides_v5); end
  def test_detailed_lever_guides_w5; assert_equal("Things to consider", worksheet.detailed_lever_guides_w5); end
  def test_detailed_lever_guides_x5; assert_equal("1-pager Level 1", worksheet.detailed_lever_guides_x5); end
  def test_detailed_lever_guides_y5; assert_equal("1-pager Level 2", worksheet.detailed_lever_guides_y5); end
  def test_detailed_lever_guides_z5; assert_equal("1-pager Level 3", worksheet.detailed_lever_guides_z5); end
  def test_detailed_lever_guides_aa5; assert_equal("1-pager Level 4", worksheet.detailed_lever_guides_aa5); end
  def test_detailed_lever_guides_ab5; assert_equal("Key metric - data source", worksheet.detailed_lever_guides_ab5); end
  def test_detailed_lever_guides_ac5; assert_equal("More detailed context", worksheet.detailed_lever_guides_ac5); end
  def test_detailed_lever_guides_x6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_x6); end
  def test_detailed_lever_guides_y6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_y6); end
  def test_detailed_lever_guides_z6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_z6); end
  def test_detailed_lever_guides_aa6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_aa6); end
  def test_detailed_lever_guides_ab6; assert_equal("g.1pager.population", worksheet.detailed_lever_guides_ab6); end
  def test_detailed_lever_guides_x7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_x7); end
  def test_detailed_lever_guides_y7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_y7); end
  def test_detailed_lever_guides_z7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_z7); end
  def test_detailed_lever_guides_aa7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_aa7); end
  def test_detailed_lever_guides_ab7; assert_equal("g.1pager.urbanisation", worksheet.detailed_lever_guides_ab7); end
  def test_detailed_lever_guides_x8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing sharply.", worksheet.detailed_lever_guides_x8); end
  def test_detailed_lever_guides_y8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing.", worksheet.detailed_lever_guides_y8); end
  def test_detailed_lever_guides_z8; assert_equal("Cities with established development patterns as well as growing cities pursue initiatives to reduce the need for travel throughout the city. Global distance travelled per person increases but less dramatically.", worksheet.detailed_lever_guides_z8); end
  def test_detailed_lever_guides_aa8; assert_equal("Cities make a significant effort to develop as transit-oriented, multi-use cities along with significant advances in communication technologies. Total distance travelled per person increases moderately.", worksheet.detailed_lever_guides_aa8); end
  def test_detailed_lever_guides_x9; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing dramatically.", worksheet.detailed_lever_guides_x9); end
  def test_detailed_lever_guides_y9; assert_equal("Growth in freight tonne-kms is at a slower rate than GDP. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_y9); end
  def test_detailed_lever_guides_z9; assert_equal("Growth in freight tonne-kms is decoupled from GDP. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_z9); end
  def test_detailed_lever_guides_aa9; assert_equal("Growth in freight tonne-kms is significantly decoupled from GDP. This could be due to significant reduction in demand as well major technological improvements.", worksheet.detailed_lever_guides_aa9); end
  def test_detailed_lever_guides_x10; assert_equal("In 2050 cars are the dominant mode of travel in urban areas (around 65%).", worksheet.detailed_lever_guides_x10); end
  def test_detailed_lever_guides_y10; assert_equal("In 2050, cars account for 53% of km travelled in urban areas.", worksheet.detailed_lever_guides_y10); end
  def test_detailed_lever_guides_z10; assert_equal("In 2050, cars account for 43% of km travelled in urban areas.", worksheet.detailed_lever_guides_z10); end
  def test_detailed_lever_guides_aa10; assert_equal("In 2050, cars account for 29% of km travelled in urban areas.", worksheet.detailed_lever_guides_aa10); end
  def test_detailed_lever_guides_ac10; assert_equal("Do we use cars, or do we switch to public transport, cycling and walking? In 2011, between 60 and 80% of trips are made by car in developed countries. For developing countries, this number is often less than 20%. The global average is around 40%. Roughly 83% of freight tonne-kms are made by truck or ship. The mode of travel will have a big impact on reducing overall vehicle kilometres travelled and reducing emissions from person and freight travel. This lever includes a switch between all modes including flights.", worksheet.detailed_lever_guides_ac10); end
  def test_detailed_lever_guides_x11; assert_equal("1.4 people (10% lower than 2011).", worksheet.detailed_lever_guides_x11); end
  def test_detailed_lever_guides_y11; assert_equal("1.6 people (equal to 2011).", worksheet.detailed_lever_guides_y11); end
  def test_detailed_lever_guides_z11; assert_equal("1.8 people (10% higher than 2011).", worksheet.detailed_lever_guides_z11); end
  def test_detailed_lever_guides_aa11; assert_equal("1.9 people (20% higher than 2011)", worksheet.detailed_lever_guides_aa11); end
  def test_detailed_lever_guides_x13; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.detailed_lever_guides_x13); end
  def test_detailed_lever_guides_y13; assert_equal("Up to 2050 most transport modes decrease their energy intensity by 1% annually to roughly 7 lge/100km for LDVs and 22 lge/100km for HDVs.", worksheet.detailed_lever_guides_y13); end
  def test_detailed_lever_guides_z13; assert_equal("Most transport modes decrease their energy intensity by 2% annually to roughly 4.5 lge/100km for LDVs and 15 lge/100km for HDVs by 2050.", worksheet.detailed_lever_guides_z13); end
  def test_detailed_lever_guides_aa13; assert_equal("Most transport modes decrease their energy intensity by 3% annually to roughly 3 lge/100km for LDVs and 10 lge/100km for HDVs.", worksheet.detailed_lever_guides_aa13); end
  def test_detailed_lever_guides_ac13; assert_equal("How efficient will our vehicles be? The efficiency of vehicles in 2011 applies to different vehicle types and fuels used in the calculator. In 2011 light-duty vehicles had an efficiency of 10 litres gasoline equivalent (lpe) per 100km and heavy-duty vehicles, 32 lge/100km. The rate of improvement is 1 to 2% globally per year. Though many improvements in efficiency can take place by implementing existing technology globally, additional improvements will depend on the development of new technologies and making attractive, affordable vehicles with these technologies.", worksheet.detailed_lever_guides_ac13); end
  def test_detailed_lever_guides_x14; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.detailed_lever_guides_x14); end
  def test_detailed_lever_guides_y14; assert_equal("By 2050, there is an increased share of new technologies in the vehicle fleet. The percentage of hybrid and electric vehicles increases (10% and 10%) for passenger cars, heavy duty vehicles (10% and 3%), and 2-3 wheelers (60% electric). Some new technologies are adopted for ships or airplanes (20% hydrogen).", worksheet.detailed_lever_guides_y14); end
  def test_detailed_lever_guides_z14; assert_equal("By 2050 there is significant adoption of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (20%, 20%, and 15%) for passenger cars, heavy duty vehicles (15%, 6%, and 10%), and 2-3 wheelers (70% electric). Some new technologies are adopted for ships or airplanes (40% hydrogen).", worksheet.detailed_lever_guides_z14); end
  def test_detailed_lever_guides_aa14; assert_equal("By 2050 there is major deployment of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (33%, 35%, and 20%) for passenger cars, heavy duty vehicles (20% ,10%, and 20%), and 2-3 wheelers (80% electric). Many new technologies are adopted for ships or airplanes (60% hydrogen).", worksheet.detailed_lever_guides_aa14); end
  def test_detailed_lever_guides_x15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050. This is the same level as in western Europe today.", worksheet.detailed_lever_guides_x15); end
  def test_detailed_lever_guides_y15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.. This is a little lower than the level of western Europe today.", worksheet.detailed_lever_guides_y15); end
  def test_detailed_lever_guides_z15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.. This is the same level as countries in  southern Europe today, such as Spain.", worksheet.detailed_lever_guides_z15); end
  def test_detailed_lever_guides_aa15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050. This is the current OECD average, and the same as Japan today.", worksheet.detailed_lever_guides_aa15); end
  def test_detailed_lever_guides_x16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_x16); end
  def test_detailed_lever_guides_y16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_y16); end
  def test_detailed_lever_guides_z16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_z16); end
  def test_detailed_lever_guides_aa16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_aa16); end
  def test_detailed_lever_guides_x17; assert_equal("In 2050 the average urban household will have 6.3 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 5.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_x17); end
  def test_detailed_lever_guides_y17; assert_equal("In 2050 the average urban household will have 5.5 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.2 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_y17); end
  def test_detailed_lever_guides_z17; assert_equal("In 2050 the average urban household will have 4.9 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.6 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_z17); end
  def test_detailed_lever_guides_aa17; assert_equal("In 2050 the average urban household will have 4.1 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_aa17); end
  def test_detailed_lever_guides_x18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29%.", worksheet.detailed_lever_guides_x18); end
  def test_detailed_lever_guides_y18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 47%.", worksheet.detailed_lever_guides_y18); end
  def test_detailed_lever_guides_z18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 64%.", worksheet.detailed_lever_guides_z18); end
  def test_detailed_lever_guides_aa18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 76%.", worksheet.detailed_lever_guides_aa18); end
  def test_detailed_lever_guides_x19; assert_equal("Technology mix remains the same in 2050 as today. HEATING: 2% solid boiler, 14% liquid boiler, 55% gas boiler, 2% heat pumps, 8% electricity heater, 0% solar heater, 2% micro-CHP, 17% district heating. COOLING: 93% air-conditioning 2% chiller, 5% solar cooling. COOKING: 8% solid stoves, 15% liquid stoves, 40% gas stoves, 25% electric stoves, 12% traditional biomass stoves. LIGHTING: 51% incandescents, 3% halogens, 45% CFLs, 1% LEDs. ", worksheet.detailed_lever_guides_x19); end
  def test_detailed_lever_guides_y19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 1% liquid boiler, 10% gas boiler, 15% heat pumps, 5% electricity heater, 5% solar heater, 8% micro-CHP, 55% district heating. COOLING: 85% air-conditioning 5% chiller, 10% solar cooling. COOKING: 1% solid stoves, 8% liquid stoves, 35% gas stoves, 50% electric stoves, 6% traditional biomass stoves. LIGHTING: 20% incandescents, 1% halogens, 69% CFLs, 10% LEDs.", worksheet.detailed_lever_guides_y19); end
  def test_detailed_lever_guides_z19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 0% liquid boiler, 30% gas boiler, 35% heat pumps, 5% electricity heater, 10% solar heater, 9% micro-CHP, 10% district heating. COOLING: 75% air-conditioning 10% chiller, 15% solar cooling. COOKING: 0% solid stoves, 1% liquid stoves, 30% gas stoves, 68% electric stoves, 1% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 50% CFLs, 50% LEDs.", worksheet.detailed_lever_guides_z19); end
  def test_detailed_lever_guides_aa19; assert_equal("In 2050 the technology mix will be: HEATING: 0% solid boiler, 0% liquid boiler, 10% gas boiler, 50% heat pumps, 2% electricity heater, 20% solar heater, 11% micro-CHP, 7% district heating. COOLING: 65% air-conditioning 15% chiller, 20% solar cooling. COOKING: 0% solid stoves, 0% liquid stoves, 25% gas stoves, 75% electric stoves, 0% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 20% CFLs, 80% LEDs.", worksheet.detailed_lever_guides_aa19); end
  def test_detailed_lever_guides_x20; assert_equal("Average TV uses uses 3% less power.", worksheet.detailed_lever_guides_x20); end
  def test_detailed_lever_guides_y20; assert_equal("Average TV uses uses 17% less power.", worksheet.detailed_lever_guides_y20); end
  def test_detailed_lever_guides_z20; assert_equal("Average TV uses uses 23% less power.", worksheet.detailed_lever_guides_z20); end
  def test_detailed_lever_guides_aa20; assert_equal("Average TV uses uses 30% less power.", worksheet.detailed_lever_guides_aa20); end
  def test_detailed_lever_guides_x21; assert_equal("To 2050, product demand is in line with historical trends and  the GDP growth projection. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods increase (paper+10%, metal goods +20% and packaging +10%).There is no development in product reuse nor recycling (product lifetime for cars is 12.5 years, for TVs 5 years, and for appliances 10 years).", worksheet.detailed_lever_guides_x21); end
  def test_detailed_lever_guides_y21; assert_equal("Consumer product demand worldwide reaches current EU levels then flattens. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods stabilize (paper+0%, metal goods +10%, packaging +0%). Moderate development in product reuse and recycling (product lifetime for cars is 13.7 years, for TVs 7 years, and for appliances 15 years).", worksheet.detailed_lever_guides_y21); end
  def test_detailed_lever_guides_z21; assert_equal("Consumer product demand remains constant (increases in some parts of the world balance decreases in others). Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods decrease (paper-10%, metal goods -10% and packaging -10%). Significant development in product reuse and recycling (product lifetime for cars is 15 years, for TV 10 years, and for appliances 20 years).", worksheet.detailed_lever_guides_z21); end
  def test_detailed_lever_guides_aa21; assert_equal("Consumers buy fewer goods (e.g. they are higher value but less resource intensive). Buildings, infrastructure & transport product demand are defined by the other sectors. Consumer goods decrease (paper-20%, metals goods -20%, packaging -20%).Product demand not correlated to GDP increase (product life time of cars is 16.2 years, of TV 15 years, of appliances 30 years).", worksheet.detailed_lever_guides_aa21); end
  def test_detailed_lever_guides_x22; assert_equal("No product & material design improvements (leading to less materials to make products by 2050). No switch to materials which are less CO2 intensive over the product lifetime.Recycling levels the same as today (36% recycled steel, 8% non-recycled chemicals becomes recycled, -29% non-recycled aluminium becomes recycled).", worksheet.detailed_lever_guides_x22); end
  def test_detailed_lever_guides_y22; assert_equal("Ambitious product and material design improvements, leading to -10% less materials needed to make products. Minor material switches (5% steel to timber in buildings, 5% cement to timber in buildings, 5% steel to aluminium in cars and trucks, 5% steel to carbon fibres [plastics] in cars and trucks, 1.25% cement to insulation materials [plastics] in buildings and infrastructure). Minor increase by 2050 in recycling (44% steel, 16% chemicals, -21% aluminium, 9% paper).", worksheet.detailed_lever_guides_y22); end
  def test_detailed_lever_guides_z22; assert_equal("Very ambitious product and material design improvements, leading to -20% less material needed to make products. Significant material switches (10% steel to timber in buildings, 10% cement to timber in buildings, 10% steel to aluminium in cars and trucks, 10% steel to carbon fibres [plastics] in cars and trucks, 2,5% cement to insulation materials [plastics] in buildings and infrastructure). Significant increase in non recycled which will get recycled (56% steel, 24% chemicals, -14% aluminium, 24% paper).", worksheet.detailed_lever_guides_z22); end
  def test_detailed_lever_guides_aa22; assert_equal("Extreme improvements in product and material design, leading to -30% less material needed to make products by 2050. Major material switches (20% steel to timber in buildings, 10% cement to timber in buildings, 20% steel to aluminium in cars and trucks, 20% steel to carbon fibres [plastics] in cars and trucks, 5% cement to insulation materials [plastics] in buildings and infrastructure). Major increase in recycling (75% steel, 32% chemicals, -7% aluminium, 39% paper).", worksheet.detailed_lever_guides_aa22); end
  def test_detailed_lever_guides_x23; assert_equal("Continued use of current processes and technologies. Steel: 70% classic blast oxygen furnaces (using 21% scrap), 0% HIsarna, 5% electric arc furnace DRI (using 9% scrap), 25% electric arc furnace scrap (using 70% of scrap). Aluminium: 0% decrease in consumption per tonne for primary aluminium and 0% for secondary aluminium. Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne of steel and aluminium are unchanged by 2050 (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x23); end
  def test_detailed_lever_guides_y23; assert_equal("Moderate process and technology change. Steel: 61% classic blast oxygen furnaces (using 19% of scrap), 2% HIsarna (using 0.2% of scrap), 6% EAF DRI (using 10% scrap), 31% EAF scrap (using 71% scrap). Aluminium: 5% decrease in consumption per tonne for primary aluminium and 5% for secondary aluminium. Some fuel switches in blast oxygen furnaces (2% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap & EAF DRI), some in primary aluminium (2% coal to biomass potential), none in secondary aluminium. Significant energy efficiency improvements (5% in blast oxygen furnaces, none in other technologies and no additional CHP development) Emissions per tonne decrease by 2% for steel and by 3% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y23); end
  def test_detailed_lever_guides_z23; assert_equal("Significant technology progress. Steel: 48% classic blast oxygen furnaces (using 18% scrap), 5% HIsarna (using 1% scrap), 8% EAF DRI (using 9% scrap), 40% EAF scrap (using 72% scrap). Aluminium: (10% decrease in consumption per tonne for primary aluminium and 10% for secondary aluminium.Important fuel switches in blast oxygen furnaces (3% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (3% coal to biomass potential), none in secondary aluminium. Significant energy efficiency increases (7% in blast oxygen furnaces, none in other technologies and no additional CHP development).  Emissions per tonne decrease by 1% for steel and by 7% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z23); end
  def test_detailed_lever_guides_aa23; assert_equal("Extreme technology progress. Steel: 25% classic blast oxygen furnaces (using 13% scrap), 10% HIsarna (using 4% scrap), 10% EAF DRI (using 10% scrap), 55% EAF scrap (using 73% scrap). Aluminium: 20% decrease in consumption per tonne for primary aluminium and 20% for secondary aluminium. Major fuel switches in blast oxygen furnaces (5% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (5% coal to biomass potential), none in secondary aluminium. Energy efficiency improvements close to technical and physical constraints (10% in blast oxygen furnaces, none in other technologies and no additional CHP development). Emissions per tonne reduce by 1% for steel & by 13% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa23); end
  def test_detailed_lever_guides_x24; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (5% of electricity produced by CHP as now).  Emissions per tonne increase by 1% for chemicals (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x24); end
  def test_detailed_lever_guides_y24; assert_equal("Moderate process and technology changes: 5% decrease in consumption per ton for high value chemicals (HVC), 0% in ammonia, 0% in methanol, 5% in other chemicals. Some fuel switches in HVC (10% coal to gas,10% oil to gas), some switches across all chemical technologies (5% coal to biomass potential). Significant energy efficiency improvements (5% for HVC, 8% for ammonia, 8% for methanol & 5% for other chemicals. 10% of electricity produced by CHP)  Emissions per tonne decrease by 3% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y24); end
  def test_detailed_lever_guides_z24; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 10% for other chemicals. Important fuel switches in HVCs (20% coal to gas,20% oil to gas), some switches across all chemical technologies (10% coal to biomass potential). Significant energy efficiency improvements (10% for HVC, 15% for ammonia, 15% for methanol & 10% for other chemicals & 15% of electricity produced by CHP).  Emissions per tonne decrease by 7% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z24); end
  def test_detailed_lever_guides_aa24; assert_equal("Very important process and technology changes: 20% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 20% for other chemicals.Major fuel switches in HVCs (30% coal to gas,30% oil to gas), some switches across all chemical technologies (20% coal to biomass potential). Energy efficiency improvements close to technical and physical constraints (20% for HVC, 30% for ammonia, 30% for methanol & 20% for other chemicals & 20% of electricity produced by CHP).  Emissions per tonne decrease by 15% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa24); end
  def test_detailed_lever_guides_x25; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (No additional CHP ( 5% of electricity produced by CHP for paper, 5% for timber & 5% for other industries). )Emissions per tonne increase by 1% for paper and 2% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x25); end
  def test_detailed_lever_guides_y25; assert_equal("Moderate process and technology changes: paper (5% decrease in consumption per tonne for paper pulp, 5% for virgin paper, 5% for recycled paper), 0% for timber & 0% for other industries. Some fuel switches (coal to biomass potential) inpPaper (2%), timber(2%), and other industries (2%) Significant energy efficiency (20% for paper, 20% for timber, 20% for other industries. 10% of electricity produced by CHP for paper, 10% for timber & 10% for other industries). Emissions per tonne decrease by 20% for pulp and paper and by 20% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y25); end
  def test_detailed_lever_guides_z25; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for paper pulp, 10% for virgin paper, 10% for recycled paper), 0% for timber & 0% for other industries. Significant fuel switches (coal to biomass potential) in paper (3%), timber (3%), and other industries (3%). Significant energy efficiency (30% for paper, 30% for timber, 30% for other industries. 15% of electricity produced by CHP for paper, 15% for timber & 15% for other industries).  Emissions per tonne decrease by 32% for pulp and paper, and by 31% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z25); end
  def test_detailed_lever_guides_aa25; assert_equal("Very important process and technology changes: paper (20% decrease in consumption per ton for paper pulp, 20% for virgin paper, 20% for recycled paper), % for timber and % in other industries), 0% for timber and 0% for other industries. Major fuel switches (coal to biomass potential) in paper (5%), timber(5%), and other industries (5%). Energy efficiency close to technical and physical constraints (40% for paper, 40% for timber, 40% for other industries. 20% of electricity produced by CHP for paper, 20% for timber & 20% for other industries).  Emissions per tonne reduce by 45% for pulp and paper, and by 42% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa25); end
  def test_detailed_lever_guides_x26; assert_equal("Continued use of current processes and technologies (28% clinker in cement). Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne decrease by 2% for cement (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_x26); end
  def test_detailed_lever_guides_y26; assert_equal("Moderate process and technology changes: 4% decrease in consumption per tonne (31% clinker in cement). Some fuel switches (6% coal to biomass potential) Significant energy efficiency (9%). No additional CHP developments.  Emissions per tonne decrease by 4% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_y26); end
  def test_detailed_lever_guides_z26; assert_equal("Significant process and technology changes: 8% decrease in consumption per tonne (34% clinker in cement). Significant fuel switches (46% coal to biomass potential). Significant energy efficiency (18%). No additional CHP developments.  Emissions per tonne decrease by 8% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_z26); end
  def test_detailed_lever_guides_aa26; assert_equal("Very important process and technology changes: 86% decrease in consumption per tonne (90% clinker in cement).Major fuel switches (100% coal to biomass potential). Energy efficiency close to technical & physical constraints (30%). No additional CHP developments.  Emissions per tonne reduce by 31% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_aa26); end
  def test_detailed_lever_guides_x27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_x27); end
  def test_detailed_lever_guides_y27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_y27); end
  def test_detailed_lever_guides_z27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_z27); end
  def test_detailed_lever_guides_aa27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_aa27); end
  def test_detailed_lever_guides_x28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a slight move away from gas to liquid based power.", worksheet.detailed_lever_guides_x28); end
  def test_detailed_lever_guides_y28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a slight move away from solid to gas and liquid based power.", worksheet.detailed_lever_guides_y28); end
  def test_detailed_lever_guides_z28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a strong move away from solid to gas based power.", worksheet.detailed_lever_guides_z28); end
  def test_detailed_lever_guides_aa28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.. This represents a significant move away from coal and liquid based power toward gas based power.", worksheet.detailed_lever_guides_aa28); end
  def test_detailed_lever_guides_x29; assert_equal("Small increase e.g. 38% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_x29); end
  def test_detailed_lever_guides_y29; assert_equal("More efficient power e.g. 45% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_y29); end
  def test_detailed_lever_guides_z29; assert_equal("High efficiency power e.g. 50% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_z29); end
  def test_detailed_lever_guides_aa29; assert_equal("Very efficient power e.g. 55% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_aa29); end
  def test_detailed_lever_guides_x30; assert_equal("By 2050 there will be 16 GW of power plants with CCS. No new CCS plants will be commissioned beyond 2020 and the plants commissioned between 2015-2020 will be operating by 2050.", worksheet.detailed_lever_guides_x30); end
  def test_detailed_lever_guides_y30; assert_equal("490 GW of CCS installed power capacity by 2050. This could be interpreted as expansion mostly driven by the US and EU and no/low participation from non-OECD countries. 10% of total fossil fuel plants will have CCS by 2050.", worksheet.detailed_lever_guides_y30); end
  def test_detailed_lever_guides_z30; assert_equal("1,487 GW of CCS installed power capacity by 2050. This could be interpreted as moderate penetration of CCS in OECD countries and emerging economies and low expansion in developing countries. 30% of total fossil fuel-based plants have adopted CCS technology by 2050.", worksheet.detailed_lever_guides_z30); end
  def test_detailed_lever_guides_aa30; assert_equal("3,700 GW of CCS installed power capacity by 2050 High CCS expansion worldwide.", worksheet.detailed_lever_guides_aa30); end
  def test_detailed_lever_guides_ac30; assert_equal("Do we use carbon capture and storage in electricity generation? In 2011, most of the CCS projects implemented in the power sector were demonstration projects of kW and MW scale. There was no commercial deployment of CCS in power in 2011. However, there is a pipeline of CCS projects being developed by OECD countries (mainly USA and EU). These are not expected until the early 2020s.", worksheet.detailed_lever_guides_ac30); end
  def test_detailed_lever_guides_u31; assert_equal("This lever controls total world nuclear power capacity (GW).  \r\r\r\r", worksheet.detailed_lever_guides_u31); end
  def test_detailed_lever_guides_v31; assert_equal("Nuclear power is a form of thermal electricity generation that uses the heat produced from nuclear reactions rather than from the combustion of fossil fuels. These reactions do not produce greenhouse gases like carbon dioxide, so it is a low-carbon source of electricity. \rNuclear power stations was first used commercially in the 1950s. In 2011 operating power stations had 369 GW of capacity, producing around 13% of the world’s electricity. The country with the highest proportion of nuclear generation is France, with around 80%. Build rates have slowed in the last few years, but are expected to increase in the next decade. ", worksheet.detailed_lever_guides_v31); end
  def test_detailed_lever_guides_w31; assert_equal("Nuclear has some benefits compared to many other low-carbon electricity sources. It can produce a reliable supply of power, unlike some renewables such as wind and solar which are intermittent. Once built, a reactor has a lifespan of around 40 years and perhaps longer. If power plants are located close to buildings with heat demand, then the waste heat produced in the generating process can be used in district heating systems rather than being released into the atmosphere. This reduces the need for high-carbon sources of heat like gas. \rHowever, nuclear power has disadvantages too. Nuclear accidents, though rare, can have serious and long-term consequences. The safe disposal and storage of the radioactive waste produced by nuclear processes is also a serious challenge, as some of the substances have a half-life of many thousand – and even millions – of years. These concerns mean that some countries and organisations do not support the use of this technology.  Even in countries that support the use of nuclear power, the planning process can be long and difficult, as local residents may object to having a power plant near their homes. The meltdown of three reactors at the Fukushima Daiichi plant in Japan in 2011 has increased safety concerns, and led to more countries closing nuclear power plants before their natural lifespan has come to an end.\rWhen choosing levels 3 or 4, you should consider that building this amount of nuclear power is likely to result in many planning challenges and may be difficult in terms of public acceptability.  ", worksheet.detailed_lever_guides_w31); end
  def test_detailed_lever_guides_x31; assert_equal("No new power stations are built, and all existing plant are switched off by 2050. It is likely that some reactors would have to retire early, before the end of their technical and economic lifespan. This represents a future that has turned away from nuclear power. \r", worksheet.detailed_lever_guides_x31); end
  def test_detailed_lever_guides_y31; assert_equal("Current global build rates for nuclear plants continue for the next few decades, meaning that there would be 558 GW in total by 2050. \r", worksheet.detailed_lever_guides_y31); end
  def test_detailed_lever_guides_z31; assert_equal("The increased build rate planned from 2011 to 2020 is sustained until 2050, meaning that there would be 989 GW in total. \r", worksheet.detailed_lever_guides_z31); end
  def test_detailed_lever_guides_aa31; assert_equal("After 2020, the build rate increases to the fastest the nuclear sector believes is technically possible, and this is sustained until 2050. This would result in 1,870 GW of capacity. This represents a future which has put an extreme amount of effort into rolling out nuclear.  \r", worksheet.detailed_lever_guides_aa31); end
  def test_detailed_lever_guides_x32; assert_equal("By 2050 there is 0 GW of onshore wind energy. It builds at a rate of 19.64% till 2013, 8% till 2015, 5% till 2020 with decommissioning in tandem. by 2050 the offshore wind energy is also 0 GW with a build rate of 34.06% by 2015. After this, the rate of build up and decommissioning matches each other until 2020 after which it serves its technical lifespan. ", worksheet.detailed_lever_guides_x32); end
  def test_detailed_lever_guides_y32; assert_equal("By 2050 there is 1862 GW of onshore wind energy and 455 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_y32); end
  def test_detailed_lever_guides_z32; assert_equal("by 2050 there is 3800 GW of onshore wind energy and 910 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_z32); end
  def test_detailed_lever_guides_aa32; assert_equal("By 2050 there is 5058 GW of onshore wind energy. It builds at a rate of 21% by 2015, 16% by 2020, 8% by 2030, 6% until 2040 and 2% until 2050. There is 1408 GW of offshore wind energy which builds at a rate of 34.06% until 2020, 20% until 2030, 8% by 2040 and 4% by 2050. ", worksheet.detailed_lever_guides_aa32); end
  def test_detailed_lever_guides_x33; assert_equal("1,188 GW This is equivalent to all current capacity plus all projects already under construction or that have been commissioned.", worksheet.detailed_lever_guides_x33); end
  def test_detailed_lever_guides_y33; assert_equal("1,750 GW This is equivalent to steady growth of 1.5% a year.", worksheet.detailed_lever_guides_y33); end
  def test_detailed_lever_guides_z33; assert_equal("2,101 GW This is equivalent to steady growth of 2% a year, with continued investment in large hydro and technology upgrading.", worksheet.detailed_lever_guides_z33); end
  def test_detailed_lever_guides_aa33; assert_equal("2,375 GW This is equivalent to a growth rate of 3% per year. Considering a limiting build rate of 3.55% to realize the entire hydro potential by 2050.", worksheet.detailed_lever_guides_aa33); end
  def test_detailed_lever_guides_x34; assert_equal("By 2050 there is 0 GW of tidal energy if not harnessed as the present installation would serve its technical lifespan whereas there will be 8 GW of wave energy.", worksheet.detailed_lever_guides_x34); end
  def test_detailed_lever_guides_y34; assert_equal("By 2050, there is 35 GW of tidal electricity and 62 GW of wave. ", worksheet.detailed_lever_guides_y34); end
  def test_detailed_lever_guides_z34; assert_equal("by 2050 there is 49 GW of tidal electricity. Build up rate enhanced considering construction time, global technological and environmental factors whereas there will be 105 GW of wave energy based on similar analysis.", worksheet.detailed_lever_guides_z34); end
  def test_detailed_lever_guides_aa34; assert_equal("By 2050 there is 64 GW of tidal energy and 143 GW of wave energy. Different build up rate computed considering technical maturity and potential acceptance. ", worksheet.detailed_lever_guides_aa34); end
  def test_detailed_lever_guides_x35; assert_equal("By 2050 there is 0 GW of concentrated solar power. The average build up rate is 44.45% till 2015, 43.09% by 2020 after which the rate of decommissioning and technical lifespan will exceed build up rate. by 2050 there is 0 GW of photovoltaic which builds by 18.34% by 2015, 16.58% by 2020 post which rate of decommission & technical life span takes over.", worksheet.detailed_lever_guides_x35); end
  def test_detailed_lever_guides_y35; assert_equal("By 2050 there is 388 GW of concentrated solar power and 811 GW of photovoltaic. Build up rates computed by analysing various technologies, barriers and country specific factors.", worksheet.detailed_lever_guides_y35); end
  def test_detailed_lever_guides_z35; assert_equal("by 2050 there is 879 GW of concentrated solar power and 1860 GW of photovoltaic. Build up rates computed by analysing various factors.", worksheet.detailed_lever_guides_z35); end
  def test_detailed_lever_guides_aa35; assert_equal("By 2050 there is 1067 GW of concentrated solar energy. The average build rate is 58% up to 2020 where CSP landscape will change to average 8% by 2030 and 6% by 2050. by 2050 there is 3750 GW of photovoltaic with 22.76% till 2020, 15.3% by 2030, 8.75% by 2040 and 6% till 2050. ", worksheet.detailed_lever_guides_aa35); end
  def test_detailed_lever_guides_x36; assert_equal("By 2050 there is 0 GW of geothermal electricity. Technological lifespan and depreciating CAGR was arrived by analysis of various intertwined factors.", worksheet.detailed_lever_guides_x36); end
  def test_detailed_lever_guides_y36; assert_equal("By 2050 there is 172 GW of geothermal electricity. Different build up rate were arrived for different timespans with emphasis on ring of fire countries.", worksheet.detailed_lever_guides_y36); end
  def test_detailed_lever_guides_z36; assert_equal("by 2050 there is 289 GW of geothermal electricity. Average growth rate is arrived by considering various global factors.", worksheet.detailed_lever_guides_z36); end
  def test_detailed_lever_guides_aa36; assert_equal("By 2050 there is 404 GW of geothermal electricity. The average built up rate is 9% till 2020, whereas 11.55% till 2040 and 6% up till 2050. For developing the levels different variables were mapped and interdependence of factors was analysed.", worksheet.detailed_lever_guides_aa36); end
  def test_detailed_lever_guides_x37; assert_equal("By 2050, around 152 GW of peak demand is met by energy storage. The storage has an annual growth rate of 3%.", worksheet.detailed_lever_guides_x37); end
  def test_detailed_lever_guides_y37; assert_equal("By 2050 there is 600 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_y37); end
  def test_detailed_lever_guides_z37; assert_equal("By 2050 there is 800 GW of energy storage system by 2050.", worksheet.detailed_lever_guides_z37); end
  def test_detailed_lever_guides_aa37; assert_equal("High adoption of storage technologies across the globe, with 1,200 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_aa37); end
  def test_detailed_lever_guides_x38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day to the current European level, i.e., 2,560 kcal/person/day, by 2050. This represents and extreme scenario, where the entire world would reach European levels of food consumption with high risks of obesity, diabetes and cardiovascular problems. More land would have to be allocated to agricultural production.", worksheet.detailed_lever_guides_x38); end
  def test_detailed_lever_guides_y38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day in 2011 to 2,430 kcal/person/day by 2050 based on the growth rate of the past decade (2000-2010). Therefore, this pathway corresponds to approximately the same changes in food consumption observed in the last 10 years, in which some developing countries (e.g., China and India) have substantially increased their calorie intake.", worksheet.detailed_lever_guides_y38); end
  def test_detailed_lever_guides_z38; assert_equal("Global average calorie consumption increases  from 2,140 kcal/capita/day in 2011 to approximately 2,330 kcal/capita/day by 2050, which is similar to the UN's Food and Agricultural Organisation (FAO) forecast by Alexandratos and Bruinsma (2012) (adjusted to exclude food losses). In this trajectory, there will be still a significant increase of food consumption globally, but the current trend would be slightly reduced by population and consumption peaks in some countries.", worksheet.detailed_lever_guides_z38); end
  def test_detailed_lever_guides_aa38; assert_equal("Global average calorie consumption reduces slightly from 2,170 kcal/person/day in 2011 to 2,100 kcal/person/day by 2050, which is the target for a healthy diet (2,200 kcal/person/day for men, and 2,000 kcal/person/day for women). However, this scenario may also see a redistribution of calorie intakes, where some developing countries could increase food consumption (e.g., by reducing poverty), whilst some developed countries could reduce their consumption (by tackling obesity issues). Overall, this is an extreme target, given that values below this global average would result in more cases of undernourishment.", worksheet.detailed_lever_guides_aa38); end
  def test_detailed_lever_guides_x39; assert_equal("281 kcal/person/day.", worksheet.detailed_lever_guides_x39); end
  def test_detailed_lever_guides_y39; assert_equal("220 kcal/person/day.", worksheet.detailed_lever_guides_y39); end
  def test_detailed_lever_guides_z39; assert_equal("152 kcal/person/day.", worksheet.detailed_lever_guides_z39); end
  def test_detailed_lever_guides_aa39; assert_equal("14 kcal/person/day.", worksheet.detailed_lever_guides_aa39); end
  def test_detailed_lever_guides_ac39; assert_equal("How much meat will we eat? The current global average meat consumption is 191 kcal/person/day, but growing incomes in developing countries tend to promote an increase in meat consumption. This value represents the effective calorie intake by person and excludes losses along the supply chain (19% in terms of meat energy content). People in developing countries on average consume 32 kg of meat a year (88 g/person/day), compared to 80 kg/person/year (219 g/person/day) in industrialised countries (Worldwatch, 2011).  As meat production is, on average, associated with significantly higher GHG emissions than the production of grains, fruit and vegetables per unit of output, a shift from a high meat diet to lower levels of meat consumption can help in the reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_ac39); end
  def test_detailed_lever_guides_x40; assert_equal("Increase in the consumption of meat from ruminants (25% on average, with 19% beef, 6% mutton and goat, respectively) and a decrease in the consumption of meat from non-ruminants (75% on average, with 30% poultry, 44% pork, and others) by 2050. These shares assume the UN FAO forecast for type of meat consumption as a reference.", worksheet.detailed_lever_guides_x40); end
  def test_detailed_lever_guides_y40; assert_equal("Current world meat mix stabilised by 2050. Meat from ruminants accounts for 22% (17% beef, 5% mutton and goat, and others) and from non-ruminants for approximately 78% (23% poultry, 53% pork, and others). These proportions are also similar to the current share of meat types consumed in Europe.", worksheet.detailed_lever_guides_y40); end
  def test_detailed_lever_guides_z40; assert_equal("Decrease in the consumption of meat from ruminant animals by 2050 (20%, with 12% beef, 7% mutton and goat, and others). Meat from non-ruminant would account for 80%, with 25% poultry and 54% pork, and others) by 2050. This entails a small shift from rumiants to non-rumiants from the current (2011) global share of meat types (78% non-ruminants and 22% ruminants) consumed by 2050. These shares assume the current consumption of meat types in the United Kingdom as a reference.", worksheet.detailed_lever_guides_z40); end
  def test_detailed_lever_guides_aa40; assert_equal("Extremely reduced global consumption of meat from ruminants (10%, with 6% beef, 4% mutton and goat) and a high increase in consumption of meat from non-ruminants (90%, with 14% poultry and 76% pork) by 2050. This entails an extreme shift from ruminants to non-rumiants from the current (2011) global share of meat types (78% non-ruminants and 22% ruminants) consumed by 2050. These shares assume the current consumption of meat types in China as a reference.", worksheet.detailed_lever_guides_aa40); end
  def test_detailed_lever_guides_ac40; assert_equal("Do we eat more meat from ruminants or non-ruminants? Currently, the meat from non-ruminants (monograstric animals) constitutes the dominant share of meat consumed globally (78%), while only 22% is meat from ruminants (2011). Meat from ruminants includes beef, and mutton (sheep) and goat, with respective shares of 17% and 5% (2011). Meat from non-ruminants includes pork (53%) and poultry (23%). As the production of ruminants is, on average, associated with significantly higher GHG emissions per kg of meat than meat from non-ruminant animals, a shift from a ruminant to a predominantly non-rumanant diet can help in significantly reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_ac40); end
  def test_detailed_lever_guides_x41; assert_equal("A severe crop productivity decrease of -10% overall by 2050, potentially due to negative impacts of climate change on agriculture or scarcity of key resources, e.g., water and fertilisers.", worksheet.detailed_lever_guides_x41); end
  def test_detailed_lever_guides_y41; assert_equal("Moderate crop yield growth of approximately 40% by 2050, as suggested by the UN's Food and Agriculture Organisation (FAO) as a likely trend (assuming grains as a reference).", worksheet.detailed_lever_guides_y41); end
  def test_detailed_lever_guides_z41; assert_equal("Global yields increase by approximately 60% by 2050. This increase represents a linear extrapolation of past yield growths, taking grains as a reference. This level assumes a significant contribution from improved crop varieties, more irrigation, higher use of fertilisers, improved farm management, technology transfer and capacity development programmes to reduce the yield gap and low levels of adverse climate change impacts on agricultural productivity.", worksheet.detailed_lever_guides_z41); end
  def test_detailed_lever_guides_aa41; assert_equal("Extreme yield growth of 100% by 2050. This ambitious level of effort assumes a substantial increase globally in the use of mechanisation, irrigation, fertilisers, biotechnology, a high increase in photosynthetic efficiencies, technology transfer, and potentially positive climate change impacts on crop productivity.", worksheet.detailed_lever_guides_aa41); end
  def test_detailed_lever_guides_ac41; assert_equal("Can we increase crop yields? Globally, crop yields are continuing to increase, although a lower rates than historically. There is a large potential, particularly in developing countries with significant productivity gaps (the difference between actual and potential yields based on agro-ecological parameters), to increase yields substantially to levels achieved in industrialised countries. From 1987-2007 global average annual crop yield growth was approximately 1.9% (FAO, 2012).", worksheet.detailed_lever_guides_ac41); end
  def test_detailed_lever_guides_x42; assert_equal("This level assumes that 10% more agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It reflects mismanaged land use, which can cause soil degradation, soil loss or desertification, e.g. through erosion, water scarcity or salinisation.", worksheet.detailed_lever_guides_x42); end
  def test_detailed_lever_guides_y42; assert_equal("No land use efficiency improvements. This level assumes that the current global pattern of agricultural systems and practices remains stable until 2050. No further improvements or damages from land multi-use would be expected by 2050.", worksheet.detailed_lever_guides_y42); end
  def test_detailed_lever_guides_z42; assert_equal("10% improvement in efficiency, i.e., 10% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails an increase in agro-forestry-pasture synergies and best farming practices, e.g., crop rotations, dual cropping, co-cropping and no tillage technologies. ", worksheet.detailed_lever_guides_z42); end
  def test_detailed_lever_guides_aa42; assert_equal("30% improvement in efficiency, i.e., 30% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails a substantial increase in agro-forestry-pasture synergies and best farming practices and high uptake of climate-smart agriculture and integrated agricultural land use management (e.g., dual/triple cropping).", worksheet.detailed_lever_guides_aa42); end
  def test_detailed_lever_guides_x43; assert_equal("No cattle in feedlots by 2050.", worksheet.detailed_lever_guides_x43); end
  def test_detailed_lever_guides_y43; assert_equal("6% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_y43); end
  def test_detailed_lever_guides_z43; assert_equal("15% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_z43); end
  def test_detailed_lever_guides_aa43; assert_equal("30% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_aa43); end
  def test_detailed_lever_guides_ac43; assert_equal("The production of meat to meet future demands poses a major challenge. The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the intensification of animals traditionally raised on pasture land in confined systems, i.e., cattle, sheep and goats and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems already and therefore these are not considered in this lever.  Currently, globally, only 2% cattle and 4% of sheep and goats are raised in confined systems, although the percentage is much higher in some regions, for example, North America and EU. On average, modern feedlots are generally associated with higher meat yields, appropriate no pasture land and have fewer emissions per kg of meat produced than free range animals (although significant amounts of crop land are required to produce the necessary animal feed).", worksheet.detailed_lever_guides_ac43); end
  def test_detailed_lever_guides_x44; assert_equal("Low increase in pasture animal density (10% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases slightly by 5%.", worksheet.detailed_lever_guides_x44); end
  def test_detailed_lever_guides_y44; assert_equal("Moderate increase in pasture animal density (30% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 10%.", worksheet.detailed_lever_guides_y44); end
  def test_detailed_lever_guides_z44; assert_equal("High increase in pasture animal density (50% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 15%. This entails a higher use of conventional animal genetic improvements and technology transfer and capacity development programmes.", worksheet.detailed_lever_guides_z44); end
  def test_detailed_lever_guides_aa44; assert_equal("Extreme increase in pasture animal density (80% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 20%. This entails a high use of conventional animal genetic improvements and improved pasture rotation management and capacity development programmes. Furthermore, it involves the extensive use of biotechnology, and strong technology transfer from developed to developing countries to leap-frog the learning curves to achieve higher levels of productivity.", worksheet.detailed_lever_guides_aa44); end
  def test_detailed_lever_guides_ac44; assert_equal("The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the increase of pasture intensity, i.e. the number of animals / ha of pasture (through improved animal husbandry schemes) and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems and therefore these are not considered in this lever. Increasing the number of animals per ha of land results in a higher production of meat per unit of pasture land and reduced emissions per kg of meat produced.", worksheet.detailed_lever_guides_ac44); end
  def test_detailed_lever_guides_x45; assert_equal("Low yield increase of energy production per unit of area of 20% by 2050 (approximately 0.5% CAGR). This is below the current crop yield growth trend, and relies primarily on the use of crops with low energy balance (e.g., corn-based ethanol, oilseed rape-based biodiesel) for biofuels and on low efficiency solid biomass for power, heating and cooking.", worksheet.detailed_lever_guides_x45); end
  def test_detailed_lever_guides_y45; assert_equal("Moderate increase in energy production per unit of land area of 50% by 2050 (approximately 1.0% CAGR) with associated changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient technologies, such as lignocellulosic fuels, anaerobic digestion and high-efficiency biomass boilers. ", worksheet.detailed_lever_guides_y45); end
  def test_detailed_lever_guides_z45; assert_equal("High increase in energy production per unit of land area of 120% by 2050 (approximately 2.0% CAGR) with associated substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies (including lignocellulosic bioethanol and Fischer-Tropsch biodiesel).", worksheet.detailed_lever_guides_z45); end
  def test_detailed_lever_guides_aa45; assert_equal("Extreme increase in energy production per unit of land area of 200% by 2050 (approximately 3.0% CAGR) with a reliance on  highly energy-efficient feedstocks and very efficient conversion technologies , including advanced fuel technologies and boilers, biorefineries and biotechnology and state-of-the-art farm management. This level assumes that highly energy-efficient dedicated energy crops (e.g., sugarcane, oil palm, switchgrass, napier grass and miscanthus) would dominate the market.", worksheet.detailed_lever_guides_aa45); end
  def test_detailed_lever_guides_ac45; assert_equal("Could we get more usable energy out of each hectare of biocrops, for example by using more efficient crop types and introducing better conversion technology? Bioenergy (solid, gaseous and liquid) represents approximately 60 EJ of the world energy mix (IPCC, 2011). Bioenergy yields are affected by (a) yields of bioenergy feedstocks (b) energy content of these crops, and (c) advances in conversion technologies. Currently, liquid bioenergy, i.e., biofuels, are primarily produced from crop-based feedstocks (e.g., wheat, maize, sugarcane, oilseed rape, etc.), but increasingly advanced biofuel technologies (based on lignocellulosic feedstocks, such as high-yielding energy crops and agricultural and forestry residues) and biorefineries (co-production of energy (fuel, heat, electricity), feed and chemicals) are deployed at commercial scales. Main producers of biofuels include the USA, Brazil, EU and China. Solid biomass is used mainly for cooking and heating, but could play a larger role in the future by displacing coal in thermal power plants and industrial uses. Biogas, produced by anaerobic decomposition of agricultural residues, manure and the organic fraction of municipal solid waste is used for cooking, heating,  transportation and industrial application (e.g., drying).", worksheet.detailed_lever_guides_ac45); end
  def test_detailed_lever_guides_x46; assert_equal("Liquid biofuels are reduced from 40% in 2011 to 20% by 2050, and therefore 80% of the bioenergy produced would be consumed in solid form, such as wood pellets and chips. This level assumes that technology changes, particularly in transport (i.e., electrification), would result a reduction of liquid biofuels.", worksheet.detailed_lever_guides_x46); end
  def test_detailed_lever_guides_y46; assert_equal("The current share of solid and liquid bioenergy (60% solid biomass and 40% liquid biofuels in 2011) remains the constant until 2050. This level assumes no substantial changes in the current pattern of bioenergy production and consumption.", worksheet.detailed_lever_guides_y46); end
  def test_detailed_lever_guides_z46; assert_equal("Increase in liquid biofuels from 40% to 60% by 2050, while solid biomass would decrease from 60% in 2011 to 40% in 2050. Biofuels would increase their relevance as a renewable energy source, mainly for the transport sector as new technologies enhance the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquids (Fischer-Tropschs).  ", worksheet.detailed_lever_guides_z46); end
  def test_detailed_lever_guides_aa46; assert_equal("Extreme shift towards liquid biofuels from currently 40% to 80% in 2050, while solid biomass decreases its share from 60% to 20%, respectively. Liquid biofuel would be mainly used in the transport sector, including shipping and aviation. To achieve this level of liquid biofuel penetration, it is expected that new technologies would substantially increase the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquid (Fischer-Tropsch). In contrast, the use of traditional biomass would substantially decrease worldwide.", worksheet.detailed_lever_guides_aa46); end
  def test_detailed_lever_guides_x47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 80% forests (including natural regeneration and planted forests), and 20% restoration of natural grasslands. 0% of the surplus land will be used for the production of dedicated bioenergy crops. ", worksheet.detailed_lever_guides_x47); end
  def test_detailed_lever_guides_y47; assert_equal("40% of surplus land is used for biocrops, with 48% for forest/grassland.", worksheet.detailed_lever_guides_y47); end
  def test_detailed_lever_guides_z47; assert_equal("60% of surplus land is used for biocrops, with 32% for forest/grassland.", worksheet.detailed_lever_guides_z47); end
  def test_detailed_lever_guides_aa47; assert_equal("80% of surplus land is used for biocrops, with 16% for forest/grassland.", worksheet.detailed_lever_guides_aa47); end
  def test_detailed_lever_guides_ac47; assert_equal("After accounting for food production, do we use surplus land for growing biocrops, or for the regeneration of forests and grassland? In 2011, around 6 million ha of land were deforested, not only due to livestock and agricultural expansions, but also because of timber operations and land speculations. This lever allows you to decide how any land you have freed up in your pathway is used. The size of the potential surplus land can be increased through climate-smart dietary choices (calories and meat consumed), increased yields (crops, livestock and bioenergy), and enhanced land-use efficiencies. Depending on the levels selected, more or less land will be allocated to forests and natural regeneration and/or the production of dedicated energy crops. Land occupied by settlements (which can increase according to population growth) or unsuitable for production (e.g., deserts, ice sheets, degraded lands) is pre-allocated and does not factor in the allocation of surplus land.", worksheet.detailed_lever_guides_ac47); end
  def test_detailed_lever_guides_x53; assert_equal("No increase in the collection of on-farm residues and no increase in the production of post-farm wastes and residues, but with a low increase in post-farm wastes and residues collection for energy and feed, i.e.,  plant-based food and meat from 1% to 5%; eggs from 0.2% to 0.5%; and milk from 0.1% to 0.5%, respectively, from 2011 to 2050.", worksheet.detailed_lever_guides_x53); end
  def test_detailed_lever_guides_y53; assert_equal("Moderate increase in the collection of on-farm residues (from 10% in 2011 to 20% in 2050), accompanied by a moderate reduction in the production of post-farm residues and wastes (plant-based food 24% to 20%; meat 19% to 15%; eggs 10% to 8%; milk 18% to 15%, respectively, from 2011 to 2050) and a moderate increase in their collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% to 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_y53); end
  def test_detailed_lever_guides_z53; assert_equal("High increase in the collection of on-farm residues (from 10% in 2011 to 30% in 2050), accompanied by a significant reduction in the production of post-farm residues and wastes (plant-based food 24% to 16%; meat 19% to 10%; eggs 10% to 6%; milk 18% to 10%, respectively, from 2011 to 2050), as well as a significant increase in collection for energy and feed (plant-based food and meat from 1% to 20%; eggs from 0.2% to 5%; and milk from 0.1% to 5%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_z53); end
  def test_detailed_lever_guides_aa53; assert_equal("Extreme increase in the collection of on-farm residues (from 10% in 2011 to 50% in 2050) , accompanied by a reduction in the production of post-farm residues and wastes (plant-based food 24% to 10%; meat 19% to 5%; eggs 10% to 5%; milk 18% to 5%, respectively, from 2011 to 2050), as well as a moderate increase in collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_aa53); end
  def test_detailed_lever_guides_x54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_x54); end
  def test_detailed_lever_guides_y54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_y54); end
  def test_detailed_lever_guides_z54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_z54); end
  def test_detailed_lever_guides_aa54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_aa54); end
  def test_detailed_lever_guides_x55; assert_equal("Land and ocean sinks increase relative to the present day; by 2100, only 30% of emitted CO2 remains in atmosphere. Such a low atmospheric fraction is only expected for trajectories with very low rates of CO2 emissions.", worksheet.detailed_lever_guides_x55); end
  def test_detailed_lever_guides_y55; assert_equal(" Land and ocean sinks remain similar to today; 44% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_y55); end
  def test_detailed_lever_guides_z55; assert_equal("Land and ocean sinks decrease slightly; by 2100, 60% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_z55); end
  def test_detailed_lever_guides_aa55; assert_equal("Land and ocean sinks decrease significantly: by 2100, 74% of emitted CO2 remains in atmosphere. Such a high atmospheric fraction is only expected for trajectories with very high rates of CO2 emissions.", worksheet.detailed_lever_guides_aa55); end
  def test_detailed_lever_guides_x56; assert_equal("Display only the range of model-generated outputs with no additional range to account for unmodelled phenomena. This level is provided for comparison purposes only.", worksheet.detailed_lever_guides_x56); end
  def test_detailed_lever_guides_y56; assert_equal("Generate an uncertainty range based on model output, using a method similar to the most recent IPCC report, to account for unmodelled phenomena. This method takes the \"very likely\" range generated by computer models and downgrades that to a \"likely\" range, so that the effect in the Calculator is to widen the range of projected temperatures. See documentation for further details.", worksheet.detailed_lever_guides_y56); end
  def test_detailed_lever_guides_z56; assert_equal("n/a", worksheet.detailed_lever_guides_z56); end
  def test_detailed_lever_guides_aa56; assert_equal("n/a", worksheet.detailed_lever_guides_aa56); end
  def test_detailed_lever_guides_b5; assert_equal("Lever", worksheet.detailed_lever_guides_b5); end
  def test_detailed_lever_guides_c5; assert_equal("Code", worksheet.detailed_lever_guides_c5); end
  def test_detailed_lever_guides_d5; assert_equal("Situation today", worksheet.detailed_lever_guides_d5); end
  def test_detailed_lever_guides_e5; assert_equal("Chosen level description", worksheet.detailed_lever_guides_e5); end
  def test_detailed_lever_guides_f5; assert_equal("Energy supply / demand from choice by 2050", worksheet.detailed_lever_guides_f5); end
  def test_detailed_lever_guides_g5; assert_equal("Interactions with other levers", worksheet.detailed_lever_guides_g5); end
  def test_detailed_lever_guides_h5; assert_equal("Level 1 bubble text", worksheet.detailed_lever_guides_h5); end
  def test_detailed_lever_guides_i5; assert_equal("Level 2 bubble text", worksheet.detailed_lever_guides_i5); end
  def test_detailed_lever_guides_j5; assert_equal("Level 3 bubble text", worksheet.detailed_lever_guides_j5); end
  def test_detailed_lever_guides_k5; assert_equal("Level 4 bubble text", worksheet.detailed_lever_guides_k5); end
  def test_detailed_lever_guides_l5; assert_equal("Note", worksheet.detailed_lever_guides_l5); end
  def test_detailed_lever_guides_m5; assert_equal("Lever", worksheet.detailed_lever_guides_m5); end
  def test_detailed_lever_guides_n5; assert_equal("Question for key number", worksheet.detailed_lever_guides_n5); end
  def test_detailed_lever_guides_o5; assert_equal("Metric - key unit", worksheet.detailed_lever_guides_o5); end
  def test_detailed_lever_guides_p5; assert_equal("Metric - 2011", worksheet.detailed_lever_guides_p5); end
  def test_detailed_lever_guides_q5; assert_equal("Metric - L1", worksheet.detailed_lever_guides_q5); end
  def test_detailed_lever_guides_r5; assert_equal("Metric - L2", worksheet.detailed_lever_guides_r5); end
  def test_detailed_lever_guides_s5; assert_equal("Metric - L3", worksheet.detailed_lever_guides_s5); end
  def test_detailed_lever_guides_t5; assert_equal("Metric - L4", worksheet.detailed_lever_guides_t5); end
  def test_detailed_lever_guides_b6; assert_equal("Global population", worksheet.detailed_lever_guides_b6); end
  def test_detailed_lever_guides_d6; assert_equal("How many people will there be in 2050? In 2011 there were 6.97 billion.", worksheet.detailed_lever_guides_d6); end
  def test_detailed_lever_guides_g6; assert_equal("This lever also drives the total food consumption, total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g6); end
  def test_detailed_lever_guides_h6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_h6); end
  def test_detailed_lever_guides_i6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_i6); end
  def test_detailed_lever_guides_j6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_j6); end
  def test_detailed_lever_guides_k6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_k6); end
  def test_detailed_lever_guides_m6; assert_equal("Global population", worksheet.detailed_lever_guides_m6); end
  def test_detailed_lever_guides_n6; assert_equal("How many people will there be?", worksheet.detailed_lever_guides_n6); end
  def test_detailed_lever_guides_o6; assert_equal("Number of people globally", worksheet.detailed_lever_guides_o6); end
  def test_detailed_lever_guides_p6; assert_equal("6,970,000,000", worksheet.detailed_lever_guides_p6); end
  def test_detailed_lever_guides_q6; assert_equal("10,900,000,000", worksheet.detailed_lever_guides_q6); end
  def test_detailed_lever_guides_r6; assert_equal("9,600,000,000", worksheet.detailed_lever_guides_r6); end
  def test_detailed_lever_guides_s6; assert_equal("8,300,000,000", worksheet.detailed_lever_guides_s6); end
  def test_detailed_lever_guides_t6; assert_equal("(no level 4)", worksheet.detailed_lever_guides_t6); end
  def test_detailed_lever_guides_b7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_b7); end
  def test_detailed_lever_guides_d7; assert_equal("What percentage of people will live in urban areas? In 2011 it was 52%.", worksheet.detailed_lever_guides_d7); end
  def test_detailed_lever_guides_g7; assert_equal("This lever also drives the total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g7); end
  def test_detailed_lever_guides_h7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_h7); end
  def test_detailed_lever_guides_i7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_i7); end
  def test_detailed_lever_guides_j7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_j7); end
  def test_detailed_lever_guides_k7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_k7); end
  def test_detailed_lever_guides_m7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_m7); end
  def test_detailed_lever_guides_n7; assert_equal("How many people will live in urban areas?", worksheet.detailed_lever_guides_n7); end
  def test_detailed_lever_guides_o7; assert_equal("% of population living in urban areas", worksheet.detailed_lever_guides_o7); end
  def test_detailed_lever_guides_p7; assert_in_epsilon(52.0, worksheet.detailed_lever_guides_p7, 0.002); end
  def test_detailed_lever_guides_q7; assert_in_epsilon(75.0, worksheet.detailed_lever_guides_q7, 0.002); end
  def test_detailed_lever_guides_r7; assert_in_epsilon(66.0, worksheet.detailed_lever_guides_r7, 0.002); end
  def test_detailed_lever_guides_s7; assert_in_epsilon(58.0, worksheet.detailed_lever_guides_s7, 0.002); end
  def test_detailed_lever_guides_t7; assert_equal("(no level 4)", worksheet.detailed_lever_guides_t7); end
  def test_detailed_lever_guides_b8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_b8); end
  def test_detailed_lever_guides_d8; assert_equal("How far will we travel? For example, in 2011 the average urban person travelled 9,200 km/year domestically.", worksheet.detailed_lever_guides_d8); end
  def test_detailed_lever_guides_g8; assert_equal("Passenger demand is very dependent on mode and occupancy. If more car trips are shifted to walking, cycling, transit, rail and 2-3 wheelers through better city design then number as well as distance of trips will likely be reduced. ", worksheet.detailed_lever_guides_g8); end
  def test_detailed_lever_guides_h8; assert_equal("13,200 km/year (44% increase from 2011).", worksheet.detailed_lever_guides_h8); end
  def test_detailed_lever_guides_i8; assert_equal("12,400 km/year (35% increase from 2011).", worksheet.detailed_lever_guides_i8); end
  def test_detailed_lever_guides_j8; assert_equal("11,700 km/year (27% increase from 2011).", worksheet.detailed_lever_guides_j8); end
  def test_detailed_lever_guides_k8; assert_equal("11,200 km/year (22% increase from 2011)", worksheet.detailed_lever_guides_k8); end
  def test_detailed_lever_guides_m8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_m8); end
  def test_detailed_lever_guides_n8; assert_equal("How far will the average urban person travel?", worksheet.detailed_lever_guides_n8); end
  def test_detailed_lever_guides_o8; assert_equal("average domestic urban distance travelled in km/person/year", worksheet.detailed_lever_guides_o8); end
  def test_detailed_lever_guides_p8; assert_equal("9,200", worksheet.detailed_lever_guides_p8); end
  def test_detailed_lever_guides_q8; assert_equal("13,200", worksheet.detailed_lever_guides_q8); end
  def test_detailed_lever_guides_r8; assert_equal("12,400", worksheet.detailed_lever_guides_r8); end
  def test_detailed_lever_guides_s8; assert_equal("11,700", worksheet.detailed_lever_guides_s8); end
  def test_detailed_lever_guides_t8; assert_equal("11,200", worksheet.detailed_lever_guides_t8); end
  def test_detailed_lever_guides_b9; assert_equal("Freight distance", worksheet.detailed_lever_guides_b9); end
  def test_detailed_lever_guides_d9; assert_equal("How far will our freight travel? In 2011 freight travelled 85 trillion tonne-kms.", worksheet.detailed_lever_guides_d9); end
  def test_detailed_lever_guides_g9; assert_equal("Freight demand’s impact on reducing CO2 emissions is highly dependent on vehicle load factors and the modes by which freight growth is accommodated.", worksheet.detailed_lever_guides_g9); end
  def test_detailed_lever_guides_h9; assert_equal("Freight increases by 222%", worksheet.detailed_lever_guides_h9); end
  def test_detailed_lever_guides_i9; assert_equal("Freight increases by 191%", worksheet.detailed_lever_guides_i9); end
  def test_detailed_lever_guides_j9; assert_equal("Freight increases by 165%", worksheet.detailed_lever_guides_j9); end
  def test_detailed_lever_guides_k9; assert_equal("Freight increases by 139%", worksheet.detailed_lever_guides_k9); end
  def test_detailed_lever_guides_m9; assert_equal("Freight distance", worksheet.detailed_lever_guides_m9); end
  def test_detailed_lever_guides_n9; assert_equal("How far will our stuff travel?", worksheet.detailed_lever_guides_n9); end
  def test_detailed_lever_guides_o9; assert_equal("trillion tonne-km per year (2011)", worksheet.detailed_lever_guides_o9); end
  def test_detailed_lever_guides_p9; assert_equal("85", worksheet.detailed_lever_guides_p9); end
  def test_detailed_lever_guides_q9; assert_equal("189", worksheet.detailed_lever_guides_q9); end
  def test_detailed_lever_guides_r9; assert_equal("163", worksheet.detailed_lever_guides_r9); end
  def test_detailed_lever_guides_s9; assert_equal("141", worksheet.detailed_lever_guides_s9); end
  def test_detailed_lever_guides_t9; assert_equal("118", worksheet.detailed_lever_guides_t9); end
  def test_detailed_lever_guides_b10; assert_equal("Mode", worksheet.detailed_lever_guides_b10); end
  def test_detailed_lever_guides_d10; assert_equal("Do we use cars, or do we switch to public transport, cycling and walking? For example, in 2011 38% of all km travelled by urban passengers were by car.", worksheet.detailed_lever_guides_d10); end
  def test_detailed_lever_guides_g10; assert_equal("The effectiveness of mode shifts will also be impacted by the total quantity of demand. The modes also impact vehicle types, thereby impacting the results from the efficiency and electrification levers. ", worksheet.detailed_lever_guides_g10); end
  def test_detailed_lever_guides_h10; assert_equal("In 2050 cars are the dominant mode of travel in urban areas (around 65%).", worksheet.detailed_lever_guides_h10); end
  def test_detailed_lever_guides_i10; assert_equal("In 2050, cars account for 53% of km travelled in urban areas.", worksheet.detailed_lever_guides_i10); end
  def test_detailed_lever_guides_j10; assert_equal("In 2050, cars account for 43% of km travelled in urban areas.", worksheet.detailed_lever_guides_j10); end
  def test_detailed_lever_guides_k10; assert_equal("In 2050, cars account for 29% of km travelled in urban areas.", worksheet.detailed_lever_guides_k10); end
  def test_detailed_lever_guides_m10; assert_equal("Mode", worksheet.detailed_lever_guides_m10); end
  def test_detailed_lever_guides_n10; assert_equal("What proportion of km travelled were by car?", worksheet.detailed_lever_guides_n10); end
  def test_detailed_lever_guides_o10; assert_equal("% of km travelled by car", worksheet.detailed_lever_guides_o10); end
  def test_detailed_lever_guides_p10; assert_equal("38%", worksheet.detailed_lever_guides_p10); end
  def test_detailed_lever_guides_q10; assert_equal("65%", worksheet.detailed_lever_guides_q10); end
  def test_detailed_lever_guides_r10; assert_equal("53%", worksheet.detailed_lever_guides_r10); end
  def test_detailed_lever_guides_s10; assert_equal("43%", worksheet.detailed_lever_guides_s10); end
  def test_detailed_lever_guides_t10; assert_equal("29%", worksheet.detailed_lever_guides_t10); end
  def test_detailed_lever_guides_b11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_b11); end
  def test_detailed_lever_guides_d11; assert_equal("Can each vehicle carry more people or heavier loads? For example, in 2011 the average urban car carried 1.6 people.", worksheet.detailed_lever_guides_d11); end
  def test_detailed_lever_guides_g11; assert_equal("The impact of changes to occupancy will depend on the other transport levers.", worksheet.detailed_lever_guides_g11); end
  def test_detailed_lever_guides_h11; assert_equal("1.4 people (10% lower than 2011).", worksheet.detailed_lever_guides_h11); end
  def test_detailed_lever_guides_i11; assert_equal("1.6 people (equal to 2011).", worksheet.detailed_lever_guides_i11); end
  def test_detailed_lever_guides_j11; assert_equal("1.8 people (10% higher than 2011).", worksheet.detailed_lever_guides_j11); end
  def test_detailed_lever_guides_k11; assert_equal("1.9 people (20% higher than 2011)", worksheet.detailed_lever_guides_k11); end
  def test_detailed_lever_guides_m11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_m11); end
  def test_detailed_lever_guides_n11; assert_equal("Can each vehicle carry more people or heavier loads?", worksheet.detailed_lever_guides_n11); end
  def test_detailed_lever_guides_o11; assert_equal("Occupancy (number of people) per average urban car (2011), then % increase", worksheet.detailed_lever_guides_o11); end
  def test_detailed_lever_guides_p11; assert_equal("1.6", worksheet.detailed_lever_guides_p11); end
  def test_detailed_lever_guides_q11; assert_equal("1.4", worksheet.detailed_lever_guides_q11); end
  def test_detailed_lever_guides_r11; assert_equal("1.6", worksheet.detailed_lever_guides_r11); end
  def test_detailed_lever_guides_s11; assert_equal("1.8", worksheet.detailed_lever_guides_s11); end
  def test_detailed_lever_guides_t11; assert_equal("1.9", worksheet.detailed_lever_guides_t11); end
  def test_detailed_lever_guides_b12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_b12); end
  def test_detailed_lever_guides_d12; assert_equal("Will people move away from owning private cars, towards either hired or self-driving vehicles?", worksheet.detailed_lever_guides_d12); end
  def test_detailed_lever_guides_h12; assert_equal("The ratio of car hiring (vs ownership) is 20% lower than 2011.", worksheet.detailed_lever_guides_h12); end
  def test_detailed_lever_guides_i12; assert_equal("The ratio of car hiring (vs ownership) is the same as today (identical to 2011 figure).", worksheet.detailed_lever_guides_i12); end
  def test_detailed_lever_guides_j12; assert_equal("The ratio of car hiring (vs ownership) is 100% higher than 2011.", worksheet.detailed_lever_guides_j12); end
  def test_detailed_lever_guides_k12; assert_equal("The ratio of car hiring (vs ownership) is 260% higher than 2011.", worksheet.detailed_lever_guides_k12); end
  def test_detailed_lever_guides_m12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_m12); end
  def test_detailed_lever_guides_n12; assert_equal("How much will the ratio of car owning to car hire change?", worksheet.detailed_lever_guides_n12); end
  def test_detailed_lever_guides_o12; assert_equal("Change in ratio of car hiring since 2011", worksheet.detailed_lever_guides_o12); end
  def test_detailed_lever_guides_p12; assert_equal("0%", worksheet.detailed_lever_guides_p12); end
  def test_detailed_lever_guides_q12; assert_equal("-20%", worksheet.detailed_lever_guides_q12); end
  def test_detailed_lever_guides_r12; assert_equal("0%", worksheet.detailed_lever_guides_r12); end
  def test_detailed_lever_guides_s12; assert_equal("100%", worksheet.detailed_lever_guides_s12); end
  def test_detailed_lever_guides_t12; assert_equal("260%", worksheet.detailed_lever_guides_t12); end
  def test_detailed_lever_guides_b13; assert_equal("Efficiency", worksheet.detailed_lever_guides_b13); end
  def test_detailed_lever_guides_d13; assert_equal("How efficient will our vehicles be? For example, in 2011 the average urban passenger car uses 8.6 litres of fuel per 100km. Efficiency has been improving around 1 to 2% a year.", worksheet.detailed_lever_guides_d13); end
  def test_detailed_lever_guides_g13; assert_equal("The efficiency lever will depend on the mode and occupancy lever. The more vehicles in the fleet, the more effective efficiency improvements will be in reducing emissions.", worksheet.detailed_lever_guides_g13); end
  def test_detailed_lever_guides_h13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 5.9 litres of fuel per 100km. ", worksheet.detailed_lever_guides_h13); end
  def test_detailed_lever_guides_i13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 5.3 litres of fuel per 100km. ", worksheet.detailed_lever_guides_i13); end
  def test_detailed_lever_guides_j13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 4.8 litres of fuel per 100km. ", worksheet.detailed_lever_guides_j13); end
  def test_detailed_lever_guides_k13; assert_equal("By 2050 the average urban passenger car (with an internal combusion engine) will use 4.3 litres of fuel per 100km. ", worksheet.detailed_lever_guides_k13); end
  def test_detailed_lever_guides_m13; assert_equal("Efficiency", worksheet.detailed_lever_guides_m13); end
  def test_detailed_lever_guides_n13; assert_equal("How efficient wil the average urban passenger car with an internal combustion engine be?", worksheet.detailed_lever_guides_n13); end
  def test_detailed_lever_guides_o13; assert_equal("litres of fuel per 100km", worksheet.detailed_lever_guides_o13); end
  def test_detailed_lever_guides_p13; assert_equal("8.6", worksheet.detailed_lever_guides_p13); end
  def test_detailed_lever_guides_q13; assert_equal("5.9", worksheet.detailed_lever_guides_q13); end
  def test_detailed_lever_guides_r13; assert_equal("5.3", worksheet.detailed_lever_guides_r13); end
  def test_detailed_lever_guides_s13; assert_equal("4.8", worksheet.detailed_lever_guides_s13); end
  def test_detailed_lever_guides_t13; assert_equal("4.3", worksheet.detailed_lever_guides_t13); end
  def test_detailed_lever_guides_b14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_b14); end
  def test_detailed_lever_guides_d14; assert_equal("Will we switch to lower emission vehicles, such as hybrid, electric or hydrogen vehicles? For example, in 2011 only 0.2% of passenger cars were electric and very few used hydrogen.", worksheet.detailed_lever_guides_d14); end
  def test_detailed_lever_guides_g14; assert_equal("The impact of the electrification lever depends on the distribution of modes as well as the passenger and freight demand. The more vehicles in the fleet, the greater the impact of electrification in reducing emissions.", worksheet.detailed_lever_guides_g14); end
  def test_detailed_lever_guides_h14; assert_equal("By 2050, 2.0% of passenger cars are electric/hydrogen-powered.", worksheet.detailed_lever_guides_h14); end
  def test_detailed_lever_guides_i14; assert_equal("By 2050, 10.0% of passenger cars are electric/hydrogen-powered.", worksheet.detailed_lever_guides_i14); end
  def test_detailed_lever_guides_j14; assert_equal("By 2050, 35.0% of passenger cars are electric/hydrogen-powered.", worksheet.detailed_lever_guides_j14); end
  def test_detailed_lever_guides_k14; assert_equal("By 2050, 55.0% of passenger cars are electric/hydrogen-powered", worksheet.detailed_lever_guides_k14); end
  def test_detailed_lever_guides_m14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_m14); end
  def test_detailed_lever_guides_n14; assert_equal("How many vehicles will be either electric or hydrogen powered?", worksheet.detailed_lever_guides_n14); end
  def test_detailed_lever_guides_o14; assert_equal("% of passenger cars that are electric or hydrogen powered", worksheet.detailed_lever_guides_o14); end
  def test_detailed_lever_guides_p14; assert_equal("0.2%", worksheet.detailed_lever_guides_p14); end
  def test_detailed_lever_guides_q14; assert_equal("2%", worksheet.detailed_lever_guides_q14); end
  def test_detailed_lever_guides_r14; assert_equal("10%", worksheet.detailed_lever_guides_r14); end
  def test_detailed_lever_guides_s14; assert_equal("35%", worksheet.detailed_lever_guides_s14); end
  def test_detailed_lever_guides_t14; assert_equal("55%", worksheet.detailed_lever_guides_t14); end
  def test_detailed_lever_guides_b15; assert_equal("Building size", worksheet.detailed_lever_guides_b15); end
  def test_detailed_lever_guides_d15; assert_equal("How big will our buildings be? For example, in 2011 the average area of an urban household was 92 m<sup>2</sup>.", worksheet.detailed_lever_guides_d15); end
  def test_detailed_lever_guides_e15; assert_equal("The average urban home will have a floor area of 104.5 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_e15); end
  def test_detailed_lever_guides_h15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_h15); end
  def test_detailed_lever_guides_i15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_i15); end
  def test_detailed_lever_guides_j15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_j15); end
  def test_detailed_lever_guides_k15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_k15); end
  def test_detailed_lever_guides_m15; assert_equal("Building size", worksheet.detailed_lever_guides_m15); end
  def test_detailed_lever_guides_n15; assert_equal("How big will the average urban home be?", worksheet.detailed_lever_guides_n15); end
  def test_detailed_lever_guides_o15; assert_equal("Area of average urban household (square metres)", worksheet.detailed_lever_guides_o15); end
  def test_detailed_lever_guides_p15; assert_in_epsilon(92.0, worksheet.detailed_lever_guides_p15, 0.002); end
  def test_detailed_lever_guides_q15; assert_in_epsilon(110.0, worksheet.detailed_lever_guides_q15, 0.002); end
  def test_detailed_lever_guides_r15; assert_in_epsilon(105.0, worksheet.detailed_lever_guides_r15, 0.002); end
  def test_detailed_lever_guides_s15; assert_in_epsilon(100.0, worksheet.detailed_lever_guides_s15, 0.002); end
  def test_detailed_lever_guides_t15; assert_in_epsilon(95.0, worksheet.detailed_lever_guides_t15, 0.002); end
  def test_detailed_lever_guides_b16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_b16); end
  def test_detailed_lever_guides_d16; assert_equal("How comfortable will our home temperatures be? For example, in 2011 the average urban home temperature was 17.5&deg;C in winter and 26.5&deg;C in summer.", worksheet.detailed_lever_guides_d16); end
  def test_detailed_lever_guides_e16; assert_equal("In 2050 the average urban home will have an inside temperature of 20 &deg;C in winter and 24 &deg;C in summer.", worksheet.detailed_lever_guides_e16); end
  def test_detailed_lever_guides_h16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_h16); end
  def test_detailed_lever_guides_i16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_i16); end
  def test_detailed_lever_guides_j16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_j16); end
  def test_detailed_lever_guides_k16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_k16); end
  def test_detailed_lever_guides_m16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_m16); end
  def test_detailed_lever_guides_n16; assert_equal("How comfortable will our home temperatures be?", worksheet.detailed_lever_guides_n16); end
  def test_detailed_lever_guides_o16; assert_equal("average urban home temperature in winter and summer", worksheet.detailed_lever_guides_o16); end
  def test_detailed_lever_guides_p16; assert_equal("17.5&deg;C in winter, 26.5&deg;C in summer", worksheet.detailed_lever_guides_p16); end
  def test_detailed_lever_guides_q16; assert_equal("20 and 24", worksheet.detailed_lever_guides_q16); end
  def test_detailed_lever_guides_r16; assert_equal("19 and 25", worksheet.detailed_lever_guides_r16); end
  def test_detailed_lever_guides_s16; assert_equal("18 and 26", worksheet.detailed_lever_guides_s16); end
  def test_detailed_lever_guides_t16; assert_equal("17 and 27", worksheet.detailed_lever_guides_t16); end
  def test_detailed_lever_guides_b17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_b17); end
  def test_detailed_lever_guides_d17; assert_equal("How many appliances will we have in our homes? For example, in 2011 the average urban household had 4.0 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 2.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_d17); end
  def test_detailed_lever_guides_e17; assert_equal("In 2050 the average urban household will have 5.4 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.1 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_e17); end
  def test_detailed_lever_guides_h17; assert_equal("6.3 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 5.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_h17); end
  def test_detailed_lever_guides_i17; assert_equal("5.5 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.2 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_i17); end
  def test_detailed_lever_guides_j17; assert_equal("4.9 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.6 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_j17); end
  def test_detailed_lever_guides_k17; assert_equal("4.1 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 3.0 small appliances (e.g. laptop, DVD player).", worksheet.detailed_lever_guides_k17); end
  def test_detailed_lever_guides_m17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_m17); end
  def test_detailed_lever_guides_n17; assert_equal("How many appliances will we have in our homes?", worksheet.detailed_lever_guides_n17); end
  def test_detailed_lever_guides_o17; assert_equal("TO ADD", worksheet.detailed_lever_guides_o17); end
  def test_detailed_lever_guides_p17; assert_equal("TO ADD", worksheet.detailed_lever_guides_p17); end
  def test_detailed_lever_guides_q17; assert_equal("TO ADD", worksheet.detailed_lever_guides_q17); end
  def test_detailed_lever_guides_r17; assert_equal("TO ADD", worksheet.detailed_lever_guides_r17); end
  def test_detailed_lever_guides_s17; assert_equal("TO ADD", worksheet.detailed_lever_guides_s17); end
  def test_detailed_lever_guides_t17; assert_equal("TO ADD", worksheet.detailed_lever_guides_t17); end
  def test_detailed_lever_guides_b18; assert_equal("Building insulation", worksheet.detailed_lever_guides_b18); end
  def test_detailed_lever_guides_d18; assert_equal("How insulated will our buildings be? For example, in 2011 the average heat loss coefficient of an urban residential building was 16.9 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_d18); end
  def test_detailed_lever_guides_e18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 31% by 2050. The average heat loss coefficient of these buildings will be 11.7 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_e18); end
  def test_detailed_lever_guides_h18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 29%.", worksheet.detailed_lever_guides_h18); end
  def test_detailed_lever_guides_i18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 47%.", worksheet.detailed_lever_guides_i18); end
  def test_detailed_lever_guides_j18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 64%.", worksheet.detailed_lever_guides_j18); end
  def test_detailed_lever_guides_k18; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 76%.", worksheet.detailed_lever_guides_k18); end
  def test_detailed_lever_guides_m18; assert_equal("Building insulation", worksheet.detailed_lever_guides_m18); end
  def test_detailed_lever_guides_n18; assert_equal("How much will insulation of buildings reduce heat loss?", worksheet.detailed_lever_guides_n18); end
  def test_detailed_lever_guides_o18; assert_equal("Rate of heat loss GW/(M ha*&deg;C)", worksheet.detailed_lever_guides_o18); end
  def test_detailed_lever_guides_p18; assert_equal("15 GW/(M ha*&deg;C)", worksheet.detailed_lever_guides_p18); end
  def test_detailed_lever_guides_q18; assert_equal("29%.", worksheet.detailed_lever_guides_q18); end
  def test_detailed_lever_guides_r18; assert_equal("47%.", worksheet.detailed_lever_guides_r18); end
  def test_detailed_lever_guides_s18; assert_equal("64%.", worksheet.detailed_lever_guides_s18); end
  def test_detailed_lever_guides_t18; assert_equal("76%.", worksheet.detailed_lever_guides_t18); end
  def test_detailed_lever_guides_b19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_b19); end
  def test_detailed_lever_guides_d19; assert_equal("How will we heat, cool and light our buildings, and how will we cook our food? For example, in 2011, 2% of urban heating used low-carbon technologies like heat pumps and solar heaters. All cooling used air conditioning, with 0% low-carbon options like solar cooling.", worksheet.detailed_lever_guides_d19); end
  def test_detailed_lever_guides_e19; assert_equal("In 2050 the heating technology structure will be 2% solid boiler, 13% liquid boiler, 51% gas boiler, 3% heat pumps, 8% electricity heater, 1% solar heater, 3% micro-CHP, 21% district heating. The cooling structure will be 92% air-conditioning, 2% chiller, 6% solar cooling. The cooking technology structure will be 7% solid stoves, 14% liquid stoves, 40% gas stoves, 28% electric stoves, 11% traditional biomass stoves. ", worksheet.detailed_lever_guides_e19); end
  def test_detailed_lever_guides_h19; assert_equal("2% of heating is from either solar or heat pumps, and 5% of cooling is solar. ", worksheet.detailed_lever_guides_h19); end
  def test_detailed_lever_guides_i19; assert_equal("20% of heating is from either solar or heat pumps, and 10% of cooling is solar. ", worksheet.detailed_lever_guides_i19); end
  def test_detailed_lever_guides_j19; assert_equal("45% of heating is from either solar or heat pumps, and 15% of cooling is solar.", worksheet.detailed_lever_guides_j19); end
  def test_detailed_lever_guides_k19; assert_equal("70% of heating is from either solar or heat pumps, and 20% of cooling is solar. ", worksheet.detailed_lever_guides_k19); end
  def test_detailed_lever_guides_m19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_m19); end
  def test_detailed_lever_guides_n19; assert_equal("How much will we use low-carbon technologies to heat and cool our buildings?", worksheet.detailed_lever_guides_n19); end
  def test_detailed_lever_guides_o19; assert_equal("% of urban space heating technologies that are low-carbon (solar and heat pumps)", worksheet.detailed_lever_guides_o19); end
  def test_detailed_lever_guides_p19; assert_equal("TO ADD", worksheet.detailed_lever_guides_p19); end
  def test_detailed_lever_guides_q19; assert_equal("TO ADD", worksheet.detailed_lever_guides_q19); end
  def test_detailed_lever_guides_r19; assert_equal("TO ADD", worksheet.detailed_lever_guides_r19); end
  def test_detailed_lever_guides_s19; assert_equal("TO ADD", worksheet.detailed_lever_guides_s19); end
  def test_detailed_lever_guides_t19; assert_equal("TO ADD", worksheet.detailed_lever_guides_t19); end
  def test_detailed_lever_guides_b20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_b20); end
  def test_detailed_lever_guides_d20; assert_equal("How efficient will our appliances be? For example, the average urban TV in 2011 had a power of 250W. For the last 20 years, average appliance efficiency in Europe has improved by around 20%. ", worksheet.detailed_lever_guides_d20); end
  def test_detailed_lever_guides_e20; assert_equal("Average TV uses has a power of 236W in 2050.", worksheet.detailed_lever_guides_e20); end
  def test_detailed_lever_guides_h20; assert_equal("Average TV uses uses 3% less power.", worksheet.detailed_lever_guides_h20); end
  def test_detailed_lever_guides_i20; assert_equal("Average TV uses uses 17% less power.", worksheet.detailed_lever_guides_i20); end
  def test_detailed_lever_guides_j20; assert_equal("Average TV uses uses 23% less power.", worksheet.detailed_lever_guides_j20); end
  def test_detailed_lever_guides_k20; assert_equal("Average TV uses uses 30% less power.", worksheet.detailed_lever_guides_k20); end
  def test_detailed_lever_guides_m20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_m20); end
  def test_detailed_lever_guides_n20; assert_equal("% reduction in power needed by average appliance", worksheet.detailed_lever_guides_n20); end
  def test_detailed_lever_guides_o20; assert_equal("Power (W) required by average global urban TVs", worksheet.detailed_lever_guides_o20); end
  def test_detailed_lever_guides_p20; assert_equal("250W", worksheet.detailed_lever_guides_p20); end
  def test_detailed_lever_guides_q20; assert_equal("243W", worksheet.detailed_lever_guides_q20); end
  def test_detailed_lever_guides_r20; assert_equal("208W", worksheet.detailed_lever_guides_r20); end
  def test_detailed_lever_guides_s20; assert_equal("192W", worksheet.detailed_lever_guides_s20); end
  def test_detailed_lever_guides_t20; assert_equal("174W", worksheet.detailed_lever_guides_t20); end
  def test_detailed_lever_guides_b21; assert_equal("Product lifespan & demand", worksheet.detailed_lever_guides_b21); end
  def test_detailed_lever_guides_d21; assert_equal("How long will our products last? Demand for products leads to the production of 8.7Gt of materials, that is: 1.8Gt of crude steel, 0.1Gt of aluminium, 0.8Gt of chemicals, 0.6Gt of paper, 0.8Gt of timber, 1Gt of other materials, & 3.6Gt of cement.", worksheet.detailed_lever_guides_d21); end
  def test_detailed_lever_guides_e21; assert_equal("Demand for products leads to the production of 14.7Gt of materials, that is: 3.1Gt of crude steel, 0.1Gt of aluminium, 1.7Gt of chemicals, 1.3Gt of paper, 1.3Gt of timber, 1.6Gt of other materials, & 5.5Gt of cement.", worksheet.detailed_lever_guides_e21); end
  def test_detailed_lever_guides_f21; assert_equal("Demand for these products leads to the production of 17.5Gt of materials, that is: 3.1Gt of crude steel, 0.2Gt of aluminium, 1.4Gt of chemicals, 0.9Gt of paper, 1.4Gt of timber, 2.4Gt of other materials, & 1.4Gt of cement", worksheet.detailed_lever_guides_f21); end
  def test_detailed_lever_guides_g21; assert_equal("Product demand is defined by the activity in the other sectors whenever possible (e.g. amount of buildings, infrastructure and transport demand are defined in their respective sectors). Product demand is defined by this lever when there is no link with the activity in the other sectors (e.g. packaging and paper demand are defined by this lever). This lever also specifies the lifetime of all the consumer products (and therefore the need for new products to answer a specified stock requirement at a given time).", worksheet.detailed_lever_guides_g21); end
  def test_detailed_lever_guides_h21; assert_equal("By 2050 the demand for consumer goods per head increases, with product demand correlated to GDP growth projection. Buildings, infrastructure & transport product demand are defined by the other sectors and transport lifespan is unchanged from 2011 levels. There is no development in product reuse or recycling.", worksheet.detailed_lever_guides_h21); end
  def test_detailed_lever_guides_i21; assert_equal("Consumer product demand per head worldwide reaches current EU levels then flattens. Buildings, infrastructure & transport product demand are defined by the other sectors and transport lifespan increases 10% from 2011 levels by 2050. Consumer goods stabilize.\rModerate development in product reuse and recycling.", worksheet.detailed_lever_guides_i21); end
  def test_detailed_lever_guides_j21; assert_equal("Consumer product demand remains constant (increases in some parts of the world balance decreases in other). Buildings, infrastructure & transport product demand are defined by the other sectors and transport technology lifespan increases by 20% by 2050 from 2011 levels. Significant development in product reuse and recycling.", worksheet.detailed_lever_guides_j21); end
  def test_detailed_lever_guides_k21; assert_equal("Consumers buy fewer goods (e.g. they are higher value but less resource intensive). Buildings, infrastructure & transport product demand are defined by the other sectors and transport technology lifespan increases 30% from 2011 levels by 2050. Consumer goods decrease as product demand is not correlated to GDP increase.", worksheet.detailed_lever_guides_k21); end
  def test_detailed_lever_guides_m21; assert_equal("Product lifespan & demand", worksheet.detailed_lever_guides_m21); end
  def test_detailed_lever_guides_n21; assert_equal("How frequently will we replace products?", worksheet.detailed_lever_guides_n21); end
  def test_detailed_lever_guides_o21; assert_equal("Lifespan of TV (years)", worksheet.detailed_lever_guides_o21); end
  def test_detailed_lever_guides_p21; assert_in_epsilon(7.0, worksheet.detailed_lever_guides_p21, 0.002); end
  def test_detailed_lever_guides_q21; assert_in_epsilon(5.0, worksheet.detailed_lever_guides_q21, 0.002); end
  def test_detailed_lever_guides_r21; assert_in_epsilon(7.0, worksheet.detailed_lever_guides_r21, 0.002); end
  def test_detailed_lever_guides_s21; assert_in_epsilon(10.0, worksheet.detailed_lever_guides_s21, 0.002); end
  def test_detailed_lever_guides_t21; assert_in_epsilon(15.0, worksheet.detailed_lever_guides_t21, 0.002); end
  def test_detailed_lever_guides_b22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_b22); end
  def test_detailed_lever_guides_d22; assert_equal("How efficiently will we use materials, and will we recycle more? Demand for products leads to the production of 8.7Gt of materials per year.", worksheet.detailed_lever_guides_d22); end
  def test_detailed_lever_guides_e22; assert_equal("Product design leads to the reduction of -3% of materials in 2050.", worksheet.detailed_lever_guides_e22); end
  def test_detailed_lever_guides_h22; assert_equal("No product & material design improvements that would lead to less material needed to make products. No switch to less CO2 intensive materials. Stable level of recycled products & materials (slight increase in chemicals, decrease in aluminium).", worksheet.detailed_lever_guides_h22); end
  def test_detailed_lever_guides_i22; assert_equal("Ambitious product & material design improvements, resulting in -10% less material to make products. Minor switches to materials which are less CO2 intensive over product lifetimes. Minor increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_i22); end
  def test_detailed_lever_guides_j22; assert_equal("Very ambitious product & material design improvements result in -20% less material needed to make products. Significant switches to materials which are less CO2 intensive over product lifetimes. Significant increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_j22); end
  def test_detailed_lever_guides_k22; assert_equal("Extreme improvements in product & material design, resulting in -30% less material to make products by 2050. which are less CO2 intensive over product lifetimes. Extreme increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_k22); end
  def test_detailed_lever_guides_m22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_m22); end
  def test_detailed_lever_guides_n22; assert_equal("% reduction in material needed for a given product between 2011 and 2050", worksheet.detailed_lever_guides_n22); end
  def test_detailed_lever_guides_o22; assert_equal("% reduction in material used to make a given product between 2011 and 2050", worksheet.detailed_lever_guides_o22); end
  def test_detailed_lever_guides_p22; assert_in_delta(0.0, (worksheet.detailed_lever_guides_p22||0), 0.002); end
  def test_detailed_lever_guides_q22; assert_in_delta(0.0, (worksheet.detailed_lever_guides_q22||0), 0.002); end
  def test_detailed_lever_guides_r22; assert_in_delta(0.1, worksheet.detailed_lever_guides_r22, 0.002); end
  def test_detailed_lever_guides_s22; assert_in_delta(0.2, worksheet.detailed_lever_guides_s22, 0.002); end
  def test_detailed_lever_guides_t22; assert_in_delta(0.3, worksheet.detailed_lever_guides_t22, 0.002); end
  def test_detailed_lever_guides_b23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_b23); end
  def test_detailed_lever_guides_d23; assert_equal("How much will emissions reduce from iron, steel and aluminium production? Current emissions in the production of metals are 0.6 GtCO2 per Gt of steel and 1 GtCO2 per Gt of aluminium.", worksheet.detailed_lever_guides_d23); end
  def test_detailed_lever_guides_e23; assert_equal("Specific emissions for Steel reduce/increase by -5.3% and for Aluminium by -3.3%.", worksheet.detailed_lever_guides_e23); end
  def test_detailed_lever_guides_h23; assert_equal("Continued use of current processes & technologies. Continued use of fuels. Minimal improvements in energy efficiency. No change in emissions per tonne of steel and aluminium.", worksheet.detailed_lever_guides_h23); end
  def test_detailed_lever_guides_i23; assert_equal("Moderate decrease in classic blast oxygen furnaces, increase in electric arc furnaces and new oxygen furnace technologies. Moderate improvements in aluminium. Equivalent to the development of recent programmes for some sectors. Emissions per tonne decrease by 2% for steel and by 3% for aluminium.", worksheet.detailed_lever_guides_i23); end
  def test_detailed_lever_guides_j23; assert_equal("Significant technology progress. Fuel switch towards biomass and electrification, and energy efficiency requiring significant financial investments. Emissions per tonne decrease by 1% for steel and by 7% for aluminium.", worksheet.detailed_lever_guides_j23); end
  def test_detailed_lever_guides_k23; assert_equal("Very important technology progress, fuel switch (towards biomass & electrification) & energy efficiency close to technical and physical constraints (but limited breakthrough technologies).\rEmissions per tonne decrease by 1% for steel and by 13% for aluminium.", worksheet.detailed_lever_guides_k23); end
  def test_detailed_lever_guides_m23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_m23); end
  def test_detailed_lever_guides_n23; assert_equal("How many tonnes of CO2 are produced per tonne of steel?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n23); end
  def test_detailed_lever_guides_o23; assert_equal("Change in emissions per tonne of steel from now to 2050 ", worksheet.detailed_lever_guides_o23); end
  def test_detailed_lever_guides_p23; assert_equal("2 tonnes of CO2 currently produced per tonne of steel. ", worksheet.detailed_lever_guides_p23); end
  def test_detailed_lever_guides_q23; assert_equal("TO ADD", worksheet.detailed_lever_guides_q23); end
  def test_detailed_lever_guides_r23; assert_equal("TO ADD", worksheet.detailed_lever_guides_r23); end
  def test_detailed_lever_guides_s23; assert_equal("TO ADD", worksheet.detailed_lever_guides_s23); end
  def test_detailed_lever_guides_t23; assert_equal("TO ADD", worksheet.detailed_lever_guides_t23); end
  def test_detailed_lever_guides_b24; assert_equal("Chemicals", worksheet.detailed_lever_guides_b24); end
  def test_detailed_lever_guides_d24; assert_equal("How much will emissions reduce from chemical production? Specific emissions for chemicals are 1.5GtCO2 per Gt.", worksheet.detailed_lever_guides_d24); end
  def test_detailed_lever_guides_e24; assert_equal("Specific emissions for chemicals reduce/increase by 0%", worksheet.detailed_lever_guides_e24); end
  def test_detailed_lever_guides_h24; assert_equal("1% increase in CO<sub>2</sub> emissions per tonne of chemicals.", worksheet.detailed_lever_guides_h24); end
  def test_detailed_lever_guides_i24; assert_equal("3% decrease in CO<sub>2</sub> emissions per tonne of chemicals.", worksheet.detailed_lever_guides_i24); end
  def test_detailed_lever_guides_j24; assert_equal("7% decrease in CO<sub>2</sub> emissions per tonne of chemicals.", worksheet.detailed_lever_guides_j24); end
  def test_detailed_lever_guides_k24; assert_equal("15% decrease in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_k24); end
  def test_detailed_lever_guides_m24; assert_equal("Chemicals", worksheet.detailed_lever_guides_m24); end
  def test_detailed_lever_guides_n24; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n24); end
  def test_detailed_lever_guides_o24; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_o24); end
  def test_detailed_lever_guides_p24; assert_equal("1.7 tonnes of CO2 produced per tonne of chemicals on average", worksheet.detailed_lever_guides_p24); end
  def test_detailed_lever_guides_q24; assert_in_delta(0.01, worksheet.detailed_lever_guides_q24, 0.002); end
  def test_detailed_lever_guides_r24; assert_in_delta(-0.03, worksheet.detailed_lever_guides_r24, 0.002); end
  def test_detailed_lever_guides_s24; assert_in_delta(-0.07, worksheet.detailed_lever_guides_s24, 0.002); end
  def test_detailed_lever_guides_t24; assert_in_delta(-0.15, worksheet.detailed_lever_guides_t24, 0.002); end
  def test_detailed_lever_guides_b25; assert_equal("Paper and other", worksheet.detailed_lever_guides_b25); end
  def test_detailed_lever_guides_d25; assert_equal("How efficiently do we produce paper? Specific emissions for pulp & paper are 0.5 GtCO2 per Gt and for other materials of are 2.3 GtCO2 per Gt.", worksheet.detailed_lever_guides_d25); end
  def test_detailed_lever_guides_e25; assert_equal("Specific emissions for pulp & paper change by -23% and for other materials by -15%.", worksheet.detailed_lever_guides_e25); end
  def test_detailed_lever_guides_h25; assert_equal("1% increase in CO<sub>2</sub> per tonne of pulp and paper produced, and 2% increase for other materials.", worksheet.detailed_lever_guides_h25); end
  def test_detailed_lever_guides_i25; assert_equal("20% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, 20% decrease for other materials.", worksheet.detailed_lever_guides_i25); end
  def test_detailed_lever_guides_j25; assert_equal("32% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, and 31% decrease for other materials.", worksheet.detailed_lever_guides_j25); end
  def test_detailed_lever_guides_k25; assert_equal("45% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, 42% decrease for other materials", worksheet.detailed_lever_guides_k25); end
  def test_detailed_lever_guides_m25; assert_equal("Paper and other", worksheet.detailed_lever_guides_m25); end
  def test_detailed_lever_guides_n25; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on paper on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n25); end
  def test_detailed_lever_guides_o25; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_o25); end
  def test_detailed_lever_guides_p25; assert_equal("0.5 tonnes of CO2 produced per tonne of paper", worksheet.detailed_lever_guides_p25); end
  def test_detailed_lever_guides_q25; assert_in_delta(0.01, worksheet.detailed_lever_guides_q25, 0.002); end
  def test_detailed_lever_guides_r25; assert_in_delta(-0.2, worksheet.detailed_lever_guides_r25, 0.002); end
  def test_detailed_lever_guides_s25; assert_in_delta(-0.32, worksheet.detailed_lever_guides_s25, 0.002); end
  def test_detailed_lever_guides_t25; assert_in_delta(-0.45, worksheet.detailed_lever_guides_t25, 0.002); end
  def test_detailed_lever_guides_b26; assert_equal("Cement", worksheet.detailed_lever_guides_b26); end
  def test_detailed_lever_guides_d26; assert_equal("How efficiently do we produce cement? In 2011, 0.4 Gt of CO2  were emitted per Gt of cement produced.", worksheet.detailed_lever_guides_d26); end
  def test_detailed_lever_guides_e26; assert_equal("Specific emissions for cement reduce/increase by -6%.", worksheet.detailed_lever_guides_e26); end
  def test_detailed_lever_guides_h26; assert_equal("2% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_h26); end
  def test_detailed_lever_guides_i26; assert_equal("4% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_i26); end
  def test_detailed_lever_guides_j26; assert_equal("8% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_j26); end
  def test_detailed_lever_guides_k26; assert_equal("31% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_k26); end
  def test_detailed_lever_guides_m26; assert_equal("Cement", worksheet.detailed_lever_guides_m26); end
  def test_detailed_lever_guides_n26; assert_equal("How many tonnes of CO2 are produced per tonne of cement?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_n26); end
  def test_detailed_lever_guides_o26; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_o26); end
  def test_detailed_lever_guides_p26; assert_equal("0.4 tonnes of CO2 produced per tonne of cement", worksheet.detailed_lever_guides_p26); end
  def test_detailed_lever_guides_q26; assert_in_delta(0.02, worksheet.detailed_lever_guides_q26, 0.002); end
  def test_detailed_lever_guides_r26; assert_in_delta(0.04, worksheet.detailed_lever_guides_r26, 0.002); end
  def test_detailed_lever_guides_s26; assert_in_delta(0.08, worksheet.detailed_lever_guides_s26, 0.002); end
  def test_detailed_lever_guides_t26; assert_in_delta(0.31, worksheet.detailed_lever_guides_t26, 0.002); end
  def test_detailed_lever_guides_b27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_b27); end
  def test_detailed_lever_guides_d27; assert_equal("Will we use CCS in industry to capture process and combustion emissions? CCS is not implemented in industry in 2011.", worksheet.detailed_lever_guides_d27); end
  def test_detailed_lever_guides_e27; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.detailed_lever_guides_e27); end
  def test_detailed_lever_guides_h27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_h27); end
  def test_detailed_lever_guides_i27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions . It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_i27); end
  def test_detailed_lever_guides_j27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_j27); end
  def test_detailed_lever_guides_k27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_k27); end
  def test_detailed_lever_guides_m27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_m27); end
  def test_detailed_lever_guides_n27; assert_equal("Do we use CCS in industry to capture process and combustion emissions? ", worksheet.detailed_lever_guides_n27); end
  def test_detailed_lever_guides_o27; assert_equal("tonnes of CO2 captured within industry", worksheet.detailed_lever_guides_o27); end
  def test_detailed_lever_guides_p27; assert_in_delta(0.0, (worksheet.detailed_lever_guides_p27||0), 0.002); end
  def test_detailed_lever_guides_q27; assert_in_delta(0.0, (worksheet.detailed_lever_guides_q27||0), 0.002); end
  def test_detailed_lever_guides_r27; assert_equal("TO ADD", worksheet.detailed_lever_guides_r27); end
  def test_detailed_lever_guides_s27; assert_equal("TO ADD", worksheet.detailed_lever_guides_s27); end
  def test_detailed_lever_guides_t27; assert_equal("TO ADD", worksheet.detailed_lever_guides_t27); end
  def test_detailed_lever_guides_b28; assert_equal("Coal / oil / gas", worksheet.detailed_lever_guides_b28); end
  def test_detailed_lever_guides_c28; assert_equal("SLG.elec", worksheet.detailed_lever_guides_c28); end
  def test_detailed_lever_guides_d28; assert_equal("In thermal power plants, do we use solid fuel (coal or wood) or gaseous fuel (natural gas or biogas)? For example, in 2011 61% of fuel was solid, 7% liquid and 32% gas.", worksheet.detailed_lever_guides_d28); end
  def test_detailed_lever_guides_e28; assert_equal("In 2050 out of total fossil energy supplied it is 40% of solid, 19% of liquid and 41% of gas power.", worksheet.detailed_lever_guides_e28); end
  def test_detailed_lever_guides_g28; assert_equal("If the user supplies bioenergy from the land and food choices, some of this is allocated to thermal power plants.", worksheet.detailed_lever_guides_g28); end
  def test_detailed_lever_guides_h28; assert_equal("61% of fuel for thermal power plants is solid, and 10% is gas.", worksheet.detailed_lever_guides_h28); end
  def test_detailed_lever_guides_i28; assert_equal("40% of fuel for thermal power plants is solid, and 41% is gas.", worksheet.detailed_lever_guides_i28); end
  def test_detailed_lever_guides_j28; assert_equal("32% of fuel for thermal power plants is solid, and 62% is gas.", worksheet.detailed_lever_guides_j28); end
  def test_detailed_lever_guides_k28; assert_equal("26% of fuel for thermal power plants is solid, and 72% is gas.", worksheet.detailed_lever_guides_k28); end
  def test_detailed_lever_guides_m28; assert_equal("Coal / oil / gas", worksheet.detailed_lever_guides_m28); end
  def test_detailed_lever_guides_n28; assert_equal("Thermal power plants: % that is supplied by solid fuel", worksheet.detailed_lever_guides_n28); end
  def test_detailed_lever_guides_o28; assert_equal("% solid", worksheet.detailed_lever_guides_o28); end
  def test_detailed_lever_guides_p28; assert_equal("61%", worksheet.detailed_lever_guides_p28); end
  def test_detailed_lever_guides_q28; assert_equal("61%", worksheet.detailed_lever_guides_q28); end
  def test_detailed_lever_guides_r28; assert_equal("40%", worksheet.detailed_lever_guides_r28); end
  def test_detailed_lever_guides_s28; assert_equal("32%", worksheet.detailed_lever_guides_s28); end
  def test_detailed_lever_guides_t28; assert_equal("26%", worksheet.detailed_lever_guides_t28); end
  def test_detailed_lever_guides_b29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_b29); end
  def test_detailed_lever_guides_d29; assert_equal("How efficiently will we extract and use fossil fuels? For example, in 2011 25% of coal power stations used the most efficient technologies (ultra- or super-critical).", worksheet.detailed_lever_guides_d29); end
  def test_detailed_lever_guides_h29; assert_equal("Small increase e.g. 38% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_h29); end
  def test_detailed_lever_guides_i29; assert_equal("More efficient power e.g. 45% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_i29); end
  def test_detailed_lever_guides_j29; assert_equal("High efficiency power e.g. 50% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_j29); end
  def test_detailed_lever_guides_k29; assert_equal("Very efficient power e.g. 55% of coal power stations used ultra- or super-critical technologies.", worksheet.detailed_lever_guides_k29); end
  def test_detailed_lever_guides_m29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_m29); end
  def test_detailed_lever_guides_n29; assert_equal("How many coal power stations use the most efficient technologies (ultra- or super- critical)?", worksheet.detailed_lever_guides_n29); end
  def test_detailed_lever_guides_o29; assert_equal("% of coal power stations using most efficient technologies (ultra- or super- critical)", worksheet.detailed_lever_guides_o29); end
  def test_detailed_lever_guides_p29; assert_equal("25%", worksheet.detailed_lever_guides_p29); end
  def test_detailed_lever_guides_q29; assert_equal("38%", worksheet.detailed_lever_guides_q29); end
  def test_detailed_lever_guides_r29; assert_equal("45%", worksheet.detailed_lever_guides_r29); end
  def test_detailed_lever_guides_s29; assert_equal("50%", worksheet.detailed_lever_guides_s29); end
  def test_detailed_lever_guides_t29; assert_equal("55%", worksheet.detailed_lever_guides_t29); end
  def test_detailed_lever_guides_b30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_b30); end
  def test_detailed_lever_guides_c30; assert_equal("CCS.elec", worksheet.detailed_lever_guides_c30); end
  def test_detailed_lever_guides_d30; assert_equal("Do we use carbon capture and storage in electricity generation? In 2011 there were only small demonstration projects.", worksheet.detailed_lever_guides_d30); end
  def test_detailed_lever_guides_e30; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_e30); end
  def test_detailed_lever_guides_h30; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_h30); end
  def test_detailed_lever_guides_i30; assert_equal("490 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_i30); end
  def test_detailed_lever_guides_j30; assert_equal("1,487 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_j30); end
  def test_detailed_lever_guides_k30; assert_equal("3,700 GW of CCS installed power capacity by 2050", worksheet.detailed_lever_guides_k30); end
  def test_detailed_lever_guides_m30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_m30); end
  def test_detailed_lever_guides_n30; assert_equal("How much do we use carbon capture and storage for electricity generation?", worksheet.detailed_lever_guides_n30); end
  def test_detailed_lever_guides_o30; assert_equal("GW of CCS power capacity", worksheet.detailed_lever_guides_o30); end
  def test_detailed_lever_guides_p30; assert_equal("0 GW", worksheet.detailed_lever_guides_p30); end
  def test_detailed_lever_guides_q30; assert_equal("16 GW", worksheet.detailed_lever_guides_q30); end
  def test_detailed_lever_guides_r30; assert_equal("490 GW", worksheet.detailed_lever_guides_r30); end
  def test_detailed_lever_guides_s30; assert_equal("1,487 GW", worksheet.detailed_lever_guides_s30); end
  def test_detailed_lever_guides_t30; assert_equal("3,700 GW", worksheet.detailed_lever_guides_t30); end
  def test_detailed_lever_guides_b31; assert_equal("Nuclear", worksheet.detailed_lever_guides_b31); end
  def test_detailed_lever_guides_c31; assert_equal("nuclear.elec", worksheet.detailed_lever_guides_c31); end
  def test_detailed_lever_guides_d31; assert_equal("Do we use nuclear power? In 2011, global capacity was 364 GW.", worksheet.detailed_lever_guides_d31); end
  def test_detailed_lever_guides_e31; assert_equal("480 GW of installed nuclear power capacity by 2050.", worksheet.detailed_lever_guides_e31); end
  def test_detailed_lever_guides_h31; assert_equal("0 GW", worksheet.detailed_lever_guides_h31); end
  def test_detailed_lever_guides_i31; assert_equal("685 GW", worksheet.detailed_lever_guides_i31); end
  def test_detailed_lever_guides_j31; assert_equal("1,030 GW", worksheet.detailed_lever_guides_j31); end
  def test_detailed_lever_guides_k31; assert_equal("1,870 GW", worksheet.detailed_lever_guides_k31); end
  def test_detailed_lever_guides_m31; assert_equal("Nuclear", worksheet.detailed_lever_guides_m31); end
  def test_detailed_lever_guides_n31; assert_equal("How much do we use nuclear power?", worksheet.detailed_lever_guides_n31); end
  def test_detailed_lever_guides_o31; assert_equal("GW of nuclear power capacity", worksheet.detailed_lever_guides_o31); end
  def test_detailed_lever_guides_p31; assert_equal("364 GW", worksheet.detailed_lever_guides_p31); end
  def test_detailed_lever_guides_q31; assert_equal("0 GW", worksheet.detailed_lever_guides_q31); end
  def test_detailed_lever_guides_r31; assert_equal("685 GW", worksheet.detailed_lever_guides_r31); end
  def test_detailed_lever_guides_s31; assert_equal("1,030 GW", worksheet.detailed_lever_guides_s31); end
  def test_detailed_lever_guides_t31; assert_equal("1,870 GW", worksheet.detailed_lever_guides_t31); end
  def test_detailed_lever_guides_b32; assert_equal("Wind", worksheet.detailed_lever_guides_b32); end
  def test_detailed_lever_guides_c32; assert_equal("onshore.wind.elec, offshore.wind.elec", worksheet.detailed_lever_guides_c32); end
  def test_detailed_lever_guides_d32; assert_equal("Do we use wind power? In 2011 there was around 234 GW of onshore wind capacity, in 83 countries. There was also 4 GW of offshore power installed.", worksheet.detailed_lever_guides_d32); end
  def test_detailed_lever_guides_e32; assert_equal("463 GW of installed wind power capacity by 2050.", worksheet.detailed_lever_guides_e32); end
  def test_detailed_lever_guides_h32; assert_equal("0 GW", worksheet.detailed_lever_guides_h32); end
  def test_detailed_lever_guides_i32; assert_equal("2,317 GW", worksheet.detailed_lever_guides_i32); end
  def test_detailed_lever_guides_j32; assert_equal("4,710 GW", worksheet.detailed_lever_guides_j32); end
  def test_detailed_lever_guides_k32; assert_equal("6,466 GW", worksheet.detailed_lever_guides_k32); end
  def test_detailed_lever_guides_m32; assert_equal("Wind", worksheet.detailed_lever_guides_m32); end
  def test_detailed_lever_guides_n32; assert_equal("How much do we use wind power?", worksheet.detailed_lever_guides_n32); end
  def test_detailed_lever_guides_o32; assert_equal("total GW of onshore and offshore wind power capacity", worksheet.detailed_lever_guides_o32); end
  def test_detailed_lever_guides_p32; assert_equal("238 GW", worksheet.detailed_lever_guides_p32); end
  def test_detailed_lever_guides_q32; assert_equal("0 GW", worksheet.detailed_lever_guides_q32); end
  def test_detailed_lever_guides_r32; assert_equal("2,317 GW", worksheet.detailed_lever_guides_r32); end
  def test_detailed_lever_guides_s32; assert_equal("4,710 GW", worksheet.detailed_lever_guides_s32); end
  def test_detailed_lever_guides_t32; assert_equal("6,466 GW", worksheet.detailed_lever_guides_t32); end
  def test_detailed_lever_guides_b33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_b33); end
  def test_detailed_lever_guides_c33; assert_equal("hydro.elec", worksheet.detailed_lever_guides_c33); end
  def test_detailed_lever_guides_d33; assert_equal("Do we use hydroelectric power? In 2011 global capacity was 970 GW.", worksheet.detailed_lever_guides_d33); end
  def test_detailed_lever_guides_e33; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.detailed_lever_guides_e33); end
  def test_detailed_lever_guides_h33; assert_equal("1,188 GW", worksheet.detailed_lever_guides_h33); end
  def test_detailed_lever_guides_i33; assert_equal("1,750 GW", worksheet.detailed_lever_guides_i33); end
  def test_detailed_lever_guides_j33; assert_equal("2,101 GW", worksheet.detailed_lever_guides_j33); end
  def test_detailed_lever_guides_k33; assert_equal("2,375 GW", worksheet.detailed_lever_guides_k33); end
  def test_detailed_lever_guides_m33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_m33); end
  def test_detailed_lever_guides_n33; assert_equal("How much do we use hydroelectric power?", worksheet.detailed_lever_guides_n33); end
  def test_detailed_lever_guides_o33; assert_equal("GW of hydroelectric capacity", worksheet.detailed_lever_guides_o33); end
  def test_detailed_lever_guides_p33; assert_equal("970", worksheet.detailed_lever_guides_p33); end
  def test_detailed_lever_guides_q33; assert_equal("1,188", worksheet.detailed_lever_guides_q33); end
  def test_detailed_lever_guides_r33; assert_equal("1,750", worksheet.detailed_lever_guides_r33); end
  def test_detailed_lever_guides_s33; assert_equal("2,101", worksheet.detailed_lever_guides_s33); end
  def test_detailed_lever_guides_t33; assert_equal("2,375", worksheet.detailed_lever_guides_t33); end
  def test_detailed_lever_guides_b34; assert_equal("Marine", worksheet.detailed_lever_guides_b34); end
  def test_detailed_lever_guides_c34; assert_equal("tidal.elec, wave.elec", worksheet.detailed_lever_guides_c34); end
  def test_detailed_lever_guides_d34; assert_equal("Do we use wave and tidal power? In 2011, global capacity was 0.5 GW of marine in total  (0.5 GW of tidal power and 0 GW of wave power).", worksheet.detailed_lever_guides_d34); end
  def test_detailed_lever_guides_e34; assert_equal("34.7 GW of installed marine power capacity by 2050.", worksheet.detailed_lever_guides_e34); end
  def test_detailed_lever_guides_h34; assert_equal("8 GW", worksheet.detailed_lever_guides_h34); end
  def test_detailed_lever_guides_i34; assert_equal("97 GW", worksheet.detailed_lever_guides_i34); end
  def test_detailed_lever_guides_j34; assert_equal("237 GW", worksheet.detailed_lever_guides_j34); end
  def test_detailed_lever_guides_k34; assert_equal("436 GW", worksheet.detailed_lever_guides_k34); end
  def test_detailed_lever_guides_m34; assert_equal("Marine", worksheet.detailed_lever_guides_m34); end
  def test_detailed_lever_guides_n34; assert_equal("How much do we use wave and tidal power?", worksheet.detailed_lever_guides_n34); end
  def test_detailed_lever_guides_o34; assert_equal("total GW of marine capacity (wave and tidal)", worksheet.detailed_lever_guides_o34); end
  def test_detailed_lever_guides_p34; assert_equal("0.5 GW", worksheet.detailed_lever_guides_p34); end
  def test_detailed_lever_guides_q34; assert_equal("8 GW", worksheet.detailed_lever_guides_q34); end
  def test_detailed_lever_guides_r34; assert_equal("97 GW", worksheet.detailed_lever_guides_r34); end
  def test_detailed_lever_guides_s34; assert_equal("237 GW", worksheet.detailed_lever_guides_s34); end
  def test_detailed_lever_guides_t34; assert_equal("436 GW", worksheet.detailed_lever_guides_t34); end
  def test_detailed_lever_guides_b35; assert_equal("Solar", worksheet.detailed_lever_guides_b35); end
  def test_detailed_lever_guides_c35; assert_equal("concentrated.solar.elec, solarpv.elec", worksheet.detailed_lever_guides_c35); end
  def test_detailed_lever_guides_d35; assert_equal("Do we use solar power? In 2011, global capacity was 71.3 GW in total (69.7 GW of photovoltaic power and 1.6 GW of concentrated solar power). ", worksheet.detailed_lever_guides_d35); end
  def test_detailed_lever_guides_e35; assert_equal("441 GW of installed solar power capacity by 2050.", worksheet.detailed_lever_guides_e35); end
  def test_detailed_lever_guides_h35; assert_equal("0 GW", worksheet.detailed_lever_guides_h35); end
  def test_detailed_lever_guides_i35; assert_equal("2,204 GW", worksheet.detailed_lever_guides_i35); end
  def test_detailed_lever_guides_j35; assert_equal("4,149 GW", worksheet.detailed_lever_guides_j35); end
  def test_detailed_lever_guides_k35; assert_equal("22,007 GW", worksheet.detailed_lever_guides_k35); end
  def test_detailed_lever_guides_m35; assert_equal("Solar", worksheet.detailed_lever_guides_m35); end
  def test_detailed_lever_guides_n35; assert_equal("How much do we use solar power?", worksheet.detailed_lever_guides_n35); end
  def test_detailed_lever_guides_o35; assert_equal("total GW of solar power capacity", worksheet.detailed_lever_guides_o35); end
  def test_detailed_lever_guides_p35; assert_equal("71 GW", worksheet.detailed_lever_guides_p35); end
  def test_detailed_lever_guides_q35; assert_equal("0 GW", worksheet.detailed_lever_guides_q35); end
  def test_detailed_lever_guides_r35; assert_equal("2,204 GW", worksheet.detailed_lever_guides_r35); end
  def test_detailed_lever_guides_s35; assert_equal("4,149 GW", worksheet.detailed_lever_guides_s35); end
  def test_detailed_lever_guides_t35; assert_equal("22,007 GW", worksheet.detailed_lever_guides_t35); end
  def test_detailed_lever_guides_b36; assert_equal("Geothermal", worksheet.detailed_lever_guides_b36); end
  def test_detailed_lever_guides_c36; assert_equal("geothermal.elec", worksheet.detailed_lever_guides_c36); end
  def test_detailed_lever_guides_d36; assert_equal("Do we use geothermal power? In 2011, global capacity was 11 GW, centred in 24 countries. Maximum potential exists in the 'ring of fire' around the Pacific Ocean.", worksheet.detailed_lever_guides_d36); end
  def test_detailed_lever_guides_e36; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.detailed_lever_guides_e36); end
  def test_detailed_lever_guides_h36; assert_equal("0 GW", worksheet.detailed_lever_guides_h36); end
  def test_detailed_lever_guides_i36; assert_equal("172 GW", worksheet.detailed_lever_guides_i36); end
  def test_detailed_lever_guides_j36; assert_equal("289 GW", worksheet.detailed_lever_guides_j36); end
  def test_detailed_lever_guides_k36; assert_equal("404 GW", worksheet.detailed_lever_guides_k36); end
  def test_detailed_lever_guides_m36; assert_equal("Geothermal", worksheet.detailed_lever_guides_m36); end
  def test_detailed_lever_guides_n36; assert_equal("How much do we use geothermal power?", worksheet.detailed_lever_guides_n36); end
  def test_detailed_lever_guides_o36; assert_equal("total GW of geothermal capacity", worksheet.detailed_lever_guides_o36); end
  def test_detailed_lever_guides_p36; assert_equal("11 GW", worksheet.detailed_lever_guides_p36); end
  def test_detailed_lever_guides_q36; assert_equal("0 GW", worksheet.detailed_lever_guides_q36); end
  def test_detailed_lever_guides_r36; assert_equal("172 GW", worksheet.detailed_lever_guides_r36); end
  def test_detailed_lever_guides_s36; assert_equal("289 GW", worksheet.detailed_lever_guides_s36); end
  def test_detailed_lever_guides_t36; assert_equal("404 GW", worksheet.detailed_lever_guides_t36); end
  def test_detailed_lever_guides_b37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_b37); end
  def test_detailed_lever_guides_c37; assert_equal("storage.elec", worksheet.detailed_lever_guides_c37); end
  def test_detailed_lever_guides_d37; assert_equal("How much electricity storage will we have? This is important in a grid using intermittent renewable technologies (like solar and wind) to make sure that peak demand is met. In 2011, there were 120 GW of electricity storage plants.", worksheet.detailed_lever_guides_d37); end
  def test_detailed_lever_guides_e37; assert_equal("328 GW of electricity storage capacity by 2050.", worksheet.detailed_lever_guides_e37); end
  def test_detailed_lever_guides_h37; assert_equal("152 GW", worksheet.detailed_lever_guides_h37); end
  def test_detailed_lever_guides_i37; assert_equal("403 GW", worksheet.detailed_lever_guides_i37); end
  def test_detailed_lever_guides_j37; assert_equal("800 GW", worksheet.detailed_lever_guides_j37); end
  def test_detailed_lever_guides_k37; assert_equal("1,200 GW", worksheet.detailed_lever_guides_k37); end
  def test_detailed_lever_guides_m37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_m37); end
  def test_detailed_lever_guides_n37; assert_equal("How much electricity storage will we have?", worksheet.detailed_lever_guides_n37); end
  def test_detailed_lever_guides_o37; assert_equal("GW of electricity storage plants.", worksheet.detailed_lever_guides_o37); end
  def test_detailed_lever_guides_p37; assert_equal("120 GW", worksheet.detailed_lever_guides_p37); end
  def test_detailed_lever_guides_q37; assert_equal("152 GW", worksheet.detailed_lever_guides_q37); end
  def test_detailed_lever_guides_r37; assert_equal("403 GW", worksheet.detailed_lever_guides_r37); end
  def test_detailed_lever_guides_s37; assert_equal("800 GW", worksheet.detailed_lever_guides_s37); end
  def test_detailed_lever_guides_t37; assert_equal("1,200 GW", worksheet.detailed_lever_guides_t37); end
  def test_detailed_lever_guides_b38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_b38); end
  def test_detailed_lever_guides_d38; assert_equal("How much food will we eat? In 2011, global average food consumption was 2,180 kcal/person/day, but with extremes of over- and under-nourishment across the world.", worksheet.detailed_lever_guides_d38); end
  def test_detailed_lever_guides_h38; assert_equal("2,520 kcal/person/day (typical for Europe).", worksheet.detailed_lever_guides_h38); end
  def test_detailed_lever_guides_i38; assert_equal("2,330 kcal/person/day (recent trends continue).", worksheet.detailed_lever_guides_i38); end
  def test_detailed_lever_guides_j38; assert_equal("2,195 kcal/person/day (long term trends continue)", worksheet.detailed_lever_guides_j38); end
  def test_detailed_lever_guides_k38; assert_equal("2,100 kcal/person/day (the target for a healthy diet)", worksheet.detailed_lever_guides_k38); end
  def test_detailed_lever_guides_m38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_m38); end
  def test_detailed_lever_guides_n38; assert_equal("How much food will we eat?", worksheet.detailed_lever_guides_n38); end
  def test_detailed_lever_guides_o38; assert_equal("Global average food consumption (kcals/person/day)", worksheet.detailed_lever_guides_o38); end
  def test_detailed_lever_guides_p38; assert_equal("2,180", worksheet.detailed_lever_guides_p38); end
  def test_detailed_lever_guides_q38; assert_equal("2,520", worksheet.detailed_lever_guides_q38); end
  def test_detailed_lever_guides_r38; assert_equal("2,330", worksheet.detailed_lever_guides_r38); end
  def test_detailed_lever_guides_s38; assert_equal("2,195", worksheet.detailed_lever_guides_s38); end
  def test_detailed_lever_guides_t38; assert_equal("2,100", worksheet.detailed_lever_guides_t38); end
  def test_detailed_lever_guides_b39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_b39); end
  def test_detailed_lever_guides_d39; assert_equal("How much meat will we eat? In 2011, global average food consumption was 187 kcal of meat/person/day. This has generally increased in recent decades, particularly in the developing world. ", worksheet.detailed_lever_guides_d39); end
  def test_detailed_lever_guides_h39; assert_equal("281 kcal/person/day.", worksheet.detailed_lever_guides_h39); end
  def test_detailed_lever_guides_i39; assert_equal("220 kcal/person/day.", worksheet.detailed_lever_guides_i39); end
  def test_detailed_lever_guides_j39; assert_equal("152 kcal/person/day.", worksheet.detailed_lever_guides_j39); end
  def test_detailed_lever_guides_k39; assert_equal("14 kcal/person/day.", worksheet.detailed_lever_guides_k39); end
  def test_detailed_lever_guides_m39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_m39); end
  def test_detailed_lever_guides_n39; assert_equal("How much meat will we eat?", worksheet.detailed_lever_guides_n39); end
  def test_detailed_lever_guides_o39; assert_equal("Global average meat consumption (kcals meat/person/day)", worksheet.detailed_lever_guides_o39); end
  def test_detailed_lever_guides_p39; assert_equal("187", worksheet.detailed_lever_guides_p39); end
  def test_detailed_lever_guides_q39; assert_equal("281", worksheet.detailed_lever_guides_q39); end
  def test_detailed_lever_guides_r39; assert_equal("220", worksheet.detailed_lever_guides_r39); end
  def test_detailed_lever_guides_s39; assert_equal("152", worksheet.detailed_lever_guides_s39); end
  def test_detailed_lever_guides_t39; assert_equal("14", worksheet.detailed_lever_guides_t39); end
  def test_detailed_lever_guides_b40; assert_equal("Type of meat", worksheet.detailed_lever_guides_b40); end
  def test_detailed_lever_guides_d40; assert_equal("What type of meat do we eat? In 2011 22% of meat consumed was beef, lamb and goat. The rest was pork, chicken and other poultry.", worksheet.detailed_lever_guides_d40); end
  def test_detailed_lever_guides_h40; assert_equal("Increased consumption of meat from ruminant animals from 22% in 2011 to 28% in 2050, reflecting the UN FAO forecast.  ", worksheet.detailed_lever_guides_h40); end
  def test_detailed_lever_guides_i40; assert_equal("World mix of meat types stabilised by 2050, i.e., 25% meat from ruminants.", worksheet.detailed_lever_guides_i40); end
  def test_detailed_lever_guides_j40; assert_equal("Decrease by 2050 to 22% of meat from ruminants.", worksheet.detailed_lever_guides_j40); end
  def test_detailed_lever_guides_k40; assert_equal("Decrease by 2050 to 10% of meat from ruminants.", worksheet.detailed_lever_guides_k40); end
  def test_detailed_lever_guides_m40; assert_equal("Type of meat", worksheet.detailed_lever_guides_m40); end
  def test_detailed_lever_guides_n40; assert_equal("How much of the meat consumed is from rumaninants (cows, sheep and goats)", worksheet.detailed_lever_guides_n40); end
  def test_detailed_lever_guides_o40; assert_equal("% of kcals of meat from ruminants", worksheet.detailed_lever_guides_o40); end
  def test_detailed_lever_guides_p40; assert_equal("22%", worksheet.detailed_lever_guides_p40); end
  def test_detailed_lever_guides_q40; assert_equal("28%", worksheet.detailed_lever_guides_q40); end
  def test_detailed_lever_guides_r40; assert_equal("25%", worksheet.detailed_lever_guides_r40); end
  def test_detailed_lever_guides_s40; assert_equal("22%", worksheet.detailed_lever_guides_s40); end
  def test_detailed_lever_guides_t40; assert_equal("10%", worksheet.detailed_lever_guides_t40); end
  def test_detailed_lever_guides_b41; assert_equal("Crop yields", worksheet.detailed_lever_guides_b41); end
  def test_detailed_lever_guides_d41; assert_equal("Can we increase crop yields? Between 1987 and 2007 they increased by around 1.9% per year globally, which is slower than they were in the past. Current average yields are 0.10 W per square metre per year.", worksheet.detailed_lever_guides_d41); end
  def test_detailed_lever_guides_h41; assert_equal("No increase in crop yields against the positive trend, potentially due to extreme adverse climate change impacts on agriculture. This scenario is extremely unlikely without major climate impacts by 2050.", worksheet.detailed_lever_guides_h41); end
  def test_detailed_lever_guides_i41; assert_equal("Moderate crop yield growth (yields rise 30% by 2050).", worksheet.detailed_lever_guides_i41); end
  def test_detailed_lever_guides_j41; assert_equal("High crop yield growth (yields rise 60% by 2050).", worksheet.detailed_lever_guides_j41); end
  def test_detailed_lever_guides_k41; assert_equal("High crop yield growth (yields rise 100% by 2050).", worksheet.detailed_lever_guides_k41); end
  def test_detailed_lever_guides_m41; assert_equal("Crop yields", worksheet.detailed_lever_guides_m41); end
  def test_detailed_lever_guides_n41; assert_equal("Will crop yields increase?", worksheet.detailed_lever_guides_n41); end
  def test_detailed_lever_guides_o41; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_o41); end
  def test_detailed_lever_guides_p41; assert_equal("0%", worksheet.detailed_lever_guides_p41); end
  def test_detailed_lever_guides_q41; assert_equal("0%", worksheet.detailed_lever_guides_q41); end
  def test_detailed_lever_guides_r41; assert_equal("30%", worksheet.detailed_lever_guides_r41); end
  def test_detailed_lever_guides_s41; assert_equal("60%", worksheet.detailed_lever_guides_s41); end
  def test_detailed_lever_guides_t41; assert_equal("100%", worksheet.detailed_lever_guides_t41); end
  def test_detailed_lever_guides_b42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_b42); end
  def test_detailed_lever_guides_d42; assert_equal("Can we use smarter land-use techniques to increase productivity? For example, multi-cropping and integrated agro-livestock-forestry schemes.", worksheet.detailed_lever_guides_d42); end
  def test_detailed_lever_guides_h42; assert_equal("Mismanaged land (e.g. 10% more land needed for same yield).", worksheet.detailed_lever_guides_h42); end
  def test_detailed_lever_guides_i42; assert_equal("No change from current land use efficiency", worksheet.detailed_lever_guides_i42); end
  def test_detailed_lever_guides_j42; assert_equal("Improved efficiency (e.g. 10% less land needed for same yield)", worksheet.detailed_lever_guides_j42); end
  def test_detailed_lever_guides_k42; assert_equal("Extreme efficiency (e.g. 30% less land needed for same yield)", worksheet.detailed_lever_guides_k42); end
  def test_detailed_lever_guides_m42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_m42); end
  def test_detailed_lever_guides_n42; assert_equal("Can we use smarter land-use techniques to increase productivity?", worksheet.detailed_lever_guides_n42); end
  def test_detailed_lever_guides_o42; assert_equal("% more land which is needed to get the same yield", worksheet.detailed_lever_guides_o42); end
  def test_detailed_lever_guides_p42; assert_equal("0%", worksheet.detailed_lever_guides_p42); end
  def test_detailed_lever_guides_q42; assert_equal("10%", worksheet.detailed_lever_guides_q42); end
  def test_detailed_lever_guides_r42; assert_equal("0%", worksheet.detailed_lever_guides_r42); end
  def test_detailed_lever_guides_s42; assert_equal("-10%", worksheet.detailed_lever_guides_s42); end
  def test_detailed_lever_guides_t42; assert_equal("-30%", worksheet.detailed_lever_guides_t42); end
  def test_detailed_lever_guides_b43; assert_equal("Livestock (grains/residues fed)", worksheet.detailed_lever_guides_b43); end
  def test_detailed_lever_guides_d43; assert_equal("Should we move more livestock traditionally raised on pastureland (cattle, sheep and goats) into feedlots (confined systems that are more efficient at converting food to meat) and use more efficient breeds of animal? For example, in 2011, around 6% of cattle were kept in feedlots.", worksheet.detailed_lever_guides_d43); end
  def test_detailed_lever_guides_h43; assert_equal("No cattle in feedlots by 2050.", worksheet.detailed_lever_guides_h43); end
  def test_detailed_lever_guides_i43; assert_equal("6% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_i43); end
  def test_detailed_lever_guides_j43; assert_equal("15% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_j43); end
  def test_detailed_lever_guides_k43; assert_equal("30% of cattle in feedlots by 2050.", worksheet.detailed_lever_guides_k43); end
  def test_detailed_lever_guides_m43; assert_equal("Livestock (grains/residues fed)", worksheet.detailed_lever_guides_m43); end
  def test_detailed_lever_guides_n43; assert_equal("How intensively do we keep grain/residue fed cattle?", worksheet.detailed_lever_guides_n43); end
  def test_detailed_lever_guides_o43; assert_equal("% of cattle in feedlots", worksheet.detailed_lever_guides_o43); end
  def test_detailed_lever_guides_p43; assert_equal("6%", worksheet.detailed_lever_guides_p43); end
  def test_detailed_lever_guides_q43; assert_equal("0%", worksheet.detailed_lever_guides_q43); end
  def test_detailed_lever_guides_r43; assert_equal("6%", worksheet.detailed_lever_guides_r43); end
  def test_detailed_lever_guides_s43; assert_equal("15%", worksheet.detailed_lever_guides_s43); end
  def test_detailed_lever_guides_t43; assert_equal("30%", worksheet.detailed_lever_guides_t43); end
  def test_detailed_lever_guides_b44; assert_equal("Livestock (pasture fed)", worksheet.detailed_lever_guides_b44); end
  def test_detailed_lever_guides_d44; assert_equal("For animals raised in pastureland (cattle, sheep and goats), should we increase the number of animals per hectare, and their efficiency at converting food to meat? Currently cattle density is 0.634750041742287 animals per hectare, and sheep/goats is 3.06639694958513 animals/hectare.", worksheet.detailed_lever_guides_d44); end
  def test_detailed_lever_guides_h44; assert_equal("0.70 cows per hectare (10% increase)", worksheet.detailed_lever_guides_h44); end
  def test_detailed_lever_guides_i44; assert_equal("0.83 cows per hectare (30% increase)", worksheet.detailed_lever_guides_i44); end
  def test_detailed_lever_guides_j44; assert_equal("0.95 cows per hectare (50% increase)", worksheet.detailed_lever_guides_j44); end
  def test_detailed_lever_guides_k44; assert_equal("1.14 cows per hectare (80% increase)", worksheet.detailed_lever_guides_k44); end
  def test_detailed_lever_guides_m44; assert_equal("Livestock (pasture fed)", worksheet.detailed_lever_guides_m44); end
  def test_detailed_lever_guides_n44; assert_equal("How densely are pasture fed cattle kept?", worksheet.detailed_lever_guides_n44); end
  def test_detailed_lever_guides_o44; assert_equal("Cows kept per hectare", worksheet.detailed_lever_guides_o44); end
  def test_detailed_lever_guides_p44; assert_equal("0.63", worksheet.detailed_lever_guides_p44); end
  def test_detailed_lever_guides_q44; assert_equal("0.70", worksheet.detailed_lever_guides_q44); end
  def test_detailed_lever_guides_r44; assert_equal("0.83", worksheet.detailed_lever_guides_r44); end
  def test_detailed_lever_guides_s44; assert_equal("0.95", worksheet.detailed_lever_guides_s44); end
  def test_detailed_lever_guides_t44; assert_equal("1.14", worksheet.detailed_lever_guides_t44); end
  def test_detailed_lever_guides_b45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_b45); end
  def test_detailed_lever_guides_d45; assert_equal("Could we get more usable energy out of each hectare of biocrops, for example by using more efficient crop types and introducing better conversion technology? Current average yield is 6.7 dry tonnes per hectare per year.", worksheet.detailed_lever_guides_d45); end
  def test_detailed_lever_guides_h45; assert_equal("Low yield increase of energy production per unit of land area, without significant changes in the energy crop mix and/or conversion technologies. Total increase: 20% by 2050.", worksheet.detailed_lever_guides_h45); end
  def test_detailed_lever_guides_i45; assert_equal("Moderate increase in energy production per unit of land area, and changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient conversion technologies. Total increase: 50% by 2050.", worksheet.detailed_lever_guides_i45); end
  def test_detailed_lever_guides_j45; assert_equal("High increase in energy production per unit of land area, with substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies. Total increase: 120% by 2050.", worksheet.detailed_lever_guides_j45); end
  def test_detailed_lever_guides_k45; assert_equal("Extreme increase in energy production per unit of land area relying on highly energy-efficient feedstocks and very efficient conversion technologies. Total increase: 200% by 2050.", worksheet.detailed_lever_guides_k45); end
  def test_detailed_lever_guides_m45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_m45); end
  def test_detailed_lever_guides_n45; assert_equal("Increase in bioenergy crop yields between 2011 and 2050", worksheet.detailed_lever_guides_n45); end
  def test_detailed_lever_guides_o45; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_o45); end
  def test_detailed_lever_guides_p45; assert_equal("6.7", worksheet.detailed_lever_guides_p45); end
  def test_detailed_lever_guides_q45; assert_equal("8.1", worksheet.detailed_lever_guides_q45); end
  def test_detailed_lever_guides_r45; assert_equal("10.1", worksheet.detailed_lever_guides_r45); end
  def test_detailed_lever_guides_s45; assert_equal("14.8", worksheet.detailed_lever_guides_s45); end
  def test_detailed_lever_guides_t45; assert_equal("20.2", worksheet.detailed_lever_guides_t45); end
  def test_detailed_lever_guides_b46; assert_equal("Solid or liquid", worksheet.detailed_lever_guides_b46); end
  def test_detailed_lever_guides_d46; assert_equal("Should we use solid or liquid biofuels? Currently 60% of modern biofuels are solid (e.g. wood chips) and 40% are liquid (bioethanol and biodiesel).", worksheet.detailed_lever_guides_d46); end
  def test_detailed_lever_guides_e46; assert_equal("50% liquid", worksheet.detailed_lever_guides_e46); end
  def test_detailed_lever_guides_h46; assert_equal("Reduced use of liquid biofuels. 20% liquid.", worksheet.detailed_lever_guides_h46); end
  def test_detailed_lever_guides_i46; assert_equal("40% liquid.", worksheet.detailed_lever_guides_i46); end
  def test_detailed_lever_guides_j46; assert_equal("60% liquid", worksheet.detailed_lever_guides_j46); end
  def test_detailed_lever_guides_k46; assert_equal("80% liquid", worksheet.detailed_lever_guides_k46); end
  def test_detailed_lever_guides_m46; assert_equal("Solid or liquid", worksheet.detailed_lever_guides_m46); end
  def test_detailed_lever_guides_n46; assert_equal("How much do we use liquid biofuels?", worksheet.detailed_lever_guides_n46); end
  def test_detailed_lever_guides_o46; assert_equal("% of biofuels that are liquid", worksheet.detailed_lever_guides_o46); end
  def test_detailed_lever_guides_p46; assert_equal("40% liquid", worksheet.detailed_lever_guides_p46); end
  def test_detailed_lever_guides_q46; assert_equal("20% liquid", worksheet.detailed_lever_guides_q46); end
  def test_detailed_lever_guides_r46; assert_equal("40% liquid", worksheet.detailed_lever_guides_r46); end
  def test_detailed_lever_guides_s46; assert_equal("60% liquid", worksheet.detailed_lever_guides_s46); end
  def test_detailed_lever_guides_t46; assert_equal("80% liquid", worksheet.detailed_lever_guides_t46); end
  def test_detailed_lever_guides_b47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_b47); end
  def test_detailed_lever_guides_d47; assert_equal("After accounting for food production, do we use surplus land for growing biocrops, or for the regeneration of forests and grassland?", worksheet.detailed_lever_guides_d47); end
  def test_detailed_lever_guides_e47; assert_equal("54% of surplus land is used for biocrops.", worksheet.detailed_lever_guides_e47); end
  def test_detailed_lever_guides_h47; assert_equal("0% of surplus land is used for biocrops, with 80% for forests (including natural regeneration and planted forests).", worksheet.detailed_lever_guides_h47); end
  def test_detailed_lever_guides_i47; assert_equal("40% of surplus land is used for biocrops, with 48% for forest/grassland.", worksheet.detailed_lever_guides_i47); end
  def test_detailed_lever_guides_j47; assert_equal("60% of surplus land is used for biocrops, with 32% for forest/grassland.", worksheet.detailed_lever_guides_j47); end
  def test_detailed_lever_guides_k47; assert_equal("80% of surplus land is used for biocrops, with 16% for forest/grassland.", worksheet.detailed_lever_guides_k47); end
  def test_detailed_lever_guides_m47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_m47); end
  def test_detailed_lever_guides_n47; assert_equal("Percentage of surplus land that is used for biocrops", worksheet.detailed_lever_guides_n47); end
  def test_detailed_lever_guides_o47; assert_equal("% of 2050's surplus land (if any) used for biocrops", worksheet.detailed_lever_guides_o47); end
  def test_detailed_lever_guides_p47; assert_equal("Historic data", worksheet.detailed_lever_guides_p47); end
  def test_detailed_lever_guides_q47; assert_equal("0%", worksheet.detailed_lever_guides_q47); end
  def test_detailed_lever_guides_r47; assert_equal("40%", worksheet.detailed_lever_guides_r47); end
  def test_detailed_lever_guides_s47; assert_equal("60%", worksheet.detailed_lever_guides_s47); end
  def test_detailed_lever_guides_t47; assert_equal("80%", worksheet.detailed_lever_guides_t47); end
  def test_detailed_lever_guides_b48; assert_equal("Biochar", worksheet.detailed_lever_guides_b48); end
  def test_detailed_lever_guides_d48; assert_equal("Do we use biochar technology to remove CO<sub>2</sub> from the atmosphere? In 2011, biochar was not used.", worksheet.detailed_lever_guides_d48); end
  def test_detailed_lever_guides_e48; assert_equal("Biochar technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e48); end
  def test_detailed_lever_guides_h48; assert_equal("Biochar technology is still not used in 2050.", worksheet.detailed_lever_guides_h48); end
  def test_detailed_lever_guides_i48; assert_equal("Biochar technology removes 0.3 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i48); end
  def test_detailed_lever_guides_j48; assert_equal("Biochar technology removes 0.8 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j48); end
  def test_detailed_lever_guides_k48; assert_equal("Biochar technology removes 3.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k48); end
  def test_detailed_lever_guides_m48; assert_equal("Biochar", worksheet.detailed_lever_guides_m48); end
  def test_detailed_lever_guides_n48; assert_equal("How much CO2 do we capture through biochar technology?", worksheet.detailed_lever_guides_n48); end
  def test_detailed_lever_guides_o48; assert_equal("Removal rate through biochar(GtCO2/year)", worksheet.detailed_lever_guides_o48); end
  def test_detailed_lever_guides_p48; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p48); end
  def test_detailed_lever_guides_q48; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q48); end
  def test_detailed_lever_guides_r48; assert_equal("0.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r48); end
  def test_detailed_lever_guides_s48; assert_equal("0.8 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s48); end
  def test_detailed_lever_guides_t48; assert_equal("3.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t48); end
  def test_detailed_lever_guides_b49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b49); end
  def test_detailed_lever_guides_d49; assert_equal("Do we use direct air capture  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, direct air capture was not used.", worksheet.detailed_lever_guides_d49); end
  def test_detailed_lever_guides_e49; assert_equal("Direct air capture technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e49); end
  def test_detailed_lever_guides_h49; assert_equal("Direct air capture technology is still not used in 2050 .", worksheet.detailed_lever_guides_h49); end
  def test_detailed_lever_guides_i49; assert_equal("Direct air capture technology removes 1.0 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i49); end
  def test_detailed_lever_guides_j49; assert_equal("Direct air capture technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j49); end
  def test_detailed_lever_guides_k49; assert_equal("Direct air capture technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k49); end
  def test_detailed_lever_guides_m49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_m49); end
  def test_detailed_lever_guides_n49; assert_equal("How much CO2 do we capture through direct air capture technology?", worksheet.detailed_lever_guides_n49); end
  def test_detailed_lever_guides_o49; assert_equal("Removal rate through air-capture (GtCO2/year)", worksheet.detailed_lever_guides_o49); end
  def test_detailed_lever_guides_p49; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p49); end
  def test_detailed_lever_guides_q49; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q49); end
  def test_detailed_lever_guides_r49; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r49); end
  def test_detailed_lever_guides_s49; assert_equal("2.5 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s49); end
  def test_detailed_lever_guides_t49; assert_equal("10.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t49); end
  def test_detailed_lever_guides_b50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b50); end
  def test_detailed_lever_guides_d50; assert_equal("Do we use ocean fertilisation  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, ocean fertilisation was not used.", worksheet.detailed_lever_guides_d50); end
  def test_detailed_lever_guides_e50; assert_equal("Ocean fertilisation technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e50); end
  def test_detailed_lever_guides_h50; assert_equal("Ocean fertilisation technology is still not used in 2050.", worksheet.detailed_lever_guides_h50); end
  def test_detailed_lever_guides_i50; assert_equal("Ocean fertilisation technology removes 0.1 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i50); end
  def test_detailed_lever_guides_j50; assert_equal("Ocean fertilisation technology removes 0.3 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j50); end
  def test_detailed_lever_guides_k50; assert_equal("Ocean fertilisation technology removes 1.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k50); end
  def test_detailed_lever_guides_m50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_m50); end
  def test_detailed_lever_guides_n50; assert_equal("How much CO2 do we capture through ocean fertilisation technology?", worksheet.detailed_lever_guides_n50); end
  def test_detailed_lever_guides_o50; assert_equal("Removal rate through ocean fertilisation (GtCO2/year)", worksheet.detailed_lever_guides_o50); end
  def test_detailed_lever_guides_p50; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p50); end
  def test_detailed_lever_guides_q50; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q50); end
  def test_detailed_lever_guides_r50; assert_equal("0.1 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r50); end
  def test_detailed_lever_guides_s50; assert_equal("0.3 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s50); end
  def test_detailed_lever_guides_t50; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t50); end
  def test_detailed_lever_guides_b51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b51); end
  def test_detailed_lever_guides_d51; assert_equal("Do we use enhanced weathering (oceanic)  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, it was not used.", worksheet.detailed_lever_guides_d51); end
  def test_detailed_lever_guides_e51; assert_equal("Enhanced weathering (oceanic) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e51); end
  def test_detailed_lever_guides_h51; assert_equal("Enhanced weather (oceanic) technology is still not used in 2050.", worksheet.detailed_lever_guides_h51); end
  def test_detailed_lever_guides_i51; assert_equal("Enhanced weather (oceanic) technology removes 1.0 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i51); end
  def test_detailed_lever_guides_j51; assert_equal("Enhanced weather (oceanic) technology removes 2.5 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j51); end
  def test_detailed_lever_guides_k51; assert_equal("Enhanced weather (oceanic) technology removes 10.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k51); end
  def test_detailed_lever_guides_m51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_m51); end
  def test_detailed_lever_guides_n51; assert_equal("How much CO2 do we capture through enhanced weather (oceanic) technology?", worksheet.detailed_lever_guides_n51); end
  def test_detailed_lever_guides_o51; assert_equal("Removal rate through enhanced weathering (oceanic)", worksheet.detailed_lever_guides_o51); end
  def test_detailed_lever_guides_p51; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p51); end
  def test_detailed_lever_guides_q51; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q51); end
  def test_detailed_lever_guides_r51; assert_equal("1.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r51); end
  def test_detailed_lever_guides_s51; assert_equal("2.5 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s51); end
  def test_detailed_lever_guides_t51; assert_equal("10.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t51); end
  def test_detailed_lever_guides_b52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b52); end
  def test_detailed_lever_guides_d52; assert_equal("Do we use enhanced weathering (terrestrial)  technology to remove CO<sub>2</sub> from the atmosphere? In 2011, it was not used.", worksheet.detailed_lever_guides_d52); end
  def test_detailed_lever_guides_e52; assert_equal("Enhanced weathering (terrestial) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_e52); end
  def test_detailed_lever_guides_h52; assert_equal("Enhanced weather (terrestrial) technology is still not used in 2050.", worksheet.detailed_lever_guides_h52); end
  def test_detailed_lever_guides_i52; assert_equal("Enhanced weather (terrestial) technology removes 0.4 GtCO<sub>2</sub>/year by 2050.", worksheet.detailed_lever_guides_i52); end
  def test_detailed_lever_guides_j52; assert_equal("Enhanced weather (terrestial) technology removes 0.9 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_j52); end
  def test_detailed_lever_guides_k52; assert_equal("Enhanced weather (terrestial) technology removes 3.7 GtCO<sub>2</sub>/year by 2050", worksheet.detailed_lever_guides_k52); end
  def test_detailed_lever_guides_m52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_m52); end
  def test_detailed_lever_guides_n52; assert_equal("How much CO2 do we capture through enhanced weather (terrestrial) technology?", worksheet.detailed_lever_guides_n52); end
  def test_detailed_lever_guides_o52; assert_equal("Removal rate through enhanced weathering (terrestial)", worksheet.detailed_lever_guides_o52); end
  def test_detailed_lever_guides_p52; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_p52); end
  def test_detailed_lever_guides_q52; assert_equal("0.0 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_q52); end
  def test_detailed_lever_guides_r52; assert_equal("0.4 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_r52); end
  def test_detailed_lever_guides_s52; assert_equal("0.9 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_s52); end
  def test_detailed_lever_guides_t52; assert_equal("3.7 GtCO<sub>2</sub>/year", worksheet.detailed_lever_guides_t52); end
  def test_detailed_lever_guides_b53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_b53); end
  def test_detailed_lever_guides_d53; assert_equal("How much is wasted on farms, and how much food is wasted? For example, in 2011, 24% of crop energy content was wasted after leaving the farm (e.g. through damage in transit, improper storage, or consumers throwing it away).", worksheet.detailed_lever_guides_d53); end
  def test_detailed_lever_guides_e53; assert_equal("24% of crop energy is wasted after leaving the farm by 2050", worksheet.detailed_lever_guides_e53); end
  def test_detailed_lever_guides_h53; assert_equal("24% of crop energy is wasted after leaving the farm.", worksheet.detailed_lever_guides_h53); end
  def test_detailed_lever_guides_i53; assert_equal("20% of crop energy is wasted after leaving the farm.", worksheet.detailed_lever_guides_i53); end
  def test_detailed_lever_guides_j53; assert_equal("16% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_j53); end
  def test_detailed_lever_guides_k53; assert_equal("10% of crop energy is wasted after leaving the farm", worksheet.detailed_lever_guides_k53); end
  def test_detailed_lever_guides_m53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_m53); end
  def test_detailed_lever_guides_n53; assert_equal("How much food is wasted after leaving the farm?", worksheet.detailed_lever_guides_n53); end
  def test_detailed_lever_guides_o53; assert_equal("% of crop energy content that is wasted after leaving the farm", worksheet.detailed_lever_guides_o53); end
  def test_detailed_lever_guides_p53; assert_equal("24%", worksheet.detailed_lever_guides_p53); end
  def test_detailed_lever_guides_q53; assert_equal("24%", worksheet.detailed_lever_guides_q53); end
  def test_detailed_lever_guides_r53; assert_equal("20%", worksheet.detailed_lever_guides_r53); end
  def test_detailed_lever_guides_s53; assert_equal("16%", worksheet.detailed_lever_guides_s53); end
  def test_detailed_lever_guides_t53; assert_equal("10%", worksheet.detailed_lever_guides_t53); end
  def test_detailed_lever_guides_b54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_b54); end
  def test_detailed_lever_guides_h54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_h54); end
  def test_detailed_lever_guides_i54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_i54); end
  def test_detailed_lever_guides_j54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_j54); end
  def test_detailed_lever_guides_k54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_k54); end
  def test_detailed_lever_guides_m54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_m54); end
  def test_detailed_lever_guides_n54; assert_equal("TO ADD", worksheet.detailed_lever_guides_n54); end
  def test_detailed_lever_guides_o54; assert_equal("Emissions change every year between 2050 and 2100 ", worksheet.detailed_lever_guides_o54); end
  def test_detailed_lever_guides_p54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_p54||0), 0.002); end
  def test_detailed_lever_guides_q54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_q54||0), 0.002); end
  def test_detailed_lever_guides_r54; assert_in_delta(0.3333333333333333, worksheet.detailed_lever_guides_r54, 0.002); end
  def test_detailed_lever_guides_s54; assert_in_delta(0.6666666666666666, worksheet.detailed_lever_guides_s54, 0.002); end
  def test_detailed_lever_guides_t54; assert_in_epsilon(1.16, worksheet.detailed_lever_guides_t54, 0.002); end
  def test_detailed_lever_guides_b55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_b55); end
  def test_detailed_lever_guides_c55; assert_equal("atm.fraction", worksheet.detailed_lever_guides_c55); end
  def test_detailed_lever_guides_d55; assert_equal("What proportion of emitted CO<sub>2</sub> remains in the atmosphere? In 2011, this was assumed to be 44% (plus or minus 6%) , and it is expected to rise if emissions continue to increase.", worksheet.detailed_lever_guides_d55); end
  def test_detailed_lever_guides_h55; assert_equal("Decreases to 30% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_h55); end
  def test_detailed_lever_guides_i55; assert_equal("Remains at 44% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_i55); end
  def test_detailed_lever_guides_j55; assert_equal("Increases over time to 60% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_j55); end
  def test_detailed_lever_guides_k55; assert_equal("Increases over time to 74% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_k55); end
  def test_detailed_lever_guides_l55; assert_equal("Could add an interaction with total carbon emissions: for low trajectories the lower end of this range is expected to be more likely, and for high carbon trajectories the upper end.", worksheet.detailed_lever_guides_l55); end
  def test_detailed_lever_guides_m55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_m55); end
  def test_detailed_lever_guides_n55; assert_equal("TO ADD", worksheet.detailed_lever_guides_n55); end
  def test_detailed_lever_guides_o55; assert_equal("By 2100, % of historically -emitted CO2 that remains in atmosphere", worksheet.detailed_lever_guides_o55); end
  def test_detailed_lever_guides_p55; assert_in_delta(0.44, worksheet.detailed_lever_guides_p55, 0.002); end
  def test_detailed_lever_guides_q55; assert_in_delta(0.3, worksheet.detailed_lever_guides_q55, 0.002); end
  def test_detailed_lever_guides_r55; assert_in_delta(0.44, worksheet.detailed_lever_guides_r55, 0.002); end
  def test_detailed_lever_guides_s55; assert_in_delta(0.6, worksheet.detailed_lever_guides_s55, 0.002); end
  def test_detailed_lever_guides_t55; assert_in_delta(0.74, worksheet.detailed_lever_guides_t55, 0.002); end
  def test_detailed_lever_guides_b56; assert_equal("Confidence in climate models", worksheet.detailed_lever_guides_b56); end
  def test_detailed_lever_guides_c56; assert_equal("model.unc", worksheet.detailed_lever_guides_c56); end
  def test_detailed_lever_guides_d56; assert_equal("How confident are you about the ability of computer models to simulate the climate?  Do you want to use the raw data from climate models, or do you want to show an uncertainty range to reflect phenomena that are not included in the model? If you do not have confidence in climate models, please visit the basic physics page below to see some simple calculations based on your pathway.", worksheet.detailed_lever_guides_d56); end
  def test_detailed_lever_guides_h56; assert_equal("Over-confident in model ability: show only the raw output from climate models.", worksheet.detailed_lever_guides_h56); end
  def test_detailed_lever_guides_i56; assert_equal("IPCC approach: generate an uncertainty range to take into account phenomena that were not included in the model. ", worksheet.detailed_lever_guides_i56); end
  def test_detailed_lever_guides_j56; assert_equal("n/a", worksheet.detailed_lever_guides_j56); end
  def test_detailed_lever_guides_k56; assert_equal("n/a", worksheet.detailed_lever_guides_k56); end
  def test_detailed_lever_guides_b57; assert_equal("Region factor", worksheet.detailed_lever_guides_b57); end
  def test_detailed_lever_guides_h57; assert_equal("US costs", worksheet.detailed_lever_guides_h57); end
  def test_detailed_lever_guides_b58; assert_equal("Coal", worksheet.detailed_lever_guides_b58); end
  def test_detailed_lever_guides_b59; assert_equal("Oil", worksheet.detailed_lever_guides_b59); end
  def test_detailed_lever_guides_b60; assert_equal("Gas", worksheet.detailed_lever_guides_b60); end
  def test_detailed_lever_guides_b61; assert_equal("Solid bioenergy", worksheet.detailed_lever_guides_b61); end
  def test_detailed_lever_guides_b62; assert_equal("Liquid bioenergy", worksheet.detailed_lever_guides_b62); end
  def test_detailed_lever_guides_b63; assert_equal("Gaseous bioenergy", worksheet.detailed_lever_guides_b63); end
  def test_detailed_lever_guides_b64; assert_equal("Hydrogen", worksheet.detailed_lever_guides_b64); end
  def test_g_60_data__c1250; assert_equal("Cows and other bovines ", worksheet.g_60_data__c1250); end
  def test_g_60_data__d1250; assert_in_epsilon(20.81788931788931, worksheet.g_60_data__d1250, 0.002); end
  def test_g_60_data__e1250; assert_in_epsilon(26.332046332046332, worksheet.g_60_data__e1250, 0.002); end
  def test_g_60_data__f1250; assert_in_epsilon(32.35099999999999, worksheet.g_60_data__f1250, 0.002); end
  def test_g_60_data__g1250; assert_in_epsilon(40.92, worksheet.g_60_data__g1250, 0.002); end
  def test_g_60_data__c1251; assert_equal("Chickens and other poultry", worksheet.g_60_data__c1251); end
  def test_g_60_data__d1251; assert_in_epsilon(30.261410788381742, worksheet.g_60_data__d1251, 0.002); end
  def test_g_60_data__e1251; assert_in_epsilon(45.33886583679114, worksheet.g_60_data__e1251, 0.002); end
  def test_g_60_data__f1251; assert_in_epsilon(43.757999999999996, worksheet.g_60_data__f1251, 0.002); end
  def test_g_60_data__g1251; assert_in_epsilon(65.56, worksheet.g_60_data__g1251, 0.002); end
  def test_g_60_data__c1252; assert_equal("Pigs", worksheet.g_60_data__c1252); end
  def test_g_60_data__d1252; assert_in_epsilon(35.17821782178217, worksheet.g_60_data__d1252, 0.002); end
  def test_g_60_data__e1252; assert_in_epsilon(34.15134370579915, worksheet.g_60_data__e1252, 0.002); end
  def test_g_60_data__f1252; assert_in_epsilon(99.48399999999998, worksheet.g_60_data__f1252, 0.002); end
  def test_g_60_data__g1252; assert_in_epsilon(96.58000000000001, worksheet.g_60_data__g1252, 0.002); end
  def test_g_60_data__c1253; assert_equal("Sheep and goats", worksheet.g_60_data__c1253); end
  def test_g_60_data__d1253; assert_in_epsilon(4.243971631205673, worksheet.g_60_data__d1253, 0.002); end
  def test_g_60_data__e1253; assert_in_epsilon(6.241134751773049, worksheet.g_60_data__e1253, 0.002); end
  def test_g_60_data__f1253; assert_in_epsilon(8.975999999999999, worksheet.g_60_data__f1253, 0.002); end
  def test_g_60_data__g1253; assert_in_epsilon(13.200000000000001, worksheet.g_60_data__g1253, 0.002); end
  def test_g_60_data__c1254; assert_equal("Other animals", worksheet.g_60_data__c1254); end
  def test_g_60_data__d1254; assert_in_delta(0.8596181046676056, worksheet.g_60_data__d1254, 0.002); end
  def test_g_60_data__e1254; assert_in_epsilon(1.3224893917963236, worksheet.g_60_data__e1254, 0.002); end
  def test_g_60_data__f1254; assert_in_epsilon(2.430999999999989, worksheet.g_60_data__f1254, 0.002); end
  def test_g_60_data__g1254; assert_in_epsilon(3.7400000000000033, worksheet.g_60_data__g1254, 0.002); end
  def test_g_60_data__c1255; assert_equal("Animal fats", worksheet.g_60_data__c1255); end
  def test_g_60_data__d1255; assert_in_epsilon(8.886255924170614, worksheet.g_60_data__d1255, 0.002); end
  def test_g_60_data__e1255; assert_in_epsilon(10.454418734318372, worksheet.g_60_data__e1255, 0.002); end
  def test_g_60_data__f1255; assert_in_epsilon(60.0, worksheet.g_60_data__f1255, 0.002); end
  def test_g_60_data__g1255; assert_in_epsilon(70.58823529411765, worksheet.g_60_data__g1255, 0.002); end
  def test_g_60_data__c1256; assert_equal("Offals", worksheet.g_60_data__c1256); end
  def test_g_60_data__d1256; assert_in_epsilon(6.024096385542169, worksheet.g_60_data__d1256, 0.002); end
  def test_g_60_data__e1256; assert_in_epsilon(7.087172218284905, worksheet.g_60_data__e1256, 0.002); end
  def test_g_60_data__f1256; assert_in_epsilon(7.0, worksheet.g_60_data__f1256, 0.002); end
  def test_g_60_data__g1256; assert_in_epsilon(8.23529411764706, worksheet.g_60_data__g1256, 0.002); end
  def test_g_60_data__c1257; assert_equal("Fish, seafood and other aquatic products", worksheet.g_60_data__c1257); end
  def test_g_60_data__d1257; assert_in_epsilon(41.04109589041096, worksheet.g_60_data__d1257, 0.002); end
  def test_g_60_data__e1257; assert_in_epsilon(64.92344883158742, worksheet.g_60_data__e1257, 0.002); end
  def test_g_60_data__f1257; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__f1257, 0.002); end
  def test_g_60_data__g1257; assert_in_epsilon(42.65470588235294, worksheet.g_60_data__g1257, 0.002); end
  def test_g_60_data__c1258; assert_equal("Eggs", worksheet.g_60_data__c1258); end
  def test_g_60_data__d1258; assert_in_epsilon(18.77715877437326, worksheet.g_60_data__d1258, 0.002); end
  def test_g_60_data__e1258; assert_in_epsilon(26.874897591348518, worksheet.g_60_data__e1258, 0.002); end
  def test_g_60_data__f1258; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__f1258, 0.002); end
  def test_g_60_data__g1258; assert_in_epsilon(38.59235294117647, worksheet.g_60_data__g1258, 0.002); end
  def test_g_60_data__c1259; assert_equal("Milk products", worksheet.g_60_data__c1259); end
  def test_g_60_data__d1259; assert_in_epsilon(178.20640569395013, worksheet.g_60_data__d1259, 0.002); end
  def test_g_60_data__e1259; assert_in_epsilon(238.53673853883188, worksheet.g_60_data__e1259, 0.002); end
  def test_g_60_data__f1259; assert_in_epsilon(100.15199999999999, worksheet.g_60_data__f1259, 0.002); end
  def test_g_60_data__g1259; assert_in_epsilon(134.05764705882353, worksheet.g_60_data__g1259, 0.002); end
  def test_g_60_data__c1260; assert_equal("Grains and cereals", worksheet.g_60_data__c1260); end
  def test_g_60_data__d1260; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__d1260, 0.002); end
  def test_g_60_data__e1260; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__e1260, 0.002); end
  def test_g_60_data__f1260; assert_in_epsilon(991.9, worksheet.g_60_data__f1260, 0.002); end
  def test_g_60_data__g1260; assert_in_epsilon(991.9, worksheet.g_60_data__g1260, 0.002); end
  def test_g_60_data__c1261; assert_equal("Sugar", worksheet.g_60_data__c1261); end
  def test_g_60_data__d1261; assert_in_epsilon(50.04304160688665, worksheet.g_60_data__d1261, 0.002); end
  def test_g_60_data__e1261; assert_in_epsilon(52.86281544585559, worksheet.g_60_data__e1261, 0.002); end
  def test_g_60_data__f1261; assert_in_epsilon(174.4, worksheet.g_60_data__f1261, 0.002); end
  def test_g_60_data__g1261; assert_in_epsilon(184.22691182880675, worksheet.g_60_data__g1261, 0.002); end
  def test_g_60_data__c1262; assert_equal("Roots and tubers", worksheet.g_60_data__c1262); end
  def test_g_60_data__d1262; assert_in_epsilon(131.87654320987653, worksheet.g_60_data__d1262, 0.002); end
  def test_g_60_data__e1262; assert_in_epsilon(139.30738703104214, worksheet.g_60_data__e1262, 0.002); end
  def test_g_60_data__f1262; assert_in_epsilon(106.82000000000001, worksheet.g_60_data__f1262, 0.002); end
  def test_g_60_data__g1262; assert_in_epsilon(112.83898349514416, worksheet.g_60_data__g1262, 0.002); end
  def test_g_60_data__c1263; assert_equal("Pulses", worksheet.g_60_data__c1263); end
  def test_g_60_data__d1263; assert_in_epsilon(14.584060500290866, worksheet.g_60_data__d1263, 0.002); end
  def test_g_60_data__e1263; assert_in_epsilon(15.405828141588696, worksheet.g_60_data__e1263, 0.002); end
  def test_g_60_data__f1263; assert_in_epsilon(50.13999999999999, worksheet.g_60_data__f1263, 0.002); end
  def test_g_60_data__g1263; assert_in_epsilon(52.96523715078194, worksheet.g_60_data__g1263, 0.002); end
  def test_g_60_data__c1264; assert_equal("Vegetable oil", worksheet.g_60_data__c1264); end
  def test_g_60_data__d1264; assert_in_epsilon(24.44113945772795, worksheet.g_60_data__d1264, 0.002); end
  def test_g_60_data__e1264; assert_in_epsilon(25.818323646068908, worksheet.g_60_data__e1264, 0.002); end
  def test_g_60_data__f1264; assert_in_epsilon(213.64000000000001, worksheet.g_60_data__f1264, 0.002); end
  def test_g_60_data__g1264; assert_in_epsilon(225.67796699028833, worksheet.g_60_data__g1264, 0.002); end
  def test_g_60_data__c1265; assert_equal("Fruit and Veg", worksheet.g_60_data__c1265); end
  def test_g_60_data__d1265; assert_in_epsilon(437.23163841807906, worksheet.g_60_data__d1265, 0.002); end
  def test_g_60_data__e1265; assert_in_epsilon(461.8683170849322, worksheet.g_60_data__e1265, 0.002); end
  def test_g_60_data__f1265; assert_in_epsilon(154.78, worksheet.g_60_data__f1265, 0.002); end
  def test_g_60_data__g1265; assert_in_epsilon(163.501384248066, worksheet.g_60_data__g1265, 0.002); end
  def test_g_60_data__c1266; assert_equal("Other", worksheet.g_60_data__c1266); end
  def test_g_60_data__d1266; assert_in_epsilon(24.019157852724003, worksheet.g_60_data__d1266, 0.002); end
  def test_g_60_data__e1266; assert_in_epsilon(25.372564655596197, worksheet.g_60_data__e1266, 0.002); end
  def test_g_60_data__f1266; assert_in_epsilon(80.24000000000001, worksheet.g_60_data__f1266, 0.002); end
  def test_g_60_data__g1266; assert_in_epsilon(84.76128099279505, worksheet.g_60_data__g1266, 0.002); end
  def test_g_60_data__c1377; assert_equal("Meat type", worksheet.g_60_data__c1377); end
  def test_g_60_data__d1377; assert_equal("2011.0", worksheet.g_60_data__d1377); end
  def test_g_60_data__e1377; assert_equal("2050.0", worksheet.g_60_data__e1377); end
  def test_g_60_data__c1378; assert_equal("Beef", worksheet.g_60_data__c1378); end
  def test_g_60_data__d1378; assert_in_delta(0.06, worksheet.g_60_data__d1378, 0.002); end
  def test_g_60_data__e1378; assert_in_delta(0.06, worksheet.g_60_data__e1378, 0.002); end
  def test_g_60_data__c1379; assert_equal("Sheep and Goats", worksheet.g_60_data__c1379); end
  def test_g_60_data__d1379; assert_in_delta(0.01, worksheet.g_60_data__d1379, 0.002); end
  def test_g_60_data__e1379; assert_in_delta(0.01, worksheet.g_60_data__e1379, 0.002); end
  def test_g_60_data__c1380; assert_equal("Pigs", worksheet.g_60_data__c1380); end
  def test_g_60_data__d1380; assert_in_delta(1.0, worksheet.g_60_data__d1380, 0.002); end
  def test_g_60_data__e1380; assert_in_delta(1.0, worksheet.g_60_data__e1380, 0.002); end
  def test_g_60_data__c1381; assert_equal("Poutlry", worksheet.g_60_data__c1381); end
  def test_g_60_data__d1381; assert_in_delta(1.0, worksheet.g_60_data__d1381, 0.002); end
  def test_g_60_data__e1381; assert_in_delta(1.0, worksheet.g_60_data__e1381, 0.002); end
  def test_g_60_data__c1271; assert_equal("Column1", worksheet.g_60_data__c1271); end
  def test_g_60_data__d1271; assert_equal("2011", worksheet.g_60_data__d1271); end
  def test_g_60_data__e1271; assert_equal("2050", worksheet.g_60_data__e1271); end
  def test_g_60_data__f1271; assert_equal("2011a", worksheet.g_60_data__f1271); end
  def test_g_60_data__g1271; assert_equal("2050a", worksheet.g_60_data__g1271); end
  def test_g_60_data__c1272; assert_equal("Beef", worksheet.g_60_data__c1272); end
  def test_g_60_data__d1272; assert_in_epsilon(20.81788931788931, worksheet.g_60_data__d1272, 0.002); end
  def test_g_60_data__e1272; assert_in_epsilon(26.332046332046332, worksheet.g_60_data__e1272, 0.002); end
  def test_g_60_data__f1272; assert_in_epsilon(32.35099999999999, worksheet.g_60_data__f1272, 0.002); end
  def test_g_60_data__g1272; assert_in_epsilon(40.92, worksheet.g_60_data__g1272, 0.002); end
  def test_g_60_data__c1273; assert_equal("Poultry", worksheet.g_60_data__c1273); end
  def test_g_60_data__d1273; assert_in_epsilon(30.261410788381742, worksheet.g_60_data__d1273, 0.002); end
  def test_g_60_data__e1273; assert_in_epsilon(45.33886583679114, worksheet.g_60_data__e1273, 0.002); end
  def test_g_60_data__f1273; assert_in_epsilon(43.757999999999996, worksheet.g_60_data__f1273, 0.002); end
  def test_g_60_data__g1273; assert_in_epsilon(65.56, worksheet.g_60_data__g1273, 0.002); end
  def test_g_60_data__c1274; assert_equal("Pork", worksheet.g_60_data__c1274); end
  def test_g_60_data__d1274; assert_in_epsilon(35.17821782178217, worksheet.g_60_data__d1274, 0.002); end
  def test_g_60_data__e1274; assert_in_epsilon(34.15134370579915, worksheet.g_60_data__e1274, 0.002); end
  def test_g_60_data__f1274; assert_in_epsilon(99.48399999999998, worksheet.g_60_data__f1274, 0.002); end
  def test_g_60_data__g1274; assert_in_epsilon(96.58000000000001, worksheet.g_60_data__g1274, 0.002); end
  def test_g_60_data__c1275; assert_equal("Sheep and goat meat", worksheet.g_60_data__c1275); end
  def test_g_60_data__d1275; assert_in_epsilon(4.243971631205673, worksheet.g_60_data__d1275, 0.002); end
  def test_g_60_data__e1275; assert_in_epsilon(6.241134751773049, worksheet.g_60_data__e1275, 0.002); end
  def test_g_60_data__f1275; assert_in_epsilon(8.975999999999999, worksheet.g_60_data__f1275, 0.002); end
  def test_g_60_data__g1275; assert_in_epsilon(13.200000000000001, worksheet.g_60_data__g1275, 0.002); end
  def test_g_60_data__c1276; assert_equal("Fish", worksheet.g_60_data__c1276); end
  def test_g_60_data__d1276; assert_in_epsilon(41.04109589041096, worksheet.g_60_data__d1276, 0.002); end
  def test_g_60_data__e1276; assert_in_epsilon(64.92344883158742, worksheet.g_60_data__e1276, 0.002); end
  def test_g_60_data__f1276; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__f1276, 0.002); end
  def test_g_60_data__g1276; assert_in_epsilon(42.65470588235294, worksheet.g_60_data__g1276, 0.002); end
  def test_g_60_data__c1277; assert_equal("Eggs", worksheet.g_60_data__c1277); end
  def test_g_60_data__d1277; assert_in_epsilon(18.77715877437326, worksheet.g_60_data__d1277, 0.002); end
  def test_g_60_data__e1277; assert_in_epsilon(26.874897591348518, worksheet.g_60_data__e1277, 0.002); end
  def test_g_60_data__f1277; assert_in_epsilon(26.964000000000002, worksheet.g_60_data__f1277, 0.002); end
  def test_g_60_data__g1277; assert_in_epsilon(38.59235294117647, worksheet.g_60_data__g1277, 0.002); end
  def test_g_60_data__c1278; assert_equal("Milk products", worksheet.g_60_data__c1278); end
  def test_g_60_data__d1278; assert_in_epsilon(178.20640569395013, worksheet.g_60_data__d1278, 0.002); end
  def test_g_60_data__e1278; assert_in_epsilon(238.53673853883188, worksheet.g_60_data__e1278, 0.002); end
  def test_g_60_data__f1278; assert_in_epsilon(100.15199999999999, worksheet.g_60_data__f1278, 0.002); end
  def test_g_60_data__g1278; assert_in_epsilon(134.05764705882353, worksheet.g_60_data__g1278, 0.002); end
  def test_g_60_data__c1279; assert_equal("Other animal products (e.g. aninal fats, offals etc.)", worksheet.g_60_data__c1279); end
  def test_g_60_data__d1279; assert_in_epsilon(15.769970414380388, worksheet.g_60_data__d1279, 0.002); end
  def test_g_60_data__e1279; assert_in_epsilon(18.8640803443996, worksheet.g_60_data__e1279, 0.002); end
  def test_g_60_data__f1279; assert_in_epsilon(69.43099999999998, worksheet.g_60_data__f1279, 0.002); end
  def test_g_60_data__g1279; assert_in_epsilon(82.56352941176472, worksheet.g_60_data__g1279, 0.002); end
  def test_g_60_data__c1280; assert_equal("Cereals and grains", worksheet.g_60_data__c1280); end
  def test_g_60_data__d1280; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__d1280, 0.002); end
  def test_g_60_data__e1280; assert_in_epsilon(308.4266169154228, worksheet.g_60_data__e1280, 0.002); end
  def test_g_60_data__f1280; assert_in_epsilon(991.9, worksheet.g_60_data__f1280, 0.002); end
  def test_g_60_data__g1280; assert_in_epsilon(991.9, worksheet.g_60_data__g1280, 0.002); end
  def test_g_60_data__c1281; assert_equal("Sugars", worksheet.g_60_data__c1281); end
  def test_g_60_data__d1281; assert_in_epsilon(50.04304160688665, worksheet.g_60_data__d1281, 0.002); end
  def test_g_60_data__e1281; assert_in_epsilon(52.86281544585559, worksheet.g_60_data__e1281, 0.002); end
  def test_g_60_data__f1281; assert_in_epsilon(174.4, worksheet.g_60_data__f1281, 0.002); end
  def test_g_60_data__g1281; assert_in_epsilon(184.22691182880675, worksheet.g_60_data__g1281, 0.002); end
  def test_g_60_data__c1282; assert_equal("Fruit, vegetables (including roots and tubers)", worksheet.g_60_data__c1282); end
  def test_g_60_data__d1282; assert_in_epsilon(569.1081816279556, worksheet.g_60_data__d1282, 0.002); end
  def test_g_60_data__e1282; assert_in_epsilon(601.1757041159743, worksheet.g_60_data__e1282, 0.002); end
  def test_g_60_data__f1282; assert_in_epsilon(261.6, worksheet.g_60_data__f1282, 0.002); end
  def test_g_60_data__g1282; assert_in_epsilon(276.34036774321015, worksheet.g_60_data__g1282, 0.002); end
  def test_g_60_data__c1283; assert_equal("Pulses ", worksheet.g_60_data__c1283); end
  def test_g_60_data__d1283; assert_in_epsilon(14.584060500290866, worksheet.g_60_data__d1283, 0.002); end
  def test_g_60_data__e1283; assert_in_epsilon(15.405828141588696, worksheet.g_60_data__e1283, 0.002); end
  def test_g_60_data__f1283; assert_in_epsilon(50.13999999999999, worksheet.g_60_data__f1283, 0.002); end
  def test_g_60_data__g1283; assert_in_epsilon(52.96523715078194, worksheet.g_60_data__g1283, 0.002); end
  def test_g_60_data__c1284; assert_equal("Vegetable oil", worksheet.g_60_data__c1284); end
  def test_g_60_data__d1284; assert_in_epsilon(24.44113945772795, worksheet.g_60_data__d1284, 0.002); end
  def test_g_60_data__e1284; assert_in_epsilon(25.818323646068908, worksheet.g_60_data__e1284, 0.002); end
  def test_g_60_data__f1284; assert_in_epsilon(213.64000000000001, worksheet.g_60_data__f1284, 0.002); end
  def test_g_60_data__g1284; assert_in_epsilon(225.67796699028833, worksheet.g_60_data__g1284, 0.002); end
  def test_g_60_data__c1285; assert_equal("Other ", worksheet.g_60_data__c1285); end
  def test_g_60_data__d1285; assert_in_epsilon(24.019157852724003, worksheet.g_60_data__d1285, 0.002); end
  def test_g_60_data__e1285; assert_in_epsilon(25.372564655596197, worksheet.g_60_data__e1285, 0.002); end
  def test_g_60_data__f1285; assert_in_epsilon(80.24000000000001, worksheet.g_60_data__f1285, 0.002); end
  def test_g_60_data__g1285; assert_in_epsilon(84.76128099279505, worksheet.g_60_data__g1285, 0.002); end
  def test_g_60_data__c1286; assert_equal("Total", worksheet.g_60_data__c1286); end
  def test_g_60_data__d1286; assert_in_epsilon(1334.9183182933816, worksheet.g_60_data__d1286, 0.002); end
  def test_g_60_data__e1286; assert_in_epsilon(1490.3244088530837, worksheet.g_60_data__e1286, 0.002); end
  def test_g_60_data__f1286; assert_in_epsilon(2180.0, worksheet.g_60_data__f1286, 0.002); end
  def test_g_60_data__g1286; assert_in_epsilon(2330.0, worksheet.g_60_data__g1286, 0.002); end
  def test_g_60_data__c1360; assert_equal("Column1", worksheet.g_60_data__c1360); end
  def test_g_60_data__d1360; assert_equal("Column2", worksheet.g_60_data__d1360); end
  def test_g_60_data__e1360; assert_equal("2011", worksheet.g_60_data__e1360); end
  def test_g_60_data__f1360; assert_equal("2050", worksheet.g_60_data__f1360); end
  def test_g_60_data__g1360; assert_equal("Unit", worksheet.g_60_data__g1360); end
  def test_g_60_data__h1360; assert_equal("2011a", worksheet.g_60_data__h1360); end
  def test_g_60_data__i1360; assert_equal("2050a", worksheet.g_60_data__i1360); end
  def test_g_60_data__j1360; assert_equal("Unita", worksheet.g_60_data__j1360); end
  def test_g_60_data__c1361; assert_equal("Beef (pasture fed)", worksheet.g_60_data__c1361); end
  def test_g_60_data__e1361; assert_in_epsilon(16.315615072943743, worksheet.g_60_data__e1361, 0.002); end
  def test_g_60_data__f1361; assert_in_epsilon(26.575154529564713, worksheet.g_60_data__f1361, 0.002); end
  def test_g_60_data__g1361; assert_equal("kg", worksheet.g_60_data__g1361); end
  def test_g_60_data__h1361; assert_in_epsilon(25354.465823354578, worksheet.g_60_data__h1361, 0.002); end
  def test_g_60_data__i1361; assert_in_epsilon(41297.790138943565, worksheet.g_60_data__i1361, 0.002); end
  def test_g_60_data__j1361; assert_equal("kcal", worksheet.g_60_data__j1361); end
  def test_g_60_data__c1362; assert_equal("Beef (fed on grains and residues)", worksheet.g_60_data__c1362); end
  def test_g_60_data__e1362; assert_in_epsilon(245.06634205280244, worksheet.g_60_data__e1362, 0.002); end
  def test_g_60_data__f1362; assert_in_epsilon(368.12653747071505, worksheet.g_60_data__f1362, 0.002); end
  def test_g_60_data__g1362; assert_equal("kg", worksheet.g_60_data__g1362); end
  def test_g_60_data__h1362; assert_in_epsilon(380833.09555005503, worksheet.g_60_data__h1362, 0.002); end
  def test_g_60_data__i1362; assert_in_epsilon(572068.6392294912, worksheet.g_60_data__i1362, 0.002); end
  def test_g_60_data__j1362; assert_equal("kcal", worksheet.g_60_data__j1362); end
  def test_g_60_data__c1363; assert_equal("Sheep and goat meat (pasture fed)", worksheet.g_60_data__c1363); end
  def test_g_60_data__e1363; assert_in_epsilon(14.012207500824232, worksheet.g_60_data__e1363, 0.002); end
  def test_g_60_data__f1363; assert_in_epsilon(22.82332464757908, worksheet.g_60_data__f1363, 0.002); end
  def test_g_60_data__g1363; assert_equal("kg", worksheet.g_60_data__g1363); end
  def test_g_60_data__h1363; assert_in_epsilon(29635.818864243254, worksheet.g_60_data__h1363, 0.002); end
  def test_g_60_data__i1363; assert_in_epsilon(48271.33162962976, worksheet.g_60_data__i1363, 0.002); end
  def test_g_60_data__j1363; assert_equal("kcal", worksheet.g_60_data__j1363); end
  def test_g_60_data__c1364; assert_equal("Sheep and goat meat (fed on grains and residues)", worksheet.g_60_data__c1364); end
  def test_g_60_data__e1364; assert_in_epsilon(180.06292933808749, worksheet.g_60_data__e1364, 0.002); end
  def test_g_60_data__f1364; assert_in_epsilon(270.4816261132346, worksheet.g_60_data__f1364, 0.002); end
  def test_g_60_data__g1364; assert_equal("kg", worksheet.g_60_data__g1364); end
  def test_g_60_data__h1364; assert_in_epsilon(380833.09555005503, worksheet.g_60_data__h1364, 0.002); end
  def test_g_60_data__i1364; assert_in_epsilon(572068.6392294912, worksheet.g_60_data__i1364, 0.002); end
  def test_g_60_data__j1364; assert_equal("kcal", worksheet.g_60_data__j1364); end
  def test_g_60_data__c1365; assert_equal("Poultry ", worksheet.g_60_data__c1365); end
  def test_g_60_data__e1365; assert_in_epsilon(1002.7742384918081, worksheet.g_60_data__e1365, 0.002); end
  def test_g_60_data__f1365; assert_in_epsilon(1481.6241260423647, worksheet.g_60_data__f1365, 0.002); end
  def test_g_60_data__g1365; assert_equal("kg", worksheet.g_60_data__g1365); end
  def test_g_60_data__h1365; assert_in_epsilon(1450011.5488591546, worksheet.g_60_data__h1365, 0.002); end
  def test_g_60_data__i1365; assert_in_epsilon(2142428.4862572593, worksheet.g_60_data__i1365, 0.002); end
  def test_g_60_data__j1365; assert_equal("kcal", worksheet.g_60_data__j1365); end
  def test_g_60_data__c1366; assert_equal("Pork", worksheet.g_60_data__c1366); end
  def test_g_60_data__e1366; assert_in_epsilon(602.5796512843829, worksheet.g_60_data__e1366, 0.002); end
  def test_g_60_data__f1366; assert_in_epsilon(901.825253612492, worksheet.g_60_data__f1366, 0.002); end
  def test_g_60_data__g1366; assert_equal("kg", worksheet.g_60_data__g1366); end
  def test_g_60_data__h1366; assert_in_epsilon(1704095.2538322348, worksheet.g_60_data__h1366, 0.002); end
  def test_g_60_data__i1366; assert_in_epsilon(2550361.817216127, worksheet.g_60_data__i1366, 0.002); end
  def test_g_60_data__j1366; assert_equal("kcal", worksheet.g_60_data__j1366); end
  def test_g_60_data__c1367; assert_equal("Eggs", worksheet.g_60_data__c1367); end
  def test_g_60_data__e1367; assert_in_epsilon(537.9854712306786, worksheet.g_60_data__e1367, 0.002); end
  def test_g_60_data__f1367; assert_in_epsilon(808.1351648486645, worksheet.g_60_data__f1367, 0.002); end
  def test_g_60_data__g1367; assert_equal("kg", worksheet.g_60_data__g1367); end
  def test_g_60_data__h1367; assert_in_epsilon(772547.1366872544, worksheet.g_60_data__h1367, 0.002); end
  def test_g_60_data__i1367; assert_in_epsilon(1160482.0967226822, worksheet.g_60_data__i1367, 0.002); end
  def test_g_60_data__j1367; assert_equal("kcal", worksheet.g_60_data__j1367); end
  def test_g_60_data__c1368; assert_equal("Milk products", worksheet.g_60_data__c1368); end
  def test_g_60_data__e1368; assert_in_epsilon(1057.1167776834268, worksheet.g_60_data__e1368, 0.002); end
  def test_g_60_data__f1368; assert_in_epsilon(1628.6651650661674, worksheet.g_60_data__f1368, 0.002); end
  def test_g_60_data__g1368; assert_equal("kg", worksheet.g_60_data__g1368); end
  def test_g_60_data__h1368; assert_in_epsilon(594099.6290580858, worksheet.g_60_data__h1368, 0.002); end
  def test_g_60_data__i1368; assert_in_epsilon(915309.8227671861, worksheet.g_60_data__i1368, 0.002); end
  def test_g_60_data__j1368; assert_equal("kcal", worksheet.g_60_data__j1368); end
  def test_g_60_data__c1369; assert_equal("Cereals and grains", worksheet.g_60_data__c1369); end
  def test_g_60_data__e1369; assert_in_epsilon(1681.539165674994, worksheet.g_60_data__e1369, 0.002); end
  def test_g_60_data__f1369; assert_in_epsilon(2296.2954197927334, worksheet.g_60_data__f1369, 0.002); end
  def test_g_60_data__g1369; assert_equal("kg", worksheet.g_60_data__g1369); end
  def test_g_60_data__h1369; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1369, 0.002); end
  def test_g_60_data__i1369; assert_in_epsilon(42623905.75023571, worksheet.g_60_data__i1369, 0.002); end
  def test_g_60_data__j1369; assert_equal("kcal", worksheet.g_60_data__j1369); end
  def test_g_60_data__c1370; assert_equal("Sugars", worksheet.g_60_data__c1370); end
  def test_g_60_data__e1370; assert_in_epsilon(1551.7446074062498, worksheet.g_60_data__e1370, 0.002); end
  def test_g_60_data__f1370; assert_in_epsilon(2119.0490875332653, worksheet.g_60_data__f1370, 0.002); end
  def test_g_60_data__g1370; assert_equal("kg", worksheet.g_60_data__g1370); end
  def test_g_60_data__h1370; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1370, 0.002); end
  def test_g_60_data__i1370; assert_in_epsilon(42623905.75023571, worksheet.g_60_data__i1370, 0.002); end
  def test_g_60_data__j1370; assert_equal("kcal", worksheet.g_60_data__j1370); end
  def test_g_60_data__c1371; assert_equal("Fruit and vegetables", worksheet.g_60_data__c1371); end
  def test_g_60_data__e1371; assert_in_epsilon(15276.355810199946, worksheet.g_60_data__e1371, 0.002); end
  def test_g_60_data__f1371; assert_in_epsilon(20861.260084896698, worksheet.g_60_data__f1371, 0.002); end
  def test_g_60_data__g1371; assert_equal("kg", worksheet.g_60_data__g1371); end
  def test_g_60_data__h1371; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1371, 0.002); end
  def test_g_60_data__i1371; assert_in_epsilon(42623905.75023571, worksheet.g_60_data__i1371, 0.002); end
  def test_g_60_data__j1371; assert_equal("kcal", worksheet.g_60_data__j1371); end
  def test_g_60_data__c1372; assert_equal("Pulses ", worksheet.g_60_data__c1372); end
  def test_g_60_data__e1372; assert_in_epsilon(1572.9581026209369, worksheet.g_60_data__e1372, 0.002); end
  def test_g_60_data__f1372; assert_in_epsilon(2148.018054116763, worksheet.g_60_data__f1372, 0.002); end
  def test_g_60_data__g1372; assert_equal("kg", worksheet.g_60_data__g1372); end
  def test_g_60_data__h1372; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1372, 0.002); end
  def test_g_60_data__i1372; assert_in_epsilon(42623905.75023571, worksheet.g_60_data__i1372, 0.002); end
  def test_g_60_data__j1372; assert_equal("kcal", worksheet.g_60_data__j1372); end
  def test_g_60_data__c1373; assert_equal("Vegetable oil", worksheet.g_60_data__c1373); end
  def test_g_60_data__e1373; assert_in_epsilon(618.6740598113237, worksheet.g_60_data__e1373, 0.002); end
  def test_g_60_data__f1373; assert_in_epsilon(844.8559741509474, worksheet.g_60_data__f1373, 0.002); end
  def test_g_60_data__g1373; assert_equal("kg", worksheet.g_60_data__g1373); end
  def test_g_60_data__h1373; assert_in_epsilon(16542611.308385689, worksheet.g_60_data__h1373, 0.002); end
  def test_g_60_data__i1373; assert_in_epsilon(42623905.75023571, worksheet.g_60_data__i1373, 0.002); end
  def test_g_60_data__j1373; assert_equal("kcal", worksheet.g_60_data__j1373); end
  def test_g_60_data__c1374; assert_equal("Bioenergy", worksheet.g_60_data__c1374); end
  def test_g_60_data__e1374; assert_in_epsilon(19226.190476190477, worksheet.g_60_data__e1374, 0.002); end
  def test_g_60_data__f1374; assert_in_epsilon(49538.450460829496, worksheet.g_60_data__f1374, 0.002); end
  def test_g_60_data__g1374; assert_equal("kwh", worksheet.g_60_data__g1374); end
  def test_user_inputs_h6; assert_equal("Consumer reluctance", worksheet.user_inputs_h6); end
  def test_user_inputs_i6; assert_equal("Distributed effort", worksheet.user_inputs_i6); end
  def test_user_inputs_j6; assert_equal("Continued deforestation", worksheet.user_inputs_j6); end
  def test_user_inputs_k6; assert_equal("Consumer activism", worksheet.user_inputs_k6); end
  def test_user_inputs_l6; assert_equal("IEA \"6DS\" (approx)", worksheet.user_inputs_l6); end
  def test_user_inputs_m6; assert_equal("IEA \"4DS\" (approx)", worksheet.user_inputs_m6); end
  def test_user_inputs_n6; assert_equal("IEA \"2DS\" (approx)", worksheet.user_inputs_n6); end
  def test_user_inputs_o6; assert_equal("UCL TIAM 4DS (approx)", worksheet.user_inputs_o6); end
  def test_user_inputs_p6; assert_equal("UCL TIAM 4DS (approx)", worksheet.user_inputs_p6); end
  def test_user_inputs_q6; assert_equal("UCL TIAM 2DS (approx)", worksheet.user_inputs_q6); end
  def test_user_inputs_r6; assert_equal("Tom Bain example", worksheet.user_inputs_r6); end
  def test_user_inputs_h7; assert_in_epsilon(2.0, worksheet.user_inputs_h7, 0.002); end
  def test_user_inputs_i7; assert_in_epsilon(2.0, worksheet.user_inputs_i7, 0.002); end
  def test_user_inputs_j7; assert_in_epsilon(2.0, worksheet.user_inputs_j7, 0.002); end
  def test_user_inputs_k7; assert_in_epsilon(2.0, worksheet.user_inputs_k7, 0.002); end
  def test_user_inputs_l7; assert_in_epsilon(2.0, worksheet.user_inputs_l7, 0.002); end
  def test_user_inputs_m7; assert_in_epsilon(2.0, worksheet.user_inputs_m7, 0.002); end
  def test_user_inputs_n7; assert_in_epsilon(2.0, worksheet.user_inputs_n7, 0.002); end
  def test_user_inputs_o7; assert_in_epsilon(2.1, worksheet.user_inputs_o7, 0.002); end
  def test_user_inputs_p7; assert_in_epsilon(2.1, worksheet.user_inputs_p7, 0.002); end
  def test_user_inputs_q7; assert_in_epsilon(2.1, worksheet.user_inputs_q7, 0.002); end
  def test_user_inputs_r7; assert_in_epsilon(2.0, worksheet.user_inputs_r7, 0.002); end
  def test_user_inputs_h8; assert_in_epsilon(2.0, worksheet.user_inputs_h8, 0.002); end
  def test_user_inputs_i8; assert_in_epsilon(2.0, worksheet.user_inputs_i8, 0.002); end
  def test_user_inputs_j8; assert_in_epsilon(2.0, worksheet.user_inputs_j8, 0.002); end
  def test_user_inputs_k8; assert_in_epsilon(2.0, worksheet.user_inputs_k8, 0.002); end
  def test_user_inputs_l8; assert_in_epsilon(2.0, worksheet.user_inputs_l8, 0.002); end
  def test_user_inputs_m8; assert_in_epsilon(2.0, worksheet.user_inputs_m8, 0.002); end
  def test_user_inputs_n8; assert_in_epsilon(2.0, worksheet.user_inputs_n8, 0.002); end
  def test_user_inputs_o8; assert_in_epsilon(2.0, worksheet.user_inputs_o8, 0.002); end
  def test_user_inputs_p8; assert_in_epsilon(2.0, worksheet.user_inputs_p8, 0.002); end
  def test_user_inputs_q8; assert_in_epsilon(2.0, worksheet.user_inputs_q8, 0.002); end
  def test_user_inputs_r8; assert_in_epsilon(2.0, worksheet.user_inputs_r8, 0.002); end
  def test_user_inputs_h9; assert_in_epsilon(2.3, worksheet.user_inputs_h9, 0.002); end
  def test_user_inputs_i9; assert_in_epsilon(2.3, worksheet.user_inputs_i9, 0.002); end
  def test_user_inputs_j9; assert_in_epsilon(2.3, worksheet.user_inputs_j9, 0.002); end
  def test_user_inputs_k9; assert_in_epsilon(2.3, worksheet.user_inputs_k9, 0.002); end
  def test_user_inputs_l9; assert_in_epsilon(2.3, worksheet.user_inputs_l9, 0.002); end
  def test_user_inputs_m9; assert_in_epsilon(2.3, worksheet.user_inputs_m9, 0.002); end
  def test_user_inputs_n9; assert_in_epsilon(2.5, worksheet.user_inputs_n9, 0.002); end
  def test_user_inputs_o9; assert_in_epsilon(3.0, worksheet.user_inputs_o9, 0.002); end
  def test_user_inputs_p9; assert_in_epsilon(3.0, worksheet.user_inputs_p9, 0.002); end
  def test_user_inputs_q9; assert_in_epsilon(3.2, worksheet.user_inputs_q9, 0.002); end
  def test_user_inputs_r9; assert_in_delta(1.0, worksheet.user_inputs_r9, 0.002); end
  def test_user_inputs_h10; assert_in_epsilon(1.9, worksheet.user_inputs_h10, 0.002); end
  def test_user_inputs_i10; assert_in_epsilon(1.9, worksheet.user_inputs_i10, 0.002); end
  def test_user_inputs_j10; assert_in_epsilon(1.9, worksheet.user_inputs_j10, 0.002); end
  def test_user_inputs_k10; assert_in_epsilon(1.9, worksheet.user_inputs_k10, 0.002); end
  def test_user_inputs_l10; assert_in_epsilon(1.8, worksheet.user_inputs_l10, 0.002); end
  def test_user_inputs_m10; assert_in_epsilon(1.9, worksheet.user_inputs_m10, 0.002); end
  def test_user_inputs_n10; assert_in_epsilon(1.9, worksheet.user_inputs_n10, 0.002); end
  def test_user_inputs_o10; assert_in_epsilon(3.3, worksheet.user_inputs_o10, 0.002); end
  def test_user_inputs_p10; assert_in_epsilon(3.3, worksheet.user_inputs_p10, 0.002); end
  def test_user_inputs_q10; assert_in_epsilon(3.5, worksheet.user_inputs_q10, 0.002); end
  def test_user_inputs_r10; assert_in_epsilon(1.5, worksheet.user_inputs_r10, 0.002); end
  def test_user_inputs_h11; assert_in_epsilon(2.2, worksheet.user_inputs_h11, 0.002); end
  def test_user_inputs_i11; assert_in_epsilon(2.2, worksheet.user_inputs_i11, 0.002); end
  def test_user_inputs_j11; assert_in_epsilon(3.0, worksheet.user_inputs_j11, 0.002); end
  def test_user_inputs_k11; assert_in_epsilon(3.0, worksheet.user_inputs_k11, 0.002); end
  def test_user_inputs_l11; assert_in_epsilon(2.2, worksheet.user_inputs_l11, 0.002); end
  def test_user_inputs_m11; assert_in_epsilon(2.2, worksheet.user_inputs_m11, 0.002); end
  def test_user_inputs_n11; assert_in_epsilon(3.2, worksheet.user_inputs_n11, 0.002); end
  def test_user_inputs_o11; assert_in_delta(1.0, worksheet.user_inputs_o11, 0.002); end
  def test_user_inputs_p11; assert_in_delta(1.0, worksheet.user_inputs_p11, 0.002); end
  def test_user_inputs_q11; assert_in_epsilon(1.2, worksheet.user_inputs_q11, 0.002); end
  def test_user_inputs_r11; assert_in_epsilon(2.5, worksheet.user_inputs_r11, 0.002); end
  def test_user_inputs_h12; assert_in_epsilon(1.4, worksheet.user_inputs_h12, 0.002); end
  def test_user_inputs_i12; assert_in_epsilon(1.4, worksheet.user_inputs_i12, 0.002); end
  def test_user_inputs_j12; assert_in_epsilon(2.0, worksheet.user_inputs_j12, 0.002); end
  def test_user_inputs_k12; assert_in_epsilon(1.4, worksheet.user_inputs_k12, 0.002); end
  def test_user_inputs_l12; assert_in_epsilon(1.4, worksheet.user_inputs_l12, 0.002); end
  def test_user_inputs_m12; assert_in_epsilon(1.4, worksheet.user_inputs_m12, 0.002); end
  def test_user_inputs_n12; assert_in_epsilon(1.7, worksheet.user_inputs_n12, 0.002); end
  def test_user_inputs_o12; assert_in_delta(1.0, worksheet.user_inputs_o12, 0.002); end
  def test_user_inputs_p12; assert_in_delta(1.0, worksheet.user_inputs_p12, 0.002); end
  def test_user_inputs_q12; assert_in_epsilon(1.2, worksheet.user_inputs_q12, 0.002); end
  def test_user_inputs_r12; assert_in_delta(1.0, worksheet.user_inputs_r12, 0.002); end
  def test_user_inputs_h13; assert_in_epsilon(2.4, worksheet.user_inputs_h13, 0.002); end
  def test_user_inputs_i13; assert_in_epsilon(2.4, worksheet.user_inputs_i13, 0.002); end
  def test_user_inputs_j13; assert_in_epsilon(2.0, worksheet.user_inputs_j13, 0.002); end
  def test_user_inputs_k13; assert_in_epsilon(2.4, worksheet.user_inputs_k13, 0.002); end
  def test_user_inputs_l13; assert_in_epsilon(2.4, worksheet.user_inputs_l13, 0.002); end
  def test_user_inputs_m13; assert_in_epsilon(2.4, worksheet.user_inputs_m13, 0.002); end
  def test_user_inputs_n13; assert_in_epsilon(2.6, worksheet.user_inputs_n13, 0.002); end
  def test_user_inputs_o13; assert_in_delta(1.0, worksheet.user_inputs_o13, 0.002); end
  def test_user_inputs_p13; assert_in_delta(1.0, worksheet.user_inputs_p13, 0.002); end
  def test_user_inputs_q13; assert_in_epsilon(1.2, worksheet.user_inputs_q13, 0.002); end
  def test_user_inputs_r13; assert_in_epsilon(3.0, worksheet.user_inputs_r13, 0.002); end
  def test_user_inputs_h14; assert_in_epsilon(3.0, worksheet.user_inputs_h14, 0.002); end
  def test_user_inputs_i14; assert_in_epsilon(2.7, worksheet.user_inputs_i14, 0.002); end
  def test_user_inputs_j14; assert_in_epsilon(3.0, worksheet.user_inputs_j14, 0.002); end
  def test_user_inputs_k14; assert_in_epsilon(3.0, worksheet.user_inputs_k14, 0.002); end
  def test_user_inputs_l14; assert_in_epsilon(1.6, worksheet.user_inputs_l14, 0.002); end
  def test_user_inputs_m14; assert_in_epsilon(1.8, worksheet.user_inputs_m14, 0.002); end
  def test_user_inputs_n14; assert_in_epsilon(3.0, worksheet.user_inputs_n14, 0.002); end
  def test_user_inputs_o14; assert_in_epsilon(2.6, worksheet.user_inputs_o14, 0.002); end
  def test_user_inputs_p14; assert_in_epsilon(2.6, worksheet.user_inputs_p14, 0.002); end
  def test_user_inputs_q14; assert_in_epsilon(3.8, worksheet.user_inputs_q14, 0.002); end
  def test_user_inputs_r14; assert_in_epsilon(3.0, worksheet.user_inputs_r14, 0.002); end
  def test_user_inputs_h15; assert_in_epsilon(1.1, worksheet.user_inputs_h15, 0.002); end
  def test_user_inputs_i15; assert_in_epsilon(2.7, worksheet.user_inputs_i15, 0.002); end
  def test_user_inputs_j15; assert_in_epsilon(3.0, worksheet.user_inputs_j15, 0.002); end
  def test_user_inputs_k15; assert_in_epsilon(3.0, worksheet.user_inputs_k15, 0.002); end
  def test_user_inputs_l15; assert_in_delta(1.0, worksheet.user_inputs_l15, 0.002); end
  def test_user_inputs_m15; assert_in_epsilon(1.1, worksheet.user_inputs_m15, 0.002); end
  def test_user_inputs_n15; assert_in_epsilon(2.0, worksheet.user_inputs_n15, 0.002); end
  def test_user_inputs_o15; assert_in_epsilon(2.5, worksheet.user_inputs_o15, 0.002); end
  def test_user_inputs_p15; assert_in_epsilon(2.5, worksheet.user_inputs_p15, 0.002); end
  def test_user_inputs_q15; assert_in_epsilon(3.7, worksheet.user_inputs_q15, 0.002); end
  def test_user_inputs_r15; assert_in_epsilon(3.0, worksheet.user_inputs_r15, 0.002); end
  def test_user_inputs_h16; assert_in_epsilon(2.2, worksheet.user_inputs_h16, 0.002); end
  def test_user_inputs_i16; assert_in_epsilon(2.2, worksheet.user_inputs_i16, 0.002); end
  def test_user_inputs_j16; assert_in_epsilon(2.2, worksheet.user_inputs_j16, 0.002); end
  def test_user_inputs_k16; assert_in_epsilon(2.2, worksheet.user_inputs_k16, 0.002); end
  def test_user_inputs_l16; assert_in_epsilon(2.1, worksheet.user_inputs_l16, 0.002); end
  def test_user_inputs_m16; assert_in_epsilon(2.2, worksheet.user_inputs_m16, 0.002); end
  def test_user_inputs_n16; assert_in_epsilon(2.2, worksheet.user_inputs_n16, 0.002); end
  def test_user_inputs_o16; assert_in_epsilon(1.8, worksheet.user_inputs_o16, 0.002); end
  def test_user_inputs_p16; assert_in_epsilon(1.8, worksheet.user_inputs_p16, 0.002); end
  def test_user_inputs_q16; assert_in_epsilon(2.5, worksheet.user_inputs_q16, 0.002); end
  def test_user_inputs_r16; assert_in_delta(1.0, worksheet.user_inputs_r16, 0.002); end
  def test_user_inputs_h17; assert_in_epsilon(1.6, worksheet.user_inputs_h17, 0.002); end
  def test_user_inputs_i17; assert_in_epsilon(1.6, worksheet.user_inputs_i17, 0.002); end
  def test_user_inputs_j17; assert_in_epsilon(1.6, worksheet.user_inputs_j17, 0.002); end
  def test_user_inputs_k17; assert_in_epsilon(1.6, worksheet.user_inputs_k17, 0.002); end
  def test_user_inputs_l17; assert_in_epsilon(1.4, worksheet.user_inputs_l17, 0.002); end
  def test_user_inputs_m17; assert_in_epsilon(1.6, worksheet.user_inputs_m17, 0.002); end
  def test_user_inputs_n17; assert_in_epsilon(1.6, worksheet.user_inputs_n17, 0.002); end
  def test_user_inputs_o17; assert_in_epsilon(2.0, worksheet.user_inputs_o17, 0.002); end
  def test_user_inputs_p17; assert_in_epsilon(2.0, worksheet.user_inputs_p17, 0.002); end
  def test_user_inputs_q17; assert_in_epsilon(2.5, worksheet.user_inputs_q17, 0.002); end
  def test_user_inputs_r17; assert_in_delta(1.0, worksheet.user_inputs_r17, 0.002); end
  def test_user_inputs_h18; assert_in_epsilon(2.1, worksheet.user_inputs_h18, 0.002); end
  def test_user_inputs_i18; assert_in_epsilon(2.1, worksheet.user_inputs_i18, 0.002); end
  def test_user_inputs_j18; assert_in_epsilon(2.1, worksheet.user_inputs_j18, 0.002); end
  def test_user_inputs_k18; assert_in_epsilon(2.1, worksheet.user_inputs_k18, 0.002); end
  def test_user_inputs_l18; assert_in_epsilon(2.1, worksheet.user_inputs_l18, 0.002); end
  def test_user_inputs_m18; assert_in_epsilon(2.1, worksheet.user_inputs_m18, 0.002); end
  def test_user_inputs_n18; assert_in_epsilon(2.1, worksheet.user_inputs_n18, 0.002); end
  def test_user_inputs_o18; assert_in_epsilon(2.5, worksheet.user_inputs_o18, 0.002); end
  def test_user_inputs_p18; assert_in_epsilon(2.5, worksheet.user_inputs_p18, 0.002); end
  def test_user_inputs_q18; assert_in_epsilon(3.0, worksheet.user_inputs_q18, 0.002); end
  def test_user_inputs_r18; assert_in_delta(1.0, worksheet.user_inputs_r18, 0.002); end
  def test_user_inputs_h19; assert_in_epsilon(1.4, worksheet.user_inputs_h19, 0.002); end
  def test_user_inputs_i19; assert_in_epsilon(2.7, worksheet.user_inputs_i19, 0.002); end
  def test_user_inputs_j19; assert_in_epsilon(3.0, worksheet.user_inputs_j19, 0.002); end
  def test_user_inputs_k19; assert_in_epsilon(3.0, worksheet.user_inputs_k19, 0.002); end
  def test_user_inputs_l19; assert_in_epsilon(1.1, worksheet.user_inputs_l19, 0.002); end
  def test_user_inputs_m19; assert_in_epsilon(1.3, worksheet.user_inputs_m19, 0.002); end
  def test_user_inputs_n19; assert_in_epsilon(2.2, worksheet.user_inputs_n19, 0.002); end
  def test_user_inputs_o19; assert_in_epsilon(2.0, worksheet.user_inputs_o19, 0.002); end
  def test_user_inputs_p19; assert_in_epsilon(2.0, worksheet.user_inputs_p19, 0.002); end
  def test_user_inputs_q19; assert_in_epsilon(2.5, worksheet.user_inputs_q19, 0.002); end
  def test_user_inputs_r19; assert_in_epsilon(3.0, worksheet.user_inputs_r19, 0.002); end
  def test_user_inputs_h20; assert_in_epsilon(1.3, worksheet.user_inputs_h20, 0.002); end
  def test_user_inputs_i20; assert_in_epsilon(2.7, worksheet.user_inputs_i20, 0.002); end
  def test_user_inputs_j20; assert_in_epsilon(3.0, worksheet.user_inputs_j20, 0.002); end
  def test_user_inputs_k20; assert_in_epsilon(3.0, worksheet.user_inputs_k20, 0.002); end
  def test_user_inputs_l20; assert_in_epsilon(1.1, worksheet.user_inputs_l20, 0.002); end
  def test_user_inputs_m20; assert_in_epsilon(1.3, worksheet.user_inputs_m20, 0.002); end
  def test_user_inputs_n20; assert_in_epsilon(2.1, worksheet.user_inputs_n20, 0.002); end
  def test_user_inputs_o20; assert_in_epsilon(1.5, worksheet.user_inputs_o20, 0.002); end
  def test_user_inputs_p20; assert_in_epsilon(1.5, worksheet.user_inputs_p20, 0.002); end
  def test_user_inputs_q20; assert_in_epsilon(3.8, worksheet.user_inputs_q20, 0.002); end
  def test_user_inputs_r20; assert_in_epsilon(3.0, worksheet.user_inputs_r20, 0.002); end
  def test_user_inputs_h21; assert_in_epsilon(3.0, worksheet.user_inputs_h21, 0.002); end
  def test_user_inputs_i21; assert_in_epsilon(2.7, worksheet.user_inputs_i21, 0.002); end
  def test_user_inputs_j21; assert_in_epsilon(3.0, worksheet.user_inputs_j21, 0.002); end
  def test_user_inputs_k21; assert_in_epsilon(3.0, worksheet.user_inputs_k21, 0.002); end
  def test_user_inputs_l21; assert_in_epsilon(1.2, worksheet.user_inputs_l21, 0.002); end
  def test_user_inputs_m21; assert_in_epsilon(1.3, worksheet.user_inputs_m21, 0.002); end
  def test_user_inputs_n21; assert_in_epsilon(2.2, worksheet.user_inputs_n21, 0.002); end
  def test_user_inputs_o21; assert_in_delta(1.0, worksheet.user_inputs_o21, 0.002); end
  def test_user_inputs_p21; assert_in_delta(1.0, worksheet.user_inputs_p21, 0.002); end
  def test_user_inputs_q21; assert_in_epsilon(3.0, worksheet.user_inputs_q21, 0.002); end
  def test_user_inputs_r21; assert_in_epsilon(3.0, worksheet.user_inputs_r21, 0.002); end
  def test_user_inputs_h22; assert_in_epsilon(1.5, worksheet.user_inputs_h22, 0.002); end
  def test_user_inputs_i22; assert_in_epsilon(2.7, worksheet.user_inputs_i22, 0.002); end
  def test_user_inputs_j22; assert_in_epsilon(3.0, worksheet.user_inputs_j22, 0.002); end
  def test_user_inputs_k22; assert_in_epsilon(3.0, worksheet.user_inputs_k22, 0.002); end
  def test_user_inputs_l22; assert_in_delta(1.0, worksheet.user_inputs_l22, 0.002); end
  def test_user_inputs_m22; assert_in_delta(1.0, worksheet.user_inputs_m22, 0.002); end
  def test_user_inputs_n22; assert_in_delta(1.0, worksheet.user_inputs_n22, 0.002); end
  def test_user_inputs_o22; assert_in_epsilon(1.2, worksheet.user_inputs_o22, 0.002); end
  def test_user_inputs_p22; assert_in_epsilon(1.2, worksheet.user_inputs_p22, 0.002); end
  def test_user_inputs_q22; assert_in_epsilon(1.5, worksheet.user_inputs_q22, 0.002); end
  def test_user_inputs_r22; assert_in_epsilon(2.5, worksheet.user_inputs_r22, 0.002); end
  def test_user_inputs_h23; assert_in_epsilon(2.0, worksheet.user_inputs_h23, 0.002); end
  def test_user_inputs_i23; assert_in_epsilon(2.7, worksheet.user_inputs_i23, 0.002); end
  def test_user_inputs_j23; assert_in_epsilon(3.0, worksheet.user_inputs_j23, 0.002); end
  def test_user_inputs_k23; assert_in_epsilon(3.0, worksheet.user_inputs_k23, 0.002); end
  def test_user_inputs_l23; assert_in_epsilon(1.3, worksheet.user_inputs_l23, 0.002); end
  def test_user_inputs_m23; assert_in_epsilon(1.1, worksheet.user_inputs_m23, 0.002); end
  def test_user_inputs_n23; assert_in_epsilon(2.0, worksheet.user_inputs_n23, 0.002); end
  def test_user_inputs_o23; assert_in_delta(1.0, worksheet.user_inputs_o23, 0.002); end
  def test_user_inputs_p23; assert_in_delta(1.0, worksheet.user_inputs_p23, 0.002); end
  def test_user_inputs_q23; assert_in_epsilon(1.5, worksheet.user_inputs_q23, 0.002); end
  def test_user_inputs_r23; assert_in_epsilon(2.5, worksheet.user_inputs_r23, 0.002); end
  def test_user_inputs_h24; assert_in_epsilon(2.6, worksheet.user_inputs_h24, 0.002); end
  def test_user_inputs_i24; assert_in_epsilon(2.7, worksheet.user_inputs_i24, 0.002); end
  def test_user_inputs_j24; assert_in_epsilon(3.0, worksheet.user_inputs_j24, 0.002); end
  def test_user_inputs_k24; assert_in_epsilon(3.0, worksheet.user_inputs_k24, 0.002); end
  def test_user_inputs_l24; assert_in_epsilon(1.9, worksheet.user_inputs_l24, 0.002); end
  def test_user_inputs_m24; assert_in_epsilon(2.4, worksheet.user_inputs_m24, 0.002); end
  def test_user_inputs_n24; assert_in_epsilon(2.6, worksheet.user_inputs_n24, 0.002); end
  def test_user_inputs_o24; assert_in_epsilon(1.5, worksheet.user_inputs_o24, 0.002); end
  def test_user_inputs_p24; assert_in_epsilon(1.5, worksheet.user_inputs_p24, 0.002); end
  def test_user_inputs_q24; assert_in_epsilon(3.9, worksheet.user_inputs_q24, 0.002); end
  def test_user_inputs_r24; assert_in_epsilon(3.0, worksheet.user_inputs_r24, 0.002); end
  def test_user_inputs_h25; assert_in_epsilon(2.6, worksheet.user_inputs_h25, 0.002); end
  def test_user_inputs_i25; assert_in_epsilon(2.7, worksheet.user_inputs_i25, 0.002); end
  def test_user_inputs_j25; assert_in_epsilon(3.0, worksheet.user_inputs_j25, 0.002); end
  def test_user_inputs_k25; assert_in_epsilon(3.0, worksheet.user_inputs_k25, 0.002); end
  def test_user_inputs_l25; assert_in_delta(1.0, worksheet.user_inputs_l25, 0.002); end
  def test_user_inputs_m25; assert_in_delta(1.0, worksheet.user_inputs_m25, 0.002); end
  def test_user_inputs_n25; assert_in_epsilon(1.1, worksheet.user_inputs_n25, 0.002); end
  def test_user_inputs_o25; assert_in_epsilon(2.5, worksheet.user_inputs_o25, 0.002); end
  def test_user_inputs_p25; assert_in_epsilon(2.5, worksheet.user_inputs_p25, 0.002); end
  def test_user_inputs_q25; assert_in_epsilon(3.2, worksheet.user_inputs_q25, 0.002); end
  def test_user_inputs_r25; assert_in_epsilon(3.0, worksheet.user_inputs_r25, 0.002); end
  def test_user_inputs_h26; assert_in_epsilon(2.5, worksheet.user_inputs_h26, 0.002); end
  def test_user_inputs_i26; assert_in_epsilon(2.7, worksheet.user_inputs_i26, 0.002); end
  def test_user_inputs_j26; assert_in_epsilon(3.0, worksheet.user_inputs_j26, 0.002); end
  def test_user_inputs_k26; assert_in_epsilon(3.0, worksheet.user_inputs_k26, 0.002); end
  def test_user_inputs_l26; assert_in_epsilon(2.0, worksheet.user_inputs_l26, 0.002); end
  def test_user_inputs_m26; assert_in_epsilon(2.2, worksheet.user_inputs_m26, 0.002); end
  def test_user_inputs_n26; assert_in_epsilon(2.5, worksheet.user_inputs_n26, 0.002); end
  def test_user_inputs_o26; assert_in_epsilon(2.2, worksheet.user_inputs_o26, 0.002); end
  def test_user_inputs_p26; assert_in_epsilon(2.2, worksheet.user_inputs_p26, 0.002); end
  def test_user_inputs_q26; assert_in_epsilon(2.8, worksheet.user_inputs_q26, 0.002); end
  def test_user_inputs_r26; assert_in_epsilon(3.0, worksheet.user_inputs_r26, 0.002); end
  def test_user_inputs_h27; assert_in_epsilon(2.7, worksheet.user_inputs_h27, 0.002); end
  def test_user_inputs_i27; assert_in_epsilon(2.7, worksheet.user_inputs_i27, 0.002); end
  def test_user_inputs_j27; assert_in_epsilon(3.0, worksheet.user_inputs_j27, 0.002); end
  def test_user_inputs_k27; assert_in_epsilon(3.0, worksheet.user_inputs_k27, 0.002); end
  def test_user_inputs_l27; assert_in_epsilon(1.7, worksheet.user_inputs_l27, 0.002); end
  def test_user_inputs_m27; assert_in_epsilon(1.8, worksheet.user_inputs_m27, 0.002); end
  def test_user_inputs_n27; assert_in_epsilon(1.8, worksheet.user_inputs_n27, 0.002); end
  def test_user_inputs_o27; assert_in_epsilon(2.0, worksheet.user_inputs_o27, 0.002); end
  def test_user_inputs_p27; assert_in_epsilon(2.0, worksheet.user_inputs_p27, 0.002); end
  def test_user_inputs_q27; assert_in_epsilon(4.0, worksheet.user_inputs_q27, 0.002); end
  def test_user_inputs_r27; assert_in_epsilon(3.0, worksheet.user_inputs_r27, 0.002); end
  def test_user_inputs_h28; assert_in_epsilon(3.0, worksheet.user_inputs_h28, 0.002); end
  def test_user_inputs_i28; assert_in_epsilon(2.7, worksheet.user_inputs_i28, 0.002); end
  def test_user_inputs_j28; assert_in_epsilon(3.0, worksheet.user_inputs_j28, 0.002); end
  def test_user_inputs_k28; assert_in_epsilon(2.7, worksheet.user_inputs_k28, 0.002); end
  def test_user_inputs_l28; assert_in_delta(1.0, worksheet.user_inputs_l28, 0.002); end
  def test_user_inputs_m28; assert_in_epsilon(1.2, worksheet.user_inputs_m28, 0.002); end
  def test_user_inputs_n28; assert_in_epsilon(1.9, worksheet.user_inputs_n28, 0.002); end
  def test_user_inputs_o28; assert_in_delta(1.0, worksheet.user_inputs_o28, 0.002); end
  def test_user_inputs_p28; assert_in_delta(1.0, worksheet.user_inputs_p28, 0.002); end
  def test_user_inputs_q28; assert_in_epsilon(3.8, worksheet.user_inputs_q28, 0.002); end
  def test_user_inputs_r28; assert_in_delta(1.0, worksheet.user_inputs_r28, 0.002); end
  def test_user_inputs_h29; assert_in_epsilon(2.9, worksheet.user_inputs_h29, 0.002); end
  def test_user_inputs_i29; assert_in_epsilon(2.7, worksheet.user_inputs_i29, 0.002); end
  def test_user_inputs_j29; assert_in_epsilon(3.0, worksheet.user_inputs_j29, 0.002); end
  def test_user_inputs_k29; assert_in_epsilon(3.0, worksheet.user_inputs_k29, 0.002); end
  def test_user_inputs_l29; assert_in_epsilon(2.0, worksheet.user_inputs_l29, 0.002); end
  def test_user_inputs_m29; assert_in_epsilon(2.1, worksheet.user_inputs_m29, 0.002); end
  def test_user_inputs_n29; assert_in_epsilon(2.1, worksheet.user_inputs_n29, 0.002); end
  def test_user_inputs_o29; assert_in_delta(1.0, worksheet.user_inputs_o29, 0.002); end
  def test_user_inputs_p29; assert_in_delta(1.0, worksheet.user_inputs_p29, 0.002); end
  def test_user_inputs_q29; assert_in_epsilon(3.1, worksheet.user_inputs_q29, 0.002); end
  def test_user_inputs_r29; assert_in_epsilon(3.0, worksheet.user_inputs_r29, 0.002); end
  def test_user_inputs_h30; assert_in_epsilon(2.9, worksheet.user_inputs_h30, 0.002); end
  def test_user_inputs_i30; assert_in_epsilon(2.7, worksheet.user_inputs_i30, 0.002); end
  def test_user_inputs_j30; assert_in_epsilon(3.0, worksheet.user_inputs_j30, 0.002); end
  def test_user_inputs_k30; assert_in_epsilon(3.0, worksheet.user_inputs_k30, 0.002); end
  def test_user_inputs_l30; assert_in_epsilon(2.0, worksheet.user_inputs_l30, 0.002); end
  def test_user_inputs_m30; assert_in_epsilon(2.1, worksheet.user_inputs_m30, 0.002); end
  def test_user_inputs_n30; assert_in_epsilon(3.0, worksheet.user_inputs_n30, 0.002); end
  def test_user_inputs_o30; assert_in_epsilon(2.1, worksheet.user_inputs_o30, 0.002); end
  def test_user_inputs_p30; assert_in_epsilon(2.1, worksheet.user_inputs_p30, 0.002); end
  def test_user_inputs_q30; assert_in_delta(1.0, worksheet.user_inputs_q30, 0.002); end
  def test_user_inputs_r30; assert_in_epsilon(3.0, worksheet.user_inputs_r30, 0.002); end
  def test_user_inputs_h31; assert_in_epsilon(2.7, worksheet.user_inputs_h31, 0.002); end
  def test_user_inputs_i31; assert_in_epsilon(2.6, worksheet.user_inputs_i31, 0.002); end
  def test_user_inputs_j31; assert_in_epsilon(2.0, worksheet.user_inputs_j31, 0.002); end
  def test_user_inputs_k31; assert_in_epsilon(2.7, worksheet.user_inputs_k31, 0.002); end
  def test_user_inputs_l31; assert_in_delta(1.0, worksheet.user_inputs_l31, 0.002); end
  def test_user_inputs_m31; assert_in_epsilon(1.4, worksheet.user_inputs_m31, 0.002); end
  def test_user_inputs_n31; assert_in_epsilon(3.0, worksheet.user_inputs_n31, 0.002); end
  def test_user_inputs_o31; assert_in_delta(1.0, worksheet.user_inputs_o31, 0.002); end
  def test_user_inputs_p31; assert_in_delta(1.0, worksheet.user_inputs_p31, 0.002); end
  def test_user_inputs_q31; assert_in_epsilon(2.1, worksheet.user_inputs_q31, 0.002); end
  def test_user_inputs_r31; assert_in_delta(1.0, worksheet.user_inputs_r31, 0.002); end
  def test_user_inputs_h32; assert_in_epsilon(2.8, worksheet.user_inputs_h32, 0.002); end
  def test_user_inputs_i32; assert_in_epsilon(2.6, worksheet.user_inputs_i32, 0.002); end
  def test_user_inputs_j32; assert_in_epsilon(3.0, worksheet.user_inputs_j32, 0.002); end
  def test_user_inputs_k32; assert_in_epsilon(1.8, worksheet.user_inputs_k32, 0.002); end
  def test_user_inputs_l32; assert_in_epsilon(1.7, worksheet.user_inputs_l32, 0.002); end
  def test_user_inputs_m32; assert_in_epsilon(2.0, worksheet.user_inputs_m32, 0.002); end
  def test_user_inputs_n32; assert_in_epsilon(3.0, worksheet.user_inputs_n32, 0.002); end
  def test_user_inputs_o32; assert_in_epsilon(2.2, worksheet.user_inputs_o32, 0.002); end
  def test_user_inputs_p32; assert_in_epsilon(2.2, worksheet.user_inputs_p32, 0.002); end
  def test_user_inputs_q32; assert_in_epsilon(3.2, worksheet.user_inputs_q32, 0.002); end
  def test_user_inputs_r32; assert_in_epsilon(2.0, worksheet.user_inputs_r32, 0.002); end
  def test_user_inputs_h33; assert_in_epsilon(2.0, worksheet.user_inputs_h33, 0.002); end
  def test_user_inputs_i33; assert_in_epsilon(2.6, worksheet.user_inputs_i33, 0.002); end
  def test_user_inputs_j33; assert_in_epsilon(2.6, worksheet.user_inputs_j33, 0.002); end
  def test_user_inputs_k33; assert_in_epsilon(1.8, worksheet.user_inputs_k33, 0.002); end
  def test_user_inputs_l33; assert_in_epsilon(1.2, worksheet.user_inputs_l33, 0.002); end
  def test_user_inputs_m33; assert_in_epsilon(1.7, worksheet.user_inputs_m33, 0.002); end
  def test_user_inputs_n33; assert_in_epsilon(2.0, worksheet.user_inputs_n33, 0.002); end
  def test_user_inputs_o33; assert_in_epsilon(1.2, worksheet.user_inputs_o33, 0.002); end
  def test_user_inputs_p33; assert_in_epsilon(1.2, worksheet.user_inputs_p33, 0.002); end
  def test_user_inputs_q33; assert_in_epsilon(1.8, worksheet.user_inputs_q33, 0.002); end
  def test_user_inputs_r33; assert_in_epsilon(3.0, worksheet.user_inputs_r33, 0.002); end
  def test_user_inputs_h34; assert_in_epsilon(2.0, worksheet.user_inputs_h34, 0.002); end
  def test_user_inputs_i34; assert_in_epsilon(2.6, worksheet.user_inputs_i34, 0.002); end
  def test_user_inputs_j34; assert_in_epsilon(3.0, worksheet.user_inputs_j34, 0.002); end
  def test_user_inputs_k34; assert_in_epsilon(1.8, worksheet.user_inputs_k34, 0.002); end
  def test_user_inputs_l34; assert_in_epsilon(1.9, worksheet.user_inputs_l34, 0.002); end
  def test_user_inputs_m34; assert_in_epsilon(2.1, worksheet.user_inputs_m34, 0.002); end
  def test_user_inputs_n34; assert_in_epsilon(2.3, worksheet.user_inputs_n34, 0.002); end
  def test_user_inputs_o34; assert_in_delta(1.0, worksheet.user_inputs_o34, 0.002); end
  def test_user_inputs_p34; assert_in_delta(1.0, worksheet.user_inputs_p34, 0.002); end
  def test_user_inputs_q34; assert_in_epsilon(2.5, worksheet.user_inputs_q34, 0.002); end
  def test_user_inputs_r34; assert_in_epsilon(1.5, worksheet.user_inputs_r34, 0.002); end
  def test_user_inputs_h35; assert_in_delta(1.0, worksheet.user_inputs_h35, 0.002); end
  def test_user_inputs_i35; assert_in_epsilon(2.6, worksheet.user_inputs_i35, 0.002); end
  def test_user_inputs_j35; assert_in_epsilon(2.0, worksheet.user_inputs_j35, 0.002); end
  def test_user_inputs_k35; assert_in_epsilon(1.8, worksheet.user_inputs_k35, 0.002); end
  def test_user_inputs_l35; assert_in_epsilon(1.3, worksheet.user_inputs_l35, 0.002); end
  def test_user_inputs_m35; assert_in_epsilon(1.3, worksheet.user_inputs_m35, 0.002); end
  def test_user_inputs_n35; assert_in_epsilon(1.3, worksheet.user_inputs_n35, 0.002); end
  def test_user_inputs_o35; assert_in_delta(1.0, worksheet.user_inputs_o35, 0.002); end
  def test_user_inputs_p35; assert_in_delta(1.0, worksheet.user_inputs_p35, 0.002); end
  def test_user_inputs_q35; assert_in_delta(1.0, worksheet.user_inputs_q35, 0.002); end
  def test_user_inputs_r35; assert_in_delta(1.0, worksheet.user_inputs_r35, 0.002); end
  def test_user_inputs_h36; assert_in_epsilon(1.9, worksheet.user_inputs_h36, 0.002); end
  def test_user_inputs_i36; assert_in_epsilon(2.6, worksheet.user_inputs_i36, 0.002); end
  def test_user_inputs_j36; assert_in_epsilon(2.8, worksheet.user_inputs_j36, 0.002); end
  def test_user_inputs_k36; assert_in_epsilon(3.0, worksheet.user_inputs_k36, 0.002); end
  def test_user_inputs_l36; assert_in_epsilon(1.2, worksheet.user_inputs_l36, 0.002); end
  def test_user_inputs_m36; assert_in_epsilon(1.6, worksheet.user_inputs_m36, 0.002); end
  def test_user_inputs_n36; assert_in_epsilon(2.5, worksheet.user_inputs_n36, 0.002); end
  def test_user_inputs_o36; assert_in_epsilon(2.5, worksheet.user_inputs_o36, 0.002); end
  def test_user_inputs_p36; assert_in_epsilon(2.5, worksheet.user_inputs_p36, 0.002); end
  def test_user_inputs_q36; assert_in_epsilon(3.5, worksheet.user_inputs_q36, 0.002); end
  def test_user_inputs_r36; assert_in_epsilon(3.0, worksheet.user_inputs_r36, 0.002); end
  def test_user_inputs_h37; assert_in_epsilon(2.0, worksheet.user_inputs_h37, 0.002); end
  def test_user_inputs_i37; assert_in_epsilon(2.6, worksheet.user_inputs_i37, 0.002); end
  def test_user_inputs_j37; assert_in_epsilon(2.0, worksheet.user_inputs_j37, 0.002); end
  def test_user_inputs_k37; assert_in_epsilon(2.8, worksheet.user_inputs_k37, 0.002); end
  def test_user_inputs_l37; assert_in_epsilon(1.4, worksheet.user_inputs_l37, 0.002); end
  def test_user_inputs_m37; assert_in_epsilon(1.5, worksheet.user_inputs_m37, 0.002); end
  def test_user_inputs_n37; assert_in_epsilon(1.9, worksheet.user_inputs_n37, 0.002); end
  def test_user_inputs_o37; assert_in_epsilon(1.6, worksheet.user_inputs_o37, 0.002); end
  def test_user_inputs_p37; assert_in_epsilon(1.6, worksheet.user_inputs_p37, 0.002); end
  def test_user_inputs_q37; assert_in_epsilon(4.0, worksheet.user_inputs_q37, 0.002); end
  def test_user_inputs_r37; assert_in_epsilon(1.5, worksheet.user_inputs_r37, 0.002); end
  def test_user_inputs_h38; assert_in_epsilon(2.0, worksheet.user_inputs_h38, 0.002); end
  def test_user_inputs_i38; assert_in_epsilon(2.6, worksheet.user_inputs_i38, 0.002); end
  def test_user_inputs_j38; assert_in_epsilon(3.0, worksheet.user_inputs_j38, 0.002); end
  def test_user_inputs_k38; assert_in_epsilon(2.5, worksheet.user_inputs_k38, 0.002); end
  def test_user_inputs_l38; assert_in_epsilon(1.7, worksheet.user_inputs_l38, 0.002); end
  def test_user_inputs_m38; assert_in_epsilon(1.8, worksheet.user_inputs_m38, 0.002); end
  def test_user_inputs_n38; assert_in_epsilon(1.7, worksheet.user_inputs_n38, 0.002); end
  def test_user_inputs_o38; assert_in_delta(1.0, worksheet.user_inputs_o38, 0.002); end
  def test_user_inputs_p38; assert_in_delta(1.0, worksheet.user_inputs_p38, 0.002); end
  def test_user_inputs_q38; assert_in_delta(1.0, worksheet.user_inputs_q38, 0.002); end
  def test_user_inputs_r38; assert_in_epsilon(2.5, worksheet.user_inputs_r38, 0.002); end
  def test_user_inputs_h39; assert_in_epsilon(2.0, worksheet.user_inputs_h39, 0.002); end
  def test_user_inputs_i39; assert_in_epsilon(2.0, worksheet.user_inputs_i39, 0.002); end
  def test_user_inputs_j39; assert_in_epsilon(2.0, worksheet.user_inputs_j39, 0.002); end
  def test_user_inputs_k39; assert_in_epsilon(2.0, worksheet.user_inputs_k39, 0.002); end
  def test_user_inputs_l39; assert_in_epsilon(2.0, worksheet.user_inputs_l39, 0.002); end
  def test_user_inputs_m39; assert_in_epsilon(2.0, worksheet.user_inputs_m39, 0.002); end
  def test_user_inputs_n39; assert_in_epsilon(2.0, worksheet.user_inputs_n39, 0.002); end
  def test_user_inputs_o39; assert_in_epsilon(2.5, worksheet.user_inputs_o39, 0.002); end
  def test_user_inputs_p39; assert_in_epsilon(2.5, worksheet.user_inputs_p39, 0.002); end
  def test_user_inputs_q39; assert_in_epsilon(3.0, worksheet.user_inputs_q39, 0.002); end
  def test_user_inputs_r39; assert_in_epsilon(2.0, worksheet.user_inputs_r39, 0.002); end
  def test_user_inputs_h40; assert_in_epsilon(2.0, worksheet.user_inputs_h40, 0.002); end
  def test_user_inputs_i40; assert_in_epsilon(2.0, worksheet.user_inputs_i40, 0.002); end
  def test_user_inputs_j40; assert_in_epsilon(2.0, worksheet.user_inputs_j40, 0.002); end
  def test_user_inputs_k40; assert_in_epsilon(2.0, worksheet.user_inputs_k40, 0.002); end
  def test_user_inputs_l40; assert_in_epsilon(2.0, worksheet.user_inputs_l40, 0.002); end
  def test_user_inputs_m40; assert_in_epsilon(2.0, worksheet.user_inputs_m40, 0.002); end
  def test_user_inputs_n40; assert_in_epsilon(2.0, worksheet.user_inputs_n40, 0.002); end
  def test_user_inputs_o40; assert_in_epsilon(2.5, worksheet.user_inputs_o40, 0.002); end
  def test_user_inputs_p40; assert_in_epsilon(2.5, worksheet.user_inputs_p40, 0.002); end
  def test_user_inputs_q40; assert_in_epsilon(2.5, worksheet.user_inputs_q40, 0.002); end
  def test_user_inputs_r40; assert_in_epsilon(1.6, worksheet.user_inputs_r40, 0.002); end
  def test_user_inputs_h41; assert_in_epsilon(2.0, worksheet.user_inputs_h41, 0.002); end
  def test_user_inputs_i41; assert_in_epsilon(2.0, worksheet.user_inputs_i41, 0.002); end
  def test_user_inputs_j41; assert_in_epsilon(2.0, worksheet.user_inputs_j41, 0.002); end
  def test_user_inputs_k41; assert_in_epsilon(3.0, worksheet.user_inputs_k41, 0.002); end
  def test_user_inputs_l41; assert_in_epsilon(2.0, worksheet.user_inputs_l41, 0.002); end
  def test_user_inputs_m41; assert_in_epsilon(2.0, worksheet.user_inputs_m41, 0.002); end
  def test_user_inputs_n41; assert_in_epsilon(2.0, worksheet.user_inputs_n41, 0.002); end
  def test_user_inputs_o41; assert_in_epsilon(2.5, worksheet.user_inputs_o41, 0.002); end
  def test_user_inputs_p41; assert_in_epsilon(2.5, worksheet.user_inputs_p41, 0.002); end
  def test_user_inputs_q41; assert_in_epsilon(2.5, worksheet.user_inputs_q41, 0.002); end
  def test_user_inputs_r41; assert_in_epsilon(3.0, worksheet.user_inputs_r41, 0.002); end
  def test_user_inputs_h42; assert_in_epsilon(3.0, worksheet.user_inputs_h42, 0.002); end
  def test_user_inputs_i42; assert_in_epsilon(2.7, worksheet.user_inputs_i42, 0.002); end
  def test_user_inputs_j42; assert_in_epsilon(2.5, worksheet.user_inputs_j42, 0.002); end
  def test_user_inputs_k42; assert_in_epsilon(2.0, worksheet.user_inputs_k42, 0.002); end
  def test_user_inputs_l42; assert_in_epsilon(1.9, worksheet.user_inputs_l42, 0.002); end
  def test_user_inputs_m42; assert_in_epsilon(2.5, worksheet.user_inputs_m42, 0.002); end
  def test_user_inputs_n42; assert_in_epsilon(3.0, worksheet.user_inputs_n42, 0.002); end
  def test_user_inputs_o42; assert_in_epsilon(2.0, worksheet.user_inputs_o42, 0.002); end
  def test_user_inputs_p42; assert_in_epsilon(2.0, worksheet.user_inputs_p42, 0.002); end
  def test_user_inputs_q42; assert_in_epsilon(2.0, worksheet.user_inputs_q42, 0.002); end
  def test_user_inputs_r42; assert_in_epsilon(2.6, worksheet.user_inputs_r42, 0.002); end
  def test_user_inputs_h43; assert_in_epsilon(3.0, worksheet.user_inputs_h43, 0.002); end
  def test_user_inputs_i43; assert_in_epsilon(2.7, worksheet.user_inputs_i43, 0.002); end
  def test_user_inputs_j43; assert_in_epsilon(2.5, worksheet.user_inputs_j43, 0.002); end
  def test_user_inputs_k43; assert_in_epsilon(3.0, worksheet.user_inputs_k43, 0.002); end
  def test_user_inputs_l43; assert_in_epsilon(2.7, worksheet.user_inputs_l43, 0.002); end
  def test_user_inputs_m43; assert_in_epsilon(2.8, worksheet.user_inputs_m43, 0.002); end
  def test_user_inputs_n43; assert_in_epsilon(3.0, worksheet.user_inputs_n43, 0.002); end
  def test_user_inputs_o43; assert_in_delta(1.0, worksheet.user_inputs_o43, 0.002); end
  def test_user_inputs_p43; assert_in_delta(1.0, worksheet.user_inputs_p43, 0.002); end
  def test_user_inputs_q43; assert_in_epsilon(2.0, worksheet.user_inputs_q43, 0.002); end
  def test_user_inputs_r43; assert_in_epsilon(2.8, worksheet.user_inputs_r43, 0.002); end
  def test_user_inputs_h44; assert_in_epsilon(3.0, worksheet.user_inputs_h44, 0.002); end
  def test_user_inputs_i44; assert_in_epsilon(2.7, worksheet.user_inputs_i44, 0.002); end
  def test_user_inputs_j44; assert_in_epsilon(2.4, worksheet.user_inputs_j44, 0.002); end
  def test_user_inputs_k44; assert_in_epsilon(1.5, worksheet.user_inputs_k44, 0.002); end
  def test_user_inputs_l44; assert_in_epsilon(2.0, worksheet.user_inputs_l44, 0.002); end
  def test_user_inputs_m44; assert_in_epsilon(2.1, worksheet.user_inputs_m44, 0.002); end
  def test_user_inputs_n44; assert_in_epsilon(2.5, worksheet.user_inputs_n44, 0.002); end
  def test_user_inputs_o44; assert_in_epsilon(2.0, worksheet.user_inputs_o44, 0.002); end
  def test_user_inputs_p44; assert_in_epsilon(2.0, worksheet.user_inputs_p44, 0.002); end
  def test_user_inputs_q44; assert_in_epsilon(2.0, worksheet.user_inputs_q44, 0.002); end
  def test_user_inputs_r44; assert_in_delta(1.0, worksheet.user_inputs_r44, 0.002); end
  def test_user_inputs_h45; assert_in_epsilon(3.0, worksheet.user_inputs_h45, 0.002); end
  def test_user_inputs_i45; assert_in_epsilon(2.7, worksheet.user_inputs_i45, 0.002); end
  def test_user_inputs_j45; assert_in_epsilon(2.8, worksheet.user_inputs_j45, 0.002); end
  def test_user_inputs_k45; assert_in_epsilon(3.0, worksheet.user_inputs_k45, 0.002); end
  def test_user_inputs_l45; assert_in_epsilon(2.7, worksheet.user_inputs_l45, 0.002); end
  def test_user_inputs_m45; assert_in_epsilon(2.9, worksheet.user_inputs_m45, 0.002); end
  def test_user_inputs_n45; assert_in_epsilon(3.0, worksheet.user_inputs_n45, 0.002); end
  def test_user_inputs_o45; assert_in_epsilon(2.0, worksheet.user_inputs_o45, 0.002); end
  def test_user_inputs_p45; assert_in_epsilon(2.0, worksheet.user_inputs_p45, 0.002); end
  def test_user_inputs_q45; assert_in_epsilon(2.0, worksheet.user_inputs_q45, 0.002); end
  def test_user_inputs_r45; assert_in_epsilon(3.0, worksheet.user_inputs_r45, 0.002); end
  def test_user_inputs_h46; assert_in_epsilon(3.0, worksheet.user_inputs_h46, 0.002); end
  def test_user_inputs_i46; assert_in_epsilon(2.7, worksheet.user_inputs_i46, 0.002); end
  def test_user_inputs_j46; assert_in_epsilon(2.4, worksheet.user_inputs_j46, 0.002); end
  def test_user_inputs_k46; assert_in_epsilon(3.0, worksheet.user_inputs_k46, 0.002); end
  def test_user_inputs_l46; assert_in_epsilon(2.9, worksheet.user_inputs_l46, 0.002); end
  def test_user_inputs_m46; assert_in_epsilon(3.0, worksheet.user_inputs_m46, 0.002); end
  def test_user_inputs_n46; assert_in_epsilon(3.0, worksheet.user_inputs_n46, 0.002); end
  def test_user_inputs_o46; assert_in_delta(1.0, worksheet.user_inputs_o46, 0.002); end
  def test_user_inputs_p46; assert_in_delta(1.0, worksheet.user_inputs_p46, 0.002); end
  def test_user_inputs_q46; assert_in_epsilon(2.9, worksheet.user_inputs_q46, 0.002); end
  def test_user_inputs_r46; assert_in_epsilon(2.6, worksheet.user_inputs_r46, 0.002); end
  def test_user_inputs_h47; assert_in_epsilon(3.0, worksheet.user_inputs_h47, 0.002); end
  def test_user_inputs_i47; assert_in_epsilon(2.7, worksheet.user_inputs_i47, 0.002); end
  def test_user_inputs_j47; assert_in_epsilon(2.0, worksheet.user_inputs_j47, 0.002); end
  def test_user_inputs_k47; assert_in_epsilon(2.0, worksheet.user_inputs_k47, 0.002); end
  def test_user_inputs_l47; assert_in_epsilon(2.5, worksheet.user_inputs_l47, 0.002); end
  def test_user_inputs_m47; assert_in_epsilon(2.5, worksheet.user_inputs_m47, 0.002); end
  def test_user_inputs_n47; assert_in_epsilon(2.5, worksheet.user_inputs_n47, 0.002); end
  def test_user_inputs_o47; assert_in_epsilon(2.0, worksheet.user_inputs_o47, 0.002); end
  def test_user_inputs_p47; assert_in_epsilon(2.0, worksheet.user_inputs_p47, 0.002); end
  def test_user_inputs_q47; assert_in_epsilon(2.0, worksheet.user_inputs_q47, 0.002); end
  def test_user_inputs_r47; assert_in_epsilon(3.0, worksheet.user_inputs_r47, 0.002); end
  def test_user_inputs_h48; assert_in_epsilon(2.7, worksheet.user_inputs_h48, 0.002); end
  def test_user_inputs_i48; assert_in_epsilon(2.7, worksheet.user_inputs_i48, 0.002); end
  def test_user_inputs_j48; assert_in_epsilon(3.0, worksheet.user_inputs_j48, 0.002); end
  def test_user_inputs_k48; assert_in_epsilon(1.5, worksheet.user_inputs_k48, 0.002); end
  def test_user_inputs_l48; assert_in_epsilon(2.7, worksheet.user_inputs_l48, 0.002); end
  def test_user_inputs_m48; assert_in_epsilon(3.0, worksheet.user_inputs_m48, 0.002); end
  def test_user_inputs_n48; assert_in_epsilon(3.0, worksheet.user_inputs_n48, 0.002); end
  def test_user_inputs_o48; assert_in_delta(1.0, worksheet.user_inputs_o48, 0.002); end
  def test_user_inputs_p48; assert_in_delta(1.0, worksheet.user_inputs_p48, 0.002); end
  def test_user_inputs_q48; assert_in_delta(1.0, worksheet.user_inputs_q48, 0.002); end
  def test_user_inputs_r48; assert_in_epsilon(1.3, worksheet.user_inputs_r48, 0.002); end
  def test_user_inputs_h49; assert_in_delta(1.0, worksheet.user_inputs_h49, 0.002); end
  def test_user_inputs_i49; assert_in_delta(1.0, worksheet.user_inputs_i49, 0.002); end
  def test_user_inputs_j49; assert_in_delta(1.0, worksheet.user_inputs_j49, 0.002); end
  def test_user_inputs_k49; assert_in_delta(1.0, worksheet.user_inputs_k49, 0.002); end
  def test_user_inputs_l49; assert_in_delta(1.0, worksheet.user_inputs_l49, 0.002); end
  def test_user_inputs_m49; assert_in_delta(1.0, worksheet.user_inputs_m49, 0.002); end
  def test_user_inputs_n49; assert_in_delta(1.0, worksheet.user_inputs_n49, 0.002); end
  def test_user_inputs_o49; assert_in_delta(1.0, worksheet.user_inputs_o49, 0.002); end
  def test_user_inputs_p49; assert_in_delta(1.0, worksheet.user_inputs_p49, 0.002); end
  def test_user_inputs_q49; assert_in_delta(1.0, worksheet.user_inputs_q49, 0.002); end
  def test_user_inputs_r49; assert_in_delta(1.0, worksheet.user_inputs_r49, 0.002); end
  def test_user_inputs_h50; assert_in_delta(1.0, worksheet.user_inputs_h50, 0.002); end
  def test_user_inputs_i50; assert_in_delta(1.0, worksheet.user_inputs_i50, 0.002); end
  def test_user_inputs_j50; assert_in_delta(1.0, worksheet.user_inputs_j50, 0.002); end
  def test_user_inputs_k50; assert_in_delta(1.0, worksheet.user_inputs_k50, 0.002); end
  def test_user_inputs_l50; assert_in_delta(1.0, worksheet.user_inputs_l50, 0.002); end
  def test_user_inputs_m50; assert_in_delta(1.0, worksheet.user_inputs_m50, 0.002); end
  def test_user_inputs_n50; assert_in_delta(1.0, worksheet.user_inputs_n50, 0.002); end
  def test_user_inputs_o50; assert_in_delta(1.0, worksheet.user_inputs_o50, 0.002); end
  def test_user_inputs_p50; assert_in_delta(1.0, worksheet.user_inputs_p50, 0.002); end
  def test_user_inputs_q50; assert_in_delta(1.0, worksheet.user_inputs_q50, 0.002); end
  def test_user_inputs_r50; assert_in_delta(1.0, worksheet.user_inputs_r50, 0.002); end
  def test_user_inputs_h51; assert_in_delta(1.0, worksheet.user_inputs_h51, 0.002); end
  def test_user_inputs_i51; assert_in_delta(1.0, worksheet.user_inputs_i51, 0.002); end
  def test_user_inputs_j51; assert_in_delta(1.0, worksheet.user_inputs_j51, 0.002); end
  def test_user_inputs_k51; assert_in_delta(1.0, worksheet.user_inputs_k51, 0.002); end
  def test_user_inputs_l51; assert_in_delta(1.0, worksheet.user_inputs_l51, 0.002); end
  def test_user_inputs_m51; assert_in_delta(1.0, worksheet.user_inputs_m51, 0.002); end
  def test_user_inputs_n51; assert_in_delta(1.0, worksheet.user_inputs_n51, 0.002); end
  def test_user_inputs_o51; assert_in_delta(1.0, worksheet.user_inputs_o51, 0.002); end
  def test_user_inputs_p51; assert_in_delta(1.0, worksheet.user_inputs_p51, 0.002); end
  def test_user_inputs_q51; assert_in_delta(1.0, worksheet.user_inputs_q51, 0.002); end
  def test_user_inputs_r51; assert_in_delta(1.0, worksheet.user_inputs_r51, 0.002); end
  def test_user_inputs_h52; assert_in_delta(1.0, worksheet.user_inputs_h52, 0.002); end
  def test_user_inputs_i52; assert_in_delta(1.0, worksheet.user_inputs_i52, 0.002); end
  def test_user_inputs_j52; assert_in_delta(1.0, worksheet.user_inputs_j52, 0.002); end
  def test_user_inputs_k52; assert_in_delta(1.0, worksheet.user_inputs_k52, 0.002); end
  def test_user_inputs_l52; assert_in_delta(1.0, worksheet.user_inputs_l52, 0.002); end
  def test_user_inputs_m52; assert_in_delta(1.0, worksheet.user_inputs_m52, 0.002); end
  def test_user_inputs_n52; assert_in_delta(1.0, worksheet.user_inputs_n52, 0.002); end
  def test_user_inputs_o52; assert_in_delta(1.0, worksheet.user_inputs_o52, 0.002); end
  def test_user_inputs_p52; assert_in_delta(1.0, worksheet.user_inputs_p52, 0.002); end
  def test_user_inputs_q52; assert_in_delta(1.0, worksheet.user_inputs_q52, 0.002); end
  def test_user_inputs_r52; assert_in_delta(1.0, worksheet.user_inputs_r52, 0.002); end
  def test_user_inputs_h53; assert_in_delta(1.0, worksheet.user_inputs_h53, 0.002); end
  def test_user_inputs_i53; assert_in_delta(1.0, worksheet.user_inputs_i53, 0.002); end
  def test_user_inputs_j53; assert_in_delta(1.0, worksheet.user_inputs_j53, 0.002); end
  def test_user_inputs_k53; assert_in_delta(1.0, worksheet.user_inputs_k53, 0.002); end
  def test_user_inputs_l53; assert_in_delta(1.0, worksheet.user_inputs_l53, 0.002); end
  def test_user_inputs_m53; assert_in_delta(1.0, worksheet.user_inputs_m53, 0.002); end
  def test_user_inputs_n53; assert_in_delta(1.0, worksheet.user_inputs_n53, 0.002); end
  def test_user_inputs_o53; assert_in_delta(1.0, worksheet.user_inputs_o53, 0.002); end
  def test_user_inputs_p53; assert_in_delta(1.0, worksheet.user_inputs_p53, 0.002); end
  def test_user_inputs_q53; assert_in_delta(1.0, worksheet.user_inputs_q53, 0.002); end
  def test_user_inputs_r53; assert_in_delta(1.0, worksheet.user_inputs_r53, 0.002); end
  def test_user_inputs_h54; assert_in_epsilon(2.5, worksheet.user_inputs_h54, 0.002); end
  def test_user_inputs_i54; assert_in_epsilon(2.7, worksheet.user_inputs_i54, 0.002); end
  def test_user_inputs_j54; assert_in_epsilon(2.7, worksheet.user_inputs_j54, 0.002); end
  def test_user_inputs_k54; assert_in_epsilon(3.0, worksheet.user_inputs_k54, 0.002); end
  def test_user_inputs_l54; assert_in_delta(1.0, worksheet.user_inputs_l54, 0.002); end
  def test_user_inputs_m54; assert_in_epsilon(2.8, worksheet.user_inputs_m54, 0.002); end
  def test_user_inputs_n54; assert_in_epsilon(3.0, worksheet.user_inputs_n54, 0.002); end
  def test_user_inputs_o54; assert_in_delta(1.0, worksheet.user_inputs_o54, 0.002); end
  def test_user_inputs_p54; assert_in_delta(1.0, worksheet.user_inputs_p54, 0.002); end
  def test_user_inputs_q54; assert_in_epsilon(2.3, worksheet.user_inputs_q54, 0.002); end
  def test_user_inputs_r54; assert_in_epsilon(3.0, worksheet.user_inputs_r54, 0.002); end
  def test_user_inputs_h55; assert_in_epsilon(3.0, worksheet.user_inputs_h55, 0.002); end
  def test_user_inputs_i55; assert_in_epsilon(2.5, worksheet.user_inputs_i55, 0.002); end
  def test_user_inputs_j55; assert_in_epsilon(2.5, worksheet.user_inputs_j55, 0.002); end
  def test_user_inputs_k55; assert_in_epsilon(2.0, worksheet.user_inputs_k55, 0.002); end
  def test_user_inputs_l55; assert_in_epsilon(2.5, worksheet.user_inputs_l55, 0.002); end
  def test_user_inputs_m55; assert_in_epsilon(1.5, worksheet.user_inputs_m55, 0.002); end
  def test_user_inputs_n55; assert_in_epsilon(2.0, worksheet.user_inputs_n55, 0.002); end
  def test_user_inputs_o55; assert_in_epsilon(2.0, worksheet.user_inputs_o55, 0.002); end
  def test_user_inputs_p55; assert_in_epsilon(2.0, worksheet.user_inputs_p55, 0.002); end
  def test_user_inputs_q55; assert_in_epsilon(2.0, worksheet.user_inputs_q55, 0.002); end
  def test_user_inputs_r55; assert_in_epsilon(2.0, worksheet.user_inputs_r55, 0.002); end
  def test_user_inputs_h56; assert_in_epsilon(2.0, worksheet.user_inputs_h56, 0.002); end
  def test_user_inputs_i56; assert_in_epsilon(2.0, worksheet.user_inputs_i56, 0.002); end
  def test_user_inputs_j56; assert_in_epsilon(2.0, worksheet.user_inputs_j56, 0.002); end
  def test_user_inputs_k56; assert_in_epsilon(2.0, worksheet.user_inputs_k56, 0.002); end
  def test_user_inputs_l56; assert_in_epsilon(2.0, worksheet.user_inputs_l56, 0.002); end
  def test_user_inputs_m56; assert_in_epsilon(2.0, worksheet.user_inputs_m56, 0.002); end
  def test_user_inputs_n56; assert_in_epsilon(2.0, worksheet.user_inputs_n56, 0.002); end
  def test_user_inputs_o56; assert_in_epsilon(2.0, worksheet.user_inputs_o56, 0.002); end
  def test_user_inputs_p56; assert_in_epsilon(2.0, worksheet.user_inputs_p56, 0.002); end
  def test_user_inputs_q56; assert_in_epsilon(2.0, worksheet.user_inputs_q56, 0.002); end
  def test_user_inputs_r56; assert_in_epsilon(2.0, worksheet.user_inputs_r56, 0.002); end
  def test_user_inputs_h57; assert_equal("B", worksheet.user_inputs_h57); end
  def test_user_inputs_i57; assert_equal("B", worksheet.user_inputs_i57); end
  def test_user_inputs_j57; assert_equal("B", worksheet.user_inputs_j57); end
  def test_user_inputs_k57; assert_equal("B", worksheet.user_inputs_k57); end
  def test_user_inputs_l57; assert_equal("B", worksheet.user_inputs_l57); end
  def test_user_inputs_m57; assert_equal("B", worksheet.user_inputs_m57); end
  def test_user_inputs_n57; assert_equal("B", worksheet.user_inputs_n57); end
  def test_user_inputs_o57; assert_equal("B", worksheet.user_inputs_o57); end
  def test_user_inputs_p57; assert_equal("B", worksheet.user_inputs_p57); end
  def test_user_inputs_q57; assert_equal("B", worksheet.user_inputs_q57); end
  def test_user_inputs_r57; assert_equal("B", worksheet.user_inputs_r57); end
  def test_user_inputs_h58; assert_equal("US", worksheet.user_inputs_h58); end
  def test_user_inputs_i58; assert_equal("US", worksheet.user_inputs_i58); end
  def test_user_inputs_j58; assert_equal("US", worksheet.user_inputs_j58); end
  def test_user_inputs_k58; assert_equal("US", worksheet.user_inputs_k58); end
  def test_user_inputs_l58; assert_equal("US", worksheet.user_inputs_l58); end
  def test_user_inputs_m58; assert_equal("US", worksheet.user_inputs_m58); end
  def test_user_inputs_n58; assert_equal("US", worksheet.user_inputs_n58); end
  def test_user_inputs_o58; assert_equal("US", worksheet.user_inputs_o58); end
  def test_user_inputs_p58; assert_equal("US", worksheet.user_inputs_p58); end
  def test_user_inputs_q58; assert_equal("US", worksheet.user_inputs_q58); end
  def test_user_inputs_r58; assert_equal("US", worksheet.user_inputs_r58); end
  def test_user_inputs_h59; assert_equal("Point", worksheet.user_inputs_h59); end
  def test_user_inputs_i59; assert_equal("Point", worksheet.user_inputs_i59); end
  def test_user_inputs_j59; assert_equal("Point", worksheet.user_inputs_j59); end
  def test_user_inputs_k59; assert_equal("Point", worksheet.user_inputs_k59); end
  def test_user_inputs_l59; assert_equal("Point", worksheet.user_inputs_l59); end
  def test_user_inputs_m59; assert_equal("Point", worksheet.user_inputs_m59); end
  def test_user_inputs_n59; assert_equal("Point", worksheet.user_inputs_n59); end
  def test_user_inputs_o59; assert_equal("Point", worksheet.user_inputs_o59); end
  def test_user_inputs_p59; assert_equal("Point", worksheet.user_inputs_p59); end
  def test_user_inputs_q59; assert_equal("Point", worksheet.user_inputs_q59); end
  def test_user_inputs_r59; assert_equal("Point", worksheet.user_inputs_r59); end
  def test_user_inputs_h60; assert_equal("Point", worksheet.user_inputs_h60); end
  def test_user_inputs_i60; assert_equal("Point", worksheet.user_inputs_i60); end
  def test_user_inputs_j60; assert_equal("Point", worksheet.user_inputs_j60); end
  def test_user_inputs_k60; assert_equal("Point", worksheet.user_inputs_k60); end
  def test_user_inputs_l60; assert_equal("Point", worksheet.user_inputs_l60); end
  def test_user_inputs_m60; assert_equal("Point", worksheet.user_inputs_m60); end
  def test_user_inputs_n60; assert_equal("Point", worksheet.user_inputs_n60); end
  def test_user_inputs_o60; assert_equal("Point", worksheet.user_inputs_o60); end
  def test_user_inputs_p60; assert_equal("Point", worksheet.user_inputs_p60); end
  def test_user_inputs_q60; assert_equal("Point", worksheet.user_inputs_q60); end
  def test_user_inputs_r60; assert_equal("Point", worksheet.user_inputs_r60); end
  def test_user_inputs_h61; assert_equal("Point", worksheet.user_inputs_h61); end
  def test_user_inputs_i61; assert_equal("Point", worksheet.user_inputs_i61); end
  def test_user_inputs_j61; assert_equal("Point", worksheet.user_inputs_j61); end
  def test_user_inputs_k61; assert_equal("Point", worksheet.user_inputs_k61); end
  def test_user_inputs_l61; assert_equal("Point", worksheet.user_inputs_l61); end
  def test_user_inputs_m61; assert_equal("Point", worksheet.user_inputs_m61); end
  def test_user_inputs_n61; assert_equal("Point", worksheet.user_inputs_n61); end
  def test_user_inputs_o61; assert_equal("Point", worksheet.user_inputs_o61); end
  def test_user_inputs_p61; assert_equal("Point", worksheet.user_inputs_p61); end
  def test_user_inputs_q61; assert_equal("Point", worksheet.user_inputs_q61); end
  def test_user_inputs_r61; assert_equal("Point", worksheet.user_inputs_r61); end
  def test_user_inputs_h62; assert_equal("Point", worksheet.user_inputs_h62); end
  def test_user_inputs_i62; assert_equal("Point", worksheet.user_inputs_i62); end
  def test_user_inputs_j62; assert_equal("Point", worksheet.user_inputs_j62); end
  def test_user_inputs_k62; assert_equal("Point", worksheet.user_inputs_k62); end
  def test_user_inputs_l62; assert_equal("Point", worksheet.user_inputs_l62); end
  def test_user_inputs_m62; assert_equal("Point", worksheet.user_inputs_m62); end
  def test_user_inputs_n62; assert_equal("Point", worksheet.user_inputs_n62); end
  def test_user_inputs_o62; assert_equal("Point", worksheet.user_inputs_o62); end
  def test_user_inputs_p62; assert_equal("Point", worksheet.user_inputs_p62); end
  def test_user_inputs_q62; assert_equal("Point", worksheet.user_inputs_q62); end
  def test_user_inputs_r62; assert_equal("Point", worksheet.user_inputs_r62); end
  def test_user_inputs_h63; assert_equal("Point", worksheet.user_inputs_h63); end
  def test_user_inputs_i63; assert_equal("Point", worksheet.user_inputs_i63); end
  def test_user_inputs_j63; assert_equal("Point", worksheet.user_inputs_j63); end
  def test_user_inputs_k63; assert_equal("Point", worksheet.user_inputs_k63); end
  def test_user_inputs_l63; assert_equal("Point", worksheet.user_inputs_l63); end
  def test_user_inputs_m63; assert_equal("Point", worksheet.user_inputs_m63); end
  def test_user_inputs_n63; assert_equal("Point", worksheet.user_inputs_n63); end
  def test_user_inputs_o63; assert_equal("Point", worksheet.user_inputs_o63); end
  def test_user_inputs_p63; assert_equal("Point", worksheet.user_inputs_p63); end
  def test_user_inputs_q63; assert_equal("Point", worksheet.user_inputs_q63); end
  def test_user_inputs_r63; assert_equal("Point", worksheet.user_inputs_r63); end
  def test_user_inputs_h64; assert_equal("Point", worksheet.user_inputs_h64); end
  def test_user_inputs_i64; assert_equal("Point", worksheet.user_inputs_i64); end
  def test_user_inputs_j64; assert_equal("Point", worksheet.user_inputs_j64); end
  def test_user_inputs_k64; assert_equal("Point", worksheet.user_inputs_k64); end
  def test_user_inputs_l64; assert_equal("Point", worksheet.user_inputs_l64); end
  def test_user_inputs_m64; assert_equal("Point", worksheet.user_inputs_m64); end
  def test_user_inputs_n64; assert_equal("Point", worksheet.user_inputs_n64); end
  def test_user_inputs_o64; assert_equal("Point", worksheet.user_inputs_o64); end
  def test_user_inputs_p64; assert_equal("Point", worksheet.user_inputs_p64); end
  def test_user_inputs_q64; assert_equal("Point", worksheet.user_inputs_q64); end
  def test_user_inputs_r64; assert_equal("Point", worksheet.user_inputs_r64); end
  def test_user_inputs_h65; assert_equal("Point", worksheet.user_inputs_h65); end
  def test_user_inputs_i65; assert_equal("Point", worksheet.user_inputs_i65); end
  def test_user_inputs_j65; assert_equal("Point", worksheet.user_inputs_j65); end
  def test_user_inputs_k65; assert_equal("Point", worksheet.user_inputs_k65); end
  def test_user_inputs_l65; assert_equal("Point", worksheet.user_inputs_l65); end
  def test_user_inputs_m65; assert_equal("Point", worksheet.user_inputs_m65); end
  def test_user_inputs_n65; assert_equal("Point", worksheet.user_inputs_n65); end
  def test_user_inputs_o65; assert_equal("Point", worksheet.user_inputs_o65); end
  def test_user_inputs_p65; assert_equal("Point", worksheet.user_inputs_p65); end
  def test_user_inputs_q65; assert_equal("Point", worksheet.user_inputs_q65); end
  def test_user_inputs_r65; assert_equal("Point", worksheet.user_inputs_r65); end
  def test_user_inputs_g7; assert_in_delta(0.0, (worksheet.user_inputs_g7||0), 0.002); end
  def test_user_inputs_g8; assert_in_delta(0.0, (worksheet.user_inputs_g8||0), 0.002); end
  def test_user_inputs_g9; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing sharply.", worksheet.user_inputs_g9); end
  def test_user_inputs_g10; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing dramatically.", worksheet.user_inputs_g10); end
  def test_user_inputs_g11; assert_equal("In 2050 cars are the dominant mode of travel in urban areas (around 65%).", worksheet.user_inputs_g11); end
  def test_user_inputs_g12; assert_equal("1.4 people (10% lower than 2011).", worksheet.user_inputs_g12); end
  def test_user_inputs_g13; assert_in_delta(0.0, (worksheet.user_inputs_g13||0), 0.002); end
  def test_user_inputs_g14; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.user_inputs_g14); end
  def test_user_inputs_g15; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.user_inputs_g15); end
  def test_user_inputs_g16; assert_equal("The average urban home will have a floor area of 104.5 m<sup>2</sup> by 2050.", worksheet.user_inputs_g16); end
  def test_user_inputs_g17; assert_equal("In 2050 the average urban home will have an inside temperature of 20 &deg;C in winter and 24 &deg;C in summer.", worksheet.user_inputs_g17); end
  def test_user_inputs_g18; assert_equal("In 2050 the average urban household will have 5.4 large appliances (refrigerator, clothes washer and dryer, dishwasher and TV) and 4.1 small appliances (e.g. laptop, DVD player).", worksheet.user_inputs_g18); end
  def test_user_inputs_g19; assert_equal("Through better insulation, thermal performance of urban residential buildings improves by 31% by 2050. The average heat loss coefficient of these buildings will be 11.7 GW/(M ha*&deg;C).", worksheet.user_inputs_g19); end
  def test_user_inputs_g20; assert_equal("In 2050 the heating technology structure will be 2% solid boiler, 13% liquid boiler, 51% gas boiler, 3% heat pumps, 8% electricity heater, 1% solar heater, 3% micro-CHP, 21% district heating. The cooling structure will be 92% air-conditioning, 2% chiller, 6% solar cooling. The cooking technology structure will be 7% solid stoves, 14% liquid stoves, 40% gas stoves, 28% electric stoves, 11% traditional biomass stoves. ", worksheet.user_inputs_g20); end
  def test_user_inputs_g21; assert_equal("Average TV uses has a power of 236W in 2050.", worksheet.user_inputs_g21); end
  def test_user_inputs_g22; assert_equal("Demand for products leads to the production of 14.7Gt of materials, that is: 3.1Gt of crude steel, 0.1Gt of aluminium, 1.7Gt of chemicals, 1.3Gt of paper, 1.3Gt of timber, 1.6Gt of other materials, & 5.5Gt of cement.", worksheet.user_inputs_g22); end
  def test_user_inputs_g23; assert_equal("Product design leads to the reduction of -3% of materials in 2050.", worksheet.user_inputs_g23); end
  def test_user_inputs_g24; assert_equal("Specific emissions for Steel reduce/increase by -5.3% and for Aluminium by -3.3%.", worksheet.user_inputs_g24); end
  def test_user_inputs_g25; assert_equal("Specific emissions for chemicals reduce/increase by 0%", worksheet.user_inputs_g25); end
  def test_user_inputs_g26; assert_equal("Specific emissions for pulp & paper change by -23% and for other materials by -15%.", worksheet.user_inputs_g26); end
  def test_user_inputs_g27; assert_equal("Specific emissions for Steel reduce/increase by -5.3% and for Aluminium by -3.3%.", worksheet.user_inputs_g27); end
  def test_user_inputs_g28; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.user_inputs_g28); end
  def test_user_inputs_g29; assert_equal("In 2050 out of total fossil energy supplied it is 40% of solid, 19% of liquid and 41% of gas power.", worksheet.user_inputs_g29); end
  def test_user_inputs_g30; assert_in_delta(0.0, (worksheet.user_inputs_g30||0), 0.002); end
  def test_user_inputs_g31; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.user_inputs_g31); end
  def test_user_inputs_g32; assert_equal("480 GW of installed nuclear power capacity by 2050.", worksheet.user_inputs_g32); end
  def test_user_inputs_g33; assert_equal("463 GW of installed wind power capacity by 2050.", worksheet.user_inputs_g33); end
  def test_user_inputs_g34; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.user_inputs_g34); end
  def test_user_inputs_g35; assert_equal("34.7 GW of installed marine power capacity by 2050.", worksheet.user_inputs_g35); end
  def test_user_inputs_g36; assert_equal("441 GW of installed solar power capacity by 2050.", worksheet.user_inputs_g36); end
  def test_user_inputs_g37; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.user_inputs_g37); end
  def test_user_inputs_g38; assert_equal("328 GW of electricity storage capacity by 2050.", worksheet.user_inputs_g38); end
  def test_user_inputs_g39; assert_in_delta(0.0, (worksheet.user_inputs_g39||0), 0.002); end
  def test_user_inputs_g40; assert_in_delta(0.0, (worksheet.user_inputs_g40||0), 0.002); end
  def test_user_inputs_g42; assert_in_delta(0.0, (worksheet.user_inputs_g42||0), 0.002); end
  def test_user_inputs_g43; assert_in_delta(0.0, (worksheet.user_inputs_g43||0), 0.002); end
  def test_user_inputs_g44; assert_in_delta(0.0, (worksheet.user_inputs_g44||0), 0.002); end
  def test_user_inputs_g46; assert_in_delta(0.0, (worksheet.user_inputs_g46||0), 0.002); end
  def test_user_inputs_g47; assert_equal("50% liquid", worksheet.user_inputs_g47); end
  def test_user_inputs_g48; assert_equal("54% of surplus land is used for biocrops.", worksheet.user_inputs_g48); end
  def test_user_inputs_g49; assert_equal("Biochar technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g49); end
  def test_user_inputs_g50; assert_equal("Direct air capture technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g50); end
  def test_user_inputs_g51; assert_equal("Ocean fertilisation technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g51); end
  def test_user_inputs_g52; assert_equal("Enhanced weathering (oceanic) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g52); end
  def test_user_inputs_g53; assert_equal("Enhanced weathering (terrestial) technology removes 0.0 GtCO<sub>2</sub>/year by 2050", worksheet.user_inputs_g53); end
  def test_user_inputs_g54; assert_equal("24% of crop energy is wasted after leaving the farm by 2050", worksheet.user_inputs_g54); end
  def test_user_inputs_g55; assert_in_delta(0.0, (worksheet.user_inputs_g55||0), 0.002); end
  def test_user_inputs_g56; assert_in_delta(0.0, (worksheet.user_inputs_g56||0), 0.002); end
  def test_user_inputs_g57; assert_in_delta(0.0, (worksheet.user_inputs_g57||0), 0.002); end
  def test_user_inputs_f7; assert_in_epsilon(3.0, worksheet.user_inputs_f7, 0.002); end
  def test_user_inputs_f8; assert_in_epsilon(3.0, worksheet.user_inputs_f8, 0.002); end
  def test_user_inputs_f9; assert_in_epsilon(4.0, worksheet.user_inputs_f9, 0.002); end
  def test_user_inputs_f10; assert_in_epsilon(4.0, worksheet.user_inputs_f10, 0.002); end
  def test_user_inputs_f11; assert_in_epsilon(4.0, worksheet.user_inputs_f11, 0.002); end
  def test_user_inputs_f12; assert_in_epsilon(4.0, worksheet.user_inputs_f12, 0.002); end
  def test_user_inputs_f13; assert_in_epsilon(4.0, worksheet.user_inputs_f13, 0.002); end
  def test_user_inputs_f14; assert_in_epsilon(4.0, worksheet.user_inputs_f14, 0.002); end
  def test_user_inputs_f15; assert_in_epsilon(4.0, worksheet.user_inputs_f15, 0.002); end
  def test_user_inputs_f16; assert_in_epsilon(4.0, worksheet.user_inputs_f16, 0.002); end
  def test_user_inputs_f17; assert_in_epsilon(4.0, worksheet.user_inputs_f17, 0.002); end
  def test_user_inputs_f18; assert_in_epsilon(4.0, worksheet.user_inputs_f18, 0.002); end
  def test_user_inputs_f19; assert_in_epsilon(4.0, worksheet.user_inputs_f19, 0.002); end
  def test_user_inputs_f20; assert_in_epsilon(4.0, worksheet.user_inputs_f20, 0.002); end
  def test_user_inputs_f21; assert_in_epsilon(4.0, worksheet.user_inputs_f21, 0.002); end
  def test_user_inputs_f22; assert_in_epsilon(4.0, worksheet.user_inputs_f22, 0.002); end
  def test_user_inputs_f23; assert_in_epsilon(4.0, worksheet.user_inputs_f23, 0.002); end
  def test_user_inputs_f24; assert_in_epsilon(4.0, worksheet.user_inputs_f24, 0.002); end
  def test_user_inputs_f25; assert_in_epsilon(4.0, worksheet.user_inputs_f25, 0.002); end
  def test_user_inputs_f26; assert_in_epsilon(4.0, worksheet.user_inputs_f26, 0.002); end
  def test_user_inputs_f27; assert_in_epsilon(4.0, worksheet.user_inputs_f27, 0.002); end
  def test_user_inputs_f28; assert_in_epsilon(4.0, worksheet.user_inputs_f28, 0.002); end
  def test_user_inputs_f29; assert_in_epsilon(4.0, worksheet.user_inputs_f29, 0.002); end
  def test_user_inputs_f30; assert_in_epsilon(4.0, worksheet.user_inputs_f30, 0.002); end
  def test_user_inputs_f31; assert_in_epsilon(4.0, worksheet.user_inputs_f31, 0.002); end
  def test_user_inputs_f32; assert_in_epsilon(4.0, worksheet.user_inputs_f32, 0.002); end
  def test_user_inputs_f33; assert_in_epsilon(4.0, worksheet.user_inputs_f33, 0.002); end
  def test_user_inputs_f34; assert_in_epsilon(4.0, worksheet.user_inputs_f34, 0.002); end
  def test_user_inputs_f35; assert_in_epsilon(4.0, worksheet.user_inputs_f35, 0.002); end
  def test_user_inputs_f36; assert_in_epsilon(4.0, worksheet.user_inputs_f36, 0.002); end
  def test_user_inputs_f37; assert_in_epsilon(4.0, worksheet.user_inputs_f37, 0.002); end
  def test_user_inputs_f38; assert_in_epsilon(4.0, worksheet.user_inputs_f38, 0.002); end
  def test_user_inputs_f39; assert_in_epsilon(4.0, worksheet.user_inputs_f39, 0.002); end
  def test_user_inputs_f40; assert_in_epsilon(4.0, worksheet.user_inputs_f40, 0.002); end
  def test_user_inputs_f41; assert_in_epsilon(4.0, worksheet.user_inputs_f41, 0.002); end
  def test_user_inputs_f42; assert_in_epsilon(4.0, worksheet.user_inputs_f42, 0.002); end
  def test_user_inputs_f43; assert_in_epsilon(4.0, worksheet.user_inputs_f43, 0.002); end
  def test_user_inputs_f44; assert_in_epsilon(4.0, worksheet.user_inputs_f44, 0.002); end
  def test_user_inputs_f45; assert_in_epsilon(4.0, worksheet.user_inputs_f45, 0.002); end
  def test_user_inputs_f46; assert_in_epsilon(4.0, worksheet.user_inputs_f46, 0.002); end
  def test_user_inputs_f47; assert_in_epsilon(4.0, worksheet.user_inputs_f47, 0.002); end
  def test_user_inputs_f48; assert_in_epsilon(4.0, worksheet.user_inputs_f48, 0.002); end
  def test_user_inputs_f49; assert_in_epsilon(4.0, worksheet.user_inputs_f49, 0.002); end
  def test_user_inputs_f50; assert_in_epsilon(4.0, worksheet.user_inputs_f50, 0.002); end
  def test_user_inputs_f51; assert_in_epsilon(4.0, worksheet.user_inputs_f51, 0.002); end
  def test_user_inputs_f52; assert_in_epsilon(4.0, worksheet.user_inputs_f52, 0.002); end
  def test_user_inputs_f53; assert_in_epsilon(4.0, worksheet.user_inputs_f53, 0.002); end
  def test_user_inputs_f54; assert_in_epsilon(4.0, worksheet.user_inputs_f54, 0.002); end
  def test_user_inputs_f55; assert_in_epsilon(4.0, worksheet.user_inputs_f55, 0.002); end
  def test_user_inputs_f56; assert_in_epsilon(4.0, worksheet.user_inputs_f56, 0.002); end
  def test_user_inputs_f57; assert_equal("B", worksheet.user_inputs_f57); end
  def test_user_inputs_d7; assert_equal("Global population", worksheet.user_inputs_d7); end
  def test_user_inputs_d8; assert_equal("Urbanisation", worksheet.user_inputs_d8); end
  def test_user_inputs_d9; assert_equal("Passenger distance", worksheet.user_inputs_d9); end
  def test_user_inputs_d10; assert_equal("Freight distance", worksheet.user_inputs_d10); end
  def test_user_inputs_d11; assert_equal("Mode", worksheet.user_inputs_d11); end
  def test_user_inputs_d12; assert_equal("Occupancy and load", worksheet.user_inputs_d12); end
  def test_user_inputs_d13; assert_equal("Car own or hire ", worksheet.user_inputs_d13); end
  def test_user_inputs_d14; assert_equal("Efficiency", worksheet.user_inputs_d14); end
  def test_user_inputs_d15; assert_equal("Electric and hydrogen", worksheet.user_inputs_d15); end
  def test_user_inputs_d16; assert_equal("Building size", worksheet.user_inputs_d16); end
  def test_user_inputs_d17; assert_equal("Temperature & hot water use", worksheet.user_inputs_d17); end
  def test_user_inputs_d18; assert_equal("Lighting, cooking & appliance use", worksheet.user_inputs_d18); end
  def test_user_inputs_d19; assert_equal("Building insulation", worksheet.user_inputs_d19); end
  def test_user_inputs_d20; assert_equal("Temperature, cooking & lighting technology", worksheet.user_inputs_d20); end
  def test_user_inputs_d21; assert_equal("Appliance efficiency", worksheet.user_inputs_d21); end
  def test_user_inputs_d22; assert_equal("Product lifespan & demand", worksheet.user_inputs_d22); end
  def test_user_inputs_d23; assert_equal("Design, material switch & recycling", worksheet.user_inputs_d23); end
  def test_user_inputs_d24; assert_equal("Iron, steel & aluminium", worksheet.user_inputs_d24); end
  def test_user_inputs_d25; assert_equal("Chemicals", worksheet.user_inputs_d25); end
  def test_user_inputs_d26; assert_equal("Paper and other", worksheet.user_inputs_d26); end
  def test_user_inputs_d27; assert_equal("Cement", worksheet.user_inputs_d27); end
  def test_user_inputs_d28; assert_equal("Carbon capture and storage (ind.)", worksheet.user_inputs_d28); end
  def test_user_inputs_d29; assert_equal("Coal / oil / gas", worksheet.user_inputs_d29); end
  def test_user_inputs_d30; assert_equal("Fossil fuel efficiency", worksheet.user_inputs_d30); end
  def test_user_inputs_d31; assert_equal("Carbon capture and storage (power)", worksheet.user_inputs_d31); end
  def test_user_inputs_d32; assert_equal("Nuclear", worksheet.user_inputs_d32); end
  def test_user_inputs_d33; assert_equal("Wind", worksheet.user_inputs_d33); end
  def test_user_inputs_d34; assert_equal("Hydroelectric", worksheet.user_inputs_d34); end
  def test_user_inputs_d35; assert_equal("Marine", worksheet.user_inputs_d35); end
  def test_user_inputs_d36; assert_equal("Solar", worksheet.user_inputs_d36); end
  def test_user_inputs_d37; assert_equal("Geothermal", worksheet.user_inputs_d37); end
  def test_user_inputs_d38; assert_equal("Storage and demand shifting", worksheet.user_inputs_d38); end
  def test_user_inputs_d39; assert_equal("Calories consumed", worksheet.user_inputs_d39); end
  def test_user_inputs_d40; assert_equal("Quantity of meat", worksheet.user_inputs_d40); end
  def test_user_inputs_d41; assert_equal("Type of meat", worksheet.user_inputs_d41); end
  def test_user_inputs_d42; assert_equal("Crop yields", worksheet.user_inputs_d42); end
  def test_user_inputs_d43; assert_equal("Land-use efficiency ", worksheet.user_inputs_d43); end
  def test_user_inputs_d44; assert_equal("Livestock (grains/residues fed)", worksheet.user_inputs_d44); end
  def test_user_inputs_d45; assert_equal("Livestock (pasture fed)", worksheet.user_inputs_d45); end
  def test_user_inputs_d46; assert_equal("Bioenergy yields", worksheet.user_inputs_d46); end
  def test_user_inputs_d47; assert_equal("Solid or liquid", worksheet.user_inputs_d47); end
  def test_user_inputs_d48; assert_equal("Surplus land (forest & bioenergy) ", worksheet.user_inputs_d48); end
  def test_user_inputs_d49; assert_equal("Biochar", worksheet.user_inputs_d49); end
  def test_user_inputs_d50; assert_equal("Direct air capture", worksheet.user_inputs_d50); end
  def test_user_inputs_d51; assert_equal("Ocean fertilisation", worksheet.user_inputs_d51); end
  def test_user_inputs_d52; assert_equal("Enhanced weathering (oceanic)", worksheet.user_inputs_d52); end
  def test_user_inputs_d53; assert_equal("Enhanced weathering (terrestial)", worksheet.user_inputs_d53); end
  def test_user_inputs_d54; assert_equal("Wastes and residues", worksheet.user_inputs_d54); end
  def test_user_inputs_d55; assert_equal("Emissions trajectory", worksheet.user_inputs_d55); end
  def test_user_inputs_d56; assert_equal("Atmospheric CO2 fraction", worksheet.user_inputs_d56); end
  def test_user_inputs_d57; assert_equal("Confidence in climate models", worksheet.user_inputs_d57); end
  def test_user_inputs_d58; assert_equal("Region factor", worksheet.user_inputs_d58); end
  def test_user_inputs_d59; assert_equal("Coal", worksheet.user_inputs_d59); end
  def test_user_inputs_d60; assert_equal("Oil", worksheet.user_inputs_d60); end
  def test_user_inputs_d61; assert_equal("Gas", worksheet.user_inputs_d61); end
  def test_user_inputs_d62; assert_equal("Solid bioenergy", worksheet.user_inputs_d62); end
  def test_user_inputs_d63; assert_equal("Liquid bioenergy", worksheet.user_inputs_d63); end
  def test_user_inputs_d64; assert_equal("Gaseous bioenergy", worksheet.user_inputs_d64); end
  def test_user_inputs_d65; assert_equal("Hydrogen", worksheet.user_inputs_d65); end
  def test_outputs_lifestyle_e8; assert_equal("2011", worksheet.outputs_lifestyle_e8); end
  def test_outputs_lifestyle_f8; assert_equal("2011", worksheet.outputs_lifestyle_f8); end
  def test_outputs_lifestyle_g8; assert_in_epsilon(2011.0, worksheet.outputs_lifestyle_g8, 0.002); end
  def test_outputs_lifestyle_h8; assert_equal("2050", worksheet.outputs_lifestyle_h8); end
  def test_outputs_lifestyle_i8; assert_equal("2050", worksheet.outputs_lifestyle_i8); end
  def test_outputs_lifestyle_j8; assert_in_epsilon(2050.0, worksheet.outputs_lifestyle_j8, 0.002); end
  def test_outputs_lifestyle_e9; assert_equal("Urban", worksheet.outputs_lifestyle_e9); end
  def test_outputs_lifestyle_f9; assert_equal("Rural", worksheet.outputs_lifestyle_f9); end
  def test_outputs_lifestyle_g9; assert_equal("2011 weighted average", worksheet.outputs_lifestyle_g9); end
  def test_outputs_lifestyle_h9; assert_equal("Urban", worksheet.outputs_lifestyle_h9); end
  def test_outputs_lifestyle_i9; assert_equal("Rural", worksheet.outputs_lifestyle_i9); end
  def test_outputs_lifestyle_j9; assert_equal("2050 weighted average", worksheet.outputs_lifestyle_j9); end
  def test_outputs_lifestyle_d10; assert_equal("Passenger km/head", worksheet.outputs_lifestyle_d10); end
  def test_outputs_lifestyle_e10; assert_in_epsilon(9187.0, worksheet.outputs_lifestyle_e10, 0.002); end
  def test_outputs_lifestyle_f10; assert_in_epsilon(5653.0, worksheet.outputs_lifestyle_f10, 0.002); end
  def test_outputs_lifestyle_g10; assert_in_epsilon(7495.0, worksheet.outputs_lifestyle_g10, 0.002); end
  def test_outputs_lifestyle_h10; assert_in_epsilon(12214.0, worksheet.outputs_lifestyle_h10, 0.002); end
  def test_outputs_lifestyle_i10; assert_in_epsilon(9339.0, worksheet.outputs_lifestyle_i10, 0.002); end
  def test_outputs_lifestyle_j10; assert_in_epsilon(11247.0, worksheet.outputs_lifestyle_j10, 0.002); end
  def test_outputs_lifestyle_d11; assert_equal("% of total passenger km using cars", worksheet.outputs_lifestyle_d11); end
  def test_outputs_lifestyle_e11; assert_in_delta(0.3838396807373519, worksheet.outputs_lifestyle_e11, 0.002); end
  def test_outputs_lifestyle_f11; assert_in_delta(0.451433121898344, worksheet.outputs_lifestyle_f11, 0.002); end
  def test_outputs_lifestyle_g11; assert_in_delta(0.41619477253448944, worksheet.outputs_lifestyle_g11, 0.002); end
  def test_outputs_lifestyle_h11; assert_in_delta(0.5123468622598916, worksheet.outputs_lifestyle_h11, 0.002); end
  def test_outputs_lifestyle_i11; assert_in_delta(0.5686837301502454, worksheet.outputs_lifestyle_i11, 0.002); end
  def test_outputs_lifestyle_j11; assert_in_delta(0.531295019157935, worksheet.outputs_lifestyle_j11, 0.002); end
  def test_outputs_lifestyle_d13; assert_equal("Number of appliances per household", worksheet.outputs_lifestyle_d13); end
  def test_outputs_lifestyle_e13; assert_in_epsilon(5.958364024436915, worksheet.outputs_lifestyle_e13, 0.002); end
  def test_outputs_lifestyle_f13; assert_in_epsilon(3.4791820122184576, worksheet.outputs_lifestyle_f13, 0.002); end
  def test_outputs_lifestyle_g13; assert_in_epsilon(5.054404480386185, worksheet.outputs_lifestyle_g13, 0.002); end
  def test_outputs_lifestyle_h13; assert_in_epsilon(9.558977867093672, worksheet.outputs_lifestyle_h13, 0.002); end
  def test_outputs_lifestyle_i13; assert_in_epsilon(7.510030613072004, worksheet.outputs_lifestyle_i13, 0.002); end
  def test_outputs_lifestyle_j13; assert_in_epsilon(9.063967329391712, worksheet.outputs_lifestyle_j13, 0.002); end
  def test_outputs_lifestyle_d14; assert_equal("Building temperature in warm months", worksheet.outputs_lifestyle_d14); end
  def test_outputs_lifestyle_e14; assert_in_epsilon(26.5, worksheet.outputs_lifestyle_e14, 0.002); end
  def test_outputs_lifestyle_f14; assert_in_epsilon(29.0, worksheet.outputs_lifestyle_f14, 0.002); end
  def test_outputs_lifestyle_g14; assert_in_epsilon(27.411550200424607, worksheet.outputs_lifestyle_g14, 0.002); end
  def test_outputs_lifestyle_h14; assert_in_epsilon(24.4, worksheet.outputs_lifestyle_h14, 0.002); end
  def test_outputs_lifestyle_i14; assert_in_epsilon(24.4, worksheet.outputs_lifestyle_i14, 0.002); end
  def test_outputs_lifestyle_j14; assert_in_epsilon(24.4, worksheet.outputs_lifestyle_j14, 0.002); end
  def test_outputs_lifestyle_d15; assert_equal("Building temp in cold months", worksheet.outputs_lifestyle_d15); end
  def test_outputs_lifestyle_e15; assert_in_epsilon(17.5, worksheet.outputs_lifestyle_e15, 0.002); end
  def test_outputs_lifestyle_f15; assert_in_epsilon(13.0, worksheet.outputs_lifestyle_f15, 0.002); end
  def test_outputs_lifestyle_g15; assert_in_epsilon(15.8592096392357, worksheet.outputs_lifestyle_g15, 0.002); end
  def test_outputs_lifestyle_h15; assert_in_epsilon(19.6, worksheet.outputs_lifestyle_h15, 0.002); end
  def test_outputs_lifestyle_i15; assert_in_epsilon(16.6, worksheet.outputs_lifestyle_i15, 0.002); end
  def test_outputs_lifestyle_j15; assert_in_epsilon(18.875222136543016, worksheet.outputs_lifestyle_j15, 0.002); end
  def test_outputs_lifestyle_d17; assert_equal("Building insulation (GW / (M ha*℃)", worksheet.outputs_lifestyle_d17); end
  def test_outputs_lifestyle_e17; assert_in_epsilon(16.9, worksheet.outputs_lifestyle_e17, 0.002); end
  def test_outputs_lifestyle_f17; assert_in_epsilon(18.700000000000003, worksheet.outputs_lifestyle_f17, 0.002); end
  def test_outputs_lifestyle_g17; assert_in_epsilon(17.55631614430572, worksheet.outputs_lifestyle_g17, 0.002); end
  def test_outputs_lifestyle_h17; assert_in_epsilon(11.7, worksheet.outputs_lifestyle_h17, 0.002); end
  def test_outputs_lifestyle_i17; assert_in_epsilon(11.7, worksheet.outputs_lifestyle_i17, 0.002); end
  def test_outputs_lifestyle_j17; assert_in_epsilon(11.7, worksheet.outputs_lifestyle_j17, 0.002); end
  def test_outputs_lifestyle_d18; assert_equal("Building size (in metres squared)", worksheet.outputs_lifestyle_d18); end
  def test_outputs_lifestyle_e18; assert_in_epsilon(92.0, worksheet.outputs_lifestyle_e18, 0.002); end
  def test_outputs_lifestyle_f18; assert_in_epsilon(78.0, worksheet.outputs_lifestyle_f18, 0.002); end
  def test_outputs_lifestyle_g18; assert_in_epsilon(86.89531887762217, worksheet.outputs_lifestyle_g18, 0.002); end
  def test_outputs_lifestyle_h18; assert_in_epsilon(104.49999999999999, worksheet.outputs_lifestyle_h18, 0.002); end
  def test_outputs_lifestyle_i18; assert_in_epsilon(94.50000000000001, worksheet.outputs_lifestyle_i18, 0.002); end
  def test_outputs_lifestyle_j18; assert_in_epsilon(102.0840737884767, worksheet.outputs_lifestyle_j18, 0.002); end
  def test_outputs_lifestyle_e23; assert_equal("webtool.lifestyle", worksheet.outputs_lifestyle_e23); end
  def test_outputs_lifestyle_h23; assert_equal("User’s pathway", worksheet.outputs_lifestyle_h23); end
  def test_outputs_lifestyle_e25; assert_equal("2011", worksheet.outputs_lifestyle_e25); end
  def test_outputs_lifestyle_f25; assert_equal("2011", worksheet.outputs_lifestyle_f25); end
  def test_outputs_lifestyle_g25; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_g25); end
  def test_outputs_lifestyle_h25; assert_equal("2050", worksheet.outputs_lifestyle_h25); end
  def test_outputs_lifestyle_i25; assert_equal("2050", worksheet.outputs_lifestyle_i25); end
  def test_outputs_lifestyle_e26; assert_equal("Urban", worksheet.outputs_lifestyle_e26); end
  def test_outputs_lifestyle_f26; assert_equal("Rural", worksheet.outputs_lifestyle_f26); end
  def test_outputs_lifestyle_h26; assert_equal("Urban", worksheet.outputs_lifestyle_h26); end
  def test_outputs_lifestyle_i26; assert_equal("Rural", worksheet.outputs_lifestyle_i26); end
  def test_outputs_lifestyle_j26; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_j26); end
  def test_outputs_lifestyle_d27; assert_equal("Passenger km (millions)", worksheet.outputs_lifestyle_d27); end
  def test_outputs_lifestyle_e27; assert_in_epsilon(33365814.006759763, worksheet.outputs_lifestyle_e27, 0.002); end
  def test_outputs_lifestyle_f27; assert_in_epsilon(18849796.265677366, worksheet.outputs_lifestyle_f27, 0.002); end
  def test_outputs_lifestyle_g27; assert_in_epsilon(52215610.272437125, worksheet.outputs_lifestyle_g27, 0.002); end
  def test_outputs_lifestyle_h27; assert_in_epsilon(77419011.91289854, worksheet.outputs_lifestyle_h27, 0.002); end
  def test_outputs_lifestyle_i27; assert_in_epsilon(30001131.586422678, worksheet.outputs_lifestyle_i27, 0.002); end
  def test_outputs_lifestyle_j27; assert_in_epsilon(107420143.49932122, worksheet.outputs_lifestyle_j27, 0.002); end
  def test_outputs_lifestyle_d28; assert_equal("Total households", worksheet.outputs_lifestyle_d28); end
  def test_outputs_lifestyle_e28; assert_in_epsilon(1452719862.6209612, worksheet.outputs_lifestyle_e28, 0.002); end
  def test_outputs_lifestyle_f28; assert_in_epsilon(833660013.8618993, worksheet.outputs_lifestyle_f28, 0.002); end
  def test_outputs_lifestyle_g28; assert_in_epsilon(2286379876.4828606, worksheet.outputs_lifestyle_g28, 0.002); end
  def test_outputs_lifestyle_h28; assert_in_epsilon(2881187074.6996784, worksheet.outputs_lifestyle_h28, 0.002); end
  def test_outputs_lifestyle_i28; assert_in_epsilon(917809553.0459162, worksheet.outputs_lifestyle_i28, 0.002); end
  def test_outputs_lifestyle_j28; assert_in_epsilon(3798996627.7455945, worksheet.outputs_lifestyle_j28, 0.002); end
  def test_outputs_lifestyle_d29; assert_equal("% of households in urban/rural areas", worksheet.outputs_lifestyle_d29); end
  def test_outputs_lifestyle_e29; assert_in_delta(0.6353799198301556, worksheet.outputs_lifestyle_e29, 0.002); end
  def test_outputs_lifestyle_f29; assert_in_delta(0.36462008016984426, worksheet.outputs_lifestyle_f29, 0.002); end
  def test_outputs_lifestyle_g29; assert_in_delta(0.9999999999999999, worksheet.outputs_lifestyle_g29, 0.002); end
  def test_outputs_lifestyle_h29; assert_in_delta(0.7584073788476712, worksheet.outputs_lifestyle_h29, 0.002); end
  def test_outputs_lifestyle_i29; assert_in_delta(0.24159262115232882, worksheet.outputs_lifestyle_i29, 0.002); end
  def test_outputs_lifestyle_j29; assert_in_delta(1.0, worksheet.outputs_lifestyle_j29, 0.002); end
  def test_outputs_lifestyle_d30; assert_equal("Total population", worksheet.outputs_lifestyle_d30); end
  def test_outputs_lifestyle_e30; assert_in_epsilon(3631799656.552403, worksheet.outputs_lifestyle_e30, 0.002); end
  def test_outputs_lifestyle_f30; assert_in_epsilon(3334640055.447597, worksheet.outputs_lifestyle_f30, 0.002); end
  def test_outputs_lifestyle_g30; assert_in_epsilon(6966439712.0, worksheet.outputs_lifestyle_g30, 0.002); end
  def test_outputs_lifestyle_h30; assert_in_epsilon(6338611564.3392935, worksheet.outputs_lifestyle_h30, 0.002); end
  def test_outputs_lifestyle_i30; assert_in_epsilon(3212333435.6607065, worksheet.outputs_lifestyle_i30, 0.002); end
  def test_outputs_lifestyle_j30; assert_in_epsilon(9550945000.0, worksheet.outputs_lifestyle_j30, 0.002); end
  def test_outputs_lifestyle_d31; assert_equal("% of population in urban/rural areas", worksheet.outputs_lifestyle_d31); end
  def test_outputs_lifestyle_e31; assert_in_delta(0.5213279389034929, worksheet.outputs_lifestyle_e31, 0.002); end
  def test_outputs_lifestyle_f31; assert_in_delta(0.47867206109650706, worksheet.outputs_lifestyle_f31, 0.002); end
  def test_outputs_lifestyle_g31; assert_in_delta(1.0, worksheet.outputs_lifestyle_g31, 0.002); end
  def test_outputs_lifestyle_h31; assert_in_delta(0.663663288223238, worksheet.outputs_lifestyle_h31, 0.002); end
  def test_outputs_lifestyle_i31; assert_in_delta(0.33633671177676205, worksheet.outputs_lifestyle_i31, 0.002); end
  def test_outputs_lifestyle_j31; assert_in_delta(1.0, worksheet.outputs_lifestyle_j31, 0.002); end
  def test_front_page_y4; assert_equal("3.78.1", worksheet.front_page_y4); end
  def test_outputs_energy_flows_c8; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c8); end
  def test_outputs_energy_flows_d8; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d8); end
  def test_outputs_energy_flows_e8; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e8); end
  def test_outputs_energy_flows_f8; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f8); end
  def test_outputs_energy_flows_g8; assert_equal("Technology code", worksheet.outputs_energy_flows_g8); end
  def test_outputs_energy_flows_h8; assert_equal("Technology description", worksheet.outputs_energy_flows_h8); end
  def test_outputs_energy_flows_i8; assert_equal("Energy code", worksheet.outputs_energy_flows_i8); end
  def test_outputs_energy_flows_j8; assert_equal("Description", worksheet.outputs_energy_flows_j8); end
  def test_outputs_energy_flows_k8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k8); end
  def test_outputs_energy_flows_l8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l8); end
  def test_outputs_energy_flows_m8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m8); end
  def test_outputs_energy_flows_v8; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v8, 0.002); end
  def test_outputs_energy_flows_w8; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w8, 0.002); end
  def test_outputs_energy_flows_x8; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x8, 0.002); end
  def test_outputs_energy_flows_y8; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y8, 0.002); end
  def test_outputs_energy_flows_z8; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z8, 0.002); end
  def test_outputs_energy_flows_aa8; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa8, 0.002); end
  def test_outputs_energy_flows_ab8; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab8, 0.002); end
  def test_outputs_energy_flows_ac8; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac8, 0.002); end
  def test_outputs_energy_flows_ad8; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad8, 0.002); end
  def test_outputs_energy_flows_c10; assert_equal("R.01", worksheet.outputs_energy_flows_c10); end
  def test_outputs_energy_flows_d10; assert_equal("Global Solar", worksheet.outputs_energy_flows_d10); end
  def test_outputs_energy_flows_e10; assert_equal("n/a", worksheet.outputs_energy_flows_e10); end
  def test_outputs_energy_flows_f10; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f10); end
  def test_outputs_energy_flows_g10; assert_equal("n/a", worksheet.outputs_energy_flows_g10); end
  def test_outputs_energy_flows_h10; assert_equal("solar", worksheet.outputs_energy_flows_h10); end
  def test_outputs_energy_flows_i10; assert_equal("E.02", worksheet.outputs_energy_flows_i10); end
  def test_outputs_energy_flows_j10; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j10); end
  def test_outputs_energy_flows_v10; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v10, 0.002); end
  def test_outputs_energy_flows_w10; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w10, 0.002); end
  def test_outputs_energy_flows_x10; assert_in_delta(0.8540685748799999, worksheet.outputs_energy_flows_x10, 0.002); end
  def test_outputs_energy_flows_y10; assert_in_delta(0.9525630002399997, worksheet.outputs_energy_flows_y10, 0.002); end
  def test_outputs_energy_flows_z10; assert_in_epsilon(1.2794460883199998, worksheet.outputs_energy_flows_z10, 0.002); end
  def test_outputs_energy_flows_aa10; assert_in_epsilon(1.4798620943999996, worksheet.outputs_energy_flows_aa10, 0.002); end
  def test_outputs_energy_flows_ab10; assert_in_epsilon(1.6179707750399994, worksheet.outputs_energy_flows_ab10, 0.002); end
  def test_outputs_energy_flows_ac10; assert_in_epsilon(2.7839641356, worksheet.outputs_energy_flows_ac10, 0.002); end
  def test_outputs_energy_flows_ad10; assert_in_epsilon(3.8454671267999982, worksheet.outputs_energy_flows_ad10, 0.002); end
  def test_outputs_energy_flows_c12; assert_equal("R.01", worksheet.outputs_energy_flows_c12); end
  def test_outputs_energy_flows_d12; assert_equal("Global Solar", worksheet.outputs_energy_flows_d12); end
  def test_outputs_energy_flows_e12; assert_equal("L.01", worksheet.outputs_energy_flows_e12); end
  def test_outputs_energy_flows_f12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f12); end
  def test_outputs_energy_flows_g12; assert_equal("n/a", worksheet.outputs_energy_flows_g12); end
  def test_outputs_energy_flows_h12; assert_equal("solar", worksheet.outputs_energy_flows_h12); end
  def test_outputs_energy_flows_i12; assert_equal("L.01", worksheet.outputs_energy_flows_i12); end
  def test_outputs_energy_flows_j12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j12); end
  def test_outputs_energy_flows_v12; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v12, 0.002); end
  def test_outputs_energy_flows_w12; assert_in_delta(0.10222882078475562, worksheet.outputs_energy_flows_w12, 0.002); end
  def test_outputs_energy_flows_x12; assert_in_delta(0.6496021227566944, worksheet.outputs_energy_flows_x12, 0.002); end
  def test_outputs_energy_flows_y12; assert_in_delta(0.9377327147182917, worksheet.outputs_energy_flows_y12, 0.002); end
  def test_outputs_energy_flows_z12; assert_in_epsilon(1.2399989497774486, worksheet.outputs_energy_flows_z12, 0.002); end
  def test_outputs_energy_flows_aa12; assert_in_epsilon(1.4151415461711485, worksheet.outputs_energy_flows_aa12, 0.002); end
  def test_outputs_energy_flows_ab12; assert_in_epsilon(1.3516736881434415, worksheet.outputs_energy_flows_ab12, 0.002); end
  def test_outputs_energy_flows_ac12; assert_in_epsilon(2.1019364453115243, worksheet.outputs_energy_flows_ac12, 0.002); end
  def test_outputs_energy_flows_ad12; assert_in_epsilon(2.6089339951097914, worksheet.outputs_energy_flows_ad12, 0.002); end
  def test_outputs_energy_flows_c14; assert_equal("R.01", worksheet.outputs_energy_flows_c14); end
  def test_outputs_energy_flows_d14; assert_equal("Global Solar", worksheet.outputs_energy_flows_d14); end
  def test_outputs_energy_flows_e14; assert_equal("N/A", worksheet.outputs_energy_flows_e14); end
  def test_outputs_energy_flows_f14; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f14); end
  def test_outputs_energy_flows_g14; assert_equal("n/a", worksheet.outputs_energy_flows_g14); end
  def test_outputs_energy_flows_h14; assert_equal("Global buildings", worksheet.outputs_energy_flows_h14); end
  def test_outputs_energy_flows_i14; assert_equal("N/A", worksheet.outputs_energy_flows_i14); end
  def test_outputs_energy_flows_j14; assert_equal("Heating, cooling and hot water", worksheet.outputs_energy_flows_j14); end
  def test_outputs_energy_flows_v14; assert_in_epsilon(1.402397457347961, worksheet.outputs_energy_flows_v14, 0.002); end
  def test_outputs_energy_flows_w14; assert_in_epsilon(1.500109021216029, worksheet.outputs_energy_flows_w14, 0.002); end
  def test_outputs_energy_flows_x14; assert_in_epsilon(1.7166942633792641, worksheet.outputs_energy_flows_x14, 0.002); end
  def test_outputs_energy_flows_y14; assert_in_epsilon(1.9540944232515196, worksheet.outputs_energy_flows_y14, 0.002); end
  def test_outputs_energy_flows_z14; assert_in_epsilon(2.205915575027326, worksheet.outputs_energy_flows_z14, 0.002); end
  def test_outputs_energy_flows_aa14; assert_in_epsilon(2.4624078115015773, worksheet.outputs_energy_flows_aa14, 0.002); end
  def test_outputs_energy_flows_ab14; assert_in_epsilon(2.730667030941664, worksheet.outputs_energy_flows_ab14, 0.002); end
  def test_outputs_energy_flows_ac14; assert_in_epsilon(2.9984907336209283, worksheet.outputs_energy_flows_ac14, 0.002); end
  def test_outputs_energy_flows_ad14; assert_in_epsilon(3.271530074113727, worksheet.outputs_energy_flows_ad14, 0.002); end
  def test_outputs_energy_flows_c16; assert_equal("R.02", worksheet.outputs_energy_flows_c16); end
  def test_outputs_energy_flows_d16; assert_equal("Global Wind", worksheet.outputs_energy_flows_d16); end
  def test_outputs_energy_flows_e16; assert_equal("n/a", worksheet.outputs_energy_flows_e16); end
  def test_outputs_energy_flows_f16; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f16); end
  def test_outputs_energy_flows_h16; assert_equal("wind", worksheet.outputs_energy_flows_h16); end
  def test_outputs_energy_flows_i16; assert_equal("E.02", worksheet.outputs_energy_flows_i16); end
  def test_outputs_energy_flows_j16; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j16); end
  def test_outputs_energy_flows_v16; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v16, 0.002); end
  def test_outputs_energy_flows_w16; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w16, 0.002); end
  def test_outputs_energy_flows_x16; assert_in_epsilon(2.9258313263999995, worksheet.outputs_energy_flows_x16, 0.002); end
  def test_outputs_energy_flows_y16; assert_in_epsilon(3.1616928287999997, worksheet.outputs_energy_flows_y16, 0.002); end
  def test_outputs_energy_flows_z16; assert_in_epsilon(2.8244683152, worksheet.outputs_energy_flows_z16, 0.002); end
  def test_outputs_energy_flows_aa16; assert_in_epsilon(1.8673263071999997, worksheet.outputs_energy_flows_aa16, 0.002); end
  def test_outputs_energy_flows_ab16; assert_in_epsilon(2.5776247679999993, worksheet.outputs_energy_flows_ab16, 0.002); end
  def test_outputs_energy_flows_ac16; assert_in_epsilon(3.7875431519999996, worksheet.outputs_energy_flows_ac16, 0.002); end
  def test_outputs_energy_flows_ad16; assert_in_epsilon(4.674311711999999, worksheet.outputs_energy_flows_ad16, 0.002); end
  def test_outputs_energy_flows_c18; assert_equal("R.03", worksheet.outputs_energy_flows_c18); end
  def test_outputs_energy_flows_d18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_d18); end
  def test_outputs_energy_flows_e18; assert_equal("n/a", worksheet.outputs_energy_flows_e18); end
  def test_outputs_energy_flows_f18; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f18); end
  def test_outputs_energy_flows_g18; assert_equal("tidal.elec", worksheet.outputs_energy_flows_g18); end
  def test_outputs_energy_flows_h18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_h18); end
  def test_outputs_energy_flows_i18; assert_equal("E.02", worksheet.outputs_energy_flows_i18); end
  def test_outputs_energy_flows_j18; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j18); end
  def test_outputs_energy_flows_v18; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v18, 0.002); end
  def test_outputs_energy_flows_w18; assert_in_delta(0.003786912, worksheet.outputs_energy_flows_w18, 0.002); end
  def test_outputs_energy_flows_x18; assert_in_delta(0.0049229856, worksheet.outputs_energy_flows_x18, 0.002); end
  def test_outputs_energy_flows_y18; assert_in_delta(0.011991888000000001, worksheet.outputs_energy_flows_y18, 0.002); end
  def test_outputs_energy_flows_z18; assert_in_delta(0.024457140000000002, worksheet.outputs_energy_flows_z18, 0.002); end
  def test_outputs_energy_flows_aa18; assert_in_delta(0.03629124, worksheet.outputs_energy_flows_aa18, 0.002); end
  def test_outputs_energy_flows_ab18; assert_in_delta(0.06627096, worksheet.outputs_energy_flows_ab18, 0.002); end
  def test_outputs_energy_flows_ac18; assert_in_delta(0.07952515200000002, worksheet.outputs_energy_flows_ac18, 0.002); end
  def test_outputs_energy_flows_ad18; assert_in_delta(0.09940644000000001, worksheet.outputs_energy_flows_ad18, 0.002); end
  def test_outputs_energy_flows_c20; assert_equal("R.04", worksheet.outputs_energy_flows_c20); end
  def test_outputs_energy_flows_d20; assert_equal("Global Wave", worksheet.outputs_energy_flows_d20); end
  def test_outputs_energy_flows_e20; assert_equal("n/a", worksheet.outputs_energy_flows_e20); end
  def test_outputs_energy_flows_f20; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f20); end
  def test_outputs_energy_flows_g20; assert_equal("wave.elec", worksheet.outputs_energy_flows_g20); end
  def test_outputs_energy_flows_h20; assert_equal("Global Wave", worksheet.outputs_energy_flows_h20); end
  def test_outputs_energy_flows_i20; assert_equal("E.02", worksheet.outputs_energy_flows_i20); end
  def test_outputs_energy_flows_j20; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j20); end
  def test_outputs_energy_flows_v20; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v20||0), 0.002); end
  def test_outputs_energy_flows_w20; assert_in_delta(0.00037869119999999997, worksheet.outputs_energy_flows_w20, 0.002); end
  def test_outputs_energy_flows_x20; assert_in_delta(0.00140115744, worksheet.outputs_energy_flows_x20, 0.002); end
  def test_outputs_energy_flows_y20; assert_in_delta(0.011802542400000003, worksheet.outputs_energy_flows_y20, 0.002); end
  def test_outputs_energy_flows_z20; assert_in_delta(0.043391700000000005, worksheet.outputs_energy_flows_z20, 0.002); end
  def test_outputs_energy_flows_aa20; assert_in_delta(0.07494930000000001, worksheet.outputs_energy_flows_aa20, 0.002); end
  def test_outputs_energy_flows_ab20; assert_in_delta(0.11202948000000003, worksheet.outputs_energy_flows_ab20, 0.002); end
  def test_outputs_energy_flows_ac20; assert_in_delta(0.19123905600000002, worksheet.outputs_energy_flows_ac20, 0.002); end
  def test_outputs_energy_flows_ad20; assert_in_delta(0.22910817600000002, worksheet.outputs_energy_flows_ad20, 0.002); end
  def test_outputs_energy_flows_c22; assert_equal("R.05", worksheet.outputs_energy_flows_c22); end
  def test_outputs_energy_flows_d22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d22); end
  def test_outputs_energy_flows_e22; assert_equal("n/a", worksheet.outputs_energy_flows_e22); end
  def test_outputs_energy_flows_f22; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f22); end
  def test_outputs_energy_flows_g22; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g22); end
  def test_outputs_energy_flows_h22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h22); end
  def test_outputs_energy_flows_i22; assert_equal("E.02", worksheet.outputs_energy_flows_i22); end
  def test_outputs_energy_flows_j22; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j22); end
  def test_outputs_energy_flows_v22; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v22, 0.002); end
  def test_outputs_energy_flows_w22; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w22, 0.002); end
  def test_outputs_energy_flows_x22; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x22, 0.002); end
  def test_outputs_energy_flows_y22; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y22, 0.002); end
  def test_outputs_energy_flows_z22; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z22, 0.002); end
  def test_outputs_energy_flows_aa22; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa22, 0.002); end
  def test_outputs_energy_flows_ab22; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab22, 0.002); end
  def test_outputs_energy_flows_ac22; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac22, 0.002); end
  def test_outputs_energy_flows_ad22; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad22, 0.002); end
  def test_outputs_energy_flows_c24; assert_equal("R.05", worksheet.outputs_energy_flows_c24); end
  def test_outputs_energy_flows_d24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d24); end
  def test_outputs_energy_flows_e24; assert_equal("L.01", worksheet.outputs_energy_flows_e24); end
  def test_outputs_energy_flows_f24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f24); end
  def test_outputs_energy_flows_g24; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g24); end
  def test_outputs_energy_flows_h24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h24); end
  def test_outputs_energy_flows_i24; assert_equal("L.01", worksheet.outputs_energy_flows_i24); end
  def test_outputs_energy_flows_j24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j24); end
  def test_outputs_energy_flows_v24; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v24, 0.002); end
  def test_outputs_energy_flows_w24; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w24, 0.002); end
  def test_outputs_energy_flows_x24; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x24, 0.002); end
  def test_outputs_energy_flows_y24; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y24, 0.002); end
  def test_outputs_energy_flows_z24; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z24, 0.002); end
  def test_outputs_energy_flows_aa24; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa24, 0.002); end
  def test_outputs_energy_flows_ab24; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab24, 0.002); end
  def test_outputs_energy_flows_ac24; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac24, 0.002); end
  def test_outputs_energy_flows_ad24; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad24, 0.002); end
  def test_outputs_energy_flows_c26; assert_equal("R.06", worksheet.outputs_energy_flows_c26); end
  def test_outputs_energy_flows_d26; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d26); end
  def test_outputs_energy_flows_e26; assert_equal("n/a", worksheet.outputs_energy_flows_e26); end
  def test_outputs_energy_flows_f26; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f26); end
  def test_outputs_energy_flows_g26; assert_equal("hydro.elec", worksheet.outputs_energy_flows_g26); end
  def test_outputs_energy_flows_h26; assert_equal("Global Hydroelectric dam", worksheet.outputs_energy_flows_h26); end
  def test_outputs_energy_flows_i26; assert_equal("E.02", worksheet.outputs_energy_flows_i26); end
  def test_outputs_energy_flows_j26; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j26); end
  def test_outputs_energy_flows_v26; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v26, 0.002); end
  def test_outputs_energy_flows_w26; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w26, 0.002); end
  def test_outputs_energy_flows_x26; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x26, 0.002); end
  def test_outputs_energy_flows_y26; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y26, 0.002); end
  def test_outputs_energy_flows_z26; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z26, 0.002); end
  def test_outputs_energy_flows_aa26; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa26, 0.002); end
  def test_outputs_energy_flows_ab26; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab26, 0.002); end
  def test_outputs_energy_flows_ac26; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac26, 0.002); end
  def test_outputs_energy_flows_ad26; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad26, 0.002); end
  def test_outputs_energy_flows_c28; assert_equal("R.06", worksheet.outputs_energy_flows_c28); end
  def test_outputs_energy_flows_d28; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d28); end
  def test_outputs_energy_flows_e28; assert_equal("E.02", worksheet.outputs_energy_flows_e28); end
  def test_outputs_energy_flows_f28; assert_equal("Storage", worksheet.outputs_energy_flows_f28); end
  def test_outputs_energy_flows_g28; assert_equal("storage.elec", worksheet.outputs_energy_flows_g28); end
  def test_outputs_energy_flows_h28; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h28); end
  def test_outputs_energy_flows_i28; assert_equal("E.02", worksheet.outputs_energy_flows_i28); end
  def test_outputs_energy_flows_j28; assert_equal("Storage", worksheet.outputs_energy_flows_j28); end
  def test_outputs_energy_flows_v28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v28||0), 0.002); end
  def test_outputs_energy_flows_w28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w28||0), 0.002); end
  def test_outputs_energy_flows_x28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x28||0), 0.002); end
  def test_outputs_energy_flows_y28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y28||0), 0.002); end
  def test_outputs_energy_flows_z28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z28||0), 0.002); end
  def test_outputs_energy_flows_aa28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa28||0), 0.002); end
  def test_outputs_energy_flows_ab28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab28||0), 0.002); end
  def test_outputs_energy_flows_ac28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac28||0), 0.002); end
  def test_outputs_energy_flows_ad28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad28||0), 0.002); end
  def test_outputs_energy_flows_c30; assert_equal("R.07", worksheet.outputs_energy_flows_c30); end
  def test_outputs_energy_flows_d30; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_d30); end
  def test_outputs_energy_flows_e30; assert_equal("n/a", worksheet.outputs_energy_flows_e30); end
  def test_outputs_energy_flows_f30; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f30); end
  def test_outputs_energy_flows_g30; assert_equal("n/a", worksheet.outputs_energy_flows_g30); end
  def test_outputs_energy_flows_h30; assert_equal("Global buildings", worksheet.outputs_energy_flows_h30); end
  def test_outputs_energy_flows_v30; assert_in_epsilon(4.838497586627763, worksheet.outputs_energy_flows_v30, 0.002); end
  def test_outputs_energy_flows_w30; assert_in_epsilon(5.562592127353522, worksheet.outputs_energy_flows_w30, 0.002); end
  def test_outputs_energy_flows_x30; assert_in_epsilon(6.5915502231697465, worksheet.outputs_energy_flows_x30, 0.002); end
  def test_outputs_energy_flows_y30; assert_in_epsilon(7.688096772541612, worksheet.outputs_energy_flows_y30, 0.002); end
  def test_outputs_energy_flows_z30; assert_in_epsilon(8.829723643457369, worksheet.outputs_energy_flows_z30, 0.002); end
  def test_outputs_energy_flows_aa30; assert_in_epsilon(9.980445203849193, worksheet.outputs_energy_flows_aa30, 0.002); end
  def test_outputs_energy_flows_ab30; assert_in_epsilon(11.14339862628133, worksheet.outputs_energy_flows_ab30, 0.002); end
  def test_outputs_energy_flows_ac30; assert_in_epsilon(12.274974083635156, worksheet.outputs_energy_flows_ac30, 0.002); end
  def test_outputs_energy_flows_ad30; assert_in_epsilon(13.381832968790896, worksheet.outputs_energy_flows_ad30, 0.002); end
  def test_outputs_energy_flows_d32; assert_equal("Forest residues", worksheet.outputs_energy_flows_d32); end
  def test_outputs_energy_flows_e32; assert_equal("Forest", worksheet.outputs_energy_flows_e32); end
  def test_outputs_energy_flows_f32; assert_equal("Solid", worksheet.outputs_energy_flows_f32); end
  def test_outputs_energy_flows_g32; assert_equal("Forest", worksheet.outputs_energy_flows_g32); end
  def test_outputs_energy_flows_h32; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h32); end
  def test_outputs_energy_flows_i32; assert_equal("C.01", worksheet.outputs_energy_flows_i32); end
  def test_outputs_energy_flows_j32; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j32); end
  def test_outputs_energy_flows_v32; assert_in_epsilon(15.40635993385157, worksheet.outputs_energy_flows_v32, 0.002); end
  def test_outputs_energy_flows_w32; assert_in_epsilon(15.415402117714985, worksheet.outputs_energy_flows_w32, 0.002); end
  def test_outputs_energy_flows_x32; assert_in_epsilon(15.266424854998649, worksheet.outputs_energy_flows_x32, 0.002); end
  def test_outputs_energy_flows_y32; assert_in_epsilon(15.180928121233908, worksheet.outputs_energy_flows_y32, 0.002); end
  def test_outputs_energy_flows_z32; assert_in_epsilon(15.054533454943398, worksheet.outputs_energy_flows_z32, 0.002); end
  def test_outputs_energy_flows_aa32; assert_in_epsilon(14.79809145133814, worksheet.outputs_energy_flows_aa32, 0.002); end
  def test_outputs_energy_flows_ab32; assert_in_epsilon(14.41510117610231, worksheet.outputs_energy_flows_ab32, 0.002); end
  def test_outputs_energy_flows_ac32; assert_in_epsilon(14.103137107065317, worksheet.outputs_energy_flows_ac32, 0.002); end
  def test_outputs_energy_flows_ad32; assert_in_epsilon(13.618193876459015, worksheet.outputs_energy_flows_ad32, 0.002); end
  def test_outputs_energy_flows_d34; assert_equal("Traditional biomass", worksheet.outputs_energy_flows_d34); end
  def test_outputs_energy_flows_e34; assert_equal("Forest", worksheet.outputs_energy_flows_e34); end
  def test_outputs_energy_flows_f34; assert_equal("Solid", worksheet.outputs_energy_flows_f34); end
  def test_outputs_energy_flows_g34; assert_equal("Forest", worksheet.outputs_energy_flows_g34); end
  def test_outputs_energy_flows_h34; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h34); end
  def test_outputs_energy_flows_i34; assert_equal("BM.13", worksheet.outputs_energy_flows_i34); end
  def test_outputs_energy_flows_j34; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_j34); end
  def test_outputs_energy_flows_v34; assert_in_epsilon(21.54205008268554, worksheet.outputs_energy_flows_v34, 0.002); end
  def test_outputs_energy_flows_w34; assert_in_epsilon(20.13743480733188, worksheet.outputs_energy_flows_w34, 0.002); end
  def test_outputs_energy_flows_x34; assert_in_epsilon(18.372579440328174, worksheet.outputs_energy_flows_x34, 0.002); end
  def test_outputs_energy_flows_y34; assert_in_epsilon(16.443000493732548, worksheet.outputs_energy_flows_y34, 0.002); end
  def test_outputs_energy_flows_z34; assert_in_epsilon(14.557821870704695, worksheet.outputs_energy_flows_z34, 0.002); end
  def test_outputs_energy_flows_aa34; assert_in_epsilon(13.090001432070835, worksheet.outputs_energy_flows_aa34, 0.002); end
  def test_outputs_energy_flows_ab34; assert_in_epsilon(11.66525366781175, worksheet.outputs_energy_flows_ab34, 0.002); end
  def test_outputs_energy_flows_ac34; assert_in_epsilon(10.704073673733559, worksheet.outputs_energy_flows_ac34, 0.002); end
  def test_outputs_energy_flows_ad34; assert_in_epsilon(9.771654172468239, worksheet.outputs_energy_flows_ad34, 0.002); end
  def test_outputs_energy_flows_d36; assert_equal("Biocrops", worksheet.outputs_energy_flows_d36); end
  def test_outputs_energy_flows_f36; assert_equal("Solid", worksheet.outputs_energy_flows_f36); end
  def test_outputs_energy_flows_g36; assert_equal("arable.bio", worksheet.outputs_energy_flows_g36); end
  def test_outputs_energy_flows_h36; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h36); end
  def test_outputs_energy_flows_i36; assert_equal("C.01", worksheet.outputs_energy_flows_i36); end
  def test_outputs_energy_flows_j36; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j36); end
  def test_outputs_energy_flows_v36; assert_in_epsilon(5.7, worksheet.outputs_energy_flows_v36, 0.002); end
  def test_outputs_energy_flows_w36; assert_in_epsilon(6.132024711040255, worksheet.outputs_energy_flows_w36, 0.002); end
  def test_outputs_energy_flows_x36; assert_in_epsilon(7.032732098090059, worksheet.outputs_energy_flows_x36, 0.002); end
  def test_outputs_energy_flows_y36; assert_in_epsilon(7.927867354959317, worksheet.outputs_energy_flows_y36, 0.002); end
  def test_outputs_energy_flows_z36; assert_in_epsilon(8.8151967535428, worksheet.outputs_energy_flows_z36, 0.002); end
  def test_outputs_energy_flows_aa36; assert_in_epsilon(9.692406765267851, worksheet.outputs_energy_flows_aa36, 0.002); end
  def test_outputs_energy_flows_ab36; assert_in_epsilon(10.557100465366519, worksheet.outputs_energy_flows_ab36, 0.002); end
  def test_outputs_energy_flows_ac36; assert_in_epsilon(11.406793740955786, worksheet.outputs_energy_flows_ac36, 0.002); end
  def test_outputs_energy_flows_ad36; assert_in_epsilon(12.23891129032258, worksheet.outputs_energy_flows_ad36, 0.002); end
  def test_outputs_energy_flows_d38; assert_equal("Biocrops", worksheet.outputs_energy_flows_d38); end
  def test_outputs_energy_flows_f38; assert_equal("Liquid", worksheet.outputs_energy_flows_f38); end
  def test_outputs_energy_flows_g38; assert_equal("arable.bio", worksheet.outputs_energy_flows_g38); end
  def test_outputs_energy_flows_h38; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h38); end
  def test_outputs_energy_flows_i38; assert_equal("C.02", worksheet.outputs_energy_flows_i38); end
  def test_outputs_energy_flows_j38; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j38); end
  def test_outputs_energy_flows_v38; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v38, 0.002); end
  def test_outputs_energy_flows_w38; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_flows_w38, 0.002); end
  def test_outputs_energy_flows_x38; assert_in_epsilon(4.974371484014922, worksheet.outputs_energy_flows_x38, 0.002); end
  def test_outputs_energy_flows_y38; assert_in_epsilon(5.945900516219489, worksheet.outputs_energy_flows_y38, 0.002); end
  def test_outputs_energy_flows_z38; assert_in_epsilon(7.006951265636585, worksheet.outputs_energy_flows_z38, 0.002); end
  def test_outputs_energy_flows_aa38; assert_in_epsilon(8.162026749699242, worksheet.outputs_energy_flows_aa38, 0.002); end
  def test_outputs_energy_flows_ab38; assert_in_epsilon(9.415792306948514, worksheet.outputs_energy_flows_ab38, 0.002); end
  def test_outputs_energy_flows_ac38; assert_in_epsilon(10.773082977569354, worksheet.outputs_energy_flows_ac38, 0.002); end
  def test_outputs_energy_flows_ad38; assert_in_epsilon(12.23891129032258, worksheet.outputs_energy_flows_ad38, 0.002); end
  def test_outputs_energy_flows_d40; assert_equal("Biocrops", worksheet.outputs_energy_flows_d40); end
  def test_outputs_energy_flows_f40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f40); end
  def test_outputs_energy_flows_g40; assert_equal("arable.bio", worksheet.outputs_energy_flows_g40); end
  def test_outputs_energy_flows_h40; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h40); end
  def test_outputs_energy_flows_i40; assert_equal("L.01", worksheet.outputs_energy_flows_i40); end
  def test_outputs_energy_flows_j40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j40); end
  def test_outputs_energy_flows_v40; assert_in_epsilon(2.375, worksheet.outputs_energy_flows_v40, 0.002); end
  def test_outputs_energy_flows_w40; assert_in_epsilon(2.3933007838448255, worksheet.outputs_energy_flows_w40, 0.002); end
  def test_outputs_energy_flows_x40; assert_in_epsilon(2.5809661905459294, worksheet.outputs_energy_flows_x40, 0.002); end
  def test_outputs_energy_flows_y40; assert_in_epsilon(2.723684490047372, worksheet.outputs_energy_flows_y40, 0.002); end
  def test_outputs_energy_flows_z40; assert_in_epsilon(2.8202620336301614, worksheet.outputs_energy_flows_z40, 0.002); end
  def test_outputs_energy_flows_aa40; assert_in_epsilon(2.8694625291911393, worksheet.outputs_energy_flows_aa40, 0.002); end
  def test_outputs_energy_flows_ab40; assert_in_epsilon(2.870005119775474, worksheet.outputs_energy_flows_ab40, 0.002); end
  def test_outputs_energy_flows_ac40; assert_in_epsilon(2.8205623572690897, worksheet.outputs_energy_flows_ac40, 0.002); end
  def test_outputs_energy_flows_ad40; assert_in_epsilon(2.719758064516128, worksheet.outputs_energy_flows_ad40, 0.002); end
  def test_outputs_energy_flows_d42; assert_equal("Biocrops", worksheet.outputs_energy_flows_d42); end
  def test_outputs_energy_flows_f42; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f42); end
  def test_outputs_energy_flows_g42; assert_equal("arable.bio", worksheet.outputs_energy_flows_g42); end
  def test_outputs_energy_flows_h42; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h42); end
  def test_outputs_energy_flows_i42; assert_equal("O.01", worksheet.outputs_energy_flows_i42); end
  def test_outputs_energy_flows_j42; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j42); end
  def test_outputs_energy_flows_v42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v42||0), 0.002); end
  def test_outputs_energy_flows_w42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w42||0), 0.002); end
  def test_outputs_energy_flows_x42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x42||0), 0.002); end
  def test_outputs_energy_flows_y42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y42||0), 0.002); end
  def test_outputs_energy_flows_z42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z42||0), 0.002); end
  def test_outputs_energy_flows_aa42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa42||0), 0.002); end
  def test_outputs_energy_flows_ab42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab42||0), 0.002); end
  def test_outputs_energy_flows_ac42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac42||0), 0.002); end
  def test_outputs_energy_flows_ad42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad42||0), 0.002); end
  def test_outputs_energy_flows_c44; assert_equal("n/a", worksheet.outputs_energy_flows_c44); end
  def test_outputs_energy_flows_d44; assert_equal("Food waste", worksheet.outputs_energy_flows_d44); end
  def test_outputs_energy_flows_e44; assert_equal("n/a", worksheet.outputs_energy_flows_e44); end
  def test_outputs_energy_flows_f44; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f44); end
  def test_outputs_energy_flows_g44; assert_equal("Arable.food", worksheet.outputs_energy_flows_g44); end
  def test_outputs_energy_flows_h44; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_h44); end
  def test_outputs_energy_flows_i44; assert_equal("BM.09", worksheet.outputs_energy_flows_i44); end
  def test_outputs_energy_flows_j44; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j44); end
  def test_outputs_energy_flows_v44; assert_in_epsilon(4.572902149583929, worksheet.outputs_energy_flows_v44, 0.002); end
  def test_outputs_energy_flows_w44; assert_in_epsilon(5.556337852110056, worksheet.outputs_energy_flows_w44, 0.002); end
  def test_outputs_energy_flows_x44; assert_in_epsilon(5.771322392918329, worksheet.outputs_energy_flows_x44, 0.002); end
  def test_outputs_energy_flows_y44; assert_in_epsilon(5.960970075707582, worksheet.outputs_energy_flows_y44, 0.002); end
  def test_outputs_energy_flows_z44; assert_in_epsilon(6.139177694707795, worksheet.outputs_energy_flows_z44, 0.002); end
  def test_outputs_energy_flows_aa44; assert_in_epsilon(6.3189106836684275, worksheet.outputs_energy_flows_aa44, 0.002); end
  def test_outputs_energy_flows_ab44; assert_in_epsilon(6.499290867935852, worksheet.outputs_energy_flows_ab44, 0.002); end
  def test_outputs_energy_flows_ac44; assert_in_epsilon(6.654010667093619, worksheet.outputs_energy_flows_ac44, 0.002); end
  def test_outputs_energy_flows_ad44; assert_in_epsilon(6.814793037153631, worksheet.outputs_energy_flows_ad44, 0.002); end
  def test_outputs_energy_flows_c46; assert_equal("n/a ", worksheet.outputs_energy_flows_c46); end
  def test_outputs_energy_flows_d46; assert_equal("Waste from animals", worksheet.outputs_energy_flows_d46); end
  def test_outputs_energy_flows_e46; assert_equal("n/a", worksheet.outputs_energy_flows_e46); end
  def test_outputs_energy_flows_f46; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f46); end
  def test_outputs_energy_flows_g46; assert_equal("Pasture.food", worksheet.outputs_energy_flows_g46); end
  def test_outputs_energy_flows_h46; assert_equal("Global Pasture for animals", worksheet.outputs_energy_flows_h46); end
  def test_outputs_energy_flows_i46; assert_equal("BM.09", worksheet.outputs_energy_flows_i46); end
  def test_outputs_energy_flows_j46; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j46); end
  def test_outputs_energy_flows_v46; assert_in_delta(0.0009813223722926578, worksheet.outputs_energy_flows_v46, 0.002); end
  def test_outputs_energy_flows_w46; assert_in_delta(0.0024754766818487414, worksheet.outputs_energy_flows_w46, 0.002); end
  def test_outputs_energy_flows_x46; assert_in_delta(0.0030702576865808736, worksheet.outputs_energy_flows_x46, 0.002); end
  def test_outputs_energy_flows_y46; assert_in_delta(0.003726902219520247, worksheet.outputs_energy_flows_y46, 0.002); end
  def test_outputs_energy_flows_z46; assert_in_delta(0.004472649653146333, worksheet.outputs_energy_flows_z46, 0.002); end
  def test_outputs_energy_flows_aa46; assert_in_delta(0.005345915504248007, worksheet.outputs_energy_flows_aa46, 0.002); end
  def test_outputs_energy_flows_ab46; assert_in_delta(0.006368219457990846, worksheet.outputs_energy_flows_ab46, 0.002); end
  def test_outputs_energy_flows_ac46; assert_in_delta(0.007491450556877667, worksheet.outputs_energy_flows_ac46, 0.002); end
  def test_outputs_energy_flows_ad46; assert_in_delta(0.008821665196353795, worksheet.outputs_energy_flows_ad46, 0.002); end
  def test_outputs_energy_flows_c48; assert_equal("Q.01", worksheet.outputs_energy_flows_c48); end
  def test_outputs_energy_flows_d48; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d48); end
  def test_outputs_energy_flows_e48; assert_equal("CFF.01", worksheet.outputs_energy_flows_e48); end
  def test_outputs_energy_flows_f48; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_f48); end
  def test_outputs_energy_flows_g48; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g48); end
  def test_outputs_energy_flows_h48; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h48); end
  def test_outputs_energy_flows_v48; assert_in_epsilon(153.5645961883452, worksheet.outputs_energy_flows_v48, 0.002); end
  def test_outputs_energy_flows_w48; assert_in_epsilon(155.2381722505994, worksheet.outputs_energy_flows_w48, 0.002); end
  def test_outputs_energy_flows_x48; assert_in_epsilon(164.25401774498457, worksheet.outputs_energy_flows_x48, 0.002); end
  def test_outputs_energy_flows_y48; assert_in_epsilon(182.26428074015823, worksheet.outputs_energy_flows_y48, 0.002); end
  def test_outputs_energy_flows_z48; assert_in_epsilon(196.3168236307542, worksheet.outputs_energy_flows_z48, 0.002); end
  def test_outputs_energy_flows_aa48; assert_in_epsilon(207.09991760584614, worksheet.outputs_energy_flows_aa48, 0.002); end
  def test_outputs_energy_flows_ab48; assert_in_epsilon(214.2930302190532, worksheet.outputs_energy_flows_ab48, 0.002); end
  def test_outputs_energy_flows_ac48; assert_in_epsilon(209.68230306907216, worksheet.outputs_energy_flows_ac48, 0.002); end
  def test_outputs_energy_flows_ad48; assert_in_epsilon(207.6631900407786, worksheet.outputs_energy_flows_ad48, 0.002); end
  def test_outputs_energy_flows_c50; assert_equal("Q.01", worksheet.outputs_energy_flows_c50); end
  def test_outputs_energy_flows_d50; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d50); end
  def test_outputs_energy_flows_e50; assert_equal("L.02", worksheet.outputs_energy_flows_e50); end
  def test_outputs_energy_flows_f50; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f50); end
  def test_outputs_energy_flows_g50; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g50); end
  def test_outputs_energy_flows_h50; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h50); end
  def test_outputs_energy_flows_v50; assert_in_epsilon(27.09963462147269, worksheet.outputs_energy_flows_v50, 0.002); end
  def test_outputs_energy_flows_w50; assert_in_epsilon(27.39497157363519, worksheet.outputs_energy_flows_w50, 0.002); end
  def test_outputs_energy_flows_x50; assert_in_epsilon(28.986003131467868, worksheet.outputs_energy_flows_x50, 0.002); end
  def test_outputs_energy_flows_y50; assert_in_epsilon(32.164284836498524, worksheet.outputs_energy_flows_y50, 0.002); end
  def test_outputs_energy_flows_z50; assert_in_epsilon(34.64414534660369, worksheet.outputs_energy_flows_z50, 0.002); end
  def test_outputs_energy_flows_aa50; assert_in_epsilon(36.54704428338462, worksheet.outputs_energy_flows_aa50, 0.002); end
  def test_outputs_energy_flows_ab50; assert_in_epsilon(37.816417097479984, worksheet.outputs_energy_flows_ab50, 0.002); end
  def test_outputs_energy_flows_ac50; assert_in_epsilon(37.0027593651304, worksheet.outputs_energy_flows_ac50, 0.002); end
  def test_outputs_energy_flows_ad50; assert_in_epsilon(36.64644530131389, worksheet.outputs_energy_flows_ad50, 0.002); end
  def test_outputs_energy_flows_c52; assert_equal("Q.02", worksheet.outputs_energy_flows_c52); end
  def test_outputs_energy_flows_d52; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d52); end
  def test_outputs_energy_flows_e52; assert_equal("CFF.02", worksheet.outputs_energy_flows_e52); end
  def test_outputs_energy_flows_f52; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_f52); end
  def test_outputs_energy_flows_g52; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g52); end
  def test_outputs_energy_flows_h52; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h52); end
  def test_outputs_energy_flows_v52; assert_in_epsilon(165.21259531390808, worksheet.outputs_energy_flows_v52, 0.002); end
  def test_outputs_energy_flows_w52; assert_in_epsilon(174.8890559205375, worksheet.outputs_energy_flows_w52, 0.002); end
  def test_outputs_energy_flows_x52; assert_in_epsilon(200.35888747956983, worksheet.outputs_energy_flows_x52, 0.002); end
  def test_outputs_energy_flows_y52; assert_in_epsilon(215.90501111730836, worksheet.outputs_energy_flows_y52, 0.002); end
  def test_outputs_energy_flows_z52; assert_in_epsilon(235.12319859325004, worksheet.outputs_energy_flows_z52, 0.002); end
  def test_outputs_energy_flows_aa52; assert_in_epsilon(246.59248004774201, worksheet.outputs_energy_flows_aa52, 0.002); end
  def test_outputs_energy_flows_ab52; assert_in_epsilon(260.1332008556912, worksheet.outputs_energy_flows_ab52, 0.002); end
  def test_outputs_energy_flows_ac52; assert_in_epsilon(275.35660539706697, worksheet.outputs_energy_flows_ac52, 0.002); end
  def test_outputs_energy_flows_ad52; assert_in_epsilon(288.39854373699325, worksheet.outputs_energy_flows_ad52, 0.002); end
  def test_outputs_energy_flows_c54; assert_equal("Q.02", worksheet.outputs_energy_flows_c54); end
  def test_outputs_energy_flows_d54; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d54); end
  def test_outputs_energy_flows_e54; assert_equal("L.02", worksheet.outputs_energy_flows_e54); end
  def test_outputs_energy_flows_f54; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f54); end
  def test_outputs_energy_flows_g54; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g54); end
  def test_outputs_energy_flows_h54; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h54); end
  def test_outputs_energy_flows_v54; assert_in_epsilon(12.435356636530713, worksheet.outputs_energy_flows_v54, 0.002); end
  def test_outputs_energy_flows_w54; assert_in_epsilon(13.163692381115709, worksheet.outputs_energy_flows_w54, 0.002); end
  def test_outputs_energy_flows_x54; assert_in_epsilon(15.080776476956856, worksheet.outputs_energy_flows_x54, 0.002); end
  def test_outputs_energy_flows_y54; assert_in_epsilon(16.25091481528125, worksheet.outputs_energy_flows_y54, 0.002); end
  def test_outputs_energy_flows_z54; assert_in_epsilon(17.697445055405893, worksheet.outputs_energy_flows_z54, 0.002); end
  def test_outputs_energy_flows_aa54; assert_in_epsilon(15.73994553496226, worksheet.outputs_energy_flows_aa54, 0.002); end
  def test_outputs_energy_flows_ab54; assert_in_epsilon(16.60424686312922, worksheet.outputs_energy_flows_ab54, 0.002); end
  def test_outputs_energy_flows_ac54; assert_in_epsilon(17.57595353598299, worksheet.outputs_energy_flows_ac54, 0.002); end
  def test_outputs_energy_flows_ad54; assert_in_epsilon(18.408417685339998, worksheet.outputs_energy_flows_ad54, 0.002); end
  def test_outputs_energy_flows_c56; assert_equal("Q.03", worksheet.outputs_energy_flows_c56); end
  def test_outputs_energy_flows_d56; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d56); end
  def test_outputs_energy_flows_e56; assert_equal("CFF.03", worksheet.outputs_energy_flows_e56); end
  def test_outputs_energy_flows_f56; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_f56); end
  def test_outputs_energy_flows_g56; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g56); end
  def test_outputs_energy_flows_h56; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h56); end
  def test_outputs_energy_flows_v56; assert_in_epsilon(92.32612891089191, worksheet.outputs_energy_flows_v56, 0.002); end
  def test_outputs_energy_flows_w56; assert_in_epsilon(94.96991591835187, worksheet.outputs_energy_flows_w56, 0.002); end
  def test_outputs_energy_flows_x56; assert_in_epsilon(102.95916952712766, worksheet.outputs_energy_flows_x56, 0.002); end
  def test_outputs_energy_flows_y56; assert_in_epsilon(111.68974544014951, worksheet.outputs_energy_flows_y56, 0.002); end
  def test_outputs_energy_flows_z56; assert_in_epsilon(121.67216975633359, worksheet.outputs_energy_flows_z56, 0.002); end
  def test_outputs_energy_flows_aa56; assert_in_epsilon(132.28187121858574, worksheet.outputs_energy_flows_aa56, 0.002); end
  def test_outputs_energy_flows_ab56; assert_in_epsilon(145.52565922425507, worksheet.outputs_energy_flows_ab56, 0.002); end
  def test_outputs_energy_flows_ac56; assert_in_epsilon(160.19868000411824, worksheet.outputs_energy_flows_ac56, 0.002); end
  def test_outputs_energy_flows_ad56; assert_in_epsilon(176.28284076356428, worksheet.outputs_energy_flows_ad56, 0.002); end
  def test_outputs_energy_flows_c58; assert_equal("Q.03", worksheet.outputs_energy_flows_c58); end
  def test_outputs_energy_flows_d58; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d58); end
  def test_outputs_energy_flows_e58; assert_equal("L.02", worksheet.outputs_energy_flows_e58); end
  def test_outputs_energy_flows_f58; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f58); end
  def test_outputs_energy_flows_g58; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g58); end
  def test_outputs_energy_flows_h58; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h58); end
  def test_outputs_energy_flows_v58; assert_in_epsilon(27.577934609746933, worksheet.outputs_energy_flows_v58, 0.002); end
  def test_outputs_energy_flows_w58; assert_in_epsilon(28.36763722236485, worksheet.outputs_energy_flows_w58, 0.002); end
  def test_outputs_energy_flows_x58; assert_in_epsilon(30.7540376509602, worksheet.outputs_energy_flows_x58, 0.002); end
  def test_outputs_energy_flows_y58; assert_in_epsilon(33.361872014590105, worksheet.outputs_energy_flows_y58, 0.002); end
  def test_outputs_energy_flows_z58; assert_in_epsilon(34.3177914697351, worksheet.outputs_energy_flows_z58, 0.002); end
  def test_outputs_energy_flows_aa58; assert_in_epsilon(35.163535387218985, worksheet.outputs_energy_flows_aa58, 0.002); end
  def test_outputs_energy_flows_ab58; assert_in_epsilon(38.68403599632097, worksheet.outputs_energy_flows_ab58, 0.002); end
  def test_outputs_energy_flows_ac58; assert_in_epsilon(42.58445924160105, worksheet.outputs_energy_flows_ac58, 0.002); end
  def test_outputs_energy_flows_ad58; assert_in_epsilon(46.85999564601076, worksheet.outputs_energy_flows_ad58, 0.002); end
  def test_outputs_energy_flows_c60; assert_equal("CFF.01", worksheet.outputs_energy_flows_c60); end
  def test_outputs_energy_flows_d60; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d60); end
  def test_outputs_energy_flows_e60; assert_equal("FF.01", worksheet.outputs_energy_flows_e60); end
  def test_outputs_energy_flows_f60; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_f60); end
  def test_outputs_energy_flows_g60; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g60); end
  def test_outputs_energy_flows_h60; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h60); end
  def test_outputs_energy_flows_v60; assert_in_epsilon(145.88636637892793, worksheet.outputs_energy_flows_v60, 0.002); end
  def test_outputs_energy_flows_w60; assert_in_epsilon(147.47626363806944, worksheet.outputs_energy_flows_w60, 0.002); end
  def test_outputs_energy_flows_x60; assert_in_epsilon(152.75623650283566, worksheet.outputs_energy_flows_x60, 0.002); end
  def test_outputs_energy_flows_y60; assert_in_epsilon(167.68313828094557, worksheet.outputs_energy_flows_y60, 0.002); end
  def test_outputs_energy_flows_z60; assert_in_epsilon(178.64830950398633, worksheet.outputs_energy_flows_z60, 0.002); end
  def test_outputs_energy_flows_aa60; assert_in_epsilon(186.38992584526153, worksheet.outputs_energy_flows_aa60, 0.002); end
  def test_outputs_energy_flows_ab60; assert_in_epsilon(190.72079689495735, worksheet.outputs_energy_flows_ab60, 0.002); end
  def test_outputs_energy_flows_ac60; assert_in_epsilon(184.5204267007835, worksheet.outputs_energy_flows_ac60, 0.002); end
  def test_outputs_energy_flows_ad60; assert_in_epsilon(180.6669753354774, worksheet.outputs_energy_flows_ad60, 0.002); end
  def test_outputs_energy_flows_c62; assert_equal("CFF.01", worksheet.outputs_energy_flows_c62); end
  def test_outputs_energy_flows_d62; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d62); end
  def test_outputs_energy_flows_e62; assert_equal("L.02", worksheet.outputs_energy_flows_e62); end
  def test_outputs_energy_flows_f62; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f62); end
  def test_outputs_energy_flows_g62; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g62); end
  def test_outputs_energy_flows_h62; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h62); end
  def test_outputs_energy_flows_v62; assert_in_epsilon(7.6782298094172745, worksheet.outputs_energy_flows_v62, 0.002); end
  def test_outputs_energy_flows_w62; assert_in_epsilon(7.761908612529965, worksheet.outputs_energy_flows_w62, 0.002); end
  def test_outputs_energy_flows_x62; assert_in_epsilon(11.497781242148903, worksheet.outputs_energy_flows_x62, 0.002); end
  def test_outputs_energy_flows_y62; assert_in_epsilon(14.581142459212657, worksheet.outputs_energy_flows_y62, 0.002); end
  def test_outputs_energy_flows_z62; assert_in_epsilon(17.66851412676786, worksheet.outputs_energy_flows_z62, 0.002); end
  def test_outputs_energy_flows_aa62; assert_in_epsilon(20.709991760584614, worksheet.outputs_energy_flows_aa62, 0.002); end
  def test_outputs_energy_flows_ab62; assert_in_epsilon(23.572233324095862, worksheet.outputs_energy_flows_ab62, 0.002); end
  def test_outputs_energy_flows_ac62; assert_in_epsilon(25.16187636828866, worksheet.outputs_energy_flows_ac62, 0.002); end
  def test_outputs_energy_flows_ad62; assert_in_epsilon(26.996214705301213, worksheet.outputs_energy_flows_ad62, 0.002); end
  def test_outputs_energy_flows_c64; assert_equal("CFF.02", worksheet.outputs_energy_flows_c64); end
  def test_outputs_energy_flows_d64; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d64); end
  def test_outputs_energy_flows_e64; assert_equal("FF.02", worksheet.outputs_energy_flows_e64); end
  def test_outputs_energy_flows_f64; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_f64); end
  def test_outputs_energy_flows_g64; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g64); end
  def test_outputs_energy_flows_h64; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h64); end
  def test_outputs_energy_flows_v64; assert_in_epsilon(153.1540222828616, worksheet.outputs_energy_flows_v64, 0.002); end
  def test_outputs_energy_flows_w64; assert_in_epsilon(162.64682200609988, worksheet.outputs_energy_flows_w64, 0.002); end
  def test_outputs_energy_flows_x64; assert_in_epsilon(186.33376535599996, worksheet.outputs_energy_flows_x64, 0.002); end
  def test_outputs_energy_flows_y64; assert_in_epsilon(200.79166033909678, worksheet.outputs_energy_flows_y64, 0.002); end
  def test_outputs_energy_flows_z64; assert_in_epsilon(218.66457469172255, worksheet.outputs_energy_flows_z64, 0.002); end
  def test_outputs_energy_flows_aa64; assert_in_epsilon(231.79693124487747, worksheet.outputs_energy_flows_aa64, 0.002); end
  def test_outputs_energy_flows_ab64; assert_in_epsilon(244.52520880434972, worksheet.outputs_energy_flows_ab64, 0.002); end
  def test_outputs_energy_flows_ac64; assert_in_epsilon(258.83520907324294, worksheet.outputs_energy_flows_ac64, 0.002); end
  def test_outputs_energy_flows_ad64; assert_in_epsilon(271.09463111277364, worksheet.outputs_energy_flows_ad64, 0.002); end
  def test_outputs_energy_flows_c66; assert_equal("CFF.02", worksheet.outputs_energy_flows_c66); end
  def test_outputs_energy_flows_d66; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d66); end
  def test_outputs_energy_flows_e66; assert_equal("L.02", worksheet.outputs_energy_flows_e66); end
  def test_outputs_energy_flows_f66; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f66); end
  def test_outputs_energy_flows_g66; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g66); end
  def test_outputs_energy_flows_h66; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h66); end
  def test_outputs_energy_flows_v66; assert_in_epsilon(12.058573031046478, worksheet.outputs_energy_flows_v66, 0.002); end
  def test_outputs_energy_flows_w66; assert_in_epsilon(12.242233914437605, worksheet.outputs_energy_flows_w66, 0.002); end
  def test_outputs_energy_flows_x66; assert_in_epsilon(14.025122123569872, worksheet.outputs_energy_flows_x66, 0.002); end
  def test_outputs_energy_flows_y66; assert_in_epsilon(15.113350778211583, worksheet.outputs_energy_flows_y66, 0.002); end
  def test_outputs_energy_flows_z66; assert_in_epsilon(16.45862390152749, worksheet.outputs_energy_flows_z66, 0.002); end
  def test_outputs_energy_flows_aa66; assert_in_epsilon(14.795548802864545, worksheet.outputs_energy_flows_aa66, 0.002); end
  def test_outputs_energy_flows_ab66; assert_in_epsilon(15.607992051341483, worksheet.outputs_energy_flows_ab66, 0.002); end
  def test_outputs_energy_flows_ac66; assert_in_epsilon(16.521396323824035, worksheet.outputs_energy_flows_ac66, 0.002); end
  def test_outputs_energy_flows_ad66; assert_in_epsilon(17.303912624219606, worksheet.outputs_energy_flows_ad66, 0.002); end
  def test_outputs_energy_flows_c68; assert_equal("CFF.03", worksheet.outputs_energy_flows_c68); end
  def test_outputs_energy_flows_d68; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d68); end
  def test_outputs_energy_flows_e68; assert_equal("FF.03", worksheet.outputs_energy_flows_e68); end
  def test_outputs_energy_flows_f68; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_f68); end
  def test_outputs_energy_flows_g68; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g68); end
  def test_outputs_energy_flows_h68; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h68); end
  def test_outputs_energy_flows_v68; assert_in_epsilon(90.47960633267407, worksheet.outputs_energy_flows_v68, 0.002); end
  def test_outputs_energy_flows_w68; assert_in_epsilon(93.07051759998484, worksheet.outputs_energy_flows_w68, 0.002); end
  def test_outputs_energy_flows_x68; assert_in_epsilon(100.8999861365851, worksheet.outputs_energy_flows_x68, 0.002); end
  def test_outputs_energy_flows_y68; assert_in_epsilon(109.45595053134652, worksheet.outputs_energy_flows_y68, 0.002); end
  def test_outputs_energy_flows_z68; assert_in_epsilon(119.23872636120691, worksheet.outputs_energy_flows_z68, 0.002); end
  def test_outputs_energy_flows_aa68; assert_in_epsilon(129.636233794214, worksheet.outputs_energy_flows_aa68, 0.002); end
  def test_outputs_energy_flows_ab68; assert_in_epsilon(142.61514603976997, worksheet.outputs_energy_flows_ab68, 0.002); end
  def test_outputs_energy_flows_ac68; assert_in_epsilon(156.99470640403587, worksheet.outputs_energy_flows_ac68, 0.002); end
  def test_outputs_energy_flows_ad68; assert_in_epsilon(172.757183948293, worksheet.outputs_energy_flows_ad68, 0.002); end
  def test_outputs_energy_flows_c70; assert_equal("CFF.03", worksheet.outputs_energy_flows_c70); end
  def test_outputs_energy_flows_d70; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d70); end
  def test_outputs_energy_flows_e70; assert_equal("L.02", worksheet.outputs_energy_flows_e70); end
  def test_outputs_energy_flows_f70; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f70); end
  def test_outputs_energy_flows_g70; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g70); end
  def test_outputs_energy_flows_h70; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h70); end
  def test_outputs_energy_flows_v70; assert_in_epsilon(1.8465225782178436, worksheet.outputs_energy_flows_v70, 0.002); end
  def test_outputs_energy_flows_w70; assert_in_epsilon(1.8993983183670338, worksheet.outputs_energy_flows_w70, 0.002); end
  def test_outputs_energy_flows_x70; assert_in_epsilon(2.0591833905425574, worksheet.outputs_energy_flows_x70, 0.002); end
  def test_outputs_energy_flows_y70; assert_in_epsilon(2.2337949088029916, worksheet.outputs_energy_flows_y70, 0.002); end
  def test_outputs_energy_flows_z70; assert_in_epsilon(2.433443395126673, worksheet.outputs_energy_flows_z70, 0.002); end
  def test_outputs_energy_flows_aa70; assert_in_epsilon(2.6456374243717278, worksheet.outputs_energy_flows_aa70, 0.002); end
  def test_outputs_energy_flows_ab70; assert_in_epsilon(2.9105131844850973, worksheet.outputs_energy_flows_ab70, 0.002); end
  def test_outputs_energy_flows_ac70; assert_in_epsilon(3.203973600082378, worksheet.outputs_energy_flows_ac70, 0.002); end
  def test_outputs_energy_flows_ad70; assert_in_epsilon(3.525656815271276, worksheet.outputs_energy_flows_ad70, 0.002); end
  def test_outputs_energy_flows_c72; assert_equal("FF.01", worksheet.outputs_energy_flows_c72); end
  def test_outputs_energy_flows_d72; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d72); end
  def test_outputs_energy_flows_e72; assert_equal("n/a", worksheet.outputs_energy_flows_e72); end
  def test_outputs_energy_flows_f72; assert_equal("Solid", worksheet.outputs_energy_flows_f72); end
  def test_outputs_energy_flows_g72; assert_equal("coal.network", worksheet.outputs_energy_flows_g72); end
  def test_outputs_energy_flows_h72; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h72); end
  def test_outputs_energy_flows_i72; assert_equal("C.01", worksheet.outputs_energy_flows_i72); end
  def test_outputs_energy_flows_j72; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j72); end
  def test_outputs_energy_flows_v72; assert_in_epsilon(145.7604682524029, worksheet.outputs_energy_flows_v72, 0.002); end
  def test_outputs_energy_flows_w72; assert_in_epsilon(147.38179190945547, worksheet.outputs_energy_flows_w72, 0.002); end
  def test_outputs_energy_flows_x72; assert_in_epsilon(152.6888152295829, worksheet.outputs_energy_flows_x72, 0.002); end
  def test_outputs_energy_flows_y72; assert_in_epsilon(167.63215128581047, worksheet.outputs_energy_flows_y72, 0.002); end
  def test_outputs_energy_flows_z72; assert_in_epsilon(178.61088604022765, worksheet.outputs_energy_flows_z72, 0.002); end
  def test_outputs_energy_flows_aa72; assert_in_epsilon(186.36302806942027, worksheet.outputs_energy_flows_aa72, 0.002); end
  def test_outputs_energy_flows_ab72; assert_in_epsilon(190.70183716574485, worksheet.outputs_energy_flows_ab72, 0.002); end
  def test_outputs_energy_flows_ac72; assert_in_epsilon(184.50779062938992, worksheet.outputs_energy_flows_ac72, 0.002); end
  def test_outputs_energy_flows_ad72; assert_in_epsilon(180.65846314769394, worksheet.outputs_energy_flows_ad72, 0.002); end
  def test_outputs_energy_flows_c74; assert_equal("FF.01", worksheet.outputs_energy_flows_c74); end
  def test_outputs_energy_flows_d74; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d74); end
  def test_outputs_energy_flows_e74; assert_equal("L.02", worksheet.outputs_energy_flows_e74); end
  def test_outputs_energy_flows_f74; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f74); end
  def test_outputs_energy_flows_g74; assert_equal("coal.network", worksheet.outputs_energy_flows_g74); end
  def test_outputs_energy_flows_h74; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h74); end
  def test_outputs_energy_flows_i74; assert_equal("C.01", worksheet.outputs_energy_flows_i74); end
  def test_outputs_energy_flows_j74; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j74); end
  def test_outputs_energy_flows_v74; assert_in_delta(0.1258981265250527, worksheet.outputs_energy_flows_v74, 0.002); end
  def test_outputs_energy_flows_w74; assert_in_delta(0.09447172861396096, worksheet.outputs_energy_flows_w74, 0.002); end
  def test_outputs_energy_flows_x74; assert_in_delta(0.06742127325277462, worksheet.outputs_energy_flows_x74, 0.002); end
  def test_outputs_energy_flows_y74; assert_in_delta(0.05098699513509211, worksheet.outputs_energy_flows_y74, 0.002); end
  def test_outputs_energy_flows_z74; assert_in_delta(0.0374234637586673, worksheet.outputs_energy_flows_z74, 0.002); end
  def test_outputs_energy_flows_aa74; assert_in_delta(0.026897775841259425, worksheet.outputs_energy_flows_aa74, 0.002); end
  def test_outputs_energy_flows_ab74; assert_in_delta(0.018959729212488084, worksheet.outputs_energy_flows_ab74, 0.002); end
  def test_outputs_energy_flows_ac74; assert_in_delta(0.012636071393590957, worksheet.outputs_energy_flows_ac74, 0.002); end
  def test_outputs_energy_flows_ad74; assert_in_delta(0.00851218778345389, worksheet.outputs_energy_flows_ad74, 0.002); end
  def test_outputs_energy_flows_c76; assert_equal("FF.02", worksheet.outputs_energy_flows_c76); end
  def test_outputs_energy_flows_d76; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d76); end
  def test_outputs_energy_flows_e76; assert_equal("n/a", worksheet.outputs_energy_flows_e76); end
  def test_outputs_energy_flows_f76; assert_equal("Liquid", worksheet.outputs_energy_flows_f76); end
  def test_outputs_energy_flows_g76; assert_equal("oil.network", worksheet.outputs_energy_flows_g76); end
  def test_outputs_energy_flows_h76; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h76); end
  def test_outputs_energy_flows_i76; assert_equal("C.02", worksheet.outputs_energy_flows_i76); end
  def test_outputs_energy_flows_j76; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j76); end
  def test_outputs_energy_flows_v76; assert_in_epsilon(152.8674996708785, worksheet.outputs_energy_flows_v76, 0.002); end
  def test_outputs_energy_flows_w76; assert_in_epsilon(162.3538754950667, worksheet.outputs_energy_flows_w76, 0.002); end
  def test_outputs_energy_flows_x76; assert_in_epsilon(186.01371152185556, worksheet.outputs_energy_flows_x76, 0.002); end
  def test_outputs_energy_flows_y76; assert_in_epsilon(200.4627601063228, worksheet.outputs_energy_flows_y76, 0.002); end
  def test_outputs_energy_flows_z76; assert_in_epsilon(218.32300261224074, worksheet.outputs_energy_flows_z76, 0.002); end
  def test_outputs_energy_flows_aa76; assert_in_epsilon(231.45163207305248, worksheet.outputs_energy_flows_aa76, 0.002); end
  def test_outputs_energy_flows_ab76; assert_in_epsilon(244.17783750586847, worksheet.outputs_energy_flows_ab76, 0.002); end
  def test_outputs_energy_flows_ac76; assert_in_epsilon(258.4845583818769, worksheet.outputs_energy_flows_ac76, 0.002); end
  def test_outputs_energy_flows_ad76; assert_in_epsilon(270.7444022187381, worksheet.outputs_energy_flows_ad76, 0.002); end
  def test_outputs_energy_flows_c78; assert_equal("FF.02", worksheet.outputs_energy_flows_c78); end
  def test_outputs_energy_flows_d78; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d78); end
  def test_outputs_energy_flows_e78; assert_equal("L.02", worksheet.outputs_energy_flows_e78); end
  def test_outputs_energy_flows_f78; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f78); end
  def test_outputs_energy_flows_g78; assert_equal("oil.network", worksheet.outputs_energy_flows_g78); end
  def test_outputs_energy_flows_h78; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h78); end
  def test_outputs_energy_flows_i78; assert_equal("C.02", worksheet.outputs_energy_flows_i78); end
  def test_outputs_energy_flows_j78; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j78); end
  def test_outputs_energy_flows_v78; assert_in_delta(0.28652261198312096, worksheet.outputs_energy_flows_v78, 0.002); end
  def test_outputs_energy_flows_w78; assert_in_delta(0.29294651103319613, worksheet.outputs_energy_flows_w78, 0.002); end
  def test_outputs_energy_flows_x78; assert_in_delta(0.3200538341444106, worksheet.outputs_energy_flows_x78, 0.002); end
  def test_outputs_energy_flows_y78; assert_in_delta(0.32890023277396835, worksheet.outputs_energy_flows_y78, 0.002); end
  def test_outputs_energy_flows_z78; assert_in_delta(0.34157207948181934, worksheet.outputs_energy_flows_z78, 0.002); end
  def test_outputs_energy_flows_aa78; assert_in_delta(0.3452991718249795, worksheet.outputs_energy_flows_aa78, 0.002); end
  def test_outputs_energy_flows_ab78; assert_in_delta(0.3473712984812486, worksheet.outputs_energy_flows_ab78, 0.002); end
  def test_outputs_energy_flows_ac78; assert_in_delta(0.35065069136601745, worksheet.outputs_energy_flows_ac78, 0.002); end
  def test_outputs_energy_flows_ad78; assert_in_delta(0.3502288940355499, worksheet.outputs_energy_flows_ad78, 0.002); end
  def test_outputs_energy_flows_c80; assert_equal("FF.03", worksheet.outputs_energy_flows_c80); end
  def test_outputs_energy_flows_d80; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d80); end
  def test_outputs_energy_flows_e80; assert_equal("n/a", worksheet.outputs_energy_flows_e80); end
  def test_outputs_energy_flows_f80; assert_equal("Gas", worksheet.outputs_energy_flows_f80); end
  def test_outputs_energy_flows_g80; assert_equal("gas.nework", worksheet.outputs_energy_flows_g80); end
  def test_outputs_energy_flows_h80; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h80); end
  def test_outputs_energy_flows_i80; assert_equal("C.03", worksheet.outputs_energy_flows_i80); end
  def test_outputs_energy_flows_j80; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j80); end
  def test_outputs_energy_flows_v80; assert_in_epsilon(89.89100006425333, worksheet.outputs_energy_flows_v80, 0.002); end
  def test_outputs_energy_flows_w80; assert_in_epsilon(92.4593773882986, worksheet.outputs_energy_flows_w80, 0.002); end
  def test_outputs_energy_flows_x80; assert_in_epsilon(100.22965765330926, worksheet.outputs_energy_flows_x80, 0.002); end
  def test_outputs_energy_flows_y80; assert_in_epsilon(108.72024608385344, worksheet.outputs_energy_flows_y80, 0.002); end
  def test_outputs_energy_flows_z80; assert_in_epsilon(118.42786169935748, worksheet.outputs_energy_flows_z80, 0.002); end
  def test_outputs_energy_flows_aa80; assert_in_epsilon(128.74431762314123, worksheet.outputs_energy_flows_aa80, 0.002); end
  def test_outputs_energy_flows_ab80; assert_in_epsilon(141.62242102004262, worksheet.outputs_energy_flows_ab80, 0.002); end
  def test_outputs_energy_flows_ac80; assert_in_epsilon(155.88906388872803, worksheet.outputs_energy_flows_ac80, 0.002); end
  def test_outputs_energy_flows_ad80; assert_in_epsilon(171.5262599801867, worksheet.outputs_energy_flows_ad80, 0.002); end
  def test_outputs_energy_flows_c82; assert_equal("FF.03", worksheet.outputs_energy_flows_c82); end
  def test_outputs_energy_flows_d82; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d82); end
  def test_outputs_energy_flows_e82; assert_equal("L.02", worksheet.outputs_energy_flows_e82); end
  def test_outputs_energy_flows_f82; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f82); end
  def test_outputs_energy_flows_g82; assert_equal("gas.nework", worksheet.outputs_energy_flows_g82); end
  def test_outputs_energy_flows_h82; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h82); end
  def test_outputs_energy_flows_i82; assert_equal("C.03", worksheet.outputs_energy_flows_i82); end
  def test_outputs_energy_flows_j82; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j82); end
  def test_outputs_energy_flows_v82; assert_in_delta(0.5886062684207308, worksheet.outputs_energy_flows_v82, 0.002); end
  def test_outputs_energy_flows_w82; assert_in_delta(0.6111402116862334, worksheet.outputs_energy_flows_w82, 0.002); end
  def test_outputs_energy_flows_x82; assert_in_delta(0.6703284832758372, worksheet.outputs_energy_flows_x82, 0.002); end
  def test_outputs_energy_flows_y82; assert_in_delta(0.7357044474930828, worksheet.outputs_energy_flows_y82, 0.002); end
  def test_outputs_energy_flows_z82; assert_in_delta(0.8108646618494382, worksheet.outputs_energy_flows_z82, 0.002); end
  def test_outputs_energy_flows_aa82; assert_in_delta(0.8919161710727741, worksheet.outputs_energy_flows_aa82, 0.002); end
  def test_outputs_energy_flows_ab82; assert_in_delta(0.9927250197273519, worksheet.outputs_energy_flows_ab82, 0.002); end
  def test_outputs_energy_flows_ac82; assert_in_epsilon(1.1056425153078289, worksheet.outputs_energy_flows_ac82, 0.002); end
  def test_outputs_energy_flows_ad82; assert_in_epsilon(1.2309239681063178, worksheet.outputs_energy_flows_ad82, 0.002); end
  def test_outputs_energy_flows_c84; assert_equal("n/a ", worksheet.outputs_energy_flows_c84); end
  def test_outputs_energy_flows_d84; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d84); end
  def test_outputs_energy_flows_e84; assert_equal("n/a ", worksheet.outputs_energy_flows_e84); end
  def test_outputs_energy_flows_f84; assert_equal("Solid", worksheet.outputs_energy_flows_f84); end
  def test_outputs_energy_flows_g84; assert_equal("n/a", worksheet.outputs_energy_flows_g84); end
  def test_outputs_energy_flows_h84; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h84); end
  def test_outputs_energy_flows_i84; assert_equal("C.01", worksheet.outputs_energy_flows_i84); end
  def test_outputs_energy_flows_j84; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j84); end
  def test_outputs_energy_flows_v84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v84||0), 0.002); end
  def test_outputs_energy_flows_w84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w84||0), 0.002); end
  def test_outputs_energy_flows_x84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x84||0), 0.002); end
  def test_outputs_energy_flows_y84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y84||0), 0.002); end
  def test_outputs_energy_flows_z84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z84||0), 0.002); end
  def test_outputs_energy_flows_aa84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa84||0), 0.002); end
  def test_outputs_energy_flows_ab84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab84||0), 0.002); end
  def test_outputs_energy_flows_ac84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac84||0), 0.002); end
  def test_outputs_energy_flows_ad84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad84||0), 0.002); end
  def test_outputs_energy_flows_c86; assert_equal("n/a ", worksheet.outputs_energy_flows_c86); end
  def test_outputs_energy_flows_d86; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d86); end
  def test_outputs_energy_flows_e86; assert_equal("n/a ", worksheet.outputs_energy_flows_e86); end
  def test_outputs_energy_flows_f86; assert_equal("Liquid", worksheet.outputs_energy_flows_f86); end
  def test_outputs_energy_flows_g86; assert_equal("n/a", worksheet.outputs_energy_flows_g86); end
  def test_outputs_energy_flows_h86; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h86); end
  def test_outputs_energy_flows_i86; assert_equal("C.02", worksheet.outputs_energy_flows_i86); end
  def test_outputs_energy_flows_j86; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j86); end
  def test_outputs_energy_flows_v86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v86||0), 0.002); end
  def test_outputs_energy_flows_w86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w86||0), 0.002); end
  def test_outputs_energy_flows_x86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x86||0), 0.002); end
  def test_outputs_energy_flows_y86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y86||0), 0.002); end
  def test_outputs_energy_flows_z86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z86||0), 0.002); end
  def test_outputs_energy_flows_aa86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa86||0), 0.002); end
  def test_outputs_energy_flows_ab86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab86||0), 0.002); end
  def test_outputs_energy_flows_ac86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac86||0), 0.002); end
  def test_outputs_energy_flows_ad86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad86||0), 0.002); end
  def test_outputs_energy_flows_c88; assert_equal("n/a ", worksheet.outputs_energy_flows_c88); end
  def test_outputs_energy_flows_d88; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d88); end
  def test_outputs_energy_flows_e88; assert_equal("n/a ", worksheet.outputs_energy_flows_e88); end
  def test_outputs_energy_flows_f88; assert_equal("Gas", worksheet.outputs_energy_flows_f88); end
  def test_outputs_energy_flows_g88; assert_equal("n/a", worksheet.outputs_energy_flows_g88); end
  def test_outputs_energy_flows_h88; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h88); end
  def test_outputs_energy_flows_i88; assert_equal("C.03", worksheet.outputs_energy_flows_i88); end
  def test_outputs_energy_flows_j88; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j88); end
  def test_outputs_energy_flows_v88; assert_in_epsilon(3.013698657489478, worksheet.outputs_energy_flows_v88, 0.002); end
  def test_outputs_energy_flows_w88; assert_in_epsilon(3.743143026102454, worksheet.outputs_energy_flows_w88, 0.002); end
  def test_outputs_energy_flows_x88; assert_in_epsilon(3.9421910691636683, worksheet.outputs_energy_flows_x88, 0.002); end
  def test_outputs_energy_flows_y88; assert_in_epsilon(4.128713103701706, worksheet.outputs_energy_flows_y88, 0.002); end
  def test_outputs_energy_flows_z88; assert_in_epsilon(4.3118334623860965, worksheet.outputs_energy_flows_z88, 0.002); end
  def test_outputs_energy_flows_aa88; assert_in_epsilon(4.500535310903666, worksheet.outputs_energy_flows_aa88, 0.002); end
  def test_outputs_energy_flows_ab88; assert_in_epsilon(4.6943753188778095, worksheet.outputs_energy_flows_ab88, 0.002); end
  def test_outputs_energy_flows_ac88; assert_in_epsilon(4.874416769053826, worksheet.outputs_energy_flows_ac88, 0.002); end
  def test_outputs_energy_flows_ad88; assert_in_epsilon(5.063411435836817, worksheet.outputs_energy_flows_ad88, 0.002); end
  def test_outputs_energy_flows_c90; assert_equal("n/a ", worksheet.outputs_energy_flows_c90); end
  def test_outputs_energy_flows_d90; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d90); end
  def test_outputs_energy_flows_e90; assert_equal("n/a ", worksheet.outputs_energy_flows_e90); end
  def test_outputs_energy_flows_f90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f90); end
  def test_outputs_energy_flows_g90; assert_equal("n/a", worksheet.outputs_energy_flows_g90); end
  def test_outputs_energy_flows_h90; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h90); end
  def test_outputs_energy_flows_i90; assert_equal("L.01", worksheet.outputs_energy_flows_i90); end
  def test_outputs_energy_flows_j90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j90); end
  def test_outputs_energy_flows_v90; assert_in_epsilon(1.6227608155712576, worksheet.outputs_energy_flows_v90, 0.002); end
  def test_outputs_energy_flows_w90; assert_in_epsilon(1.973145564155033, worksheet.outputs_energy_flows_w90, 0.002); end
  def test_outputs_energy_flows_x90; assert_in_epsilon(2.0231777934981507, worksheet.outputs_energy_flows_x90, 0.002); end
  def test_outputs_energy_flows_y90; assert_in_epsilon(2.062451578102606, worksheet.outputs_energy_flows_y90, 0.002); end
  def test_outputs_energy_flows_z90; assert_in_epsilon(2.096027873324676, worksheet.outputs_energy_flows_z90, 0.002); end
  def test_outputs_energy_flows_aa90; assert_in_epsilon(2.128397279369125, worksheet.outputs_energy_flows_aa90, 0.002); end
  def test_outputs_energy_flows_ab90; assert_in_epsilon(2.1592404276214445, worksheet.outputs_energy_flows_ab90, 0.002); end
  def test_outputs_energy_flows_ac90; assert_in_epsilon(2.179993724975386, worksheet.outputs_energy_flows_ac90, 0.002); end
  def test_outputs_energy_flows_ad90; assert_in_epsilon(2.2011673817195927, worksheet.outputs_energy_flows_ad90, 0.002); end
  def test_outputs_energy_flows_c92; assert_equal("n/a", worksheet.outputs_energy_flows_c92); end
  def test_outputs_energy_flows_d92; assert_equal("Solid", worksheet.outputs_energy_flows_d92); end
  def test_outputs_energy_flows_e92; assert_equal("n/a", worksheet.outputs_energy_flows_e92); end
  def test_outputs_energy_flows_f92; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f92); end
  def test_outputs_energy_flows_i92; assert_equal("C.01", worksheet.outputs_energy_flows_i92); end
  def test_outputs_energy_flows_j92; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j92); end
  def test_outputs_energy_flows_k92; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k92); end
  def test_outputs_energy_flows_l92; assert_equal("Unabated power", worksheet.outputs_energy_flows_l92); end
  def test_outputs_energy_flows_v92; assert_in_epsilon(99.96425579799836, worksheet.outputs_energy_flows_v92, 0.002); end
  def test_outputs_energy_flows_w92; assert_in_epsilon(99.21168912213203, worksheet.outputs_energy_flows_w92, 0.002); end
  def test_outputs_energy_flows_x92; assert_in_epsilon(101.25397935672275, worksheet.outputs_energy_flows_x92, 0.002); end
  def test_outputs_energy_flows_y92; assert_in_epsilon(113.19534067338495, worksheet.outputs_energy_flows_y92, 0.002); end
  def test_outputs_energy_flows_z92; assert_in_epsilon(121.51843751622079, worksheet.outputs_energy_flows_z92, 0.002); end
  def test_outputs_energy_flows_aa92; assert_in_epsilon(126.9323205962694, worksheet.outputs_energy_flows_aa92, 0.002); end
  def test_outputs_energy_flows_ab92; assert_in_epsilon(128.81254870158486, worksheet.outputs_energy_flows_ab92, 0.002); end
  def test_outputs_energy_flows_ac92; assert_in_epsilon(120.28215544741668, worksheet.outputs_energy_flows_ac92, 0.002); end
  def test_outputs_energy_flows_ad92; assert_in_epsilon(113.98641877770709, worksheet.outputs_energy_flows_ad92, 0.002); end
  def test_outputs_energy_flows_c94; assert_equal("n/a", worksheet.outputs_energy_flows_c94); end
  def test_outputs_energy_flows_d94; assert_equal("Liquid", worksheet.outputs_energy_flows_d94); end
  def test_outputs_energy_flows_e94; assert_equal("n/a", worksheet.outputs_energy_flows_e94); end
  def test_outputs_energy_flows_f94; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f94); end
  def test_outputs_energy_flows_i94; assert_equal("C.02", worksheet.outputs_energy_flows_i94); end
  def test_outputs_energy_flows_j94; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j94); end
  def test_outputs_energy_flows_k94; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k94); end
  def test_outputs_energy_flows_l94; assert_equal("Unabated power", worksheet.outputs_energy_flows_l94); end
  def test_outputs_energy_flows_v94; assert_in_epsilon(11.603025273887752, worksheet.outputs_energy_flows_v94, 0.002); end
  def test_outputs_energy_flows_w94; assert_in_epsilon(11.408506911143634, worksheet.outputs_energy_flows_w94, 0.002); end
  def test_outputs_energy_flows_x94; assert_in_epsilon(22.363602409682926, worksheet.outputs_energy_flows_x94, 0.002); end
  def test_outputs_energy_flows_y94; assert_in_epsilon(25.099250014958024, worksheet.outputs_energy_flows_y94, 0.002); end
  def test_outputs_energy_flows_z94; assert_in_epsilon(32.554604599443174, worksheet.outputs_energy_flows_z94, 0.002); end
  def test_outputs_energy_flows_aa94; assert_in_epsilon(37.6997301357319, worksheet.outputs_energy_flows_aa94, 0.002); end
  def test_outputs_energy_flows_ab94; assert_in_epsilon(43.38722636050451, worksheet.outputs_energy_flows_ab94, 0.002); end
  def test_outputs_energy_flows_ac94; assert_in_epsilon(51.13698649442448, worksheet.outputs_energy_flows_ac94, 0.002); end
  def test_outputs_energy_flows_ad94; assert_in_epsilon(56.69814809637913, worksheet.outputs_energy_flows_ad94, 0.002); end
  def test_outputs_energy_flows_c96; assert_equal("n/a", worksheet.outputs_energy_flows_c96); end
  def test_outputs_energy_flows_d96; assert_equal("Gas", worksheet.outputs_energy_flows_d96); end
  def test_outputs_energy_flows_e96; assert_equal("n/a", worksheet.outputs_energy_flows_e96); end
  def test_outputs_energy_flows_f96; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f96); end
  def test_outputs_energy_flows_i96; assert_equal("C.03", worksheet.outputs_energy_flows_i96); end
  def test_outputs_energy_flows_j96; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j96); end
  def test_outputs_energy_flows_k96; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k96); end
  def test_outputs_energy_flows_l96; assert_equal("Unabated power", worksheet.outputs_energy_flows_l96); end
  def test_outputs_energy_flows_v96; assert_in_epsilon(41.931025391305454, worksheet.outputs_energy_flows_v96, 0.002); end
  def test_outputs_energy_flows_w96; assert_in_epsilon(41.16360849911386, worksheet.outputs_energy_flows_w96, 0.002); end
  def test_outputs_energy_flows_x96; assert_in_epsilon(44.96648508888798, worksheet.outputs_energy_flows_x96, 0.002); end
  def test_outputs_energy_flows_y96; assert_in_epsilon(49.271112552290596, worksheet.outputs_energy_flows_y96, 0.002); end
  def test_outputs_energy_flows_z96; assert_in_epsilon(54.83494780534271, worksheet.outputs_energy_flows_z96, 0.002); end
  def test_outputs_energy_flows_aa96; assert_in_epsilon(61.425872967674124, worksheet.outputs_energy_flows_aa96, 0.002); end
  def test_outputs_energy_flows_ab96; assert_in_epsilon(70.60799719697418, worksheet.outputs_energy_flows_ab96, 0.002); end
  def test_outputs_energy_flows_ac96; assert_in_epsilon(81.4643670139678, worksheet.outputs_energy_flows_ac96, 0.002); end
  def test_outputs_energy_flows_ad96; assert_in_epsilon(93.60018042738005, worksheet.outputs_energy_flows_ad96, 0.002); end
  def test_outputs_energy_flows_c98; assert_equal("N.01", worksheet.outputs_energy_flows_c98); end
  def test_outputs_energy_flows_d98; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_d98); end
  def test_outputs_energy_flows_e98; assert_equal("n/a", worksheet.outputs_energy_flows_e98); end
  def test_outputs_energy_flows_f98; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f98); end
  def test_outputs_energy_flows_g98; assert_equal("nuclear.elec", worksheet.outputs_energy_flows_g98); end
  def test_outputs_energy_flows_h98; assert_equal("Global Nuclear power stations", worksheet.outputs_energy_flows_h98); end
  def test_outputs_energy_flows_v98; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v98, 0.002); end
  def test_outputs_energy_flows_w98; assert_in_epsilon(29.87001951581473, worksheet.outputs_energy_flows_w98, 0.002); end
  def test_outputs_energy_flows_x98; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_flows_x98, 0.002); end
  def test_outputs_energy_flows_y98; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_flows_y98, 0.002); end
  def test_outputs_energy_flows_z98; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_flows_z98, 0.002); end
  def test_outputs_energy_flows_aa98; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_flows_aa98, 0.002); end
  def test_outputs_energy_flows_ab98; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_flows_ab98, 0.002); end
  def test_outputs_energy_flows_ac98; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_flows_ac98, 0.002); end
  def test_outputs_energy_flows_ad98; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_flows_ad98, 0.002); end
  def test_outputs_energy_flows_c100; assert_equal("n/a", worksheet.outputs_energy_flows_c100); end
  def test_outputs_energy_flows_d100; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d100); end
  def test_outputs_energy_flows_e100; assert_equal("H.01", worksheet.outputs_energy_flows_e100); end
  def test_outputs_energy_flows_f100; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_f100); end
  def test_outputs_energy_flows_k100; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k100); end
  def test_outputs_energy_flows_l100; assert_equal("Unabated power", worksheet.outputs_energy_flows_l100); end
  def test_outputs_energy_flows_m100; assert_equal("Nuclear", worksheet.outputs_energy_flows_m100); end
  def test_outputs_energy_flows_v100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v100||0), 0.002); end
  def test_outputs_energy_flows_w100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w100||0), 0.002); end
  def test_outputs_energy_flows_x100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x100||0), 0.002); end
  def test_outputs_energy_flows_y100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y100||0), 0.002); end
  def test_outputs_energy_flows_z100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z100||0), 0.002); end
  def test_outputs_energy_flows_aa100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa100||0), 0.002); end
  def test_outputs_energy_flows_ab100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab100||0), 0.002); end
  def test_outputs_energy_flows_ac100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac100||0), 0.002); end
  def test_outputs_energy_flows_ad100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad100||0), 0.002); end
  def test_outputs_energy_flows_c102; assert_equal("n/a", worksheet.outputs_energy_flows_c102); end
  def test_outputs_energy_flows_d102; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d102); end
  def test_outputs_energy_flows_f102; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f102); end
  def test_outputs_energy_flows_i102; assert_equal("E.02", worksheet.outputs_energy_flows_i102); end
  def test_outputs_energy_flows_j102; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j102); end
  def test_outputs_energy_flows_k102; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k102); end
  def test_outputs_energy_flows_l102; assert_equal("Unabated power", worksheet.outputs_energy_flows_l102); end
  def test_outputs_energy_flows_m102; assert_equal("Nuclear", worksheet.outputs_energy_flows_m102); end
  def test_outputs_energy_flows_v102; assert_in_epsilon(62.5086689481674, worksheet.outputs_energy_flows_v102, 0.002); end
  def test_outputs_energy_flows_w102; assert_in_epsilon(63.71060105753045, worksheet.outputs_energy_flows_w102, 0.002); end
  def test_outputs_energy_flows_x102; assert_in_epsilon(71.50403479422116, worksheet.outputs_energy_flows_x102, 0.002); end
  def test_outputs_energy_flows_y102; assert_in_epsilon(79.88825264804552, worksheet.outputs_energy_flows_y102, 0.002); end
  def test_outputs_energy_flows_z102; assert_in_epsilon(88.65259338214196, worksheet.outputs_energy_flows_z102, 0.002); end
  def test_outputs_energy_flows_aa102; assert_in_epsilon(97.71647472137383, worksheet.outputs_energy_flows_aa102, 0.002); end
  def test_outputs_energy_flows_ab102; assert_in_epsilon(105.67196074547257, worksheet.outputs_energy_flows_ab102, 0.002); end
  def test_outputs_energy_flows_ac102; assert_in_epsilon(111.29478318284605, worksheet.outputs_energy_flows_ac102, 0.002); end
  def test_outputs_energy_flows_ad102; assert_in_epsilon(117.50228477772322, worksheet.outputs_energy_flows_ad102, 0.002); end
  def test_outputs_energy_flows_c104; assert_equal("n/a", worksheet.outputs_energy_flows_c104); end
  def test_outputs_energy_flows_d104; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d104); end
  def test_outputs_energy_flows_e104; assert_equal("L.02", worksheet.outputs_energy_flows_e104); end
  def test_outputs_energy_flows_f104; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f104); end
  def test_outputs_energy_flows_k104; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k104); end
  def test_outputs_energy_flows_l104; assert_equal("Unabated power", worksheet.outputs_energy_flows_l104); end
  def test_outputs_energy_flows_m104; assert_equal("Nuclear", worksheet.outputs_energy_flows_m104); end
  def test_outputs_energy_flows_v104; assert_in_epsilon(4.436440849587927, worksheet.outputs_energy_flows_v104, 0.002); end
  def test_outputs_energy_flows_w104; assert_in_epsilon(4.52561610674684, worksheet.outputs_energy_flows_w104, 0.002); end
  def test_outputs_energy_flows_x104; assert_in_epsilon(5.0828980763101015, worksheet.outputs_energy_flows_x104, 0.002); end
  def test_outputs_energy_flows_y104; assert_in_epsilon(5.677327589005227, worksheet.outputs_energy_flows_y104, 0.002); end
  def test_outputs_energy_flows_z104; assert_in_epsilon(6.29961899756737, worksheet.outputs_energy_flows_z104, 0.002); end
  def test_outputs_energy_flows_aa104; assert_in_epsilon(6.942784080273816, worksheet.outputs_energy_flows_aa104, 0.002); end
  def test_outputs_energy_flows_ab104; assert_in_epsilon(7.506536507447218, worksheet.outputs_energy_flows_ab104, 0.002); end
  def test_outputs_energy_flows_ac104; assert_in_epsilon(7.904030377639607, worksheet.outputs_energy_flows_ac104, 0.002); end
  def test_outputs_energy_flows_ad104; assert_in_epsilon(8.343535049357513, worksheet.outputs_energy_flows_ad104, 0.002); end
  def test_outputs_energy_flows_c106; assert_equal("n/a", worksheet.outputs_energy_flows_c106); end
  def test_outputs_energy_flows_d106; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d106); end
  def test_outputs_energy_flows_e106; assert_equal("L.01", worksheet.outputs_energy_flows_e106); end
  def test_outputs_energy_flows_f106; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f106); end
  def test_outputs_energy_flows_k106; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k106); end
  def test_outputs_energy_flows_l106; assert_equal("Unabated power", worksheet.outputs_energy_flows_l106); end
  def test_outputs_energy_flows_m106; assert_equal("Nuclear", worksheet.outputs_energy_flows_m106); end
  def test_outputs_energy_flows_v106; assert_in_epsilon(103.37283258250814, worksheet.outputs_energy_flows_v106, 0.002); end
  def test_outputs_energy_flows_w106; assert_in_epsilon(103.29373948236906, worksheet.outputs_energy_flows_w106, 0.002); end
  def test_outputs_energy_flows_x106; assert_in_epsilon(113.38118631597642, worksheet.outputs_energy_flows_x106, 0.002); end
  def test_outputs_energy_flows_y106; assert_in_epsilon(122.95194275363919, worksheet.outputs_energy_flows_y106, 0.002); end
  def test_outputs_energy_flows_z106; assert_in_epsilon(133.34447326324255, worksheet.outputs_energy_flows_z106, 0.002); end
  def test_outputs_energy_flows_aa106; assert_in_epsilon(143.56320787830052, worksheet.outputs_energy_flows_aa106, 0.002); end
  def test_outputs_energy_flows_ab106; assert_in_epsilon(150.71185629190174, worksheet.outputs_energy_flows_ab106, 0.002); end
  def test_outputs_energy_flows_ac106; assert_in_epsilon(155.0734063733448, worksheet.outputs_energy_flows_ac106, 0.002); end
  def test_outputs_energy_flows_ad106; assert_in_epsilon(160.14780568476212, worksheet.outputs_energy_flows_ad106, 0.002); end
  def test_outputs_energy_flows_c108; assert_equal("n/a", worksheet.outputs_energy_flows_c108); end
  def test_outputs_energy_flows_d108; assert_equal("Storage", worksheet.outputs_energy_flows_d108); end
  def test_outputs_energy_flows_e108; assert_equal("n/a", worksheet.outputs_energy_flows_e108); end
  def test_outputs_energy_flows_f108; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f108); end
  def test_outputs_energy_flows_g108; assert_equal("storage.elec", worksheet.outputs_energy_flows_g108); end
  def test_outputs_energy_flows_h108; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h108); end
  def test_outputs_energy_flows_i108; assert_equal("E.02", worksheet.outputs_energy_flows_i108); end
  def test_outputs_energy_flows_j108; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j108); end
  def test_outputs_energy_flows_v108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v108||0), 0.002); end
  def test_outputs_energy_flows_w108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w108||0), 0.002); end
  def test_outputs_energy_flows_x108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x108||0), 0.002); end
  def test_outputs_energy_flows_y108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y108||0), 0.002); end
  def test_outputs_energy_flows_z108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z108||0), 0.002); end
  def test_outputs_energy_flows_aa108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa108||0), 0.002); end
  def test_outputs_energy_flows_ab108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab108||0), 0.002); end
  def test_outputs_energy_flows_ac108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac108||0), 0.002); end
  def test_outputs_energy_flows_ad108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad108||0), 0.002); end
  def test_outputs_energy_flows_c110; assert_equal("n/a", worksheet.outputs_energy_flows_c110); end
  def test_outputs_energy_flows_d110; assert_equal("Storage", worksheet.outputs_energy_flows_d110); end
  def test_outputs_energy_flows_e110; assert_equal("L.01", worksheet.outputs_energy_flows_e110); end
  def test_outputs_energy_flows_f110; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f110); end
  def test_outputs_energy_flows_g110; assert_equal("storage.elec", worksheet.outputs_energy_flows_g110); end
  def test_outputs_energy_flows_h110; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h110); end
  def test_outputs_energy_flows_v110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v110||0), 0.002); end
  def test_outputs_energy_flows_w110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w110||0), 0.002); end
  def test_outputs_energy_flows_x110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x110||0), 0.002); end
  def test_outputs_energy_flows_y110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y110||0), 0.002); end
  def test_outputs_energy_flows_z110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z110||0), 0.002); end
  def test_outputs_energy_flows_aa110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa110||0), 0.002); end
  def test_outputs_energy_flows_ab110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab110||0), 0.002); end
  def test_outputs_energy_flows_ac110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac110||0), 0.002); end
  def test_outputs_energy_flows_ad110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad110||0), 0.002); end
  def test_outputs_energy_flows_c112; assert_equal("n/a", worksheet.outputs_energy_flows_c112); end
  def test_outputs_energy_flows_d112; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d112); end
  def test_outputs_energy_flows_e112; assert_equal("L.02", worksheet.outputs_energy_flows_e112); end
  def test_outputs_energy_flows_f112; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f112); end
  def test_outputs_energy_flows_g112; assert_equal("electricity.network", worksheet.outputs_energy_flows_g112); end
  def test_outputs_energy_flows_h112; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_h112); end
  def test_outputs_energy_flows_v112; assert_in_epsilon(6.091136511565761, worksheet.outputs_energy_flows_v112, 0.002); end
  def test_outputs_energy_flows_w112; assert_in_epsilon(6.7146281436296675, worksheet.outputs_energy_flows_w112, 0.002); end
  def test_outputs_energy_flows_x112; assert_in_epsilon(7.426137072096431, worksheet.outputs_energy_flows_x112, 0.002); end
  def test_outputs_energy_flows_y112; assert_in_epsilon(8.167087152165161, worksheet.outputs_energy_flows_y112, 0.002); end
  def test_outputs_energy_flows_z112; assert_in_epsilon(8.915355212504423, worksheet.outputs_energy_flows_z112, 0.002); end
  def test_outputs_energy_flows_aa112; assert_in_epsilon(9.645524344907605, worksheet.outputs_energy_flows_aa112, 0.002); end
  def test_outputs_energy_flows_ab112; assert_in_epsilon(10.384679542196638, worksheet.outputs_energy_flows_ab112, 0.002); end
  def test_outputs_energy_flows_ac112; assert_in_epsilon(11.108857564058871, worksheet.outputs_energy_flows_ac112, 0.002); end
  def test_outputs_energy_flows_ad112; assert_in_epsilon(11.843941634598155, worksheet.outputs_energy_flows_ad112, 0.002); end
  def test_outputs_energy_flows_c114; assert_equal("n/a", worksheet.outputs_energy_flows_c114); end
  def test_outputs_energy_flows_d114; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d114); end
  def test_outputs_energy_flows_e114; assert_equal("n/a", worksheet.outputs_energy_flows_e114); end
  def test_outputs_energy_flows_f114; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f114); end
  def test_outputs_energy_flows_i114; assert_equal("E.01", worksheet.outputs_energy_flows_i114); end
  def test_outputs_energy_flows_j114; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j114); end
  def test_outputs_energy_flows_k114; assert_equal("Global buildings", worksheet.outputs_energy_flows_k114); end
  def test_outputs_energy_flows_v114; assert_in_epsilon(4.027695458801006, worksheet.outputs_energy_flows_v114, 0.002); end
  def test_outputs_energy_flows_w114; assert_in_epsilon(4.749531165462969, worksheet.outputs_energy_flows_w114, 0.002); end
  def test_outputs_energy_flows_x114; assert_in_epsilon(5.632737393140921, worksheet.outputs_energy_flows_x114, 0.002); end
  def test_outputs_energy_flows_y114; assert_in_epsilon(6.568763165145775, worksheet.outputs_energy_flows_y114, 0.002); end
  def test_outputs_energy_flows_z114; assert_in_epsilon(7.532109461187872, worksheet.outputs_energy_flows_z114, 0.002); end
  def test_outputs_energy_flows_aa114; assert_in_epsilon(8.476669748914503, worksheet.outputs_energy_flows_aa114, 0.002); end
  def test_outputs_energy_flows_ab114; assert_in_epsilon(9.415771200553763, worksheet.outputs_energy_flows_ab114, 0.002); end
  def test_outputs_energy_flows_ac114; assert_in_epsilon(10.297788846530594, worksheet.outputs_energy_flows_ac114, 0.002); end
  def test_outputs_energy_flows_ad114; assert_in_epsilon(11.142810614858433, worksheet.outputs_energy_flows_ad114, 0.002); end
  def test_outputs_energy_flows_c116; assert_equal("n/a", worksheet.outputs_energy_flows_c116); end
  def test_outputs_energy_flows_d116; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d116); end
  def test_outputs_energy_flows_e116; assert_equal("n/a", worksheet.outputs_energy_flows_e116); end
  def test_outputs_energy_flows_f116; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f116); end
  def test_outputs_energy_flows_i116; assert_equal("E.01", worksheet.outputs_energy_flows_i116); end
  def test_outputs_energy_flows_j116; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j116); end
  def test_outputs_energy_flows_k116; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k116); end
  def test_outputs_energy_flows_l116; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l116); end
  def test_outputs_energy_flows_v116; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_flows_v116, 0.002); end
  def test_outputs_energy_flows_w116; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_flows_w116, 0.002); end
  def test_outputs_energy_flows_x116; assert_in_epsilon(4.357570580283355, worksheet.outputs_energy_flows_x116, 0.002); end
  def test_outputs_energy_flows_y116; assert_in_epsilon(4.941603335928052, worksheet.outputs_energy_flows_y116, 0.002); end
  def test_outputs_energy_flows_z116; assert_in_epsilon(5.538572780268811, worksheet.outputs_energy_flows_z116, 0.002); end
  def test_outputs_energy_flows_aa116; assert_in_epsilon(6.120916106638935, worksheet.outputs_energy_flows_aa116, 0.002); end
  def test_outputs_energy_flows_ab116; assert_in_epsilon(6.70547097452178, worksheet.outputs_energy_flows_ab116, 0.002); end
  def test_outputs_energy_flows_ac116; assert_in_epsilon(7.262692366939133, worksheet.outputs_energy_flows_ac116, 0.002); end
  def test_outputs_energy_flows_ad116; assert_in_epsilon(7.814139615574607, worksheet.outputs_energy_flows_ad116, 0.002); end
  def test_outputs_energy_flows_c118; assert_equal("n/a", worksheet.outputs_energy_flows_c118); end
  def test_outputs_energy_flows_d118; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d118); end
  def test_outputs_energy_flows_e118; assert_equal("n/a", worksheet.outputs_energy_flows_e118); end
  def test_outputs_energy_flows_f118; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f118); end
  def test_outputs_energy_flows_i118; assert_equal("E.01", worksheet.outputs_energy_flows_i118); end
  def test_outputs_energy_flows_j118; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j118); end
  def test_outputs_energy_flows_k118; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k118); end
  def test_outputs_energy_flows_l118; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l118); end
  def test_outputs_energy_flows_v118; assert_in_epsilon(10.049316153808604, worksheet.outputs_energy_flows_v118, 0.002); end
  def test_outputs_energy_flows_w118; assert_in_epsilon(12.121796717015723, worksheet.outputs_energy_flows_w118, 0.002); end
  def test_outputs_energy_flows_x118; assert_in_epsilon(13.931311165305319, worksheet.outputs_energy_flows_x118, 0.002); end
  def test_outputs_energy_flows_y118; assert_in_epsilon(15.87228831058636, worksheet.outputs_energy_flows_y118, 0.002); end
  def test_outputs_energy_flows_z118; assert_in_epsilon(17.89506162050538, worksheet.outputs_energy_flows_z118, 0.002); end
  def test_outputs_energy_flows_aa118; assert_in_epsilon(19.913592309097695, worksheet.outputs_energy_flows_aa118, 0.002); end
  def test_outputs_energy_flows_ab118; assert_in_epsilon(21.984637775674063, worksheet.outputs_energy_flows_ab118, 0.002); end
  def test_outputs_energy_flows_ac118; assert_in_epsilon(24.013673521607714, worksheet.outputs_energy_flows_ac118, 0.002); end
  def test_outputs_energy_flows_ad118; assert_in_epsilon(26.067683922905687, worksheet.outputs_energy_flows_ad118, 0.002); end
  def test_outputs_energy_flows_c120; assert_equal("n/a", worksheet.outputs_energy_flows_c120); end
  def test_outputs_energy_flows_d120; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d120); end
  def test_outputs_energy_flows_e120; assert_equal("n/a", worksheet.outputs_energy_flows_e120); end
  def test_outputs_energy_flows_f120; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f120); end
  def test_outputs_energy_flows_i120; assert_equal("E.01", worksheet.outputs_energy_flows_i120); end
  def test_outputs_energy_flows_j120; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j120); end
  def test_outputs_energy_flows_k120; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k120); end
  def test_outputs_energy_flows_l120; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l120); end
  def test_outputs_energy_flows_v120; assert_in_epsilon(1.5226055251988835, worksheet.outputs_energy_flows_v120, 0.002); end
  def test_outputs_energy_flows_w120; assert_in_epsilon(1.694572033868082, worksheet.outputs_energy_flows_w120, 0.002); end
  def test_outputs_energy_flows_x120; assert_in_epsilon(1.912013377115506, worksheet.outputs_energy_flows_x120, 0.002); end
  def test_outputs_energy_flows_y120; assert_in_epsilon(2.1321181373918403, worksheet.outputs_energy_flows_y120, 0.002); end
  def test_outputs_energy_flows_z120; assert_in_epsilon(2.347398191778996, worksheet.outputs_energy_flows_z120, 0.002); end
  def test_outputs_energy_flows_aa120; assert_in_epsilon(2.545277088846452, worksheet.outputs_energy_flows_aa120, 0.002); end
  def test_outputs_energy_flows_ab120; assert_in_epsilon(2.7321125191476425, worksheet.outputs_energy_flows_ab120, 0.002); end
  def test_outputs_energy_flows_ac120; assert_in_epsilon(2.895103850634195, worksheet.outputs_energy_flows_ac120, 0.002); end
  def test_outputs_energy_flows_ad120; assert_in_epsilon(3.043405366553821, worksheet.outputs_energy_flows_ad120, 0.002); end
  def test_outputs_energy_flows_c122; assert_equal("n/a", worksheet.outputs_energy_flows_c122); end
  def test_outputs_energy_flows_d122; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d122); end
  def test_outputs_energy_flows_e122; assert_equal("n/a", worksheet.outputs_energy_flows_e122); end
  def test_outputs_energy_flows_f122; assert_equal("Non domestic", worksheet.outputs_energy_flows_f122); end
  def test_outputs_energy_flows_i122; assert_equal("E.01", worksheet.outputs_energy_flows_i122); end
  def test_outputs_energy_flows_j122; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j122); end
  def test_outputs_energy_flows_k122; assert_equal("Non-residential", worksheet.outputs_energy_flows_k122); end
  def test_outputs_energy_flows_v122; assert_in_epsilon(17.958150562902418, worksheet.outputs_energy_flows_v122, 0.002); end
  def test_outputs_energy_flows_w122; assert_in_epsilon(19.693217842837097, worksheet.outputs_energy_flows_w122, 0.002); end
  def test_outputs_energy_flows_x122; assert_in_epsilon(21.876442024825025, worksheet.outputs_energy_flows_x122, 0.002); end
  def test_outputs_energy_flows_y122; assert_in_epsilon(24.040710873692547, worksheet.outputs_energy_flows_y122, 0.002); end
  def test_outputs_energy_flows_z122; assert_in_epsilon(26.16567859712769, worksheet.outputs_energy_flows_z122, 0.002); end
  def test_outputs_energy_flows_aa122; assert_in_epsilon(28.238189985206873, worksheet.outputs_energy_flows_aa122, 0.002); end
  def test_outputs_energy_flows_ab122; assert_in_epsilon(30.23894028179111, worksheet.outputs_energy_flows_ab122, 0.002); end
  def test_outputs_energy_flows_ac122; assert_in_epsilon(32.142534278036656, worksheet.outputs_energy_flows_ac122, 0.002); end
  def test_outputs_energy_flows_ad122; assert_in_epsilon(33.92522031812264, worksheet.outputs_energy_flows_ad122, 0.002); end
  def test_outputs_energy_flows_c124; assert_equal("n/a", worksheet.outputs_energy_flows_c124); end
  def test_outputs_energy_flows_d124; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d124); end
  def test_outputs_energy_flows_e124; assert_equal("n/a", worksheet.outputs_energy_flows_e124); end
  def test_outputs_energy_flows_f124; assert_equal("Steel", worksheet.outputs_energy_flows_f124); end
  def test_outputs_energy_flows_i124; assert_equal("E.01", worksheet.outputs_energy_flows_i124); end
  def test_outputs_energy_flows_j124; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j124); end
  def test_outputs_energy_flows_v124; assert_in_epsilon(3.944226186432, worksheet.outputs_energy_flows_v124, 0.002); end
  def test_outputs_energy_flows_w124; assert_in_epsilon(4.184614270537691, worksheet.outputs_energy_flows_w124, 0.002); end
  def test_outputs_energy_flows_x124; assert_in_epsilon(4.458376176345134, worksheet.outputs_energy_flows_x124, 0.002); end
  def test_outputs_energy_flows_y124; assert_in_epsilon(4.780212548026977, worksheet.outputs_energy_flows_y124, 0.002); end
  def test_outputs_energy_flows_z124; assert_in_epsilon(5.089452219410444, worksheet.outputs_energy_flows_z124, 0.002); end
  def test_outputs_energy_flows_aa124; assert_in_epsilon(5.364298014252564, worksheet.outputs_energy_flows_aa124, 0.002); end
  def test_outputs_energy_flows_ab124; assert_in_epsilon(5.665249883358778, worksheet.outputs_energy_flows_ab124, 0.002); end
  def test_outputs_energy_flows_ac124; assert_in_epsilon(5.980738299892016, worksheet.outputs_energy_flows_ac124, 0.002); end
  def test_outputs_energy_flows_ad124; assert_in_epsilon(6.308555803454078, worksheet.outputs_energy_flows_ad124, 0.002); end
  def test_outputs_energy_flows_c126; assert_equal("n/a", worksheet.outputs_energy_flows_c126); end
  def test_outputs_energy_flows_d126; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d126); end
  def test_outputs_energy_flows_e126; assert_equal("n/a", worksheet.outputs_energy_flows_e126); end
  def test_outputs_energy_flows_f126; assert_equal("Aluminium", worksheet.outputs_energy_flows_f126); end
  def test_outputs_energy_flows_i126; assert_equal("E.01", worksheet.outputs_energy_flows_i126); end
  def test_outputs_energy_flows_j126; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j126); end
  def test_outputs_energy_flows_v126; assert_in_epsilon(2.4376557108758776, worksheet.outputs_energy_flows_v126, 0.002); end
  def test_outputs_energy_flows_w126; assert_in_epsilon(2.691434011797197, worksheet.outputs_energy_flows_w126, 0.002); end
  def test_outputs_energy_flows_x126; assert_in_epsilon(2.9630128206365924, worksheet.outputs_energy_flows_x126, 0.002); end
  def test_outputs_energy_flows_y126; assert_in_epsilon(3.371338127933758, worksheet.outputs_energy_flows_y126, 0.002); end
  def test_outputs_energy_flows_z126; assert_in_epsilon(3.8015668946283085, worksheet.outputs_energy_flows_z126, 0.002); end
  def test_outputs_energy_flows_aa126; assert_in_epsilon(4.232925503776982, worksheet.outputs_energy_flows_aa126, 0.002); end
  def test_outputs_energy_flows_ab126; assert_in_epsilon(4.712941300838371, worksheet.outputs_energy_flows_ab126, 0.002); end
  def test_outputs_energy_flows_ac126; assert_in_epsilon(5.227608111089525, worksheet.outputs_energy_flows_ac126, 0.002); end
  def test_outputs_energy_flows_ad126; assert_in_epsilon(5.801268485160057, worksheet.outputs_energy_flows_ad126, 0.002); end
  def test_outputs_energy_flows_c128; assert_equal("n/a", worksheet.outputs_energy_flows_c128); end
  def test_outputs_energy_flows_d128; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d128); end
  def test_outputs_energy_flows_e128; assert_equal("n/a", worksheet.outputs_energy_flows_e128); end
  def test_outputs_energy_flows_f128; assert_equal("Cement", worksheet.outputs_energy_flows_f128); end
  def test_outputs_energy_flows_i128; assert_equal("E.01", worksheet.outputs_energy_flows_i128); end
  def test_outputs_energy_flows_j128; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j128); end
  def test_outputs_energy_flows_v128; assert_in_epsilon(1.288872331200076, worksheet.outputs_energy_flows_v128, 0.002); end
  def test_outputs_energy_flows_w128; assert_in_epsilon(1.3234661609101661, worksheet.outputs_energy_flows_w128, 0.002); end
  def test_outputs_energy_flows_x128; assert_in_epsilon(1.439624050167224, worksheet.outputs_energy_flows_x128, 0.002); end
  def test_outputs_energy_flows_y128; assert_in_epsilon(1.4925794027618162, worksheet.outputs_energy_flows_y128, 0.002); end
  def test_outputs_energy_flows_z128; assert_in_epsilon(1.5388014471938705, worksheet.outputs_energy_flows_z128, 0.002); end
  def test_outputs_energy_flows_aa128; assert_in_epsilon(1.5784187626802835, worksheet.outputs_energy_flows_aa128, 0.002); end
  def test_outputs_energy_flows_ab128; assert_in_epsilon(1.6075514298580227, worksheet.outputs_energy_flows_ab128, 0.002); end
  def test_outputs_energy_flows_ac128; assert_in_epsilon(1.6330017661830032, worksheet.outputs_energy_flows_ac128, 0.002); end
  def test_outputs_energy_flows_ad128; assert_in_epsilon(1.6595745485394366, worksheet.outputs_energy_flows_ad128, 0.002); end
  def test_outputs_energy_flows_c130; assert_equal("n/a", worksheet.outputs_energy_flows_c130); end
  def test_outputs_energy_flows_d130; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d130); end
  def test_outputs_energy_flows_e130; assert_equal("n/a", worksheet.outputs_energy_flows_e130); end
  def test_outputs_energy_flows_f130; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f130); end
  def test_outputs_energy_flows_i130; assert_equal("E.01", worksheet.outputs_energy_flows_i130); end
  def test_outputs_energy_flows_j130; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j130); end
  def test_outputs_energy_flows_v130; assert_in_epsilon(1.915936127392674, worksheet.outputs_energy_flows_v130, 0.002); end
  def test_outputs_energy_flows_w130; assert_in_epsilon(1.9884880589445766, worksheet.outputs_energy_flows_w130, 0.002); end
  def test_outputs_energy_flows_x130; assert_in_epsilon(2.0490029527446123, worksheet.outputs_energy_flows_x130, 0.002); end
  def test_outputs_energy_flows_y130; assert_in_epsilon(2.198652871753258, worksheet.outputs_energy_flows_y130, 0.002); end
  def test_outputs_energy_flows_z130; assert_in_epsilon(2.3454051347022613, worksheet.outputs_energy_flows_z130, 0.002); end
  def test_outputs_energy_flows_aa130; assert_in_epsilon(2.482678942162228, worksheet.outputs_energy_flows_aa130, 0.002); end
  def test_outputs_energy_flows_ab130; assert_in_epsilon(2.6329429529679884, worksheet.outputs_energy_flows_ab130, 0.002); end
  def test_outputs_energy_flows_ac130; assert_in_epsilon(2.7750608713415374, worksheet.outputs_energy_flows_ac130, 0.002); end
  def test_outputs_energy_flows_ad130; assert_in_epsilon(2.9317790136226183, worksheet.outputs_energy_flows_ad130, 0.002); end
  def test_outputs_energy_flows_c132; assert_equal("n/a", worksheet.outputs_energy_flows_c132); end
  def test_outputs_energy_flows_d132; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d132); end
  def test_outputs_energy_flows_e132; assert_equal("n/a", worksheet.outputs_energy_flows_e132); end
  def test_outputs_energy_flows_f132; assert_equal("Chemicals", worksheet.outputs_energy_flows_f132); end
  def test_outputs_energy_flows_i132; assert_equal("E.01", worksheet.outputs_energy_flows_i132); end
  def test_outputs_energy_flows_j132; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j132); end
  def test_outputs_energy_flows_v132; assert_in_epsilon(4.406059895595235, worksheet.outputs_energy_flows_v132, 0.002); end
  def test_outputs_energy_flows_w132; assert_in_epsilon(4.638035328717732, worksheet.outputs_energy_flows_w132, 0.002); end
  def test_outputs_energy_flows_x132; assert_in_epsilon(4.950863752770094, worksheet.outputs_energy_flows_x132, 0.002); end
  def test_outputs_energy_flows_y132; assert_in_epsilon(5.603555883089332, worksheet.outputs_energy_flows_y132, 0.002); end
  def test_outputs_energy_flows_z132; assert_in_epsilon(6.300467765846636, worksheet.outputs_energy_flows_z132, 0.002); end
  def test_outputs_energy_flows_aa132; assert_in_epsilon(7.014207649634278, worksheet.outputs_energy_flows_aa132, 0.002); end
  def test_outputs_energy_flows_ab132; assert_in_epsilon(7.838780273046611, worksheet.outputs_energy_flows_ab132, 0.002); end
  def test_outputs_energy_flows_ac132; assert_in_epsilon(8.69962534106574, worksheet.outputs_energy_flows_ac132, 0.002); end
  def test_outputs_energy_flows_ad132; assert_in_epsilon(9.694328348435617, worksheet.outputs_energy_flows_ad132, 0.002); end
  def test_outputs_energy_flows_c134; assert_equal("n/a", worksheet.outputs_energy_flows_c134); end
  def test_outputs_energy_flows_d134; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d134); end
  def test_outputs_energy_flows_e134; assert_equal("n/a", worksheet.outputs_energy_flows_e134); end
  def test_outputs_energy_flows_f134; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f134); end
  def test_outputs_energy_flows_i134; assert_equal("E.01", worksheet.outputs_energy_flows_i134); end
  def test_outputs_energy_flows_j134; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j134); end
  def test_outputs_energy_flows_l134; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l134); end
  def test_outputs_energy_flows_m134; assert_equal("Timber", worksheet.outputs_energy_flows_m134); end
  def test_outputs_energy_flows_v134; assert_in_epsilon(15.29266327822456, worksheet.outputs_energy_flows_v134, 0.002); end
  def test_outputs_energy_flows_w134; assert_in_epsilon(15.682723609600844, worksheet.outputs_energy_flows_w134, 0.002); end
  def test_outputs_energy_flows_x134; assert_in_epsilon(16.597082394071116, worksheet.outputs_energy_flows_x134, 0.002); end
  def test_outputs_energy_flows_y134; assert_in_epsilon(17.100107518811107, worksheet.outputs_energy_flows_y134, 0.002); end
  def test_outputs_energy_flows_z134; assert_in_epsilon(17.513008961372492, worksheet.outputs_energy_flows_z134, 0.002); end
  def test_outputs_energy_flows_aa134; assert_in_epsilon(17.82343527375719, worksheet.outputs_energy_flows_aa134, 0.002); end
  def test_outputs_energy_flows_ab134; assert_in_epsilon(18.07049339214556, worksheet.outputs_energy_flows_ab134, 0.002); end
  def test_outputs_energy_flows_ac134; assert_in_epsilon(18.27523638973187, worksheet.outputs_energy_flows_ac134, 0.002); end
  def test_outputs_energy_flows_ad134; assert_in_epsilon(18.465266010182187, worksheet.outputs_energy_flows_ad134, 0.002); end
  def test_outputs_energy_flows_c136; assert_equal("n/a", worksheet.outputs_energy_flows_c136); end
  def test_outputs_energy_flows_d136; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d136); end
  def test_outputs_energy_flows_e136; assert_equal("n/a", worksheet.outputs_energy_flows_e136); end
  def test_outputs_energy_flows_f136; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f136); end
  def test_outputs_energy_flows_i136; assert_equal("E.01", worksheet.outputs_energy_flows_i136); end
  def test_outputs_energy_flows_j136; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j136); end
  def test_outputs_energy_flows_l136; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l136); end
  def test_outputs_energy_flows_m136; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m136); end
  def test_outputs_energy_flows_v136; assert_in_delta(0.46820460050501056, worksheet.outputs_energy_flows_v136, 0.002); end
  def test_outputs_energy_flows_w136; assert_in_delta(0.9449365797557963, worksheet.outputs_energy_flows_w136, 0.002); end
  def test_outputs_energy_flows_x136; assert_in_epsilon(1.290316714249259, worksheet.outputs_energy_flows_x136, 0.002); end
  def test_outputs_energy_flows_y136; assert_in_epsilon(1.6598997793245291, worksheet.outputs_energy_flows_y136, 0.002); end
  def test_outputs_energy_flows_z136; assert_in_epsilon(2.0848955731319005, worksheet.outputs_energy_flows_z136, 0.002); end
  def test_outputs_energy_flows_aa136; assert_in_epsilon(2.5505328416258175, worksheet.outputs_energy_flows_aa136, 0.002); end
  def test_outputs_energy_flows_ab136; assert_in_epsilon(3.0690139012223963, worksheet.outputs_energy_flows_ab136, 0.002); end
  def test_outputs_energy_flows_ac136; assert_in_epsilon(3.62084369352744, worksheet.outputs_energy_flows_ac136, 0.002); end
  def test_outputs_energy_flows_ad136; assert_in_epsilon(4.22230951185359, worksheet.outputs_energy_flows_ad136, 0.002); end
  def test_outputs_energy_flows_c138; assert_equal("n/a", worksheet.outputs_energy_flows_c138); end
  def test_outputs_energy_flows_d138; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d138); end
  def test_outputs_energy_flows_e138; assert_equal("n/a", worksheet.outputs_energy_flows_e138); end
  def test_outputs_energy_flows_f138; assert_equal("International passenger", worksheet.outputs_energy_flows_f138); end
  def test_outputs_energy_flows_i138; assert_equal("E.01", worksheet.outputs_energy_flows_i138); end
  def test_outputs_energy_flows_j138; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j138); end
  def test_outputs_energy_flows_l138; assert_equal("International", worksheet.outputs_energy_flows_l138); end
  def test_outputs_energy_flows_v138; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v138||0), 0.002); end
  def test_outputs_energy_flows_w138; assert_in_delta(0.005827565679163796, worksheet.outputs_energy_flows_w138, 0.002); end
  def test_outputs_energy_flows_x138; assert_in_delta(0.014027660590017331, worksheet.outputs_energy_flows_x138, 0.002); end
  def test_outputs_energy_flows_y138; assert_in_delta(0.022253881551420725, worksheet.outputs_energy_flows_y138, 0.002); end
  def test_outputs_energy_flows_z138; assert_in_delta(0.031052951809817375, worksheet.outputs_energy_flows_z138, 0.002); end
  def test_outputs_energy_flows_aa138; assert_in_delta(0.04088563619247781, worksheet.outputs_energy_flows_aa138, 0.002); end
  def test_outputs_energy_flows_ab138; assert_in_delta(0.05196825703029735, worksheet.outputs_energy_flows_ab138, 0.002); end
  def test_outputs_energy_flows_ac138; assert_in_delta(0.06464903940872126, worksheet.outputs_energy_flows_ac138, 0.002); end
  def test_outputs_energy_flows_ad138; assert_in_delta(0.07938710329755731, worksheet.outputs_energy_flows_ad138, 0.002); end
  def test_outputs_energy_flows_c140; assert_equal("n/a", worksheet.outputs_energy_flows_c140); end
  def test_outputs_energy_flows_d140; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d140); end
  def test_outputs_energy_flows_e140; assert_equal("n/a", worksheet.outputs_energy_flows_e140); end
  def test_outputs_energy_flows_f140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f140); end
  def test_outputs_energy_flows_i140; assert_equal("E.01", worksheet.outputs_energy_flows_i140); end
  def test_outputs_energy_flows_j140; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j140); end
  def test_outputs_energy_flows_l140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l140); end
  def test_outputs_energy_flows_v140; assert_in_epsilon(1.064394758330311, worksheet.outputs_energy_flows_v140, 0.002); end
  def test_outputs_energy_flows_w140; assert_in_epsilon(1.2971797313983675, worksheet.outputs_energy_flows_w140, 0.002); end
  def test_outputs_energy_flows_x140; assert_in_epsilon(1.515217407685872, worksheet.outputs_energy_flows_x140, 0.002); end
  def test_outputs_energy_flows_y140; assert_in_epsilon(1.728215414805603, worksheet.outputs_energy_flows_y140, 0.002); end
  def test_outputs_energy_flows_z140; assert_in_epsilon(1.8866147319135318, worksheet.outputs_energy_flows_z140, 0.002); end
  def test_outputs_energy_flows_aa140; assert_in_epsilon(1.9993602705913824, worksheet.outputs_energy_flows_aa140, 0.002); end
  def test_outputs_energy_flows_ab140; assert_in_epsilon(2.0665622037923046, worksheet.outputs_energy_flows_ab140, 0.002); end
  def test_outputs_energy_flows_ac140; assert_in_epsilon(2.1076809771041534, worksheet.outputs_energy_flows_ac140, 0.002); end
  def test_outputs_energy_flows_ad140; assert_in_epsilon(2.122922318759055, worksheet.outputs_energy_flows_ad140, 0.002); end
  def test_outputs_energy_flows_c142; assert_equal("n/a", worksheet.outputs_energy_flows_c142); end
  def test_outputs_energy_flows_d142; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d142); end
  def test_outputs_energy_flows_e142; assert_equal("n/a", worksheet.outputs_energy_flows_e142); end
  def test_outputs_energy_flows_f142; assert_equal("International freight", worksheet.outputs_energy_flows_f142); end
  def test_outputs_energy_flows_i142; assert_equal("E.01", worksheet.outputs_energy_flows_i142); end
  def test_outputs_energy_flows_j142; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j142); end
  def test_outputs_energy_flows_l142; assert_equal("International freight", worksheet.outputs_energy_flows_l142); end
  def test_outputs_energy_flows_v142; assert_in_delta(0.08957295494723592, worksheet.outputs_energy_flows_v142, 0.002); end
  def test_outputs_energy_flows_w142; assert_in_delta(0.12664837222685937, worksheet.outputs_energy_flows_w142, 0.002); end
  def test_outputs_energy_flows_x142; assert_in_delta(0.1580386113278336, worksheet.outputs_energy_flows_x142, 0.002); end
  def test_outputs_energy_flows_y142; assert_in_delta(0.19445164831341855, worksheet.outputs_energy_flows_y142, 0.002); end
  def test_outputs_energy_flows_z142; assert_in_delta(0.2317153872785258, worksheet.outputs_energy_flows_z142, 0.002); end
  def test_outputs_energy_flows_aa142; assert_in_delta(0.25484545179393736, worksheet.outputs_energy_flows_aa142, 0.002); end
  def test_outputs_energy_flows_ab142; assert_in_delta(0.271889677874718, worksheet.outputs_energy_flows_ab142, 0.002); end
  def test_outputs_energy_flows_ac142; assert_in_delta(0.28722899086155324, worksheet.outputs_energy_flows_ac142, 0.002); end
  def test_outputs_energy_flows_ad142; assert_in_delta(0.2961714980200345, worksheet.outputs_energy_flows_ad142, 0.002); end
  def test_outputs_energy_flows_c144; assert_equal("n/a", worksheet.outputs_energy_flows_c144); end
  def test_outputs_energy_flows_d144; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d144); end
  def test_outputs_energy_flows_e144; assert_equal("n/a", worksheet.outputs_energy_flows_e144); end
  def test_outputs_energy_flows_f144; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f144); end
  def test_outputs_energy_flows_i144; assert_equal("E.01", worksheet.outputs_energy_flows_i144); end
  def test_outputs_energy_flows_j144; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j144); end
  def test_outputs_energy_flows_v144; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v144, 0.002); end
  def test_outputs_energy_flows_w144; assert_in_delta(0.011848631825382774, worksheet.outputs_energy_flows_w144, 0.002); end
  def test_outputs_energy_flows_x144; assert_in_delta(0.011680926177010576, worksheet.outputs_energy_flows_x144, 0.002); end
  def test_outputs_energy_flows_y144; assert_in_delta(0.010959667123937606, worksheet.outputs_energy_flows_y144, 0.002); end
  def test_outputs_energy_flows_z144; assert_in_delta(0.072959903245684, worksheet.outputs_energy_flows_z144, 0.002); end
  def test_outputs_energy_flows_aa144; assert_in_delta(0.19361344126777486, worksheet.outputs_energy_flows_aa144, 0.002); end
  def test_outputs_energy_flows_ab144; assert_in_delta(0.3279951383489014, worksheet.outputs_energy_flows_ab144, 0.002); end
  def test_outputs_energy_flows_ac144; assert_in_delta(0.5064873720779843, worksheet.outputs_energy_flows_ac144, 0.002); end
  def test_outputs_energy_flows_ad144; assert_in_delta(0.7354306868758388, worksheet.outputs_energy_flows_ad144, 0.002); end
  def test_outputs_energy_flows_c146; assert_equal("n/a", worksheet.outputs_energy_flows_c146); end
  def test_outputs_energy_flows_d146; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d146); end
  def test_outputs_energy_flows_e146; assert_equal("G.01", worksheet.outputs_energy_flows_e146); end
  def test_outputs_energy_flows_f146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f146); end
  def test_outputs_energy_flows_g146; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g146); end
  def test_outputs_energy_flows_h146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h146); end
  def test_outputs_energy_flows_i146; assert_equal("E.01", worksheet.outputs_energy_flows_i146); end
  def test_outputs_energy_flows_j146; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j146); end
  def test_outputs_energy_flows_v146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v146||0), 0.002); end
  def test_outputs_energy_flows_w146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w146||0), 0.002); end
  def test_outputs_energy_flows_x146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x146||0), 0.002); end
  def test_outputs_energy_flows_y146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y146||0), 0.002); end
  def test_outputs_energy_flows_z146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z146||0), 0.002); end
  def test_outputs_energy_flows_aa146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa146||0), 0.002); end
  def test_outputs_energy_flows_ab146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab146||0), 0.002); end
  def test_outputs_energy_flows_ac146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac146||0), 0.002); end
  def test_outputs_energy_flows_ad146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad146||0), 0.002); end
  def test_outputs_energy_flows_c148; assert_equal("n/a", worksheet.outputs_energy_flows_c148); end
  def test_outputs_energy_flows_d148; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d148); end
  def test_outputs_energy_flows_e148; assert_equal("n/a", worksheet.outputs_energy_flows_e148); end
  def test_outputs_energy_flows_f148; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f148); end
  def test_outputs_energy_flows_g148; assert_equal("n/a", worksheet.outputs_energy_flows_g148); end
  def test_outputs_energy_flows_h148; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h148); end
  def test_outputs_energy_flows_i148; assert_equal("E.01", worksheet.outputs_energy_flows_i148); end
  def test_outputs_energy_flows_j148; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j148); end
  def test_outputs_energy_flows_v148; assert_in_epsilon(3.955, worksheet.outputs_energy_flows_v148, 0.002); end
  def test_outputs_energy_flows_w148; assert_in_epsilon(4.037310404753723, worksheet.outputs_energy_flows_w148, 0.002); end
  def test_outputs_energy_flows_x148; assert_in_epsilon(4.206560375009833, worksheet.outputs_energy_flows_x148, 0.002); end
  def test_outputs_energy_flows_y148; assert_in_epsilon(4.362984117080625, worksheet.outputs_energy_flows_y148, 0.002); end
  def test_outputs_energy_flows_z148; assert_in_epsilon(4.508840843755314, worksheet.outputs_energy_flows_z148, 0.002); end
  def test_outputs_energy_flows_aa148; assert_in_epsilon(4.643740603626856, worksheet.outputs_energy_flows_aa148, 0.002); end
  def test_outputs_energy_flows_ab148; assert_in_epsilon(4.7769670905436294, worksheet.outputs_energy_flows_ab148, 0.002); end
  def test_outputs_energy_flows_ac148; assert_in_epsilon(4.898838016755326, worksheet.outputs_energy_flows_ac148, 0.002); end
  def test_outputs_energy_flows_ad148; assert_in_epsilon(5.026344918109777, worksheet.outputs_energy_flows_ad148, 0.002); end
  def test_outputs_energy_flows_d150; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d150); end
  def test_outputs_energy_flows_f150; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f150); end
  def test_outputs_energy_flows_i150; assert_equal("G.E.02", worksheet.outputs_energy_flows_i150); end
  def test_outputs_energy_flows_j150; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j150); end
  def test_outputs_energy_flows_p150; assert_equal("Net balance", worksheet.outputs_energy_flows_p150); end
  def test_outputs_energy_flows_v150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_v150, 0.002); end
  def test_outputs_energy_flows_w150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_w150, 0.002); end
  def test_outputs_energy_flows_x150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x150||0), 0.002); end
  def test_outputs_energy_flows_y150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_y150, 0.002); end
  def test_outputs_energy_flows_z150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_z150, 0.002); end
  def test_outputs_energy_flows_aa150; assert_in_delta(1.4210854715202004e-14, worksheet.outputs_energy_flows_aa150, 0.002); end
  def test_outputs_energy_flows_ab150; assert_in_delta(-2.842170943040401e-14, worksheet.outputs_energy_flows_ab150, 0.002); end
  def test_outputs_energy_flows_ac150; assert_in_delta(2.842170943040401e-14, worksheet.outputs_energy_flows_ac150, 0.002); end
  def test_outputs_energy_flows_ad150; assert_in_delta(2.842170943040401e-14, worksheet.outputs_energy_flows_ad150, 0.002); end
  def test_outputs_energy_flows_c152; assert_equal("n/a", worksheet.outputs_energy_flows_c152); end
  def test_outputs_energy_flows_d152; assert_equal("Solid", worksheet.outputs_energy_flows_d152); end
  def test_outputs_energy_flows_e152; assert_equal("n/a", worksheet.outputs_energy_flows_e152); end
  def test_outputs_energy_flows_f152; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f152); end
  def test_outputs_energy_flows_i152; assert_equal("C.01", worksheet.outputs_energy_flows_i152); end
  def test_outputs_energy_flows_j152; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j152); end
  def test_outputs_energy_flows_k152; assert_equal("Global buildings", worksheet.outputs_energy_flows_k152); end
  def test_outputs_energy_flows_v152; assert_in_epsilon(12.848215103064577, worksheet.outputs_energy_flows_v152, 0.002); end
  def test_outputs_energy_flows_w152; assert_in_epsilon(13.611095574200313, worksheet.outputs_energy_flows_w152, 0.002); end
  def test_outputs_energy_flows_x152; assert_in_epsilon(13.986019970227051, worksheet.outputs_energy_flows_x152, 0.002); end
  def test_outputs_energy_flows_y152; assert_in_epsilon(14.289492434176495, worksheet.outputs_energy_flows_y152, 0.002); end
  def test_outputs_energy_flows_z152; assert_in_epsilon(14.48045710494599, worksheet.outputs_energy_flows_z152, 0.002); end
  def test_outputs_energy_flows_aa152; assert_in_epsilon(14.553530127732342, worksheet.outputs_energy_flows_aa152, 0.002); end
  def test_outputs_energy_flows_ab152; assert_in_epsilon(14.531670314364423, worksheet.outputs_energy_flows_ab152, 0.002); end
  def test_outputs_energy_flows_ac152; assert_in_epsilon(14.420355896083276, worksheet.outputs_energy_flows_ac152, 0.002); end
  def test_outputs_energy_flows_ad152; assert_in_epsilon(14.19916189770691, worksheet.outputs_energy_flows_ad152, 0.002); end
  def test_outputs_energy_flows_c154; assert_equal("n/a", worksheet.outputs_energy_flows_c154); end
  def test_outputs_energy_flows_d154; assert_equal("Solid", worksheet.outputs_energy_flows_d154); end
  def test_outputs_energy_flows_e154; assert_equal("n/a", worksheet.outputs_energy_flows_e154); end
  def test_outputs_energy_flows_f154; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f154); end
  def test_outputs_energy_flows_i154; assert_equal("C.01", worksheet.outputs_energy_flows_i154); end
  def test_outputs_energy_flows_j154; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j154); end
  def test_outputs_energy_flows_k154; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k154); end
  def test_outputs_energy_flows_l154; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l154); end
  def test_outputs_energy_flows_v154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v154||0), 0.002); end
  def test_outputs_energy_flows_w154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w154||0), 0.002); end
  def test_outputs_energy_flows_x154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x154||0), 0.002); end
  def test_outputs_energy_flows_y154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y154||0), 0.002); end
  def test_outputs_energy_flows_z154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z154||0), 0.002); end
  def test_outputs_energy_flows_aa154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa154||0), 0.002); end
  def test_outputs_energy_flows_ab154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab154||0), 0.002); end
  def test_outputs_energy_flows_ac154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac154||0), 0.002); end
  def test_outputs_energy_flows_ad154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad154||0), 0.002); end
  def test_outputs_energy_flows_c156; assert_equal("n/a", worksheet.outputs_energy_flows_c156); end
  def test_outputs_energy_flows_d156; assert_equal("Solid", worksheet.outputs_energy_flows_d156); end
  def test_outputs_energy_flows_e156; assert_equal("n/a", worksheet.outputs_energy_flows_e156); end
  def test_outputs_energy_flows_f156; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f156); end
  def test_outputs_energy_flows_i156; assert_equal("C.01", worksheet.outputs_energy_flows_i156); end
  def test_outputs_energy_flows_j156; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j156); end
  def test_outputs_energy_flows_k156; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k156); end
  def test_outputs_energy_flows_l156; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l156); end
  def test_outputs_energy_flows_v156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v156||0), 0.002); end
  def test_outputs_energy_flows_w156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w156||0), 0.002); end
  def test_outputs_energy_flows_x156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x156||0), 0.002); end
  def test_outputs_energy_flows_y156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y156||0), 0.002); end
  def test_outputs_energy_flows_z156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z156||0), 0.002); end
  def test_outputs_energy_flows_aa156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa156||0), 0.002); end
  def test_outputs_energy_flows_ab156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab156||0), 0.002); end
  def test_outputs_energy_flows_ac156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac156||0), 0.002); end
  def test_outputs_energy_flows_ad156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad156||0), 0.002); end
  def test_outputs_energy_flows_c158; assert_equal("n/a", worksheet.outputs_energy_flows_c158); end
  def test_outputs_energy_flows_d158; assert_equal("Solid", worksheet.outputs_energy_flows_d158); end
  def test_outputs_energy_flows_e158; assert_equal("n/a", worksheet.outputs_energy_flows_e158); end
  def test_outputs_energy_flows_f158; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f158); end
  def test_outputs_energy_flows_i158; assert_equal("C.01", worksheet.outputs_energy_flows_i158); end
  def test_outputs_energy_flows_j158; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j158); end
  def test_outputs_energy_flows_k158; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k158); end
  def test_outputs_energy_flows_l158; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l158); end
  def test_outputs_energy_flows_v158; assert_in_epsilon(2.7875467832665146, worksheet.outputs_energy_flows_v158, 0.002); end
  def test_outputs_energy_flows_w158; assert_in_epsilon(2.836352246295604, worksheet.outputs_energy_flows_w158, 0.002); end
  def test_outputs_energy_flows_x158; assert_in_epsilon(2.77289699197687, worksheet.outputs_energy_flows_x158, 0.002); end
  def test_outputs_energy_flows_y158; assert_in_epsilon(2.6837334357795584, worksheet.outputs_energy_flows_y158, 0.002); end
  def test_outputs_energy_flows_z158; assert_in_epsilon(2.5651601546917506, worksheet.outputs_energy_flows_z158, 0.002); end
  def test_outputs_energy_flows_aa158; assert_in_epsilon(2.4130213785036885, worksheet.outputs_energy_flows_aa158, 0.002); end
  def test_outputs_energy_flows_ab158; assert_in_epsilon(2.243275803665913, worksheet.outputs_energy_flows_ab158, 0.002); end
  def test_outputs_energy_flows_ac158; assert_in_epsilon(2.053038348468063, worksheet.outputs_energy_flows_ac158, 0.002); end
  def test_outputs_energy_flows_ad158; assert_in_epsilon(1.855097881493973, worksheet.outputs_energy_flows_ad158, 0.002); end
  def test_outputs_energy_flows_c160; assert_equal("n/a", worksheet.outputs_energy_flows_c160); end
  def test_outputs_energy_flows_d160; assert_equal("Solid", worksheet.outputs_energy_flows_d160); end
  def test_outputs_energy_flows_e160; assert_equal("n/a", worksheet.outputs_energy_flows_e160); end
  def test_outputs_energy_flows_f160; assert_equal("Non domestic", worksheet.outputs_energy_flows_f160); end
  def test_outputs_energy_flows_i160; assert_equal("C.01", worksheet.outputs_energy_flows_i160); end
  def test_outputs_energy_flows_j160; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j160); end
  def test_outputs_energy_flows_k160; assert_equal("Non-residential", worksheet.outputs_energy_flows_k160); end
  def test_outputs_energy_flows_v160; assert_in_delta(0.8793766922958857, worksheet.outputs_energy_flows_v160, 0.002); end
  def test_outputs_energy_flows_w160; assert_in_delta(0.9048453397672145, worksheet.outputs_energy_flows_w160, 0.002); end
  def test_outputs_energy_flows_x160; assert_in_delta(0.9480570618015369, worksheet.outputs_energy_flows_x160, 0.002); end
  def test_outputs_energy_flows_y160; assert_in_delta(0.9805902242872577, worksheet.outputs_energy_flows_y160, 0.002); end
  def test_outputs_energy_flows_z160; assert_in_epsilon(1.0021762746803065, worksheet.outputs_energy_flows_z160, 0.002); end
  def test_outputs_energy_flows_aa160; assert_in_epsilon(1.012989496705735, worksheet.outputs_energy_flows_aa160, 0.002); end
  def test_outputs_energy_flows_ab160; assert_in_epsilon(1.0131055106873503, worksheet.outputs_energy_flows_ab160, 0.002); end
  def test_outputs_energy_flows_ac160; assert_in_epsilon(1.002569306369524, worksheet.outputs_energy_flows_ac160, 0.002); end
  def test_outputs_energy_flows_ad160; assert_in_delta(0.9816794222820715, worksheet.outputs_energy_flows_ad160, 0.002); end
  def test_outputs_energy_flows_c162; assert_equal("n/a", worksheet.outputs_energy_flows_c162); end
  def test_outputs_energy_flows_d162; assert_equal("Solid", worksheet.outputs_energy_flows_d162); end
  def test_outputs_energy_flows_e162; assert_equal("n/a", worksheet.outputs_energy_flows_e162); end
  def test_outputs_energy_flows_f162; assert_equal("Steel", worksheet.outputs_energy_flows_f162); end
  def test_outputs_energy_flows_i162; assert_equal("C.01", worksheet.outputs_energy_flows_i162); end
  def test_outputs_energy_flows_j162; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j162); end
  def test_outputs_energy_flows_v162; assert_in_delta(0.5489501886, worksheet.outputs_energy_flows_v162, 0.002); end
  def test_outputs_energy_flows_w162; assert_in_delta(0.5970174967904269, worksheet.outputs_energy_flows_w162, 0.002); end
  def test_outputs_energy_flows_x162; assert_in_delta(0.6700393395715925, worksheet.outputs_energy_flows_x162, 0.002); end
  def test_outputs_energy_flows_y162; assert_in_delta(0.757986544533076, worksheet.outputs_energy_flows_y162, 0.002); end
  def test_outputs_energy_flows_z162; assert_in_delta(0.8524742829289957, worksheet.outputs_energy_flows_z162, 0.002); end
  def test_outputs_energy_flows_aa162; assert_in_delta(0.9498565212176379, worksheet.outputs_energy_flows_aa162, 0.002); end
  def test_outputs_energy_flows_ab162; assert_in_epsilon(1.0609548963759885, worksheet.outputs_energy_flows_ab162, 0.002); end
  def test_outputs_energy_flows_ac162; assert_in_epsilon(1.1848005268641204, worksheet.outputs_energy_flows_ac162, 0.002); end
  def test_outputs_energy_flows_ad162; assert_in_epsilon(1.3219508582368702, worksheet.outputs_energy_flows_ad162, 0.002); end
  def test_outputs_energy_flows_c164; assert_equal("n/a", worksheet.outputs_energy_flows_c164); end
  def test_outputs_energy_flows_d164; assert_equal("Solid", worksheet.outputs_energy_flows_d164); end
  def test_outputs_energy_flows_e164; assert_equal("n/a", worksheet.outputs_energy_flows_e164); end
  def test_outputs_energy_flows_f164; assert_equal("Aluminium", worksheet.outputs_energy_flows_f164); end
  def test_outputs_energy_flows_i164; assert_equal("C.01", worksheet.outputs_energy_flows_i164); end
  def test_outputs_energy_flows_j164; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j164); end
  def test_outputs_energy_flows_v164; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v164||0), 0.002); end
  def test_outputs_energy_flows_w164; assert_in_delta(0.00027635451549754757, worksheet.outputs_energy_flows_w164, 0.002); end
  def test_outputs_energy_flows_x164; assert_in_delta(0.0006426468355848191, worksheet.outputs_energy_flows_x164, 0.002); end
  def test_outputs_energy_flows_y164; assert_in_delta(0.0011167747349453139, worksheet.outputs_energy_flows_y164, 0.002); end
  def test_outputs_energy_flows_z164; assert_in_delta(0.0016945961014442818, worksheet.outputs_energy_flows_z164, 0.002); end
  def test_outputs_energy_flows_aa164; assert_in_delta(0.002372120235013587, worksheet.outputs_energy_flows_aa164, 0.002); end
  def test_outputs_energy_flows_ab164; assert_in_delta(0.003181934992568356, worksheet.outputs_energy_flows_ab164, 0.002); end
  def test_outputs_energy_flows_ac164; assert_in_delta(0.004129838658531413, worksheet.outputs_energy_flows_ac164, 0.002); end
  def test_outputs_energy_flows_ad164; assert_in_delta(0.0052499092556115845, worksheet.outputs_energy_flows_ad164, 0.002); end
  def test_outputs_energy_flows_c166; assert_equal("n/a", worksheet.outputs_energy_flows_c166); end
  def test_outputs_energy_flows_d166; assert_equal("Solid", worksheet.outputs_energy_flows_d166); end
  def test_outputs_energy_flows_e166; assert_equal("n/a", worksheet.outputs_energy_flows_e166); end
  def test_outputs_energy_flows_f166; assert_equal("Cement", worksheet.outputs_energy_flows_f166); end
  def test_outputs_energy_flows_i166; assert_equal("C.01", worksheet.outputs_energy_flows_i166); end
  def test_outputs_energy_flows_j166; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j166); end
  def test_outputs_energy_flows_v166; assert_in_delta(0.4925092998042991, worksheet.outputs_energy_flows_v166, 0.002); end
  def test_outputs_energy_flows_w166; assert_in_delta(0.5526172298945298, worksheet.outputs_energy_flows_w166, 0.002); end
  def test_outputs_energy_flows_x166; assert_in_delta(0.6435620185643505, worksheet.outputs_energy_flows_x166, 0.002); end
  def test_outputs_energy_flows_y166; assert_in_delta(0.711238839006235, worksheet.outputs_energy_flows_y166, 0.002); end
  def test_outputs_energy_flows_z166; assert_in_delta(0.7786310552010675, worksheet.outputs_energy_flows_z166, 0.002); end
  def test_outputs_energy_flows_aa166; assert_in_delta(0.8452119885218695, worksheet.outputs_energy_flows_aa166, 0.002); end
  def test_outputs_energy_flows_ab166; assert_in_delta(0.9082054739494043, worksheet.outputs_energy_flows_ab166, 0.002); end
  def test_outputs_energy_flows_ac166; assert_in_delta(0.9707277878769008, worksheet.outputs_energy_flows_ac166, 0.002); end
  def test_outputs_energy_flows_ad166; assert_in_epsilon(1.0354510683802098, worksheet.outputs_energy_flows_ad166, 0.002); end
  def test_outputs_energy_flows_c168; assert_equal("n/a", worksheet.outputs_energy_flows_c168); end
  def test_outputs_energy_flows_d168; assert_equal("Solid", worksheet.outputs_energy_flows_d168); end
  def test_outputs_energy_flows_e168; assert_equal("n/a", worksheet.outputs_energy_flows_e168); end
  def test_outputs_energy_flows_f168; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f168); end
  def test_outputs_energy_flows_i168; assert_equal("C.01", worksheet.outputs_energy_flows_i168); end
  def test_outputs_energy_flows_j168; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j168); end
  def test_outputs_energy_flows_v168; assert_in_epsilon(1.7854467564492018, worksheet.outputs_energy_flows_v168, 0.002); end
  def test_outputs_energy_flows_w168; assert_in_epsilon(1.8592995174427098, worksheet.outputs_energy_flows_w168, 0.002); end
  def test_outputs_energy_flows_x168; assert_in_epsilon(1.9307936769914773, worksheet.outputs_energy_flows_x168, 0.002); end
  def test_outputs_energy_flows_y168; assert_in_epsilon(2.088009664517768, worksheet.outputs_energy_flows_y168, 0.002); end
  def test_outputs_energy_flows_z168; assert_in_epsilon(2.2448748812171977, worksheet.outputs_energy_flows_z168, 0.002); end
  def test_outputs_energy_flows_aa168; assert_in_epsilon(2.395021318550562, worksheet.outputs_energy_flows_aa168, 0.002); end
  def test_outputs_energy_flows_ab168; assert_in_epsilon(2.560125158110405, worksheet.outputs_energy_flows_ab168, 0.002); end
  def test_outputs_energy_flows_ac168; assert_in_epsilon(2.719817797814048, worksheet.outputs_energy_flows_ac168, 0.002); end
  def test_outputs_energy_flows_ad168; assert_in_epsilon(2.896429499942526, worksheet.outputs_energy_flows_ad168, 0.002); end
  def test_outputs_energy_flows_c170; assert_equal("n/a", worksheet.outputs_energy_flows_c170); end
  def test_outputs_energy_flows_d170; assert_equal("Solid", worksheet.outputs_energy_flows_d170); end
  def test_outputs_energy_flows_e170; assert_equal("n/a", worksheet.outputs_energy_flows_e170); end
  def test_outputs_energy_flows_f170; assert_equal("Chemicals", worksheet.outputs_energy_flows_f170); end
  def test_outputs_energy_flows_i170; assert_equal("C.01", worksheet.outputs_energy_flows_i170); end
  def test_outputs_energy_flows_j170; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j170); end
  def test_outputs_energy_flows_v170; assert_in_delta(0.16313870478909603, worksheet.outputs_energy_flows_v170, 0.002); end
  def test_outputs_energy_flows_w170; assert_in_delta(0.18790058049429403, worksheet.outputs_energy_flows_w170, 0.002); end
  def test_outputs_energy_flows_x170; assert_in_delta(0.198021999267989, worksheet.outputs_energy_flows_x170, 0.002); end
  def test_outputs_energy_flows_y170; assert_in_delta(0.22087580702888754, worksheet.outputs_energy_flows_y170, 0.002); end
  def test_outputs_energy_flows_z170; assert_in_delta(0.24495449369529937, worksheet.outputs_energy_flows_z170, 0.002); end
  def test_outputs_energy_flows_aa170; assert_in_delta(0.26919812090859224, worksheet.outputs_energy_flows_aa170, 0.002); end
  def test_outputs_energy_flows_ab170; assert_in_delta(0.2971168412681631, worksheet.outputs_energy_flows_ab170, 0.002); end
  def test_outputs_energy_flows_ac170; assert_in_delta(0.3258329722572754, worksheet.outputs_energy_flows_ac170, 0.002); end
  def test_outputs_energy_flows_ad170; assert_in_delta(0.3589420498221229, worksheet.outputs_energy_flows_ad170, 0.002); end
  def test_outputs_energy_flows_c172; assert_equal("n/a", worksheet.outputs_energy_flows_c172); end
  def test_outputs_energy_flows_d172; assert_equal("Solid", worksheet.outputs_energy_flows_d172); end
  def test_outputs_energy_flows_e172; assert_equal("n/a", worksheet.outputs_energy_flows_e172); end
  def test_outputs_energy_flows_f172; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f172); end
  def test_outputs_energy_flows_i172; assert_equal("C.01", worksheet.outputs_energy_flows_i172); end
  def test_outputs_energy_flows_j172; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j172); end
  def test_outputs_energy_flows_l172; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l172); end
  def test_outputs_energy_flows_m172; assert_equal("Timber", worksheet.outputs_energy_flows_m172); end
  def test_outputs_energy_flows_v172; assert_in_epsilon(5.432131184106508, worksheet.outputs_energy_flows_v172, 0.002); end
  def test_outputs_energy_flows_w172; assert_in_epsilon(5.624729409938191, worksheet.outputs_energy_flows_w172, 0.002); end
  def test_outputs_energy_flows_x172; assert_in_epsilon(6.020845196536171, worksheet.outputs_energy_flows_x172, 0.002); end
  def test_outputs_energy_flows_y172; assert_in_epsilon(6.267796581917704, worksheet.outputs_energy_flows_y172, 0.002); end
  def test_outputs_energy_flows_z172; assert_in_epsilon(6.486943222232017, worksheet.outputs_energy_flows_z172, 0.002); end
  def test_outputs_energy_flows_aa172; assert_in_epsilon(6.674536335159463, worksheet.outputs_energy_flows_aa172, 0.002); end
  def test_outputs_energy_flows_ab172; assert_in_epsilon(6.841777946975693, worksheet.outputs_energy_flows_ab172, 0.002); end
  def test_outputs_energy_flows_ac172; assert_in_epsilon(6.996218212970435, worksheet.outputs_energy_flows_ac172, 0.002); end
  def test_outputs_energy_flows_ad172; assert_in_epsilon(7.143698001593102, worksheet.outputs_energy_flows_ad172, 0.002); end
  def test_outputs_energy_flows_c174; assert_equal("n/a", worksheet.outputs_energy_flows_c174); end
  def test_outputs_energy_flows_d174; assert_equal("Solid", worksheet.outputs_energy_flows_d174); end
  def test_outputs_energy_flows_e174; assert_equal("n/a", worksheet.outputs_energy_flows_e174); end
  def test_outputs_energy_flows_f174; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f174); end
  def test_outputs_energy_flows_i174; assert_equal("C.01", worksheet.outputs_energy_flows_i174); end
  def test_outputs_energy_flows_j174; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j174); end
  def test_outputs_energy_flows_l174; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l174); end
  def test_outputs_energy_flows_m174; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m174); end
  def test_outputs_energy_flows_v174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v174||0), 0.002); end
  def test_outputs_energy_flows_w174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w174||0), 0.002); end
  def test_outputs_energy_flows_x174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x174||0), 0.002); end
  def test_outputs_energy_flows_y174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y174||0), 0.002); end
  def test_outputs_energy_flows_z174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z174||0), 0.002); end
  def test_outputs_energy_flows_aa174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa174||0), 0.002); end
  def test_outputs_energy_flows_ab174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab174||0), 0.002); end
  def test_outputs_energy_flows_ac174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac174||0), 0.002); end
  def test_outputs_energy_flows_ad174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad174||0), 0.002); end
  def test_outputs_energy_flows_c176; assert_equal("n/a", worksheet.outputs_energy_flows_c176); end
  def test_outputs_energy_flows_d176; assert_equal("Solid", worksheet.outputs_energy_flows_d176); end
  def test_outputs_energy_flows_e176; assert_equal("n/a", worksheet.outputs_energy_flows_e176); end
  def test_outputs_energy_flows_f176; assert_equal("International passenger", worksheet.outputs_energy_flows_f176); end
  def test_outputs_energy_flows_i176; assert_equal("C.01", worksheet.outputs_energy_flows_i176); end
  def test_outputs_energy_flows_j176; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j176); end
  def test_outputs_energy_flows_l176; assert_equal("International", worksheet.outputs_energy_flows_l176); end
  def test_outputs_energy_flows_v176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v176||0), 0.002); end
  def test_outputs_energy_flows_w176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w176||0), 0.002); end
  def test_outputs_energy_flows_x176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x176||0), 0.002); end
  def test_outputs_energy_flows_y176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y176||0), 0.002); end
  def test_outputs_energy_flows_z176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z176||0), 0.002); end
  def test_outputs_energy_flows_aa176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa176||0), 0.002); end
  def test_outputs_energy_flows_ab176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab176||0), 0.002); end
  def test_outputs_energy_flows_ac176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac176||0), 0.002); end
  def test_outputs_energy_flows_ad176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad176||0), 0.002); end
  def test_outputs_energy_flows_c178; assert_equal("n/a", worksheet.outputs_energy_flows_c178); end
  def test_outputs_energy_flows_d178; assert_equal("Solid", worksheet.outputs_energy_flows_d178); end
  def test_outputs_energy_flows_e178; assert_equal("n/a", worksheet.outputs_energy_flows_e178); end
  def test_outputs_energy_flows_f178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f178); end
  def test_outputs_energy_flows_i178; assert_equal("C.01", worksheet.outputs_energy_flows_i178); end
  def test_outputs_energy_flows_j178; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j178); end
  def test_outputs_energy_flows_l178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l178); end
  def test_outputs_energy_flows_v178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v178||0), 0.002); end
  def test_outputs_energy_flows_w178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w178||0), 0.002); end
  def test_outputs_energy_flows_x178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x178||0), 0.002); end
  def test_outputs_energy_flows_y178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y178||0), 0.002); end
  def test_outputs_energy_flows_z178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z178||0), 0.002); end
  def test_outputs_energy_flows_aa178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa178||0), 0.002); end
  def test_outputs_energy_flows_ab178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab178||0), 0.002); end
  def test_outputs_energy_flows_ac178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac178||0), 0.002); end
  def test_outputs_energy_flows_ad178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad178||0), 0.002); end
  def test_outputs_energy_flows_c180; assert_equal("n/a", worksheet.outputs_energy_flows_c180); end
  def test_outputs_energy_flows_d180; assert_equal("Solid", worksheet.outputs_energy_flows_d180); end
  def test_outputs_energy_flows_e180; assert_equal("n/a", worksheet.outputs_energy_flows_e180); end
  def test_outputs_energy_flows_f180; assert_equal("International freight", worksheet.outputs_energy_flows_f180); end
  def test_outputs_energy_flows_i180; assert_equal("C.01", worksheet.outputs_energy_flows_i180); end
  def test_outputs_energy_flows_j180; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j180); end
  def test_outputs_energy_flows_l180; assert_equal("International freight", worksheet.outputs_energy_flows_l180); end
  def test_outputs_energy_flows_v180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v180||0), 0.002); end
  def test_outputs_energy_flows_w180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w180||0), 0.002); end
  def test_outputs_energy_flows_x180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x180||0), 0.002); end
  def test_outputs_energy_flows_y180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y180||0), 0.002); end
  def test_outputs_energy_flows_z180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z180||0), 0.002); end
  def test_outputs_energy_flows_aa180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa180||0), 0.002); end
  def test_outputs_energy_flows_ab180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab180||0), 0.002); end
  def test_outputs_energy_flows_ac180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac180||0), 0.002); end
  def test_outputs_energy_flows_ad180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad180||0), 0.002); end
  def test_outputs_energy_flows_c182; assert_equal("n/a", worksheet.outputs_energy_flows_c182); end
  def test_outputs_energy_flows_d182; assert_equal("Solid", worksheet.outputs_energy_flows_d182); end
  def test_outputs_energy_flows_e182; assert_equal("n/a", worksheet.outputs_energy_flows_e182); end
  def test_outputs_energy_flows_f182; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f182); end
  def test_outputs_energy_flows_i182; assert_equal("C.01", worksheet.outputs_energy_flows_i182); end
  def test_outputs_energy_flows_j182; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j182); end
  def test_outputs_energy_flows_v182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v182||0), 0.002); end
  def test_outputs_energy_flows_w182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w182||0), 0.002); end
  def test_outputs_energy_flows_x182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x182||0), 0.002); end
  def test_outputs_energy_flows_y182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y182||0), 0.002); end
  def test_outputs_energy_flows_z182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z182||0), 0.002); end
  def test_outputs_energy_flows_aa182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa182||0), 0.002); end
  def test_outputs_energy_flows_ab182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab182||0), 0.002); end
  def test_outputs_energy_flows_ac182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac182||0), 0.002); end
  def test_outputs_energy_flows_ad182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad182||0), 0.002); end
  def test_outputs_energy_flows_c184; assert_equal("n/a", worksheet.outputs_energy_flows_c184); end
  def test_outputs_energy_flows_d184; assert_equal("Solid", worksheet.outputs_energy_flows_d184); end
  def test_outputs_energy_flows_e184; assert_equal("G.01", worksheet.outputs_energy_flows_e184); end
  def test_outputs_energy_flows_f184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f184); end
  def test_outputs_energy_flows_g184; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g184); end
  def test_outputs_energy_flows_h184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h184); end
  def test_outputs_energy_flows_i184; assert_equal("C.01", worksheet.outputs_energy_flows_i184); end
  def test_outputs_energy_flows_j184; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j184); end
  def test_outputs_energy_flows_v184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v184||0), 0.002); end
  def test_outputs_energy_flows_w184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w184||0), 0.002); end
  def test_outputs_energy_flows_x184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x184||0), 0.002); end
  def test_outputs_energy_flows_y184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y184||0), 0.002); end
  def test_outputs_energy_flows_z184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z184||0), 0.002); end
  def test_outputs_energy_flows_aa184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa184||0), 0.002); end
  def test_outputs_energy_flows_ab184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab184||0), 0.002); end
  def test_outputs_energy_flows_ac184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac184||0), 0.002); end
  def test_outputs_energy_flows_ad184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad184||0), 0.002); end
  def test_outputs_energy_flows_c186; assert_equal("n/a", worksheet.outputs_energy_flows_c186); end
  def test_outputs_energy_flows_d186; assert_equal("Solid", worksheet.outputs_energy_flows_d186); end
  def test_outputs_energy_flows_e186; assert_equal("n/a", worksheet.outputs_energy_flows_e186); end
  def test_outputs_energy_flows_f186; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f186); end
  def test_outputs_energy_flows_g186; assert_equal("n/a", worksheet.outputs_energy_flows_g186); end
  def test_outputs_energy_flows_h186; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h186); end
  def test_outputs_energy_flows_i186; assert_equal("C.01", worksheet.outputs_energy_flows_i186); end
  def test_outputs_energy_flows_j186; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j186); end
  def test_outputs_energy_flows_v186; assert_in_epsilon(21.42827793385157, worksheet.outputs_energy_flows_v186, 0.002); end
  def test_outputs_energy_flows_w186; assert_in_epsilon(21.84482860706121, worksheet.outputs_energy_flows_w186, 0.002); end
  def test_outputs_energy_flows_x186; assert_in_epsilon(22.546147488673643, worksheet.outputs_energy_flows_x186, 0.002); end
  def test_outputs_energy_flows_y186; assert_in_epsilon(23.309195071662007, worksheet.outputs_energy_flows_y186, 0.002); end
  def test_outputs_energy_flows_z186; assert_in_epsilon(24.026686258057943, worksheet.outputs_energy_flows_z186, 0.002); end
  def test_outputs_energy_flows_aa186; assert_in_epsilon(24.607274261846843, worksheet.outputs_energy_flows_aa186, 0.002); end
  def test_outputs_energy_flows_ab186; assert_in_epsilon(25.04929606810337, worksheet.outputs_energy_flows_ab186, 0.002); end
  def test_outputs_energy_flows_ac186; assert_in_epsilon(25.55072591913671, worksheet.outputs_energy_flows_ac186, 0.002); end
  def test_outputs_energy_flows_ad186; assert_in_epsilon(25.85992220255067, worksheet.outputs_energy_flows_ad186, 0.002); end
  def test_outputs_energy_flows_c188; assert_equal("n/a", worksheet.outputs_energy_flows_c188); end
  def test_outputs_energy_flows_d188; assert_equal("Liquid", worksheet.outputs_energy_flows_d188); end
  def test_outputs_energy_flows_e188; assert_equal("n/a", worksheet.outputs_energy_flows_e188); end
  def test_outputs_energy_flows_f188; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f188); end
  def test_outputs_energy_flows_i188; assert_equal("C.02", worksheet.outputs_energy_flows_i188); end
  def test_outputs_energy_flows_j188; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j188); end
  def test_outputs_energy_flows_k188; assert_equal("Global buildings", worksheet.outputs_energy_flows_k188); end
  def test_outputs_energy_flows_v188; assert_in_epsilon(5.732318161068067, worksheet.outputs_energy_flows_v188, 0.002); end
  def test_outputs_energy_flows_w188; assert_in_epsilon(6.120820950487117, worksheet.outputs_energy_flows_w188, 0.002); end
  def test_outputs_energy_flows_x188; assert_in_epsilon(6.3116691023250855, worksheet.outputs_energy_flows_x188, 0.002); end
  def test_outputs_energy_flows_y188; assert_in_epsilon(6.462222207952576, worksheet.outputs_energy_flows_y188, 0.002); end
  def test_outputs_energy_flows_z188; assert_in_epsilon(6.5535786838050285, worksheet.outputs_energy_flows_z188, 0.002); end
  def test_outputs_energy_flows_aa188; assert_in_epsilon(6.5649430314826365, worksheet.outputs_energy_flows_aa188, 0.002); end
  def test_outputs_energy_flows_ab188; assert_in_epsilon(6.528108051762958, worksheet.outputs_energy_flows_ab188, 0.002); end
  def test_outputs_energy_flows_ac188; assert_in_epsilon(6.423853996455063, worksheet.outputs_energy_flows_ac188, 0.002); end
  def test_outputs_energy_flows_ad188; assert_in_epsilon(6.283276963161573, worksheet.outputs_energy_flows_ad188, 0.002); end
  def test_outputs_energy_flows_c190; assert_equal("n/a", worksheet.outputs_energy_flows_c190); end
  def test_outputs_energy_flows_d190; assert_equal("Liquid", worksheet.outputs_energy_flows_d190); end
  def test_outputs_energy_flows_e190; assert_equal("n/a", worksheet.outputs_energy_flows_e190); end
  def test_outputs_energy_flows_f190; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f190); end
  def test_outputs_energy_flows_i190; assert_equal("C.02", worksheet.outputs_energy_flows_i190); end
  def test_outputs_energy_flows_j190; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j190); end
  def test_outputs_energy_flows_k190; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k190); end
  def test_outputs_energy_flows_l190; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l190); end
  def test_outputs_energy_flows_v190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v190||0), 0.002); end
  def test_outputs_energy_flows_w190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w190||0), 0.002); end
  def test_outputs_energy_flows_x190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x190||0), 0.002); end
  def test_outputs_energy_flows_y190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y190||0), 0.002); end
  def test_outputs_energy_flows_z190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z190||0), 0.002); end
  def test_outputs_energy_flows_aa190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa190||0), 0.002); end
  def test_outputs_energy_flows_ab190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab190||0), 0.002); end
  def test_outputs_energy_flows_ac190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac190||0), 0.002); end
  def test_outputs_energy_flows_ad190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad190||0), 0.002); end
  def test_outputs_energy_flows_c192; assert_equal("n/a", worksheet.outputs_energy_flows_c192); end
  def test_outputs_energy_flows_d192; assert_equal("Liquid", worksheet.outputs_energy_flows_d192); end
  def test_outputs_energy_flows_e192; assert_equal("n/a", worksheet.outputs_energy_flows_e192); end
  def test_outputs_energy_flows_f192; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f192); end
  def test_outputs_energy_flows_i192; assert_equal("C.02", worksheet.outputs_energy_flows_i192); end
  def test_outputs_energy_flows_j192; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j192); end
  def test_outputs_energy_flows_k192; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k192); end
  def test_outputs_energy_flows_l192; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l192); end
  def test_outputs_energy_flows_v192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v192||0), 0.002); end
  def test_outputs_energy_flows_w192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w192||0), 0.002); end
  def test_outputs_energy_flows_x192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x192||0), 0.002); end
  def test_outputs_energy_flows_y192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y192||0), 0.002); end
  def test_outputs_energy_flows_z192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z192||0), 0.002); end
  def test_outputs_energy_flows_aa192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa192||0), 0.002); end
  def test_outputs_energy_flows_ab192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab192||0), 0.002); end
  def test_outputs_energy_flows_ac192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac192||0), 0.002); end
  def test_outputs_energy_flows_ad192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad192||0), 0.002); end
  def test_outputs_energy_flows_c194; assert_equal("n/a", worksheet.outputs_energy_flows_c194); end
  def test_outputs_energy_flows_d194; assert_equal("Liquid", worksheet.outputs_energy_flows_d194); end
  def test_outputs_energy_flows_e194; assert_equal("n/a", worksheet.outputs_energy_flows_e194); end
  def test_outputs_energy_flows_f194; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f194); end
  def test_outputs_energy_flows_i194; assert_equal("C.02", worksheet.outputs_energy_flows_i194); end
  def test_outputs_energy_flows_j194; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j194); end
  def test_outputs_energy_flows_k194; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k194); end
  def test_outputs_energy_flows_l194; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l194); end
  def test_outputs_energy_flows_v194; assert_in_epsilon(2.12837206627918, worksheet.outputs_energy_flows_v194, 0.002); end
  def test_outputs_energy_flows_w194; assert_in_epsilon(2.295047936539375, worksheet.outputs_energy_flows_w194, 0.002); end
  def test_outputs_energy_flows_x194; assert_in_epsilon(2.423546127765512, worksheet.outputs_energy_flows_x194, 0.002); end
  def test_outputs_energy_flows_y194; assert_in_epsilon(2.5404404649109877, worksheet.outputs_energy_flows_y194, 0.002); end
  def test_outputs_energy_flows_z194; assert_in_epsilon(2.638069225921167, worksheet.outputs_energy_flows_z194, 0.002); end
  def test_outputs_energy_flows_aa194; assert_in_epsilon(2.7058064773472896, worksheet.outputs_energy_flows_aa194, 0.002); end
  def test_outputs_energy_flows_ab194; assert_in_epsilon(2.754306430329983, worksheet.outputs_energy_flows_ab194, 0.002); end
  def test_outputs_energy_flows_ac194; assert_in_epsilon(2.7738651546108803, worksheet.outputs_energy_flows_ac194, 0.002); end
  def test_outputs_energy_flows_ad194; assert_in_epsilon(2.7755310433623293, worksheet.outputs_energy_flows_ad194, 0.002); end
  def test_outputs_energy_flows_c196; assert_equal("n/a", worksheet.outputs_energy_flows_c196); end
  def test_outputs_energy_flows_d196; assert_equal("Liquid", worksheet.outputs_energy_flows_d196); end
  def test_outputs_energy_flows_e196; assert_equal("n/a", worksheet.outputs_energy_flows_e196); end
  def test_outputs_energy_flows_f196; assert_equal("Non domestic", worksheet.outputs_energy_flows_f196); end
  def test_outputs_energy_flows_i196; assert_equal("C.02", worksheet.outputs_energy_flows_i196); end
  def test_outputs_energy_flows_j196; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j196); end
  def test_outputs_energy_flows_k196; assert_equal("Non-residential", worksheet.outputs_energy_flows_k196); end
  def test_outputs_energy_flows_v196; assert_in_epsilon(2.152728852794557, worksheet.outputs_energy_flows_v196, 0.002); end
  def test_outputs_energy_flows_w196; assert_in_epsilon(2.1904127809413887, worksheet.outputs_energy_flows_w196, 0.002); end
  def test_outputs_energy_flows_x196; assert_in_epsilon(2.2687645023459435, worksheet.outputs_energy_flows_x196, 0.002); end
  def test_outputs_energy_flows_y196; assert_in_epsilon(2.3205388822142345, worksheet.outputs_energy_flows_y196, 0.002); end
  def test_outputs_energy_flows_z196; assert_in_epsilon(2.345886228410312, worksheet.outputs_energy_flows_z196, 0.002); end
  def test_outputs_energy_flows_aa196; assert_in_epsilon(2.3459367519041785, worksheet.outputs_energy_flows_aa196, 0.002); end
  def test_outputs_energy_flows_ab196; assert_in_epsilon(2.321518555485191, worksheet.outputs_energy_flows_ab196, 0.002); end
  def test_outputs_energy_flows_ac196; assert_in_epsilon(2.273338090848201, worksheet.outputs_energy_flows_ac196, 0.002); end
  def test_outputs_energy_flows_ad196; assert_in_epsilon(2.2026346061573596, worksheet.outputs_energy_flows_ad196, 0.002); end
  def test_outputs_energy_flows_c198; assert_equal("n/a", worksheet.outputs_energy_flows_c198); end
  def test_outputs_energy_flows_d198; assert_equal("Liquid", worksheet.outputs_energy_flows_d198); end
  def test_outputs_energy_flows_e198; assert_equal("n/a", worksheet.outputs_energy_flows_e198); end
  def test_outputs_energy_flows_f198; assert_equal("Steel", worksheet.outputs_energy_flows_f198); end
  def test_outputs_energy_flows_i198; assert_equal("C.02", worksheet.outputs_energy_flows_i198); end
  def test_outputs_energy_flows_j198; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j198); end
  def test_outputs_energy_flows_v198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v198||0), 0.002); end
  def test_outputs_energy_flows_w198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w198||0), 0.002); end
  def test_outputs_energy_flows_x198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x198||0), 0.002); end
  def test_outputs_energy_flows_y198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y198||0), 0.002); end
  def test_outputs_energy_flows_z198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z198||0), 0.002); end
  def test_outputs_energy_flows_aa198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa198||0), 0.002); end
  def test_outputs_energy_flows_ab198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab198||0), 0.002); end
  def test_outputs_energy_flows_ac198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac198||0), 0.002); end
  def test_outputs_energy_flows_ad198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad198||0), 0.002); end
  def test_outputs_energy_flows_c200; assert_equal("n/a", worksheet.outputs_energy_flows_c200); end
  def test_outputs_energy_flows_d200; assert_equal("Liquid", worksheet.outputs_energy_flows_d200); end
  def test_outputs_energy_flows_e200; assert_equal("n/a", worksheet.outputs_energy_flows_e200); end
  def test_outputs_energy_flows_f200; assert_equal("Aluminium", worksheet.outputs_energy_flows_f200); end
  def test_outputs_energy_flows_i200; assert_equal("C.02", worksheet.outputs_energy_flows_i200); end
  def test_outputs_energy_flows_j200; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j200); end
  def test_outputs_energy_flows_v200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v200||0), 0.002); end
  def test_outputs_energy_flows_w200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w200||0), 0.002); end
  def test_outputs_energy_flows_x200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x200||0), 0.002); end
  def test_outputs_energy_flows_y200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y200||0), 0.002); end
  def test_outputs_energy_flows_z200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z200||0), 0.002); end
  def test_outputs_energy_flows_aa200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa200||0), 0.002); end
  def test_outputs_energy_flows_ab200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab200||0), 0.002); end
  def test_outputs_energy_flows_ac200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac200||0), 0.002); end
  def test_outputs_energy_flows_ad200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad200||0), 0.002); end
  def test_outputs_energy_flows_c202; assert_equal("n/a", worksheet.outputs_energy_flows_c202); end
  def test_outputs_energy_flows_d202; assert_equal("Liquid", worksheet.outputs_energy_flows_d202); end
  def test_outputs_energy_flows_e202; assert_equal("n/a", worksheet.outputs_energy_flows_e202); end
  def test_outputs_energy_flows_f202; assert_equal("Cement", worksheet.outputs_energy_flows_f202); end
  def test_outputs_energy_flows_i202; assert_equal("C.02", worksheet.outputs_energy_flows_i202); end
  def test_outputs_energy_flows_j202; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j202); end
  def test_outputs_energy_flows_v202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v202||0), 0.002); end
  def test_outputs_energy_flows_w202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w202||0), 0.002); end
  def test_outputs_energy_flows_x202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x202||0), 0.002); end
  def test_outputs_energy_flows_y202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y202||0), 0.002); end
  def test_outputs_energy_flows_z202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z202||0), 0.002); end
  def test_outputs_energy_flows_aa202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa202||0), 0.002); end
  def test_outputs_energy_flows_ab202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab202||0), 0.002); end
  def test_outputs_energy_flows_ac202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac202||0), 0.002); end
  def test_outputs_energy_flows_ad202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad202||0), 0.002); end
  def test_outputs_energy_flows_c204; assert_equal("n/a", worksheet.outputs_energy_flows_c204); end
  def test_outputs_energy_flows_d204; assert_equal("Liquid", worksheet.outputs_energy_flows_d204); end
  def test_outputs_energy_flows_e204; assert_equal("n/a", worksheet.outputs_energy_flows_e204); end
  def test_outputs_energy_flows_f204; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f204); end
  def test_outputs_energy_flows_i204; assert_equal("C.02", worksheet.outputs_energy_flows_i204); end
  def test_outputs_energy_flows_j204; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j204); end
  def test_outputs_energy_flows_v204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v204||0), 0.002); end
  def test_outputs_energy_flows_w204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w204||0), 0.002); end
  def test_outputs_energy_flows_x204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x204||0), 0.002); end
  def test_outputs_energy_flows_y204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y204||0), 0.002); end
  def test_outputs_energy_flows_z204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z204||0), 0.002); end
  def test_outputs_energy_flows_aa204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa204||0), 0.002); end
  def test_outputs_energy_flows_ab204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab204||0), 0.002); end
  def test_outputs_energy_flows_ac204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac204||0), 0.002); end
  def test_outputs_energy_flows_ad204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad204||0), 0.002); end
  def test_outputs_energy_flows_c206; assert_equal("n/a", worksheet.outputs_energy_flows_c206); end
  def test_outputs_energy_flows_d206; assert_equal("Liquid", worksheet.outputs_energy_flows_d206); end
  def test_outputs_energy_flows_e206; assert_equal("n/a", worksheet.outputs_energy_flows_e206); end
  def test_outputs_energy_flows_f206; assert_equal("Chemicals", worksheet.outputs_energy_flows_f206); end
  def test_outputs_energy_flows_i206; assert_equal("C.02", worksheet.outputs_energy_flows_i206); end
  def test_outputs_energy_flows_j206; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j206); end
  def test_outputs_energy_flows_v206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v206||0), 0.002); end
  def test_outputs_energy_flows_w206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w206||0), 0.002); end
  def test_outputs_energy_flows_x206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x206||0), 0.002); end
  def test_outputs_energy_flows_y206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y206||0), 0.002); end
  def test_outputs_energy_flows_z206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z206||0), 0.002); end
  def test_outputs_energy_flows_aa206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa206||0), 0.002); end
  def test_outputs_energy_flows_ab206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab206||0), 0.002); end
  def test_outputs_energy_flows_ac206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac206||0), 0.002); end
  def test_outputs_energy_flows_ad206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad206||0), 0.002); end
  def test_outputs_energy_flows_c208; assert_equal("n/a", worksheet.outputs_energy_flows_c208); end
  def test_outputs_energy_flows_d208; assert_equal("Liquid", worksheet.outputs_energy_flows_d208); end
  def test_outputs_energy_flows_e208; assert_equal("n/a", worksheet.outputs_energy_flows_e208); end
  def test_outputs_energy_flows_f208; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f208); end
  def test_outputs_energy_flows_i208; assert_equal("C.02", worksheet.outputs_energy_flows_i208); end
  def test_outputs_energy_flows_j208; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j208); end
  def test_outputs_energy_flows_l208; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l208); end
  def test_outputs_energy_flows_m208; assert_equal("Timber", worksheet.outputs_energy_flows_m208); end
  def test_outputs_energy_flows_v208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v208||0), 0.002); end
  def test_outputs_energy_flows_w208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w208||0), 0.002); end
  def test_outputs_energy_flows_x208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x208||0), 0.002); end
  def test_outputs_energy_flows_y208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y208||0), 0.002); end
  def test_outputs_energy_flows_z208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z208||0), 0.002); end
  def test_outputs_energy_flows_aa208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa208||0), 0.002); end
  def test_outputs_energy_flows_ab208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab208||0), 0.002); end
  def test_outputs_energy_flows_ac208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac208||0), 0.002); end
  def test_outputs_energy_flows_ad208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad208||0), 0.002); end
  def test_outputs_energy_flows_c210; assert_equal("n/a", worksheet.outputs_energy_flows_c210); end
  def test_outputs_energy_flows_d210; assert_equal("Liquid", worksheet.outputs_energy_flows_d210); end
  def test_outputs_energy_flows_e210; assert_equal("n/a", worksheet.outputs_energy_flows_e210); end
  def test_outputs_energy_flows_f210; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f210); end
  def test_outputs_energy_flows_i210; assert_equal("C.02", worksheet.outputs_energy_flows_i210); end
  def test_outputs_energy_flows_j210; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j210); end
  def test_outputs_energy_flows_l210; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l210); end
  def test_outputs_energy_flows_m210; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m210); end
  def test_outputs_energy_flows_v210; assert_in_epsilon(47.89228942522411, worksheet.outputs_energy_flows_v210, 0.002); end
  def test_outputs_energy_flows_w210; assert_in_epsilon(51.41057064782444, worksheet.outputs_energy_flows_w210, 0.002); end
  def test_outputs_energy_flows_x210; assert_in_epsilon(55.850454248608855, worksheet.outputs_energy_flows_x210, 0.002); end
  def test_outputs_energy_flows_y210; assert_in_epsilon(58.51744020690108, worksheet.outputs_energy_flows_y210, 0.002); end
  def test_outputs_energy_flows_z210; assert_in_epsilon(61.24931987027006, worksheet.outputs_energy_flows_z210, 0.002); end
  def test_outputs_energy_flows_aa210; assert_in_epsilon(64.18642047642976, worksheet.outputs_energy_flows_aa210, 0.002); end
  def test_outputs_energy_flows_ab210; assert_in_epsilon(67.22457588855178, worksheet.outputs_energy_flows_ab210, 0.002); end
  def test_outputs_energy_flows_ac210; assert_in_epsilon(70.24673986887689, worksheet.outputs_energy_flows_ac210, 0.002); end
  def test_outputs_energy_flows_ad210; assert_in_epsilon(73.67582236939379, worksheet.outputs_energy_flows_ad210, 0.002); end
  def test_outputs_energy_flows_c212; assert_equal("n/a", worksheet.outputs_energy_flows_c212); end
  def test_outputs_energy_flows_d212; assert_equal("Liquid", worksheet.outputs_energy_flows_d212); end
  def test_outputs_energy_flows_e212; assert_equal("n/a", worksheet.outputs_energy_flows_e212); end
  def test_outputs_energy_flows_f212; assert_equal("International passenger", worksheet.outputs_energy_flows_f212); end
  def test_outputs_energy_flows_i212; assert_equal("C.02", worksheet.outputs_energy_flows_i212); end
  def test_outputs_energy_flows_j212; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j212); end
  def test_outputs_energy_flows_l212; assert_equal("International", worksheet.outputs_energy_flows_l212); end
  def test_outputs_energy_flows_v212; assert_in_epsilon(11.200783672219371, worksheet.outputs_energy_flows_v212, 0.002); end
  def test_outputs_energy_flows_w212; assert_in_epsilon(11.807777244648502, worksheet.outputs_energy_flows_w212, 0.002); end
  def test_outputs_energy_flows_x212; assert_in_epsilon(12.310745286053642, worksheet.outputs_energy_flows_x212, 0.002); end
  def test_outputs_energy_flows_y212; assert_in_epsilon(12.599218193668012, worksheet.outputs_energy_flows_y212, 0.002); end
  def test_outputs_energy_flows_z212; assert_in_epsilon(13.088019775587556, worksheet.outputs_energy_flows_z212, 0.002); end
  def test_outputs_energy_flows_aa212; assert_in_epsilon(13.827235809440905, worksheet.outputs_energy_flows_aa212, 0.002); end
  def test_outputs_energy_flows_ab212; assert_in_epsilon(14.775013874056038, worksheet.outputs_energy_flows_ab212, 0.002); end
  def test_outputs_energy_flows_ac212; assert_in_epsilon(15.955456049332327, worksheet.outputs_energy_flows_ac212, 0.002); end
  def test_outputs_energy_flows_ad212; assert_in_epsilon(17.416251976009637, worksheet.outputs_energy_flows_ad212, 0.002); end
  def test_outputs_energy_flows_c214; assert_equal("n/a", worksheet.outputs_energy_flows_c214); end
  def test_outputs_energy_flows_d214; assert_equal("Liquid", worksheet.outputs_energy_flows_d214); end
  def test_outputs_energy_flows_e214; assert_equal("n/a", worksheet.outputs_energy_flows_e214); end
  def test_outputs_energy_flows_f214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f214); end
  def test_outputs_energy_flows_i214; assert_equal("C.02", worksheet.outputs_energy_flows_i214); end
  def test_outputs_energy_flows_j214; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j214); end
  def test_outputs_energy_flows_l214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l214); end
  def test_outputs_energy_flows_v214; assert_in_epsilon(23.68414579378021, worksheet.outputs_energy_flows_v214, 0.002); end
  def test_outputs_energy_flows_w214; assert_in_epsilon(25.470207968132453, worksheet.outputs_energy_flows_w214, 0.002); end
  def test_outputs_energy_flows_x214; assert_in_epsilon(29.07411456366098, worksheet.outputs_energy_flows_x214, 0.002); end
  def test_outputs_energy_flows_y214; assert_in_epsilon(32.352860860536595, worksheet.outputs_energy_flows_y214, 0.002); end
  def test_outputs_energy_flows_z214; assert_in_epsilon(34.41163145596552, worksheet.outputs_energy_flows_z214, 0.002); end
  def test_outputs_energy_flows_aa214; assert_in_epsilon(35.49720545052529, worksheet.outputs_energy_flows_aa214, 0.002); end
  def test_outputs_energy_flows_ab214; assert_in_epsilon(35.68509991372716, worksheet.outputs_energy_flows_ab214, 0.002); end
  def test_outputs_energy_flows_ac214; assert_in_epsilon(35.37954043900662, worksheet.outputs_energy_flows_ac214, 0.002); end
  def test_outputs_energy_flows_ad214; assert_in_epsilon(34.628171094251385, worksheet.outputs_energy_flows_ad214, 0.002); end
  def test_outputs_energy_flows_c216; assert_equal("n/a", worksheet.outputs_energy_flows_c216); end
  def test_outputs_energy_flows_d216; assert_equal("Liquid", worksheet.outputs_energy_flows_d216); end
  def test_outputs_energy_flows_e216; assert_equal("n/a", worksheet.outputs_energy_flows_e216); end
  def test_outputs_energy_flows_f216; assert_equal("International freight", worksheet.outputs_energy_flows_f216); end
  def test_outputs_energy_flows_i216; assert_equal("C.02", worksheet.outputs_energy_flows_i216); end
  def test_outputs_energy_flows_j216; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j216); end
  def test_outputs_energy_flows_l216; assert_equal("International freight", worksheet.outputs_energy_flows_l216); end
  def test_outputs_energy_flows_v216; assert_in_epsilon(15.613329526301518, worksheet.outputs_energy_flows_v216, 0.002); end
  def test_outputs_energy_flows_w216; assert_in_epsilon(17.17437390713595, worksheet.outputs_energy_flows_w216, 0.002); end
  def test_outputs_energy_flows_x216; assert_in_epsilon(19.4514252368683, worksheet.outputs_energy_flows_x216, 0.002); end
  def test_outputs_energy_flows_y216; assert_in_epsilon(21.92382843301059, worksheet.outputs_energy_flows_y216, 0.002); end
  def test_outputs_energy_flows_z216; assert_in_epsilon(24.11711306411627, worksheet.outputs_energy_flows_z216, 0.002); end
  def test_outputs_energy_flows_aa216; assert_in_epsilon(24.646459617757355, worksheet.outputs_energy_flows_aa216, 0.002); end
  def test_outputs_energy_flows_ab216; assert_in_epsilon(24.570841946707844, worksheet.outputs_energy_flows_ab216, 0.002); end
  def test_outputs_energy_flows_ac216; assert_in_epsilon(24.37411647839911, worksheet.outputs_energy_flows_ac216, 0.002); end
  def test_outputs_energy_flows_ad216; assert_in_epsilon(23.701810597743705, worksheet.outputs_energy_flows_ad216, 0.002); end
  def test_outputs_energy_flows_c218; assert_equal("n/a", worksheet.outputs_energy_flows_c218); end
  def test_outputs_energy_flows_d218; assert_equal("Liquid", worksheet.outputs_energy_flows_d218); end
  def test_outputs_energy_flows_e218; assert_equal("n/a", worksheet.outputs_energy_flows_e218); end
  def test_outputs_energy_flows_f218; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f218); end
  def test_outputs_energy_flows_i218; assert_equal("C.02", worksheet.outputs_energy_flows_i218); end
  def test_outputs_energy_flows_j218; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j218); end
  def test_outputs_energy_flows_v218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v218||0), 0.002); end
  def test_outputs_energy_flows_w218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w218||0), 0.002); end
  def test_outputs_energy_flows_x218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x218||0), 0.002); end
  def test_outputs_energy_flows_y218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y218||0), 0.002); end
  def test_outputs_energy_flows_z218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z218||0), 0.002); end
  def test_outputs_energy_flows_aa218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa218||0), 0.002); end
  def test_outputs_energy_flows_ab218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab218||0), 0.002); end
  def test_outputs_energy_flows_ac218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac218||0), 0.002); end
  def test_outputs_energy_flows_ad218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad218||0), 0.002); end
  def test_outputs_energy_flows_c220; assert_equal("n/a", worksheet.outputs_energy_flows_c220); end
  def test_outputs_energy_flows_d220; assert_equal("Liquid", worksheet.outputs_energy_flows_d220); end
  def test_outputs_energy_flows_e220; assert_equal("G.01", worksheet.outputs_energy_flows_e220); end
  def test_outputs_energy_flows_f220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f220); end
  def test_outputs_energy_flows_g220; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g220); end
  def test_outputs_energy_flows_h220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h220); end
  def test_outputs_energy_flows_i220; assert_equal("C.02", worksheet.outputs_energy_flows_i220); end
  def test_outputs_energy_flows_j220; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j220); end
  def test_outputs_energy_flows_v220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v220||0), 0.002); end
  def test_outputs_energy_flows_w220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w220||0), 0.002); end
  def test_outputs_energy_flows_x220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x220||0), 0.002); end
  def test_outputs_energy_flows_y220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y220||0), 0.002); end
  def test_outputs_energy_flows_z220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z220||0), 0.002); end
  def test_outputs_energy_flows_aa220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa220||0), 0.002); end
  def test_outputs_energy_flows_ab220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab220||0), 0.002); end
  def test_outputs_energy_flows_ac220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac220||0), 0.002); end
  def test_outputs_energy_flows_ad220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad220||0), 0.002); end
  def test_outputs_energy_flows_c222; assert_equal("n/a", worksheet.outputs_energy_flows_c222); end
  def test_outputs_energy_flows_d222; assert_equal("Liquid", worksheet.outputs_energy_flows_d222); end
  def test_outputs_energy_flows_e222; assert_equal("n/a", worksheet.outputs_energy_flows_e222); end
  def test_outputs_energy_flows_f222; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f222); end
  def test_outputs_energy_flows_g222; assert_equal("n/a", worksheet.outputs_energy_flows_g222); end
  def test_outputs_energy_flows_h222; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h222); end
  def test_outputs_energy_flows_i222; assert_equal("C.02", worksheet.outputs_energy_flows_i222); end
  def test_outputs_energy_flows_j222; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j222); end
  def test_outputs_energy_flows_v222; assert_in_epsilon(2.0510000000000006, worksheet.outputs_energy_flows_v222, 0.002); end
  def test_outputs_energy_flows_w222; assert_in_epsilon(1.884752976849025, worksheet.outputs_energy_flows_w222, 0.002); end
  def test_outputs_energy_flows_x222; assert_in_epsilon(1.2487852174218754, worksheet.outputs_energy_flows_x222, 0.002); end
  def test_outputs_energy_flows_y222; assert_in_delta(0.5086684013629994, worksheet.outputs_energy_flows_y222, 0.002); end
  def test_outputs_energy_flows_z222; assert_in_delta(-0.33660290234648516, worksheet.outputs_energy_flows_z222, 0.002); end
  def test_outputs_energy_flows_aa222; assert_in_epsilon(-1.2921086025890687, worksheet.outputs_energy_flows_aa222, 0.002); end
  def test_outputs_energy_flows_ab222; assert_in_epsilon(-2.348779804604449, worksheet.outputs_energy_flows_ab222, 0.002); end
  def test_outputs_energy_flows_ac222; assert_in_epsilon(-3.52577545897633, worksheet.outputs_energy_flows_ac222, 0.002); end
  def test_outputs_energy_flows_ad222; assert_in_epsilon(-4.802970932330087, worksheet.outputs_energy_flows_ad222, 0.002); end
  def test_outputs_energy_flows_c224; assert_equal("n/a", worksheet.outputs_energy_flows_c224); end
  def test_outputs_energy_flows_d224; assert_equal("Gas", worksheet.outputs_energy_flows_d224); end
  def test_outputs_energy_flows_e224; assert_equal("n/a", worksheet.outputs_energy_flows_e224); end
  def test_outputs_energy_flows_f224; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f224); end
  def test_outputs_energy_flows_i224; assert_equal("C.03", worksheet.outputs_energy_flows_i224); end
  def test_outputs_energy_flows_j224; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j224); end
  def test_outputs_energy_flows_k224; assert_equal("Global buildings", worksheet.outputs_energy_flows_k224); end
  def test_outputs_energy_flows_v224; assert_in_epsilon(14.722697904815131, worksheet.outputs_energy_flows_v224, 0.002); end
  def test_outputs_energy_flows_w224; assert_in_epsilon(16.215509956735787, worksheet.outputs_energy_flows_w224, 0.002); end
  def test_outputs_energy_flows_x224; assert_in_epsilon(17.368187770743894, worksheet.outputs_energy_flows_x224, 0.002); end
  def test_outputs_energy_flows_y224; assert_in_epsilon(18.441161233225678, worksheet.outputs_energy_flows_y224, 0.002); end
  def test_outputs_energy_flows_z224; assert_in_epsilon(19.381741257392452, worksheet.outputs_energy_flows_z224, 0.002); end
  def test_outputs_energy_flows_aa224; assert_in_epsilon(20.110414532921748, worksheet.outputs_energy_flows_aa224, 0.002); end
  def test_outputs_energy_flows_ab224; assert_in_epsilon(20.704704813051293, worksheet.outputs_energy_flows_ab224, 0.002); end
  def test_outputs_energy_flows_ac224; assert_in_epsilon(21.089638407930998, worksheet.outputs_energy_flows_ac224, 0.002); end
  def test_outputs_energy_flows_ad224; assert_in_epsilon(21.356829206530552, worksheet.outputs_energy_flows_ad224, 0.002); end
  def test_outputs_energy_flows_c226; assert_equal("n/a", worksheet.outputs_energy_flows_c226); end
  def test_outputs_energy_flows_d226; assert_equal("Gas", worksheet.outputs_energy_flows_d226); end
  def test_outputs_energy_flows_e226; assert_equal("n/a", worksheet.outputs_energy_flows_e226); end
  def test_outputs_energy_flows_f226; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f226); end
  def test_outputs_energy_flows_i226; assert_equal("C.03", worksheet.outputs_energy_flows_i226); end
  def test_outputs_energy_flows_j226; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j226); end
  def test_outputs_energy_flows_k226; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k226); end
  def test_outputs_energy_flows_l226; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l226); end
  def test_outputs_energy_flows_v226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v226||0), 0.002); end
  def test_outputs_energy_flows_w226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w226||0), 0.002); end
  def test_outputs_energy_flows_x226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x226||0), 0.002); end
  def test_outputs_energy_flows_y226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y226||0), 0.002); end
  def test_outputs_energy_flows_z226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z226||0), 0.002); end
  def test_outputs_energy_flows_aa226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa226||0), 0.002); end
  def test_outputs_energy_flows_ab226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab226||0), 0.002); end
  def test_outputs_energy_flows_ac226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac226||0), 0.002); end
  def test_outputs_energy_flows_ad226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad226||0), 0.002); end
  def test_outputs_energy_flows_c228; assert_equal("n/a", worksheet.outputs_energy_flows_c228); end
  def test_outputs_energy_flows_d228; assert_equal("Gas", worksheet.outputs_energy_flows_d228); end
  def test_outputs_energy_flows_e228; assert_equal("n/a", worksheet.outputs_energy_flows_e228); end
  def test_outputs_energy_flows_f228; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f228); end
  def test_outputs_energy_flows_i228; assert_equal("C.03", worksheet.outputs_energy_flows_i228); end
  def test_outputs_energy_flows_j228; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j228); end
  def test_outputs_energy_flows_k228; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k228); end
  def test_outputs_energy_flows_l228; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l228); end
  def test_outputs_energy_flows_v228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v228||0), 0.002); end
  def test_outputs_energy_flows_w228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w228||0), 0.002); end
  def test_outputs_energy_flows_x228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x228||0), 0.002); end
  def test_outputs_energy_flows_y228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y228||0), 0.002); end
  def test_outputs_energy_flows_z228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z228||0), 0.002); end
  def test_outputs_energy_flows_aa228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa228||0), 0.002); end
  def test_outputs_energy_flows_ab228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab228||0), 0.002); end
  def test_outputs_energy_flows_ac228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac228||0), 0.002); end
  def test_outputs_energy_flows_ad228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad228||0), 0.002); end
  def test_outputs_energy_flows_c230; assert_equal("n/a", worksheet.outputs_energy_flows_c230); end
  def test_outputs_energy_flows_d230; assert_equal("Gas", worksheet.outputs_energy_flows_d230); end
  def test_outputs_energy_flows_e230; assert_equal("n/a", worksheet.outputs_energy_flows_e230); end
  def test_outputs_energy_flows_f230; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f230); end
  def test_outputs_energy_flows_i230; assert_equal("C.03", worksheet.outputs_energy_flows_i230); end
  def test_outputs_energy_flows_j230; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j230); end
  def test_outputs_energy_flows_k230; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k230); end
  def test_outputs_energy_flows_l230; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l230); end
  def test_outputs_energy_flows_v230; assert_in_epsilon(3.5232041853812337, worksheet.outputs_energy_flows_v230, 0.002); end
  def test_outputs_energy_flows_w230; assert_in_epsilon(3.8083848628438006, worksheet.outputs_energy_flows_w230, 0.002); end
  def test_outputs_energy_flows_x230; assert_in_epsilon(4.05804960437172, worksheet.outputs_energy_flows_x230, 0.002); end
  def test_outputs_energy_flows_y230; assert_in_epsilon(4.283284854446443, worksheet.outputs_energy_flows_y230, 0.002); end
  def test_outputs_energy_flows_z230; assert_in_epsilon(4.473172372730793, worksheet.outputs_energy_flows_z230, 0.002); end
  def test_outputs_energy_flows_aa230; assert_in_epsilon(4.609644963533401, worksheet.outputs_energy_flows_aa230, 0.002); end
  def test_outputs_energy_flows_ab230; assert_in_epsilon(4.7109187143052225, worksheet.outputs_energy_flows_ab230, 0.002); end
  def test_outputs_energy_flows_ac230; assert_in_epsilon(4.760540655312399, worksheet.outputs_energy_flows_ac230, 0.002); end
  def test_outputs_energy_flows_ad230; assert_in_epsilon(4.780103086593922, worksheet.outputs_energy_flows_ad230, 0.002); end
  def test_outputs_energy_flows_c232; assert_equal("n/a", worksheet.outputs_energy_flows_c232); end
  def test_outputs_energy_flows_d232; assert_equal("Gas", worksheet.outputs_energy_flows_d232); end
  def test_outputs_energy_flows_e232; assert_equal("n/a", worksheet.outputs_energy_flows_e232); end
  def test_outputs_energy_flows_f232; assert_equal("Non domestic", worksheet.outputs_energy_flows_f232); end
  def test_outputs_energy_flows_i232; assert_equal("C.03", worksheet.outputs_energy_flows_i232); end
  def test_outputs_energy_flows_j232; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j232); end
  def test_outputs_energy_flows_k232; assert_equal("Non-residential", worksheet.outputs_energy_flows_k232); end
  def test_outputs_energy_flows_v232; assert_in_epsilon(4.449325540384182, worksheet.outputs_energy_flows_v232, 0.002); end
  def test_outputs_energy_flows_w232; assert_in_epsilon(4.707001170101115, worksheet.outputs_energy_flows_w232, 0.002); end
  def test_outputs_energy_flows_x232; assert_in_epsilon(5.15112530485955, worksheet.outputs_energy_flows_x232, 0.002); end
  def test_outputs_energy_flows_y232; assert_in_epsilon(5.57468785845081, worksheet.outputs_energy_flows_y232, 0.002); end
  def test_outputs_energy_flows_z232; assert_in_epsilon(5.972917255615888, worksheet.outputs_energy_flows_z232, 0.002); end
  def test_outputs_energy_flows_aa232; assert_in_epsilon(6.342902967744603, worksheet.outputs_energy_flows_aa232, 0.002); end
  def test_outputs_energy_flows_ab232; assert_in_epsilon(6.680521903057546, worksheet.outputs_energy_flows_ab232, 0.002); end
  def test_outputs_energy_flows_ac232; assert_in_epsilon(6.980570825609973, worksheet.outputs_energy_flows_ac232, 0.002); end
  def test_outputs_energy_flows_ad232; assert_in_epsilon(7.238541161036772, worksheet.outputs_energy_flows_ad232, 0.002); end
  def test_outputs_energy_flows_c234; assert_equal("n/a", worksheet.outputs_energy_flows_c234); end
  def test_outputs_energy_flows_d234; assert_equal("Gas", worksheet.outputs_energy_flows_d234); end
  def test_outputs_energy_flows_e234; assert_equal("n/a", worksheet.outputs_energy_flows_e234); end
  def test_outputs_energy_flows_f234; assert_equal("Steel", worksheet.outputs_energy_flows_f234); end
  def test_outputs_energy_flows_i234; assert_equal("C.03", worksheet.outputs_energy_flows_i234); end
  def test_outputs_energy_flows_j234; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j234); end
  def test_outputs_energy_flows_v234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v234||0), 0.002); end
  def test_outputs_energy_flows_w234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w234||0), 0.002); end
  def test_outputs_energy_flows_x234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x234||0), 0.002); end
  def test_outputs_energy_flows_y234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y234||0), 0.002); end
  def test_outputs_energy_flows_z234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z234||0), 0.002); end
  def test_outputs_energy_flows_aa234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa234||0), 0.002); end
  def test_outputs_energy_flows_ab234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab234||0), 0.002); end
  def test_outputs_energy_flows_ac234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac234||0), 0.002); end
  def test_outputs_energy_flows_ad234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad234||0), 0.002); end
  def test_outputs_energy_flows_c236; assert_equal("n/a", worksheet.outputs_energy_flows_c236); end
  def test_outputs_energy_flows_d236; assert_equal("Gas", worksheet.outputs_energy_flows_d236); end
  def test_outputs_energy_flows_e236; assert_equal("n/a", worksheet.outputs_energy_flows_e236); end
  def test_outputs_energy_flows_f236; assert_equal("Aluminium", worksheet.outputs_energy_flows_f236); end
  def test_outputs_energy_flows_i236; assert_equal("C.03", worksheet.outputs_energy_flows_i236); end
  def test_outputs_energy_flows_j236; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j236); end
  def test_outputs_energy_flows_v236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v236||0), 0.002); end
  def test_outputs_energy_flows_w236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w236||0), 0.002); end
  def test_outputs_energy_flows_x236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x236||0), 0.002); end
  def test_outputs_energy_flows_y236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y236||0), 0.002); end
  def test_outputs_energy_flows_z236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z236||0), 0.002); end
  def test_outputs_energy_flows_aa236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa236||0), 0.002); end
  def test_outputs_energy_flows_ab236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab236||0), 0.002); end
  def test_outputs_energy_flows_ac236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac236||0), 0.002); end
  def test_outputs_energy_flows_ad236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad236||0), 0.002); end
  def test_outputs_energy_flows_c238; assert_equal("n/a", worksheet.outputs_energy_flows_c238); end
  def test_outputs_energy_flows_d238; assert_equal("Gas", worksheet.outputs_energy_flows_d238); end
  def test_outputs_energy_flows_e238; assert_equal("n/a", worksheet.outputs_energy_flows_e238); end
  def test_outputs_energy_flows_f238; assert_equal("Cement", worksheet.outputs_energy_flows_f238); end
  def test_outputs_energy_flows_i238; assert_equal("C.03", worksheet.outputs_energy_flows_i238); end
  def test_outputs_energy_flows_j238; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j238); end
  def test_outputs_energy_flows_v238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v238||0), 0.002); end
  def test_outputs_energy_flows_w238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w238||0), 0.002); end
  def test_outputs_energy_flows_x238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x238||0), 0.002); end
  def test_outputs_energy_flows_y238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y238||0), 0.002); end
  def test_outputs_energy_flows_z238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z238||0), 0.002); end
  def test_outputs_energy_flows_aa238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa238||0), 0.002); end
  def test_outputs_energy_flows_ab238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab238||0), 0.002); end
  def test_outputs_energy_flows_ac238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac238||0), 0.002); end
  def test_outputs_energy_flows_ad238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad238||0), 0.002); end
  def test_outputs_energy_flows_c240; assert_equal("n/a", worksheet.outputs_energy_flows_c240); end
  def test_outputs_energy_flows_d240; assert_equal("Gas", worksheet.outputs_energy_flows_d240); end
  def test_outputs_energy_flows_e240; assert_equal("n/a", worksheet.outputs_energy_flows_e240); end
  def test_outputs_energy_flows_f240; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f240); end
  def test_outputs_energy_flows_i240; assert_equal("C.03", worksheet.outputs_energy_flows_i240); end
  def test_outputs_energy_flows_j240; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j240); end
  def test_outputs_energy_flows_v240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v240||0), 0.002); end
  def test_outputs_energy_flows_w240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w240||0), 0.002); end
  def test_outputs_energy_flows_x240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x240||0), 0.002); end
  def test_outputs_energy_flows_y240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y240||0), 0.002); end
  def test_outputs_energy_flows_z240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z240||0), 0.002); end
  def test_outputs_energy_flows_aa240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa240||0), 0.002); end
  def test_outputs_energy_flows_ab240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab240||0), 0.002); end
  def test_outputs_energy_flows_ac240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac240||0), 0.002); end
  def test_outputs_energy_flows_ad240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad240||0), 0.002); end
  def test_outputs_energy_flows_c242; assert_equal("n/a", worksheet.outputs_energy_flows_c242); end
  def test_outputs_energy_flows_d242; assert_equal("Gas", worksheet.outputs_energy_flows_d242); end
  def test_outputs_energy_flows_e242; assert_equal("n/a", worksheet.outputs_energy_flows_e242); end
  def test_outputs_energy_flows_f242; assert_equal("Chemicals", worksheet.outputs_energy_flows_f242); end
  def test_outputs_energy_flows_i242; assert_equal("C.03", worksheet.outputs_energy_flows_i242); end
  def test_outputs_energy_flows_j242; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j242); end
  def test_outputs_energy_flows_v242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v242||0), 0.002); end
  def test_outputs_energy_flows_w242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w242||0), 0.002); end
  def test_outputs_energy_flows_x242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x242||0), 0.002); end
  def test_outputs_energy_flows_y242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y242||0), 0.002); end
  def test_outputs_energy_flows_z242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z242||0), 0.002); end
  def test_outputs_energy_flows_aa242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa242||0), 0.002); end
  def test_outputs_energy_flows_ab242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab242||0), 0.002); end
  def test_outputs_energy_flows_ac242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac242||0), 0.002); end
  def test_outputs_energy_flows_ad242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad242||0), 0.002); end
  def test_outputs_energy_flows_c244; assert_equal("n/a", worksheet.outputs_energy_flows_c244); end
  def test_outputs_energy_flows_d244; assert_equal("Gas", worksheet.outputs_energy_flows_d244); end
  def test_outputs_energy_flows_e244; assert_equal("n/a", worksheet.outputs_energy_flows_e244); end
  def test_outputs_energy_flows_f244; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f244); end
  def test_outputs_energy_flows_i244; assert_equal("C.03", worksheet.outputs_energy_flows_i244); end
  def test_outputs_energy_flows_j244; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j244); end
  def test_outputs_energy_flows_l244; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l244); end
  def test_outputs_energy_flows_m244; assert_equal("Timber", worksheet.outputs_energy_flows_m244); end
  def test_outputs_energy_flows_v244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v244||0), 0.002); end
  def test_outputs_energy_flows_w244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w244||0), 0.002); end
  def test_outputs_energy_flows_x244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x244||0), 0.002); end
  def test_outputs_energy_flows_y244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y244||0), 0.002); end
  def test_outputs_energy_flows_z244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z244||0), 0.002); end
  def test_outputs_energy_flows_aa244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa244||0), 0.002); end
  def test_outputs_energy_flows_ab244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab244||0), 0.002); end
  def test_outputs_energy_flows_ac244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac244||0), 0.002); end
  def test_outputs_energy_flows_ad244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad244||0), 0.002); end
  def test_outputs_energy_flows_c246; assert_equal("n/a", worksheet.outputs_energy_flows_c246); end
  def test_outputs_energy_flows_d246; assert_equal("Gas", worksheet.outputs_energy_flows_d246); end
  def test_outputs_energy_flows_e246; assert_equal("n/a", worksheet.outputs_energy_flows_e246); end
  def test_outputs_energy_flows_f246; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f246); end
  def test_outputs_energy_flows_i246; assert_equal("C.03", worksheet.outputs_energy_flows_i246); end
  def test_outputs_energy_flows_j246; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j246); end
  def test_outputs_energy_flows_l246; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l246); end
  def test_outputs_energy_flows_m246; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m246); end
  def test_outputs_energy_flows_v246; assert_in_delta(0.3352766495680165, worksheet.outputs_energy_flows_v246, 0.002); end
  def test_outputs_energy_flows_w246; assert_in_delta(0.455941718378443, worksheet.outputs_energy_flows_w246, 0.002); end
  def test_outputs_energy_flows_x246; assert_in_delta(0.576567576935833, worksheet.outputs_energy_flows_x246, 0.002); end
  def test_outputs_energy_flows_y246; assert_in_delta(0.6928735044143511, worksheet.outputs_energy_flows_y246, 0.002); end
  def test_outputs_energy_flows_z246; assert_in_delta(0.8211743482054049, worksheet.outputs_energy_flows_z246, 0.002); end
  def test_outputs_energy_flows_aa246; assert_in_delta(0.9645037460219634, worksheet.outputs_energy_flows_aa246, 0.002); end
  def test_outputs_energy_flows_ab246; assert_in_epsilon(1.121823531340757, worksheet.outputs_energy_flows_ab246, 0.002); end
  def test_outputs_energy_flows_ac246; assert_in_epsilon(1.2919743392494905, worksheet.outputs_energy_flows_ac246, 0.002); end
  def test_outputs_energy_flows_ad246; assert_in_epsilon(1.4836410173724675, worksheet.outputs_energy_flows_ad246, 0.002); end
  def test_outputs_energy_flows_c248; assert_equal("n/a", worksheet.outputs_energy_flows_c248); end
  def test_outputs_energy_flows_d248; assert_equal("Gas", worksheet.outputs_energy_flows_d248); end
  def test_outputs_energy_flows_e248; assert_equal("n/a", worksheet.outputs_energy_flows_e248); end
  def test_outputs_energy_flows_f248; assert_equal("International passenger", worksheet.outputs_energy_flows_f248); end
  def test_outputs_energy_flows_i248; assert_equal("C.03", worksheet.outputs_energy_flows_i248); end
  def test_outputs_energy_flows_j248; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j248); end
  def test_outputs_energy_flows_l248; assert_equal("International", worksheet.outputs_energy_flows_l248); end
  def test_outputs_energy_flows_v248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v248||0), 0.002); end
  def test_outputs_energy_flows_w248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w248||0), 0.002); end
  def test_outputs_energy_flows_x248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x248||0), 0.002); end
  def test_outputs_energy_flows_y248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y248||0), 0.002); end
  def test_outputs_energy_flows_z248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z248||0), 0.002); end
  def test_outputs_energy_flows_aa248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa248||0), 0.002); end
  def test_outputs_energy_flows_ab248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab248||0), 0.002); end
  def test_outputs_energy_flows_ac248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac248||0), 0.002); end
  def test_outputs_energy_flows_ad248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad248||0), 0.002); end
  def test_outputs_energy_flows_c250; assert_equal("n/a", worksheet.outputs_energy_flows_c250); end
  def test_outputs_energy_flows_d250; assert_equal("Gas", worksheet.outputs_energy_flows_d250); end
  def test_outputs_energy_flows_e250; assert_equal("n/a", worksheet.outputs_energy_flows_e250); end
  def test_outputs_energy_flows_f250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f250); end
  def test_outputs_energy_flows_i250; assert_equal("C.03", worksheet.outputs_energy_flows_i250); end
  def test_outputs_energy_flows_j250; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j250); end
  def test_outputs_energy_flows_l250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l250); end
  def test_outputs_energy_flows_v250; assert_in_delta(0.011922881771682584, worksheet.outputs_energy_flows_v250, 0.002); end
  def test_outputs_energy_flows_w250; assert_in_delta(0.26824286650026546, worksheet.outputs_energy_flows_w250, 0.002); end
  def test_outputs_energy_flows_x250; assert_in_delta(0.4705276789330609, worksheet.outputs_energy_flows_x250, 0.002); end
  def test_outputs_energy_flows_y250; assert_in_delta(0.7097151494823595, worksheet.outputs_energy_flows_y250, 0.002); end
  def test_outputs_energy_flows_z250; assert_in_delta(0.9563744139615069, worksheet.outputs_energy_flows_z250, 0.002); end
  def test_outputs_energy_flows_aa250; assert_in_epsilon(1.1981014348091408, worksheet.outputs_energy_flows_aa250, 0.002); end
  def test_outputs_energy_flows_ab250; assert_in_epsilon(1.420913866245463, worksheet.outputs_energy_flows_ab250, 0.002); end
  def test_outputs_energy_flows_ac250; assert_in_epsilon(1.6272025636523195, worksheet.outputs_energy_flows_ac250, 0.002); end
  def test_outputs_energy_flows_ad250; assert_in_epsilon(1.8102988002544067, worksheet.outputs_energy_flows_ad250, 0.002); end
  def test_outputs_energy_flows_c252; assert_equal("n/a", worksheet.outputs_energy_flows_c252); end
  def test_outputs_energy_flows_d252; assert_equal("Gas", worksheet.outputs_energy_flows_d252); end
  def test_outputs_energy_flows_e252; assert_equal("n/a", worksheet.outputs_energy_flows_e252); end
  def test_outputs_energy_flows_f252; assert_equal("International freight", worksheet.outputs_energy_flows_f252); end
  def test_outputs_energy_flows_i252; assert_equal("C.03", worksheet.outputs_energy_flows_i252); end
  def test_outputs_energy_flows_j252; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j252); end
  def test_outputs_energy_flows_l252; assert_equal("International freight", worksheet.outputs_energy_flows_l252); end
  def test_outputs_energy_flows_v252; assert_in_delta(4.41118442617133e-09, worksheet.outputs_energy_flows_v252, 0.002); end
  def test_outputs_energy_flows_w252; assert_in_delta(0.06549577647716404, worksheet.outputs_energy_flows_w252, 0.002); end
  def test_outputs_energy_flows_x252; assert_in_delta(0.11487541027625729, worksheet.outputs_energy_flows_x252, 0.002); end
  def test_outputs_energy_flows_y252; assert_in_delta(0.17503464250190842, worksheet.outputs_energy_flows_y252, 0.002); end
  def test_outputs_energy_flows_z252; assert_in_delta(0.2423056631765429, worksheet.outputs_energy_flows_z252, 0.002); end
  def test_outputs_energy_flows_aa252; assert_in_delta(0.2981003753594629, worksheet.outputs_energy_flows_aa252, 0.002); end
  def test_outputs_energy_flows_ab252; assert_in_delta(0.34711915235112056, worksheet.outputs_energy_flows_ab252, 0.002); end
  def test_outputs_energy_flows_ac252; assert_in_delta(0.39347580266895527, worksheet.outputs_energy_flows_ac252, 0.002); end
  def test_outputs_energy_flows_ad252; assert_in_delta(0.4300042243985998, worksheet.outputs_energy_flows_ad252, 0.002); end
  def test_outputs_energy_flows_c254; assert_equal("n/a", worksheet.outputs_energy_flows_c254); end
  def test_outputs_energy_flows_d254; assert_equal("Gas", worksheet.outputs_energy_flows_d254); end
  def test_outputs_energy_flows_e254; assert_equal("n/a", worksheet.outputs_energy_flows_e254); end
  def test_outputs_energy_flows_f254; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f254); end
  def test_outputs_energy_flows_i254; assert_equal("C.03", worksheet.outputs_energy_flows_i254); end
  def test_outputs_energy_flows_j254; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j254); end
  def test_outputs_energy_flows_v254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v254||0), 0.002); end
  def test_outputs_energy_flows_w254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w254||0), 0.002); end
  def test_outputs_energy_flows_x254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x254||0), 0.002); end
  def test_outputs_energy_flows_y254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y254||0), 0.002); end
  def test_outputs_energy_flows_z254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z254||0), 0.002); end
  def test_outputs_energy_flows_aa254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa254||0), 0.002); end
  def test_outputs_energy_flows_ab254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab254||0), 0.002); end
  def test_outputs_energy_flows_ac254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac254||0), 0.002); end
  def test_outputs_energy_flows_ad254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad254||0), 0.002); end
  def test_outputs_energy_flows_c256; assert_equal("n/a", worksheet.outputs_energy_flows_c256); end
  def test_outputs_energy_flows_d256; assert_equal("Gas", worksheet.outputs_energy_flows_d256); end
  def test_outputs_energy_flows_e256; assert_equal("G.01", worksheet.outputs_energy_flows_e256); end
  def test_outputs_energy_flows_f256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f256); end
  def test_outputs_energy_flows_g256; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g256); end
  def test_outputs_energy_flows_h256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h256); end
  def test_outputs_energy_flows_i256; assert_equal("C.03", worksheet.outputs_energy_flows_i256); end
  def test_outputs_energy_flows_j256; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j256); end
  def test_outputs_energy_flows_v256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v256||0), 0.002); end
  def test_outputs_energy_flows_w256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w256||0), 0.002); end
  def test_outputs_energy_flows_x256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x256||0), 0.002); end
  def test_outputs_energy_flows_y256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y256||0), 0.002); end
  def test_outputs_energy_flows_z256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z256||0), 0.002); end
  def test_outputs_energy_flows_aa256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa256||0), 0.002); end
  def test_outputs_energy_flows_ab256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab256||0), 0.002); end
  def test_outputs_energy_flows_ac256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac256||0), 0.002); end
  def test_outputs_energy_flows_ad256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad256||0), 0.002); end
  def test_outputs_energy_flows_c258; assert_equal("n/a", worksheet.outputs_energy_flows_c258); end
  def test_outputs_energy_flows_d258; assert_equal("Gas", worksheet.outputs_energy_flows_d258); end
  def test_outputs_energy_flows_e258; assert_equal("n/a", worksheet.outputs_energy_flows_e258); end
  def test_outputs_energy_flows_f258; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f258); end
  def test_outputs_energy_flows_g258; assert_equal("n/a", worksheet.outputs_energy_flows_g258); end
  def test_outputs_energy_flows_h258; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h258); end
  def test_outputs_energy_flows_i258; assert_equal("C.03", worksheet.outputs_energy_flows_i258); end
  def test_outputs_energy_flows_j258; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j258); end
  def test_outputs_energy_flows_v258; assert_in_delta(0.6980000000000002, worksheet.outputs_energy_flows_v258, 0.002); end
  def test_outputs_energy_flows_w258; assert_in_delta(0.712526589764374, worksheet.outputs_energy_flows_w258, 0.002); end
  def test_outputs_energy_flows_x258; assert_in_delta(0.7423967488639351, worksheet.outputs_energy_flows_x258, 0.002); end
  def test_outputs_energy_flows_y258; assert_in_delta(0.7700032651636604, worksheet.outputs_energy_flows_y258, 0.002); end
  def test_outputs_energy_flows_z258; assert_in_delta(0.7957448568751477, worksheet.outputs_energy_flows_z258, 0.002); end
  def test_outputs_energy_flows_aa258; assert_in_delta(0.8195527032443858, worksheet.outputs_energy_flows_aa258, 0.002); end
  def test_outputs_energy_flows_ab258; assert_in_delta(0.8430652412640843, worksheet.outputs_energy_flows_ab258, 0.002); end
  def test_outputs_energy_flows_ac258; assert_in_delta(0.8645736879128236, worksheet.outputs_energy_flows_ac258, 0.002); end
  def test_outputs_energy_flows_ad258; assert_in_delta(0.8870768022353033, worksheet.outputs_energy_flows_ad258, 0.002); end
  def test_outputs_energy_flows_c260; assert_equal("FF.01", worksheet.outputs_energy_flows_c260); end
  def test_outputs_energy_flows_d260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d260); end
  def test_outputs_energy_flows_e260; assert_equal("n/a", worksheet.outputs_energy_flows_e260); end
  def test_outputs_energy_flows_f260; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f260); end
  def test_outputs_energy_flows_i260; assert_equal("FF.01", worksheet.outputs_energy_flows_i260); end
  def test_outputs_energy_flows_j260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j260); end
  def test_outputs_energy_flows_k260; assert_equal("Global buildings", worksheet.outputs_energy_flows_k260); end
  def test_outputs_energy_flows_v260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v260||0), 0.002); end
  def test_outputs_energy_flows_w260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w260||0), 0.002); end
  def test_outputs_energy_flows_x260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x260||0), 0.002); end
  def test_outputs_energy_flows_y260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y260||0), 0.002); end
  def test_outputs_energy_flows_z260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z260||0), 0.002); end
  def test_outputs_energy_flows_aa260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa260||0), 0.002); end
  def test_outputs_energy_flows_ab260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab260||0), 0.002); end
  def test_outputs_energy_flows_ac260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac260||0), 0.002); end
  def test_outputs_energy_flows_ad260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad260||0), 0.002); end
  def test_outputs_energy_flows_c262; assert_equal("FF.01", worksheet.outputs_energy_flows_c262); end
  def test_outputs_energy_flows_d262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d262); end
  def test_outputs_energy_flows_e262; assert_equal("n/a", worksheet.outputs_energy_flows_e262); end
  def test_outputs_energy_flows_f262; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f262); end
  def test_outputs_energy_flows_i262; assert_equal("FF.01", worksheet.outputs_energy_flows_i262); end
  def test_outputs_energy_flows_j262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j262); end
  def test_outputs_energy_flows_k262; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k262); end
  def test_outputs_energy_flows_l262; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l262); end
  def test_outputs_energy_flows_v262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v262||0), 0.002); end
  def test_outputs_energy_flows_w262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w262||0), 0.002); end
  def test_outputs_energy_flows_x262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x262||0), 0.002); end
  def test_outputs_energy_flows_y262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y262||0), 0.002); end
  def test_outputs_energy_flows_z262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z262||0), 0.002); end
  def test_outputs_energy_flows_aa262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa262||0), 0.002); end
  def test_outputs_energy_flows_ab262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab262||0), 0.002); end
  def test_outputs_energy_flows_ac262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac262||0), 0.002); end
  def test_outputs_energy_flows_ad262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad262||0), 0.002); end
  def test_outputs_energy_flows_c264; assert_equal("FF.01", worksheet.outputs_energy_flows_c264); end
  def test_outputs_energy_flows_d264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d264); end
  def test_outputs_energy_flows_e264; assert_equal("n/a", worksheet.outputs_energy_flows_e264); end
  def test_outputs_energy_flows_f264; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f264); end
  def test_outputs_energy_flows_i264; assert_equal("FF.01", worksheet.outputs_energy_flows_i264); end
  def test_outputs_energy_flows_j264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j264); end
  def test_outputs_energy_flows_k264; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k264); end
  def test_outputs_energy_flows_l264; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l264); end
  def test_outputs_energy_flows_v264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v264||0), 0.002); end
  def test_outputs_energy_flows_w264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w264||0), 0.002); end
  def test_outputs_energy_flows_x264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x264||0), 0.002); end
  def test_outputs_energy_flows_y264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y264||0), 0.002); end
  def test_outputs_energy_flows_z264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z264||0), 0.002); end
  def test_outputs_energy_flows_aa264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa264||0), 0.002); end
  def test_outputs_energy_flows_ab264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab264||0), 0.002); end
  def test_outputs_energy_flows_ac264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac264||0), 0.002); end
  def test_outputs_energy_flows_ad264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad264||0), 0.002); end
  def test_outputs_energy_flows_c266; assert_equal("FF.01", worksheet.outputs_energy_flows_c266); end
  def test_outputs_energy_flows_d266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d266); end
  def test_outputs_energy_flows_e266; assert_equal("n/a", worksheet.outputs_energy_flows_e266); end
  def test_outputs_energy_flows_f266; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f266); end
  def test_outputs_energy_flows_i266; assert_equal("FF.01", worksheet.outputs_energy_flows_i266); end
  def test_outputs_energy_flows_j266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j266); end
  def test_outputs_energy_flows_k266; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k266); end
  def test_outputs_energy_flows_l266; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l266); end
  def test_outputs_energy_flows_v266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v266||0), 0.002); end
  def test_outputs_energy_flows_w266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w266||0), 0.002); end
  def test_outputs_energy_flows_x266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x266||0), 0.002); end
  def test_outputs_energy_flows_y266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y266||0), 0.002); end
  def test_outputs_energy_flows_z266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z266||0), 0.002); end
  def test_outputs_energy_flows_aa266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa266||0), 0.002); end
  def test_outputs_energy_flows_ab266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab266||0), 0.002); end
  def test_outputs_energy_flows_ac266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac266||0), 0.002); end
  def test_outputs_energy_flows_ad266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad266||0), 0.002); end
  def test_outputs_energy_flows_c268; assert_equal("FF.01", worksheet.outputs_energy_flows_c268); end
  def test_outputs_energy_flows_d268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d268); end
  def test_outputs_energy_flows_e268; assert_equal("n/a", worksheet.outputs_energy_flows_e268); end
  def test_outputs_energy_flows_f268; assert_equal("Non domestic", worksheet.outputs_energy_flows_f268); end
  def test_outputs_energy_flows_i268; assert_equal("FF.01", worksheet.outputs_energy_flows_i268); end
  def test_outputs_energy_flows_j268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j268); end
  def test_outputs_energy_flows_k268; assert_equal("Non-residential", worksheet.outputs_energy_flows_k268); end
  def test_outputs_energy_flows_v268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v268||0), 0.002); end
  def test_outputs_energy_flows_w268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w268||0), 0.002); end
  def test_outputs_energy_flows_x268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x268||0), 0.002); end
  def test_outputs_energy_flows_y268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y268||0), 0.002); end
  def test_outputs_energy_flows_z268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z268||0), 0.002); end
  def test_outputs_energy_flows_aa268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa268||0), 0.002); end
  def test_outputs_energy_flows_ab268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab268||0), 0.002); end
  def test_outputs_energy_flows_ac268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac268||0), 0.002); end
  def test_outputs_energy_flows_ad268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad268||0), 0.002); end
  def test_outputs_energy_flows_c270; assert_equal("FF.01", worksheet.outputs_energy_flows_c270); end
  def test_outputs_energy_flows_d270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d270); end
  def test_outputs_energy_flows_e270; assert_equal("n/a", worksheet.outputs_energy_flows_e270); end
  def test_outputs_energy_flows_f270; assert_equal("Steel", worksheet.outputs_energy_flows_f270); end
  def test_outputs_energy_flows_i270; assert_equal("FF.01", worksheet.outputs_energy_flows_i270); end
  def test_outputs_energy_flows_j270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j270); end
  def test_outputs_energy_flows_v270; assert_in_epsilon(23.235493129092, worksheet.outputs_energy_flows_v270, 0.002); end
  def test_outputs_energy_flows_w270; assert_in_epsilon(24.174634018534668, worksheet.outputs_energy_flows_w270, 0.002); end
  def test_outputs_energy_flows_x270; assert_in_epsilon(25.76712704908529, worksheet.outputs_energy_flows_x270, 0.002); end
  def test_outputs_energy_flows_y270; assert_in_epsilon(27.64627197475211, worksheet.outputs_energy_flows_y270, 0.002); end
  def test_outputs_energy_flows_z270; assert_in_epsilon(29.275547126945302, worksheet.outputs_energy_flows_z270, 0.002); end
  def test_outputs_energy_flows_aa270; assert_in_epsilon(30.695154737371926, worksheet.outputs_energy_flows_aa270, 0.002); end
  def test_outputs_energy_flows_ab270; assert_in_epsilon(32.25376309139454, worksheet.outputs_energy_flows_ab270, 0.002); end
  def test_outputs_energy_flows_ac270; assert_in_epsilon(33.88482116872565, worksheet.outputs_energy_flows_ac270, 0.002); end
  def test_outputs_energy_flows_ad270; assert_in_epsilon(35.57603221742053, worksheet.outputs_energy_flows_ad270, 0.002); end
  def test_outputs_energy_flows_c272; assert_equal("FF.01", worksheet.outputs_energy_flows_c272); end
  def test_outputs_energy_flows_d272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d272); end
  def test_outputs_energy_flows_e272; assert_equal("n/a", worksheet.outputs_energy_flows_e272); end
  def test_outputs_energy_flows_f272; assert_equal("Aluminium", worksheet.outputs_energy_flows_f272); end
  def test_outputs_energy_flows_i272; assert_equal("FF.01", worksheet.outputs_energy_flows_i272); end
  def test_outputs_energy_flows_j272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j272); end
  def test_outputs_energy_flows_v272; assert_in_delta(0.7339274805745352, worksheet.outputs_energy_flows_v272, 0.002); end
  def test_outputs_energy_flows_w272; assert_in_delta(0.813963361137801, worksheet.outputs_energy_flows_w272, 0.002); end
  def test_outputs_energy_flows_x272; assert_in_delta(0.9007997683961296, worksheet.outputs_energy_flows_x272, 0.002); end
  def test_outputs_energy_flows_y272; assert_in_epsilon(1.030303011039156, worksheet.outputs_energy_flows_y272, 0.002); end
  def test_outputs_energy_flows_z272; assert_in_epsilon(1.1678566986021484, worksheet.outputs_energy_flows_z272, 0.002); end
  def test_outputs_energy_flows_aa272; assert_in_epsilon(1.3071636515329772, worksheet.outputs_energy_flows_aa272, 0.002); end
  def test_outputs_energy_flows_ab272; assert_in_epsilon(1.4629974581877356, worksheet.outputs_energy_flows_ab272, 0.002); end
  def test_outputs_energy_flows_ac272; assert_in_epsilon(1.6312405939850252, worksheet.outputs_energy_flows_ac272, 0.002); end
  def test_outputs_energy_flows_ad272; assert_in_epsilon(1.8197176287451278, worksheet.outputs_energy_flows_ad272, 0.002); end
  def test_outputs_energy_flows_c274; assert_equal("FF.01", worksheet.outputs_energy_flows_c274); end
  def test_outputs_energy_flows_d274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d274); end
  def test_outputs_energy_flows_e274; assert_equal("n/a", worksheet.outputs_energy_flows_e274); end
  def test_outputs_energy_flows_f274; assert_equal("Cement", worksheet.outputs_energy_flows_f274); end
  def test_outputs_energy_flows_i274; assert_equal("FF.01", worksheet.outputs_energy_flows_i274); end
  def test_outputs_energy_flows_j274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j274); end
  def test_outputs_energy_flows_v274; assert_in_epsilon(6.851960921136625, worksheet.outputs_energy_flows_v274, 0.002); end
  def test_outputs_energy_flows_w274; assert_in_epsilon(6.991214199671668, worksheet.outputs_energy_flows_w274, 0.002); end
  def test_outputs_energy_flows_x274; assert_in_epsilon(7.564396983758327, worksheet.outputs_energy_flows_x274, 0.002); end
  def test_outputs_energy_flows_y274; assert_in_epsilon(7.800738415850228, worksheet.outputs_energy_flows_y274, 0.002); end
  def test_outputs_energy_flows_z274; assert_in_epsilon(7.99910454656934, worksheet.outputs_energy_flows_z274, 0.002); end
  def test_outputs_energy_flows_aa274; assert_in_epsilon(8.160727326762395, worksheet.outputs_energy_flows_aa274, 0.002); end
  def test_outputs_energy_flows_ab274; assert_in_epsilon(8.266212111167604, worksheet.outputs_energy_flows_ab274, 0.002); end
  def test_outputs_energy_flows_ac274; assert_in_epsilon(8.351229355244906, worksheet.outputs_energy_flows_ac274, 0.002); end
  def test_outputs_energy_flows_ad274; assert_in_epsilon(8.4405261279555, worksheet.outputs_energy_flows_ad274, 0.002); end
  def test_outputs_energy_flows_c276; assert_equal("FF.01", worksheet.outputs_energy_flows_c276); end
  def test_outputs_energy_flows_d276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d276); end
  def test_outputs_energy_flows_e276; assert_equal("n/a", worksheet.outputs_energy_flows_e276); end
  def test_outputs_energy_flows_f276; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f276); end
  def test_outputs_energy_flows_i276; assert_equal("FF.01", worksheet.outputs_energy_flows_i276); end
  def test_outputs_energy_flows_j276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j276); end
  def test_outputs_energy_flows_v276; assert_in_epsilon(1.518261087438881, worksheet.outputs_energy_flows_v276, 0.002); end
  def test_outputs_energy_flows_w276; assert_in_epsilon(1.5791251376061657, worksheet.outputs_energy_flows_w276, 0.002); end
  def test_outputs_energy_flows_x276; assert_in_epsilon(1.6330959819493007, worksheet.outputs_energy_flows_x276, 0.002); end
  def test_outputs_energy_flows_y276; assert_in_epsilon(1.7587995599804385, worksheet.outputs_energy_flows_y276, 0.002); end
  def test_outputs_energy_flows_z276; assert_in_epsilon(1.8831430777268727, worksheet.outputs_energy_flows_z276, 0.002); end
  def test_outputs_energy_flows_aa276; assert_in_epsilon(2.00081627087374, worksheet.outputs_energy_flows_aa276, 0.002); end
  def test_outputs_energy_flows_ab276; assert_in_epsilon(2.1299282408376814, worksheet.outputs_energy_flows_ab276, 0.002); end
  def test_outputs_energy_flows_ac276; assert_in_epsilon(2.2534546089231835, worksheet.outputs_energy_flows_ac276, 0.002); end
  def test_outputs_energy_flows_ad276; assert_in_epsilon(2.389881997596071, worksheet.outputs_energy_flows_ad276, 0.002); end
  def test_outputs_energy_flows_c278; assert_equal("FF.01", worksheet.outputs_energy_flows_c278); end
  def test_outputs_energy_flows_d278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d278); end
  def test_outputs_energy_flows_e278; assert_equal("n/a", worksheet.outputs_energy_flows_e278); end
  def test_outputs_energy_flows_f278; assert_equal("Chemicals", worksheet.outputs_energy_flows_f278); end
  def test_outputs_energy_flows_i278; assert_equal("FF.01", worksheet.outputs_energy_flows_i278); end
  def test_outputs_energy_flows_j278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j278); end
  def test_outputs_energy_flows_v278; assert_in_epsilon(2.7901474530640202, worksheet.outputs_energy_flows_v278, 0.002); end
  def test_outputs_energy_flows_w278; assert_in_epsilon(2.910350543021221, worksheet.outputs_energy_flows_w278, 0.002); end
  def test_outputs_energy_flows_x278; assert_in_epsilon(3.089325437448942, worksheet.outputs_energy_flows_x278, 0.002); end
  def test_outputs_energy_flows_y278; assert_in_epsilon(3.368308237716642, worksheet.outputs_energy_flows_y278, 0.002); end
  def test_outputs_energy_flows_z278; assert_in_epsilon(3.660141709302846, worksheet.outputs_energy_flows_z278, 0.002); end
  def test_outputs_energy_flows_aa278; assert_in_epsilon(3.960264720781888, worksheet.outputs_energy_flows_aa278, 0.002); end
  def test_outputs_energy_flows_ab278; assert_in_epsilon(4.297020156710716, worksheet.outputs_energy_flows_ab278, 0.002); end
  def test_outputs_energy_flows_ac278; assert_in_epsilon(4.6403947910680206, worksheet.outputs_energy_flows_ac278, 0.002); end
  def test_outputs_energy_flows_ad278; assert_in_epsilon(5.028727392940793, worksheet.outputs_energy_flows_ad278, 0.002); end
  def test_outputs_energy_flows_c280; assert_equal("FF.01", worksheet.outputs_energy_flows_c280); end
  def test_outputs_energy_flows_d280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d280); end
  def test_outputs_energy_flows_e280; assert_equal("n/a", worksheet.outputs_energy_flows_e280); end
  def test_outputs_energy_flows_f280; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f280); end
  def test_outputs_energy_flows_i280; assert_equal("FF.01", worksheet.outputs_energy_flows_i280); end
  def test_outputs_energy_flows_j280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j280); end
  def test_outputs_energy_flows_l280; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l280); end
  def test_outputs_energy_flows_m280; assert_equal("Timber", worksheet.outputs_energy_flows_m280); end
  def test_outputs_energy_flows_v280; assert_in_epsilon(7.157385604573962, worksheet.outputs_energy_flows_v280, 0.002); end
  def test_outputs_energy_flows_w280; assert_in_epsilon(7.371510385074341, worksheet.outputs_energy_flows_w280, 0.002); end
  def test_outputs_energy_flows_x280; assert_in_epsilon(7.8395506649365805, worksheet.outputs_energy_flows_x280, 0.002); end
  def test_outputs_energy_flows_y280; assert_in_epsilon(8.110782637148546, worksheet.outputs_energy_flows_y280, 0.002); end
  def test_outputs_energy_flows_z280; assert_in_epsilon(8.342342133828573, worksheet.outputs_energy_flows_z280, 0.002); end
  def test_outputs_energy_flows_aa280; assert_in_epsilon(8.52949103814849, worksheet.outputs_energy_flows_aa280, 0.002); end
  def test_outputs_energy_flows_ab280; assert_in_epsilon(8.688135548054511, worksheet.outputs_energy_flows_ab280, 0.002); end
  def test_outputs_energy_flows_ac280; assert_in_epsilon(8.828245656301164, worksheet.outputs_energy_flows_ac280, 0.002); end
  def test_outputs_energy_flows_ad280; assert_in_epsilon(8.958996720718282, worksheet.outputs_energy_flows_ad280, 0.002); end
  def test_outputs_energy_flows_c282; assert_equal("FF.01", worksheet.outputs_energy_flows_c282); end
  def test_outputs_energy_flows_d282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d282); end
  def test_outputs_energy_flows_e282; assert_equal("n/a", worksheet.outputs_energy_flows_e282); end
  def test_outputs_energy_flows_f282; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f282); end
  def test_outputs_energy_flows_i282; assert_equal("FF.01", worksheet.outputs_energy_flows_i282); end
  def test_outputs_energy_flows_j282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j282); end
  def test_outputs_energy_flows_l282; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l282); end
  def test_outputs_energy_flows_m282; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m282); end
  def test_outputs_energy_flows_v282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v282||0), 0.002); end
  def test_outputs_energy_flows_w282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w282||0), 0.002); end
  def test_outputs_energy_flows_x282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x282||0), 0.002); end
  def test_outputs_energy_flows_y282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y282||0), 0.002); end
  def test_outputs_energy_flows_z282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z282||0), 0.002); end
  def test_outputs_energy_flows_aa282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa282||0), 0.002); end
  def test_outputs_energy_flows_ab282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab282||0), 0.002); end
  def test_outputs_energy_flows_ac282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac282||0), 0.002); end
  def test_outputs_energy_flows_ad282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad282||0), 0.002); end
  def test_outputs_energy_flows_c284; assert_equal("FF.01", worksheet.outputs_energy_flows_c284); end
  def test_outputs_energy_flows_d284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d284); end
  def test_outputs_energy_flows_e284; assert_equal("n/a", worksheet.outputs_energy_flows_e284); end
  def test_outputs_energy_flows_f284; assert_equal("International passenger", worksheet.outputs_energy_flows_f284); end
  def test_outputs_energy_flows_i284; assert_equal("FF.01", worksheet.outputs_energy_flows_i284); end
  def test_outputs_energy_flows_j284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j284); end
  def test_outputs_energy_flows_l284; assert_equal("International", worksheet.outputs_energy_flows_l284); end
  def test_outputs_energy_flows_v284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v284||0), 0.002); end
  def test_outputs_energy_flows_w284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w284||0), 0.002); end
  def test_outputs_energy_flows_x284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x284||0), 0.002); end
  def test_outputs_energy_flows_y284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y284||0), 0.002); end
  def test_outputs_energy_flows_z284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z284||0), 0.002); end
  def test_outputs_energy_flows_aa284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa284||0), 0.002); end
  def test_outputs_energy_flows_ab284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab284||0), 0.002); end
  def test_outputs_energy_flows_ac284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac284||0), 0.002); end
  def test_outputs_energy_flows_ad284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad284||0), 0.002); end
  def test_outputs_energy_flows_c286; assert_equal("FF.01", worksheet.outputs_energy_flows_c286); end
  def test_outputs_energy_flows_d286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d286); end
  def test_outputs_energy_flows_e286; assert_equal("n/a", worksheet.outputs_energy_flows_e286); end
  def test_outputs_energy_flows_f286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f286); end
  def test_outputs_energy_flows_i286; assert_equal("FF.01", worksheet.outputs_energy_flows_i286); end
  def test_outputs_energy_flows_j286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j286); end
  def test_outputs_energy_flows_l286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l286); end
  def test_outputs_energy_flows_v286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v286||0), 0.002); end
  def test_outputs_energy_flows_w286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w286||0), 0.002); end
  def test_outputs_energy_flows_x286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x286||0), 0.002); end
  def test_outputs_energy_flows_y286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y286||0), 0.002); end
  def test_outputs_energy_flows_z286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z286||0), 0.002); end
  def test_outputs_energy_flows_aa286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa286||0), 0.002); end
  def test_outputs_energy_flows_ab286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab286||0), 0.002); end
  def test_outputs_energy_flows_ac286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac286||0), 0.002); end
  def test_outputs_energy_flows_ad286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad286||0), 0.002); end
  def test_outputs_energy_flows_c288; assert_equal("FF.01", worksheet.outputs_energy_flows_c288); end
  def test_outputs_energy_flows_d288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d288); end
  def test_outputs_energy_flows_e288; assert_equal("n/a", worksheet.outputs_energy_flows_e288); end
  def test_outputs_energy_flows_f288; assert_equal("International freight", worksheet.outputs_energy_flows_f288); end
  def test_outputs_energy_flows_i288; assert_equal("FF.01", worksheet.outputs_energy_flows_i288); end
  def test_outputs_energy_flows_j288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j288); end
  def test_outputs_energy_flows_l288; assert_equal("International freight", worksheet.outputs_energy_flows_l288); end
  def test_outputs_energy_flows_v288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v288||0), 0.002); end
  def test_outputs_energy_flows_w288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w288||0), 0.002); end
  def test_outputs_energy_flows_x288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x288||0), 0.002); end
  def test_outputs_energy_flows_y288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y288||0), 0.002); end
  def test_outputs_energy_flows_z288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z288||0), 0.002); end
  def test_outputs_energy_flows_aa288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa288||0), 0.002); end
  def test_outputs_energy_flows_ab288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab288||0), 0.002); end
  def test_outputs_energy_flows_ac288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac288||0), 0.002); end
  def test_outputs_energy_flows_ad288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad288||0), 0.002); end
  def test_outputs_energy_flows_c290; assert_equal("FF.01", worksheet.outputs_energy_flows_c290); end
  def test_outputs_energy_flows_d290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d290); end
  def test_outputs_energy_flows_e290; assert_equal("n/a", worksheet.outputs_energy_flows_e290); end
  def test_outputs_energy_flows_f290; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f290); end
  def test_outputs_energy_flows_i290; assert_equal("FF.01", worksheet.outputs_energy_flows_i290); end
  def test_outputs_energy_flows_j290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j290); end
  def test_outputs_energy_flows_v290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v290||0), 0.002); end
  def test_outputs_energy_flows_w290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w290||0), 0.002); end
  def test_outputs_energy_flows_x290; assert_in_delta(0.015808574186624857, worksheet.outputs_energy_flows_x290, 0.002); end
  def test_outputs_energy_flows_y290; assert_in_delta(0.029961541618467768, worksheet.outputs_energy_flows_y290, 0.002); end
  def test_outputs_energy_flows_z290; assert_in_delta(0.1336334233956511, worksheet.outputs_energy_flows_z290, 0.002); end
  def test_outputs_energy_flows_aa290; assert_in_delta(0.2686265819913731, worksheet.outputs_energy_flows_aa290, 0.002); end
  def test_outputs_energy_flows_ab290; assert_in_delta(0.3811140455206557, worksheet.outputs_energy_flows_ab290, 0.002); end
  def test_outputs_energy_flows_ac290; assert_in_delta(0.5094842394998049, worksheet.outputs_energy_flows_ac290, 0.002); end
  def test_outputs_energy_flows_ad290; assert_in_delta(0.5204238984478399, worksheet.outputs_energy_flows_ad290, 0.002); end
  def test_outputs_energy_flows_c292; assert_equal("FF.01", worksheet.outputs_energy_flows_c292); end
  def test_outputs_energy_flows_d292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d292); end
  def test_outputs_energy_flows_e292; assert_equal("G.01", worksheet.outputs_energy_flows_e292); end
  def test_outputs_energy_flows_f292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f292); end
  def test_outputs_energy_flows_g292; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g292); end
  def test_outputs_energy_flows_h292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h292); end
  def test_outputs_energy_flows_i292; assert_equal("FF.01", worksheet.outputs_energy_flows_i292); end
  def test_outputs_energy_flows_j292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j292); end
  def test_outputs_energy_flows_v292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v292||0), 0.002); end
  def test_outputs_energy_flows_w292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w292||0), 0.002); end
  def test_outputs_energy_flows_x292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x292||0), 0.002); end
  def test_outputs_energy_flows_y292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y292||0), 0.002); end
  def test_outputs_energy_flows_z292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z292||0), 0.002); end
  def test_outputs_energy_flows_aa292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa292||0), 0.002); end
  def test_outputs_energy_flows_ab292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab292||0), 0.002); end
  def test_outputs_energy_flows_ac292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac292||0), 0.002); end
  def test_outputs_energy_flows_ad292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad292||0), 0.002); end
  def test_outputs_energy_flows_c294; assert_equal("FF.01", worksheet.outputs_energy_flows_c294); end
  def test_outputs_energy_flows_d294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d294); end
  def test_outputs_energy_flows_e294; assert_equal("n/a", worksheet.outputs_energy_flows_e294); end
  def test_outputs_energy_flows_f294; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f294); end
  def test_outputs_energy_flows_g294; assert_equal("n/a", worksheet.outputs_energy_flows_g294); end
  def test_outputs_energy_flows_h294; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h294); end
  def test_outputs_energy_flows_i294; assert_equal("FF.01", worksheet.outputs_energy_flows_i294); end
  def test_outputs_energy_flows_j294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j294); end
  def test_outputs_energy_flows_v294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v294||0), 0.002); end
  def test_outputs_energy_flows_w294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w294||0), 0.002); end
  def test_outputs_energy_flows_x294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x294||0), 0.002); end
  def test_outputs_energy_flows_y294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y294||0), 0.002); end
  def test_outputs_energy_flows_z294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z294||0), 0.002); end
  def test_outputs_energy_flows_aa294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa294||0), 0.002); end
  def test_outputs_energy_flows_ab294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab294||0), 0.002); end
  def test_outputs_energy_flows_ac294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac294||0), 0.002); end
  def test_outputs_energy_flows_ad294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad294||0), 0.002); end
  def test_outputs_energy_flows_c296; assert_equal("FF.02", worksheet.outputs_energy_flows_c296); end
  def test_outputs_energy_flows_d296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d296); end
  def test_outputs_energy_flows_e296; assert_equal("n/a", worksheet.outputs_energy_flows_e296); end
  def test_outputs_energy_flows_f296; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f296); end
  def test_outputs_energy_flows_i296; assert_equal("FF.02", worksheet.outputs_energy_flows_i296); end
  def test_outputs_energy_flows_j296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j296); end
  def test_outputs_energy_flows_k296; assert_equal("Global buildings", worksheet.outputs_energy_flows_k296); end
  def test_outputs_energy_flows_v296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v296||0), 0.002); end
  def test_outputs_energy_flows_w296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w296||0), 0.002); end
  def test_outputs_energy_flows_x296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x296||0), 0.002); end
  def test_outputs_energy_flows_y296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y296||0), 0.002); end
  def test_outputs_energy_flows_z296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z296||0), 0.002); end
  def test_outputs_energy_flows_aa296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa296||0), 0.002); end
  def test_outputs_energy_flows_ab296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab296||0), 0.002); end
  def test_outputs_energy_flows_ac296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac296||0), 0.002); end
  def test_outputs_energy_flows_ad296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad296||0), 0.002); end
  def test_outputs_energy_flows_c298; assert_equal("FF.02", worksheet.outputs_energy_flows_c298); end
  def test_outputs_energy_flows_d298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d298); end
  def test_outputs_energy_flows_e298; assert_equal("n/a", worksheet.outputs_energy_flows_e298); end
  def test_outputs_energy_flows_f298; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f298); end
  def test_outputs_energy_flows_i298; assert_equal("FF.02", worksheet.outputs_energy_flows_i298); end
  def test_outputs_energy_flows_j298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j298); end
  def test_outputs_energy_flows_k298; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k298); end
  def test_outputs_energy_flows_l298; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l298); end
  def test_outputs_energy_flows_v298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v298||0), 0.002); end
  def test_outputs_energy_flows_w298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w298||0), 0.002); end
  def test_outputs_energy_flows_x298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x298||0), 0.002); end
  def test_outputs_energy_flows_y298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y298||0), 0.002); end
  def test_outputs_energy_flows_z298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z298||0), 0.002); end
  def test_outputs_energy_flows_aa298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa298||0), 0.002); end
  def test_outputs_energy_flows_ab298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab298||0), 0.002); end
  def test_outputs_energy_flows_ac298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac298||0), 0.002); end
  def test_outputs_energy_flows_ad298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad298||0), 0.002); end
  def test_outputs_energy_flows_c300; assert_equal("FF.02", worksheet.outputs_energy_flows_c300); end
  def test_outputs_energy_flows_d300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d300); end
  def test_outputs_energy_flows_e300; assert_equal("n/a", worksheet.outputs_energy_flows_e300); end
  def test_outputs_energy_flows_f300; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f300); end
  def test_outputs_energy_flows_i300; assert_equal("FF.02", worksheet.outputs_energy_flows_i300); end
  def test_outputs_energy_flows_j300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j300); end
  def test_outputs_energy_flows_k300; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k300); end
  def test_outputs_energy_flows_l300; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l300); end
  def test_outputs_energy_flows_v300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v300||0), 0.002); end
  def test_outputs_energy_flows_w300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w300||0), 0.002); end
  def test_outputs_energy_flows_x300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x300||0), 0.002); end
  def test_outputs_energy_flows_y300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y300||0), 0.002); end
  def test_outputs_energy_flows_z300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z300||0), 0.002); end
  def test_outputs_energy_flows_aa300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa300||0), 0.002); end
  def test_outputs_energy_flows_ab300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab300||0), 0.002); end
  def test_outputs_energy_flows_ac300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac300||0), 0.002); end
  def test_outputs_energy_flows_ad300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad300||0), 0.002); end
  def test_outputs_energy_flows_c302; assert_equal("FF.02", worksheet.outputs_energy_flows_c302); end
  def test_outputs_energy_flows_d302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d302); end
  def test_outputs_energy_flows_e302; assert_equal("n/a", worksheet.outputs_energy_flows_e302); end
  def test_outputs_energy_flows_f302; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f302); end
  def test_outputs_energy_flows_i302; assert_equal("FF.02", worksheet.outputs_energy_flows_i302); end
  def test_outputs_energy_flows_j302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j302); end
  def test_outputs_energy_flows_k302; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k302); end
  def test_outputs_energy_flows_l302; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l302); end
  def test_outputs_energy_flows_v302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v302||0), 0.002); end
  def test_outputs_energy_flows_w302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w302||0), 0.002); end
  def test_outputs_energy_flows_x302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x302||0), 0.002); end
  def test_outputs_energy_flows_y302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y302||0), 0.002); end
  def test_outputs_energy_flows_z302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z302||0), 0.002); end
  def test_outputs_energy_flows_aa302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa302||0), 0.002); end
  def test_outputs_energy_flows_ab302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab302||0), 0.002); end
  def test_outputs_energy_flows_ac302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac302||0), 0.002); end
  def test_outputs_energy_flows_ad302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad302||0), 0.002); end
  def test_outputs_energy_flows_c304; assert_equal("FF.02", worksheet.outputs_energy_flows_c304); end
  def test_outputs_energy_flows_d304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d304); end
  def test_outputs_energy_flows_e304; assert_equal("n/a", worksheet.outputs_energy_flows_e304); end
  def test_outputs_energy_flows_f304; assert_equal("Non domestic", worksheet.outputs_energy_flows_f304); end
  def test_outputs_energy_flows_i304; assert_equal("FF.02", worksheet.outputs_energy_flows_i304); end
  def test_outputs_energy_flows_j304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j304); end
  def test_outputs_energy_flows_k304; assert_equal("Non-residential", worksheet.outputs_energy_flows_k304); end
  def test_outputs_energy_flows_v304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v304||0), 0.002); end
  def test_outputs_energy_flows_w304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w304||0), 0.002); end
  def test_outputs_energy_flows_x304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x304||0), 0.002); end
  def test_outputs_energy_flows_y304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y304||0), 0.002); end
  def test_outputs_energy_flows_z304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z304||0), 0.002); end
  def test_outputs_energy_flows_aa304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa304||0), 0.002); end
  def test_outputs_energy_flows_ab304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab304||0), 0.002); end
  def test_outputs_energy_flows_ac304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac304||0), 0.002); end
  def test_outputs_energy_flows_ad304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad304||0), 0.002); end
  def test_outputs_energy_flows_c306; assert_equal("FF.02", worksheet.outputs_energy_flows_c306); end
  def test_outputs_energy_flows_d306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d306); end
  def test_outputs_energy_flows_e306; assert_equal("n/a", worksheet.outputs_energy_flows_e306); end
  def test_outputs_energy_flows_f306; assert_equal("Steel", worksheet.outputs_energy_flows_f306); end
  def test_outputs_energy_flows_i306; assert_equal("FF.02", worksheet.outputs_energy_flows_i306); end
  def test_outputs_energy_flows_j306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j306); end
  def test_outputs_energy_flows_v306; assert_in_delta(0.6053795859240001, worksheet.outputs_energy_flows_v306, 0.002); end
  def test_outputs_energy_flows_w306; assert_in_delta(0.6232492451493692, worksheet.outputs_energy_flows_w306, 0.002); end
  def test_outputs_energy_flows_x306; assert_in_delta(0.6566786744903388, worksheet.outputs_energy_flows_x306, 0.002); end
  def test_outputs_energy_flows_y306; assert_in_delta(0.6961220860609938, worksheet.outputs_energy_flows_y306, 0.002); end
  def test_outputs_energy_flows_z306; assert_in_delta(0.7325851427112168, worksheet.outputs_energy_flows_z306, 0.002); end
  def test_outputs_energy_flows_aa306; assert_in_delta(0.7630096887827427, worksheet.outputs_energy_flows_aa306, 0.002); end
  def test_outputs_energy_flows_ab306; assert_in_delta(0.7960521688297852, worksheet.outputs_energy_flows_ab306, 0.002); end
  def test_outputs_energy_flows_ac306; assert_in_delta(0.82994885933216, worksheet.outputs_energy_flows_ac306, 0.002); end
  def test_outputs_energy_flows_ad306; assert_in_delta(0.8642958252699441, worksheet.outputs_energy_flows_ad306, 0.002); end
  def test_outputs_energy_flows_c308; assert_equal("FF.02", worksheet.outputs_energy_flows_c308); end
  def test_outputs_energy_flows_d308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d308); end
  def test_outputs_energy_flows_e308; assert_equal("n/a", worksheet.outputs_energy_flows_e308); end
  def test_outputs_energy_flows_f308; assert_equal("Aluminium", worksheet.outputs_energy_flows_f308); end
  def test_outputs_energy_flows_i308; assert_equal("FF.02", worksheet.outputs_energy_flows_i308); end
  def test_outputs_energy_flows_j308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j308); end
  def test_outputs_energy_flows_v308; assert_in_delta(0.5405428608660054, worksheet.outputs_energy_flows_v308, 0.002); end
  def test_outputs_energy_flows_w308; assert_in_delta(0.5991286603069877, worksheet.outputs_energy_flows_w308, 0.002); end
  def test_outputs_energy_flows_x308; assert_in_delta(0.6625922830393086, worksheet.outputs_energy_flows_x308, 0.002); end
  def test_outputs_energy_flows_y308; assert_in_delta(0.7573286021306176, worksheet.outputs_energy_flows_y308, 0.002); end
  def test_outputs_energy_flows_z308; assert_in_delta(0.8578444201028601, worksheet.outputs_energy_flows_z308, 0.002); end
  def test_outputs_energy_flows_aa308; assert_in_delta(0.9595038556344756, worksheet.outputs_energy_flows_aa308, 0.002); end
  def test_outputs_energy_flows_ab308; assert_in_epsilon(1.0731396281833878, worksheet.outputs_energy_flows_ab308, 0.002); end
  def test_outputs_energy_flows_ac308; assert_in_epsilon(1.195706563203809, worksheet.outputs_energy_flows_ac308, 0.002); end
  def test_outputs_energy_flows_ad308; assert_in_epsilon(1.3329150931725455, worksheet.outputs_energy_flows_ad308, 0.002); end
  def test_outputs_energy_flows_c310; assert_equal("FF.02", worksheet.outputs_energy_flows_c310); end
  def test_outputs_energy_flows_d310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d310); end
  def test_outputs_energy_flows_e310; assert_equal("n/a", worksheet.outputs_energy_flows_e310); end
  def test_outputs_energy_flows_f310; assert_equal("Cement", worksheet.outputs_energy_flows_f310); end
  def test_outputs_energy_flows_i310; assert_equal("FF.02", worksheet.outputs_energy_flows_i310); end
  def test_outputs_energy_flows_j310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j310); end
  def test_outputs_energy_flows_v310; assert_in_epsilon(1.1385974140784139, worksheet.outputs_energy_flows_v310, 0.002); end
  def test_outputs_energy_flows_w310; assert_in_epsilon(1.1691578071425608, worksheet.outputs_energy_flows_w310, 0.002); end
  def test_outputs_energy_flows_x310; assert_in_epsilon(1.2717723711543023, worksheet.outputs_energy_flows_x310, 0.002); end
  def test_outputs_energy_flows_y310; assert_in_epsilon(1.3185534417586129, worksheet.outputs_energy_flows_y310, 0.002); end
  def test_outputs_energy_flows_z310; assert_in_epsilon(1.3593862682455875, worksheet.outputs_energy_flows_z310, 0.002); end
  def test_outputs_energy_flows_aa310; assert_in_epsilon(1.3943844382532855, worksheet.outputs_energy_flows_aa310, 0.002); end
  def test_outputs_energy_flows_ab310; assert_in_epsilon(1.4201204081479113, worksheet.outputs_energy_flows_ab310, 0.002); end
  def test_outputs_energy_flows_ac310; assert_in_epsilon(1.4426033852633149, worksheet.outputs_energy_flows_ac310, 0.002); end
  def test_outputs_energy_flows_ad310; assert_in_epsilon(1.4660779378186732, worksheet.outputs_energy_flows_ad310, 0.002); end
  def test_outputs_energy_flows_c312; assert_equal("FF.02", worksheet.outputs_energy_flows_c312); end
  def test_outputs_energy_flows_d312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d312); end
  def test_outputs_energy_flows_e312; assert_equal("n/a", worksheet.outputs_energy_flows_e312); end
  def test_outputs_energy_flows_f312; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f312); end
  def test_outputs_energy_flows_i312; assert_equal("FF.02", worksheet.outputs_energy_flows_i312); end
  def test_outputs_energy_flows_j312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j312); end
  def test_outputs_energy_flows_v312; assert_in_delta(0.40529936521738275, worksheet.outputs_energy_flows_v312, 0.002); end
  def test_outputs_energy_flows_w312; assert_in_delta(0.4224025713347381, worksheet.outputs_energy_flows_w312, 0.002); end
  def test_outputs_energy_flows_x312; assert_in_delta(0.43796146704841654, worksheet.outputs_energy_flows_x312, 0.002); end
  def test_outputs_energy_flows_y312; assert_in_delta(0.47288723995041626, worksheet.outputs_energy_flows_y312, 0.002); end
  def test_outputs_energy_flows_z312; assert_in_delta(0.5076267574517305, worksheet.outputs_energy_flows_z312, 0.002); end
  def test_outputs_energy_flows_aa312; assert_in_delta(0.5407434146621612, worksheet.outputs_energy_flows_aa312, 0.002); end
  def test_outputs_energy_flows_ab312; assert_in_delta(0.5771314703576024, worksheet.outputs_energy_flows_ab312, 0.002); end
  def test_outputs_energy_flows_ac312; assert_in_delta(0.612191486118162, worksheet.outputs_energy_flows_ac312, 0.002); end
  def test_outputs_energy_flows_ad312; assert_in_delta(0.6509483952239592, worksheet.outputs_energy_flows_ad312, 0.002); end
  def test_outputs_energy_flows_c314; assert_equal("FF.02", worksheet.outputs_energy_flows_c314); end
  def test_outputs_energy_flows_d314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d314); end
  def test_outputs_energy_flows_e314; assert_equal("n/a", worksheet.outputs_energy_flows_e314); end
  def test_outputs_energy_flows_f314; assert_equal("Chemicals", worksheet.outputs_energy_flows_f314); end
  def test_outputs_energy_flows_i314; assert_equal("FF.02", worksheet.outputs_energy_flows_i314); end
  def test_outputs_energy_flows_j314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j314); end
  def test_outputs_energy_flows_v314; assert_in_epsilon(19.210879294175747, worksheet.outputs_energy_flows_v314, 0.002); end
  def test_outputs_energy_flows_w314; assert_in_epsilon(20.605049416495767, worksheet.outputs_energy_flows_w314, 0.002); end
  def test_outputs_energy_flows_x314; assert_in_epsilon(21.92094523624681, worksheet.outputs_energy_flows_x314, 0.002); end
  def test_outputs_energy_flows_y314; assert_in_epsilon(24.7735250649459, worksheet.outputs_energy_flows_y314, 0.002); end
  def test_outputs_energy_flows_z314; assert_in_epsilon(27.814940740604648, worksheet.outputs_energy_flows_z314, 0.002); end
  def test_outputs_energy_flows_aa314; assert_in_epsilon(30.934723169072097, worksheet.outputs_energy_flows_aa314, 0.002); end
  def test_outputs_energy_flows_ab314; assert_in_epsilon(34.52242176014814, worksheet.outputs_energy_flows_ab314, 0.002); end
  def test_outputs_energy_flows_ac314; assert_in_epsilon(38.28482937716167, worksheet.outputs_energy_flows_ac314, 0.002); end
  def test_outputs_energy_flows_ad314; assert_in_epsilon(42.5822649352121, worksheet.outputs_energy_flows_ad314, 0.002); end
  def test_outputs_energy_flows_c316; assert_equal("FF.02", worksheet.outputs_energy_flows_c316); end
  def test_outputs_energy_flows_d316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d316); end
  def test_outputs_energy_flows_e316; assert_equal("n/a", worksheet.outputs_energy_flows_e316); end
  def test_outputs_energy_flows_f316; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f316); end
  def test_outputs_energy_flows_i316; assert_equal("FF.02", worksheet.outputs_energy_flows_i316); end
  def test_outputs_energy_flows_j316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j316); end
  def test_outputs_energy_flows_l316; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l316); end
  def test_outputs_energy_flows_m316; assert_equal("Timber", worksheet.outputs_energy_flows_m316); end
  def test_outputs_energy_flows_v316; assert_in_epsilon(8.9088083790622, worksheet.outputs_energy_flows_v316, 0.002); end
  def test_outputs_energy_flows_w316; assert_in_epsilon(9.172416470935383, worksheet.outputs_energy_flows_w316, 0.002); end
  def test_outputs_energy_flows_x316; assert_in_epsilon(9.760654795143251, worksheet.outputs_energy_flows_x316, 0.002); end
  def test_outputs_energy_flows_y316; assert_in_epsilon(10.119876005961201, worksheet.outputs_energy_flows_y316, 0.002); end
  def test_outputs_energy_flows_z316; assert_in_epsilon(10.428999281952127, worksheet.outputs_energy_flows_z316, 0.002); end
  def test_outputs_energy_flows_aa316; assert_in_epsilon(10.6776383586175, worksheet.outputs_energy_flows_aa316, 0.002); end
  def test_outputs_energy_flows_ab316; assert_in_epsilon(10.891060853680603, worksheet.outputs_energy_flows_ab316, 0.002); end
  def test_outputs_energy_flows_ac316; assert_in_epsilon(11.081157597820582, worksheet.outputs_energy_flows_ac316, 0.002); end
  def test_outputs_energy_flows_ad316; assert_in_epsilon(11.269224217912072, worksheet.outputs_energy_flows_ad316, 0.002); end
  def test_outputs_energy_flows_c318; assert_equal("FF.02", worksheet.outputs_energy_flows_c318); end
  def test_outputs_energy_flows_d318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d318); end
  def test_outputs_energy_flows_e318; assert_equal("n/a", worksheet.outputs_energy_flows_e318); end
  def test_outputs_energy_flows_f318; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f318); end
  def test_outputs_energy_flows_i318; assert_equal("FF.02", worksheet.outputs_energy_flows_i318); end
  def test_outputs_energy_flows_j318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j318); end
  def test_outputs_energy_flows_l318; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l318); end
  def test_outputs_energy_flows_m318; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m318); end
  def test_outputs_energy_flows_v318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v318||0), 0.002); end
  def test_outputs_energy_flows_w318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w318||0), 0.002); end
  def test_outputs_energy_flows_x318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x318||0), 0.002); end
  def test_outputs_energy_flows_y318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y318||0), 0.002); end
  def test_outputs_energy_flows_z318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z318||0), 0.002); end
  def test_outputs_energy_flows_aa318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa318||0), 0.002); end
  def test_outputs_energy_flows_ab318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab318||0), 0.002); end
  def test_outputs_energy_flows_ac318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac318||0), 0.002); end
  def test_outputs_energy_flows_ad318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad318||0), 0.002); end
  def test_outputs_energy_flows_c320; assert_equal("FF.02", worksheet.outputs_energy_flows_c320); end
  def test_outputs_energy_flows_d320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d320); end
  def test_outputs_energy_flows_e320; assert_equal("n/a", worksheet.outputs_energy_flows_e320); end
  def test_outputs_energy_flows_f320; assert_equal("International passenger", worksheet.outputs_energy_flows_f320); end
  def test_outputs_energy_flows_i320; assert_equal("FF.02", worksheet.outputs_energy_flows_i320); end
  def test_outputs_energy_flows_j320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j320); end
  def test_outputs_energy_flows_l320; assert_equal("International", worksheet.outputs_energy_flows_l320); end
  def test_outputs_energy_flows_v320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v320||0), 0.002); end
  def test_outputs_energy_flows_w320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w320||0), 0.002); end
  def test_outputs_energy_flows_x320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x320||0), 0.002); end
  def test_outputs_energy_flows_y320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y320||0), 0.002); end
  def test_outputs_energy_flows_z320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z320||0), 0.002); end
  def test_outputs_energy_flows_aa320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa320||0), 0.002); end
  def test_outputs_energy_flows_ab320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab320||0), 0.002); end
  def test_outputs_energy_flows_ac320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac320||0), 0.002); end
  def test_outputs_energy_flows_ad320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad320||0), 0.002); end
  def test_outputs_energy_flows_c322; assert_equal("FF.02", worksheet.outputs_energy_flows_c322); end
  def test_outputs_energy_flows_d322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d322); end
  def test_outputs_energy_flows_e322; assert_equal("n/a", worksheet.outputs_energy_flows_e322); end
  def test_outputs_energy_flows_f322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f322); end
  def test_outputs_energy_flows_i322; assert_equal("FF.02", worksheet.outputs_energy_flows_i322); end
  def test_outputs_energy_flows_j322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j322); end
  def test_outputs_energy_flows_l322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l322); end
  def test_outputs_energy_flows_v322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v322||0), 0.002); end
  def test_outputs_energy_flows_w322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w322||0), 0.002); end
  def test_outputs_energy_flows_x322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x322||0), 0.002); end
  def test_outputs_energy_flows_y322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y322||0), 0.002); end
  def test_outputs_energy_flows_z322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z322||0), 0.002); end
  def test_outputs_energy_flows_aa322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa322||0), 0.002); end
  def test_outputs_energy_flows_ab322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab322||0), 0.002); end
  def test_outputs_energy_flows_ac322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac322||0), 0.002); end
  def test_outputs_energy_flows_ad322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad322||0), 0.002); end
  def test_outputs_energy_flows_c324; assert_equal("FF.02", worksheet.outputs_energy_flows_c324); end
  def test_outputs_energy_flows_d324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d324); end
  def test_outputs_energy_flows_e324; assert_equal("n/a", worksheet.outputs_energy_flows_e324); end
  def test_outputs_energy_flows_f324; assert_equal("International freight", worksheet.outputs_energy_flows_f324); end
  def test_outputs_energy_flows_i324; assert_equal("FF.02", worksheet.outputs_energy_flows_i324); end
  def test_outputs_energy_flows_j324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j324); end
  def test_outputs_energy_flows_l324; assert_equal("International freight", worksheet.outputs_energy_flows_l324); end
  def test_outputs_energy_flows_v324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v324||0), 0.002); end
  def test_outputs_energy_flows_w324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w324||0), 0.002); end
  def test_outputs_energy_flows_x324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x324||0), 0.002); end
  def test_outputs_energy_flows_y324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y324||0), 0.002); end
  def test_outputs_energy_flows_z324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z324||0), 0.002); end
  def test_outputs_energy_flows_aa324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa324||0), 0.002); end
  def test_outputs_energy_flows_ab324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab324||0), 0.002); end
  def test_outputs_energy_flows_ac324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac324||0), 0.002); end
  def test_outputs_energy_flows_ad324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad324||0), 0.002); end
  def test_outputs_energy_flows_c326; assert_equal("FF.02", worksheet.outputs_energy_flows_c326); end
  def test_outputs_energy_flows_d326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d326); end
  def test_outputs_energy_flows_e326; assert_equal("n/a", worksheet.outputs_energy_flows_e326); end
  def test_outputs_energy_flows_f326; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f326); end
  def test_outputs_energy_flows_i326; assert_equal("FF.02", worksheet.outputs_energy_flows_i326); end
  def test_outputs_energy_flows_j326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j326); end
  def test_outputs_energy_flows_v326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v326||0), 0.002); end
  def test_outputs_energy_flows_w326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w326||0), 0.002); end
  def test_outputs_energy_flows_x326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x326||0), 0.002); end
  def test_outputs_energy_flows_y326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y326||0), 0.002); end
  def test_outputs_energy_flows_z326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z326||0), 0.002); end
  def test_outputs_energy_flows_aa326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa326||0), 0.002); end
  def test_outputs_energy_flows_ab326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab326||0), 0.002); end
  def test_outputs_energy_flows_ac326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac326||0), 0.002); end
  def test_outputs_energy_flows_ad326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad326||0), 0.002); end
  def test_outputs_energy_flows_c328; assert_equal("FF.02", worksheet.outputs_energy_flows_c328); end
  def test_outputs_energy_flows_d328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d328); end
  def test_outputs_energy_flows_e328; assert_equal("G.01", worksheet.outputs_energy_flows_e328); end
  def test_outputs_energy_flows_f328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f328); end
  def test_outputs_energy_flows_g328; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g328); end
  def test_outputs_energy_flows_h328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h328); end
  def test_outputs_energy_flows_i328; assert_equal("FF.02", worksheet.outputs_energy_flows_i328); end
  def test_outputs_energy_flows_j328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j328); end
  def test_outputs_energy_flows_v328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v328||0), 0.002); end
  def test_outputs_energy_flows_w328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w328||0), 0.002); end
  def test_outputs_energy_flows_x328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x328||0), 0.002); end
  def test_outputs_energy_flows_y328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y328||0), 0.002); end
  def test_outputs_energy_flows_z328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z328||0), 0.002); end
  def test_outputs_energy_flows_aa328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa328||0), 0.002); end
  def test_outputs_energy_flows_ab328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab328||0), 0.002); end
  def test_outputs_energy_flows_ac328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac328||0), 0.002); end
  def test_outputs_energy_flows_ad328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad328||0), 0.002); end
  def test_outputs_energy_flows_c330; assert_equal("FF.02", worksheet.outputs_energy_flows_c330); end
  def test_outputs_energy_flows_d330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d330); end
  def test_outputs_energy_flows_e330; assert_equal("n/a", worksheet.outputs_energy_flows_e330); end
  def test_outputs_energy_flows_f330; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f330); end
  def test_outputs_energy_flows_g330; assert_equal("n/a", worksheet.outputs_energy_flows_g330); end
  def test_outputs_energy_flows_h330; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h330); end
  def test_outputs_energy_flows_i330; assert_equal("FF.02", worksheet.outputs_energy_flows_i330); end
  def test_outputs_energy_flows_j330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j330); end
  def test_outputs_energy_flows_v330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v330||0), 0.002); end
  def test_outputs_energy_flows_w330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w330||0), 0.002); end
  def test_outputs_energy_flows_x330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x330||0), 0.002); end
  def test_outputs_energy_flows_y330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y330||0), 0.002); end
  def test_outputs_energy_flows_z330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z330||0), 0.002); end
  def test_outputs_energy_flows_aa330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa330||0), 0.002); end
  def test_outputs_energy_flows_ab330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab330||0), 0.002); end
  def test_outputs_energy_flows_ac330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac330||0), 0.002); end
  def test_outputs_energy_flows_ad330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad330||0), 0.002); end
  def test_outputs_energy_flows_c332; assert_equal("FF.03", worksheet.outputs_energy_flows_c332); end
  def test_outputs_energy_flows_d332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d332); end
  def test_outputs_energy_flows_e332; assert_equal("n/a", worksheet.outputs_energy_flows_e332); end
  def test_outputs_energy_flows_f332; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f332); end
  def test_outputs_energy_flows_i332; assert_equal("FF.03", worksheet.outputs_energy_flows_i332); end
  def test_outputs_energy_flows_j332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j332); end
  def test_outputs_energy_flows_k332; assert_equal("Global buildings", worksheet.outputs_energy_flows_k332); end
  def test_outputs_energy_flows_v332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v332||0), 0.002); end
  def test_outputs_energy_flows_w332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w332||0), 0.002); end
  def test_outputs_energy_flows_x332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x332||0), 0.002); end
  def test_outputs_energy_flows_y332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y332||0), 0.002); end
  def test_outputs_energy_flows_z332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z332||0), 0.002); end
  def test_outputs_energy_flows_aa332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa332||0), 0.002); end
  def test_outputs_energy_flows_ab332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab332||0), 0.002); end
  def test_outputs_energy_flows_ac332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac332||0), 0.002); end
  def test_outputs_energy_flows_ad332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad332||0), 0.002); end
  def test_outputs_energy_flows_c334; assert_equal("FF.03", worksheet.outputs_energy_flows_c334); end
  def test_outputs_energy_flows_d334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d334); end
  def test_outputs_energy_flows_e334; assert_equal("n/a", worksheet.outputs_energy_flows_e334); end
  def test_outputs_energy_flows_f334; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f334); end
  def test_outputs_energy_flows_i334; assert_equal("FF.03", worksheet.outputs_energy_flows_i334); end
  def test_outputs_energy_flows_j334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j334); end
  def test_outputs_energy_flows_k334; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k334); end
  def test_outputs_energy_flows_l334; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l334); end
  def test_outputs_energy_flows_v334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v334||0), 0.002); end
  def test_outputs_energy_flows_w334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w334||0), 0.002); end
  def test_outputs_energy_flows_x334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x334||0), 0.002); end
  def test_outputs_energy_flows_y334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y334||0), 0.002); end
  def test_outputs_energy_flows_z334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z334||0), 0.002); end
  def test_outputs_energy_flows_aa334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa334||0), 0.002); end
  def test_outputs_energy_flows_ab334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab334||0), 0.002); end
  def test_outputs_energy_flows_ac334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac334||0), 0.002); end
  def test_outputs_energy_flows_ad334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad334||0), 0.002); end
  def test_outputs_energy_flows_c336; assert_equal("FF.03", worksheet.outputs_energy_flows_c336); end
  def test_outputs_energy_flows_d336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d336); end
  def test_outputs_energy_flows_e336; assert_equal("n/a", worksheet.outputs_energy_flows_e336); end
  def test_outputs_energy_flows_f336; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f336); end
  def test_outputs_energy_flows_i336; assert_equal("FF.03", worksheet.outputs_energy_flows_i336); end
  def test_outputs_energy_flows_j336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j336); end
  def test_outputs_energy_flows_k336; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k336); end
  def test_outputs_energy_flows_l336; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l336); end
  def test_outputs_energy_flows_v336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v336||0), 0.002); end
  def test_outputs_energy_flows_w336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w336||0), 0.002); end
  def test_outputs_energy_flows_x336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x336||0), 0.002); end
  def test_outputs_energy_flows_y336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y336||0), 0.002); end
  def test_outputs_energy_flows_z336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z336||0), 0.002); end
  def test_outputs_energy_flows_aa336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa336||0), 0.002); end
  def test_outputs_energy_flows_ab336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab336||0), 0.002); end
  def test_outputs_energy_flows_ac336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac336||0), 0.002); end
  def test_outputs_energy_flows_ad336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad336||0), 0.002); end
  def test_outputs_energy_flows_c338; assert_equal("FF.03", worksheet.outputs_energy_flows_c338); end
  def test_outputs_energy_flows_d338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d338); end
  def test_outputs_energy_flows_e338; assert_equal("n/a", worksheet.outputs_energy_flows_e338); end
  def test_outputs_energy_flows_f338; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f338); end
  def test_outputs_energy_flows_i338; assert_equal("FF.03", worksheet.outputs_energy_flows_i338); end
  def test_outputs_energy_flows_j338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j338); end
  def test_outputs_energy_flows_k338; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k338); end
  def test_outputs_energy_flows_l338; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l338); end
  def test_outputs_energy_flows_v338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v338||0), 0.002); end
  def test_outputs_energy_flows_w338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w338||0), 0.002); end
  def test_outputs_energy_flows_x338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x338||0), 0.002); end
  def test_outputs_energy_flows_y338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y338||0), 0.002); end
  def test_outputs_energy_flows_z338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z338||0), 0.002); end
  def test_outputs_energy_flows_aa338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa338||0), 0.002); end
  def test_outputs_energy_flows_ab338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab338||0), 0.002); end
  def test_outputs_energy_flows_ac338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac338||0), 0.002); end
  def test_outputs_energy_flows_ad338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad338||0), 0.002); end
  def test_outputs_energy_flows_c340; assert_equal("FF.03", worksheet.outputs_energy_flows_c340); end
  def test_outputs_energy_flows_d340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d340); end
  def test_outputs_energy_flows_e340; assert_equal("n/a", worksheet.outputs_energy_flows_e340); end
  def test_outputs_energy_flows_f340; assert_equal("Non domestic", worksheet.outputs_energy_flows_f340); end
  def test_outputs_energy_flows_i340; assert_equal("FF.03", worksheet.outputs_energy_flows_i340); end
  def test_outputs_energy_flows_j340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j340); end
  def test_outputs_energy_flows_k340; assert_equal("Non-residential", worksheet.outputs_energy_flows_k340); end
  def test_outputs_energy_flows_v340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v340||0), 0.002); end
  def test_outputs_energy_flows_w340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w340||0), 0.002); end
  def test_outputs_energy_flows_x340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x340||0), 0.002); end
  def test_outputs_energy_flows_y340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y340||0), 0.002); end
  def test_outputs_energy_flows_z340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z340||0), 0.002); end
  def test_outputs_energy_flows_aa340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa340||0), 0.002); end
  def test_outputs_energy_flows_ab340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab340||0), 0.002); end
  def test_outputs_energy_flows_ac340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac340||0), 0.002); end
  def test_outputs_energy_flows_ad340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad340||0), 0.002); end
  def test_outputs_energy_flows_c342; assert_equal("FF.03", worksheet.outputs_energy_flows_c342); end
  def test_outputs_energy_flows_d342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d342); end
  def test_outputs_energy_flows_e342; assert_equal("n/a", worksheet.outputs_energy_flows_e342); end
  def test_outputs_energy_flows_f342; assert_equal("Steel", worksheet.outputs_energy_flows_f342); end
  def test_outputs_energy_flows_i342; assert_equal("FF.03", worksheet.outputs_energy_flows_i342); end
  def test_outputs_energy_flows_j342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j342); end
  def test_outputs_energy_flows_v342; assert_in_epsilon(2.3045661146880003, worksheet.outputs_energy_flows_v342, 0.002); end
  def test_outputs_energy_flows_w342; assert_in_epsilon(2.471616277221065, worksheet.outputs_energy_flows_w342, 0.002); end
  def test_outputs_energy_flows_x342; assert_in_epsilon(2.6472033277381986, worksheet.outputs_energy_flows_x342, 0.002); end
  def test_outputs_energy_flows_y342; assert_in_epsilon(2.8537322932149483, worksheet.outputs_energy_flows_y342, 0.002); end
  def test_outputs_energy_flows_z342; assert_in_epsilon(3.0553564468724796, worksheet.outputs_energy_flows_z342, 0.002); end
  def test_outputs_energy_flows_aa342; assert_in_epsilon(3.2388957938757095, worksheet.outputs_energy_flows_aa342, 0.002); end
  def test_outputs_energy_flows_ab342; assert_in_epsilon(3.440835625882513, worksheet.outputs_energy_flows_ab342, 0.002); end
  def test_outputs_energy_flows_ac342; assert_in_epsilon(3.6544935169751462, worksheet.outputs_energy_flows_ac342, 0.002); end
  def test_outputs_energy_flows_ad342; assert_in_epsilon(3.8787873611199926, worksheet.outputs_energy_flows_ad342, 0.002); end
  def test_outputs_energy_flows_c344; assert_equal("FF.03", worksheet.outputs_energy_flows_c344); end
  def test_outputs_energy_flows_d344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d344); end
  def test_outputs_energy_flows_e344; assert_equal("n/a", worksheet.outputs_energy_flows_e344); end
  def test_outputs_energy_flows_f344; assert_equal("Aluminium", worksheet.outputs_energy_flows_f344); end
  def test_outputs_energy_flows_i344; assert_equal("FF.03", worksheet.outputs_energy_flows_i344); end
  def test_outputs_energy_flows_j344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j344); end
  def test_outputs_energy_flows_v344; assert_in_delta(0.6789041363973375, worksheet.outputs_energy_flows_v344, 0.002); end
  def test_outputs_energy_flows_w344; assert_in_delta(0.7325389403936452, worksheet.outputs_energy_flows_w344, 0.002); end
  def test_outputs_energy_flows_x344; assert_in_delta(0.7777879347479068, worksheet.outputs_energy_flows_x344, 0.002); end
  def test_outputs_energy_flows_y344; assert_in_delta(0.8546079913838901, worksheet.outputs_energy_flows_y344, 0.002); end
  def test_outputs_energy_flows_z344; assert_in_delta(0.9317431166049022, worksheet.outputs_energy_flows_z344, 0.002); end
  def test_outputs_energy_flows_aa344; assert_in_epsilon(1.0042761298591734, worksheet.outputs_energy_flows_aa344, 0.002); end
  def test_outputs_energy_flows_ab344; assert_in_epsilon(1.0836118767404863, worksheet.outputs_energy_flows_ab344, 0.002); end
  def test_outputs_energy_flows_ac344; assert_in_epsilon(1.166074505534416, worksheet.outputs_energy_flows_ac344, 0.002); end
  def test_outputs_energy_flows_ad344; assert_in_epsilon(1.2567355123044281, worksheet.outputs_energy_flows_ad344, 0.002); end
  def test_outputs_energy_flows_c346; assert_equal("FF.03", worksheet.outputs_energy_flows_c346); end
  def test_outputs_energy_flows_d346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d346); end
  def test_outputs_energy_flows_e346; assert_equal("n/a", worksheet.outputs_energy_flows_e346); end
  def test_outputs_energy_flows_f346; assert_equal("Cement", worksheet.outputs_energy_flows_f346); end
  def test_outputs_energy_flows_i346; assert_equal("FF.03", worksheet.outputs_energy_flows_i346); end
  def test_outputs_energy_flows_j346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j346); end
  def test_outputs_energy_flows_v346; assert_in_delta(0.8284396320493046, worksheet.outputs_energy_flows_v346, 0.002); end
  def test_outputs_energy_flows_w346; assert_in_delta(0.8506752708030049, worksheet.outputs_energy_flows_w346, 0.002); end
  def test_outputs_energy_flows_x346; assert_in_delta(0.9253372809232321, worksheet.outputs_energy_flows_x346, 0.002); end
  def test_outputs_energy_flows_y346; assert_in_delta(0.9593750298581136, worksheet.outputs_energy_flows_y346, 0.002); end
  def test_outputs_energy_flows_z346; assert_in_delta(0.9890848564677082, worksheet.outputs_energy_flows_z346, 0.002); end
  def test_outputs_energy_flows_aa346; assert_in_epsilon(1.0145494067337426, worksheet.outputs_energy_flows_aa346, 0.002); end
  def test_outputs_energy_flows_ab346; assert_in_epsilon(1.0332748114872683, worksheet.outputs_energy_flows_ab346, 0.002); end
  def test_outputs_energy_flows_ac346; assert_in_epsilon(1.0496333496839616, worksheet.outputs_energy_flows_ac346, 0.002); end
  def test_outputs_energy_flows_ad346; assert_in_epsilon(1.0667133548210053, worksheet.outputs_energy_flows_ad346, 0.002); end
  def test_outputs_energy_flows_c348; assert_equal("FF.03", worksheet.outputs_energy_flows_c348); end
  def test_outputs_energy_flows_d348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d348); end
  def test_outputs_energy_flows_e348; assert_equal("n/a", worksheet.outputs_energy_flows_e348); end
  def test_outputs_energy_flows_f348; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f348); end
  def test_outputs_energy_flows_i348; assert_equal("FF.03", worksheet.outputs_energy_flows_i348); end
  def test_outputs_energy_flows_j348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j348); end
  def test_outputs_energy_flows_v348; assert_in_delta(0.9864225684717471, worksheet.outputs_energy_flows_v348, 0.002); end
  def test_outputs_energy_flows_w348; assert_in_epsilon(1.0383191421087263, worksheet.outputs_energy_flows_w348, 0.002); end
  def test_outputs_energy_flows_x348; assert_in_epsilon(1.0898616542160329, worksheet.outputs_energy_flows_x348, 0.002); end
  def test_outputs_energy_flows_y348; assert_in_epsilon(1.1911389766132043, worksheet.outputs_energy_flows_y348, 0.002); end
  def test_outputs_energy_flows_z348; assert_in_epsilon(1.294071836178415, worksheet.outputs_energy_flows_z348, 0.002); end
  def test_outputs_energy_flows_aa348; assert_in_epsilon(1.3949390713270087, worksheet.outputs_energy_flows_aa348, 0.002); end
  def test_outputs_energy_flows_ab348; assert_in_epsilon(1.506368831540186, worksheet.outputs_energy_flows_ab348, 0.002); end
  def test_outputs_energy_flows_ac348; assert_in_epsilon(1.6165166297428009, worksheet.outputs_energy_flows_ac348, 0.002); end
  def test_outputs_energy_flows_ad348; assert_in_epsilon(1.7386846235423252, worksheet.outputs_energy_flows_ad348, 0.002); end
  def test_outputs_energy_flows_c350; assert_equal("FF.03", worksheet.outputs_energy_flows_c350); end
  def test_outputs_energy_flows_d350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d350); end
  def test_outputs_energy_flows_e350; assert_equal("n/a", worksheet.outputs_energy_flows_e350); end
  def test_outputs_energy_flows_f350; assert_equal("Chemicals", worksheet.outputs_energy_flows_f350); end
  def test_outputs_energy_flows_i350; assert_equal("FF.03", worksheet.outputs_energy_flows_i350); end
  def test_outputs_energy_flows_j350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j350); end
  def test_outputs_energy_flows_v350; assert_in_epsilon(11.268542067145855, worksheet.outputs_energy_flows_v350, 0.002); end
  def test_outputs_energy_flows_w350; assert_in_epsilon(11.946856973031009, worksheet.outputs_energy_flows_w350, 0.002); end
  def test_outputs_energy_flows_x350; assert_in_epsilon(12.672625780749797, worksheet.outputs_energy_flows_x350, 0.002); end
  def test_outputs_energy_flows_y350; assert_in_epsilon(13.908525759024052, worksheet.outputs_energy_flows_y350, 0.002); end
  def test_outputs_energy_flows_z350; assert_in_epsilon(15.205015607137735, worksheet.outputs_energy_flows_z350, 0.002); end
  def test_outputs_energy_flows_aa350; assert_in_epsilon(16.53090287382214, worksheet.outputs_energy_flows_aa350, 0.002); end
  def test_outputs_energy_flows_ab350; assert_in_epsilon(18.030387034666116, worksheet.outputs_energy_flows_ab350, 0.002); end
  def test_outputs_energy_flows_ac350; assert_in_epsilon(19.563642069587562, worksheet.outputs_energy_flows_ac350, 0.002); end
  def test_outputs_energy_flows_ad350; assert_in_epsilon(21.30913846130034, worksheet.outputs_energy_flows_ad350, 0.002); end
  def test_outputs_energy_flows_c352; assert_equal("FF.03", worksheet.outputs_energy_flows_c352); end
  def test_outputs_energy_flows_d352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d352); end
  def test_outputs_energy_flows_e352; assert_equal("n/a", worksheet.outputs_energy_flows_e352); end
  def test_outputs_energy_flows_f352; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f352); end
  def test_outputs_energy_flows_i352; assert_equal("FF.03", worksheet.outputs_energy_flows_i352); end
  def test_outputs_energy_flows_j352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j352); end
  def test_outputs_energy_flows_l352; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l352); end
  def test_outputs_energy_flows_m352; assert_equal("Timber", worksheet.outputs_energy_flows_m352); end
  def test_outputs_energy_flows_v352; assert_in_epsilon(11.166371558744434, worksheet.outputs_energy_flows_v352, 0.002); end
  def test_outputs_energy_flows_w352; assert_in_epsilon(11.583902175145523, worksheet.outputs_energy_flows_w352, 0.002); end
  def test_outputs_energy_flows_x352; assert_in_epsilon(12.44008495900997, worksheet.outputs_energy_flows_x352, 0.002); end
  def test_outputs_energy_flows_y352; assert_in_epsilon(13.010902215230947, worksheet.outputs_energy_flows_y352, 0.002); end
  def test_outputs_energy_flows_z352; assert_in_epsilon(13.525460149560361, worksheet.outputs_energy_flows_z352, 0.002); end
  def test_outputs_energy_flows_aa352; assert_in_epsilon(13.969844068728632, worksheet.outputs_energy_flows_aa352, 0.002); end
  def test_outputs_energy_flows_ab352; assert_in_epsilon(14.373650570851886, worksheet.outputs_energy_flows_ab352, 0.002); end
  def test_outputs_energy_flows_ac352; assert_in_epsilon(14.75167242003343, worksheet.outputs_energy_flows_ac352, 0.002); end
  def test_outputs_energy_flows_ad352; assert_in_epsilon(15.128428698995924, worksheet.outputs_energy_flows_ad352, 0.002); end
  def test_outputs_energy_flows_c354; assert_equal("FF.03", worksheet.outputs_energy_flows_c354); end
  def test_outputs_energy_flows_d354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d354); end
  def test_outputs_energy_flows_e354; assert_equal("n/a", worksheet.outputs_energy_flows_e354); end
  def test_outputs_energy_flows_f354; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f354); end
  def test_outputs_energy_flows_i354; assert_equal("FF.03", worksheet.outputs_energy_flows_i354); end
  def test_outputs_energy_flows_j354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j354); end
  def test_outputs_energy_flows_l354; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l354); end
  def test_outputs_energy_flows_m354; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m354); end
  def test_outputs_energy_flows_v354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v354||0), 0.002); end
  def test_outputs_energy_flows_w354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w354||0), 0.002); end
  def test_outputs_energy_flows_x354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x354||0), 0.002); end
  def test_outputs_energy_flows_y354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y354||0), 0.002); end
  def test_outputs_energy_flows_z354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z354||0), 0.002); end
  def test_outputs_energy_flows_aa354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa354||0), 0.002); end
  def test_outputs_energy_flows_ab354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab354||0), 0.002); end
  def test_outputs_energy_flows_ac354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac354||0), 0.002); end
  def test_outputs_energy_flows_ad354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad354||0), 0.002); end
  def test_outputs_energy_flows_c356; assert_equal("FF.03", worksheet.outputs_energy_flows_c356); end
  def test_outputs_energy_flows_d356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d356); end
  def test_outputs_energy_flows_e356; assert_equal("n/a", worksheet.outputs_energy_flows_e356); end
  def test_outputs_energy_flows_f356; assert_equal("International passenger", worksheet.outputs_energy_flows_f356); end
  def test_outputs_energy_flows_i356; assert_equal("FF.03", worksheet.outputs_energy_flows_i356); end
  def test_outputs_energy_flows_j356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j356); end
  def test_outputs_energy_flows_l356; assert_equal("International", worksheet.outputs_energy_flows_l356); end
  def test_outputs_energy_flows_v356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v356||0), 0.002); end
  def test_outputs_energy_flows_w356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w356||0), 0.002); end
  def test_outputs_energy_flows_x356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x356||0), 0.002); end
  def test_outputs_energy_flows_y356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y356||0), 0.002); end
  def test_outputs_energy_flows_z356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z356||0), 0.002); end
  def test_outputs_energy_flows_aa356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa356||0), 0.002); end
  def test_outputs_energy_flows_ab356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab356||0), 0.002); end
  def test_outputs_energy_flows_ac356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac356||0), 0.002); end
  def test_outputs_energy_flows_ad356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad356||0), 0.002); end
  def test_outputs_energy_flows_c358; assert_equal("FF.03", worksheet.outputs_energy_flows_c358); end
  def test_outputs_energy_flows_d358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d358); end
  def test_outputs_energy_flows_e358; assert_equal("n/a", worksheet.outputs_energy_flows_e358); end
  def test_outputs_energy_flows_f358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f358); end
  def test_outputs_energy_flows_i358; assert_equal("FF.03", worksheet.outputs_energy_flows_i358); end
  def test_outputs_energy_flows_j358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j358); end
  def test_outputs_energy_flows_l358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l358); end
  def test_outputs_energy_flows_v358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v358||0), 0.002); end
  def test_outputs_energy_flows_w358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w358||0), 0.002); end
  def test_outputs_energy_flows_x358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x358||0), 0.002); end
  def test_outputs_energy_flows_y358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y358||0), 0.002); end
  def test_outputs_energy_flows_z358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z358||0), 0.002); end
  def test_outputs_energy_flows_aa358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa358||0), 0.002); end
  def test_outputs_energy_flows_ab358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab358||0), 0.002); end
  def test_outputs_energy_flows_ac358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac358||0), 0.002); end
  def test_outputs_energy_flows_ad358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad358||0), 0.002); end
  def test_outputs_energy_flows_c360; assert_equal("FF.03", worksheet.outputs_energy_flows_c360); end
  def test_outputs_energy_flows_d360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d360); end
  def test_outputs_energy_flows_e360; assert_equal("n/a", worksheet.outputs_energy_flows_e360); end
  def test_outputs_energy_flows_f360; assert_equal("International freight", worksheet.outputs_energy_flows_f360); end
  def test_outputs_energy_flows_i360; assert_equal("FF.03", worksheet.outputs_energy_flows_i360); end
  def test_outputs_energy_flows_j360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j360); end
  def test_outputs_energy_flows_l360; assert_equal("International freight", worksheet.outputs_energy_flows_l360); end
  def test_outputs_energy_flows_v360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v360||0), 0.002); end
  def test_outputs_energy_flows_w360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w360||0), 0.002); end
  def test_outputs_energy_flows_x360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x360||0), 0.002); end
  def test_outputs_energy_flows_y360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y360||0), 0.002); end
  def test_outputs_energy_flows_z360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z360||0), 0.002); end
  def test_outputs_energy_flows_aa360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa360||0), 0.002); end
  def test_outputs_energy_flows_ab360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab360||0), 0.002); end
  def test_outputs_energy_flows_ac360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac360||0), 0.002); end
  def test_outputs_energy_flows_ad360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad360||0), 0.002); end
  def test_outputs_energy_flows_c362; assert_equal("FF.03", worksheet.outputs_energy_flows_c362); end
  def test_outputs_energy_flows_d362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d362); end
  def test_outputs_energy_flows_e362; assert_equal("n/a", worksheet.outputs_energy_flows_e362); end
  def test_outputs_energy_flows_f362; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f362); end
  def test_outputs_energy_flows_i362; assert_equal("FF.03", worksheet.outputs_energy_flows_i362); end
  def test_outputs_energy_flows_j362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j362); end
  def test_outputs_energy_flows_v362; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v362, 0.002); end
  def test_outputs_energy_flows_w362; assert_in_delta(0.18190019578327632, worksheet.outputs_energy_flows_w362, 0.002); end
  def test_outputs_energy_flows_x362; assert_in_delta(0.1707326012155485, worksheet.outputs_energy_flows_x362, 0.002); end
  def test_outputs_energy_flows_y362; assert_in_delta(0.1528038622541856, worksheet.outputs_energy_flows_y362, 0.002); end
  def test_outputs_energy_flows_z362; assert_in_delta(0.26058517562151967, worksheet.outputs_energy_flows_z362, 0.002); end
  def test_outputs_energy_flows_aa362; assert_in_delta(0.3223518983896478, worksheet.outputs_energy_flows_aa362, 0.002); end
  def test_outputs_energy_flows_ab362; assert_in_delta(0.41160316916230827, worksheet.outputs_energy_flows_ab362, 0.002); end
  def test_outputs_energy_flows_ac362; assert_in_delta(0.4891048699198127, worksheet.outputs_energy_flows_ac362, 0.002); end
  def test_outputs_energy_flows_ad362; assert_in_delta(0.624508678137408, worksheet.outputs_energy_flows_ad362, 0.002); end
  def test_outputs_energy_flows_c364; assert_equal("FF.03", worksheet.outputs_energy_flows_c364); end
  def test_outputs_energy_flows_d364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d364); end
  def test_outputs_energy_flows_e364; assert_equal("G.01", worksheet.outputs_energy_flows_e364); end
  def test_outputs_energy_flows_f364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f364); end
  def test_outputs_energy_flows_g364; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g364); end
  def test_outputs_energy_flows_h364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h364); end
  def test_outputs_energy_flows_i364; assert_equal("FF.03", worksheet.outputs_energy_flows_i364); end
  def test_outputs_energy_flows_j364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j364); end
  def test_outputs_energy_flows_v364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v364||0), 0.002); end
  def test_outputs_energy_flows_w364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w364||0), 0.002); end
  def test_outputs_energy_flows_x364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x364||0), 0.002); end
  def test_outputs_energy_flows_y364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y364||0), 0.002); end
  def test_outputs_energy_flows_z364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z364||0), 0.002); end
  def test_outputs_energy_flows_aa364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa364||0), 0.002); end
  def test_outputs_energy_flows_ab364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab364||0), 0.002); end
  def test_outputs_energy_flows_ac364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac364||0), 0.002); end
  def test_outputs_energy_flows_ad364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad364||0), 0.002); end
  def test_outputs_energy_flows_c366; assert_equal("FF.03", worksheet.outputs_energy_flows_c366); end
  def test_outputs_energy_flows_d366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d366); end
  def test_outputs_energy_flows_e366; assert_equal("n/a", worksheet.outputs_energy_flows_e366); end
  def test_outputs_energy_flows_f366; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f366); end
  def test_outputs_energy_flows_g366; assert_equal("n/a", worksheet.outputs_energy_flows_g366); end
  def test_outputs_energy_flows_h366; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h366); end
  def test_outputs_energy_flows_i366; assert_equal("FF.03", worksheet.outputs_energy_flows_i366); end
  def test_outputs_energy_flows_j366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j366); end
  def test_outputs_energy_flows_v366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v366||0), 0.002); end
  def test_outputs_energy_flows_w366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w366||0), 0.002); end
  def test_outputs_energy_flows_x366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x366||0), 0.002); end
  def test_outputs_energy_flows_y366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y366||0), 0.002); end
  def test_outputs_energy_flows_z366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z366||0), 0.002); end
  def test_outputs_energy_flows_aa366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa366||0), 0.002); end
  def test_outputs_energy_flows_ab366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab366||0), 0.002); end
  def test_outputs_energy_flows_ac366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac366||0), 0.002); end
  def test_outputs_energy_flows_ad366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad366||0), 0.002); end
  def test_outputs_energy_flows_c368; assert_equal("n/a", worksheet.outputs_energy_flows_c368); end
  def test_outputs_energy_flows_d368; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_d368); end
  def test_outputs_energy_flows_e368; assert_equal("L.01", worksheet.outputs_energy_flows_e368); end
  def test_outputs_energy_flows_f368; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f368); end
  def test_outputs_energy_flows_v368; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v368, 0.002); end
  def test_outputs_energy_flows_w368; assert_in_delta(0.05014340988501989, worksheet.outputs_energy_flows_w368, 0.002); end
  def test_outputs_energy_flows_x368; assert_in_delta(0.05523354806116208, worksheet.outputs_energy_flows_x368, 0.002); end
  def test_outputs_energy_flows_y368; assert_in_delta(0.05822399902707052, worksheet.outputs_energy_flows_y368, 0.002); end
  def test_outputs_energy_flows_z368; assert_in_delta(0.16348903071617166, worksheet.outputs_energy_flows_z368, 0.002); end
  def test_outputs_energy_flows_aa368; assert_in_delta(0.2962167073922899, worksheet.outputs_energy_flows_aa368, 0.002); end
  def test_outputs_energy_flows_ab368; assert_in_delta(0.424365455718822, worksheet.outputs_energy_flows_ab368, 0.002); end
  def test_outputs_energy_flows_ac368; assert_in_delta(0.5741798809251724, worksheet.outputs_energy_flows_ac368, 0.002); end
  def test_outputs_energy_flows_ad368; assert_in_delta(0.6858141872488365, worksheet.outputs_energy_flows_ad368, 0.002); end
  def test_outputs_energy_flows_c370; assert_equal("HY.01", worksheet.outputs_energy_flows_c370); end
  def test_outputs_energy_flows_d370; assert_equal("Global H2", worksheet.outputs_energy_flows_d370); end
  def test_outputs_energy_flows_e370; assert_equal("n/a", worksheet.outputs_energy_flows_e370); end
  def test_outputs_energy_flows_f370; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f370); end
  def test_outputs_energy_flows_i370; assert_equal("HY.01", worksheet.outputs_energy_flows_i370); end
  def test_outputs_energy_flows_j370; assert_equal("Global H2", worksheet.outputs_energy_flows_j370); end
  def test_outputs_energy_flows_l370; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l370); end
  def test_outputs_energy_flows_m370; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m370); end
  def test_outputs_energy_flows_v370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v370||0), 0.002); end
  def test_outputs_energy_flows_w370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w370||0), 0.002); end
  def test_outputs_energy_flows_x370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x370||0), 0.002); end
  def test_outputs_energy_flows_y370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y370||0), 0.002); end
  def test_outputs_energy_flows_z370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z370||0), 0.002); end
  def test_outputs_energy_flows_aa370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa370||0), 0.002); end
  def test_outputs_energy_flows_ab370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab370||0), 0.002); end
  def test_outputs_energy_flows_ac370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac370||0), 0.002); end
  def test_outputs_energy_flows_ad370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad370||0), 0.002); end
  def test_outputs_energy_flows_c372; assert_equal("HY.01", worksheet.outputs_energy_flows_c372); end
  def test_outputs_energy_flows_d372; assert_equal("Global H2", worksheet.outputs_energy_flows_d372); end
  def test_outputs_energy_flows_e372; assert_equal("n/a", worksheet.outputs_energy_flows_e372); end
  def test_outputs_energy_flows_f372; assert_equal("International passenger", worksheet.outputs_energy_flows_f372); end
  def test_outputs_energy_flows_i372; assert_equal("HY.01", worksheet.outputs_energy_flows_i372); end
  def test_outputs_energy_flows_j372; assert_equal("Global H2", worksheet.outputs_energy_flows_j372); end
  def test_outputs_energy_flows_l372; assert_equal("International", worksheet.outputs_energy_flows_l372); end
  def test_outputs_energy_flows_v372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v372||0), 0.002); end
  def test_outputs_energy_flows_w372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w372||0), 0.002); end
  def test_outputs_energy_flows_x372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x372||0), 0.002); end
  def test_outputs_energy_flows_y372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y372||0), 0.002); end
  def test_outputs_energy_flows_z372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z372||0), 0.002); end
  def test_outputs_energy_flows_aa372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa372||0), 0.002); end
  def test_outputs_energy_flows_ab372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab372||0), 0.002); end
  def test_outputs_energy_flows_ac372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac372||0), 0.002); end
  def test_outputs_energy_flows_ad372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad372||0), 0.002); end
  def test_outputs_energy_flows_c374; assert_equal("HY.01", worksheet.outputs_energy_flows_c374); end
  def test_outputs_energy_flows_d374; assert_equal("Global H2", worksheet.outputs_energy_flows_d374); end
  def test_outputs_energy_flows_e374; assert_equal("n/a", worksheet.outputs_energy_flows_e374); end
  def test_outputs_energy_flows_f374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f374); end
  def test_outputs_energy_flows_i374; assert_equal("HY.01", worksheet.outputs_energy_flows_i374); end
  def test_outputs_energy_flows_j374; assert_equal("Global H2", worksheet.outputs_energy_flows_j374); end
  def test_outputs_energy_flows_l374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l374); end
  def test_outputs_energy_flows_v374; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v374, 0.002); end
  def test_outputs_energy_flows_w374; assert_in_delta(0.11661427611140007, worksheet.outputs_energy_flows_w374, 0.002); end
  def test_outputs_energy_flows_x374; assert_in_delta(0.11686952426409476, worksheet.outputs_energy_flows_x374, 0.002); end
  def test_outputs_energy_flows_y374; assert_in_delta(0.11104932045828458, worksheet.outputs_energy_flows_y374, 0.002); end
  def test_outputs_energy_flows_z374; assert_in_delta(0.09458614932427095, worksheet.outputs_energy_flows_z374, 0.002); end
  def test_outputs_energy_flows_aa374; assert_in_delta(0.07396198723597029, worksheet.outputs_energy_flows_aa374, 0.002); end
  def test_outputs_energy_flows_ab374; assert_in_delta(0.05083465378004997, worksheet.outputs_energy_flows_ab374, 0.002); end
  def test_outputs_energy_flows_ac374; assert_in_delta(0.026050374685706465, worksheet.outputs_energy_flows_ac374, 0.002); end
  def test_outputs_energy_flows_ad374; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad374||0), 0.002); end
  def test_outputs_energy_flows_c376; assert_equal("HY.01", worksheet.outputs_energy_flows_c376); end
  def test_outputs_energy_flows_d376; assert_equal("Global H2", worksheet.outputs_energy_flows_d376); end
  def test_outputs_energy_flows_e376; assert_equal("n/a", worksheet.outputs_energy_flows_e376); end
  def test_outputs_energy_flows_f376; assert_equal("International freight", worksheet.outputs_energy_flows_f376); end
  def test_outputs_energy_flows_i376; assert_equal("HY.01", worksheet.outputs_energy_flows_i376); end
  def test_outputs_energy_flows_j376; assert_equal("Global H2", worksheet.outputs_energy_flows_j376); end
  def test_outputs_energy_flows_l376; assert_equal("International freight", worksheet.outputs_energy_flows_l376); end
  def test_outputs_energy_flows_v376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v376||0), 0.002); end
  def test_outputs_energy_flows_w376; assert_in_delta(0.026991141612239148, worksheet.outputs_energy_flows_w376, 0.002); end
  def test_outputs_energy_flows_x376; assert_in_delta(0.026119029253927076, worksheet.outputs_energy_flows_x376, 0.002); end
  def test_outputs_energy_flows_y376; assert_in_delta(0.02445175151123588, worksheet.outputs_energy_flows_y376, 0.002); end
  def test_outputs_energy_flows_z376; assert_in_delta(0.021445454553051118, worksheet.outputs_energy_flows_z376, 0.002); end
  def test_outputs_energy_flows_aa376; assert_in_delta(0.016379824461761387, worksheet.outputs_energy_flows_aa376, 0.002); end
  def test_outputs_energy_flows_ab376; assert_in_delta(0.01084736089140387, worksheet.outputs_energy_flows_ab376, 0.002); end
  def test_outputs_energy_flows_ac376; assert_in_delta(0.005360442448572037, worksheet.outputs_energy_flows_ac376, 0.002); end
  def test_outputs_energy_flows_ad376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad376||0), 0.002); end
  def test_outputs_energy_flows_c378; assert_equal("H.01", worksheet.outputs_energy_flows_c378); end
  def test_outputs_energy_flows_d378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d378); end
  def test_outputs_energy_flows_e378; assert_equal("n/a", worksheet.outputs_energy_flows_e378); end
  def test_outputs_energy_flows_f378; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f378); end
  def test_outputs_energy_flows_i378; assert_equal("H.01", worksheet.outputs_energy_flows_i378); end
  def test_outputs_energy_flows_j378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j378); end
  def test_outputs_energy_flows_k378; assert_equal("Global buildings", worksheet.outputs_energy_flows_k378); end
  def test_outputs_energy_flows_l378; assert_equal("Heat network", worksheet.outputs_energy_flows_l378); end
  def test_outputs_energy_flows_v378; assert_in_epsilon(3.1671872924936775, worksheet.outputs_energy_flows_v378, 0.002); end
  def test_outputs_energy_flows_w378; assert_in_epsilon(3.515035977737959, worksheet.outputs_energy_flows_w378, 0.002); end
  def test_outputs_energy_flows_x378; assert_in_epsilon(3.8936449757819407, worksheet.outputs_energy_flows_x378, 0.002); end
  def test_outputs_energy_flows_y378; assert_in_epsilon(4.270530962878661, worksheet.outputs_energy_flows_y378, 0.002); end
  def test_outputs_energy_flows_z378; assert_in_epsilon(4.632828030210019, worksheet.outputs_energy_flows_z378, 0.002); end
  def test_outputs_energy_flows_aa378; assert_in_epsilon(4.957772022354783, worksheet.outputs_energy_flows_aa378, 0.002); end
  def test_outputs_energy_flows_ab378; assert_in_epsilon(5.259873776864978, worksheet.outputs_energy_flows_ab378, 0.002); end
  def test_outputs_energy_flows_ac378; assert_in_epsilon(5.516104276628152, worksheet.outputs_energy_flows_ac378, 0.002); end
  def test_outputs_energy_flows_ad378; assert_in_epsilon(5.746435615148277, worksheet.outputs_energy_flows_ad378, 0.002); end
  def test_outputs_energy_flows_c380; assert_equal("H.01", worksheet.outputs_energy_flows_c380); end
  def test_outputs_energy_flows_d380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d380); end
  def test_outputs_energy_flows_e380; assert_equal("n/a", worksheet.outputs_energy_flows_e380); end
  def test_outputs_energy_flows_f380; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f380); end
  def test_outputs_energy_flows_i380; assert_equal("H.01", worksheet.outputs_energy_flows_i380); end
  def test_outputs_energy_flows_j380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j380); end
  def test_outputs_energy_flows_k380; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k380); end
  def test_outputs_energy_flows_l380; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l380); end
  def test_outputs_energy_flows_v380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v380||0), 0.002); end
  def test_outputs_energy_flows_w380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w380||0), 0.002); end
  def test_outputs_energy_flows_x380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x380||0), 0.002); end
  def test_outputs_energy_flows_y380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y380||0), 0.002); end
  def test_outputs_energy_flows_z380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z380||0), 0.002); end
  def test_outputs_energy_flows_aa380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa380||0), 0.002); end
  def test_outputs_energy_flows_ab380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab380||0), 0.002); end
  def test_outputs_energy_flows_ac380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac380||0), 0.002); end
  def test_outputs_energy_flows_ad380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad380||0), 0.002); end
  def test_outputs_energy_flows_c382; assert_equal("H.01", worksheet.outputs_energy_flows_c382); end
  def test_outputs_energy_flows_d382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d382); end
  def test_outputs_energy_flows_e382; assert_equal("n/a", worksheet.outputs_energy_flows_e382); end
  def test_outputs_energy_flows_f382; assert_equal("Non domestic", worksheet.outputs_energy_flows_f382); end
  def test_outputs_energy_flows_i382; assert_equal("H.01", worksheet.outputs_energy_flows_i382); end
  def test_outputs_energy_flows_j382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j382); end
  def test_outputs_energy_flows_k382; assert_equal("Non-residential", worksheet.outputs_energy_flows_k382); end
  def test_outputs_energy_flows_v382; assert_in_epsilon(2.4341188531836564, worksheet.outputs_energy_flows_v382, 0.002); end
  def test_outputs_energy_flows_w382; assert_in_epsilon(2.3757333406367662, worksheet.outputs_energy_flows_w382, 0.002); end
  def test_outputs_energy_flows_x382; assert_in_epsilon(2.321071313749483, worksheet.outputs_energy_flows_x382, 0.002); end
  def test_outputs_energy_flows_y382; assert_in_epsilon(2.1953790183299953, worksheet.outputs_energy_flows_y382, 0.002); end
  def test_outputs_energy_flows_z382; assert_in_epsilon(1.9959012073473565, worksheet.outputs_energy_flows_z382, 0.002); end
  def test_outputs_energy_flows_aa382; assert_in_epsilon(1.721446050058277, worksheet.outputs_energy_flows_aa382, 0.002); end
  def test_outputs_energy_flows_ab382; assert_in_epsilon(1.3712864587419453, worksheet.outputs_energy_flows_ab382, 0.002); end
  def test_outputs_energy_flows_ac382; assert_in_delta(0.9457059917042263, worksheet.outputs_energy_flows_ac382, 0.002); end
  def test_outputs_energy_flows_ad382; assert_in_delta(0.4466779756497098, worksheet.outputs_energy_flows_ad382, 0.002); end
  def test_outputs_energy_flows_c384; assert_equal("H.01", worksheet.outputs_energy_flows_c384); end
  def test_outputs_energy_flows_d384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d384); end
  def test_outputs_energy_flows_e384; assert_equal("n/a", worksheet.outputs_energy_flows_e384); end
  def test_outputs_energy_flows_f384; assert_equal("Steel", worksheet.outputs_energy_flows_f384); end
  def test_outputs_energy_flows_i384; assert_equal("H.01", worksheet.outputs_energy_flows_i384); end
  def test_outputs_energy_flows_j384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j384); end
  def test_outputs_energy_flows_v384; assert_in_delta(0.803408652648, worksheet.outputs_energy_flows_v384, 0.002); end
  def test_outputs_energy_flows_w384; assert_in_delta(0.8271237549992297, worksheet.outputs_energy_flows_w384, 0.002); end
  def test_outputs_energy_flows_x384; assert_in_delta(0.8714884699815276, worksheet.outputs_energy_flows_x384, 0.002); end
  def test_outputs_energy_flows_y384; assert_in_delta(0.923834434204046, worksheet.outputs_energy_flows_y384, 0.002); end
  def test_outputs_energy_flows_z384; assert_in_delta(0.9722251231138317, worksheet.outputs_energy_flows_z384, 0.002); end
  def test_outputs_energy_flows_aa384; assert_in_epsilon(1.012602010830393, worksheet.outputs_energy_flows_aa384, 0.002); end
  def test_outputs_energy_flows_ab384; assert_in_epsilon(1.0564531993937214, worksheet.outputs_energy_flows_ab384, 0.002); end
  def test_outputs_energy_flows_ac384; assert_in_epsilon(1.1014380239219108, worksheet.outputs_energy_flows_ac384, 0.002); end
  def test_outputs_energy_flows_ad384; assert_in_epsilon(1.1470204159751607, worksheet.outputs_energy_flows_ad384, 0.002); end
  def test_outputs_energy_flows_c386; assert_equal("H.01", worksheet.outputs_energy_flows_c386); end
  def test_outputs_energy_flows_d386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d386); end
  def test_outputs_energy_flows_e386; assert_equal("n/a", worksheet.outputs_energy_flows_e386); end
  def test_outputs_energy_flows_f386; assert_equal("Aluminium", worksheet.outputs_energy_flows_f386); end
  def test_outputs_energy_flows_i386; assert_equal("H.01", worksheet.outputs_energy_flows_i386); end
  def test_outputs_energy_flows_j386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j386); end
  def test_outputs_energy_flows_v386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v386||0), 0.002); end
  def test_outputs_energy_flows_w386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w386||0), 0.002); end
  def test_outputs_energy_flows_x386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x386||0), 0.002); end
  def test_outputs_energy_flows_y386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y386||0), 0.002); end
  def test_outputs_energy_flows_z386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z386||0), 0.002); end
  def test_outputs_energy_flows_aa386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa386||0), 0.002); end
  def test_outputs_energy_flows_ab386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab386||0), 0.002); end
  def test_outputs_energy_flows_ac386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac386||0), 0.002); end
  def test_outputs_energy_flows_ad386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad386||0), 0.002); end
  def test_outputs_energy_flows_c388; assert_equal("H.01", worksheet.outputs_energy_flows_c388); end
  def test_outputs_energy_flows_d388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d388); end
  def test_outputs_energy_flows_e388; assert_equal("n/a", worksheet.outputs_energy_flows_e388); end
  def test_outputs_energy_flows_f388; assert_equal("Cement", worksheet.outputs_energy_flows_f388); end
  def test_outputs_energy_flows_i388; assert_equal("H.01", worksheet.outputs_energy_flows_i388); end
  def test_outputs_energy_flows_j388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j388); end
  def test_outputs_energy_flows_v388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v388||0), 0.002); end
  def test_outputs_energy_flows_w388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w388||0), 0.002); end
  def test_outputs_energy_flows_x388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x388||0), 0.002); end
  def test_outputs_energy_flows_y388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y388||0), 0.002); end
  def test_outputs_energy_flows_z388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z388||0), 0.002); end
  def test_outputs_energy_flows_aa388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa388||0), 0.002); end
  def test_outputs_energy_flows_ab388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab388||0), 0.002); end
  def test_outputs_energy_flows_ac388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac388||0), 0.002); end
  def test_outputs_energy_flows_ad388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad388||0), 0.002); end
  def test_outputs_energy_flows_c390; assert_equal("H.01", worksheet.outputs_energy_flows_c390); end
  def test_outputs_energy_flows_d390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d390); end
  def test_outputs_energy_flows_e390; assert_equal("n/a", worksheet.outputs_energy_flows_e390); end
  def test_outputs_energy_flows_f390; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f390); end
  def test_outputs_energy_flows_i390; assert_equal("H.01", worksheet.outputs_energy_flows_i390); end
  def test_outputs_energy_flows_j390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j390); end
  def test_outputs_energy_flows_v390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v390||0), 0.002); end
  def test_outputs_energy_flows_w390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w390||0), 0.002); end
  def test_outputs_energy_flows_x390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x390||0), 0.002); end
  def test_outputs_energy_flows_y390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y390||0), 0.002); end
  def test_outputs_energy_flows_z390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z390||0), 0.002); end
  def test_outputs_energy_flows_aa390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa390||0), 0.002); end
  def test_outputs_energy_flows_ab390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab390||0), 0.002); end
  def test_outputs_energy_flows_ac390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac390||0), 0.002); end
  def test_outputs_energy_flows_ad390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad390||0), 0.002); end
  def test_outputs_energy_flows_c392; assert_equal("H.01", worksheet.outputs_energy_flows_c392); end
  def test_outputs_energy_flows_d392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d392); end
  def test_outputs_energy_flows_e392; assert_equal("n/a", worksheet.outputs_energy_flows_e392); end
  def test_outputs_energy_flows_f392; assert_equal("Chemicals", worksheet.outputs_energy_flows_f392); end
  def test_outputs_energy_flows_i392; assert_equal("H.01", worksheet.outputs_energy_flows_i392); end
  def test_outputs_energy_flows_j392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j392); end
  def test_outputs_energy_flows_v392; assert_in_epsilon(1.970138431785092, worksheet.outputs_energy_flows_v392, 0.002); end
  def test_outputs_energy_flows_w392; assert_in_epsilon(2.084554625109584, worksheet.outputs_energy_flows_w392, 0.002); end
  def test_outputs_energy_flows_x392; assert_in_epsilon(2.223517314914545, worksheet.outputs_energy_flows_x392, 0.002); end
  def test_outputs_energy_flows_y392; assert_in_epsilon(2.514801998134061, worksheet.outputs_energy_flows_y392, 0.002); end
  def test_outputs_energy_flows_z392; assert_in_epsilon(2.825489296758536, worksheet.outputs_energy_flows_z392, 0.002); end
  def test_outputs_energy_flows_aa392; assert_in_epsilon(3.143261468353247, worksheet.outputs_energy_flows_aa392, 0.002); end
  def test_outputs_energy_flows_ab392; assert_in_epsilon(3.5101981490354164, worksheet.outputs_energy_flows_ab392, 0.002); end
  def test_outputs_energy_flows_ac392; assert_in_epsilon(3.892827656470873, worksheet.outputs_energy_flows_ac392, 0.002); end
  def test_outputs_energy_flows_ad392; assert_in_epsilon(4.334750162767933, worksheet.outputs_energy_flows_ad392, 0.002); end
  def test_outputs_energy_flows_c400; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c400); end
  def test_outputs_energy_flows_d400; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d400); end
  def test_outputs_energy_flows_e400; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e400); end
  def test_outputs_energy_flows_f400; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f400); end
  def test_outputs_energy_flows_g400; assert_equal("Technology code", worksheet.outputs_energy_flows_g400); end
  def test_outputs_energy_flows_h400; assert_equal("Technology description", worksheet.outputs_energy_flows_h400); end
  def test_outputs_energy_flows_i400; assert_equal("Energy code", worksheet.outputs_energy_flows_i400); end
  def test_outputs_energy_flows_j400; assert_equal("Description", worksheet.outputs_energy_flows_j400); end
  def test_outputs_energy_flows_k400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k400); end
  def test_outputs_energy_flows_l400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l400); end
  def test_outputs_energy_flows_m400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m400); end
  def test_outputs_energy_flows_v400; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v400, 0.002); end
  def test_outputs_energy_flows_w400; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w400, 0.002); end
  def test_outputs_energy_flows_x400; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x400, 0.002); end
  def test_outputs_energy_flows_y400; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y400, 0.002); end
  def test_outputs_energy_flows_z400; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z400, 0.002); end
  def test_outputs_energy_flows_aa400; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa400, 0.002); end
  def test_outputs_energy_flows_ab400; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab400, 0.002); end
  def test_outputs_energy_flows_ac400; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac400, 0.002); end
  def test_outputs_energy_flows_ad400; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad400, 0.002); end
  def test_outputs_energy_flows_d402; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d402); end
  def test_outputs_energy_flows_f402; assert_equal("Solid", worksheet.outputs_energy_flows_f402); end
  def test_outputs_energy_flows_i402; assert_equal("G.Q.01", worksheet.outputs_energy_flows_i402); end
  def test_outputs_energy_flows_j402; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_j402); end
  def test_outputs_energy_flows_v402; assert_in_epsilon(145.7604682524029, worksheet.outputs_energy_flows_v402, 0.002); end
  def test_outputs_energy_flows_w402; assert_in_epsilon(147.38179190945547, worksheet.outputs_energy_flows_w402, 0.002); end
  def test_outputs_energy_flows_x402; assert_in_epsilon(152.68881522958287, worksheet.outputs_energy_flows_x402, 0.002); end
  def test_outputs_energy_flows_y402; assert_in_epsilon(167.6321512858105, worksheet.outputs_energy_flows_y402, 0.002); end
  def test_outputs_energy_flows_z402; assert_in_epsilon(178.61088604022765, worksheet.outputs_energy_flows_z402, 0.002); end
  def test_outputs_energy_flows_aa402; assert_in_epsilon(186.36302806942027, worksheet.outputs_energy_flows_aa402, 0.002); end
  def test_outputs_energy_flows_ab402; assert_in_epsilon(190.70183716574485, worksheet.outputs_energy_flows_ab402, 0.002); end
  def test_outputs_energy_flows_ac402; assert_in_epsilon(184.50779062938992, worksheet.outputs_energy_flows_ac402, 0.002); end
  def test_outputs_energy_flows_ad402; assert_in_epsilon(180.65846314769394, worksheet.outputs_energy_flows_ad402, 0.002); end
  def test_outputs_energy_flows_d404; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d404); end
  def test_outputs_energy_flows_f404; assert_equal("Solid", worksheet.outputs_energy_flows_f404); end
  def test_outputs_energy_flows_i404; assert_equal("G.C.01", worksheet.outputs_energy_flows_i404); end
  def test_outputs_energy_flows_j404; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j404); end
  def test_outputs_energy_flows_k404; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k404); end
  def test_outputs_energy_flows_l404; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l404); end
  def test_outputs_energy_flows_n404; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n404); end
  def test_outputs_energy_flows_o404; assert_equal("Forest", worksheet.outputs_energy_flows_o404); end
  def test_outputs_energy_flows_p404; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p404); end
  def test_outputs_energy_flows_q404; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q404); end
  def test_outputs_energy_flows_r404; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r404); end
  def test_outputs_energy_flows_s404; assert_equal("industrial.municipal.non.renewable.waste", worksheet.outputs_energy_flows_s404); end
  def test_outputs_energy_flows_t404; assert_equal("Global Non renewable waste", worksheet.outputs_energy_flows_t404); end
  def test_outputs_energy_flows_v404; assert_in_epsilon(44.148328016537114, worksheet.outputs_energy_flows_v404, 0.002); end
  def test_outputs_energy_flows_w404; assert_in_epsilon(43.184779636087114, worksheet.outputs_energy_flows_w404, 0.002); end
  def test_outputs_energy_flows_x404; assert_in_epsilon(42.17165439341688, worksheet.outputs_energy_flows_x404, 0.002); end
  def test_outputs_energy_flows_y404; assert_in_epsilon(41.05171396992577, worksheet.outputs_energy_flows_y404, 0.002); end
  def test_outputs_energy_flows_z404; assert_in_epsilon(39.92747007919089, worksheet.outputs_energy_flows_z404, 0.002); end
  def test_outputs_energy_flows_aa404; assert_in_epsilon(39.08041764867682, worksheet.outputs_energy_flows_aa404, 0.002); end
  def test_outputs_energy_flows_ab404; assert_in_epsilon(38.13737330928058, worksheet.outputs_energy_flows_ab404, 0.002); end
  def test_outputs_energy_flows_ac404; assert_in_epsilon(37.71392252175466, worksheet.outputs_energy_flows_ac404, 0.002); end
  def test_outputs_energy_flows_ad404; assert_in_epsilon(37.12867733924984, worksheet.outputs_energy_flows_ad404, 0.002); end
  def test_outputs_energy_flows_d406; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d406); end
  def test_outputs_energy_flows_f406; assert_equal("Liquid", worksheet.outputs_energy_flows_f406); end
  def test_outputs_energy_flows_i406; assert_equal("G.Q.02", worksheet.outputs_energy_flows_i406); end
  def test_outputs_energy_flows_j406; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_j406); end
  def test_outputs_energy_flows_v406; assert_in_epsilon(152.8674996708785, worksheet.outputs_energy_flows_v406, 0.002); end
  def test_outputs_energy_flows_w406; assert_in_epsilon(162.3538754950667, worksheet.outputs_energy_flows_w406, 0.002); end
  def test_outputs_energy_flows_x406; assert_in_epsilon(186.01371152185556, worksheet.outputs_energy_flows_x406, 0.002); end
  def test_outputs_energy_flows_y406; assert_in_epsilon(200.4627601063228, worksheet.outputs_energy_flows_y406, 0.002); end
  def test_outputs_energy_flows_z406; assert_in_epsilon(218.3230026122407, worksheet.outputs_energy_flows_z406, 0.002); end
  def test_outputs_energy_flows_aa406; assert_in_epsilon(231.45163207305248, worksheet.outputs_energy_flows_aa406, 0.002); end
  def test_outputs_energy_flows_ab406; assert_in_epsilon(244.17783750586847, worksheet.outputs_energy_flows_ab406, 0.002); end
  def test_outputs_energy_flows_ac406; assert_in_epsilon(258.4845583818769, worksheet.outputs_energy_flows_ac406, 0.002); end
  def test_outputs_energy_flows_ad406; assert_in_epsilon(270.74440221873806, worksheet.outputs_energy_flows_ad406, 0.002); end
  def test_outputs_energy_flows_d408; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d408); end
  def test_outputs_energy_flows_f408; assert_equal("Liquid", worksheet.outputs_energy_flows_f408); end
  def test_outputs_energy_flows_i408; assert_equal("G.C.02", worksheet.outputs_energy_flows_i408); end
  def test_outputs_energy_flows_j408; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j408); end
  def test_outputs_energy_flows_n408; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n408); end
  def test_outputs_energy_flows_o408; assert_equal("Forest", worksheet.outputs_energy_flows_o408); end
  def test_outputs_energy_flows_p408; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p408); end
  def test_outputs_energy_flows_q408; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q408); end
  def test_outputs_energy_flows_r408; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r408); end
  def test_outputs_energy_flows_v408; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v408, 0.002); end
  def test_outputs_energy_flows_w408; assert_in_epsilon(4.088016474026838, worksheet.outputs_energy_flows_w408, 0.002); end
  def test_outputs_energy_flows_x408; assert_in_epsilon(4.974371484014922, worksheet.outputs_energy_flows_x408, 0.002); end
  def test_outputs_energy_flows_y408; assert_in_epsilon(5.945900516219489, worksheet.outputs_energy_flows_y408, 0.002); end
  def test_outputs_energy_flows_z408; assert_in_epsilon(7.006951265636585, worksheet.outputs_energy_flows_z408, 0.002); end
  def test_outputs_energy_flows_aa408; assert_in_epsilon(8.162026749699242, worksheet.outputs_energy_flows_aa408, 0.002); end
  def test_outputs_energy_flows_ab408; assert_in_epsilon(9.415792306948514, worksheet.outputs_energy_flows_ab408, 0.002); end
  def test_outputs_energy_flows_ac408; assert_in_epsilon(10.773082977569354, worksheet.outputs_energy_flows_ac408, 0.002); end
  def test_outputs_energy_flows_ad408; assert_in_epsilon(12.23891129032258, worksheet.outputs_energy_flows_ad408, 0.002); end
  def test_outputs_energy_flows_d410; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d410); end
  def test_outputs_energy_flows_f410; assert_equal("Gas", worksheet.outputs_energy_flows_f410); end
  def test_outputs_energy_flows_i410; assert_equal("G.Q.03", worksheet.outputs_energy_flows_i410); end
  def test_outputs_energy_flows_j410; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_j410); end
  def test_outputs_energy_flows_v410; assert_in_epsilon(89.89100006425333, worksheet.outputs_energy_flows_v410, 0.002); end
  def test_outputs_energy_flows_w410; assert_in_epsilon(92.4593773882986, worksheet.outputs_energy_flows_w410, 0.002); end
  def test_outputs_energy_flows_x410; assert_in_epsilon(100.22965765330926, worksheet.outputs_energy_flows_x410, 0.002); end
  def test_outputs_energy_flows_y410; assert_in_epsilon(108.72024608385343, worksheet.outputs_energy_flows_y410, 0.002); end
  def test_outputs_energy_flows_z410; assert_in_epsilon(118.42786169935748, worksheet.outputs_energy_flows_z410, 0.002); end
  def test_outputs_energy_flows_aa410; assert_in_epsilon(128.74431762314123, worksheet.outputs_energy_flows_aa410, 0.002); end
  def test_outputs_energy_flows_ab410; assert_in_epsilon(141.62242102004262, worksheet.outputs_energy_flows_ab410, 0.002); end
  def test_outputs_energy_flows_ac410; assert_in_epsilon(155.88906388872803, worksheet.outputs_energy_flows_ac410, 0.002); end
  def test_outputs_energy_flows_ad410; assert_in_epsilon(171.5262599801867, worksheet.outputs_energy_flows_ad410, 0.002); end
  def test_outputs_energy_flows_d412; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d412); end
  def test_outputs_energy_flows_f412; assert_equal("Gas", worksheet.outputs_energy_flows_f412); end
  def test_outputs_energy_flows_i412; assert_equal("G.C.03", worksheet.outputs_energy_flows_i412); end
  def test_outputs_energy_flows_j412; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j412); end
  def test_outputs_energy_flows_n412; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n412); end
  def test_outputs_energy_flows_o412; assert_equal("Forest", worksheet.outputs_energy_flows_o412); end
  def test_outputs_energy_flows_p412; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p412); end
  def test_outputs_energy_flows_q412; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q412); end
  def test_outputs_energy_flows_r412; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r412); end
  def test_outputs_energy_flows_v412; assert_in_epsilon(3.013698657489478, worksheet.outputs_energy_flows_v412, 0.002); end
  def test_outputs_energy_flows_w412; assert_in_epsilon(3.743143026102454, worksheet.outputs_energy_flows_w412, 0.002); end
  def test_outputs_energy_flows_x412; assert_in_epsilon(3.9421910691636683, worksheet.outputs_energy_flows_x412, 0.002); end
  def test_outputs_energy_flows_y412; assert_in_epsilon(4.128713103701706, worksheet.outputs_energy_flows_y412, 0.002); end
  def test_outputs_energy_flows_z412; assert_in_epsilon(4.3118334623860965, worksheet.outputs_energy_flows_z412, 0.002); end
  def test_outputs_energy_flows_aa412; assert_in_epsilon(4.500535310903666, worksheet.outputs_energy_flows_aa412, 0.002); end
  def test_outputs_energy_flows_ab412; assert_in_epsilon(4.6943753188778095, worksheet.outputs_energy_flows_ab412, 0.002); end
  def test_outputs_energy_flows_ac412; assert_in_epsilon(4.874416769053826, worksheet.outputs_energy_flows_ac412, 0.002); end
  def test_outputs_energy_flows_ad412; assert_in_epsilon(5.063411435836817, worksheet.outputs_energy_flows_ad412, 0.002); end
  def test_outputs_energy_flows_d414; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d414); end
  def test_outputs_energy_flows_f414; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f414); end
  def test_outputs_energy_flows_i414; assert_equal("G.L.01", worksheet.outputs_energy_flows_i414); end
  def test_outputs_energy_flows_j414; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j414); end
  def test_outputs_energy_flows_n414; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n414); end
  def test_outputs_energy_flows_o414; assert_equal("Forest", worksheet.outputs_energy_flows_o414); end
  def test_outputs_energy_flows_p414; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p414); end
  def test_outputs_energy_flows_q414; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q414); end
  def test_outputs_energy_flows_r414; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r414); end
  def test_outputs_energy_flows_v414; assert_in_epsilon(7.849350799034149, worksheet.outputs_energy_flows_v414, 0.002); end
  def test_outputs_energy_flows_w414; assert_in_epsilon(7.976382286958431, worksheet.outputs_energy_flows_w414, 0.002); end
  def test_outputs_energy_flows_x414; assert_in_epsilon(7.88571194352977, worksheet.outputs_energy_flows_x414, 0.002); end
  def test_outputs_energy_flows_y414; assert_in_epsilon(7.766440975386082, worksheet.outputs_energy_flows_y414, 0.002); end
  def test_outputs_energy_flows_z414; assert_in_epsilon(7.599726383817858, worksheet.outputs_energy_flows_z414, 0.002); end
  def test_outputs_energy_flows_aa414; assert_in_epsilon(7.376124506096749, worksheet.outputs_energy_flows_aa414, 0.002); end
  def test_outputs_energy_flows_ab414; assert_in_epsilon(7.10062372226206, worksheet.outputs_energy_flows_ab414, 0.002); end
  def test_outputs_energy_flows_ac414; assert_in_epsilon(6.794018604530237, worksheet.outputs_energy_flows_ac414, 0.002); end
  def test_outputs_energy_flows_ad414; assert_in_epsilon(6.434058099175611, worksheet.outputs_energy_flows_ad414, 0.002); end
  def test_outputs_energy_flows_d416; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d416); end
  def test_outputs_energy_flows_f416; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f416); end
  def test_outputs_energy_flows_g416; assert_equal("arable.bio", worksheet.outputs_energy_flows_g416); end
  def test_outputs_energy_flows_h416; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h416); end
  def test_outputs_energy_flows_i416; assert_equal("O.01", worksheet.outputs_energy_flows_i416); end
  def test_outputs_energy_flows_j416; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j416); end
  def test_outputs_energy_flows_v416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v416||0), 0.002); end
  def test_outputs_energy_flows_w416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w416||0), 0.002); end
  def test_outputs_energy_flows_x416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x416||0), 0.002); end
  def test_outputs_energy_flows_y416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y416||0), 0.002); end
  def test_outputs_energy_flows_z416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z416||0), 0.002); end
  def test_outputs_energy_flows_aa416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa416||0), 0.002); end
  def test_outputs_energy_flows_ab416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab416||0), 0.002); end
  def test_outputs_energy_flows_ac416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac416||0), 0.002); end
  def test_outputs_energy_flows_ad416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad416||0), 0.002); end
  def test_outputs_energy_flows_d418; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d418); end
  def test_outputs_energy_flows_f418; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f418); end
  def test_outputs_energy_flows_i418; assert_equal("G.L.02", worksheet.outputs_energy_flows_i418); end
  def test_outputs_energy_flows_j418; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j418); end
  def test_outputs_energy_flows_o418; assert_equal("Coal.extract", worksheet.outputs_energy_flows_o418); end
  def test_outputs_energy_flows_p418; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_p418); end
  def test_outputs_energy_flows_q418; assert_equal("Coal.wash", worksheet.outputs_energy_flows_q418); end
  def test_outputs_energy_flows_r418; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_r418); end
  def test_outputs_energy_flows_s418; assert_equal("coal.network", worksheet.outputs_energy_flows_s418); end
  def test_outputs_energy_flows_t418; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_t418); end
  def test_outputs_energy_flows_v418; assert_in_epsilon(34.903762557415014, worksheet.outputs_energy_flows_v418, 0.002); end
  def test_outputs_energy_flows_w418; assert_in_epsilon(35.251351914779114, worksheet.outputs_energy_flows_w418, 0.002); end
  def test_outputs_energy_flows_x418; assert_in_epsilon(40.55120564686955, worksheet.outputs_energy_flows_x418, 0.002); end
  def test_outputs_energy_flows_y418; assert_in_epsilon(46.79641429084627, worksheet.outputs_energy_flows_y418, 0.002); end
  def test_outputs_energy_flows_z418; assert_in_epsilon(52.35008293713022, worksheet.outputs_energy_flows_z418, 0.002); end
  def test_outputs_energy_flows_aa418; assert_in_epsilon(57.28393381981049, worksheet.outputs_energy_flows_aa418, 0.002); end
  def test_outputs_energy_flows_ab418; assert_in_epsilon(61.40761015078834, worksheet.outputs_energy_flows_ab418, 0.002); end
  def test_outputs_energy_flows_ac418; assert_in_epsilon(62.177271804812655, worksheet.outputs_energy_flows_ac418, 0.002); end
  def test_outputs_energy_flows_ad418; assert_in_epsilon(63.651172194398555, worksheet.outputs_energy_flows_ad418, 0.002); end
  def test_outputs_energy_flows_d420; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d420); end
  def test_outputs_energy_flows_f420; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f420); end
  def test_outputs_energy_flows_i420; assert_equal("G.L.02", worksheet.outputs_energy_flows_i420); end
  def test_outputs_energy_flows_j420; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j420); end
  def test_outputs_energy_flows_o420; assert_equal("Oil.extract", worksheet.outputs_energy_flows_o420); end
  def test_outputs_energy_flows_p420; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_p420); end
  def test_outputs_energy_flows_q420; assert_equal("Oil.refine", worksheet.outputs_energy_flows_q420); end
  def test_outputs_energy_flows_r420; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_r420); end
  def test_outputs_energy_flows_s420; assert_equal("oil.network", worksheet.outputs_energy_flows_s420); end
  def test_outputs_energy_flows_t420; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_t420); end
  def test_outputs_energy_flows_v420; assert_in_epsilon(24.78045227956031, worksheet.outputs_energy_flows_v420, 0.002); end
  def test_outputs_energy_flows_w420; assert_in_epsilon(25.69887280658651, worksheet.outputs_energy_flows_w420, 0.002); end
  def test_outputs_energy_flows_x420; assert_in_epsilon(29.42595243467114, worksheet.outputs_energy_flows_x420, 0.002); end
  def test_outputs_energy_flows_y420; assert_in_epsilon(31.6931658262668, worksheet.outputs_energy_flows_y420, 0.002); end
  def test_outputs_energy_flows_z420; assert_in_epsilon(34.4976410364152, worksheet.outputs_energy_flows_z420, 0.002); end
  def test_outputs_energy_flows_aa420; assert_in_epsilon(30.880793509651784, worksheet.outputs_energy_flows_aa420, 0.002); end
  def test_outputs_energy_flows_ab420; assert_in_epsilon(32.55961021295195, worksheet.outputs_energy_flows_ab420, 0.002); end
  def test_outputs_energy_flows_ac420; assert_in_epsilon(34.448000551173045, worksheet.outputs_energy_flows_ac420, 0.002); end
  def test_outputs_energy_flows_ad420; assert_in_epsilon(36.06255920359516, worksheet.outputs_energy_flows_ad420, 0.002); end
  def test_outputs_energy_flows_d422; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d422); end
  def test_outputs_energy_flows_f422; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f422); end
  def test_outputs_energy_flows_i422; assert_equal("G.L.02", worksheet.outputs_energy_flows_i422); end
  def test_outputs_energy_flows_j422; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j422); end
  def test_outputs_energy_flows_o422; assert_equal("Naturalgas.extract", worksheet.outputs_energy_flows_o422); end
  def test_outputs_energy_flows_p422; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_p422); end
  def test_outputs_energy_flows_q422; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_q422); end
  def test_outputs_energy_flows_r422; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_r422); end
  def test_outputs_energy_flows_s422; assert_equal("gas.nework", worksheet.outputs_energy_flows_s422); end
  def test_outputs_energy_flows_t422; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_t422); end
  def test_outputs_energy_flows_v422; assert_in_epsilon(30.013063456385506, worksheet.outputs_energy_flows_v422, 0.002); end
  def test_outputs_energy_flows_w422; assert_in_epsilon(30.878175752418116, worksheet.outputs_energy_flows_w422, 0.002); end
  def test_outputs_energy_flows_x422; assert_in_epsilon(33.483549524778596, worksheet.outputs_energy_flows_x422, 0.002); end
  def test_outputs_energy_flows_y422; assert_in_epsilon(36.33137137088618, worksheet.outputs_energy_flows_y422, 0.002); end
  def test_outputs_energy_flows_z422; assert_in_epsilon(37.56209952671121, worksheet.outputs_energy_flows_z422, 0.002); end
  def test_outputs_energy_flows_aa422; assert_in_epsilon(38.701088982663485, worksheet.outputs_energy_flows_aa422, 0.002); end
  def test_outputs_energy_flows_ab422; assert_in_epsilon(42.58727420053342, worksheet.outputs_energy_flows_ab422, 0.002); end
  def test_outputs_energy_flows_ac422; assert_in_epsilon(46.89407535699126, worksheet.outputs_energy_flows_ac422, 0.002); end
  def test_outputs_energy_flows_ad422; assert_in_epsilon(51.61657642938835, worksheet.outputs_energy_flows_ad422, 0.002); end
  def test_outputs_energy_flows_d424; assert_equal("Solid", worksheet.outputs_energy_flows_d424); end
  def test_outputs_energy_flows_f424; assert_equal("Power plants", worksheet.outputs_energy_flows_f424); end
  def test_outputs_energy_flows_i424; assert_equal("G.C.01", worksheet.outputs_energy_flows_i424); end
  def test_outputs_energy_flows_j424; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j424); end
  def test_outputs_energy_flows_n424; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n424); end
  def test_outputs_energy_flows_v424; assert_in_epsilon(99.96425579799836, worksheet.outputs_energy_flows_v424, 0.002); end
  def test_outputs_energy_flows_w424; assert_in_epsilon(99.21168912213203, worksheet.outputs_energy_flows_w424, 0.002); end
  def test_outputs_energy_flows_x424; assert_in_epsilon(101.25397935672275, worksheet.outputs_energy_flows_x424, 0.002); end
  def test_outputs_energy_flows_y424; assert_in_epsilon(113.19534067338495, worksheet.outputs_energy_flows_y424, 0.002); end
  def test_outputs_energy_flows_z424; assert_in_epsilon(121.51843751622079, worksheet.outputs_energy_flows_z424, 0.002); end
  def test_outputs_energy_flows_aa424; assert_in_epsilon(126.9323205962694, worksheet.outputs_energy_flows_aa424, 0.002); end
  def test_outputs_energy_flows_ab424; assert_in_epsilon(128.81254870158486, worksheet.outputs_energy_flows_ab424, 0.002); end
  def test_outputs_energy_flows_ac424; assert_in_epsilon(120.28215544741668, worksheet.outputs_energy_flows_ac424, 0.002); end
  def test_outputs_energy_flows_ad424; assert_in_epsilon(113.98641877770709, worksheet.outputs_energy_flows_ad424, 0.002); end
  def test_outputs_energy_flows_d426; assert_equal("Liquid", worksheet.outputs_energy_flows_d426); end
  def test_outputs_energy_flows_f426; assert_equal("Power plants", worksheet.outputs_energy_flows_f426); end
  def test_outputs_energy_flows_i426; assert_equal("G.C.02", worksheet.outputs_energy_flows_i426); end
  def test_outputs_energy_flows_j426; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j426); end
  def test_outputs_energy_flows_n426; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n426); end
  def test_outputs_energy_flows_v426; assert_in_epsilon(11.603025273887752, worksheet.outputs_energy_flows_v426, 0.002); end
  def test_outputs_energy_flows_w426; assert_in_epsilon(11.408506911143634, worksheet.outputs_energy_flows_w426, 0.002); end
  def test_outputs_energy_flows_x426; assert_in_epsilon(22.363602409682926, worksheet.outputs_energy_flows_x426, 0.002); end
  def test_outputs_energy_flows_y426; assert_in_epsilon(25.099250014958024, worksheet.outputs_energy_flows_y426, 0.002); end
  def test_outputs_energy_flows_z426; assert_in_epsilon(32.554604599443174, worksheet.outputs_energy_flows_z426, 0.002); end
  def test_outputs_energy_flows_aa426; assert_in_epsilon(37.6997301357319, worksheet.outputs_energy_flows_aa426, 0.002); end
  def test_outputs_energy_flows_ab426; assert_in_epsilon(43.38722636050451, worksheet.outputs_energy_flows_ab426, 0.002); end
  def test_outputs_energy_flows_ac426; assert_in_epsilon(51.13698649442448, worksheet.outputs_energy_flows_ac426, 0.002); end
  def test_outputs_energy_flows_ad426; assert_in_epsilon(56.69814809637913, worksheet.outputs_energy_flows_ad426, 0.002); end
  def test_outputs_energy_flows_d428; assert_equal("Gas", worksheet.outputs_energy_flows_d428); end
  def test_outputs_energy_flows_f428; assert_equal("Power plants", worksheet.outputs_energy_flows_f428); end
  def test_outputs_energy_flows_i428; assert_equal("G.C.03", worksheet.outputs_energy_flows_i428); end
  def test_outputs_energy_flows_j428; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j428); end
  def test_outputs_energy_flows_n428; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n428); end
  def test_outputs_energy_flows_v428; assert_in_epsilon(41.931025391305454, worksheet.outputs_energy_flows_v428, 0.002); end
  def test_outputs_energy_flows_w428; assert_in_epsilon(41.16360849911386, worksheet.outputs_energy_flows_w428, 0.002); end
  def test_outputs_energy_flows_x428; assert_in_epsilon(44.96648508888798, worksheet.outputs_energy_flows_x428, 0.002); end
  def test_outputs_energy_flows_y428; assert_in_epsilon(49.271112552290596, worksheet.outputs_energy_flows_y428, 0.002); end
  def test_outputs_energy_flows_z428; assert_in_epsilon(54.83494780534271, worksheet.outputs_energy_flows_z428, 0.002); end
  def test_outputs_energy_flows_aa428; assert_in_epsilon(61.425872967674124, worksheet.outputs_energy_flows_aa428, 0.002); end
  def test_outputs_energy_flows_ab428; assert_in_epsilon(70.60799719697418, worksheet.outputs_energy_flows_ab428, 0.002); end
  def test_outputs_energy_flows_ac428; assert_in_epsilon(81.4643670139678, worksheet.outputs_energy_flows_ac428, 0.002); end
  def test_outputs_energy_flows_ad428; assert_in_epsilon(93.60018042738005, worksheet.outputs_energy_flows_ad428, 0.002); end
  def test_outputs_energy_flows_d430; assert_equal("Nuclear", worksheet.outputs_energy_flows_d430); end
  def test_outputs_energy_flows_f430; assert_equal("Power plants", worksheet.outputs_energy_flows_f430); end
  def test_outputs_energy_flows_i430; assert_equal("G.N.01", worksheet.outputs_energy_flows_i430); end
  def test_outputs_energy_flows_j430; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_j430); end
  def test_outputs_energy_flows_n430; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n430); end
  def test_outputs_energy_flows_v430; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v430, 0.002); end
  def test_outputs_energy_flows_w430; assert_in_epsilon(29.87001951581473, worksheet.outputs_energy_flows_w430, 0.002); end
  def test_outputs_energy_flows_x430; assert_in_epsilon(32.16856624518809, worksheet.outputs_energy_flows_x430, 0.002); end
  def test_outputs_energy_flows_y430; assert_in_epsilon(32.42272765606359, worksheet.outputs_energy_flows_y430, 0.002); end
  def test_outputs_energy_flows_z430; assert_in_epsilon(31.478476338411802, worksheet.outputs_energy_flows_z430, 0.002); end
  def test_outputs_energy_flows_aa430; assert_in_epsilon(34.76682054691498, worksheet.outputs_energy_flows_aa430, 0.002); end
  def test_outputs_energy_flows_ab430; assert_in_epsilon(34.154679001157994, worksheet.outputs_energy_flows_ab430, 0.002); end
  def test_outputs_energy_flows_ac430; assert_in_epsilon(34.83757015518318, worksheet.outputs_energy_flows_ac430, 0.002); end
  def test_outputs_energy_flows_ad430; assert_in_epsilon(35.50481852710455, worksheet.outputs_energy_flows_ad430, 0.002); end
  def test_outputs_energy_flows_d432; assert_equal("Power plants", worksheet.outputs_energy_flows_d432); end
  def test_outputs_energy_flows_f432; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f432); end
  def test_outputs_energy_flows_i432; assert_equal("G.E.02", worksheet.outputs_energy_flows_i432); end
  def test_outputs_energy_flows_j432; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j432); end
  def test_outputs_energy_flows_p432; assert_equal("Unabated power", worksheet.outputs_energy_flows_p432); end
  def test_outputs_energy_flows_r432; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r432); end
  def test_outputs_energy_flows_t432; assert_equal("Nuclear", worksheet.outputs_energy_flows_t432); end
  def test_outputs_energy_flows_v432; assert_in_epsilon(62.5086689481674, worksheet.outputs_energy_flows_v432, 0.002); end
  def test_outputs_energy_flows_w432; assert_in_epsilon(63.71060105753045, worksheet.outputs_energy_flows_w432, 0.002); end
  def test_outputs_energy_flows_x432; assert_in_epsilon(71.50403479422116, worksheet.outputs_energy_flows_x432, 0.002); end
  def test_outputs_energy_flows_y432; assert_in_epsilon(79.88825264804552, worksheet.outputs_energy_flows_y432, 0.002); end
  def test_outputs_energy_flows_z432; assert_in_epsilon(88.65259338214196, worksheet.outputs_energy_flows_z432, 0.002); end
  def test_outputs_energy_flows_aa432; assert_in_epsilon(97.71647472137383, worksheet.outputs_energy_flows_aa432, 0.002); end
  def test_outputs_energy_flows_ab432; assert_in_epsilon(105.67196074547257, worksheet.outputs_energy_flows_ab432, 0.002); end
  def test_outputs_energy_flows_ac432; assert_in_epsilon(111.29478318284605, worksheet.outputs_energy_flows_ac432, 0.002); end
  def test_outputs_energy_flows_ad432; assert_in_epsilon(117.50228477772322, worksheet.outputs_energy_flows_ad432, 0.002); end
  def test_outputs_energy_flows_d434; assert_equal("Power plants", worksheet.outputs_energy_flows_d434); end
  def test_outputs_energy_flows_f434; assert_equal("Heat network", worksheet.outputs_energy_flows_f434); end
  def test_outputs_energy_flows_i434; assert_equal("G.H.01", worksheet.outputs_energy_flows_i434); end
  def test_outputs_energy_flows_j434; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j434); end
  def test_outputs_energy_flows_p434; assert_equal("Unabated power", worksheet.outputs_energy_flows_p434); end
  def test_outputs_energy_flows_r434; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r434); end
  def test_outputs_energy_flows_t434; assert_equal("Nuclear", worksheet.outputs_energy_flows_t434); end
  def test_outputs_energy_flows_v434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v434||0), 0.002); end
  def test_outputs_energy_flows_w434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w434||0), 0.002); end
  def test_outputs_energy_flows_x434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x434||0), 0.002); end
  def test_outputs_energy_flows_y434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y434||0), 0.002); end
  def test_outputs_energy_flows_z434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z434||0), 0.002); end
  def test_outputs_energy_flows_aa434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa434||0), 0.002); end
  def test_outputs_energy_flows_ab434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab434||0), 0.002); end
  def test_outputs_energy_flows_ac434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac434||0), 0.002); end
  def test_outputs_energy_flows_ad434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad434||0), 0.002); end
  def test_outputs_energy_flows_d436; assert_equal("Solid", worksheet.outputs_energy_flows_d436); end
  def test_outputs_energy_flows_f436; assert_equal("Heat network", worksheet.outputs_energy_flows_f436); end
  def test_outputs_energy_flows_i436; assert_equal("G.C.01", worksheet.outputs_energy_flows_i436); end
  def test_outputs_energy_flows_j436; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j436); end
  def test_outputs_energy_flows_n436; assert_equal("Heat network", worksheet.outputs_energy_flows_n436); end
  def test_outputs_energy_flows_v436; assert_in_epsilon(1.4544818759731915, worksheet.outputs_energy_flows_v436, 0.002); end
  def test_outputs_energy_flows_w436; assert_in_epsilon(1.518989068829142, worksheet.outputs_energy_flows_w436, 0.002); end
  def test_outputs_energy_flows_x436; assert_in_epsilon(1.5928611441130753, worksheet.outputs_energy_flows_x436, 0.002); end
  def test_outputs_energy_flows_y436; assert_in_epsilon(1.667797987009439, worksheet.outputs_energy_flows_y436, 0.002); end
  def test_outputs_energy_flows_z436; assert_in_epsilon(1.7303379753326475, worksheet.outputs_energy_flows_z436, 0.002); end
  def test_outputs_energy_flows_aa436; assert_in_epsilon(1.775523295066414, worksheet.outputs_energy_flows_aa436, 0.002); end
  def test_outputs_energy_flows_ab436; assert_in_epsilon(1.8129455908070529, worksheet.outputs_energy_flows_ab436, 0.002); end
  def test_outputs_energy_flows_ac436; assert_in_epsilon(1.836047041455893, worksheet.outputs_energy_flows_ac436, 0.002); end
  def test_outputs_energy_flows_ad436; assert_in_epsilon(1.853978286212242, worksheet.outputs_energy_flows_ad436, 0.002); end
  def test_outputs_energy_flows_d438; assert_equal("Liquid", worksheet.outputs_energy_flows_d438); end
  def test_outputs_energy_flows_f438; assert_equal("Heat network", worksheet.outputs_energy_flows_f438); end
  def test_outputs_energy_flows_i438; assert_equal("G.C.02", worksheet.outputs_energy_flows_i438); end
  def test_outputs_energy_flows_j438; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j438); end
  def test_outputs_energy_flows_n438; assert_equal("Heat network", worksheet.outputs_energy_flows_n438); end
  def test_outputs_energy_flows_v438; assert_in_delta(0.7272409379865957, worksheet.outputs_energy_flows_v438, 0.002); end
  def test_outputs_energy_flows_w438; assert_in_delta(0.7283357842847424, worksheet.outputs_energy_flows_w438, 0.002); end
  def test_outputs_energy_flows_x438; assert_in_delta(0.7212390637041053, worksheet.outputs_energy_flows_x438, 0.002); end
  def test_outputs_energy_flows_y438; assert_in_delta(0.710007199523602, worksheet.outputs_energy_flows_y438, 0.002); end
  def test_outputs_energy_flows_z438; assert_in_delta(0.6890909870695877, worksheet.outputs_energy_flows_z438, 0.002); end
  def test_outputs_energy_flows_aa438; assert_in_delta(0.657586342539303, worksheet.outputs_energy_flows_aa438, 0.002); end
  def test_outputs_energy_flows_ab438; assert_in_delta(0.6201547975391267, worksheet.outputs_energy_flows_ab438, 0.002); end
  def test_outputs_energy_flows_ac438; assert_in_delta(0.5753368991749273, worksheet.outputs_energy_flows_ac438, 0.002); end
  def test_outputs_energy_flows_ad438; assert_in_delta(0.5269201445024266, worksheet.outputs_energy_flows_ad438, 0.002); end
  def test_outputs_energy_flows_d440; assert_equal("Gas", worksheet.outputs_energy_flows_d440); end
  def test_outputs_energy_flows_f440; assert_equal("Heat network", worksheet.outputs_energy_flows_f440); end
  def test_outputs_energy_flows_i440; assert_equal("G.C.03", worksheet.outputs_energy_flows_i440); end
  def test_outputs_energy_flows_j440; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j440); end
  def test_outputs_energy_flows_n440; assert_equal("Heat network", worksheet.outputs_energy_flows_n440); end
  def test_outputs_energy_flows_v440; assert_in_delta(0.686838663654007, worksheet.outputs_energy_flows_v440, 0.002); end
  def test_outputs_energy_flows_w440; assert_in_delta(0.6855289962816358, worksheet.outputs_energy_flows_w440, 0.002); end
  def test_outputs_energy_flows_x440; assert_in_delta(0.6876481358196677, worksheet.outputs_energy_flows_x440, 0.002); end
  def test_outputs_energy_flows_y440; assert_in_delta(0.6870637260120651, worksheet.outputs_energy_flows_y440, 0.002); end
  def test_outputs_energy_flows_z440; assert_in_delta(0.6783928261175288, worksheet.outputs_energy_flows_z440, 0.002); end
  def test_outputs_energy_flows_aa440; assert_in_delta(0.6604932729311631, worksheet.outputs_energy_flows_aa440, 0.002); end
  def test_outputs_energy_flows_ab440; assert_in_delta(0.6377524694443787, worksheet.outputs_energy_flows_ab440, 0.002); end
  def test_outputs_energy_flows_ac440; assert_in_delta(0.6084397907532598, worksheet.outputs_energy_flows_ac440, 0.002); end
  def test_outputs_energy_flows_ad440; assert_in_delta(0.5762534722900485, worksheet.outputs_energy_flows_ad440, 0.002); end
  def test_outputs_energy_flows_d442; assert_equal("Geothermal", worksheet.outputs_energy_flows_d442); end
  def test_outputs_energy_flows_f442; assert_equal("Heat network", worksheet.outputs_energy_flows_f442); end
  def test_outputs_energy_flows_i442; assert_equal("G.R.05", worksheet.outputs_energy_flows_i442); end
  def test_outputs_energy_flows_j442; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_j442); end
  def test_outputs_energy_flows_n442; assert_equal("Heat network", worksheet.outputs_energy_flows_n442); end
  def test_outputs_energy_flows_v442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v442||0), 0.002); end
  def test_outputs_energy_flows_w442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w442||0), 0.002); end
  def test_outputs_energy_flows_x442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x442||0), 0.002); end
  def test_outputs_energy_flows_y442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y442||0), 0.002); end
  def test_outputs_energy_flows_z442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z442||0), 0.002); end
  def test_outputs_energy_flows_aa442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa442||0), 0.002); end
  def test_outputs_energy_flows_ab442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab442||0), 0.002); end
  def test_outputs_energy_flows_ac442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac442||0), 0.002); end
  def test_outputs_energy_flows_ad442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad442||0), 0.002); end
  def test_outputs_energy_flows_d444; assert_equal("Solar", worksheet.outputs_energy_flows_d444); end
  def test_outputs_energy_flows_f444; assert_equal("Heat network", worksheet.outputs_energy_flows_f444); end
  def test_outputs_energy_flows_i444; assert_equal("G.R.01", worksheet.outputs_energy_flows_i444); end
  def test_outputs_energy_flows_j444; assert_equal("Global Solar", worksheet.outputs_energy_flows_j444); end
  def test_outputs_energy_flows_n444; assert_equal("Heat network", worksheet.outputs_energy_flows_n444); end
  def test_outputs_energy_flows_v444; assert_in_delta(0.12363095945772125, worksheet.outputs_energy_flows_v444, 0.002); end
  def test_outputs_energy_flows_w444; assert_in_delta(0.12911407085047708, worksheet.outputs_energy_flows_w444, 0.002); end
  def test_outputs_energy_flows_x444; assert_in_delta(0.1404991930445638, worksheet.outputs_energy_flows_x444, 0.002); end
  def test_outputs_energy_flows_y444; assert_in_delta(0.15254654134596896, worksheet.outputs_energy_flows_y444, 0.002); end
  def test_outputs_energy_flows_z444; assert_in_delta(0.16400500584550193, worksheet.outputs_energy_flows_z444, 0.002); end
  def test_outputs_energy_flows_aa444; assert_in_delta(0.17427730964725419, worksheet.outputs_energy_flows_aa444, 0.002); end
  def test_outputs_energy_flows_ab444; assert_in_delta(0.18417225049468475, worksheet.outputs_energy_flows_ab444, 0.002); end
  def test_outputs_energy_flows_ac444; assert_in_delta(0.19292978741370856, worksheet.outputs_energy_flows_ac444, 0.002); end
  def test_outputs_energy_flows_ad444; assert_in_delta(0.20140058856537202, worksheet.outputs_energy_flows_ad444, 0.002); end
  def test_outputs_energy_flows_d446; assert_equal("Solar", worksheet.outputs_energy_flows_d446); end
  def test_outputs_energy_flows_f446; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f446); end
  def test_outputs_energy_flows_i446; assert_equal("G.E.02", worksheet.outputs_energy_flows_i446); end
  def test_outputs_energy_flows_j446; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j446); end
  def test_outputs_energy_flows_p446; assert_equal("Solar", worksheet.outputs_energy_flows_p446); end
  def test_outputs_energy_flows_v446; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v446, 0.002); end
  def test_outputs_energy_flows_w446; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w446, 0.002); end
  def test_outputs_energy_flows_x446; assert_in_delta(0.8540685748799999, worksheet.outputs_energy_flows_x446, 0.002); end
  def test_outputs_energy_flows_y446; assert_in_delta(0.9525630002399997, worksheet.outputs_energy_flows_y446, 0.002); end
  def test_outputs_energy_flows_z446; assert_in_epsilon(1.2794460883199998, worksheet.outputs_energy_flows_z446, 0.002); end
  def test_outputs_energy_flows_aa446; assert_in_epsilon(1.4798620943999996, worksheet.outputs_energy_flows_aa446, 0.002); end
  def test_outputs_energy_flows_ab446; assert_in_epsilon(1.6179707750399994, worksheet.outputs_energy_flows_ab446, 0.002); end
  def test_outputs_energy_flows_ac446; assert_in_epsilon(2.7839641356, worksheet.outputs_energy_flows_ac446, 0.002); end
  def test_outputs_energy_flows_ad446; assert_in_epsilon(3.8454671267999982, worksheet.outputs_energy_flows_ad446, 0.002); end
  def test_outputs_energy_flows_d448; assert_equal("Wind", worksheet.outputs_energy_flows_d448); end
  def test_outputs_energy_flows_f448; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f448); end
  def test_outputs_energy_flows_i448; assert_equal("G.E.02", worksheet.outputs_energy_flows_i448); end
  def test_outputs_energy_flows_j448; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j448); end
  def test_outputs_energy_flows_p448; assert_equal("Wind", worksheet.outputs_energy_flows_p448); end
  def test_outputs_energy_flows_v448; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v448, 0.002); end
  def test_outputs_energy_flows_w448; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w448, 0.002); end
  def test_outputs_energy_flows_x448; assert_in_epsilon(2.9258313263999995, worksheet.outputs_energy_flows_x448, 0.002); end
  def test_outputs_energy_flows_y448; assert_in_epsilon(3.1616928287999997, worksheet.outputs_energy_flows_y448, 0.002); end
  def test_outputs_energy_flows_z448; assert_in_epsilon(2.8244683152, worksheet.outputs_energy_flows_z448, 0.002); end
  def test_outputs_energy_flows_aa448; assert_in_epsilon(1.8673263071999997, worksheet.outputs_energy_flows_aa448, 0.002); end
  def test_outputs_energy_flows_ab448; assert_in_epsilon(2.5776247679999993, worksheet.outputs_energy_flows_ab448, 0.002); end
  def test_outputs_energy_flows_ac448; assert_in_epsilon(3.7875431519999996, worksheet.outputs_energy_flows_ac448, 0.002); end
  def test_outputs_energy_flows_ad448; assert_in_epsilon(4.674311711999999, worksheet.outputs_energy_flows_ad448, 0.002); end
  def test_outputs_energy_flows_d450; assert_equal("Marine", worksheet.outputs_energy_flows_d450); end
  def test_outputs_energy_flows_f450; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f450); end
  def test_outputs_energy_flows_i450; assert_equal("G.E.02", worksheet.outputs_energy_flows_i450); end
  def test_outputs_energy_flows_j450; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j450); end
  def test_outputs_energy_flows_p450; assert_equal("Marine", worksheet.outputs_energy_flows_p450); end
  def test_outputs_energy_flows_v450; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v450, 0.002); end
  def test_outputs_energy_flows_w450; assert_in_delta(0.0041656031999999996, worksheet.outputs_energy_flows_w450, 0.002); end
  def test_outputs_energy_flows_x450; assert_in_delta(0.00632414304, worksheet.outputs_energy_flows_x450, 0.002); end
  def test_outputs_energy_flows_y450; assert_in_delta(0.023794430400000004, worksheet.outputs_energy_flows_y450, 0.002); end
  def test_outputs_energy_flows_z450; assert_in_delta(0.06784884000000001, worksheet.outputs_energy_flows_z450, 0.002); end
  def test_outputs_energy_flows_aa450; assert_in_delta(0.11124054000000001, worksheet.outputs_energy_flows_aa450, 0.002); end
  def test_outputs_energy_flows_ab450; assert_in_delta(0.17830044000000003, worksheet.outputs_energy_flows_ab450, 0.002); end
  def test_outputs_energy_flows_ac450; assert_in_delta(0.270764208, worksheet.outputs_energy_flows_ac450, 0.002); end
  def test_outputs_energy_flows_ad450; assert_in_delta(0.32851461600000004, worksheet.outputs_energy_flows_ad450, 0.002); end
  def test_outputs_energy_flows_d452; assert_equal("Geothermal", worksheet.outputs_energy_flows_d452); end
  def test_outputs_energy_flows_f452; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f452); end
  def test_outputs_energy_flows_i452; assert_equal("G.E.02", worksheet.outputs_energy_flows_i452); end
  def test_outputs_energy_flows_j452; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j452); end
  def test_outputs_energy_flows_p452; assert_equal("Geothermal", worksheet.outputs_energy_flows_p452); end
  def test_outputs_energy_flows_v452; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v452, 0.002); end
  def test_outputs_energy_flows_w452; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w452, 0.002); end
  def test_outputs_energy_flows_x452; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x452, 0.002); end
  def test_outputs_energy_flows_y452; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y452, 0.002); end
  def test_outputs_energy_flows_z452; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z452, 0.002); end
  def test_outputs_energy_flows_aa452; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa452, 0.002); end
  def test_outputs_energy_flows_ab452; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab452, 0.002); end
  def test_outputs_energy_flows_ac452; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac452, 0.002); end
  def test_outputs_energy_flows_ad452; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad452, 0.002); end
  def test_outputs_energy_flows_d454; assert_equal("Hydro", worksheet.outputs_energy_flows_d454); end
  def test_outputs_energy_flows_f454; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f454); end
  def test_outputs_energy_flows_i454; assert_equal("G.E.02", worksheet.outputs_energy_flows_i454); end
  def test_outputs_energy_flows_j454; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j454); end
  def test_outputs_energy_flows_p454; assert_equal("Hydro", worksheet.outputs_energy_flows_p454); end
  def test_outputs_energy_flows_v454; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v454, 0.002); end
  def test_outputs_energy_flows_w454; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w454, 0.002); end
  def test_outputs_energy_flows_x454; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x454, 0.002); end
  def test_outputs_energy_flows_y454; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y454, 0.002); end
  def test_outputs_energy_flows_z454; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z454, 0.002); end
  def test_outputs_energy_flows_aa454; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa454, 0.002); end
  def test_outputs_energy_flows_ab454; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab454, 0.002); end
  def test_outputs_energy_flows_ac454; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac454, 0.002); end
  def test_outputs_energy_flows_ad454; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad454, 0.002); end
  def test_outputs_energy_flows_d456; assert_equal("Solar", worksheet.outputs_energy_flows_d456); end
  def test_outputs_energy_flows_f456; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f456); end
  def test_outputs_energy_flows_i456; assert_equal("G.L.01", worksheet.outputs_energy_flows_i456); end
  def test_outputs_energy_flows_j456; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j456); end
  def test_outputs_energy_flows_p456; assert_equal("Solar", worksheet.outputs_energy_flows_p456); end
  def test_outputs_energy_flows_v456; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v456, 0.002); end
  def test_outputs_energy_flows_w456; assert_in_delta(0.10222882078475562, worksheet.outputs_energy_flows_w456, 0.002); end
  def test_outputs_energy_flows_x456; assert_in_delta(0.6496021227566944, worksheet.outputs_energy_flows_x456, 0.002); end
  def test_outputs_energy_flows_y456; assert_in_delta(0.9377327147182917, worksheet.outputs_energy_flows_y456, 0.002); end
  def test_outputs_energy_flows_z456; assert_in_epsilon(1.2399989497774486, worksheet.outputs_energy_flows_z456, 0.002); end
  def test_outputs_energy_flows_aa456; assert_in_epsilon(1.4151415461711485, worksheet.outputs_energy_flows_aa456, 0.002); end
  def test_outputs_energy_flows_ab456; assert_in_epsilon(1.3516736881434415, worksheet.outputs_energy_flows_ab456, 0.002); end
  def test_outputs_energy_flows_ac456; assert_in_epsilon(2.1019364453115243, worksheet.outputs_energy_flows_ac456, 0.002); end
  def test_outputs_energy_flows_ad456; assert_in_epsilon(2.6089339951097914, worksheet.outputs_energy_flows_ad456, 0.002); end
  def test_outputs_energy_flows_d458; assert_equal("Power plants", worksheet.outputs_energy_flows_d458); end
  def test_outputs_energy_flows_f458; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f458); end
  def test_outputs_energy_flows_i458; assert_equal("G.L.01", worksheet.outputs_energy_flows_i458); end
  def test_outputs_energy_flows_j458; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j458); end
  def test_outputs_energy_flows_k458; assert_equal("G.L.02", worksheet.outputs_energy_flows_k458); end
  def test_outputs_energy_flows_l458; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_l458); end
  def test_outputs_energy_flows_p458; assert_equal("Unabated power", worksheet.outputs_energy_flows_p458); end
  def test_outputs_energy_flows_r458; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r458); end
  def test_outputs_energy_flows_t458; assert_equal("Nuclear", worksheet.outputs_energy_flows_t458); end
  def test_outputs_energy_flows_v458; assert_in_epsilon(103.37283258250814, worksheet.outputs_energy_flows_v458, 0.002); end
  def test_outputs_energy_flows_w458; assert_in_epsilon(103.29373948236906, worksheet.outputs_energy_flows_w458, 0.002); end
  def test_outputs_energy_flows_x458; assert_in_epsilon(113.38118631597642, worksheet.outputs_energy_flows_x458, 0.002); end
  def test_outputs_energy_flows_y458; assert_in_epsilon(122.95194275363919, worksheet.outputs_energy_flows_y458, 0.002); end
  def test_outputs_energy_flows_z458; assert_in_epsilon(133.34447326324255, worksheet.outputs_energy_flows_z458, 0.002); end
  def test_outputs_energy_flows_aa458; assert_in_epsilon(143.56320787830052, worksheet.outputs_energy_flows_aa458, 0.002); end
  def test_outputs_energy_flows_ab458; assert_in_epsilon(150.71185629190174, worksheet.outputs_energy_flows_ab458, 0.002); end
  def test_outputs_energy_flows_ac458; assert_in_epsilon(155.0734063733448, worksheet.outputs_energy_flows_ac458, 0.002); end
  def test_outputs_energy_flows_ad458; assert_in_epsilon(160.14780568476212, worksheet.outputs_energy_flows_ad458, 0.002); end
  def test_outputs_energy_flows_d460; assert_equal("Geothermal", worksheet.outputs_energy_flows_d460); end
  def test_outputs_energy_flows_f460; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f460); end
  def test_outputs_energy_flows_i460; assert_equal("G.L.01", worksheet.outputs_energy_flows_i460); end
  def test_outputs_energy_flows_j460; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j460); end
  def test_outputs_energy_flows_p460; assert_equal("Geothermal", worksheet.outputs_energy_flows_p460); end
  def test_outputs_energy_flows_v460; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v460, 0.002); end
  def test_outputs_energy_flows_w460; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w460, 0.002); end
  def test_outputs_energy_flows_x460; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x460, 0.002); end
  def test_outputs_energy_flows_y460; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y460, 0.002); end
  def test_outputs_energy_flows_z460; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z460, 0.002); end
  def test_outputs_energy_flows_aa460; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa460, 0.002); end
  def test_outputs_energy_flows_ab460; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab460, 0.002); end
  def test_outputs_energy_flows_ac460; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac460, 0.002); end
  def test_outputs_energy_flows_ad460; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad460, 0.002); end
  def test_outputs_energy_flows_d462; assert_equal("Solid", worksheet.outputs_energy_flows_d462); end
  def test_outputs_energy_flows_f462; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f462); end
  def test_outputs_energy_flows_i462; assert_equal("G.FF.01", worksheet.outputs_energy_flows_i462); end
  def test_outputs_energy_flows_j462; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j462); end
  def test_outputs_energy_flows_p462; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p462); end
  def test_outputs_energy_flows_v462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v462||0), 0.002); end
  def test_outputs_energy_flows_w462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w462||0), 0.002); end
  def test_outputs_energy_flows_x462; assert_in_delta(0.015808574186624857, worksheet.outputs_energy_flows_x462, 0.002); end
  def test_outputs_energy_flows_y462; assert_in_delta(0.029961541618467768, worksheet.outputs_energy_flows_y462, 0.002); end
  def test_outputs_energy_flows_z462; assert_in_delta(0.1336334233956511, worksheet.outputs_energy_flows_z462, 0.002); end
  def test_outputs_energy_flows_aa462; assert_in_delta(0.2686265819913731, worksheet.outputs_energy_flows_aa462, 0.002); end
  def test_outputs_energy_flows_ab462; assert_in_delta(0.3811140455206557, worksheet.outputs_energy_flows_ab462, 0.002); end
  def test_outputs_energy_flows_ac462; assert_in_delta(0.5094842394998049, worksheet.outputs_energy_flows_ac462, 0.002); end
  def test_outputs_energy_flows_ad462; assert_in_delta(0.5204238984478399, worksheet.outputs_energy_flows_ad462, 0.002); end
  def test_outputs_energy_flows_d464; assert_equal("Gas", worksheet.outputs_energy_flows_d464); end
  def test_outputs_energy_flows_f464; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f464); end
  def test_outputs_energy_flows_i464; assert_equal("G.FF.03", worksheet.outputs_energy_flows_i464); end
  def test_outputs_energy_flows_j464; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j464); end
  def test_outputs_energy_flows_p464; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p464); end
  def test_outputs_energy_flows_v464; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v464, 0.002); end
  def test_outputs_energy_flows_w464; assert_in_delta(0.18190019578327632, worksheet.outputs_energy_flows_w464, 0.002); end
  def test_outputs_energy_flows_x464; assert_in_delta(0.1707326012155485, worksheet.outputs_energy_flows_x464, 0.002); end
  def test_outputs_energy_flows_y464; assert_in_delta(0.1528038622541856, worksheet.outputs_energy_flows_y464, 0.002); end
  def test_outputs_energy_flows_z464; assert_in_delta(0.26058517562151967, worksheet.outputs_energy_flows_z464, 0.002); end
  def test_outputs_energy_flows_aa464; assert_in_delta(0.3223518983896478, worksheet.outputs_energy_flows_aa464, 0.002); end
  def test_outputs_energy_flows_ab464; assert_in_delta(0.41160316916230827, worksheet.outputs_energy_flows_ab464, 0.002); end
  def test_outputs_energy_flows_ac464; assert_in_delta(0.4891048699198127, worksheet.outputs_energy_flows_ac464, 0.002); end
  def test_outputs_energy_flows_ad464; assert_in_delta(0.624508678137408, worksheet.outputs_energy_flows_ad464, 0.002); end
  def test_outputs_energy_flows_d466; assert_equal("Electricity", worksheet.outputs_energy_flows_d466); end
  def test_outputs_energy_flows_f466; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f466); end
  def test_outputs_energy_flows_i466; assert_equal("G.E.01", worksheet.outputs_energy_flows_i466); end
  def test_outputs_energy_flows_j466; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j466); end
  def test_outputs_energy_flows_p466; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p466); end
  def test_outputs_energy_flows_v466; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v466, 0.002); end
  def test_outputs_energy_flows_w466; assert_in_delta(0.011848631825382774, worksheet.outputs_energy_flows_w466, 0.002); end
  def test_outputs_energy_flows_x466; assert_in_delta(0.011680926177010576, worksheet.outputs_energy_flows_x466, 0.002); end
  def test_outputs_energy_flows_y466; assert_in_delta(0.010959667123937606, worksheet.outputs_energy_flows_y466, 0.002); end
  def test_outputs_energy_flows_z466; assert_in_delta(0.072959903245684, worksheet.outputs_energy_flows_z466, 0.002); end
  def test_outputs_energy_flows_aa466; assert_in_delta(0.19361344126777486, worksheet.outputs_energy_flows_aa466, 0.002); end
  def test_outputs_energy_flows_ab466; assert_in_delta(0.3279951383489014, worksheet.outputs_energy_flows_ab466, 0.002); end
  def test_outputs_energy_flows_ac466; assert_in_delta(0.5064873720779843, worksheet.outputs_energy_flows_ac466, 0.002); end
  def test_outputs_energy_flows_ad466; assert_in_delta(0.7354306868758388, worksheet.outputs_energy_flows_ad466, 0.002); end
  def test_outputs_energy_flows_d468; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d468); end
  def test_outputs_energy_flows_f468; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f468); end
  def test_outputs_energy_flows_i468; assert_equal("G.L.01", worksheet.outputs_energy_flows_i468); end
  def test_outputs_energy_flows_j468; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j468); end
  def test_outputs_energy_flows_p468; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p468); end
  def test_outputs_energy_flows_v468; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v468, 0.002); end
  def test_outputs_energy_flows_w468; assert_in_delta(0.05014340988501989, worksheet.outputs_energy_flows_w468, 0.002); end
  def test_outputs_energy_flows_x468; assert_in_delta(0.05523354806116208, worksheet.outputs_energy_flows_x468, 0.002); end
  def test_outputs_energy_flows_y468; assert_in_delta(0.05822399902707052, worksheet.outputs_energy_flows_y468, 0.002); end
  def test_outputs_energy_flows_z468; assert_in_delta(0.16348903071617166, worksheet.outputs_energy_flows_z468, 0.002); end
  def test_outputs_energy_flows_aa468; assert_in_delta(0.2962167073922899, worksheet.outputs_energy_flows_aa468, 0.002); end
  def test_outputs_energy_flows_ab468; assert_in_delta(0.424365455718822, worksheet.outputs_energy_flows_ab468, 0.002); end
  def test_outputs_energy_flows_ac468; assert_in_delta(0.5741798809251724, worksheet.outputs_energy_flows_ac468, 0.002); end
  def test_outputs_energy_flows_ad468; assert_in_delta(0.6858141872488365, worksheet.outputs_energy_flows_ad468, 0.002); end
  def test_outputs_energy_flows_d470; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d470); end
  def test_outputs_energy_flows_f470; assert_equal("Transport", worksheet.outputs_energy_flows_f470); end
  def test_outputs_energy_flows_i470; assert_equal("G.HY.01", worksheet.outputs_energy_flows_i470); end
  def test_outputs_energy_flows_j470; assert_equal("Global H2", worksheet.outputs_energy_flows_j470); end
  def test_outputs_energy_flows_p470; assert_equal("Global transport", worksheet.outputs_energy_flows_p470); end
  def test_outputs_energy_flows_v470; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v470, 0.002); end
  def test_outputs_energy_flows_w470; assert_in_delta(0.14360541772363922, worksheet.outputs_energy_flows_w470, 0.002); end
  def test_outputs_energy_flows_x470; assert_in_delta(0.14298855351802184, worksheet.outputs_energy_flows_x470, 0.002); end
  def test_outputs_energy_flows_y470; assert_in_delta(0.13550107196952046, worksheet.outputs_energy_flows_y470, 0.002); end
  def test_outputs_energy_flows_z470; assert_in_delta(0.11603160387732207, worksheet.outputs_energy_flows_z470, 0.002); end
  def test_outputs_energy_flows_aa470; assert_in_delta(0.09034181169773167, worksheet.outputs_energy_flows_aa470, 0.002); end
  def test_outputs_energy_flows_ab470; assert_in_delta(0.06168201467145384, worksheet.outputs_energy_flows_ab470, 0.002); end
  def test_outputs_energy_flows_ac470; assert_in_delta(0.0314108171342785, worksheet.outputs_energy_flows_ac470, 0.002); end
  def test_outputs_energy_flows_ad470; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad470||0), 0.002); end
  def test_outputs_energy_flows_d472; assert_equal("Solid", worksheet.outputs_energy_flows_d472); end
  def test_outputs_energy_flows_f472; assert_equal("Transport", worksheet.outputs_energy_flows_f472); end
  def test_outputs_energy_flows_i472; assert_equal("G.C.01", worksheet.outputs_energy_flows_i472); end
  def test_outputs_energy_flows_j472; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j472); end
  def test_outputs_energy_flows_p472; assert_equal("Global transport", worksheet.outputs_energy_flows_p472); end
  def test_outputs_energy_flows_v472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v472||0), 0.002); end
  def test_outputs_energy_flows_w472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w472||0), 0.002); end
  def test_outputs_energy_flows_x472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x472||0), 0.002); end
  def test_outputs_energy_flows_y472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y472||0), 0.002); end
  def test_outputs_energy_flows_z472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z472||0), 0.002); end
  def test_outputs_energy_flows_aa472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa472||0), 0.002); end
  def test_outputs_energy_flows_ab472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab472||0), 0.002); end
  def test_outputs_energy_flows_ac472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac472||0), 0.002); end
  def test_outputs_energy_flows_ad472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad472||0), 0.002); end
  def test_outputs_energy_flows_d474; assert_equal("Liquid", worksheet.outputs_energy_flows_d474); end
  def test_outputs_energy_flows_f474; assert_equal("Transport", worksheet.outputs_energy_flows_f474); end
  def test_outputs_energy_flows_i474; assert_equal("G.C.02", worksheet.outputs_energy_flows_i474); end
  def test_outputs_energy_flows_j474; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j474); end
  def test_outputs_energy_flows_p474; assert_equal("Global transport", worksheet.outputs_energy_flows_p474); end
  def test_outputs_energy_flows_v474; assert_in_epsilon(98.39054841752521, worksheet.outputs_energy_flows_v474, 0.002); end
  def test_outputs_energy_flows_w474; assert_in_epsilon(105.86292976774135, worksheet.outputs_energy_flows_w474, 0.002); end
  def test_outputs_energy_flows_x474; assert_in_epsilon(116.68673933519179, worksheet.outputs_energy_flows_x474, 0.002); end
  def test_outputs_energy_flows_y474; assert_in_epsilon(125.39334769411627, worksheet.outputs_energy_flows_y474, 0.002); end
  def test_outputs_energy_flows_z474; assert_in_epsilon(132.8660841659394, worksheet.outputs_energy_flows_z474, 0.002); end
  def test_outputs_energy_flows_aa474; assert_in_epsilon(138.1573213541533, worksheet.outputs_energy_flows_aa474, 0.002); end
  def test_outputs_energy_flows_ab474; assert_in_epsilon(142.25553162304283, worksheet.outputs_energy_flows_ab474, 0.002); end
  def test_outputs_energy_flows_ac474; assert_in_epsilon(145.95585283561493, worksheet.outputs_energy_flows_ac474, 0.002); end
  def test_outputs_energy_flows_ad474; assert_in_epsilon(149.4220560373985, worksheet.outputs_energy_flows_ad474, 0.002); end
  def test_outputs_energy_flows_d476; assert_equal("Gas", worksheet.outputs_energy_flows_d476); end
  def test_outputs_energy_flows_f476; assert_equal("Transport", worksheet.outputs_energy_flows_f476); end
  def test_outputs_energy_flows_i476; assert_equal("G.C.03", worksheet.outputs_energy_flows_i476); end
  def test_outputs_energy_flows_j476; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j476); end
  def test_outputs_energy_flows_p476; assert_equal("Global transport", worksheet.outputs_energy_flows_p476); end
  def test_outputs_energy_flows_v476; assert_in_delta(0.3471995357508835, worksheet.outputs_energy_flows_v476, 0.002); end
  def test_outputs_energy_flows_w476; assert_in_delta(0.7896803613558725, worksheet.outputs_energy_flows_w476, 0.002); end
  def test_outputs_energy_flows_x476; assert_in_epsilon(1.1619706661451512, worksheet.outputs_energy_flows_x476, 0.002); end
  def test_outputs_energy_flows_y476; assert_in_epsilon(1.5776232963986192, worksheet.outputs_energy_flows_y476, 0.002); end
  def test_outputs_energy_flows_z476; assert_in_epsilon(2.0198544253434547, worksheet.outputs_energy_flows_z476, 0.002); end
  def test_outputs_energy_flows_aa476; assert_in_epsilon(2.460705556190567, worksheet.outputs_energy_flows_aa476, 0.002); end
  def test_outputs_energy_flows_ab476; assert_in_epsilon(2.88985654993734, worksheet.outputs_energy_flows_ab476, 0.002); end
  def test_outputs_energy_flows_ac476; assert_in_epsilon(3.3126527055707653, worksheet.outputs_energy_flows_ac476, 0.002); end
  def test_outputs_energy_flows_ad476; assert_in_epsilon(3.723944042025474, worksheet.outputs_energy_flows_ad476, 0.002); end
  def test_outputs_energy_flows_d478; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d478); end
  def test_outputs_energy_flows_f478; assert_equal("Transport", worksheet.outputs_energy_flows_f478); end
  def test_outputs_energy_flows_i478; assert_equal("G.E.01", worksheet.outputs_energy_flows_i478); end
  def test_outputs_energy_flows_j478; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j478); end
  def test_outputs_energy_flows_p478; assert_equal("Global transport", worksheet.outputs_energy_flows_p478); end
  def test_outputs_energy_flows_v478; assert_in_epsilon(1.6221723137825577, worksheet.outputs_energy_flows_v478, 0.002); end
  def test_outputs_energy_flows_w478; assert_in_epsilon(2.374592249060187, worksheet.outputs_energy_flows_w478, 0.002); end
  def test_outputs_energy_flows_x478; assert_in_epsilon(2.977600393852982, worksheet.outputs_energy_flows_x478, 0.002); end
  def test_outputs_energy_flows_y478; assert_in_epsilon(3.604820723994971, worksheet.outputs_energy_flows_y478, 0.002); end
  def test_outputs_energy_flows_z478; assert_in_epsilon(4.234278644133776, worksheet.outputs_energy_flows_z478, 0.002); end
  def test_outputs_energy_flows_aa478; assert_in_epsilon(4.8456242002036145, worksheet.outputs_energy_flows_aa478, 0.002); end
  def test_outputs_energy_flows_ab478; assert_in_epsilon(5.459434039919716, worksheet.outputs_energy_flows_ab478, 0.002); end
  def test_outputs_energy_flows_ac478; assert_in_epsilon(6.080402700901868, worksheet.outputs_energy_flows_ac478, 0.002); end
  def test_outputs_energy_flows_ad478; assert_in_epsilon(6.720790431930237, worksheet.outputs_energy_flows_ad478, 0.002); end
  def test_outputs_energy_flows_d480; assert_equal("Solid", worksheet.outputs_energy_flows_d480); end
  def test_outputs_energy_flows_f480; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f480); end
  def test_outputs_energy_flows_i480; assert_equal("G.C.01", worksheet.outputs_energy_flows_i480); end
  def test_outputs_energy_flows_j480; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j480); end
  def test_outputs_energy_flows_k480; assert_equal("G.FF.01", worksheet.outputs_energy_flows_k480); end
  def test_outputs_energy_flows_l480; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_l480); end
  def test_outputs_energy_flows_p480; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p480); end
  def test_outputs_energy_flows_v480; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_flows_v480, 0.002); end
  def test_outputs_energy_flows_w480; assert_in_epsilon(52.662638234121516, worksheet.outputs_energy_flows_w480, 0.002); end
  def test_outputs_energy_flows_x480; assert_in_epsilon(56.258200763341726, worksheet.outputs_energy_flows_x480, 0.002); end
  def test_outputs_energy_flows_y480; assert_in_epsilon(59.76222804822574, worksheet.outputs_energy_flows_y480, 0.002); end
  def test_outputs_energy_flows_z480; assert_in_epsilon(62.93770782435111, worksheet.outputs_energy_flows_z480, 0.002); end
  def test_outputs_energy_flows_aa480; assert_in_epsilon(65.78981415006456, worksheet.outputs_energy_flows_aa480, 0.002); end
  def test_outputs_energy_flows_ab480; assert_in_epsilon(68.769418858025, worksheet.outputs_energy_flows_ab480, 0.002); end
  def test_outputs_energy_flows_ac480; assert_in_epsilon(71.79091331068926, worksheet.outputs_energy_flows_ac480, 0.002); end
  def test_outputs_energy_flows_ad480; assert_in_epsilon(74.97560347260675, worksheet.outputs_energy_flows_ad480, 0.002); end
  def test_outputs_energy_flows_d482; assert_equal("Liquid", worksheet.outputs_energy_flows_d482); end
  def test_outputs_energy_flows_f482; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f482); end
  def test_outputs_energy_flows_i482; assert_equal("G.C.02", worksheet.outputs_energy_flows_i482); end
  def test_outputs_energy_flows_j482; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j482); end
  def test_outputs_energy_flows_k482; assert_equal("G.FF.02", worksheet.outputs_energy_flows_k482); end
  def test_outputs_energy_flows_l482; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_l482); end
  def test_outputs_energy_flows_p482; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p482); end
  def test_outputs_energy_flows_v482; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_flows_v482, 0.002); end
  def test_outputs_energy_flows_w482; assert_in_epsilon(32.5914041713648, worksheet.outputs_energy_flows_w482, 0.002); end
  def test_outputs_energy_flows_x482; assert_in_epsilon(34.710604827122424, worksheet.outputs_energy_flows_x482, 0.002); end
  def test_outputs_energy_flows_y482; assert_in_epsilon(38.13829244080774, worksheet.outputs_energy_flows_y482, 0.002); end
  def test_outputs_energy_flows_z482; assert_in_epsilon(41.70138261106817, worksheet.outputs_energy_flows_z482, 0.002); end
  def test_outputs_energy_flows_aa482; assert_in_epsilon(45.270002925022254, worksheet.outputs_energy_flows_aa482, 0.002); end
  def test_outputs_energy_flows_ab482; assert_in_epsilon(49.27992628934742, worksheet.outputs_energy_flows_ab482, 0.002); end
  def test_outputs_energy_flows_ac482; assert_in_epsilon(53.4464372688997, worksheet.outputs_energy_flows_ac482, 0.002); end
  def test_outputs_energy_flows_ad482; assert_in_epsilon(58.165726404609295, worksheet.outputs_energy_flows_ad482, 0.002); end
  def test_outputs_energy_flows_d484; assert_equal("Gas", worksheet.outputs_energy_flows_d484); end
  def test_outputs_energy_flows_f484; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f484); end
  def test_outputs_energy_flows_i484; assert_equal("G.C.03", worksheet.outputs_energy_flows_i484); end
  def test_outputs_energy_flows_j484; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j484); end
  def test_outputs_energy_flows_k484; assert_equal("G.FF.03", worksheet.outputs_energy_flows_k484); end
  def test_outputs_energy_flows_l484; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_l484); end
  def test_outputs_energy_flows_p484; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p484); end
  def test_outputs_energy_flows_v484; assert_in_epsilon(27.233246077496677, worksheet.outputs_energy_flows_v484, 0.002); end
  def test_outputs_energy_flows_w484; assert_in_epsilon(28.623908778702972, worksheet.outputs_energy_flows_w484, 0.002); end
  def test_outputs_energy_flows_x484; assert_in_epsilon(30.55290093738514, worksheet.outputs_energy_flows_x484, 0.002); end
  def test_outputs_energy_flows_y484; assert_in_epsilon(32.77828226532515, worksheet.outputs_energy_flows_y484, 0.002); end
  def test_outputs_energy_flows_z484; assert_in_epsilon(35.00073201282161, worksheet.outputs_energy_flows_z484, 0.002); end
  def test_outputs_energy_flows_aa484; assert_in_epsilon(37.153407344346405, worksheet.outputs_energy_flows_aa484, 0.002); end
  def test_outputs_energy_flows_ab484; assert_in_epsilon(39.46812875116846, worksheet.outputs_energy_flows_ab484, 0.002); end
  def test_outputs_energy_flows_ac484; assert_in_epsilon(41.80203249155731, worksheet.outputs_energy_flows_ac484, 0.002); end
  def test_outputs_energy_flows_ad484; assert_in_epsilon(44.37848801208401, worksheet.outputs_energy_flows_ad484, 0.002); end
  def test_outputs_energy_flows_d486; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d486); end
  def test_outputs_energy_flows_f486; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f486); end
  def test_outputs_energy_flows_i486; assert_equal("G.E.01", worksheet.outputs_energy_flows_i486); end
  def test_outputs_energy_flows_j486; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j486); end
  def test_outputs_energy_flows_p486; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p486); end
  def test_outputs_energy_flows_v486; assert_in_epsilon(29.285413529720426, worksheet.outputs_energy_flows_v486, 0.002); end
  def test_outputs_energy_flows_w486; assert_in_epsilon(30.50876144050821, worksheet.outputs_energy_flows_w486, 0.002); end
  def test_outputs_energy_flows_x486; assert_in_epsilon(32.45796214673477, worksheet.outputs_energy_flows_x486, 0.002); end
  def test_outputs_energy_flows_y486; assert_in_epsilon(34.54644635237625, worksheet.outputs_energy_flows_y486, 0.002); end
  def test_outputs_energy_flows_z486; assert_in_epsilon(36.58870242315401, worksheet.outputs_energy_flows_z486, 0.002); end
  def test_outputs_energy_flows_aa486; assert_in_epsilon(38.495964146263525, worksheet.outputs_energy_flows_aa486, 0.002); end
  def test_outputs_energy_flows_ab486; assert_in_epsilon(40.52795923221533, worksheet.outputs_energy_flows_ab486, 0.002); end
  def test_outputs_energy_flows_ac486; assert_in_epsilon(42.59127077930369, worksheet.outputs_energy_flows_ac486, 0.002); end
  def test_outputs_energy_flows_ad486; assert_in_epsilon(44.86077220939399, worksheet.outputs_energy_flows_ad486, 0.002); end
  def test_outputs_energy_flows_d488; assert_equal("Heat network", worksheet.outputs_energy_flows_d488); end
  def test_outputs_energy_flows_f488; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f488); end
  def test_outputs_energy_flows_i488; assert_equal("G.H.01", worksheet.outputs_energy_flows_i488); end
  def test_outputs_energy_flows_j488; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j488); end
  def test_outputs_energy_flows_p488; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p488); end
  def test_outputs_energy_flows_v488; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_flows_v488, 0.002); end
  def test_outputs_energy_flows_w488; assert_in_epsilon(5.521868251795736, worksheet.outputs_energy_flows_w488, 0.002); end
  def test_outputs_energy_flows_x488; assert_in_epsilon(5.871329228835805, worksheet.outputs_energy_flows_x488, 0.002); end
  def test_outputs_energy_flows_y488; assert_in_epsilon(6.316838101544244, worksheet.outputs_energy_flows_y488, 0.002); end
  def test_outputs_energy_flows_z488; assert_in_epsilon(6.763391589250489, worksheet.outputs_energy_flows_z488, 0.002); end
  def test_outputs_energy_flows_aa488; assert_in_epsilon(7.191392401910964, worksheet.outputs_energy_flows_aa488, 0.002); end
  def test_outputs_energy_flows_ab488; assert_in_epsilon(7.66196773713294, worksheet.outputs_energy_flows_ab488, 0.002); end
  def test_outputs_energy_flows_ac488; assert_in_epsilon(8.142660323135106, worksheet.outputs_energy_flows_ac488, 0.002); end
  def test_outputs_energy_flows_ad488; assert_in_epsilon(8.683238405900775, worksheet.outputs_energy_flows_ad488, 0.002); end
  def test_outputs_energy_flows_d490; assert_equal("Solid", worksheet.outputs_energy_flows_d490); end
  def test_outputs_energy_flows_f490; assert_equal("Buildings", worksheet.outputs_energy_flows_f490); end
  def test_outputs_energy_flows_i490; assert_equal("G.C.01", worksheet.outputs_energy_flows_i490); end
  def test_outputs_energy_flows_j490; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j490); end
  def test_outputs_energy_flows_k490; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k490); end
  def test_outputs_energy_flows_l490; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l490); end
  def test_outputs_energy_flows_n490; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n490); end
  def test_outputs_energy_flows_o490; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o490); end
  def test_outputs_energy_flows_p490; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p490); end
  def test_outputs_energy_flows_q490; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q490); end
  def test_outputs_energy_flows_r490; assert_equal("non-residential", worksheet.outputs_energy_flows_r490); end
  def test_outputs_energy_flows_v490; assert_in_epsilon(36.60270678533933, worksheet.outputs_energy_flows_v490, 0.002); end
  def test_outputs_energy_flows_w490; assert_in_epsilon(35.970738898765866, worksheet.outputs_energy_flows_w490, 0.002); end
  def test_outputs_energy_flows_x490; assert_in_epsilon(34.486692320220556, worksheet.outputs_energy_flows_x490, 0.002); end
  def test_outputs_energy_flows_y490; assert_in_epsilon(32.72901860096642, worksheet.outputs_energy_flows_y490, 0.002); end
  def test_outputs_energy_flows_z490; assert_in_epsilon(30.87527742969009, worksheet.outputs_energy_flows_z490, 0.002); end
  def test_outputs_energy_flows_aa490; assert_in_epsilon(29.294019139946187, worksheet.outputs_energy_flows_aa490, 0.002); end
  def test_outputs_energy_flows_ab490; assert_in_epsilon(27.640359705722382, worksheet.outputs_energy_flows_ab490, 0.002); end
  def test_outputs_energy_flows_ac490; assert_in_epsilon(26.34399018319853, worksheet.outputs_energy_flows_ac490, 0.002); end
  def test_outputs_energy_flows_ad490; assert_in_epsilon(24.95361508773895, worksheet.outputs_energy_flows_ad490, 0.002); end
  def test_outputs_energy_flows_d492; assert_equal("Liquid", worksheet.outputs_energy_flows_d492); end
  def test_outputs_energy_flows_f492; assert_equal("Buildings", worksheet.outputs_energy_flows_f492); end
  def test_outputs_energy_flows_i492; assert_equal("G.C.02", worksheet.outputs_energy_flows_i492); end
  def test_outputs_energy_flows_j492; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j492); end
  def test_outputs_energy_flows_n492; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n492); end
  def test_outputs_energy_flows_o492; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o492); end
  def test_outputs_energy_flows_p492; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p492); end
  def test_outputs_energy_flows_q492; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q492); end
  def test_outputs_energy_flows_r492; assert_equal("non-residential", worksheet.outputs_energy_flows_r492); end
  def test_outputs_energy_flows_v492; assert_in_epsilon(9.286178142155208, worksheet.outputs_energy_flows_v492, 0.002); end
  def test_outputs_energy_flows_w492; assert_in_epsilon(9.87794588368314, worksheet.outputs_energy_flows_w492, 0.002); end
  def test_outputs_energy_flows_x492; assert_in_epsilon(10.282740668732435, worksheet.outputs_energy_flows_x492, 0.002); end
  def test_outputs_energy_flows_y492; assert_in_epsilon(10.613194355554196, worksheet.outputs_energy_flows_y492, 0.002); end
  def test_outputs_energy_flows_z492; assert_in_epsilon(10.84844315106692, worksheet.outputs_energy_flows_z492, 0.002); end
  def test_outputs_energy_flows_aa492; assert_in_epsilon(10.9590999181948, worksheet.outputs_energy_flows_aa492, 0.002); end
  def test_outputs_energy_flows_ab492; assert_in_epsilon(10.983778240039005, worksheet.outputs_energy_flows_ab492, 0.002); end
  def test_outputs_energy_flows_ac492; assert_in_epsilon(10.895720342739217, worksheet.outputs_energy_flows_ac492, 0.002); end
  def test_outputs_energy_flows_ad492; assert_in_epsilon(10.734522468178834, worksheet.outputs_energy_flows_ad492, 0.002); end
  def test_outputs_energy_flows_d494; assert_equal("Gas", worksheet.outputs_energy_flows_d494); end
  def test_outputs_energy_flows_f494; assert_equal("Buildings", worksheet.outputs_energy_flows_f494); end
  def test_outputs_energy_flows_i494; assert_equal("G.C.03", worksheet.outputs_energy_flows_i494); end
  def test_outputs_energy_flows_j494; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j494); end
  def test_outputs_energy_flows_n494; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n494); end
  def test_outputs_energy_flows_o494; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o494); end
  def test_outputs_energy_flows_p494; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p494); end
  def test_outputs_energy_flows_q494; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q494); end
  def test_outputs_energy_flows_r494; assert_equal("non-residential", worksheet.outputs_energy_flows_r494); end
  def test_outputs_energy_flows_v494; assert_in_epsilon(22.00838896692654, worksheet.outputs_energy_flows_v494, 0.002); end
  def test_outputs_energy_flows_w494; assert_in_epsilon(24.045366993399064, worksheet.outputs_energy_flows_w494, 0.002); end
  def test_outputs_energy_flows_x494; assert_in_epsilon(25.889714544155495, worksheet.outputs_energy_flows_x494, 0.002); end
  def test_outputs_energy_flows_y494; assert_in_epsilon(27.612070220110866, worksheet.outputs_energy_flows_y494, 0.002); end
  def test_outputs_energy_flows_z494; assert_in_epsilon(29.149438059621602, worksheet.outputs_energy_flows_z494, 0.002); end
  def test_outputs_energy_flows_aa494; assert_in_epsilon(30.40246919126859, worksheet.outputs_energy_flows_aa494, 0.002); end
  def test_outputs_energy_flows_ab494; assert_in_epsilon(31.458392960969686, worksheet.outputs_energy_flows_ab494, 0.002); end
  def test_outputs_energy_flows_ac494; assert_in_epsilon(32.22231009810011, worksheet.outputs_energy_flows_ac494, 0.002); end
  def test_outputs_energy_flows_ad494; assert_in_epsilon(32.7992199818712, worksheet.outputs_energy_flows_ad494, 0.002); end
  def test_outputs_energy_flows_d496; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d496); end
  def test_outputs_energy_flows_f496; assert_equal("Buildings", worksheet.outputs_energy_flows_f496); end
  def test_outputs_energy_flows_i496; assert_equal("G.E.01", worksheet.outputs_energy_flows_i496); end
  def test_outputs_energy_flows_j496; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j496); end
  def test_outputs_energy_flows_n496; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n496); end
  def test_outputs_energy_flows_o496; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o496); end
  def test_outputs_energy_flows_p496; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p496); end
  def test_outputs_energy_flows_q496; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q496); end
  def test_outputs_energy_flows_r496; assert_equal("non-residential", worksheet.outputs_energy_flows_r496); end
  def test_outputs_energy_flows_v496; assert_in_epsilon(36.79584224618469, worksheet.outputs_energy_flows_v496, 0.002); end
  def test_outputs_energy_flows_w496; assert_in_epsilon(42.06090617095327, worksheet.outputs_energy_flows_w496, 0.002); end
  def test_outputs_energy_flows_x496; assert_in_epsilon(47.71007454067013, worksheet.outputs_energy_flows_x496, 0.002); end
  def test_outputs_energy_flows_y496; assert_in_epsilon(53.55548382274458, worksheet.outputs_energy_flows_y496, 0.002); end
  def test_outputs_energy_flows_z496; assert_in_epsilon(59.478820650868755, worksheet.outputs_energy_flows_z496, 0.002); end
  def test_outputs_energy_flows_aa496; assert_in_epsilon(65.29464523870446, worksheet.outputs_energy_flows_aa496, 0.002); end
  def test_outputs_energy_flows_ab496; assert_in_epsilon(71.07693275168836, worksheet.outputs_energy_flows_ab496, 0.002); end
  def test_outputs_energy_flows_ac496; assert_in_epsilon(76.61179286374829, worksheet.outputs_energy_flows_ac496, 0.002); end
  def test_outputs_energy_flows_ad496; assert_in_epsilon(81.99325983801518, worksheet.outputs_energy_flows_ad496, 0.002); end
  def test_outputs_energy_flows_d498; assert_equal("Heat network", worksheet.outputs_energy_flows_d498); end
  def test_outputs_energy_flows_f498; assert_equal("Buildings", worksheet.outputs_energy_flows_f498); end
  def test_outputs_energy_flows_i498; assert_equal("G.H.01", worksheet.outputs_energy_flows_i498); end
  def test_outputs_energy_flows_j498; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j498); end
  def test_outputs_energy_flows_n498; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n498); end
  def test_outputs_energy_flows_o498; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o498); end
  def test_outputs_energy_flows_p498; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p498); end
  def test_outputs_energy_flows_q498; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q498); end
  def test_outputs_energy_flows_r498; assert_equal("non-residential", worksheet.outputs_energy_flows_r498); end
  def test_outputs_energy_flows_v498; assert_in_epsilon(5.601306145677334, worksheet.outputs_energy_flows_v498, 0.002); end
  def test_outputs_energy_flows_w498; assert_in_epsilon(5.890769318374725, worksheet.outputs_energy_flows_w498, 0.002); end
  def test_outputs_energy_flows_x498; assert_in_epsilon(6.214716289531424, worksheet.outputs_energy_flows_x498, 0.002); end
  def test_outputs_energy_flows_y498; assert_in_epsilon(6.465909981208657, worksheet.outputs_energy_flows_y498, 0.002); end
  def test_outputs_energy_flows_z498; assert_in_epsilon(6.628729237557376, worksheet.outputs_energy_flows_z498, 0.002); end
  def test_outputs_energy_flows_aa498; assert_in_epsilon(6.67921807241306, worksheet.outputs_energy_flows_aa498, 0.002); end
  def test_outputs_energy_flows_ab498; assert_in_epsilon(6.631160235606925, worksheet.outputs_energy_flows_ab498, 0.002); end
  def test_outputs_energy_flows_ac498; assert_in_epsilon(6.461810268332378, worksheet.outputs_energy_flows_ac498, 0.002); end
  def test_outputs_energy_flows_ad498; assert_in_epsilon(6.193113590797987, worksheet.outputs_energy_flows_ad498, 0.002); end
  def test_outputs_energy_flows_d500; assert_equal("Solar", worksheet.outputs_energy_flows_d500); end
  def test_outputs_energy_flows_f500; assert_equal("Buildings", worksheet.outputs_energy_flows_f500); end
  def test_outputs_energy_flows_i500; assert_equal("G.R.01", worksheet.outputs_energy_flows_i500); end
  def test_outputs_energy_flows_j500; assert_equal("Global Solar", worksheet.outputs_energy_flows_j500); end
  def test_outputs_energy_flows_k500; assert_equal("G.R.07", worksheet.outputs_energy_flows_k500); end
  def test_outputs_energy_flows_l500; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_l500); end
  def test_outputs_energy_flows_n500; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n500); end
  def test_outputs_energy_flows_o500; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o500); end
  def test_outputs_energy_flows_p500; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p500); end
  def test_outputs_energy_flows_q500; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q500); end
  def test_outputs_energy_flows_r500; assert_equal("non-residential", worksheet.outputs_energy_flows_r500); end
  def test_outputs_energy_flows_v500; assert_in_epsilon(5.993633125060281, worksheet.outputs_energy_flows_v500, 0.002); end
  def test_outputs_energy_flows_w500; assert_in_epsilon(6.804473006868597, worksheet.outputs_energy_flows_w500, 0.002); end
  def test_outputs_energy_flows_x500; assert_in_epsilon(8.027246100459884, worksheet.outputs_energy_flows_x500, 0.002); end
  def test_outputs_energy_flows_y500; assert_in_epsilon(9.337098113101193, worksheet.outputs_energy_flows_y500, 0.002); end
  def test_outputs_energy_flows_z500; assert_in_epsilon(10.707629206793692, worksheet.outputs_energy_flows_z500, 0.002); end
  def test_outputs_energy_flows_aa500; assert_in_epsilon(12.094298396056264, worksheet.outputs_energy_flows_aa500, 0.002); end
  def test_outputs_energy_flows_ab500; assert_in_epsilon(13.505721156233625, worksheet.outputs_energy_flows_ab500, 0.002); end
  def test_outputs_energy_flows_ac500; assert_in_epsilon(14.887605242428666, worksheet.outputs_energy_flows_ac500, 0.002); end
  def test_outputs_energy_flows_ad500; assert_in_epsilon(16.25056186577388, worksheet.outputs_energy_flows_ad500, 0.002); end
  def test_outputs_energy_flows_d502; assert_equal("Solid", worksheet.outputs_energy_flows_d502); end
  def test_outputs_energy_flows_f502; assert_equal("Other", worksheet.outputs_energy_flows_f502); end
  def test_outputs_energy_flows_i502; assert_equal("G.C.01", worksheet.outputs_energy_flows_i502); end
  def test_outputs_energy_flows_j502; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j502); end
  def test_outputs_energy_flows_k502; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k502); end
  def test_outputs_energy_flows_l502; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l502); end
  def test_outputs_energy_flows_n502; assert_equal("Arable.food", worksheet.outputs_energy_flows_n502); end
  def test_outputs_energy_flows_o502; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o502); end
  def test_outputs_energy_flows_v502; assert_in_delta(0.7356901397380771, worksheet.outputs_energy_flows_v502, 0.002); end
  def test_outputs_energy_flows_w502; assert_in_delta(0.7310455078584552, worksheet.outputs_energy_flows_w502, 0.002); end
  def test_outputs_energy_flows_x502; assert_in_delta(0.7449634156840245, worksheet.outputs_energy_flows_x502, 0.002); end
  def test_outputs_energy_flows_y502; assert_in_delta(0.7557579360382968, worksheet.outputs_energy_flows_y502, 0.002); end
  def test_outputs_energy_flows_z502; assert_in_delta(0.7653668138952447, worksheet.outputs_energy_flows_z502, 0.002); end
  def test_outputs_energy_flows_aa502; assert_in_delta(0.775478967810921, worksheet.outputs_energy_flows_aa502, 0.002); end
  def test_outputs_energy_flows_ab502; assert_in_delta(0.786006410151332, worksheet.outputs_energy_flows_ab502, 0.002); end
  def test_outputs_energy_flows_ac502; assert_in_delta(0.7938361027475862, worksheet.outputs_energy_flows_ac502, 0.002); end
  def test_outputs_energy_flows_ad502; assert_in_delta(0.802850949715927, worksheet.outputs_energy_flows_ad502, 0.002); end
  def test_outputs_energy_flows_d504; assert_equal("Liquid", worksheet.outputs_energy_flows_d504); end
  def test_outputs_energy_flows_f504; assert_equal("Other", worksheet.outputs_energy_flows_f504); end
  def test_outputs_energy_flows_i504; assert_equal("G.C.02", worksheet.outputs_energy_flows_i504); end
  def test_outputs_energy_flows_j504; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j504); end
  def test_outputs_energy_flows_n504; assert_equal("Arable.food", worksheet.outputs_energy_flows_n504); end
  def test_outputs_energy_flows_o504; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o504); end
  def test_outputs_energy_flows_v504; assert_in_epsilon(3.654094233962215, worksheet.outputs_energy_flows_v504, 0.002); end
  def test_outputs_energy_flows_w504; assert_in_epsilon(3.631024844210375, worksheet.outputs_energy_flows_w504, 0.002); end
  def test_outputs_energy_flows_x504; assert_in_epsilon(3.700153603707324, worksheet.outputs_energy_flows_x504, 0.002); end
  def test_outputs_energy_flows_y504; assert_in_epsilon(3.7537688317148343, worksheet.outputs_energy_flows_y504, 0.002); end
  def test_outputs_energy_flows_z504; assert_in_epsilon(3.8014951002555835, worksheet.outputs_energy_flows_z504, 0.002); end
  def test_outputs_energy_flows_aa504; assert_in_epsilon(3.85172108714915, worksheet.outputs_energy_flows_aa504, 0.002); end
  def test_outputs_energy_flows_ab504; assert_in_epsilon(3.9040097672287297, worksheet.outputs_energy_flows_ab504, 0.002); end
  def test_outputs_energy_flows_ac504; assert_in_epsilon(3.94289901288296, worksheet.outputs_energy_flows_ac504, 0.002); end
  def test_outputs_energy_flows_ad504; assert_in_epsilon(3.987674793538106, worksheet.outputs_energy_flows_ad504, 0.002); end
  def test_outputs_energy_flows_d506; assert_equal("Gas", worksheet.outputs_energy_flows_d506); end
  def test_outputs_energy_flows_f506; assert_equal("Other", worksheet.outputs_energy_flows_f506); end
  def test_outputs_energy_flows_i506; assert_equal("G.C.03", worksheet.outputs_energy_flows_i506); end
  def test_outputs_energy_flows_j506; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j506); end
  def test_outputs_energy_flows_n506; assert_equal("Arable.food", worksheet.outputs_energy_flows_n506); end
  def test_outputs_energy_flows_o506; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o506); end
  def test_outputs_energy_flows_v506; assert_in_delta(0.4359182661605924, worksheet.outputs_energy_flows_v506, 0.002); end
  def test_outputs_energy_flows_w506; assert_in_delta(0.4331661837735159, worksheet.outputs_energy_flows_w506, 0.002); end
  def test_outputs_energy_flows_x506; assert_in_delta(0.4414129576803473, worksheet.outputs_energy_flows_x506, 0.002); end
  def test_outputs_energy_flows_y506; assert_in_delta(0.4478090317102981, worksheet.outputs_energy_flows_y506, 0.002); end
  def test_outputs_energy_flows_z506; assert_in_delta(0.4535025773335152, worksheet.outputs_energy_flows_z506, 0.002); end
  def test_outputs_energy_flows_aa506; assert_in_delta(0.4594943289745525, worksheet.outputs_energy_flows_aa506, 0.002); end
  def test_outputs_energy_flows_ab506; assert_in_delta(0.4657321513460354, worksheet.outputs_energy_flows_ab506, 0.002); end
  def test_outputs_energy_flows_ac506; assert_in_delta(0.4703714768402506, worksheet.outputs_energy_flows_ac506, 0.002); end
  def test_outputs_energy_flows_ad506; assert_in_delta(0.4757130415124933, worksheet.outputs_energy_flows_ad506, 0.002); end
  def test_outputs_energy_flows_d508; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d508); end
  def test_outputs_energy_flows_f508; assert_equal("Other", worksheet.outputs_energy_flows_f508); end
  def test_outputs_energy_flows_i508; assert_equal("G.E.01", worksheet.outputs_energy_flows_i508); end
  def test_outputs_energy_flows_j508; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j508); end
  def test_outputs_energy_flows_n508; assert_equal("Arable.food", worksheet.outputs_energy_flows_n508); end
  def test_outputs_energy_flows_o508; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o508); end
  def test_outputs_energy_flows_v508; assert_in_epsilon(2.46999533333115, worksheet.outputs_energy_flows_v508, 0.002); end
  def test_outputs_energy_flows_w508; assert_in_epsilon(2.4544015140748643, worksheet.outputs_energy_flows_w508, 0.002); end
  def test_outputs_energy_flows_x508; assert_in_epsilon(2.5011292945927988, worksheet.outputs_energy_flows_x508, 0.002); end
  def test_outputs_energy_flows_y508; assert_in_epsilon(2.5373706596192394, worksheet.outputs_energy_flows_y508, 0.002); end
  def test_outputs_energy_flows_z508; assert_in_epsilon(2.5696313658367513, worksheet.outputs_energy_flows_z508, 0.002); end
  def test_outputs_energy_flows_aa508; assert_in_epsilon(2.6035817637454945, worksheet.outputs_energy_flows_aa508, 0.002); end
  def test_outputs_energy_flows_ab508; assert_in_epsilon(2.638926444947808, worksheet.outputs_energy_flows_ab508, 0.002); end
  def test_outputs_energy_flows_ac508; assert_in_epsilon(2.6652137405489844, worksheet.outputs_energy_flows_ac508, 0.002); end
  def test_outputs_energy_flows_ad508; assert_in_epsilon(2.6954800561345427, worksheet.outputs_energy_flows_ad508, 0.002); end
  def test_outputs_energy_flows_d510; assert_equal("Heat network", worksheet.outputs_energy_flows_d510); end
  def test_outputs_energy_flows_f510; assert_equal("Other", worksheet.outputs_energy_flows_f510); end
  def test_outputs_energy_flows_i510; assert_equal("G.H.01", worksheet.outputs_energy_flows_i510); end
  def test_outputs_energy_flows_j510; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j510); end
  def test_outputs_energy_flows_n510; assert_equal("Arable.food", worksheet.outputs_energy_flows_n510); end
  def test_outputs_energy_flows_o510; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o510); end
  def test_outputs_energy_flows_v510; assert_in_delta(0.4590256814155236, worksheet.outputs_energy_flows_v510, 0.002); end
  def test_outputs_energy_flows_w510; assert_in_delta(0.4561277150050634, worksheet.outputs_energy_flows_w510, 0.002); end
  def test_outputs_energy_flows_x510; assert_in_delta(0.4648116388181308, worksheet.outputs_energy_flows_x510, 0.002); end
  def test_outputs_energy_flows_y510; assert_in_delta(0.4715467597522481, worksheet.outputs_energy_flows_y510, 0.002); end
  def test_outputs_energy_flows_z510; assert_in_delta(0.47754211223514853, worksheet.outputs_energy_flows_z510, 0.002); end
  def test_outputs_energy_flows_aa510; assert_in_delta(0.4838514782181893, worksheet.outputs_energy_flows_aa510, 0.002); end
  def test_outputs_energy_flows_ab510; assert_in_delta(0.4904199587956104, worksheet.outputs_energy_flows_ab510, 0.002); end
  def test_outputs_energy_flows_ac510; assert_in_delta(0.49530520842060777, worksheet.outputs_energy_flows_ac510, 0.002); end
  def test_outputs_energy_flows_ad510; assert_in_delta(0.500929921936508, worksheet.outputs_energy_flows_ad510, 0.002); end
  def test_outputs_energy_flows_d512; assert_equal("Solid", worksheet.outputs_energy_flows_d512); end
  def test_outputs_energy_flows_f512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f512); end
  def test_outputs_energy_flows_i512; assert_equal("G.C.01", worksheet.outputs_energy_flows_i512); end
  def test_outputs_energy_flows_j512; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j512); end
  def test_outputs_energy_flows_k512; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k512); end
  def test_outputs_energy_flows_l512; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l512); end
  def test_outputs_energy_flows_q512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q512); end
  def test_outputs_energy_flows_v512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v512||0), 0.002); end
  def test_outputs_energy_flows_w512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w512||0), 0.002); end
  def test_outputs_energy_flows_x512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x512||0), 0.002); end
  def test_outputs_energy_flows_y512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y512||0), 0.002); end
  def test_outputs_energy_flows_z512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z512||0), 0.002); end
  def test_outputs_energy_flows_aa512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa512||0), 0.002); end
  def test_outputs_energy_flows_ab512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab512||0), 0.002); end
  def test_outputs_energy_flows_ac512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac512||0), 0.002); end
  def test_outputs_energy_flows_ad512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad512||0), 0.002); end
  def test_outputs_energy_flows_d514; assert_equal("Liquid", worksheet.outputs_energy_flows_d514); end
  def test_outputs_energy_flows_f514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f514); end
  def test_outputs_energy_flows_i514; assert_equal("G.C.02", worksheet.outputs_energy_flows_i514); end
  def test_outputs_energy_flows_j514; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j514); end
  def test_outputs_energy_flows_q514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q514); end
  def test_outputs_energy_flows_v514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v514||0), 0.002); end
  def test_outputs_energy_flows_w514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w514||0), 0.002); end
  def test_outputs_energy_flows_x514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x514||0), 0.002); end
  def test_outputs_energy_flows_y514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y514||0), 0.002); end
  def test_outputs_energy_flows_z514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z514||0), 0.002); end
  def test_outputs_energy_flows_aa514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa514||0), 0.002); end
  def test_outputs_energy_flows_ab514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab514||0), 0.002); end
  def test_outputs_energy_flows_ac514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac514||0), 0.002); end
  def test_outputs_energy_flows_ad514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad514||0), 0.002); end
  def test_outputs_energy_flows_d516; assert_equal("Gas", worksheet.outputs_energy_flows_d516); end
  def test_outputs_energy_flows_f516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f516); end
  def test_outputs_energy_flows_i516; assert_equal("G.C.03", worksheet.outputs_energy_flows_i516); end
  def test_outputs_energy_flows_j516; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j516); end
  def test_outputs_energy_flows_q516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q516); end
  def test_outputs_energy_flows_v516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v516||0), 0.002); end
  def test_outputs_energy_flows_w516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w516||0), 0.002); end
  def test_outputs_energy_flows_x516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x516||0), 0.002); end
  def test_outputs_energy_flows_y516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y516||0), 0.002); end
  def test_outputs_energy_flows_z516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z516||0), 0.002); end
  def test_outputs_energy_flows_aa516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa516||0), 0.002); end
  def test_outputs_energy_flows_ab516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab516||0), 0.002); end
  def test_outputs_energy_flows_ac516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac516||0), 0.002); end
  def test_outputs_energy_flows_ad516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad516||0), 0.002); end
  def test_outputs_energy_flows_d518; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d518); end
  def test_outputs_energy_flows_f518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f518); end
  def test_outputs_energy_flows_i518; assert_equal("G.E.01", worksheet.outputs_energy_flows_i518); end
  def test_outputs_energy_flows_j518; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j518); end
  def test_outputs_energy_flows_q518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q518); end
  def test_outputs_energy_flows_v518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v518||0), 0.002); end
  def test_outputs_energy_flows_w518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w518||0), 0.002); end
  def test_outputs_energy_flows_x518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x518||0), 0.002); end
  def test_outputs_energy_flows_y518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y518||0), 0.002); end
  def test_outputs_energy_flows_z518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z518||0), 0.002); end
  def test_outputs_energy_flows_aa518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa518||0), 0.002); end
  def test_outputs_energy_flows_ab518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab518||0), 0.002); end
  def test_outputs_energy_flows_ac518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac518||0), 0.002); end
  def test_outputs_energy_flows_ad518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad518||0), 0.002); end
  def test_outputs_energy_flows_d520; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d520); end
  def test_outputs_energy_flows_f520; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f520); end
  def test_outputs_energy_flows_i520; assert_equal("G.L.02", worksheet.outputs_energy_flows_i520); end
  def test_outputs_energy_flows_j520; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j520); end
  def test_outputs_energy_flows_o520; assert_equal("electricity.network", worksheet.outputs_energy_flows_o520); end
  def test_outputs_energy_flows_p520; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_p520); end
  def test_outputs_energy_flows_v520; assert_in_epsilon(6.091136511565761, worksheet.outputs_energy_flows_v520, 0.002); end
  def test_outputs_energy_flows_w520; assert_in_epsilon(6.7146281436296675, worksheet.outputs_energy_flows_w520, 0.002); end
  def test_outputs_energy_flows_x520; assert_in_epsilon(7.426137072096431, worksheet.outputs_energy_flows_x520, 0.002); end
  def test_outputs_energy_flows_y520; assert_in_epsilon(8.167087152165161, worksheet.outputs_energy_flows_y520, 0.002); end
  def test_outputs_energy_flows_z520; assert_in_epsilon(8.915355212504423, worksheet.outputs_energy_flows_z520, 0.002); end
  def test_outputs_energy_flows_aa520; assert_in_epsilon(9.645524344907605, worksheet.outputs_energy_flows_aa520, 0.002); end
  def test_outputs_energy_flows_ab520; assert_in_epsilon(10.384679542196638, worksheet.outputs_energy_flows_ab520, 0.002); end
  def test_outputs_energy_flows_ac520; assert_in_epsilon(11.108857564058871, worksheet.outputs_energy_flows_ac520, 0.002); end
  def test_outputs_energy_flows_ad520; assert_in_epsilon(11.843941634598155, worksheet.outputs_energy_flows_ad520, 0.002); end
  def test_outputs_summary_graphs_c48; assert_equal("WARNING: Cumulative CO2 emissions by 2100 exceed 3010 GtCO2, the amount associated with a 50% chance of keeping global mean temperature increase below 2C by 2100.  Reduce emissions by increasing effort across more levers.", worksheet.outputs_summary_graphs_c48); end
  def test_outputs_summary_graphs_c57; assert_equal("No warning on bio crop oversupply ", worksheet.outputs_summary_graphs_c57); end
  def test_outputs_summary_graphs_c52; assert_equal("No warning on electricity oversupply", worksheet.outputs_summary_graphs_c52); end
  def test_outputs_summary_graphs_c60; assert_equal("No warning on CO2 concentrations being below pre-industrial levels", worksheet.outputs_summary_graphs_c60); end
  def test_outputs_summary_graphs_c53; assert_equal("No warning on coal consumption", worksheet.outputs_summary_graphs_c53); end
  def test_outputs_summary_graphs_c61; assert_equal("No warning on crop yield choice and consistency with midpoint temperature rise", worksheet.outputs_summary_graphs_c61); end
  def test_outputs_summary_graphs_c59; assert_equal("No warning on forest area change", worksheet.outputs_summary_graphs_c59); end
  def test_outputs_summary_graphs_c51; assert_equal("WARNING – Your pathway increases the world’s dependence on fossil fuels from 2011 to 2050. This could mean greater import dependence for some countries and greater exposure to potentially volatile fossil fuel prices. Click on the energy tab to see more detail on the use of coal, oil and gas in your pathway", worksheet.outputs_summary_graphs_c51); end
  def test_outputs_summary_graphs_c55; assert_equal("No warning on gas consumption", worksheet.outputs_summary_graphs_c55); end
  def test_outputs_summary_graphs_c49; assert_equal("No warning on GGR", worksheet.outputs_summary_graphs_c49); end
  def test_outputs_summary_graphs_c58; assert_equal("No warning on land use", worksheet.outputs_summary_graphs_c58); end
  def test_outputs_summary_graphs_c50; assert_equal("No warning on level 4s", worksheet.outputs_summary_graphs_c50); end
  def test_outputs_summary_graphs_c54; assert_equal("No warning on oil consumption", worksheet.outputs_summary_graphs_c54); end
  def test_outputs_summary_graphs_c56; assert_equal("No warning on uranium consumption", worksheet.outputs_summary_graphs_c56); end
end
