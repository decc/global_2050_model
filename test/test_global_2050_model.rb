# coding: utf-8
# Test for global_2050_model
require 'minitest/autorun'
require_relative '../lib/global_2050_model'

class TestGlobal2050Model < Minitest::Unit::TestCase
  def self.runnable_methods
    puts 'Overriding minitest to run tests in a defined order'
    methods = methods_matching(/^test_/)
  end
  def worksheet; @worksheet ||= init_spreadsheet; end
  def init_spreadsheet; Global2050Model.new end
  def test_user_inputs_e7; assert_in_epsilon(2.0, worksheet.user_inputs_e7, 0.002); end
  def test_user_inputs_e8; assert_in_epsilon(2.0, worksheet.user_inputs_e8, 0.002); end
  def test_user_inputs_e9; assert_in_epsilon(2.0, worksheet.user_inputs_e9, 0.002); end
  def test_user_inputs_e10; assert_in_epsilon(2.0, worksheet.user_inputs_e10, 0.002); end
  def test_user_inputs_e11; assert_in_epsilon(1.9, worksheet.user_inputs_e11, 0.002); end
  def test_user_inputs_e12; assert_in_epsilon(1.9, worksheet.user_inputs_e12, 0.002); end
  def test_user_inputs_e13; assert_in_epsilon(1.9, worksheet.user_inputs_e13, 0.002); end
  def test_user_inputs_e14; assert_in_epsilon(2.0, worksheet.user_inputs_e14, 0.002); end
  def test_user_inputs_e15; assert_in_delta(1.0, worksheet.user_inputs_e15, 0.002); end
  def test_user_inputs_e16; assert_in_epsilon(2.0, worksheet.user_inputs_e16, 0.002); end
  def test_user_inputs_e17; assert_in_epsilon(2.0, worksheet.user_inputs_e17, 0.002); end
  def test_user_inputs_e18; assert_in_epsilon(2.0, worksheet.user_inputs_e18, 0.002); end
  def test_user_inputs_e19; assert_in_epsilon(1.6, worksheet.user_inputs_e19, 0.002); end
  def test_user_inputs_e20; assert_in_epsilon(1.5, worksheet.user_inputs_e20, 0.002); end
  def test_user_inputs_e21; assert_in_epsilon(1.6, worksheet.user_inputs_e21, 0.002); end
  def test_user_inputs_e22; assert_in_epsilon(1.4, worksheet.user_inputs_e22, 0.002); end
  def test_user_inputs_e23; assert_in_epsilon(1.1, worksheet.user_inputs_e23, 0.002); end
  def test_user_inputs_e24; assert_in_epsilon(1.5, worksheet.user_inputs_e24, 0.002); end
  def test_user_inputs_e25; assert_in_delta(1.0, worksheet.user_inputs_e25, 0.002); end
  def test_user_inputs_e26; assert_in_epsilon(1.9, worksheet.user_inputs_e26, 0.002); end
  def test_user_inputs_e27; assert_in_epsilon(1.6, worksheet.user_inputs_e27, 0.002); end
  def test_user_inputs_e28; assert_in_delta(1.0, worksheet.user_inputs_e28, 0.002); end
  def test_user_inputs_e29; assert_in_epsilon(1.8, worksheet.user_inputs_e29, 0.002); end
  def test_user_inputs_e30; assert_in_epsilon(1.6, worksheet.user_inputs_e30, 0.002); end
  def test_user_inputs_e31; assert_in_epsilon(1.2, worksheet.user_inputs_e31, 0.002); end
  def test_user_inputs_e32; assert_in_epsilon(1.9, worksheet.user_inputs_e32, 0.002); end
  def test_user_inputs_e33; assert_in_epsilon(1.6, worksheet.user_inputs_e33, 0.002); end
  def test_user_inputs_e34; assert_in_epsilon(1.9, worksheet.user_inputs_e34, 0.002); end
  def test_user_inputs_e35; assert_in_epsilon(1.4, worksheet.user_inputs_e35, 0.002); end
  def test_user_inputs_e36; assert_in_epsilon(1.4, worksheet.user_inputs_e36, 0.002); end
  def test_user_inputs_e37; assert_in_epsilon(1.4, worksheet.user_inputs_e37, 0.002); end
  def test_user_inputs_e38; assert_in_epsilon(1.5, worksheet.user_inputs_e38, 0.002); end
  def test_user_inputs_e39; assert_in_epsilon(2.9, worksheet.user_inputs_e39, 0.002); end
  def test_user_inputs_e40; assert_in_epsilon(1.8, worksheet.user_inputs_e40, 0.002); end
  def test_user_inputs_e41; assert_in_epsilon(1.8, worksheet.user_inputs_e41, 0.002); end
  def test_user_inputs_e42; assert_in_epsilon(2.0, worksheet.user_inputs_e42, 0.002); end
  def test_user_inputs_e43; assert_in_epsilon(2.0, worksheet.user_inputs_e43, 0.002); end
  def test_user_inputs_e44; assert_in_epsilon(2.0, worksheet.user_inputs_e44, 0.002); end
  def test_user_inputs_e45; assert_in_epsilon(2.0, worksheet.user_inputs_e45, 0.002); end
  def test_user_inputs_e46; assert_in_epsilon(2.3, worksheet.user_inputs_e46, 0.002); end
  def test_user_inputs_e47; assert_in_epsilon(2.0, worksheet.user_inputs_e47, 0.002); end
  def test_user_inputs_e48; assert_in_epsilon(3.9, worksheet.user_inputs_e48, 0.002); end
  def test_user_inputs_e49; assert_in_delta(1.0, worksheet.user_inputs_e49, 0.002); end
  def test_user_inputs_e50; assert_in_delta(1.0, worksheet.user_inputs_e50, 0.002); end
  def test_user_inputs_e51; assert_in_delta(1.0, worksheet.user_inputs_e51, 0.002); end
  def test_user_inputs_e52; assert_in_delta(1.0, worksheet.user_inputs_e52, 0.002); end
  def test_user_inputs_e53; assert_in_delta(1.0, worksheet.user_inputs_e53, 0.002); end
  def test_user_inputs_e54; assert_in_epsilon(1.3, worksheet.user_inputs_e54, 0.002); end
  def test_user_inputs_e55; assert_in_epsilon(2.0, worksheet.user_inputs_e55, 0.002); end
  def test_user_inputs_e56; assert_in_epsilon(2.0, worksheet.user_inputs_e56, 0.002); end
  def test_user_inputs_e57; assert_equal("B", worksheet.user_inputs_e57); end
  def test_user_inputs_e58; assert_equal("US", worksheet.user_inputs_e58); end
  def test_user_inputs_e59; assert_equal("Point", worksheet.user_inputs_e59); end
  def test_user_inputs_e60; assert_equal("Point", worksheet.user_inputs_e60); end
  def test_user_inputs_e61; assert_equal("Point", worksheet.user_inputs_e61); end
  def test_user_inputs_e62; assert_equal("Point", worksheet.user_inputs_e62); end
  def test_user_inputs_e63; assert_equal("Point", worksheet.user_inputs_e63); end
  def test_user_inputs_e64; assert_equal("Point", worksheet.user_inputs_e64); end
  def test_user_inputs_e65; assert_equal("Point", worksheet.user_inputs_e65); end
  def test_lever_graphs_c2877; assert_equal("1975", worksheet.lever_graphs_c2877); end
  def test_lever_graphs_d2877; assert_equal("1980", worksheet.lever_graphs_d2877); end
  def test_lever_graphs_e2877; assert_equal("1985", worksheet.lever_graphs_e2877); end
  def test_lever_graphs_f2877; assert_equal("1990", worksheet.lever_graphs_f2877); end
  def test_lever_graphs_g2877; assert_equal("1995", worksheet.lever_graphs_g2877); end
  def test_lever_graphs_h2877; assert_equal("2000", worksheet.lever_graphs_h2877); end
  def test_lever_graphs_i2877; assert_equal("2005", worksheet.lever_graphs_i2877); end
  def test_lever_graphs_j2877; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2877, 0.002); end
  def test_lever_graphs_k2877; assert_equal("2011", worksheet.lever_graphs_k2877); end
  def test_lever_graphs_l2877; assert_equal("2015", worksheet.lever_graphs_l2877); end
  def test_lever_graphs_m2877; assert_equal("2020", worksheet.lever_graphs_m2877); end
  def test_lever_graphs_n2877; assert_equal("2025", worksheet.lever_graphs_n2877); end
  def test_lever_graphs_o2877; assert_equal("2030", worksheet.lever_graphs_o2877); end
  def test_lever_graphs_p2877; assert_equal("2035", worksheet.lever_graphs_p2877); end
  def test_lever_graphs_q2877; assert_equal("2040", worksheet.lever_graphs_q2877); end
  def test_lever_graphs_r2877; assert_equal("2045", worksheet.lever_graphs_r2877); end
  def test_lever_graphs_s2877; assert_equal("2050", worksheet.lever_graphs_s2877); end
  def test_lever_graphs_b2878; assert_equal("Historic data", worksheet.lever_graphs_b2878); end
  def test_lever_graphs_b2879; assert_in_delta(1.0, worksheet.lever_graphs_b2879, 0.002); end
  def test_lever_graphs_k2879; assert_in_delta(0.06, worksheet.lever_graphs_k2879, 0.002); end
  def test_lever_graphs_l2879; assert_in_delta(0.07435897435897436, worksheet.lever_graphs_l2879, 0.002); end
  def test_lever_graphs_m2879; assert_in_delta(0.07230769230769231, worksheet.lever_graphs_m2879, 0.002); end
  def test_lever_graphs_n2879; assert_in_delta(0.07025641025641026, worksheet.lever_graphs_n2879, 0.002); end
  def test_lever_graphs_o2879; assert_in_delta(0.06820512820512821, worksheet.lever_graphs_o2879, 0.002); end
  def test_lever_graphs_p2879; assert_in_delta(0.06615384615384615, worksheet.lever_graphs_p2879, 0.002); end
  def test_lever_graphs_q2879; assert_in_delta(0.0641025641025641, worksheet.lever_graphs_q2879, 0.002); end
  def test_lever_graphs_r2879; assert_in_delta(0.06205128205128205, worksheet.lever_graphs_r2879, 0.002); end
  def test_lever_graphs_s2879; assert_in_delta(0.06, worksheet.lever_graphs_s2879, 0.002); end
  def test_lever_graphs_b2880; assert_in_epsilon(2.0, worksheet.lever_graphs_b2880, 0.002); end
  def test_lever_graphs_k2880; assert_in_delta(0.06, worksheet.lever_graphs_k2880, 0.002); end
  def test_lever_graphs_l2880; assert_in_delta(0.07435897435897436, worksheet.lever_graphs_l2880, 0.002); end
  def test_lever_graphs_m2880; assert_in_delta(0.07802197802197802, worksheet.lever_graphs_m2880, 0.002); end
  def test_lever_graphs_n2880; assert_in_delta(0.08168498168498169, worksheet.lever_graphs_n2880, 0.002); end
  def test_lever_graphs_o2880; assert_in_delta(0.08534798534798535, worksheet.lever_graphs_o2880, 0.002); end
  def test_lever_graphs_p2880; assert_in_delta(0.08901098901098901, worksheet.lever_graphs_p2880, 0.002); end
  def test_lever_graphs_q2880; assert_in_delta(0.09267399267399268, worksheet.lever_graphs_q2880, 0.002); end
  def test_lever_graphs_r2880; assert_in_delta(0.09633699633699634, worksheet.lever_graphs_r2880, 0.002); end
  def test_lever_graphs_s2880; assert_in_delta(0.1, worksheet.lever_graphs_s2880, 0.002); end
  def test_lever_graphs_b2881; assert_in_epsilon(3.0, worksheet.lever_graphs_b2881, 0.002); end
  def test_lever_graphs_k2881; assert_in_delta(0.06, worksheet.lever_graphs_k2881, 0.002); end
  def test_lever_graphs_l2881; assert_in_delta(0.07435897435897436, worksheet.lever_graphs_l2881, 0.002); end
  def test_lever_graphs_m2881; assert_in_delta(0.09230769230769231, worksheet.lever_graphs_m2881, 0.002); end
  def test_lever_graphs_n2881; assert_in_delta(0.11025641025641025, worksheet.lever_graphs_n2881, 0.002); end
  def test_lever_graphs_o2881; assert_in_delta(0.1282051282051282, worksheet.lever_graphs_o2881, 0.002); end
  def test_lever_graphs_p2881; assert_in_delta(0.14615384615384613, worksheet.lever_graphs_p2881, 0.002); end
  def test_lever_graphs_q2881; assert_in_delta(0.1641025641025641, worksheet.lever_graphs_q2881, 0.002); end
  def test_lever_graphs_r2881; assert_in_delta(0.18205128205128204, worksheet.lever_graphs_r2881, 0.002); end
  def test_lever_graphs_s2881; assert_in_delta(0.2, worksheet.lever_graphs_s2881, 0.002); end
  def test_lever_graphs_b2882; assert_in_epsilon(4.0, worksheet.lever_graphs_b2882, 0.002); end
  def test_lever_graphs_k2882; assert_in_delta(0.06, worksheet.lever_graphs_k2882, 0.002); end
  def test_lever_graphs_l2882; assert_in_delta(0.07435897435897436, worksheet.lever_graphs_l2882, 0.002); end
  def test_lever_graphs_m2882; assert_in_delta(0.10659340659340659, worksheet.lever_graphs_m2882, 0.002); end
  def test_lever_graphs_n2882; assert_in_delta(0.13882783882783883, worksheet.lever_graphs_n2882, 0.002); end
  def test_lever_graphs_o2882; assert_in_delta(0.17106227106227107, worksheet.lever_graphs_o2882, 0.002); end
  def test_lever_graphs_p2882; assert_in_delta(0.2032967032967033, worksheet.lever_graphs_p2882, 0.002); end
  def test_lever_graphs_q2882; assert_in_delta(0.23553113553113553, worksheet.lever_graphs_q2882, 0.002); end
  def test_lever_graphs_r2882; assert_in_delta(0.26776556776556776, worksheet.lever_graphs_r2882, 0.002); end
  def test_lever_graphs_s2882; assert_in_delta(0.3, worksheet.lever_graphs_s2882, 0.002); end
  def test_lever_graphs_c2887; assert_equal("1975", worksheet.lever_graphs_c2887); end
  def test_lever_graphs_d2887; assert_equal("1980", worksheet.lever_graphs_d2887); end
  def test_lever_graphs_e2887; assert_equal("1985", worksheet.lever_graphs_e2887); end
  def test_lever_graphs_f2887; assert_equal("1990", worksheet.lever_graphs_f2887); end
  def test_lever_graphs_g2887; assert_equal("1995", worksheet.lever_graphs_g2887); end
  def test_lever_graphs_h2887; assert_equal("2000", worksheet.lever_graphs_h2887); end
  def test_lever_graphs_i2887; assert_equal("2005", worksheet.lever_graphs_i2887); end
  def test_lever_graphs_j2887; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2887, 0.002); end
  def test_lever_graphs_k2887; assert_equal("2011", worksheet.lever_graphs_k2887); end
  def test_lever_graphs_l2887; assert_equal("2015", worksheet.lever_graphs_l2887); end
  def test_lever_graphs_m2887; assert_equal("2020", worksheet.lever_graphs_m2887); end
  def test_lever_graphs_n2887; assert_equal("2025", worksheet.lever_graphs_n2887); end
  def test_lever_graphs_o2887; assert_equal("2030", worksheet.lever_graphs_o2887); end
  def test_lever_graphs_p2887; assert_equal("2035", worksheet.lever_graphs_p2887); end
  def test_lever_graphs_q2887; assert_equal("2040", worksheet.lever_graphs_q2887); end
  def test_lever_graphs_r2887; assert_equal("2045", worksheet.lever_graphs_r2887); end
  def test_lever_graphs_s2887; assert_equal("2050", worksheet.lever_graphs_s2887); end
  def test_lever_graphs_b2888; assert_equal("Historic data", worksheet.lever_graphs_b2888); end
  def test_lever_graphs_b2889; assert_in_delta(1.0, worksheet.lever_graphs_b2889, 0.002); end
  def test_lever_graphs_k2889; assert_in_delta(0.01, worksheet.lever_graphs_k2889, 0.002); end
  def test_lever_graphs_l2889; assert_in_delta(0.015128205128205128, worksheet.lever_graphs_l2889, 0.002); end
  def test_lever_graphs_m2889; assert_in_delta(0.014395604395604396, worksheet.lever_graphs_m2889, 0.002); end
  def test_lever_graphs_n2889; assert_in_delta(0.013663003663003662, worksheet.lever_graphs_n2889, 0.002); end
  def test_lever_graphs_o2889; assert_in_delta(0.01293040293040293, worksheet.lever_graphs_o2889, 0.002); end
  def test_lever_graphs_p2889; assert_in_delta(0.012197802197802199, worksheet.lever_graphs_p2889, 0.002); end
  def test_lever_graphs_q2889; assert_in_delta(0.011465201465201465, worksheet.lever_graphs_q2889, 0.002); end
  def test_lever_graphs_r2889; assert_in_delta(0.010732600732600732, worksheet.lever_graphs_r2889, 0.002); end
  def test_lever_graphs_s2889; assert_in_delta(0.01, worksheet.lever_graphs_s2889, 0.002); end
  def test_lever_graphs_b2890; assert_in_epsilon(2.0, worksheet.lever_graphs_b2890, 0.002); end
  def test_lever_graphs_k2890; assert_in_delta(0.01, worksheet.lever_graphs_k2890, 0.002); end
  def test_lever_graphs_l2890; assert_in_delta(0.015128205128205128, worksheet.lever_graphs_l2890, 0.002); end
  def test_lever_graphs_m2890; assert_in_delta(0.017252747252747253, worksheet.lever_graphs_m2890, 0.002); end
  def test_lever_graphs_n2890; assert_in_delta(0.019377289377289376, worksheet.lever_graphs_n2890, 0.002); end
  def test_lever_graphs_o2890; assert_in_delta(0.0215018315018315, worksheet.lever_graphs_o2890, 0.002); end
  def test_lever_graphs_p2890; assert_in_delta(0.023626373626373626, worksheet.lever_graphs_p2890, 0.002); end
  def test_lever_graphs_q2890; assert_in_delta(0.025750915750915752, worksheet.lever_graphs_q2890, 0.002); end
  def test_lever_graphs_r2890; assert_in_delta(0.027875457875457872, worksheet.lever_graphs_r2890, 0.002); end
  def test_lever_graphs_s2890; assert_in_delta(0.03, worksheet.lever_graphs_s2890, 0.002); end
  def test_lever_graphs_b2891; assert_in_epsilon(3.0, worksheet.lever_graphs_b2891, 0.002); end
  def test_lever_graphs_k2891; assert_in_delta(0.01, worksheet.lever_graphs_k2891, 0.002); end
  def test_lever_graphs_l2891; assert_in_delta(0.015128205128205128, worksheet.lever_graphs_l2891, 0.002); end
  def test_lever_graphs_m2891; assert_in_delta(0.021538461538461538, worksheet.lever_graphs_m2891, 0.002); end
  def test_lever_graphs_n2891; assert_in_delta(0.02794871794871795, worksheet.lever_graphs_n2891, 0.002); end
  def test_lever_graphs_o2891; assert_in_delta(0.03435897435897436, worksheet.lever_graphs_o2891, 0.002); end
  def test_lever_graphs_p2891; assert_in_delta(0.040769230769230766, worksheet.lever_graphs_p2891, 0.002); end
  def test_lever_graphs_q2891; assert_in_delta(0.04717948717948718, worksheet.lever_graphs_q2891, 0.002); end
  def test_lever_graphs_r2891; assert_in_delta(0.05358974358974358, worksheet.lever_graphs_r2891, 0.002); end
  def test_lever_graphs_s2891; assert_in_delta(0.06, worksheet.lever_graphs_s2891, 0.002); end
  def test_lever_graphs_b2892; assert_in_epsilon(4.0, worksheet.lever_graphs_b2892, 0.002); end
  def test_lever_graphs_k2892; assert_in_delta(0.01, worksheet.lever_graphs_k2892, 0.002); end
  def test_lever_graphs_l2892; assert_in_delta(0.015128205128205128, worksheet.lever_graphs_l2892, 0.002); end
  def test_lever_graphs_m2892; assert_in_delta(0.02725274725274725, worksheet.lever_graphs_m2892, 0.002); end
  def test_lever_graphs_n2892; assert_in_delta(0.039377289377289376, worksheet.lever_graphs_n2892, 0.002); end
  def test_lever_graphs_o2892; assert_in_delta(0.0515018315018315, worksheet.lever_graphs_o2892, 0.002); end
  def test_lever_graphs_p2892; assert_in_delta(0.06362637362637362, worksheet.lever_graphs_p2892, 0.002); end
  def test_lever_graphs_q2892; assert_in_delta(0.07575091575091575, worksheet.lever_graphs_q2892, 0.002); end
  def test_lever_graphs_r2892; assert_in_delta(0.08787545787545788, worksheet.lever_graphs_r2892, 0.002); end
  def test_lever_graphs_s2892; assert_in_delta(0.1, worksheet.lever_graphs_s2892, 0.002); end
  def test_lever_graphs_c2867; assert_equal("1975", worksheet.lever_graphs_c2867); end
  def test_lever_graphs_d2867; assert_equal("1980", worksheet.lever_graphs_d2867); end
  def test_lever_graphs_e2867; assert_equal("1985", worksheet.lever_graphs_e2867); end
  def test_lever_graphs_f2867; assert_equal("1990", worksheet.lever_graphs_f2867); end
  def test_lever_graphs_g2867; assert_equal("1995", worksheet.lever_graphs_g2867); end
  def test_lever_graphs_h2867; assert_equal("2000", worksheet.lever_graphs_h2867); end
  def test_lever_graphs_i2867; assert_equal("2005", worksheet.lever_graphs_i2867); end
  def test_lever_graphs_j2867; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2867, 0.002); end
  def test_lever_graphs_k2867; assert_equal("2011", worksheet.lever_graphs_k2867); end
  def test_lever_graphs_l2867; assert_equal("2015", worksheet.lever_graphs_l2867); end
  def test_lever_graphs_m2867; assert_equal("2020", worksheet.lever_graphs_m2867); end
  def test_lever_graphs_n2867; assert_equal("2025", worksheet.lever_graphs_n2867); end
  def test_lever_graphs_o2867; assert_equal("2030", worksheet.lever_graphs_o2867); end
  def test_lever_graphs_p2867; assert_equal("2035", worksheet.lever_graphs_p2867); end
  def test_lever_graphs_q2867; assert_equal("2040", worksheet.lever_graphs_q2867); end
  def test_lever_graphs_r2867; assert_equal("2045", worksheet.lever_graphs_r2867); end
  def test_lever_graphs_s2867; assert_equal("2050", worksheet.lever_graphs_s2867); end
  def test_lever_graphs_b2868; assert_equal("Historic data", worksheet.lever_graphs_b2868); end
  def test_lever_graphs_b2869; assert_in_delta(1.0, worksheet.lever_graphs_b2869, 0.002); end
  def test_lever_graphs_k2869; assert_in_delta(0.0, (worksheet.lever_graphs_k2869||0), 0.002); end
  def test_lever_graphs_l2869; assert_in_delta(0.02, worksheet.lever_graphs_l2869, 0.002); end
  def test_lever_graphs_m2869; assert_in_delta(0.03142857142857143, worksheet.lever_graphs_m2869, 0.002); end
  def test_lever_graphs_n2869; assert_in_delta(0.04285714285714286, worksheet.lever_graphs_n2869, 0.002); end
  def test_lever_graphs_o2869; assert_in_delta(0.054285714285714284, worksheet.lever_graphs_o2869, 0.002); end
  def test_lever_graphs_p2869; assert_in_delta(0.06571428571428571, worksheet.lever_graphs_p2869, 0.002); end
  def test_lever_graphs_q2869; assert_in_delta(0.07714285714285715, worksheet.lever_graphs_q2869, 0.002); end
  def test_lever_graphs_r2869; assert_in_delta(0.08857142857142858, worksheet.lever_graphs_r2869, 0.002); end
  def test_lever_graphs_s2869; assert_in_delta(0.1, worksheet.lever_graphs_s2869, 0.002); end
  def test_lever_graphs_b2870; assert_in_epsilon(2.0, worksheet.lever_graphs_b2870, 0.002); end
  def test_lever_graphs_k2870; assert_in_delta(0.0, (worksheet.lever_graphs_k2870||0), 0.002); end
  def test_lever_graphs_l2870; assert_in_delta(0.02, worksheet.lever_graphs_l2870, 0.002); end
  def test_lever_graphs_m2870; assert_in_delta(0.06, worksheet.lever_graphs_m2870, 0.002); end
  def test_lever_graphs_n2870; assert_in_delta(0.09999999999999999, worksheet.lever_graphs_n2870, 0.002); end
  def test_lever_graphs_o2870; assert_in_delta(0.13999999999999999, worksheet.lever_graphs_o2870, 0.002); end
  def test_lever_graphs_p2870; assert_in_delta(0.17999999999999997, worksheet.lever_graphs_p2870, 0.002); end
  def test_lever_graphs_q2870; assert_in_delta(0.21999999999999997, worksheet.lever_graphs_q2870, 0.002); end
  def test_lever_graphs_r2870; assert_in_delta(0.25999999999999995, worksheet.lever_graphs_r2870, 0.002); end
  def test_lever_graphs_s2870; assert_in_delta(0.3, worksheet.lever_graphs_s2870, 0.002); end
  def test_lever_graphs_b2871; assert_in_epsilon(3.0, worksheet.lever_graphs_b2871, 0.002); end
  def test_lever_graphs_k2871; assert_in_delta(0.0, (worksheet.lever_graphs_k2871||0), 0.002); end
  def test_lever_graphs_l2871; assert_in_delta(0.02, worksheet.lever_graphs_l2871, 0.002); end
  def test_lever_graphs_m2871; assert_in_delta(0.08857142857142856, worksheet.lever_graphs_m2871, 0.002); end
  def test_lever_graphs_n2871; assert_in_delta(0.1571428571428571, worksheet.lever_graphs_n2871, 0.002); end
  def test_lever_graphs_o2871; assert_in_delta(0.22571428571428567, worksheet.lever_graphs_o2871, 0.002); end
  def test_lever_graphs_p2871; assert_in_delta(0.29428571428571426, worksheet.lever_graphs_p2871, 0.002); end
  def test_lever_graphs_q2871; assert_in_delta(0.3628571428571429, worksheet.lever_graphs_q2871, 0.002); end
  def test_lever_graphs_r2871; assert_in_delta(0.4314285714285714, worksheet.lever_graphs_r2871, 0.002); end
  def test_lever_graphs_s2871; assert_in_delta(0.5, worksheet.lever_graphs_s2871, 0.002); end
  def test_lever_graphs_b2872; assert_in_epsilon(4.0, worksheet.lever_graphs_b2872, 0.002); end
  def test_lever_graphs_k2872; assert_in_delta(0.0, (worksheet.lever_graphs_k2872||0), 0.002); end
  def test_lever_graphs_l2872; assert_in_delta(0.02, worksheet.lever_graphs_l2872, 0.002); end
  def test_lever_graphs_m2872; assert_in_delta(0.13142857142857142, worksheet.lever_graphs_m2872, 0.002); end
  def test_lever_graphs_n2872; assert_in_delta(0.24285714285714285, worksheet.lever_graphs_n2872, 0.002); end
  def test_lever_graphs_o2872; assert_in_delta(0.3542857142857143, worksheet.lever_graphs_o2872, 0.002); end
  def test_lever_graphs_p2872; assert_in_delta(0.46571428571428575, worksheet.lever_graphs_p2872, 0.002); end
  def test_lever_graphs_q2872; assert_in_delta(0.5771428571428572, worksheet.lever_graphs_q2872, 0.002); end
  def test_lever_graphs_r2872; assert_in_delta(0.6885714285714286, worksheet.lever_graphs_r2872, 0.002); end
  def test_lever_graphs_s2872; assert_in_delta(0.8, worksheet.lever_graphs_s2872, 0.002); end
  def test_lever_graphs_d2453; assert_equal("Title", worksheet.lever_graphs_d2453); end
  def test_lever_graphs_e2453; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2453); end
  def test_lever_graphs_f2453; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2453); end
  def test_lever_graphs_g2453; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2453); end
  def test_lever_graphs_h2453; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2453); end
  def test_lever_graphs_i2453; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2453); end
  def test_lever_graphs_j2453; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2453); end
  def test_lever_graphs_d2454; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2454, 0.002); end
  def test_lever_graphs_e2454; assert_in_epsilon(65.982, worksheet.lever_graphs_e2454, 0.002); end
  def test_lever_graphs_f2454; assert_in_epsilon(1500.0, worksheet.lever_graphs_f2454, 0.002); end
  def test_lever_graphs_g2454; assert_in_epsilon(699.9999999999999, worksheet.lever_graphs_g2454, 0.002); end
  def test_lever_graphs_h2454; assert_in_epsilon(1500.0, worksheet.lever_graphs_h2454, 0.002); end
  def test_lever_graphs_i2454; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_i2454, 0.002); end
  def test_lever_graphs_j2454; assert_in_epsilon(99.99999999999999, worksheet.lever_graphs_j2454, 0.002); end
  def test_lever_graphs_d2455; assert_equal("2050: Level 1", worksheet.lever_graphs_d2455); end
  def test_lever_graphs_e2455; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_e2455, 0.002); end
  def test_lever_graphs_f2455; assert_in_epsilon(1192.0, worksheet.lever_graphs_f2455, 0.002); end
  def test_lever_graphs_g2455; assert_in_epsilon(558.0, worksheet.lever_graphs_g2455, 0.002); end
  def test_lever_graphs_h2455; assert_in_epsilon(1319.0, worksheet.lever_graphs_h2455, 0.002); end
  def test_lever_graphs_i2455; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_i2455, 0.002); end
  def test_lever_graphs_j2455; assert_in_epsilon(90.0, worksheet.lever_graphs_j2455, 0.002); end
  def test_lever_graphs_d2456; assert_equal("2050: Level 2", worksheet.lever_graphs_d2456); end
  def test_lever_graphs_e2456; assert_in_epsilon(45.0, worksheet.lever_graphs_e2456, 0.002); end
  def test_lever_graphs_f2456; assert_in_epsilon(1062.0, worksheet.lever_graphs_f2456, 0.002); end
  def test_lever_graphs_g2456; assert_in_epsilon(474.99999999999994, worksheet.lever_graphs_g2456, 0.002); end
  def test_lever_graphs_h2456; assert_in_epsilon(1181.0, worksheet.lever_graphs_h2456, 0.002); end
  def test_lever_graphs_i2456; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_i2456, 0.002); end
  def test_lever_graphs_j2456; assert_in_epsilon(85.99999999999999, worksheet.lever_graphs_j2456, 0.002); end
  def test_lever_graphs_d2457; assert_equal("2050: Level 3", worksheet.lever_graphs_d2457); end
  def test_lever_graphs_e2457; assert_in_epsilon(40.0, worksheet.lever_graphs_e2457, 0.002); end
  def test_lever_graphs_f2457; assert_in_epsilon(945.9999999999999, worksheet.lever_graphs_f2457, 0.002); end
  def test_lever_graphs_g2457; assert_in_epsilon(416.99999999999994, worksheet.lever_graphs_g2457, 0.002); end
  def test_lever_graphs_h2457; assert_in_epsilon(1056.9999999999998, worksheet.lever_graphs_h2457, 0.002); end
  def test_lever_graphs_i2457; assert_in_epsilon(192.0, worksheet.lever_graphs_i2457, 0.002); end
  def test_lever_graphs_j2457; assert_in_epsilon(80.0, worksheet.lever_graphs_j2457, 0.002); end
  def test_lever_graphs_d2458; assert_equal("2050: Level 4", worksheet.lever_graphs_d2458); end
  def test_lever_graphs_e2458; assert_in_epsilon(34.0, worksheet.lever_graphs_e2458, 0.002); end
  def test_lever_graphs_f2458; assert_in_epsilon(750.0, worksheet.lever_graphs_f2458, 0.002); end
  def test_lever_graphs_g2458; assert_in_epsilon(365.99999999999994, worksheet.lever_graphs_g2458, 0.002); end
  def test_lever_graphs_h2458; assert_in_epsilon(928.0, worksheet.lever_graphs_h2458, 0.002); end
  def test_lever_graphs_i2458; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_i2458, 0.002); end
  def test_lever_graphs_j2458; assert_in_epsilon(72.99999999999999, worksheet.lever_graphs_j2458, 0.002); end
  def test_lever_graphs_c2473; assert_equal("1975", worksheet.lever_graphs_c2473); end
  def test_lever_graphs_d2473; assert_equal("1980", worksheet.lever_graphs_d2473); end
  def test_lever_graphs_e2473; assert_equal("1985", worksheet.lever_graphs_e2473); end
  def test_lever_graphs_f2473; assert_equal("1990", worksheet.lever_graphs_f2473); end
  def test_lever_graphs_g2473; assert_equal("1995", worksheet.lever_graphs_g2473); end
  def test_lever_graphs_h2473; assert_equal("2000", worksheet.lever_graphs_h2473); end
  def test_lever_graphs_i2473; assert_equal("2005", worksheet.lever_graphs_i2473); end
  def test_lever_graphs_j2473; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2473, 0.002); end
  def test_lever_graphs_k2473; assert_equal("2011", worksheet.lever_graphs_k2473); end
  def test_lever_graphs_l2473; assert_equal("2015", worksheet.lever_graphs_l2473); end
  def test_lever_graphs_m2473; assert_equal("2020", worksheet.lever_graphs_m2473); end
  def test_lever_graphs_n2473; assert_equal("2025", worksheet.lever_graphs_n2473); end
  def test_lever_graphs_o2473; assert_equal("2030", worksheet.lever_graphs_o2473); end
  def test_lever_graphs_p2473; assert_equal("2035", worksheet.lever_graphs_p2473); end
  def test_lever_graphs_q2473; assert_equal("2040", worksheet.lever_graphs_q2473); end
  def test_lever_graphs_r2473; assert_equal("2045", worksheet.lever_graphs_r2473); end
  def test_lever_graphs_s2473; assert_equal("2050", worksheet.lever_graphs_s2473); end
  def test_lever_graphs_b2474; assert_equal("Historic data", worksheet.lever_graphs_b2474); end
  def test_lever_graphs_b2475; assert_in_delta(1.0, worksheet.lever_graphs_b2475, 0.002); end
  def test_lever_graphs_k2475; assert_in_epsilon(65.982, worksheet.lever_graphs_k2475, 0.002); end
  def test_lever_graphs_l2475; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2475, 0.002); end
  def test_lever_graphs_m2475; assert_in_epsilon(63.21692307692307, worksheet.lever_graphs_m2475, 0.002); end
  def test_lever_graphs_n2475; assert_in_epsilon(61.68076923076923, worksheet.lever_graphs_n2475, 0.002); end
  def test_lever_graphs_o2475; assert_in_epsilon(60.14461538461538, worksheet.lever_graphs_o2475, 0.002); end
  def test_lever_graphs_p2475; assert_in_epsilon(58.608461538461526, worksheet.lever_graphs_p2475, 0.002); end
  def test_lever_graphs_q2475; assert_in_epsilon(57.07230769230768, worksheet.lever_graphs_q2475, 0.002); end
  def test_lever_graphs_r2475; assert_in_epsilon(55.53615384615383, worksheet.lever_graphs_r2475, 0.002); end
  def test_lever_graphs_s2475; assert_in_epsilon(53.99999999999999, worksheet.lever_graphs_s2475, 0.002); end
  def test_lever_graphs_b2476; assert_in_epsilon(2.0, worksheet.lever_graphs_b2476, 0.002); end
  def test_lever_graphs_k2476; assert_in_epsilon(65.982, worksheet.lever_graphs_k2476, 0.002); end
  def test_lever_graphs_l2476; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2476, 0.002); end
  def test_lever_graphs_m2476; assert_in_epsilon(61.93120879120879, worksheet.lever_graphs_m2476, 0.002); end
  def test_lever_graphs_n2476; assert_in_epsilon(59.10934065934066, worksheet.lever_graphs_n2476, 0.002); end
  def test_lever_graphs_o2476; assert_in_epsilon(56.287472527472524, worksheet.lever_graphs_o2476, 0.002); end
  def test_lever_graphs_p2476; assert_in_epsilon(53.46560439560439, worksheet.lever_graphs_p2476, 0.002); end
  def test_lever_graphs_q2476; assert_in_epsilon(50.64373626373626, worksheet.lever_graphs_q2476, 0.002); end
  def test_lever_graphs_r2476; assert_in_epsilon(47.82186813186812, worksheet.lever_graphs_r2476, 0.002); end
  def test_lever_graphs_s2476; assert_in_epsilon(45.0, worksheet.lever_graphs_s2476, 0.002); end
  def test_lever_graphs_b2477; assert_in_epsilon(3.0, worksheet.lever_graphs_b2477, 0.002); end
  def test_lever_graphs_k2477; assert_in_epsilon(65.982, worksheet.lever_graphs_k2477, 0.002); end
  def test_lever_graphs_l2477; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2477, 0.002); end
  def test_lever_graphs_m2477; assert_in_epsilon(61.21692307692308, worksheet.lever_graphs_m2477, 0.002); end
  def test_lever_graphs_n2477; assert_in_epsilon(57.680769230769236, worksheet.lever_graphs_n2477, 0.002); end
  def test_lever_graphs_o2477; assert_in_epsilon(54.144615384615385, worksheet.lever_graphs_o2477, 0.002); end
  def test_lever_graphs_p2477; assert_in_epsilon(50.60846153846153, worksheet.lever_graphs_p2477, 0.002); end
  def test_lever_graphs_q2477; assert_in_epsilon(47.07230769230769, worksheet.lever_graphs_q2477, 0.002); end
  def test_lever_graphs_r2477; assert_in_epsilon(43.536153846153844, worksheet.lever_graphs_r2477, 0.002); end
  def test_lever_graphs_s2477; assert_in_epsilon(40.0, worksheet.lever_graphs_s2477, 0.002); end
  def test_lever_graphs_b2478; assert_in_epsilon(4.0, worksheet.lever_graphs_b2478, 0.002); end
  def test_lever_graphs_k2478; assert_in_epsilon(65.982, worksheet.lever_graphs_k2478, 0.002); end
  def test_lever_graphs_l2478; assert_in_epsilon(64.75307692307692, worksheet.lever_graphs_l2478, 0.002); end
  def test_lever_graphs_m2478; assert_in_epsilon(60.35978021978022, worksheet.lever_graphs_m2478, 0.002); end
  def test_lever_graphs_n2478; assert_in_epsilon(55.966483516483514, worksheet.lever_graphs_n2478, 0.002); end
  def test_lever_graphs_o2478; assert_in_epsilon(51.573186813186815, worksheet.lever_graphs_o2478, 0.002); end
  def test_lever_graphs_p2478; assert_in_epsilon(47.17989010989011, worksheet.lever_graphs_p2478, 0.002); end
  def test_lever_graphs_q2478; assert_in_epsilon(42.786593406593404, worksheet.lever_graphs_q2478, 0.002); end
  def test_lever_graphs_r2478; assert_in_epsilon(38.3932967032967, worksheet.lever_graphs_r2478, 0.002); end
  def test_lever_graphs_s2478; assert_in_epsilon(34.0, worksheet.lever_graphs_s2478, 0.002); end
  def test_lever_graphs_c2463; assert_equal("1975", worksheet.lever_graphs_c2463); end
  def test_lever_graphs_d2463; assert_equal("1980", worksheet.lever_graphs_d2463); end
  def test_lever_graphs_e2463; assert_equal("1985", worksheet.lever_graphs_e2463); end
  def test_lever_graphs_f2463; assert_equal("1990", worksheet.lever_graphs_f2463); end
  def test_lever_graphs_g2463; assert_equal("1995", worksheet.lever_graphs_g2463); end
  def test_lever_graphs_h2463; assert_equal("2000", worksheet.lever_graphs_h2463); end
  def test_lever_graphs_i2463; assert_equal("2005", worksheet.lever_graphs_i2463); end
  def test_lever_graphs_j2463; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2463, 0.002); end
  def test_lever_graphs_k2463; assert_equal("2011", worksheet.lever_graphs_k2463); end
  def test_lever_graphs_l2463; assert_equal("2015", worksheet.lever_graphs_l2463); end
  def test_lever_graphs_m2463; assert_equal("2020", worksheet.lever_graphs_m2463); end
  def test_lever_graphs_n2463; assert_equal("2025", worksheet.lever_graphs_n2463); end
  def test_lever_graphs_o2463; assert_equal("2030", worksheet.lever_graphs_o2463); end
  def test_lever_graphs_p2463; assert_equal("2035", worksheet.lever_graphs_p2463); end
  def test_lever_graphs_q2463; assert_equal("2040", worksheet.lever_graphs_q2463); end
  def test_lever_graphs_r2463; assert_equal("2045", worksheet.lever_graphs_r2463); end
  def test_lever_graphs_s2463; assert_equal("2050", worksheet.lever_graphs_s2463); end
  def test_lever_graphs_b2464; assert_equal("Historic data", worksheet.lever_graphs_b2464); end
  def test_lever_graphs_b2465; assert_in_delta(1.0, worksheet.lever_graphs_b2465, 0.002); end
  def test_lever_graphs_k2465; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2465, 0.002); end
  def test_lever_graphs_l2465; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2465, 0.002); end
  def test_lever_graphs_m2465; assert_in_epsilon(248.38461538461533, worksheet.lever_graphs_m2465, 0.002); end
  def test_lever_graphs_n2465; assert_in_epsilon(247.4871794871795, worksheet.lever_graphs_n2465, 0.002); end
  def test_lever_graphs_o2465; assert_in_epsilon(246.58974358974356, worksheet.lever_graphs_o2465, 0.002); end
  def test_lever_graphs_p2465; assert_in_epsilon(245.69230769230762, worksheet.lever_graphs_p2465, 0.002); end
  def test_lever_graphs_q2465; assert_in_epsilon(244.7948717948718, worksheet.lever_graphs_q2465, 0.002); end
  def test_lever_graphs_r2465; assert_in_epsilon(243.89743589743586, worksheet.lever_graphs_r2465, 0.002); end
  def test_lever_graphs_s2465; assert_in_epsilon(242.99999999999997, worksheet.lever_graphs_s2465, 0.002); end
  def test_lever_graphs_b2466; assert_in_epsilon(2.0, worksheet.lever_graphs_b2466, 0.002); end
  def test_lever_graphs_k2466; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2466, 0.002); end
  def test_lever_graphs_l2466; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2466, 0.002); end
  def test_lever_graphs_m2466; assert_in_epsilon(243.38461538461536, worksheet.lever_graphs_m2466, 0.002); end
  def test_lever_graphs_n2466; assert_in_epsilon(237.48717948717947, worksheet.lever_graphs_n2466, 0.002); end
  def test_lever_graphs_o2466; assert_in_epsilon(231.58974358974353, worksheet.lever_graphs_o2466, 0.002); end
  def test_lever_graphs_p2466; assert_in_epsilon(225.69230769230765, worksheet.lever_graphs_p2466, 0.002); end
  def test_lever_graphs_q2466; assert_in_epsilon(219.79487179487177, worksheet.lever_graphs_q2466, 0.002); end
  def test_lever_graphs_r2466; assert_in_epsilon(213.89743589743586, worksheet.lever_graphs_r2466, 0.002); end
  def test_lever_graphs_s2466; assert_in_epsilon(207.99999999999997, worksheet.lever_graphs_s2466, 0.002); end
  def test_lever_graphs_b2467; assert_in_epsilon(3.0, worksheet.lever_graphs_b2467, 0.002); end
  def test_lever_graphs_k2467; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2467, 0.002); end
  def test_lever_graphs_l2467; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2467, 0.002); end
  def test_lever_graphs_m2467; assert_in_epsilon(241.09890109890108, worksheet.lever_graphs_m2467, 0.002); end
  def test_lever_graphs_n2467; assert_in_epsilon(232.9157509157509, worksheet.lever_graphs_n2467, 0.002); end
  def test_lever_graphs_o2467; assert_in_epsilon(224.73260073260073, worksheet.lever_graphs_o2467, 0.002); end
  def test_lever_graphs_p2467; assert_in_epsilon(216.5494505494505, worksheet.lever_graphs_p2467, 0.002); end
  def test_lever_graphs_q2467; assert_in_epsilon(208.36630036630038, worksheet.lever_graphs_q2467, 0.002); end
  def test_lever_graphs_r2467; assert_in_epsilon(200.18315018315016, worksheet.lever_graphs_r2467, 0.002); end
  def test_lever_graphs_s2467; assert_in_epsilon(192.0, worksheet.lever_graphs_s2467, 0.002); end
  def test_lever_graphs_b2468; assert_in_epsilon(4.0, worksheet.lever_graphs_b2468, 0.002); end
  def test_lever_graphs_k2468; assert_in_epsilon(249.99999999999997, worksheet.lever_graphs_k2468, 0.002); end
  def test_lever_graphs_l2468; assert_in_epsilon(249.28205128205127, worksheet.lever_graphs_l2468, 0.002); end
  def test_lever_graphs_m2468; assert_in_epsilon(238.5274725274725, worksheet.lever_graphs_m2468, 0.002); end
  def test_lever_graphs_n2468; assert_in_epsilon(227.77289377289375, worksheet.lever_graphs_n2468, 0.002); end
  def test_lever_graphs_o2468; assert_in_epsilon(217.018315018315, worksheet.lever_graphs_o2468, 0.002); end
  def test_lever_graphs_p2468; assert_in_epsilon(206.26373626373623, worksheet.lever_graphs_p2468, 0.002); end
  def test_lever_graphs_q2468; assert_in_epsilon(195.50915750915746, worksheet.lever_graphs_q2468, 0.002); end
  def test_lever_graphs_r2468; assert_in_epsilon(184.75457875457872, worksheet.lever_graphs_r2468, 0.002); end
  def test_lever_graphs_s2468; assert_in_epsilon(173.99999999999997, worksheet.lever_graphs_s2468, 0.002); end
  def test_lever_graphs_d2371; assert_equal("Title", worksheet.lever_graphs_d2371); end
  def test_lever_graphs_e2371; assert_equal("Global urban refrigerator used by people with access to electricity", worksheet.lever_graphs_e2371); end
  def test_lever_graphs_f2371; assert_equal("Global urban dishwashers used by people with access to electricity", worksheet.lever_graphs_f2371); end
  def test_lever_graphs_g2371; assert_equal("Global urban clothwasher used by people with access to electricity", worksheet.lever_graphs_g2371); end
  def test_lever_graphs_h2371; assert_equal("Global urban clothdryers used by people with access to electricity", worksheet.lever_graphs_h2371); end
  def test_lever_graphs_i2371; assert_equal("Global urban TV used by people with access to electricity", worksheet.lever_graphs_i2371); end
  def test_lever_graphs_j2371; assert_equal("Global urban miscellaneous used by people with access to electricity", worksheet.lever_graphs_j2371); end
  def test_lever_graphs_d2372; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2372, 0.002); end
  def test_lever_graphs_e2372; assert_in_delta(0.9556862861159037, worksheet.lever_graphs_e2372, 0.002); end
  def test_lever_graphs_f2372; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2372, 0.002); end
  def test_lever_graphs_g2372; assert_in_delta(0.7803646989372999, worksheet.lever_graphs_g2372, 0.002); end
  def test_lever_graphs_h2372; assert_in_delta(0.25750327590507216, worksheet.lever_graphs_h2372, 0.002); end
  def test_lever_graphs_i2372; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2372, 0.002); end
  def test_lever_graphs_j2372; assert_in_epsilon(2.0, worksheet.lever_graphs_j2372, 0.002); end
  def test_lever_graphs_d2373; assert_equal("2050: Level 1", worksheet.lever_graphs_d2373); end
  def test_lever_graphs_e2373; assert_in_epsilon(1.4335294291738556, worksheet.lever_graphs_e2373, 0.002); end
  def test_lever_graphs_f2373; assert_in_delta(0.664498073950059, worksheet.lever_graphs_f2373, 0.002); end
  def test_lever_graphs_g2373; assert_in_delta(0.9988668146397438, worksheet.lever_graphs_g2373, 0.002); end
  def test_lever_graphs_h2373; assert_in_delta(0.7982601553057237, worksheet.lever_graphs_h2373, 0.002); end
  def test_lever_graphs_i2373; assert_in_epsilon(2.448841089755415, worksheet.lever_graphs_i2373, 0.002); end
  def test_lever_graphs_j2373; assert_in_epsilon(5.0, worksheet.lever_graphs_j2373, 0.002); end
  def test_lever_graphs_d2374; assert_equal("2050: Level 2", worksheet.lever_graphs_d2374); end
  def test_lever_graphs_e2374; assert_in_epsilon(1.2423921719506748, worksheet.lever_graphs_e2374, 0.002); end
  def test_lever_graphs_f2374; assert_in_delta(0.5980482665550532, worksheet.lever_graphs_f2374, 0.002); end
  def test_lever_graphs_g2374; assert_in_delta(0.9208303447460138, worksheet.lever_graphs_g2374, 0.002); end
  def test_lever_graphs_h2374; assert_in_delta(0.592257534581666, worksheet.lever_graphs_h2374, 0.002); end
  def test_lever_graphs_i2374; assert_in_epsilon(2.122328944454693, worksheet.lever_graphs_i2374, 0.002); end
  def test_lever_graphs_j2374; assert_in_epsilon(4.2, worksheet.lever_graphs_j2374, 0.002); end
  def test_lever_graphs_d2375; assert_equal("2050: Level 3", worksheet.lever_graphs_d2375); end
  def test_lever_graphs_e2375; assert_in_epsilon(1.1277098176167664, worksheet.lever_graphs_e2375, 0.002); end
  def test_lever_graphs_f2375; assert_in_delta(0.49837355546254425, worksheet.lever_graphs_f2375, 0.002); end
  def test_lever_graphs_g2375; assert_in_delta(0.8584011688310299, worksheet.lever_graphs_g2375, 0.002); end
  def test_lever_graphs_h2375; assert_in_delta(0.4635058966291299, worksheet.lever_graphs_h2375, 0.002); end
  def test_lever_graphs_i2375; assert_in_epsilon(1.9590728718043318, worksheet.lever_graphs_i2375, 0.002); end
  def test_lever_graphs_j2375; assert_in_epsilon(3.6, worksheet.lever_graphs_j2375, 0.002); end
  def test_lever_graphs_d2376; assert_equal("2050: Level 4", worksheet.lever_graphs_d2376); end
  def test_lever_graphs_e2376; assert_in_epsilon(1.0034706004216989, worksheet.lever_graphs_e2376, 0.002); end
  def test_lever_graphs_f2376; assert_in_delta(0.3322490369750295, worksheet.lever_graphs_f2376, 0.002); end
  def test_lever_graphs_g2376; assert_in_delta(0.8193829338841649, worksheet.lever_graphs_g2376, 0.002); end
  def test_lever_graphs_h2376; assert_in_delta(0.296128767290833, worksheet.lever_graphs_h2376, 0.002); end
  def test_lever_graphs_i2376; assert_in_epsilon(1.63256072650361, worksheet.lever_graphs_i2376, 0.002); end
  def test_lever_graphs_j2376; assert_in_epsilon(3.0, worksheet.lever_graphs_j2376, 0.002); end
  def test_lever_graphs_c2953; assert_equal("1975", worksheet.lever_graphs_c2953); end
  def test_lever_graphs_d2953; assert_equal("1980", worksheet.lever_graphs_d2953); end
  def test_lever_graphs_e2953; assert_equal("1985", worksheet.lever_graphs_e2953); end
  def test_lever_graphs_f2953; assert_equal("1990", worksheet.lever_graphs_f2953); end
  def test_lever_graphs_g2953; assert_equal("1995", worksheet.lever_graphs_g2953); end
  def test_lever_graphs_h2953; assert_equal("2000", worksheet.lever_graphs_h2953); end
  def test_lever_graphs_i2953; assert_equal("2005", worksheet.lever_graphs_i2953); end
  def test_lever_graphs_j2953; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2953, 0.002); end
  def test_lever_graphs_k2953; assert_equal("2011", worksheet.lever_graphs_k2953); end
  def test_lever_graphs_l2953; assert_equal("2015", worksheet.lever_graphs_l2953); end
  def test_lever_graphs_m2953; assert_equal("2020", worksheet.lever_graphs_m2953); end
  def test_lever_graphs_n2953; assert_equal("2025", worksheet.lever_graphs_n2953); end
  def test_lever_graphs_o2953; assert_equal("2030", worksheet.lever_graphs_o2953); end
  def test_lever_graphs_p2953; assert_equal("2035", worksheet.lever_graphs_p2953); end
  def test_lever_graphs_q2953; assert_equal("2040", worksheet.lever_graphs_q2953); end
  def test_lever_graphs_r2953; assert_equal("2045", worksheet.lever_graphs_r2953); end
  def test_lever_graphs_s2953; assert_equal("2050", worksheet.lever_graphs_s2953); end
  def test_lever_graphs_b2954; assert_equal("Historic data", worksheet.lever_graphs_b2954); end
  def test_lever_graphs_b2955; assert_in_delta(1.0, worksheet.lever_graphs_b2955, 0.002); end
  def test_lever_graphs_k2955; assert_in_delta(0.4, worksheet.lever_graphs_k2955, 0.002); end
  def test_lever_graphs_l2955; assert_in_delta(0.37948717948717947, worksheet.lever_graphs_l2955, 0.002); end
  def test_lever_graphs_m2955; assert_in_delta(0.3538461538461538, worksheet.lever_graphs_m2955, 0.002); end
  def test_lever_graphs_n2955; assert_in_delta(0.32820512820512815, worksheet.lever_graphs_n2955, 0.002); end
  def test_lever_graphs_o2955; assert_in_delta(0.3025641025641026, worksheet.lever_graphs_o2955, 0.002); end
  def test_lever_graphs_p2955; assert_in_delta(0.27692307692307694, worksheet.lever_graphs_p2955, 0.002); end
  def test_lever_graphs_q2955; assert_in_delta(0.2512820512820513, worksheet.lever_graphs_q2955, 0.002); end
  def test_lever_graphs_r2955; assert_in_delta(0.22564102564102562, worksheet.lever_graphs_r2955, 0.002); end
  def test_lever_graphs_s2955; assert_in_delta(0.19999999999999996, worksheet.lever_graphs_s2955, 0.002); end
  def test_lever_graphs_b2956; assert_in_epsilon(2.0, worksheet.lever_graphs_b2956, 0.002); end
  def test_lever_graphs_k2956; assert_in_delta(0.4, worksheet.lever_graphs_k2956, 0.002); end
  def test_lever_graphs_l2956; assert_in_delta(0.4, worksheet.lever_graphs_l2956, 0.002); end
  def test_lever_graphs_m2956; assert_in_delta(0.4, worksheet.lever_graphs_m2956, 0.002); end
  def test_lever_graphs_n2956; assert_in_delta(0.4, worksheet.lever_graphs_n2956, 0.002); end
  def test_lever_graphs_o2956; assert_in_delta(0.4, worksheet.lever_graphs_o2956, 0.002); end
  def test_lever_graphs_p2956; assert_in_delta(0.4, worksheet.lever_graphs_p2956, 0.002); end
  def test_lever_graphs_q2956; assert_in_delta(0.4, worksheet.lever_graphs_q2956, 0.002); end
  def test_lever_graphs_r2956; assert_in_delta(0.4, worksheet.lever_graphs_r2956, 0.002); end
  def test_lever_graphs_s2956; assert_in_delta(0.4, worksheet.lever_graphs_s2956, 0.002); end
  def test_lever_graphs_b2957; assert_in_epsilon(3.0, worksheet.lever_graphs_b2957, 0.002); end
  def test_lever_graphs_k2957; assert_in_delta(0.4, worksheet.lever_graphs_k2957, 0.002); end
  def test_lever_graphs_l2957; assert_in_delta(0.4205128205128206, worksheet.lever_graphs_l2957, 0.002); end
  def test_lever_graphs_m2957; assert_in_delta(0.4461538461538461, worksheet.lever_graphs_m2957, 0.002); end
  def test_lever_graphs_n2957; assert_in_delta(0.4717948717948718, worksheet.lever_graphs_n2957, 0.002); end
  def test_lever_graphs_o2957; assert_in_delta(0.49743589743589745, worksheet.lever_graphs_o2957, 0.002); end
  def test_lever_graphs_p2957; assert_in_delta(0.5230769230769231, worksheet.lever_graphs_p2957, 0.002); end
  def test_lever_graphs_q2957; assert_in_delta(0.5487179487179488, worksheet.lever_graphs_q2957, 0.002); end
  def test_lever_graphs_r2957; assert_in_delta(0.5743589743589743, worksheet.lever_graphs_r2957, 0.002); end
  def test_lever_graphs_s2957; assert_in_delta(0.6, worksheet.lever_graphs_s2957, 0.002); end
  def test_lever_graphs_b2958; assert_in_epsilon(4.0, worksheet.lever_graphs_b2958, 0.002); end
  def test_lever_graphs_k2958; assert_in_delta(0.4, worksheet.lever_graphs_k2958, 0.002); end
  def test_lever_graphs_l2958; assert_in_delta(0.441025641025641, worksheet.lever_graphs_l2958, 0.002); end
  def test_lever_graphs_m2958; assert_in_delta(0.49230769230769234, worksheet.lever_graphs_m2958, 0.002); end
  def test_lever_graphs_n2958; assert_in_delta(0.5435897435897437, worksheet.lever_graphs_n2958, 0.002); end
  def test_lever_graphs_o2958; assert_in_delta(0.5948717948717949, worksheet.lever_graphs_o2958, 0.002); end
  def test_lever_graphs_p2958; assert_in_delta(0.6461538461538462, worksheet.lever_graphs_p2958, 0.002); end
  def test_lever_graphs_q2958; assert_in_delta(0.6974358974358974, worksheet.lever_graphs_q2958, 0.002); end
  def test_lever_graphs_r2958; assert_in_delta(0.7487179487179487, worksheet.lever_graphs_r2958, 0.002); end
  def test_lever_graphs_s2958; assert_in_delta(0.8, worksheet.lever_graphs_s2958, 0.002); end
  def test_lever_graphs_c2935; assert_equal("1975", worksheet.lever_graphs_c2935); end
  def test_lever_graphs_d2935; assert_equal("1980", worksheet.lever_graphs_d2935); end
  def test_lever_graphs_e2935; assert_equal("1985", worksheet.lever_graphs_e2935); end
  def test_lever_graphs_f2935; assert_equal("1990", worksheet.lever_graphs_f2935); end
  def test_lever_graphs_g2935; assert_equal("1995", worksheet.lever_graphs_g2935); end
  def test_lever_graphs_h2935; assert_equal("2000", worksheet.lever_graphs_h2935); end
  def test_lever_graphs_i2935; assert_equal("2005", worksheet.lever_graphs_i2935); end
  def test_lever_graphs_j2935; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2935, 0.002); end
  def test_lever_graphs_k2935; assert_equal("2011", worksheet.lever_graphs_k2935); end
  def test_lever_graphs_l2935; assert_equal("2015", worksheet.lever_graphs_l2935); end
  def test_lever_graphs_m2935; assert_equal("2020", worksheet.lever_graphs_m2935); end
  def test_lever_graphs_n2935; assert_equal("2025", worksheet.lever_graphs_n2935); end
  def test_lever_graphs_o2935; assert_equal("2030", worksheet.lever_graphs_o2935); end
  def test_lever_graphs_p2935; assert_equal("2035", worksheet.lever_graphs_p2935); end
  def test_lever_graphs_q2935; assert_equal("2040", worksheet.lever_graphs_q2935); end
  def test_lever_graphs_r2935; assert_equal("2045", worksheet.lever_graphs_r2935); end
  def test_lever_graphs_s2935; assert_equal("2050", worksheet.lever_graphs_s2935); end
  def test_lever_graphs_b2936; assert_equal("Historic data", worksheet.lever_graphs_b2936); end
  def test_lever_graphs_b2937; assert_in_delta(1.0, worksheet.lever_graphs_b2937, 0.002); end
  def test_lever_graphs_k2937; assert_in_delta(0.0, (worksheet.lever_graphs_k2937||0), 0.002); end
  def test_lever_graphs_l2937; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2937, 0.002); end
  def test_lever_graphs_m2937; assert_in_delta(0.046153846153846156, worksheet.lever_graphs_m2937, 0.002); end
  def test_lever_graphs_n2937; assert_in_delta(0.07179487179487179, worksheet.lever_graphs_n2937, 0.002); end
  def test_lever_graphs_o2937; assert_in_delta(0.09743589743589742, worksheet.lever_graphs_o2937, 0.002); end
  def test_lever_graphs_p2937; assert_in_delta(0.12307692307692307, worksheet.lever_graphs_p2937, 0.002); end
  def test_lever_graphs_q2937; assert_in_delta(0.14871794871794874, worksheet.lever_graphs_q2937, 0.002); end
  def test_lever_graphs_r2937; assert_in_delta(0.17435897435897435, worksheet.lever_graphs_r2937, 0.002); end
  def test_lever_graphs_s2937; assert_in_delta(0.2, worksheet.lever_graphs_s2937, 0.002); end
  def test_lever_graphs_b2938; assert_in_epsilon(2.0, worksheet.lever_graphs_b2938, 0.002); end
  def test_lever_graphs_k2938; assert_in_delta(0.0, (worksheet.lever_graphs_k2938||0), 0.002); end
  def test_lever_graphs_l2938; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2938, 0.002); end
  def test_lever_graphs_m2938; assert_in_delta(0.089010989010989, worksheet.lever_graphs_m2938, 0.002); end
  def test_lever_graphs_n2938; assert_in_delta(0.1575091575091575, worksheet.lever_graphs_n2938, 0.002); end
  def test_lever_graphs_o2938; assert_in_delta(0.226007326007326, worksheet.lever_graphs_o2938, 0.002); end
  def test_lever_graphs_p2938; assert_in_delta(0.29450549450549446, worksheet.lever_graphs_p2938, 0.002); end
  def test_lever_graphs_q2938; assert_in_delta(0.363003663003663, worksheet.lever_graphs_q2938, 0.002); end
  def test_lever_graphs_r2938; assert_in_delta(0.43150183150183147, worksheet.lever_graphs_r2938, 0.002); end
  def test_lever_graphs_s2938; assert_in_delta(0.5, worksheet.lever_graphs_s2938, 0.002); end
  def test_lever_graphs_b2939; assert_in_epsilon(3.0, worksheet.lever_graphs_b2939, 0.002); end
  def test_lever_graphs_k2939; assert_in_delta(0.0, (worksheet.lever_graphs_k2939||0), 0.002); end
  def test_lever_graphs_l2939; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2939, 0.002); end
  def test_lever_graphs_m2939; assert_in_delta(0.189010989010989, worksheet.lever_graphs_m2939, 0.002); end
  def test_lever_graphs_n2939; assert_in_delta(0.35750915750915746, worksheet.lever_graphs_n2939, 0.002); end
  def test_lever_graphs_o2939; assert_in_delta(0.526007326007326, worksheet.lever_graphs_o2939, 0.002); end
  def test_lever_graphs_p2939; assert_in_delta(0.6945054945054945, worksheet.lever_graphs_p2939, 0.002); end
  def test_lever_graphs_q2939; assert_in_delta(0.863003663003663, worksheet.lever_graphs_q2939, 0.002); end
  def test_lever_graphs_r2939; assert_in_epsilon(1.0315018315018314, worksheet.lever_graphs_r2939, 0.002); end
  def test_lever_graphs_s2939; assert_in_epsilon(1.2, worksheet.lever_graphs_s2939, 0.002); end
  def test_lever_graphs_b2940; assert_in_epsilon(4.0, worksheet.lever_graphs_b2940, 0.002); end
  def test_lever_graphs_k2940; assert_in_delta(0.0, (worksheet.lever_graphs_k2940||0), 0.002); end
  def test_lever_graphs_l2940; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2940, 0.002); end
  def test_lever_graphs_m2940; assert_in_delta(0.3032967032967033, worksheet.lever_graphs_m2940, 0.002); end
  def test_lever_graphs_n2940; assert_in_delta(0.5860805860805861, worksheet.lever_graphs_n2940, 0.002); end
  def test_lever_graphs_o2940; assert_in_delta(0.8688644688644689, worksheet.lever_graphs_o2940, 0.002); end
  def test_lever_graphs_p2940; assert_in_epsilon(1.1516483516483516, worksheet.lever_graphs_p2940, 0.002); end
  def test_lever_graphs_q2940; assert_in_epsilon(1.4344322344322344, worksheet.lever_graphs_q2940, 0.002); end
  def test_lever_graphs_r2940; assert_in_epsilon(1.717216117216117, worksheet.lever_graphs_r2940, 0.002); end
  def test_lever_graphs_s2940; assert_in_epsilon(2.0, worksheet.lever_graphs_s2940, 0.002); end
  def test_lever_graphs_c2277; assert_equal("1975", worksheet.lever_graphs_c2277); end
  def test_lever_graphs_d2277; assert_equal("1980", worksheet.lever_graphs_d2277); end
  def test_lever_graphs_e2277; assert_equal("1985", worksheet.lever_graphs_e2277); end
  def test_lever_graphs_f2277; assert_equal("1990", worksheet.lever_graphs_f2277); end
  def test_lever_graphs_g2277; assert_equal("1995", worksheet.lever_graphs_g2277); end
  def test_lever_graphs_h2277; assert_equal("2000", worksheet.lever_graphs_h2277); end
  def test_lever_graphs_i2277; assert_equal("2005", worksheet.lever_graphs_i2277); end
  def test_lever_graphs_j2277; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2277, 0.002); end
  def test_lever_graphs_k2277; assert_equal("2011", worksheet.lever_graphs_k2277); end
  def test_lever_graphs_l2277; assert_equal("2015", worksheet.lever_graphs_l2277); end
  def test_lever_graphs_m2277; assert_equal("2020", worksheet.lever_graphs_m2277); end
  def test_lever_graphs_n2277; assert_equal("2025", worksheet.lever_graphs_n2277); end
  def test_lever_graphs_o2277; assert_equal("2030", worksheet.lever_graphs_o2277); end
  def test_lever_graphs_p2277; assert_equal("2035", worksheet.lever_graphs_p2277); end
  def test_lever_graphs_q2277; assert_equal("2040", worksheet.lever_graphs_q2277); end
  def test_lever_graphs_r2277; assert_equal("2045", worksheet.lever_graphs_r2277); end
  def test_lever_graphs_s2277; assert_equal("2050", worksheet.lever_graphs_s2277); end
  def test_lever_graphs_b2278; assert_equal("Historic data", worksheet.lever_graphs_b2278); end
  def test_lever_graphs_b2279; assert_in_delta(1.0, worksheet.lever_graphs_b2279, 0.002); end
  def test_lever_graphs_k2279; assert_in_epsilon(78.0, worksheet.lever_graphs_k2279, 0.002); end
  def test_lever_graphs_l2279; assert_in_epsilon(78.7, worksheet.lever_graphs_l2279, 0.002); end
  def test_lever_graphs_m2279; assert_in_epsilon(81.74285714285715, worksheet.lever_graphs_m2279, 0.002); end
  def test_lever_graphs_n2279; assert_in_epsilon(84.78571428571429, worksheet.lever_graphs_n2279, 0.002); end
  def test_lever_graphs_o2279; assert_in_epsilon(87.82857142857142, worksheet.lever_graphs_o2279, 0.002); end
  def test_lever_graphs_p2279; assert_in_epsilon(90.87142857142857, worksheet.lever_graphs_p2279, 0.002); end
  def test_lever_graphs_q2279; assert_in_epsilon(93.91428571428571, worksheet.lever_graphs_q2279, 0.002); end
  def test_lever_graphs_r2279; assert_in_epsilon(96.95714285714286, worksheet.lever_graphs_r2279, 0.002); end
  def test_lever_graphs_s2279; assert_in_epsilon(100.0, worksheet.lever_graphs_s2279, 0.002); end
  def test_lever_graphs_b2280; assert_in_epsilon(2.0, worksheet.lever_graphs_b2280, 0.002); end
  def test_lever_graphs_k2280; assert_in_epsilon(78.0, worksheet.lever_graphs_k2280, 0.002); end
  def test_lever_graphs_l2280; assert_in_epsilon(78.7, worksheet.lever_graphs_l2280, 0.002); end
  def test_lever_graphs_m2280; assert_in_epsilon(81.02857142857142, worksheet.lever_graphs_m2280, 0.002); end
  def test_lever_graphs_n2280; assert_in_epsilon(83.35714285714285, worksheet.lever_graphs_n2280, 0.002); end
  def test_lever_graphs_o2280; assert_in_epsilon(85.68571428571428, worksheet.lever_graphs_o2280, 0.002); end
  def test_lever_graphs_p2280; assert_in_epsilon(88.0142857142857, worksheet.lever_graphs_p2280, 0.002); end
  def test_lever_graphs_q2280; assert_in_epsilon(90.34285714285716, worksheet.lever_graphs_q2280, 0.002); end
  def test_lever_graphs_r2280; assert_in_epsilon(92.67142857142858, worksheet.lever_graphs_r2280, 0.002); end
  def test_lever_graphs_s2280; assert_in_epsilon(95.0, worksheet.lever_graphs_s2280, 0.002); end
  def test_lever_graphs_b2281; assert_in_epsilon(3.0, worksheet.lever_graphs_b2281, 0.002); end
  def test_lever_graphs_k2281; assert_in_epsilon(78.0, worksheet.lever_graphs_k2281, 0.002); end
  def test_lever_graphs_l2281; assert_in_epsilon(78.7, worksheet.lever_graphs_l2281, 0.002); end
  def test_lever_graphs_m2281; assert_in_epsilon(80.31428571428572, worksheet.lever_graphs_m2281, 0.002); end
  def test_lever_graphs_n2281; assert_in_epsilon(81.92857142857142, worksheet.lever_graphs_n2281, 0.002); end
  def test_lever_graphs_o2281; assert_in_epsilon(83.54285714285713, worksheet.lever_graphs_o2281, 0.002); end
  def test_lever_graphs_p2281; assert_in_epsilon(85.15714285714284, worksheet.lever_graphs_p2281, 0.002); end
  def test_lever_graphs_q2281; assert_in_epsilon(86.77142857142857, worksheet.lever_graphs_q2281, 0.002); end
  def test_lever_graphs_r2281; assert_in_epsilon(88.38571428571429, worksheet.lever_graphs_r2281, 0.002); end
  def test_lever_graphs_s2281; assert_in_epsilon(89.99999999999999, worksheet.lever_graphs_s2281, 0.002); end
  def test_lever_graphs_b2282; assert_in_epsilon(4.0, worksheet.lever_graphs_b2282, 0.002); end
  def test_lever_graphs_k2282; assert_in_epsilon(78.0, worksheet.lever_graphs_k2282, 0.002); end
  def test_lever_graphs_l2282; assert_in_epsilon(78.7, worksheet.lever_graphs_l2282, 0.002); end
  def test_lever_graphs_m2282; assert_in_epsilon(79.6, worksheet.lever_graphs_m2282, 0.002); end
  def test_lever_graphs_n2282; assert_in_epsilon(80.49999999999999, worksheet.lever_graphs_n2282, 0.002); end
  def test_lever_graphs_o2282; assert_in_epsilon(81.4, worksheet.lever_graphs_o2282, 0.002); end
  def test_lever_graphs_p2282; assert_in_epsilon(82.3, worksheet.lever_graphs_p2282, 0.002); end
  def test_lever_graphs_q2282; assert_in_epsilon(83.2, worksheet.lever_graphs_q2282, 0.002); end
  def test_lever_graphs_r2282; assert_in_epsilon(84.10000000000001, worksheet.lever_graphs_r2282, 0.002); end
  def test_lever_graphs_s2282; assert_in_epsilon(85.0, worksheet.lever_graphs_s2282, 0.002); end
  def test_lever_graphs_b2283; assert_equal("Australia -average", worksheet.lever_graphs_b2283); end
  def test_lever_graphs_k2283; assert_in_epsilon(214.0, worksheet.lever_graphs_k2283, 0.002); end
  def test_lever_graphs_b2284; assert_equal("US -average", worksheet.lever_graphs_b2284); end
  def test_lever_graphs_k2284; assert_in_epsilon(201.0, worksheet.lever_graphs_k2284, 0.002); end
  def test_lever_graphs_b2285; assert_equal("Germany -average", worksheet.lever_graphs_b2285); end
  def test_lever_graphs_k2285; assert_in_epsilon(109.0, worksheet.lever_graphs_k2285, 0.002); end
  def test_lever_graphs_b2286; assert_equal("Spain -average", worksheet.lever_graphs_b2286); end
  def test_lever_graphs_k2286; assert_in_epsilon(97.0, worksheet.lever_graphs_k2286, 0.002); end
  def test_lever_graphs_b2287; assert_equal("UK -average", worksheet.lever_graphs_b2287); end
  def test_lever_graphs_k2287; assert_in_epsilon(76.0, worksheet.lever_graphs_k2287, 0.002); end
  def test_lever_graphs_b2288; assert_equal("China -average", worksheet.lever_graphs_b2288); end
  def test_lever_graphs_k2288; assert_in_epsilon(60.0, worksheet.lever_graphs_k2288, 0.002); end
  def test_lever_graphs_b2289; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2289); end
  def test_lever_graphs_k2289; assert_in_epsilon(45.0, worksheet.lever_graphs_k2289, 0.002); end
  def test_lever_graphs_c2260; assert_equal("1975", worksheet.lever_graphs_c2260); end
  def test_lever_graphs_d2260; assert_equal("1980", worksheet.lever_graphs_d2260); end
  def test_lever_graphs_e2260; assert_equal("1985", worksheet.lever_graphs_e2260); end
  def test_lever_graphs_f2260; assert_equal("1990", worksheet.lever_graphs_f2260); end
  def test_lever_graphs_g2260; assert_equal("1995", worksheet.lever_graphs_g2260); end
  def test_lever_graphs_h2260; assert_equal("2000", worksheet.lever_graphs_h2260); end
  def test_lever_graphs_i2260; assert_equal("2005", worksheet.lever_graphs_i2260); end
  def test_lever_graphs_j2260; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2260, 0.002); end
  def test_lever_graphs_k2260; assert_equal("2011", worksheet.lever_graphs_k2260); end
  def test_lever_graphs_l2260; assert_equal("2015", worksheet.lever_graphs_l2260); end
  def test_lever_graphs_m2260; assert_equal("2020", worksheet.lever_graphs_m2260); end
  def test_lever_graphs_n2260; assert_equal("2025", worksheet.lever_graphs_n2260); end
  def test_lever_graphs_o2260; assert_equal("2030", worksheet.lever_graphs_o2260); end
  def test_lever_graphs_p2260; assert_equal("2035", worksheet.lever_graphs_p2260); end
  def test_lever_graphs_q2260; assert_equal("2040", worksheet.lever_graphs_q2260); end
  def test_lever_graphs_r2260; assert_equal("2045", worksheet.lever_graphs_r2260); end
  def test_lever_graphs_s2260; assert_equal("2050", worksheet.lever_graphs_s2260); end
  def test_lever_graphs_b2261; assert_equal("Historical data", worksheet.lever_graphs_b2261); end
  def test_lever_graphs_b2262; assert_in_delta(1.0, worksheet.lever_graphs_b2262, 0.002); end
  def test_lever_graphs_k2262; assert_in_epsilon(92.0, worksheet.lever_graphs_k2262, 0.002); end
  def test_lever_graphs_l2262; assert_in_epsilon(92.8, worksheet.lever_graphs_l2262, 0.002); end
  def test_lever_graphs_m2262; assert_in_epsilon(95.25714285714285, worksheet.lever_graphs_m2262, 0.002); end
  def test_lever_graphs_n2262; assert_in_epsilon(97.71428571428571, worksheet.lever_graphs_n2262, 0.002); end
  def test_lever_graphs_o2262; assert_in_epsilon(100.17142857142856, worksheet.lever_graphs_o2262, 0.002); end
  def test_lever_graphs_p2262; assert_in_epsilon(102.62857142857142, worksheet.lever_graphs_p2262, 0.002); end
  def test_lever_graphs_q2262; assert_in_epsilon(105.08571428571427, worksheet.lever_graphs_q2262, 0.002); end
  def test_lever_graphs_r2262; assert_in_epsilon(107.54285714285714, worksheet.lever_graphs_r2262, 0.002); end
  def test_lever_graphs_s2262; assert_in_epsilon(110.0, worksheet.lever_graphs_s2262, 0.002); end
  def test_lever_graphs_b2263; assert_in_epsilon(2.0, worksheet.lever_graphs_b2263, 0.002); end
  def test_lever_graphs_k2263; assert_in_epsilon(92.0, worksheet.lever_graphs_k2263, 0.002); end
  def test_lever_graphs_l2263; assert_in_epsilon(92.8, worksheet.lever_graphs_l2263, 0.002); end
  def test_lever_graphs_m2263; assert_in_epsilon(94.54285714285713, worksheet.lever_graphs_m2263, 0.002); end
  def test_lever_graphs_n2263; assert_in_epsilon(96.28571428571428, worksheet.lever_graphs_n2263, 0.002); end
  def test_lever_graphs_o2263; assert_in_epsilon(98.02857142857141, worksheet.lever_graphs_o2263, 0.002); end
  def test_lever_graphs_p2263; assert_in_epsilon(99.77142857142856, worksheet.lever_graphs_p2263, 0.002); end
  def test_lever_graphs_q2263; assert_in_epsilon(101.51428571428569, worksheet.lever_graphs_q2263, 0.002); end
  def test_lever_graphs_r2263; assert_in_epsilon(103.25714285714285, worksheet.lever_graphs_r2263, 0.002); end
  def test_lever_graphs_s2263; assert_in_epsilon(105.0, worksheet.lever_graphs_s2263, 0.002); end
  def test_lever_graphs_b2264; assert_in_epsilon(3.0, worksheet.lever_graphs_b2264, 0.002); end
  def test_lever_graphs_k2264; assert_in_epsilon(92.0, worksheet.lever_graphs_k2264, 0.002); end
  def test_lever_graphs_l2264; assert_in_epsilon(92.8, worksheet.lever_graphs_l2264, 0.002); end
  def test_lever_graphs_m2264; assert_in_epsilon(93.82857142857142, worksheet.lever_graphs_m2264, 0.002); end
  def test_lever_graphs_n2264; assert_in_epsilon(94.85714285714286, worksheet.lever_graphs_n2264, 0.002); end
  def test_lever_graphs_o2264; assert_in_epsilon(95.88571428571427, worksheet.lever_graphs_o2264, 0.002); end
  def test_lever_graphs_p2264; assert_in_epsilon(96.91428571428571, worksheet.lever_graphs_p2264, 0.002); end
  def test_lever_graphs_q2264; assert_in_epsilon(97.94285714285714, worksheet.lever_graphs_q2264, 0.002); end
  def test_lever_graphs_r2264; assert_in_epsilon(98.97142857142858, worksheet.lever_graphs_r2264, 0.002); end
  def test_lever_graphs_s2264; assert_in_epsilon(100.0, worksheet.lever_graphs_s2264, 0.002); end
  def test_lever_graphs_b2265; assert_in_epsilon(4.0, worksheet.lever_graphs_b2265, 0.002); end
  def test_lever_graphs_k2265; assert_in_epsilon(92.0, worksheet.lever_graphs_k2265, 0.002); end
  def test_lever_graphs_l2265; assert_in_epsilon(92.8, worksheet.lever_graphs_l2265, 0.002); end
  def test_lever_graphs_m2265; assert_in_epsilon(93.1142857142857, worksheet.lever_graphs_m2265, 0.002); end
  def test_lever_graphs_n2265; assert_in_epsilon(93.42857142857143, worksheet.lever_graphs_n2265, 0.002); end
  def test_lever_graphs_o2265; assert_in_epsilon(93.74285714285713, worksheet.lever_graphs_o2265, 0.002); end
  def test_lever_graphs_p2265; assert_in_epsilon(94.05714285714285, worksheet.lever_graphs_p2265, 0.002); end
  def test_lever_graphs_q2265; assert_in_epsilon(94.37142857142857, worksheet.lever_graphs_q2265, 0.002); end
  def test_lever_graphs_r2265; assert_in_epsilon(94.6857142857143, worksheet.lever_graphs_r2265, 0.002); end
  def test_lever_graphs_s2265; assert_in_epsilon(95.0, worksheet.lever_graphs_s2265, 0.002); end
  def test_lever_graphs_b2266; assert_equal("Australia -average", worksheet.lever_graphs_b2266); end
  def test_lever_graphs_k2266; assert_in_epsilon(214.0, worksheet.lever_graphs_k2266, 0.002); end
  def test_lever_graphs_b2267; assert_equal("US -average", worksheet.lever_graphs_b2267); end
  def test_lever_graphs_k2267; assert_in_epsilon(201.0, worksheet.lever_graphs_k2267, 0.002); end
  def test_lever_graphs_b2268; assert_equal("Germany -average", worksheet.lever_graphs_b2268); end
  def test_lever_graphs_k2268; assert_in_epsilon(109.0, worksheet.lever_graphs_k2268, 0.002); end
  def test_lever_graphs_b2269; assert_equal("Spain -average", worksheet.lever_graphs_b2269); end
  def test_lever_graphs_k2269; assert_in_epsilon(97.0, worksheet.lever_graphs_k2269, 0.002); end
  def test_lever_graphs_b2270; assert_equal("UK -average", worksheet.lever_graphs_b2270); end
  def test_lever_graphs_k2270; assert_in_epsilon(76.0, worksheet.lever_graphs_k2270, 0.002); end
  def test_lever_graphs_b2271; assert_equal("China -average", worksheet.lever_graphs_b2271); end
  def test_lever_graphs_k2271; assert_in_epsilon(60.0, worksheet.lever_graphs_k2271, 0.002); end
  def test_lever_graphs_b2272; assert_equal("Hong Kong -average", worksheet.lever_graphs_b2272); end
  def test_lever_graphs_k2272; assert_in_epsilon(45.0, worksheet.lever_graphs_k2272, 0.002); end
  def test_lever_graphs_c2758; assert_equal("1975", worksheet.lever_graphs_c2758); end
  def test_lever_graphs_d2758; assert_equal("1980", worksheet.lever_graphs_d2758); end
  def test_lever_graphs_e2758; assert_equal("1985", worksheet.lever_graphs_e2758); end
  def test_lever_graphs_f2758; assert_equal("1990", worksheet.lever_graphs_f2758); end
  def test_lever_graphs_g2758; assert_equal("1995", worksheet.lever_graphs_g2758); end
  def test_lever_graphs_h2758; assert_equal("2000", worksheet.lever_graphs_h2758); end
  def test_lever_graphs_i2758; assert_equal("2005", worksheet.lever_graphs_i2758); end
  def test_lever_graphs_j2758; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2758, 0.002); end
  def test_lever_graphs_k2758; assert_equal("2011", worksheet.lever_graphs_k2758); end
  def test_lever_graphs_l2758; assert_equal("2015", worksheet.lever_graphs_l2758); end
  def test_lever_graphs_m2758; assert_equal("2020", worksheet.lever_graphs_m2758); end
  def test_lever_graphs_n2758; assert_equal("2025", worksheet.lever_graphs_n2758); end
  def test_lever_graphs_o2758; assert_equal("2030", worksheet.lever_graphs_o2758); end
  def test_lever_graphs_p2758; assert_equal("2035", worksheet.lever_graphs_p2758); end
  def test_lever_graphs_q2758; assert_equal("2040", worksheet.lever_graphs_q2758); end
  def test_lever_graphs_r2758; assert_equal("2045", worksheet.lever_graphs_r2758); end
  def test_lever_graphs_s2758; assert_equal("2050", worksheet.lever_graphs_s2758); end
  def test_lever_graphs_b2759; assert_equal("Historic data", worksheet.lever_graphs_b2759); end
  def test_lever_graphs_d2759; assert_in_epsilon(1891.64, worksheet.lever_graphs_d2759, 0.002); end
  def test_lever_graphs_e2759; assert_in_epsilon(1966.88, worksheet.lever_graphs_e2759, 0.002); end
  def test_lever_graphs_f2759; assert_in_epsilon(1991.2, worksheet.lever_graphs_f2759, 0.002); end
  def test_lever_graphs_g2759; assert_in_epsilon(2023.1200000000001, worksheet.lever_graphs_g2759, 0.002); end
  def test_lever_graphs_h2759; assert_in_epsilon(2071.76, worksheet.lever_graphs_h2759, 0.002); end
  def test_lever_graphs_i2759; assert_in_epsilon(2098.36, worksheet.lever_graphs_i2759, 0.002); end
  def test_lever_graphs_b2760; assert_in_delta(1.0, worksheet.lever_graphs_b2760, 0.002); end
  def test_lever_graphs_k2760; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2760, 0.002); end
  def test_lever_graphs_l2760; assert_in_epsilon(2170.0, worksheet.lever_graphs_l2760, 0.002); end
  def test_lever_graphs_m2760; assert_in_epsilon(2178.156834115386, worksheet.lever_graphs_m2760, 0.002); end
  def test_lever_graphs_n2760; assert_in_epsilon(2197.879055105641, worksheet.lever_graphs_n2760, 0.002); end
  def test_lever_graphs_o2760; assert_in_epsilon(2254.708488397157, worksheet.lever_graphs_o2760, 0.002); end
  def test_lever_graphs_p2760; assert_in_epsilon(2365.0, worksheet.lever_graphs_p2760, 0.002); end
  def test_lever_graphs_q2760; assert_in_epsilon(2475.291511602843, worksheet.lever_graphs_q2760, 0.002); end
  def test_lever_graphs_r2760; assert_in_epsilon(2532.120944894359, worksheet.lever_graphs_r2760, 0.002); end
  def test_lever_graphs_s2760; assert_in_epsilon(2560.0, worksheet.lever_graphs_s2760, 0.002); end
  def test_lever_graphs_b2761; assert_in_epsilon(2.0, worksheet.lever_graphs_b2761, 0.002); end
  def test_lever_graphs_k2761; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2761, 0.002); end
  def test_lever_graphs_l2761; assert_in_epsilon(2170.0, worksheet.lever_graphs_l2761, 0.002); end
  def test_lever_graphs_m2761; assert_in_epsilon(2175.4378894102574, worksheet.lever_graphs_m2761, 0.002); end
  def test_lever_graphs_n2761; assert_in_epsilon(2188.586036737094, worksheet.lever_graphs_n2761, 0.002); end
  def test_lever_graphs_o2761; assert_in_epsilon(2226.472325598105, worksheet.lever_graphs_o2761, 0.002); end
  def test_lever_graphs_p2761; assert_in_epsilon(2300.0, worksheet.lever_graphs_p2761, 0.002); end
  def test_lever_graphs_q2761; assert_in_epsilon(2373.527674401895, worksheet.lever_graphs_q2761, 0.002); end
  def test_lever_graphs_r2761; assert_in_epsilon(2411.413963262906, worksheet.lever_graphs_r2761, 0.002); end
  def test_lever_graphs_s2761; assert_in_epsilon(2430.0, worksheet.lever_graphs_s2761, 0.002); end
  def test_lever_graphs_b2762; assert_in_epsilon(3.0, worksheet.lever_graphs_b2762, 0.002); end
  def test_lever_graphs_k2762; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2762, 0.002); end
  def test_lever_graphs_l2762; assert_in_epsilon(2170.0, worksheet.lever_graphs_l2762, 0.002); end
  def test_lever_graphs_m2762; assert_in_epsilon(2173.3463934832357, worksheet.lever_graphs_m2762, 0.002); end
  def test_lever_graphs_n2762; assert_in_epsilon(2181.437561068981, worksheet.lever_graphs_n2762, 0.002); end
  def test_lever_graphs_o2762; assert_in_epsilon(2204.752200368064, worksheet.lever_graphs_o2762, 0.002); end
  def test_lever_graphs_p2762; assert_in_epsilon(2250.0, worksheet.lever_graphs_p2762, 0.002); end
  def test_lever_graphs_q2762; assert_in_epsilon(2295.247799631936, worksheet.lever_graphs_q2762, 0.002); end
  def test_lever_graphs_r2762; assert_in_epsilon(2318.562438931019, worksheet.lever_graphs_r2762, 0.002); end
  def test_lever_graphs_s2762; assert_in_epsilon(2330.0, worksheet.lever_graphs_s2762, 0.002); end
  def test_lever_graphs_b2763; assert_in_epsilon(4.0, worksheet.lever_graphs_b2763, 0.002); end
  def test_lever_graphs_k2763; assert_in_epsilon(2170.0, worksheet.lever_graphs_k2763, 0.002); end
  def test_lever_graphs_l2763; assert_in_epsilon(2170.0, worksheet.lever_graphs_l2763, 0.002); end
  def test_lever_graphs_m2763; assert_in_epsilon(2168.535952851085, worksheet.lever_graphs_m2763, 0.002); end
  def test_lever_graphs_n2763; assert_in_epsilon(2164.9960670323208, worksheet.lever_graphs_n2763, 0.002); end
  def test_lever_graphs_o2763; assert_in_epsilon(2154.795912338972, worksheet.lever_graphs_o2763, 0.002); end
  def test_lever_graphs_p2763; assert_in_epsilon(2135.0, worksheet.lever_graphs_p2763, 0.002); end
  def test_lever_graphs_q2763; assert_in_epsilon(2115.204087661028, worksheet.lever_graphs_q2763, 0.002); end
  def test_lever_graphs_r2763; assert_in_epsilon(2105.0039329676792, worksheet.lever_graphs_r2763, 0.002); end
  def test_lever_graphs_s2763; assert_in_epsilon(2100.0, worksheet.lever_graphs_s2763, 0.002); end
  def test_lever_graphs_b2764; assert_equal("USA today", worksheet.lever_graphs_b2764); end
  def test_lever_graphs_k2764; assert_in_epsilon(2729.0, worksheet.lever_graphs_k2764, 0.002); end
  def test_lever_graphs_b2765; assert_equal("EU today", worksheet.lever_graphs_b2765); end
  def test_lever_graphs_k2765; assert_in_epsilon(2520.0, worksheet.lever_graphs_k2765, 0.002); end
  def test_lever_graphs_b2766; assert_equal("Australia today", worksheet.lever_graphs_b2766); end
  def test_lever_graphs_k2766; assert_in_epsilon(2449.0, worksheet.lever_graphs_k2766, 0.002); end
  def test_lever_graphs_b2767; assert_equal("China today", worksheet.lever_graphs_b2767); end
  def test_lever_graphs_k2767; assert_in_epsilon(2306.0, worksheet.lever_graphs_k2767, 0.002); end
  def test_lever_graphs_b2768; assert_equal("South Africa today", worksheet.lever_graphs_b2768); end
  def test_lever_graphs_k2768; assert_in_epsilon(2255.0, worksheet.lever_graphs_k2768, 0.002); end
  def test_lever_graphs_b2769; assert_equal("Bangladesh today", worksheet.lever_graphs_b2769); end
  def test_lever_graphs_k2769; assert_in_epsilon(1823.0, worksheet.lever_graphs_k2769, 0.002); end
  def test_lever_graphs_b2770; assert_equal("Malaysia today", worksheet.lever_graphs_b2770); end
  def test_lever_graphs_k2770; assert_in_epsilon(2141.0, worksheet.lever_graphs_k2770, 0.002); end
  def test_lever_graphs_b2771; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2771); end
  def test_lever_graphs_k2771; assert_in_epsilon(2100.0, worksheet.lever_graphs_k2771, 0.002); end
  def test_lever_graphs_c1817; assert_equal("1975", worksheet.lever_graphs_c1817); end
  def test_lever_graphs_d1817; assert_equal("1980", worksheet.lever_graphs_d1817); end
  def test_lever_graphs_e1817; assert_equal("1985", worksheet.lever_graphs_e1817); end
  def test_lever_graphs_f1817; assert_equal("1990", worksheet.lever_graphs_f1817); end
  def test_lever_graphs_g1817; assert_equal("1995", worksheet.lever_graphs_g1817); end
  def test_lever_graphs_h1817; assert_equal("2000", worksheet.lever_graphs_h1817); end
  def test_lever_graphs_i1817; assert_equal("2005", worksheet.lever_graphs_i1817); end
  def test_lever_graphs_j1817; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1817, 0.002); end
  def test_lever_graphs_k1817; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1817, 0.002); end
  def test_lever_graphs_l1817; assert_equal("2015", worksheet.lever_graphs_l1817); end
  def test_lever_graphs_m1817; assert_equal("2020", worksheet.lever_graphs_m1817); end
  def test_lever_graphs_n1817; assert_equal("2025", worksheet.lever_graphs_n1817); end
  def test_lever_graphs_o1817; assert_equal("2030", worksheet.lever_graphs_o1817); end
  def test_lever_graphs_p1817; assert_equal("2035", worksheet.lever_graphs_p1817); end
  def test_lever_graphs_q1817; assert_equal("2040", worksheet.lever_graphs_q1817); end
  def test_lever_graphs_r1817; assert_equal("2045", worksheet.lever_graphs_r1817); end
  def test_lever_graphs_s1817; assert_equal("2050", worksheet.lever_graphs_s1817); end
  def test_lever_graphs_b1818; assert_equal("Historic data", worksheet.lever_graphs_b1818); end
  def test_lever_graphs_b1819; assert_in_delta(1.0, worksheet.lever_graphs_b1819, 0.002); end
  def test_lever_graphs_k1819; assert_in_delta(0.0, (worksheet.lever_graphs_k1819||0), 0.002); end
  def test_lever_graphs_l1819; assert_in_epsilon(2.6, worksheet.lever_graphs_l1819, 0.002); end
  def test_lever_graphs_m1819; assert_in_epsilon(16.0, worksheet.lever_graphs_m1819, 0.002); end
  def test_lever_graphs_n1819; assert_in_epsilon(16.0, worksheet.lever_graphs_n1819, 0.002); end
  def test_lever_graphs_o1819; assert_in_epsilon(16.0, worksheet.lever_graphs_o1819, 0.002); end
  def test_lever_graphs_p1819; assert_in_epsilon(16.0, worksheet.lever_graphs_p1819, 0.002); end
  def test_lever_graphs_q1819; assert_in_epsilon(16.0, worksheet.lever_graphs_q1819, 0.002); end
  def test_lever_graphs_r1819; assert_in_epsilon(16.0, worksheet.lever_graphs_r1819, 0.002); end
  def test_lever_graphs_s1819; assert_in_epsilon(16.0, worksheet.lever_graphs_s1819, 0.002); end
  def test_lever_graphs_b1820; assert_in_epsilon(2.0, worksheet.lever_graphs_b1820, 0.002); end
  def test_lever_graphs_k1820; assert_in_delta(0.0, (worksheet.lever_graphs_k1820||0), 0.002); end
  def test_lever_graphs_l1820; assert_in_epsilon(9.0, worksheet.lever_graphs_l1820, 0.002); end
  def test_lever_graphs_m1820; assert_in_epsilon(18.0, worksheet.lever_graphs_m1820, 0.002); end
  def test_lever_graphs_n1820; assert_in_epsilon(36.0, worksheet.lever_graphs_n1820, 0.002); end
  def test_lever_graphs_o1820; assert_in_epsilon(114.0, worksheet.lever_graphs_o1820, 0.002); end
  def test_lever_graphs_p1820; assert_in_epsilon(159.6, worksheet.lever_graphs_p1820, 0.002); end
  def test_lever_graphs_q1820; assert_in_epsilon(223.4, worksheet.lever_graphs_q1820, 0.002); end
  def test_lever_graphs_r1820; assert_in_epsilon(312.8, worksheet.lever_graphs_r1820, 0.002); end
  def test_lever_graphs_s1820; assert_in_epsilon(490.0, worksheet.lever_graphs_s1820, 0.002); end
  def test_lever_graphs_b1821; assert_in_epsilon(3.0, worksheet.lever_graphs_b1821, 0.002); end
  def test_lever_graphs_k1821; assert_in_delta(0.0, (worksheet.lever_graphs_k1821||0), 0.002); end
  def test_lever_graphs_l1821; assert_in_epsilon(9.0, worksheet.lever_graphs_l1821, 0.002); end
  def test_lever_graphs_m1821; assert_in_epsilon(31.3, worksheet.lever_graphs_m1821, 0.002); end
  def test_lever_graphs_n1821; assert_in_epsilon(108.9, worksheet.lever_graphs_n1821, 0.002); end
  def test_lever_graphs_o1821; assert_in_epsilon(380.0, worksheet.lever_graphs_o1821, 0.002); end
  def test_lever_graphs_p1821; assert_in_epsilon(535.8, worksheet.lever_graphs_p1821, 0.002); end
  def test_lever_graphs_q1821; assert_in_epsilon(755.5, worksheet.lever_graphs_q1821, 0.002); end
  def test_lever_graphs_r1821; assert_in_epsilon(1065.3, worksheet.lever_graphs_r1821, 0.002); end
  def test_lever_graphs_s1821; assert_in_epsilon(1487.0, worksheet.lever_graphs_s1821, 0.002); end
  def test_lever_graphs_b1822; assert_in_epsilon(4.0, worksheet.lever_graphs_b1822, 0.002); end
  def test_lever_graphs_k1822; assert_in_delta(0.0, (worksheet.lever_graphs_k1822||0), 0.002); end
  def test_lever_graphs_l1822; assert_in_epsilon(16.0, worksheet.lever_graphs_l1822, 0.002); end
  def test_lever_graphs_m1822; assert_in_epsilon(380.0, worksheet.lever_graphs_m1822, 0.002); end
  def test_lever_graphs_n1822; assert_in_epsilon(760.0, worksheet.lever_graphs_n1822, 0.002); end
  def test_lever_graphs_o1822; assert_in_epsilon(1266.7, worksheet.lever_graphs_o1822, 0.002); end
  def test_lever_graphs_p1822; assert_in_epsilon(1773.4, worksheet.lever_graphs_p1822, 0.002); end
  def test_lever_graphs_q1822; assert_in_epsilon(2482.8, worksheet.lever_graphs_q1822, 0.002); end
  def test_lever_graphs_r1822; assert_in_epsilon(3000.0, worksheet.lever_graphs_r1822, 0.002); end
  def test_lever_graphs_s1822; assert_in_epsilon(3700.0, worksheet.lever_graphs_s1822, 0.002); end
  def test_lever_graphs_b1823; assert_equal("Comparator A", worksheet.lever_graphs_b1823); end
  def test_lever_graphs_b1824; assert_equal("Comparator B", worksheet.lever_graphs_b1824); end
  def test_lever_graphs_b1825; assert_equal("Comparator C", worksheet.lever_graphs_b1825); end
  def test_lever_graphs_c1841; assert_equal("1975", worksheet.lever_graphs_c1841); end
  def test_lever_graphs_d1841; assert_equal("1980", worksheet.lever_graphs_d1841); end
  def test_lever_graphs_e1841; assert_equal("1985", worksheet.lever_graphs_e1841); end
  def test_lever_graphs_f1841; assert_equal("1990", worksheet.lever_graphs_f1841); end
  def test_lever_graphs_g1841; assert_equal("1995", worksheet.lever_graphs_g1841); end
  def test_lever_graphs_h1841; assert_equal("2000", worksheet.lever_graphs_h1841); end
  def test_lever_graphs_i1841; assert_equal("2005", worksheet.lever_graphs_i1841); end
  def test_lever_graphs_j1841; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1841, 0.002); end
  def test_lever_graphs_k1841; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1841, 0.002); end
  def test_lever_graphs_l1841; assert_equal("2015", worksheet.lever_graphs_l1841); end
  def test_lever_graphs_m1841; assert_equal("2020", worksheet.lever_graphs_m1841); end
  def test_lever_graphs_n1841; assert_equal("2025", worksheet.lever_graphs_n1841); end
  def test_lever_graphs_o1841; assert_equal("2030", worksheet.lever_graphs_o1841); end
  def test_lever_graphs_p1841; assert_equal("2035", worksheet.lever_graphs_p1841); end
  def test_lever_graphs_q1841; assert_equal("2040", worksheet.lever_graphs_q1841); end
  def test_lever_graphs_r1841; assert_equal("2045", worksheet.lever_graphs_r1841); end
  def test_lever_graphs_s1841; assert_equal("2050", worksheet.lever_graphs_s1841); end
  def test_lever_graphs_b1842; assert_equal("Historic data", worksheet.lever_graphs_b1842); end
  def test_lever_graphs_b1843; assert_in_delta(1.0, worksheet.lever_graphs_b1843, 0.002); end
  def test_lever_graphs_k1843; assert_in_epsilon(1.6, worksheet.lever_graphs_k1843, 0.002); end
  def test_lever_graphs_l1843; assert_in_epsilon(8.0, worksheet.lever_graphs_l1843, 0.002); end
  def test_lever_graphs_m1843; assert_in_epsilon(30.0, worksheet.lever_graphs_m1843, 0.002); end
  def test_lever_graphs_n1843; assert_in_epsilon(30.0, worksheet.lever_graphs_n1843, 0.002); end
  def test_lever_graphs_o1843; assert_in_epsilon(20.0, worksheet.lever_graphs_o1843, 0.002); end
  def test_lever_graphs_p1843; assert_in_epsilon(20.0, worksheet.lever_graphs_p1843, 0.002); end
  def test_lever_graphs_q1843; assert_in_delta(0.0, (worksheet.lever_graphs_q1843||0), 0.002); end
  def test_lever_graphs_r1843; assert_in_delta(0.0, (worksheet.lever_graphs_r1843||0), 0.002); end
  def test_lever_graphs_s1843; assert_in_delta(0.0, (worksheet.lever_graphs_s1843||0), 0.002); end
  def test_lever_graphs_b1844; assert_in_epsilon(2.0, worksheet.lever_graphs_b1844, 0.002); end
  def test_lever_graphs_k1844; assert_in_epsilon(1.6, worksheet.lever_graphs_k1844, 0.002); end
  def test_lever_graphs_l1844; assert_in_epsilon(8.0, worksheet.lever_graphs_l1844, 0.002); end
  def test_lever_graphs_m1844; assert_in_epsilon(71.0, worksheet.lever_graphs_m1844, 0.002); end
  def test_lever_graphs_n1844; assert_in_epsilon(101.0, worksheet.lever_graphs_n1844, 0.002); end
  def test_lever_graphs_o1844; assert_in_epsilon(164.0, worksheet.lever_graphs_o1844, 0.002); end
  def test_lever_graphs_p1844; assert_in_epsilon(199.0, worksheet.lever_graphs_p1844, 0.002); end
  def test_lever_graphs_q1844; assert_in_epsilon(267.0, worksheet.lever_graphs_q1844, 0.002); end
  def test_lever_graphs_r1844; assert_in_epsilon(312.0, worksheet.lever_graphs_r1844, 0.002); end
  def test_lever_graphs_s1844; assert_in_epsilon(388.0, worksheet.lever_graphs_s1844, 0.002); end
  def test_lever_graphs_b1845; assert_in_epsilon(3.0, worksheet.lever_graphs_b1845, 0.002); end
  def test_lever_graphs_k1845; assert_in_epsilon(1.6, worksheet.lever_graphs_k1845, 0.002); end
  def test_lever_graphs_l1845; assert_in_epsilon(8.0, worksheet.lever_graphs_l1845, 0.002); end
  def test_lever_graphs_m1845; assert_in_epsilon(83.0, worksheet.lever_graphs_m1845, 0.002); end
  def test_lever_graphs_n1845; assert_in_epsilon(146.3, worksheet.lever_graphs_n1845, 0.002); end
  def test_lever_graphs_o1845; assert_in_epsilon(257.8, worksheet.lever_graphs_o1845, 0.002); end
  def test_lever_graphs_p1845; assert_in_epsilon(396.6, worksheet.lever_graphs_p1845, 0.002); end
  def test_lever_graphs_q1845; assert_in_epsilon(610.3, worksheet.lever_graphs_q1845, 0.002); end
  def test_lever_graphs_r1845; assert_in_epsilon(778.9, worksheet.lever_graphs_r1845, 0.002); end
  def test_lever_graphs_s1845; assert_in_epsilon(994.1, worksheet.lever_graphs_s1845, 0.002); end
  def test_lever_graphs_b1846; assert_in_epsilon(4.0, worksheet.lever_graphs_b1846, 0.002); end
  def test_lever_graphs_k1846; assert_in_epsilon(1.6, worksheet.lever_graphs_k1846, 0.002); end
  def test_lever_graphs_l1846; assert_in_epsilon(8.0, worksheet.lever_graphs_l1846, 0.002); end
  def test_lever_graphs_m1846; assert_in_epsilon(97.6, worksheet.lever_graphs_m1846, 0.002); end
  def test_lever_graphs_n1846; assert_in_epsilon(196.2, worksheet.lever_graphs_n1846, 0.002); end
  def test_lever_graphs_o1846; assert_in_epsilon(394.7, worksheet.lever_graphs_o1846, 0.002); end
  def test_lever_graphs_p1846; assert_in_epsilon(665.1, worksheet.lever_graphs_p1846, 0.002); end
  def test_lever_graphs_q1846; assert_in_epsilon(1120.8, worksheet.lever_graphs_q1846, 0.002); end
  def test_lever_graphs_r1846; assert_in_epsilon(1499.9, worksheet.lever_graphs_r1846, 0.002); end
  def test_lever_graphs_s1846; assert_in_epsilon(2007.1, worksheet.lever_graphs_s1846, 0.002); end
  def test_lever_graphs_b1847; assert_equal("Comparator A", worksheet.lever_graphs_b1847); end
  def test_lever_graphs_b1848; assert_equal("Comparator B", worksheet.lever_graphs_b1848); end
  def test_lever_graphs_b1849; assert_equal("Comparator C", worksheet.lever_graphs_b1849); end
  def test_lever_graphs_c1794; assert_equal("1975", worksheet.lever_graphs_c1794); end
  def test_lever_graphs_d1794; assert_equal("1980", worksheet.lever_graphs_d1794); end
  def test_lever_graphs_e1794; assert_equal("1985", worksheet.lever_graphs_e1794); end
  def test_lever_graphs_f1794; assert_equal("1990", worksheet.lever_graphs_f1794); end
  def test_lever_graphs_g1794; assert_equal("1995", worksheet.lever_graphs_g1794); end
  def test_lever_graphs_h1794; assert_equal("2000", worksheet.lever_graphs_h1794); end
  def test_lever_graphs_i1794; assert_equal("2005", worksheet.lever_graphs_i1794); end
  def test_lever_graphs_j1794; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1794, 0.002); end
  def test_lever_graphs_k1794; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1794, 0.002); end
  def test_lever_graphs_l1794; assert_equal("2015", worksheet.lever_graphs_l1794); end
  def test_lever_graphs_m1794; assert_equal("2020", worksheet.lever_graphs_m1794); end
  def test_lever_graphs_n1794; assert_equal("2025", worksheet.lever_graphs_n1794); end
  def test_lever_graphs_o1794; assert_equal("2030", worksheet.lever_graphs_o1794); end
  def test_lever_graphs_p1794; assert_equal("2035", worksheet.lever_graphs_p1794); end
  def test_lever_graphs_q1794; assert_equal("2040", worksheet.lever_graphs_q1794); end
  def test_lever_graphs_r1794; assert_equal("2045", worksheet.lever_graphs_r1794); end
  def test_lever_graphs_s1794; assert_equal("2050", worksheet.lever_graphs_s1794); end
  def test_lever_graphs_b1795; assert_equal("Historic data", worksheet.lever_graphs_b1795); end
  def test_lever_graphs_b1796; assert_in_delta(1.0, worksheet.lever_graphs_b1796, 0.002); end
  def test_lever_graphs_k1796; assert_in_epsilon(11.43, worksheet.lever_graphs_k1796, 0.002); end
  def test_lever_graphs_l1796; assert_in_epsilon(14.5, worksheet.lever_graphs_l1796, 0.002); end
  def test_lever_graphs_m1796; assert_in_epsilon(16.0, worksheet.lever_graphs_m1796, 0.002); end
  def test_lever_graphs_n1796; assert_in_epsilon(16.0, worksheet.lever_graphs_n1796, 0.002); end
  def test_lever_graphs_o1796; assert_in_epsilon(10.0, worksheet.lever_graphs_o1796, 0.002); end
  def test_lever_graphs_p1796; assert_in_epsilon(7.0, worksheet.lever_graphs_p1796, 0.002); end
  def test_lever_graphs_q1796; assert_in_epsilon(4.0, worksheet.lever_graphs_q1796, 0.002); end
  def test_lever_graphs_r1796; assert_in_delta(0.0, (worksheet.lever_graphs_r1796||0), 0.002); end
  def test_lever_graphs_s1796; assert_in_delta(0.0, (worksheet.lever_graphs_s1796||0), 0.002); end
  def test_lever_graphs_b1797; assert_in_epsilon(2.0, worksheet.lever_graphs_b1797, 0.002); end
  def test_lever_graphs_k1797; assert_in_epsilon(11.43, worksheet.lever_graphs_k1797, 0.002); end
  def test_lever_graphs_l1797; assert_in_epsilon(14.5, worksheet.lever_graphs_l1797, 0.002); end
  def test_lever_graphs_m1797; assert_in_epsilon(19.0, worksheet.lever_graphs_m1797, 0.002); end
  def test_lever_graphs_n1797; assert_in_epsilon(25.0, worksheet.lever_graphs_n1797, 0.002); end
  def test_lever_graphs_o1797; assert_in_epsilon(39.0, worksheet.lever_graphs_o1797, 0.002); end
  def test_lever_graphs_p1797; assert_in_epsilon(73.0, worksheet.lever_graphs_p1797, 0.002); end
  def test_lever_graphs_q1797; assert_in_epsilon(98.0, worksheet.lever_graphs_q1797, 0.002); end
  def test_lever_graphs_r1797; assert_in_epsilon(137.0, worksheet.lever_graphs_r1797, 0.002); end
  def test_lever_graphs_s1797; assert_in_epsilon(172.0, worksheet.lever_graphs_s1797, 0.002); end
  def test_lever_graphs_b1798; assert_in_epsilon(3.0, worksheet.lever_graphs_b1798, 0.002); end
  def test_lever_graphs_k1798; assert_in_epsilon(11.43, worksheet.lever_graphs_k1798, 0.002); end
  def test_lever_graphs_l1798; assert_in_epsilon(14.5, worksheet.lever_graphs_l1798, 0.002); end
  def test_lever_graphs_m1798; assert_in_epsilon(23.0, worksheet.lever_graphs_m1798, 0.002); end
  def test_lever_graphs_n1798; assert_in_epsilon(38.0, worksheet.lever_graphs_n1798, 0.002); end
  def test_lever_graphs_o1798; assert_in_epsilon(60.0, worksheet.lever_graphs_o1798, 0.002); end
  def test_lever_graphs_p1798; assert_in_epsilon(103.0, worksheet.lever_graphs_p1798, 0.002); end
  def test_lever_graphs_q1798; assert_in_epsilon(169.0, worksheet.lever_graphs_q1798, 0.002); end
  def test_lever_graphs_r1798; assert_in_epsilon(237.0, worksheet.lever_graphs_r1798, 0.002); end
  def test_lever_graphs_s1798; assert_in_epsilon(289.0, worksheet.lever_graphs_s1798, 0.002); end
  def test_lever_graphs_b1799; assert_in_epsilon(4.0, worksheet.lever_graphs_b1799, 0.002); end
  def test_lever_graphs_k1799; assert_in_epsilon(11.43, worksheet.lever_graphs_k1799, 0.002); end
  def test_lever_graphs_l1799; assert_in_epsilon(14.5, worksheet.lever_graphs_l1799, 0.002); end
  def test_lever_graphs_m1799; assert_in_epsilon(25.35, worksheet.lever_graphs_m1799, 0.002); end
  def test_lever_graphs_n1799; assert_in_epsilon(43.79, worksheet.lever_graphs_n1799, 0.002); end
  def test_lever_graphs_o1799; assert_in_epsilon(75.63, worksheet.lever_graphs_o1799, 0.002); end
  def test_lever_graphs_p1799; assert_in_epsilon(130.64, worksheet.lever_graphs_p1799, 0.002); end
  def test_lever_graphs_q1799; assert_in_epsilon(226.0, worksheet.lever_graphs_q1799, 0.002); end
  def test_lever_graphs_r1799; assert_in_epsilon(302.0, worksheet.lever_graphs_r1799, 0.002); end
  def test_lever_graphs_s1799; assert_in_epsilon(404.0, worksheet.lever_graphs_s1799, 0.002); end
  def test_lever_graphs_b1800; assert_equal("Comparator A", worksheet.lever_graphs_b1800); end
  def test_lever_graphs_b1801; assert_equal("Comparator B", worksheet.lever_graphs_b1801); end
  def test_lever_graphs_b1802; assert_equal("Comparator C", worksheet.lever_graphs_b1802); end
  def test_lever_graphs_c1772; assert_equal("1975", worksheet.lever_graphs_c1772); end
  def test_lever_graphs_d1772; assert_equal("1980", worksheet.lever_graphs_d1772); end
  def test_lever_graphs_e1772; assert_equal("1985", worksheet.lever_graphs_e1772); end
  def test_lever_graphs_f1772; assert_equal("1990", worksheet.lever_graphs_f1772); end
  def test_lever_graphs_g1772; assert_equal("1995", worksheet.lever_graphs_g1772); end
  def test_lever_graphs_h1772; assert_equal("2000", worksheet.lever_graphs_h1772); end
  def test_lever_graphs_i1772; assert_equal("2005", worksheet.lever_graphs_i1772); end
  def test_lever_graphs_j1772; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1772, 0.002); end
  def test_lever_graphs_k1772; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1772, 0.002); end
  def test_lever_graphs_l1772; assert_equal("2015", worksheet.lever_graphs_l1772); end
  def test_lever_graphs_m1772; assert_equal("2020", worksheet.lever_graphs_m1772); end
  def test_lever_graphs_n1772; assert_equal("2025", worksheet.lever_graphs_n1772); end
  def test_lever_graphs_o1772; assert_equal("2030", worksheet.lever_graphs_o1772); end
  def test_lever_graphs_p1772; assert_equal("2035", worksheet.lever_graphs_p1772); end
  def test_lever_graphs_q1772; assert_equal("2040", worksheet.lever_graphs_q1772); end
  def test_lever_graphs_r1772; assert_equal("2045", worksheet.lever_graphs_r1772); end
  def test_lever_graphs_s1772; assert_equal("2050", worksheet.lever_graphs_s1772); end
  def test_lever_graphs_b1773; assert_equal("Historic data", worksheet.lever_graphs_b1773); end
  def test_lever_graphs_b1774; assert_in_delta(1.0, worksheet.lever_graphs_b1774, 0.002); end
  def test_lever_graphs_k1774; assert_in_epsilon(970.0, worksheet.lever_graphs_k1774, 0.002); end
  def test_lever_graphs_l1774; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1774, 0.002); end
  def test_lever_graphs_m1774; assert_in_epsilon(1380.0, worksheet.lever_graphs_m1774, 0.002); end
  def test_lever_graphs_n1774; assert_in_epsilon(1420.0, worksheet.lever_graphs_n1774, 0.002); end
  def test_lever_graphs_o1774; assert_in_epsilon(1420.0, worksheet.lever_graphs_o1774, 0.002); end
  def test_lever_graphs_p1774; assert_in_epsilon(1420.0, worksheet.lever_graphs_p1774, 0.002); end
  def test_lever_graphs_q1774; assert_in_epsilon(1188.0, worksheet.lever_graphs_q1774, 0.002); end
  def test_lever_graphs_r1774; assert_in_epsilon(1188.0, worksheet.lever_graphs_r1774, 0.002); end
  def test_lever_graphs_s1774; assert_in_epsilon(1188.0, worksheet.lever_graphs_s1774, 0.002); end
  def test_lever_graphs_b1775; assert_in_epsilon(2.0, worksheet.lever_graphs_b1775, 0.002); end
  def test_lever_graphs_k1775; assert_in_epsilon(970.0, worksheet.lever_graphs_k1775, 0.002); end
  def test_lever_graphs_l1775; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1775, 0.002); end
  def test_lever_graphs_m1775; assert_in_epsilon(1410.0, worksheet.lever_graphs_m1775, 0.002); end
  def test_lever_graphs_n1775; assert_in_epsilon(1460.0, worksheet.lever_graphs_n1775, 0.002); end
  def test_lever_graphs_o1775; assert_in_epsilon(1515.0, worksheet.lever_graphs_o1775, 0.002); end
  def test_lever_graphs_p1775; assert_in_epsilon(1570.0, worksheet.lever_graphs_p1775, 0.002); end
  def test_lever_graphs_q1775; assert_in_epsilon(1625.0, worksheet.lever_graphs_q1775, 0.002); end
  def test_lever_graphs_r1775; assert_in_epsilon(1685.0, worksheet.lever_graphs_r1775, 0.002); end
  def test_lever_graphs_s1775; assert_in_epsilon(1750.0, worksheet.lever_graphs_s1775, 0.002); end
  def test_lever_graphs_b1776; assert_in_epsilon(3.0, worksheet.lever_graphs_b1776, 0.002); end
  def test_lever_graphs_k1776; assert_in_epsilon(970.0, worksheet.lever_graphs_k1776, 0.002); end
  def test_lever_graphs_l1776; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1776, 0.002); end
  def test_lever_graphs_m1776; assert_in_epsilon(1510.0, worksheet.lever_graphs_m1776, 0.002); end
  def test_lever_graphs_n1776; assert_in_epsilon(1590.0, worksheet.lever_graphs_n1776, 0.002); end
  def test_lever_graphs_o1776; assert_in_epsilon(1670.0, worksheet.lever_graphs_o1776, 0.002); end
  def test_lever_graphs_p1776; assert_in_epsilon(1750.0, worksheet.lever_graphs_p1776, 0.002); end
  def test_lever_graphs_q1776; assert_in_epsilon(1865.0, worksheet.lever_graphs_q1776, 0.002); end
  def test_lever_graphs_r1776; assert_in_epsilon(1982.0, worksheet.lever_graphs_r1776, 0.002); end
  def test_lever_graphs_s1776; assert_in_epsilon(2101.0, worksheet.lever_graphs_s1776, 0.002); end
  def test_lever_graphs_b1777; assert_in_epsilon(4.0, worksheet.lever_graphs_b1777, 0.002); end
  def test_lever_graphs_k1777; assert_in_epsilon(970.0, worksheet.lever_graphs_k1777, 0.002); end
  def test_lever_graphs_l1777; assert_in_epsilon(1350.0, worksheet.lever_graphs_l1777, 0.002); end
  def test_lever_graphs_m1777; assert_in_epsilon(1650.0, worksheet.lever_graphs_m1777, 0.002); end
  def test_lever_graphs_n1777; assert_in_epsilon(1850.0, worksheet.lever_graphs_n1777, 0.002); end
  def test_lever_graphs_o1777; assert_in_epsilon(1995.0, worksheet.lever_graphs_o1777, 0.002); end
  def test_lever_graphs_p1777; assert_in_epsilon(2140.0, worksheet.lever_graphs_p1777, 0.002); end
  def test_lever_graphs_q1777; assert_in_epsilon(2285.0, worksheet.lever_graphs_q1777, 0.002); end
  def test_lever_graphs_r1777; assert_in_epsilon(2330.0, worksheet.lever_graphs_r1777, 0.002); end
  def test_lever_graphs_s1777; assert_in_epsilon(2375.0, worksheet.lever_graphs_s1777, 0.002); end
  def test_lever_graphs_b1778; assert_equal("Comparator A", worksheet.lever_graphs_b1778); end
  def test_lever_graphs_b1779; assert_equal("Comparator B", worksheet.lever_graphs_b1779); end
  def test_lever_graphs_b1780; assert_equal("Comparator C", worksheet.lever_graphs_b1780); end
  def test_lever_graphs_c1985; assert_equal("1975", worksheet.lever_graphs_c1985); end
  def test_lever_graphs_d1985; assert_equal("1980", worksheet.lever_graphs_d1985); end
  def test_lever_graphs_e1985; assert_equal("1985", worksheet.lever_graphs_e1985); end
  def test_lever_graphs_f1985; assert_equal("1990", worksheet.lever_graphs_f1985); end
  def test_lever_graphs_g1985; assert_equal("1995", worksheet.lever_graphs_g1985); end
  def test_lever_graphs_h1985; assert_equal("2000", worksheet.lever_graphs_h1985); end
  def test_lever_graphs_i1985; assert_equal("2005", worksheet.lever_graphs_i1985); end
  def test_lever_graphs_j1985; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1985, 0.002); end
  def test_lever_graphs_k1985; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1985, 0.002); end
  def test_lever_graphs_l1985; assert_equal("2015", worksheet.lever_graphs_l1985); end
  def test_lever_graphs_m1985; assert_equal("2020", worksheet.lever_graphs_m1985); end
  def test_lever_graphs_n1985; assert_equal("2025", worksheet.lever_graphs_n1985); end
  def test_lever_graphs_o1985; assert_equal("2030", worksheet.lever_graphs_o1985); end
  def test_lever_graphs_p1985; assert_equal("2035", worksheet.lever_graphs_p1985); end
  def test_lever_graphs_q1985; assert_equal("2040", worksheet.lever_graphs_q1985); end
  def test_lever_graphs_r1985; assert_equal("2045", worksheet.lever_graphs_r1985); end
  def test_lever_graphs_s1985; assert_equal("2050", worksheet.lever_graphs_s1985); end
  def test_lever_graphs_b1986; assert_equal("Historic data", worksheet.lever_graphs_b1986); end
  def test_lever_graphs_b1987; assert_in_delta(1.0, worksheet.lever_graphs_b1987, 0.002); end
  def test_lever_graphs_k1987; assert_in_delta(0.527, worksheet.lever_graphs_k1987, 0.002); end
  def test_lever_graphs_l1987; assert_in_epsilon(1.1, worksheet.lever_graphs_l1987, 0.002); end
  def test_lever_graphs_m1987; assert_in_epsilon(1.1, worksheet.lever_graphs_m1987, 0.002); end
  def test_lever_graphs_n1987; assert_in_epsilon(1.1, worksheet.lever_graphs_n1987, 0.002); end
  def test_lever_graphs_o1987; assert_in_epsilon(2.0, worksheet.lever_graphs_o1987, 0.002); end
  def test_lever_graphs_p1987; assert_in_epsilon(3.0, worksheet.lever_graphs_p1987, 0.002); end
  def test_lever_graphs_q1987; assert_in_epsilon(5.0, worksheet.lever_graphs_q1987, 0.002); end
  def test_lever_graphs_r1987; assert_in_epsilon(7.0, worksheet.lever_graphs_r1987, 0.002); end
  def test_lever_graphs_s1987; assert_in_epsilon(8.0, worksheet.lever_graphs_s1987, 0.002); end
  def test_lever_graphs_b1988; assert_in_epsilon(2.0, worksheet.lever_graphs_b1988, 0.002); end
  def test_lever_graphs_k1988; assert_in_delta(0.527, worksheet.lever_graphs_k1988, 0.002); end
  def test_lever_graphs_l1988; assert_in_epsilon(1.1, worksheet.lever_graphs_l1988, 0.002); end
  def test_lever_graphs_m1988; assert_in_epsilon(3.0, worksheet.lever_graphs_m1988, 0.002); end
  def test_lever_graphs_n1988; assert_in_epsilon(10.0, worksheet.lever_graphs_n1988, 0.002); end
  def test_lever_graphs_o1988; assert_in_epsilon(24.0, worksheet.lever_graphs_o1988, 0.002); end
  def test_lever_graphs_p1988; assert_in_epsilon(40.0, worksheet.lever_graphs_p1988, 0.002); end
  def test_lever_graphs_q1988; assert_in_epsilon(59.0, worksheet.lever_graphs_q1988, 0.002); end
  def test_lever_graphs_r1988; assert_in_epsilon(79.0, worksheet.lever_graphs_r1988, 0.002); end
  def test_lever_graphs_s1988; assert_in_epsilon(97.0, worksheet.lever_graphs_s1988, 0.002); end
  def test_lever_graphs_b1989; assert_in_epsilon(3.0, worksheet.lever_graphs_b1989, 0.002); end
  def test_lever_graphs_k1989; assert_in_delta(0.527, worksheet.lever_graphs_k1989, 0.002); end
  def test_lever_graphs_l1989; assert_in_epsilon(1.1, worksheet.lever_graphs_l1989, 0.002); end
  def test_lever_graphs_m1989; assert_in_epsilon(4.0, worksheet.lever_graphs_m1989, 0.002); end
  def test_lever_graphs_n1989; assert_in_epsilon(14.0, worksheet.lever_graphs_n1989, 0.002); end
  def test_lever_graphs_o1989; assert_in_epsilon(30.0, worksheet.lever_graphs_o1989, 0.002); end
  def test_lever_graphs_p1989; assert_in_epsilon(56.0, worksheet.lever_graphs_p1989, 0.002); end
  def test_lever_graphs_q1989; assert_in_epsilon(97.0, worksheet.lever_graphs_q1989, 0.002); end
  def test_lever_graphs_r1989; assert_in_epsilon(153.0, worksheet.lever_graphs_r1989, 0.002); end
  def test_lever_graphs_s1989; assert_in_epsilon(237.0, worksheet.lever_graphs_s1989, 0.002); end
  def test_lever_graphs_b1990; assert_in_epsilon(4.0, worksheet.lever_graphs_b1990, 0.002); end
  def test_lever_graphs_k1990; assert_in_delta(0.527, worksheet.lever_graphs_k1990, 0.002); end
  def test_lever_graphs_l1990; assert_in_epsilon(1.1, worksheet.lever_graphs_l1990, 0.002); end
  def test_lever_graphs_m1990; assert_in_epsilon(7.0, worksheet.lever_graphs_m1990, 0.002); end
  def test_lever_graphs_n1990; assert_in_epsilon(24.0, worksheet.lever_graphs_n1990, 0.002); end
  def test_lever_graphs_o1990; assert_in_epsilon(48.0, worksheet.lever_graphs_o1990, 0.002); end
  def test_lever_graphs_p1990; assert_in_epsilon(89.7, worksheet.lever_graphs_p1990, 0.002); end
  def test_lever_graphs_q1990; assert_in_epsilon(140.9, worksheet.lever_graphs_q1990, 0.002); end
  def test_lever_graphs_r1990; assert_in_epsilon(244.9, worksheet.lever_graphs_r1990, 0.002); end
  def test_lever_graphs_s1990; assert_in_epsilon(435.6, worksheet.lever_graphs_s1990, 0.002); end
  def test_lever_graphs_b1991; assert_equal("Comparator A", worksheet.lever_graphs_b1991); end
  def test_lever_graphs_b1992; assert_equal("Comparator B", worksheet.lever_graphs_b1992); end
  def test_lever_graphs_b1993; assert_equal("Comparator C", worksheet.lever_graphs_b1993); end
  def test_lever_graphs_c1969; assert_equal("1975", worksheet.lever_graphs_c1969); end
  def test_lever_graphs_d1969; assert_equal("1980", worksheet.lever_graphs_d1969); end
  def test_lever_graphs_e1969; assert_equal("1985", worksheet.lever_graphs_e1969); end
  def test_lever_graphs_f1969; assert_equal("1990", worksheet.lever_graphs_f1969); end
  def test_lever_graphs_g1969; assert_equal("1995", worksheet.lever_graphs_g1969); end
  def test_lever_graphs_h1969; assert_equal("2000", worksheet.lever_graphs_h1969); end
  def test_lever_graphs_i1969; assert_equal("2005", worksheet.lever_graphs_i1969); end
  def test_lever_graphs_j1969; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1969, 0.002); end
  def test_lever_graphs_k1969; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1969, 0.002); end
  def test_lever_graphs_l1969; assert_equal("2015", worksheet.lever_graphs_l1969); end
  def test_lever_graphs_m1969; assert_equal("2020", worksheet.lever_graphs_m1969); end
  def test_lever_graphs_n1969; assert_equal("2025", worksheet.lever_graphs_n1969); end
  def test_lever_graphs_o1969; assert_equal("2030", worksheet.lever_graphs_o1969); end
  def test_lever_graphs_p1969; assert_equal("2035", worksheet.lever_graphs_p1969); end
  def test_lever_graphs_q1969; assert_equal("2040", worksheet.lever_graphs_q1969); end
  def test_lever_graphs_r1969; assert_equal("2045", worksheet.lever_graphs_r1969); end
  def test_lever_graphs_s1969; assert_equal("2050", worksheet.lever_graphs_s1969); end
  def test_lever_graphs_b1970; assert_equal("Historic data", worksheet.lever_graphs_b1970); end
  def test_lever_graphs_b1971; assert_in_delta(1.0, worksheet.lever_graphs_b1971, 0.002); end
  def test_lever_graphs_k1971; assert_in_delta(0.527, worksheet.lever_graphs_k1971, 0.002); end
  def test_lever_graphs_l1971; assert_in_delta(1.0, worksheet.lever_graphs_l1971, 0.002); end
  def test_lever_graphs_m1971; assert_in_delta(1.0, worksheet.lever_graphs_m1971, 0.002); end
  def test_lever_graphs_n1971; assert_in_delta(1.0, worksheet.lever_graphs_n1971, 0.002); end
  def test_lever_graphs_o1971; assert_in_delta(1.0, worksheet.lever_graphs_o1971, 0.002); end
  def test_lever_graphs_p1971; assert_in_delta(1.0, worksheet.lever_graphs_p1971, 0.002); end
  def test_lever_graphs_q1971; assert_in_delta(1.0, worksheet.lever_graphs_q1971, 0.002); end
  def test_lever_graphs_r1971; assert_in_delta(0.0, (worksheet.lever_graphs_r1971||0), 0.002); end
  def test_lever_graphs_s1971; assert_in_delta(0.0, (worksheet.lever_graphs_s1971||0), 0.002); end
  def test_lever_graphs_b1972; assert_in_epsilon(2.0, worksheet.lever_graphs_b1972, 0.002); end
  def test_lever_graphs_k1972; assert_in_delta(0.527, worksheet.lever_graphs_k1972, 0.002); end
  def test_lever_graphs_l1972; assert_in_delta(1.0, worksheet.lever_graphs_l1972, 0.002); end
  def test_lever_graphs_m1972; assert_in_epsilon(2.0, worksheet.lever_graphs_m1972, 0.002); end
  def test_lever_graphs_n1972; assert_in_epsilon(4.0, worksheet.lever_graphs_n1972, 0.002); end
  def test_lever_graphs_o1972; assert_in_epsilon(8.0, worksheet.lever_graphs_o1972, 0.002); end
  def test_lever_graphs_p1972; assert_in_epsilon(13.0, worksheet.lever_graphs_p1972, 0.002); end
  def test_lever_graphs_q1972; assert_in_epsilon(21.0, worksheet.lever_graphs_q1972, 0.002); end
  def test_lever_graphs_r1972; assert_in_epsilon(28.0, worksheet.lever_graphs_r1972, 0.002); end
  def test_lever_graphs_s1972; assert_in_epsilon(35.0, worksheet.lever_graphs_s1972, 0.002); end
  def test_lever_graphs_b1973; assert_in_epsilon(3.0, worksheet.lever_graphs_b1973, 0.002); end
  def test_lever_graphs_k1973; assert_in_delta(0.527, worksheet.lever_graphs_k1973, 0.002); end
  def test_lever_graphs_l1973; assert_in_delta(1.0, worksheet.lever_graphs_l1973, 0.002); end
  def test_lever_graphs_m1973; assert_in_epsilon(2.0, worksheet.lever_graphs_m1973, 0.002); end
  def test_lever_graphs_n1973; assert_in_epsilon(6.0, worksheet.lever_graphs_n1973, 0.002); end
  def test_lever_graphs_o1973; assert_in_epsilon(11.0, worksheet.lever_graphs_o1973, 0.002); end
  def test_lever_graphs_p1973; assert_in_epsilon(22.0, worksheet.lever_graphs_p1973, 0.002); end
  def test_lever_graphs_q1973; assert_in_epsilon(38.0, worksheet.lever_graphs_q1973, 0.002); end
  def test_lever_graphs_r1973; assert_in_epsilon(70.0, worksheet.lever_graphs_r1973, 0.002); end
  def test_lever_graphs_s1973; assert_in_epsilon(132.0, worksheet.lever_graphs_s1973, 0.002); end
  def test_lever_graphs_b1974; assert_in_epsilon(4.0, worksheet.lever_graphs_b1974, 0.002); end
  def test_lever_graphs_k1974; assert_in_delta(0.527, worksheet.lever_graphs_k1974, 0.002); end
  def test_lever_graphs_l1974; assert_in_delta(1.0, worksheet.lever_graphs_l1974, 0.002); end
  def test_lever_graphs_m1974; assert_in_epsilon(3.0, worksheet.lever_graphs_m1974, 0.002); end
  def test_lever_graphs_n1974; assert_in_epsilon(10.0, worksheet.lever_graphs_n1974, 0.002); end
  def test_lever_graphs_o1974; assert_in_epsilon(18.0, worksheet.lever_graphs_o1974, 0.002); end
  def test_lever_graphs_p1974; assert_in_epsilon(31.7, worksheet.lever_graphs_p1974, 0.002); end
  def test_lever_graphs_q1974; assert_in_epsilon(55.9, worksheet.lever_graphs_q1974, 0.002); end
  def test_lever_graphs_r1974; assert_in_epsilon(127.9, worksheet.lever_graphs_r1974, 0.002); end
  def test_lever_graphs_s1974; assert_in_epsilon(292.6, worksheet.lever_graphs_s1974, 0.002); end
  def test_lever_graphs_b1975; assert_equal("Comparator A", worksheet.lever_graphs_b1975); end
  def test_lever_graphs_b1976; assert_equal("Comparator B", worksheet.lever_graphs_b1976); end
  def test_lever_graphs_b1977; assert_equal("Comparator C", worksheet.lever_graphs_b1977); end
  def test_lever_graphs_c1953; assert_equal("1975", worksheet.lever_graphs_c1953); end
  def test_lever_graphs_d1953; assert_equal("1980", worksheet.lever_graphs_d1953); end
  def test_lever_graphs_e1953; assert_equal("1985", worksheet.lever_graphs_e1953); end
  def test_lever_graphs_f1953; assert_equal("1990", worksheet.lever_graphs_f1953); end
  def test_lever_graphs_g1953; assert_equal("1995", worksheet.lever_graphs_g1953); end
  def test_lever_graphs_h1953; assert_equal("2000", worksheet.lever_graphs_h1953); end
  def test_lever_graphs_i1953; assert_equal("2005", worksheet.lever_graphs_i1953); end
  def test_lever_graphs_j1953; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1953, 0.002); end
  def test_lever_graphs_k1953; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1953, 0.002); end
  def test_lever_graphs_l1953; assert_equal("2015", worksheet.lever_graphs_l1953); end
  def test_lever_graphs_m1953; assert_equal("2020", worksheet.lever_graphs_m1953); end
  def test_lever_graphs_n1953; assert_equal("2025", worksheet.lever_graphs_n1953); end
  def test_lever_graphs_o1953; assert_equal("2030", worksheet.lever_graphs_o1953); end
  def test_lever_graphs_p1953; assert_equal("2035", worksheet.lever_graphs_p1953); end
  def test_lever_graphs_q1953; assert_equal("2040", worksheet.lever_graphs_q1953); end
  def test_lever_graphs_r1953; assert_equal("2045", worksheet.lever_graphs_r1953); end
  def test_lever_graphs_s1953; assert_equal("2050", worksheet.lever_graphs_s1953); end
  def test_lever_graphs_b1954; assert_equal("Historic data", worksheet.lever_graphs_b1954); end
  def test_lever_graphs_b1955; assert_in_delta(1.0, worksheet.lever_graphs_b1955, 0.002); end
  def test_lever_graphs_k1955; assert_in_delta(0.0, (worksheet.lever_graphs_k1955||0), 0.002); end
  def test_lever_graphs_l1955; assert_in_delta(0.1, worksheet.lever_graphs_l1955, 0.002); end
  def test_lever_graphs_m1955; assert_in_delta(0.1, worksheet.lever_graphs_m1955, 0.002); end
  def test_lever_graphs_n1955; assert_in_delta(0.1, worksheet.lever_graphs_n1955, 0.002); end
  def test_lever_graphs_o1955; assert_in_delta(1.0, worksheet.lever_graphs_o1955, 0.002); end
  def test_lever_graphs_p1955; assert_in_epsilon(2.0, worksheet.lever_graphs_p1955, 0.002); end
  def test_lever_graphs_q1955; assert_in_epsilon(4.0, worksheet.lever_graphs_q1955, 0.002); end
  def test_lever_graphs_r1955; assert_in_epsilon(7.0, worksheet.lever_graphs_r1955, 0.002); end
  def test_lever_graphs_s1955; assert_in_epsilon(8.0, worksheet.lever_graphs_s1955, 0.002); end
  def test_lever_graphs_b1956; assert_in_epsilon(2.0, worksheet.lever_graphs_b1956, 0.002); end
  def test_lever_graphs_k1956; assert_in_delta(0.0, (worksheet.lever_graphs_k1956||0), 0.002); end
  def test_lever_graphs_l1956; assert_in_delta(0.1, worksheet.lever_graphs_l1956, 0.002); end
  def test_lever_graphs_m1956; assert_in_delta(1.0, worksheet.lever_graphs_m1956, 0.002); end
  def test_lever_graphs_n1956; assert_in_epsilon(6.0, worksheet.lever_graphs_n1956, 0.002); end
  def test_lever_graphs_o1956; assert_in_epsilon(16.0, worksheet.lever_graphs_o1956, 0.002); end
  def test_lever_graphs_p1956; assert_in_epsilon(27.0, worksheet.lever_graphs_p1956, 0.002); end
  def test_lever_graphs_q1956; assert_in_epsilon(38.0, worksheet.lever_graphs_q1956, 0.002); end
  def test_lever_graphs_r1956; assert_in_epsilon(51.0, worksheet.lever_graphs_r1956, 0.002); end
  def test_lever_graphs_s1956; assert_in_epsilon(62.0, worksheet.lever_graphs_s1956, 0.002); end
  def test_lever_graphs_b1957; assert_in_epsilon(3.0, worksheet.lever_graphs_b1957, 0.002); end
  def test_lever_graphs_k1957; assert_in_delta(0.0, (worksheet.lever_graphs_k1957||0), 0.002); end
  def test_lever_graphs_l1957; assert_in_delta(0.1, worksheet.lever_graphs_l1957, 0.002); end
  def test_lever_graphs_m1957; assert_in_epsilon(2.0, worksheet.lever_graphs_m1957, 0.002); end
  def test_lever_graphs_n1957; assert_in_epsilon(8.0, worksheet.lever_graphs_n1957, 0.002); end
  def test_lever_graphs_o1957; assert_in_epsilon(19.0, worksheet.lever_graphs_o1957, 0.002); end
  def test_lever_graphs_p1957; assert_in_epsilon(34.0, worksheet.lever_graphs_p1957, 0.002); end
  def test_lever_graphs_q1957; assert_in_epsilon(59.0, worksheet.lever_graphs_q1957, 0.002); end
  def test_lever_graphs_r1957; assert_in_epsilon(83.0, worksheet.lever_graphs_r1957, 0.002); end
  def test_lever_graphs_s1957; assert_in_epsilon(105.0, worksheet.lever_graphs_s1957, 0.002); end
  def test_lever_graphs_b1958; assert_in_epsilon(4.0, worksheet.lever_graphs_b1958, 0.002); end
  def test_lever_graphs_k1958; assert_in_delta(0.0, (worksheet.lever_graphs_k1958||0), 0.002); end
  def test_lever_graphs_l1958; assert_in_delta(0.1, worksheet.lever_graphs_l1958, 0.002); end
  def test_lever_graphs_m1958; assert_in_epsilon(4.0, worksheet.lever_graphs_m1958, 0.002); end
  def test_lever_graphs_n1958; assert_in_epsilon(14.0, worksheet.lever_graphs_n1958, 0.002); end
  def test_lever_graphs_o1958; assert_in_epsilon(30.0, worksheet.lever_graphs_o1958, 0.002); end
  def test_lever_graphs_p1958; assert_in_epsilon(58.0, worksheet.lever_graphs_p1958, 0.002); end
  def test_lever_graphs_q1958; assert_in_epsilon(85.0, worksheet.lever_graphs_q1958, 0.002); end
  def test_lever_graphs_r1958; assert_in_epsilon(117.0, worksheet.lever_graphs_r1958, 0.002); end
  def test_lever_graphs_s1958; assert_in_epsilon(143.0, worksheet.lever_graphs_s1958, 0.002); end
  def test_lever_graphs_b1959; assert_equal("Comparator A", worksheet.lever_graphs_b1959); end
  def test_lever_graphs_b1960; assert_equal("Comparator B", worksheet.lever_graphs_b1960); end
  def test_lever_graphs_b1961; assert_equal("Comparator C", worksheet.lever_graphs_b1961); end
  def test_lever_graphs_c1751; assert_equal("1975", worksheet.lever_graphs_c1751); end
  def test_lever_graphs_d1751; assert_equal("1980", worksheet.lever_graphs_d1751); end
  def test_lever_graphs_e1751; assert_equal("1985", worksheet.lever_graphs_e1751); end
  def test_lever_graphs_f1751; assert_equal("1990", worksheet.lever_graphs_f1751); end
  def test_lever_graphs_g1751; assert_equal("1995", worksheet.lever_graphs_g1751); end
  def test_lever_graphs_h1751; assert_equal("2000", worksheet.lever_graphs_h1751); end
  def test_lever_graphs_i1751; assert_equal("2005", worksheet.lever_graphs_i1751); end
  def test_lever_graphs_j1751; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1751, 0.002); end
  def test_lever_graphs_k1751; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1751, 0.002); end
  def test_lever_graphs_l1751; assert_equal("2015", worksheet.lever_graphs_l1751); end
  def test_lever_graphs_m1751; assert_equal("2020", worksheet.lever_graphs_m1751); end
  def test_lever_graphs_n1751; assert_equal("2025", worksheet.lever_graphs_n1751); end
  def test_lever_graphs_o1751; assert_equal("2030", worksheet.lever_graphs_o1751); end
  def test_lever_graphs_p1751; assert_equal("2035", worksheet.lever_graphs_p1751); end
  def test_lever_graphs_q1751; assert_equal("2040", worksheet.lever_graphs_q1751); end
  def test_lever_graphs_r1751; assert_equal("2045", worksheet.lever_graphs_r1751); end
  def test_lever_graphs_s1751; assert_equal("2050", worksheet.lever_graphs_s1751); end
  def test_lever_graphs_b1752; assert_equal("Historic data", worksheet.lever_graphs_b1752); end
  def test_lever_graphs_b1753; assert_in_delta(1.0, worksheet.lever_graphs_b1753, 0.002); end
  def test_lever_graphs_k1753; assert_in_epsilon(364.0, worksheet.lever_graphs_k1753, 0.002); end
  def test_lever_graphs_l1753; assert_in_epsilon(448.0, worksheet.lever_graphs_l1753, 0.002); end
  def test_lever_graphs_m1753; assert_in_epsilon(400.0, worksheet.lever_graphs_m1753, 0.002); end
  def test_lever_graphs_n1753; assert_in_epsilon(300.0, worksheet.lever_graphs_n1753, 0.002); end
  def test_lever_graphs_o1753; assert_in_epsilon(200.0, worksheet.lever_graphs_o1753, 0.002); end
  def test_lever_graphs_p1753; assert_in_epsilon(200.0, worksheet.lever_graphs_p1753, 0.002); end
  def test_lever_graphs_q1753; assert_in_epsilon(100.0, worksheet.lever_graphs_q1753, 0.002); end
  def test_lever_graphs_r1753; assert_in_epsilon(50.0, worksheet.lever_graphs_r1753, 0.002); end
  def test_lever_graphs_s1753; assert_in_delta(0.0, (worksheet.lever_graphs_s1753||0), 0.002); end
  def test_lever_graphs_b1754; assert_in_epsilon(2.0, worksheet.lever_graphs_b1754, 0.002); end
  def test_lever_graphs_k1754; assert_in_epsilon(364.0, worksheet.lever_graphs_k1754, 0.002); end
  def test_lever_graphs_l1754; assert_in_epsilon(448.0, worksheet.lever_graphs_l1754, 0.002); end
  def test_lever_graphs_m1754; assert_in_epsilon(475.0, worksheet.lever_graphs_m1754, 0.002); end
  def test_lever_graphs_n1754; assert_in_epsilon(498.0, worksheet.lever_graphs_n1754, 0.002); end
  def test_lever_graphs_o1754; assert_in_epsilon(530.0, worksheet.lever_graphs_o1754, 0.002); end
  def test_lever_graphs_p1754; assert_in_epsilon(562.0, worksheet.lever_graphs_p1754, 0.002); end
  def test_lever_graphs_q1754; assert_in_epsilon(601.0, worksheet.lever_graphs_q1754, 0.002); end
  def test_lever_graphs_r1754; assert_in_epsilon(643.0, worksheet.lever_graphs_r1754, 0.002); end
  def test_lever_graphs_s1754; assert_in_epsilon(685.0, worksheet.lever_graphs_s1754, 0.002); end
  def test_lever_graphs_b1755; assert_in_epsilon(3.0, worksheet.lever_graphs_b1755, 0.002); end
  def test_lever_graphs_k1755; assert_in_epsilon(364.0, worksheet.lever_graphs_k1755, 0.002); end
  def test_lever_graphs_l1755; assert_in_epsilon(448.0, worksheet.lever_graphs_l1755, 0.002); end
  def test_lever_graphs_m1755; assert_in_epsilon(510.0, worksheet.lever_graphs_m1755, 0.002); end
  def test_lever_graphs_n1755; assert_in_epsilon(585.0, worksheet.lever_graphs_n1755, 0.002); end
  def test_lever_graphs_o1755; assert_in_epsilon(660.0, worksheet.lever_graphs_o1755, 0.002); end
  def test_lever_graphs_p1755; assert_in_epsilon(735.0, worksheet.lever_graphs_p1755, 0.002); end
  def test_lever_graphs_q1755; assert_in_epsilon(817.0, worksheet.lever_graphs_q1755, 0.002); end
  def test_lever_graphs_r1755; assert_in_epsilon(920.0, worksheet.lever_graphs_r1755, 0.002); end
  def test_lever_graphs_s1755; assert_in_epsilon(1030.0, worksheet.lever_graphs_s1755, 0.002); end
  def test_lever_graphs_b1756; assert_in_epsilon(4.0, worksheet.lever_graphs_b1756, 0.002); end
  def test_lever_graphs_k1756; assert_in_epsilon(364.0, worksheet.lever_graphs_k1756, 0.002); end
  def test_lever_graphs_l1756; assert_in_epsilon(448.0, worksheet.lever_graphs_l1756, 0.002); end
  def test_lever_graphs_m1756; assert_in_epsilon(546.0, worksheet.lever_graphs_m1756, 0.002); end
  def test_lever_graphs_n1756; assert_in_epsilon(670.0, worksheet.lever_graphs_n1756, 0.002); end
  def test_lever_graphs_o1756; assert_in_epsilon(823.0, worksheet.lever_graphs_o1756, 0.002); end
  def test_lever_graphs_p1756; assert_in_epsilon(1010.0, worksheet.lever_graphs_p1756, 0.002); end
  def test_lever_graphs_q1756; assert_in_epsilon(1240.0, worksheet.lever_graphs_q1756, 0.002); end
  def test_lever_graphs_r1756; assert_in_epsilon(1523.0, worksheet.lever_graphs_r1756, 0.002); end
  def test_lever_graphs_s1756; assert_in_epsilon(1870.0, worksheet.lever_graphs_s1756, 0.002); end
  def test_lever_graphs_b1757; assert_equal("Comparator A", worksheet.lever_graphs_b1757); end
  def test_lever_graphs_b1758; assert_equal("Comparator B", worksheet.lever_graphs_b1758); end
  def test_lever_graphs_b1759; assert_equal("Comparator C", worksheet.lever_graphs_b1759); end
  def test_lever_graphs_c1913; assert_equal("1975", worksheet.lever_graphs_c1913); end
  def test_lever_graphs_d1913; assert_equal("1980", worksheet.lever_graphs_d1913); end
  def test_lever_graphs_e1913; assert_equal("1985", worksheet.lever_graphs_e1913); end
  def test_lever_graphs_f1913; assert_equal("1990", worksheet.lever_graphs_f1913); end
  def test_lever_graphs_g1913; assert_equal("1995", worksheet.lever_graphs_g1913); end
  def test_lever_graphs_h1913; assert_equal("2000", worksheet.lever_graphs_h1913); end
  def test_lever_graphs_i1913; assert_equal("2005", worksheet.lever_graphs_i1913); end
  def test_lever_graphs_j1913; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1913, 0.002); end
  def test_lever_graphs_k1913; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1913, 0.002); end
  def test_lever_graphs_l1913; assert_equal("2015", worksheet.lever_graphs_l1913); end
  def test_lever_graphs_m1913; assert_equal("2020", worksheet.lever_graphs_m1913); end
  def test_lever_graphs_n1913; assert_equal("2025", worksheet.lever_graphs_n1913); end
  def test_lever_graphs_o1913; assert_equal("2030", worksheet.lever_graphs_o1913); end
  def test_lever_graphs_p1913; assert_equal("2035", worksheet.lever_graphs_p1913); end
  def test_lever_graphs_q1913; assert_equal("2040", worksheet.lever_graphs_q1913); end
  def test_lever_graphs_r1913; assert_equal("2045", worksheet.lever_graphs_r1913); end
  def test_lever_graphs_s1913; assert_equal("2050", worksheet.lever_graphs_s1913); end
  def test_lever_graphs_b1914; assert_equal("Historic data", worksheet.lever_graphs_b1914); end
  def test_lever_graphs_b1915; assert_in_delta(1.0, worksheet.lever_graphs_b1915, 0.002); end
  def test_lever_graphs_k1915; assert_in_epsilon(4.1, worksheet.lever_graphs_k1915, 0.002); end
  def test_lever_graphs_l1915; assert_in_epsilon(15.0, worksheet.lever_graphs_l1915, 0.002); end
  def test_lever_graphs_m1915; assert_in_epsilon(17.0, worksheet.lever_graphs_m1915, 0.002); end
  def test_lever_graphs_n1915; assert_in_epsilon(13.0, worksheet.lever_graphs_n1915, 0.002); end
  def test_lever_graphs_o1915; assert_in_delta(0.0, (worksheet.lever_graphs_o1915||0), 0.002); end
  def test_lever_graphs_p1915; assert_in_delta(0.0, (worksheet.lever_graphs_p1915||0), 0.002); end
  def test_lever_graphs_q1915; assert_in_delta(0.0, (worksheet.lever_graphs_q1915||0), 0.002); end
  def test_lever_graphs_r1915; assert_in_delta(0.0, (worksheet.lever_graphs_r1915||0), 0.002); end
  def test_lever_graphs_s1915; assert_in_delta(0.0, (worksheet.lever_graphs_s1915||0), 0.002); end
  def test_lever_graphs_b1916; assert_in_epsilon(2.0, worksheet.lever_graphs_b1916, 0.002); end
  def test_lever_graphs_k1916; assert_in_epsilon(4.1, worksheet.lever_graphs_k1916, 0.002); end
  def test_lever_graphs_l1916; assert_in_epsilon(15.0, worksheet.lever_graphs_l1916, 0.002); end
  def test_lever_graphs_m1916; assert_in_epsilon(33.0, worksheet.lever_graphs_m1916, 0.002); end
  def test_lever_graphs_n1916; assert_in_epsilon(50.0, worksheet.lever_graphs_n1916, 0.002); end
  def test_lever_graphs_o1916; assert_in_epsilon(96.0, worksheet.lever_graphs_o1916, 0.002); end
  def test_lever_graphs_p1916; assert_in_epsilon(147.0, worksheet.lever_graphs_p1916, 0.002); end
  def test_lever_graphs_q1916; assert_in_epsilon(220.0, worksheet.lever_graphs_q1916, 0.002); end
  def test_lever_graphs_r1916; assert_in_epsilon(376.0, worksheet.lever_graphs_r1916, 0.002); end
  def test_lever_graphs_s1916; assert_in_epsilon(455.0, worksheet.lever_graphs_s1916, 0.002); end
  def test_lever_graphs_b1917; assert_in_epsilon(3.0, worksheet.lever_graphs_b1917, 0.002); end
  def test_lever_graphs_k1917; assert_in_epsilon(4.1, worksheet.lever_graphs_k1917, 0.002); end
  def test_lever_graphs_l1917; assert_in_epsilon(15.0, worksheet.lever_graphs_l1917, 0.002); end
  def test_lever_graphs_m1917; assert_in_epsilon(46.0, worksheet.lever_graphs_m1917, 0.002); end
  def test_lever_graphs_n1917; assert_in_epsilon(87.0, worksheet.lever_graphs_n1917, 0.002); end
  def test_lever_graphs_o1917; assert_in_epsilon(188.0, worksheet.lever_graphs_o1917, 0.002); end
  def test_lever_graphs_p1917; assert_in_epsilon(295.0, worksheet.lever_graphs_p1917, 0.002); end
  def test_lever_graphs_q1917; assert_in_epsilon(424.0, worksheet.lever_graphs_q1917, 0.002); end
  def test_lever_graphs_r1917; assert_in_epsilon(708.0, worksheet.lever_graphs_r1917, 0.002); end
  def test_lever_graphs_s1917; assert_in_epsilon(910.0, worksheet.lever_graphs_s1917, 0.002); end
  def test_lever_graphs_b1918; assert_in_epsilon(4.0, worksheet.lever_graphs_b1918, 0.002); end
  def test_lever_graphs_k1918; assert_in_epsilon(4.1, worksheet.lever_graphs_k1918, 0.002); end
  def test_lever_graphs_l1918; assert_in_epsilon(15.0, worksheet.lever_graphs_l1918, 0.002); end
  def test_lever_graphs_m1918; assert_in_epsilon(71.0, worksheet.lever_graphs_m1918, 0.002); end
  def test_lever_graphs_n1918; assert_in_epsilon(177.0, worksheet.lever_graphs_n1918, 0.002); end
  def test_lever_graphs_o1918; assert_in_epsilon(440.0, worksheet.lever_graphs_o1918, 0.002); end
  def test_lever_graphs_p1918; assert_in_epsilon(647.0, worksheet.lever_graphs_p1918, 0.002); end
  def test_lever_graphs_q1918; assert_in_epsilon(951.0, worksheet.lever_graphs_q1918, 0.002); end
  def test_lever_graphs_r1918; assert_in_epsilon(1157.0, worksheet.lever_graphs_r1918, 0.002); end
  def test_lever_graphs_s1918; assert_in_epsilon(1408.0, worksheet.lever_graphs_s1918, 0.002); end
  def test_lever_graphs_b1919; assert_equal("Comparator A", worksheet.lever_graphs_b1919); end
  def test_lever_graphs_b1920; assert_equal("Comparator B", worksheet.lever_graphs_b1920); end
  def test_lever_graphs_b1921; assert_equal("Comparator C", worksheet.lever_graphs_b1921); end
  def test_lever_graphs_c1897; assert_equal("1975", worksheet.lever_graphs_c1897); end
  def test_lever_graphs_d1897; assert_equal("1980", worksheet.lever_graphs_d1897); end
  def test_lever_graphs_e1897; assert_equal("1985", worksheet.lever_graphs_e1897); end
  def test_lever_graphs_f1897; assert_equal("1990", worksheet.lever_graphs_f1897); end
  def test_lever_graphs_g1897; assert_equal("1995", worksheet.lever_graphs_g1897); end
  def test_lever_graphs_h1897; assert_equal("2000", worksheet.lever_graphs_h1897); end
  def test_lever_graphs_i1897; assert_equal("2005", worksheet.lever_graphs_i1897); end
  def test_lever_graphs_j1897; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1897, 0.002); end
  def test_lever_graphs_k1897; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1897, 0.002); end
  def test_lever_graphs_l1897; assert_equal("2015", worksheet.lever_graphs_l1897); end
  def test_lever_graphs_m1897; assert_equal("2020", worksheet.lever_graphs_m1897); end
  def test_lever_graphs_n1897; assert_equal("2025", worksheet.lever_graphs_n1897); end
  def test_lever_graphs_o1897; assert_equal("2030", worksheet.lever_graphs_o1897); end
  def test_lever_graphs_p1897; assert_equal("2035", worksheet.lever_graphs_p1897); end
  def test_lever_graphs_q1897; assert_equal("2040", worksheet.lever_graphs_q1897); end
  def test_lever_graphs_r1897; assert_equal("2045", worksheet.lever_graphs_r1897); end
  def test_lever_graphs_s1897; assert_equal("2050", worksheet.lever_graphs_s1897); end
  def test_lever_graphs_b1898; assert_equal("Historic data", worksheet.lever_graphs_b1898); end
  def test_lever_graphs_b1899; assert_in_delta(1.0, worksheet.lever_graphs_b1899, 0.002); end
  def test_lever_graphs_k1899; assert_in_epsilon(233.57, worksheet.lever_graphs_k1899, 0.002); end
  def test_lever_graphs_l1899; assert_in_epsilon(399.0, worksheet.lever_graphs_l1899, 0.002); end
  def test_lever_graphs_m1899; assert_in_epsilon(376.0, worksheet.lever_graphs_m1899, 0.002); end
  def test_lever_graphs_n1899; assert_in_epsilon(335.0, worksheet.lever_graphs_n1899, 0.002); end
  def test_lever_graphs_o1899; assert_in_epsilon(198.0, worksheet.lever_graphs_o1899, 0.002); end
  def test_lever_graphs_p1899; assert_in_delta(0.0, (worksheet.lever_graphs_p1899||0), 0.002); end
  def test_lever_graphs_q1899; assert_in_delta(0.0, (worksheet.lever_graphs_q1899||0), 0.002); end
  def test_lever_graphs_r1899; assert_in_delta(0.0, (worksheet.lever_graphs_r1899||0), 0.002); end
  def test_lever_graphs_s1899; assert_in_delta(0.0, (worksheet.lever_graphs_s1899||0), 0.002); end
  def test_lever_graphs_b1900; assert_in_epsilon(2.0, worksheet.lever_graphs_b1900, 0.002); end
  def test_lever_graphs_k1900; assert_in_epsilon(233.57, worksheet.lever_graphs_k1900, 0.002); end
  def test_lever_graphs_l1900; assert_in_epsilon(399.0, worksheet.lever_graphs_l1900, 0.002); end
  def test_lever_graphs_m1900; assert_in_epsilon(564.0, worksheet.lever_graphs_m1900, 0.002); end
  def test_lever_graphs_n1900; assert_in_epsilon(607.0, worksheet.lever_graphs_n1900, 0.002); end
  def test_lever_graphs_o1900; assert_in_epsilon(741.0, worksheet.lever_graphs_o1900, 0.002); end
  def test_lever_graphs_p1900; assert_in_epsilon(878.0, worksheet.lever_graphs_p1900, 0.002); end
  def test_lever_graphs_q1900; assert_in_epsilon(1068.0, worksheet.lever_graphs_q1900, 0.002); end
  def test_lever_graphs_r1900; assert_in_epsilon(1499.0, worksheet.lever_graphs_r1900, 0.002); end
  def test_lever_graphs_s1900; assert_in_epsilon(1862.0, worksheet.lever_graphs_s1900, 0.002); end
  def test_lever_graphs_b1901; assert_in_epsilon(3.0, worksheet.lever_graphs_b1901, 0.002); end
  def test_lever_graphs_k1901; assert_in_epsilon(233.57, worksheet.lever_graphs_k1901, 0.002); end
  def test_lever_graphs_l1901; assert_in_epsilon(399.0, worksheet.lever_graphs_l1901, 0.002); end
  def test_lever_graphs_m1901; assert_in_epsilon(778.0, worksheet.lever_graphs_m1901, 0.002); end
  def test_lever_graphs_n1901; assert_in_epsilon(982.0, worksheet.lever_graphs_n1901, 0.002); end
  def test_lever_graphs_o1901; assert_in_epsilon(1466.0, worksheet.lever_graphs_o1901, 0.002); end
  def test_lever_graphs_p1901; assert_in_epsilon(1945.0, worksheet.lever_graphs_p1901, 0.002); end
  def test_lever_graphs_q1901; assert_in_epsilon(2369.0, worksheet.lever_graphs_q1901, 0.002); end
  def test_lever_graphs_r1901; assert_in_epsilon(3037.0, worksheet.lever_graphs_r1901, 0.002); end
  def test_lever_graphs_s1901; assert_in_epsilon(3800.0, worksheet.lever_graphs_s1901, 0.002); end
  def test_lever_graphs_b1902; assert_in_epsilon(4.0, worksheet.lever_graphs_b1902, 0.002); end
  def test_lever_graphs_k1902; assert_in_epsilon(233.57, worksheet.lever_graphs_k1902, 0.002); end
  def test_lever_graphs_l1902; assert_in_epsilon(399.0, worksheet.lever_graphs_l1902, 0.002); end
  def test_lever_graphs_m1902; assert_in_epsilon(1073.0, worksheet.lever_graphs_m1902, 0.002); end
  def test_lever_graphs_n1902; assert_in_epsilon(1576.0, worksheet.lever_graphs_n1902, 0.002); end
  def test_lever_graphs_o1902; assert_in_epsilon(2316.0, worksheet.lever_graphs_o1902, 0.002); end
  def test_lever_graphs_p1902; assert_in_epsilon(3100.0, worksheet.lever_graphs_p1902, 0.002); end
  def test_lever_graphs_q1902; assert_in_epsilon(4149.0, worksheet.lever_graphs_q1902, 0.002); end
  def test_lever_graphs_r1902; assert_in_epsilon(4581.0, worksheet.lever_graphs_r1902, 0.002); end
  def test_lever_graphs_s1902; assert_in_epsilon(5058.0, worksheet.lever_graphs_s1902, 0.002); end
  def test_lever_graphs_b1903; assert_equal("Comparator A", worksheet.lever_graphs_b1903); end
  def test_lever_graphs_b1904; assert_equal("Comparator B", worksheet.lever_graphs_b1904); end
  def test_lever_graphs_b1905; assert_equal("Comparator C", worksheet.lever_graphs_b1905); end
  def test_lever_graphs_c1873; assert_equal("1975", worksheet.lever_graphs_c1873); end
  def test_lever_graphs_d1873; assert_equal("1980", worksheet.lever_graphs_d1873); end
  def test_lever_graphs_e1873; assert_equal("1985", worksheet.lever_graphs_e1873); end
  def test_lever_graphs_f1873; assert_equal("1990", worksheet.lever_graphs_f1873); end
  def test_lever_graphs_g1873; assert_equal("1995", worksheet.lever_graphs_g1873); end
  def test_lever_graphs_h1873; assert_equal("2000", worksheet.lever_graphs_h1873); end
  def test_lever_graphs_i1873; assert_equal("2005", worksheet.lever_graphs_i1873); end
  def test_lever_graphs_j1873; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1873, 0.002); end
  def test_lever_graphs_k1873; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1873, 0.002); end
  def test_lever_graphs_l1873; assert_equal("2015", worksheet.lever_graphs_l1873); end
  def test_lever_graphs_m1873; assert_equal("2020", worksheet.lever_graphs_m1873); end
  def test_lever_graphs_n1873; assert_equal("2025", worksheet.lever_graphs_n1873); end
  def test_lever_graphs_o1873; assert_equal("2030", worksheet.lever_graphs_o1873); end
  def test_lever_graphs_p1873; assert_equal("2035", worksheet.lever_graphs_p1873); end
  def test_lever_graphs_q1873; assert_equal("2040", worksheet.lever_graphs_q1873); end
  def test_lever_graphs_r1873; assert_equal("2045", worksheet.lever_graphs_r1873); end
  def test_lever_graphs_s1873; assert_equal("2050", worksheet.lever_graphs_s1873); end
  def test_lever_graphs_b1874; assert_equal("Historic data", worksheet.lever_graphs_b1874); end
  def test_lever_graphs_b1875; assert_in_delta(1.0, worksheet.lever_graphs_b1875, 0.002); end
  def test_lever_graphs_k1875; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1875, 0.002); end
  def test_lever_graphs_l1875; assert_in_epsilon(173.0, worksheet.lever_graphs_l1875, 0.002); end
  def test_lever_graphs_m1875; assert_in_epsilon(140.0, worksheet.lever_graphs_m1875, 0.002); end
  def test_lever_graphs_n1875; assert_in_epsilon(115.0, worksheet.lever_graphs_n1875, 0.002); end
  def test_lever_graphs_o1875; assert_in_epsilon(75.0, worksheet.lever_graphs_o1875, 0.002); end
  def test_lever_graphs_p1875; assert_in_epsilon(55.0, worksheet.lever_graphs_p1875, 0.002); end
  def test_lever_graphs_q1875; assert_in_delta(0.0, (worksheet.lever_graphs_q1875||0), 0.002); end
  def test_lever_graphs_r1875; assert_in_delta(0.0, (worksheet.lever_graphs_r1875||0), 0.002); end
  def test_lever_graphs_s1875; assert_in_delta(0.0, (worksheet.lever_graphs_s1875||0), 0.002); end
  def test_lever_graphs_b1876; assert_in_epsilon(2.0, worksheet.lever_graphs_b1876, 0.002); end
  def test_lever_graphs_k1876; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1876, 0.002); end
  def test_lever_graphs_l1876; assert_in_epsilon(173.0, worksheet.lever_graphs_l1876, 0.002); end
  def test_lever_graphs_m1876; assert_in_epsilon(278.46000000000004, worksheet.lever_graphs_m1876, 0.002); end
  def test_lever_graphs_n1876; assert_in_epsilon(398.83, worksheet.lever_graphs_n1876, 0.002); end
  def test_lever_graphs_o1876; assert_in_epsilon(591.5799999999999, worksheet.lever_graphs_o1876, 0.002); end
  def test_lever_graphs_p1876; assert_in_epsilon(812.85, worksheet.lever_graphs_p1876, 0.002); end
  def test_lever_graphs_q1876; assert_in_epsilon(1148.26, worksheet.lever_graphs_q1876, 0.002); end
  def test_lever_graphs_r1876; assert_in_epsilon(1577.17, worksheet.lever_graphs_r1876, 0.002); end
  def test_lever_graphs_s1876; assert_in_epsilon(2204.31, worksheet.lever_graphs_s1876, 0.002); end
  def test_lever_graphs_b1877; assert_in_epsilon(3.0, worksheet.lever_graphs_b1877, 0.002); end
  def test_lever_graphs_k1877; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1877, 0.002); end
  def test_lever_graphs_l1877; assert_in_epsilon(173.0, worksheet.lever_graphs_l1877, 0.002); end
  def test_lever_graphs_m1877; assert_in_epsilon(321.28, worksheet.lever_graphs_m1877, 0.002); end
  def test_lever_graphs_n1877; assert_in_epsilon(539.22, worksheet.lever_graphs_n1877, 0.002); end
  def test_lever_graphs_o1877; assert_in_epsilon(905.7, worksheet.lever_graphs_o1877, 0.002); end
  def test_lever_graphs_p1877; assert_in_epsilon(1464.94, worksheet.lever_graphs_p1877, 0.002); end
  def test_lever_graphs_q1877; assert_in_epsilon(2371.94, worksheet.lever_graphs_q1877, 0.002); end
  def test_lever_graphs_r1877; assert_in_epsilon(3136.37, worksheet.lever_graphs_r1877, 0.002); end
  def test_lever_graphs_s1877; assert_in_epsilon(4148.93, worksheet.lever_graphs_s1877, 0.002); end
  def test_lever_graphs_b1878; assert_in_epsilon(4.0, worksheet.lever_graphs_b1878, 0.002); end
  def test_lever_graphs_k1878; assert_in_epsilon(71.28999999999999, worksheet.lever_graphs_k1878, 0.002); end
  def test_lever_graphs_l1878; assert_in_epsilon(173.0, worksheet.lever_graphs_l1878, 0.002); end
  def test_lever_graphs_m1878; assert_in_epsilon(410.20000000000005, worksheet.lever_graphs_m1878, 0.002); end
  def test_lever_graphs_n1878; assert_in_epsilon(779.8399999999999, worksheet.lever_graphs_n1878, 0.002); end
  def test_lever_graphs_o1878; assert_in_epsilon(1484.3700000000001, worksheet.lever_graphs_o1878, 0.002); end
  def test_lever_graphs_p1878; assert_in_epsilon(2500.8, worksheet.lever_graphs_p1878, 0.002); end
  def test_lever_graphs_q1878; assert_in_epsilon(4214.1, worksheet.lever_graphs_q1878, 0.002); end
  def test_lever_graphs_r1878; assert_in_epsilon(5639.4, worksheet.lever_graphs_r1878, 0.002); end
  def test_lever_graphs_s1878; assert_in_epsilon(7546.700000000001, worksheet.lever_graphs_s1878, 0.002); end
  def test_lever_graphs_b1879; assert_equal("Comparator A", worksheet.lever_graphs_b1879); end
  def test_lever_graphs_b1880; assert_equal("Comparator B", worksheet.lever_graphs_b1880); end
  def test_lever_graphs_b1881; assert_equal("Comparator C", worksheet.lever_graphs_b1881); end
  def test_lever_graphs_c1857; assert_equal("1975", worksheet.lever_graphs_c1857); end
  def test_lever_graphs_d1857; assert_equal("1980", worksheet.lever_graphs_d1857); end
  def test_lever_graphs_e1857; assert_equal("1985", worksheet.lever_graphs_e1857); end
  def test_lever_graphs_f1857; assert_equal("1990", worksheet.lever_graphs_f1857); end
  def test_lever_graphs_g1857; assert_equal("1995", worksheet.lever_graphs_g1857); end
  def test_lever_graphs_h1857; assert_equal("2000", worksheet.lever_graphs_h1857); end
  def test_lever_graphs_i1857; assert_equal("2005", worksheet.lever_graphs_i1857); end
  def test_lever_graphs_j1857; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1857, 0.002); end
  def test_lever_graphs_k1857; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1857, 0.002); end
  def test_lever_graphs_l1857; assert_equal("2015", worksheet.lever_graphs_l1857); end
  def test_lever_graphs_m1857; assert_equal("2020", worksheet.lever_graphs_m1857); end
  def test_lever_graphs_n1857; assert_equal("2025", worksheet.lever_graphs_n1857); end
  def test_lever_graphs_o1857; assert_equal("2030", worksheet.lever_graphs_o1857); end
  def test_lever_graphs_p1857; assert_equal("2035", worksheet.lever_graphs_p1857); end
  def test_lever_graphs_q1857; assert_equal("2040", worksheet.lever_graphs_q1857); end
  def test_lever_graphs_r1857; assert_equal("2045", worksheet.lever_graphs_r1857); end
  def test_lever_graphs_s1857; assert_equal("2050", worksheet.lever_graphs_s1857); end
  def test_lever_graphs_b1858; assert_equal("Historic data", worksheet.lever_graphs_b1858); end
  def test_lever_graphs_b1859; assert_in_delta(1.0, worksheet.lever_graphs_b1859, 0.002); end
  def test_lever_graphs_k1859; assert_in_epsilon(69.69, worksheet.lever_graphs_k1859, 0.002); end
  def test_lever_graphs_l1859; assert_in_epsilon(165.0, worksheet.lever_graphs_l1859, 0.002); end
  def test_lever_graphs_m1859; assert_in_epsilon(110.0, worksheet.lever_graphs_m1859, 0.002); end
  def test_lever_graphs_n1859; assert_in_epsilon(85.0, worksheet.lever_graphs_n1859, 0.002); end
  def test_lever_graphs_o1859; assert_in_epsilon(55.0, worksheet.lever_graphs_o1859, 0.002); end
  def test_lever_graphs_p1859; assert_in_epsilon(35.0, worksheet.lever_graphs_p1859, 0.002); end
  def test_lever_graphs_q1859; assert_in_delta(0.0, (worksheet.lever_graphs_q1859||0), 0.002); end
  def test_lever_graphs_r1859; assert_in_delta(0.0, (worksheet.lever_graphs_r1859||0), 0.002); end
  def test_lever_graphs_s1859; assert_in_delta(0.0, (worksheet.lever_graphs_s1859||0), 0.002); end
  def test_lever_graphs_b1860; assert_in_epsilon(2.0, worksheet.lever_graphs_b1860, 0.002); end
  def test_lever_graphs_k1860; assert_in_epsilon(69.69, worksheet.lever_graphs_k1860, 0.002); end
  def test_lever_graphs_l1860; assert_in_epsilon(165.0, worksheet.lever_graphs_l1860, 0.002); end
  def test_lever_graphs_m1860; assert_in_epsilon(207.46, worksheet.lever_graphs_m1860, 0.002); end
  def test_lever_graphs_n1860; assert_in_epsilon(297.83, worksheet.lever_graphs_n1860, 0.002); end
  def test_lever_graphs_o1860; assert_in_epsilon(427.58, worksheet.lever_graphs_o1860, 0.002); end
  def test_lever_graphs_p1860; assert_in_epsilon(613.85, worksheet.lever_graphs_p1860, 0.002); end
  def test_lever_graphs_q1860; assert_in_epsilon(881.26, worksheet.lever_graphs_q1860, 0.002); end
  def test_lever_graphs_r1860; assert_in_epsilon(1265.17, worksheet.lever_graphs_r1860, 0.002); end
  def test_lever_graphs_s1860; assert_in_epsilon(1816.31, worksheet.lever_graphs_s1860, 0.002); end
  def test_lever_graphs_b1861; assert_in_epsilon(3.0, worksheet.lever_graphs_b1861, 0.002); end
  def test_lever_graphs_k1861; assert_in_epsilon(69.69, worksheet.lever_graphs_k1861, 0.002); end
  def test_lever_graphs_l1861; assert_in_epsilon(165.0, worksheet.lever_graphs_l1861, 0.002); end
  def test_lever_graphs_m1861; assert_in_epsilon(238.28, worksheet.lever_graphs_m1861, 0.002); end
  def test_lever_graphs_n1861; assert_in_epsilon(392.92, worksheet.lever_graphs_n1861, 0.002); end
  def test_lever_graphs_o1861; assert_in_epsilon(647.9, worksheet.lever_graphs_o1861, 0.002); end
  def test_lever_graphs_p1861; assert_in_epsilon(1068.34, worksheet.lever_graphs_p1861, 0.002); end
  def test_lever_graphs_q1861; assert_in_epsilon(1761.64, worksheet.lever_graphs_q1861, 0.002); end
  def test_lever_graphs_r1861; assert_in_epsilon(2357.47, worksheet.lever_graphs_r1861, 0.002); end
  def test_lever_graphs_s1861; assert_in_epsilon(3154.83, worksheet.lever_graphs_s1861, 0.002); end
  def test_lever_graphs_b1862; assert_in_epsilon(4.0, worksheet.lever_graphs_b1862, 0.002); end
  def test_lever_graphs_k1862; assert_in_epsilon(69.69, worksheet.lever_graphs_k1862, 0.002); end
  def test_lever_graphs_l1862; assert_in_epsilon(165.0, worksheet.lever_graphs_l1862, 0.002); end
  def test_lever_graphs_m1862; assert_in_epsilon(312.6, worksheet.lever_graphs_m1862, 0.002); end
  def test_lever_graphs_n1862; assert_in_epsilon(583.64, worksheet.lever_graphs_n1862, 0.002); end
  def test_lever_graphs_o1862; assert_in_epsilon(1089.67, worksheet.lever_graphs_o1862, 0.002); end
  def test_lever_graphs_p1862; assert_in_epsilon(1835.7, worksheet.lever_graphs_p1862, 0.002); end
  def test_lever_graphs_q1862; assert_in_epsilon(3093.3, worksheet.lever_graphs_q1862, 0.002); end
  def test_lever_graphs_r1862; assert_in_epsilon(4139.5, worksheet.lever_graphs_r1862, 0.002); end
  def test_lever_graphs_s1862; assert_in_epsilon(5539.6, worksheet.lever_graphs_s1862, 0.002); end
  def test_lever_graphs_b1863; assert_equal("Comparator A", worksheet.lever_graphs_b1863); end
  def test_lever_graphs_b1864; assert_equal("Comparator B", worksheet.lever_graphs_b1864); end
  def test_lever_graphs_b1865; assert_equal("Comparator C", worksheet.lever_graphs_b1865); end
  def test_lever_graphs_c2007; assert_equal("1975", worksheet.lever_graphs_c2007); end
  def test_lever_graphs_d2007; assert_equal("1980", worksheet.lever_graphs_d2007); end
  def test_lever_graphs_e2007; assert_equal("1985", worksheet.lever_graphs_e2007); end
  def test_lever_graphs_f2007; assert_equal("1990", worksheet.lever_graphs_f2007); end
  def test_lever_graphs_g2007; assert_equal("1995", worksheet.lever_graphs_g2007); end
  def test_lever_graphs_h2007; assert_equal("2000", worksheet.lever_graphs_h2007); end
  def test_lever_graphs_i2007; assert_equal("2005", worksheet.lever_graphs_i2007); end
  def test_lever_graphs_j2007; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2007, 0.002); end
  def test_lever_graphs_k2007; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2007, 0.002); end
  def test_lever_graphs_l2007; assert_equal("2015", worksheet.lever_graphs_l2007); end
  def test_lever_graphs_m2007; assert_equal("2020", worksheet.lever_graphs_m2007); end
  def test_lever_graphs_n2007; assert_equal("2025", worksheet.lever_graphs_n2007); end
  def test_lever_graphs_o2007; assert_equal("2030", worksheet.lever_graphs_o2007); end
  def test_lever_graphs_p2007; assert_equal("2035", worksheet.lever_graphs_p2007); end
  def test_lever_graphs_q2007; assert_equal("2040", worksheet.lever_graphs_q2007); end
  def test_lever_graphs_r2007; assert_equal("2045", worksheet.lever_graphs_r2007); end
  def test_lever_graphs_s2007; assert_equal("2050", worksheet.lever_graphs_s2007); end
  def test_lever_graphs_b2008; assert_equal("Historic data", worksheet.lever_graphs_b2008); end
  def test_lever_graphs_b2009; assert_in_delta(1.0, worksheet.lever_graphs_b2009, 0.002); end
  def test_lever_graphs_k2009; assert_in_epsilon(120.0, worksheet.lever_graphs_k2009, 0.002); end
  def test_lever_graphs_l2009; assert_in_epsilon(123.6, worksheet.lever_graphs_l2009, 0.002); end
  def test_lever_graphs_m2009; assert_in_epsilon(127.3, worksheet.lever_graphs_m2009, 0.002); end
  def test_lever_graphs_n2009; assert_in_epsilon(131.1, worksheet.lever_graphs_n2009, 0.002); end
  def test_lever_graphs_o2009; assert_in_epsilon(135.0, worksheet.lever_graphs_o2009, 0.002); end
  def test_lever_graphs_p2009; assert_in_epsilon(139.1, worksheet.lever_graphs_p2009, 0.002); end
  def test_lever_graphs_q2009; assert_in_epsilon(143.3, worksheet.lever_graphs_q2009, 0.002); end
  def test_lever_graphs_r2009; assert_in_epsilon(147.6, worksheet.lever_graphs_r2009, 0.002); end
  def test_lever_graphs_s2009; assert_in_epsilon(152.0, worksheet.lever_graphs_s2009, 0.002); end
  def test_lever_graphs_b2010; assert_in_epsilon(2.0, worksheet.lever_graphs_b2010, 0.002); end
  def test_lever_graphs_k2010; assert_in_epsilon(120.0, worksheet.lever_graphs_k2010, 0.002); end
  def test_lever_graphs_l2010; assert_in_epsilon(123.6, worksheet.lever_graphs_l2010, 0.002); end
  def test_lever_graphs_m2010; assert_in_epsilon(178.6, worksheet.lever_graphs_m2010, 0.002); end
  def test_lever_graphs_n2010; assert_in_epsilon(202.2, worksheet.lever_graphs_n2010, 0.002); end
  def test_lever_graphs_o2010; assert_in_epsilon(245.1, worksheet.lever_graphs_o2010, 0.002); end
  def test_lever_graphs_p2010; assert_in_epsilon(278.2, worksheet.lever_graphs_p2010, 0.002); end
  def test_lever_graphs_q2010; assert_in_epsilon(305.7, worksheet.lever_graphs_q2010, 0.002); end
  def test_lever_graphs_r2010; assert_in_epsilon(355.3, worksheet.lever_graphs_r2010, 0.002); end
  def test_lever_graphs_s2010; assert_in_epsilon(403.0, worksheet.lever_graphs_s2010, 0.002); end
  def test_lever_graphs_b2011; assert_in_epsilon(3.0, worksheet.lever_graphs_b2011, 0.002); end
  def test_lever_graphs_k2011; assert_in_epsilon(120.0, worksheet.lever_graphs_k2011, 0.002); end
  def test_lever_graphs_l2011; assert_in_epsilon(123.6, worksheet.lever_graphs_l2011, 0.002); end
  def test_lever_graphs_m2011; assert_in_epsilon(193.5, worksheet.lever_graphs_m2011, 0.002); end
  def test_lever_graphs_n2011; assert_in_epsilon(245.7, worksheet.lever_graphs_n2011, 0.002); end
  def test_lever_graphs_o2011; assert_in_epsilon(312.0, worksheet.lever_graphs_o2011, 0.002); end
  def test_lever_graphs_p2011; assert_in_epsilon(396.2, worksheet.lever_graphs_p2011, 0.002); end
  def test_lever_graphs_q2011; assert_in_epsilon(503.2, worksheet.lever_graphs_q2011, 0.002); end
  def test_lever_graphs_r2011; assert_in_epsilon(639.1, worksheet.lever_graphs_r2011, 0.002); end
  def test_lever_graphs_s2011; assert_in_epsilon(800.0, worksheet.lever_graphs_s2011, 0.002); end
  def test_lever_graphs_b2012; assert_in_epsilon(4.0, worksheet.lever_graphs_b2012, 0.002); end
  def test_lever_graphs_k2012; assert_in_epsilon(120.0, worksheet.lever_graphs_k2012, 0.002); end
  def test_lever_graphs_l2012; assert_in_epsilon(123.6, worksheet.lever_graphs_l2012, 0.002); end
  def test_lever_graphs_m2012; assert_in_epsilon(212.3, worksheet.lever_graphs_m2012, 0.002); end
  def test_lever_graphs_n2012; assert_in_epsilon(282.4, worksheet.lever_graphs_n2012, 0.002); end
  def test_lever_graphs_o2012; assert_in_epsilon(375.6, worksheet.lever_graphs_o2012, 0.002); end
  def test_lever_graphs_p2012; assert_in_epsilon(499.5, worksheet.lever_graphs_p2012, 0.002); end
  def test_lever_graphs_q2012; assert_in_epsilon(664.3, worksheet.lever_graphs_q2012, 0.002); end
  def test_lever_graphs_r2012; assert_in_epsilon(883.5, worksheet.lever_graphs_r2012, 0.002); end
  def test_lever_graphs_s2012; assert_in_epsilon(1200.0, worksheet.lever_graphs_s2012, 0.002); end
  def test_lever_graphs_b2013; assert_equal("Comparator A", worksheet.lever_graphs_b2013); end
  def test_lever_graphs_b2014; assert_equal("Comparator B", worksheet.lever_graphs_b2014); end
  def test_lever_graphs_b2015; assert_equal("Comparator C", worksheet.lever_graphs_b2015); end
  def test_lever_graphs_c1929; assert_equal("1975", worksheet.lever_graphs_c1929); end
  def test_lever_graphs_d1929; assert_equal("1980", worksheet.lever_graphs_d1929); end
  def test_lever_graphs_e1929; assert_equal("1985", worksheet.lever_graphs_e1929); end
  def test_lever_graphs_f1929; assert_equal("1990", worksheet.lever_graphs_f1929); end
  def test_lever_graphs_g1929; assert_equal("1995", worksheet.lever_graphs_g1929); end
  def test_lever_graphs_h1929; assert_equal("2000", worksheet.lever_graphs_h1929); end
  def test_lever_graphs_i1929; assert_equal("2005", worksheet.lever_graphs_i1929); end
  def test_lever_graphs_j1929; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1929, 0.002); end
  def test_lever_graphs_k1929; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1929, 0.002); end
  def test_lever_graphs_l1929; assert_equal("2015", worksheet.lever_graphs_l1929); end
  def test_lever_graphs_m1929; assert_equal("2020", worksheet.lever_graphs_m1929); end
  def test_lever_graphs_n1929; assert_equal("2025", worksheet.lever_graphs_n1929); end
  def test_lever_graphs_o1929; assert_equal("2030", worksheet.lever_graphs_o1929); end
  def test_lever_graphs_p1929; assert_equal("2035", worksheet.lever_graphs_p1929); end
  def test_lever_graphs_q1929; assert_equal("2040", worksheet.lever_graphs_q1929); end
  def test_lever_graphs_r1929; assert_equal("2045", worksheet.lever_graphs_r1929); end
  def test_lever_graphs_s1929; assert_equal("2050", worksheet.lever_graphs_s1929); end
  def test_lever_graphs_b1930; assert_equal("Historic data", worksheet.lever_graphs_b1930); end
  def test_lever_graphs_b1931; assert_in_delta(1.0, worksheet.lever_graphs_b1931, 0.002); end
  def test_lever_graphs_k1931; assert_in_epsilon(237.67, worksheet.lever_graphs_k1931, 0.002); end
  def test_lever_graphs_l1931; assert_in_epsilon(414.0, worksheet.lever_graphs_l1931, 0.002); end
  def test_lever_graphs_m1931; assert_in_epsilon(393.0, worksheet.lever_graphs_m1931, 0.002); end
  def test_lever_graphs_n1931; assert_in_epsilon(348.0, worksheet.lever_graphs_n1931, 0.002); end
  def test_lever_graphs_o1931; assert_in_epsilon(198.0, worksheet.lever_graphs_o1931, 0.002); end
  def test_lever_graphs_p1931; assert_in_delta(0.0, (worksheet.lever_graphs_p1931||0), 0.002); end
  def test_lever_graphs_q1931; assert_in_delta(0.0, (worksheet.lever_graphs_q1931||0), 0.002); end
  def test_lever_graphs_r1931; assert_in_delta(0.0, (worksheet.lever_graphs_r1931||0), 0.002); end
  def test_lever_graphs_s1931; assert_in_delta(0.0, (worksheet.lever_graphs_s1931||0), 0.002); end
  def test_lever_graphs_b1932; assert_in_epsilon(2.0, worksheet.lever_graphs_b1932, 0.002); end
  def test_lever_graphs_k1932; assert_in_epsilon(237.67, worksheet.lever_graphs_k1932, 0.002); end
  def test_lever_graphs_l1932; assert_in_epsilon(414.0, worksheet.lever_graphs_l1932, 0.002); end
  def test_lever_graphs_m1932; assert_in_epsilon(597.0, worksheet.lever_graphs_m1932, 0.002); end
  def test_lever_graphs_n1932; assert_in_epsilon(657.0, worksheet.lever_graphs_n1932, 0.002); end
  def test_lever_graphs_o1932; assert_in_epsilon(837.0, worksheet.lever_graphs_o1932, 0.002); end
  def test_lever_graphs_p1932; assert_in_epsilon(1025.0, worksheet.lever_graphs_p1932, 0.002); end
  def test_lever_graphs_q1932; assert_in_epsilon(1288.0, worksheet.lever_graphs_q1932, 0.002); end
  def test_lever_graphs_r1932; assert_in_epsilon(1875.0, worksheet.lever_graphs_r1932, 0.002); end
  def test_lever_graphs_s1932; assert_in_epsilon(2317.0, worksheet.lever_graphs_s1932, 0.002); end
  def test_lever_graphs_b1933; assert_in_epsilon(3.0, worksheet.lever_graphs_b1933, 0.002); end
  def test_lever_graphs_k1933; assert_in_epsilon(237.67, worksheet.lever_graphs_k1933, 0.002); end
  def test_lever_graphs_l1933; assert_in_epsilon(414.0, worksheet.lever_graphs_l1933, 0.002); end
  def test_lever_graphs_m1933; assert_in_epsilon(824.0, worksheet.lever_graphs_m1933, 0.002); end
  def test_lever_graphs_n1933; assert_in_epsilon(1069.0, worksheet.lever_graphs_n1933, 0.002); end
  def test_lever_graphs_o1933; assert_in_epsilon(1654.0, worksheet.lever_graphs_o1933, 0.002); end
  def test_lever_graphs_p1933; assert_in_epsilon(2240.0, worksheet.lever_graphs_p1933, 0.002); end
  def test_lever_graphs_q1933; assert_in_epsilon(2793.0, worksheet.lever_graphs_q1933, 0.002); end
  def test_lever_graphs_r1933; assert_in_epsilon(3745.0, worksheet.lever_graphs_r1933, 0.002); end
  def test_lever_graphs_s1933; assert_in_epsilon(4710.0, worksheet.lever_graphs_s1933, 0.002); end
  def test_lever_graphs_b1934; assert_in_epsilon(4.0, worksheet.lever_graphs_b1934, 0.002); end
  def test_lever_graphs_k1934; assert_in_epsilon(237.67, worksheet.lever_graphs_k1934, 0.002); end
  def test_lever_graphs_l1934; assert_in_epsilon(414.0, worksheet.lever_graphs_l1934, 0.002); end
  def test_lever_graphs_m1934; assert_in_epsilon(1144.0, worksheet.lever_graphs_m1934, 0.002); end
  def test_lever_graphs_n1934; assert_in_epsilon(1753.0, worksheet.lever_graphs_n1934, 0.002); end
  def test_lever_graphs_o1934; assert_in_epsilon(2756.0, worksheet.lever_graphs_o1934, 0.002); end
  def test_lever_graphs_p1934; assert_in_epsilon(3747.0, worksheet.lever_graphs_p1934, 0.002); end
  def test_lever_graphs_q1934; assert_in_epsilon(5100.0, worksheet.lever_graphs_q1934, 0.002); end
  def test_lever_graphs_r1934; assert_in_epsilon(5738.0, worksheet.lever_graphs_r1934, 0.002); end
  def test_lever_graphs_s1934; assert_in_epsilon(6466.0, worksheet.lever_graphs_s1934, 0.002); end
  def test_lever_graphs_b1935; assert_equal("Comparator A", worksheet.lever_graphs_b1935); end
  def test_lever_graphs_b1936; assert_equal("Comparator B", worksheet.lever_graphs_b1936); end
  def test_lever_graphs_b1937; assert_equal("Comparator C", worksheet.lever_graphs_b1937); end
  def test_lever_graphs_c1643; assert_equal("1975", worksheet.lever_graphs_c1643); end
  def test_lever_graphs_d1643; assert_equal("1980", worksheet.lever_graphs_d1643); end
  def test_lever_graphs_e1643; assert_equal("1985", worksheet.lever_graphs_e1643); end
  def test_lever_graphs_f1643; assert_equal("1990", worksheet.lever_graphs_f1643); end
  def test_lever_graphs_g1643; assert_equal("1995", worksheet.lever_graphs_g1643); end
  def test_lever_graphs_h1643; assert_equal("2000", worksheet.lever_graphs_h1643); end
  def test_lever_graphs_i1643; assert_equal("2005", worksheet.lever_graphs_i1643); end
  def test_lever_graphs_j1643; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1643, 0.002); end
  def test_lever_graphs_k1643; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1643, 0.002); end
  def test_lever_graphs_l1643; assert_equal("2015", worksheet.lever_graphs_l1643); end
  def test_lever_graphs_m1643; assert_equal("2020", worksheet.lever_graphs_m1643); end
  def test_lever_graphs_n1643; assert_equal("2025", worksheet.lever_graphs_n1643); end
  def test_lever_graphs_o1643; assert_equal("2030", worksheet.lever_graphs_o1643); end
  def test_lever_graphs_p1643; assert_equal("2035", worksheet.lever_graphs_p1643); end
  def test_lever_graphs_q1643; assert_equal("2040", worksheet.lever_graphs_q1643); end
  def test_lever_graphs_r1643; assert_equal("2045", worksheet.lever_graphs_r1643); end
  def test_lever_graphs_s1643; assert_equal("2050", worksheet.lever_graphs_s1643); end
  def test_lever_graphs_b1644; assert_equal("Historic data", worksheet.lever_graphs_b1644); end
  def test_lever_graphs_b1645; assert_in_delta(1.0, worksheet.lever_graphs_b1645, 0.002); end
  def test_lever_graphs_k1645; assert_in_delta(0.0, (worksheet.lever_graphs_k1645||0), 0.002); end
  def test_lever_graphs_l1645; assert_in_delta(0.0, (worksheet.lever_graphs_l1645||0), 0.002); end
  def test_lever_graphs_m1645; assert_in_delta(0.0, (worksheet.lever_graphs_m1645||0), 0.002); end
  def test_lever_graphs_n1645; assert_in_delta(0.0, (worksheet.lever_graphs_n1645||0), 0.002); end
  def test_lever_graphs_o1645; assert_in_delta(0.0, (worksheet.lever_graphs_o1645||0), 0.002); end
  def test_lever_graphs_p1645; assert_in_delta(0.0, (worksheet.lever_graphs_p1645||0), 0.002); end
  def test_lever_graphs_q1645; assert_in_delta(0.0, (worksheet.lever_graphs_q1645||0), 0.002); end
  def test_lever_graphs_r1645; assert_in_delta(0.0, (worksheet.lever_graphs_r1645||0), 0.002); end
  def test_lever_graphs_s1645; assert_in_delta(0.0, (worksheet.lever_graphs_s1645||0), 0.002); end
  def test_lever_graphs_b1646; assert_in_epsilon(2.0, worksheet.lever_graphs_b1646, 0.002); end
  def test_lever_graphs_k1646; assert_in_delta(0.0, (worksheet.lever_graphs_k1646||0), 0.002); end
  def test_lever_graphs_l1646; assert_in_delta(0.0, (worksheet.lever_graphs_l1646||0), 0.002); end
  def test_lever_graphs_m1646; assert_in_delta(0.0, (worksheet.lever_graphs_m1646||0), 0.002); end
  def test_lever_graphs_n1646; assert_in_delta(0.0, (worksheet.lever_graphs_n1646||0), 0.002); end
  def test_lever_graphs_o1646; assert_in_delta(0.0, (worksheet.lever_graphs_o1646||0), 0.002); end
  def test_lever_graphs_p1646; assert_in_delta(0.05, worksheet.lever_graphs_p1646, 0.002); end
  def test_lever_graphs_q1646; assert_in_delta(0.1, worksheet.lever_graphs_q1646, 0.002); end
  def test_lever_graphs_r1646; assert_in_delta(0.15, worksheet.lever_graphs_r1646, 0.002); end
  def test_lever_graphs_s1646; assert_in_delta(0.2, worksheet.lever_graphs_s1646, 0.002); end
  def test_lever_graphs_b1647; assert_in_epsilon(3.0, worksheet.lever_graphs_b1647, 0.002); end
  def test_lever_graphs_k1647; assert_in_delta(0.0, (worksheet.lever_graphs_k1647||0), 0.002); end
  def test_lever_graphs_l1647; assert_in_delta(0.0, (worksheet.lever_graphs_l1647||0), 0.002); end
  def test_lever_graphs_m1647; assert_in_delta(0.0, (worksheet.lever_graphs_m1647||0), 0.002); end
  def test_lever_graphs_n1647; assert_in_delta(0.01, worksheet.lever_graphs_n1647, 0.002); end
  def test_lever_graphs_o1647; assert_in_delta(0.08, worksheet.lever_graphs_o1647, 0.002); end
  def test_lever_graphs_p1647; assert_in_delta(0.15000000000000002, worksheet.lever_graphs_p1647, 0.002); end
  def test_lever_graphs_q1647; assert_in_delta(0.22000000000000003, worksheet.lever_graphs_q1647, 0.002); end
  def test_lever_graphs_r1647; assert_in_delta(0.29000000000000004, worksheet.lever_graphs_r1647, 0.002); end
  def test_lever_graphs_s1647; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_s1647, 0.002); end
  def test_lever_graphs_b1648; assert_in_epsilon(4.0, worksheet.lever_graphs_b1648, 0.002); end
  def test_lever_graphs_k1648; assert_in_delta(0.0, (worksheet.lever_graphs_k1648||0), 0.002); end
  def test_lever_graphs_l1648; assert_in_delta(0.0, (worksheet.lever_graphs_l1648||0), 0.002); end
  def test_lever_graphs_m1648; assert_in_delta(0.0, (worksheet.lever_graphs_m1648||0), 0.002); end
  def test_lever_graphs_n1648; assert_in_delta(0.04, worksheet.lever_graphs_n1648, 0.002); end
  def test_lever_graphs_o1648; assert_in_delta(0.192, worksheet.lever_graphs_o1648, 0.002); end
  def test_lever_graphs_p1648; assert_in_delta(0.344, worksheet.lever_graphs_p1648, 0.002); end
  def test_lever_graphs_q1648; assert_in_delta(0.496, worksheet.lever_graphs_q1648, 0.002); end
  def test_lever_graphs_r1648; assert_in_delta(0.648, worksheet.lever_graphs_r1648, 0.002); end
  def test_lever_graphs_s1648; assert_in_delta(0.8, worksheet.lever_graphs_s1648, 0.002); end
  def test_lever_graphs_b1649; assert_equal("Comparator A", worksheet.lever_graphs_b1649); end
  def test_lever_graphs_b1650; assert_equal("Comparator B", worksheet.lever_graphs_b1650); end
  def test_lever_graphs_b1651; assert_equal("Comparator C", worksheet.lever_graphs_b1651); end
  def test_lever_graphs_d1632; assert_equal("Title", worksheet.lever_graphs_d1632); end
  def test_lever_graphs_e1632; assert_equal("Steel.Oxygen", worksheet.lever_graphs_e1632); end
  def test_lever_graphs_f1632; assert_equal("Chemicals & petrochemicals.HVC", worksheet.lever_graphs_f1632); end
  def test_lever_graphs_g1632; assert_equal("Pulp & paper.Pulp", worksheet.lever_graphs_g1632); end
  def test_lever_graphs_h1632; assert_equal("Cement", worksheet.lever_graphs_h1632); end
  def test_lever_graphs_i1632; assert_equal("Timber", worksheet.lever_graphs_i1632); end
  def test_lever_graphs_d1633; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1633, 0.002); end
  def test_lever_graphs_e1633; assert_in_delta(0.0, (worksheet.lever_graphs_e1633||0), 0.002); end
  def test_lever_graphs_f1633; assert_in_delta(0.0, (worksheet.lever_graphs_f1633||0), 0.002); end
  def test_lever_graphs_g1633; assert_in_delta(0.0, (worksheet.lever_graphs_g1633||0), 0.002); end
  def test_lever_graphs_h1633; assert_in_delta(0.0, (worksheet.lever_graphs_h1633||0), 0.002); end
  def test_lever_graphs_i1633; assert_in_delta(0.0, (worksheet.lever_graphs_i1633||0), 0.002); end
  def test_lever_graphs_d1634; assert_equal("2050: Level 1", worksheet.lever_graphs_d1634); end
  def test_lever_graphs_e1634; assert_in_delta(0.0, (worksheet.lever_graphs_e1634||0), 0.002); end
  def test_lever_graphs_f1634; assert_in_delta(0.0, (worksheet.lever_graphs_f1634||0), 0.002); end
  def test_lever_graphs_g1634; assert_in_delta(0.0, (worksheet.lever_graphs_g1634||0), 0.002); end
  def test_lever_graphs_h1634; assert_in_delta(0.0, (worksheet.lever_graphs_h1634||0), 0.002); end
  def test_lever_graphs_i1634; assert_in_delta(0.0, (worksheet.lever_graphs_i1634||0), 0.002); end
  def test_lever_graphs_d1635; assert_equal("2050: Level 2", worksheet.lever_graphs_d1635); end
  def test_lever_graphs_e1635; assert_in_delta(0.2, worksheet.lever_graphs_e1635, 0.002); end
  def test_lever_graphs_f1635; assert_in_delta(0.0, (worksheet.lever_graphs_f1635||0), 0.002); end
  def test_lever_graphs_g1635; assert_in_delta(0.425, worksheet.lever_graphs_g1635, 0.002); end
  def test_lever_graphs_h1635; assert_in_delta(0.425, worksheet.lever_graphs_h1635, 0.002); end
  def test_lever_graphs_i1635; assert_in_delta(0.0, (worksheet.lever_graphs_i1635||0), 0.002); end
  def test_lever_graphs_d1636; assert_equal("2050: Level 3", worksheet.lever_graphs_d1636); end
  def test_lever_graphs_e1636; assert_in_delta(0.36000000000000004, worksheet.lever_graphs_e1636, 0.002); end
  def test_lever_graphs_f1636; assert_in_delta(0.5, worksheet.lever_graphs_f1636, 0.002); end
  def test_lever_graphs_g1636; assert_in_delta(0.6375, worksheet.lever_graphs_g1636, 0.002); end
  def test_lever_graphs_h1636; assert_in_delta(0.6375, worksheet.lever_graphs_h1636, 0.002); end
  def test_lever_graphs_i1636; assert_in_delta(0.0, (worksheet.lever_graphs_i1636||0), 0.002); end
  def test_lever_graphs_d1637; assert_equal("2050: Level 4", worksheet.lever_graphs_d1637); end
  def test_lever_graphs_e1637; assert_in_delta(0.8, worksheet.lever_graphs_e1637, 0.002); end
  def test_lever_graphs_f1637; assert_in_delta(0.62, worksheet.lever_graphs_f1637, 0.002); end
  def test_lever_graphs_g1637; assert_in_delta(0.85, worksheet.lever_graphs_g1637, 0.002); end
  def test_lever_graphs_h1637; assert_in_delta(0.85, worksheet.lever_graphs_h1637, 0.002); end
  def test_lever_graphs_i1637; assert_in_delta(0.3, worksheet.lever_graphs_i1637, 0.002); end
  def test_lever_graphs_c2383; assert_equal("1975", worksheet.lever_graphs_c2383); end
  def test_lever_graphs_d2383; assert_equal("1980", worksheet.lever_graphs_d2383); end
  def test_lever_graphs_e2383; assert_equal("1985", worksheet.lever_graphs_e2383); end
  def test_lever_graphs_f2383; assert_equal("1990", worksheet.lever_graphs_f2383); end
  def test_lever_graphs_g2383; assert_equal("1995", worksheet.lever_graphs_g2383); end
  def test_lever_graphs_h2383; assert_equal("2000", worksheet.lever_graphs_h2383); end
  def test_lever_graphs_i2383; assert_equal("2005", worksheet.lever_graphs_i2383); end
  def test_lever_graphs_j2383; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2383, 0.002); end
  def test_lever_graphs_k2383; assert_equal("2011", worksheet.lever_graphs_k2383); end
  def test_lever_graphs_l2383; assert_equal("2015", worksheet.lever_graphs_l2383); end
  def test_lever_graphs_m2383; assert_equal("2020", worksheet.lever_graphs_m2383); end
  def test_lever_graphs_n2383; assert_equal("2025", worksheet.lever_graphs_n2383); end
  def test_lever_graphs_o2383; assert_equal("2030", worksheet.lever_graphs_o2383); end
  def test_lever_graphs_p2383; assert_equal("2035", worksheet.lever_graphs_p2383); end
  def test_lever_graphs_q2383; assert_equal("2040", worksheet.lever_graphs_q2383); end
  def test_lever_graphs_r2383; assert_equal("2045", worksheet.lever_graphs_r2383); end
  def test_lever_graphs_s2383; assert_equal("2050", worksheet.lever_graphs_s2383); end
  def test_lever_graphs_b2384; assert_equal("Historic data", worksheet.lever_graphs_b2384); end
  def test_lever_graphs_b2385; assert_in_delta(1.0, worksheet.lever_graphs_b2385, 0.002); end
  def test_lever_graphs_k2385; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2385, 0.002); end
  def test_lever_graphs_l2385; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2385, 0.002); end
  def test_lever_graphs_m2385; assert_in_epsilon(4790.7692307692305, worksheet.lever_graphs_m2385, 0.002); end
  def test_lever_graphs_n2385; assert_in_epsilon(4652.307692307692, worksheet.lever_graphs_n2385, 0.002); end
  def test_lever_graphs_o2385; assert_in_epsilon(4513.846153846154, worksheet.lever_graphs_o2385, 0.002); end
  def test_lever_graphs_p2385; assert_in_epsilon(4375.384615384615, worksheet.lever_graphs_p2385, 0.002); end
  def test_lever_graphs_q2385; assert_in_epsilon(4236.923076923077, worksheet.lever_graphs_q2385, 0.002); end
  def test_lever_graphs_r2385; assert_in_epsilon(4098.461538461539, worksheet.lever_graphs_r2385, 0.002); end
  def test_lever_graphs_s2385; assert_in_epsilon(3960.0000000000005, worksheet.lever_graphs_s2385, 0.002); end
  def test_lever_graphs_b2386; assert_in_epsilon(2.0, worksheet.lever_graphs_b2386, 0.002); end
  def test_lever_graphs_k2386; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2386, 0.002); end
  def test_lever_graphs_l2386; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2386, 0.002); end
  def test_lever_graphs_m2386; assert_in_epsilon(4739.340659340659, worksheet.lever_graphs_m2386, 0.002); end
  def test_lever_graphs_n2386; assert_in_epsilon(4549.450549450549, worksheet.lever_graphs_n2386, 0.002); end
  def test_lever_graphs_o2386; assert_in_epsilon(4359.56043956044, worksheet.lever_graphs_o2386, 0.002); end
  def test_lever_graphs_p2386; assert_in_epsilon(4169.67032967033, worksheet.lever_graphs_p2386, 0.002); end
  def test_lever_graphs_q2386; assert_in_epsilon(3979.78021978022, worksheet.lever_graphs_q2386, 0.002); end
  def test_lever_graphs_r2386; assert_in_epsilon(3789.8901098901097, worksheet.lever_graphs_r2386, 0.002); end
  def test_lever_graphs_s2386; assert_in_epsilon(3600.0, worksheet.lever_graphs_s2386, 0.002); end
  def test_lever_graphs_b2387; assert_in_epsilon(3.0, worksheet.lever_graphs_b2387, 0.002); end
  def test_lever_graphs_k2387; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2387, 0.002); end
  def test_lever_graphs_l2387; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2387, 0.002); end
  def test_lever_graphs_m2387; assert_in_epsilon(4687.912087912087, worksheet.lever_graphs_m2387, 0.002); end
  def test_lever_graphs_n2387; assert_in_epsilon(4446.593406593407, worksheet.lever_graphs_n2387, 0.002); end
  def test_lever_graphs_o2387; assert_in_epsilon(4205.274725274725, worksheet.lever_graphs_o2387, 0.002); end
  def test_lever_graphs_p2387; assert_in_epsilon(3963.9560439560437, worksheet.lever_graphs_p2387, 0.002); end
  def test_lever_graphs_q2387; assert_in_epsilon(3722.6373626373625, worksheet.lever_graphs_q2387, 0.002); end
  def test_lever_graphs_r2387; assert_in_epsilon(3481.3186813186812, worksheet.lever_graphs_r2387, 0.002); end
  def test_lever_graphs_s2387; assert_in_epsilon(3240.0, worksheet.lever_graphs_s2387, 0.002); end
  def test_lever_graphs_b2388; assert_in_epsilon(4.0, worksheet.lever_graphs_b2388, 0.002); end
  def test_lever_graphs_k2388; assert_in_epsilon(5040.0, worksheet.lever_graphs_k2388, 0.002); end
  def test_lever_graphs_l2388; assert_in_epsilon(4929.230769230769, worksheet.lever_graphs_l2388, 0.002); end
  def test_lever_graphs_m2388; assert_in_epsilon(4636.483516483517, worksheet.lever_graphs_m2388, 0.002); end
  def test_lever_graphs_n2388; assert_in_epsilon(4343.736263736263, worksheet.lever_graphs_n2388, 0.002); end
  def test_lever_graphs_o2388; assert_in_epsilon(4050.989010989011, worksheet.lever_graphs_o2388, 0.002); end
  def test_lever_graphs_p2388; assert_in_epsilon(3758.241758241758, worksheet.lever_graphs_p2388, 0.002); end
  def test_lever_graphs_q2388; assert_in_epsilon(3465.4945054945056, worksheet.lever_graphs_q2388, 0.002); end
  def test_lever_graphs_r2388; assert_in_epsilon(3172.7472527472523, worksheet.lever_graphs_r2388, 0.002); end
  def test_lever_graphs_s2388; assert_in_epsilon(2880.0, worksheet.lever_graphs_s2388, 0.002); end
  def test_lever_graphs_d2393; assert_equal("Title", worksheet.lever_graphs_d2393); end
  def test_lever_graphs_e2393; assert_equal("Global urban solid stoves used by people with access to electricity", worksheet.lever_graphs_e2393); end
  def test_lever_graphs_f2393; assert_equal("Global urban liquid stoves used by people with access to electricity", worksheet.lever_graphs_f2393); end
  def test_lever_graphs_g2393; assert_equal("Global urban gas stoves used by people with access to electricity", worksheet.lever_graphs_g2393); end
  def test_lever_graphs_h2393; assert_equal("Global urban electricity stoves used by people with access to electricity", worksheet.lever_graphs_h2393); end
  def test_lever_graphs_i2393; assert_equal("Global urban traditional biomass boiler used by people with access to electricity", worksheet.lever_graphs_i2393); end
  def test_lever_graphs_d2394; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2394, 0.002); end
  def test_lever_graphs_e2394; assert_in_delta(0.13, worksheet.lever_graphs_e2394, 0.002); end
  def test_lever_graphs_f2394; assert_in_delta(0.15, worksheet.lever_graphs_f2394, 0.002); end
  def test_lever_graphs_g2394; assert_in_delta(0.4, worksheet.lever_graphs_g2394, 0.002); end
  def test_lever_graphs_h2394; assert_in_delta(0.2, worksheet.lever_graphs_h2394, 0.002); end
  def test_lever_graphs_i2394; assert_in_delta(0.11999999999999994, worksheet.lever_graphs_i2394, 0.002); end
  def test_lever_graphs_d2395; assert_equal("2050: Level 1", worksheet.lever_graphs_d2395); end
  def test_lever_graphs_e2395; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_e2395, 0.002); end
  def test_lever_graphs_f2395; assert_in_delta(0.15, worksheet.lever_graphs_f2395, 0.002); end
  def test_lever_graphs_g2395; assert_in_delta(0.4, worksheet.lever_graphs_g2395, 0.002); end
  def test_lever_graphs_h2395; assert_in_delta(0.25, worksheet.lever_graphs_h2395, 0.002); end
  def test_lever_graphs_i2395; assert_in_delta(0.12, worksheet.lever_graphs_i2395, 0.002); end
  def test_lever_graphs_d2396; assert_equal("2050: Level 2", worksheet.lever_graphs_d2396); end
  def test_lever_graphs_e2396; assert_in_delta(0.010000000000000009, worksheet.lever_graphs_e2396, 0.002); end
  def test_lever_graphs_f2396; assert_in_delta(0.08, worksheet.lever_graphs_f2396, 0.002); end
  def test_lever_graphs_g2396; assert_in_delta(0.35, worksheet.lever_graphs_g2396, 0.002); end
  def test_lever_graphs_h2396; assert_in_delta(0.5, worksheet.lever_graphs_h2396, 0.002); end
  def test_lever_graphs_i2396; assert_in_delta(0.06, worksheet.lever_graphs_i2396, 0.002); end
  def test_lever_graphs_d2397; assert_equal("2050: Level 3", worksheet.lever_graphs_d2397); end
  def test_lever_graphs_e2397; assert_in_delta(0.0, (worksheet.lever_graphs_e2397||0), 0.002); end
  def test_lever_graphs_f2397; assert_in_delta(0.01, worksheet.lever_graphs_f2397, 0.002); end
  def test_lever_graphs_g2397; assert_in_delta(0.25, worksheet.lever_graphs_g2397, 0.002); end
  def test_lever_graphs_h2397; assert_in_delta(0.73, worksheet.lever_graphs_h2397, 0.002); end
  def test_lever_graphs_i2397; assert_in_delta(0.01, worksheet.lever_graphs_i2397, 0.002); end
  def test_lever_graphs_d2398; assert_equal("2050: Level 4", worksheet.lever_graphs_d2398); end
  def test_lever_graphs_e2398; assert_in_delta(0.0, (worksheet.lever_graphs_e2398||0), 0.002); end
  def test_lever_graphs_f2398; assert_in_delta(0.0, (worksheet.lever_graphs_f2398||0), 0.002); end
  def test_lever_graphs_g2398; assert_in_delta(0.15, worksheet.lever_graphs_g2398, 0.002); end
  def test_lever_graphs_h2398; assert_in_delta(0.85, worksheet.lever_graphs_h2398, 0.002); end
  def test_lever_graphs_i2398; assert_in_delta(0.0, (worksheet.lever_graphs_i2398||0), 0.002); end
  def test_lever_graphs_c2817; assert_equal("1975", worksheet.lever_graphs_c2817); end
  def test_lever_graphs_d2817; assert_equal("1980", worksheet.lever_graphs_d2817); end
  def test_lever_graphs_e2817; assert_equal("1985", worksheet.lever_graphs_e2817); end
  def test_lever_graphs_f2817; assert_equal("1990", worksheet.lever_graphs_f2817); end
  def test_lever_graphs_g2817; assert_equal("1995", worksheet.lever_graphs_g2817); end
  def test_lever_graphs_h2817; assert_equal("2000", worksheet.lever_graphs_h2817); end
  def test_lever_graphs_i2817; assert_equal("2005", worksheet.lever_graphs_i2817); end
  def test_lever_graphs_j2817; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2817, 0.002); end
  def test_lever_graphs_k2817; assert_equal("2011", worksheet.lever_graphs_k2817); end
  def test_lever_graphs_l2817; assert_equal("2015", worksheet.lever_graphs_l2817); end
  def test_lever_graphs_m2817; assert_equal("2020", worksheet.lever_graphs_m2817); end
  def test_lever_graphs_n2817; assert_equal("2025", worksheet.lever_graphs_n2817); end
  def test_lever_graphs_o2817; assert_equal("2030", worksheet.lever_graphs_o2817); end
  def test_lever_graphs_p2817; assert_equal("2035", worksheet.lever_graphs_p2817); end
  def test_lever_graphs_q2817; assert_equal("2040", worksheet.lever_graphs_q2817); end
  def test_lever_graphs_r2817; assert_equal("2045", worksheet.lever_graphs_r2817); end
  def test_lever_graphs_s2817; assert_equal("2050", worksheet.lever_graphs_s2817); end
  def test_lever_graphs_b2818; assert_equal("Historic data", worksheet.lever_graphs_b2818); end
  def test_lever_graphs_b2819; assert_in_delta(1.0, worksheet.lever_graphs_b2819, 0.002); end
  def test_lever_graphs_k2819; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2819, 0.002); end
  def test_lever_graphs_l2819; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2819, 0.002); end
  def test_lever_graphs_m2819; assert_in_delta(0.03213187568829684, worksheet.lever_graphs_m2819, 0.002); end
  def test_lever_graphs_n2819; assert_in_delta(0.03151582202368931, worksheet.lever_graphs_n2819, 0.002); end
  def test_lever_graphs_o2819; assert_in_delta(0.030899768359081793, worksheet.lever_graphs_o2819, 0.002); end
  def test_lever_graphs_p2819; assert_in_delta(0.03028371469447427, worksheet.lever_graphs_p2819, 0.002); end
  def test_lever_graphs_q2819; assert_in_delta(0.029667661029866746, worksheet.lever_graphs_q2819, 0.002); end
  def test_lever_graphs_r2819; assert_in_delta(0.029051607365259222, worksheet.lever_graphs_r2819, 0.002); end
  def test_lever_graphs_s2819; assert_in_delta(0.0284355537006517, worksheet.lever_graphs_s2819, 0.002); end
  def test_lever_graphs_b2820; assert_in_epsilon(2.0, worksheet.lever_graphs_b2820, 0.002); end
  def test_lever_graphs_k2820; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2820, 0.002); end
  def test_lever_graphs_l2820; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2820, 0.002); end
  def test_lever_graphs_m2820; assert_in_delta(0.033937307669290595, worksheet.lever_graphs_m2820, 0.002); end
  def test_lever_graphs_n2820; assert_in_delta(0.03512668598567683, worksheet.lever_graphs_n2820, 0.002); end
  def test_lever_graphs_o2820; assert_in_delta(0.036316064302063064, worksheet.lever_graphs_o2820, 0.002); end
  def test_lever_graphs_p2820; assert_in_delta(0.0375054426184493, worksheet.lever_graphs_p2820, 0.002); end
  def test_lever_graphs_q2820; assert_in_delta(0.03869482093483553, worksheet.lever_graphs_q2820, 0.002); end
  def test_lever_graphs_r2820; assert_in_delta(0.039884199251221775, worksheet.lever_graphs_r2820, 0.002); end
  def test_lever_graphs_s2820; assert_in_delta(0.04107357756760801, worksheet.lever_graphs_s2820, 0.002); end
  def test_lever_graphs_b2821; assert_in_epsilon(3.0, worksheet.lever_graphs_b2821, 0.002); end
  def test_lever_graphs_k2821; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2821, 0.002); end
  def test_lever_graphs_l2821; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2821, 0.002); end
  def test_lever_graphs_m2821; assert_in_delta(0.03529138165503592, worksheet.lever_graphs_m2821, 0.002); end
  def test_lever_graphs_n2821; assert_in_delta(0.03783483395716747, worksheet.lever_graphs_n2821, 0.002); end
  def test_lever_graphs_o2821; assert_in_delta(0.04037828625929902, worksheet.lever_graphs_o2821, 0.002); end
  def test_lever_graphs_p2821; assert_in_delta(0.04292173856143058, worksheet.lever_graphs_p2821, 0.002); end
  def test_lever_graphs_q2821; assert_in_delta(0.045465190863562134, worksheet.lever_graphs_q2821, 0.002); end
  def test_lever_graphs_r2821; assert_in_delta(0.04800864316569369, worksheet.lever_graphs_r2821, 0.002); end
  def test_lever_graphs_s2821; assert_in_delta(0.05055209546782524, worksheet.lever_graphs_s2821, 0.002); end
  def test_lever_graphs_b2822; assert_in_epsilon(4.0, worksheet.lever_graphs_b2822, 0.002); end
  def test_lever_graphs_k2822; assert_in_delta(0.031595059667390776, worksheet.lever_graphs_k2822, 0.002); end
  def test_lever_graphs_l2822; assert_in_delta(0.03274792935290436, worksheet.lever_graphs_l2822, 0.002); end
  def test_lever_graphs_m2822; assert_in_delta(0.03709681363602968, worksheet.lever_graphs_m2822, 0.002); end
  def test_lever_graphs_n2822; assert_in_delta(0.041445697919154985, worksheet.lever_graphs_n2822, 0.002); end
  def test_lever_graphs_o2822; assert_in_delta(0.0457945822022803, worksheet.lever_graphs_o2822, 0.002); end
  def test_lever_graphs_p2822; assert_in_delta(0.050143466485405616, worksheet.lever_graphs_p2822, 0.002); end
  def test_lever_graphs_q2822; assert_in_delta(0.05449235076853092, worksheet.lever_graphs_q2822, 0.002); end
  def test_lever_graphs_r2822; assert_in_delta(0.05884123505165624, worksheet.lever_graphs_r2822, 0.002); end
  def test_lever_graphs_s2822; assert_in_delta(0.06319011933478155, worksheet.lever_graphs_s2822, 0.002); end
  def test_lever_graphs_c2897; assert_equal("1975", worksheet.lever_graphs_c2897); end
  def test_lever_graphs_d2897; assert_equal("1980", worksheet.lever_graphs_d2897); end
  def test_lever_graphs_e2897; assert_equal("1985", worksheet.lever_graphs_e2897); end
  def test_lever_graphs_f2897; assert_equal("1990", worksheet.lever_graphs_f2897); end
  def test_lever_graphs_g2897; assert_equal("1995", worksheet.lever_graphs_g2897); end
  def test_lever_graphs_h2897; assert_equal("2000", worksheet.lever_graphs_h2897); end
  def test_lever_graphs_i2897; assert_equal("2005", worksheet.lever_graphs_i2897); end
  def test_lever_graphs_j2897; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2897, 0.002); end
  def test_lever_graphs_k2897; assert_equal("2011", worksheet.lever_graphs_k2897); end
  def test_lever_graphs_l2897; assert_equal("2015", worksheet.lever_graphs_l2897); end
  def test_lever_graphs_m2897; assert_equal("2020", worksheet.lever_graphs_m2897); end
  def test_lever_graphs_n2897; assert_equal("2025", worksheet.lever_graphs_n2897); end
  def test_lever_graphs_o2897; assert_equal("2030", worksheet.lever_graphs_o2897); end
  def test_lever_graphs_p2897; assert_equal("2035", worksheet.lever_graphs_p2897); end
  def test_lever_graphs_q2897; assert_equal("2040", worksheet.lever_graphs_q2897); end
  def test_lever_graphs_r2897; assert_equal("2045", worksheet.lever_graphs_r2897); end
  def test_lever_graphs_s2897; assert_equal("2050", worksheet.lever_graphs_s2897); end
  def test_lever_graphs_b2898; assert_equal("Historic data", worksheet.lever_graphs_b2898); end
  def test_lever_graphs_b2899; assert_in_delta(1.0, worksheet.lever_graphs_b2899, 0.002); end
  def test_lever_graphs_k2899; assert_in_delta(0.05, worksheet.lever_graphs_k2899, 0.002); end
  def test_lever_graphs_l2899; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2899, 0.002); end
  def test_lever_graphs_m2899; assert_in_delta(0.0507967032967033, worksheet.lever_graphs_m2899, 0.002); end
  def test_lever_graphs_n2899; assert_in_delta(0.05108058608058609, worksheet.lever_graphs_n2899, 0.002); end
  def test_lever_graphs_o2899; assert_in_delta(0.05136446886446887, worksheet.lever_graphs_o2899, 0.002); end
  def test_lever_graphs_p2899; assert_in_delta(0.05164835164835165, worksheet.lever_graphs_p2899, 0.002); end
  def test_lever_graphs_q2899; assert_in_delta(0.051932234432234436, worksheet.lever_graphs_q2899, 0.002); end
  def test_lever_graphs_r2899; assert_in_delta(0.052216117216117214, worksheet.lever_graphs_r2899, 0.002); end
  def test_lever_graphs_s2899; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s2899, 0.002); end
  def test_lever_graphs_b2900; assert_in_epsilon(2.0, worksheet.lever_graphs_b2900, 0.002); end
  def test_lever_graphs_k2900; assert_in_delta(0.05, worksheet.lever_graphs_k2900, 0.002); end
  def test_lever_graphs_l2900; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2900, 0.002); end
  def test_lever_graphs_m2900; assert_in_delta(0.05115384615384616, worksheet.lever_graphs_m2900, 0.002); end
  def test_lever_graphs_n2900; assert_in_delta(0.05179487179487181, worksheet.lever_graphs_n2900, 0.002); end
  def test_lever_graphs_o2900; assert_in_delta(0.05243589743589744, worksheet.lever_graphs_o2900, 0.002); end
  def test_lever_graphs_p2900; assert_in_delta(0.05307692307692308, worksheet.lever_graphs_p2900, 0.002); end
  def test_lever_graphs_q2900; assert_in_delta(0.05371794871794873, worksheet.lever_graphs_q2900, 0.002); end
  def test_lever_graphs_r2900; assert_in_delta(0.05435897435897436, worksheet.lever_graphs_r2900, 0.002); end
  def test_lever_graphs_s2900; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s2900, 0.002); end
  def test_lever_graphs_b2901; assert_in_epsilon(3.0, worksheet.lever_graphs_b2901, 0.002); end
  def test_lever_graphs_k2901; assert_in_delta(0.05, worksheet.lever_graphs_k2901, 0.002); end
  def test_lever_graphs_l2901; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2901, 0.002); end
  def test_lever_graphs_m2901; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_m2901, 0.002); end
  def test_lever_graphs_n2901; assert_in_delta(0.05322344322344323, worksheet.lever_graphs_n2901, 0.002); end
  def test_lever_graphs_o2901; assert_in_delta(0.05457875457875458, worksheet.lever_graphs_o2901, 0.002); end
  def test_lever_graphs_p2901; assert_in_delta(0.05593406593406593, worksheet.lever_graphs_p2901, 0.002); end
  def test_lever_graphs_q2901; assert_in_delta(0.05728937728937729, worksheet.lever_graphs_q2901, 0.002); end
  def test_lever_graphs_r2901; assert_in_delta(0.058644688644688636, worksheet.lever_graphs_r2901, 0.002); end
  def test_lever_graphs_s2901; assert_in_delta(0.06, worksheet.lever_graphs_s2901, 0.002); end
  def test_lever_graphs_b2902; assert_in_epsilon(4.0, worksheet.lever_graphs_b2902, 0.002); end
  def test_lever_graphs_k2902; assert_in_delta(0.05, worksheet.lever_graphs_k2902, 0.002); end
  def test_lever_graphs_l2902; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2902, 0.002); end
  def test_lever_graphs_m2902; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_m2902, 0.002); end
  def test_lever_graphs_n2902; assert_in_delta(0.05608058608058609, worksheet.lever_graphs_n2902, 0.002); end
  def test_lever_graphs_o2902; assert_in_delta(0.05886446886446886, worksheet.lever_graphs_o2902, 0.002); end
  def test_lever_graphs_p2902; assert_in_delta(0.06164835164835164, worksheet.lever_graphs_p2902, 0.002); end
  def test_lever_graphs_q2902; assert_in_delta(0.06443223443223443, worksheet.lever_graphs_q2902, 0.002); end
  def test_lever_graphs_r2902; assert_in_delta(0.06721611721611721, worksheet.lever_graphs_r2902, 0.002); end
  def test_lever_graphs_s2902; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s2902, 0.002); end
  def test_lever_graphs_c2907; assert_equal("1975", worksheet.lever_graphs_c2907); end
  def test_lever_graphs_d2907; assert_equal("1980", worksheet.lever_graphs_d2907); end
  def test_lever_graphs_e2907; assert_equal("1985", worksheet.lever_graphs_e2907); end
  def test_lever_graphs_f2907; assert_equal("1990", worksheet.lever_graphs_f2907); end
  def test_lever_graphs_g2907; assert_equal("1995", worksheet.lever_graphs_g2907); end
  def test_lever_graphs_h2907; assert_equal("2000", worksheet.lever_graphs_h2907); end
  def test_lever_graphs_i2907; assert_equal("2005", worksheet.lever_graphs_i2907); end
  def test_lever_graphs_j2907; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2907, 0.002); end
  def test_lever_graphs_k2907; assert_equal("2011", worksheet.lever_graphs_k2907); end
  def test_lever_graphs_l2907; assert_equal("2015", worksheet.lever_graphs_l2907); end
  def test_lever_graphs_m2907; assert_equal("2020", worksheet.lever_graphs_m2907); end
  def test_lever_graphs_n2907; assert_equal("2025", worksheet.lever_graphs_n2907); end
  def test_lever_graphs_o2907; assert_equal("2030", worksheet.lever_graphs_o2907); end
  def test_lever_graphs_p2907; assert_equal("2035", worksheet.lever_graphs_p2907); end
  def test_lever_graphs_q2907; assert_equal("2040", worksheet.lever_graphs_q2907); end
  def test_lever_graphs_r2907; assert_equal("2045", worksheet.lever_graphs_r2907); end
  def test_lever_graphs_s2907; assert_equal("2050", worksheet.lever_graphs_s2907); end
  def test_lever_graphs_b2908; assert_equal("Historic data", worksheet.lever_graphs_b2908); end
  def test_lever_graphs_b2909; assert_in_delta(1.0, worksheet.lever_graphs_b2909, 0.002); end
  def test_lever_graphs_k2909; assert_in_delta(0.078, worksheet.lever_graphs_k2909, 0.002); end
  def test_lever_graphs_l2909; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l2909, 0.002); end
  def test_lever_graphs_m2909; assert_in_delta(0.07973626373626375, worksheet.lever_graphs_m2909, 0.002); end
  def test_lever_graphs_n2909; assert_in_delta(0.08044688644688647, worksheet.lever_graphs_n2909, 0.002); end
  def test_lever_graphs_o2909; assert_in_delta(0.08115750915750916, worksheet.lever_graphs_o2909, 0.002); end
  def test_lever_graphs_p2909; assert_in_delta(0.08186813186813188, worksheet.lever_graphs_p2909, 0.002); end
  def test_lever_graphs_q2909; assert_in_delta(0.08257875457875459, worksheet.lever_graphs_q2909, 0.002); end
  def test_lever_graphs_r2909; assert_in_delta(0.08328937728937728, worksheet.lever_graphs_r2909, 0.002); end
  def test_lever_graphs_s2909; assert_in_delta(0.084, worksheet.lever_graphs_s2909, 0.002); end
  def test_lever_graphs_b2910; assert_in_epsilon(2.0, worksheet.lever_graphs_b2910, 0.002); end
  def test_lever_graphs_k2910; assert_in_delta(0.078, worksheet.lever_graphs_k2910, 0.002); end
  def test_lever_graphs_l2910; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l2910, 0.002); end
  def test_lever_graphs_m2910; assert_in_delta(0.08030769230769232, worksheet.lever_graphs_m2910, 0.002); end
  def test_lever_graphs_n2910; assert_in_delta(0.08158974358974361, worksheet.lever_graphs_n2910, 0.002); end
  def test_lever_graphs_o2910; assert_in_delta(0.08287179487179488, worksheet.lever_graphs_o2910, 0.002); end
  def test_lever_graphs_p2910; assert_in_delta(0.08415384615384616, worksheet.lever_graphs_p2910, 0.002); end
  def test_lever_graphs_q2910; assert_in_delta(0.08543589743589744, worksheet.lever_graphs_q2910, 0.002); end
  def test_lever_graphs_r2910; assert_in_delta(0.08671794871794872, worksheet.lever_graphs_r2910, 0.002); end
  def test_lever_graphs_s2910; assert_in_delta(0.08800000000000001, worksheet.lever_graphs_s2910, 0.002); end
  def test_lever_graphs_b2911; assert_in_epsilon(3.0, worksheet.lever_graphs_b2911, 0.002); end
  def test_lever_graphs_k2911; assert_in_delta(0.078, worksheet.lever_graphs_k2911, 0.002); end
  def test_lever_graphs_l2911; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l2911, 0.002); end
  def test_lever_graphs_m2911; assert_in_delta(0.08087912087912089, worksheet.lever_graphs_m2911, 0.002); end
  def test_lever_graphs_n2911; assert_in_delta(0.08273260073260075, worksheet.lever_graphs_n2911, 0.002); end
  def test_lever_graphs_o2911; assert_in_delta(0.08458608058608058, worksheet.lever_graphs_o2911, 0.002); end
  def test_lever_graphs_p2911; assert_in_delta(0.08643956043956044, worksheet.lever_graphs_p2911, 0.002); end
  def test_lever_graphs_q2911; assert_in_delta(0.08829304029304029, worksheet.lever_graphs_q2911, 0.002); end
  def test_lever_graphs_r2911; assert_in_delta(0.09014652014652014, worksheet.lever_graphs_r2911, 0.002); end
  def test_lever_graphs_s2911; assert_in_delta(0.092, worksheet.lever_graphs_s2911, 0.002); end
  def test_lever_graphs_b2912; assert_in_epsilon(4.0, worksheet.lever_graphs_b2912, 0.002); end
  def test_lever_graphs_k2912; assert_in_delta(0.078, worksheet.lever_graphs_k2912, 0.002); end
  def test_lever_graphs_l2912; assert_in_delta(0.07902564102564104, worksheet.lever_graphs_l2912, 0.002); end
  def test_lever_graphs_m2912; assert_in_delta(0.08145054945054947, worksheet.lever_graphs_m2912, 0.002); end
  def test_lever_graphs_n2912; assert_in_delta(0.08387545787545789, worksheet.lever_graphs_n2912, 0.002); end
  def test_lever_graphs_o2912; assert_in_delta(0.0863003663003663, worksheet.lever_graphs_o2912, 0.002); end
  def test_lever_graphs_p2912; assert_in_delta(0.08872527472527472, worksheet.lever_graphs_p2912, 0.002); end
  def test_lever_graphs_q2912; assert_in_delta(0.09115018315018315, worksheet.lever_graphs_q2912, 0.002); end
  def test_lever_graphs_r2912; assert_in_delta(0.09357509157509157, worksheet.lever_graphs_r2912, 0.002); end
  def test_lever_graphs_s2912; assert_in_delta(0.096, worksheet.lever_graphs_s2912, 0.002); end
  def test_lever_graphs_c2917; assert_equal("1975", worksheet.lever_graphs_c2917); end
  def test_lever_graphs_d2917; assert_equal("1980", worksheet.lever_graphs_d2917); end
  def test_lever_graphs_e2917; assert_equal("1985", worksheet.lever_graphs_e2917); end
  def test_lever_graphs_f2917; assert_equal("1990", worksheet.lever_graphs_f2917); end
  def test_lever_graphs_g2917; assert_equal("1995", worksheet.lever_graphs_g2917); end
  def test_lever_graphs_h2917; assert_equal("2000", worksheet.lever_graphs_h2917); end
  def test_lever_graphs_i2917; assert_equal("2005", worksheet.lever_graphs_i2917); end
  def test_lever_graphs_j2917; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2917, 0.002); end
  def test_lever_graphs_k2917; assert_equal("2011", worksheet.lever_graphs_k2917); end
  def test_lever_graphs_l2917; assert_equal("2015", worksheet.lever_graphs_l2917); end
  def test_lever_graphs_m2917; assert_equal("2020", worksheet.lever_graphs_m2917); end
  def test_lever_graphs_n2917; assert_equal("2025", worksheet.lever_graphs_n2917); end
  def test_lever_graphs_o2917; assert_equal("2030", worksheet.lever_graphs_o2917); end
  def test_lever_graphs_p2917; assert_equal("2035", worksheet.lever_graphs_p2917); end
  def test_lever_graphs_q2917; assert_equal("2040", worksheet.lever_graphs_q2917); end
  def test_lever_graphs_r2917; assert_equal("2045", worksheet.lever_graphs_r2917); end
  def test_lever_graphs_s2917; assert_equal("2050", worksheet.lever_graphs_s2917); end
  def test_lever_graphs_b2918; assert_equal("Historic data", worksheet.lever_graphs_b2918); end
  def test_lever_graphs_b2919; assert_in_delta(1.0, worksheet.lever_graphs_b2919, 0.002); end
  def test_lever_graphs_k2919; assert_in_delta(0.05, worksheet.lever_graphs_k2919, 0.002); end
  def test_lever_graphs_l2919; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2919, 0.002); end
  def test_lever_graphs_m2919; assert_in_delta(0.0507967032967033, worksheet.lever_graphs_m2919, 0.002); end
  def test_lever_graphs_n2919; assert_in_delta(0.05108058608058609, worksheet.lever_graphs_n2919, 0.002); end
  def test_lever_graphs_o2919; assert_in_delta(0.05136446886446887, worksheet.lever_graphs_o2919, 0.002); end
  def test_lever_graphs_p2919; assert_in_delta(0.05164835164835165, worksheet.lever_graphs_p2919, 0.002); end
  def test_lever_graphs_q2919; assert_in_delta(0.051932234432234436, worksheet.lever_graphs_q2919, 0.002); end
  def test_lever_graphs_r2919; assert_in_delta(0.052216117216117214, worksheet.lever_graphs_r2919, 0.002); end
  def test_lever_graphs_s2919; assert_in_delta(0.052500000000000005, worksheet.lever_graphs_s2919, 0.002); end
  def test_lever_graphs_b2920; assert_in_epsilon(2.0, worksheet.lever_graphs_b2920, 0.002); end
  def test_lever_graphs_k2920; assert_in_delta(0.05, worksheet.lever_graphs_k2920, 0.002); end
  def test_lever_graphs_l2920; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2920, 0.002); end
  def test_lever_graphs_m2920; assert_in_delta(0.05115384615384616, worksheet.lever_graphs_m2920, 0.002); end
  def test_lever_graphs_n2920; assert_in_delta(0.05179487179487181, worksheet.lever_graphs_n2920, 0.002); end
  def test_lever_graphs_o2920; assert_in_delta(0.05243589743589744, worksheet.lever_graphs_o2920, 0.002); end
  def test_lever_graphs_p2920; assert_in_delta(0.05307692307692308, worksheet.lever_graphs_p2920, 0.002); end
  def test_lever_graphs_q2920; assert_in_delta(0.05371794871794873, worksheet.lever_graphs_q2920, 0.002); end
  def test_lever_graphs_r2920; assert_in_delta(0.05435897435897436, worksheet.lever_graphs_r2920, 0.002); end
  def test_lever_graphs_s2920; assert_in_delta(0.05500000000000001, worksheet.lever_graphs_s2920, 0.002); end
  def test_lever_graphs_b2921; assert_in_epsilon(3.0, worksheet.lever_graphs_b2921, 0.002); end
  def test_lever_graphs_k2921; assert_in_delta(0.05, worksheet.lever_graphs_k2921, 0.002); end
  def test_lever_graphs_l2921; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2921, 0.002); end
  def test_lever_graphs_m2921; assert_in_delta(0.05186813186813187, worksheet.lever_graphs_m2921, 0.002); end
  def test_lever_graphs_n2921; assert_in_delta(0.05322344322344323, worksheet.lever_graphs_n2921, 0.002); end
  def test_lever_graphs_o2921; assert_in_delta(0.05457875457875458, worksheet.lever_graphs_o2921, 0.002); end
  def test_lever_graphs_p2921; assert_in_delta(0.05593406593406593, worksheet.lever_graphs_p2921, 0.002); end
  def test_lever_graphs_q2921; assert_in_delta(0.05728937728937729, worksheet.lever_graphs_q2921, 0.002); end
  def test_lever_graphs_r2921; assert_in_delta(0.058644688644688636, worksheet.lever_graphs_r2921, 0.002); end
  def test_lever_graphs_s2921; assert_in_delta(0.06, worksheet.lever_graphs_s2921, 0.002); end
  def test_lever_graphs_b2922; assert_in_epsilon(4.0, worksheet.lever_graphs_b2922, 0.002); end
  def test_lever_graphs_k2922; assert_in_delta(0.05, worksheet.lever_graphs_k2922, 0.002); end
  def test_lever_graphs_l2922; assert_in_delta(0.05051282051282052, worksheet.lever_graphs_l2922, 0.002); end
  def test_lever_graphs_m2922; assert_in_delta(0.0532967032967033, worksheet.lever_graphs_m2922, 0.002); end
  def test_lever_graphs_n2922; assert_in_delta(0.05608058608058609, worksheet.lever_graphs_n2922, 0.002); end
  def test_lever_graphs_o2922; assert_in_delta(0.05886446886446886, worksheet.lever_graphs_o2922, 0.002); end
  def test_lever_graphs_p2922; assert_in_delta(0.06164835164835164, worksheet.lever_graphs_p2922, 0.002); end
  def test_lever_graphs_q2922; assert_in_delta(0.06443223443223443, worksheet.lever_graphs_q2922, 0.002); end
  def test_lever_graphs_r2922; assert_in_delta(0.06721611721611721, worksheet.lever_graphs_r2922, 0.002); end
  def test_lever_graphs_s2922; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_s2922, 0.002); end
  def test_lever_graphs_c3009; assert_equal("1975", worksheet.lever_graphs_c3009); end
  def test_lever_graphs_d3009; assert_equal("1980", worksheet.lever_graphs_d3009); end
  def test_lever_graphs_e3009; assert_equal("1985", worksheet.lever_graphs_e3009); end
  def test_lever_graphs_f3009; assert_equal("1990", worksheet.lever_graphs_f3009); end
  def test_lever_graphs_g3009; assert_equal("1995", worksheet.lever_graphs_g3009); end
  def test_lever_graphs_h3009; assert_equal("2000", worksheet.lever_graphs_h3009); end
  def test_lever_graphs_i3009; assert_equal("2005", worksheet.lever_graphs_i3009); end
  def test_lever_graphs_j3009; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3009, 0.002); end
  def test_lever_graphs_k3009; assert_equal("2011", worksheet.lever_graphs_k3009); end
  def test_lever_graphs_l3009; assert_equal("2015", worksheet.lever_graphs_l3009); end
  def test_lever_graphs_m3009; assert_equal("2020", worksheet.lever_graphs_m3009); end
  def test_lever_graphs_n3009; assert_equal("2025", worksheet.lever_graphs_n3009); end
  def test_lever_graphs_o3009; assert_equal("2030", worksheet.lever_graphs_o3009); end
  def test_lever_graphs_p3009; assert_equal("2035", worksheet.lever_graphs_p3009); end
  def test_lever_graphs_q3009; assert_equal("2040", worksheet.lever_graphs_q3009); end
  def test_lever_graphs_r3009; assert_equal("2045", worksheet.lever_graphs_r3009); end
  def test_lever_graphs_s3009; assert_equal("2050", worksheet.lever_graphs_s3009); end
  def test_lever_graphs_b3010; assert_equal("Historic data", worksheet.lever_graphs_b3010); end
  def test_lever_graphs_b3011; assert_in_delta(1.0, worksheet.lever_graphs_b3011, 0.002); end
  def test_lever_graphs_k3011; assert_in_delta(1.0, worksheet.lever_graphs_k3011, 0.002); end
  def test_lever_graphs_l3011; assert_in_delta(1.0, worksheet.lever_graphs_l3011, 0.002); end
  def test_lever_graphs_m3011; assert_in_delta(1.0, worksheet.lever_graphs_m3011, 0.002); end
  def test_lever_graphs_n3011; assert_in_delta(1.0, worksheet.lever_graphs_n3011, 0.002); end
  def test_lever_graphs_o3011; assert_in_delta(1.0, worksheet.lever_graphs_o3011, 0.002); end
  def test_lever_graphs_p3011; assert_in_delta(1.0, worksheet.lever_graphs_p3011, 0.002); end
  def test_lever_graphs_q3011; assert_in_delta(1.0, worksheet.lever_graphs_q3011, 0.002); end
  def test_lever_graphs_r3011; assert_in_delta(1.0, worksheet.lever_graphs_r3011, 0.002); end
  def test_lever_graphs_s3011; assert_in_delta(1.0, worksheet.lever_graphs_s3011, 0.002); end
  def test_lever_graphs_b3012; assert_in_epsilon(2.0, worksheet.lever_graphs_b3012, 0.002); end
  def test_lever_graphs_k3012; assert_in_delta(1.0, worksheet.lever_graphs_k3012, 0.002); end
  def test_lever_graphs_l3012; assert_in_delta(1.0, worksheet.lever_graphs_l3012, 0.002); end
  def test_lever_graphs_m3012; assert_in_delta(1.0, worksheet.lever_graphs_m3012, 0.002); end
  def test_lever_graphs_n3012; assert_in_delta(1.0, worksheet.lever_graphs_n3012, 0.002); end
  def test_lever_graphs_o3012; assert_in_delta(1.0, worksheet.lever_graphs_o3012, 0.002); end
  def test_lever_graphs_p3012; assert_in_delta(1.0, worksheet.lever_graphs_p3012, 0.002); end
  def test_lever_graphs_q3012; assert_in_delta(1.0, worksheet.lever_graphs_q3012, 0.002); end
  def test_lever_graphs_r3012; assert_in_delta(1.0, worksheet.lever_graphs_r3012, 0.002); end
  def test_lever_graphs_s3012; assert_in_delta(1.0, worksheet.lever_graphs_s3012, 0.002); end
  def test_lever_graphs_b3013; assert_in_epsilon(3.0, worksheet.lever_graphs_b3013, 0.002); end
  def test_lever_graphs_k3013; assert_in_delta(1.0, worksheet.lever_graphs_k3013, 0.002); end
  def test_lever_graphs_l3013; assert_in_delta(1.0, worksheet.lever_graphs_l3013, 0.002); end
  def test_lever_graphs_m3013; assert_in_delta(1.0, worksheet.lever_graphs_m3013, 0.002); end
  def test_lever_graphs_n3013; assert_in_delta(1.0, worksheet.lever_graphs_n3013, 0.002); end
  def test_lever_graphs_o3013; assert_in_delta(1.0, worksheet.lever_graphs_o3013, 0.002); end
  def test_lever_graphs_p3013; assert_in_delta(1.0, worksheet.lever_graphs_p3013, 0.002); end
  def test_lever_graphs_q3013; assert_in_delta(1.0, worksheet.lever_graphs_q3013, 0.002); end
  def test_lever_graphs_r3013; assert_in_delta(1.0, worksheet.lever_graphs_r3013, 0.002); end
  def test_lever_graphs_s3013; assert_in_delta(1.0, worksheet.lever_graphs_s3013, 0.002); end
  def test_lever_graphs_b3014; assert_in_epsilon(4.0, worksheet.lever_graphs_b3014, 0.002); end
  def test_lever_graphs_k3014; assert_in_delta(1.0, worksheet.lever_graphs_k3014, 0.002); end
  def test_lever_graphs_l3014; assert_in_delta(1.0, worksheet.lever_graphs_l3014, 0.002); end
  def test_lever_graphs_m3014; assert_in_delta(1.0, worksheet.lever_graphs_m3014, 0.002); end
  def test_lever_graphs_n3014; assert_in_delta(1.0, worksheet.lever_graphs_n3014, 0.002); end
  def test_lever_graphs_o3014; assert_in_delta(1.0, worksheet.lever_graphs_o3014, 0.002); end
  def test_lever_graphs_p3014; assert_in_delta(1.0, worksheet.lever_graphs_p3014, 0.002); end
  def test_lever_graphs_q3014; assert_in_delta(1.0, worksheet.lever_graphs_q3014, 0.002); end
  def test_lever_graphs_r3014; assert_in_delta(1.0, worksheet.lever_graphs_r3014, 0.002); end
  def test_lever_graphs_s3014; assert_in_delta(1.0, worksheet.lever_graphs_s3014, 0.002); end
  def test_lever_graphs_d3020; assert_equal("Title", worksheet.lever_graphs_d3020); end
  def test_lever_graphs_e3020; assert_equal("Food crops", worksheet.lever_graphs_e3020); end
  def test_lever_graphs_f3020; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3020); end
  def test_lever_graphs_g3020; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3020); end
  def test_lever_graphs_h3020; assert_equal("Pigs", worksheet.lever_graphs_h3020); end
  def test_lever_graphs_i3020; assert_equal("Sheep and goats", worksheet.lever_graphs_i3020); end
  def test_lever_graphs_j3020; assert_equal("Other animals", worksheet.lever_graphs_j3020); end
  def test_lever_graphs_k3020; assert_equal("Eggs", worksheet.lever_graphs_k3020); end
  def test_lever_graphs_l3020; assert_equal("Milk products", worksheet.lever_graphs_l3020); end
  def test_lever_graphs_d3021; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3021, 0.002); end
  def test_lever_graphs_e3021; assert_in_delta(0.24, worksheet.lever_graphs_e3021, 0.002); end
  def test_lever_graphs_f3021; assert_in_delta(0.19, worksheet.lever_graphs_f3021, 0.002); end
  def test_lever_graphs_g3021; assert_in_delta(0.19, worksheet.lever_graphs_g3021, 0.002); end
  def test_lever_graphs_h3021; assert_in_delta(0.19, worksheet.lever_graphs_h3021, 0.002); end
  def test_lever_graphs_i3021; assert_in_delta(0.19, worksheet.lever_graphs_i3021, 0.002); end
  def test_lever_graphs_j3021; assert_in_delta(0.19, worksheet.lever_graphs_j3021, 0.002); end
  def test_lever_graphs_k3021; assert_in_delta(0.1, worksheet.lever_graphs_k3021, 0.002); end
  def test_lever_graphs_l3021; assert_in_delta(0.18, worksheet.lever_graphs_l3021, 0.002); end
  def test_lever_graphs_d3022; assert_equal("2050: Level 1", worksheet.lever_graphs_d3022); end
  def test_lever_graphs_e3022; assert_in_delta(0.24, worksheet.lever_graphs_e3022, 0.002); end
  def test_lever_graphs_f3022; assert_in_delta(0.19, worksheet.lever_graphs_f3022, 0.002); end
  def test_lever_graphs_g3022; assert_in_delta(0.19, worksheet.lever_graphs_g3022, 0.002); end
  def test_lever_graphs_h3022; assert_in_delta(0.19, worksheet.lever_graphs_h3022, 0.002); end
  def test_lever_graphs_i3022; assert_in_delta(0.19, worksheet.lever_graphs_i3022, 0.002); end
  def test_lever_graphs_j3022; assert_in_delta(0.19, worksheet.lever_graphs_j3022, 0.002); end
  def test_lever_graphs_k3022; assert_in_delta(0.1, worksheet.lever_graphs_k3022, 0.002); end
  def test_lever_graphs_l3022; assert_in_delta(0.18, worksheet.lever_graphs_l3022, 0.002); end
  def test_lever_graphs_d3023; assert_equal("2050: Level 2", worksheet.lever_graphs_d3023); end
  def test_lever_graphs_e3023; assert_in_delta(0.2, worksheet.lever_graphs_e3023, 0.002); end
  def test_lever_graphs_f3023; assert_in_delta(0.15, worksheet.lever_graphs_f3023, 0.002); end
  def test_lever_graphs_g3023; assert_in_delta(0.15, worksheet.lever_graphs_g3023, 0.002); end
  def test_lever_graphs_h3023; assert_in_delta(0.15, worksheet.lever_graphs_h3023, 0.002); end
  def test_lever_graphs_i3023; assert_in_delta(0.15, worksheet.lever_graphs_i3023, 0.002); end
  def test_lever_graphs_j3023; assert_in_delta(0.15, worksheet.lever_graphs_j3023, 0.002); end
  def test_lever_graphs_k3023; assert_in_delta(0.08, worksheet.lever_graphs_k3023, 0.002); end
  def test_lever_graphs_l3023; assert_in_delta(0.15, worksheet.lever_graphs_l3023, 0.002); end
  def test_lever_graphs_d3024; assert_equal("2050: Level 3", worksheet.lever_graphs_d3024); end
  def test_lever_graphs_e3024; assert_in_delta(0.16, worksheet.lever_graphs_e3024, 0.002); end
  def test_lever_graphs_f3024; assert_in_delta(0.1, worksheet.lever_graphs_f3024, 0.002); end
  def test_lever_graphs_g3024; assert_in_delta(0.1, worksheet.lever_graphs_g3024, 0.002); end
  def test_lever_graphs_h3024; assert_in_delta(0.1, worksheet.lever_graphs_h3024, 0.002); end
  def test_lever_graphs_i3024; assert_in_delta(0.1, worksheet.lever_graphs_i3024, 0.002); end
  def test_lever_graphs_j3024; assert_in_delta(0.1, worksheet.lever_graphs_j3024, 0.002); end
  def test_lever_graphs_k3024; assert_in_delta(0.06, worksheet.lever_graphs_k3024, 0.002); end
  def test_lever_graphs_l3024; assert_in_delta(0.1, worksheet.lever_graphs_l3024, 0.002); end
  def test_lever_graphs_d3025; assert_equal("2050: Level 4", worksheet.lever_graphs_d3025); end
  def test_lever_graphs_e3025; assert_in_delta(0.1, worksheet.lever_graphs_e3025, 0.002); end
  def test_lever_graphs_f3025; assert_in_delta(0.05, worksheet.lever_graphs_f3025, 0.002); end
  def test_lever_graphs_g3025; assert_in_delta(0.05, worksheet.lever_graphs_g3025, 0.002); end
  def test_lever_graphs_h3025; assert_in_delta(0.05, worksheet.lever_graphs_h3025, 0.002); end
  def test_lever_graphs_i3025; assert_in_delta(0.05, worksheet.lever_graphs_i3025, 0.002); end
  def test_lever_graphs_j3025; assert_in_delta(0.05, worksheet.lever_graphs_j3025, 0.002); end
  def test_lever_graphs_k3025; assert_in_delta(0.05, worksheet.lever_graphs_k3025, 0.002); end
  def test_lever_graphs_l3025; assert_in_delta(0.05, worksheet.lever_graphs_l3025, 0.002); end
  def test_lever_graphs_c1408; assert_equal("1975", worksheet.lever_graphs_c1408); end
  def test_lever_graphs_d1408; assert_equal("1980", worksheet.lever_graphs_d1408); end
  def test_lever_graphs_e1408; assert_equal("1985", worksheet.lever_graphs_e1408); end
  def test_lever_graphs_f1408; assert_equal("1990", worksheet.lever_graphs_f1408); end
  def test_lever_graphs_g1408; assert_equal("1995", worksheet.lever_graphs_g1408); end
  def test_lever_graphs_h1408; assert_equal("2000", worksheet.lever_graphs_h1408); end
  def test_lever_graphs_i1408; assert_equal("2005", worksheet.lever_graphs_i1408); end
  def test_lever_graphs_j1408; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1408, 0.002); end
  def test_lever_graphs_k1408; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1408, 0.002); end
  def test_lever_graphs_l1408; assert_equal("2015", worksheet.lever_graphs_l1408); end
  def test_lever_graphs_m1408; assert_equal("2020", worksheet.lever_graphs_m1408); end
  def test_lever_graphs_n1408; assert_equal("2025", worksheet.lever_graphs_n1408); end
  def test_lever_graphs_o1408; assert_equal("2030", worksheet.lever_graphs_o1408); end
  def test_lever_graphs_p1408; assert_equal("2035", worksheet.lever_graphs_p1408); end
  def test_lever_graphs_q1408; assert_equal("2040", worksheet.lever_graphs_q1408); end
  def test_lever_graphs_r1408; assert_equal("2045", worksheet.lever_graphs_r1408); end
  def test_lever_graphs_s1408; assert_equal("2050", worksheet.lever_graphs_s1408); end
  def test_lever_graphs_b1409; assert_equal("Historic data", worksheet.lever_graphs_b1409); end
  def test_lever_graphs_b1410; assert_in_delta(1.0, worksheet.lever_graphs_b1410, 0.002); end
  def test_lever_graphs_k1410; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1410, 0.002); end
  def test_lever_graphs_l1410; assert_in_epsilon(22439.08754430111, worksheet.lever_graphs_l1410, 0.002); end
  def test_lever_graphs_m1410; assert_in_epsilon(26650.59698757778, worksheet.lever_graphs_m1410, 0.002); end
  def test_lever_graphs_n1410; assert_in_epsilon(30895.346152316597, worksheet.lever_graphs_n1410, 0.002); end
  def test_lever_graphs_o1410; assert_in_epsilon(34955.24837682976, worksheet.lever_graphs_o1410, 0.002); end
  def test_lever_graphs_p1410; assert_in_epsilon(37656.72992816394, worksheet.lever_graphs_p1410, 0.002); end
  def test_lever_graphs_q1410; assert_in_epsilon(39577.601608401754, worksheet.lever_graphs_q1410, 0.002); end
  def test_lever_graphs_r1410; assert_in_epsilon(40576.98564481956, worksheet.lever_graphs_r1410, 0.002); end
  def test_lever_graphs_s1410; assert_in_epsilon(40780.27674887286, worksheet.lever_graphs_s1410, 0.002); end
  def test_lever_graphs_b1411; assert_in_epsilon(2.0, worksheet.lever_graphs_b1411, 0.002); end
  def test_lever_graphs_k1411; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1411, 0.002); end
  def test_lever_graphs_l1411; assert_in_epsilon(22439.08754430111, worksheet.lever_graphs_l1411, 0.002); end
  def test_lever_graphs_m1411; assert_in_epsilon(26013.052441056327, worksheet.lever_graphs_m1411, 0.002); end
  def test_lever_graphs_n1411; assert_in_epsilon(29431.38117416564, worksheet.lever_graphs_n1411, 0.002); end
  def test_lever_graphs_o1411; assert_in_epsilon(31705.956151152357, worksheet.lever_graphs_o1411, 0.002); end
  def test_lever_graphs_p1411; assert_in_epsilon(33323.27856289104, worksheet.lever_graphs_p1411, 0.002); end
  def test_lever_graphs_q1411; assert_in_epsilon(34164.733104941595, worksheet.lever_graphs_q1411, 0.002); end
  def test_lever_graphs_r1411; assert_in_epsilon(34680.2881658181, worksheet.lever_graphs_r1411, 0.002); end
  def test_lever_graphs_s1411; assert_in_epsilon(34854.03675650514, worksheet.lever_graphs_s1411, 0.002); end
  def test_lever_graphs_b1412; assert_in_epsilon(3.0, worksheet.lever_graphs_b1412, 0.002); end
  def test_lever_graphs_k1412; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1412, 0.002); end
  def test_lever_graphs_l1412; assert_in_epsilon(22439.08754430111, worksheet.lever_graphs_l1412, 0.002); end
  def test_lever_graphs_m1412; assert_in_epsilon(25387.767937393994, worksheet.lever_graphs_m1412, 0.002); end
  def test_lever_graphs_n1412; assert_in_epsilon(27349.836293283144, worksheet.lever_graphs_n1412, 0.002); end
  def test_lever_graphs_o1412; assert_in_epsilon(28744.952812830314, worksheet.lever_graphs_o1412, 0.002); end
  def test_lever_graphs_p1412; assert_in_epsilon(29470.798892463077, worksheet.lever_graphs_p1412, 0.002); end
  def test_lever_graphs_q1412; assert_in_epsilon(29915.521216808866, worksheet.lever_graphs_q1412, 0.002); end
  def test_lever_graphs_r1412; assert_in_epsilon(30215.875445461523, worksheet.lever_graphs_r1412, 0.002); end
  def test_lever_graphs_s1412; assert_in_epsilon(30367.25728375313, worksheet.lever_graphs_s1412, 0.002); end
  def test_lever_graphs_b1413; assert_in_epsilon(4.0, worksheet.lever_graphs_b1413, 0.002); end
  def test_lever_graphs_k1413; assert_in_epsilon(18443.294303607214, worksheet.lever_graphs_k1413, 0.002); end
  def test_lever_graphs_l1413; assert_in_epsilon(22439.08754430111, worksheet.lever_graphs_l1413, 0.002); end
  def test_lever_graphs_m1413; assert_in_epsilon(24774.565798987085, worksheet.lever_graphs_m1413, 0.002); end
  def test_lever_graphs_n1413; assert_in_epsilon(25717.65261993979, worksheet.lever_graphs_n1413, 0.002); end
  def test_lever_graphs_o1413; assert_in_epsilon(26367.055576107054, worksheet.lever_graphs_o1413, 0.002); end
  def test_lever_graphs_p1413; assert_in_epsilon(26764.941574540564, worksheet.lever_graphs_p1413, 0.002); end
  def test_lever_graphs_q1413; assert_in_epsilon(27101.18034032299, worksheet.lever_graphs_q1413, 0.002); end
  def test_lever_graphs_r1413; assert_in_epsilon(27169.001078009587, worksheet.lever_graphs_r1413, 0.002); end
  def test_lever_graphs_s1413; assert_in_epsilon(27196.180948861762, worksheet.lever_graphs_s1413, 0.002); end
  def test_lever_graphs_c1418; assert_equal("1975", worksheet.lever_graphs_c1418); end
  def test_lever_graphs_d1418; assert_equal("1980", worksheet.lever_graphs_d1418); end
  def test_lever_graphs_e1418; assert_equal("1985", worksheet.lever_graphs_e1418); end
  def test_lever_graphs_f1418; assert_equal("1990", worksheet.lever_graphs_f1418); end
  def test_lever_graphs_g1418; assert_equal("1995", worksheet.lever_graphs_g1418); end
  def test_lever_graphs_h1418; assert_equal("2000", worksheet.lever_graphs_h1418); end
  def test_lever_graphs_i1418; assert_equal("2005", worksheet.lever_graphs_i1418); end
  def test_lever_graphs_j1418; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1418, 0.002); end
  def test_lever_graphs_k1418; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1418, 0.002); end
  def test_lever_graphs_l1418; assert_equal("2015", worksheet.lever_graphs_l1418); end
  def test_lever_graphs_m1418; assert_equal("2020", worksheet.lever_graphs_m1418); end
  def test_lever_graphs_n1418; assert_equal("2025", worksheet.lever_graphs_n1418); end
  def test_lever_graphs_o1418; assert_equal("2030", worksheet.lever_graphs_o1418); end
  def test_lever_graphs_p1418; assert_equal("2035", worksheet.lever_graphs_p1418); end
  def test_lever_graphs_q1418; assert_equal("2040", worksheet.lever_graphs_q1418); end
  def test_lever_graphs_r1418; assert_equal("2045", worksheet.lever_graphs_r1418); end
  def test_lever_graphs_s1418; assert_equal("2050", worksheet.lever_graphs_s1418); end
  def test_lever_graphs_b1419; assert_equal("Historic data", worksheet.lever_graphs_b1419); end
  def test_lever_graphs_b1420; assert_in_delta(1.0, worksheet.lever_graphs_b1420, 0.002); end
  def test_lever_graphs_k1420; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1420, 0.002); end
  def test_lever_graphs_l1420; assert_in_epsilon(83144.93703430965, worksheet.lever_graphs_l1420, 0.002); end
  def test_lever_graphs_m1420; assert_in_epsilon(101158.52896265812, worksheet.lever_graphs_m1420, 0.002); end
  def test_lever_graphs_n1420; assert_in_epsilon(120144.59954833178, worksheet.lever_graphs_n1420, 0.002); end
  def test_lever_graphs_o1420; assert_in_epsilon(139280.51942353652, worksheet.lever_graphs_o1420, 0.002); end
  def test_lever_graphs_p1420; assert_in_epsilon(150044.6756276828, worksheet.lever_graphs_p1420, 0.002); end
  def test_lever_graphs_q1420; assert_in_epsilon(157698.46204868914, worksheet.lever_graphs_q1420, 0.002); end
  def test_lever_graphs_r1420; assert_in_epsilon(161680.54583179645, worksheet.lever_graphs_r1420, 0.002); end
  def test_lever_graphs_s1420; assert_in_epsilon(162490.56698402768, worksheet.lever_graphs_s1420, 0.002); end
  def test_lever_graphs_b1421; assert_in_epsilon(2.0, worksheet.lever_graphs_b1421, 0.002); end
  def test_lever_graphs_k1421; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1421, 0.002); end
  def test_lever_graphs_l1421; assert_in_epsilon(83144.93703430965, worksheet.lever_graphs_l1421, 0.002); end
  def test_lever_graphs_m1421; assert_in_epsilon(96387.7699131811, worksheet.lever_graphs_m1421, 0.002); end
  def test_lever_graphs_n1421; assert_in_epsilon(111739.84273994439, worksheet.lever_graphs_n1421, 0.002); end
  def test_lever_graphs_o1421; assert_in_epsilon(126423.37578307991, worksheet.lever_graphs_o1421, 0.002); end
  def test_lever_graphs_p1421; assert_in_epsilon(132872.23851558595, worksheet.lever_graphs_p1421, 0.002); end
  def test_lever_graphs_q1421; assert_in_epsilon(136227.4290440435, worksheet.lever_graphs_q1421, 0.002); end
  def test_lever_graphs_r1421; assert_in_epsilon(139667.34233782822, worksheet.lever_graphs_r1421, 0.002); end
  def test_lever_graphs_s1421; assert_in_epsilon(140367.07712031255, worksheet.lever_graphs_s1421, 0.002); end
  def test_lever_graphs_b1422; assert_in_epsilon(3.0, worksheet.lever_graphs_b1422, 0.002); end
  def test_lever_graphs_k1422; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1422, 0.002); end
  def test_lever_graphs_l1422; assert_in_epsilon(83144.93703430965, worksheet.lever_graphs_l1422, 0.002); end
  def test_lever_graphs_m1422; assert_in_epsilon(94070.86462089179, worksheet.lever_graphs_m1422, 0.002); end
  def test_lever_graphs_n1422; assert_in_epsilon(101241.23364017004, worksheet.lever_graphs_n1422, 0.002); end
  def test_lever_graphs_o1422; assert_in_epsilon(108958.15011683403, worksheet.lever_graphs_o1422, 0.002); end
  def test_lever_graphs_p1422; assert_in_epsilon(114516.11081309705, worksheet.lever_graphs_p1422, 0.002); end
  def test_lever_graphs_q1422; assert_in_epsilon(117407.78611448688, worksheet.lever_graphs_q1422, 0.002); end
  def test_lever_graphs_r1422; assert_in_epsilon(120372.47984087645, worksheet.lever_graphs_r1422, 0.002); end
  def test_lever_graphs_s1422; assert_in_epsilon(120975.54716920594, worksheet.lever_graphs_s1422, 0.002); end
  def test_lever_graphs_b1423; assert_in_epsilon(4.0, worksheet.lever_graphs_b1423, 0.002); end
  def test_lever_graphs_k1423; assert_in_epsilon(66719.74173441526, worksheet.lever_graphs_k1423, 0.002); end
  def test_lever_graphs_l1423; assert_in_epsilon(83144.93703430965, worksheet.lever_graphs_l1423, 0.002); end
  def test_lever_graphs_m1423; assert_in_epsilon(91798.72886285403, worksheet.lever_graphs_m1423, 0.002); end
  def test_lever_graphs_n1423; assert_in_epsilon(94116.76180220999, worksheet.lever_graphs_n1423, 0.002); end
  def test_lever_graphs_o1423; assert_in_epsilon(96301.45425084508, worksheet.lever_graphs_o1423, 0.002); end
  def test_lever_graphs_p1423; assert_in_epsilon(98536.85903810858, worksheet.lever_graphs_p1423, 0.002); end
  def test_lever_graphs_q1423; assert_in_epsilon(99030.52968775081, worksheet.lever_graphs_q1423, 0.002); end
  def test_lever_graphs_r1423; assert_in_epsilon(99526.67363228693, worksheet.lever_graphs_r1423, 0.002); end
  def test_lever_graphs_s1423; assert_in_epsilon(100025.30326294909, worksheet.lever_graphs_s1423, 0.002); end
  def test_lever_graphs_c2108; assert_equal("1975", worksheet.lever_graphs_c2108); end
  def test_lever_graphs_d2108; assert_equal("1980", worksheet.lever_graphs_d2108); end
  def test_lever_graphs_e2108; assert_equal("1985", worksheet.lever_graphs_e2108); end
  def test_lever_graphs_f2108; assert_equal("1990", worksheet.lever_graphs_f2108); end
  def test_lever_graphs_g2108; assert_equal("1995", worksheet.lever_graphs_g2108); end
  def test_lever_graphs_h2108; assert_equal("2000", worksheet.lever_graphs_h2108); end
  def test_lever_graphs_i2108; assert_equal("2005", worksheet.lever_graphs_i2108); end
  def test_lever_graphs_j2108; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2108, 0.002); end
  def test_lever_graphs_k2108; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2108, 0.002); end
  def test_lever_graphs_l2108; assert_equal("2015", worksheet.lever_graphs_l2108); end
  def test_lever_graphs_m2108; assert_equal("2020", worksheet.lever_graphs_m2108); end
  def test_lever_graphs_n2108; assert_equal("2025", worksheet.lever_graphs_n2108); end
  def test_lever_graphs_o2108; assert_equal("2030", worksheet.lever_graphs_o2108); end
  def test_lever_graphs_p2108; assert_equal("2035", worksheet.lever_graphs_p2108); end
  def test_lever_graphs_q2108; assert_equal("2040", worksheet.lever_graphs_q2108); end
  def test_lever_graphs_r2108; assert_equal("2045", worksheet.lever_graphs_r2108); end
  def test_lever_graphs_s2108; assert_equal("2050", worksheet.lever_graphs_s2108); end
  def test_lever_graphs_b2109; assert_equal("Historic data", worksheet.lever_graphs_b2109); end
  def test_lever_graphs_b2110; assert_in_delta(1.0, worksheet.lever_graphs_b2110, 0.002); end
  def test_lever_graphs_k2110; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2110, 0.002); end
  def test_lever_graphs_l2110; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2110, 0.002); end
  def test_lever_graphs_m2110; assert_in_epsilon(7.5806628990088445, worksheet.lever_graphs_m2110, 0.002); end
  def test_lever_graphs_n2110; assert_in_epsilon(7.13660906986481, worksheet.lever_graphs_n2110, 0.002); end
  def test_lever_graphs_o2110; assert_in_epsilon(6.718566660276611, worksheet.lever_graphs_o2110, 0.002); end
  def test_lever_graphs_p2110; assert_in_epsilon(6.38929004351293, worksheet.lever_graphs_p2110, 0.002); end
  def test_lever_graphs_q2110; assert_in_epsilon(6.231147148269996, worksheet.lever_graphs_q2110, 0.002); end
  def test_lever_graphs_r2110; assert_in_epsilon(6.076918486869242, worksheet.lever_graphs_r2110, 0.002); end
  def test_lever_graphs_s2110; assert_in_epsilon(5.9265071771425, worksheet.lever_graphs_s2110, 0.002); end
  def test_lever_graphs_b2111; assert_in_epsilon(2.0, worksheet.lever_graphs_b2111, 0.002); end
  def test_lever_graphs_k2111; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2111, 0.002); end
  def test_lever_graphs_l2111; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2111, 0.002); end
  def test_lever_graphs_m2111; assert_in_epsilon(7.4285983775928015, worksheet.lever_graphs_m2111, 0.002); end
  def test_lever_graphs_n2111; assert_in_epsilon(6.714864564580871, worksheet.lever_graphs_n2111, 0.002); end
  def test_lever_graphs_o2111; assert_in_epsilon(6.226133235429551, worksheet.lever_graphs_o2111, 0.002); end
  def test_lever_graphs_p2111; assert_in_epsilon(5.891147113643791, worksheet.lever_graphs_p2111, 0.002); end
  def test_lever_graphs_q2111; assert_in_epsilon(5.574184329545459, worksheet.lever_graphs_q2111, 0.002); end
  def test_lever_graphs_r2111; assert_in_epsilon(5.354756008487422, worksheet.lever_graphs_r2111, 0.002); end
  def test_lever_graphs_s2111; assert_in_epsilon(5.222219120549227, worksheet.lever_graphs_s2111, 0.002); end
  def test_lever_graphs_b2112; assert_in_epsilon(3.0, worksheet.lever_graphs_b2112, 0.002); end
  def test_lever_graphs_k2112; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2112, 0.002); end
  def test_lever_graphs_l2112; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2112, 0.002); end
  def test_lever_graphs_m2112; assert_in_epsilon(7.059091400438078, worksheet.lever_graphs_m2112, 0.002); end
  def test_lever_graphs_n2112; assert_in_epsilon(6.219735031956189, worksheet.lever_graphs_n2112, 0.002); end
  def test_lever_graphs_o2112; assert_in_epsilon(5.62214784597071, worksheet.lever_graphs_o2112, 0.002); end
  def test_lever_graphs_p2112; assert_in_epsilon(5.081976360657247, worksheet.lever_graphs_p2112, 0.002); end
  def test_lever_graphs_q2112; assert_in_epsilon(4.760125510088125, worksheet.lever_graphs_q2112, 0.002); end
  def test_lever_graphs_r2112; assert_in_epsilon(4.5727426954998345, worksheet.lever_graphs_r2112, 0.002); end
  def test_lever_graphs_s2112; assert_in_epsilon(4.459561612133376, worksheet.lever_graphs_s2112, 0.002); end
  def test_lever_graphs_b2113; assert_in_epsilon(4.0, worksheet.lever_graphs_b2113, 0.002); end
  def test_lever_graphs_k2113; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2113, 0.002); end
  def test_lever_graphs_l2113; assert_in_epsilon(8.011719332690992, worksheet.lever_graphs_l2113, 0.002); end
  def test_lever_graphs_m2113; assert_in_epsilon(7.059091400438078, worksheet.lever_graphs_m2113, 0.002); end
  def test_lever_graphs_n2113; assert_in_epsilon(6.219735031956189, worksheet.lever_graphs_n2113, 0.002); end
  def test_lever_graphs_o2113; assert_in_epsilon(5.480181750493032, worksheet.lever_graphs_o2113, 0.002); end
  def test_lever_graphs_p2113; assert_in_epsilon(4.8285645391860506, worksheet.lever_graphs_p2113, 0.002); end
  def test_lever_graphs_q2113; assert_in_epsilon(4.364639905661279, worksheet.lever_graphs_q2113, 0.002); end
  def test_lever_graphs_r2113; assert_in_epsilon(3.945288781270419, worksheet.lever_graphs_r2113, 0.002); end
  def test_lever_graphs_s2113; assert_in_epsilon(3.6581368645918975, worksheet.lever_graphs_s2113, 0.002); end
  def test_lever_graphs_c2179; assert_equal("1975", worksheet.lever_graphs_c2179); end
  def test_lever_graphs_d2179; assert_equal("1980", worksheet.lever_graphs_d2179); end
  def test_lever_graphs_e2179; assert_equal("1985", worksheet.lever_graphs_e2179); end
  def test_lever_graphs_f2179; assert_equal("1990", worksheet.lever_graphs_f2179); end
  def test_lever_graphs_g2179; assert_equal("1995", worksheet.lever_graphs_g2179); end
  def test_lever_graphs_h2179; assert_equal("2000", worksheet.lever_graphs_h2179); end
  def test_lever_graphs_i2179; assert_equal("2005", worksheet.lever_graphs_i2179); end
  def test_lever_graphs_j2179; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2179, 0.002); end
  def test_lever_graphs_k2179; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2179, 0.002); end
  def test_lever_graphs_l2179; assert_equal("2015", worksheet.lever_graphs_l2179); end
  def test_lever_graphs_m2179; assert_equal("2020", worksheet.lever_graphs_m2179); end
  def test_lever_graphs_n2179; assert_equal("2025", worksheet.lever_graphs_n2179); end
  def test_lever_graphs_o2179; assert_equal("2030", worksheet.lever_graphs_o2179); end
  def test_lever_graphs_p2179; assert_equal("2035", worksheet.lever_graphs_p2179); end
  def test_lever_graphs_q2179; assert_equal("2040", worksheet.lever_graphs_q2179); end
  def test_lever_graphs_r2179; assert_equal("2045", worksheet.lever_graphs_r2179); end
  def test_lever_graphs_s2179; assert_equal("2050", worksheet.lever_graphs_s2179); end
  def test_lever_graphs_b2180; assert_equal("Historic data", worksheet.lever_graphs_b2180); end
  def test_lever_graphs_b2181; assert_in_delta(1.0, worksheet.lever_graphs_b2181, 0.002); end
  def test_lever_graphs_k2181; assert_in_epsilon(9.96, worksheet.lever_graphs_k2181, 0.002); end
  def test_lever_graphs_l2181; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2181, 0.002); end
  def test_lever_graphs_m2181; assert_in_epsilon(9.14448948972875, worksheet.lever_graphs_m2181, 0.002); end
  def test_lever_graphs_n2181; assert_in_epsilon(8.918151972794055, worksheet.lever_graphs_n2181, 0.002); end
  def test_lever_graphs_o2181; assert_in_epsilon(8.697416591618794, worksheet.lever_graphs_o2181, 0.002); end
  def test_lever_graphs_p2181; assert_in_epsilon(8.482144686357737, worksheet.lever_graphs_p2181, 0.002); end
  def test_lever_graphs_q2181; assert_in_epsilon(8.272201029169722, worksheet.lever_graphs_q2181, 0.002); end
  def test_lever_graphs_r2181; assert_in_epsilon(8.067453739271263, worksheet.lever_graphs_r2181, 0.002); end
  def test_lever_graphs_s2181; assert_in_epsilon(7.8677742000927084, worksheet.lever_graphs_s2181, 0.002); end
  def test_lever_graphs_b2182; assert_in_epsilon(2.0, worksheet.lever_graphs_b2182, 0.002); end
  def test_lever_graphs_k2182; assert_in_epsilon(9.96, worksheet.lever_graphs_k2182, 0.002); end
  def test_lever_graphs_l2182; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2182, 0.002); end
  def test_lever_graphs_m2182; assert_in_epsilon(8.827318247472038, worksheet.lever_graphs_m2182, 0.002); end
  def test_lever_graphs_n2182; assert_in_epsilon(8.310238867860596, worksheet.lever_graphs_n2182, 0.002); end
  def test_lever_graphs_o2182; assert_in_epsilon(7.823448538368755, worksheet.lever_graphs_o2182, 0.002); end
  def test_lever_graphs_p2182; assert_in_epsilon(7.365173011959558, worksheet.lever_graphs_p2182, 0.002); end
  def test_lever_graphs_q2182; assert_in_epsilon(6.933741971978007, worksheet.lever_graphs_q2182, 0.002); end
  def test_lever_graphs_r2182; assert_in_epsilon(6.52758294420273, worksheet.lever_graphs_r2182, 0.002); end
  def test_lever_graphs_s2182; assert_in_epsilon(6.145215565512471, worksheet.lever_graphs_s2182, 0.002); end
  def test_lever_graphs_b2183; assert_in_epsilon(3.0, worksheet.lever_graphs_b2183, 0.002); end
  def test_lever_graphs_k2183; assert_in_epsilon(9.96, worksheet.lever_graphs_k2183, 0.002); end
  def test_lever_graphs_l2183; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2183, 0.002); end
  def test_lever_graphs_m2183; assert_in_epsilon(8.606204281617035, worksheet.lever_graphs_m2183, 0.002); end
  def test_lever_graphs_n2183; assert_in_epsilon(7.899129607011463, worksheet.lever_graphs_n2183, 0.002); end
  def test_lever_graphs_o2183; assert_in_epsilon(7.250147278242543, worksheet.lever_graphs_o2183, 0.002); end
  def test_lever_graphs_p2183; assert_in_epsilon(6.654484502893848, worksheet.lever_graphs_p2183, 0.002); end
  def test_lever_graphs_q2183; assert_in_epsilon(6.107760615035191, worksheet.lever_graphs_q2183, 0.002); end
  def test_lever_graphs_r2183; assert_in_epsilon(5.605954858614858, worksheet.lever_graphs_r2183, 0.002); end
  def test_lever_graphs_s2183; assert_in_epsilon(5.145376817726912, worksheet.lever_graphs_s2183, 0.002); end
  def test_lever_graphs_b2184; assert_in_epsilon(4.0, worksheet.lever_graphs_b2184, 0.002); end
  def test_lever_graphs_k2184; assert_in_epsilon(9.96, worksheet.lever_graphs_k2184, 0.002); end
  def test_lever_graphs_l2184; assert_in_epsilon(9.376571321374435, worksheet.lever_graphs_l2184, 0.002); end
  def test_lever_graphs_m2184; assert_in_epsilon(8.432522727417279, worksheet.lever_graphs_m2184, 0.002); end
  def test_lever_graphs_n2184; assert_in_epsilon(7.583522495724577, worksheet.lever_graphs_n2184, 0.002); end
  def test_lever_graphs_o2184; assert_in_epsilon(6.820001001144634, worksheet.lever_graphs_o2184, 0.002); end
  def test_lever_graphs_p2184; assert_in_epsilon(6.13335210409628, worksheet.lever_graphs_p2184, 0.002); end
  def test_lever_graphs_q2184; assert_in_epsilon(5.5158361452598985, worksheet.lever_graphs_q2184, 0.002); end
  def test_lever_graphs_r2184; assert_in_epsilon(4.960492706922208, worksheet.lever_graphs_r2184, 0.002); end
  def test_lever_graphs_s2184; assert_in_epsilon(4.461062157652073, worksheet.lever_graphs_s2184, 0.002); end
  def test_lever_graphs_d2519; assert_equal("Title", worksheet.lever_graphs_d2519); end
  def test_lever_graphs_e2519; assert_equal("Design for Steel Materials demand per product", worksheet.lever_graphs_e2519); end
  def test_lever_graphs_f2519; assert_equal("Design for Chemicals Materials demand per product", worksheet.lever_graphs_f2519); end
  def test_lever_graphs_g2519; assert_equal("Design for Aluminium Materials demand per product", worksheet.lever_graphs_g2519); end
  def test_lever_graphs_h2519; assert_equal("Design for Cement Materials demand per product", worksheet.lever_graphs_h2519); end
  def test_lever_graphs_i2519; assert_equal("Design for Paper Materials demand per product", worksheet.lever_graphs_i2519); end
  def test_lever_graphs_j2519; assert_equal("Design for Timber Materials demand per product", worksheet.lever_graphs_j2519); end
  def test_lever_graphs_k2519; assert_equal("Design for Other industries Materials demand per product", worksheet.lever_graphs_k2519); end
  def test_lever_graphs_d2520; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2520, 0.002); end
  def test_lever_graphs_e2520; assert_in_delta(1.0, worksheet.lever_graphs_e2520, 0.002); end
  def test_lever_graphs_f2520; assert_in_delta(1.0, worksheet.lever_graphs_f2520, 0.002); end
  def test_lever_graphs_g2520; assert_in_delta(1.0, worksheet.lever_graphs_g2520, 0.002); end
  def test_lever_graphs_h2520; assert_in_delta(1.0, worksheet.lever_graphs_h2520, 0.002); end
  def test_lever_graphs_i2520; assert_in_delta(1.0, worksheet.lever_graphs_i2520, 0.002); end
  def test_lever_graphs_j2520; assert_in_delta(1.0, worksheet.lever_graphs_j2520, 0.002); end
  def test_lever_graphs_k2520; assert_in_delta(1.0, worksheet.lever_graphs_k2520, 0.002); end
  def test_lever_graphs_d2521; assert_equal("2050: Level 1", worksheet.lever_graphs_d2521); end
  def test_lever_graphs_e2521; assert_in_delta(1.0, worksheet.lever_graphs_e2521, 0.002); end
  def test_lever_graphs_f2521; assert_in_delta(1.0, worksheet.lever_graphs_f2521, 0.002); end
  def test_lever_graphs_g2521; assert_in_delta(1.0, worksheet.lever_graphs_g2521, 0.002); end
  def test_lever_graphs_h2521; assert_in_delta(1.0, worksheet.lever_graphs_h2521, 0.002); end
  def test_lever_graphs_i2521; assert_in_delta(1.0, worksheet.lever_graphs_i2521, 0.002); end
  def test_lever_graphs_j2521; assert_in_delta(1.0, worksheet.lever_graphs_j2521, 0.002); end
  def test_lever_graphs_k2521; assert_in_delta(1.0, worksheet.lever_graphs_k2521, 0.002); end
  def test_lever_graphs_d2522; assert_equal("2050: Level 2", worksheet.lever_graphs_d2522); end
  def test_lever_graphs_e2522; assert_in_delta(0.9, worksheet.lever_graphs_e2522, 0.002); end
  def test_lever_graphs_f2522; assert_in_delta(0.9, worksheet.lever_graphs_f2522, 0.002); end
  def test_lever_graphs_g2522; assert_in_delta(0.9, worksheet.lever_graphs_g2522, 0.002); end
  def test_lever_graphs_h2522; assert_in_delta(0.9, worksheet.lever_graphs_h2522, 0.002); end
  def test_lever_graphs_i2522; assert_in_delta(0.95, worksheet.lever_graphs_i2522, 0.002); end
  def test_lever_graphs_j2522; assert_in_delta(0.9, worksheet.lever_graphs_j2522, 0.002); end
  def test_lever_graphs_k2522; assert_in_delta(0.9, worksheet.lever_graphs_k2522, 0.002); end
  def test_lever_graphs_d2523; assert_equal("2050: Level 3", worksheet.lever_graphs_d2523); end
  def test_lever_graphs_e2523; assert_in_delta(0.8, worksheet.lever_graphs_e2523, 0.002); end
  def test_lever_graphs_f2523; assert_in_delta(0.8, worksheet.lever_graphs_f2523, 0.002); end
  def test_lever_graphs_g2523; assert_in_delta(0.8, worksheet.lever_graphs_g2523, 0.002); end
  def test_lever_graphs_h2523; assert_in_delta(0.8, worksheet.lever_graphs_h2523, 0.002); end
  def test_lever_graphs_i2523; assert_in_delta(0.9, worksheet.lever_graphs_i2523, 0.002); end
  def test_lever_graphs_j2523; assert_in_delta(0.8, worksheet.lever_graphs_j2523, 0.002); end
  def test_lever_graphs_k2523; assert_in_delta(0.8, worksheet.lever_graphs_k2523, 0.002); end
  def test_lever_graphs_d2524; assert_equal("2050: Level 4", worksheet.lever_graphs_d2524); end
  def test_lever_graphs_e2524; assert_in_delta(0.7, worksheet.lever_graphs_e2524, 0.002); end
  def test_lever_graphs_f2524; assert_in_delta(0.7, worksheet.lever_graphs_f2524, 0.002); end
  def test_lever_graphs_g2524; assert_in_delta(0.7, worksheet.lever_graphs_g2524, 0.002); end
  def test_lever_graphs_h2524; assert_in_delta(0.7, worksheet.lever_graphs_h2524, 0.002); end
  def test_lever_graphs_i2524; assert_in_delta(0.8, worksheet.lever_graphs_i2524, 0.002); end
  def test_lever_graphs_j2524; assert_in_delta(0.7, worksheet.lever_graphs_j2524, 0.002); end
  def test_lever_graphs_k2524; assert_in_delta(0.7, worksheet.lever_graphs_k2524, 0.002); end
  def test_lever_graphs_c2729; assert_equal("1975", worksheet.lever_graphs_c2729); end
  def test_lever_graphs_d2729; assert_equal("1980", worksheet.lever_graphs_d2729); end
  def test_lever_graphs_e2729; assert_equal("1985", worksheet.lever_graphs_e2729); end
  def test_lever_graphs_f2729; assert_equal("1990", worksheet.lever_graphs_f2729); end
  def test_lever_graphs_g2729; assert_equal("1995", worksheet.lever_graphs_g2729); end
  def test_lever_graphs_h2729; assert_equal("2000", worksheet.lever_graphs_h2729); end
  def test_lever_graphs_i2729; assert_equal("2005", worksheet.lever_graphs_i2729); end
  def test_lever_graphs_j2729; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2729, 0.002); end
  def test_lever_graphs_k2729; assert_equal("2011", worksheet.lever_graphs_k2729); end
  def test_lever_graphs_l2729; assert_equal("2015", worksheet.lever_graphs_l2729); end
  def test_lever_graphs_m2729; assert_equal("2020", worksheet.lever_graphs_m2729); end
  def test_lever_graphs_n2729; assert_equal("2025", worksheet.lever_graphs_n2729); end
  def test_lever_graphs_o2729; assert_equal("2030", worksheet.lever_graphs_o2729); end
  def test_lever_graphs_p2729; assert_equal("2035", worksheet.lever_graphs_p2729); end
  def test_lever_graphs_q2729; assert_equal("2040", worksheet.lever_graphs_q2729); end
  def test_lever_graphs_r2729; assert_equal("2045", worksheet.lever_graphs_r2729); end
  def test_lever_graphs_s2729; assert_equal("2050", worksheet.lever_graphs_s2729); end
  def test_lever_graphs_b2730; assert_equal("Historic data", worksheet.lever_graphs_b2730); end
  def test_lever_graphs_b2731; assert_in_delta(1.0, worksheet.lever_graphs_b2731, 0.002); end
  def test_lever_graphs_k2731; assert_in_delta(1.0, worksheet.lever_graphs_k2731, 0.002); end
  def test_lever_graphs_l2731; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2731, 0.002); end
  def test_lever_graphs_m2731; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2731, 0.002); end
  def test_lever_graphs_n2731; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2731, 0.002); end
  def test_lever_graphs_o2731; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2731, 0.002); end
  def test_lever_graphs_p2731; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2731, 0.002); end
  def test_lever_graphs_q2731; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2731, 0.002); end
  def test_lever_graphs_r2731; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2731, 0.002); end
  def test_lever_graphs_s2731; assert_in_delta(1.0, worksheet.lever_graphs_s2731, 0.002); end
  def test_lever_graphs_b2732; assert_in_epsilon(2.0, worksheet.lever_graphs_b2732, 0.002); end
  def test_lever_graphs_k2732; assert_in_delta(1.0, worksheet.lever_graphs_k2732, 0.002); end
  def test_lever_graphs_l2732; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2732, 0.002); end
  def test_lever_graphs_m2732; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2732, 0.002); end
  def test_lever_graphs_n2732; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2732, 0.002); end
  def test_lever_graphs_o2732; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2732, 0.002); end
  def test_lever_graphs_p2732; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2732, 0.002); end
  def test_lever_graphs_q2732; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2732, 0.002); end
  def test_lever_graphs_r2732; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2732, 0.002); end
  def test_lever_graphs_s2732; assert_in_delta(0.9, worksheet.lever_graphs_s2732, 0.002); end
  def test_lever_graphs_b2733; assert_in_epsilon(3.0, worksheet.lever_graphs_b2733, 0.002); end
  def test_lever_graphs_k2733; assert_in_delta(1.0, worksheet.lever_graphs_k2733, 0.002); end
  def test_lever_graphs_l2733; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2733, 0.002); end
  def test_lever_graphs_m2733; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2733, 0.002); end
  def test_lever_graphs_n2733; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2733, 0.002); end
  def test_lever_graphs_o2733; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2733, 0.002); end
  def test_lever_graphs_p2733; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2733, 0.002); end
  def test_lever_graphs_q2733; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2733, 0.002); end
  def test_lever_graphs_r2733; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2733, 0.002); end
  def test_lever_graphs_s2733; assert_in_delta(0.8, worksheet.lever_graphs_s2733, 0.002); end
  def test_lever_graphs_b2734; assert_in_epsilon(4.0, worksheet.lever_graphs_b2734, 0.002); end
  def test_lever_graphs_k2734; assert_in_delta(1.0, worksheet.lever_graphs_k2734, 0.002); end
  def test_lever_graphs_l2734; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2734, 0.002); end
  def test_lever_graphs_m2734; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2734, 0.002); end
  def test_lever_graphs_n2734; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2734, 0.002); end
  def test_lever_graphs_o2734; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2734, 0.002); end
  def test_lever_graphs_p2734; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2734, 0.002); end
  def test_lever_graphs_q2734; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2734, 0.002); end
  def test_lever_graphs_r2734; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2734, 0.002); end
  def test_lever_graphs_s2734; assert_in_delta(0.7, worksheet.lever_graphs_s2734, 0.002); end
  def test_lever_graphs_c2645; assert_equal("1975", worksheet.lever_graphs_c2645); end
  def test_lever_graphs_d2645; assert_equal("1980", worksheet.lever_graphs_d2645); end
  def test_lever_graphs_e2645; assert_equal("1985", worksheet.lever_graphs_e2645); end
  def test_lever_graphs_f2645; assert_equal("1990", worksheet.lever_graphs_f2645); end
  def test_lever_graphs_g2645; assert_equal("1995", worksheet.lever_graphs_g2645); end
  def test_lever_graphs_h2645; assert_equal("2000", worksheet.lever_graphs_h2645); end
  def test_lever_graphs_i2645; assert_equal("2005", worksheet.lever_graphs_i2645); end
  def test_lever_graphs_j2645; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2645, 0.002); end
  def test_lever_graphs_k2645; assert_equal("2011", worksheet.lever_graphs_k2645); end
  def test_lever_graphs_l2645; assert_equal("2015", worksheet.lever_graphs_l2645); end
  def test_lever_graphs_m2645; assert_equal("2020", worksheet.lever_graphs_m2645); end
  def test_lever_graphs_n2645; assert_equal("2025", worksheet.lever_graphs_n2645); end
  def test_lever_graphs_o2645; assert_equal("2030", worksheet.lever_graphs_o2645); end
  def test_lever_graphs_p2645; assert_equal("2035", worksheet.lever_graphs_p2645); end
  def test_lever_graphs_q2645; assert_equal("2040", worksheet.lever_graphs_q2645); end
  def test_lever_graphs_r2645; assert_equal("2045", worksheet.lever_graphs_r2645); end
  def test_lever_graphs_s2645; assert_equal("2050", worksheet.lever_graphs_s2645); end
  def test_lever_graphs_b2646; assert_equal("Historic data", worksheet.lever_graphs_b2646); end
  def test_lever_graphs_b2647; assert_in_delta(1.0, worksheet.lever_graphs_b2647, 0.002); end
  def test_lever_graphs_k2647; assert_in_delta(1.0, worksheet.lever_graphs_k2647, 0.002); end
  def test_lever_graphs_l2647; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2647, 0.002); end
  def test_lever_graphs_m2647; assert_in_delta(0.9912087912087912, worksheet.lever_graphs_m2647, 0.002); end
  def test_lever_graphs_n2647; assert_in_delta(0.9926739926739927, worksheet.lever_graphs_n2647, 0.002); end
  def test_lever_graphs_o2647; assert_in_delta(0.9941391941391942, worksheet.lever_graphs_o2647, 0.002); end
  def test_lever_graphs_p2647; assert_in_delta(0.9956043956043956, worksheet.lever_graphs_p2647, 0.002); end
  def test_lever_graphs_q2647; assert_in_delta(0.9970695970695971, worksheet.lever_graphs_q2647, 0.002); end
  def test_lever_graphs_r2647; assert_in_delta(0.9985347985347985, worksheet.lever_graphs_r2647, 0.002); end
  def test_lever_graphs_s2647; assert_in_delta(1.0, worksheet.lever_graphs_s2647, 0.002); end
  def test_lever_graphs_b2648; assert_in_epsilon(2.0, worksheet.lever_graphs_b2648, 0.002); end
  def test_lever_graphs_k2648; assert_in_delta(1.0, worksheet.lever_graphs_k2648, 0.002); end
  def test_lever_graphs_l2648; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2648, 0.002); end
  def test_lever_graphs_m2648; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2648, 0.002); end
  def test_lever_graphs_n2648; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2648, 0.002); end
  def test_lever_graphs_o2648; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2648, 0.002); end
  def test_lever_graphs_p2648; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2648, 0.002); end
  def test_lever_graphs_q2648; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2648, 0.002); end
  def test_lever_graphs_r2648; assert_in_delta(0.9128205128205128, worksheet.lever_graphs_r2648, 0.002); end
  def test_lever_graphs_s2648; assert_in_delta(0.9, worksheet.lever_graphs_s2648, 0.002); end
  def test_lever_graphs_b2649; assert_in_epsilon(3.0, worksheet.lever_graphs_b2649, 0.002); end
  def test_lever_graphs_k2649; assert_in_delta(1.0, worksheet.lever_graphs_k2649, 0.002); end
  def test_lever_graphs_l2649; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2649, 0.002); end
  def test_lever_graphs_m2649; assert_in_delta(0.9626373626373627, worksheet.lever_graphs_m2649, 0.002); end
  def test_lever_graphs_n2649; assert_in_delta(0.9355311355311355, worksheet.lever_graphs_n2649, 0.002); end
  def test_lever_graphs_o2649; assert_in_delta(0.9084249084249084, worksheet.lever_graphs_o2649, 0.002); end
  def test_lever_graphs_p2649; assert_in_delta(0.8813186813186813, worksheet.lever_graphs_p2649, 0.002); end
  def test_lever_graphs_q2649; assert_in_delta(0.8542124542124543, worksheet.lever_graphs_q2649, 0.002); end
  def test_lever_graphs_r2649; assert_in_delta(0.8271062271062272, worksheet.lever_graphs_r2649, 0.002); end
  def test_lever_graphs_s2649; assert_in_delta(0.8, worksheet.lever_graphs_s2649, 0.002); end
  def test_lever_graphs_b2650; assert_in_epsilon(4.0, worksheet.lever_graphs_b2650, 0.002); end
  def test_lever_graphs_k2650; assert_in_delta(1.0, worksheet.lever_graphs_k2650, 0.002); end
  def test_lever_graphs_l2650; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2650, 0.002); end
  def test_lever_graphs_m2650; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2650, 0.002); end
  def test_lever_graphs_n2650; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2650, 0.002); end
  def test_lever_graphs_o2650; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2650, 0.002); end
  def test_lever_graphs_p2650; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2650, 0.002); end
  def test_lever_graphs_q2650; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2650, 0.002); end
  def test_lever_graphs_r2650; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2650, 0.002); end
  def test_lever_graphs_s2650; assert_in_delta(0.7, worksheet.lever_graphs_s2650, 0.002); end
  def test_lever_graphs_d2575; assert_equal("Title", worksheet.lever_graphs_d2575); end
  def test_lever_graphs_e2575; assert_equal("Steel", worksheet.lever_graphs_e2575); end
  def test_lever_graphs_f2575; assert_equal("Chemicals & petrochemicals", worksheet.lever_graphs_f2575); end
  def test_lever_graphs_g2575; assert_equal("Pulp & paper", worksheet.lever_graphs_g2575); end
  def test_lever_graphs_d2576; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2576, 0.002); end
  def test_lever_graphs_e2576; assert_in_delta(0.0, (worksheet.lever_graphs_e2576||0), 0.002); end
  def test_lever_graphs_f2576; assert_in_delta(0.0, (worksheet.lever_graphs_f2576||0), 0.002); end
  def test_lever_graphs_g2576; assert_in_delta(0.0, (worksheet.lever_graphs_g2576||0), 0.002); end
  def test_lever_graphs_d2577; assert_equal("2050: Level 1", worksheet.lever_graphs_d2577); end
  def test_lever_graphs_e2577; assert_in_delta(0.0, (worksheet.lever_graphs_e2577||0), 0.002); end
  def test_lever_graphs_f2577; assert_in_delta(0.07624999999999993, worksheet.lever_graphs_f2577, 0.002); end
  def test_lever_graphs_g2577; assert_in_delta(0.0, (worksheet.lever_graphs_g2577||0), 0.002); end
  def test_lever_graphs_d2578; assert_equal("2050: Level 2", worksheet.lever_graphs_d2578); end
  def test_lever_graphs_e2578; assert_in_delta(0.1549295774647888, worksheet.lever_graphs_e2578, 0.002); end
  def test_lever_graphs_f2578; assert_in_delta(0.15500000000000025, worksheet.lever_graphs_f2578, 0.002); end
  def test_lever_graphs_g2578; assert_in_delta(0.09090909090909091, worksheet.lever_graphs_g2578, 0.002); end
  def test_lever_graphs_d2579; assert_equal("2050: Level 3", worksheet.lever_graphs_d2579); end
  def test_lever_graphs_e2579; assert_in_delta(0.295774647887324, worksheet.lever_graphs_e2579, 0.002); end
  def test_lever_graphs_f2579; assert_in_delta(0.23624999999999985, worksheet.lever_graphs_f2579, 0.002); end
  def test_lever_graphs_g2579; assert_in_delta(0.2424242424242424, worksheet.lever_graphs_g2579, 0.002); end
  def test_lever_graphs_d2580; assert_equal("2050: Level 4", worksheet.lever_graphs_d2580); end
  def test_lever_graphs_e2580; assert_in_delta(0.647887323943662, worksheet.lever_graphs_e2580, 0.002); end
  def test_lever_graphs_f2580; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_f2580, 0.002); end
  def test_lever_graphs_g2580; assert_in_delta(0.3939393939393939, worksheet.lever_graphs_g2580, 0.002); end
  def test_lever_graphs_d2586; assert_equal("Title", worksheet.lever_graphs_d2586); end
  def test_lever_graphs_e2586; assert_equal("Aluminium", worksheet.lever_graphs_e2586); end
  def test_lever_graphs_d2587; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2587, 0.002); end
  def test_lever_graphs_e2587; assert_in_delta(0.0, (worksheet.lever_graphs_e2587||0), 0.002); end
  def test_lever_graphs_d2588; assert_equal("2050: Level 1", worksheet.lever_graphs_d2588); end
  def test_lever_graphs_e2588; assert_in_delta(-0.2857142857142857, worksheet.lever_graphs_e2588, 0.002); end
  def test_lever_graphs_d2589; assert_equal("2050: Level 2", worksheet.lever_graphs_d2589); end
  def test_lever_graphs_e2589; assert_in_delta(-0.2142857142857143, worksheet.lever_graphs_e2589, 0.002); end
  def test_lever_graphs_d2590; assert_equal("2050: Level 3", worksheet.lever_graphs_d2590); end
  def test_lever_graphs_e2590; assert_in_delta(-0.14285714285714282, worksheet.lever_graphs_e2590, 0.002); end
  def test_lever_graphs_d2591; assert_equal("2050: Level 4", worksheet.lever_graphs_d2591); end
  def test_lever_graphs_e2591; assert_in_delta(-0.07142857142857141, worksheet.lever_graphs_e2591, 0.002); end
  def test_lever_graphs_d2529; assert_equal("Title", worksheet.lever_graphs_d2529); end
  def test_lever_graphs_e2529; assert_equal("Global Oxygen steel technology", worksheet.lever_graphs_e2529); end
  def test_lever_graphs_f2529; assert_equal("Global Hisarna Oxygen steel technology", worksheet.lever_graphs_f2529); end
  def test_lever_graphs_g2529; assert_equal("Global Electric steel technology", worksheet.lever_graphs_g2529); end
  def test_lever_graphs_h2529; assert_equal("Global DRI Electric steel technology", worksheet.lever_graphs_h2529); end
  def test_lever_graphs_i2529; assert_equal("Global Alumina Aluminium technology", worksheet.lever_graphs_i2529); end
  def test_lever_graphs_j2529; assert_equal("Global Primary Aluminium technology", worksheet.lever_graphs_j2529); end
  def test_lever_graphs_k2529; assert_equal("Global Secondary Aluminium technology", worksheet.lever_graphs_k2529); end
  def test_lever_graphs_l2529; assert_equal("Global Chemicals: High Value Chemicals  technology", worksheet.lever_graphs_l2529); end
  def test_lever_graphs_m2529; assert_equal("Global Chemicals: Ammonia technology", worksheet.lever_graphs_m2529); end
  def test_lever_graphs_n2529; assert_equal("Global Chemicals: Methanol technology", worksheet.lever_graphs_n2529); end
  def test_lever_graphs_o2529; assert_equal("Global Chemicals: Others technology", worksheet.lever_graphs_o2529); end
  def test_lever_graphs_p2529; assert_equal("Global Pulp & paper: Pulp technology", worksheet.lever_graphs_p2529); end
  def test_lever_graphs_q2529; assert_equal("Global Pulp & paper: Virgin technology", worksheet.lever_graphs_q2529); end
  def test_lever_graphs_r2529; assert_equal("Global Pulp & paper: Recycled technology", worksheet.lever_graphs_r2529); end
  def test_lever_graphs_s2529; assert_equal("Global Cement technology", worksheet.lever_graphs_s2529); end
  def test_lever_graphs_t2529; assert_equal("Global Timber technology", worksheet.lever_graphs_t2529); end
  def test_lever_graphs_u2529; assert_equal("Global Other industries technology", worksheet.lever_graphs_u2529); end
  def test_lever_graphs_d2530; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2530, 0.002); end
  def test_lever_graphs_e2530; assert_in_delta(0.0, (worksheet.lever_graphs_e2530||0), 0.002); end
  def test_lever_graphs_f2530; assert_in_delta(0.0, (worksheet.lever_graphs_f2530||0), 0.002); end
  def test_lever_graphs_g2530; assert_in_delta(0.0, (worksheet.lever_graphs_g2530||0), 0.002); end
  def test_lever_graphs_h2530; assert_in_delta(0.0, (worksheet.lever_graphs_h2530||0), 0.002); end
  def test_lever_graphs_i2530; assert_in_delta(0.0, (worksheet.lever_graphs_i2530||0), 0.002); end
  def test_lever_graphs_j2530; assert_in_delta(0.0, (worksheet.lever_graphs_j2530||0), 0.002); end
  def test_lever_graphs_k2530; assert_in_delta(0.0, (worksheet.lever_graphs_k2530||0), 0.002); end
  def test_lever_graphs_l2530; assert_in_delta(0.0, (worksheet.lever_graphs_l2530||0), 0.002); end
  def test_lever_graphs_m2530; assert_in_delta(0.0, (worksheet.lever_graphs_m2530||0), 0.002); end
  def test_lever_graphs_n2530; assert_in_delta(0.0, (worksheet.lever_graphs_n2530||0), 0.002); end
  def test_lever_graphs_o2530; assert_in_delta(0.0, (worksheet.lever_graphs_o2530||0), 0.002); end
  def test_lever_graphs_p2530; assert_in_delta(0.0, (worksheet.lever_graphs_p2530||0), 0.002); end
  def test_lever_graphs_q2530; assert_in_delta(0.0, (worksheet.lever_graphs_q2530||0), 0.002); end
  def test_lever_graphs_r2530; assert_in_delta(0.0, (worksheet.lever_graphs_r2530||0), 0.002); end
  def test_lever_graphs_s2530; assert_in_delta(0.0, (worksheet.lever_graphs_s2530||0), 0.002); end
  def test_lever_graphs_t2530; assert_in_delta(0.0, (worksheet.lever_graphs_t2530||0), 0.002); end
  def test_lever_graphs_u2530; assert_in_delta(0.0, (worksheet.lever_graphs_u2530||0), 0.002); end
  def test_lever_graphs_d2531; assert_equal("2050: Level 1", worksheet.lever_graphs_d2531); end
  def test_lever_graphs_e2531; assert_in_delta(0.0, (worksheet.lever_graphs_e2531||0), 0.002); end
  def test_lever_graphs_f2531; assert_in_delta(0.0, (worksheet.lever_graphs_f2531||0), 0.002); end
  def test_lever_graphs_g2531; assert_in_delta(0.0, (worksheet.lever_graphs_g2531||0), 0.002); end
  def test_lever_graphs_h2531; assert_in_delta(0.0, (worksheet.lever_graphs_h2531||0), 0.002); end
  def test_lever_graphs_i2531; assert_in_delta(0.0, (worksheet.lever_graphs_i2531||0), 0.002); end
  def test_lever_graphs_j2531; assert_in_delta(0.0, (worksheet.lever_graphs_j2531||0), 0.002); end
  def test_lever_graphs_k2531; assert_in_delta(0.0, (worksheet.lever_graphs_k2531||0), 0.002); end
  def test_lever_graphs_l2531; assert_in_delta(0.0, (worksheet.lever_graphs_l2531||0), 0.002); end
  def test_lever_graphs_m2531; assert_in_delta(0.0, (worksheet.lever_graphs_m2531||0), 0.002); end
  def test_lever_graphs_n2531; assert_in_delta(0.0, (worksheet.lever_graphs_n2531||0), 0.002); end
  def test_lever_graphs_o2531; assert_in_delta(0.0, (worksheet.lever_graphs_o2531||0), 0.002); end
  def test_lever_graphs_p2531; assert_in_delta(0.0, (worksheet.lever_graphs_p2531||0), 0.002); end
  def test_lever_graphs_q2531; assert_in_delta(0.0, (worksheet.lever_graphs_q2531||0), 0.002); end
  def test_lever_graphs_r2531; assert_in_delta(0.0, (worksheet.lever_graphs_r2531||0), 0.002); end
  def test_lever_graphs_s2531; assert_in_delta(0.05, worksheet.lever_graphs_s2531, 0.002); end
  def test_lever_graphs_t2531; assert_in_delta(0.0, (worksheet.lever_graphs_t2531||0), 0.002); end
  def test_lever_graphs_u2531; assert_in_delta(0.0, (worksheet.lever_graphs_u2531||0), 0.002); end
  def test_lever_graphs_d2532; assert_equal("2050: Level 2", worksheet.lever_graphs_d2532); end
  def test_lever_graphs_e2532; assert_in_delta(0.05, worksheet.lever_graphs_e2532, 0.002); end
  def test_lever_graphs_f2532; assert_in_delta(0.0, (worksheet.lever_graphs_f2532||0), 0.002); end
  def test_lever_graphs_g2532; assert_in_delta(0.0, (worksheet.lever_graphs_g2532||0), 0.002); end
  def test_lever_graphs_h2532; assert_in_delta(0.0, (worksheet.lever_graphs_h2532||0), 0.002); end
  def test_lever_graphs_i2532; assert_in_delta(0.025, worksheet.lever_graphs_i2532, 0.002); end
  def test_lever_graphs_j2532; assert_in_delta(0.025, worksheet.lever_graphs_j2532, 0.002); end
  def test_lever_graphs_k2532; assert_in_delta(0.025, worksheet.lever_graphs_k2532, 0.002); end
  def test_lever_graphs_l2532; assert_in_delta(0.05, worksheet.lever_graphs_l2532, 0.002); end
  def test_lever_graphs_m2532; assert_in_delta(0.075, worksheet.lever_graphs_m2532, 0.002); end
  def test_lever_graphs_n2532; assert_in_delta(0.075, worksheet.lever_graphs_n2532, 0.002); end
  def test_lever_graphs_o2532; assert_in_delta(0.05, worksheet.lever_graphs_o2532, 0.002); end
  def test_lever_graphs_p2532; assert_in_delta(0.2, worksheet.lever_graphs_p2532, 0.002); end
  def test_lever_graphs_q2532; assert_in_delta(0.2, worksheet.lever_graphs_q2532, 0.002); end
  def test_lever_graphs_r2532; assert_in_delta(0.2, worksheet.lever_graphs_r2532, 0.002); end
  def test_lever_graphs_s2532; assert_in_delta(0.09, worksheet.lever_graphs_s2532, 0.002); end
  def test_lever_graphs_t2532; assert_in_delta(0.2, worksheet.lever_graphs_t2532, 0.002); end
  def test_lever_graphs_u2532; assert_in_delta(0.0, (worksheet.lever_graphs_u2532||0), 0.002); end
  def test_lever_graphs_d2533; assert_equal("2050: Level 3", worksheet.lever_graphs_d2533); end
  def test_lever_graphs_e2533; assert_in_delta(0.07, worksheet.lever_graphs_e2533, 0.002); end
  def test_lever_graphs_f2533; assert_in_delta(0.0, (worksheet.lever_graphs_f2533||0), 0.002); end
  def test_lever_graphs_g2533; assert_in_delta(0.0, (worksheet.lever_graphs_g2533||0), 0.002); end
  def test_lever_graphs_h2533; assert_in_delta(0.0, (worksheet.lever_graphs_h2533||0), 0.002); end
  def test_lever_graphs_i2533; assert_in_delta(0.05, worksheet.lever_graphs_i2533, 0.002); end
  def test_lever_graphs_j2533; assert_in_delta(0.05, worksheet.lever_graphs_j2533, 0.002); end
  def test_lever_graphs_k2533; assert_in_delta(0.05, worksheet.lever_graphs_k2533, 0.002); end
  def test_lever_graphs_l2533; assert_in_delta(0.1, worksheet.lever_graphs_l2533, 0.002); end
  def test_lever_graphs_m2533; assert_in_delta(0.15, worksheet.lever_graphs_m2533, 0.002); end
  def test_lever_graphs_n2533; assert_in_delta(0.15, worksheet.lever_graphs_n2533, 0.002); end
  def test_lever_graphs_o2533; assert_in_delta(0.1, worksheet.lever_graphs_o2533, 0.002); end
  def test_lever_graphs_p2533; assert_in_delta(0.3, worksheet.lever_graphs_p2533, 0.002); end
  def test_lever_graphs_q2533; assert_in_delta(0.3, worksheet.lever_graphs_q2533, 0.002); end
  def test_lever_graphs_r2533; assert_in_delta(0.3, worksheet.lever_graphs_r2533, 0.002); end
  def test_lever_graphs_s2533; assert_in_delta(0.18, worksheet.lever_graphs_s2533, 0.002); end
  def test_lever_graphs_t2533; assert_in_delta(0.3, worksheet.lever_graphs_t2533, 0.002); end
  def test_lever_graphs_u2533; assert_in_delta(0.0, (worksheet.lever_graphs_u2533||0), 0.002); end
  def test_lever_graphs_d2534; assert_equal("2050: Level 4", worksheet.lever_graphs_d2534); end
  def test_lever_graphs_e2534; assert_in_delta(0.1, worksheet.lever_graphs_e2534, 0.002); end
  def test_lever_graphs_f2534; assert_in_delta(0.0, (worksheet.lever_graphs_f2534||0), 0.002); end
  def test_lever_graphs_g2534; assert_in_delta(0.0, (worksheet.lever_graphs_g2534||0), 0.002); end
  def test_lever_graphs_h2534; assert_in_delta(0.0, (worksheet.lever_graphs_h2534||0), 0.002); end
  def test_lever_graphs_i2534; assert_in_delta(0.1, worksheet.lever_graphs_i2534, 0.002); end
  def test_lever_graphs_j2534; assert_in_delta(0.1, worksheet.lever_graphs_j2534, 0.002); end
  def test_lever_graphs_k2534; assert_in_delta(0.1, worksheet.lever_graphs_k2534, 0.002); end
  def test_lever_graphs_l2534; assert_in_delta(0.2, worksheet.lever_graphs_l2534, 0.002); end
  def test_lever_graphs_m2534; assert_in_delta(0.3, worksheet.lever_graphs_m2534, 0.002); end
  def test_lever_graphs_n2534; assert_in_delta(0.3, worksheet.lever_graphs_n2534, 0.002); end
  def test_lever_graphs_o2534; assert_in_delta(0.2, worksheet.lever_graphs_o2534, 0.002); end
  def test_lever_graphs_p2534; assert_in_delta(0.4, worksheet.lever_graphs_p2534, 0.002); end
  def test_lever_graphs_q2534; assert_in_delta(0.4, worksheet.lever_graphs_q2534, 0.002); end
  def test_lever_graphs_r2534; assert_in_delta(0.4, worksheet.lever_graphs_r2534, 0.002); end
  def test_lever_graphs_s2534; assert_in_delta(0.3, worksheet.lever_graphs_s2534, 0.002); end
  def test_lever_graphs_t2534; assert_in_delta(0.4, worksheet.lever_graphs_t2534, 0.002); end
  def test_lever_graphs_u2534; assert_in_delta(0.0, (worksheet.lever_graphs_u2534||0), 0.002); end
  def test_lever_graphs_c2635; assert_equal("1975", worksheet.lever_graphs_c2635); end
  def test_lever_graphs_d2635; assert_equal("1980", worksheet.lever_graphs_d2635); end
  def test_lever_graphs_e2635; assert_equal("1985", worksheet.lever_graphs_e2635); end
  def test_lever_graphs_f2635; assert_equal("1990", worksheet.lever_graphs_f2635); end
  def test_lever_graphs_g2635; assert_equal("1995", worksheet.lever_graphs_g2635); end
  def test_lever_graphs_h2635; assert_equal("2000", worksheet.lever_graphs_h2635); end
  def test_lever_graphs_i2635; assert_equal("2005", worksheet.lever_graphs_i2635); end
  def test_lever_graphs_j2635; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2635, 0.002); end
  def test_lever_graphs_k2635; assert_equal("2011", worksheet.lever_graphs_k2635); end
  def test_lever_graphs_l2635; assert_equal("2015", worksheet.lever_graphs_l2635); end
  def test_lever_graphs_m2635; assert_equal("2020", worksheet.lever_graphs_m2635); end
  def test_lever_graphs_n2635; assert_equal("2025", worksheet.lever_graphs_n2635); end
  def test_lever_graphs_o2635; assert_equal("2030", worksheet.lever_graphs_o2635); end
  def test_lever_graphs_p2635; assert_equal("2035", worksheet.lever_graphs_p2635); end
  def test_lever_graphs_q2635; assert_equal("2040", worksheet.lever_graphs_q2635); end
  def test_lever_graphs_r2635; assert_equal("2045", worksheet.lever_graphs_r2635); end
  def test_lever_graphs_s2635; assert_equal("2050", worksheet.lever_graphs_s2635); end
  def test_lever_graphs_b2636; assert_equal("Historic data", worksheet.lever_graphs_b2636); end
  def test_lever_graphs_b2637; assert_in_delta(1.0, worksheet.lever_graphs_b2637, 0.002); end
  def test_lever_graphs_k2637; assert_in_delta(0.0, (worksheet.lever_graphs_k2637||0), 0.002); end
  def test_lever_graphs_l2637; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2637, 0.002); end
  def test_lever_graphs_m2637; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_m2637, 0.002); end
  def test_lever_graphs_n2637; assert_in_delta(0.0018315018315018315, worksheet.lever_graphs_n2637, 0.002); end
  def test_lever_graphs_o2637; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_o2637, 0.002); end
  def test_lever_graphs_p2637; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_p2637, 0.002); end
  def test_lever_graphs_q2637; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_q2637, 0.002); end
  def test_lever_graphs_r2637; assert_in_delta(0.0003663003663003663, worksheet.lever_graphs_r2637, 0.002); end
  def test_lever_graphs_s2637; assert_in_delta(0.0, (worksheet.lever_graphs_s2637||0), 0.002); end
  def test_lever_graphs_b2638; assert_in_epsilon(2.0, worksheet.lever_graphs_b2638, 0.002); end
  def test_lever_graphs_k2638; assert_in_delta(0.0, (worksheet.lever_graphs_k2638||0), 0.002); end
  def test_lever_graphs_l2638; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2638, 0.002); end
  def test_lever_graphs_m2638; assert_in_delta(0.0057692307692307696, worksheet.lever_graphs_m2638, 0.002); end
  def test_lever_graphs_n2638; assert_in_delta(0.008974358974358974, worksheet.lever_graphs_n2638, 0.002); end
  def test_lever_graphs_o2638; assert_in_delta(0.01217948717948718, worksheet.lever_graphs_o2638, 0.002); end
  def test_lever_graphs_p2638; assert_in_delta(0.015384615384615384, worksheet.lever_graphs_p2638, 0.002); end
  def test_lever_graphs_q2638; assert_in_delta(0.01858974358974359, worksheet.lever_graphs_q2638, 0.002); end
  def test_lever_graphs_r2638; assert_in_delta(0.021794871794871797, worksheet.lever_graphs_r2638, 0.002); end
  def test_lever_graphs_s2638; assert_in_delta(0.025, worksheet.lever_graphs_s2638, 0.002); end
  def test_lever_graphs_b2639; assert_in_epsilon(3.0, worksheet.lever_graphs_b2639, 0.002); end
  def test_lever_graphs_k2639; assert_in_delta(0.0, (worksheet.lever_graphs_k2639||0), 0.002); end
  def test_lever_graphs_l2639; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2639, 0.002); end
  def test_lever_graphs_m2639; assert_in_delta(0.009340659340659342, worksheet.lever_graphs_m2639, 0.002); end
  def test_lever_graphs_n2639; assert_in_delta(0.01611721611721612, worksheet.lever_graphs_n2639, 0.002); end
  def test_lever_graphs_o2639; assert_in_delta(0.0228937728937729, worksheet.lever_graphs_o2639, 0.002); end
  def test_lever_graphs_p2639; assert_in_delta(0.029670329670329676, worksheet.lever_graphs_p2639, 0.002); end
  def test_lever_graphs_q2639; assert_in_delta(0.03644688644688645, worksheet.lever_graphs_q2639, 0.002); end
  def test_lever_graphs_r2639; assert_in_delta(0.04322344322344323, worksheet.lever_graphs_r2639, 0.002); end
  def test_lever_graphs_s2639; assert_in_delta(0.05, worksheet.lever_graphs_s2639, 0.002); end
  def test_lever_graphs_b2640; assert_in_epsilon(4.0, worksheet.lever_graphs_b2640, 0.002); end
  def test_lever_graphs_k2640; assert_in_delta(0.0, (worksheet.lever_graphs_k2640||0), 0.002); end
  def test_lever_graphs_l2640; assert_in_delta(0.002564102564102564, worksheet.lever_graphs_l2640, 0.002); end
  def test_lever_graphs_m2640; assert_in_delta(0.016483516483516484, worksheet.lever_graphs_m2640, 0.002); end
  def test_lever_graphs_n2640; assert_in_delta(0.030402930402930402, worksheet.lever_graphs_n2640, 0.002); end
  def test_lever_graphs_o2640; assert_in_delta(0.04432234432234432, worksheet.lever_graphs_o2640, 0.002); end
  def test_lever_graphs_p2640; assert_in_delta(0.058241758241758236, worksheet.lever_graphs_p2640, 0.002); end
  def test_lever_graphs_q2640; assert_in_delta(0.07216117216117217, worksheet.lever_graphs_q2640, 0.002); end
  def test_lever_graphs_r2640; assert_in_delta(0.08608058608058608, worksheet.lever_graphs_r2640, 0.002); end
  def test_lever_graphs_s2640; assert_in_delta(0.1, worksheet.lever_graphs_s2640, 0.002); end
  def test_lever_graphs_c2663; assert_equal("1975", worksheet.lever_graphs_c2663); end
  def test_lever_graphs_d2663; assert_equal("1980", worksheet.lever_graphs_d2663); end
  def test_lever_graphs_e2663; assert_equal("1985", worksheet.lever_graphs_e2663); end
  def test_lever_graphs_f2663; assert_equal("1990", worksheet.lever_graphs_f2663); end
  def test_lever_graphs_g2663; assert_equal("1995", worksheet.lever_graphs_g2663); end
  def test_lever_graphs_h2663; assert_equal("2000", worksheet.lever_graphs_h2663); end
  def test_lever_graphs_i2663; assert_equal("2005", worksheet.lever_graphs_i2663); end
  def test_lever_graphs_j2663; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2663, 0.002); end
  def test_lever_graphs_k2663; assert_equal("2011", worksheet.lever_graphs_k2663); end
  def test_lever_graphs_l2663; assert_equal("2015", worksheet.lever_graphs_l2663); end
  def test_lever_graphs_m2663; assert_equal("2020", worksheet.lever_graphs_m2663); end
  def test_lever_graphs_n2663; assert_equal("2025", worksheet.lever_graphs_n2663); end
  def test_lever_graphs_o2663; assert_equal("2030", worksheet.lever_graphs_o2663); end
  def test_lever_graphs_p2663; assert_equal("2035", worksheet.lever_graphs_p2663); end
  def test_lever_graphs_q2663; assert_equal("2040", worksheet.lever_graphs_q2663); end
  def test_lever_graphs_r2663; assert_equal("2045", worksheet.lever_graphs_r2663); end
  def test_lever_graphs_s2663; assert_equal("2050", worksheet.lever_graphs_s2663); end
  def test_lever_graphs_b2664; assert_equal("Historic data", worksheet.lever_graphs_b2664); end
  def test_lever_graphs_b2665; assert_in_delta(1.0, worksheet.lever_graphs_b2665, 0.002); end
  def test_lever_graphs_k2665; assert_in_delta(0.0, (worksheet.lever_graphs_k2665||0), 0.002); end
  def test_lever_graphs_l2665; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2665, 0.002); end
  def test_lever_graphs_m2665; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2665, 0.002); end
  def test_lever_graphs_n2665; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2665, 0.002); end
  def test_lever_graphs_o2665; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2665, 0.002); end
  def test_lever_graphs_p2665; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2665, 0.002); end
  def test_lever_graphs_q2665; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2665, 0.002); end
  def test_lever_graphs_r2665; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2665, 0.002); end
  def test_lever_graphs_s2665; assert_in_delta(0.0, (worksheet.lever_graphs_s2665||0), 0.002); end
  def test_lever_graphs_b2666; assert_in_epsilon(2.0, worksheet.lever_graphs_b2666, 0.002); end
  def test_lever_graphs_k2666; assert_in_delta(0.0, (worksheet.lever_graphs_k2666||0), 0.002); end
  def test_lever_graphs_l2666; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2666, 0.002); end
  def test_lever_graphs_m2666; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2666, 0.002); end
  def test_lever_graphs_n2666; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2666, 0.002); end
  def test_lever_graphs_o2666; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2666, 0.002); end
  def test_lever_graphs_p2666; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2666, 0.002); end
  def test_lever_graphs_q2666; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2666, 0.002); end
  def test_lever_graphs_r2666; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2666, 0.002); end
  def test_lever_graphs_s2666; assert_in_delta(0.05, worksheet.lever_graphs_s2666, 0.002); end
  def test_lever_graphs_b2667; assert_in_epsilon(3.0, worksheet.lever_graphs_b2667, 0.002); end
  def test_lever_graphs_k2667; assert_in_delta(0.0, (worksheet.lever_graphs_k2667||0), 0.002); end
  def test_lever_graphs_l2667; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2667, 0.002); end
  def test_lever_graphs_m2667; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2667, 0.002); end
  def test_lever_graphs_n2667; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2667, 0.002); end
  def test_lever_graphs_o2667; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2667, 0.002); end
  def test_lever_graphs_p2667; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2667, 0.002); end
  def test_lever_graphs_q2667; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2667, 0.002); end
  def test_lever_graphs_r2667; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2667, 0.002); end
  def test_lever_graphs_s2667; assert_in_delta(0.1, worksheet.lever_graphs_s2667, 0.002); end
  def test_lever_graphs_b2668; assert_in_epsilon(4.0, worksheet.lever_graphs_b2668, 0.002); end
  def test_lever_graphs_k2668; assert_in_delta(0.0, (worksheet.lever_graphs_k2668||0), 0.002); end
  def test_lever_graphs_l2668; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2668, 0.002); end
  def test_lever_graphs_m2668; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2668, 0.002); end
  def test_lever_graphs_n2668; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2668, 0.002); end
  def test_lever_graphs_o2668; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2668, 0.002); end
  def test_lever_graphs_p2668; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2668, 0.002); end
  def test_lever_graphs_q2668; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2668, 0.002); end
  def test_lever_graphs_r2668; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2668, 0.002); end
  def test_lever_graphs_s2668; assert_in_delta(0.2, worksheet.lever_graphs_s2668, 0.002); end
  def test_lever_graphs_c2701; assert_equal("1975", worksheet.lever_graphs_c2701); end
  def test_lever_graphs_d2701; assert_equal("1980", worksheet.lever_graphs_d2701); end
  def test_lever_graphs_e2701; assert_equal("1985", worksheet.lever_graphs_e2701); end
  def test_lever_graphs_f2701; assert_equal("1990", worksheet.lever_graphs_f2701); end
  def test_lever_graphs_g2701; assert_equal("1995", worksheet.lever_graphs_g2701); end
  def test_lever_graphs_h2701; assert_equal("2000", worksheet.lever_graphs_h2701); end
  def test_lever_graphs_i2701; assert_equal("2005", worksheet.lever_graphs_i2701); end
  def test_lever_graphs_j2701; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2701, 0.002); end
  def test_lever_graphs_k2701; assert_equal("2011", worksheet.lever_graphs_k2701); end
  def test_lever_graphs_l2701; assert_equal("2015", worksheet.lever_graphs_l2701); end
  def test_lever_graphs_m2701; assert_equal("2020", worksheet.lever_graphs_m2701); end
  def test_lever_graphs_n2701; assert_equal("2025", worksheet.lever_graphs_n2701); end
  def test_lever_graphs_o2701; assert_equal("2030", worksheet.lever_graphs_o2701); end
  def test_lever_graphs_p2701; assert_equal("2035", worksheet.lever_graphs_p2701); end
  def test_lever_graphs_q2701; assert_equal("2040", worksheet.lever_graphs_q2701); end
  def test_lever_graphs_r2701; assert_equal("2045", worksheet.lever_graphs_r2701); end
  def test_lever_graphs_s2701; assert_equal("2050", worksheet.lever_graphs_s2701); end
  def test_lever_graphs_b2702; assert_equal("Historic data", worksheet.lever_graphs_b2702); end
  def test_lever_graphs_b2703; assert_in_delta(1.0, worksheet.lever_graphs_b2703, 0.002); end
  def test_lever_graphs_k2703; assert_in_delta(0.0, (worksheet.lever_graphs_k2703||0), 0.002); end
  def test_lever_graphs_l2703; assert_in_delta(0.0, (worksheet.lever_graphs_l2703||0), 0.002); end
  def test_lever_graphs_m2703; assert_in_delta(0.0, (worksheet.lever_graphs_m2703||0), 0.002); end
  def test_lever_graphs_n2703; assert_in_delta(0.0, (worksheet.lever_graphs_n2703||0), 0.002); end
  def test_lever_graphs_o2703; assert_in_delta(0.0, (worksheet.lever_graphs_o2703||0), 0.002); end
  def test_lever_graphs_p2703; assert_in_delta(0.0, (worksheet.lever_graphs_p2703||0), 0.002); end
  def test_lever_graphs_q2703; assert_in_delta(0.0, (worksheet.lever_graphs_q2703||0), 0.002); end
  def test_lever_graphs_r2703; assert_in_delta(0.0, (worksheet.lever_graphs_r2703||0), 0.002); end
  def test_lever_graphs_s2703; assert_in_delta(0.0, (worksheet.lever_graphs_s2703||0), 0.002); end
  def test_lever_graphs_b2704; assert_in_epsilon(2.0, worksheet.lever_graphs_b2704, 0.002); end
  def test_lever_graphs_k2704; assert_in_delta(0.0, (worksheet.lever_graphs_k2704||0), 0.002); end
  def test_lever_graphs_l2704; assert_in_delta(0.0, (worksheet.lever_graphs_l2704||0), 0.002); end
  def test_lever_graphs_m2704; assert_in_delta(0.0, (worksheet.lever_graphs_m2704||0), 0.002); end
  def test_lever_graphs_n2704; assert_in_delta(0.0, (worksheet.lever_graphs_n2704||0), 0.002); end
  def test_lever_graphs_o2704; assert_in_delta(0.0, (worksheet.lever_graphs_o2704||0), 0.002); end
  def test_lever_graphs_p2704; assert_in_delta(0.0, (worksheet.lever_graphs_p2704||0), 0.002); end
  def test_lever_graphs_q2704; assert_in_delta(0.0, (worksheet.lever_graphs_q2704||0), 0.002); end
  def test_lever_graphs_r2704; assert_in_delta(0.0, (worksheet.lever_graphs_r2704||0), 0.002); end
  def test_lever_graphs_s2704; assert_in_delta(0.0, (worksheet.lever_graphs_s2704||0), 0.002); end
  def test_lever_graphs_b2705; assert_in_epsilon(3.0, worksheet.lever_graphs_b2705, 0.002); end
  def test_lever_graphs_k2705; assert_in_delta(0.0, (worksheet.lever_graphs_k2705||0), 0.002); end
  def test_lever_graphs_l2705; assert_in_delta(0.0, (worksheet.lever_graphs_l2705||0), 0.002); end
  def test_lever_graphs_m2705; assert_in_delta(0.0, (worksheet.lever_graphs_m2705||0), 0.002); end
  def test_lever_graphs_n2705; assert_in_delta(0.0, (worksheet.lever_graphs_n2705||0), 0.002); end
  def test_lever_graphs_o2705; assert_in_delta(0.0, (worksheet.lever_graphs_o2705||0), 0.002); end
  def test_lever_graphs_p2705; assert_in_delta(0.0, (worksheet.lever_graphs_p2705||0), 0.002); end
  def test_lever_graphs_q2705; assert_in_delta(0.0, (worksheet.lever_graphs_q2705||0), 0.002); end
  def test_lever_graphs_r2705; assert_in_delta(0.0, (worksheet.lever_graphs_r2705||0), 0.002); end
  def test_lever_graphs_s2705; assert_in_delta(0.0, (worksheet.lever_graphs_s2705||0), 0.002); end
  def test_lever_graphs_b2706; assert_in_epsilon(4.0, worksheet.lever_graphs_b2706, 0.002); end
  def test_lever_graphs_k2706; assert_in_delta(0.0, (worksheet.lever_graphs_k2706||0), 0.002); end
  def test_lever_graphs_l2706; assert_in_delta(0.0, (worksheet.lever_graphs_l2706||0), 0.002); end
  def test_lever_graphs_m2706; assert_in_delta(0.0, (worksheet.lever_graphs_m2706||0), 0.002); end
  def test_lever_graphs_n2706; assert_in_delta(0.0, (worksheet.lever_graphs_n2706||0), 0.002); end
  def test_lever_graphs_o2706; assert_in_delta(0.0, (worksheet.lever_graphs_o2706||0), 0.002); end
  def test_lever_graphs_p2706; assert_in_delta(0.0, (worksheet.lever_graphs_p2706||0), 0.002); end
  def test_lever_graphs_q2706; assert_in_delta(0.0, (worksheet.lever_graphs_q2706||0), 0.002); end
  def test_lever_graphs_r2706; assert_in_delta(0.0, (worksheet.lever_graphs_r2706||0), 0.002); end
  def test_lever_graphs_s2706; assert_in_delta(0.0, (worksheet.lever_graphs_s2706||0), 0.002); end
  def test_lever_graphs_c2691; assert_equal("1975", worksheet.lever_graphs_c2691); end
  def test_lever_graphs_d2691; assert_equal("1980", worksheet.lever_graphs_d2691); end
  def test_lever_graphs_e2691; assert_equal("1985", worksheet.lever_graphs_e2691); end
  def test_lever_graphs_f2691; assert_equal("1990", worksheet.lever_graphs_f2691); end
  def test_lever_graphs_g2691; assert_equal("1995", worksheet.lever_graphs_g2691); end
  def test_lever_graphs_h2691; assert_equal("2000", worksheet.lever_graphs_h2691); end
  def test_lever_graphs_i2691; assert_equal("2005", worksheet.lever_graphs_i2691); end
  def test_lever_graphs_j2691; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2691, 0.002); end
  def test_lever_graphs_k2691; assert_equal("2011", worksheet.lever_graphs_k2691); end
  def test_lever_graphs_l2691; assert_equal("2015", worksheet.lever_graphs_l2691); end
  def test_lever_graphs_m2691; assert_equal("2020", worksheet.lever_graphs_m2691); end
  def test_lever_graphs_n2691; assert_equal("2025", worksheet.lever_graphs_n2691); end
  def test_lever_graphs_o2691; assert_equal("2030", worksheet.lever_graphs_o2691); end
  def test_lever_graphs_p2691; assert_equal("2035", worksheet.lever_graphs_p2691); end
  def test_lever_graphs_q2691; assert_equal("2040", worksheet.lever_graphs_q2691); end
  def test_lever_graphs_r2691; assert_equal("2045", worksheet.lever_graphs_r2691); end
  def test_lever_graphs_s2691; assert_equal("2050", worksheet.lever_graphs_s2691); end
  def test_lever_graphs_b2692; assert_equal("Historic data", worksheet.lever_graphs_b2692); end
  def test_lever_graphs_b2693; assert_in_delta(1.0, worksheet.lever_graphs_b2693, 0.002); end
  def test_lever_graphs_k2693; assert_in_delta(0.0, (worksheet.lever_graphs_k2693||0), 0.002); end
  def test_lever_graphs_l2693; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2693, 0.002); end
  def test_lever_graphs_m2693; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2693, 0.002); end
  def test_lever_graphs_n2693; assert_in_delta(0.014652014652014652, worksheet.lever_graphs_n2693, 0.002); end
  def test_lever_graphs_o2693; assert_in_delta(0.011721611721611722, worksheet.lever_graphs_o2693, 0.002); end
  def test_lever_graphs_p2693; assert_in_delta(0.008791208791208791, worksheet.lever_graphs_p2693, 0.002); end
  def test_lever_graphs_q2693; assert_in_delta(0.005860805860805861, worksheet.lever_graphs_q2693, 0.002); end
  def test_lever_graphs_r2693; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_r2693, 0.002); end
  def test_lever_graphs_s2693; assert_in_delta(0.0, (worksheet.lever_graphs_s2693||0), 0.002); end
  def test_lever_graphs_b2694; assert_in_epsilon(2.0, worksheet.lever_graphs_b2694, 0.002); end
  def test_lever_graphs_k2694; assert_in_delta(0.0, (worksheet.lever_graphs_k2694||0), 0.002); end
  def test_lever_graphs_l2694; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2694, 0.002); end
  def test_lever_graphs_m2694; assert_in_delta(0.046153846153846156, worksheet.lever_graphs_m2694, 0.002); end
  def test_lever_graphs_n2694; assert_in_delta(0.07179487179487179, worksheet.lever_graphs_n2694, 0.002); end
  def test_lever_graphs_o2694; assert_in_delta(0.09743589743589744, worksheet.lever_graphs_o2694, 0.002); end
  def test_lever_graphs_p2694; assert_in_delta(0.12307692307692307, worksheet.lever_graphs_p2694, 0.002); end
  def test_lever_graphs_q2694; assert_in_delta(0.14871794871794872, worksheet.lever_graphs_q2694, 0.002); end
  def test_lever_graphs_r2694; assert_in_delta(0.17435897435897438, worksheet.lever_graphs_r2694, 0.002); end
  def test_lever_graphs_s2694; assert_in_delta(0.2, worksheet.lever_graphs_s2694, 0.002); end
  def test_lever_graphs_b2695; assert_in_epsilon(3.0, worksheet.lever_graphs_b2695, 0.002); end
  def test_lever_graphs_k2695; assert_in_delta(0.0, (worksheet.lever_graphs_k2695||0), 0.002); end
  def test_lever_graphs_l2695; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2695, 0.002); end
  def test_lever_graphs_m2695; assert_in_delta(0.06043956043956045, worksheet.lever_graphs_m2695, 0.002); end
  def test_lever_graphs_n2695; assert_in_delta(0.10036630036630037, worksheet.lever_graphs_n2695, 0.002); end
  def test_lever_graphs_o2695; assert_in_delta(0.1402930402930403, worksheet.lever_graphs_o2695, 0.002); end
  def test_lever_graphs_p2695; assert_in_delta(0.18021978021978025, worksheet.lever_graphs_p2695, 0.002); end
  def test_lever_graphs_q2695; assert_in_delta(0.22014652014652017, worksheet.lever_graphs_q2695, 0.002); end
  def test_lever_graphs_r2695; assert_in_delta(0.2600732600732601, worksheet.lever_graphs_r2695, 0.002); end
  def test_lever_graphs_s2695; assert_in_delta(0.3, worksheet.lever_graphs_s2695, 0.002); end
  def test_lever_graphs_b2696; assert_in_epsilon(4.0, worksheet.lever_graphs_b2696, 0.002); end
  def test_lever_graphs_k2696; assert_in_delta(0.0, (worksheet.lever_graphs_k2696||0), 0.002); end
  def test_lever_graphs_l2696; assert_in_delta(0.020512820512820513, worksheet.lever_graphs_l2696, 0.002); end
  def test_lever_graphs_m2696; assert_in_delta(0.07472527472527474, worksheet.lever_graphs_m2696, 0.002); end
  def test_lever_graphs_n2696; assert_in_delta(0.12893772893772895, worksheet.lever_graphs_n2696, 0.002); end
  def test_lever_graphs_o2696; assert_in_delta(0.1831501831501832, worksheet.lever_graphs_o2696, 0.002); end
  def test_lever_graphs_p2696; assert_in_delta(0.2373626373626374, worksheet.lever_graphs_p2696, 0.002); end
  def test_lever_graphs_q2696; assert_in_delta(0.2915750915750916, worksheet.lever_graphs_q2696, 0.002); end
  def test_lever_graphs_r2696; assert_in_delta(0.34578754578754584, worksheet.lever_graphs_r2696, 0.002); end
  def test_lever_graphs_s2696; assert_in_delta(0.4, worksheet.lever_graphs_s2696, 0.002); end
  def test_lever_graphs_c2625; assert_equal("1975", worksheet.lever_graphs_c2625); end
  def test_lever_graphs_d2625; assert_equal("1980", worksheet.lever_graphs_d2625); end
  def test_lever_graphs_e2625; assert_equal("1985", worksheet.lever_graphs_e2625); end
  def test_lever_graphs_f2625; assert_equal("1990", worksheet.lever_graphs_f2625); end
  def test_lever_graphs_g2625; assert_equal("1995", worksheet.lever_graphs_g2625); end
  def test_lever_graphs_h2625; assert_equal("2000", worksheet.lever_graphs_h2625); end
  def test_lever_graphs_i2625; assert_equal("2005", worksheet.lever_graphs_i2625); end
  def test_lever_graphs_j2625; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2625, 0.002); end
  def test_lever_graphs_k2625; assert_equal("2011", worksheet.lever_graphs_k2625); end
  def test_lever_graphs_l2625; assert_equal("2015", worksheet.lever_graphs_l2625); end
  def test_lever_graphs_m2625; assert_equal("2020", worksheet.lever_graphs_m2625); end
  def test_lever_graphs_n2625; assert_equal("2025", worksheet.lever_graphs_n2625); end
  def test_lever_graphs_o2625; assert_equal("2030", worksheet.lever_graphs_o2625); end
  def test_lever_graphs_p2625; assert_equal("2035", worksheet.lever_graphs_p2625); end
  def test_lever_graphs_q2625; assert_equal("2040", worksheet.lever_graphs_q2625); end
  def test_lever_graphs_r2625; assert_equal("2045", worksheet.lever_graphs_r2625); end
  def test_lever_graphs_s2625; assert_equal("2050", worksheet.lever_graphs_s2625); end
  def test_lever_graphs_b2626; assert_equal("Historic data", worksheet.lever_graphs_b2626); end
  def test_lever_graphs_b2627; assert_in_delta(1.0, worksheet.lever_graphs_b2627, 0.002); end
  def test_lever_graphs_k2627; assert_in_delta(0.0, (worksheet.lever_graphs_k2627||0), 0.002); end
  def test_lever_graphs_l2627; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2627, 0.002); end
  def test_lever_graphs_m2627; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2627, 0.002); end
  def test_lever_graphs_n2627; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2627, 0.002); end
  def test_lever_graphs_o2627; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2627, 0.002); end
  def test_lever_graphs_p2627; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2627, 0.002); end
  def test_lever_graphs_q2627; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2627, 0.002); end
  def test_lever_graphs_r2627; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2627, 0.002); end
  def test_lever_graphs_s2627; assert_in_delta(0.0, (worksheet.lever_graphs_s2627||0), 0.002); end
  def test_lever_graphs_b2628; assert_in_epsilon(2.0, worksheet.lever_graphs_b2628, 0.002); end
  def test_lever_graphs_k2628; assert_in_delta(0.0, (worksheet.lever_graphs_k2628||0), 0.002); end
  def test_lever_graphs_l2628; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2628, 0.002); end
  def test_lever_graphs_m2628; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2628, 0.002); end
  def test_lever_graphs_n2628; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2628, 0.002); end
  def test_lever_graphs_o2628; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2628, 0.002); end
  def test_lever_graphs_p2628; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2628, 0.002); end
  def test_lever_graphs_q2628; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2628, 0.002); end
  def test_lever_graphs_r2628; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2628, 0.002); end
  def test_lever_graphs_s2628; assert_in_delta(0.05, worksheet.lever_graphs_s2628, 0.002); end
  def test_lever_graphs_b2629; assert_in_epsilon(3.0, worksheet.lever_graphs_b2629, 0.002); end
  def test_lever_graphs_k2629; assert_in_delta(0.0, (worksheet.lever_graphs_k2629||0), 0.002); end
  def test_lever_graphs_l2629; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2629, 0.002); end
  def test_lever_graphs_m2629; assert_in_delta(0.014395604395604396, worksheet.lever_graphs_m2629, 0.002); end
  def test_lever_graphs_n2629; assert_in_delta(0.023663003663003664, worksheet.lever_graphs_n2629, 0.002); end
  def test_lever_graphs_o2629; assert_in_delta(0.03293040293040293, worksheet.lever_graphs_o2629, 0.002); end
  def test_lever_graphs_p2629; assert_in_delta(0.042197802197802205, worksheet.lever_graphs_p2629, 0.002); end
  def test_lever_graphs_q2629; assert_in_delta(0.05146520146520148, worksheet.lever_graphs_q2629, 0.002); end
  def test_lever_graphs_r2629; assert_in_delta(0.06073260073260074, worksheet.lever_graphs_r2629, 0.002); end
  def test_lever_graphs_s2629; assert_in_delta(0.07, worksheet.lever_graphs_s2629, 0.002); end
  def test_lever_graphs_b2630; assert_in_epsilon(4.0, worksheet.lever_graphs_b2630, 0.002); end
  def test_lever_graphs_k2630; assert_in_delta(0.0, (worksheet.lever_graphs_k2630||0), 0.002); end
  def test_lever_graphs_l2630; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2630, 0.002); end
  def test_lever_graphs_m2630; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2630, 0.002); end
  def test_lever_graphs_n2630; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2630, 0.002); end
  def test_lever_graphs_o2630; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2630, 0.002); end
  def test_lever_graphs_p2630; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2630, 0.002); end
  def test_lever_graphs_q2630; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2630, 0.002); end
  def test_lever_graphs_r2630; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2630, 0.002); end
  def test_lever_graphs_s2630; assert_in_delta(0.1, worksheet.lever_graphs_s2630, 0.002); end
  def test_lever_graphs_c2604; assert_equal("1975", worksheet.lever_graphs_c2604); end
  def test_lever_graphs_d2604; assert_equal("1980", worksheet.lever_graphs_d2604); end
  def test_lever_graphs_e2604; assert_equal("1985", worksheet.lever_graphs_e2604); end
  def test_lever_graphs_f2604; assert_equal("1990", worksheet.lever_graphs_f2604); end
  def test_lever_graphs_g2604; assert_equal("1995", worksheet.lever_graphs_g2604); end
  def test_lever_graphs_h2604; assert_equal("2000", worksheet.lever_graphs_h2604); end
  def test_lever_graphs_i2604; assert_equal("2005", worksheet.lever_graphs_i2604); end
  def test_lever_graphs_j2604; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2604, 0.002); end
  def test_lever_graphs_k2604; assert_equal("2011", worksheet.lever_graphs_k2604); end
  def test_lever_graphs_l2604; assert_equal("2015", worksheet.lever_graphs_l2604); end
  def test_lever_graphs_m2604; assert_equal("2020", worksheet.lever_graphs_m2604); end
  def test_lever_graphs_n2604; assert_equal("2025", worksheet.lever_graphs_n2604); end
  def test_lever_graphs_o2604; assert_equal("2030", worksheet.lever_graphs_o2604); end
  def test_lever_graphs_p2604; assert_equal("2035", worksheet.lever_graphs_p2604); end
  def test_lever_graphs_q2604; assert_equal("2040", worksheet.lever_graphs_q2604); end
  def test_lever_graphs_r2604; assert_equal("2045", worksheet.lever_graphs_r2604); end
  def test_lever_graphs_s2604; assert_equal("2050", worksheet.lever_graphs_s2604); end
  def test_lever_graphs_b2605; assert_equal("Historic data", worksheet.lever_graphs_b2605); end
  def test_lever_graphs_b2606; assert_in_delta(1.0, worksheet.lever_graphs_b2606, 0.002); end
  def test_lever_graphs_k2606; assert_in_delta(0.0, (worksheet.lever_graphs_k2606||0), 0.002); end
  def test_lever_graphs_l2606; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2606, 0.002); end
  def test_lever_graphs_m2606; assert_in_delta(0.0032967032967032967, worksheet.lever_graphs_m2606, 0.002); end
  def test_lever_graphs_n2606; assert_in_delta(0.002747252747252747, worksheet.lever_graphs_n2606, 0.002); end
  def test_lever_graphs_o2606; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_o2606, 0.002); end
  def test_lever_graphs_p2606; assert_in_delta(0.0016483516483516484, worksheet.lever_graphs_p2606, 0.002); end
  def test_lever_graphs_q2606; assert_in_delta(0.001098901098901099, worksheet.lever_graphs_q2606, 0.002); end
  def test_lever_graphs_r2606; assert_in_delta(0.0005494505494505495, worksheet.lever_graphs_r2606, 0.002); end
  def test_lever_graphs_s2606; assert_in_delta(0.0, (worksheet.lever_graphs_s2606||0), 0.002); end
  def test_lever_graphs_b2607; assert_in_epsilon(2.0, worksheet.lever_graphs_b2607, 0.002); end
  def test_lever_graphs_k2607; assert_in_delta(0.0, (worksheet.lever_graphs_k2607||0), 0.002); end
  def test_lever_graphs_l2607; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2607, 0.002); end
  def test_lever_graphs_m2607; assert_in_delta(0.008653846153846154, worksheet.lever_graphs_m2607, 0.002); end
  def test_lever_graphs_n2607; assert_in_delta(0.01346153846153846, worksheet.lever_graphs_n2607, 0.002); end
  def test_lever_graphs_o2607; assert_in_delta(0.01826923076923077, worksheet.lever_graphs_o2607, 0.002); end
  def test_lever_graphs_p2607; assert_in_delta(0.023076923076923075, worksheet.lever_graphs_p2607, 0.002); end
  def test_lever_graphs_q2607; assert_in_delta(0.027884615384615383, worksheet.lever_graphs_q2607, 0.002); end
  def test_lever_graphs_r2607; assert_in_delta(0.032692307692307694, worksheet.lever_graphs_r2607, 0.002); end
  def test_lever_graphs_s2607; assert_in_delta(0.037500000000000006, worksheet.lever_graphs_s2607, 0.002); end
  def test_lever_graphs_b2608; assert_in_epsilon(3.0, worksheet.lever_graphs_b2608, 0.002); end
  def test_lever_graphs_k2608; assert_in_delta(0.0, (worksheet.lever_graphs_k2608||0), 0.002); end
  def test_lever_graphs_l2608; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2608, 0.002); end
  def test_lever_graphs_m2608; assert_in_delta(0.011868131868131869, worksheet.lever_graphs_m2608, 0.002); end
  def test_lever_graphs_n2608; assert_in_delta(0.01989010989010989, worksheet.lever_graphs_n2608, 0.002); end
  def test_lever_graphs_o2608; assert_in_delta(0.027912087912087914, worksheet.lever_graphs_o2608, 0.002); end
  def test_lever_graphs_p2608; assert_in_delta(0.03593406593406594, worksheet.lever_graphs_p2608, 0.002); end
  def test_lever_graphs_q2608; assert_in_delta(0.043956043956043966, worksheet.lever_graphs_q2608, 0.002); end
  def test_lever_graphs_r2608; assert_in_delta(0.05197802197802198, worksheet.lever_graphs_r2608, 0.002); end
  def test_lever_graphs_s2608; assert_in_delta(0.060000000000000005, worksheet.lever_graphs_s2608, 0.002); end
  def test_lever_graphs_b2609; assert_in_epsilon(4.0, worksheet.lever_graphs_b2609, 0.002); end
  def test_lever_graphs_k2609; assert_in_delta(0.0, (worksheet.lever_graphs_k2609||0), 0.002); end
  def test_lever_graphs_l2609; assert_in_delta(0.0038461538461538464, worksheet.lever_graphs_l2609, 0.002); end
  def test_lever_graphs_m2609; assert_in_delta(0.017582417582417582, worksheet.lever_graphs_m2609, 0.002); end
  def test_lever_graphs_n2609; assert_in_delta(0.03131868131868132, worksheet.lever_graphs_n2609, 0.002); end
  def test_lever_graphs_o2609; assert_in_delta(0.04505494505494506, worksheet.lever_graphs_o2609, 0.002); end
  def test_lever_graphs_p2609; assert_in_delta(0.05879120879120879, worksheet.lever_graphs_p2609, 0.002); end
  def test_lever_graphs_q2609; assert_in_delta(0.07252747252747253, worksheet.lever_graphs_q2609, 0.002); end
  def test_lever_graphs_r2609; assert_in_delta(0.08626373626373626, worksheet.lever_graphs_r2609, 0.002); end
  def test_lever_graphs_s2609; assert_in_delta(0.1, worksheet.lever_graphs_s2609, 0.002); end
  def test_lever_graphs_c2231; assert_equal("1975", worksheet.lever_graphs_c2231); end
  def test_lever_graphs_d2231; assert_equal("1980", worksheet.lever_graphs_d2231); end
  def test_lever_graphs_e2231; assert_equal("1985", worksheet.lever_graphs_e2231); end
  def test_lever_graphs_f2231; assert_equal("1990", worksheet.lever_graphs_f2231); end
  def test_lever_graphs_g2231; assert_equal("1995", worksheet.lever_graphs_g2231); end
  def test_lever_graphs_h2231; assert_equal("2000", worksheet.lever_graphs_h2231); end
  def test_lever_graphs_i2231; assert_equal("2005", worksheet.lever_graphs_i2231); end
  def test_lever_graphs_j2231; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2231, 0.002); end
  def test_lever_graphs_k2231; assert_equal("2011", worksheet.lever_graphs_k2231); end
  def test_lever_graphs_l2231; assert_equal("2015", worksheet.lever_graphs_l2231); end
  def test_lever_graphs_m2231; assert_equal("2020", worksheet.lever_graphs_m2231); end
  def test_lever_graphs_n2231; assert_equal("2025", worksheet.lever_graphs_n2231); end
  def test_lever_graphs_o2231; assert_equal("2030", worksheet.lever_graphs_o2231); end
  def test_lever_graphs_p2231; assert_equal("2035", worksheet.lever_graphs_p2231); end
  def test_lever_graphs_q2231; assert_equal("2040", worksheet.lever_graphs_q2231); end
  def test_lever_graphs_r2231; assert_equal("2045", worksheet.lever_graphs_r2231); end
  def test_lever_graphs_s2231; assert_equal("2050", worksheet.lever_graphs_s2231); end
  def test_lever_graphs_b2232; assert_equal("Historic data", worksheet.lever_graphs_b2232); end
  def test_lever_graphs_b2233; assert_in_delta(1.0, worksheet.lever_graphs_b2233, 0.002); end
  def test_lever_graphs_k2233; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2233, 0.002); end
  def test_lever_graphs_l2233; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2233, 0.002); end
  def test_lever_graphs_m2233; assert_in_epsilon(12.569076390371949, worksheet.lever_graphs_m2233, 0.002); end
  def test_lever_graphs_n2233; assert_in_epsilon(12.55082065124287, worksheet.lever_graphs_n2233, 0.002); end
  def test_lever_graphs_o2233; assert_in_epsilon(12.532564912113788, worksheet.lever_graphs_o2233, 0.002); end
  def test_lever_graphs_p2233; assert_in_epsilon(12.514309172984708, worksheet.lever_graphs_p2233, 0.002); end
  def test_lever_graphs_q2233; assert_in_epsilon(12.496053433855627, worksheet.lever_graphs_q2233, 0.002); end
  def test_lever_graphs_r2233; assert_in_epsilon(12.477797694726547, worksheet.lever_graphs_r2233, 0.002); end
  def test_lever_graphs_s2233; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_s2233, 0.002); end
  def test_lever_graphs_b2234; assert_in_epsilon(2.0, worksheet.lever_graphs_b2234, 0.002); end
  def test_lever_graphs_k2234; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2234, 0.002); end
  def test_lever_graphs_l2234; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2234, 0.002); end
  def test_lever_graphs_m2234; assert_in_epsilon(12.747069846880485, worksheet.lever_graphs_m2234, 0.002); end
  def test_lever_graphs_n2234; assert_in_epsilon(12.906807564259939, worksheet.lever_graphs_n2234, 0.002); end
  def test_lever_graphs_o2234; assert_in_epsilon(13.066545281639394, worksheet.lever_graphs_o2234, 0.002); end
  def test_lever_graphs_p2234; assert_in_epsilon(13.22628299901885, worksheet.lever_graphs_p2234, 0.002); end
  def test_lever_graphs_q2234; assert_in_epsilon(13.386020716398304, worksheet.lever_graphs_q2234, 0.002); end
  def test_lever_graphs_r2234; assert_in_epsilon(13.545758433777758, worksheet.lever_graphs_r2234, 0.002); end
  def test_lever_graphs_s2234; assert_in_epsilon(13.705496151157213, worksheet.lever_graphs_s2234, 0.002); end
  def test_lever_graphs_b2235; assert_in_epsilon(3.0, worksheet.lever_graphs_b2235, 0.002); end
  def test_lever_graphs_k2235; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2235, 0.002); end
  def test_lever_graphs_l2235; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2235, 0.002); end
  def test_lever_graphs_m2235; assert_in_epsilon(12.92506330338902, worksheet.lever_graphs_m2235, 0.002); end
  def test_lever_graphs_n2235; assert_in_epsilon(13.26279447727701, worksheet.lever_graphs_n2235, 0.002); end
  def test_lever_graphs_o2235; assert_in_epsilon(13.600525651165, worksheet.lever_graphs_o2235, 0.002); end
  def test_lever_graphs_p2235; assert_in_epsilon(13.938256825052989, worksheet.lever_graphs_p2235, 0.002); end
  def test_lever_graphs_q2235; assert_in_epsilon(14.275987998940979, worksheet.lever_graphs_q2235, 0.002); end
  def test_lever_graphs_r2235; assert_in_epsilon(14.613719172828969, worksheet.lever_graphs_r2235, 0.002); end
  def test_lever_graphs_s2235; assert_in_epsilon(14.951450346716959, worksheet.lever_graphs_s2235, 0.002); end
  def test_lever_graphs_b2236; assert_in_epsilon(4.0, worksheet.lever_graphs_b2236, 0.002); end
  def test_lever_graphs_k2236; assert_in_epsilon(12.459541955597466, worksheet.lever_graphs_k2236, 0.002); end
  def test_lever_graphs_l2236; assert_in_epsilon(12.58733212950103, worksheet.lever_graphs_l2236, 0.002); end
  def test_lever_graphs_m2236; assert_in_epsilon(13.103056759897555, worksheet.lever_graphs_m2236, 0.002); end
  def test_lever_graphs_n2236; assert_in_epsilon(13.618781390294082, worksheet.lever_graphs_n2236, 0.002); end
  def test_lever_graphs_o2236; assert_in_epsilon(14.134506020690607, worksheet.lever_graphs_o2236, 0.002); end
  def test_lever_graphs_p2236; assert_in_epsilon(14.650230651087131, worksheet.lever_graphs_p2236, 0.002); end
  def test_lever_graphs_q2236; assert_in_epsilon(15.165955281483658, worksheet.lever_graphs_q2236, 0.002); end
  def test_lever_graphs_r2236; assert_in_epsilon(15.681679911880183, worksheet.lever_graphs_r2236, 0.002); end
  def test_lever_graphs_s2236; assert_in_epsilon(16.197404542276708, worksheet.lever_graphs_s2236, 0.002); end
  def test_lever_graphs_c2241; assert_equal("1975", worksheet.lever_graphs_c2241); end
  def test_lever_graphs_d2241; assert_equal("1980", worksheet.lever_graphs_d2241); end
  def test_lever_graphs_e2241; assert_equal("1985", worksheet.lever_graphs_e2241); end
  def test_lever_graphs_f2241; assert_equal("1990", worksheet.lever_graphs_f2241); end
  def test_lever_graphs_g2241; assert_equal("1995", worksheet.lever_graphs_g2241); end
  def test_lever_graphs_h2241; assert_equal("2000", worksheet.lever_graphs_h2241); end
  def test_lever_graphs_i2241; assert_equal("2005", worksheet.lever_graphs_i2241); end
  def test_lever_graphs_j2241; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2241, 0.002); end
  def test_lever_graphs_k2241; assert_equal("2011", worksheet.lever_graphs_k2241); end
  def test_lever_graphs_l2241; assert_equal("2015", worksheet.lever_graphs_l2241); end
  def test_lever_graphs_m2241; assert_equal("2020", worksheet.lever_graphs_m2241); end
  def test_lever_graphs_n2241; assert_equal("2025", worksheet.lever_graphs_n2241); end
  def test_lever_graphs_o2241; assert_equal("2030", worksheet.lever_graphs_o2241); end
  def test_lever_graphs_p2241; assert_equal("2035", worksheet.lever_graphs_p2241); end
  def test_lever_graphs_q2241; assert_equal("2040", worksheet.lever_graphs_q2241); end
  def test_lever_graphs_r2241; assert_equal("2045", worksheet.lever_graphs_r2241); end
  def test_lever_graphs_s2241; assert_equal("2050", worksheet.lever_graphs_s2241); end
  def test_lever_graphs_b2242; assert_equal("Historic data", worksheet.lever_graphs_b2242); end
  def test_lever_graphs_b2243; assert_in_delta(1.0, worksheet.lever_graphs_b2243, 0.002); end
  def test_lever_graphs_k2243; assert_in_epsilon(7.0, worksheet.lever_graphs_k2243, 0.002); end
  def test_lever_graphs_l2243; assert_in_epsilon(7.0, worksheet.lever_graphs_l2243, 0.002); end
  def test_lever_graphs_m2243; assert_in_epsilon(6.714285714285714, worksheet.lever_graphs_m2243, 0.002); end
  def test_lever_graphs_n2243; assert_in_epsilon(6.428571428571429, worksheet.lever_graphs_n2243, 0.002); end
  def test_lever_graphs_o2243; assert_in_epsilon(6.142857142857143, worksheet.lever_graphs_o2243, 0.002); end
  def test_lever_graphs_p2243; assert_in_epsilon(5.857142857142858, worksheet.lever_graphs_p2243, 0.002); end
  def test_lever_graphs_q2243; assert_in_epsilon(5.571428571428571, worksheet.lever_graphs_q2243, 0.002); end
  def test_lever_graphs_r2243; assert_in_epsilon(5.285714285714286, worksheet.lever_graphs_r2243, 0.002); end
  def test_lever_graphs_s2243; assert_in_epsilon(5.0, worksheet.lever_graphs_s2243, 0.002); end
  def test_lever_graphs_b2244; assert_in_epsilon(2.0, worksheet.lever_graphs_b2244, 0.002); end
  def test_lever_graphs_k2244; assert_in_epsilon(7.0, worksheet.lever_graphs_k2244, 0.002); end
  def test_lever_graphs_l2244; assert_in_epsilon(7.0, worksheet.lever_graphs_l2244, 0.002); end
  def test_lever_graphs_m2244; assert_in_epsilon(7.0, worksheet.lever_graphs_m2244, 0.002); end
  def test_lever_graphs_n2244; assert_in_epsilon(7.0, worksheet.lever_graphs_n2244, 0.002); end
  def test_lever_graphs_o2244; assert_in_epsilon(7.0, worksheet.lever_graphs_o2244, 0.002); end
  def test_lever_graphs_p2244; assert_in_epsilon(7.0, worksheet.lever_graphs_p2244, 0.002); end
  def test_lever_graphs_q2244; assert_in_epsilon(7.0, worksheet.lever_graphs_q2244, 0.002); end
  def test_lever_graphs_r2244; assert_in_epsilon(7.0, worksheet.lever_graphs_r2244, 0.002); end
  def test_lever_graphs_s2244; assert_in_epsilon(7.0, worksheet.lever_graphs_s2244, 0.002); end
  def test_lever_graphs_b2245; assert_in_epsilon(3.0, worksheet.lever_graphs_b2245, 0.002); end
  def test_lever_graphs_k2245; assert_in_epsilon(7.0, worksheet.lever_graphs_k2245, 0.002); end
  def test_lever_graphs_l2245; assert_in_epsilon(7.0, worksheet.lever_graphs_l2245, 0.002); end
  def test_lever_graphs_m2245; assert_in_epsilon(7.428571428571429, worksheet.lever_graphs_m2245, 0.002); end
  def test_lever_graphs_n2245; assert_in_epsilon(7.857142857142858, worksheet.lever_graphs_n2245, 0.002); end
  def test_lever_graphs_o2245; assert_in_epsilon(8.285714285714286, worksheet.lever_graphs_o2245, 0.002); end
  def test_lever_graphs_p2245; assert_in_epsilon(8.714285714285715, worksheet.lever_graphs_p2245, 0.002); end
  def test_lever_graphs_q2245; assert_in_epsilon(9.142857142857142, worksheet.lever_graphs_q2245, 0.002); end
  def test_lever_graphs_r2245; assert_in_epsilon(9.571428571428571, worksheet.lever_graphs_r2245, 0.002); end
  def test_lever_graphs_s2245; assert_in_epsilon(10.0, worksheet.lever_graphs_s2245, 0.002); end
  def test_lever_graphs_b2246; assert_in_epsilon(4.0, worksheet.lever_graphs_b2246, 0.002); end
  def test_lever_graphs_k2246; assert_in_epsilon(7.0, worksheet.lever_graphs_k2246, 0.002); end
  def test_lever_graphs_l2246; assert_in_epsilon(7.0, worksheet.lever_graphs_l2246, 0.002); end
  def test_lever_graphs_m2246; assert_in_epsilon(8.142857142857142, worksheet.lever_graphs_m2246, 0.002); end
  def test_lever_graphs_n2246; assert_in_epsilon(9.285714285714285, worksheet.lever_graphs_n2246, 0.002); end
  def test_lever_graphs_o2246; assert_in_epsilon(10.428571428571429, worksheet.lever_graphs_o2246, 0.002); end
  def test_lever_graphs_p2246; assert_in_epsilon(11.571428571428571, worksheet.lever_graphs_p2246, 0.002); end
  def test_lever_graphs_q2246; assert_in_epsilon(12.714285714285715, worksheet.lever_graphs_q2246, 0.002); end
  def test_lever_graphs_r2246; assert_in_epsilon(13.857142857142858, worksheet.lever_graphs_r2246, 0.002); end
  def test_lever_graphs_s2246; assert_in_epsilon(15.0, worksheet.lever_graphs_s2246, 0.002); end
  def test_lever_graphs_d2553; assert_equal("Title", worksheet.lever_graphs_d2553); end
  def test_lever_graphs_e2553; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2553); end
  def test_lever_graphs_d2554; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2554, 0.002); end
  def test_lever_graphs_e2554; assert_in_delta(0.0, (worksheet.lever_graphs_e2554||0), 0.002); end
  def test_lever_graphs_d2555; assert_equal("2050: Level 1", worksheet.lever_graphs_d2555); end
  def test_lever_graphs_e2555; assert_in_delta(0.0, (worksheet.lever_graphs_e2555||0), 0.002); end
  def test_lever_graphs_d2556; assert_equal("2050: Level 2", worksheet.lever_graphs_d2556); end
  def test_lever_graphs_e2556; assert_in_delta(0.005, worksheet.lever_graphs_e2556, 0.002); end
  def test_lever_graphs_d2557; assert_equal("2050: Level 3", worksheet.lever_graphs_d2557); end
  def test_lever_graphs_e2557; assert_in_delta(0.01, worksheet.lever_graphs_e2557, 0.002); end
  def test_lever_graphs_d2558; assert_equal("2050: Level 4", worksheet.lever_graphs_d2558); end
  def test_lever_graphs_e2558; assert_in_delta(0.02, worksheet.lever_graphs_e2558, 0.002); end
  def test_lever_graphs_d2564; assert_equal("Title", worksheet.lever_graphs_d2564); end
  def test_lever_graphs_e2564; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2564); end
  def test_lever_graphs_f2564; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2564); end
  def test_lever_graphs_d2565; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2565, 0.002); end
  def test_lever_graphs_e2565; assert_in_delta(0.0, (worksheet.lever_graphs_e2565||0), 0.002); end
  def test_lever_graphs_f2565; assert_in_delta(0.0, (worksheet.lever_graphs_f2565||0), 0.002); end
  def test_lever_graphs_d2566; assert_equal("2050: Level 1", worksheet.lever_graphs_d2566); end
  def test_lever_graphs_e2566; assert_in_delta(0.0, (worksheet.lever_graphs_e2566||0), 0.002); end
  def test_lever_graphs_f2566; assert_in_delta(0.0, (worksheet.lever_graphs_f2566||0), 0.002); end
  def test_lever_graphs_d2567; assert_equal("2050: Level 2", worksheet.lever_graphs_d2567); end
  def test_lever_graphs_e2567; assert_in_delta(0.0025, worksheet.lever_graphs_e2567, 0.002); end
  def test_lever_graphs_f2567; assert_in_delta(0.0125, worksheet.lever_graphs_f2567, 0.002); end
  def test_lever_graphs_d2568; assert_equal("2050: Level 3", worksheet.lever_graphs_d2568); end
  def test_lever_graphs_e2568; assert_in_delta(0.005, worksheet.lever_graphs_e2568, 0.002); end
  def test_lever_graphs_f2568; assert_in_delta(0.025, worksheet.lever_graphs_f2568, 0.002); end
  def test_lever_graphs_d2569; assert_equal("2050: Level 4", worksheet.lever_graphs_d2569); end
  def test_lever_graphs_e2569; assert_in_delta(0.01, worksheet.lever_graphs_e2569, 0.002); end
  def test_lever_graphs_f2569; assert_in_delta(0.05, worksheet.lever_graphs_f2569, 0.002); end
  def test_lever_graphs_d2542; assert_equal("Title", worksheet.lever_graphs_d2542); end
  def test_lever_graphs_e2542; assert_equal("Material switch for Steel Materials demand per product", worksheet.lever_graphs_e2542); end
  def test_lever_graphs_f2542; assert_equal("Material switch for Cement Materials demand per product", worksheet.lever_graphs_f2542); end
  def test_lever_graphs_d2543; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2543, 0.002); end
  def test_lever_graphs_e2543; assert_in_delta(0.0, (worksheet.lever_graphs_e2543||0), 0.002); end
  def test_lever_graphs_f2543; assert_in_delta(0.0, (worksheet.lever_graphs_f2543||0), 0.002); end
  def test_lever_graphs_d2544; assert_equal("2050: Level 1", worksheet.lever_graphs_d2544); end
  def test_lever_graphs_e2544; assert_in_delta(0.0, (worksheet.lever_graphs_e2544||0), 0.002); end
  def test_lever_graphs_f2544; assert_in_delta(0.0, (worksheet.lever_graphs_f2544||0), 0.002); end
  def test_lever_graphs_d2545; assert_equal("2050: Level 2", worksheet.lever_graphs_d2545); end
  def test_lever_graphs_e2545; assert_in_delta(0.0175, worksheet.lever_graphs_e2545, 0.002); end
  def test_lever_graphs_f2545; assert_in_delta(0.04, worksheet.lever_graphs_f2545, 0.002); end
  def test_lever_graphs_d2546; assert_equal("2050: Level 3", worksheet.lever_graphs_d2546); end
  def test_lever_graphs_e2546; assert_in_delta(0.035, worksheet.lever_graphs_e2546, 0.002); end
  def test_lever_graphs_f2546; assert_in_delta(0.08, worksheet.lever_graphs_f2546, 0.002); end
  def test_lever_graphs_d2547; assert_equal("2050: Level 4", worksheet.lever_graphs_d2547); end
  def test_lever_graphs_e2547; assert_in_delta(0.07, worksheet.lever_graphs_e2547, 0.002); end
  def test_lever_graphs_f2547; assert_in_delta(0.16, worksheet.lever_graphs_f2547, 0.002); end
  def test_lever_graphs_c2739; assert_equal("1975", worksheet.lever_graphs_c2739); end
  def test_lever_graphs_d2739; assert_equal("1980", worksheet.lever_graphs_d2739); end
  def test_lever_graphs_e2739; assert_equal("1985", worksheet.lever_graphs_e2739); end
  def test_lever_graphs_f2739; assert_equal("1990", worksheet.lever_graphs_f2739); end
  def test_lever_graphs_g2739; assert_equal("1995", worksheet.lever_graphs_g2739); end
  def test_lever_graphs_h2739; assert_equal("2000", worksheet.lever_graphs_h2739); end
  def test_lever_graphs_i2739; assert_equal("2005", worksheet.lever_graphs_i2739); end
  def test_lever_graphs_j2739; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2739, 0.002); end
  def test_lever_graphs_k2739; assert_equal("2011", worksheet.lever_graphs_k2739); end
  def test_lever_graphs_l2739; assert_equal("2015", worksheet.lever_graphs_l2739); end
  def test_lever_graphs_m2739; assert_equal("2020", worksheet.lever_graphs_m2739); end
  def test_lever_graphs_n2739; assert_equal("2025", worksheet.lever_graphs_n2739); end
  def test_lever_graphs_o2739; assert_equal("2030", worksheet.lever_graphs_o2739); end
  def test_lever_graphs_p2739; assert_equal("2035", worksheet.lever_graphs_p2739); end
  def test_lever_graphs_q2739; assert_equal("2040", worksheet.lever_graphs_q2739); end
  def test_lever_graphs_r2739; assert_equal("2045", worksheet.lever_graphs_r2739); end
  def test_lever_graphs_s2739; assert_equal("2050", worksheet.lever_graphs_s2739); end
  def test_lever_graphs_b2740; assert_equal("Historic data", worksheet.lever_graphs_b2740); end
  def test_lever_graphs_b2741; assert_in_delta(1.0, worksheet.lever_graphs_b2741, 0.002); end
  def test_lever_graphs_k2741; assert_in_delta(0.0, (worksheet.lever_graphs_k2741||0), 0.002); end
  def test_lever_graphs_l2741; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2741, 0.002); end
  def test_lever_graphs_m2741; assert_in_delta(0.0036630036630036595, worksheet.lever_graphs_m2741, 0.002); end
  def test_lever_graphs_n2741; assert_in_delta(0.0030525030525030495, worksheet.lever_graphs_n2741, 0.002); end
  def test_lever_graphs_o2741; assert_in_delta(0.00244200244200244, worksheet.lever_graphs_o2741, 0.002); end
  def test_lever_graphs_p2741; assert_in_delta(0.0018315018315018298, worksheet.lever_graphs_p2741, 0.002); end
  def test_lever_graphs_q2741; assert_in_delta(0.0012210012210012197, worksheet.lever_graphs_q2741, 0.002); end
  def test_lever_graphs_r2741; assert_in_delta(0.0006105006105006101, worksheet.lever_graphs_r2741, 0.002); end
  def test_lever_graphs_s2741; assert_in_delta(0.0, (worksheet.lever_graphs_s2741||0), 0.002); end
  def test_lever_graphs_b2742; assert_in_epsilon(2.0, worksheet.lever_graphs_b2742, 0.002); end
  def test_lever_graphs_k2742; assert_in_delta(0.0, (worksheet.lever_graphs_k2742||0), 0.002); end
  def test_lever_graphs_l2742; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2742, 0.002); end
  def test_lever_graphs_m2742; assert_in_delta(0.009615384615384606, worksheet.lever_graphs_m2742, 0.002); end
  def test_lever_graphs_n2742; assert_in_delta(0.014957264957264942, worksheet.lever_graphs_n2742, 0.002); end
  def test_lever_graphs_o2742; assert_in_delta(0.02029914529914528, worksheet.lever_graphs_o2742, 0.002); end
  def test_lever_graphs_p2742; assert_in_delta(0.025641025641025616, worksheet.lever_graphs_p2742, 0.002); end
  def test_lever_graphs_q2742; assert_in_delta(0.030982905982905953, worksheet.lever_graphs_q2742, 0.002); end
  def test_lever_graphs_r2742; assert_in_delta(0.03632478632478629, worksheet.lever_graphs_r2742, 0.002); end
  def test_lever_graphs_s2742; assert_in_delta(0.04166666666666663, worksheet.lever_graphs_s2742, 0.002); end
  def test_lever_graphs_b2743; assert_in_epsilon(3.0, worksheet.lever_graphs_b2743, 0.002); end
  def test_lever_graphs_k2743; assert_in_delta(0.0, (worksheet.lever_graphs_k2743||0), 0.002); end
  def test_lever_graphs_l2743; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2743, 0.002); end
  def test_lever_graphs_m2743; assert_in_delta(0.015567765567765561, worksheet.lever_graphs_m2743, 0.002); end
  def test_lever_graphs_n2743; assert_in_delta(0.026862026862026853, worksheet.lever_graphs_n2743, 0.002); end
  def test_lever_graphs_o2743; assert_in_delta(0.03815628815628815, worksheet.lever_graphs_o2743, 0.002); end
  def test_lever_graphs_p2743; assert_in_delta(0.04945054945054944, worksheet.lever_graphs_p2743, 0.002); end
  def test_lever_graphs_q2743; assert_in_delta(0.06074481074481074, worksheet.lever_graphs_q2743, 0.002); end
  def test_lever_graphs_r2743; assert_in_delta(0.07203907203907203, worksheet.lever_graphs_r2743, 0.002); end
  def test_lever_graphs_s2743; assert_in_delta(0.08333333333333333, worksheet.lever_graphs_s2743, 0.002); end
  def test_lever_graphs_b2744; assert_in_epsilon(4.0, worksheet.lever_graphs_b2744, 0.002); end
  def test_lever_graphs_k2744; assert_in_delta(0.0, (worksheet.lever_graphs_k2744||0), 0.002); end
  def test_lever_graphs_l2744; assert_in_delta(0.00427350427350427, worksheet.lever_graphs_l2744, 0.002); end
  def test_lever_graphs_m2744; assert_in_delta(0.12667887667887667, worksheet.lever_graphs_m2744, 0.002); end
  def test_lever_graphs_n2744; assert_in_delta(0.2490842490842491, worksheet.lever_graphs_n2744, 0.002); end
  def test_lever_graphs_o2744; assert_in_delta(0.3714896214896215, worksheet.lever_graphs_o2744, 0.002); end
  def test_lever_graphs_p2744; assert_in_delta(0.4938949938949939, worksheet.lever_graphs_p2744, 0.002); end
  def test_lever_graphs_q2744; assert_in_delta(0.6163003663003663, worksheet.lever_graphs_q2744, 0.002); end
  def test_lever_graphs_r2744; assert_in_delta(0.7387057387057387, worksheet.lever_graphs_r2744, 0.002); end
  def test_lever_graphs_s2744; assert_in_delta(0.8611111111111112, worksheet.lever_graphs_s2744, 0.002); end
  def test_lever_graphs_c2673; assert_equal("1975", worksheet.lever_graphs_c2673); end
  def test_lever_graphs_d2673; assert_equal("1980", worksheet.lever_graphs_d2673); end
  def test_lever_graphs_e2673; assert_equal("1985", worksheet.lever_graphs_e2673); end
  def test_lever_graphs_f2673; assert_equal("1990", worksheet.lever_graphs_f2673); end
  def test_lever_graphs_g2673; assert_equal("1995", worksheet.lever_graphs_g2673); end
  def test_lever_graphs_h2673; assert_equal("2000", worksheet.lever_graphs_h2673); end
  def test_lever_graphs_i2673; assert_equal("2005", worksheet.lever_graphs_i2673); end
  def test_lever_graphs_j2673; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2673, 0.002); end
  def test_lever_graphs_k2673; assert_equal("2011", worksheet.lever_graphs_k2673); end
  def test_lever_graphs_l2673; assert_equal("2015", worksheet.lever_graphs_l2673); end
  def test_lever_graphs_m2673; assert_equal("2020", worksheet.lever_graphs_m2673); end
  def test_lever_graphs_n2673; assert_equal("2025", worksheet.lever_graphs_n2673); end
  def test_lever_graphs_o2673; assert_equal("2030", worksheet.lever_graphs_o2673); end
  def test_lever_graphs_p2673; assert_equal("2035", worksheet.lever_graphs_p2673); end
  def test_lever_graphs_q2673; assert_equal("2040", worksheet.lever_graphs_q2673); end
  def test_lever_graphs_r2673; assert_equal("2045", worksheet.lever_graphs_r2673); end
  def test_lever_graphs_s2673; assert_equal("2050", worksheet.lever_graphs_s2673); end
  def test_lever_graphs_b2674; assert_equal("Historic data", worksheet.lever_graphs_b2674); end
  def test_lever_graphs_b2675; assert_in_delta(1.0, worksheet.lever_graphs_b2675, 0.002); end
  def test_lever_graphs_k2675; assert_in_delta(0.0, (worksheet.lever_graphs_k2675||0), 0.002); end
  def test_lever_graphs_l2675; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2675, 0.002); end
  def test_lever_graphs_m2675; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2675, 0.002); end
  def test_lever_graphs_n2675; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2675, 0.002); end
  def test_lever_graphs_o2675; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2675, 0.002); end
  def test_lever_graphs_p2675; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2675, 0.002); end
  def test_lever_graphs_q2675; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2675, 0.002); end
  def test_lever_graphs_r2675; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2675, 0.002); end
  def test_lever_graphs_s2675; assert_in_delta(0.0, (worksheet.lever_graphs_s2675||0), 0.002); end
  def test_lever_graphs_b2676; assert_in_epsilon(2.0, worksheet.lever_graphs_b2676, 0.002); end
  def test_lever_graphs_k2676; assert_in_delta(0.0, (worksheet.lever_graphs_k2676||0), 0.002); end
  def test_lever_graphs_l2676; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2676, 0.002); end
  def test_lever_graphs_m2676; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2676, 0.002); end
  def test_lever_graphs_n2676; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2676, 0.002); end
  def test_lever_graphs_o2676; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2676, 0.002); end
  def test_lever_graphs_p2676; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2676, 0.002); end
  def test_lever_graphs_q2676; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2676, 0.002); end
  def test_lever_graphs_r2676; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2676, 0.002); end
  def test_lever_graphs_s2676; assert_in_delta(0.05, worksheet.lever_graphs_s2676, 0.002); end
  def test_lever_graphs_b2677; assert_in_epsilon(3.0, worksheet.lever_graphs_b2677, 0.002); end
  def test_lever_graphs_k2677; assert_in_delta(0.0, (worksheet.lever_graphs_k2677||0), 0.002); end
  def test_lever_graphs_l2677; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2677, 0.002); end
  def test_lever_graphs_m2677; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2677, 0.002); end
  def test_lever_graphs_n2677; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2677, 0.002); end
  def test_lever_graphs_o2677; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2677, 0.002); end
  def test_lever_graphs_p2677; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2677, 0.002); end
  def test_lever_graphs_q2677; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2677, 0.002); end
  def test_lever_graphs_r2677; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2677, 0.002); end
  def test_lever_graphs_s2677; assert_in_delta(0.1, worksheet.lever_graphs_s2677, 0.002); end
  def test_lever_graphs_b2678; assert_in_epsilon(4.0, worksheet.lever_graphs_b2678, 0.002); end
  def test_lever_graphs_k2678; assert_in_delta(0.0, (worksheet.lever_graphs_k2678||0), 0.002); end
  def test_lever_graphs_l2678; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2678, 0.002); end
  def test_lever_graphs_m2678; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2678, 0.002); end
  def test_lever_graphs_n2678; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2678, 0.002); end
  def test_lever_graphs_o2678; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2678, 0.002); end
  def test_lever_graphs_p2678; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2678, 0.002); end
  def test_lever_graphs_q2678; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2678, 0.002); end
  def test_lever_graphs_r2678; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2678, 0.002); end
  def test_lever_graphs_s2678; assert_in_delta(0.2, worksheet.lever_graphs_s2678, 0.002); end
  def test_lever_graphs_c2711; assert_equal("1975", worksheet.lever_graphs_c2711); end
  def test_lever_graphs_d2711; assert_equal("1980", worksheet.lever_graphs_d2711); end
  def test_lever_graphs_e2711; assert_equal("1985", worksheet.lever_graphs_e2711); end
  def test_lever_graphs_f2711; assert_equal("1990", worksheet.lever_graphs_f2711); end
  def test_lever_graphs_g2711; assert_equal("1995", worksheet.lever_graphs_g2711); end
  def test_lever_graphs_h2711; assert_equal("2000", worksheet.lever_graphs_h2711); end
  def test_lever_graphs_i2711; assert_equal("2005", worksheet.lever_graphs_i2711); end
  def test_lever_graphs_j2711; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2711, 0.002); end
  def test_lever_graphs_k2711; assert_equal("2011", worksheet.lever_graphs_k2711); end
  def test_lever_graphs_l2711; assert_equal("2015", worksheet.lever_graphs_l2711); end
  def test_lever_graphs_m2711; assert_equal("2020", worksheet.lever_graphs_m2711); end
  def test_lever_graphs_n2711; assert_equal("2025", worksheet.lever_graphs_n2711); end
  def test_lever_graphs_o2711; assert_equal("2030", worksheet.lever_graphs_o2711); end
  def test_lever_graphs_p2711; assert_equal("2035", worksheet.lever_graphs_p2711); end
  def test_lever_graphs_q2711; assert_equal("2040", worksheet.lever_graphs_q2711); end
  def test_lever_graphs_r2711; assert_equal("2045", worksheet.lever_graphs_r2711); end
  def test_lever_graphs_s2711; assert_equal("2050", worksheet.lever_graphs_s2711); end
  def test_lever_graphs_b2712; assert_equal("Historic data", worksheet.lever_graphs_b2712); end
  def test_lever_graphs_b2713; assert_in_delta(1.0, worksheet.lever_graphs_b2713, 0.002); end
  def test_lever_graphs_k2713; assert_in_delta(0.0, (worksheet.lever_graphs_k2713||0), 0.002); end
  def test_lever_graphs_l2713; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2713, 0.002); end
  def test_lever_graphs_m2713; assert_in_delta(0.004395604395604396, worksheet.lever_graphs_m2713, 0.002); end
  def test_lever_graphs_n2713; assert_in_delta(0.003663003663003663, worksheet.lever_graphs_n2713, 0.002); end
  def test_lever_graphs_o2713; assert_in_delta(0.0029304029304029304, worksheet.lever_graphs_o2713, 0.002); end
  def test_lever_graphs_p2713; assert_in_delta(0.002197802197802198, worksheet.lever_graphs_p2713, 0.002); end
  def test_lever_graphs_q2713; assert_in_delta(0.0014652014652014652, worksheet.lever_graphs_q2713, 0.002); end
  def test_lever_graphs_r2713; assert_in_delta(0.0007326007326007326, worksheet.lever_graphs_r2713, 0.002); end
  def test_lever_graphs_s2713; assert_in_delta(0.0, (worksheet.lever_graphs_s2713||0), 0.002); end
  def test_lever_graphs_b2714; assert_in_epsilon(2.0, worksheet.lever_graphs_b2714, 0.002); end
  def test_lever_graphs_k2714; assert_in_delta(0.0, (worksheet.lever_graphs_k2714||0), 0.002); end
  def test_lever_graphs_l2714; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2714, 0.002); end
  def test_lever_graphs_m2714; assert_in_delta(0.011538461538461539, worksheet.lever_graphs_m2714, 0.002); end
  def test_lever_graphs_n2714; assert_in_delta(0.017948717948717947, worksheet.lever_graphs_n2714, 0.002); end
  def test_lever_graphs_o2714; assert_in_delta(0.02435897435897436, worksheet.lever_graphs_o2714, 0.002); end
  def test_lever_graphs_p2714; assert_in_delta(0.030769230769230767, worksheet.lever_graphs_p2714, 0.002); end
  def test_lever_graphs_q2714; assert_in_delta(0.03717948717948718, worksheet.lever_graphs_q2714, 0.002); end
  def test_lever_graphs_r2714; assert_in_delta(0.043589743589743594, worksheet.lever_graphs_r2714, 0.002); end
  def test_lever_graphs_s2714; assert_in_delta(0.05, worksheet.lever_graphs_s2714, 0.002); end
  def test_lever_graphs_b2715; assert_in_epsilon(3.0, worksheet.lever_graphs_b2715, 0.002); end
  def test_lever_graphs_k2715; assert_in_delta(0.0, (worksheet.lever_graphs_k2715||0), 0.002); end
  def test_lever_graphs_l2715; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2715, 0.002); end
  def test_lever_graphs_m2715; assert_in_delta(0.018681318681318684, worksheet.lever_graphs_m2715, 0.002); end
  def test_lever_graphs_n2715; assert_in_delta(0.03223443223443224, worksheet.lever_graphs_n2715, 0.002); end
  def test_lever_graphs_o2715; assert_in_delta(0.0457875457875458, worksheet.lever_graphs_o2715, 0.002); end
  def test_lever_graphs_p2715; assert_in_delta(0.05934065934065935, worksheet.lever_graphs_p2715, 0.002); end
  def test_lever_graphs_q2715; assert_in_delta(0.0728937728937729, worksheet.lever_graphs_q2715, 0.002); end
  def test_lever_graphs_r2715; assert_in_delta(0.08644688644688646, worksheet.lever_graphs_r2715, 0.002); end
  def test_lever_graphs_s2715; assert_in_delta(0.1, worksheet.lever_graphs_s2715, 0.002); end
  def test_lever_graphs_b2716; assert_in_epsilon(4.0, worksheet.lever_graphs_b2716, 0.002); end
  def test_lever_graphs_k2716; assert_in_delta(0.0, (worksheet.lever_graphs_k2716||0), 0.002); end
  def test_lever_graphs_l2716; assert_in_delta(0.005128205128205128, worksheet.lever_graphs_l2716, 0.002); end
  def test_lever_graphs_m2716; assert_in_delta(0.03296703296703297, worksheet.lever_graphs_m2716, 0.002); end
  def test_lever_graphs_n2716; assert_in_delta(0.060805860805860805, worksheet.lever_graphs_n2716, 0.002); end
  def test_lever_graphs_o2716; assert_in_delta(0.08864468864468864, worksheet.lever_graphs_o2716, 0.002); end
  def test_lever_graphs_p2716; assert_in_delta(0.11648351648351647, worksheet.lever_graphs_p2716, 0.002); end
  def test_lever_graphs_q2716; assert_in_delta(0.14432234432234434, worksheet.lever_graphs_q2716, 0.002); end
  def test_lever_graphs_r2716; assert_in_delta(0.17216117216117216, worksheet.lever_graphs_r2716, 0.002); end
  def test_lever_graphs_s2716; assert_in_delta(0.2, worksheet.lever_graphs_s2716, 0.002); end
  def test_lever_graphs_c2614; assert_equal("1975", worksheet.lever_graphs_c2614); end
  def test_lever_graphs_d2614; assert_equal("1980", worksheet.lever_graphs_d2614); end
  def test_lever_graphs_e2614; assert_equal("1985", worksheet.lever_graphs_e2614); end
  def test_lever_graphs_f2614; assert_equal("1990", worksheet.lever_graphs_f2614); end
  def test_lever_graphs_g2614; assert_equal("1995", worksheet.lever_graphs_g2614); end
  def test_lever_graphs_h2614; assert_equal("2000", worksheet.lever_graphs_h2614); end
  def test_lever_graphs_i2614; assert_equal("2005", worksheet.lever_graphs_i2614); end
  def test_lever_graphs_j2614; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2614, 0.002); end
  def test_lever_graphs_k2614; assert_equal("2011", worksheet.lever_graphs_k2614); end
  def test_lever_graphs_l2614; assert_equal("2015", worksheet.lever_graphs_l2614); end
  def test_lever_graphs_m2614; assert_equal("2020", worksheet.lever_graphs_m2614); end
  def test_lever_graphs_n2614; assert_equal("2025", worksheet.lever_graphs_n2614); end
  def test_lever_graphs_o2614; assert_equal("2030", worksheet.lever_graphs_o2614); end
  def test_lever_graphs_p2614; assert_equal("2035", worksheet.lever_graphs_p2614); end
  def test_lever_graphs_q2614; assert_equal("2040", worksheet.lever_graphs_q2614); end
  def test_lever_graphs_r2614; assert_equal("2045", worksheet.lever_graphs_r2614); end
  def test_lever_graphs_s2614; assert_equal("2050", worksheet.lever_graphs_s2614); end
  def test_lever_graphs_b2615; assert_equal("Historic data", worksheet.lever_graphs_b2615); end
  def test_lever_graphs_b2616; assert_in_delta(1.0, worksheet.lever_graphs_b2616, 0.002); end
  def test_lever_graphs_k2616; assert_in_delta(0.0, (worksheet.lever_graphs_k2616||0), 0.002); end
  def test_lever_graphs_l2616; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2616, 0.002); end
  def test_lever_graphs_m2616; assert_in_delta(-0.0005860805860805861, worksheet.lever_graphs_m2616, 0.002); end
  def test_lever_graphs_n2616; assert_in_delta(-0.0004884004884004884, worksheet.lever_graphs_n2616, 0.002); end
  def test_lever_graphs_o2616; assert_in_delta(-0.0003907203907203907, worksheet.lever_graphs_o2616, 0.002); end
  def test_lever_graphs_p2616; assert_in_delta(-0.00029304029304029304, worksheet.lever_graphs_p2616, 0.002); end
  def test_lever_graphs_q2616; assert_in_delta(-0.00019536019536019536, worksheet.lever_graphs_q2616, 0.002); end
  def test_lever_graphs_r2616; assert_in_delta(-9.768009768009768e-05, worksheet.lever_graphs_r2616, 0.002); end
  def test_lever_graphs_s2616; assert_in_delta(0.0, (worksheet.lever_graphs_s2616||0), 0.002); end
  def test_lever_graphs_b2617; assert_in_epsilon(2.0, worksheet.lever_graphs_b2617, 0.002); end
  def test_lever_graphs_k2617; assert_in_delta(0.0, (worksheet.lever_graphs_k2617||0), 0.002); end
  def test_lever_graphs_l2617; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2617, 0.002); end
  def test_lever_graphs_m2617; assert_in_delta(-0.0015384615384615385, worksheet.lever_graphs_m2617, 0.002); end
  def test_lever_graphs_n2617; assert_in_delta(-0.002393162393162393, worksheet.lever_graphs_n2617, 0.002); end
  def test_lever_graphs_o2617; assert_in_delta(-0.003247863247863248, worksheet.lever_graphs_o2617, 0.002); end
  def test_lever_graphs_p2617; assert_in_delta(-0.0041025641025641026, worksheet.lever_graphs_p2617, 0.002); end
  def test_lever_graphs_q2617; assert_in_delta(-0.004957264957264958, worksheet.lever_graphs_q2617, 0.002); end
  def test_lever_graphs_r2617; assert_in_delta(-0.005811965811965812, worksheet.lever_graphs_r2617, 0.002); end
  def test_lever_graphs_s2617; assert_in_delta(-0.006666666666666667, worksheet.lever_graphs_s2617, 0.002); end
  def test_lever_graphs_b2618; assert_in_epsilon(3.0, worksheet.lever_graphs_b2618, 0.002); end
  def test_lever_graphs_k2618; assert_in_delta(0.0, (worksheet.lever_graphs_k2618||0), 0.002); end
  def test_lever_graphs_l2618; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2618, 0.002); end
  def test_lever_graphs_m2618; assert_in_delta(-0.0037606837606837607, worksheet.lever_graphs_m2618, 0.002); end
  def test_lever_graphs_n2618; assert_in_delta(-0.006837606837606838, worksheet.lever_graphs_n2618, 0.002); end
  def test_lever_graphs_o2618; assert_in_delta(-0.009914529914529915, worksheet.lever_graphs_o2618, 0.002); end
  def test_lever_graphs_p2618; assert_in_delta(-0.012991452991452991, worksheet.lever_graphs_p2618, 0.002); end
  def test_lever_graphs_q2618; assert_in_delta(-0.01606837606837607, worksheet.lever_graphs_q2618, 0.002); end
  def test_lever_graphs_r2618; assert_in_delta(-0.019145299145299145, worksheet.lever_graphs_r2618, 0.002); end
  def test_lever_graphs_s2618; assert_in_delta(-0.022222222222222223, worksheet.lever_graphs_s2618, 0.002); end
  def test_lever_graphs_b2619; assert_in_epsilon(4.0, worksheet.lever_graphs_b2619, 0.002); end
  def test_lever_graphs_k2619; assert_in_delta(0.0, (worksheet.lever_graphs_k2619||0), 0.002); end
  def test_lever_graphs_l2619; assert_in_delta(-0.0006837606837606838, worksheet.lever_graphs_l2619, 0.002); end
  def test_lever_graphs_m2619; assert_in_delta(0.023223443223443226, worksheet.lever_graphs_m2619, 0.002); end
  def test_lever_graphs_n2619; assert_in_delta(0.04713064713064713, worksheet.lever_graphs_n2619, 0.002); end
  def test_lever_graphs_o2619; assert_in_delta(0.07103785103785104, worksheet.lever_graphs_o2619, 0.002); end
  def test_lever_graphs_p2619; assert_in_delta(0.09494505494505495, worksheet.lever_graphs_p2619, 0.002); end
  def test_lever_graphs_q2619; assert_in_delta(0.11885225885225886, worksheet.lever_graphs_q2619, 0.002); end
  def test_lever_graphs_r2619; assert_in_delta(0.14275946275946275, worksheet.lever_graphs_r2619, 0.002); end
  def test_lever_graphs_s2619; assert_in_delta(0.16666666666666666, worksheet.lever_graphs_s2619, 0.002); end
  def test_lever_graphs_d1705; assert_equal("Title", worksheet.lever_graphs_d1705); end
  def test_lever_graphs_e1705; assert_equal("Open-cycle gas turbine power plant", worksheet.lever_graphs_e1705); end
  def test_lever_graphs_f1705; assert_equal("Combined cycle gas turbine power plant", worksheet.lever_graphs_f1705); end
  def test_lever_graphs_d1706; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1706, 0.002); end
  def test_lever_graphs_e1706; assert_in_delta(0.35, worksheet.lever_graphs_e1706, 0.002); end
  def test_lever_graphs_f1706; assert_in_delta(0.65, worksheet.lever_graphs_f1706, 0.002); end
  def test_lever_graphs_d1707; assert_equal("2050: Level 1", worksheet.lever_graphs_d1707); end
  def test_lever_graphs_e1707; assert_in_delta(0.61, worksheet.lever_graphs_e1707, 0.002); end
  def test_lever_graphs_f1707; assert_in_delta(0.39, worksheet.lever_graphs_f1707, 0.002); end
  def test_lever_graphs_d1708; assert_equal("2050: Level 2", worksheet.lever_graphs_d1708); end
  def test_lever_graphs_e1708; assert_in_delta(0.475, worksheet.lever_graphs_e1708, 0.002); end
  def test_lever_graphs_f1708; assert_in_delta(0.525, worksheet.lever_graphs_f1708, 0.002); end
  def test_lever_graphs_d1709; assert_equal("2050: Level 3", worksheet.lever_graphs_d1709); end
  def test_lever_graphs_e1709; assert_in_delta(0.175, worksheet.lever_graphs_e1709, 0.002); end
  def test_lever_graphs_f1709; assert_in_delta(0.825, worksheet.lever_graphs_f1709, 0.002); end
  def test_lever_graphs_d1710; assert_equal("2050: Level 4", worksheet.lever_graphs_d1710); end
  def test_lever_graphs_e1710; assert_in_delta(0.07, worksheet.lever_graphs_e1710, 0.002); end
  def test_lever_graphs_f1710; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_f1710, 0.002); end
  def test_lever_graphs_c3248; assert_equal("1975", worksheet.lever_graphs_c3248); end
  def test_lever_graphs_d3248; assert_equal("1980", worksheet.lever_graphs_d3248); end
  def test_lever_graphs_e3248; assert_equal("1985", worksheet.lever_graphs_e3248); end
  def test_lever_graphs_f3248; assert_equal("1990", worksheet.lever_graphs_f3248); end
  def test_lever_graphs_g3248; assert_equal("1995", worksheet.lever_graphs_g3248); end
  def test_lever_graphs_h3248; assert_equal("2000", worksheet.lever_graphs_h3248); end
  def test_lever_graphs_i3248; assert_equal("2005", worksheet.lever_graphs_i3248); end
  def test_lever_graphs_j3248; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3248, 0.002); end
  def test_lever_graphs_k3248; assert_equal("2011", worksheet.lever_graphs_k3248); end
  def test_lever_graphs_l3248; assert_equal("2015", worksheet.lever_graphs_l3248); end
  def test_lever_graphs_m3248; assert_equal("2020", worksheet.lever_graphs_m3248); end
  def test_lever_graphs_n3248; assert_equal("2025", worksheet.lever_graphs_n3248); end
  def test_lever_graphs_o3248; assert_equal("2030", worksheet.lever_graphs_o3248); end
  def test_lever_graphs_p3248; assert_equal("2035", worksheet.lever_graphs_p3248); end
  def test_lever_graphs_q3248; assert_equal("2040", worksheet.lever_graphs_q3248); end
  def test_lever_graphs_r3248; assert_equal("2045", worksheet.lever_graphs_r3248); end
  def test_lever_graphs_s3248; assert_equal("2050", worksheet.lever_graphs_s3248); end
  def test_lever_graphs_b3249; assert_equal("Historic data", worksheet.lever_graphs_b3249); end
  def test_lever_graphs_b3250; assert_in_delta(1.0, worksheet.lever_graphs_b3250, 0.002); end
  def test_lever_graphs_k3250; assert_in_delta(0.0, (worksheet.lever_graphs_k3250||0), 0.002); end
  def test_lever_graphs_l3250; assert_in_delta(0.0, (worksheet.lever_graphs_l3250||0), 0.002); end
  def test_lever_graphs_m3250; assert_in_delta(0.0, (worksheet.lever_graphs_m3250||0), 0.002); end
  def test_lever_graphs_n3250; assert_in_delta(0.0, (worksheet.lever_graphs_n3250||0), 0.002); end
  def test_lever_graphs_o3250; assert_in_delta(0.0, (worksheet.lever_graphs_o3250||0), 0.002); end
  def test_lever_graphs_p3250; assert_in_delta(0.0, (worksheet.lever_graphs_p3250||0), 0.002); end
  def test_lever_graphs_q3250; assert_in_delta(0.0, (worksheet.lever_graphs_q3250||0), 0.002); end
  def test_lever_graphs_r3250; assert_in_delta(0.0, (worksheet.lever_graphs_r3250||0), 0.002); end
  def test_lever_graphs_s3250; assert_in_delta(0.0, (worksheet.lever_graphs_s3250||0), 0.002); end
  def test_lever_graphs_b3251; assert_in_epsilon(2.0, worksheet.lever_graphs_b3251, 0.002); end
  def test_lever_graphs_k3251; assert_in_delta(0.0, (worksheet.lever_graphs_k3251||0), 0.002); end
  def test_lever_graphs_l3251; assert_in_delta(0.0, (worksheet.lever_graphs_l3251||0), 0.002); end
  def test_lever_graphs_m3251; assert_in_delta(0.0, (worksheet.lever_graphs_m3251||0), 0.002); end
  def test_lever_graphs_n3251; assert_in_delta(0.0033000000000000004, worksheet.lever_graphs_n3251, 0.002); end
  def test_lever_graphs_o3251; assert_in_delta(0.0165, worksheet.lever_graphs_o3251, 0.002); end
  def test_lever_graphs_p3251; assert_in_delta(0.066, worksheet.lever_graphs_p3251, 0.002); end
  def test_lever_graphs_q3251; assert_in_delta(0.132, worksheet.lever_graphs_q3251, 0.002); end
  def test_lever_graphs_r3251; assert_in_delta(0.23099999999999998, worksheet.lever_graphs_r3251, 0.002); end
  def test_lever_graphs_s3251; assert_in_delta(0.33, worksheet.lever_graphs_s3251, 0.002); end
  def test_lever_graphs_b3252; assert_in_epsilon(3.0, worksheet.lever_graphs_b3252, 0.002); end
  def test_lever_graphs_k3252; assert_in_delta(0.0, (worksheet.lever_graphs_k3252||0), 0.002); end
  def test_lever_graphs_l3252; assert_in_delta(0.0, (worksheet.lever_graphs_l3252||0), 0.002); end
  def test_lever_graphs_m3252; assert_in_delta(0.0, (worksheet.lever_graphs_m3252||0), 0.002); end
  def test_lever_graphs_n3252; assert_in_delta(0.00825, worksheet.lever_graphs_n3252, 0.002); end
  def test_lever_graphs_o3252; assert_in_delta(0.04125, worksheet.lever_graphs_o3252, 0.002); end
  def test_lever_graphs_p3252; assert_in_delta(0.165, worksheet.lever_graphs_p3252, 0.002); end
  def test_lever_graphs_q3252; assert_in_delta(0.33, worksheet.lever_graphs_q3252, 0.002); end
  def test_lever_graphs_r3252; assert_in_delta(0.5774999999999999, worksheet.lever_graphs_r3252, 0.002); end
  def test_lever_graphs_s3252; assert_in_delta(0.825, worksheet.lever_graphs_s3252, 0.002); end
  def test_lever_graphs_b3253; assert_in_epsilon(4.0, worksheet.lever_graphs_b3253, 0.002); end
  def test_lever_graphs_k3253; assert_in_delta(0.0, (worksheet.lever_graphs_k3253||0), 0.002); end
  def test_lever_graphs_l3253; assert_in_delta(0.0, (worksheet.lever_graphs_l3253||0), 0.002); end
  def test_lever_graphs_m3253; assert_in_delta(0.0, (worksheet.lever_graphs_m3253||0), 0.002); end
  def test_lever_graphs_n3253; assert_in_delta(0.033, worksheet.lever_graphs_n3253, 0.002); end
  def test_lever_graphs_o3253; assert_in_delta(0.165, worksheet.lever_graphs_o3253, 0.002); end
  def test_lever_graphs_p3253; assert_in_delta(0.66, worksheet.lever_graphs_p3253, 0.002); end
  def test_lever_graphs_q3253; assert_in_epsilon(1.32, worksheet.lever_graphs_q3253, 0.002); end
  def test_lever_graphs_r3253; assert_in_epsilon(2.3099999999999996, worksheet.lever_graphs_r3253, 0.002); end
  def test_lever_graphs_s3253; assert_in_epsilon(3.3, worksheet.lever_graphs_s3253, 0.002); end
  def test_lever_graphs_c3266; assert_equal("1975", worksheet.lever_graphs_c3266); end
  def test_lever_graphs_d3266; assert_equal("1980", worksheet.lever_graphs_d3266); end
  def test_lever_graphs_e3266; assert_equal("1985", worksheet.lever_graphs_e3266); end
  def test_lever_graphs_f3266; assert_equal("1990", worksheet.lever_graphs_f3266); end
  def test_lever_graphs_g3266; assert_equal("1995", worksheet.lever_graphs_g3266); end
  def test_lever_graphs_h3266; assert_equal("2000", worksheet.lever_graphs_h3266); end
  def test_lever_graphs_i3266; assert_equal("2005", worksheet.lever_graphs_i3266); end
  def test_lever_graphs_j3266; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3266, 0.002); end
  def test_lever_graphs_k3266; assert_equal("2011", worksheet.lever_graphs_k3266); end
  def test_lever_graphs_l3266; assert_equal("2015", worksheet.lever_graphs_l3266); end
  def test_lever_graphs_m3266; assert_equal("2020", worksheet.lever_graphs_m3266); end
  def test_lever_graphs_n3266; assert_equal("2025", worksheet.lever_graphs_n3266); end
  def test_lever_graphs_o3266; assert_equal("2030", worksheet.lever_graphs_o3266); end
  def test_lever_graphs_p3266; assert_equal("2035", worksheet.lever_graphs_p3266); end
  def test_lever_graphs_q3266; assert_equal("2040", worksheet.lever_graphs_q3266); end
  def test_lever_graphs_r3266; assert_equal("2045", worksheet.lever_graphs_r3266); end
  def test_lever_graphs_s3266; assert_equal("2050", worksheet.lever_graphs_s3266); end
  def test_lever_graphs_b3267; assert_equal("Historic data", worksheet.lever_graphs_b3267); end
  def test_lever_graphs_b3268; assert_in_delta(1.0, worksheet.lever_graphs_b3268, 0.002); end
  def test_lever_graphs_k3268; assert_in_delta(0.0, (worksheet.lever_graphs_k3268||0), 0.002); end
  def test_lever_graphs_l3268; assert_in_delta(0.0, (worksheet.lever_graphs_l3268||0), 0.002); end
  def test_lever_graphs_m3268; assert_in_delta(0.0, (worksheet.lever_graphs_m3268||0), 0.002); end
  def test_lever_graphs_n3268; assert_in_delta(0.0, (worksheet.lever_graphs_n3268||0), 0.002); end
  def test_lever_graphs_o3268; assert_in_delta(0.0, (worksheet.lever_graphs_o3268||0), 0.002); end
  def test_lever_graphs_p3268; assert_in_delta(0.0, (worksheet.lever_graphs_p3268||0), 0.002); end
  def test_lever_graphs_q3268; assert_in_delta(0.0, (worksheet.lever_graphs_q3268||0), 0.002); end
  def test_lever_graphs_r3268; assert_in_delta(0.0, (worksheet.lever_graphs_r3268||0), 0.002); end
  def test_lever_graphs_s3268; assert_in_delta(0.0, (worksheet.lever_graphs_s3268||0), 0.002); end
  def test_lever_graphs_b3269; assert_in_epsilon(2.0, worksheet.lever_graphs_b3269, 0.002); end
  def test_lever_graphs_k3269; assert_in_delta(0.0, (worksheet.lever_graphs_k3269||0), 0.002); end
  def test_lever_graphs_l3269; assert_in_delta(0.0, (worksheet.lever_graphs_l3269||0), 0.002); end
  def test_lever_graphs_m3269; assert_in_delta(0.0, (worksheet.lever_graphs_m3269||0), 0.002); end
  def test_lever_graphs_n3269; assert_in_delta(0.01, worksheet.lever_graphs_n3269, 0.002); end
  def test_lever_graphs_o3269; assert_in_delta(0.05, worksheet.lever_graphs_o3269, 0.002); end
  def test_lever_graphs_p3269; assert_in_delta(0.2, worksheet.lever_graphs_p3269, 0.002); end
  def test_lever_graphs_q3269; assert_in_delta(0.4, worksheet.lever_graphs_q3269, 0.002); end
  def test_lever_graphs_r3269; assert_in_delta(0.7, worksheet.lever_graphs_r3269, 0.002); end
  def test_lever_graphs_s3269; assert_in_delta(1.0, worksheet.lever_graphs_s3269, 0.002); end
  def test_lever_graphs_b3270; assert_in_epsilon(3.0, worksheet.lever_graphs_b3270, 0.002); end
  def test_lever_graphs_k3270; assert_in_delta(0.0, (worksheet.lever_graphs_k3270||0), 0.002); end
  def test_lever_graphs_l3270; assert_in_delta(0.0, (worksheet.lever_graphs_l3270||0), 0.002); end
  def test_lever_graphs_m3270; assert_in_delta(0.0, (worksheet.lever_graphs_m3270||0), 0.002); end
  def test_lever_graphs_n3270; assert_in_delta(0.025, worksheet.lever_graphs_n3270, 0.002); end
  def test_lever_graphs_o3270; assert_in_delta(0.125, worksheet.lever_graphs_o3270, 0.002); end
  def test_lever_graphs_p3270; assert_in_delta(0.5, worksheet.lever_graphs_p3270, 0.002); end
  def test_lever_graphs_q3270; assert_in_delta(1.0, worksheet.lever_graphs_q3270, 0.002); end
  def test_lever_graphs_r3270; assert_in_epsilon(1.75, worksheet.lever_graphs_r3270, 0.002); end
  def test_lever_graphs_s3270; assert_in_epsilon(2.5, worksheet.lever_graphs_s3270, 0.002); end
  def test_lever_graphs_b3271; assert_in_epsilon(4.0, worksheet.lever_graphs_b3271, 0.002); end
  def test_lever_graphs_k3271; assert_in_delta(0.0, (worksheet.lever_graphs_k3271||0), 0.002); end
  def test_lever_graphs_l3271; assert_in_delta(0.0, (worksheet.lever_graphs_l3271||0), 0.002); end
  def test_lever_graphs_m3271; assert_in_delta(0.0, (worksheet.lever_graphs_m3271||0), 0.002); end
  def test_lever_graphs_n3271; assert_in_delta(0.1, worksheet.lever_graphs_n3271, 0.002); end
  def test_lever_graphs_o3271; assert_in_delta(0.5, worksheet.lever_graphs_o3271, 0.002); end
  def test_lever_graphs_p3271; assert_in_epsilon(2.0, worksheet.lever_graphs_p3271, 0.002); end
  def test_lever_graphs_q3271; assert_in_epsilon(4.0, worksheet.lever_graphs_q3271, 0.002); end
  def test_lever_graphs_r3271; assert_in_epsilon(7.0, worksheet.lever_graphs_r3271, 0.002); end
  def test_lever_graphs_s3271; assert_in_epsilon(10.0, worksheet.lever_graphs_s3271, 0.002); end
  def test_lever_graphs_c3284; assert_equal("1975", worksheet.lever_graphs_c3284); end
  def test_lever_graphs_d3284; assert_equal("1980", worksheet.lever_graphs_d3284); end
  def test_lever_graphs_e3284; assert_equal("1985", worksheet.lever_graphs_e3284); end
  def test_lever_graphs_f3284; assert_equal("1990", worksheet.lever_graphs_f3284); end
  def test_lever_graphs_g3284; assert_equal("1995", worksheet.lever_graphs_g3284); end
  def test_lever_graphs_h3284; assert_equal("2000", worksheet.lever_graphs_h3284); end
  def test_lever_graphs_i3284; assert_equal("2005", worksheet.lever_graphs_i3284); end
  def test_lever_graphs_j3284; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3284, 0.002); end
  def test_lever_graphs_k3284; assert_equal("2011", worksheet.lever_graphs_k3284); end
  def test_lever_graphs_l3284; assert_equal("2015", worksheet.lever_graphs_l3284); end
  def test_lever_graphs_m3284; assert_equal("2020", worksheet.lever_graphs_m3284); end
  def test_lever_graphs_n3284; assert_equal("2025", worksheet.lever_graphs_n3284); end
  def test_lever_graphs_o3284; assert_equal("2030", worksheet.lever_graphs_o3284); end
  def test_lever_graphs_p3284; assert_equal("2035", worksheet.lever_graphs_p3284); end
  def test_lever_graphs_q3284; assert_equal("2040", worksheet.lever_graphs_q3284); end
  def test_lever_graphs_r3284; assert_equal("2045", worksheet.lever_graphs_r3284); end
  def test_lever_graphs_s3284; assert_equal("2050", worksheet.lever_graphs_s3284); end
  def test_lever_graphs_b3285; assert_equal("Historic data", worksheet.lever_graphs_b3285); end
  def test_lever_graphs_b3286; assert_in_delta(1.0, worksheet.lever_graphs_b3286, 0.002); end
  def test_lever_graphs_k3286; assert_in_delta(0.0, (worksheet.lever_graphs_k3286||0), 0.002); end
  def test_lever_graphs_l3286; assert_in_delta(0.0, (worksheet.lever_graphs_l3286||0), 0.002); end
  def test_lever_graphs_m3286; assert_in_delta(0.0, (worksheet.lever_graphs_m3286||0), 0.002); end
  def test_lever_graphs_n3286; assert_in_delta(0.0, (worksheet.lever_graphs_n3286||0), 0.002); end
  def test_lever_graphs_o3286; assert_in_delta(0.0, (worksheet.lever_graphs_o3286||0), 0.002); end
  def test_lever_graphs_p3286; assert_in_delta(0.0, (worksheet.lever_graphs_p3286||0), 0.002); end
  def test_lever_graphs_q3286; assert_in_delta(0.0, (worksheet.lever_graphs_q3286||0), 0.002); end
  def test_lever_graphs_r3286; assert_in_delta(0.0, (worksheet.lever_graphs_r3286||0), 0.002); end
  def test_lever_graphs_s3286; assert_in_delta(0.0, (worksheet.lever_graphs_s3286||0), 0.002); end
  def test_lever_graphs_b3287; assert_in_epsilon(2.0, worksheet.lever_graphs_b3287, 0.002); end
  def test_lever_graphs_k3287; assert_in_delta(0.0, (worksheet.lever_graphs_k3287||0), 0.002); end
  def test_lever_graphs_l3287; assert_in_delta(0.0, (worksheet.lever_graphs_l3287||0), 0.002); end
  def test_lever_graphs_m3287; assert_in_delta(0.0, (worksheet.lever_graphs_m3287||0), 0.002); end
  def test_lever_graphs_n3287; assert_in_delta(0.001, worksheet.lever_graphs_n3287, 0.002); end
  def test_lever_graphs_o3287; assert_in_delta(0.005000000000000001, worksheet.lever_graphs_o3287, 0.002); end
  def test_lever_graphs_p3287; assert_in_delta(0.020000000000000004, worksheet.lever_graphs_p3287, 0.002); end
  def test_lever_graphs_q3287; assert_in_delta(0.04000000000000001, worksheet.lever_graphs_q3287, 0.002); end
  def test_lever_graphs_r3287; assert_in_delta(0.06999999999999999, worksheet.lever_graphs_r3287, 0.002); end
  def test_lever_graphs_s3287; assert_in_delta(0.1, worksheet.lever_graphs_s3287, 0.002); end
  def test_lever_graphs_b3288; assert_in_epsilon(3.0, worksheet.lever_graphs_b3288, 0.002); end
  def test_lever_graphs_k3288; assert_in_delta(0.0, (worksheet.lever_graphs_k3288||0), 0.002); end
  def test_lever_graphs_l3288; assert_in_delta(0.0, (worksheet.lever_graphs_l3288||0), 0.002); end
  def test_lever_graphs_m3288; assert_in_delta(0.0, (worksheet.lever_graphs_m3288||0), 0.002); end
  def test_lever_graphs_n3288; assert_in_delta(0.0025, worksheet.lever_graphs_n3288, 0.002); end
  def test_lever_graphs_o3288; assert_in_delta(0.0125, worksheet.lever_graphs_o3288, 0.002); end
  def test_lever_graphs_p3288; assert_in_delta(0.05, worksheet.lever_graphs_p3288, 0.002); end
  def test_lever_graphs_q3288; assert_in_delta(0.1, worksheet.lever_graphs_q3288, 0.002); end
  def test_lever_graphs_r3288; assert_in_delta(0.175, worksheet.lever_graphs_r3288, 0.002); end
  def test_lever_graphs_s3288; assert_in_delta(0.25, worksheet.lever_graphs_s3288, 0.002); end
  def test_lever_graphs_b3289; assert_in_epsilon(4.0, worksheet.lever_graphs_b3289, 0.002); end
  def test_lever_graphs_k3289; assert_in_delta(0.0, (worksheet.lever_graphs_k3289||0), 0.002); end
  def test_lever_graphs_l3289; assert_in_delta(0.0, (worksheet.lever_graphs_l3289||0), 0.002); end
  def test_lever_graphs_m3289; assert_in_delta(0.0, (worksheet.lever_graphs_m3289||0), 0.002); end
  def test_lever_graphs_n3289; assert_in_delta(0.01, worksheet.lever_graphs_n3289, 0.002); end
  def test_lever_graphs_o3289; assert_in_delta(0.05, worksheet.lever_graphs_o3289, 0.002); end
  def test_lever_graphs_p3289; assert_in_delta(0.2, worksheet.lever_graphs_p3289, 0.002); end
  def test_lever_graphs_q3289; assert_in_delta(0.4, worksheet.lever_graphs_q3289, 0.002); end
  def test_lever_graphs_r3289; assert_in_delta(0.7, worksheet.lever_graphs_r3289, 0.002); end
  def test_lever_graphs_s3289; assert_in_delta(1.0, worksheet.lever_graphs_s3289, 0.002); end
  def test_lever_graphs_c3302; assert_equal("1975", worksheet.lever_graphs_c3302); end
  def test_lever_graphs_d3302; assert_equal("1980", worksheet.lever_graphs_d3302); end
  def test_lever_graphs_e3302; assert_equal("1985", worksheet.lever_graphs_e3302); end
  def test_lever_graphs_f3302; assert_equal("1990", worksheet.lever_graphs_f3302); end
  def test_lever_graphs_g3302; assert_equal("1995", worksheet.lever_graphs_g3302); end
  def test_lever_graphs_h3302; assert_equal("2000", worksheet.lever_graphs_h3302); end
  def test_lever_graphs_i3302; assert_equal("2005", worksheet.lever_graphs_i3302); end
  def test_lever_graphs_j3302; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3302, 0.002); end
  def test_lever_graphs_k3302; assert_equal("2011", worksheet.lever_graphs_k3302); end
  def test_lever_graphs_l3302; assert_equal("2015", worksheet.lever_graphs_l3302); end
  def test_lever_graphs_m3302; assert_equal("2020", worksheet.lever_graphs_m3302); end
  def test_lever_graphs_n3302; assert_equal("2025", worksheet.lever_graphs_n3302); end
  def test_lever_graphs_o3302; assert_equal("2030", worksheet.lever_graphs_o3302); end
  def test_lever_graphs_p3302; assert_equal("2035", worksheet.lever_graphs_p3302); end
  def test_lever_graphs_q3302; assert_equal("2040", worksheet.lever_graphs_q3302); end
  def test_lever_graphs_r3302; assert_equal("2045", worksheet.lever_graphs_r3302); end
  def test_lever_graphs_s3302; assert_equal("2050", worksheet.lever_graphs_s3302); end
  def test_lever_graphs_b3303; assert_equal("Historic data", worksheet.lever_graphs_b3303); end
  def test_lever_graphs_b3304; assert_in_delta(1.0, worksheet.lever_graphs_b3304, 0.002); end
  def test_lever_graphs_k3304; assert_in_delta(0.0, (worksheet.lever_graphs_k3304||0), 0.002); end
  def test_lever_graphs_l3304; assert_in_delta(0.0, (worksheet.lever_graphs_l3304||0), 0.002); end
  def test_lever_graphs_m3304; assert_in_delta(0.0, (worksheet.lever_graphs_m3304||0), 0.002); end
  def test_lever_graphs_n3304; assert_in_delta(0.0, (worksheet.lever_graphs_n3304||0), 0.002); end
  def test_lever_graphs_o3304; assert_in_delta(0.0, (worksheet.lever_graphs_o3304||0), 0.002); end
  def test_lever_graphs_p3304; assert_in_delta(0.0, (worksheet.lever_graphs_p3304||0), 0.002); end
  def test_lever_graphs_q3304; assert_in_delta(0.0, (worksheet.lever_graphs_q3304||0), 0.002); end
  def test_lever_graphs_r3304; assert_in_delta(0.0, (worksheet.lever_graphs_r3304||0), 0.002); end
  def test_lever_graphs_s3304; assert_in_delta(0.0, (worksheet.lever_graphs_s3304||0), 0.002); end
  def test_lever_graphs_b3305; assert_in_epsilon(2.0, worksheet.lever_graphs_b3305, 0.002); end
  def test_lever_graphs_k3305; assert_in_delta(0.0, (worksheet.lever_graphs_k3305||0), 0.002); end
  def test_lever_graphs_l3305; assert_in_delta(0.0, (worksheet.lever_graphs_l3305||0), 0.002); end
  def test_lever_graphs_m3305; assert_in_delta(0.0, (worksheet.lever_graphs_m3305||0), 0.002); end
  def test_lever_graphs_n3305; assert_in_delta(0.01, worksheet.lever_graphs_n3305, 0.002); end
  def test_lever_graphs_o3305; assert_in_delta(0.05, worksheet.lever_graphs_o3305, 0.002); end
  def test_lever_graphs_p3305; assert_in_delta(0.2, worksheet.lever_graphs_p3305, 0.002); end
  def test_lever_graphs_q3305; assert_in_delta(0.4, worksheet.lever_graphs_q3305, 0.002); end
  def test_lever_graphs_r3305; assert_in_delta(0.7, worksheet.lever_graphs_r3305, 0.002); end
  def test_lever_graphs_s3305; assert_in_delta(1.0, worksheet.lever_graphs_s3305, 0.002); end
  def test_lever_graphs_b3306; assert_in_epsilon(3.0, worksheet.lever_graphs_b3306, 0.002); end
  def test_lever_graphs_k3306; assert_in_delta(0.0, (worksheet.lever_graphs_k3306||0), 0.002); end
  def test_lever_graphs_l3306; assert_in_delta(0.0, (worksheet.lever_graphs_l3306||0), 0.002); end
  def test_lever_graphs_m3306; assert_in_delta(0.0, (worksheet.lever_graphs_m3306||0), 0.002); end
  def test_lever_graphs_n3306; assert_in_delta(0.025, worksheet.lever_graphs_n3306, 0.002); end
  def test_lever_graphs_o3306; assert_in_delta(0.125, worksheet.lever_graphs_o3306, 0.002); end
  def test_lever_graphs_p3306; assert_in_delta(0.5, worksheet.lever_graphs_p3306, 0.002); end
  def test_lever_graphs_q3306; assert_in_delta(1.0, worksheet.lever_graphs_q3306, 0.002); end
  def test_lever_graphs_r3306; assert_in_epsilon(1.75, worksheet.lever_graphs_r3306, 0.002); end
  def test_lever_graphs_s3306; assert_in_epsilon(2.5, worksheet.lever_graphs_s3306, 0.002); end
  def test_lever_graphs_b3307; assert_in_epsilon(4.0, worksheet.lever_graphs_b3307, 0.002); end
  def test_lever_graphs_k3307; assert_in_delta(0.0, (worksheet.lever_graphs_k3307||0), 0.002); end
  def test_lever_graphs_l3307; assert_in_delta(0.0, (worksheet.lever_graphs_l3307||0), 0.002); end
  def test_lever_graphs_m3307; assert_in_delta(0.0, (worksheet.lever_graphs_m3307||0), 0.002); end
  def test_lever_graphs_n3307; assert_in_delta(0.1, worksheet.lever_graphs_n3307, 0.002); end
  def test_lever_graphs_o3307; assert_in_delta(0.5, worksheet.lever_graphs_o3307, 0.002); end
  def test_lever_graphs_p3307; assert_in_epsilon(2.0, worksheet.lever_graphs_p3307, 0.002); end
  def test_lever_graphs_q3307; assert_in_epsilon(4.0, worksheet.lever_graphs_q3307, 0.002); end
  def test_lever_graphs_r3307; assert_in_epsilon(7.0, worksheet.lever_graphs_r3307, 0.002); end
  def test_lever_graphs_s3307; assert_in_epsilon(10.0, worksheet.lever_graphs_s3307, 0.002); end
  def test_lever_graphs_c3320; assert_equal("1975", worksheet.lever_graphs_c3320); end
  def test_lever_graphs_d3320; assert_equal("1980", worksheet.lever_graphs_d3320); end
  def test_lever_graphs_e3320; assert_equal("1985", worksheet.lever_graphs_e3320); end
  def test_lever_graphs_f3320; assert_equal("1990", worksheet.lever_graphs_f3320); end
  def test_lever_graphs_g3320; assert_equal("1995", worksheet.lever_graphs_g3320); end
  def test_lever_graphs_h3320; assert_equal("2000", worksheet.lever_graphs_h3320); end
  def test_lever_graphs_i3320; assert_equal("2005", worksheet.lever_graphs_i3320); end
  def test_lever_graphs_j3320; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3320, 0.002); end
  def test_lever_graphs_k3320; assert_equal("2011", worksheet.lever_graphs_k3320); end
  def test_lever_graphs_l3320; assert_equal("2015", worksheet.lever_graphs_l3320); end
  def test_lever_graphs_m3320; assert_equal("2020", worksheet.lever_graphs_m3320); end
  def test_lever_graphs_n3320; assert_equal("2025", worksheet.lever_graphs_n3320); end
  def test_lever_graphs_o3320; assert_equal("2030", worksheet.lever_graphs_o3320); end
  def test_lever_graphs_p3320; assert_equal("2035", worksheet.lever_graphs_p3320); end
  def test_lever_graphs_q3320; assert_equal("2040", worksheet.lever_graphs_q3320); end
  def test_lever_graphs_r3320; assert_equal("2045", worksheet.lever_graphs_r3320); end
  def test_lever_graphs_s3320; assert_equal("2050", worksheet.lever_graphs_s3320); end
  def test_lever_graphs_b3321; assert_equal("Historic data", worksheet.lever_graphs_b3321); end
  def test_lever_graphs_b3322; assert_in_delta(1.0, worksheet.lever_graphs_b3322, 0.002); end
  def test_lever_graphs_k3322; assert_in_delta(0.0, (worksheet.lever_graphs_k3322||0), 0.002); end
  def test_lever_graphs_l3322; assert_in_delta(0.0, (worksheet.lever_graphs_l3322||0), 0.002); end
  def test_lever_graphs_m3322; assert_in_delta(0.0, (worksheet.lever_graphs_m3322||0), 0.002); end
  def test_lever_graphs_n3322; assert_in_delta(0.0, (worksheet.lever_graphs_n3322||0), 0.002); end
  def test_lever_graphs_o3322; assert_in_delta(0.0, (worksheet.lever_graphs_o3322||0), 0.002); end
  def test_lever_graphs_p3322; assert_in_delta(0.0, (worksheet.lever_graphs_p3322||0), 0.002); end
  def test_lever_graphs_q3322; assert_in_delta(0.0, (worksheet.lever_graphs_q3322||0), 0.002); end
  def test_lever_graphs_r3322; assert_in_delta(0.0, (worksheet.lever_graphs_r3322||0), 0.002); end
  def test_lever_graphs_s3322; assert_in_delta(0.0, (worksheet.lever_graphs_s3322||0), 0.002); end
  def test_lever_graphs_b3323; assert_in_epsilon(2.0, worksheet.lever_graphs_b3323, 0.002); end
  def test_lever_graphs_k3323; assert_in_delta(0.0, (worksheet.lever_graphs_k3323||0), 0.002); end
  def test_lever_graphs_l3323; assert_in_delta(0.0, (worksheet.lever_graphs_l3323||0), 0.002); end
  def test_lever_graphs_m3323; assert_in_delta(0.0, (worksheet.lever_graphs_m3323||0), 0.002); end
  def test_lever_graphs_n3323; assert_in_delta(0.0037000000000000006, worksheet.lever_graphs_n3323, 0.002); end
  def test_lever_graphs_o3323; assert_in_delta(0.018500000000000003, worksheet.lever_graphs_o3323, 0.002); end
  def test_lever_graphs_p3323; assert_in_delta(0.07400000000000001, worksheet.lever_graphs_p3323, 0.002); end
  def test_lever_graphs_q3323; assert_in_delta(0.14800000000000002, worksheet.lever_graphs_q3323, 0.002); end
  def test_lever_graphs_r3323; assert_in_delta(0.259, worksheet.lever_graphs_r3323, 0.002); end
  def test_lever_graphs_s3323; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_s3323, 0.002); end
  def test_lever_graphs_b3324; assert_in_epsilon(3.0, worksheet.lever_graphs_b3324, 0.002); end
  def test_lever_graphs_k3324; assert_in_delta(0.0, (worksheet.lever_graphs_k3324||0), 0.002); end
  def test_lever_graphs_l3324; assert_in_delta(0.0, (worksheet.lever_graphs_l3324||0), 0.002); end
  def test_lever_graphs_m3324; assert_in_delta(0.0, (worksheet.lever_graphs_m3324||0), 0.002); end
  def test_lever_graphs_n3324; assert_in_delta(0.009250000000000001, worksheet.lever_graphs_n3324, 0.002); end
  def test_lever_graphs_o3324; assert_in_delta(0.046250000000000006, worksheet.lever_graphs_o3324, 0.002); end
  def test_lever_graphs_p3324; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_p3324, 0.002); end
  def test_lever_graphs_q3324; assert_in_delta(0.37000000000000005, worksheet.lever_graphs_q3324, 0.002); end
  def test_lever_graphs_r3324; assert_in_delta(0.6475, worksheet.lever_graphs_r3324, 0.002); end
  def test_lever_graphs_s3324; assert_in_delta(0.925, worksheet.lever_graphs_s3324, 0.002); end
  def test_lever_graphs_b3325; assert_in_epsilon(4.0, worksheet.lever_graphs_b3325, 0.002); end
  def test_lever_graphs_k3325; assert_in_delta(0.0, (worksheet.lever_graphs_k3325||0), 0.002); end
  def test_lever_graphs_l3325; assert_in_delta(0.0, (worksheet.lever_graphs_l3325||0), 0.002); end
  def test_lever_graphs_m3325; assert_in_delta(0.0, (worksheet.lever_graphs_m3325||0), 0.002); end
  def test_lever_graphs_n3325; assert_in_delta(0.037000000000000005, worksheet.lever_graphs_n3325, 0.002); end
  def test_lever_graphs_o3325; assert_in_delta(0.18500000000000003, worksheet.lever_graphs_o3325, 0.002); end
  def test_lever_graphs_p3325; assert_in_delta(0.7400000000000001, worksheet.lever_graphs_p3325, 0.002); end
  def test_lever_graphs_q3325; assert_in_epsilon(1.4800000000000002, worksheet.lever_graphs_q3325, 0.002); end
  def test_lever_graphs_r3325; assert_in_epsilon(2.59, worksheet.lever_graphs_r3325, 0.002); end
  def test_lever_graphs_s3325; assert_in_epsilon(3.7, worksheet.lever_graphs_s3325, 0.002); end
  def test_lever_graphs_b2434; assert_equal("Year", worksheet.lever_graphs_b2434); end
  def test_lever_graphs_c2434; assert_equal("Level", worksheet.lever_graphs_c2434); end
  def test_lever_graphs_d2434; assert_equal("Title", worksheet.lever_graphs_d2434); end
  def test_lever_graphs_e2434; assert_equal("heater.solid.boiler.urban.space", worksheet.lever_graphs_e2434); end
  def test_lever_graphs_f2434; assert_equal("heater.liquid.boiler.urban.space", worksheet.lever_graphs_f2434); end
  def test_lever_graphs_g2434; assert_equal("heater.gas.boiler.urban.space", worksheet.lever_graphs_g2434); end
  def test_lever_graphs_h2434; assert_equal("heater.heatpump.urban.space", worksheet.lever_graphs_h2434); end
  def test_lever_graphs_i2434; assert_equal("heater.electricity.urban.space", worksheet.lever_graphs_i2434); end
  def test_lever_graphs_j2434; assert_equal("heater.solar.urban.space", worksheet.lever_graphs_j2434); end
  def test_lever_graphs_k2434; assert_equal("heater.microchp.urban.space", worksheet.lever_graphs_k2434); end
  def test_lever_graphs_l2434; assert_equal("heater.districtheating.urban.space", worksheet.lever_graphs_l2434); end
  def test_lever_graphs_b2435; assert_in_epsilon(2011.0, worksheet.lever_graphs_b2435, 0.002); end
  def test_lever_graphs_c2435; assert_in_delta(1.0, worksheet.lever_graphs_c2435, 0.002); end
  def test_lever_graphs_d2435; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2435, 0.002); end
  def test_lever_graphs_e2435; assert_in_delta(0.07, worksheet.lever_graphs_e2435, 0.002); end
  def test_lever_graphs_f2435; assert_in_delta(0.14, worksheet.lever_graphs_f2435, 0.002); end
  def test_lever_graphs_g2435; assert_in_delta(0.55, worksheet.lever_graphs_g2435, 0.002); end
  def test_lever_graphs_h2435; assert_in_delta(0.02, worksheet.lever_graphs_h2435, 0.002); end
  def test_lever_graphs_i2435; assert_in_delta(0.03, worksheet.lever_graphs_i2435, 0.002); end
  def test_lever_graphs_j2435; assert_in_delta(0.0, (worksheet.lever_graphs_j2435||0), 0.002); end
  def test_lever_graphs_k2435; assert_in_delta(0.02, worksheet.lever_graphs_k2435, 0.002); end
  def test_lever_graphs_l2435; assert_in_delta(0.17, worksheet.lever_graphs_l2435, 0.002); end
  def test_lever_graphs_b2436; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2436, 0.002); end
  def test_lever_graphs_c2436; assert_in_delta(1.0, worksheet.lever_graphs_c2436, 0.002); end
  def test_lever_graphs_d2436; assert_equal("2050: Level 1", worksheet.lever_graphs_d2436); end
  def test_lever_graphs_e2436; assert_in_delta(0.02, worksheet.lever_graphs_e2436, 0.002); end
  def test_lever_graphs_f2436; assert_in_delta(0.14, worksheet.lever_graphs_f2436, 0.002); end
  def test_lever_graphs_g2436; assert_in_delta(0.55, worksheet.lever_graphs_g2436, 0.002); end
  def test_lever_graphs_h2436; assert_in_delta(0.02, worksheet.lever_graphs_h2436, 0.002); end
  def test_lever_graphs_i2436; assert_in_delta(0.08, worksheet.lever_graphs_i2436, 0.002); end
  def test_lever_graphs_j2436; assert_in_delta(0.0, (worksheet.lever_graphs_j2436||0), 0.002); end
  def test_lever_graphs_k2436; assert_in_delta(0.02, worksheet.lever_graphs_k2436, 0.002); end
  def test_lever_graphs_l2436; assert_in_delta(0.17, worksheet.lever_graphs_l2436, 0.002); end
  def test_lever_graphs_b2437; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2437, 0.002); end
  def test_lever_graphs_c2437; assert_in_epsilon(2.0, worksheet.lever_graphs_c2437, 0.002); end
  def test_lever_graphs_d2437; assert_equal("2050: Level 2", worksheet.lever_graphs_d2437); end
  def test_lever_graphs_e2437; assert_in_delta(0.01, worksheet.lever_graphs_e2437, 0.002); end
  def test_lever_graphs_f2437; assert_in_delta(0.01, worksheet.lever_graphs_f2437, 0.002); end
  def test_lever_graphs_g2437; assert_in_delta(0.1, worksheet.lever_graphs_g2437, 0.002); end
  def test_lever_graphs_h2437; assert_in_delta(0.15, worksheet.lever_graphs_h2437, 0.002); end
  def test_lever_graphs_i2437; assert_in_delta(0.05, worksheet.lever_graphs_i2437, 0.002); end
  def test_lever_graphs_j2437; assert_in_delta(0.05, worksheet.lever_graphs_j2437, 0.002); end
  def test_lever_graphs_k2437; assert_in_delta(0.08, worksheet.lever_graphs_k2437, 0.002); end
  def test_lever_graphs_l2437; assert_in_delta(0.55, worksheet.lever_graphs_l2437, 0.002); end
  def test_lever_graphs_b2438; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2438, 0.002); end
  def test_lever_graphs_c2438; assert_in_epsilon(3.0, worksheet.lever_graphs_c2438, 0.002); end
  def test_lever_graphs_d2438; assert_equal("2050: Level 3", worksheet.lever_graphs_d2438); end
  def test_lever_graphs_e2438; assert_in_delta(0.01, worksheet.lever_graphs_e2438, 0.002); end
  def test_lever_graphs_f2438; assert_in_delta(0.0, (worksheet.lever_graphs_f2438||0), 0.002); end
  def test_lever_graphs_g2438; assert_in_delta(0.3, worksheet.lever_graphs_g2438, 0.002); end
  def test_lever_graphs_h2438; assert_in_delta(0.35, worksheet.lever_graphs_h2438, 0.002); end
  def test_lever_graphs_i2438; assert_in_delta(0.05, worksheet.lever_graphs_i2438, 0.002); end
  def test_lever_graphs_j2438; assert_in_delta(0.1, worksheet.lever_graphs_j2438, 0.002); end
  def test_lever_graphs_k2438; assert_in_delta(0.09, worksheet.lever_graphs_k2438, 0.002); end
  def test_lever_graphs_l2438; assert_in_delta(0.1, worksheet.lever_graphs_l2438, 0.002); end
  def test_lever_graphs_b2439; assert_in_epsilon(2050.0, worksheet.lever_graphs_b2439, 0.002); end
  def test_lever_graphs_c2439; assert_in_epsilon(4.0, worksheet.lever_graphs_c2439, 0.002); end
  def test_lever_graphs_d2439; assert_equal("2050: Level 4", worksheet.lever_graphs_d2439); end
  def test_lever_graphs_e2439; assert_in_delta(0.0, (worksheet.lever_graphs_e2439||0), 0.002); end
  def test_lever_graphs_f2439; assert_in_delta(0.0, (worksheet.lever_graphs_f2439||0), 0.002); end
  def test_lever_graphs_g2439; assert_in_delta(0.1, worksheet.lever_graphs_g2439, 0.002); end
  def test_lever_graphs_h2439; assert_in_delta(0.5, worksheet.lever_graphs_h2439, 0.002); end
  def test_lever_graphs_i2439; assert_in_delta(0.02, worksheet.lever_graphs_i2439, 0.002); end
  def test_lever_graphs_j2439; assert_in_delta(0.2, worksheet.lever_graphs_j2439, 0.002); end
  def test_lever_graphs_k2439; assert_in_delta(0.11, worksheet.lever_graphs_k2439, 0.002); end
  def test_lever_graphs_l2439; assert_in_delta(0.07, worksheet.lever_graphs_l2439, 0.002); end
  def test_lever_graphs_c2351; assert_equal("1975", worksheet.lever_graphs_c2351); end
  def test_lever_graphs_d2351; assert_equal("1980", worksheet.lever_graphs_d2351); end
  def test_lever_graphs_e2351; assert_equal("1985", worksheet.lever_graphs_e2351); end
  def test_lever_graphs_f2351; assert_equal("1990", worksheet.lever_graphs_f2351); end
  def test_lever_graphs_g2351; assert_equal("1995", worksheet.lever_graphs_g2351); end
  def test_lever_graphs_h2351; assert_equal("2000", worksheet.lever_graphs_h2351); end
  def test_lever_graphs_i2351; assert_equal("2005", worksheet.lever_graphs_i2351); end
  def test_lever_graphs_j2351; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2351, 0.002); end
  def test_lever_graphs_k2351; assert_equal("2011", worksheet.lever_graphs_k2351); end
  def test_lever_graphs_l2351; assert_equal("2015", worksheet.lever_graphs_l2351); end
  def test_lever_graphs_m2351; assert_equal("2020", worksheet.lever_graphs_m2351); end
  def test_lever_graphs_n2351; assert_equal("2025", worksheet.lever_graphs_n2351); end
  def test_lever_graphs_o2351; assert_equal("2030", worksheet.lever_graphs_o2351); end
  def test_lever_graphs_p2351; assert_equal("2035", worksheet.lever_graphs_p2351); end
  def test_lever_graphs_q2351; assert_equal("2040", worksheet.lever_graphs_q2351); end
  def test_lever_graphs_r2351; assert_equal("2045", worksheet.lever_graphs_r2351); end
  def test_lever_graphs_s2351; assert_equal("2050", worksheet.lever_graphs_s2351); end
  def test_lever_graphs_b2352; assert_equal("Historic data", worksheet.lever_graphs_b2352); end
  def test_lever_graphs_b2353; assert_in_delta(1.0, worksheet.lever_graphs_b2353, 0.002); end
  def test_lever_graphs_k2353; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2353, 0.002); end
  def test_lever_graphs_l2353; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2353, 0.002); end
  def test_lever_graphs_m2353; assert_in_epsilon(4776.346153846154, worksheet.lever_graphs_m2353, 0.002); end
  def test_lever_graphs_n2353; assert_in_epsilon(4893.413461538462, worksheet.lever_graphs_n2353, 0.002); end
  def test_lever_graphs_o2353; assert_in_epsilon(5010.4807692307695, worksheet.lever_graphs_o2353, 0.002); end
  def test_lever_graphs_p2353; assert_in_epsilon(5127.548076923076, worksheet.lever_graphs_p2353, 0.002); end
  def test_lever_graphs_q2353; assert_in_epsilon(5244.615384615385, worksheet.lever_graphs_q2353, 0.002); end
  def test_lever_graphs_r2353; assert_in_epsilon(5361.682692307692, worksheet.lever_graphs_r2353, 0.002); end
  def test_lever_graphs_s2353; assert_in_epsilon(5478.75, worksheet.lever_graphs_s2353, 0.002); end
  def test_lever_graphs_b2354; assert_in_epsilon(2.0, worksheet.lever_graphs_b2354, 0.002); end
  def test_lever_graphs_k2354; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2354, 0.002); end
  def test_lever_graphs_l2354; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2354, 0.002); end
  def test_lever_graphs_m2354; assert_in_epsilon(4711.12293956044, worksheet.lever_graphs_m2354, 0.002); end
  def test_lever_graphs_n2354; assert_in_epsilon(4762.967032967033, worksheet.lever_graphs_n2354, 0.002); end
  def test_lever_graphs_o2354; assert_in_epsilon(4814.811126373626, worksheet.lever_graphs_o2354, 0.002); end
  def test_lever_graphs_p2354; assert_in_epsilon(4866.655219780219, worksheet.lever_graphs_p2354, 0.002); end
  def test_lever_graphs_q2354; assert_in_epsilon(4918.499313186813, worksheet.lever_graphs_q2354, 0.002); end
  def test_lever_graphs_r2354; assert_in_epsilon(4970.343406593406, worksheet.lever_graphs_r2354, 0.002); end
  def test_lever_graphs_s2354; assert_in_epsilon(5022.1875, worksheet.lever_graphs_s2354, 0.002); end
  def test_lever_graphs_b2355; assert_in_epsilon(3.0, worksheet.lever_graphs_b2355, 0.002); end
  def test_lever_graphs_k2355; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2355, 0.002); end
  def test_lever_graphs_l2355; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2355, 0.002); end
  def test_lever_graphs_m2355; assert_in_epsilon(4645.899725274726, worksheet.lever_graphs_m2355, 0.002); end
  def test_lever_graphs_n2355; assert_in_epsilon(4632.520604395605, worksheet.lever_graphs_n2355, 0.002); end
  def test_lever_graphs_o2355; assert_in_epsilon(4619.141483516483, worksheet.lever_graphs_o2355, 0.002); end
  def test_lever_graphs_p2355; assert_in_epsilon(4605.7623626373625, worksheet.lever_graphs_p2355, 0.002); end
  def test_lever_graphs_q2355; assert_in_epsilon(4592.383241758242, worksheet.lever_graphs_q2355, 0.002); end
  def test_lever_graphs_r2355; assert_in_epsilon(4579.004120879121, worksheet.lever_graphs_r2355, 0.002); end
  def test_lever_graphs_s2355; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2355, 0.002); end
  def test_lever_graphs_b2356; assert_in_epsilon(4.0, worksheet.lever_graphs_b2356, 0.002); end
  def test_lever_graphs_k2356; assert_in_epsilon(4565.625, worksheet.lever_graphs_k2356, 0.002); end
  def test_lever_graphs_l2356; assert_in_epsilon(4659.278846153847, worksheet.lever_graphs_l2356, 0.002); end
  def test_lever_graphs_m2356; assert_in_epsilon(4515.453296703297, worksheet.lever_graphs_m2356, 0.002); end
  def test_lever_graphs_n2356; assert_in_epsilon(4371.627747252747, worksheet.lever_graphs_n2356, 0.002); end
  def test_lever_graphs_o2356; assert_in_epsilon(4227.802197802198, worksheet.lever_graphs_o2356, 0.002); end
  def test_lever_graphs_p2356; assert_in_epsilon(4083.9766483516482, worksheet.lever_graphs_p2356, 0.002); end
  def test_lever_graphs_q2356; assert_in_epsilon(3940.1510989010994, worksheet.lever_graphs_q2356, 0.002); end
  def test_lever_graphs_r2356; assert_in_epsilon(3796.3255494505493, worksheet.lever_graphs_r2356, 0.002); end
  def test_lever_graphs_s2356; assert_in_epsilon(3652.5, worksheet.lever_graphs_s2356, 0.002); end
  def test_lever_graphs_c2341; assert_equal("1975", worksheet.lever_graphs_c2341); end
  def test_lever_graphs_d2341; assert_equal("1980", worksheet.lever_graphs_d2341); end
  def test_lever_graphs_e2341; assert_equal("1985", worksheet.lever_graphs_e2341); end
  def test_lever_graphs_f2341; assert_equal("1990", worksheet.lever_graphs_f2341); end
  def test_lever_graphs_g2341; assert_equal("1995", worksheet.lever_graphs_g2341); end
  def test_lever_graphs_h2341; assert_equal("2000", worksheet.lever_graphs_h2341); end
  def test_lever_graphs_i2341; assert_equal("2005", worksheet.lever_graphs_i2341); end
  def test_lever_graphs_j2341; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2341, 0.002); end
  def test_lever_graphs_k2341; assert_equal("2011", worksheet.lever_graphs_k2341); end
  def test_lever_graphs_l2341; assert_equal("2015", worksheet.lever_graphs_l2341); end
  def test_lever_graphs_m2341; assert_equal("2020", worksheet.lever_graphs_m2341); end
  def test_lever_graphs_n2341; assert_equal("2025", worksheet.lever_graphs_n2341); end
  def test_lever_graphs_o2341; assert_equal("2030", worksheet.lever_graphs_o2341); end
  def test_lever_graphs_p2341; assert_equal("2035", worksheet.lever_graphs_p2341); end
  def test_lever_graphs_q2341; assert_equal("2040", worksheet.lever_graphs_q2341); end
  def test_lever_graphs_r2341; assert_equal("2045", worksheet.lever_graphs_r2341); end
  def test_lever_graphs_s2341; assert_equal("2050", worksheet.lever_graphs_s2341); end
  def test_lever_graphs_b2342; assert_equal("Historic data", worksheet.lever_graphs_b2342); end
  def test_lever_graphs_b2343; assert_in_delta(1.0, worksheet.lever_graphs_b2343, 0.002); end
  def test_lever_graphs_k2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2343, 0.002); end
  def test_lever_graphs_l2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2343, 0.002); end
  def test_lever_graphs_m2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_m2343, 0.002); end
  def test_lever_graphs_n2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_n2343, 0.002); end
  def test_lever_graphs_o2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_o2343, 0.002); end
  def test_lever_graphs_p2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_p2343, 0.002); end
  def test_lever_graphs_q2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_q2343, 0.002); end
  def test_lever_graphs_r2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_r2343, 0.002); end
  def test_lever_graphs_s2343; assert_in_epsilon(9131.25, worksheet.lever_graphs_s2343, 0.002); end
  def test_lever_graphs_b2344; assert_in_epsilon(2.0, worksheet.lever_graphs_b2344, 0.002); end
  def test_lever_graphs_k2344; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2344, 0.002); end
  def test_lever_graphs_l2344; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2344, 0.002); end
  def test_lever_graphs_m2344; assert_in_epsilon(8870.357142857141, worksheet.lever_graphs_m2344, 0.002); end
  def test_lever_graphs_n2344; assert_in_epsilon(8609.464285714286, worksheet.lever_graphs_n2344, 0.002); end
  def test_lever_graphs_o2344; assert_in_epsilon(8348.571428571428, worksheet.lever_graphs_o2344, 0.002); end
  def test_lever_graphs_p2344; assert_in_epsilon(8087.678571428571, worksheet.lever_graphs_p2344, 0.002); end
  def test_lever_graphs_q2344; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_q2344, 0.002); end
  def test_lever_graphs_r2344; assert_in_epsilon(7565.892857142856, worksheet.lever_graphs_r2344, 0.002); end
  def test_lever_graphs_s2344; assert_in_epsilon(7305.0, worksheet.lever_graphs_s2344, 0.002); end
  def test_lever_graphs_b2345; assert_in_epsilon(3.0, worksheet.lever_graphs_b2345, 0.002); end
  def test_lever_graphs_k2345; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2345, 0.002); end
  def test_lever_graphs_l2345; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2345, 0.002); end
  def test_lever_graphs_m2345; assert_in_epsilon(8674.6875, worksheet.lever_graphs_m2345, 0.002); end
  def test_lever_graphs_n2345; assert_in_epsilon(8218.125, worksheet.lever_graphs_n2345, 0.002); end
  def test_lever_graphs_o2345; assert_in_epsilon(7761.562499999999, worksheet.lever_graphs_o2345, 0.002); end
  def test_lever_graphs_p2345; assert_in_epsilon(7305.0, worksheet.lever_graphs_p2345, 0.002); end
  def test_lever_graphs_q2345; assert_in_epsilon(6848.4375, worksheet.lever_graphs_q2345, 0.002); end
  def test_lever_graphs_r2345; assert_in_epsilon(6391.874999999999, worksheet.lever_graphs_r2345, 0.002); end
  def test_lever_graphs_s2345; assert_in_epsilon(5935.3125, worksheet.lever_graphs_s2345, 0.002); end
  def test_lever_graphs_b2346; assert_in_epsilon(4.0, worksheet.lever_graphs_b2346, 0.002); end
  def test_lever_graphs_k2346; assert_in_epsilon(9131.25, worksheet.lever_graphs_k2346, 0.002); end
  def test_lever_graphs_l2346; assert_in_epsilon(9131.25, worksheet.lever_graphs_l2346, 0.002); end
  def test_lever_graphs_m2346; assert_in_epsilon(8479.017857142857, worksheet.lever_graphs_m2346, 0.002); end
  def test_lever_graphs_n2346; assert_in_epsilon(7826.785714285714, worksheet.lever_graphs_n2346, 0.002); end
  def test_lever_graphs_o2346; assert_in_epsilon(7174.553571428571, worksheet.lever_graphs_o2346, 0.002); end
  def test_lever_graphs_p2346; assert_in_epsilon(6522.3214285714275, worksheet.lever_graphs_p2346, 0.002); end
  def test_lever_graphs_q2346; assert_in_epsilon(5870.089285714285, worksheet.lever_graphs_q2346, 0.002); end
  def test_lever_graphs_r2346; assert_in_epsilon(5217.857142857142, worksheet.lever_graphs_r2346, 0.002); end
  def test_lever_graphs_s2346; assert_in_epsilon(4565.625, worksheet.lever_graphs_s2346, 0.002); end
  def test_lever_graphs_c2501; assert_equal("1975", worksheet.lever_graphs_c2501); end
  def test_lever_graphs_d2501; assert_equal("1980", worksheet.lever_graphs_d2501); end
  def test_lever_graphs_e2501; assert_equal("1985", worksheet.lever_graphs_e2501); end
  def test_lever_graphs_f2501; assert_equal("1990", worksheet.lever_graphs_f2501); end
  def test_lever_graphs_g2501; assert_equal("1995", worksheet.lever_graphs_g2501); end
  def test_lever_graphs_h2501; assert_equal("2000", worksheet.lever_graphs_h2501); end
  def test_lever_graphs_i2501; assert_equal("2005", worksheet.lever_graphs_i2501); end
  def test_lever_graphs_j2501; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2501, 0.002); end
  def test_lever_graphs_k2501; assert_equal("2011", worksheet.lever_graphs_k2501); end
  def test_lever_graphs_l2501; assert_equal("2015", worksheet.lever_graphs_l2501); end
  def test_lever_graphs_m2501; assert_equal("2020", worksheet.lever_graphs_m2501); end
  def test_lever_graphs_n2501; assert_equal("2025", worksheet.lever_graphs_n2501); end
  def test_lever_graphs_o2501; assert_equal("2030", worksheet.lever_graphs_o2501); end
  def test_lever_graphs_p2501; assert_equal("2035", worksheet.lever_graphs_p2501); end
  def test_lever_graphs_q2501; assert_equal("2040", worksheet.lever_graphs_q2501); end
  def test_lever_graphs_r2501; assert_equal("2045", worksheet.lever_graphs_r2501); end
  def test_lever_graphs_s2501; assert_equal("2050", worksheet.lever_graphs_s2501); end
  def test_lever_graphs_b2502; assert_equal("Historic data", worksheet.lever_graphs_b2502); end
  def test_lever_graphs_b2503; assert_in_delta(1.0, worksheet.lever_graphs_b2503, 0.002); end
  def test_lever_graphs_k2503; assert_in_epsilon(18.0, worksheet.lever_graphs_k2503, 0.002); end
  def test_lever_graphs_l2503; assert_in_epsilon(17.1, worksheet.lever_graphs_l2503, 0.002); end
  def test_lever_graphs_m2503; assert_in_epsilon(16.371428571428574, worksheet.lever_graphs_m2503, 0.002); end
  def test_lever_graphs_n2503; assert_in_epsilon(15.642857142857144, worksheet.lever_graphs_n2503, 0.002); end
  def test_lever_graphs_o2503; assert_in_epsilon(14.914285714285715, worksheet.lever_graphs_o2503, 0.002); end
  def test_lever_graphs_p2503; assert_in_epsilon(14.185714285714287, worksheet.lever_graphs_p2503, 0.002); end
  def test_lever_graphs_q2503; assert_in_epsilon(13.457142857142857, worksheet.lever_graphs_q2503, 0.002); end
  def test_lever_graphs_r2503; assert_in_epsilon(12.728571428571428, worksheet.lever_graphs_r2503, 0.002); end
  def test_lever_graphs_s2503; assert_in_epsilon(12.0, worksheet.lever_graphs_s2503, 0.002); end
  def test_lever_graphs_b2504; assert_in_epsilon(2.0, worksheet.lever_graphs_b2504, 0.002); end
  def test_lever_graphs_k2504; assert_in_epsilon(18.0, worksheet.lever_graphs_k2504, 0.002); end
  def test_lever_graphs_l2504; assert_in_epsilon(17.1, worksheet.lever_graphs_l2504, 0.002); end
  def test_lever_graphs_m2504; assert_in_epsilon(15.942857142857143, worksheet.lever_graphs_m2504, 0.002); end
  def test_lever_graphs_n2504; assert_in_epsilon(14.785714285714286, worksheet.lever_graphs_n2504, 0.002); end
  def test_lever_graphs_o2504; assert_in_epsilon(13.62857142857143, worksheet.lever_graphs_o2504, 0.002); end
  def test_lever_graphs_p2504; assert_in_epsilon(12.471428571428572, worksheet.lever_graphs_p2504, 0.002); end
  def test_lever_graphs_q2504; assert_in_epsilon(11.314285714285715, worksheet.lever_graphs_q2504, 0.002); end
  def test_lever_graphs_r2504; assert_in_epsilon(10.157142857142857, worksheet.lever_graphs_r2504, 0.002); end
  def test_lever_graphs_s2504; assert_in_epsilon(9.0, worksheet.lever_graphs_s2504, 0.002); end
  def test_lever_graphs_b2505; assert_in_epsilon(3.0, worksheet.lever_graphs_b2505, 0.002); end
  def test_lever_graphs_k2505; assert_in_epsilon(18.0, worksheet.lever_graphs_k2505, 0.002); end
  def test_lever_graphs_l2505; assert_in_epsilon(17.1, worksheet.lever_graphs_l2505, 0.002); end
  def test_lever_graphs_m2505; assert_in_epsilon(15.514285714285716, worksheet.lever_graphs_m2505, 0.002); end
  def test_lever_graphs_n2505; assert_in_epsilon(13.928571428571429, worksheet.lever_graphs_n2505, 0.002); end
  def test_lever_graphs_o2505; assert_in_epsilon(12.342857142857143, worksheet.lever_graphs_o2505, 0.002); end
  def test_lever_graphs_p2505; assert_in_epsilon(10.757142857142858, worksheet.lever_graphs_p2505, 0.002); end
  def test_lever_graphs_q2505; assert_in_epsilon(9.17142857142857, worksheet.lever_graphs_q2505, 0.002); end
  def test_lever_graphs_r2505; assert_in_epsilon(7.585714285714285, worksheet.lever_graphs_r2505, 0.002); end
  def test_lever_graphs_s2505; assert_in_epsilon(6.0, worksheet.lever_graphs_s2505, 0.002); end
  def test_lever_graphs_b2506; assert_in_epsilon(4.0, worksheet.lever_graphs_b2506, 0.002); end
  def test_lever_graphs_k2506; assert_in_epsilon(18.0, worksheet.lever_graphs_k2506, 0.002); end
  def test_lever_graphs_l2506; assert_in_epsilon(17.1, worksheet.lever_graphs_l2506, 0.002); end
  def test_lever_graphs_m2506; assert_in_epsilon(15.22857142857143, worksheet.lever_graphs_m2506, 0.002); end
  def test_lever_graphs_n2506; assert_in_epsilon(13.357142857142858, worksheet.lever_graphs_n2506, 0.002); end
  def test_lever_graphs_o2506; assert_in_epsilon(11.485714285714288, worksheet.lever_graphs_o2506, 0.002); end
  def test_lever_graphs_p2506; assert_in_epsilon(9.614285714285716, worksheet.lever_graphs_p2506, 0.002); end
  def test_lever_graphs_q2506; assert_in_epsilon(7.742857142857144, worksheet.lever_graphs_q2506, 0.002); end
  def test_lever_graphs_r2506; assert_in_epsilon(5.871428571428572, worksheet.lever_graphs_r2506, 0.002); end
  def test_lever_graphs_s2506; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2506, 0.002); end
  def test_lever_graphs_c2491; assert_equal("1975", worksheet.lever_graphs_c2491); end
  def test_lever_graphs_d2491; assert_equal("1980", worksheet.lever_graphs_d2491); end
  def test_lever_graphs_e2491; assert_equal("1985", worksheet.lever_graphs_e2491); end
  def test_lever_graphs_f2491; assert_equal("1990", worksheet.lever_graphs_f2491); end
  def test_lever_graphs_g2491; assert_equal("1995", worksheet.lever_graphs_g2491); end
  def test_lever_graphs_h2491; assert_equal("2000", worksheet.lever_graphs_h2491); end
  def test_lever_graphs_i2491; assert_equal("2005", worksheet.lever_graphs_i2491); end
  def test_lever_graphs_j2491; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2491, 0.002); end
  def test_lever_graphs_k2491; assert_equal("2011", worksheet.lever_graphs_k2491); end
  def test_lever_graphs_l2491; assert_equal("2015", worksheet.lever_graphs_l2491); end
  def test_lever_graphs_m2491; assert_equal("2020", worksheet.lever_graphs_m2491); end
  def test_lever_graphs_n2491; assert_equal("2025", worksheet.lever_graphs_n2491); end
  def test_lever_graphs_o2491; assert_equal("2030", worksheet.lever_graphs_o2491); end
  def test_lever_graphs_p2491; assert_equal("2035", worksheet.lever_graphs_p2491); end
  def test_lever_graphs_q2491; assert_equal("2040", worksheet.lever_graphs_q2491); end
  def test_lever_graphs_r2491; assert_equal("2045", worksheet.lever_graphs_r2491); end
  def test_lever_graphs_s2491; assert_equal("2050", worksheet.lever_graphs_s2491); end
  def test_lever_graphs_b2492; assert_equal("Historic data", worksheet.lever_graphs_b2492); end
  def test_lever_graphs_b2493; assert_in_delta(1.0, worksheet.lever_graphs_b2493, 0.002); end
  def test_lever_graphs_k2493; assert_in_epsilon(15.000000000000002, worksheet.lever_graphs_k2493, 0.002); end
  def test_lever_graphs_l2493; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2493, 0.002); end
  def test_lever_graphs_m2493; assert_in_epsilon(14.057142857142855, worksheet.lever_graphs_m2493, 0.002); end
  def test_lever_graphs_n2493; assert_in_epsilon(13.714285714285714, worksheet.lever_graphs_n2493, 0.002); end
  def test_lever_graphs_o2493; assert_in_epsilon(13.37142857142857, worksheet.lever_graphs_o2493, 0.002); end
  def test_lever_graphs_p2493; assert_in_epsilon(13.028571428571428, worksheet.lever_graphs_p2493, 0.002); end
  def test_lever_graphs_q2493; assert_in_epsilon(12.685714285714285, worksheet.lever_graphs_q2493, 0.002); end
  def test_lever_graphs_r2493; assert_in_epsilon(12.342857142857142, worksheet.lever_graphs_r2493, 0.002); end
  def test_lever_graphs_s2493; assert_in_epsilon(12.0, worksheet.lever_graphs_s2493, 0.002); end
  def test_lever_graphs_b2494; assert_in_epsilon(2.0, worksheet.lever_graphs_b2494, 0.002); end
  def test_lever_graphs_k2494; assert_in_epsilon(15.000000000000002, worksheet.lever_graphs_k2494, 0.002); end
  def test_lever_graphs_l2494; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2494, 0.002); end
  def test_lever_graphs_m2494; assert_in_epsilon(13.628571428571426, worksheet.lever_graphs_m2494, 0.002); end
  def test_lever_graphs_n2494; assert_in_epsilon(12.857142857142856, worksheet.lever_graphs_n2494, 0.002); end
  def test_lever_graphs_o2494; assert_in_epsilon(12.085714285714285, worksheet.lever_graphs_o2494, 0.002); end
  def test_lever_graphs_p2494; assert_in_epsilon(11.314285714285713, worksheet.lever_graphs_p2494, 0.002); end
  def test_lever_graphs_q2494; assert_in_epsilon(10.542857142857143, worksheet.lever_graphs_q2494, 0.002); end
  def test_lever_graphs_r2494; assert_in_epsilon(9.77142857142857, worksheet.lever_graphs_r2494, 0.002); end
  def test_lever_graphs_s2494; assert_in_epsilon(9.0, worksheet.lever_graphs_s2494, 0.002); end
  def test_lever_graphs_b2495; assert_in_epsilon(3.0, worksheet.lever_graphs_b2495, 0.002); end
  def test_lever_graphs_k2495; assert_in_epsilon(15.000000000000002, worksheet.lever_graphs_k2495, 0.002); end
  def test_lever_graphs_l2495; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2495, 0.002); end
  def test_lever_graphs_m2495; assert_in_epsilon(13.2, worksheet.lever_graphs_m2495, 0.002); end
  def test_lever_graphs_n2495; assert_in_epsilon(11.999999999999998, worksheet.lever_graphs_n2495, 0.002); end
  def test_lever_graphs_o2495; assert_in_epsilon(10.799999999999999, worksheet.lever_graphs_o2495, 0.002); end
  def test_lever_graphs_p2495; assert_in_epsilon(9.6, worksheet.lever_graphs_p2495, 0.002); end
  def test_lever_graphs_q2495; assert_in_epsilon(8.399999999999999, worksheet.lever_graphs_q2495, 0.002); end
  def test_lever_graphs_r2495; assert_in_epsilon(7.199999999999999, worksheet.lever_graphs_r2495, 0.002); end
  def test_lever_graphs_s2495; assert_in_epsilon(6.0, worksheet.lever_graphs_s2495, 0.002); end
  def test_lever_graphs_b2496; assert_in_epsilon(4.0, worksheet.lever_graphs_b2496, 0.002); end
  def test_lever_graphs_k2496; assert_in_epsilon(15.000000000000002, worksheet.lever_graphs_k2496, 0.002); end
  def test_lever_graphs_l2496; assert_in_epsilon(14.399999999999999, worksheet.lever_graphs_l2496, 0.002); end
  def test_lever_graphs_m2496; assert_in_epsilon(12.914285714285713, worksheet.lever_graphs_m2496, 0.002); end
  def test_lever_graphs_n2496; assert_in_epsilon(11.428571428571427, worksheet.lever_graphs_n2496, 0.002); end
  def test_lever_graphs_o2496; assert_in_epsilon(9.942857142857143, worksheet.lever_graphs_o2496, 0.002); end
  def test_lever_graphs_p2496; assert_in_epsilon(8.457142857142857, worksheet.lever_graphs_p2496, 0.002); end
  def test_lever_graphs_q2496; assert_in_epsilon(6.9714285714285715, worksheet.lever_graphs_q2496, 0.002); end
  def test_lever_graphs_r2496; assert_in_epsilon(5.485714285714286, worksheet.lever_graphs_r2496, 0.002); end
  def test_lever_graphs_s2496; assert_in_epsilon(4.000000000000001, worksheet.lever_graphs_s2496, 0.002); end
  def test_lever_graphs_c2311; assert_equal("1975", worksheet.lever_graphs_c2311); end
  def test_lever_graphs_d2311; assert_equal("1980", worksheet.lever_graphs_d2311); end
  def test_lever_graphs_e2311; assert_equal("1985", worksheet.lever_graphs_e2311); end
  def test_lever_graphs_f2311; assert_equal("1990", worksheet.lever_graphs_f2311); end
  def test_lever_graphs_g2311; assert_equal("1995", worksheet.lever_graphs_g2311); end
  def test_lever_graphs_h2311; assert_equal("2000", worksheet.lever_graphs_h2311); end
  def test_lever_graphs_i2311; assert_equal("2005", worksheet.lever_graphs_i2311); end
  def test_lever_graphs_j2311; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2311, 0.002); end
  def test_lever_graphs_k2311; assert_equal("2011", worksheet.lever_graphs_k2311); end
  def test_lever_graphs_l2311; assert_equal("2015", worksheet.lever_graphs_l2311); end
  def test_lever_graphs_m2311; assert_equal("2020", worksheet.lever_graphs_m2311); end
  def test_lever_graphs_n2311; assert_equal("2025", worksheet.lever_graphs_n2311); end
  def test_lever_graphs_o2311; assert_equal("2030", worksheet.lever_graphs_o2311); end
  def test_lever_graphs_p2311; assert_equal("2035", worksheet.lever_graphs_p2311); end
  def test_lever_graphs_q2311; assert_equal("2040", worksheet.lever_graphs_q2311); end
  def test_lever_graphs_r2311; assert_equal("2045", worksheet.lever_graphs_r2311); end
  def test_lever_graphs_s2311; assert_equal("2050", worksheet.lever_graphs_s2311); end
  def test_lever_graphs_b2312; assert_equal("Historic data", worksheet.lever_graphs_b2312); end
  def test_lever_graphs_b2313; assert_in_delta(1.0, worksheet.lever_graphs_b2313, 0.002); end
  def test_lever_graphs_k2313; assert_in_epsilon(29.0, worksheet.lever_graphs_k2313, 0.002); end
  def test_lever_graphs_l2313; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2313, 0.002); end
  def test_lever_graphs_m2313; assert_in_epsilon(27.93406593406593, worksheet.lever_graphs_m2313, 0.002); end
  def test_lever_graphs_n2313; assert_in_epsilon(27.27838827838828, worksheet.lever_graphs_n2313, 0.002); end
  def test_lever_graphs_o2313; assert_in_epsilon(26.62271062271062, worksheet.lever_graphs_o2313, 0.002); end
  def test_lever_graphs_p2313; assert_in_epsilon(25.967032967032964, worksheet.lever_graphs_p2313, 0.002); end
  def test_lever_graphs_q2313; assert_in_epsilon(25.31135531135531, worksheet.lever_graphs_q2313, 0.002); end
  def test_lever_graphs_r2313; assert_in_epsilon(24.655677655677653, worksheet.lever_graphs_r2313, 0.002); end
  def test_lever_graphs_s2313; assert_in_epsilon(24.0, worksheet.lever_graphs_s2313, 0.002); end
  def test_lever_graphs_b2314; assert_in_epsilon(2.0, worksheet.lever_graphs_b2314, 0.002); end
  def test_lever_graphs_k2314; assert_in_epsilon(29.0, worksheet.lever_graphs_k2314, 0.002); end
  def test_lever_graphs_l2314; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2314, 0.002); end
  def test_lever_graphs_m2314; assert_in_epsilon(28.076923076923073, worksheet.lever_graphs_m2314, 0.002); end
  def test_lever_graphs_n2314; assert_in_epsilon(27.564102564102566, worksheet.lever_graphs_n2314, 0.002); end
  def test_lever_graphs_o2314; assert_in_epsilon(27.05128205128205, worksheet.lever_graphs_o2314, 0.002); end
  def test_lever_graphs_p2314; assert_in_epsilon(26.538461538461537, worksheet.lever_graphs_p2314, 0.002); end
  def test_lever_graphs_q2314; assert_in_epsilon(26.025641025641026, worksheet.lever_graphs_q2314, 0.002); end
  def test_lever_graphs_r2314; assert_in_epsilon(25.51282051282051, worksheet.lever_graphs_r2314, 0.002); end
  def test_lever_graphs_s2314; assert_in_epsilon(25.0, worksheet.lever_graphs_s2314, 0.002); end
  def test_lever_graphs_b2315; assert_in_epsilon(3.0, worksheet.lever_graphs_b2315, 0.002); end
  def test_lever_graphs_k2315; assert_in_epsilon(29.0, worksheet.lever_graphs_k2315, 0.002); end
  def test_lever_graphs_l2315; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2315, 0.002); end
  def test_lever_graphs_m2315; assert_in_epsilon(28.21978021978022, worksheet.lever_graphs_m2315, 0.002); end
  def test_lever_graphs_n2315; assert_in_epsilon(27.84981684981685, worksheet.lever_graphs_n2315, 0.002); end
  def test_lever_graphs_o2315; assert_in_epsilon(27.479853479853478, worksheet.lever_graphs_o2315, 0.002); end
  def test_lever_graphs_p2315; assert_in_epsilon(27.10989010989011, worksheet.lever_graphs_p2315, 0.002); end
  def test_lever_graphs_q2315; assert_in_epsilon(26.73992673992674, worksheet.lever_graphs_q2315, 0.002); end
  def test_lever_graphs_r2315; assert_in_epsilon(26.36996336996337, worksheet.lever_graphs_r2315, 0.002); end
  def test_lever_graphs_s2315; assert_in_epsilon(26.0, worksheet.lever_graphs_s2315, 0.002); end
  def test_lever_graphs_b2316; assert_in_epsilon(4.0, worksheet.lever_graphs_b2316, 0.002); end
  def test_lever_graphs_k2316; assert_in_epsilon(29.0, worksheet.lever_graphs_k2316, 0.002); end
  def test_lever_graphs_l2316; assert_in_epsilon(28.58974358974359, worksheet.lever_graphs_l2316, 0.002); end
  def test_lever_graphs_m2316; assert_in_epsilon(28.36263736263736, worksheet.lever_graphs_m2316, 0.002); end
  def test_lever_graphs_n2316; assert_in_epsilon(28.13553113553114, worksheet.lever_graphs_n2316, 0.002); end
  def test_lever_graphs_o2316; assert_in_epsilon(27.908424908424905, worksheet.lever_graphs_o2316, 0.002); end
  def test_lever_graphs_p2316; assert_in_epsilon(27.68131868131868, worksheet.lever_graphs_p2316, 0.002); end
  def test_lever_graphs_q2316; assert_in_epsilon(27.454212454212453, worksheet.lever_graphs_q2316, 0.002); end
  def test_lever_graphs_r2316; assert_in_epsilon(27.227106227106226, worksheet.lever_graphs_r2316, 0.002); end
  def test_lever_graphs_s2316; assert_in_epsilon(27.0, worksheet.lever_graphs_s2316, 0.002); end
  def test_lever_graphs_c2301; assert_equal("1975", worksheet.lever_graphs_c2301); end
  def test_lever_graphs_d2301; assert_equal("1980", worksheet.lever_graphs_d2301); end
  def test_lever_graphs_e2301; assert_equal("1985", worksheet.lever_graphs_e2301); end
  def test_lever_graphs_f2301; assert_equal("1990", worksheet.lever_graphs_f2301); end
  def test_lever_graphs_g2301; assert_equal("1995", worksheet.lever_graphs_g2301); end
  def test_lever_graphs_h2301; assert_equal("2000", worksheet.lever_graphs_h2301); end
  def test_lever_graphs_i2301; assert_equal("2005", worksheet.lever_graphs_i2301); end
  def test_lever_graphs_j2301; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2301, 0.002); end
  def test_lever_graphs_k2301; assert_equal("2011", worksheet.lever_graphs_k2301); end
  def test_lever_graphs_l2301; assert_equal("2015", worksheet.lever_graphs_l2301); end
  def test_lever_graphs_m2301; assert_equal("2020", worksheet.lever_graphs_m2301); end
  def test_lever_graphs_n2301; assert_equal("2025", worksheet.lever_graphs_n2301); end
  def test_lever_graphs_o2301; assert_equal("2030", worksheet.lever_graphs_o2301); end
  def test_lever_graphs_p2301; assert_equal("2035", worksheet.lever_graphs_p2301); end
  def test_lever_graphs_q2301; assert_equal("2040", worksheet.lever_graphs_q2301); end
  def test_lever_graphs_r2301; assert_equal("2045", worksheet.lever_graphs_r2301); end
  def test_lever_graphs_s2301; assert_equal("2050", worksheet.lever_graphs_s2301); end
  def test_lever_graphs_b2302; assert_equal("Historic data", worksheet.lever_graphs_b2302); end
  def test_lever_graphs_b2303; assert_in_delta(1.0, worksheet.lever_graphs_b2303, 0.002); end
  def test_lever_graphs_k2303; assert_in_epsilon(26.5, worksheet.lever_graphs_k2303, 0.002); end
  def test_lever_graphs_l2303; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2303, 0.002); end
  def test_lever_graphs_m2303; assert_in_epsilon(26.010989010989007, worksheet.lever_graphs_m2303, 0.002); end
  def test_lever_graphs_n2303; assert_in_epsilon(25.67582417582418, worksheet.lever_graphs_n2303, 0.002); end
  def test_lever_graphs_o2303; assert_in_epsilon(25.34065934065934, worksheet.lever_graphs_o2303, 0.002); end
  def test_lever_graphs_p2303; assert_in_epsilon(25.005494505494504, worksheet.lever_graphs_p2303, 0.002); end
  def test_lever_graphs_q2303; assert_in_epsilon(24.67032967032967, worksheet.lever_graphs_q2303, 0.002); end
  def test_lever_graphs_r2303; assert_in_epsilon(24.335164835164832, worksheet.lever_graphs_r2303, 0.002); end
  def test_lever_graphs_s2303; assert_in_epsilon(24.0, worksheet.lever_graphs_s2303, 0.002); end
  def test_lever_graphs_b2304; assert_in_epsilon(2.0, worksheet.lever_graphs_b2304, 0.002); end
  def test_lever_graphs_k2304; assert_in_epsilon(26.5, worksheet.lever_graphs_k2304, 0.002); end
  def test_lever_graphs_l2304; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2304, 0.002); end
  def test_lever_graphs_m2304; assert_in_epsilon(26.153846153846153, worksheet.lever_graphs_m2304, 0.002); end
  def test_lever_graphs_n2304; assert_in_epsilon(25.961538461538463, worksheet.lever_graphs_n2304, 0.002); end
  def test_lever_graphs_o2304; assert_in_epsilon(25.769230769230766, worksheet.lever_graphs_o2304, 0.002); end
  def test_lever_graphs_p2304; assert_in_epsilon(25.576923076923073, worksheet.lever_graphs_p2304, 0.002); end
  def test_lever_graphs_q2304; assert_in_epsilon(25.384615384615387, worksheet.lever_graphs_q2304, 0.002); end
  def test_lever_graphs_r2304; assert_in_epsilon(25.19230769230769, worksheet.lever_graphs_r2304, 0.002); end
  def test_lever_graphs_s2304; assert_in_epsilon(25.0, worksheet.lever_graphs_s2304, 0.002); end
  def test_lever_graphs_b2305; assert_in_epsilon(3.0, worksheet.lever_graphs_b2305, 0.002); end
  def test_lever_graphs_k2305; assert_in_epsilon(26.5, worksheet.lever_graphs_k2305, 0.002); end
  def test_lever_graphs_l2305; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2305, 0.002); end
  def test_lever_graphs_m2305; assert_in_epsilon(26.296703296703296, worksheet.lever_graphs_m2305, 0.002); end
  def test_lever_graphs_n2305; assert_in_epsilon(26.247252747252748, worksheet.lever_graphs_n2305, 0.002); end
  def test_lever_graphs_o2305; assert_in_epsilon(26.197802197802197, worksheet.lever_graphs_o2305, 0.002); end
  def test_lever_graphs_p2305; assert_in_epsilon(26.148351648351646, worksheet.lever_graphs_p2305, 0.002); end
  def test_lever_graphs_q2305; assert_in_epsilon(26.098901098901102, worksheet.lever_graphs_q2305, 0.002); end
  def test_lever_graphs_r2305; assert_in_epsilon(26.049450549450547, worksheet.lever_graphs_r2305, 0.002); end
  def test_lever_graphs_s2305; assert_in_epsilon(26.0, worksheet.lever_graphs_s2305, 0.002); end
  def test_lever_graphs_b2306; assert_in_epsilon(4.0, worksheet.lever_graphs_b2306, 0.002); end
  def test_lever_graphs_k2306; assert_in_epsilon(26.5, worksheet.lever_graphs_k2306, 0.002); end
  def test_lever_graphs_l2306; assert_in_epsilon(26.346153846153847, worksheet.lever_graphs_l2306, 0.002); end
  def test_lever_graphs_m2306; assert_in_epsilon(26.439560439560438, worksheet.lever_graphs_m2306, 0.002); end
  def test_lever_graphs_n2306; assert_in_epsilon(26.532967032967036, worksheet.lever_graphs_n2306, 0.002); end
  def test_lever_graphs_o2306; assert_in_epsilon(26.626373626373628, worksheet.lever_graphs_o2306, 0.002); end
  def test_lever_graphs_p2306; assert_in_epsilon(26.71978021978022, worksheet.lever_graphs_p2306, 0.002); end
  def test_lever_graphs_q2306; assert_in_epsilon(26.81318681318681, worksheet.lever_graphs_q2306, 0.002); end
  def test_lever_graphs_r2306; assert_in_epsilon(26.906593406593405, worksheet.lever_graphs_r2306, 0.002); end
  def test_lever_graphs_s2306; assert_in_epsilon(27.0, worksheet.lever_graphs_s2306, 0.002); end
  def test_lever_graphs_c2331; assert_equal("1975", worksheet.lever_graphs_c2331); end
  def test_lever_graphs_d2331; assert_equal("1980", worksheet.lever_graphs_d2331); end
  def test_lever_graphs_e2331; assert_equal("1985", worksheet.lever_graphs_e2331); end
  def test_lever_graphs_f2331; assert_equal("1990", worksheet.lever_graphs_f2331); end
  def test_lever_graphs_g2331; assert_equal("1995", worksheet.lever_graphs_g2331); end
  def test_lever_graphs_h2331; assert_equal("2000", worksheet.lever_graphs_h2331); end
  def test_lever_graphs_i2331; assert_equal("2005", worksheet.lever_graphs_i2331); end
  def test_lever_graphs_j2331; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2331, 0.002); end
  def test_lever_graphs_k2331; assert_equal("2011", worksheet.lever_graphs_k2331); end
  def test_lever_graphs_l2331; assert_equal("2015", worksheet.lever_graphs_l2331); end
  def test_lever_graphs_m2331; assert_equal("2020", worksheet.lever_graphs_m2331); end
  def test_lever_graphs_n2331; assert_equal("2025", worksheet.lever_graphs_n2331); end
  def test_lever_graphs_o2331; assert_equal("2030", worksheet.lever_graphs_o2331); end
  def test_lever_graphs_p2331; assert_equal("2035", worksheet.lever_graphs_p2331); end
  def test_lever_graphs_q2331; assert_equal("2040", worksheet.lever_graphs_q2331); end
  def test_lever_graphs_r2331; assert_equal("2045", worksheet.lever_graphs_r2331); end
  def test_lever_graphs_s2331; assert_equal("2050", worksheet.lever_graphs_s2331); end
  def test_lever_graphs_b2332; assert_equal("Historic data", worksheet.lever_graphs_b2332); end
  def test_lever_graphs_b2333; assert_in_delta(1.0, worksheet.lever_graphs_b2333, 0.002); end
  def test_lever_graphs_k2333; assert_in_epsilon(13.0, worksheet.lever_graphs_k2333, 0.002); end
  def test_lever_graphs_l2333; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2333, 0.002); end
  def test_lever_graphs_m2333; assert_in_epsilon(13.923076923076925, worksheet.lever_graphs_m2333, 0.002); end
  def test_lever_graphs_n2333; assert_in_epsilon(14.435897435897438, worksheet.lever_graphs_n2333, 0.002); end
  def test_lever_graphs_o2333; assert_in_epsilon(14.948717948717949, worksheet.lever_graphs_o2333, 0.002); end
  def test_lever_graphs_p2333; assert_in_epsilon(15.461538461538462, worksheet.lever_graphs_p2333, 0.002); end
  def test_lever_graphs_q2333; assert_in_epsilon(15.974358974358974, worksheet.lever_graphs_q2333, 0.002); end
  def test_lever_graphs_r2333; assert_in_epsilon(16.48717948717949, worksheet.lever_graphs_r2333, 0.002); end
  def test_lever_graphs_s2333; assert_in_epsilon(17.0, worksheet.lever_graphs_s2333, 0.002); end
  def test_lever_graphs_b2334; assert_in_epsilon(2.0, worksheet.lever_graphs_b2334, 0.002); end
  def test_lever_graphs_k2334; assert_in_epsilon(13.0, worksheet.lever_graphs_k2334, 0.002); end
  def test_lever_graphs_l2334; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2334, 0.002); end
  def test_lever_graphs_m2334; assert_in_epsilon(13.780219780219781, worksheet.lever_graphs_m2334, 0.002); end
  def test_lever_graphs_n2334; assert_in_epsilon(14.150183150183151, worksheet.lever_graphs_n2334, 0.002); end
  def test_lever_graphs_o2334; assert_in_epsilon(14.520146520146522, worksheet.lever_graphs_o2334, 0.002); end
  def test_lever_graphs_p2334; assert_in_epsilon(14.89010989010989, worksheet.lever_graphs_p2334, 0.002); end
  def test_lever_graphs_q2334; assert_in_epsilon(15.260073260073261, worksheet.lever_graphs_q2334, 0.002); end
  def test_lever_graphs_r2334; assert_in_epsilon(15.63003663003663, worksheet.lever_graphs_r2334, 0.002); end
  def test_lever_graphs_s2334; assert_in_epsilon(16.0, worksheet.lever_graphs_s2334, 0.002); end
  def test_lever_graphs_b2335; assert_in_epsilon(3.0, worksheet.lever_graphs_b2335, 0.002); end
  def test_lever_graphs_k2335; assert_in_epsilon(13.0, worksheet.lever_graphs_k2335, 0.002); end
  def test_lever_graphs_l2335; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2335, 0.002); end
  def test_lever_graphs_m2335; assert_in_epsilon(13.637362637362639, worksheet.lever_graphs_m2335, 0.002); end
  def test_lever_graphs_n2335; assert_in_epsilon(13.864468864468865, worksheet.lever_graphs_n2335, 0.002); end
  def test_lever_graphs_o2335; assert_in_epsilon(14.091575091575091, worksheet.lever_graphs_o2335, 0.002); end
  def test_lever_graphs_p2335; assert_in_epsilon(14.31868131868132, worksheet.lever_graphs_p2335, 0.002); end
  def test_lever_graphs_q2335; assert_in_epsilon(14.545787545787547, worksheet.lever_graphs_q2335, 0.002); end
  def test_lever_graphs_r2335; assert_in_epsilon(14.772893772893772, worksheet.lever_graphs_r2335, 0.002); end
  def test_lever_graphs_s2335; assert_in_epsilon(15.0, worksheet.lever_graphs_s2335, 0.002); end
  def test_lever_graphs_b2336; assert_in_epsilon(4.0, worksheet.lever_graphs_b2336, 0.002); end
  def test_lever_graphs_k2336; assert_in_epsilon(13.0, worksheet.lever_graphs_k2336, 0.002); end
  def test_lever_graphs_l2336; assert_in_epsilon(13.410256410256412, worksheet.lever_graphs_l2336, 0.002); end
  def test_lever_graphs_m2336; assert_in_epsilon(13.494505494505496, worksheet.lever_graphs_m2336, 0.002); end
  def test_lever_graphs_n2336; assert_in_epsilon(13.57875457875458, worksheet.lever_graphs_n2336, 0.002); end
  def test_lever_graphs_o2336; assert_in_epsilon(13.663003663003664, worksheet.lever_graphs_o2336, 0.002); end
  def test_lever_graphs_p2336; assert_in_epsilon(13.747252747252748, worksheet.lever_graphs_p2336, 0.002); end
  def test_lever_graphs_q2336; assert_in_epsilon(13.831501831501832, worksheet.lever_graphs_q2336, 0.002); end
  def test_lever_graphs_r2336; assert_in_epsilon(13.915750915750916, worksheet.lever_graphs_r2336, 0.002); end
  def test_lever_graphs_s2336; assert_in_epsilon(14.0, worksheet.lever_graphs_s2336, 0.002); end
  def test_lever_graphs_c2321; assert_equal("1975", worksheet.lever_graphs_c2321); end
  def test_lever_graphs_d2321; assert_equal("1980", worksheet.lever_graphs_d2321); end
  def test_lever_graphs_e2321; assert_equal("1985", worksheet.lever_graphs_e2321); end
  def test_lever_graphs_f2321; assert_equal("1990", worksheet.lever_graphs_f2321); end
  def test_lever_graphs_g2321; assert_equal("1995", worksheet.lever_graphs_g2321); end
  def test_lever_graphs_h2321; assert_equal("2000", worksheet.lever_graphs_h2321); end
  def test_lever_graphs_i2321; assert_equal("2005", worksheet.lever_graphs_i2321); end
  def test_lever_graphs_j2321; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2321, 0.002); end
  def test_lever_graphs_k2321; assert_equal("2011", worksheet.lever_graphs_k2321); end
  def test_lever_graphs_l2321; assert_equal("2015", worksheet.lever_graphs_l2321); end
  def test_lever_graphs_m2321; assert_equal("2020", worksheet.lever_graphs_m2321); end
  def test_lever_graphs_n2321; assert_equal("2025", worksheet.lever_graphs_n2321); end
  def test_lever_graphs_o2321; assert_equal("2030", worksheet.lever_graphs_o2321); end
  def test_lever_graphs_p2321; assert_equal("2035", worksheet.lever_graphs_p2321); end
  def test_lever_graphs_q2321; assert_equal("2040", worksheet.lever_graphs_q2321); end
  def test_lever_graphs_r2321; assert_equal("2045", worksheet.lever_graphs_r2321); end
  def test_lever_graphs_s2321; assert_equal("2050", worksheet.lever_graphs_s2321); end
  def test_lever_graphs_b2322; assert_equal("Historic data", worksheet.lever_graphs_b2322); end
  def test_lever_graphs_b2323; assert_in_delta(1.0, worksheet.lever_graphs_b2323, 0.002); end
  def test_lever_graphs_k2323; assert_in_epsilon(17.5, worksheet.lever_graphs_k2323, 0.002); end
  def test_lever_graphs_l2323; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2323, 0.002); end
  def test_lever_graphs_m2323; assert_in_epsilon(17.98901098901099, worksheet.lever_graphs_m2323, 0.002); end
  def test_lever_graphs_n2323; assert_in_epsilon(18.324175824175825, worksheet.lever_graphs_n2323, 0.002); end
  def test_lever_graphs_o2323; assert_in_epsilon(18.659340659340657, worksheet.lever_graphs_o2323, 0.002); end
  def test_lever_graphs_p2323; assert_in_epsilon(18.994505494505493, worksheet.lever_graphs_p2323, 0.002); end
  def test_lever_graphs_q2323; assert_in_epsilon(19.32967032967033, worksheet.lever_graphs_q2323, 0.002); end
  def test_lever_graphs_r2323; assert_in_epsilon(19.664835164835164, worksheet.lever_graphs_r2323, 0.002); end
  def test_lever_graphs_s2323; assert_in_epsilon(20.0, worksheet.lever_graphs_s2323, 0.002); end
  def test_lever_graphs_b2324; assert_in_epsilon(2.0, worksheet.lever_graphs_b2324, 0.002); end
  def test_lever_graphs_k2324; assert_in_epsilon(17.5, worksheet.lever_graphs_k2324, 0.002); end
  def test_lever_graphs_l2324; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2324, 0.002); end
  def test_lever_graphs_m2324; assert_in_epsilon(17.846153846153847, worksheet.lever_graphs_m2324, 0.002); end
  def test_lever_graphs_n2324; assert_in_epsilon(18.038461538461537, worksheet.lever_graphs_n2324, 0.002); end
  def test_lever_graphs_o2324; assert_in_epsilon(18.23076923076923, worksheet.lever_graphs_o2324, 0.002); end
  def test_lever_graphs_p2324; assert_in_epsilon(18.42307692307692, worksheet.lever_graphs_p2324, 0.002); end
  def test_lever_graphs_q2324; assert_in_epsilon(18.615384615384613, worksheet.lever_graphs_q2324, 0.002); end
  def test_lever_graphs_r2324; assert_in_epsilon(18.807692307692307, worksheet.lever_graphs_r2324, 0.002); end
  def test_lever_graphs_s2324; assert_in_epsilon(19.0, worksheet.lever_graphs_s2324, 0.002); end
  def test_lever_graphs_b2325; assert_in_epsilon(3.0, worksheet.lever_graphs_b2325, 0.002); end
  def test_lever_graphs_k2325; assert_in_epsilon(17.5, worksheet.lever_graphs_k2325, 0.002); end
  def test_lever_graphs_l2325; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2325, 0.002); end
  def test_lever_graphs_m2325; assert_in_epsilon(17.7032967032967, worksheet.lever_graphs_m2325, 0.002); end
  def test_lever_graphs_n2325; assert_in_epsilon(17.752747252747252, worksheet.lever_graphs_n2325, 0.002); end
  def test_lever_graphs_o2325; assert_in_epsilon(17.802197802197803, worksheet.lever_graphs_o2325, 0.002); end
  def test_lever_graphs_p2325; assert_in_epsilon(17.85164835164835, worksheet.lever_graphs_p2325, 0.002); end
  def test_lever_graphs_q2325; assert_in_epsilon(17.9010989010989, worksheet.lever_graphs_q2325, 0.002); end
  def test_lever_graphs_r2325; assert_in_epsilon(17.95054945054945, worksheet.lever_graphs_r2325, 0.002); end
  def test_lever_graphs_s2325; assert_in_epsilon(18.0, worksheet.lever_graphs_s2325, 0.002); end
  def test_lever_graphs_b2326; assert_in_epsilon(4.0, worksheet.lever_graphs_b2326, 0.002); end
  def test_lever_graphs_k2326; assert_in_epsilon(17.5, worksheet.lever_graphs_k2326, 0.002); end
  def test_lever_graphs_l2326; assert_in_epsilon(17.653846153846153, worksheet.lever_graphs_l2326, 0.002); end
  def test_lever_graphs_m2326; assert_in_epsilon(17.56043956043956, worksheet.lever_graphs_m2326, 0.002); end
  def test_lever_graphs_n2326; assert_in_epsilon(17.467032967032967, worksheet.lever_graphs_n2326, 0.002); end
  def test_lever_graphs_o2326; assert_in_epsilon(17.373626373626372, worksheet.lever_graphs_o2326, 0.002); end
  def test_lever_graphs_p2326; assert_in_epsilon(17.28021978021978, worksheet.lever_graphs_p2326, 0.002); end
  def test_lever_graphs_q2326; assert_in_epsilon(17.186813186813186, worksheet.lever_graphs_q2326, 0.002); end
  def test_lever_graphs_r2326; assert_in_epsilon(17.09340659340659, worksheet.lever_graphs_r2326, 0.002); end
  def test_lever_graphs_s2326; assert_in_epsilon(17.0, worksheet.lever_graphs_s2326, 0.002); end
  def test_lever_graphs_c1716; assert_equal("1975", worksheet.lever_graphs_c1716); end
  def test_lever_graphs_d1716; assert_equal("1980", worksheet.lever_graphs_d1716); end
  def test_lever_graphs_e1716; assert_equal("1985", worksheet.lever_graphs_e1716); end
  def test_lever_graphs_f1716; assert_equal("1990", worksheet.lever_graphs_f1716); end
  def test_lever_graphs_g1716; assert_equal("1995", worksheet.lever_graphs_g1716); end
  def test_lever_graphs_h1716; assert_equal("2000", worksheet.lever_graphs_h1716); end
  def test_lever_graphs_i1716; assert_equal("2005", worksheet.lever_graphs_i1716); end
  def test_lever_graphs_j1716; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1716, 0.002); end
  def test_lever_graphs_k1716; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1716, 0.002); end
  def test_lever_graphs_l1716; assert_equal("2015", worksheet.lever_graphs_l1716); end
  def test_lever_graphs_m1716; assert_equal("2020", worksheet.lever_graphs_m1716); end
  def test_lever_graphs_n1716; assert_equal("2025", worksheet.lever_graphs_n1716); end
  def test_lever_graphs_o1716; assert_equal("2030", worksheet.lever_graphs_o1716); end
  def test_lever_graphs_p1716; assert_equal("2035", worksheet.lever_graphs_p1716); end
  def test_lever_graphs_q1716; assert_equal("2040", worksheet.lever_graphs_q1716); end
  def test_lever_graphs_r1716; assert_equal("2045", worksheet.lever_graphs_r1716); end
  def test_lever_graphs_s1716; assert_equal("2050", worksheet.lever_graphs_s1716); end
  def test_lever_graphs_b1717; assert_equal("Historic data", worksheet.lever_graphs_b1717); end
  def test_lever_graphs_b1718; assert_in_delta(1.0, worksheet.lever_graphs_b1718, 0.002); end
  def test_lever_graphs_k1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1718, 0.002); end
  def test_lever_graphs_l1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_l1718, 0.002); end
  def test_lever_graphs_m1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_m1718, 0.002); end
  def test_lever_graphs_n1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_n1718, 0.002); end
  def test_lever_graphs_o1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_o1718, 0.002); end
  def test_lever_graphs_p1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_p1718, 0.002); end
  def test_lever_graphs_q1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_q1718, 0.002); end
  def test_lever_graphs_r1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_r1718, 0.002); end
  def test_lever_graphs_s1718; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_s1718, 0.002); end
  def test_lever_graphs_b1719; assert_in_epsilon(2.0, worksheet.lever_graphs_b1719, 0.002); end
  def test_lever_graphs_k1719; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1719, 0.002); end
  def test_lever_graphs_l1719; assert_in_delta(0.61, worksheet.lever_graphs_l1719, 0.002); end
  def test_lever_graphs_m1719; assert_in_delta(0.56, worksheet.lever_graphs_m1719, 0.002); end
  def test_lever_graphs_n1719; assert_in_delta(0.56, worksheet.lever_graphs_n1719, 0.002); end
  def test_lever_graphs_o1719; assert_in_delta(0.54, worksheet.lever_graphs_o1719, 0.002); end
  def test_lever_graphs_p1719; assert_in_delta(0.52, worksheet.lever_graphs_p1719, 0.002); end
  def test_lever_graphs_q1719; assert_in_delta(0.49, worksheet.lever_graphs_q1719, 0.002); end
  def test_lever_graphs_r1719; assert_in_delta(0.44, worksheet.lever_graphs_r1719, 0.002); end
  def test_lever_graphs_s1719; assert_in_delta(0.4, worksheet.lever_graphs_s1719, 0.002); end
  def test_lever_graphs_b1720; assert_in_epsilon(3.0, worksheet.lever_graphs_b1720, 0.002); end
  def test_lever_graphs_k1720; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1720, 0.002); end
  def test_lever_graphs_l1720; assert_in_delta(0.61, worksheet.lever_graphs_l1720, 0.002); end
  def test_lever_graphs_m1720; assert_in_delta(0.55, worksheet.lever_graphs_m1720, 0.002); end
  def test_lever_graphs_n1720; assert_in_delta(0.54, worksheet.lever_graphs_n1720, 0.002); end
  def test_lever_graphs_o1720; assert_in_delta(0.51, worksheet.lever_graphs_o1720, 0.002); end
  def test_lever_graphs_p1720; assert_in_delta(0.49, worksheet.lever_graphs_p1720, 0.002); end
  def test_lever_graphs_q1720; assert_in_delta(0.46, worksheet.lever_graphs_q1720, 0.002); end
  def test_lever_graphs_r1720; assert_in_delta(0.41, worksheet.lever_graphs_r1720, 0.002); end
  def test_lever_graphs_s1720; assert_in_delta(0.32, worksheet.lever_graphs_s1720, 0.002); end
  def test_lever_graphs_b1721; assert_in_epsilon(4.0, worksheet.lever_graphs_b1721, 0.002); end
  def test_lever_graphs_k1721; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_k1721, 0.002); end
  def test_lever_graphs_l1721; assert_in_delta(0.61, worksheet.lever_graphs_l1721, 0.002); end
  def test_lever_graphs_m1721; assert_in_delta(0.55, worksheet.lever_graphs_m1721, 0.002); end
  def test_lever_graphs_n1721; assert_in_delta(0.5223, worksheet.lever_graphs_n1721, 0.002); end
  def test_lever_graphs_o1721; assert_in_delta(0.4761, worksheet.lever_graphs_o1721, 0.002); end
  def test_lever_graphs_p1721; assert_in_delta(0.45, worksheet.lever_graphs_p1721, 0.002); end
  def test_lever_graphs_q1721; assert_in_delta(0.4166, worksheet.lever_graphs_q1721, 0.002); end
  def test_lever_graphs_r1721; assert_in_delta(0.362, worksheet.lever_graphs_r1721, 0.002); end
  def test_lever_graphs_s1721; assert_in_delta(0.2641, worksheet.lever_graphs_s1721, 0.002); end
  def test_lever_graphs_b1722; assert_equal("Comparator A", worksheet.lever_graphs_b1722); end
  def test_lever_graphs_b1723; assert_equal("Comparator B", worksheet.lever_graphs_b1723); end
  def test_lever_graphs_b1724; assert_equal("Comparator C", worksheet.lever_graphs_b1724); end
  def test_lever_graphs_d1666; assert_equal("Title", worksheet.lever_graphs_d1666); end
  def test_lever_graphs_e1666; assert_equal("Solid fueled", worksheet.lever_graphs_e1666); end
  def test_lever_graphs_f1666; assert_equal("Liquid fueled", worksheet.lever_graphs_f1666); end
  def test_lever_graphs_g1666; assert_equal("Gas fueled", worksheet.lever_graphs_g1666); end
  def test_lever_graphs_d1667; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1667, 0.002); end
  def test_lever_graphs_e1667; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_e1667, 0.002); end
  def test_lever_graphs_f1667; assert_in_delta(0.06785132715399025, worksheet.lever_graphs_f1667, 0.002); end
  def test_lever_graphs_g1667; assert_in_delta(0.3201932191553456, worksheet.lever_graphs_g1667, 0.002); end
  def test_lever_graphs_d1668; assert_equal("2050: Level 1", worksheet.lever_graphs_d1668); end
  def test_lever_graphs_e1668; assert_in_delta(0.6119554536906642, worksheet.lever_graphs_e1668, 0.002); end
  def test_lever_graphs_f1668; assert_in_delta(0.2909, worksheet.lever_graphs_f1668, 0.002); end
  def test_lever_graphs_g1668; assert_in_delta(0.09714454630933583, worksheet.lever_graphs_g1668, 0.002); end
  def test_lever_graphs_d1669; assert_equal("2050: Level 2", worksheet.lever_graphs_d1669); end
  def test_lever_graphs_e1669; assert_in_delta(0.4, worksheet.lever_graphs_e1669, 0.002); end
  def test_lever_graphs_f1669; assert_in_delta(0.19, worksheet.lever_graphs_f1669, 0.002); end
  def test_lever_graphs_g1669; assert_in_delta(0.41, worksheet.lever_graphs_g1669, 0.002); end
  def test_lever_graphs_d1670; assert_equal("2050: Level 3", worksheet.lever_graphs_d1670); end
  def test_lever_graphs_e1670; assert_in_delta(0.32, worksheet.lever_graphs_e1670, 0.002); end
  def test_lever_graphs_f1670; assert_in_delta(0.06, worksheet.lever_graphs_f1670, 0.002); end
  def test_lever_graphs_g1670; assert_in_delta(0.6199999999999999, worksheet.lever_graphs_g1670, 0.002); end
  def test_lever_graphs_d1671; assert_equal("2050: Level 4", worksheet.lever_graphs_d1671); end
  def test_lever_graphs_e1671; assert_in_delta(0.2641, worksheet.lever_graphs_e1671, 0.002); end
  def test_lever_graphs_f1671; assert_in_delta(0.0188, worksheet.lever_graphs_f1671, 0.002); end
  def test_lever_graphs_g1671; assert_in_delta(0.7171, worksheet.lever_graphs_g1671, 0.002); end
  def test_lever_graphs_c2849; assert_equal("1975", worksheet.lever_graphs_c2849); end
  def test_lever_graphs_d2849; assert_equal("1980", worksheet.lever_graphs_d2849); end
  def test_lever_graphs_e2849; assert_equal("1985", worksheet.lever_graphs_e2849); end
  def test_lever_graphs_f2849; assert_equal("1990", worksheet.lever_graphs_f2849); end
  def test_lever_graphs_g2849; assert_equal("1995", worksheet.lever_graphs_g2849); end
  def test_lever_graphs_h2849; assert_equal("2000", worksheet.lever_graphs_h2849); end
  def test_lever_graphs_i2849; assert_equal("2005", worksheet.lever_graphs_i2849); end
  def test_lever_graphs_j2849; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2849, 0.002); end
  def test_lever_graphs_k2849; assert_equal("2011", worksheet.lever_graphs_k2849); end
  def test_lever_graphs_l2849; assert_equal("2015", worksheet.lever_graphs_l2849); end
  def test_lever_graphs_m2849; assert_equal("2020", worksheet.lever_graphs_m2849); end
  def test_lever_graphs_n2849; assert_equal("2025", worksheet.lever_graphs_n2849); end
  def test_lever_graphs_o2849; assert_equal("2030", worksheet.lever_graphs_o2849); end
  def test_lever_graphs_p2849; assert_equal("2035", worksheet.lever_graphs_p2849); end
  def test_lever_graphs_q2849; assert_equal("2040", worksheet.lever_graphs_q2849); end
  def test_lever_graphs_r2849; assert_equal("2045", worksheet.lever_graphs_r2849); end
  def test_lever_graphs_s2849; assert_equal("2050", worksheet.lever_graphs_s2849); end
  def test_lever_graphs_b2850; assert_equal("Historic data", worksheet.lever_graphs_b2850); end
  def test_lever_graphs_b2851; assert_in_delta(1.0, worksheet.lever_graphs_b2851, 0.002); end
  def test_lever_graphs_k2851; assert_in_delta(1.0, worksheet.lever_graphs_k2851, 0.002); end
  def test_lever_graphs_l2851; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2851, 0.002); end
  def test_lever_graphs_m2851; assert_in_epsilon(1.0054945054945055, worksheet.lever_graphs_m2851, 0.002); end
  def test_lever_graphs_n2851; assert_in_epsilon(1.0212454212454214, worksheet.lever_graphs_n2851, 0.002); end
  def test_lever_graphs_o2851; assert_in_epsilon(1.036996336996337, worksheet.lever_graphs_o2851, 0.002); end
  def test_lever_graphs_p2851; assert_in_epsilon(1.0527472527472528, worksheet.lever_graphs_p2851, 0.002); end
  def test_lever_graphs_q2851; assert_in_epsilon(1.0684981684981685, worksheet.lever_graphs_q2851, 0.002); end
  def test_lever_graphs_r2851; assert_in_epsilon(1.0842490842490844, worksheet.lever_graphs_r2851, 0.002); end
  def test_lever_graphs_s2851; assert_in_epsilon(1.1, worksheet.lever_graphs_s2851, 0.002); end
  def test_lever_graphs_b2852; assert_in_epsilon(2.0, worksheet.lever_graphs_b2852, 0.002); end
  def test_lever_graphs_k2852; assert_in_delta(1.0, worksheet.lever_graphs_k2852, 0.002); end
  def test_lever_graphs_l2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2852, 0.002); end
  def test_lever_graphs_m2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_m2852, 0.002); end
  def test_lever_graphs_n2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_n2852, 0.002); end
  def test_lever_graphs_o2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_o2852, 0.002); end
  def test_lever_graphs_p2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_p2852, 0.002); end
  def test_lever_graphs_q2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_q2852, 0.002); end
  def test_lever_graphs_r2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_r2852, 0.002); end
  def test_lever_graphs_s2852; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_s2852, 0.002); end
  def test_lever_graphs_b2853; assert_in_epsilon(3.0, worksheet.lever_graphs_b2853, 0.002); end
  def test_lever_graphs_k2853; assert_in_delta(1.0, worksheet.lever_graphs_k2853, 0.002); end
  def test_lever_graphs_l2853; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2853, 0.002); end
  def test_lever_graphs_m2853; assert_in_delta(0.976923076923077, worksheet.lever_graphs_m2853, 0.002); end
  def test_lever_graphs_n2853; assert_in_delta(0.9641025641025641, worksheet.lever_graphs_n2853, 0.002); end
  def test_lever_graphs_o2853; assert_in_delta(0.9512820512820513, worksheet.lever_graphs_o2853, 0.002); end
  def test_lever_graphs_p2853; assert_in_delta(0.9384615384615385, worksheet.lever_graphs_p2853, 0.002); end
  def test_lever_graphs_q2853; assert_in_delta(0.9256410256410257, worksheet.lever_graphs_q2853, 0.002); end
  def test_lever_graphs_r2853; assert_in_delta(0.9128205128205129, worksheet.lever_graphs_r2853, 0.002); end
  def test_lever_graphs_s2853; assert_in_delta(0.9, worksheet.lever_graphs_s2853, 0.002); end
  def test_lever_graphs_b2854; assert_in_epsilon(4.0, worksheet.lever_graphs_b2854, 0.002); end
  def test_lever_graphs_k2854; assert_in_delta(1.0, worksheet.lever_graphs_k2854, 0.002); end
  def test_lever_graphs_l2854; assert_in_delta(0.9897435897435898, worksheet.lever_graphs_l2854, 0.002); end
  def test_lever_graphs_m2854; assert_in_delta(0.9483516483516484, worksheet.lever_graphs_m2854, 0.002); end
  def test_lever_graphs_n2854; assert_in_delta(0.906959706959707, worksheet.lever_graphs_n2854, 0.002); end
  def test_lever_graphs_o2854; assert_in_delta(0.8655677655677656, worksheet.lever_graphs_o2854, 0.002); end
  def test_lever_graphs_p2854; assert_in_delta(0.8241758241758241, worksheet.lever_graphs_p2854, 0.002); end
  def test_lever_graphs_q2854; assert_in_delta(0.7827838827838828, worksheet.lever_graphs_q2854, 0.002); end
  def test_lever_graphs_r2854; assert_in_delta(0.7413919413919414, worksheet.lever_graphs_r2854, 0.002); end
  def test_lever_graphs_s2854; assert_in_delta(0.7, worksheet.lever_graphs_s2854, 0.002); end
  def test_lever_graphs_d2991; assert_equal("Title", worksheet.lever_graphs_d2991); end
  def test_lever_graphs_e2991; assert_equal("Forest", worksheet.lever_graphs_e2991); end
  def test_lever_graphs_f2991; assert_equal("Arable.bio", worksheet.lever_graphs_f2991); end
  def test_lever_graphs_g2991; assert_equal("natural.grassland", worksheet.lever_graphs_g2991); end
  def test_lever_graphs_d2992; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2992, 0.002); end
  def test_lever_graphs_e2992; assert_in_delta(0.8, worksheet.lever_graphs_e2992, 0.002); end
  def test_lever_graphs_f2992; assert_in_delta(0.0, (worksheet.lever_graphs_f2992||0), 0.002); end
  def test_lever_graphs_g2992; assert_in_delta(0.2, worksheet.lever_graphs_g2992, 0.002); end
  def test_lever_graphs_d2993; assert_equal("2050: Level 1", worksheet.lever_graphs_d2993); end
  def test_lever_graphs_e2993; assert_in_delta(0.8, worksheet.lever_graphs_e2993, 0.002); end
  def test_lever_graphs_f2993; assert_in_delta(0.0, (worksheet.lever_graphs_f2993||0), 0.002); end
  def test_lever_graphs_g2993; assert_in_delta(0.2, worksheet.lever_graphs_g2993, 0.002); end
  def test_lever_graphs_d2994; assert_equal("2050: Level 2", worksheet.lever_graphs_d2994); end
  def test_lever_graphs_e2994; assert_in_delta(0.48, worksheet.lever_graphs_e2994, 0.002); end
  def test_lever_graphs_f2994; assert_in_delta(0.4, worksheet.lever_graphs_f2994, 0.002); end
  def test_lever_graphs_g2994; assert_in_delta(0.12, worksheet.lever_graphs_g2994, 0.002); end
  def test_lever_graphs_d2995; assert_equal("2050: Level 3", worksheet.lever_graphs_d2995); end
  def test_lever_graphs_e2995; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_e2995, 0.002); end
  def test_lever_graphs_f2995; assert_in_delta(0.6, worksheet.lever_graphs_f2995, 0.002); end
  def test_lever_graphs_g2995; assert_in_delta(0.07999999999999996, worksheet.lever_graphs_g2995, 0.002); end
  def test_lever_graphs_d2996; assert_equal("2050: Level 4", worksheet.lever_graphs_d2996); end
  def test_lever_graphs_e2996; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_e2996, 0.002); end
  def test_lever_graphs_f2996; assert_in_delta(0.8, worksheet.lever_graphs_f2996, 0.002); end
  def test_lever_graphs_g2996; assert_in_delta(0.040000000000000036, worksheet.lever_graphs_g2996, 0.002); end
  def test_lever_graphs_c2970; assert_equal("1975", worksheet.lever_graphs_c2970); end
  def test_lever_graphs_d2970; assert_equal("1980", worksheet.lever_graphs_d2970); end
  def test_lever_graphs_e2970; assert_equal("1985", worksheet.lever_graphs_e2970); end
  def test_lever_graphs_f2970; assert_equal("1990", worksheet.lever_graphs_f2970); end
  def test_lever_graphs_g2970; assert_equal("1995", worksheet.lever_graphs_g2970); end
  def test_lever_graphs_h2970; assert_equal("2000", worksheet.lever_graphs_h2970); end
  def test_lever_graphs_i2970; assert_equal("2005", worksheet.lever_graphs_i2970); end
  def test_lever_graphs_j2970; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2970, 0.002); end
  def test_lever_graphs_k2970; assert_equal("2011", worksheet.lever_graphs_k2970); end
  def test_lever_graphs_l2970; assert_equal("2015", worksheet.lever_graphs_l2970); end
  def test_lever_graphs_m2970; assert_equal("2020", worksheet.lever_graphs_m2970); end
  def test_lever_graphs_n2970; assert_equal("2025", worksheet.lever_graphs_n2970); end
  def test_lever_graphs_o2970; assert_equal("2030", worksheet.lever_graphs_o2970); end
  def test_lever_graphs_p2970; assert_equal("2035", worksheet.lever_graphs_p2970); end
  def test_lever_graphs_q2970; assert_equal("2040", worksheet.lever_graphs_q2970); end
  def test_lever_graphs_r2970; assert_equal("2045", worksheet.lever_graphs_r2970); end
  def test_lever_graphs_s2970; assert_equal("2050", worksheet.lever_graphs_s2970); end
  def test_lever_graphs_b2971; assert_equal("Historic data", worksheet.lever_graphs_b2971); end
  def test_lever_graphs_b2972; assert_in_delta(1.0, worksheet.lever_graphs_b2972, 0.002); end
  def test_lever_graphs_k2972; assert_in_delta(0.8, worksheet.lever_graphs_k2972, 0.002); end
  def test_lever_graphs_l2972; assert_in_delta(0.8, worksheet.lever_graphs_l2972, 0.002); end
  def test_lever_graphs_m2972; assert_in_delta(0.8, worksheet.lever_graphs_m2972, 0.002); end
  def test_lever_graphs_n2972; assert_in_delta(0.8, worksheet.lever_graphs_n2972, 0.002); end
  def test_lever_graphs_o2972; assert_in_delta(0.8, worksheet.lever_graphs_o2972, 0.002); end
  def test_lever_graphs_p2972; assert_in_delta(0.8, worksheet.lever_graphs_p2972, 0.002); end
  def test_lever_graphs_q2972; assert_in_delta(0.8, worksheet.lever_graphs_q2972, 0.002); end
  def test_lever_graphs_r2972; assert_in_delta(0.8, worksheet.lever_graphs_r2972, 0.002); end
  def test_lever_graphs_s2972; assert_in_delta(0.8, worksheet.lever_graphs_s2972, 0.002); end
  def test_lever_graphs_b2973; assert_in_epsilon(2.0, worksheet.lever_graphs_b2973, 0.002); end
  def test_lever_graphs_k2973; assert_in_delta(0.48, worksheet.lever_graphs_k2973, 0.002); end
  def test_lever_graphs_l2973; assert_in_delta(0.48, worksheet.lever_graphs_l2973, 0.002); end
  def test_lever_graphs_m2973; assert_in_delta(0.48, worksheet.lever_graphs_m2973, 0.002); end
  def test_lever_graphs_n2973; assert_in_delta(0.48, worksheet.lever_graphs_n2973, 0.002); end
  def test_lever_graphs_o2973; assert_in_delta(0.48, worksheet.lever_graphs_o2973, 0.002); end
  def test_lever_graphs_p2973; assert_in_delta(0.48, worksheet.lever_graphs_p2973, 0.002); end
  def test_lever_graphs_q2973; assert_in_delta(0.48, worksheet.lever_graphs_q2973, 0.002); end
  def test_lever_graphs_r2973; assert_in_delta(0.48, worksheet.lever_graphs_r2973, 0.002); end
  def test_lever_graphs_s2973; assert_in_delta(0.48, worksheet.lever_graphs_s2973, 0.002); end
  def test_lever_graphs_b2974; assert_in_epsilon(3.0, worksheet.lever_graphs_b2974, 0.002); end
  def test_lever_graphs_k2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_k2974, 0.002); end
  def test_lever_graphs_l2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_l2974, 0.002); end
  def test_lever_graphs_m2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_m2974, 0.002); end
  def test_lever_graphs_n2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_n2974, 0.002); end
  def test_lever_graphs_o2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_o2974, 0.002); end
  def test_lever_graphs_p2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_p2974, 0.002); end
  def test_lever_graphs_q2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_q2974, 0.002); end
  def test_lever_graphs_r2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_r2974, 0.002); end
  def test_lever_graphs_s2974; assert_in_delta(0.32000000000000006, worksheet.lever_graphs_s2974, 0.002); end
  def test_lever_graphs_b2975; assert_in_epsilon(4.0, worksheet.lever_graphs_b2975, 0.002); end
  def test_lever_graphs_k2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_k2975, 0.002); end
  def test_lever_graphs_l2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_l2975, 0.002); end
  def test_lever_graphs_m2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_m2975, 0.002); end
  def test_lever_graphs_n2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_n2975, 0.002); end
  def test_lever_graphs_o2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_o2975, 0.002); end
  def test_lever_graphs_p2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_p2975, 0.002); end
  def test_lever_graphs_q2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_q2975, 0.002); end
  def test_lever_graphs_r2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_r2975, 0.002); end
  def test_lever_graphs_s2975; assert_in_delta(0.15999999999999998, worksheet.lever_graphs_s2975, 0.002); end
  def test_lever_graphs_c2405; assert_equal("1975", worksheet.lever_graphs_c2405); end
  def test_lever_graphs_d2405; assert_equal("1980", worksheet.lever_graphs_d2405); end
  def test_lever_graphs_e2405; assert_equal("1985", worksheet.lever_graphs_e2405); end
  def test_lever_graphs_f2405; assert_equal("1990", worksheet.lever_graphs_f2405); end
  def test_lever_graphs_g2405; assert_equal("1995", worksheet.lever_graphs_g2405); end
  def test_lever_graphs_h2405; assert_equal("2000", worksheet.lever_graphs_h2405); end
  def test_lever_graphs_i2405; assert_equal("2005", worksheet.lever_graphs_i2405); end
  def test_lever_graphs_j2405; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2405, 0.002); end
  def test_lever_graphs_k2405; assert_equal("2011", worksheet.lever_graphs_k2405); end
  def test_lever_graphs_l2405; assert_equal("2015", worksheet.lever_graphs_l2405); end
  def test_lever_graphs_m2405; assert_equal("2020", worksheet.lever_graphs_m2405); end
  def test_lever_graphs_n2405; assert_equal("2025", worksheet.lever_graphs_n2405); end
  def test_lever_graphs_o2405; assert_equal("2030", worksheet.lever_graphs_o2405); end
  def test_lever_graphs_p2405; assert_equal("2035", worksheet.lever_graphs_p2405); end
  def test_lever_graphs_q2405; assert_equal("2040", worksheet.lever_graphs_q2405); end
  def test_lever_graphs_r2405; assert_equal("2045", worksheet.lever_graphs_r2405); end
  def test_lever_graphs_s2405; assert_equal("2050", worksheet.lever_graphs_s2405); end
  def test_lever_graphs_b2406; assert_equal("Historic data", worksheet.lever_graphs_b2406); end
  def test_lever_graphs_b2407; assert_in_delta(1.0, worksheet.lever_graphs_b2407, 0.002); end
  def test_lever_graphs_k2407; assert_in_epsilon(24.0, worksheet.lever_graphs_k2407, 0.002); end
  def test_lever_graphs_l2407; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2407, 0.002); end
  def test_lever_graphs_m2407; assert_in_epsilon(27.692307692307693, worksheet.lever_graphs_m2407, 0.002); end
  def test_lever_graphs_n2407; assert_in_epsilon(29.743589743589745, worksheet.lever_graphs_n2407, 0.002); end
  def test_lever_graphs_o2407; assert_in_epsilon(31.794871794871796, worksheet.lever_graphs_o2407, 0.002); end
  def test_lever_graphs_p2407; assert_in_epsilon(33.84615384615384, worksheet.lever_graphs_p2407, 0.002); end
  def test_lever_graphs_q2407; assert_in_epsilon(35.8974358974359, worksheet.lever_graphs_q2407, 0.002); end
  def test_lever_graphs_r2407; assert_in_epsilon(37.94871794871795, worksheet.lever_graphs_r2407, 0.002); end
  def test_lever_graphs_s2407; assert_in_epsilon(40.0, worksheet.lever_graphs_s2407, 0.002); end
  def test_lever_graphs_b2408; assert_in_epsilon(2.0, worksheet.lever_graphs_b2408, 0.002); end
  def test_lever_graphs_k2408; assert_in_epsilon(24.0, worksheet.lever_graphs_k2408, 0.002); end
  def test_lever_graphs_l2408; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2408, 0.002); end
  def test_lever_graphs_m2408; assert_in_epsilon(26.978021978021978, worksheet.lever_graphs_m2408, 0.002); end
  def test_lever_graphs_n2408; assert_in_epsilon(28.315018315018317, worksheet.lever_graphs_n2408, 0.002); end
  def test_lever_graphs_o2408; assert_in_epsilon(29.65201465201465, worksheet.lever_graphs_o2408, 0.002); end
  def test_lever_graphs_p2408; assert_in_epsilon(30.98901098901099, worksheet.lever_graphs_p2408, 0.002); end
  def test_lever_graphs_q2408; assert_in_epsilon(32.32600732600733, worksheet.lever_graphs_q2408, 0.002); end
  def test_lever_graphs_r2408; assert_in_epsilon(33.663003663003664, worksheet.lever_graphs_r2408, 0.002); end
  def test_lever_graphs_s2408; assert_in_epsilon(35.0, worksheet.lever_graphs_s2408, 0.002); end
  def test_lever_graphs_b2409; assert_in_epsilon(3.0, worksheet.lever_graphs_b2409, 0.002); end
  def test_lever_graphs_k2409; assert_in_epsilon(24.0, worksheet.lever_graphs_k2409, 0.002); end
  def test_lever_graphs_l2409; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2409, 0.002); end
  def test_lever_graphs_m2409; assert_in_epsilon(26.263736263736263, worksheet.lever_graphs_m2409, 0.002); end
  def test_lever_graphs_n2409; assert_in_epsilon(26.88644688644689, worksheet.lever_graphs_n2409, 0.002); end
  def test_lever_graphs_o2409; assert_in_epsilon(27.509157509157507, worksheet.lever_graphs_o2409, 0.002); end
  def test_lever_graphs_p2409; assert_in_epsilon(28.13186813186813, worksheet.lever_graphs_p2409, 0.002); end
  def test_lever_graphs_q2409; assert_in_epsilon(28.754578754578755, worksheet.lever_graphs_q2409, 0.002); end
  def test_lever_graphs_r2409; assert_in_epsilon(29.377289377289376, worksheet.lever_graphs_r2409, 0.002); end
  def test_lever_graphs_s2409; assert_in_epsilon(30.0, worksheet.lever_graphs_s2409, 0.002); end
  def test_lever_graphs_b2410; assert_in_epsilon(4.0, worksheet.lever_graphs_b2410, 0.002); end
  def test_lever_graphs_k2410; assert_in_epsilon(24.0, worksheet.lever_graphs_k2410, 0.002); end
  def test_lever_graphs_l2410; assert_in_epsilon(25.641025641025642, worksheet.lever_graphs_l2410, 0.002); end
  def test_lever_graphs_m2410; assert_in_epsilon(25.549450549450547, worksheet.lever_graphs_m2410, 0.002); end
  def test_lever_graphs_n2410; assert_in_epsilon(25.45787545787546, worksheet.lever_graphs_n2410, 0.002); end
  def test_lever_graphs_o2410; assert_in_epsilon(25.366300366300365, worksheet.lever_graphs_o2410, 0.002); end
  def test_lever_graphs_p2410; assert_in_epsilon(25.274725274725274, worksheet.lever_graphs_p2410, 0.002); end
  def test_lever_graphs_q2410; assert_in_epsilon(25.183150183150182, worksheet.lever_graphs_q2410, 0.002); end
  def test_lever_graphs_r2410; assert_in_epsilon(25.09157509157509, worksheet.lever_graphs_r2410, 0.002); end
  def test_lever_graphs_s2410; assert_in_epsilon(25.0, worksheet.lever_graphs_s2410, 0.002); end
  def test_lever_graphs_d2415; assert_equal("Title", worksheet.lever_graphs_d2415); end
  def test_lever_graphs_e2415; assert_equal("Global urban incandescent light bulb", worksheet.lever_graphs_e2415); end
  def test_lever_graphs_f2415; assert_equal("Global urban halogens light bulb", worksheet.lever_graphs_f2415); end
  def test_lever_graphs_g2415; assert_equal("Global urban compact fluorescent lamp", worksheet.lever_graphs_g2415); end
  def test_lever_graphs_h2415; assert_equal("Global urban LEDs bulb", worksheet.lever_graphs_h2415); end
  def test_lever_graphs_d2416; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2416, 0.002); end
  def test_lever_graphs_e2416; assert_in_delta(0.717, worksheet.lever_graphs_e2416, 0.002); end
  def test_lever_graphs_f2416; assert_in_delta(0.03, worksheet.lever_graphs_f2416, 0.002); end
  def test_lever_graphs_g2416; assert_in_delta(0.25, worksheet.lever_graphs_g2416, 0.002); end
  def test_lever_graphs_h2416; assert_in_delta(0.0030000000000000027, worksheet.lever_graphs_h2416, 0.002); end
  def test_lever_graphs_d2417; assert_equal("2050: Level 1", worksheet.lever_graphs_d2417); end
  def test_lever_graphs_e2417; assert_in_delta(0.51, worksheet.lever_graphs_e2417, 0.002); end
  def test_lever_graphs_f2417; assert_in_delta(0.03, worksheet.lever_graphs_f2417, 0.002); end
  def test_lever_graphs_g2417; assert_in_delta(0.45, worksheet.lever_graphs_g2417, 0.002); end
  def test_lever_graphs_h2417; assert_in_delta(0.01, worksheet.lever_graphs_h2417, 0.002); end
  def test_lever_graphs_d2418; assert_equal("2050: Level 2", worksheet.lever_graphs_d2418); end
  def test_lever_graphs_e2418; assert_in_delta(0.20000000000000007, worksheet.lever_graphs_e2418, 0.002); end
  def test_lever_graphs_f2418; assert_in_delta(0.01, worksheet.lever_graphs_f2418, 0.002); end
  def test_lever_graphs_g2418; assert_in_delta(0.69, worksheet.lever_graphs_g2418, 0.002); end
  def test_lever_graphs_h2418; assert_in_delta(0.1, worksheet.lever_graphs_h2418, 0.002); end
  def test_lever_graphs_d2419; assert_equal("2050: Level 3", worksheet.lever_graphs_d2419); end
  def test_lever_graphs_e2419; assert_in_delta(0.0, (worksheet.lever_graphs_e2419||0), 0.002); end
  def test_lever_graphs_f2419; assert_in_delta(0.0, (worksheet.lever_graphs_f2419||0), 0.002); end
  def test_lever_graphs_g2419; assert_in_delta(0.5, worksheet.lever_graphs_g2419, 0.002); end
  def test_lever_graphs_h2419; assert_in_delta(0.5, worksheet.lever_graphs_h2419, 0.002); end
  def test_lever_graphs_d2420; assert_equal("2050: Level 4", worksheet.lever_graphs_d2420); end
  def test_lever_graphs_e2420; assert_in_delta(0.0, (worksheet.lever_graphs_e2420||0), 0.002); end
  def test_lever_graphs_f2420; assert_in_delta(0.0, (worksheet.lever_graphs_f2420||0), 0.002); end
  def test_lever_graphs_g2420; assert_in_delta(0.2, worksheet.lever_graphs_g2420, 0.002); end
  def test_lever_graphs_h2420; assert_in_delta(0.8, worksheet.lever_graphs_h2420, 0.002); end
  def test_lever_graphs_d1695; assert_equal("Title", worksheet.lever_graphs_d1695); end
  def test_lever_graphs_e1695; assert_equal("liquid-fuel efficient power plant", worksheet.lever_graphs_e1695); end
  def test_lever_graphs_f1695; assert_equal("Liquid-fuel inefficient power plant", worksheet.lever_graphs_f1695); end
  def test_lever_graphs_d1696; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1696, 0.002); end
  def test_lever_graphs_e1696; assert_in_delta(0.3, worksheet.lever_graphs_e1696, 0.002); end
  def test_lever_graphs_f1696; assert_in_delta(0.7, worksheet.lever_graphs_f1696, 0.002); end
  def test_lever_graphs_d1697; assert_equal("2050: Level 1", worksheet.lever_graphs_d1697); end
  def test_lever_graphs_e1697; assert_in_delta(0.3288, worksheet.lever_graphs_e1697, 0.002); end
  def test_lever_graphs_f1697; assert_in_delta(0.6712, worksheet.lever_graphs_f1697, 0.002); end
  def test_lever_graphs_d1698; assert_equal("2050: Level 2", worksheet.lever_graphs_d1698); end
  def test_lever_graphs_e1698; assert_in_delta(0.47, worksheet.lever_graphs_e1698, 0.002); end
  def test_lever_graphs_f1698; assert_in_delta(0.53, worksheet.lever_graphs_f1698, 0.002); end
  def test_lever_graphs_d1699; assert_equal("2050: Level 3", worksheet.lever_graphs_d1699); end
  def test_lever_graphs_e1699; assert_in_delta(0.65, worksheet.lever_graphs_e1699, 0.002); end
  def test_lever_graphs_f1699; assert_in_delta(0.35, worksheet.lever_graphs_f1699, 0.002); end
  def test_lever_graphs_d1700; assert_equal("2050: Level 4", worksheet.lever_graphs_d1700); end
  def test_lever_graphs_e1700; assert_in_delta(0.7142, worksheet.lever_graphs_e1700, 0.002); end
  def test_lever_graphs_f1700; assert_in_delta(0.28580000000000005, worksheet.lever_graphs_f1700, 0.002); end
  def test_lever_graphs_c1550; assert_equal("1975", worksheet.lever_graphs_c1550); end
  def test_lever_graphs_d1550; assert_equal("1980", worksheet.lever_graphs_d1550); end
  def test_lever_graphs_e1550; assert_equal("1985", worksheet.lever_graphs_e1550); end
  def test_lever_graphs_f1550; assert_equal("1990", worksheet.lever_graphs_f1550); end
  def test_lever_graphs_g1550; assert_equal("1995", worksheet.lever_graphs_g1550); end
  def test_lever_graphs_h1550; assert_equal("2000", worksheet.lever_graphs_h1550); end
  def test_lever_graphs_i1550; assert_equal("2005", worksheet.lever_graphs_i1550); end
  def test_lever_graphs_j1550; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1550, 0.002); end
  def test_lever_graphs_k1550; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1550, 0.002); end
  def test_lever_graphs_l1550; assert_equal("2015", worksheet.lever_graphs_l1550); end
  def test_lever_graphs_m1550; assert_equal("2020", worksheet.lever_graphs_m1550); end
  def test_lever_graphs_n1550; assert_equal("2025", worksheet.lever_graphs_n1550); end
  def test_lever_graphs_o1550; assert_equal("2030", worksheet.lever_graphs_o1550); end
  def test_lever_graphs_p1550; assert_equal("2035", worksheet.lever_graphs_p1550); end
  def test_lever_graphs_q1550; assert_equal("2040", worksheet.lever_graphs_q1550); end
  def test_lever_graphs_r1550; assert_equal("2045", worksheet.lever_graphs_r1550); end
  def test_lever_graphs_s1550; assert_equal("2050", worksheet.lever_graphs_s1550); end
  def test_lever_graphs_b1551; assert_equal("Historic data", worksheet.lever_graphs_b1551); end
  def test_lever_graphs_b1552; assert_in_delta(1.0, worksheet.lever_graphs_b1552, 0.002); end
  def test_lever_graphs_k1552; assert_in_delta(0.24, worksheet.lever_graphs_k1552, 0.002); end
  def test_lever_graphs_l1552; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1552, 0.002); end
  def test_lever_graphs_m1552; assert_in_delta(0.2421098901098901, worksheet.lever_graphs_m1552, 0.002); end
  def test_lever_graphs_n1552; assert_in_delta(0.24175824175824173, worksheet.lever_graphs_n1552, 0.002); end
  def test_lever_graphs_o1552; assert_in_delta(0.2414065934065934, worksheet.lever_graphs_o1552, 0.002); end
  def test_lever_graphs_p1552; assert_in_delta(0.24105494505494504, worksheet.lever_graphs_p1552, 0.002); end
  def test_lever_graphs_q1552; assert_in_delta(0.24070329670329668, worksheet.lever_graphs_q1552, 0.002); end
  def test_lever_graphs_r1552; assert_in_delta(0.24035164835164835, worksheet.lever_graphs_r1552, 0.002); end
  def test_lever_graphs_s1552; assert_in_delta(0.24, worksheet.lever_graphs_s1552, 0.002); end
  def test_lever_graphs_b1553; assert_in_epsilon(2.0, worksheet.lever_graphs_b1553, 0.002); end
  def test_lever_graphs_k1553; assert_in_delta(0.24, worksheet.lever_graphs_k1553, 0.002); end
  def test_lever_graphs_l1553; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1553, 0.002); end
  def test_lever_graphs_m1553; assert_in_delta(0.2455384615384615, worksheet.lever_graphs_m1553, 0.002); end
  def test_lever_graphs_n1553; assert_in_delta(0.24861538461538457, worksheet.lever_graphs_n1553, 0.002); end
  def test_lever_graphs_o1553; assert_in_delta(0.25169230769230766, worksheet.lever_graphs_o1553, 0.002); end
  def test_lever_graphs_p1553; assert_in_delta(0.25476923076923075, worksheet.lever_graphs_p1553, 0.002); end
  def test_lever_graphs_q1553; assert_in_delta(0.2578461538461539, worksheet.lever_graphs_q1553, 0.002); end
  def test_lever_graphs_r1553; assert_in_delta(0.26092307692307687, worksheet.lever_graphs_r1553, 0.002); end
  def test_lever_graphs_s1553; assert_in_delta(0.264, worksheet.lever_graphs_s1553, 0.002); end
  def test_lever_graphs_b1554; assert_in_epsilon(3.0, worksheet.lever_graphs_b1554, 0.002); end
  def test_lever_graphs_k1554; assert_in_delta(0.24, worksheet.lever_graphs_k1554, 0.002); end
  def test_lever_graphs_l1554; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1554, 0.002); end
  def test_lever_graphs_m1554; assert_in_delta(0.24896703296703293, worksheet.lever_graphs_m1554, 0.002); end
  def test_lever_graphs_n1554; assert_in_delta(0.25547252747252747, worksheet.lever_graphs_n1554, 0.002); end
  def test_lever_graphs_o1554; assert_in_delta(0.26197802197802195, worksheet.lever_graphs_o1554, 0.002); end
  def test_lever_graphs_p1554; assert_in_delta(0.2684835164835164, worksheet.lever_graphs_p1554, 0.002); end
  def test_lever_graphs_q1554; assert_in_delta(0.27498901098901096, worksheet.lever_graphs_q1554, 0.002); end
  def test_lever_graphs_r1554; assert_in_delta(0.28149450549450544, worksheet.lever_graphs_r1554, 0.002); end
  def test_lever_graphs_s1554; assert_in_delta(0.288, worksheet.lever_graphs_s1554, 0.002); end
  def test_lever_graphs_b1555; assert_in_epsilon(4.0, worksheet.lever_graphs_b1555, 0.002); end
  def test_lever_graphs_k1555; assert_in_delta(0.24, worksheet.lever_graphs_k1555, 0.002); end
  def test_lever_graphs_l1555; assert_in_delta(0.24246153846153845, worksheet.lever_graphs_l1555, 0.002); end
  def test_lever_graphs_m1555; assert_in_delta(0.2523956043956043, worksheet.lever_graphs_m1555, 0.002); end
  def test_lever_graphs_n1555; assert_in_delta(0.26232967032967036, worksheet.lever_graphs_n1555, 0.002); end
  def test_lever_graphs_o1555; assert_in_delta(0.27226373626373623, worksheet.lever_graphs_o1555, 0.002); end
  def test_lever_graphs_p1555; assert_in_delta(0.2821978021978022, worksheet.lever_graphs_p1555, 0.002); end
  def test_lever_graphs_q1555; assert_in_delta(0.29213186813186814, worksheet.lever_graphs_q1555, 0.002); end
  def test_lever_graphs_r1555; assert_in_delta(0.30206593406593407, worksheet.lever_graphs_r1555, 0.002); end
  def test_lever_graphs_s1555; assert_in_delta(0.312, worksheet.lever_graphs_s1555, 0.002); end
  def test_lever_graphs_c1562; assert_equal("1975", worksheet.lever_graphs_c1562); end
  def test_lever_graphs_d1562; assert_equal("1980", worksheet.lever_graphs_d1562); end
  def test_lever_graphs_e1562; assert_equal("1985", worksheet.lever_graphs_e1562); end
  def test_lever_graphs_f1562; assert_equal("1990", worksheet.lever_graphs_f1562); end
  def test_lever_graphs_g1562; assert_equal("1995", worksheet.lever_graphs_g1562); end
  def test_lever_graphs_h1562; assert_equal("2000", worksheet.lever_graphs_h1562); end
  def test_lever_graphs_i1562; assert_equal("2005", worksheet.lever_graphs_i1562); end
  def test_lever_graphs_j1562; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1562, 0.002); end
  def test_lever_graphs_k1562; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1562, 0.002); end
  def test_lever_graphs_l1562; assert_equal("2015", worksheet.lever_graphs_l1562); end
  def test_lever_graphs_m1562; assert_equal("2020", worksheet.lever_graphs_m1562); end
  def test_lever_graphs_n1562; assert_equal("2025", worksheet.lever_graphs_n1562); end
  def test_lever_graphs_o1562; assert_equal("2030", worksheet.lever_graphs_o1562); end
  def test_lever_graphs_p1562; assert_equal("2035", worksheet.lever_graphs_p1562); end
  def test_lever_graphs_q1562; assert_equal("2040", worksheet.lever_graphs_q1562); end
  def test_lever_graphs_r1562; assert_equal("2045", worksheet.lever_graphs_r1562); end
  def test_lever_graphs_s1562; assert_equal("2050", worksheet.lever_graphs_s1562); end
  def test_lever_graphs_b1563; assert_equal("Historic data", worksheet.lever_graphs_b1563); end
  def test_lever_graphs_b1564; assert_in_delta(1.0, worksheet.lever_graphs_b1564, 0.002); end
  def test_lever_graphs_k1564; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1564, 0.002); end
  def test_lever_graphs_l1564; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1564, 0.002); end
  def test_lever_graphs_m1564; assert_in_epsilon(20175.824175824175, worksheet.lever_graphs_m1564, 0.002); end
  def test_lever_graphs_n1564; assert_in_epsilon(20146.520146520146, worksheet.lever_graphs_n1564, 0.002); end
  def test_lever_graphs_o1564; assert_in_epsilon(20117.216117216118, worksheet.lever_graphs_o1564, 0.002); end
  def test_lever_graphs_p1564; assert_in_epsilon(20087.91208791209, worksheet.lever_graphs_p1564, 0.002); end
  def test_lever_graphs_q1564; assert_in_epsilon(20058.608058608057, worksheet.lever_graphs_q1564, 0.002); end
  def test_lever_graphs_r1564; assert_in_epsilon(20029.30402930403, worksheet.lever_graphs_r1564, 0.002); end
  def test_lever_graphs_s1564; assert_in_epsilon(20000.0, worksheet.lever_graphs_s1564, 0.002); end
  def test_lever_graphs_b1565; assert_in_epsilon(2.0, worksheet.lever_graphs_b1565, 0.002); end
  def test_lever_graphs_k1565; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1565, 0.002); end
  def test_lever_graphs_l1565; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1565, 0.002); end
  def test_lever_graphs_m1565; assert_in_epsilon(20318.681318681316, worksheet.lever_graphs_m1565, 0.002); end
  def test_lever_graphs_n1565; assert_in_epsilon(20432.234432234432, worksheet.lever_graphs_n1565, 0.002); end
  def test_lever_graphs_o1565; assert_in_epsilon(20545.787545787545, worksheet.lever_graphs_o1565, 0.002); end
  def test_lever_graphs_p1565; assert_in_epsilon(20659.340659340658, worksheet.lever_graphs_p1565, 0.002); end
  def test_lever_graphs_q1565; assert_in_epsilon(20772.89377289377, worksheet.lever_graphs_q1565, 0.002); end
  def test_lever_graphs_r1565; assert_in_epsilon(20886.446886446887, worksheet.lever_graphs_r1565, 0.002); end
  def test_lever_graphs_s1565; assert_in_epsilon(21000.0, worksheet.lever_graphs_s1565, 0.002); end
  def test_lever_graphs_b1566; assert_in_epsilon(3.0, worksheet.lever_graphs_b1566, 0.002); end
  def test_lever_graphs_k1566; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1566, 0.002); end
  def test_lever_graphs_l1566; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1566, 0.002); end
  def test_lever_graphs_m1566; assert_in_epsilon(20461.53846153846, worksheet.lever_graphs_m1566, 0.002); end
  def test_lever_graphs_n1566; assert_in_epsilon(20717.948717948715, worksheet.lever_graphs_n1566, 0.002); end
  def test_lever_graphs_o1566; assert_in_epsilon(20974.35897435897, worksheet.lever_graphs_o1566, 0.002); end
  def test_lever_graphs_p1566; assert_in_epsilon(21230.76923076923, worksheet.lever_graphs_p1566, 0.002); end
  def test_lever_graphs_q1566; assert_in_epsilon(21487.179487179492, worksheet.lever_graphs_q1566, 0.002); end
  def test_lever_graphs_r1566; assert_in_epsilon(21743.589743589742, worksheet.lever_graphs_r1566, 0.002); end
  def test_lever_graphs_s1566; assert_in_epsilon(22000.0, worksheet.lever_graphs_s1566, 0.002); end
  def test_lever_graphs_b1567; assert_in_epsilon(4.0, worksheet.lever_graphs_b1567, 0.002); end
  def test_lever_graphs_k1567; assert_in_epsilon(20000.0, worksheet.lever_graphs_k1567, 0.002); end
  def test_lever_graphs_l1567; assert_in_epsilon(20205.128205128203, worksheet.lever_graphs_l1567, 0.002); end
  def test_lever_graphs_m1567; assert_in_epsilon(20604.395604395602, worksheet.lever_graphs_m1567, 0.002); end
  def test_lever_graphs_n1567; assert_in_epsilon(21003.663003663, worksheet.lever_graphs_n1567, 0.002); end
  def test_lever_graphs_o1567; assert_in_epsilon(21402.930402930397, worksheet.lever_graphs_o1567, 0.002); end
  def test_lever_graphs_p1567; assert_in_epsilon(21802.1978021978, worksheet.lever_graphs_p1567, 0.002); end
  def test_lever_graphs_q1567; assert_in_epsilon(22201.465201465202, worksheet.lever_graphs_q1567, 0.002); end
  def test_lever_graphs_r1567; assert_in_epsilon(22600.732600732597, worksheet.lever_graphs_r1567, 0.002); end
  def test_lever_graphs_s1567; assert_in_epsilon(23000.0, worksheet.lever_graphs_s1567, 0.002); end
  def test_lever_graphs_c2782; assert_equal("1975", worksheet.lever_graphs_c2782); end
  def test_lever_graphs_d2782; assert_equal("1980", worksheet.lever_graphs_d2782); end
  def test_lever_graphs_e2782; assert_equal("1985", worksheet.lever_graphs_e2782); end
  def test_lever_graphs_f2782; assert_equal("1990", worksheet.lever_graphs_f2782); end
  def test_lever_graphs_g2782; assert_equal("1995", worksheet.lever_graphs_g2782); end
  def test_lever_graphs_h2782; assert_equal("2000", worksheet.lever_graphs_h2782); end
  def test_lever_graphs_i2782; assert_equal("2005", worksheet.lever_graphs_i2782); end
  def test_lever_graphs_j2782; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2782, 0.002); end
  def test_lever_graphs_k2782; assert_equal("2011", worksheet.lever_graphs_k2782); end
  def test_lever_graphs_l2782; assert_equal("2015", worksheet.lever_graphs_l2782); end
  def test_lever_graphs_m2782; assert_equal("2020", worksheet.lever_graphs_m2782); end
  def test_lever_graphs_n2782; assert_equal("2025", worksheet.lever_graphs_n2782); end
  def test_lever_graphs_o2782; assert_equal("2030", worksheet.lever_graphs_o2782); end
  def test_lever_graphs_p2782; assert_equal("2035", worksheet.lever_graphs_p2782); end
  def test_lever_graphs_q2782; assert_equal("2040", worksheet.lever_graphs_q2782); end
  def test_lever_graphs_r2782; assert_equal("2045", worksheet.lever_graphs_r2782); end
  def test_lever_graphs_s2782; assert_equal("2050", worksheet.lever_graphs_s2782); end
  def test_lever_graphs_b2783; assert_equal("Historic data", worksheet.lever_graphs_b2783); end
  def test_lever_graphs_d2783; assert_in_epsilon(125.55000000000001, worksheet.lever_graphs_d2783, 0.002); end
  def test_lever_graphs_e2783; assert_in_epsilon(132.03, worksheet.lever_graphs_e2783, 0.002); end
  def test_lever_graphs_f2783; assert_in_epsilon(143.37, worksheet.lever_graphs_f2783, 0.002); end
  def test_lever_graphs_g2783; assert_in_epsilon(153.09, worksheet.lever_graphs_g2783, 0.002); end
  def test_lever_graphs_h2783; assert_in_epsilon(164.43, worksheet.lever_graphs_h2783, 0.002); end
  def test_lever_graphs_i2783; assert_in_epsilon(170.91000000000003, worksheet.lever_graphs_i2783, 0.002); end
  def test_lever_graphs_b2784; assert_in_delta(1.0, worksheet.lever_graphs_b2784, 0.002); end
  def test_lever_graphs_k2784; assert_in_epsilon(191.0, worksheet.lever_graphs_k2784, 0.002); end
  def test_lever_graphs_l2784; assert_in_epsilon(191.0, worksheet.lever_graphs_l2784, 0.002); end
  def test_lever_graphs_m2784; assert_in_epsilon(192.88234633431986, worksheet.lever_graphs_m2784, 0.002); end
  def test_lever_graphs_n2784; assert_in_epsilon(197.43362810130182, worksheet.lever_graphs_n2784, 0.002); end
  def test_lever_graphs_o2784; assert_in_epsilon(210.54811270703627, worksheet.lever_graphs_o2784, 0.002); end
  def test_lever_graphs_p2784; assert_in_epsilon(236.00000000000003, worksheet.lever_graphs_p2784, 0.002); end
  def test_lever_graphs_q2784; assert_in_epsilon(261.4518872929637, worksheet.lever_graphs_q2784, 0.002); end
  def test_lever_graphs_r2784; assert_in_epsilon(274.5663718986982, worksheet.lever_graphs_r2784, 0.002); end
  def test_lever_graphs_s2784; assert_in_epsilon(281.0, worksheet.lever_graphs_s2784, 0.002); end
  def test_lever_graphs_b2785; assert_in_epsilon(2.0, worksheet.lever_graphs_b2785, 0.002); end
  def test_lever_graphs_k2785; assert_in_epsilon(191.0, worksheet.lever_graphs_k2785, 0.002); end
  def test_lever_graphs_l2785; assert_in_epsilon(191.0, worksheet.lever_graphs_l2785, 0.002); end
  def test_lever_graphs_m2785; assert_in_epsilon(191.0, worksheet.lever_graphs_m2785, 0.002); end
  def test_lever_graphs_n2785; assert_in_epsilon(191.0, worksheet.lever_graphs_n2785, 0.002); end
  def test_lever_graphs_o2785; assert_in_epsilon(191.0, worksheet.lever_graphs_o2785, 0.002); end
  def test_lever_graphs_p2785; assert_in_epsilon(191.0, worksheet.lever_graphs_p2785, 0.002); end
  def test_lever_graphs_q2785; assert_in_epsilon(191.0, worksheet.lever_graphs_q2785, 0.002); end
  def test_lever_graphs_r2785; assert_in_epsilon(191.0, worksheet.lever_graphs_r2785, 0.002); end
  def test_lever_graphs_s2785; assert_in_epsilon(191.0, worksheet.lever_graphs_s2785, 0.002); end
  def test_lever_graphs_b2786; assert_in_epsilon(3.0, worksheet.lever_graphs_b2786, 0.002); end
  def test_lever_graphs_k2786; assert_in_epsilon(191.0, worksheet.lever_graphs_k2786, 0.002); end
  def test_lever_graphs_l2786; assert_in_epsilon(191.0, worksheet.lever_graphs_l2786, 0.002); end
  def test_lever_graphs_m2786; assert_in_epsilon(190.1843165884614, worksheet.lever_graphs_m2786, 0.002); end
  def test_lever_graphs_n2786; assert_in_epsilon(188.21209448943588, worksheet.lever_graphs_n2786, 0.002); end
  def test_lever_graphs_o2786; assert_in_epsilon(182.5291511602843, worksheet.lever_graphs_o2786, 0.002); end
  def test_lever_graphs_p2786; assert_in_epsilon(171.5, worksheet.lever_graphs_p2786, 0.002); end
  def test_lever_graphs_q2786; assert_in_epsilon(160.47084883971573, worksheet.lever_graphs_q2786, 0.002); end
  def test_lever_graphs_r2786; assert_in_epsilon(154.78790551056412, worksheet.lever_graphs_r2786, 0.002); end
  def test_lever_graphs_s2786; assert_in_epsilon(152.0, worksheet.lever_graphs_s2786, 0.002); end
  def test_lever_graphs_b2787; assert_in_epsilon(4.0, worksheet.lever_graphs_b2787, 0.002); end
  def test_lever_graphs_k2787; assert_in_epsilon(191.0, worksheet.lever_graphs_k2787, 0.002); end
  def test_lever_graphs_l2787; assert_in_epsilon(191.0, worksheet.lever_graphs_l2787, 0.002); end
  def test_lever_graphs_m2787; assert_in_epsilon(187.29805220917095, worksheet.lever_graphs_m2787, 0.002); end
  def test_lever_graphs_n2787; assert_in_epsilon(178.3471980674398, worksheet.lever_graphs_n2787, 0.002); end
  def test_lever_graphs_o2787; assert_in_epsilon(152.55537834282873, worksheet.lever_graphs_o2787, 0.002); end
  def test_lever_graphs_p2787; assert_in_epsilon(102.50000000000001, worksheet.lever_graphs_p2787, 0.002); end
  def test_lever_graphs_q2787; assert_in_epsilon(52.44462165717131, worksheet.lever_graphs_q2787, 0.002); end
  def test_lever_graphs_r2787; assert_in_epsilon(26.652801932560205, worksheet.lever_graphs_r2787, 0.002); end
  def test_lever_graphs_s2787; assert_in_epsilon(14.0, worksheet.lever_graphs_s2787, 0.002); end
  def test_lever_graphs_b2788; assert_equal("USA today", worksheet.lever_graphs_b2788); end
  def test_lever_graphs_k2788; assert_in_epsilon(389.0, worksheet.lever_graphs_k2788, 0.002); end
  def test_lever_graphs_b2789; assert_equal("EU today", worksheet.lever_graphs_b2789); end
  def test_lever_graphs_k2789; assert_in_epsilon(309.0, worksheet.lever_graphs_k2789, 0.002); end
  def test_lever_graphs_b2790; assert_equal("Colombia today", worksheet.lever_graphs_b2790); end
  def test_lever_graphs_k2790; assert_in_epsilon(196.0, worksheet.lever_graphs_k2790, 0.002); end
  def test_lever_graphs_b2791; assert_equal("Japan today", worksheet.lever_graphs_b2791); end
  def test_lever_graphs_k2791; assert_in_epsilon(167.0, worksheet.lever_graphs_k2791, 0.002); end
  def test_lever_graphs_b2792; assert_equal("India today", worksheet.lever_graphs_b2792); end
  def test_lever_graphs_k2792; assert_in_epsilon(15.0, worksheet.lever_graphs_k2792, 0.002); end
  def test_lever_graphs_b2793; assert_equal("WHO healthy diet recommendation", worksheet.lever_graphs_b2793); end
  def test_lever_graphs_k2793; assert_in_epsilon(162.0, worksheet.lever_graphs_k2793, 0.002); end
  def test_lever_graphs_d1489; assert_equal("Title", worksheet.lever_graphs_d1489); end
  def test_lever_graphs_e1489; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1489); end
  def test_lever_graphs_f1489; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1489); end
  def test_lever_graphs_g1489; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1489); end
  def test_lever_graphs_h1489; assert_equal("Urban passenger car", worksheet.lever_graphs_h1489); end
  def test_lever_graphs_i1489; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1489); end
  def test_lever_graphs_j1489; assert_equal("Urban passenger train", worksheet.lever_graphs_j1489); end
  def test_lever_graphs_d1490; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1490, 0.002); end
  def test_lever_graphs_e1490; assert_in_delta(0.014136313009945615, worksheet.lever_graphs_e1490, 0.002); end
  def test_lever_graphs_f1490; assert_in_delta(0.0030775657107851356, worksheet.lever_graphs_f1490, 0.002); end
  def test_lever_graphs_g1490; assert_in_delta(0.011701879775382307, worksheet.lever_graphs_g1490, 0.002); end
  def test_lever_graphs_h1490; assert_in_delta(0.7608321379056505, worksheet.lever_graphs_h1490, 0.002); end
  def test_lever_graphs_i1490; assert_in_delta(0.1855938085401102, worksheet.lever_graphs_i1490, 0.002); end
  def test_lever_graphs_j1490; assert_in_delta(0.024658295058126223, worksheet.lever_graphs_j1490, 0.002); end
  def test_lever_graphs_d1491; assert_equal("2050: Level 1", worksheet.lever_graphs_d1491); end
  def test_lever_graphs_e1491; assert_in_delta(0.01079411386416709, worksheet.lever_graphs_e1491, 0.002); end
  def test_lever_graphs_f1491; assert_in_delta(0.003189163273233461, worksheet.lever_graphs_f1491, 0.002); end
  def test_lever_graphs_g1491; assert_in_delta(0.02290550711079704, worksheet.lever_graphs_g1491, 0.002); end
  def test_lever_graphs_h1491; assert_in_delta(0.7784845756581111, worksheet.lever_graphs_h1491, 0.002); end
  def test_lever_graphs_i1491; assert_in_delta(0.1332866427545019, worksheet.lever_graphs_i1491, 0.002); end
  def test_lever_graphs_j1491; assert_in_delta(0.05133999733918937, worksheet.lever_graphs_j1491, 0.002); end
  def test_lever_graphs_d1492; assert_equal("2050: Level 2", worksheet.lever_graphs_d1492); end
  def test_lever_graphs_e1492; assert_in_delta(0.022796417705789093, worksheet.lever_graphs_e1492, 0.002); end
  def test_lever_graphs_f1492; assert_in_delta(0.009512790847152591, worksheet.lever_graphs_f1492, 0.002); end
  def test_lever_graphs_g1492; assert_in_delta(0.033423319192698295, worksheet.lever_graphs_g1492, 0.002); end
  def test_lever_graphs_h1492; assert_in_delta(0.6901915413292197, worksheet.lever_graphs_h1492, 0.002); end
  def test_lever_graphs_i1492; assert_in_delta(0.17482966962334492, worksheet.lever_graphs_i1492, 0.002); end
  def test_lever_graphs_j1492; assert_in_delta(0.06924626130179545, worksheet.lever_graphs_j1492, 0.002); end
  def test_lever_graphs_d1493; assert_equal("2050: Level 3", worksheet.lever_graphs_d1493); end
  def test_lever_graphs_e1493; assert_in_delta(0.02672087112825595, worksheet.lever_graphs_e1493, 0.002); end
  def test_lever_graphs_f1493; assert_in_delta(0.01040707612363653, worksheet.lever_graphs_f1493, 0.002); end
  def test_lever_graphs_g1493; assert_in_delta(0.060831697923719716, worksheet.lever_graphs_g1493, 0.002); end
  def test_lever_graphs_h1493; assert_in_delta(0.5996726025835968, worksheet.lever_graphs_h1493, 0.002); end
  def test_lever_graphs_i1493; assert_in_delta(0.20626637362162492, worksheet.lever_graphs_i1493, 0.002); end
  def test_lever_graphs_j1493; assert_in_delta(0.09610137861916612, worksheet.lever_graphs_j1493, 0.002); end
  def test_lever_graphs_d1494; assert_equal("2050: Level 4", worksheet.lever_graphs_d1494); end
  def test_lever_graphs_e1494; assert_in_delta(0.036189143851419275, worksheet.lever_graphs_e1494, 0.002); end
  def test_lever_graphs_f1494; assert_in_delta(0.027406398413794133, worksheet.lever_graphs_f1494, 0.002); end
  def test_lever_graphs_g1494; assert_in_delta(0.09611793339525283, worksheet.lever_graphs_g1494, 0.002); end
  def test_lever_graphs_h1494; assert_in_delta(0.4498247091005362, worksheet.lever_graphs_h1494, 0.002); end
  def test_lever_graphs_i1494; assert_in_delta(0.27935479464253477, worksheet.lever_graphs_i1494, 0.002); end
  def test_lever_graphs_j1494; assert_in_delta(0.11110702059646282, worksheet.lever_graphs_j1494, 0.002); end
  def test_lever_graphs_d1511; assert_equal("Title", worksheet.lever_graphs_d1511); end
  def test_lever_graphs_e1511; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1511); end
  def test_lever_graphs_f1511; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1511); end
  def test_lever_graphs_g1511; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1511); end
  def test_lever_graphs_h1511; assert_equal("Urban passenger car", worksheet.lever_graphs_h1511); end
  def test_lever_graphs_i1511; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1511); end
  def test_lever_graphs_j1511; assert_equal("Urban passenger train", worksheet.lever_graphs_j1511); end
  def test_lever_graphs_d1512; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1512, 0.002); end
  def test_lever_graphs_e1512; assert_in_delta(0.11194002187009072, worksheet.lever_graphs_e1512, 0.002); end
  def test_lever_graphs_f1512; assert_in_delta(0.08391719422809167, worksheet.lever_graphs_f1512, 0.002); end
  def test_lever_graphs_g1512; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1512, 0.002); end
  def test_lever_graphs_h1512; assert_in_delta(0.2311102950782561, worksheet.lever_graphs_h1512, 0.002); end
  def test_lever_graphs_i1512; assert_in_delta(0.3796610169491526, worksheet.lever_graphs_i1512, 0.002); end
  def test_lever_graphs_j1512; assert_in_delta(0.04464099274979394, worksheet.lever_graphs_j1512, 0.002); end
  def test_lever_graphs_d1513; assert_equal("2050: Level 1", worksheet.lever_graphs_d1513); end
  def test_lever_graphs_e1513; assert_in_delta(0.024221820886008705, worksheet.lever_graphs_e1513, 0.002); end
  def test_lever_graphs_f1513; assert_in_delta(0.0037182619781153717, worksheet.lever_graphs_f1513, 0.002); end
  def test_lever_graphs_g1513; assert_in_delta(0.1487304791246149, worksheet.lever_graphs_g1513, 0.002); end
  def test_lever_graphs_h1513; assert_in_delta(0.6193562094975034, worksheet.lever_graphs_h1513, 0.002); end
  def test_lever_graphs_i1513; assert_in_delta(0.19866142568787845, worksheet.lever_graphs_i1513, 0.002); end
  def test_lever_graphs_j1513; assert_in_delta(0.005311802825879175, worksheet.lever_graphs_j1513, 0.002); end
  def test_lever_graphs_d1514; assert_equal("2050: Level 2", worksheet.lever_graphs_d1514); end
  def test_lever_graphs_e1514; assert_in_delta(0.03238268378593342, worksheet.lever_graphs_e1514, 0.002); end
  def test_lever_graphs_f1514; assert_in_delta(0.023860924894898307, worksheet.lever_graphs_f1514, 0.002); end
  def test_lever_graphs_g1514; assert_in_delta(0.16191341892966707, worksheet.lever_graphs_g1514, 0.002); end
  def test_lever_graphs_h1514; assert_in_delta(0.4938075218725145, worksheet.lever_graphs_h1514, 0.002); end
  def test_lever_graphs_i1514; assert_in_delta(0.27496875355073286, worksheet.lever_graphs_i1514, 0.002); end
  def test_lever_graphs_j1514; assert_in_delta(0.013066696966253843, worksheet.lever_graphs_j1514, 0.002); end
  def test_lever_graphs_d1515; assert_equal("2050: Level 3", worksheet.lever_graphs_d1515); end
  def test_lever_graphs_e1515; assert_in_delta(0.036979322877091506, worksheet.lever_graphs_e1515, 0.002); end
  def test_lever_graphs_f1515; assert_in_delta(0.02974530482992349, worksheet.lever_graphs_f1515, 0.002); end
  def test_lever_graphs_g1515; assert_in_delta(0.1728510014278969, worksheet.lever_graphs_g1515, 0.002); end
  def test_lever_graphs_h1515; assert_in_delta(0.4081204200380899, worksheet.lever_graphs_h1515, 0.002); end
  def test_lever_graphs_i1515; assert_in_delta(0.3270965131187632, worksheet.lever_graphs_i1515, 0.002); end
  def test_lever_graphs_j1515; assert_in_delta(0.02520743770823508, worksheet.lever_graphs_j1515, 0.002); end
  def test_lever_graphs_d1516; assert_equal("2050: Level 4", worksheet.lever_graphs_d1516); end
  def test_lever_graphs_e1516; assert_in_delta(0.05408328879859205, worksheet.lever_graphs_e1516, 0.002); end
  def test_lever_graphs_f1516; assert_in_delta(0.049718098389071146, worksheet.lever_graphs_f1516, 0.002); end
  def test_lever_graphs_g1516; assert_in_delta(0.22471057762431754, worksheet.lever_graphs_g1516, 0.002); end
  def test_lever_graphs_h1516; assert_in_delta(0.25364652438624186, worksheet.lever_graphs_h1516, 0.002); end
  def test_lever_graphs_i1516; assert_in_delta(0.3841349241581299, worksheet.lever_graphs_i1516, 0.002); end
  def test_lever_graphs_j1516; assert_in_delta(0.03370658664364756, worksheet.lever_graphs_j1516, 0.002); end
  def test_lever_graphs_d1500; assert_equal("Title", worksheet.lever_graphs_d1500); end
  def test_lever_graphs_e1500; assert_equal("Urban passenger walk", worksheet.lever_graphs_e1500); end
  def test_lever_graphs_f1500; assert_equal("Urban passenger bike", worksheet.lever_graphs_f1500); end
  def test_lever_graphs_g1500; assert_equal("Urban passenger motorbike", worksheet.lever_graphs_g1500); end
  def test_lever_graphs_h1500; assert_equal("Urban passenger car", worksheet.lever_graphs_h1500); end
  def test_lever_graphs_i1500; assert_equal("Urban passenger bus", worksheet.lever_graphs_i1500); end
  def test_lever_graphs_j1500; assert_equal("Urban passenger train", worksheet.lever_graphs_j1500); end
  def test_lever_graphs_d1501; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1501, 0.002); end
  def test_lever_graphs_e1501; assert_in_delta(0.04635097613382408, worksheet.lever_graphs_e1501, 0.002); end
  def test_lever_graphs_f1501; assert_in_delta(0.026083051554046464, worksheet.lever_graphs_f1501, 0.002); end
  def test_lever_graphs_g1501; assert_in_delta(0.061057423607414035, worksheet.lever_graphs_g1501, 0.002); end
  def test_lever_graphs_h1501; assert_in_delta(0.5217689415674699, worksheet.lever_graphs_h1501, 0.002); end
  def test_lever_graphs_i1501; assert_in_delta(0.25597150666185114, worksheet.lever_graphs_i1501, 0.002); end
  def test_lever_graphs_j1501; assert_in_delta(0.08876810047539441, worksheet.lever_graphs_j1501, 0.002); end
  def test_lever_graphs_d1502; assert_equal("2050: Level 1", worksheet.lever_graphs_d1502); end
  def test_lever_graphs_e1502; assert_in_delta(0.026523421094867723, worksheet.lever_graphs_e1502, 0.002); end
  def test_lever_graphs_f1502; assert_in_delta(0.018446740235152366, worksheet.lever_graphs_f1502, 0.002); end
  def test_lever_graphs_g1502; assert_in_delta(0.03888772265788877, worksheet.lever_graphs_g1502, 0.002); end
  def test_lever_graphs_h1502; assert_in_delta(0.7119444609675022, worksheet.lever_graphs_h1502, 0.002); end
  def test_lever_graphs_i1502; assert_in_delta(0.1665064776992505, worksheet.lever_graphs_i1502, 0.002); end
  def test_lever_graphs_j1502; assert_in_delta(0.037691177345338445, worksheet.lever_graphs_j1502, 0.002); end
  def test_lever_graphs_d1503; assert_equal("2050: Level 2", worksheet.lever_graphs_d1503); end
  def test_lever_graphs_e1503; assert_in_delta(0.03434157116153882, worksheet.lever_graphs_e1503, 0.002); end
  def test_lever_graphs_f1503; assert_in_delta(0.023603185132698507, worksheet.lever_graphs_f1503, 0.002); end
  def test_lever_graphs_g1503; assert_in_delta(0.06898295981370371, worksheet.lever_graphs_g1503, 0.002); end
  def test_lever_graphs_h1503; assert_in_delta(0.5886974598187011, worksheet.lever_graphs_h1503, 0.002); end
  def test_lever_graphs_i1503; assert_in_delta(0.24423032237528697, worksheet.lever_graphs_i1503, 0.002); end
  def test_lever_graphs_j1503; assert_in_delta(0.04014450169807082, worksheet.lever_graphs_j1503, 0.002); end
  def test_lever_graphs_d1504; assert_equal("2050: Level 3", worksheet.lever_graphs_d1504); end
  def test_lever_graphs_e1504; assert_in_delta(0.041424283431744015, worksheet.lever_graphs_e1504, 0.002); end
  def test_lever_graphs_f1504; assert_in_delta(0.029719915259893908, worksheet.lever_graphs_f1504, 0.002); end
  def test_lever_graphs_g1504; assert_in_delta(0.11933865586984425, worksheet.lever_graphs_g1504, 0.002); end
  def test_lever_graphs_h1504; assert_in_delta(0.41925679100261354, worksheet.lever_graphs_h1504, 0.002); end
  def test_lever_graphs_i1504; assert_in_delta(0.3251978372453256, worksheet.lever_graphs_i1504, 0.002); end
  def test_lever_graphs_j1504; assert_in_delta(0.06506251719057865, worksheet.lever_graphs_j1504, 0.002); end
  def test_lever_graphs_d1505; assert_equal("2050: Level 4", worksheet.lever_graphs_d1505); end
  def test_lever_graphs_e1505; assert_in_delta(0.04979364078226359, worksheet.lever_graphs_e1505, 0.002); end
  def test_lever_graphs_f1505; assert_in_delta(0.03837022017086388, worksheet.lever_graphs_f1505, 0.002); end
  def test_lever_graphs_g1505; assert_in_delta(0.12314766608892123, worksheet.lever_graphs_g1505, 0.002); end
  def test_lever_graphs_h1505; assert_in_delta(0.3511714667205578, worksheet.lever_graphs_h1505, 0.002); end
  def test_lever_graphs_i1505; assert_in_delta(0.3545543680301203, worksheet.lever_graphs_i1505, 0.002); end
  def test_lever_graphs_j1505; assert_in_delta(0.08296263820727312, worksheet.lever_graphs_j1505, 0.002); end
  def test_lever_graphs_c1530; assert_equal("1975", worksheet.lever_graphs_c1530); end
  def test_lever_graphs_d1530; assert_equal("1980", worksheet.lever_graphs_d1530); end
  def test_lever_graphs_e1530; assert_equal("1985", worksheet.lever_graphs_e1530); end
  def test_lever_graphs_f1530; assert_equal("1990", worksheet.lever_graphs_f1530); end
  def test_lever_graphs_g1530; assert_equal("1995", worksheet.lever_graphs_g1530); end
  def test_lever_graphs_h1530; assert_equal("2000", worksheet.lever_graphs_h1530); end
  def test_lever_graphs_i1530; assert_equal("2005", worksheet.lever_graphs_i1530); end
  def test_lever_graphs_j1530; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1530, 0.002); end
  def test_lever_graphs_k1530; assert_equal("2011", worksheet.lever_graphs_k1530); end
  def test_lever_graphs_l1530; assert_equal("2015", worksheet.lever_graphs_l1530); end
  def test_lever_graphs_m1530; assert_equal("2020", worksheet.lever_graphs_m1530); end
  def test_lever_graphs_n1530; assert_equal("2025", worksheet.lever_graphs_n1530); end
  def test_lever_graphs_o1530; assert_equal("2030", worksheet.lever_graphs_o1530); end
  def test_lever_graphs_p1530; assert_equal("2035", worksheet.lever_graphs_p1530); end
  def test_lever_graphs_q1530; assert_equal("2040", worksheet.lever_graphs_q1530); end
  def test_lever_graphs_r1530; assert_equal("2045", worksheet.lever_graphs_r1530); end
  def test_lever_graphs_s1530; assert_equal("2050", worksheet.lever_graphs_s1530); end
  def test_lever_graphs_b1531; assert_equal("Historic data", worksheet.lever_graphs_b1531); end
  def test_lever_graphs_b1532; assert_in_delta(1.0, worksheet.lever_graphs_b1532, 0.002); end
  def test_lever_graphs_k1532; assert_in_epsilon(1.6, worksheet.lever_graphs_k1532, 0.002); end
  def test_lever_graphs_l1532; assert_in_epsilon(1.6, worksheet.lever_graphs_l1532, 0.002); end
  def test_lever_graphs_m1532; assert_in_epsilon(1.5771428571428572, worksheet.lever_graphs_m1532, 0.002); end
  def test_lever_graphs_n1532; assert_in_epsilon(1.5542857142857143, worksheet.lever_graphs_n1532, 0.002); end
  def test_lever_graphs_o1532; assert_in_epsilon(1.5314285714285714, worksheet.lever_graphs_o1532, 0.002); end
  def test_lever_graphs_p1532; assert_in_epsilon(1.5085714285714287, worksheet.lever_graphs_p1532, 0.002); end
  def test_lever_graphs_q1532; assert_in_epsilon(1.4857142857142858, worksheet.lever_graphs_q1532, 0.002); end
  def test_lever_graphs_r1532; assert_in_epsilon(1.4628571428571426, worksheet.lever_graphs_r1532, 0.002); end
  def test_lever_graphs_s1532; assert_in_epsilon(1.4400000000000002, worksheet.lever_graphs_s1532, 0.002); end
  def test_lever_graphs_b1533; assert_in_epsilon(2.0, worksheet.lever_graphs_b1533, 0.002); end
  def test_lever_graphs_k1533; assert_in_epsilon(1.6, worksheet.lever_graphs_k1533, 0.002); end
  def test_lever_graphs_l1533; assert_in_epsilon(1.6, worksheet.lever_graphs_l1533, 0.002); end
  def test_lever_graphs_m1533; assert_in_epsilon(1.6, worksheet.lever_graphs_m1533, 0.002); end
  def test_lever_graphs_n1533; assert_in_epsilon(1.6, worksheet.lever_graphs_n1533, 0.002); end
  def test_lever_graphs_o1533; assert_in_epsilon(1.6, worksheet.lever_graphs_o1533, 0.002); end
  def test_lever_graphs_p1533; assert_in_epsilon(1.6, worksheet.lever_graphs_p1533, 0.002); end
  def test_lever_graphs_q1533; assert_in_epsilon(1.6, worksheet.lever_graphs_q1533, 0.002); end
  def test_lever_graphs_r1533; assert_in_epsilon(1.6, worksheet.lever_graphs_r1533, 0.002); end
  def test_lever_graphs_s1533; assert_in_epsilon(1.6, worksheet.lever_graphs_s1533, 0.002); end
  def test_lever_graphs_b1534; assert_in_epsilon(3.0, worksheet.lever_graphs_b1534, 0.002); end
  def test_lever_graphs_k1534; assert_in_epsilon(1.6, worksheet.lever_graphs_k1534, 0.002); end
  def test_lever_graphs_l1534; assert_in_epsilon(1.6, worksheet.lever_graphs_l1534, 0.002); end
  def test_lever_graphs_m1534; assert_in_epsilon(1.6228571428571428, worksheet.lever_graphs_m1534, 0.002); end
  def test_lever_graphs_n1534; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_n1534, 0.002); end
  def test_lever_graphs_o1534; assert_in_epsilon(1.6685714285714284, worksheet.lever_graphs_o1534, 0.002); end
  def test_lever_graphs_p1534; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_p1534, 0.002); end
  def test_lever_graphs_q1534; assert_in_epsilon(1.7142857142857146, worksheet.lever_graphs_q1534, 0.002); end
  def test_lever_graphs_r1534; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_r1534, 0.002); end
  def test_lever_graphs_s1534; assert_in_epsilon(1.7600000000000002, worksheet.lever_graphs_s1534, 0.002); end
  def test_lever_graphs_b1535; assert_in_epsilon(4.0, worksheet.lever_graphs_b1535, 0.002); end
  def test_lever_graphs_k1535; assert_in_epsilon(1.6, worksheet.lever_graphs_k1535, 0.002); end
  def test_lever_graphs_l1535; assert_in_epsilon(1.6, worksheet.lever_graphs_l1535, 0.002); end
  def test_lever_graphs_m1535; assert_in_epsilon(1.6457142857142857, worksheet.lever_graphs_m1535, 0.002); end
  def test_lever_graphs_n1535; assert_in_epsilon(1.6914285714285715, worksheet.lever_graphs_n1535, 0.002); end
  def test_lever_graphs_o1535; assert_in_epsilon(1.737142857142857, worksheet.lever_graphs_o1535, 0.002); end
  def test_lever_graphs_p1535; assert_in_epsilon(1.7828571428571427, worksheet.lever_graphs_p1535, 0.002); end
  def test_lever_graphs_q1535; assert_in_epsilon(1.8285714285714285, worksheet.lever_graphs_q1535, 0.002); end
  def test_lever_graphs_r1535; assert_in_epsilon(1.874285714285714, worksheet.lever_graphs_r1535, 0.002); end
  def test_lever_graphs_s1535; assert_in_epsilon(1.92, worksheet.lever_graphs_s1535, 0.002); end
  def test_lever_graphs_c3060; assert_equal("1975", worksheet.lever_graphs_c3060); end
  def test_lever_graphs_d3060; assert_equal("1980", worksheet.lever_graphs_d3060); end
  def test_lever_graphs_e3060; assert_equal("1985", worksheet.lever_graphs_e3060); end
  def test_lever_graphs_f3060; assert_equal("1990", worksheet.lever_graphs_f3060); end
  def test_lever_graphs_g3060; assert_equal("1995", worksheet.lever_graphs_g3060); end
  def test_lever_graphs_h3060; assert_equal("2000", worksheet.lever_graphs_h3060); end
  def test_lever_graphs_i3060; assert_equal("2005", worksheet.lever_graphs_i3060); end
  def test_lever_graphs_j3060; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3060, 0.002); end
  def test_lever_graphs_k3060; assert_equal("2011", worksheet.lever_graphs_k3060); end
  def test_lever_graphs_l3060; assert_equal("2015", worksheet.lever_graphs_l3060); end
  def test_lever_graphs_m3060; assert_equal("2020", worksheet.lever_graphs_m3060); end
  def test_lever_graphs_n3060; assert_equal("2025", worksheet.lever_graphs_n3060); end
  def test_lever_graphs_o3060; assert_equal("2030", worksheet.lever_graphs_o3060); end
  def test_lever_graphs_p3060; assert_equal("2035", worksheet.lever_graphs_p3060); end
  def test_lever_graphs_q3060; assert_equal("2040", worksheet.lever_graphs_q3060); end
  def test_lever_graphs_r3060; assert_equal("2045", worksheet.lever_graphs_r3060); end
  def test_lever_graphs_s3060; assert_equal("2050", worksheet.lever_graphs_s3060); end
  def test_lever_graphs_b3061; assert_equal("Historic data", worksheet.lever_graphs_b3061); end
  def test_lever_graphs_c3061; assert_in_epsilon(48.366777087544, worksheet.lever_graphs_c3061, 0.002); end
  def test_lever_graphs_d3061; assert_in_epsilon(100.8586055269058, worksheet.lever_graphs_d3061, 0.002); end
  def test_lever_graphs_e3061; assert_in_epsilon(57.79701296868199, worksheet.lever_graphs_e3061, 0.002); end
  def test_lever_graphs_f3061; assert_in_epsilon(40.96227805628421, worksheet.lever_graphs_f3061, 0.002); end
  def test_lever_graphs_g3061; assert_in_epsilon(25.195809116543934, worksheet.lever_graphs_g3061, 0.002); end
  def test_lever_graphs_h3061; assert_in_epsilon(37.34055877514925, worksheet.lever_graphs_h3061, 0.002); end
  def test_lever_graphs_i3061; assert_in_epsilon(62.994224615593296, worksheet.lever_graphs_i3061, 0.002); end
  def test_lever_graphs_k3061; assert_in_epsilon(111.60806135788701, worksheet.lever_graphs_k3061, 0.002); end
  def test_lever_graphs_b3062; assert_in_delta(1.0, worksheet.lever_graphs_b3062, 0.002); end
  def test_lever_graphs_b3063; assert_in_epsilon(2.0, worksheet.lever_graphs_b3063, 0.002); end
  def test_lever_graphs_b3064; assert_in_epsilon(3.0, worksheet.lever_graphs_b3064, 0.002); end
  def test_lever_graphs_b3065; assert_in_epsilon(4.0, worksheet.lever_graphs_b3065, 0.002); end
  def test_lever_graphs_c1215; assert_equal("1975", worksheet.lever_graphs_c1215); end
  def test_lever_graphs_d1215; assert_equal("1980", worksheet.lever_graphs_d1215); end
  def test_lever_graphs_e1215; assert_equal("1985", worksheet.lever_graphs_e1215); end
  def test_lever_graphs_f1215; assert_equal("1990", worksheet.lever_graphs_f1215); end
  def test_lever_graphs_g1215; assert_equal("1995", worksheet.lever_graphs_g1215); end
  def test_lever_graphs_h1215; assert_equal("2000", worksheet.lever_graphs_h1215); end
  def test_lever_graphs_i1215; assert_equal("2005", worksheet.lever_graphs_i1215); end
  def test_lever_graphs_j1215; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1215, 0.002); end
  def test_lever_graphs_k1215; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1215, 0.002); end
  def test_lever_graphs_l1215; assert_equal("2015", worksheet.lever_graphs_l1215); end
  def test_lever_graphs_m1215; assert_equal("2020", worksheet.lever_graphs_m1215); end
  def test_lever_graphs_n1215; assert_equal("2025", worksheet.lever_graphs_n1215); end
  def test_lever_graphs_o1215; assert_equal("2030", worksheet.lever_graphs_o1215); end
  def test_lever_graphs_p1215; assert_equal("2035", worksheet.lever_graphs_p1215); end
  def test_lever_graphs_q1215; assert_equal("2040", worksheet.lever_graphs_q1215); end
  def test_lever_graphs_r1215; assert_equal("2045", worksheet.lever_graphs_r1215); end
  def test_lever_graphs_s1215; assert_equal("2050", worksheet.lever_graphs_s1215); end
  def test_lever_graphs_b1216; assert_equal("Historic data", worksheet.lever_graphs_b1216); end
  def test_lever_graphs_b1217; assert_in_delta(1.0, worksheet.lever_graphs_b1217, 0.002); end
  def test_lever_graphs_k1217; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1217, 0.002); end
  def test_lever_graphs_l1217; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_l1217, 0.002); end
  def test_lever_graphs_m1217; assert_in_epsilon(12351.737802069609, worksheet.lever_graphs_m1217, 0.002); end
  def test_lever_graphs_n1217; assert_in_epsilon(12651.039042558295, worksheet.lever_graphs_n1217, 0.002); end
  def test_lever_graphs_o1217; assert_in_epsilon(12771.681484531466, worksheet.lever_graphs_o1217, 0.002); end
  def test_lever_graphs_p1217; assert_in_epsilon(12893.474393178265, worksheet.lever_graphs_p1217, 0.002); end
  def test_lever_graphs_q1217; assert_in_epsilon(13016.428739542927, worksheet.lever_graphs_q1217, 0.002); end
  def test_lever_graphs_r1217; assert_in_epsilon(13140.55559929141, worksheet.lever_graphs_r1217, 0.002); end
  def test_lever_graphs_s1217; assert_in_epsilon(13153.70141216429, worksheet.lever_graphs_s1217, 0.002); end
  def test_lever_graphs_b1218; assert_in_epsilon(2.0, worksheet.lever_graphs_b1218, 0.002); end
  def test_lever_graphs_k1218; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1218, 0.002); end
  def test_lever_graphs_l1218; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_l1218, 0.002); end
  def test_lever_graphs_m1218; assert_in_epsilon(12351.737802069609, worksheet.lever_graphs_m1218, 0.002); end
  def test_lever_graphs_n1218; assert_in_epsilon(12469.526056934774, worksheet.lever_graphs_n1218, 0.002); end
  def test_lever_graphs_o1218; assert_in_epsilon(12588.437560463932, worksheet.lever_graphs_o1218, 0.002); end
  def test_lever_graphs_p1218; assert_in_epsilon(12708.483024145786, worksheet.lever_graphs_p1218, 0.002); end
  def test_lever_graphs_q1218; assert_in_epsilon(12829.6732616156, worksheet.lever_graphs_q1218, 0.002); end
  def test_lever_graphs_r1218; assert_in_epsilon(12701.88869058201, worksheet.lever_graphs_r1218, 0.002); end
  def test_lever_graphs_s1218; assert_in_epsilon(12575.376864088463, worksheet.lever_graphs_s1218, 0.002); end
  def test_lever_graphs_b1219; assert_in_epsilon(3.0, worksheet.lever_graphs_b1219, 0.002); end
  def test_lever_graphs_k1219; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1219, 0.002); end
  def test_lever_graphs_l1219; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_l1219, 0.002); end
  def test_lever_graphs_m1219; assert_in_epsilon(12229.298862519066, worksheet.lever_graphs_m1219, 0.002); end
  def test_lever_graphs_n1219; assert_in_epsilon(12321.294176260857, worksheet.lever_graphs_n1219, 0.002); end
  def test_lever_graphs_o1219; assert_in_epsilon(12321.294176260857, worksheet.lever_graphs_o1219, 0.002); end
  def test_lever_graphs_p1219; assert_in_epsilon(12198.573101547074, worksheet.lever_graphs_p1219, 0.002); end
  def test_lever_graphs_q1219; assert_in_epsilon(12016.689087925728, worksheet.lever_graphs_q1219, 0.002); end
  def test_lever_graphs_r1219; assert_in_epsilon(11778.270301109322, worksheet.lever_graphs_r1219, 0.002); end
  def test_lever_graphs_s1219; assert_in_epsilon(11486.743425089278, worksheet.lever_graphs_s1219, 0.002); end
  def test_lever_graphs_b1220; assert_in_epsilon(4.0, worksheet.lever_graphs_b1220, 0.002); end
  def test_lever_graphs_k1220; assert_in_epsilon(11737.0, worksheet.lever_graphs_k1220, 0.002); end
  def test_lever_graphs_l1220; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_l1220, 0.002); end
  def test_lever_graphs_m1220; assert_in_epsilon(12180.596021758704, worksheet.lever_graphs_m1220, 0.002); end
  def test_lever_graphs_n1220; assert_in_epsilon(12241.620929694582, worksheet.lever_graphs_n1220, 0.002); end
  def test_lever_graphs_o1220; assert_in_epsilon(12180.535118900392, worksheet.lever_graphs_o1220, 0.002); end
  def test_lever_graphs_p1220; assert_in_epsilon(11998.920056463263, worksheet.lever_graphs_p1220, 0.002); end
  def test_lever_graphs_q1220; assert_in_epsilon(11760.853818580526, worksheet.lever_graphs_q1220, 0.002); end
  def test_lever_graphs_r1220; assert_in_epsilon(11469.758022219301, worksheet.lever_graphs_r1220, 0.002); end
  def test_lever_graphs_s1220; assert_in_epsilon(11129.769693998238, worksheet.lever_graphs_s1220, 0.002); end
  def test_lever_graphs_c1235; assert_equal("1975", worksheet.lever_graphs_c1235); end
  def test_lever_graphs_d1235; assert_equal("1980", worksheet.lever_graphs_d1235); end
  def test_lever_graphs_e1235; assert_equal("1985", worksheet.lever_graphs_e1235); end
  def test_lever_graphs_f1235; assert_equal("1990", worksheet.lever_graphs_f1235); end
  def test_lever_graphs_g1235; assert_equal("1995", worksheet.lever_graphs_g1235); end
  def test_lever_graphs_h1235; assert_equal("2000", worksheet.lever_graphs_h1235); end
  def test_lever_graphs_i1235; assert_equal("2005", worksheet.lever_graphs_i1235); end
  def test_lever_graphs_j1235; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1235, 0.002); end
  def test_lever_graphs_k1235; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1235, 0.002); end
  def test_lever_graphs_l1235; assert_equal("2015", worksheet.lever_graphs_l1235); end
  def test_lever_graphs_m1235; assert_equal("2020", worksheet.lever_graphs_m1235); end
  def test_lever_graphs_n1235; assert_equal("2025", worksheet.lever_graphs_n1235); end
  def test_lever_graphs_o1235; assert_equal("2030", worksheet.lever_graphs_o1235); end
  def test_lever_graphs_p1235; assert_equal("2035", worksheet.lever_graphs_p1235); end
  def test_lever_graphs_q1235; assert_equal("2040", worksheet.lever_graphs_q1235); end
  def test_lever_graphs_r1235; assert_equal("2045", worksheet.lever_graphs_r1235); end
  def test_lever_graphs_s1235; assert_equal("2050", worksheet.lever_graphs_s1235); end
  def test_lever_graphs_b1236; assert_equal("Historic data", worksheet.lever_graphs_b1236); end
  def test_lever_graphs_b1237; assert_in_delta(1.0, worksheet.lever_graphs_b1237, 0.002); end
  def test_lever_graphs_k1237; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1237, 0.002); end
  def test_lever_graphs_l1237; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_l1237, 0.002); end
  def test_lever_graphs_m1237; assert_in_epsilon(11826.95579327355, worksheet.lever_graphs_m1237, 0.002); end
  def test_lever_graphs_n1237; assert_in_epsilon(12430.249400818919, worksheet.lever_graphs_n1237, 0.002); end
  def test_lever_graphs_o1237; assert_in_epsilon(12903.428405697658, worksheet.lever_graphs_o1237, 0.002); end
  def test_lever_graphs_p1237; assert_in_epsilon(13229.256142590557, worksheet.lever_graphs_p1237, 0.002); end
  def test_lever_graphs_q1237; assert_in_epsilon(13395.450742538253, worksheet.lever_graphs_q1237, 0.002); end
  def test_lever_graphs_r1237; assert_in_epsilon(13563.733188148173, worksheet.lever_graphs_r1237, 0.002); end
  def test_lever_graphs_s1237; assert_in_epsilon(13734.129708308084, worksheet.lever_graphs_s1237, 0.002); end
  def test_lever_graphs_b1238; assert_in_epsilon(2.0, worksheet.lever_graphs_b1238, 0.002); end
  def test_lever_graphs_k1238; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1238, 0.002); end
  def test_lever_graphs_l1238; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_l1238, 0.002); end
  def test_lever_graphs_m1238; assert_in_epsilon(11261.178896862863, worksheet.lever_graphs_m1238, 0.002); end
  def test_lever_graphs_n1238; assert_in_epsilon(11835.6121965769, worksheet.lever_graphs_n1238, 0.002); end
  def test_lever_graphs_o1238; assert_in_epsilon(12286.155304822014, worksheet.lever_graphs_o1238, 0.002); end
  def test_lever_graphs_p1238; assert_in_epsilon(12596.39612239552, worksheet.lever_graphs_p1238, 0.002); end
  def test_lever_graphs_q1238; assert_in_epsilon(12754.640319331469, worksheet.lever_graphs_q1238, 0.002); end
  def test_lever_graphs_r1238; assert_in_epsilon(12818.541194941501, worksheet.lever_graphs_r1238, 0.002); end
  def test_lever_graphs_s1238; assert_in_epsilon(12882.762214577668, worksheet.lever_graphs_s1238, 0.002); end
  def test_lever_graphs_b1239; assert_in_epsilon(3.0, worksheet.lever_graphs_b1239, 0.002); end
  def test_lever_graphs_k1239; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1239, 0.002); end
  def test_lever_graphs_l1239; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_l1239, 0.002); end
  def test_lever_graphs_m1239; assert_in_epsilon(10986.529228969433, worksheet.lever_graphs_m1239, 0.002); end
  def test_lever_graphs_n1239; assert_in_epsilon(11404.750521238313, worksheet.lever_graphs_n1239, 0.002); end
  def test_lever_graphs_o1239; assert_in_epsilon(11751.0234553157, worksheet.lever_graphs_o1239, 0.002); end
  def test_lever_graphs_p1239; assert_in_epsilon(11928.34957679476, worksheet.lever_graphs_p1239, 0.002); end
  def test_lever_graphs_q1239; assert_in_epsilon(12048.111161768396, worksheet.lever_graphs_q1239, 0.002); end
  def test_lever_graphs_r1239; assert_in_epsilon(12108.472319230212, worksheet.lever_graphs_r1239, 0.002); end
  def test_lever_graphs_s1239; assert_in_epsilon(12138.773786348458, worksheet.lever_graphs_s1239, 0.002); end
  def test_lever_graphs_b1240; assert_in_epsilon(4.0, worksheet.lever_graphs_b1240, 0.002); end
  def test_lever_graphs_k1240; assert_in_epsilon(9198.0, worksheet.lever_graphs_k1240, 0.002); end
  def test_lever_graphs_l1240; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_l1240, 0.002); end
  def test_lever_graphs_m1240; assert_in_epsilon(10851.228796673438, worksheet.lever_graphs_m1240, 0.002); end
  def test_lever_graphs_n1240; assert_in_epsilon(11125.23592176943, worksheet.lever_graphs_n1240, 0.002); end
  def test_lever_graphs_o1240; assert_in_epsilon(11321.295170098962, worksheet.lever_graphs_o1240, 0.002); end
  def test_lever_graphs_p1240; assert_in_epsilon(11463.520711837995, worksheet.lever_graphs_p1240, 0.002); end
  def test_lever_graphs_q1240; assert_in_epsilon(11520.953065296831, worksheet.lever_graphs_q1240, 0.002); end
  def test_lever_graphs_r1240; assert_in_epsilon(11532.478627665121, worksheet.lever_graphs_r1240, 0.002); end
  def test_lever_graphs_s1240; assert_in_epsilon(11544.015720206928, worksheet.lever_graphs_s1240, 0.002); end
  def test_lever_graphs_c3229; assert_equal("1975", worksheet.lever_graphs_c3229); end
  def test_lever_graphs_d3229; assert_equal("1980", worksheet.lever_graphs_d3229); end
  def test_lever_graphs_e3229; assert_equal("1985", worksheet.lever_graphs_e3229); end
  def test_lever_graphs_f3229; assert_equal("1990", worksheet.lever_graphs_f3229); end
  def test_lever_graphs_g3229; assert_equal("1995", worksheet.lever_graphs_g3229); end
  def test_lever_graphs_h3229; assert_equal("2000", worksheet.lever_graphs_h3229); end
  def test_lever_graphs_i3229; assert_equal("2005", worksheet.lever_graphs_i3229); end
  def test_lever_graphs_j3229; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3229, 0.002); end
  def test_lever_graphs_k3229; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3229, 0.002); end
  def test_lever_graphs_l3229; assert_equal("2015", worksheet.lever_graphs_l3229); end
  def test_lever_graphs_m3229; assert_equal("2020", worksheet.lever_graphs_m3229); end
  def test_lever_graphs_n3229; assert_equal("2025", worksheet.lever_graphs_n3229); end
  def test_lever_graphs_o3229; assert_equal("2030", worksheet.lever_graphs_o3229); end
  def test_lever_graphs_p3229; assert_equal("2035", worksheet.lever_graphs_p3229); end
  def test_lever_graphs_q3229; assert_equal("2040", worksheet.lever_graphs_q3229); end
  def test_lever_graphs_r3229; assert_equal("2045", worksheet.lever_graphs_r3229); end
  def test_lever_graphs_s3229; assert_equal("2050", worksheet.lever_graphs_s3229); end
  def test_lever_graphs_b3230; assert_equal("Historic data", worksheet.lever_graphs_b3230); end
  def test_lever_graphs_b3231; assert_in_delta(1.0, worksheet.lever_graphs_b3231, 0.002); end
  def test_lever_graphs_k3231; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3231, 0.002); end
  def test_lever_graphs_l3231; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_l3231, 0.002); end
  def test_lever_graphs_m3231; assert_in_epsilon(897.9406682742109, worksheet.lever_graphs_m3231, 0.002); end
  def test_lever_graphs_n3231; assert_in_epsilon(998.419339322835, worksheet.lever_graphs_n3231, 0.002); end
  def test_lever_graphs_o3231; assert_in_epsilon(1122.290588526111, worksheet.lever_graphs_o3231, 0.002); end
  def test_lever_graphs_p3231; assert_in_epsilon(1274.6973511895121, worksheet.lever_graphs_p3231, 0.002); end
  def test_lever_graphs_q3231; assert_in_epsilon(1462.6567746562937, worksheet.lever_graphs_q3231, 0.002); end
  def test_lever_graphs_r3231; assert_in_epsilon(1695.5996827327028, worksheet.lever_graphs_r3231, 0.002); end
  def test_lever_graphs_s3231; assert_in_epsilon(1985.7262804310365, worksheet.lever_graphs_s3231, 0.002); end
  def test_lever_graphs_b3232; assert_in_epsilon(2.0, worksheet.lever_graphs_b3232, 0.002); end
  def test_lever_graphs_k3232; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3232, 0.002); end
  def test_lever_graphs_l3232; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_l3232, 0.002); end
  def test_lever_graphs_m3232; assert_in_epsilon(864.564318306252, worksheet.lever_graphs_m3232, 0.002); end
  def test_lever_graphs_n3232; assert_in_epsilon(924.1065536768136, worksheet.lever_graphs_n3232, 0.002); end
  def test_lever_graphs_o3232; assert_in_epsilon(996.8560319082085, worksheet.lever_graphs_o3232, 0.002); end
  def test_lever_graphs_p3232; assert_in_epsilon(1084.6057547650219, worksheet.lever_graphs_p3232, 0.002); end
  def test_lever_graphs_q3232; assert_in_epsilon(1189.9821579356867, worksheet.lever_graphs_q3232, 0.002); end
  def test_lever_graphs_r3232; assert_in_epsilon(1316.5665765657077, worksheet.lever_graphs_r3232, 0.002); end
  def test_lever_graphs_s3232; assert_in_epsilon(1468.7888862507798, worksheet.lever_graphs_s3232, 0.002); end
  def test_lever_graphs_b3233; assert_in_epsilon(3.0, worksheet.lever_graphs_b3233, 0.002); end
  def test_lever_graphs_k3233; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3233, 0.002); end
  def test_lever_graphs_l3233; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_l3233, 0.002); end
  def test_lever_graphs_m3233; assert_in_epsilon(822.1087927436154, worksheet.lever_graphs_m3233, 0.002); end
  def test_lever_graphs_n3233; assert_in_epsilon(834.3991744504948, worksheet.lever_graphs_n3233, 0.002); end
  def test_lever_graphs_o3233; assert_in_epsilon(853.3983931175435, worksheet.lever_graphs_o3233, 0.002); end
  def test_lever_graphs_p3233; assert_in_epsilon(878.968510630646, worksheet.lever_graphs_p3233, 0.002); end
  def test_lever_graphs_q3233; assert_in_epsilon(911.4094027664642, worksheet.lever_graphs_q3233, 0.002); end
  def test_lever_graphs_r3233; assert_in_epsilon(951.3974756775061, worksheet.lever_graphs_r3233, 0.002); end
  def test_lever_graphs_s3233; assert_in_epsilon(999.7574805226822, worksheet.lever_graphs_s3233, 0.002); end
  def test_lever_graphs_b3234; assert_in_epsilon(4.0, worksheet.lever_graphs_b3234, 0.002); end
  def test_lever_graphs_k3234; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_k3234, 0.002); end
  def test_lever_graphs_l3234; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_l3234, 0.002); end
  def test_lever_graphs_m3234; assert_in_epsilon(767.359307076585, worksheet.lever_graphs_m3234, 0.002); end
  def test_lever_graphs_n3234; assert_in_epsilon(727.0476770885373, worksheet.lever_graphs_n3234, 0.002); end
  def test_lever_graphs_o3234; assert_in_epsilon(694.246219820094, worksheet.lever_graphs_o3234, 0.002); end
  def test_lever_graphs_p3234; assert_in_epsilon(667.6724127421297, worksheet.lever_graphs_p3234, 0.002); end
  def test_lever_graphs_q3234; assert_in_epsilon(646.5317453191843, worksheet.lever_graphs_q3234, 0.002); end
  def test_lever_graphs_r3234; assert_in_epsilon(630.3530722995142, worksheet.lever_graphs_r3234, 0.002); end
  def test_lever_graphs_s3234; assert_in_epsilon(618.7599053646178, worksheet.lever_graphs_s3234, 0.002); end
  def test_lever_graphs_b1265; assert_equal("Level", worksheet.lever_graphs_b1265); end
  def test_lever_graphs_c1265; assert_equal("1975", worksheet.lever_graphs_c1265); end
  def test_lever_graphs_d1265; assert_equal("1980", worksheet.lever_graphs_d1265); end
  def test_lever_graphs_e1265; assert_equal("1985", worksheet.lever_graphs_e1265); end
  def test_lever_graphs_f1265; assert_equal("1990", worksheet.lever_graphs_f1265); end
  def test_lever_graphs_g1265; assert_equal("1995", worksheet.lever_graphs_g1265); end
  def test_lever_graphs_h1265; assert_equal("2000", worksheet.lever_graphs_h1265); end
  def test_lever_graphs_i1265; assert_equal("2005", worksheet.lever_graphs_i1265); end
  def test_lever_graphs_j1265; assert_equal("2010", worksheet.lever_graphs_j1265); end
  def test_lever_graphs_k1265; assert_equal("2011", worksheet.lever_graphs_k1265); end
  def test_lever_graphs_l1265; assert_equal("2015", worksheet.lever_graphs_l1265); end
  def test_lever_graphs_m1265; assert_equal("2020", worksheet.lever_graphs_m1265); end
  def test_lever_graphs_n1265; assert_equal("2025", worksheet.lever_graphs_n1265); end
  def test_lever_graphs_o1265; assert_equal("2030", worksheet.lever_graphs_o1265); end
  def test_lever_graphs_p1265; assert_equal("2035", worksheet.lever_graphs_p1265); end
  def test_lever_graphs_q1265; assert_equal("2040", worksheet.lever_graphs_q1265); end
  def test_lever_graphs_r1265; assert_equal("2045", worksheet.lever_graphs_r1265); end
  def test_lever_graphs_s1265; assert_equal("2050", worksheet.lever_graphs_s1265); end
  def test_lever_graphs_b1266; assert_equal("Historic data", worksheet.lever_graphs_b1266); end
  def test_lever_graphs_b1267; assert_in_delta(1.0, worksheet.lever_graphs_b1267, 0.002); end
  def test_lever_graphs_k1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1267, 0.002); end
  def test_lever_graphs_l1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1267, 0.002); end
  def test_lever_graphs_m1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1267, 0.002); end
  def test_lever_graphs_n1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1267, 0.002); end
  def test_lever_graphs_o1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1267, 0.002); end
  def test_lever_graphs_p1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1267, 0.002); end
  def test_lever_graphs_q1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1267, 0.002); end
  def test_lever_graphs_r1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1267, 0.002); end
  def test_lever_graphs_s1267; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1267, 0.002); end
  def test_lever_graphs_b1268; assert_in_epsilon(2.0, worksheet.lever_graphs_b1268, 0.002); end
  def test_lever_graphs_k1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1268, 0.002); end
  def test_lever_graphs_l1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1268, 0.002); end
  def test_lever_graphs_m1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1268, 0.002); end
  def test_lever_graphs_n1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1268, 0.002); end
  def test_lever_graphs_o1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1268, 0.002); end
  def test_lever_graphs_p1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1268, 0.002); end
  def test_lever_graphs_q1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1268, 0.002); end
  def test_lever_graphs_r1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1268, 0.002); end
  def test_lever_graphs_s1268; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1268, 0.002); end
  def test_lever_graphs_b1269; assert_in_epsilon(3.0, worksheet.lever_graphs_b1269, 0.002); end
  def test_lever_graphs_k1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1269, 0.002); end
  def test_lever_graphs_l1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1269, 0.002); end
  def test_lever_graphs_m1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1269, 0.002); end
  def test_lever_graphs_n1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1269, 0.002); end
  def test_lever_graphs_o1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1269, 0.002); end
  def test_lever_graphs_p1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1269, 0.002); end
  def test_lever_graphs_q1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1269, 0.002); end
  def test_lever_graphs_r1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1269, 0.002); end
  def test_lever_graphs_s1269; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1269, 0.002); end
  def test_lever_graphs_b1270; assert_in_epsilon(4.0, worksheet.lever_graphs_b1270, 0.002); end
  def test_lever_graphs_k1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_k1270, 0.002); end
  def test_lever_graphs_l1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_l1270, 0.002); end
  def test_lever_graphs_m1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_m1270, 0.002); end
  def test_lever_graphs_n1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_n1270, 0.002); end
  def test_lever_graphs_o1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_o1270, 0.002); end
  def test_lever_graphs_p1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_p1270, 0.002); end
  def test_lever_graphs_q1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_q1270, 0.002); end
  def test_lever_graphs_r1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_r1270, 0.002); end
  def test_lever_graphs_s1270; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_s1270, 0.002); end
  def test_lever_graphs_c3219; assert_equal("1975", worksheet.lever_graphs_c3219); end
  def test_lever_graphs_d3219; assert_equal("1980", worksheet.lever_graphs_d3219); end
  def test_lever_graphs_e3219; assert_equal("1985", worksheet.lever_graphs_e3219); end
  def test_lever_graphs_f3219; assert_equal("1990", worksheet.lever_graphs_f3219); end
  def test_lever_graphs_g3219; assert_equal("1995", worksheet.lever_graphs_g3219); end
  def test_lever_graphs_h3219; assert_equal("2000", worksheet.lever_graphs_h3219); end
  def test_lever_graphs_i3219; assert_equal("2005", worksheet.lever_graphs_i3219); end
  def test_lever_graphs_j3219; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3219, 0.002); end
  def test_lever_graphs_k3219; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3219, 0.002); end
  def test_lever_graphs_l3219; assert_equal("2015", worksheet.lever_graphs_l3219); end
  def test_lever_graphs_m3219; assert_equal("2020", worksheet.lever_graphs_m3219); end
  def test_lever_graphs_n3219; assert_equal("2025", worksheet.lever_graphs_n3219); end
  def test_lever_graphs_o3219; assert_equal("2030", worksheet.lever_graphs_o3219); end
  def test_lever_graphs_p3219; assert_equal("2035", worksheet.lever_graphs_p3219); end
  def test_lever_graphs_q3219; assert_equal("2040", worksheet.lever_graphs_q3219); end
  def test_lever_graphs_r3219; assert_equal("2045", worksheet.lever_graphs_r3219); end
  def test_lever_graphs_s3219; assert_equal("2050", worksheet.lever_graphs_s3219); end
  def test_lever_graphs_b3220; assert_equal("Historic data", worksheet.lever_graphs_b3220); end
  def test_lever_graphs_b3221; assert_in_delta(1.0, worksheet.lever_graphs_b3221, 0.002); end
  def test_lever_graphs_k3221; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3221, 0.002); end
  def test_lever_graphs_l3221; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_l3221, 0.002); end
  def test_lever_graphs_m3221; assert_in_epsilon(6925.3862760219245, worksheet.lever_graphs_m3221, 0.002); end
  def test_lever_graphs_n3221; assert_in_epsilon(7592.356082456327, worksheet.lever_graphs_n3221, 0.002); end
  def test_lever_graphs_o3221; assert_in_epsilon(8355.03945930298, worksheet.lever_graphs_o3221, 0.002); end
  def test_lever_graphs_p3221; assert_in_epsilon(9138.721804253428, worksheet.lever_graphs_p3221, 0.002); end
  def test_lever_graphs_q3221; assert_in_epsilon(10026.878976944427, worksheet.lever_graphs_q3221, 0.002); end
  def test_lever_graphs_r3221; assert_in_epsilon(11015.770928571108, worksheet.lever_graphs_r3221, 0.002); end
  def test_lever_graphs_s3221; assert_in_epsilon(12190.167503148017, worksheet.lever_graphs_s3221, 0.002); end
  def test_lever_graphs_b3222; assert_in_epsilon(2.0, worksheet.lever_graphs_b3222, 0.002); end
  def test_lever_graphs_k3222; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3222, 0.002); end
  def test_lever_graphs_l3222; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_l3222, 0.002); end
  def test_lever_graphs_m3222; assert_in_epsilon(6906.371464742304, worksheet.lever_graphs_m3222, 0.002); end
  def test_lever_graphs_n3222; assert_in_epsilon(7487.601863336815, worksheet.lever_graphs_n3222, 0.002); end
  def test_lever_graphs_o3222; assert_in_epsilon(8147.722067406493, worksheet.lever_graphs_o3222, 0.002); end
  def test_lever_graphs_p3222; assert_in_epsilon(8733.024393656147, worksheet.lever_graphs_p3222, 0.002); end
  def test_lever_graphs_q3222; assert_in_epsilon(9325.258264638895, worksheet.lever_graphs_q3222, 0.002); end
  def test_lever_graphs_r3222; assert_in_epsilon(10025.924494232935, worksheet.lever_graphs_r3222, 0.002); end
  def test_lever_graphs_s3222; assert_in_epsilon(10854.330116689056, worksheet.lever_graphs_s3222, 0.002); end
  def test_lever_graphs_b3223; assert_in_epsilon(3.0, worksheet.lever_graphs_b3223, 0.002); end
  def test_lever_graphs_k3223; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3223, 0.002); end
  def test_lever_graphs_l3223; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_l3223, 0.002); end
  def test_lever_graphs_m3223; assert_in_epsilon(6764.603498607636, worksheet.lever_graphs_m3223, 0.002); end
  def test_lever_graphs_n3223; assert_in_epsilon(7180.726407633965, worksheet.lever_graphs_n3223, 0.002); end
  def test_lever_graphs_o3223; assert_in_epsilon(7621.138173019842, worksheet.lever_graphs_o3223, 0.002); end
  def test_lever_graphs_p3223; assert_in_epsilon(8111.201881788237, worksheet.lever_graphs_p3223, 0.002); end
  def test_lever_graphs_q3223; assert_in_epsilon(8650.088773472207, worksheet.lever_graphs_q3223, 0.002); end
  def test_lever_graphs_r3223; assert_in_epsilon(9101.596280969263, worksheet.lever_graphs_r3223, 0.002); end
  def test_lever_graphs_s3223; assert_in_epsilon(9623.486216696063, worksheet.lever_graphs_s3223, 0.002); end
  def test_lever_graphs_b3224; assert_in_epsilon(4.0, worksheet.lever_graphs_b3224, 0.002); end
  def test_lever_graphs_k3224; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_k3224, 0.002); end
  def test_lever_graphs_l3224; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_l3224, 0.002); end
  def test_lever_graphs_m3224; assert_in_epsilon(6748.890269394936, worksheet.lever_graphs_m3224, 0.002); end
  def test_lever_graphs_n3224; assert_in_epsilon(7112.093979290368, worksheet.lever_graphs_n3224, 0.002); end
  def test_lever_graphs_o3224; assert_in_epsilon(7509.605613701526, worksheet.lever_graphs_o3224, 0.002); end
  def test_lever_graphs_p3224; assert_in_epsilon(7955.957081350675, worksheet.lever_graphs_p3224, 0.002); end
  def test_lever_graphs_q3224; assert_in_epsilon(8305.265153390801, worksheet.lever_graphs_q3224, 0.002); end
  def test_lever_graphs_r3224; assert_in_epsilon(8565.281615158943, worksheet.lever_graphs_r3224, 0.002); end
  def test_lever_graphs_s3224; assert_in_epsilon(8890.295307771508, worksheet.lever_graphs_s3224, 0.002); end
  def test_lever_graphs_c1225; assert_equal("1975", worksheet.lever_graphs_c1225); end
  def test_lever_graphs_d1225; assert_equal("1980", worksheet.lever_graphs_d1225); end
  def test_lever_graphs_e1225; assert_equal("1985", worksheet.lever_graphs_e1225); end
  def test_lever_graphs_f1225; assert_equal("1990", worksheet.lever_graphs_f1225); end
  def test_lever_graphs_g1225; assert_equal("1995", worksheet.lever_graphs_g1225); end
  def test_lever_graphs_h1225; assert_equal("2000", worksheet.lever_graphs_h1225); end
  def test_lever_graphs_i1225; assert_equal("2005", worksheet.lever_graphs_i1225); end
  def test_lever_graphs_j1225; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1225, 0.002); end
  def test_lever_graphs_k1225; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1225, 0.002); end
  def test_lever_graphs_l1225; assert_equal("2015", worksheet.lever_graphs_l1225); end
  def test_lever_graphs_m1225; assert_equal("2020", worksheet.lever_graphs_m1225); end
  def test_lever_graphs_n1225; assert_equal("2025", worksheet.lever_graphs_n1225); end
  def test_lever_graphs_o1225; assert_equal("2030", worksheet.lever_graphs_o1225); end
  def test_lever_graphs_p1225; assert_equal("2035", worksheet.lever_graphs_p1225); end
  def test_lever_graphs_q1225; assert_equal("2040", worksheet.lever_graphs_q1225); end
  def test_lever_graphs_r1225; assert_equal("2045", worksheet.lever_graphs_r1225); end
  def test_lever_graphs_s1225; assert_equal("2050", worksheet.lever_graphs_s1225); end
  def test_lever_graphs_b1226; assert_equal("Historic data", worksheet.lever_graphs_b1226); end
  def test_lever_graphs_b1227; assert_in_delta(1.0, worksheet.lever_graphs_b1227, 0.002); end
  def test_lever_graphs_k1227; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1227, 0.002); end
  def test_lever_graphs_l1227; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_l1227, 0.002); end
  def test_lever_graphs_m1227; assert_in_epsilon(9890.690211047828, worksheet.lever_graphs_m1227, 0.002); end
  def test_lever_graphs_n1227; assert_in_epsilon(10498.546156669334, worksheet.lever_graphs_n1227, 0.002); end
  def test_lever_graphs_o1227; assert_in_epsilon(10898.191526838578, worksheet.lever_graphs_o1227, 0.002); end
  def test_lever_graphs_p1227; assert_in_epsilon(11313.050091245794, worksheet.lever_graphs_p1227, 0.002); end
  def test_lever_graphs_q1227; assert_in_epsilon(11598.71878275099, worksheet.lever_graphs_q1227, 0.002); end
  def test_lever_graphs_r1227; assert_in_epsilon(11891.600966696164, worksheet.lever_graphs_r1227, 0.002); end
  def test_lever_graphs_s1227; assert_in_epsilon(12010.99359268158, worksheet.lever_graphs_s1227, 0.002); end
  def test_lever_graphs_b1228; assert_in_epsilon(2.0, worksheet.lever_graphs_b1228, 0.002); end
  def test_lever_graphs_k1228; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1228, 0.002); end
  def test_lever_graphs_l1228; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_l1228, 0.002); end
  def test_lever_graphs_m1228; assert_in_epsilon(9890.690211047828, worksheet.lever_graphs_m1228, 0.002); end
  def test_lever_graphs_n1228; assert_in_epsilon(10267.196490263688, worksheet.lever_graphs_n1228, 0.002); end
  def test_lever_graphs_o1228; assert_in_epsilon(10658.03513408345, worksheet.lever_graphs_o1228, 0.002); end
  def test_lever_graphs_p1228; assert_in_epsilon(10927.163877102632, worksheet.lever_graphs_p1228, 0.002); end
  def test_lever_graphs_q1228; assert_in_epsilon(11203.088458135844, worksheet.lever_graphs_q1228, 0.002); end
  def test_lever_graphs_r1228; assert_in_epsilon(11315.56836339921, worksheet.lever_graphs_r1228, 0.002); end
  def test_lever_graphs_s1228; assert_in_epsilon(11326.88845889529, worksheet.lever_graphs_s1228, 0.002); end
  def test_lever_graphs_b1229; assert_in_epsilon(3.0, worksheet.lever_graphs_b1229, 0.002); end
  def test_lever_graphs_k1229; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1229, 0.002); end
  def test_lever_graphs_l1229; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_l1229, 0.002); end
  def test_lever_graphs_m1229; assert_in_epsilon(9793.628251934293, worksheet.lever_graphs_m1229, 0.002); end
  def test_lever_graphs_n1229; assert_in_epsilon(10131.171085347953, worksheet.lever_graphs_n1229, 0.002); end
  def test_lever_graphs_o1229; assert_in_epsilon(10335.421991356336, worksheet.lever_graphs_o1229, 0.002); end
  def test_lever_graphs_p1229; assert_in_epsilon(10543.790726612078, worksheet.lever_graphs_p1229, 0.002); end
  def test_lever_graphs_q1229; assert_in_epsilon(10649.651229854362, worksheet.lever_graphs_q1229, 0.002); end
  def test_lever_graphs_r1229; assert_in_epsilon(10756.57458102651, worksheet.lever_graphs_r1229, 0.002); end
  def test_lever_graphs_s1229; assert_in_epsilon(10767.33545909798, worksheet.lever_graphs_s1229, 0.002); end
  def test_lever_graphs_b1230; assert_in_epsilon(4.0, worksheet.lever_graphs_b1230, 0.002); end
  def test_lever_graphs_k1230; assert_in_epsilon(8237.0, worksheet.lever_graphs_k1230, 0.002); end
  def test_lever_graphs_l1230; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_l1230, 0.002); end
  def test_lever_graphs_m1230; assert_in_epsilon(9793.628251934293, worksheet.lever_graphs_m1230, 0.002); end
  def test_lever_graphs_n1230; assert_in_epsilon(10040.929637966634, worksheet.lever_graphs_n1230, 0.002); end
  def test_lever_graphs_o1230; assert_in_epsilon(10243.36121852568, worksheet.lever_graphs_o1230, 0.002); end
  def test_lever_graphs_p1230; assert_in_epsilon(10346.205385448373, worksheet.lever_graphs_p1230, 0.002); end
  def test_lever_graphs_q1230; assert_in_epsilon(10398.039977943257, worksheet.lever_graphs_q1230, 0.002); end
  def test_lever_graphs_r1230; assert_in_epsilon(10424.061085988858, worksheet.lever_graphs_r1230, 0.002); end
  def test_lever_graphs_s1230; assert_in_epsilon(10434.489317533289, worksheet.lever_graphs_s1230, 0.002); end
  def test_lever_graphs_c3209; assert_equal("1975", worksheet.lever_graphs_c3209); end
  def test_lever_graphs_d3209; assert_equal("1980", worksheet.lever_graphs_d3209); end
  def test_lever_graphs_e3209; assert_equal("1985", worksheet.lever_graphs_e3209); end
  def test_lever_graphs_f3209; assert_equal("1990", worksheet.lever_graphs_f3209); end
  def test_lever_graphs_g3209; assert_equal("1995", worksheet.lever_graphs_g3209); end
  def test_lever_graphs_h3209; assert_equal("2000", worksheet.lever_graphs_h3209); end
  def test_lever_graphs_i3209; assert_equal("2005", worksheet.lever_graphs_i3209); end
  def test_lever_graphs_j3209; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3209, 0.002); end
  def test_lever_graphs_k3209; assert_in_epsilon(2011.0, worksheet.lever_graphs_k3209, 0.002); end
  def test_lever_graphs_l3209; assert_equal("2015", worksheet.lever_graphs_l3209); end
  def test_lever_graphs_m3209; assert_equal("2020", worksheet.lever_graphs_m3209); end
  def test_lever_graphs_n3209; assert_equal("2025", worksheet.lever_graphs_n3209); end
  def test_lever_graphs_o3209; assert_equal("2030", worksheet.lever_graphs_o3209); end
  def test_lever_graphs_p3209; assert_equal("2035", worksheet.lever_graphs_p3209); end
  def test_lever_graphs_q3209; assert_equal("2040", worksheet.lever_graphs_q3209); end
  def test_lever_graphs_r3209; assert_equal("2045", worksheet.lever_graphs_r3209); end
  def test_lever_graphs_s3209; assert_equal("2050", worksheet.lever_graphs_s3209); end
  def test_lever_graphs_b3210; assert_equal("Historic data", worksheet.lever_graphs_b3210); end
  def test_lever_graphs_b3211; assert_in_delta(1.0, worksheet.lever_graphs_b3211, 0.002); end
  def test_lever_graphs_k3211; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3211, 0.002); end
  def test_lever_graphs_l3211; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_l3211, 0.002); end
  def test_lever_graphs_m3211; assert_in_epsilon(9463.011291339797, worksheet.lever_graphs_m3211, 0.002); end
  def test_lever_graphs_n3211; assert_in_epsilon(9164.485145705561, worksheet.lever_graphs_n3211, 0.002); end
  def test_lever_graphs_o3211; assert_in_epsilon(8822.250918124892, worksheet.lever_graphs_o3211, 0.002); end
  def test_lever_graphs_p3211; assert_in_epsilon(8494.944177865158, worksheet.lever_graphs_p3211, 0.002); end
  def test_lever_graphs_q3211; assert_in_epsilon(8142.960912641419, worksheet.lever_graphs_q3211, 0.002); end
  def test_lever_graphs_r3211; assert_in_epsilon(7837.912157396099, worksheet.lever_graphs_r3211, 0.002); end
  def test_lever_graphs_s3211; assert_in_epsilon(7536.454372010625, worksheet.lever_graphs_s3211, 0.002); end
  def test_lever_graphs_b3212; assert_in_epsilon(2.0, worksheet.lever_graphs_b3212, 0.002); end
  def test_lever_graphs_k3212; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3212, 0.002); end
  def test_lever_graphs_l3212; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_l3212, 0.002); end
  def test_lever_graphs_m3212; assert_in_epsilon(9183.308911563887, worksheet.lever_graphs_m3212, 0.002); end
  def test_lever_graphs_n3212; assert_in_epsilon(8824.578070552816, worksheet.lever_graphs_n3212, 0.002); end
  def test_lever_graphs_o3212; assert_in_epsilon(8494.392800691348, worksheet.lever_graphs_o3212, 0.002); end
  def test_lever_graphs_p3212; assert_in_epsilon(8151.735689020062, worksheet.lever_graphs_p3212, 0.002); end
  def test_lever_graphs_q3212; assert_in_epsilon(7814.074709981451, worksheet.lever_graphs_q3212, 0.002); end
  def test_lever_graphs_r3212; assert_in_epsilon(7439.918905478722, worksheet.lever_graphs_r3212, 0.002); end
  def test_lever_graphs_s3212; assert_in_epsilon(7094.521953493011, worksheet.lever_graphs_s3212, 0.002); end
  def test_lever_graphs_b3213; assert_in_epsilon(3.0, worksheet.lever_graphs_b3213, 0.002); end
  def test_lever_graphs_k3213; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3213, 0.002); end
  def test_lever_graphs_l3213; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_l3213, 0.002); end
  def test_lever_graphs_m3213; assert_in_epsilon(9011.931719538017, worksheet.lever_graphs_m3213, 0.002); end
  def test_lever_graphs_n3213; assert_in_epsilon(8584.200295064007, worksheet.lever_graphs_n3213, 0.002); end
  def test_lever_graphs_o3213; assert_in_epsilon(8177.003734981063, worksheet.lever_graphs_o3213, 0.002); end
  def test_lever_graphs_p3213; assert_in_epsilon(7771.128826721488, worksheet.lever_graphs_p3213, 0.002); end
  def test_lever_graphs_q3213; assert_in_epsilon(7386.92293656425, worksheet.lever_graphs_q3213, 0.002); end
  def test_lever_graphs_r3213; assert_in_epsilon(7025.566667137004, worksheet.lever_graphs_r3213, 0.002); end
  def test_lever_graphs_s3213; assert_in_epsilon(6678.373734313191, worksheet.lever_graphs_s3213, 0.002); end
  def test_lever_graphs_b3214; assert_in_epsilon(4.0, worksheet.lever_graphs_b3214, 0.002); end
  def test_lever_graphs_k3214; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_k3214, 0.002); end
  def test_lever_graphs_l3214; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_l3214, 0.002); end
  def test_lever_graphs_m3214; assert_in_epsilon(8940.585538539712, worksheet.lever_graphs_m3214, 0.002); end
  def test_lever_graphs_n3214; assert_in_epsilon(8429.187798764378, worksheet.lever_graphs_n3214, 0.002); end
  def test_lever_graphs_o3214; assert_in_epsilon(7963.914826714307, worksheet.lever_graphs_o3214, 0.002); end
  def test_lever_graphs_p3214; assert_in_epsilon(7531.699838186547, worksheet.lever_graphs_p3214, 0.002); end
  def test_lever_graphs_q3214; assert_in_epsilon(7123.353042470681, worksheet.lever_graphs_q3214, 0.002); end
  def test_lever_graphs_r3214; assert_in_epsilon(6740.327667286737, worksheet.lever_graphs_r3214, 0.002); end
  def test_lever_graphs_s3214; assert_in_epsilon(6397.53911744443, worksheet.lever_graphs_s3214, 0.002); end
  def test_lever_graphs_c2022; assert_equal("1975", worksheet.lever_graphs_c2022); end
  def test_lever_graphs_d2022; assert_equal("1980", worksheet.lever_graphs_d2022); end
  def test_lever_graphs_e2022; assert_equal("1985", worksheet.lever_graphs_e2022); end
  def test_lever_graphs_f2022; assert_equal("1990", worksheet.lever_graphs_f2022); end
  def test_lever_graphs_g2022; assert_equal("1995", worksheet.lever_graphs_g2022); end
  def test_lever_graphs_h2022; assert_equal("2000", worksheet.lever_graphs_h2022); end
  def test_lever_graphs_i2022; assert_equal("2005", worksheet.lever_graphs_i2022); end
  def test_lever_graphs_j2022; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2022, 0.002); end
  def test_lever_graphs_k2022; assert_in_epsilon(2011.0, worksheet.lever_graphs_k2022, 0.002); end
  def test_lever_graphs_l2022; assert_equal("2015", worksheet.lever_graphs_l2022); end
  def test_lever_graphs_m2022; assert_equal("2020", worksheet.lever_graphs_m2022); end
  def test_lever_graphs_n2022; assert_equal("2025", worksheet.lever_graphs_n2022); end
  def test_lever_graphs_o2022; assert_equal("2030", worksheet.lever_graphs_o2022); end
  def test_lever_graphs_p2022; assert_equal("2035", worksheet.lever_graphs_p2022); end
  def test_lever_graphs_q2022; assert_equal("2040", worksheet.lever_graphs_q2022); end
  def test_lever_graphs_r2022; assert_equal("2045", worksheet.lever_graphs_r2022); end
  def test_lever_graphs_s2022; assert_equal("2050", worksheet.lever_graphs_s2022); end
  def test_lever_graphs_b2023; assert_equal("Historic data", worksheet.lever_graphs_b2023); end
  def test_lever_graphs_b2024; assert_in_delta(1.0, worksheet.lever_graphs_b2024, 0.002); end
  def test_lever_graphs_k2024; assert_in_epsilon(1.42, worksheet.lever_graphs_k2024, 0.002); end
  def test_lever_graphs_l2024; assert_in_epsilon(1.4343589743589742, worksheet.lever_graphs_l2024, 0.002); end
  def test_lever_graphs_m2024; assert_in_epsilon(1.4523076923076925, worksheet.lever_graphs_m2024, 0.002); end
  def test_lever_graphs_n2024; assert_in_epsilon(1.4702564102564102, worksheet.lever_graphs_n2024, 0.002); end
  def test_lever_graphs_o2024; assert_in_epsilon(1.488205128205128, worksheet.lever_graphs_o2024, 0.002); end
  def test_lever_graphs_p2024; assert_in_epsilon(1.5061538461538464, worksheet.lever_graphs_p2024, 0.002); end
  def test_lever_graphs_q2024; assert_in_epsilon(1.5241025641025643, worksheet.lever_graphs_q2024, 0.002); end
  def test_lever_graphs_r2024; assert_in_epsilon(1.5420512820512822, worksheet.lever_graphs_r2024, 0.002); end
  def test_lever_graphs_s2024; assert_in_epsilon(1.56, worksheet.lever_graphs_s2024, 0.002); end
  def test_lever_graphs_b2025; assert_in_epsilon(2.0, worksheet.lever_graphs_b2025, 0.002); end
  def test_lever_graphs_k2025; assert_in_epsilon(1.42, worksheet.lever_graphs_k2025, 0.002); end
  def test_lever_graphs_l2025; assert_in_epsilon(1.42, worksheet.lever_graphs_l2025, 0.002); end
  def test_lever_graphs_m2025; assert_in_epsilon(1.4200000000000002, worksheet.lever_graphs_m2025, 0.002); end
  def test_lever_graphs_n2025; assert_in_epsilon(1.42, worksheet.lever_graphs_n2025, 0.002); end
  def test_lever_graphs_o2025; assert_in_epsilon(1.42, worksheet.lever_graphs_o2025, 0.002); end
  def test_lever_graphs_p2025; assert_in_epsilon(1.42, worksheet.lever_graphs_p2025, 0.002); end
  def test_lever_graphs_q2025; assert_in_epsilon(1.42, worksheet.lever_graphs_q2025, 0.002); end
  def test_lever_graphs_r2025; assert_in_epsilon(1.42, worksheet.lever_graphs_r2025, 0.002); end
  def test_lever_graphs_s2025; assert_in_epsilon(1.42, worksheet.lever_graphs_s2025, 0.002); end
  def test_lever_graphs_b2026; assert_in_epsilon(3.0, worksheet.lever_graphs_b2026, 0.002); end
  def test_lever_graphs_k2026; assert_in_epsilon(1.42, worksheet.lever_graphs_k2026, 0.002); end
  def test_lever_graphs_l2026; assert_in_epsilon(1.4046153846153846, worksheet.lever_graphs_l2026, 0.002); end
  def test_lever_graphs_m2026; assert_in_epsilon(1.3853846153846154, worksheet.lever_graphs_m2026, 0.002); end
  def test_lever_graphs_n2026; assert_in_epsilon(1.3661538461538463, worksheet.lever_graphs_n2026, 0.002); end
  def test_lever_graphs_o2026; assert_in_epsilon(1.3469230769230767, worksheet.lever_graphs_o2026, 0.002); end
  def test_lever_graphs_p2026; assert_in_epsilon(1.327692307692308, worksheet.lever_graphs_p2026, 0.002); end
  def test_lever_graphs_q2026; assert_in_epsilon(1.3084615384615383, worksheet.lever_graphs_q2026, 0.002); end
  def test_lever_graphs_r2026; assert_in_epsilon(1.2892307692307692, worksheet.lever_graphs_r2026, 0.002); end
  def test_lever_graphs_s2026; assert_in_epsilon(1.27, worksheet.lever_graphs_s2026, 0.002); end
  def test_lever_graphs_b2027; assert_in_epsilon(4.0, worksheet.lever_graphs_b2027, 0.002); end
  def test_lever_graphs_k2027; assert_in_epsilon(1.42, worksheet.lever_graphs_k2027, 0.002); end
  def test_lever_graphs_l2027; assert_in_epsilon(1.3915897435897435, worksheet.lever_graphs_l2027, 0.002); end
  def test_lever_graphs_m2027; assert_in_epsilon(1.3560769230769232, worksheet.lever_graphs_m2027, 0.002); end
  def test_lever_graphs_n2027; assert_in_epsilon(1.3205641025641026, worksheet.lever_graphs_n2027, 0.002); end
  def test_lever_graphs_o2027; assert_in_epsilon(1.285051282051282, worksheet.lever_graphs_o2027, 0.002); end
  def test_lever_graphs_p2027; assert_in_epsilon(1.2495384615384615, worksheet.lever_graphs_p2027, 0.002); end
  def test_lever_graphs_q2027; assert_in_epsilon(1.214025641025641, worksheet.lever_graphs_q2027, 0.002); end
  def test_lever_graphs_r2027; assert_in_epsilon(1.1785128205128206, worksheet.lever_graphs_r2027, 0.002); end
  def test_lever_graphs_s2027; assert_in_epsilon(1.143, worksheet.lever_graphs_s2027, 0.002); end
  def test_lever_graphs_b2028; assert_equal("Comparator A", worksheet.lever_graphs_b2028); end
  def test_lever_graphs_b2029; assert_equal("Comparator B", worksheet.lever_graphs_b2029); end
  def test_lever_graphs_b2030; assert_equal("Comparator C", worksheet.lever_graphs_b2030); end
  def test_lever_graphs_c2828; assert_equal("1975", worksheet.lever_graphs_c2828); end
  def test_lever_graphs_d2828; assert_equal("1980", worksheet.lever_graphs_d2828); end
  def test_lever_graphs_e2828; assert_equal("1985", worksheet.lever_graphs_e2828); end
  def test_lever_graphs_f2828; assert_equal("1990", worksheet.lever_graphs_f2828); end
  def test_lever_graphs_g2828; assert_equal("1995", worksheet.lever_graphs_g2828); end
  def test_lever_graphs_h2828; assert_equal("2000", worksheet.lever_graphs_h2828); end
  def test_lever_graphs_i2828; assert_equal("2005", worksheet.lever_graphs_i2828); end
  def test_lever_graphs_j2828; assert_in_epsilon(2010.0, worksheet.lever_graphs_j2828, 0.002); end
  def test_lever_graphs_k2828; assert_equal("2011", worksheet.lever_graphs_k2828); end
  def test_lever_graphs_l2828; assert_equal("2015", worksheet.lever_graphs_l2828); end
  def test_lever_graphs_m2828; assert_equal("2020", worksheet.lever_graphs_m2828); end
  def test_lever_graphs_n2828; assert_equal("2025", worksheet.lever_graphs_n2828); end
  def test_lever_graphs_o2828; assert_equal("2030", worksheet.lever_graphs_o2828); end
  def test_lever_graphs_p2828; assert_equal("2035", worksheet.lever_graphs_p2828); end
  def test_lever_graphs_q2828; assert_equal("2040", worksheet.lever_graphs_q2828); end
  def test_lever_graphs_r2828; assert_equal("2045", worksheet.lever_graphs_r2828); end
  def test_lever_graphs_s2828; assert_equal("2050", worksheet.lever_graphs_s2828); end
  def test_lever_graphs_b2829; assert_equal("Historic data", worksheet.lever_graphs_b2829); end
  def test_lever_graphs_b2830; assert_in_delta(1.0, worksheet.lever_graphs_b2830, 0.002); end
  def test_lever_graphs_k2830; assert_in_delta(0.0, (worksheet.lever_graphs_k2830||0), 0.002); end
  def test_lever_graphs_l2830; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2830, 0.002); end
  def test_lever_graphs_m2830; assert_in_delta(0.016990505052285432, worksheet.lever_graphs_m2830, 0.002); end
  def test_lever_graphs_n2830; assert_in_delta(-0.0025079124564288055, worksheet.lever_graphs_n2830, 0.002); end
  def test_lever_graphs_o2830; assert_in_delta(-0.022006329965143047, worksheet.lever_graphs_o2830, 0.002); end
  def test_lever_graphs_p2830; assert_in_delta(-0.04150474747385728, worksheet.lever_graphs_p2830, 0.002); end
  def test_lever_graphs_q2830; assert_in_delta(-0.06100316498257152, worksheet.lever_graphs_q2830, 0.002); end
  def test_lever_graphs_r2830; assert_in_delta(-0.08050158249128576, worksheet.lever_graphs_r2830, 0.002); end
  def test_lever_graphs_s2830; assert_in_delta(-0.1, worksheet.lever_graphs_s2830, 0.002); end
  def test_lever_graphs_b2831; assert_in_epsilon(2.0, worksheet.lever_graphs_b2831, 0.002); end
  def test_lever_graphs_k2831; assert_in_delta(0.0, (worksheet.lever_graphs_k2831||0), 0.002); end
  def test_lever_graphs_l2831; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2831, 0.002); end
  def test_lever_graphs_m2831; assert_in_delta(0.07413336219514258, worksheet.lever_graphs_m2831, 0.002); end
  def test_lever_graphs_n2831; assert_in_delta(0.11177780182928547, worksheet.lever_graphs_n2831, 0.002); end
  def test_lever_graphs_o2831; assert_in_delta(0.14942224146342836, worksheet.lever_graphs_o2831, 0.002); end
  def test_lever_graphs_p2831; assert_in_delta(0.18706668109757127, worksheet.lever_graphs_p2831, 0.002); end
  def test_lever_graphs_q2831; assert_in_delta(0.22471112073171418, worksheet.lever_graphs_q2831, 0.002); end
  def test_lever_graphs_r2831; assert_in_delta(0.26235556036585705, worksheet.lever_graphs_r2831, 0.002); end
  def test_lever_graphs_s2831; assert_in_delta(0.3, worksheet.lever_graphs_s2831, 0.002); end
  def test_lever_graphs_b2832; assert_in_epsilon(3.0, worksheet.lever_graphs_b2832, 0.002); end
  def test_lever_graphs_k2832; assert_in_delta(0.0, (worksheet.lever_graphs_k2832||0), 0.002); end
  def test_lever_graphs_l2832; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2832, 0.002); end
  def test_lever_graphs_m2832; assert_in_delta(0.11699050505228542, worksheet.lever_graphs_m2832, 0.002); end
  def test_lever_graphs_n2832; assert_in_delta(0.19749208754357117, worksheet.lever_graphs_n2832, 0.002); end
  def test_lever_graphs_o2832; assert_in_delta(0.2779936700348569, worksheet.lever_graphs_o2832, 0.002); end
  def test_lever_graphs_p2832; assert_in_delta(0.35849525252614267, worksheet.lever_graphs_p2832, 0.002); end
  def test_lever_graphs_q2832; assert_in_delta(0.4389968350174285, worksheet.lever_graphs_q2832, 0.002); end
  def test_lever_graphs_r2832; assert_in_delta(0.5194984175087142, worksheet.lever_graphs_r2832, 0.002); end
  def test_lever_graphs_s2832; assert_in_delta(0.6, worksheet.lever_graphs_s2832, 0.002); end
  def test_lever_graphs_b2833; assert_in_epsilon(4.0, worksheet.lever_graphs_b2833, 0.002); end
  def test_lever_graphs_k2833; assert_in_delta(0.0, (worksheet.lever_graphs_k2833||0), 0.002); end
  def test_lever_graphs_l2833; assert_in_delta(0.03648892256099967, worksheet.lever_graphs_l2833, 0.002); end
  def test_lever_graphs_m2833; assert_in_delta(0.17413336219514255, worksheet.lever_graphs_m2833, 0.002); end
  def test_lever_graphs_n2833; assert_in_delta(0.31177780182928544, worksheet.lever_graphs_n2833, 0.002); end
  def test_lever_graphs_o2833; assert_in_delta(0.44942224146342835, worksheet.lever_graphs_o2833, 0.002); end
  def test_lever_graphs_p2833; assert_in_delta(0.5870666810975712, worksheet.lever_graphs_p2833, 0.002); end
  def test_lever_graphs_q2833; assert_in_delta(0.7247111207317142, worksheet.lever_graphs_q2833, 0.002); end
  def test_lever_graphs_r2833; assert_in_delta(0.862355560365857, worksheet.lever_graphs_r2833, 0.002); end
  def test_lever_graphs_s2833; assert_in_delta(1.0, worksheet.lever_graphs_s2833, 0.002); end
  def test_lever_graphs_c3031; assert_equal("1975", worksheet.lever_graphs_c3031); end
  def test_lever_graphs_d3031; assert_equal("1980", worksheet.lever_graphs_d3031); end
  def test_lever_graphs_e3031; assert_equal("1985", worksheet.lever_graphs_e3031); end
  def test_lever_graphs_f3031; assert_equal("1990", worksheet.lever_graphs_f3031); end
  def test_lever_graphs_g3031; assert_equal("1995", worksheet.lever_graphs_g3031); end
  def test_lever_graphs_h3031; assert_equal("2000", worksheet.lever_graphs_h3031); end
  def test_lever_graphs_i3031; assert_equal("2005", worksheet.lever_graphs_i3031); end
  def test_lever_graphs_j3031; assert_in_epsilon(2010.0, worksheet.lever_graphs_j3031, 0.002); end
  def test_lever_graphs_k3031; assert_equal("2011", worksheet.lever_graphs_k3031); end
  def test_lever_graphs_l3031; assert_equal("2015", worksheet.lever_graphs_l3031); end
  def test_lever_graphs_m3031; assert_equal("2020", worksheet.lever_graphs_m3031); end
  def test_lever_graphs_n3031; assert_equal("2025", worksheet.lever_graphs_n3031); end
  def test_lever_graphs_o3031; assert_equal("2030", worksheet.lever_graphs_o3031); end
  def test_lever_graphs_p3031; assert_equal("2035", worksheet.lever_graphs_p3031); end
  def test_lever_graphs_q3031; assert_equal("2040", worksheet.lever_graphs_q3031); end
  def test_lever_graphs_r3031; assert_equal("2045", worksheet.lever_graphs_r3031); end
  def test_lever_graphs_s3031; assert_equal("2050", worksheet.lever_graphs_s3031); end
  def test_lever_graphs_b3032; assert_equal("Historic data", worksheet.lever_graphs_b3032); end
  def test_lever_graphs_b3033; assert_in_delta(1.0, worksheet.lever_graphs_b3033, 0.002); end
  def test_lever_graphs_k3033; assert_in_delta(0.1, worksheet.lever_graphs_k3033, 0.002); end
  def test_lever_graphs_l3033; assert_in_delta(0.1, worksheet.lever_graphs_l3033, 0.002); end
  def test_lever_graphs_m3033; assert_in_delta(0.1, worksheet.lever_graphs_m3033, 0.002); end
  def test_lever_graphs_n3033; assert_in_delta(0.1, worksheet.lever_graphs_n3033, 0.002); end
  def test_lever_graphs_o3033; assert_in_delta(0.1, worksheet.lever_graphs_o3033, 0.002); end
  def test_lever_graphs_p3033; assert_in_delta(0.1, worksheet.lever_graphs_p3033, 0.002); end
  def test_lever_graphs_q3033; assert_in_delta(0.1, worksheet.lever_graphs_q3033, 0.002); end
  def test_lever_graphs_r3033; assert_in_delta(0.1, worksheet.lever_graphs_r3033, 0.002); end
  def test_lever_graphs_s3033; assert_in_delta(0.1, worksheet.lever_graphs_s3033, 0.002); end
  def test_lever_graphs_b3034; assert_in_epsilon(2.0, worksheet.lever_graphs_b3034, 0.002); end
  def test_lever_graphs_k3034; assert_in_delta(0.1, worksheet.lever_graphs_k3034, 0.002); end
  def test_lever_graphs_l3034; assert_in_delta(0.1, worksheet.lever_graphs_l3034, 0.002); end
  def test_lever_graphs_m3034; assert_in_delta(0.1142857142857143, worksheet.lever_graphs_m3034, 0.002); end
  def test_lever_graphs_n3034; assert_in_delta(0.1285714285714286, worksheet.lever_graphs_n3034, 0.002); end
  def test_lever_graphs_o3034; assert_in_delta(0.14285714285714285, worksheet.lever_graphs_o3034, 0.002); end
  def test_lever_graphs_p3034; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_p3034, 0.002); end
  def test_lever_graphs_q3034; assert_in_delta(0.17142857142857143, worksheet.lever_graphs_q3034, 0.002); end
  def test_lever_graphs_r3034; assert_in_delta(0.18571428571428572, worksheet.lever_graphs_r3034, 0.002); end
  def test_lever_graphs_s3034; assert_in_delta(0.2, worksheet.lever_graphs_s3034, 0.002); end
  def test_lever_graphs_b3035; assert_in_epsilon(3.0, worksheet.lever_graphs_b3035, 0.002); end
  def test_lever_graphs_k3035; assert_in_delta(0.1, worksheet.lever_graphs_k3035, 0.002); end
  def test_lever_graphs_l3035; assert_in_delta(0.1, worksheet.lever_graphs_l3035, 0.002); end
  def test_lever_graphs_m3035; assert_in_delta(0.12857142857142856, worksheet.lever_graphs_m3035, 0.002); end
  def test_lever_graphs_n3035; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_n3035, 0.002); end
  def test_lever_graphs_o3035; assert_in_delta(0.18571428571428572, worksheet.lever_graphs_o3035, 0.002); end
  def test_lever_graphs_p3035; assert_in_delta(0.21428571428571427, worksheet.lever_graphs_p3035, 0.002); end
  def test_lever_graphs_q3035; assert_in_delta(0.24285714285714285, worksheet.lever_graphs_q3035, 0.002); end
  def test_lever_graphs_r3035; assert_in_delta(0.2714285714285714, worksheet.lever_graphs_r3035, 0.002); end
  def test_lever_graphs_s3035; assert_in_delta(0.3, worksheet.lever_graphs_s3035, 0.002); end
  def test_lever_graphs_b3036; assert_in_epsilon(4.0, worksheet.lever_graphs_b3036, 0.002); end
  def test_lever_graphs_k3036; assert_in_delta(0.1, worksheet.lever_graphs_k3036, 0.002); end
  def test_lever_graphs_l3036; assert_in_delta(0.1, worksheet.lever_graphs_l3036, 0.002); end
  def test_lever_graphs_m3036; assert_in_delta(0.15714285714285714, worksheet.lever_graphs_m3036, 0.002); end
  def test_lever_graphs_n3036; assert_in_delta(0.2142857142857143, worksheet.lever_graphs_n3036, 0.002); end
  def test_lever_graphs_o3036; assert_in_delta(0.27142857142857146, worksheet.lever_graphs_o3036, 0.002); end
  def test_lever_graphs_p3036; assert_in_delta(0.32857142857142857, worksheet.lever_graphs_p3036, 0.002); end
  def test_lever_graphs_q3036; assert_in_delta(0.3857142857142858, worksheet.lever_graphs_q3036, 0.002); end
  def test_lever_graphs_r3036; assert_in_delta(0.44285714285714284, worksheet.lever_graphs_r3036, 0.002); end
  def test_lever_graphs_s3036; assert_in_delta(0.5, worksheet.lever_graphs_s3036, 0.002); end
  def test_lever_graphs_d3042; assert_equal("Title", worksheet.lever_graphs_d3042); end
  def test_lever_graphs_e3042; assert_equal("Food crops", worksheet.lever_graphs_e3042); end
  def test_lever_graphs_f3042; assert_equal("Cows and other bovines ", worksheet.lever_graphs_f3042); end
  def test_lever_graphs_g3042; assert_equal("Chickens and other poultry", worksheet.lever_graphs_g3042); end
  def test_lever_graphs_h3042; assert_equal("Pigs", worksheet.lever_graphs_h3042); end
  def test_lever_graphs_i3042; assert_equal("Sheep and goats", worksheet.lever_graphs_i3042); end
  def test_lever_graphs_j3042; assert_equal("Other animals", worksheet.lever_graphs_j3042); end
  def test_lever_graphs_k3042; assert_equal("Eggs", worksheet.lever_graphs_k3042); end
  def test_lever_graphs_l3042; assert_equal("Milk products", worksheet.lever_graphs_l3042); end
  def test_lever_graphs_d3043; assert_in_epsilon(2011.0, worksheet.lever_graphs_d3043, 0.002); end
  def test_lever_graphs_e3043; assert_in_delta(0.01, worksheet.lever_graphs_e3043, 0.002); end
  def test_lever_graphs_f3043; assert_in_delta(0.01, worksheet.lever_graphs_f3043, 0.002); end
  def test_lever_graphs_g3043; assert_in_delta(0.01, worksheet.lever_graphs_g3043, 0.002); end
  def test_lever_graphs_h3043; assert_in_delta(0.01, worksheet.lever_graphs_h3043, 0.002); end
  def test_lever_graphs_i3043; assert_in_delta(0.01, worksheet.lever_graphs_i3043, 0.002); end
  def test_lever_graphs_j3043; assert_in_delta(0.01, worksheet.lever_graphs_j3043, 0.002); end
  def test_lever_graphs_k3043; assert_in_delta(0.002, worksheet.lever_graphs_k3043, 0.002); end
  def test_lever_graphs_l3043; assert_in_delta(0.001, worksheet.lever_graphs_l3043, 0.002); end
  def test_lever_graphs_d3044; assert_equal("2050: Level 1", worksheet.lever_graphs_d3044); end
  def test_lever_graphs_e3044; assert_in_delta(0.05, worksheet.lever_graphs_e3044, 0.002); end
  def test_lever_graphs_f3044; assert_in_delta(0.05, worksheet.lever_graphs_f3044, 0.002); end
  def test_lever_graphs_g3044; assert_in_delta(0.05, worksheet.lever_graphs_g3044, 0.002); end
  def test_lever_graphs_h3044; assert_in_delta(0.05, worksheet.lever_graphs_h3044, 0.002); end
  def test_lever_graphs_i3044; assert_in_delta(0.05, worksheet.lever_graphs_i3044, 0.002); end
  def test_lever_graphs_j3044; assert_in_delta(0.05, worksheet.lever_graphs_j3044, 0.002); end
  def test_lever_graphs_k3044; assert_in_delta(0.005, worksheet.lever_graphs_k3044, 0.002); end
  def test_lever_graphs_l3044; assert_in_delta(0.005, worksheet.lever_graphs_l3044, 0.002); end
  def test_lever_graphs_d3045; assert_equal("2050: Level 2", worksheet.lever_graphs_d3045); end
  def test_lever_graphs_e3045; assert_in_delta(0.15, worksheet.lever_graphs_e3045, 0.002); end
  def test_lever_graphs_f3045; assert_in_delta(0.15, worksheet.lever_graphs_f3045, 0.002); end
  def test_lever_graphs_g3045; assert_in_delta(0.15, worksheet.lever_graphs_g3045, 0.002); end
  def test_lever_graphs_h3045; assert_in_delta(0.15, worksheet.lever_graphs_h3045, 0.002); end
  def test_lever_graphs_i3045; assert_in_delta(0.15, worksheet.lever_graphs_i3045, 0.002); end
  def test_lever_graphs_j3045; assert_in_delta(0.15, worksheet.lever_graphs_j3045, 0.002); end
  def test_lever_graphs_k3045; assert_in_delta(0.02, worksheet.lever_graphs_k3045, 0.002); end
  def test_lever_graphs_l3045; assert_in_delta(0.02, worksheet.lever_graphs_l3045, 0.002); end
  def test_lever_graphs_d3046; assert_equal("2050: Level 3", worksheet.lever_graphs_d3046); end
  def test_lever_graphs_e3046; assert_in_delta(0.2, worksheet.lever_graphs_e3046, 0.002); end
  def test_lever_graphs_f3046; assert_in_delta(0.2, worksheet.lever_graphs_f3046, 0.002); end
  def test_lever_graphs_g3046; assert_in_delta(0.2, worksheet.lever_graphs_g3046, 0.002); end
  def test_lever_graphs_h3046; assert_in_delta(0.2, worksheet.lever_graphs_h3046, 0.002); end
  def test_lever_graphs_i3046; assert_in_delta(0.2, worksheet.lever_graphs_i3046, 0.002); end
  def test_lever_graphs_j3046; assert_in_delta(0.2, worksheet.lever_graphs_j3046, 0.002); end
  def test_lever_graphs_k3046; assert_in_delta(0.05, worksheet.lever_graphs_k3046, 0.002); end
  def test_lever_graphs_l3046; assert_in_delta(0.05, worksheet.lever_graphs_l3046, 0.002); end
  def test_lever_graphs_d3047; assert_equal("2050: Level 4", worksheet.lever_graphs_d3047); end
  def test_lever_graphs_e3047; assert_in_delta(0.3, worksheet.lever_graphs_e3047, 0.002); end
  def test_lever_graphs_f3047; assert_in_delta(0.3, worksheet.lever_graphs_f3047, 0.002); end
  def test_lever_graphs_g3047; assert_in_delta(0.3, worksheet.lever_graphs_g3047, 0.002); end
  def test_lever_graphs_h3047; assert_in_delta(0.3, worksheet.lever_graphs_h3047, 0.002); end
  def test_lever_graphs_i3047; assert_in_delta(0.3, worksheet.lever_graphs_i3047, 0.002); end
  def test_lever_graphs_j3047; assert_in_delta(0.3, worksheet.lever_graphs_j3047, 0.002); end
  def test_lever_graphs_k3047; assert_in_delta(0.1, worksheet.lever_graphs_k3047, 0.002); end
  def test_lever_graphs_l3047; assert_in_delta(0.1, worksheet.lever_graphs_l3047, 0.002); end
  def test_lever_graphs_c1594; assert_equal("1975", worksheet.lever_graphs_c1594); end
  def test_lever_graphs_d1594; assert_equal("1980", worksheet.lever_graphs_d1594); end
  def test_lever_graphs_e1594; assert_equal("1985", worksheet.lever_graphs_e1594); end
  def test_lever_graphs_f1594; assert_equal("1990", worksheet.lever_graphs_f1594); end
  def test_lever_graphs_g1594; assert_equal("1995", worksheet.lever_graphs_g1594); end
  def test_lever_graphs_h1594; assert_equal("2000", worksheet.lever_graphs_h1594); end
  def test_lever_graphs_i1594; assert_equal("2005", worksheet.lever_graphs_i1594); end
  def test_lever_graphs_j1594; assert_equal("2010", worksheet.lever_graphs_j1594); end
  def test_lever_graphs_k1594; assert_equal("2011", worksheet.lever_graphs_k1594); end
  def test_lever_graphs_l1594; assert_equal("2015", worksheet.lever_graphs_l1594); end
  def test_lever_graphs_m1594; assert_equal("2020", worksheet.lever_graphs_m1594); end
  def test_lever_graphs_n1594; assert_equal("2025", worksheet.lever_graphs_n1594); end
  def test_lever_graphs_o1594; assert_equal("2030", worksheet.lever_graphs_o1594); end
  def test_lever_graphs_p1594; assert_equal("2035", worksheet.lever_graphs_p1594); end
  def test_lever_graphs_q1594; assert_equal("2040", worksheet.lever_graphs_q1594); end
  def test_lever_graphs_r1594; assert_equal("2045", worksheet.lever_graphs_r1594); end
  def test_lever_graphs_s1594; assert_equal("2050", worksheet.lever_graphs_s1594); end
  def test_lever_graphs_b1595; assert_equal("Historic data", worksheet.lever_graphs_b1595); end
  def test_lever_graphs_c1595; assert_in_epsilon(4071020000.0, worksheet.lever_graphs_c1595, 0.002); end
  def test_lever_graphs_d1595; assert_in_epsilon(4449049000.0, worksheet.lever_graphs_d1595, 0.002); end
  def test_lever_graphs_e1595; assert_in_epsilon(4863602000.0, worksheet.lever_graphs_e1595, 0.002); end
  def test_lever_graphs_f1595; assert_in_epsilon(5320817000.0, worksheet.lever_graphs_f1595, 0.002); end
  def test_lever_graphs_g1595; assert_in_epsilon(5741822000.0, worksheet.lever_graphs_g1595, 0.002); end
  def test_lever_graphs_h1595; assert_in_epsilon(6127700000.0, worksheet.lever_graphs_h1595, 0.002); end
  def test_lever_graphs_i1595; assert_in_epsilon(6514095000.0, worksheet.lever_graphs_i1595, 0.002); end
  def test_lever_graphs_j1595; assert_in_epsilon(6916183000.0, worksheet.lever_graphs_j1595, 0.002); end
  def test_lever_graphs_k1595; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1595, 0.002); end
  def test_lever_graphs_b1596; assert_in_delta(1.0, worksheet.lever_graphs_b1596, 0.002); end
  def test_lever_graphs_k1596; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1596, 0.002); end
  def test_lever_graphs_l1596; assert_in_epsilon(7392233000.0, worksheet.lever_graphs_l1596, 0.002); end
  def test_lever_graphs_m1596; assert_in_epsilon(7893904000.0, worksheet.lever_graphs_m1596, 0.002); end
  def test_lever_graphs_n1596; assert_in_epsilon(8398226000.0, worksheet.lever_graphs_n1596, 0.002); end
  def test_lever_graphs_o1596; assert_in_epsilon(8881519000.0, worksheet.lever_graphs_o1596, 0.002); end
  def test_lever_graphs_p1596; assert_in_epsilon(9359400000.0, worksheet.lever_graphs_p1596, 0.002); end
  def test_lever_graphs_q1596; assert_in_epsilon(9847909000.0, worksheet.lever_graphs_q1596, 0.002); end
  def test_lever_graphs_r1596; assert_in_epsilon(10352435000.0, worksheet.lever_graphs_r1596, 0.002); end
  def test_lever_graphs_s1596; assert_in_epsilon(10868444000.0, worksheet.lever_graphs_s1596, 0.002); end
  def test_lever_graphs_b1597; assert_in_epsilon(2.0, worksheet.lever_graphs_b1597, 0.002); end
  def test_lever_graphs_k1597; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1597, 0.002); end
  def test_lever_graphs_l1597; assert_in_epsilon(7324782000.0, worksheet.lever_graphs_l1597, 0.002); end
  def test_lever_graphs_m1597; assert_in_epsilon(7716749000.0, worksheet.lever_graphs_m1597, 0.002); end
  def test_lever_graphs_n1597; assert_in_epsilon(8083413000.0, worksheet.lever_graphs_n1597, 0.002); end
  def test_lever_graphs_o1597; assert_in_epsilon(8424937000.0, worksheet.lever_graphs_o1597, 0.002); end
  def test_lever_graphs_p1597; assert_in_epsilon(8743447000.0, worksheet.lever_graphs_p1597, 0.002); end
  def test_lever_graphs_q1597; assert_in_epsilon(9038687000.0, worksheet.lever_graphs_q1597, 0.002); end
  def test_lever_graphs_r1597; assert_in_epsilon(9308438000.0, worksheet.lever_graphs_r1597, 0.002); end
  def test_lever_graphs_s1597; assert_in_epsilon(9550945000.0, worksheet.lever_graphs_s1597, 0.002); end
  def test_lever_graphs_b1598; assert_in_epsilon(3.0, worksheet.lever_graphs_b1598, 0.002); end
  def test_lever_graphs_k1598; assert_in_epsilon(6966439712.0, worksheet.lever_graphs_k1598, 0.002); end
  def test_lever_graphs_l1598; assert_in_epsilon(7256925000.0, worksheet.lever_graphs_l1598, 0.002); end
  def test_lever_graphs_m1598; assert_in_epsilon(7539163000.0, worksheet.lever_graphs_m1598, 0.002); end
  def test_lever_graphs_n1598; assert_in_epsilon(7768450000.0, worksheet.lever_graphs_n1598, 0.002); end
  def test_lever_graphs_o1598; assert_in_epsilon(7969407000.0, worksheet.lever_graphs_o1598, 0.002); end
  def test_lever_graphs_p1598; assert_in_epsilon(8135087000.0, worksheet.lever_graphs_p1598, 0.002); end
  def test_lever_graphs_q1598; assert_in_epsilon(8255351000.0, worksheet.lever_graphs_q1598, 0.002); end
  def test_lever_graphs_r1598; assert_in_epsilon(8323978000.0, worksheet.lever_graphs_r1598, 0.002); end
  def test_lever_graphs_s1598; assert_in_epsilon(8341706000.0, worksheet.lever_graphs_s1598, 0.002); end
  def test_lever_graphs_d1579; assert_equal("Title", worksheet.lever_graphs_d1579); end
  def test_lever_graphs_e1579; assert_equal("Proportion of 15 year trend", worksheet.lever_graphs_e1579); end
  def test_lever_graphs_d1580; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1580, 0.002); end
  def test_lever_graphs_e1580; assert_in_delta(0.0, (worksheet.lever_graphs_e1580||0), 0.002); end
  def test_lever_graphs_d1581; assert_equal("2050: Level 1", worksheet.lever_graphs_d1581); end
  def test_lever_graphs_e1581; assert_in_delta(0.0, (worksheet.lever_graphs_e1581||0), 0.002); end
  def test_lever_graphs_d1582; assert_equal("2050: Level 2", worksheet.lever_graphs_d1582); end
  def test_lever_graphs_e1582; assert_in_delta(0.33, worksheet.lever_graphs_e1582, 0.002); end
  def test_lever_graphs_d1583; assert_equal("2050: Level 3", worksheet.lever_graphs_d1583); end
  def test_lever_graphs_e1583; assert_in_delta(0.66, worksheet.lever_graphs_e1583, 0.002); end
  def test_lever_graphs_d1584; assert_equal("2050: Level 4", worksheet.lever_graphs_d1584); end
  def test_lever_graphs_e1584; assert_in_epsilon(1.1592740742999998, worksheet.lever_graphs_e1584, 0.002); end
  def test_lever_graphs_d1685; assert_equal("Title", worksheet.lever_graphs_d1685); end
  def test_lever_graphs_e1685; assert_equal("Solid-fuel ultrasupercritical power plant", worksheet.lever_graphs_e1685); end
  def test_lever_graphs_f1685; assert_equal("Solid-fuel supercritical power plant", worksheet.lever_graphs_f1685); end
  def test_lever_graphs_g1685; assert_equal("Solid-fuel subcritical power plant", worksheet.lever_graphs_g1685); end
  def test_lever_graphs_d1686; assert_in_epsilon(2011.0, worksheet.lever_graphs_d1686, 0.002); end
  def test_lever_graphs_e1686; assert_in_delta(0.08, worksheet.lever_graphs_e1686, 0.002); end
  def test_lever_graphs_f1686; assert_in_delta(0.17, worksheet.lever_graphs_f1686, 0.002); end
  def test_lever_graphs_g1686; assert_in_delta(0.75, worksheet.lever_graphs_g1686, 0.002); end
  def test_lever_graphs_d1687; assert_equal("2050: Level 1", worksheet.lever_graphs_d1687); end
  def test_lever_graphs_e1687; assert_in_delta(0.1435, worksheet.lever_graphs_e1687, 0.002); end
  def test_lever_graphs_f1687; assert_in_delta(0.2315, worksheet.lever_graphs_f1687, 0.002); end
  def test_lever_graphs_g1687; assert_in_delta(0.625, worksheet.lever_graphs_g1687, 0.002); end
  def test_lever_graphs_d1688; assert_equal("2050: Level 2", worksheet.lever_graphs_d1688); end
  def test_lever_graphs_e1688; assert_in_delta(0.18, worksheet.lever_graphs_e1688, 0.002); end
  def test_lever_graphs_f1688; assert_in_delta(0.27, worksheet.lever_graphs_f1688, 0.002); end
  def test_lever_graphs_g1688; assert_in_delta(0.55, worksheet.lever_graphs_g1688, 0.002); end
  def test_lever_graphs_d1689; assert_equal("2050: Level 3", worksheet.lever_graphs_d1689); end
  def test_lever_graphs_e1689; assert_in_delta(0.204, worksheet.lever_graphs_e1689, 0.002); end
  def test_lever_graphs_f1689; assert_in_delta(0.293, worksheet.lever_graphs_f1689, 0.002); end
  def test_lever_graphs_g1689; assert_in_delta(0.5030000000000001, worksheet.lever_graphs_g1689, 0.002); end
  def test_lever_graphs_d1690; assert_equal("2050: Level 4", worksheet.lever_graphs_d1690); end
  def test_lever_graphs_e1690; assert_in_delta(0.2324, worksheet.lever_graphs_e1690, 0.002); end
  def test_lever_graphs_f1690; assert_in_delta(0.3223, worksheet.lever_graphs_f1690, 0.002); end
  def test_lever_graphs_g1690; assert_in_delta(0.4453000000000001, worksheet.lever_graphs_g1690, 0.002); end
  def test_lever_graphs_c1730; assert_equal("1975", worksheet.lever_graphs_c1730); end
  def test_lever_graphs_d1730; assert_equal("1980", worksheet.lever_graphs_d1730); end
  def test_lever_graphs_e1730; assert_equal("1985", worksheet.lever_graphs_e1730); end
  def test_lever_graphs_f1730; assert_equal("1990", worksheet.lever_graphs_f1730); end
  def test_lever_graphs_g1730; assert_equal("1995", worksheet.lever_graphs_g1730); end
  def test_lever_graphs_h1730; assert_equal("2000", worksheet.lever_graphs_h1730); end
  def test_lever_graphs_i1730; assert_equal("2005", worksheet.lever_graphs_i1730); end
  def test_lever_graphs_j1730; assert_in_epsilon(2010.0, worksheet.lever_graphs_j1730, 0.002); end
  def test_lever_graphs_k1730; assert_in_epsilon(2011.0, worksheet.lever_graphs_k1730, 0.002); end
  def test_lever_graphs_l1730; assert_equal("2015", worksheet.lever_graphs_l1730); end
  def test_lever_graphs_m1730; assert_equal("2020", worksheet.lever_graphs_m1730); end
  def test_lever_graphs_n1730; assert_equal("2025", worksheet.lever_graphs_n1730); end
  def test_lever_graphs_o1730; assert_equal("2030", worksheet.lever_graphs_o1730); end
  def test_lever_graphs_p1730; assert_equal("2035", worksheet.lever_graphs_p1730); end
  def test_lever_graphs_q1730; assert_equal("2040", worksheet.lever_graphs_q1730); end
  def test_lever_graphs_r1730; assert_equal("2045", worksheet.lever_graphs_r1730); end
  def test_lever_graphs_s1730; assert_equal("2050", worksheet.lever_graphs_s1730); end
  def test_lever_graphs_b1731; assert_equal("Historic data", worksheet.lever_graphs_b1731); end
  def test_lever_graphs_b1732; assert_in_delta(1.0, worksheet.lever_graphs_b1732, 0.002); end
  def test_lever_graphs_k1732; assert_in_delta(0.25, worksheet.lever_graphs_k1732, 0.002); end
  def test_lever_graphs_l1732; assert_in_delta(0.316, worksheet.lever_graphs_l1732, 0.002); end
  def test_lever_graphs_m1732; assert_in_delta(0.35, worksheet.lever_graphs_m1732, 0.002); end
  def test_lever_graphs_n1732; assert_in_delta(0.364, worksheet.lever_graphs_n1732, 0.002); end
  def test_lever_graphs_o1732; assert_in_delta(0.381, worksheet.lever_graphs_o1732, 0.002); end
  def test_lever_graphs_p1732; assert_in_delta(0.382, worksheet.lever_graphs_p1732, 0.002); end
  def test_lever_graphs_q1732; assert_in_delta(0.43000000000000005, worksheet.lever_graphs_q1732, 0.002); end
  def test_lever_graphs_r1732; assert_in_delta(0.4129, worksheet.lever_graphs_r1732, 0.002); end
  def test_lever_graphs_s1732; assert_in_delta(0.375, worksheet.lever_graphs_s1732, 0.002); end
  def test_lever_graphs_b1733; assert_in_epsilon(2.0, worksheet.lever_graphs_b1733, 0.002); end
  def test_lever_graphs_k1733; assert_in_delta(0.25, worksheet.lever_graphs_k1733, 0.002); end
  def test_lever_graphs_l1733; assert_in_delta(0.316, worksheet.lever_graphs_l1733, 0.002); end
  def test_lever_graphs_m1733; assert_in_delta(0.361, worksheet.lever_graphs_m1733, 0.002); end
  def test_lever_graphs_n1733; assert_in_delta(0.377, worksheet.lever_graphs_n1733, 0.002); end
  def test_lever_graphs_o1733; assert_in_delta(0.389, worksheet.lever_graphs_o1733, 0.002); end
  def test_lever_graphs_p1733; assert_in_delta(0.41200000000000003, worksheet.lever_graphs_p1733, 0.002); end
  def test_lever_graphs_q1733; assert_in_delta(0.45, worksheet.lever_graphs_q1733, 0.002); end
  def test_lever_graphs_r1733; assert_in_delta(0.45, worksheet.lever_graphs_r1733, 0.002); end
  def test_lever_graphs_s1733; assert_in_delta(0.45, worksheet.lever_graphs_s1733, 0.002); end
  def test_lever_graphs_b1734; assert_in_epsilon(3.0, worksheet.lever_graphs_b1734, 0.002); end
  def test_lever_graphs_k1734; assert_in_delta(0.25, worksheet.lever_graphs_k1734, 0.002); end
  def test_lever_graphs_l1734; assert_in_delta(0.316, worksheet.lever_graphs_l1734, 0.002); end
  def test_lever_graphs_m1734; assert_in_delta(0.37, worksheet.lever_graphs_m1734, 0.002); end
  def test_lever_graphs_n1734; assert_in_delta(0.394, worksheet.lever_graphs_n1734, 0.002); end
  def test_lever_graphs_o1734; assert_in_delta(0.41800000000000004, worksheet.lever_graphs_o1734, 0.002); end
  def test_lever_graphs_p1734; assert_in_delta(0.445, worksheet.lever_graphs_p1734, 0.002); end
  def test_lever_graphs_q1734; assert_in_delta(0.47000000000000003, worksheet.lever_graphs_q1734, 0.002); end
  def test_lever_graphs_r1734; assert_in_delta(0.484, worksheet.lever_graphs_r1734, 0.002); end
  def test_lever_graphs_s1734; assert_in_delta(0.497, worksheet.lever_graphs_s1734, 0.002); end
  def test_lever_graphs_b1735; assert_in_epsilon(4.0, worksheet.lever_graphs_b1735, 0.002); end
  def test_lever_graphs_k1735; assert_in_delta(0.25, worksheet.lever_graphs_k1735, 0.002); end
  def test_lever_graphs_l1735; assert_in_delta(0.316, worksheet.lever_graphs_l1735, 0.002); end
  def test_lever_graphs_m1735; assert_in_delta(0.3909, worksheet.lever_graphs_m1735, 0.002); end
  def test_lever_graphs_n1735; assert_in_delta(0.42300000000000004, worksheet.lever_graphs_n1735, 0.002); end
  def test_lever_graphs_o1735; assert_in_delta(0.465, worksheet.lever_graphs_o1735, 0.002); end
  def test_lever_graphs_p1735; assert_in_delta(0.5, worksheet.lever_graphs_p1735, 0.002); end
  def test_lever_graphs_q1735; assert_in_delta(0.5185, worksheet.lever_graphs_q1735, 0.002); end
  def test_lever_graphs_r1735; assert_in_delta(0.535, worksheet.lever_graphs_r1735, 0.002); end
  def test_lever_graphs_s1735; assert_in_delta(0.5547, worksheet.lever_graphs_s1735, 0.002); end
  def test_lever_graphs_b1736; assert_equal("Comparator A", worksheet.lever_graphs_b1736); end
  def test_lever_graphs_b1737; assert_equal("Comparator B", worksheet.lever_graphs_b1737); end
  def test_lever_graphs_b1738; assert_equal("Comparator C", worksheet.lever_graphs_b1738); end
  def test_lever_graphs_d2060; assert_equal("Title", worksheet.lever_graphs_d2060); end
  def test_lever_graphs_e2060; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2060); end
  def test_lever_graphs_f2060; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2060); end
  def test_lever_graphs_g2060; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2060); end
  def test_lever_graphs_h2060; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2060); end
  def test_lever_graphs_i2060; assert_equal("Hydrogen", worksheet.lever_graphs_i2060); end
  def test_lever_graphs_d2061; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2061, 0.002); end
  def test_lever_graphs_e2061; assert_in_delta(0.9995553411198423, worksheet.lever_graphs_e2061, 0.002); end
  def test_lever_graphs_f2061; assert_in_delta(8.937397766306532e-08, worksheet.lever_graphs_f2061, 0.002); end
  def test_lever_graphs_g2061; assert_in_delta(0.0, (worksheet.lever_graphs_g2061||0), 0.002); end
  def test_lever_graphs_h2061; assert_in_delta(0.0004445695061800071, worksheet.lever_graphs_h2061, 0.002); end
  def test_lever_graphs_i2061; assert_in_delta(0.0, (worksheet.lever_graphs_i2061||0), 0.002); end
  def test_lever_graphs_d2062; assert_equal("2050: Level 1", worksheet.lever_graphs_d2062); end
  def test_lever_graphs_e2062; assert_in_delta(0.9299999999999999, worksheet.lever_graphs_e2062, 0.002); end
  def test_lever_graphs_f2062; assert_in_delta(0.03, worksheet.lever_graphs_f2062, 0.002); end
  def test_lever_graphs_g2062; assert_in_delta(0.03, worksheet.lever_graphs_g2062, 0.002); end
  def test_lever_graphs_h2062; assert_in_delta(0.01, worksheet.lever_graphs_h2062, 0.002); end
  def test_lever_graphs_i2062; assert_in_delta(0.0, (worksheet.lever_graphs_i2062||0), 0.002); end
  def test_lever_graphs_d2063; assert_equal("2050: Level 2", worksheet.lever_graphs_d2063); end
  def test_lever_graphs_e2063; assert_in_delta(0.7499999999999999, worksheet.lever_graphs_e2063, 0.002); end
  def test_lever_graphs_f2063; assert_in_delta(0.05, worksheet.lever_graphs_f2063, 0.002); end
  def test_lever_graphs_g2063; assert_in_delta(0.05, worksheet.lever_graphs_g2063, 0.002); end
  def test_lever_graphs_h2063; assert_in_delta(0.15, worksheet.lever_graphs_h2063, 0.002); end
  def test_lever_graphs_i2063; assert_in_delta(0.0, (worksheet.lever_graphs_i2063||0), 0.002); end
  def test_lever_graphs_d2064; assert_equal("2050: Level 3", worksheet.lever_graphs_d2064); end
  def test_lever_graphs_e2064; assert_in_delta(0.4, worksheet.lever_graphs_e2064, 0.002); end
  def test_lever_graphs_f2064; assert_in_delta(0.1, worksheet.lever_graphs_f2064, 0.002); end
  def test_lever_graphs_g2064; assert_in_delta(0.1, worksheet.lever_graphs_g2064, 0.002); end
  def test_lever_graphs_h2064; assert_in_delta(0.3, worksheet.lever_graphs_h2064, 0.002); end
  def test_lever_graphs_i2064; assert_in_delta(0.1, worksheet.lever_graphs_i2064, 0.002); end
  def test_lever_graphs_d2065; assert_equal("2050: Level 4", worksheet.lever_graphs_d2065); end
  def test_lever_graphs_e2065; assert_in_delta(0.04999999999999999, worksheet.lever_graphs_e2065, 0.002); end
  def test_lever_graphs_f2065; assert_in_delta(0.2, worksheet.lever_graphs_f2065, 0.002); end
  def test_lever_graphs_g2065; assert_in_delta(0.15, worksheet.lever_graphs_g2065, 0.002); end
  def test_lever_graphs_h2065; assert_in_delta(0.4, worksheet.lever_graphs_h2065, 0.002); end
  def test_lever_graphs_i2065; assert_in_delta(0.2, worksheet.lever_graphs_i2065, 0.002); end
  def test_lever_graphs_d2047; assert_equal("Title", worksheet.lever_graphs_d2047); end
  def test_lever_graphs_e2047; assert_equal("Internal Combustion Engine (liquid)", worksheet.lever_graphs_e2047); end
  def test_lever_graphs_f2047; assert_equal("Internal Combustion Engine (gas)", worksheet.lever_graphs_f2047); end
  def test_lever_graphs_g2047; assert_equal("Plug-in hybrid technology (electric and internal combustion)", worksheet.lever_graphs_g2047); end
  def test_lever_graphs_h2047; assert_equal("Electric Vehicle", worksheet.lever_graphs_h2047); end
  def test_lever_graphs_i2047; assert_equal("Hydrogen", worksheet.lever_graphs_i2047); end
  def test_lever_graphs_d2048; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2048, 0.002); end
  def test_lever_graphs_e2048; assert_in_delta(0.988235872414889, worksheet.lever_graphs_e2048, 0.002); end
  def test_lever_graphs_f2048; assert_in_delta(0.00959176661788106, worksheet.lever_graphs_f2048, 0.002); end
  def test_lever_graphs_g2048; assert_in_delta(2.834105983229307e-08, worksheet.lever_graphs_g2048, 0.002); end
  def test_lever_graphs_h2048; assert_in_delta(0.00217233262617009, worksheet.lever_graphs_h2048, 0.002); end
  def test_lever_graphs_i2048; assert_in_delta(0.0, (worksheet.lever_graphs_i2048||0), 0.002); end
  def test_lever_graphs_d2049; assert_equal("2050: Level 1", worksheet.lever_graphs_d2049); end
  def test_lever_graphs_e2049; assert_in_delta(0.9099999999999999, worksheet.lever_graphs_e2049, 0.002); end
  def test_lever_graphs_f2049; assert_in_delta(0.02, worksheet.lever_graphs_f2049, 0.002); end
  def test_lever_graphs_g2049; assert_in_delta(0.05, worksheet.lever_graphs_g2049, 0.002); end
  def test_lever_graphs_h2049; assert_in_delta(0.02, worksheet.lever_graphs_h2049, 0.002); end
  def test_lever_graphs_i2049; assert_in_delta(0.0, (worksheet.lever_graphs_i2049||0), 0.002); end
  def test_lever_graphs_d2050; assert_equal("2050: Level 2", worksheet.lever_graphs_d2050); end
  def test_lever_graphs_e2050; assert_in_delta(0.77, worksheet.lever_graphs_e2050, 0.002); end
  def test_lever_graphs_f2050; assert_in_delta(0.03, worksheet.lever_graphs_f2050, 0.002); end
  def test_lever_graphs_g2050; assert_in_delta(0.1, worksheet.lever_graphs_g2050, 0.002); end
  def test_lever_graphs_h2050; assert_in_delta(0.1, worksheet.lever_graphs_h2050, 0.002); end
  def test_lever_graphs_i2050; assert_in_delta(0.0, (worksheet.lever_graphs_i2050||0), 0.002); end
  def test_lever_graphs_d2051; assert_equal("2050: Level 3", worksheet.lever_graphs_d2051); end
  def test_lever_graphs_e2051; assert_in_delta(0.32999999999999996, worksheet.lever_graphs_e2051, 0.002); end
  def test_lever_graphs_f2051; assert_in_delta(0.07, worksheet.lever_graphs_f2051, 0.002); end
  def test_lever_graphs_g2051; assert_in_delta(0.25, worksheet.lever_graphs_g2051, 0.002); end
  def test_lever_graphs_h2051; assert_in_delta(0.2, worksheet.lever_graphs_h2051, 0.002); end
  def test_lever_graphs_i2051; assert_in_delta(0.15, worksheet.lever_graphs_i2051, 0.002); end
  def test_lever_graphs_d2052; assert_equal("2050: Level 4", worksheet.lever_graphs_d2052); end
  def test_lever_graphs_e2052; assert_in_delta(0.020000000000000073, worksheet.lever_graphs_e2052, 0.002); end
  def test_lever_graphs_f2052; assert_in_delta(0.1, worksheet.lever_graphs_f2052, 0.002); end
  def test_lever_graphs_g2052; assert_in_delta(0.33, worksheet.lever_graphs_g2052, 0.002); end
  def test_lever_graphs_h2052; assert_in_delta(0.35, worksheet.lever_graphs_h2052, 0.002); end
  def test_lever_graphs_i2052; assert_in_delta(0.2, worksheet.lever_graphs_i2052, 0.002); end
  def test_lever_graphs_d2086; assert_equal("Title", worksheet.lever_graphs_d2086); end
  def test_lever_graphs_e2086; assert_equal("Fuel-powered plane", worksheet.lever_graphs_e2086); end
  def test_lever_graphs_f2086; assert_equal("Hydrogen-powered plane", worksheet.lever_graphs_f2086); end
  def test_lever_graphs_d2087; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2087, 0.002); end
  def test_lever_graphs_e2087; assert_in_delta(1.0, worksheet.lever_graphs_e2087, 0.002); end
  def test_lever_graphs_f2087; assert_in_delta(0.0, (worksheet.lever_graphs_f2087||0), 0.002); end
  def test_lever_graphs_d2088; assert_equal("2050: Level 1", worksheet.lever_graphs_d2088); end
  def test_lever_graphs_e2088; assert_in_delta(1.0, worksheet.lever_graphs_e2088, 0.002); end
  def test_lever_graphs_f2088; assert_in_delta(0.0, (worksheet.lever_graphs_f2088||0), 0.002); end
  def test_lever_graphs_d2089; assert_equal("2050: Level 2", worksheet.lever_graphs_d2089); end
  def test_lever_graphs_e2089; assert_in_delta(1.0, worksheet.lever_graphs_e2089, 0.002); end
  def test_lever_graphs_f2089; assert_in_delta(0.0, (worksheet.lever_graphs_f2089||0), 0.002); end
  def test_lever_graphs_d2090; assert_equal("2050: Level 3", worksheet.lever_graphs_d2090); end
  def test_lever_graphs_e2090; assert_in_delta(0.95, worksheet.lever_graphs_e2090, 0.002); end
  def test_lever_graphs_f2090; assert_in_delta(0.05, worksheet.lever_graphs_f2090, 0.002); end
  def test_lever_graphs_d2091; assert_equal("2050: Level 4", worksheet.lever_graphs_d2091); end
  def test_lever_graphs_e2091; assert_in_delta(0.9, worksheet.lever_graphs_e2091, 0.002); end
  def test_lever_graphs_f2091; assert_in_delta(0.1, worksheet.lever_graphs_f2091, 0.002); end
  def test_lever_graphs_d2073; assert_equal("Title", worksheet.lever_graphs_d2073); end
  def test_lever_graphs_e2073; assert_equal("Fuel-powered train", worksheet.lever_graphs_e2073); end
  def test_lever_graphs_f2073; assert_equal("Electric-powered train", worksheet.lever_graphs_f2073); end
  def test_lever_graphs_d2074; assert_in_epsilon(2011.0, worksheet.lever_graphs_d2074, 0.002); end
  def test_lever_graphs_e2074; assert_in_delta(0.33, worksheet.lever_graphs_e2074, 0.002); end
  def test_lever_graphs_f2074; assert_in_delta(0.6699999999999999, worksheet.lever_graphs_f2074, 0.002); end
  def test_lever_graphs_d2075; assert_equal("2050: Level 1", worksheet.lever_graphs_d2075); end
  def test_lever_graphs_e2075; assert_in_delta(0.6, worksheet.lever_graphs_e2075, 0.002); end
  def test_lever_graphs_f2075; assert_in_delta(0.4, worksheet.lever_graphs_f2075, 0.002); end
  def test_lever_graphs_d2076; assert_equal("2050: Level 2", worksheet.lever_graphs_d2076); end
  def test_lever_graphs_e2076; assert_in_delta(0.4, worksheet.lever_graphs_e2076, 0.002); end
  def test_lever_graphs_f2076; assert_in_delta(0.6, worksheet.lever_graphs_f2076, 0.002); end
  def test_lever_graphs_d2077; assert_equal("2050: Level 3", worksheet.lever_graphs_d2077); end
  def test_lever_graphs_e2077; assert_in_delta(0.29000000000000004, worksheet.lever_graphs_e2077, 0.002); end
  def test_lever_graphs_f2077; assert_in_delta(0.71, worksheet.lever_graphs_f2077, 0.002); end
  def test_lever_graphs_d2078; assert_equal("2050: Level 4", worksheet.lever_graphs_d2078); end
  def test_lever_graphs_e2078; assert_in_delta(0.19999999999999996, worksheet.lever_graphs_e2078, 0.002); end
  def test_lever_graphs_f2078; assert_in_delta(0.8, worksheet.lever_graphs_f2078, 0.002); end
  def test_lever_graphs_c1610; assert_equal("1975", worksheet.lever_graphs_c1610); end
  def test_lever_graphs_d1610; assert_equal("1980", worksheet.lever_graphs_d1610); end
  def test_lever_graphs_e1610; assert_equal("1985", worksheet.lever_graphs_e1610); end
  def test_lever_graphs_f1610; assert_equal("1990", worksheet.lever_graphs_f1610); end
  def test_lever_graphs_g1610; assert_equal("1995", worksheet.lever_graphs_g1610); end
  def test_lever_graphs_h1610; assert_equal("2000", worksheet.lever_graphs_h1610); end
  def test_lever_graphs_i1610; assert_equal("2005", worksheet.lever_graphs_i1610); end
  def test_lever_graphs_j1610; assert_equal("2010", worksheet.lever_graphs_j1610); end
  def test_lever_graphs_k1610; assert_equal("2011", worksheet.lever_graphs_k1610); end
  def test_lever_graphs_l1610; assert_equal("2015", worksheet.lever_graphs_l1610); end
  def test_lever_graphs_m1610; assert_equal("2020", worksheet.lever_graphs_m1610); end
  def test_lever_graphs_n1610; assert_equal("2025", worksheet.lever_graphs_n1610); end
  def test_lever_graphs_o1610; assert_equal("2030", worksheet.lever_graphs_o1610); end
  def test_lever_graphs_p1610; assert_equal("2035", worksheet.lever_graphs_p1610); end
  def test_lever_graphs_q1610; assert_equal("2040", worksheet.lever_graphs_q1610); end
  def test_lever_graphs_r1610; assert_equal("2045", worksheet.lever_graphs_r1610); end
  def test_lever_graphs_s1610; assert_equal("2050", worksheet.lever_graphs_s1610); end
  def test_lever_graphs_b1611; assert_equal("Historic data", worksheet.lever_graphs_b1611); end
  def test_lever_graphs_c1611; assert_in_delta(0.377, worksheet.lever_graphs_c1611, 0.002); end
  def test_lever_graphs_d1611; assert_in_delta(0.39399999999999996, worksheet.lever_graphs_d1611, 0.002); end
  def test_lever_graphs_e1611; assert_in_delta(0.41200000000000003, worksheet.lever_graphs_e1611, 0.002); end
  def test_lever_graphs_f1611; assert_in_delta(0.43, worksheet.lever_graphs_f1611, 0.002); end
  def test_lever_graphs_g1611; assert_in_delta(0.44799999999999995, worksheet.lever_graphs_g1611, 0.002); end
  def test_lever_graphs_h1611; assert_in_delta(0.467, worksheet.lever_graphs_h1611, 0.002); end
  def test_lever_graphs_i1611; assert_in_delta(0.491, worksheet.lever_graphs_i1611, 0.002); end
  def test_lever_graphs_j1611; assert_in_delta(0.516, worksheet.lever_graphs_j1611, 0.002); end
  def test_lever_graphs_k1611; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1611, 0.002); end
  def test_lever_graphs_b1612; assert_in_delta(1.0, worksheet.lever_graphs_b1612, 0.002); end
  def test_lever_graphs_k1612; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1612, 0.002); end
  def test_lever_graphs_l1612; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1612, 0.002); end
  def test_lever_graphs_m1612; assert_in_delta(0.57, worksheet.lever_graphs_m1612, 0.002); end
  def test_lever_graphs_n1612; assert_in_delta(0.6, worksheet.lever_graphs_n1612, 0.002); end
  def test_lever_graphs_o1612; assert_in_delta(0.63, worksheet.lever_graphs_o1612, 0.002); end
  def test_lever_graphs_p1612; assert_in_delta(0.65, worksheet.lever_graphs_p1612, 0.002); end
  def test_lever_graphs_q1612; assert_in_delta(0.68, worksheet.lever_graphs_q1612, 0.002); end
  def test_lever_graphs_r1612; assert_in_delta(0.71, worksheet.lever_graphs_r1612, 0.002); end
  def test_lever_graphs_s1612; assert_in_delta(0.75, worksheet.lever_graphs_s1612, 0.002); end
  def test_lever_graphs_b1613; assert_in_epsilon(2.0, worksheet.lever_graphs_b1613, 0.002); end
  def test_lever_graphs_k1613; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1613, 0.002); end
  def test_lever_graphs_l1613; assert_in_delta(0.540259749906762, worksheet.lever_graphs_l1613, 0.002); end
  def test_lever_graphs_m1613; assert_in_delta(0.562155760202834, worksheet.lever_graphs_m1613, 0.002); end
  def test_lever_graphs_n1613; assert_in_delta(0.582151835653899, worksheet.lever_graphs_n1613, 0.002); end
  def test_lever_graphs_o1613; assert_in_delta(0.6003793471001849, worksheet.lever_graphs_o1613, 0.002); end
  def test_lever_graphs_p1613; assert_in_delta(0.61694601015062, worksheet.lever_graphs_p1613, 0.002); end
  def test_lever_graphs_q1613; assert_in_delta(0.632327785387248, worksheet.lever_graphs_q1613, 0.002); end
  def test_lever_graphs_r1613; assert_in_delta(0.647898600138288, worksheet.lever_graphs_r1613, 0.002); end
  def test_lever_graphs_s1613; assert_in_delta(0.663663288223238, worksheet.lever_graphs_s1613, 0.002); end
  def test_lever_graphs_b1614; assert_in_epsilon(3.0, worksheet.lever_graphs_b1614, 0.002); end
  def test_lever_graphs_k1614; assert_in_delta(0.5213279389034929, worksheet.lever_graphs_k1614, 0.002); end
  def test_lever_graphs_l1614; assert_in_delta(0.53, worksheet.lever_graphs_l1614, 0.002); end
  def test_lever_graphs_m1614; assert_in_delta(0.54, worksheet.lever_graphs_m1614, 0.002); end
  def test_lever_graphs_n1614; assert_in_delta(0.55, worksheet.lever_graphs_n1614, 0.002); end
  def test_lever_graphs_o1614; assert_in_delta(0.56, worksheet.lever_graphs_o1614, 0.002); end
  def test_lever_graphs_p1614; assert_in_delta(0.57, worksheet.lever_graphs_p1614, 0.002); end
  def test_lever_graphs_q1614; assert_in_delta(0.57, worksheet.lever_graphs_q1614, 0.002); end
  def test_lever_graphs_r1614; assert_in_delta(0.57, worksheet.lever_graphs_r1614, 0.002); end
  def test_lever_graphs_s1614; assert_in_delta(0.58, worksheet.lever_graphs_s1614, 0.002); end
  def test_lever_graphs_b1615; assert_equal("Comparator A", worksheet.lever_graphs_b1615); end
  def test_lever_graphs_b1616; assert_equal("Comparator B", worksheet.lever_graphs_b1616); end
  def test_lever_graphs_b1617; assert_equal("Comparator C", worksheet.lever_graphs_b1617); end
  def test_lever_graphs_b2121; assert_equal("Technology code", worksheet.lever_graphs_b2121); end
  def test_lever_graphs_c2121; assert_equal("1975", worksheet.lever_graphs_c2121); end
  def test_lever_graphs_d2121; assert_equal("1980", worksheet.lever_graphs_d2121); end
  def test_lever_graphs_e2121; assert_equal("1985", worksheet.lever_graphs_e2121); end
  def test_lever_graphs_f2121; assert_equal("1990", worksheet.lever_graphs_f2121); end
  def test_lever_graphs_g2121; assert_equal("1995", worksheet.lever_graphs_g2121); end
  def test_lever_graphs_h2121; assert_equal("2000", worksheet.lever_graphs_h2121); end
  def test_lever_graphs_i2121; assert_equal("2005", worksheet.lever_graphs_i2121); end
  def test_lever_graphs_j2121; assert_equal("2010", worksheet.lever_graphs_j2121); end
  def test_lever_graphs_k2121; assert_equal("2011", worksheet.lever_graphs_k2121); end
  def test_lever_graphs_b2122; assert_equal("walk.passenger.urban", worksheet.lever_graphs_b2122); end
  def test_lever_graphs_k2122; assert_in_delta(0.0, (worksheet.lever_graphs_k2122||0), 0.002); end
  def test_lever_graphs_b2123; assert_equal("bike.passenger.urban", worksheet.lever_graphs_b2123); end
  def test_lever_graphs_k2123; assert_in_delta(0.0, (worksheet.lever_graphs_k2123||0), 0.002); end
  def test_lever_graphs_b2124; assert_equal("motorbike.passenger.urban.fuel", worksheet.lever_graphs_b2124); end
  def test_lever_graphs_k2124; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2124, 0.002); end
  def test_lever_graphs_b2125; assert_equal("motorbike.passenger.urban.elec", worksheet.lever_graphs_b2125); end
  def test_lever_graphs_k2125; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2125, 0.002); end
  def test_lever_graphs_b2126; assert_equal("car.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2126); end
  def test_lever_graphs_k2126; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2126, 0.002); end
  def test_lever_graphs_b2127; assert_equal("car.passenger.urban.ICE.gas", worksheet.lever_graphs_b2127); end
  def test_lever_graphs_k2127; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2127, 0.002); end
  def test_lever_graphs_b2128; assert_equal("car.passenger.urban.PH", worksheet.lever_graphs_b2128); end
  def test_lever_graphs_k2128; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2128, 0.002); end
  def test_lever_graphs_b2129; assert_equal("car.passenger.urban.EV", worksheet.lever_graphs_b2129); end
  def test_lever_graphs_k2129; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2129, 0.002); end
  def test_lever_graphs_b2130; assert_equal("car.passenger.urban.H2", worksheet.lever_graphs_b2130); end
  def test_lever_graphs_k2130; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2130, 0.002); end
  def test_lever_graphs_b2131; assert_equal("bus.passenger.urban.ICE.liquid", worksheet.lever_graphs_b2131); end
  def test_lever_graphs_k2131; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2131, 0.002); end
  def test_lever_graphs_b2132; assert_equal("bus.passenger.urban.ICE.gas", worksheet.lever_graphs_b2132); end
  def test_lever_graphs_k2132; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2132, 0.002); end
  def test_lever_graphs_b2133; assert_equal("bus.passenger.urban.PH", worksheet.lever_graphs_b2133); end
  def test_lever_graphs_k2133; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2133, 0.002); end
  def test_lever_graphs_b2134; assert_equal("bus.passenger.urban.EV", worksheet.lever_graphs_b2134); end
  def test_lever_graphs_k2134; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2134, 0.002); end
  def test_lever_graphs_b2135; assert_equal("bus.passenger.urban.H2", worksheet.lever_graphs_b2135); end
  def test_lever_graphs_k2135; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2135, 0.002); end
  def test_lever_graphs_b2136; assert_equal("train.passenger.urban.fuel", worksheet.lever_graphs_b2136); end
  def test_lever_graphs_k2136; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2136, 0.002); end
  def test_lever_graphs_b2137; assert_equal("train.passenger.urban.elec", worksheet.lever_graphs_b2137); end
  def test_lever_graphs_k2137; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2137, 0.002); end
  def test_lever_graphs_b2138; assert_equal("walk.passenger.rural", worksheet.lever_graphs_b2138); end
  def test_lever_graphs_k2138; assert_in_delta(0.0, (worksheet.lever_graphs_k2138||0), 0.002); end
  def test_lever_graphs_b2139; assert_equal("bike.passenger.rural", worksheet.lever_graphs_b2139); end
  def test_lever_graphs_k2139; assert_in_delta(0.0, (worksheet.lever_graphs_k2139||0), 0.002); end
  def test_lever_graphs_b2140; assert_equal("motorbike.passenger.rural.fuel", worksheet.lever_graphs_b2140); end
  def test_lever_graphs_k2140; assert_in_epsilon(4.320306698732465, worksheet.lever_graphs_k2140, 0.002); end
  def test_lever_graphs_b2141; assert_equal("motorbike.passenger.rural.elec", worksheet.lever_graphs_b2141); end
  def test_lever_graphs_k2141; assert_in_epsilon(1.198701595980695, worksheet.lever_graphs_k2141, 0.002); end
  def test_lever_graphs_b2142; assert_equal("car.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2142); end
  def test_lever_graphs_k2142; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2142, 0.002); end
  def test_lever_graphs_b2143; assert_equal("car.passenger.rural.ICE.gas", worksheet.lever_graphs_b2143); end
  def test_lever_graphs_k2143; assert_in_epsilon(8.64061339746493, worksheet.lever_graphs_k2143, 0.002); end
  def test_lever_graphs_b2144; assert_equal("car.passenger.rural.PH", worksheet.lever_graphs_b2144); end
  def test_lever_graphs_k2144; assert_in_epsilon(6.537621244105451, worksheet.lever_graphs_k2144, 0.002); end
  def test_lever_graphs_b2145; assert_equal("car.passenger.rural.EV", worksheet.lever_graphs_b2145); end
  def test_lever_graphs_k2145; assert_in_epsilon(2.39740319196139, worksheet.lever_graphs_k2145, 0.002); end
  def test_lever_graphs_b2146; assert_equal("car.passenger.rural.H2", worksheet.lever_graphs_b2146); end
  def test_lever_graphs_k2146; assert_in_epsilon(7.894395740652819, worksheet.lever_graphs_k2146, 0.002); end
  def test_lever_graphs_b2147; assert_equal("bus.passenger.rural.ICE.liquid", worksheet.lever_graphs_b2147); end
  def test_lever_graphs_k2147; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2147, 0.002); end
  def test_lever_graphs_b2148; assert_equal("bus.passenger.rural.ICE.gas", worksheet.lever_graphs_b2148); end
  def test_lever_graphs_k2148; assert_in_epsilon(32.331711258141304, worksheet.lever_graphs_k2148, 0.002); end
  def test_lever_graphs_b2149; assert_equal("bus.passenger.rural.PH", worksheet.lever_graphs_b2149); end
  def test_lever_graphs_k2149; assert_in_epsilon(28.138535157781295, worksheet.lever_graphs_k2149, 0.002); end
  def test_lever_graphs_b2150; assert_equal("bus.passenger.rural.EV", worksheet.lever_graphs_b2150); end
  def test_lever_graphs_k2150; assert_in_epsilon(7.13287824899877, worksheet.lever_graphs_k2150, 0.002); end
  def test_lever_graphs_b2151; assert_equal("bus.passenger.rural.H2", worksheet.lever_graphs_b2151); end
  def test_lever_graphs_k2151; assert_in_epsilon(19.615415184746603, worksheet.lever_graphs_k2151, 0.002); end
  def test_lever_graphs_b2152; assert_equal("train.passenger.rural.fuel", worksheet.lever_graphs_b2152); end
  def test_lever_graphs_k2152; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2152, 0.002); end
  def test_lever_graphs_b2153; assert_equal("train.passenger.rural.elec", worksheet.lever_graphs_b2153); end
  def test_lever_graphs_k2153; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2153, 0.002); end
  def test_lever_graphs_b2154; assert_equal("plane.passenger.international.short.fuel", worksheet.lever_graphs_b2154); end
  def test_lever_graphs_k2154; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2154, 0.002); end
  def test_lever_graphs_b2155; assert_equal("plane.passenger.international.short.H2", worksheet.lever_graphs_b2155); end
  def test_lever_graphs_k2155; assert_in_epsilon(955.579493787423, worksheet.lever_graphs_k2155, 0.002); end
  def test_lever_graphs_b2156; assert_equal("plane.passenger.international.long.fuel", worksheet.lever_graphs_b2156); end
  def test_lever_graphs_k2156; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2156, 0.002); end
  def test_lever_graphs_b2157; assert_equal("plane.passenger.international.long.H2", worksheet.lever_graphs_b2157); end
  def test_lever_graphs_k2157; assert_in_epsilon(687.3122998348063, worksheet.lever_graphs_k2157, 0.002); end
  def test_lever_graphs_b2158; assert_equal("train.passenger.international.fuel", worksheet.lever_graphs_b2158); end
  def test_lever_graphs_k2158; assert_in_epsilon(347.9830499369259, worksheet.lever_graphs_k2158, 0.002); end
  def test_lever_graphs_b2159; assert_equal("train.passenger.international.elec", worksheet.lever_graphs_b2159); end
  def test_lever_graphs_k2159; assert_in_epsilon(143.2773007442537, worksheet.lever_graphs_k2159, 0.002); end
  def test_lever_graphs_b2193; assert_equal("Technology code", worksheet.lever_graphs_b2193); end
  def test_lever_graphs_c2193; assert_equal("1975", worksheet.lever_graphs_c2193); end
  def test_lever_graphs_d2193; assert_equal("1980", worksheet.lever_graphs_d2193); end
  def test_lever_graphs_e2193; assert_equal("1985", worksheet.lever_graphs_e2193); end
  def test_lever_graphs_f2193; assert_equal("1990", worksheet.lever_graphs_f2193); end
  def test_lever_graphs_g2193; assert_equal("1995", worksheet.lever_graphs_g2193); end
  def test_lever_graphs_h2193; assert_equal("2000", worksheet.lever_graphs_h2193); end
  def test_lever_graphs_i2193; assert_equal("2005", worksheet.lever_graphs_i2193); end
  def test_lever_graphs_j2193; assert_equal("2010", worksheet.lever_graphs_j2193); end
  def test_lever_graphs_k2193; assert_equal("2011", worksheet.lever_graphs_k2193); end
  def test_lever_graphs_b2194; assert_equal("light.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2194); end
  def test_lever_graphs_k2194; assert_in_epsilon(9.96, worksheet.lever_graphs_k2194, 0.002); end
  def test_lever_graphs_b2195; assert_equal("light.truck.domestic.ICE.gas", worksheet.lever_graphs_b2195); end
  def test_lever_graphs_k2195; assert_in_epsilon(9.96, worksheet.lever_graphs_k2195, 0.002); end
  def test_lever_graphs_b2196; assert_equal("light.truck.domestic.PH", worksheet.lever_graphs_b2196); end
  def test_lever_graphs_k2196; assert_in_epsilon(9.060000000000002, worksheet.lever_graphs_k2196, 0.002); end
  def test_lever_graphs_b2197; assert_equal("light.truck.domestic.EV", worksheet.lever_graphs_b2197); end
  def test_lever_graphs_k2197; assert_in_epsilon(3.3999999999999995, worksheet.lever_graphs_k2197, 0.002); end
  def test_lever_graphs_b2198; assert_equal("light.truck.domestic.H2", worksheet.lever_graphs_b2198); end
  def test_lever_graphs_k2198; assert_in_epsilon(7.62, worksheet.lever_graphs_k2198, 0.002); end
  def test_lever_graphs_b2199; assert_equal("heavy.truck.domestic.ICE.liquid", worksheet.lever_graphs_b2199); end
  def test_lever_graphs_k2199; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2199, 0.002); end
  def test_lever_graphs_b2200; assert_equal("heavy.truck.domestic.ICE.gas", worksheet.lever_graphs_b2200); end
  def test_lever_graphs_k2200; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2200, 0.002); end
  def test_lever_graphs_b2201; assert_equal("heavy.truck.domestic.PH", worksheet.lever_graphs_b2201); end
  def test_lever_graphs_k2201; assert_in_epsilon(28.57, worksheet.lever_graphs_k2201, 0.002); end
  def test_lever_graphs_b2202; assert_equal("heavy.truck.domestic.EV", worksheet.lever_graphs_b2202); end
  def test_lever_graphs_k2202; assert_in_epsilon(12.37, worksheet.lever_graphs_k2202, 0.002); end
  def test_lever_graphs_b2203; assert_equal("heavy.truck.domestic.H2", worksheet.lever_graphs_b2203); end
  def test_lever_graphs_k2203; assert_in_epsilon(26.35, worksheet.lever_graphs_k2203, 0.002); end
  def test_lever_graphs_b2204; assert_equal("train.freight.domestic.fuel", worksheet.lever_graphs_b2204); end
  def test_lever_graphs_k2204; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2204, 0.002); end
  def test_lever_graphs_b2205; assert_equal("train.freight.domestic.elec", worksheet.lever_graphs_b2205); end
  def test_lever_graphs_k2205; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2205, 0.002); end
  def test_lever_graphs_b2206; assert_equal("ship.freight.domestic.fuel", worksheet.lever_graphs_b2206); end
  def test_lever_graphs_k2206; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2206, 0.002); end
  def test_lever_graphs_b2207; assert_equal("ship.freight.domestic.H2", worksheet.lever_graphs_b2207); end
  def test_lever_graphs_k2207; assert_in_epsilon(3852.2580065848556, worksheet.lever_graphs_k2207, 0.002); end
  def test_lever_graphs_b2208; assert_equal("heavy.truck.international.ICE.liquid", worksheet.lever_graphs_b2208); end
  def test_lever_graphs_k2208; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2208, 0.002); end
  def test_lever_graphs_b2209; assert_equal("heavy.truck.international.ICE.gas", worksheet.lever_graphs_b2209); end
  def test_lever_graphs_k2209; assert_in_epsilon(31.970000000000002, worksheet.lever_graphs_k2209, 0.002); end
  def test_lever_graphs_b2210; assert_equal("heavy.truck.international.PH", worksheet.lever_graphs_b2210); end
  def test_lever_graphs_k2210; assert_in_epsilon(28.57, worksheet.lever_graphs_k2210, 0.002); end
  def test_lever_graphs_b2211; assert_equal("heavy.truck.international.EV", worksheet.lever_graphs_b2211); end
  def test_lever_graphs_k2211; assert_in_epsilon(12.37, worksheet.lever_graphs_k2211, 0.002); end
  def test_lever_graphs_b2212; assert_equal("heavy.truck.international.H2", worksheet.lever_graphs_b2212); end
  def test_lever_graphs_k2212; assert_in_epsilon(26.35, worksheet.lever_graphs_k2212, 0.002); end
  def test_lever_graphs_b2213; assert_equal("train.freight.international.fuel", worksheet.lever_graphs_b2213); end
  def test_lever_graphs_k2213; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2213, 0.002); end
  def test_lever_graphs_b2214; assert_equal("train.freight.international.elec", worksheet.lever_graphs_b2214); end
  def test_lever_graphs_k2214; assert_in_epsilon(380.8196231999734, worksheet.lever_graphs_k2214, 0.002); end
  def test_lever_graphs_b2215; assert_equal("ship.freight.international.fuel", worksheet.lever_graphs_b2215); end
  def test_lever_graphs_k2215; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2215, 0.002); end
  def test_lever_graphs_b2216; assert_equal("ship.freight.international.H2", worksheet.lever_graphs_b2216); end
  def test_lever_graphs_k2216; assert_in_epsilon(9064.136486082014, worksheet.lever_graphs_k2216, 0.002); end
  def test_lever_graphs_b2217; assert_equal("plane.freight.international.fuel", worksheet.lever_graphs_b2217); end
  def test_lever_graphs_k2217; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2217, 0.002); end
  def test_lever_graphs_b2218; assert_equal("plane.freight.international.H2", worksheet.lever_graphs_b2218); end
  def test_lever_graphs_k2218; assert_in_epsilon(1200.0000000000002, worksheet.lever_graphs_k2218, 0.002); end
  def test_lever_graphs_d3112; assert_equal("Type of travel", worksheet.lever_graphs_d3112); end
  def test_lever_graphs_e3112; assert_equal("Level", worksheet.lever_graphs_e3112); end
  def test_lever_graphs_f3112; assert_equal("…", worksheet.lever_graphs_f3112); end
  def test_lever_graphs_g3112; assert_equal("….", worksheet.lever_graphs_g3112); end
  def test_lever_graphs_h3112; assert_equal("Type of city", worksheet.lever_graphs_h3112); end
  def test_lever_graphs_i3112; assert_equal("2011", worksheet.lever_graphs_i3112); end
  def test_lever_graphs_j3112; assert_equal("2015", worksheet.lever_graphs_j3112); end
  def test_lever_graphs_k3112; assert_equal("2020", worksheet.lever_graphs_k3112); end
  def test_lever_graphs_l3112; assert_equal("2025", worksheet.lever_graphs_l3112); end
  def test_lever_graphs_m3112; assert_equal("2030", worksheet.lever_graphs_m3112); end
  def test_lever_graphs_n3112; assert_equal("2035", worksheet.lever_graphs_n3112); end
  def test_lever_graphs_o3112; assert_equal("2040", worksheet.lever_graphs_o3112); end
  def test_lever_graphs_p3112; assert_equal("2045", worksheet.lever_graphs_p3112); end
  def test_lever_graphs_q3112; assert_equal("2050", worksheet.lever_graphs_q3112); end
  def test_lever_graphs_d3113; assert_equal("Urban", worksheet.lever_graphs_d3113); end
  def test_lever_graphs_e3113; assert_in_delta(1.0, worksheet.lever_graphs_e3113, 0.002); end
  def test_lever_graphs_h3113; assert_equal("Automobile city", worksheet.lever_graphs_h3113); end
  def test_lever_graphs_i3113; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3113, 0.002); end
  def test_lever_graphs_j3113; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_j3113, 0.002); end
  def test_lever_graphs_k3113; assert_in_epsilon(12351.737802069609, worksheet.lever_graphs_k3113, 0.002); end
  def test_lever_graphs_l3113; assert_in_epsilon(12651.039042558295, worksheet.lever_graphs_l3113, 0.002); end
  def test_lever_graphs_m3113; assert_in_epsilon(12771.681484531466, worksheet.lever_graphs_m3113, 0.002); end
  def test_lever_graphs_n3113; assert_in_epsilon(12893.474393178265, worksheet.lever_graphs_n3113, 0.002); end
  def test_lever_graphs_o3113; assert_in_epsilon(13016.428739542927, worksheet.lever_graphs_o3113, 0.002); end
  def test_lever_graphs_p3113; assert_in_epsilon(13140.55559929141, worksheet.lever_graphs_p3113, 0.002); end
  def test_lever_graphs_q3113; assert_in_epsilon(13153.70141216429, worksheet.lever_graphs_q3113, 0.002); end
  def test_lever_graphs_d3114; assert_equal("Urban", worksheet.lever_graphs_d3114); end
  def test_lever_graphs_e3114; assert_in_epsilon(2.0, worksheet.lever_graphs_e3114, 0.002); end
  def test_lever_graphs_h3114; assert_equal("Automobile city", worksheet.lever_graphs_h3114); end
  def test_lever_graphs_i3114; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3114, 0.002); end
  def test_lever_graphs_j3114; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_j3114, 0.002); end
  def test_lever_graphs_k3114; assert_in_epsilon(12351.737802069609, worksheet.lever_graphs_k3114, 0.002); end
  def test_lever_graphs_l3114; assert_in_epsilon(12469.526056934774, worksheet.lever_graphs_l3114, 0.002); end
  def test_lever_graphs_m3114; assert_in_epsilon(12588.437560463932, worksheet.lever_graphs_m3114, 0.002); end
  def test_lever_graphs_n3114; assert_in_epsilon(12708.483024145786, worksheet.lever_graphs_n3114, 0.002); end
  def test_lever_graphs_o3114; assert_in_epsilon(12829.6732616156, worksheet.lever_graphs_o3114, 0.002); end
  def test_lever_graphs_p3114; assert_in_epsilon(12701.88869058201, worksheet.lever_graphs_p3114, 0.002); end
  def test_lever_graphs_q3114; assert_in_epsilon(12575.376864088463, worksheet.lever_graphs_q3114, 0.002); end
  def test_lever_graphs_d3115; assert_equal("Urban", worksheet.lever_graphs_d3115); end
  def test_lever_graphs_e3115; assert_in_epsilon(3.0, worksheet.lever_graphs_e3115, 0.002); end
  def test_lever_graphs_h3115; assert_equal("Automobile city", worksheet.lever_graphs_h3115); end
  def test_lever_graphs_i3115; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3115, 0.002); end
  def test_lever_graphs_j3115; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_j3115, 0.002); end
  def test_lever_graphs_k3115; assert_in_epsilon(12229.298862519066, worksheet.lever_graphs_k3115, 0.002); end
  def test_lever_graphs_l3115; assert_in_epsilon(12321.294176260857, worksheet.lever_graphs_l3115, 0.002); end
  def test_lever_graphs_m3115; assert_in_epsilon(12321.294176260857, worksheet.lever_graphs_m3115, 0.002); end
  def test_lever_graphs_n3115; assert_in_epsilon(12198.573101547074, worksheet.lever_graphs_n3115, 0.002); end
  def test_lever_graphs_o3115; assert_in_epsilon(12016.689087925728, worksheet.lever_graphs_o3115, 0.002); end
  def test_lever_graphs_p3115; assert_in_epsilon(11778.270301109322, worksheet.lever_graphs_p3115, 0.002); end
  def test_lever_graphs_q3115; assert_in_epsilon(11486.743425089278, worksheet.lever_graphs_q3115, 0.002); end
  def test_lever_graphs_d3116; assert_equal("Urban", worksheet.lever_graphs_d3116); end
  def test_lever_graphs_e3116; assert_in_epsilon(4.0, worksheet.lever_graphs_e3116, 0.002); end
  def test_lever_graphs_h3116; assert_equal("Automobile city", worksheet.lever_graphs_h3116); end
  def test_lever_graphs_i3116; assert_in_epsilon(11737.0, worksheet.lever_graphs_i3116, 0.002); end
  def test_lever_graphs_j3116; assert_in_epsilon(12059.517500328855, worksheet.lever_graphs_j3116, 0.002); end
  def test_lever_graphs_k3116; assert_in_epsilon(12180.596021758704, worksheet.lever_graphs_k3116, 0.002); end
  def test_lever_graphs_l3116; assert_in_epsilon(12241.620929694582, worksheet.lever_graphs_l3116, 0.002); end
  def test_lever_graphs_m3116; assert_in_epsilon(12180.535118900392, worksheet.lever_graphs_m3116, 0.002); end
  def test_lever_graphs_n3116; assert_in_epsilon(11998.920056463263, worksheet.lever_graphs_n3116, 0.002); end
  def test_lever_graphs_o3116; assert_in_epsilon(11760.853818580526, worksheet.lever_graphs_o3116, 0.002); end
  def test_lever_graphs_p3116; assert_in_epsilon(11469.758022219301, worksheet.lever_graphs_p3116, 0.002); end
  def test_lever_graphs_q3116; assert_in_epsilon(11129.769693998238, worksheet.lever_graphs_q3116, 0.002); end
  def test_lever_graphs_d3117; assert_equal("Urban", worksheet.lever_graphs_d3117); end
  def test_lever_graphs_e3117; assert_in_delta(1.0, worksheet.lever_graphs_e3117, 0.002); end
  def test_lever_graphs_h3117; assert_equal("Transit city", worksheet.lever_graphs_h3117); end
  def test_lever_graphs_i3117; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3117, 0.002); end
  def test_lever_graphs_j3117; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_j3117, 0.002); end
  def test_lever_graphs_k3117; assert_in_epsilon(9890.690211047828, worksheet.lever_graphs_k3117, 0.002); end
  def test_lever_graphs_l3117; assert_in_epsilon(10498.546156669334, worksheet.lever_graphs_l3117, 0.002); end
  def test_lever_graphs_m3117; assert_in_epsilon(10898.191526838578, worksheet.lever_graphs_m3117, 0.002); end
  def test_lever_graphs_n3117; assert_in_epsilon(11313.050091245794, worksheet.lever_graphs_n3117, 0.002); end
  def test_lever_graphs_o3117; assert_in_epsilon(11598.71878275099, worksheet.lever_graphs_o3117, 0.002); end
  def test_lever_graphs_p3117; assert_in_epsilon(11891.600966696164, worksheet.lever_graphs_p3117, 0.002); end
  def test_lever_graphs_q3117; assert_in_epsilon(12010.99359268158, worksheet.lever_graphs_q3117, 0.002); end
  def test_lever_graphs_d3118; assert_equal("Urban", worksheet.lever_graphs_d3118); end
  def test_lever_graphs_e3118; assert_in_epsilon(2.0, worksheet.lever_graphs_e3118, 0.002); end
  def test_lever_graphs_h3118; assert_equal("Transit city", worksheet.lever_graphs_h3118); end
  def test_lever_graphs_i3118; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3118, 0.002); end
  def test_lever_graphs_j3118; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_j3118, 0.002); end
  def test_lever_graphs_k3118; assert_in_epsilon(9890.690211047828, worksheet.lever_graphs_k3118, 0.002); end
  def test_lever_graphs_l3118; assert_in_epsilon(10267.196490263688, worksheet.lever_graphs_l3118, 0.002); end
  def test_lever_graphs_m3118; assert_in_epsilon(10658.03513408345, worksheet.lever_graphs_m3118, 0.002); end
  def test_lever_graphs_n3118; assert_in_epsilon(10927.163877102632, worksheet.lever_graphs_n3118, 0.002); end
  def test_lever_graphs_o3118; assert_in_epsilon(11203.088458135844, worksheet.lever_graphs_o3118, 0.002); end
  def test_lever_graphs_p3118; assert_in_epsilon(11315.56836339921, worksheet.lever_graphs_p3118, 0.002); end
  def test_lever_graphs_q3118; assert_in_epsilon(11326.88845889529, worksheet.lever_graphs_q3118, 0.002); end
  def test_lever_graphs_d3119; assert_equal("Urban", worksheet.lever_graphs_d3119); end
  def test_lever_graphs_e3119; assert_in_epsilon(3.0, worksheet.lever_graphs_e3119, 0.002); end
  def test_lever_graphs_h3119; assert_equal("Transit city", worksheet.lever_graphs_h3119); end
  def test_lever_graphs_i3119; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3119, 0.002); end
  def test_lever_graphs_j3119; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_j3119, 0.002); end
  def test_lever_graphs_k3119; assert_in_epsilon(9793.628251934293, worksheet.lever_graphs_k3119, 0.002); end
  def test_lever_graphs_l3119; assert_in_epsilon(10131.171085347953, worksheet.lever_graphs_l3119, 0.002); end
  def test_lever_graphs_m3119; assert_in_epsilon(10335.421991356336, worksheet.lever_graphs_m3119, 0.002); end
  def test_lever_graphs_n3119; assert_in_epsilon(10543.790726612078, worksheet.lever_graphs_n3119, 0.002); end
  def test_lever_graphs_o3119; assert_in_epsilon(10649.651229854362, worksheet.lever_graphs_o3119, 0.002); end
  def test_lever_graphs_p3119; assert_in_epsilon(10756.57458102651, worksheet.lever_graphs_p3119, 0.002); end
  def test_lever_graphs_q3119; assert_in_epsilon(10767.33545909798, worksheet.lever_graphs_q3119, 0.002); end
  def test_lever_graphs_d3120; assert_equal("Urban", worksheet.lever_graphs_d3120); end
  def test_lever_graphs_e3120; assert_in_epsilon(4.0, worksheet.lever_graphs_e3120, 0.002); end
  def test_lever_graphs_h3120; assert_equal("Transit city", worksheet.lever_graphs_h3120); end
  def test_lever_graphs_i3120; assert_in_epsilon(8237.0, worksheet.lever_graphs_i3120, 0.002); end
  def test_lever_graphs_j3120; assert_in_epsilon(9181.135313793635, worksheet.lever_graphs_j3120, 0.002); end
  def test_lever_graphs_k3120; assert_in_epsilon(9793.628251934293, worksheet.lever_graphs_k3120, 0.002); end
  def test_lever_graphs_l3120; assert_in_epsilon(10040.929637966634, worksheet.lever_graphs_l3120, 0.002); end
  def test_lever_graphs_m3120; assert_in_epsilon(10243.36121852568, worksheet.lever_graphs_m3120, 0.002); end
  def test_lever_graphs_n3120; assert_in_epsilon(10346.205385448373, worksheet.lever_graphs_n3120, 0.002); end
  def test_lever_graphs_o3120; assert_in_epsilon(10398.039977943257, worksheet.lever_graphs_o3120, 0.002); end
  def test_lever_graphs_p3120; assert_in_epsilon(10424.061085988858, worksheet.lever_graphs_p3120, 0.002); end
  def test_lever_graphs_q3120; assert_in_epsilon(10434.489317533289, worksheet.lever_graphs_q3120, 0.002); end
  def test_lever_graphs_d3121; assert_equal("Urban", worksheet.lever_graphs_d3121); end
  def test_lever_graphs_e3121; assert_in_delta(1.0, worksheet.lever_graphs_e3121, 0.002); end
  def test_lever_graphs_h3121; assert_equal("Booming city", worksheet.lever_graphs_h3121); end
  def test_lever_graphs_i3121; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3121, 0.002); end
  def test_lever_graphs_j3121; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_j3121, 0.002); end
  def test_lever_graphs_k3121; assert_in_epsilon(11826.95579327355, worksheet.lever_graphs_k3121, 0.002); end
  def test_lever_graphs_l3121; assert_in_epsilon(12430.249400818919, worksheet.lever_graphs_l3121, 0.002); end
  def test_lever_graphs_m3121; assert_in_epsilon(12903.428405697658, worksheet.lever_graphs_m3121, 0.002); end
  def test_lever_graphs_n3121; assert_in_epsilon(13229.256142590557, worksheet.lever_graphs_n3121, 0.002); end
  def test_lever_graphs_o3121; assert_in_epsilon(13395.450742538253, worksheet.lever_graphs_o3121, 0.002); end
  def test_lever_graphs_p3121; assert_in_epsilon(13563.733188148173, worksheet.lever_graphs_p3121, 0.002); end
  def test_lever_graphs_q3121; assert_in_epsilon(13734.129708308084, worksheet.lever_graphs_q3121, 0.002); end
  def test_lever_graphs_d3122; assert_equal("Urban", worksheet.lever_graphs_d3122); end
  def test_lever_graphs_e3122; assert_in_epsilon(2.0, worksheet.lever_graphs_e3122, 0.002); end
  def test_lever_graphs_h3122; assert_equal("Booming city", worksheet.lever_graphs_h3122); end
  def test_lever_graphs_i3122; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3122, 0.002); end
  def test_lever_graphs_j3122; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_j3122, 0.002); end
  def test_lever_graphs_k3122; assert_in_epsilon(11261.178896862863, worksheet.lever_graphs_k3122, 0.002); end
  def test_lever_graphs_l3122; assert_in_epsilon(11835.6121965769, worksheet.lever_graphs_l3122, 0.002); end
  def test_lever_graphs_m3122; assert_in_epsilon(12286.155304822014, worksheet.lever_graphs_m3122, 0.002); end
  def test_lever_graphs_n3122; assert_in_epsilon(12596.39612239552, worksheet.lever_graphs_n3122, 0.002); end
  def test_lever_graphs_o3122; assert_in_epsilon(12754.640319331469, worksheet.lever_graphs_o3122, 0.002); end
  def test_lever_graphs_p3122; assert_in_epsilon(12818.541194941501, worksheet.lever_graphs_p3122, 0.002); end
  def test_lever_graphs_q3122; assert_in_epsilon(12882.762214577668, worksheet.lever_graphs_q3122, 0.002); end
  def test_lever_graphs_d3123; assert_equal("Urban", worksheet.lever_graphs_d3123); end
  def test_lever_graphs_e3123; assert_in_epsilon(3.0, worksheet.lever_graphs_e3123, 0.002); end
  def test_lever_graphs_h3123; assert_equal("Booming city", worksheet.lever_graphs_h3123); end
  def test_lever_graphs_i3123; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3123, 0.002); end
  def test_lever_graphs_j3123; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_j3123, 0.002); end
  def test_lever_graphs_k3123; assert_in_epsilon(10986.529228969433, worksheet.lever_graphs_k3123, 0.002); end
  def test_lever_graphs_l3123; assert_in_epsilon(11404.750521238313, worksheet.lever_graphs_l3123, 0.002); end
  def test_lever_graphs_m3123; assert_in_epsilon(11751.0234553157, worksheet.lever_graphs_m3123, 0.002); end
  def test_lever_graphs_n3123; assert_in_epsilon(11928.34957679476, worksheet.lever_graphs_n3123, 0.002); end
  def test_lever_graphs_o3123; assert_in_epsilon(12048.111161768396, worksheet.lever_graphs_o3123, 0.002); end
  def test_lever_graphs_p3123; assert_in_epsilon(12108.472319230212, worksheet.lever_graphs_p3123, 0.002); end
  def test_lever_graphs_q3123; assert_in_epsilon(12138.773786348458, worksheet.lever_graphs_q3123, 0.002); end
  def test_lever_graphs_d3124; assert_equal("Urban", worksheet.lever_graphs_d3124); end
  def test_lever_graphs_e3124; assert_in_epsilon(4.0, worksheet.lever_graphs_e3124, 0.002); end
  def test_lever_graphs_h3124; assert_equal("Booming city", worksheet.lever_graphs_h3124); end
  def test_lever_graphs_i3124; assert_in_epsilon(9198.0, worksheet.lever_graphs_i3124, 0.002); end
  def test_lever_graphs_j3124; assert_in_epsilon(10453.305587253046, worksheet.lever_graphs_j3124, 0.002); end
  def test_lever_graphs_k3124; assert_in_epsilon(10851.228796673438, worksheet.lever_graphs_k3124, 0.002); end
  def test_lever_graphs_l3124; assert_in_epsilon(11125.23592176943, worksheet.lever_graphs_l3124, 0.002); end
  def test_lever_graphs_m3124; assert_in_epsilon(11321.295170098962, worksheet.lever_graphs_m3124, 0.002); end
  def test_lever_graphs_n3124; assert_in_epsilon(11463.520711837995, worksheet.lever_graphs_n3124, 0.002); end
  def test_lever_graphs_o3124; assert_in_epsilon(11520.953065296831, worksheet.lever_graphs_o3124, 0.002); end
  def test_lever_graphs_p3124; assert_in_epsilon(11532.478627665121, worksheet.lever_graphs_p3124, 0.002); end
  def test_lever_graphs_q3124; assert_in_epsilon(11544.015720206928, worksheet.lever_graphs_q3124, 0.002); end
  def test_lever_graphs_d3125; assert_equal("Rural", worksheet.lever_graphs_d3125); end
  def test_lever_graphs_e3125; assert_in_delta(1.0, worksheet.lever_graphs_e3125, 0.002); end
  def test_lever_graphs_h3125; assert_equal("Developed", worksheet.lever_graphs_h3125); end
  def test_lever_graphs_i3125; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3125, 0.002); end
  def test_lever_graphs_j3125; assert_in_epsilon(24132.64759591, worksheet.lever_graphs_j3125, 0.002); end
  def test_lever_graphs_k3125; assert_in_epsilon(25275.883052968406, worksheet.lever_graphs_k3125, 0.002); end
  def test_lever_graphs_l3125; assert_in_epsilon(26473.276981660776, worksheet.lever_graphs_l3125, 0.002); end
  def test_lever_graphs_m3125; assert_in_epsilon(27727.395030237098, worksheet.lever_graphs_m3125, 0.002); end
  def test_lever_graphs_n3125; assert_in_epsilon(29040.92438935327, worksheet.lever_graphs_n3125, 0.002); end
  def test_lever_graphs_o3125; assert_in_epsilon(30416.679549897184, worksheet.lever_graphs_o3125, 0.002); end
  def test_lever_graphs_p3125; assert_in_epsilon(31184.738824528675, worksheet.lever_graphs_p3125, 0.002); end
  def test_lever_graphs_q3125; assert_in_epsilon(31972.19255832129, worksheet.lever_graphs_q3125, 0.002); end
  def test_lever_graphs_d3126; assert_equal("Rural", worksheet.lever_graphs_d3126); end
  def test_lever_graphs_e3126; assert_in_epsilon(2.0, worksheet.lever_graphs_e3126, 0.002); end
  def test_lever_graphs_h3126; assert_equal("Developed", worksheet.lever_graphs_h3126); end
  def test_lever_graphs_i3126; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3126, 0.002); end
  def test_lever_graphs_j3126; assert_in_epsilon(24132.64759591, worksheet.lever_graphs_j3126, 0.002); end
  def test_lever_graphs_k3126; assert_in_epsilon(25051.298686995084, worksheet.lever_graphs_k3126, 0.002); end
  def test_lever_graphs_l3126; assert_in_epsilon(26004.919825349032, worksheet.lever_graphs_l3126, 0.002); end
  def test_lever_graphs_m3126; assert_in_epsilon(26994.842206479967, worksheet.lever_graphs_m3126, 0.002); end
  def test_lever_graphs_n3126; assert_in_epsilon(28022.44770016212, worksheet.lever_graphs_n3126, 0.002); end
  def test_lever_graphs_o3126; assert_in_epsilon(28374.484083378728, worksheet.lever_graphs_o3126, 0.002); end
  def test_lever_graphs_p3126; assert_in_epsilon(28730.94297873397, worksheet.lever_graphs_p3126, 0.002); end
  def test_lever_graphs_q3126; assert_in_epsilon(29091.87994472847, worksheet.lever_graphs_q3126, 0.002); end
  def test_lever_graphs_d3127; assert_equal("Rural", worksheet.lever_graphs_d3127); end
  def test_lever_graphs_e3127; assert_in_epsilon(3.0, worksheet.lever_graphs_e3127, 0.002); end
  def test_lever_graphs_h3127; assert_equal("Developed", worksheet.lever_graphs_h3127); end
  def test_lever_graphs_i3127; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3127, 0.002); end
  def test_lever_graphs_j3127; assert_in_epsilon(24132.64759591, worksheet.lever_graphs_j3127, 0.002); end
  def test_lever_graphs_k3127; assert_in_epsilon(24742.027189006138, worksheet.lever_graphs_k3127, 0.002); end
  def test_lever_graphs_l3127; assert_in_epsilon(25366.79438045866, worksheet.lever_graphs_l3127, 0.002); end
  def test_lever_graphs_m3127; assert_in_epsilon(25685.46870338172, worksheet.lever_graphs_m3127, 0.002); end
  def test_lever_graphs_n3127; assert_in_epsilon(26008.146422341637, worksheet.lever_graphs_n3127, 0.002); end
  def test_lever_graphs_o3127; assert_in_epsilon(26203.793582237187, worksheet.lever_graphs_o3127, 0.002); end
  def test_lever_graphs_p3127; assert_in_epsilon(26203.793582237187, worksheet.lever_graphs_p3127, 0.002); end
  def test_lever_graphs_q3127; assert_in_epsilon(26007.853832011067, worksheet.lever_graphs_q3127, 0.002); end
  def test_lever_graphs_d3128; assert_equal("Rural", worksheet.lever_graphs_d3128); end
  def test_lever_graphs_e3128; assert_in_epsilon(4.0, worksheet.lever_graphs_e3128, 0.002); end
  def test_lever_graphs_h3128; assert_equal("Developed", worksheet.lever_graphs_h3128); end
  def test_lever_graphs_i3128; assert_in_epsilon(23191.0, worksheet.lever_graphs_i3128, 0.002); end
  def test_lever_graphs_j3128; assert_in_epsilon(24132.64759591, worksheet.lever_graphs_j3128, 0.002); end
  def test_lever_graphs_k3128; assert_in_epsilon(24556.43788347829, worksheet.lever_graphs_k3128, 0.002); end
  def test_lever_graphs_l3128; assert_in_epsilon(24556.43788347829, worksheet.lever_graphs_l3128, 0.002); end
  def test_lever_graphs_m3128; assert_in_epsilon(24372.81629104621, worksheet.lever_graphs_m3128, 0.002); end
  def test_lever_graphs_n3128; assert_in_epsilon(24190.567735264118, worksheet.lever_graphs_n3128, 0.002); end
  def test_lever_graphs_o3128; assert_in_epsilon(24009.681949204165, worksheet.lever_graphs_o3128, 0.002); end
  def test_lever_graphs_p3128; assert_in_epsilon(23830.148742709793, worksheet.lever_graphs_p3128, 0.002); end
  def test_lever_graphs_q3128; assert_in_epsilon(23651.958001821688, worksheet.lever_graphs_q3128, 0.002); end
  def test_lever_graphs_d3129; assert_equal("Rural", worksheet.lever_graphs_d3129); end
  def test_lever_graphs_e3129; assert_in_delta(1.0, worksheet.lever_graphs_e3129, 0.002); end
  def test_lever_graphs_h3129; assert_equal("Developing", worksheet.lever_graphs_h3129); end
  def test_lever_graphs_i3129; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3129, 0.002); end
  def test_lever_graphs_j3129; assert_in_epsilon(4687.6232499200005, worksheet.lever_graphs_j3129, 0.002); end
  def test_lever_graphs_k3129; assert_in_epsilon(5303.6154438965295, worksheet.lever_graphs_k3129, 0.002); end
  def test_lever_graphs_l3129; assert_in_epsilon(5927.73267634274, worksheet.lever_graphs_l3129, 0.002); end
  def test_lever_graphs_m3129; assert_in_epsilon(6625.294585152992, worksheet.lever_graphs_m3129, 0.002); end
  def test_lever_graphs_n3129; assert_in_epsilon(7314.860567012326, worksheet.lever_graphs_n3129, 0.002); end
  def test_lever_graphs_o3129; assert_in_epsilon(8076.197130122977, worksheet.lever_graphs_o3129, 0.002); end
  def test_lever_graphs_p3129; assert_in_epsilon(8916.774214227711, worksheet.lever_graphs_p3129, 0.002); end
  def test_lever_graphs_q3129; assert_in_epsilon(9844.83923639758, worksheet.lever_graphs_q3129, 0.002); end
  def test_lever_graphs_d3130; assert_equal("Rural", worksheet.lever_graphs_d3130); end
  def test_lever_graphs_e3130; assert_in_epsilon(2.0, worksheet.lever_graphs_e3130, 0.002); end
  def test_lever_graphs_h3130; assert_equal("Developing", worksheet.lever_graphs_h3130); end
  def test_lever_graphs_i3130; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3130, 0.002); end
  def test_lever_graphs_j3130; assert_in_epsilon(4687.6232499200005, worksheet.lever_graphs_j3130, 0.002); end
  def test_lever_graphs_k3130; assert_in_epsilon(5303.6154438965295, worksheet.lever_graphs_k3130, 0.002); end
  def test_lever_graphs_l3130; assert_in_epsilon(5855.619999161205, worksheet.lever_graphs_l3130, 0.002); end
  def test_lever_graphs_m3130; assert_in_epsilon(6465.077631907887, worksheet.lever_graphs_m3130, 0.002); end
  def test_lever_graphs_n3130; assert_in_epsilon(6964.724716725037, worksheet.lever_graphs_n3130, 0.002); end
  def test_lever_graphs_o3130; assert_in_epsilon(7502.986528786012, worksheet.lever_graphs_o3130, 0.002); end
  def test_lever_graphs_p3130; assert_in_epsilon(8082.847368821118, worksheet.lever_graphs_p3130, 0.002); end
  def test_lever_graphs_q3130; assert_in_epsilon(8707.522176269893, worksheet.lever_graphs_q3130, 0.002); end
  def test_lever_graphs_d3131; assert_equal("Rural", worksheet.lever_graphs_d3131); end
  def test_lever_graphs_e3131; assert_in_epsilon(3.0, worksheet.lever_graphs_e3131, 0.002); end
  def test_lever_graphs_h3131; assert_equal("Developing", worksheet.lever_graphs_h3131); end
  def test_lever_graphs_i3131; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3131, 0.002); end
  def test_lever_graphs_j3131; assert_in_epsilon(4687.6232499200005, worksheet.lever_graphs_j3131, 0.002); end
  def test_lever_graphs_k3131; assert_in_epsilon(5175.514842870669, worksheet.lever_graphs_k3131, 0.002); end
  def test_lever_graphs_l3131; assert_in_epsilon(5575.499352090723, worksheet.lever_graphs_l3131, 0.002); end
  def test_lever_graphs_m3131; assert_in_epsilon(6006.396265675028, worksheet.lever_graphs_m3131, 0.002); end
  def test_lever_graphs_n3131; assert_in_epsilon(6470.5946180025485, worksheet.lever_graphs_n3131, 0.002); end
  def test_lever_graphs_o3131; assert_in_epsilon(6970.668077594469, worksheet.lever_graphs_o3131, 0.002); end
  def test_lever_graphs_p3131; assert_in_epsilon(7326.242205463032, worksheet.lever_graphs_p3131, 0.002); end
  def test_lever_graphs_q3131; assert_in_epsilon(7699.954187408435, worksheet.lever_graphs_q3131, 0.002); end
  def test_lever_graphs_d3132; assert_equal("Rural", worksheet.lever_graphs_d3132); end
  def test_lever_graphs_e3132; assert_in_epsilon(4.0, worksheet.lever_graphs_e3132, 0.002); end
  def test_lever_graphs_h3132; assert_equal("Developing", worksheet.lever_graphs_h3132); end
  def test_lever_graphs_i3132; assert_in_epsilon(4007.0, worksheet.lever_graphs_i3132, 0.002); end
  def test_lever_graphs_j3132; assert_in_epsilon(4687.6232499200005, worksheet.lever_graphs_j3132, 0.002); end
  def test_lever_graphs_k3132; assert_in_epsilon(5175.514842870669, worksheet.lever_graphs_k3132, 0.002); end
  def test_lever_graphs_l3132; assert_in_epsilon(5575.499352090723, worksheet.lever_graphs_l3132, 0.002); end
  def test_lever_graphs_m3132; assert_in_epsilon(6006.396265675028, worksheet.lever_graphs_m3132, 0.002); end
  def test_lever_graphs_n3132; assert_in_epsilon(6470.5946180025485, worksheet.lever_graphs_n3132, 0.002); end
  def test_lever_graphs_o3132; assert_in_epsilon(6800.659973643648, worksheet.lever_graphs_o3132, 0.002); end
  def test_lever_graphs_p3132; assert_in_epsilon(6972.3851600764265, worksheet.lever_graphs_p3132, 0.002); end
  def test_lever_graphs_q3132; assert_in_epsilon(7148.446622660293, worksheet.lever_graphs_q3132, 0.002); end
  def test_lever_graphs_d3133; assert_equal("International", worksheet.lever_graphs_d3133); end
  def test_lever_graphs_e3133; assert_in_delta(1.0, worksheet.lever_graphs_e3133, 0.002); end
  def test_lever_graphs_h3133; assert_equal("International slow growth", worksheet.lever_graphs_h3133); end
  def test_lever_graphs_i3133; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3133, 0.002); end
  def test_lever_graphs_j3133; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3133, 0.002); end
  def test_lever_graphs_k3133; assert_in_epsilon(3850.7126100605683, worksheet.lever_graphs_k3133, 0.002); end
  def test_lever_graphs_l3133; assert_in_epsilon(4255.859523652149, worksheet.lever_graphs_l3133, 0.002); end
  def test_lever_graphs_m3133; assert_in_epsilon(4703.63335808013, worksheet.lever_graphs_m3133, 0.002); end
  def test_lever_graphs_n3133; assert_in_epsilon(5198.519040463629, worksheet.lever_graphs_n3133, 0.002); end
  def test_lever_graphs_o3133; assert_in_epsilon(5745.473372757406, worksheet.lever_graphs_o3133, 0.002); end
  def test_lever_graphs_p3133; assert_in_epsilon(6349.97467935028, worksheet.lever_graphs_p3133, 0.002); end
  def test_lever_graphs_q3133; assert_in_epsilon(7018.077678260653, worksheet.lever_graphs_q3133, 0.002); end
  def test_lever_graphs_d3134; assert_equal("International", worksheet.lever_graphs_d3134); end
  def test_lever_graphs_e3134; assert_in_epsilon(2.0, worksheet.lever_graphs_e3134, 0.002); end
  def test_lever_graphs_h3134; assert_equal("International slow growth", worksheet.lever_graphs_h3134); end
  def test_lever_graphs_i3134; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3134, 0.002); end
  def test_lever_graphs_j3134; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3134, 0.002); end
  def test_lever_graphs_k3134; assert_in_epsilon(3735.420476881267, worksheet.lever_graphs_k3134, 0.002); end
  def test_lever_graphs_l3134; assert_in_epsilon(4004.829768603747, worksheet.lever_graphs_l3134, 0.002); end
  def test_lever_graphs_m3134; assert_in_epsilon(4293.6696349872645, worksheet.lever_graphs_m3134, 0.002); end
  def test_lever_graphs_n3134; assert_in_epsilon(4603.341465082821, worksheet.lever_graphs_n3134, 0.002); end
  def test_lever_graphs_o3134; assert_in_epsilon(4935.347720159124, worksheet.lever_graphs_o3134, 0.002); end
  def test_lever_graphs_p3134; assert_in_epsilon(5291.299223322255, worksheet.lever_graphs_p3134, 0.002); end
  def test_lever_graphs_q3134; assert_in_epsilon(5672.922974883723, worksheet.lever_graphs_q3134, 0.002); end
  def test_lever_graphs_d3135; assert_equal("International", worksheet.lever_graphs_d3135); end
  def test_lever_graphs_e3135; assert_in_epsilon(3.0, worksheet.lever_graphs_e3135, 0.002); end
  def test_lever_graphs_h3135; assert_equal("International slow growth", worksheet.lever_graphs_h3135); end
  def test_lever_graphs_i3135; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3135, 0.002); end
  def test_lever_graphs_j3135; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3135, 0.002); end
  def test_lever_graphs_k3135; assert_in_epsilon(3580.4299416660083, worksheet.lever_graphs_k3135, 0.002); end
  def test_lever_graphs_l3135; assert_in_epsilon(3679.3866707142247, worksheet.lever_graphs_l3135, 0.002); end
  def test_lever_graphs_m3135; assert_in_epsilon(3781.078388125142, worksheet.lever_graphs_m3135, 0.002); end
  def test_lever_graphs_n3135; assert_in_epsilon(3885.5806841230533, worksheet.lever_graphs_n3135, 0.002); end
  def test_lever_graphs_o3135; assert_in_epsilon(3992.9712381118948, worksheet.lever_graphs_o3135, 0.002); end
  def test_lever_graphs_p3135; assert_in_epsilon(4103.329876416461, worksheet.lever_graphs_p3135, 0.002); end
  def test_lever_graphs_q3135; assert_in_epsilon(4216.73863161949, worksheet.lever_graphs_q3135, 0.002); end
  def test_lever_graphs_d3136; assert_equal("International", worksheet.lever_graphs_d3136); end
  def test_lever_graphs_e3136; assert_in_epsilon(4.0, worksheet.lever_graphs_e3136, 0.002); end
  def test_lever_graphs_h3136; assert_equal("International slow growth", worksheet.lever_graphs_h3136); end
  def test_lever_graphs_i3136; assert_in_epsilon(3216.16253150423, worksheet.lever_graphs_i3136, 0.002); end
  def test_lever_graphs_j3136; assert_in_epsilon(3484.134643747568, worksheet.lever_graphs_j3136, 0.002); end
  def test_lever_graphs_k3136; assert_in_epsilon(3339.573235999637, worksheet.lever_graphs_k3136, 0.002); end
  def test_lever_graphs_l3136; assert_in_epsilon(3201.009874466012, worksheet.lever_graphs_l3136, 0.002); end
  def test_lever_graphs_m3136; assert_in_epsilon(3068.1956921845535, worksheet.lever_graphs_m3136, 0.002); end
  def test_lever_graphs_n3136; assert_in_epsilon(2940.8921480163353, worksheet.lever_graphs_n3136, 0.002); end
  def test_lever_graphs_o3136; assert_in_epsilon(2818.870598213428, worksheet.lever_graphs_o3136, 0.002); end
  def test_lever_graphs_p3136; assert_in_epsilon(2701.9118857629023, worksheet.lever_graphs_p3136, 0.002); end
  def test_lever_graphs_q3136; assert_in_epsilon(2589.8059467695034, worksheet.lever_graphs_q3136, 0.002); end
  def test_lever_graphs_d3137; assert_equal("International", worksheet.lever_graphs_d3137); end
  def test_lever_graphs_e3137; assert_in_delta(1.0, worksheet.lever_graphs_e3137, 0.002); end
  def test_lever_graphs_h3137; assert_equal("International fast growth", worksheet.lever_graphs_h3137); end
  def test_lever_graphs_i3137; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3137, 0.002); end
  def test_lever_graphs_j3137; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3137, 0.002); end
  def test_lever_graphs_k3137; assert_in_epsilon(373.2108483170911, worksheet.lever_graphs_k3137, 0.002); end
  def test_lever_graphs_l3137; assert_in_epsilon(484.5581698391798, worksheet.lever_graphs_l3137, 0.002); end
  def test_lever_graphs_m3137; assert_in_epsilon(629.1259244383089, worksheet.lever_graphs_m3137, 0.002); end
  def test_lever_graphs_n3137; assert_in_epsilon(816.8254162997989, worksheet.lever_graphs_n3137, 0.002); end
  def test_lever_graphs_o3137; assert_in_epsilon(1060.5249836255393, worksheet.lever_graphs_o3137, 0.002); end
  def test_lever_graphs_p3137; assert_in_epsilon(1376.9322286626152, worksheet.lever_graphs_p3137, 0.002); end
  def test_lever_graphs_q3137; assert_in_epsilon(1787.7394607416759, worksheet.lever_graphs_q3137, 0.002); end
  def test_lever_graphs_d3138; assert_equal("International", worksheet.lever_graphs_d3138); end
  def test_lever_graphs_e3138; assert_in_epsilon(2.0, worksheet.lever_graphs_e3138, 0.002); end
  def test_lever_graphs_h3138; assert_equal("International fast growth", worksheet.lever_graphs_h3138); end
  def test_lever_graphs_i3138; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3138, 0.002); end
  def test_lever_graphs_j3138; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3138, 0.002); end
  def test_lever_graphs_k3138; assert_in_epsilon(353.28137511784706, worksheet.lever_graphs_k3138, 0.002); end
  def test_lever_graphs_l3138; assert_in_epsilon(434.189069830633, worksheet.lever_graphs_l3138, 0.002); end
  def test_lever_graphs_m3138; assert_in_epsilon(533.6260602402377, worksheet.lever_graphs_m3138, 0.002); end
  def test_lever_graphs_n3138; assert_in_epsilon(655.8358833827733, worksheet.lever_graphs_n3138, 0.002); end
  def test_lever_graphs_o3138; assert_in_epsilon(806.0339214670718, worksheet.lever_graphs_o3138, 0.002); end
  def test_lever_graphs_p3138; assert_in_epsilon(990.6299716394122, worksheet.lever_graphs_p3138, 0.002); end
  def test_lever_graphs_q3138; assert_in_epsilon(1217.5017881680963, worksheet.lever_graphs_q3138, 0.002); end
  def test_lever_graphs_d3139; assert_equal("International", worksheet.lever_graphs_d3139); end
  def test_lever_graphs_e3139; assert_in_epsilon(3.0, worksheet.lever_graphs_e3139, 0.002); end
  def test_lever_graphs_h3139; assert_equal("International fast growth", worksheet.lever_graphs_h3139); end
  def test_lever_graphs_i3139; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3139, 0.002); end
  def test_lever_graphs_j3139; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3139, 0.002); end
  def test_lever_graphs_k3139; assert_in_epsilon(329.7444385185951, worksheet.lever_graphs_k3139, 0.002); end
  def test_lever_graphs_l3139; assert_in_epsilon(378.26169211608646, worksheet.lever_graphs_l3139, 0.002); end
  def test_lever_graphs_m3139; assert_in_epsilon(433.9175767916894, worksheet.lever_graphs_m3139, 0.002); end
  def test_lever_graphs_n3139; assert_in_epsilon(497.76244164579106, worksheet.lever_graphs_n3139, 0.002); end
  def test_lever_graphs_o3139; assert_in_epsilon(571.0011798672197, worksheet.lever_graphs_o3139, 0.002); end
  def test_lever_graphs_p3139; assert_in_epsilon(655.0159677209424, worksheet.lever_graphs_p3139, 0.002); end
  def test_lever_graphs_q3139; assert_in_epsilon(751.3923492577945, worksheet.lever_graphs_q3139, 0.002); end
  def test_lever_graphs_d3140; assert_equal("International", worksheet.lever_graphs_d3140); end
  def test_lever_graphs_e3140; assert_in_epsilon(4.0, worksheet.lever_graphs_e3140, 0.002); end
  def test_lever_graphs_h3140; assert_equal("International fast growth", worksheet.lever_graphs_h3140); end
  def test_lever_graphs_i3140; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_i3140, 0.002); end
  def test_lever_graphs_j3140; assert_in_epsilon(287.4501885868328, worksheet.lever_graphs_j3140, 0.002); end
  def test_lever_graphs_k3140; assert_in_epsilon(308.3096749216857, worksheet.lever_graphs_k3140, 0.002); end
  def test_lever_graphs_l3140; assert_in_epsilon(330.6828780235829, worksheet.lever_graphs_l3140, 0.002); end
  def test_lever_graphs_m3140; assert_in_epsilon(354.6796442431989, worksheet.lever_graphs_m3140, 0.002); end
  def test_lever_graphs_n3140; assert_in_epsilon(380.41779118515706, worksheet.lever_graphs_n3140, 0.002); end
  def test_lever_graphs_o3140; assert_in_epsilon(408.02368616046897, worksheet.lever_graphs_o3140, 0.002); end
  def test_lever_graphs_p3140; assert_in_epsilon(437.63286661571004, worksheet.lever_graphs_p3140, 0.002); end
  def test_lever_graphs_q3140; assert_in_epsilon(469.3907055850704, worksheet.lever_graphs_q3140, 0.002); end
  def test_lever_graphs_d3082; assert_equal("Type of travel", worksheet.lever_graphs_d3082); end
  def test_lever_graphs_e3082; assert_equal("Level", worksheet.lever_graphs_e3082); end
  def test_lever_graphs_f3082; assert_equal("..", worksheet.lever_graphs_f3082); end
  def test_lever_graphs_g3082; assert_equal("…", worksheet.lever_graphs_g3082); end
  def test_lever_graphs_h3082; assert_equal("Type of city", worksheet.lever_graphs_h3082); end
  def test_lever_graphs_i3082; assert_equal("2011", worksheet.lever_graphs_i3082); end
  def test_lever_graphs_j3082; assert_equal("2015", worksheet.lever_graphs_j3082); end
  def test_lever_graphs_k3082; assert_equal("2020", worksheet.lever_graphs_k3082); end
  def test_lever_graphs_l3082; assert_equal("2025", worksheet.lever_graphs_l3082); end
  def test_lever_graphs_m3082; assert_equal("2030", worksheet.lever_graphs_m3082); end
  def test_lever_graphs_n3082; assert_equal("2035", worksheet.lever_graphs_n3082); end
  def test_lever_graphs_o3082; assert_equal("2040", worksheet.lever_graphs_o3082); end
  def test_lever_graphs_p3082; assert_equal("2045", worksheet.lever_graphs_p3082); end
  def test_lever_graphs_q3082; assert_equal("2050", worksheet.lever_graphs_q3082); end
  def test_lever_graphs_d3083; assert_equal("Urban", worksheet.lever_graphs_d3083); end
  def test_lever_graphs_e3083; assert_in_delta(1.0, worksheet.lever_graphs_e3083, 0.002); end
  def test_lever_graphs_h3083; assert_equal("Automobile city", worksheet.lever_graphs_h3083); end
  def test_lever_graphs_i3083; assert_in_delta(0.0, (worksheet.lever_graphs_i3083||0), 0.002); end
  def test_lever_graphs_j3083; assert_in_delta(0.0068, worksheet.lever_graphs_j3083, 0.002); end
  def test_lever_graphs_k3083; assert_in_delta(0.0048, worksheet.lever_graphs_k3083, 0.002); end
  def test_lever_graphs_l3083; assert_in_delta(0.0048, worksheet.lever_graphs_l3083, 0.002); end
  def test_lever_graphs_m3083; assert_in_delta(0.0019, worksheet.lever_graphs_m3083, 0.002); end
  def test_lever_graphs_n3083; assert_in_delta(0.0019, worksheet.lever_graphs_n3083, 0.002); end
  def test_lever_graphs_o3083; assert_in_delta(0.0019, worksheet.lever_graphs_o3083, 0.002); end
  def test_lever_graphs_p3083; assert_in_delta(0.0019, worksheet.lever_graphs_p3083, 0.002); end
  def test_lever_graphs_q3083; assert_in_delta(0.0002, worksheet.lever_graphs_q3083, 0.002); end
  def test_lever_graphs_d3084; assert_equal("Urban", worksheet.lever_graphs_d3084); end
  def test_lever_graphs_e3084; assert_in_epsilon(2.0, worksheet.lever_graphs_e3084, 0.002); end
  def test_lever_graphs_h3084; assert_equal("Automobile city", worksheet.lever_graphs_h3084); end
  def test_lever_graphs_i3084; assert_in_delta(0.0, (worksheet.lever_graphs_i3084||0), 0.002); end
  def test_lever_graphs_j3084; assert_in_delta(0.0068, worksheet.lever_graphs_j3084, 0.002); end
  def test_lever_graphs_k3084; assert_in_delta(0.0048, worksheet.lever_graphs_k3084, 0.002); end
  def test_lever_graphs_l3084; assert_in_delta(0.0019, worksheet.lever_graphs_l3084, 0.002); end
  def test_lever_graphs_m3084; assert_in_delta(0.0019, worksheet.lever_graphs_m3084, 0.002); end
  def test_lever_graphs_n3084; assert_in_delta(0.0019, worksheet.lever_graphs_n3084, 0.002); end
  def test_lever_graphs_o3084; assert_in_delta(0.0019, worksheet.lever_graphs_o3084, 0.002); end
  def test_lever_graphs_p3084; assert_in_delta(-0.002, worksheet.lever_graphs_p3084, 0.002); end
  def test_lever_graphs_q3084; assert_in_delta(-0.002, worksheet.lever_graphs_q3084, 0.002); end
  def test_lever_graphs_d3085; assert_equal("Urban", worksheet.lever_graphs_d3085); end
  def test_lever_graphs_e3085; assert_in_epsilon(3.0, worksheet.lever_graphs_e3085, 0.002); end
  def test_lever_graphs_h3085; assert_equal("Automobile city", worksheet.lever_graphs_h3085); end
  def test_lever_graphs_i3085; assert_in_delta(0.0, (worksheet.lever_graphs_i3085||0), 0.002); end
  def test_lever_graphs_j3085; assert_in_delta(0.0068, worksheet.lever_graphs_j3085, 0.002); end
  def test_lever_graphs_k3085; assert_in_delta(0.0028, worksheet.lever_graphs_k3085, 0.002); end
  def test_lever_graphs_l3085; assert_in_delta(0.0015, worksheet.lever_graphs_l3085, 0.002); end
  def test_lever_graphs_m3085; assert_in_delta(0.0, (worksheet.lever_graphs_m3085||0), 0.002); end
  def test_lever_graphs_n3085; assert_in_delta(-0.002, worksheet.lever_graphs_n3085, 0.002); end
  def test_lever_graphs_o3085; assert_in_delta(-0.003, worksheet.lever_graphs_o3085, 0.002); end
  def test_lever_graphs_p3085; assert_in_delta(-0.004, worksheet.lever_graphs_p3085, 0.002); end
  def test_lever_graphs_q3085; assert_in_delta(-0.005, worksheet.lever_graphs_q3085, 0.002); end
  def test_lever_graphs_d3086; assert_equal("Urban", worksheet.lever_graphs_d3086); end
  def test_lever_graphs_e3086; assert_in_epsilon(4.0, worksheet.lever_graphs_e3086, 0.002); end
  def test_lever_graphs_h3086; assert_equal("Automobile city", worksheet.lever_graphs_h3086); end
  def test_lever_graphs_i3086; assert_in_delta(0.0, (worksheet.lever_graphs_i3086||0), 0.002); end
  def test_lever_graphs_j3086; assert_in_delta(0.0068, worksheet.lever_graphs_j3086, 0.002); end
  def test_lever_graphs_k3086; assert_in_delta(0.002, worksheet.lever_graphs_k3086, 0.002); end
  def test_lever_graphs_l3086; assert_in_delta(0.001, worksheet.lever_graphs_l3086, 0.002); end
  def test_lever_graphs_m3086; assert_in_delta(-0.001, worksheet.lever_graphs_m3086, 0.002); end
  def test_lever_graphs_n3086; assert_in_delta(-0.003, worksheet.lever_graphs_n3086, 0.002); end
  def test_lever_graphs_o3086; assert_in_delta(-0.004, worksheet.lever_graphs_o3086, 0.002); end
  def test_lever_graphs_p3086; assert_in_delta(-0.005, worksheet.lever_graphs_p3086, 0.002); end
  def test_lever_graphs_q3086; assert_in_delta(-0.006, worksheet.lever_graphs_q3086, 0.002); end
  def test_lever_graphs_d3087; assert_equal("Urban", worksheet.lever_graphs_d3087); end
  def test_lever_graphs_e3087; assert_in_delta(1.0, worksheet.lever_graphs_e3087, 0.002); end
  def test_lever_graphs_h3087; assert_equal("Transit city", worksheet.lever_graphs_h3087); end
  def test_lever_graphs_i3087; assert_in_delta(0.0, (worksheet.lever_graphs_i3087||0), 0.002); end
  def test_lever_graphs_j3087; assert_in_delta(0.0275, worksheet.lever_graphs_j3087, 0.002); end
  def test_lever_graphs_k3087; assert_in_delta(0.015, worksheet.lever_graphs_k3087, 0.002); end
  def test_lever_graphs_l3087; assert_in_delta(0.012, worksheet.lever_graphs_l3087, 0.002); end
  def test_lever_graphs_m3087; assert_in_delta(0.0075, worksheet.lever_graphs_m3087, 0.002); end
  def test_lever_graphs_n3087; assert_in_delta(0.0075, worksheet.lever_graphs_n3087, 0.002); end
  def test_lever_graphs_o3087; assert_in_delta(0.005, worksheet.lever_graphs_o3087, 0.002); end
  def test_lever_graphs_p3087; assert_in_delta(0.005, worksheet.lever_graphs_p3087, 0.002); end
  def test_lever_graphs_q3087; assert_in_delta(0.002, worksheet.lever_graphs_q3087, 0.002); end
  def test_lever_graphs_d3088; assert_equal("Urban", worksheet.lever_graphs_d3088); end
  def test_lever_graphs_e3088; assert_in_epsilon(2.0, worksheet.lever_graphs_e3088, 0.002); end
  def test_lever_graphs_h3088; assert_equal("Transit city", worksheet.lever_graphs_h3088); end
  def test_lever_graphs_i3088; assert_in_delta(0.0, (worksheet.lever_graphs_i3088||0), 0.002); end
  def test_lever_graphs_j3088; assert_in_delta(0.0275, worksheet.lever_graphs_j3088, 0.002); end
  def test_lever_graphs_k3088; assert_in_delta(0.015, worksheet.lever_graphs_k3088, 0.002); end
  def test_lever_graphs_l3088; assert_in_delta(0.0075, worksheet.lever_graphs_l3088, 0.002); end
  def test_lever_graphs_m3088; assert_in_delta(0.0075, worksheet.lever_graphs_m3088, 0.002); end
  def test_lever_graphs_n3088; assert_in_delta(0.005, worksheet.lever_graphs_n3088, 0.002); end
  def test_lever_graphs_o3088; assert_in_delta(0.005, worksheet.lever_graphs_o3088, 0.002); end
  def test_lever_graphs_p3088; assert_in_delta(0.002, worksheet.lever_graphs_p3088, 0.002); end
  def test_lever_graphs_q3088; assert_in_delta(0.0002, worksheet.lever_graphs_q3088, 0.002); end
  def test_lever_graphs_d3089; assert_equal("Urban", worksheet.lever_graphs_d3089); end
  def test_lever_graphs_e3089; assert_in_epsilon(3.0, worksheet.lever_graphs_e3089, 0.002); end
  def test_lever_graphs_h3089; assert_equal("Transit city", worksheet.lever_graphs_h3089); end
  def test_lever_graphs_i3089; assert_in_delta(0.0, (worksheet.lever_graphs_i3089||0), 0.002); end
  def test_lever_graphs_j3089; assert_in_delta(0.0275, worksheet.lever_graphs_j3089, 0.002); end
  def test_lever_graphs_k3089; assert_in_delta(0.013, worksheet.lever_graphs_k3089, 0.002); end
  def test_lever_graphs_l3089; assert_in_delta(0.0068, worksheet.lever_graphs_l3089, 0.002); end
  def test_lever_graphs_m3089; assert_in_delta(0.004, worksheet.lever_graphs_m3089, 0.002); end
  def test_lever_graphs_n3089; assert_in_delta(0.004, worksheet.lever_graphs_n3089, 0.002); end
  def test_lever_graphs_o3089; assert_in_delta(0.002, worksheet.lever_graphs_o3089, 0.002); end
  def test_lever_graphs_p3089; assert_in_delta(0.002, worksheet.lever_graphs_p3089, 0.002); end
  def test_lever_graphs_q3089; assert_in_delta(0.0002, worksheet.lever_graphs_q3089, 0.002); end
  def test_lever_graphs_d3090; assert_equal("Urban", worksheet.lever_graphs_d3090); end
  def test_lever_graphs_e3090; assert_in_epsilon(4.0, worksheet.lever_graphs_e3090, 0.002); end
  def test_lever_graphs_h3090; assert_equal("Transit city", worksheet.lever_graphs_h3090); end
  def test_lever_graphs_i3090; assert_in_delta(0.0, (worksheet.lever_graphs_i3090||0), 0.002); end
  def test_lever_graphs_j3090; assert_in_delta(0.0275, worksheet.lever_graphs_j3090, 0.002); end
  def test_lever_graphs_k3090; assert_in_delta(0.013, worksheet.lever_graphs_k3090, 0.002); end
  def test_lever_graphs_l3090; assert_in_delta(0.005, worksheet.lever_graphs_l3090, 0.002); end
  def test_lever_graphs_m3090; assert_in_delta(0.004, worksheet.lever_graphs_m3090, 0.002); end
  def test_lever_graphs_n3090; assert_in_delta(0.002, worksheet.lever_graphs_n3090, 0.002); end
  def test_lever_graphs_o3090; assert_in_delta(0.001, worksheet.lever_graphs_o3090, 0.002); end
  def test_lever_graphs_p3090; assert_in_delta(0.0005, worksheet.lever_graphs_p3090, 0.002); end
  def test_lever_graphs_q3090; assert_in_delta(0.0002, worksheet.lever_graphs_q3090, 0.002); end
  def test_lever_graphs_d3091; assert_equal("Urban", worksheet.lever_graphs_d3091); end
  def test_lever_graphs_e3091; assert_in_delta(1.0, worksheet.lever_graphs_e3091, 0.002); end
  def test_lever_graphs_h3091; assert_equal("Booming city", worksheet.lever_graphs_h3091); end
  def test_lever_graphs_i3091; assert_in_delta(0.0, (worksheet.lever_graphs_i3091||0), 0.002); end
  def test_lever_graphs_j3091; assert_in_delta(0.0325, worksheet.lever_graphs_j3091, 0.002); end
  def test_lever_graphs_k3091; assert_in_delta(0.025, worksheet.lever_graphs_k3091, 0.002); end
  def test_lever_graphs_l3091; assert_in_delta(0.01, worksheet.lever_graphs_l3091, 0.002); end
  def test_lever_graphs_m3091; assert_in_delta(0.0075, worksheet.lever_graphs_m3091, 0.002); end
  def test_lever_graphs_n3091; assert_in_delta(0.005, worksheet.lever_graphs_n3091, 0.002); end
  def test_lever_graphs_o3091; assert_in_delta(0.0025, worksheet.lever_graphs_o3091, 0.002); end
  def test_lever_graphs_p3091; assert_in_delta(0.0025, worksheet.lever_graphs_p3091, 0.002); end
  def test_lever_graphs_q3091; assert_in_delta(0.0025, worksheet.lever_graphs_q3091, 0.002); end
  def test_lever_graphs_d3092; assert_equal("Urban", worksheet.lever_graphs_d3092); end
  def test_lever_graphs_e3092; assert_in_epsilon(2.0, worksheet.lever_graphs_e3092, 0.002); end
  def test_lever_graphs_h3092; assert_equal("Booming city", worksheet.lever_graphs_h3092); end
  def test_lever_graphs_i3092; assert_in_delta(0.0, (worksheet.lever_graphs_i3092||0), 0.002); end
  def test_lever_graphs_j3092; assert_in_delta(0.0325, worksheet.lever_graphs_j3092, 0.002); end
  def test_lever_graphs_k3092; assert_in_delta(0.015, worksheet.lever_graphs_k3092, 0.002); end
  def test_lever_graphs_l3092; assert_in_delta(0.01, worksheet.lever_graphs_l3092, 0.002); end
  def test_lever_graphs_m3092; assert_in_delta(0.0075, worksheet.lever_graphs_m3092, 0.002); end
  def test_lever_graphs_n3092; assert_in_delta(0.005, worksheet.lever_graphs_n3092, 0.002); end
  def test_lever_graphs_o3092; assert_in_delta(0.0025, worksheet.lever_graphs_o3092, 0.002); end
  def test_lever_graphs_p3092; assert_in_delta(0.001, worksheet.lever_graphs_p3092, 0.002); end
  def test_lever_graphs_q3092; assert_in_delta(0.001, worksheet.lever_graphs_q3092, 0.002); end
  def test_lever_graphs_d3093; assert_equal("Urban", worksheet.lever_graphs_d3093); end
  def test_lever_graphs_e3093; assert_in_epsilon(3.0, worksheet.lever_graphs_e3093, 0.002); end
  def test_lever_graphs_h3093; assert_equal("Booming city", worksheet.lever_graphs_h3093); end
  def test_lever_graphs_i3093; assert_in_delta(0.0, (worksheet.lever_graphs_i3093||0), 0.002); end
  def test_lever_graphs_j3093; assert_in_delta(0.0325, worksheet.lever_graphs_j3093, 0.002); end
  def test_lever_graphs_k3093; assert_in_delta(0.01, worksheet.lever_graphs_k3093, 0.002); end
  def test_lever_graphs_l3093; assert_in_delta(0.0075, worksheet.lever_graphs_l3093, 0.002); end
  def test_lever_graphs_m3093; assert_in_delta(0.006, worksheet.lever_graphs_m3093, 0.002); end
  def test_lever_graphs_n3093; assert_in_delta(0.003, worksheet.lever_graphs_n3093, 0.002); end
  def test_lever_graphs_o3093; assert_in_delta(0.002, worksheet.lever_graphs_o3093, 0.002); end
  def test_lever_graphs_p3093; assert_in_delta(0.001, worksheet.lever_graphs_p3093, 0.002); end
  def test_lever_graphs_q3093; assert_in_delta(0.0005, worksheet.lever_graphs_q3093, 0.002); end
  def test_lever_graphs_d3094; assert_equal("Urban", worksheet.lever_graphs_d3094); end
  def test_lever_graphs_e3094; assert_in_epsilon(4.0, worksheet.lever_graphs_e3094, 0.002); end
  def test_lever_graphs_h3094; assert_equal("Booming city", worksheet.lever_graphs_h3094); end
  def test_lever_graphs_i3094; assert_in_delta(0.0, (worksheet.lever_graphs_i3094||0), 0.002); end
  def test_lever_graphs_j3094; assert_in_delta(0.0325, worksheet.lever_graphs_j3094, 0.002); end
  def test_lever_graphs_k3094; assert_in_delta(0.0075, worksheet.lever_graphs_k3094, 0.002); end
  def test_lever_graphs_l3094; assert_in_delta(0.005, worksheet.lever_graphs_l3094, 0.002); end
  def test_lever_graphs_m3094; assert_in_delta(0.0035, worksheet.lever_graphs_m3094, 0.002); end
  def test_lever_graphs_n3094; assert_in_delta(0.0025, worksheet.lever_graphs_n3094, 0.002); end
  def test_lever_graphs_o3094; assert_in_delta(0.001, worksheet.lever_graphs_o3094, 0.002); end
  def test_lever_graphs_p3094; assert_in_delta(0.0002, worksheet.lever_graphs_p3094, 0.002); end
  def test_lever_graphs_q3094; assert_in_delta(0.0002, worksheet.lever_graphs_q3094, 0.002); end
  def test_lever_graphs_d3095; assert_equal("Rural", worksheet.lever_graphs_d3095); end
  def test_lever_graphs_e3095; assert_in_delta(1.0, worksheet.lever_graphs_e3095, 0.002); end
  def test_lever_graphs_h3095; assert_equal("Developed", worksheet.lever_graphs_h3095); end
  def test_lever_graphs_i3095; assert_in_delta(0.0, (worksheet.lever_graphs_i3095||0), 0.002); end
  def test_lever_graphs_j3095; assert_in_delta(0.01, worksheet.lever_graphs_j3095, 0.002); end
  def test_lever_graphs_k3095; assert_in_delta(0.0093, worksheet.lever_graphs_k3095, 0.002); end
  def test_lever_graphs_l3095; assert_in_delta(0.0093, worksheet.lever_graphs_l3095, 0.002); end
  def test_lever_graphs_m3095; assert_in_delta(0.0093, worksheet.lever_graphs_m3095, 0.002); end
  def test_lever_graphs_n3095; assert_in_delta(0.0093, worksheet.lever_graphs_n3095, 0.002); end
  def test_lever_graphs_o3095; assert_in_delta(0.0093, worksheet.lever_graphs_o3095, 0.002); end
  def test_lever_graphs_p3095; assert_in_delta(0.005, worksheet.lever_graphs_p3095, 0.002); end
  def test_lever_graphs_q3095; assert_in_delta(0.005, worksheet.lever_graphs_q3095, 0.002); end
  def test_lever_graphs_d3096; assert_equal("Rural", worksheet.lever_graphs_d3096); end
  def test_lever_graphs_e3096; assert_in_epsilon(2.0, worksheet.lever_graphs_e3096, 0.002); end
  def test_lever_graphs_h3096; assert_equal("Developed", worksheet.lever_graphs_h3096); end
  def test_lever_graphs_i3096; assert_in_delta(0.0, (worksheet.lever_graphs_i3096||0), 0.002); end
  def test_lever_graphs_j3096; assert_in_delta(0.01, worksheet.lever_graphs_j3096, 0.002); end
  def test_lever_graphs_k3096; assert_in_delta(0.0075, worksheet.lever_graphs_k3096, 0.002); end
  def test_lever_graphs_l3096; assert_in_delta(0.0075, worksheet.lever_graphs_l3096, 0.002); end
  def test_lever_graphs_m3096; assert_in_delta(0.0075, worksheet.lever_graphs_m3096, 0.002); end
  def test_lever_graphs_n3096; assert_in_delta(0.0075, worksheet.lever_graphs_n3096, 0.002); end
  def test_lever_graphs_o3096; assert_in_delta(0.0025, worksheet.lever_graphs_o3096, 0.002); end
  def test_lever_graphs_p3096; assert_in_delta(0.0025, worksheet.lever_graphs_p3096, 0.002); end
  def test_lever_graphs_q3096; assert_in_delta(0.0025, worksheet.lever_graphs_q3096, 0.002); end
  def test_lever_graphs_d3097; assert_equal("Rural", worksheet.lever_graphs_d3097); end
  def test_lever_graphs_e3097; assert_in_epsilon(3.0, worksheet.lever_graphs_e3097, 0.002); end
  def test_lever_graphs_h3097; assert_equal("Developed", worksheet.lever_graphs_h3097); end
  def test_lever_graphs_i3097; assert_in_delta(0.0, (worksheet.lever_graphs_i3097||0), 0.002); end
  def test_lever_graphs_j3097; assert_in_delta(0.01, worksheet.lever_graphs_j3097, 0.002); end
  def test_lever_graphs_k3097; assert_in_delta(0.005, worksheet.lever_graphs_k3097, 0.002); end
  def test_lever_graphs_l3097; assert_in_delta(0.005, worksheet.lever_graphs_l3097, 0.002); end
  def test_lever_graphs_m3097; assert_in_delta(0.0025, worksheet.lever_graphs_m3097, 0.002); end
  def test_lever_graphs_n3097; assert_in_delta(0.0025, worksheet.lever_graphs_n3097, 0.002); end
  def test_lever_graphs_o3097; assert_in_delta(0.0015, worksheet.lever_graphs_o3097, 0.002); end
  def test_lever_graphs_p3097; assert_in_delta(0.0, (worksheet.lever_graphs_p3097||0), 0.002); end
  def test_lever_graphs_q3097; assert_in_delta(-0.0015, worksheet.lever_graphs_q3097, 0.002); end
  def test_lever_graphs_d3098; assert_equal("Rural", worksheet.lever_graphs_d3098); end
  def test_lever_graphs_e3098; assert_in_epsilon(4.0, worksheet.lever_graphs_e3098, 0.002); end
  def test_lever_graphs_h3098; assert_equal("Developing", worksheet.lever_graphs_h3098); end
  def test_lever_graphs_i3098; assert_in_delta(0.0, (worksheet.lever_graphs_i3098||0), 0.002); end
  def test_lever_graphs_j3098; assert_in_delta(0.04, worksheet.lever_graphs_j3098, 0.002); end
  def test_lever_graphs_k3098; assert_in_delta(0.02, worksheet.lever_graphs_k3098, 0.002); end
  def test_lever_graphs_l3098; assert_in_delta(0.015, worksheet.lever_graphs_l3098, 0.002); end
  def test_lever_graphs_m3098; assert_in_delta(0.015, worksheet.lever_graphs_m3098, 0.002); end
  def test_lever_graphs_n3098; assert_in_delta(0.015, worksheet.lever_graphs_n3098, 0.002); end
  def test_lever_graphs_o3098; assert_in_delta(0.01, worksheet.lever_graphs_o3098, 0.002); end
  def test_lever_graphs_p3098; assert_in_delta(0.005, worksheet.lever_graphs_p3098, 0.002); end
  def test_lever_graphs_q3098; assert_in_delta(0.005, worksheet.lever_graphs_q3098, 0.002); end
  def test_lever_graphs_d3099; assert_equal("International", worksheet.lever_graphs_d3099); end
  def test_lever_graphs_e3099; assert_in_delta(1.0, worksheet.lever_graphs_e3099, 0.002); end
  def test_lever_graphs_h3099; assert_equal("International slow growth", worksheet.lever_graphs_h3099); end
  def test_lever_graphs_i3099; assert_in_delta(0.0, (worksheet.lever_graphs_i3099||0), 0.002); end
  def test_lever_graphs_j3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3099, 0.002); end
  def test_lever_graphs_k3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_k3099, 0.002); end
  def test_lever_graphs_l3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_l3099, 0.002); end
  def test_lever_graphs_m3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_m3099, 0.002); end
  def test_lever_graphs_n3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_n3099, 0.002); end
  def test_lever_graphs_o3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_o3099, 0.002); end
  def test_lever_graphs_p3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_p3099, 0.002); end
  def test_lever_graphs_q3099; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_q3099, 0.002); end
  def test_lever_graphs_d3100; assert_equal("International", worksheet.lever_graphs_d3100); end
  def test_lever_graphs_e3100; assert_in_epsilon(2.0, worksheet.lever_graphs_e3100, 0.002); end
  def test_lever_graphs_h3100; assert_equal("International slow growth", worksheet.lever_graphs_h3100); end
  def test_lever_graphs_i3100; assert_in_delta(0.0, (worksheet.lever_graphs_i3100||0), 0.002); end
  def test_lever_graphs_j3100; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3100, 0.002); end
  def test_lever_graphs_k3100; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_k3100, 0.002); end
  def test_lever_graphs_l3100; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_l3100, 0.002); end
  def test_lever_graphs_m3100; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_m3100, 0.002); end
  def test_lever_graphs_n3100; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_n3100, 0.002); end
  def test_lever_graphs_o3100; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_o3100, 0.002); end
  def test_lever_graphs_p3100; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_p3100, 0.002); end
  def test_lever_graphs_q3100; assert_in_delta(0.014025585434336074, worksheet.lever_graphs_q3100, 0.002); end
  def test_lever_graphs_d3101; assert_equal("International", worksheet.lever_graphs_d3101); end
  def test_lever_graphs_e3101; assert_in_epsilon(3.0, worksheet.lever_graphs_e3101, 0.002); end
  def test_lever_graphs_h3101; assert_equal("International slow growth", worksheet.lever_graphs_h3101); end
  def test_lever_graphs_i3101; assert_in_delta(0.0, (worksheet.lever_graphs_i3101||0), 0.002); end
  def test_lever_graphs_j3101; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3101, 0.002); end
  def test_lever_graphs_k3101; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_k3101, 0.002); end
  def test_lever_graphs_l3101; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_l3101, 0.002); end
  def test_lever_graphs_m3101; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_m3101, 0.002); end
  def test_lever_graphs_n3101; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_n3101, 0.002); end
  def test_lever_graphs_o3101; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_o3101, 0.002); end
  def test_lever_graphs_p3101; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_p3101, 0.002); end
  def test_lever_graphs_q3101; assert_in_delta(0.005467529496878232, worksheet.lever_graphs_q3101, 0.002); end
  def test_lever_graphs_d3102; assert_equal("International", worksheet.lever_graphs_d3102); end
  def test_lever_graphs_e3102; assert_in_epsilon(4.0, worksheet.lever_graphs_e3102, 0.002); end
  def test_lever_graphs_h3102; assert_equal("International slow growth", worksheet.lever_graphs_h3102); end
  def test_lever_graphs_i3102; assert_in_delta(0.0, (worksheet.lever_graphs_i3102||0), 0.002); end
  def test_lever_graphs_j3102; assert_in_delta(0.020209199716660686, worksheet.lever_graphs_j3102, 0.002); end
  def test_lever_graphs_k3102; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_k3102, 0.002); end
  def test_lever_graphs_l3102; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_l3102, 0.002); end
  def test_lever_graphs_m3102; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_m3102, 0.002); end
  def test_lever_graphs_n3102; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_n3102, 0.002); end
  def test_lever_graphs_o3102; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_o3102, 0.002); end
  def test_lever_graphs_p3102; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_p3102, 0.002); end
  def test_lever_graphs_q3102; assert_in_delta(-0.008439521468515676, worksheet.lever_graphs_q3102, 0.002); end
  def test_lever_graphs_d3103; assert_equal("International", worksheet.lever_graphs_d3103); end
  def test_lever_graphs_e3103; assert_in_delta(1.0, worksheet.lever_graphs_e3103, 0.002); end
  def test_lever_graphs_h3103; assert_equal("International fast growth", worksheet.lever_graphs_h3103); end
  def test_lever_graphs_i3103; assert_in_delta(0.0, (worksheet.lever_graphs_i3103||0), 0.002); end
  def test_lever_graphs_j3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3103, 0.002); end
  def test_lever_graphs_k3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_k3103, 0.002); end
  def test_lever_graphs_l3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_l3103, 0.002); end
  def test_lever_graphs_m3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_m3103, 0.002); end
  def test_lever_graphs_n3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_n3103, 0.002); end
  def test_lever_graphs_o3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_o3103, 0.002); end
  def test_lever_graphs_p3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_p3103, 0.002); end
  def test_lever_graphs_q3103; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_q3103, 0.002); end
  def test_lever_graphs_d3104; assert_equal("International", worksheet.lever_graphs_d3104); end
  def test_lever_graphs_e3104; assert_in_epsilon(2.0, worksheet.lever_graphs_e3104, 0.002); end
  def test_lever_graphs_h3104; assert_equal("International fast growth", worksheet.lever_graphs_h3104); end
  def test_lever_graphs_i3104; assert_in_delta(0.0, (worksheet.lever_graphs_i3104||0), 0.002); end
  def test_lever_graphs_j3104; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3104, 0.002); end
  def test_lever_graphs_k3104; assert_in_delta(0.042105358044495, worksheet.lever_graphs_k3104, 0.002); end
  def test_lever_graphs_l3104; assert_in_delta(0.042105358044495, worksheet.lever_graphs_l3104, 0.002); end
  def test_lever_graphs_m3104; assert_in_delta(0.042105358044495, worksheet.lever_graphs_m3104, 0.002); end
  def test_lever_graphs_n3104; assert_in_delta(0.042105358044495, worksheet.lever_graphs_n3104, 0.002); end
  def test_lever_graphs_o3104; assert_in_delta(0.042105358044495, worksheet.lever_graphs_o3104, 0.002); end
  def test_lever_graphs_p3104; assert_in_delta(0.042105358044495, worksheet.lever_graphs_p3104, 0.002); end
  def test_lever_graphs_q3104; assert_in_delta(0.042105358044495, worksheet.lever_graphs_q3104, 0.002); end
  def test_lever_graphs_d3105; assert_equal("International", worksheet.lever_graphs_d3105); end
  def test_lever_graphs_e3105; assert_in_epsilon(3.0, worksheet.lever_graphs_e3105, 0.002); end
  def test_lever_graphs_h3105; assert_equal("International fast growth", worksheet.lever_graphs_h3105); end
  def test_lever_graphs_i3105; assert_in_delta(0.0, (worksheet.lever_graphs_i3105||0), 0.002); end
  def test_lever_graphs_j3105; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3105, 0.002); end
  def test_lever_graphs_k3105; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_k3105, 0.002); end
  def test_lever_graphs_l3105; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_l3105, 0.002); end
  def test_lever_graphs_m3105; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_m3105, 0.002); end
  def test_lever_graphs_n3105; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_n3105, 0.002); end
  def test_lever_graphs_o3105; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_o3105, 0.002); end
  def test_lever_graphs_p3105; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_p3105, 0.002); end
  def test_lever_graphs_q3105; assert_in_delta(0.02783399189930691, worksheet.lever_graphs_q3105, 0.002); end
  def test_lever_graphs_d3106; assert_equal("International", worksheet.lever_graphs_d3106); end
  def test_lever_graphs_e3106; assert_in_epsilon(4.0, worksheet.lever_graphs_e3106, 0.002); end
  def test_lever_graphs_h3106; assert_equal("International fast growth", worksheet.lever_graphs_h3106); end
  def test_lever_graphs_i3106; assert_in_delta(0.0, (worksheet.lever_graphs_i3106||0), 0.002); end
  def test_lever_graphs_j3106; assert_in_delta(0.053606235550379244, worksheet.lever_graphs_j3106, 0.002); end
  def test_lever_graphs_k3106; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_k3106, 0.002); end
  def test_lever_graphs_l3106; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_l3106, 0.002); end
  def test_lever_graphs_m3106; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_m3106, 0.002); end
  def test_lever_graphs_n3106; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_n3106, 0.002); end
  def test_lever_graphs_o3106; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_o3106, 0.002); end
  def test_lever_graphs_p3106; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_p3106, 0.002); end
  def test_lever_graphs_q3106; assert_in_delta(0.014109639999340118, worksheet.lever_graphs_q3106, 0.002); end
  def test_lever_graphs_d3144; assert_equal("Type of travel", worksheet.lever_graphs_d3144); end
  def test_lever_graphs_e3144; assert_equal("Level", worksheet.lever_graphs_e3144); end
  def test_lever_graphs_f3144; assert_equal("Notes", worksheet.lever_graphs_f3144); end
  def test_lever_graphs_g3144; assert_equal("…", worksheet.lever_graphs_g3144); end
  def test_lever_graphs_h3144; assert_equal("Type of city", worksheet.lever_graphs_h3144); end
  def test_lever_graphs_i3144; assert_equal("2011", worksheet.lever_graphs_i3144); end
  def test_lever_graphs_j3144; assert_equal("2015", worksheet.lever_graphs_j3144); end
  def test_lever_graphs_k3144; assert_equal("2020", worksheet.lever_graphs_k3144); end
  def test_lever_graphs_l3144; assert_equal("2025", worksheet.lever_graphs_l3144); end
  def test_lever_graphs_m3144; assert_equal("2030", worksheet.lever_graphs_m3144); end
  def test_lever_graphs_n3144; assert_equal("2035", worksheet.lever_graphs_n3144); end
  def test_lever_graphs_o3144; assert_equal("2040", worksheet.lever_graphs_o3144); end
  def test_lever_graphs_p3144; assert_equal("2045", worksheet.lever_graphs_p3144); end
  def test_lever_graphs_q3144; assert_equal("2050", worksheet.lever_graphs_q3144); end
  def test_lever_graphs_d3145; assert_equal("Urban", worksheet.lever_graphs_d3145); end
  def test_lever_graphs_e3145; assert_in_delta(1.0, worksheet.lever_graphs_e3145, 0.002); end
  def test_lever_graphs_h3145; assert_equal("Automobile city", worksheet.lever_graphs_h3145); end
  def test_lever_graphs_i3145; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3145, 0.002); end
  def test_lever_graphs_j3145; assert_in_epsilon(4788455688498.626, worksheet.lever_graphs_j3145, 0.002); end
  def test_lever_graphs_k3145; assert_in_epsilon(4904487193583.895, worksheet.lever_graphs_k3145, 0.002); end
  def test_lever_graphs_l3145; assert_in_epsilon(5023330317079.811, worksheet.lever_graphs_l3145, 0.002); end
  def test_lever_graphs_m3145; assert_in_epsilon(5071233642194.189, worksheet.lever_graphs_m3145, 0.002); end
  def test_lever_graphs_n3145; assert_in_epsilon(5119593781496.003, worksheet.lever_graphs_n3145, 0.002); end
  def test_lever_graphs_o3145; assert_in_epsilon(5168415091242.388, worksheet.lever_graphs_o3145, 0.002); end
  def test_lever_graphs_p3145; assert_in_epsilon(5217701969232.4795, worksheet.lever_graphs_p3145, 0.002); end
  def test_lever_graphs_q3145; assert_in_epsilon(5222921758699.957, worksheet.lever_graphs_q3145, 0.002); end
  def test_lever_graphs_d3146; assert_equal("Urban", worksheet.lever_graphs_d3146); end
  def test_lever_graphs_e3146; assert_in_epsilon(2.0, worksheet.lever_graphs_e3146, 0.002); end
  def test_lever_graphs_h3146; assert_equal("Automobile city", worksheet.lever_graphs_h3146); end
  def test_lever_graphs_i3146; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3146, 0.002); end
  def test_lever_graphs_j3146; assert_in_epsilon(4788455688498.626, worksheet.lever_graphs_j3146, 0.002); end
  def test_lever_graphs_k3146; assert_in_epsilon(4904487193583.895, worksheet.lever_graphs_k3146, 0.002); end
  def test_lever_graphs_l3146; assert_in_epsilon(4951257210629.107, worksheet.lever_graphs_l3146, 0.002); end
  def test_lever_graphs_m3146; assert_in_epsilon(4998473234444.869, worksheet.lever_graphs_m3146, 0.002); end
  def test_lever_graphs_n3146; assert_in_epsilon(5046139518226.965, worksheet.lever_graphs_n3146, 0.002); end
  def test_lever_graphs_o3146; assert_in_epsilon(5094260355730.373, worksheet.lever_graphs_o3146, 0.002); end
  def test_lever_graphs_p3146; assert_in_epsilon(5043521115453.848, worksheet.lever_graphs_p3146, 0.002); end
  def test_lever_graphs_q3146; assert_in_epsilon(4993287242065.559, worksheet.lever_graphs_q3146, 0.002); end
  def test_lever_graphs_d3147; assert_equal("Urban", worksheet.lever_graphs_d3147); end
  def test_lever_graphs_e3147; assert_in_epsilon(3.0, worksheet.lever_graphs_e3147, 0.002); end
  def test_lever_graphs_h3147; assert_equal("Automobile city", worksheet.lever_graphs_h3147); end
  def test_lever_graphs_i3147; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3147, 0.002); end
  def test_lever_graphs_j3147; assert_in_epsilon(4788455688498.626, worksheet.lever_graphs_j3147, 0.002); end
  def test_lever_graphs_k3147; assert_in_epsilon(4855870535697.827, worksheet.lever_graphs_k3147, 0.002); end
  def test_lever_graphs_l3147; assert_in_epsilon(4892398985811.198, worksheet.lever_graphs_l3147, 0.002); end
  def test_lever_graphs_m3147; assert_in_epsilon(4892398985811.198, worksheet.lever_graphs_m3147, 0.002); end
  def test_lever_graphs_n3147; assert_in_epsilon(4843670300911.835, worksheet.lever_graphs_n3147, 0.002); end
  def test_lever_graphs_o3147; assert_in_epsilon(4771449870894.769, worksheet.lever_graphs_o3147, 0.002); end
  def test_lever_graphs_p3147; assert_in_epsilon(4676781257830.868, worksheet.lever_graphs_p3147, 0.002); end
  def test_lever_graphs_q3147; assert_in_epsilon(4561025090323.309, worksheet.lever_graphs_q3147, 0.002); end
  def test_lever_graphs_d3148; assert_equal("Urban", worksheet.lever_graphs_d3148); end
  def test_lever_graphs_e3148; assert_in_epsilon(4.0, worksheet.lever_graphs_e3148, 0.002); end
  def test_lever_graphs_h3148; assert_equal("Automobile city", worksheet.lever_graphs_h3148); end
  def test_lever_graphs_i3148; assert_in_epsilon(4660394117291.655, worksheet.lever_graphs_i3148, 0.002); end
  def test_lever_graphs_j3148; assert_in_epsilon(4788455688498.626, worksheet.lever_graphs_j3148, 0.002); end
  def test_lever_graphs_k3148; assert_in_epsilon(4836532167070.836, worksheet.lever_graphs_k3148, 0.002); end
  def test_lever_graphs_l3148; assert_in_epsilon(4860763241617.367, worksheet.lever_graphs_l3148, 0.002); end
  def test_lever_graphs_m3148; assert_in_epsilon(4836507984458.363, worksheet.lever_graphs_m3148, 0.002); end
  def test_lever_graphs_n3148; assert_in_epsilon(4764394346510.544, worksheet.lever_graphs_n3148, 0.002); end
  def test_lever_graphs_o3148; assert_in_epsilon(4669865719556.938, worksheet.lever_graphs_o3148, 0.002); end
  def test_lever_graphs_p3148; assert_in_epsilon(4554280720244.492, worksheet.lever_graphs_p3148, 0.002); end
  def test_lever_graphs_q3148; assert_in_epsilon(4419282031926.415, worksheet.lever_graphs_q3148, 0.002); end
  def test_lever_graphs_d3149; assert_equal("Urban", worksheet.lever_graphs_d3149); end
  def test_lever_graphs_e3149; assert_in_delta(1.0, worksheet.lever_graphs_e3149, 0.002); end
  def test_lever_graphs_h3149; assert_equal("Transit city", worksheet.lever_graphs_h3149); end
  def test_lever_graphs_i3149; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3149, 0.002); end
  def test_lever_graphs_j3149; assert_in_epsilon(10008836165485.062, worksheet.lever_graphs_j3149, 0.002); end
  def test_lever_graphs_k3149; assert_in_epsilon(10782359098576.475, worksheet.lever_graphs_k3149, 0.002); end
  def test_lever_graphs_l3149; assert_in_epsilon(11445014681356.225, worksheet.lever_graphs_l3149, 0.002); end
  def test_lever_graphs_m3149; assert_in_epsilon(11880689017656.34, worksheet.lever_graphs_m3149, 0.002); end
  def test_lever_graphs_n3149; assert_in_epsilon(12332948053285.828, worksheet.lever_graphs_n3149, 0.002); end
  def test_lever_graphs_o3149; assert_in_epsilon(12644370446395.355, worksheet.lever_graphs_o3149, 0.002); end
  def test_lever_graphs_p3149; assert_in_epsilon(12963656645183.057, worksheet.lever_graphs_p3149, 0.002); end
  def test_lever_graphs_q3149; assert_in_epsilon(13093812796030.734, worksheet.lever_graphs_q3149, 0.002); end
  def test_lever_graphs_d3150; assert_equal("Urban", worksheet.lever_graphs_d3150); end
  def test_lever_graphs_e3150; assert_in_epsilon(2.0, worksheet.lever_graphs_e3150, 0.002); end
  def test_lever_graphs_h3150; assert_equal("Transit city", worksheet.lever_graphs_h3150); end
  def test_lever_graphs_i3150; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3150, 0.002); end
  def test_lever_graphs_j3150; assert_in_epsilon(10008836165485.062, worksheet.lever_graphs_j3150, 0.002); end
  def test_lever_graphs_k3150; assert_in_epsilon(10782359098576.475, worksheet.lever_graphs_k3150, 0.002); end
  def test_lever_graphs_l3150; assert_in_epsilon(11192808300679.654, worksheet.lever_graphs_l3150, 0.002); end
  def test_lever_graphs_m3150; assert_in_epsilon(11618881963623.633, worksheet.lever_graphs_m3150, 0.002); end
  def test_lever_graphs_n3150; assert_in_epsilon(11912273293152.89, worksheet.lever_graphs_n3150, 0.002); end
  def test_lever_graphs_o3150; assert_in_epsilon(12213073121409.686, worksheet.lever_graphs_o3150, 0.002); end
  def test_lever_graphs_p3150; assert_in_epsilon(12335693353571.926, worksheet.lever_graphs_p3150, 0.002); end
  def test_lever_graphs_q3150; assert_in_epsilon(12348033982189.791, worksheet.lever_graphs_q3150, 0.002); end
  def test_lever_graphs_d3151; assert_equal("Urban", worksheet.lever_graphs_d3151); end
  def test_lever_graphs_e3151; assert_in_epsilon(3.0, worksheet.lever_graphs_e3151, 0.002); end
  def test_lever_graphs_h3151; assert_equal("Transit city", worksheet.lever_graphs_h3151); end
  def test_lever_graphs_i3151; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3151, 0.002); end
  def test_lever_graphs_j3151; assert_in_epsilon(10008836165485.062, worksheet.lever_graphs_j3151, 0.002); end
  def test_lever_graphs_k3151; assert_in_epsilon(10676546776519.873, worksheet.lever_graphs_k3151, 0.002); end
  def test_lever_graphs_l3151; assert_in_epsilon(11044519886925.43, worksheet.lever_graphs_l3151, 0.002); end
  def test_lever_graphs_m3151; assert_in_epsilon(11267184490486.87, worksheet.lever_graphs_m3151, 0.002); end
  def test_lever_graphs_n3151; assert_in_epsilon(11494338155246.693, worksheet.lever_graphs_n3151, 0.002); end
  def test_lever_graphs_o3151; assert_in_epsilon(11609742230792.336, worksheet.lever_graphs_o3151, 0.002); end
  def test_lever_graphs_p3151; assert_in_epsilon(11726304972498.02, worksheet.lever_graphs_p3151, 0.002); end
  def test_lever_graphs_q3151; assert_in_epsilon(11738035968930.703, worksheet.lever_graphs_q3151, 0.002); end
  def test_lever_graphs_d3152; assert_equal("Urban", worksheet.lever_graphs_d3152); end
  def test_lever_graphs_e3152; assert_in_epsilon(4.0, worksheet.lever_graphs_e3152, 0.002); end
  def test_lever_graphs_h3152; assert_equal("Transit city", worksheet.lever_graphs_h3152); end
  def test_lever_graphs_i3152; assert_in_epsilon(8979584841891.977, worksheet.lever_graphs_i3152, 0.002); end
  def test_lever_graphs_j3152; assert_in_epsilon(10008836165485.062, worksheet.lever_graphs_j3152, 0.002); end
  def test_lever_graphs_k3152; assert_in_epsilon(10676546776519.873, worksheet.lever_graphs_k3152, 0.002); end
  def test_lever_graphs_l3152; assert_in_epsilon(10946142961708.033, worksheet.lever_graphs_l3152, 0.002); end
  def test_lever_graphs_m3152; assert_in_epsilon(11166824223369.834, worksheet.lever_graphs_m3152, 0.002); end
  def test_lever_graphs_n3152; assert_in_epsilon(11278940032812.11, worksheet.lever_graphs_n3152, 0.002); end
  def test_lever_graphs_o3152; assert_in_epsilon(11335447635222.297, worksheet.lever_graphs_o3152, 0.002); end
  def test_lever_graphs_p3152; assert_in_epsilon(11363814607102.291, worksheet.lever_graphs_p3152, 0.002); end
  def test_lever_graphs_q3152; assert_in_epsilon(11375182968144.432, worksheet.lever_graphs_q3152, 0.002); end
  def test_lever_graphs_d3153; assert_equal("Urban", worksheet.lever_graphs_d3153); end
  def test_lever_graphs_e3153; assert_in_delta(1.0, worksheet.lever_graphs_e3153, 0.002); end
  def test_lever_graphs_h3153; assert_equal("Booming city", worksheet.lever_graphs_h3153); end
  def test_lever_graphs_i3153; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3153, 0.002); end
  def test_lever_graphs_j3153; assert_in_epsilon(22417936694505.273, worksheet.lever_graphs_j3153, 0.002); end
  def test_lever_graphs_k3153; assert_in_epsilon(25363837692225.367, worksheet.lever_graphs_k3153, 0.002); end
  def test_lever_graphs_l3153; assert_in_epsilon(26657648323634.05, worksheet.lever_graphs_l3153, 0.002); end
  def test_lever_graphs_m3153; assert_in_epsilon(27672417947271.17, worksheet.lever_graphs_m3153, 0.002); end
  def test_lever_graphs_n3153; assert_in_epsilon(28371181177524.96, worksheet.lever_graphs_n3153, 0.002); end
  def test_lever_graphs_o3153; assert_in_epsilon(28727598579608.69, worksheet.lever_graphs_o3153, 0.002); end
  def test_lever_graphs_p3153; assert_in_epsilon(29088493531065.965, worksheet.lever_graphs_p3153, 0.002); end
  def test_lever_graphs_q3153; assert_in_epsilon(29453922281811.277, worksheet.lever_graphs_q3153, 0.002); end
  def test_lever_graphs_d3154; assert_equal("Urban", worksheet.lever_graphs_d3154); end
  def test_lever_graphs_e3154; assert_in_epsilon(2.0, worksheet.lever_graphs_e3154, 0.002); end
  def test_lever_graphs_h3154; assert_equal("Booming city", worksheet.lever_graphs_h3154); end
  def test_lever_graphs_i3154; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3154, 0.002); end
  def test_lever_graphs_j3154; assert_in_epsilon(22417936694505.273, worksheet.lever_graphs_j3154, 0.002); end
  def test_lever_graphs_k3154; assert_in_epsilon(24150484601083.08, worksheet.lever_graphs_k3154, 0.002); end
  def test_lever_graphs_l3154; assert_in_epsilon(25382402030523.605, worksheet.lever_graphs_l3154, 0.002); end
  def test_lever_graphs_m3154; assert_in_epsilon(26348627191978.85, worksheet.lever_graphs_m3154, 0.002); end
  def test_lever_graphs_n3154; assert_in_epsilon(27013963046782.082, worksheet.lever_graphs_n3154, 0.002); end
  def test_lever_graphs_o3154; assert_in_epsilon(27353330183767.81, worksheet.lever_graphs_o3154, 0.002); end
  def test_lever_graphs_p3154; assert_in_epsilon(27490370641658.562, worksheet.lever_graphs_p3154, 0.002); end
  def test_lever_graphs_q3154; assert_in_epsilon(27628097673614.44, worksheet.lever_graphs_q3154, 0.002); end
  def test_lever_graphs_d3155; assert_equal("Urban", worksheet.lever_graphs_d3155); end
  def test_lever_graphs_e3155; assert_in_epsilon(3.0, worksheet.lever_graphs_e3155, 0.002); end
  def test_lever_graphs_h3155; assert_equal("Booming city", worksheet.lever_graphs_h3155); end
  def test_lever_graphs_i3155; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3155, 0.002); end
  def test_lever_graphs_j3155; assert_in_epsilon(22417936694505.273, worksheet.lever_graphs_j3155, 0.002); end
  def test_lever_graphs_k3155; assert_in_epsilon(23561476768430.617, worksheet.lever_graphs_k3155, 0.002); end
  def test_lever_graphs_l3155; assert_in_epsilon(24458385251218.184, worksheet.lever_graphs_l3155, 0.002); end
  def test_lever_graphs_m3155; assert_in_epsilon(25200994816237.832, worksheet.lever_graphs_m3155, 0.002); end
  def test_lever_graphs_n3155; assert_in_epsilon(25581284642495.977, worksheet.lever_graphs_n3155, 0.002); end
  def test_lever_graphs_o3155; assert_in_epsilon(25838122788856.73, worksheet.lever_graphs_o3155, 0.002); end
  def test_lever_graphs_p3155; assert_in_epsilon(25967572042539.33, worksheet.lever_graphs_p3155, 0.002); end
  def test_lever_graphs_q3155; assert_in_epsilon(26032555924043.36, worksheet.lever_graphs_q3155, 0.002); end
  def test_lever_graphs_d3156; assert_equal("Urban", worksheet.lever_graphs_d3156); end
  def test_lever_graphs_e3156; assert_in_epsilon(4.0, worksheet.lever_graphs_e3156, 0.002); end
  def test_lever_graphs_h3156; assert_equal("Booming city", worksheet.lever_graphs_h3156); end
  def test_lever_graphs_i3156; assert_in_epsilon(19725835047576.13, worksheet.lever_graphs_i3156, 0.002); end
  def test_lever_graphs_j3156; assert_in_epsilon(22417936694505.273, worksheet.lever_graphs_j3156, 0.002); end
  def test_lever_graphs_k3156; assert_in_epsilon(23271314340801.07, worksheet.lever_graphs_k3156, 0.002); end
  def test_lever_graphs_l3156; assert_in_epsilon(23858944189844.79, worksheet.lever_graphs_l3156, 0.002); end
  def test_lever_graphs_m3156; assert_in_epsilon(24279408681266.848, worksheet.lever_graphs_m3156, 0.002); end
  def test_lever_graphs_n3156; assert_in_epsilon(24584422551227.31, worksheet.lever_graphs_n3156, 0.002); end
  def test_lever_graphs_o3156; assert_in_epsilon(24707590754176.113, worksheet.lever_graphs_o3156, 0.002); end
  def test_lever_graphs_p3156; assert_in_epsilon(24732308229943.39, worksheet.lever_graphs_p3156, 0.002); end
  def test_lever_graphs_q3156; assert_in_epsilon(24757050433075.41, worksheet.lever_graphs_q3156, 0.002); end
  def test_lever_graphs_d3157; assert_equal("Rural", worksheet.lever_graphs_d3157); end
  def test_lever_graphs_e3157; assert_in_delta(1.0, worksheet.lever_graphs_e3157, 0.002); end
  def test_lever_graphs_h3157; assert_equal("Developed", worksheet.lever_graphs_h3157); end
  def test_lever_graphs_i3157; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3157, 0.002); end
  def test_lever_graphs_j3157; assert_in_epsilon(6903534268754.193, worksheet.lever_graphs_j3157, 0.002); end
  def test_lever_graphs_k3157; assert_in_epsilon(7230575266791.8545, worksheet.lever_graphs_k3157, 0.002); end
  def test_lever_graphs_l3157; assert_in_epsilon(7573109171829.566, worksheet.lever_graphs_l3157, 0.002); end
  def test_lever_graphs_m3157; assert_in_epsilon(7931869929056.93, worksheet.lever_graphs_m3157, 0.002); end
  def test_lever_graphs_n3157; assert_in_epsilon(8307626252835.099, worksheet.lever_graphs_n3157, 0.002); end
  def test_lever_graphs_o3157; assert_in_epsilon(8701183273816.087, worksheet.lever_graphs_o3157, 0.002); end
  def test_lever_graphs_p3157; assert_in_epsilon(8920899055177.416, worksheet.lever_graphs_p3157, 0.002); end
  def test_lever_graphs_q3157; assert_in_epsilon(9146162935350.146, worksheet.lever_graphs_q3157, 0.002); end
  def test_lever_graphs_d3158; assert_equal("Rural", worksheet.lever_graphs_d3158); end
  def test_lever_graphs_e3158; assert_in_epsilon(2.0, worksheet.lever_graphs_e3158, 0.002); end
  def test_lever_graphs_h3158; assert_equal("Developed", worksheet.lever_graphs_h3158); end
  def test_lever_graphs_i3158; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3158, 0.002); end
  def test_lever_graphs_j3158; assert_in_epsilon(6903534268754.193, worksheet.lever_graphs_j3158, 0.002); end
  def test_lever_graphs_k3158; assert_in_epsilon(7166329275523.742, worksheet.lever_graphs_k3158, 0.002); end
  def test_lever_graphs_l3158; assert_in_epsilon(7439128030068.628, worksheet.lever_graphs_l3158, 0.002); end
  def test_lever_graphs_m3158; assert_in_epsilon(7722311342400.357, worksheet.lever_graphs_m3158, 0.002); end
  def test_lever_graphs_n3158; assert_in_epsilon(8016274518724.083, worksheet.lever_graphs_n3158, 0.002); end
  def test_lever_graphs_o3158; assert_in_epsilon(8116980221474.908, worksheet.lever_graphs_o3158, 0.002); end
  def test_lever_graphs_p3158; assert_in_epsilon(8218951055371.485, worksheet.lever_graphs_p3158, 0.002); end
  def test_lever_graphs_q3158; assert_in_epsilon(8322202913821.758, worksheet.lever_graphs_q3158, 0.002); end
  def test_lever_graphs_d3159; assert_equal("Rural", worksheet.lever_graphs_d3159); end
  def test_lever_graphs_e3159; assert_in_epsilon(3.0, worksheet.lever_graphs_e3159, 0.002); end
  def test_lever_graphs_h3159; assert_equal("Developed", worksheet.lever_graphs_h3159); end
  def test_lever_graphs_i3159; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3159, 0.002); end
  def test_lever_graphs_j3159; assert_in_epsilon(6903534268754.193, worksheet.lever_graphs_j3159, 0.002); end
  def test_lever_graphs_k3159; assert_in_epsilon(7077857160053.185, worksheet.lever_graphs_k3159, 0.002); end
  def test_lever_graphs_l3159; assert_in_epsilon(7256581922806.394, worksheet.lever_graphs_l3159, 0.002); end
  def test_lever_graphs_m3159; assert_in_epsilon(7347743868470.583, worksheet.lever_graphs_m3159, 0.002); end
  def test_lever_graphs_n3159; assert_in_epsilon(7440051050339.047, worksheet.lever_graphs_n3159, 0.002); end
  def test_lever_graphs_o3159; assert_in_epsilon(7496019085655.332, worksheet.lever_graphs_o3159, 0.002); end
  def test_lever_graphs_p3159; assert_in_epsilon(7496019085655.332, worksheet.lever_graphs_p3159, 0.002); end
  def test_lever_graphs_q3159; assert_in_epsilon(7439967350141.389, worksheet.lever_graphs_q3159, 0.002); end
  def test_lever_graphs_d3160; assert_equal("Rural", worksheet.lever_graphs_d3160); end
  def test_lever_graphs_e3160; assert_in_epsilon(4.0, worksheet.lever_graphs_e3160, 0.002); end
  def test_lever_graphs_h3160; assert_equal("Developed", worksheet.lever_graphs_h3160); end
  def test_lever_graphs_i3160; assert_in_epsilon(6634160739736.332, worksheet.lever_graphs_i3160, 0.002); end
  def test_lever_graphs_j3160; assert_in_epsilon(6903534268754.193, worksheet.lever_graphs_j3160, 0.002); end
  def test_lever_graphs_k3160; assert_in_epsilon(7024766336697.237, worksheet.lever_graphs_k3160, 0.002); end
  def test_lever_graphs_l3160; assert_in_epsilon(7024766336697.237, worksheet.lever_graphs_l3160, 0.002); end
  def test_lever_graphs_m3160; assert_in_epsilon(6972238409506.483, worksheet.lever_graphs_m3160, 0.002); end
  def test_lever_graphs_n3160; assert_in_epsilon(6920103261662.785, worksheet.lever_graphs_n3160, 0.002); end
  def test_lever_graphs_o3160; assert_in_epsilon(6868357956145.331, worksheet.lever_graphs_o3160, 0.002); end
  def test_lever_graphs_p3160; assert_in_epsilon(6816999577894.978, worksheet.lever_graphs_p3160, 0.002); end
  def test_lever_graphs_q3160; assert_in_epsilon(6766025233650.038, worksheet.lever_graphs_q3160, 0.002); end
  def test_lever_graphs_d3161; assert_equal("Rural", worksheet.lever_graphs_d3161); end
  def test_lever_graphs_e3161; assert_in_delta(1.0, worksheet.lever_graphs_e3161, 0.002); end
  def test_lever_graphs_h3161; assert_equal("Developing", worksheet.lever_graphs_h3161); end
  def test_lever_graphs_i3161; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3161, 0.002); end
  def test_lever_graphs_j3161; assert_in_epsilon(14290565785862.227, worksheet.lever_graphs_j3161, 0.002); end
  def test_lever_graphs_k3161; assert_in_epsilon(16168463496978.285, worksheet.lever_graphs_k3161, 0.002); end
  def test_lever_graphs_l3161; assert_in_epsilon(18071130988124.26, worksheet.lever_graphs_l3161, 0.002); end
  def test_lever_graphs_m3161; assert_in_epsilon(20197700001053.08, worksheet.lever_graphs_m3161, 0.002); end
  def test_lever_graphs_n3161; assert_in_epsilon(22299892839955.32, worksheet.lever_graphs_n3161, 0.002); end
  def test_lever_graphs_o3161; assert_in_epsilon(24620883598011.8, worksheet.lever_graphs_o3161, 0.002); end
  def test_lever_graphs_p3161; assert_in_epsilon(27183444938386.574, worksheet.lever_graphs_p3161, 0.002); end
  def test_lever_graphs_q3161; assert_in_epsilon(30012719721316.824, worksheet.lever_graphs_q3161, 0.002); end
  def test_lever_graphs_d3162; assert_equal("Rural", worksheet.lever_graphs_d3162); end
  def test_lever_graphs_e3162; assert_in_epsilon(2.0, worksheet.lever_graphs_e3162, 0.002); end
  def test_lever_graphs_h3162; assert_equal("Developing", worksheet.lever_graphs_h3162); end
  def test_lever_graphs_i3162; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3162, 0.002); end
  def test_lever_graphs_j3162; assert_in_epsilon(14290565785862.227, worksheet.lever_graphs_j3162, 0.002); end
  def test_lever_graphs_k3162; assert_in_epsilon(16168463496978.285, worksheet.lever_graphs_k3162, 0.002); end
  def test_lever_graphs_l3162; assert_in_epsilon(17851290164253.668, worksheet.lever_graphs_l3162, 0.002); end
  def test_lever_graphs_m3162; assert_in_epsilon(19709266782705.45, worksheet.lever_graphs_m3162, 0.002); end
  def test_lever_graphs_n3162; assert_in_epsilon(21232477833298.227, worksheet.lever_graphs_n3162, 0.002); end
  def test_lever_graphs_o3162; assert_in_epsilon(22873408732641.734, worksheet.lever_graphs_o3162, 0.002); end
  def test_lever_graphs_p3162; assert_in_epsilon(24641157341984.1, worksheet.lever_graphs_p3162, 0.002); end
  def test_lever_graphs_q3162; assert_in_epsilon(26545524641717.473, worksheet.lever_graphs_q3162, 0.002); end
  def test_lever_graphs_d3163; assert_equal("Rural", worksheet.lever_graphs_d3163); end
  def test_lever_graphs_e3163; assert_in_epsilon(3.0, worksheet.lever_graphs_e3163, 0.002); end
  def test_lever_graphs_h3163; assert_equal("Developing", worksheet.lever_graphs_h3163); end
  def test_lever_graphs_i3163; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3163, 0.002); end
  def test_lever_graphs_j3163; assert_in_epsilon(14290565785862.227, worksheet.lever_graphs_j3163, 0.002); end
  def test_lever_graphs_k3163; assert_in_epsilon(15777939351037.207, worksheet.lever_graphs_k3163, 0.002); end
  def test_lever_graphs_l3163; assert_in_epsilon(16997321677130.19, worksheet.lever_graphs_l3163, 0.002); end
  def test_lever_graphs_m3163; assert_in_epsilon(18310942751649.477, worksheet.lever_graphs_m3163, 0.002); end
  def test_lever_graphs_n3163; assert_in_epsilon(19726085722394.51, worksheet.lever_graphs_n3163, 0.002); end
  def test_lever_graphs_o3163; assert_in_epsilon(21250596607987.55, worksheet.lever_graphs_o3163, 0.002); end
  def test_lever_graphs_p3163; assert_in_epsilon(22334590605615.883, worksheet.lever_graphs_p3163, 0.002); end
  def test_lever_graphs_q3163; assert_in_epsilon(23473879191371.332, worksheet.lever_graphs_q3163, 0.002); end
  def test_lever_graphs_d3164; assert_equal("Rural", worksheet.lever_graphs_d3164); end
  def test_lever_graphs_e3164; assert_in_epsilon(4.0, worksheet.lever_graphs_e3164, 0.002); end
  def test_lever_graphs_h3164; assert_equal("Developing", worksheet.lever_graphs_h3164); end
  def test_lever_graphs_i3164; assert_in_epsilon(12215635525941.037, worksheet.lever_graphs_i3164, 0.002); end
  def test_lever_graphs_j3164; assert_in_epsilon(14290565785862.227, worksheet.lever_graphs_j3164, 0.002); end
  def test_lever_graphs_k3164; assert_in_epsilon(15777939351037.207, worksheet.lever_graphs_k3164, 0.002); end
  def test_lever_graphs_l3164; assert_in_epsilon(16997321677130.19, worksheet.lever_graphs_l3164, 0.002); end
  def test_lever_graphs_m3164; assert_in_epsilon(18310942751649.477, worksheet.lever_graphs_m3164, 0.002); end
  def test_lever_graphs_n3164; assert_in_epsilon(19726085722394.51, worksheet.lever_graphs_n3164, 0.002); end
  def test_lever_graphs_o3164; assert_in_epsilon(20732314343370.75, worksheet.lever_graphs_o3164, 0.002); end
  def test_lever_graphs_p3164; assert_in_epsilon(21255831260787.043, worksheet.lever_graphs_p3164, 0.002); end
  def test_lever_graphs_q3164; assert_in_epsilon(21792567636401.87, worksheet.lever_graphs_q3164, 0.002); end
  def test_lever_graphs_d3165; assert_equal("International", worksheet.lever_graphs_d3165); end
  def test_lever_graphs_e3165; assert_in_delta(1.0, worksheet.lever_graphs_e3165, 0.002); end
  def test_lever_graphs_h3165; assert_equal("International slow growth", worksheet.lever_graphs_h3165); end
  def test_lever_graphs_i3165; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3165, 0.002); end
  def test_lever_graphs_j3165; assert_in_epsilon(4337489325647.264, worksheet.lever_graphs_j3165, 0.002); end
  def test_lever_graphs_k3165; assert_in_epsilon(4793851716450.241, worksheet.lever_graphs_k3165, 0.002); end
  def test_lever_graphs_l3165; assert_in_epsilon(5298229587201.019, worksheet.lever_graphs_l3165, 0.002); end
  def test_lever_graphs_m3165; assert_in_epsilon(5855674814130.15, worksheet.lever_graphs_m3165, 0.002); end
  def test_lever_graphs_n3165; assert_in_epsilon(6471770798998.642, worksheet.lever_graphs_n3165, 0.002); end
  def test_lever_graphs_o3165; assert_in_epsilon(7152688392754.1455, worksheet.lever_graphs_o3165, 0.002); end
  def test_lever_graphs_p3165; assert_in_epsilon(7905247703110.231, worksheet.lever_graphs_p3165, 0.002); end
  def test_lever_graphs_q3165; assert_in_epsilon(8736986405116.785, worksheet.lever_graphs_q3165, 0.002); end
  def test_lever_graphs_d3166; assert_equal("International", worksheet.lever_graphs_d3166); end
  def test_lever_graphs_e3166; assert_in_epsilon(2.0, worksheet.lever_graphs_e3166, 0.002); end
  def test_lever_graphs_h3166; assert_equal("International slow growth", worksheet.lever_graphs_h3166); end
  def test_lever_graphs_i3166; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3166, 0.002); end
  def test_lever_graphs_j3166; assert_in_epsilon(4337489325647.264, worksheet.lever_graphs_j3166, 0.002); end
  def test_lever_graphs_k3166; assert_in_epsilon(4650321558138.555, worksheet.lever_graphs_k3166, 0.002); end
  def test_lever_graphs_l3166; assert_in_epsilon(4985716152940.876, worksheet.lever_graphs_l3166, 0.002); end
  def test_lever_graphs_m3166; assert_in_epsilon(5345300372657.575, worksheet.lever_graphs_m3166, 0.002); end
  def test_lever_graphs_n3166; assert_in_epsilon(5730818842761.352, worksheet.lever_graphs_n3166, 0.002); end
  def test_lever_graphs_o3166; assert_in_epsilon(6144142016142.686, worksheet.lever_graphs_o3166, 0.002); end
  def test_lever_graphs_p3166; assert_in_epsilon(6587275248145.886, worksheet.lever_graphs_p3166, 0.002); end
  def test_lever_graphs_q3166; assert_in_epsilon(7062368526122.907, worksheet.lever_graphs_q3166, 0.002); end
  def test_lever_graphs_d3167; assert_equal("International", worksheet.lever_graphs_d3167); end
  def test_lever_graphs_e3167; assert_in_epsilon(3.0, worksheet.lever_graphs_e3167, 0.002); end
  def test_lever_graphs_h3167; assert_equal("International slow growth", worksheet.lever_graphs_h3167); end
  def test_lever_graphs_i3167; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3167, 0.002); end
  def test_lever_graphs_j3167; assert_in_epsilon(4337489325647.264, worksheet.lever_graphs_j3167, 0.002); end
  def test_lever_graphs_k3167; assert_in_epsilon(4457369832441.341, worksheet.lever_graphs_k3167, 0.002); end
  def test_lever_graphs_l3167; assert_in_epsilon(4580563623679.537, worksheet.lever_graphs_l3167, 0.002); end
  def test_lever_graphs_m3167; assert_in_epsilon(4707162272663.4795, worksheet.lever_graphs_m3167, 0.002); end
  def test_lever_graphs_n3167; assert_in_epsilon(4837259883618.325, worksheet.lever_graphs_n3167, 0.002); end
  def test_lever_graphs_o3167; assert_in_epsilon(4970953161643.001, worksheet.lever_graphs_o3167, 0.002); end
  def test_lever_graphs_p3167; assert_in_epsilon(5108341484593.732, worksheet.lever_graphs_p3167, 0.002); end
  def test_lever_graphs_q3167; assert_in_epsilon(5249526976954.32, worksheet.lever_graphs_q3167, 0.002); end
  def test_lever_graphs_d3168; assert_equal("International", worksheet.lever_graphs_d3168); end
  def test_lever_graphs_e3168; assert_in_epsilon(4.0, worksheet.lever_graphs_e3168, 0.002); end
  def test_lever_graphs_h3168; assert_equal("International slow growth", worksheet.lever_graphs_h3168); end
  def test_lever_graphs_i3168; assert_in_epsilon(4003883912747.2563, worksheet.lever_graphs_i3168, 0.002); end
  def test_lever_graphs_j3168; assert_in_epsilon(4337489325647.264, worksheet.lever_graphs_j3168, 0.002); end
  def test_lever_graphs_k3168; assert_in_epsilon(4157521090455.0815, worksheet.lever_graphs_k3168, 0.002); end
  def test_lever_graphs_l3168; assert_in_epsilon(3985019978118.206, worksheet.lever_graphs_l3168, 0.002); end
  def test_lever_graphs_m3168; assert_in_epsilon(3819676167719.2026, worksheet.lever_graphs_m3168, 0.002); end
  def test_lever_graphs_n3168; assert_in_epsilon(3661192693225.007, worksheet.lever_graphs_n3168, 0.002); end
  def test_lever_graphs_o3168; assert_in_epsilon(3509284910120.5737, worksheet.lever_graphs_o3168, 0.002); end
  def test_lever_graphs_p3168; assert_in_epsilon(3363679984172.609, worksheet.lever_graphs_p3168, 0.002); end
  def test_lever_graphs_q3168; assert_in_epsilon(3224116401405.1797, worksheet.lever_graphs_q3168, 0.002); end
  def test_lever_graphs_d3169; assert_equal("International", worksheet.lever_graphs_d3169); end
  def test_lever_graphs_e3169; assert_in_delta(1.0, worksheet.lever_graphs_e3169, 0.002); end
  def test_lever_graphs_h3169; assert_equal("International fast growth", worksheet.lever_graphs_h3169); end
  def test_lever_graphs_i3169; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3169, 0.002); end
  def test_lever_graphs_j3169; assert_in_epsilon(1644650235105.823, worksheet.lever_graphs_j3169, 0.002); end
  def test_lever_graphs_k3169; assert_in_epsilon(2135331037514.1077, worksheet.lever_graphs_k3169, 0.002); end
  def test_lever_graphs_l3169; assert_in_epsilon(2772406279732.5967, worksheet.lever_graphs_l3169, 0.002); end
  def test_lever_graphs_m3169; assert_in_epsilon(3599552689895.2573, worksheet.lever_graphs_m3169, 0.002); end
  def test_lever_graphs_n3169; assert_in_epsilon(4673477932167.245, worksheet.lever_graphs_n3169, 0.002); end
  def test_lever_graphs_o3169; assert_in_epsilon(6067808381793.626, worksheet.lever_graphs_o3169, 0.002); end
  def test_lever_graphs_p3169; assert_in_epsilon(7878136816426.803, worksheet.lever_graphs_p3169, 0.002); end
  def test_lever_graphs_q3169; assert_in_epsilon(10228576084334.621, worksheet.lever_graphs_q3169, 0.002); end
  def test_lever_graphs_d3170; assert_equal("International", worksheet.lever_graphs_d3170); end
  def test_lever_graphs_e3170; assert_in_epsilon(2.0, worksheet.lever_graphs_e3170, 0.002); end
  def test_lever_graphs_h3170; assert_equal("International fast growth", worksheet.lever_graphs_h3170); end
  def test_lever_graphs_i3170; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3170, 0.002); end
  def test_lever_graphs_j3170; assert_in_epsilon(1644650235105.823, worksheet.lever_graphs_j3170, 0.002); end
  def test_lever_graphs_k3170; assert_in_epsilon(2021304280586.896, worksheet.lever_graphs_k3170, 0.002); end
  def test_lever_graphs_l3170; assert_in_epsilon(2484218776435.478, worksheet.lever_graphs_l3170, 0.002); end
  def test_lever_graphs_m3170; assert_in_epsilon(3053148894239.0713, worksheet.lever_graphs_m3170, 0.002); end
  def test_lever_graphs_n3170; assert_in_epsilon(3752374089921.6147, worksheet.lever_graphs_n3170, 0.002); end
  def test_lever_graphs_o3170; assert_in_epsilon(4611734245022.554, worksheet.lever_graphs_o3170, 0.002); end
  def test_lever_graphs_p3170; assert_in_epsilon(5667903102688.257, worksheet.lever_graphs_p3170, 0.002); end
  def test_lever_graphs_q3170; assert_in_epsilon(6965953343069.547, worksheet.lever_graphs_q3170, 0.002); end
  def test_lever_graphs_d3171; assert_equal("International", worksheet.lever_graphs_d3171); end
  def test_lever_graphs_e3171; assert_in_epsilon(3.0, worksheet.lever_graphs_e3171, 0.002); end
  def test_lever_graphs_h3171; assert_equal("International fast growth", worksheet.lever_graphs_h3171); end
  def test_lever_graphs_i3171; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3171, 0.002); end
  def test_lever_graphs_j3171; assert_in_epsilon(1644650235105.823, worksheet.lever_graphs_j3171, 0.002); end
  def test_lever_graphs_k3171; assert_in_epsilon(1886637371854.1604, worksheet.lever_graphs_k3171, 0.002); end
  def test_lever_graphs_l3171; assert_in_epsilon(2164229510262.8606, worksheet.lever_graphs_l3171, 0.002); end
  def test_lever_graphs_m3171; assert_in_epsilon(2482665425253.058, worksheet.lever_graphs_m3171, 0.002); end
  def test_lever_graphs_n3171; assert_in_epsilon(2847954703749.665, worksheet.lever_graphs_n3171, 0.002); end
  def test_lever_graphs_o3171; assert_in_epsilon(3266991158820.003, worksheet.lever_graphs_o3171, 0.002); end
  def test_lever_graphs_p3171; assert_in_epsilon(3747682931106.8423, worksheet.lever_graphs_p3171, 0.002); end
  def test_lever_graphs_q3171; assert_in_epsilon(4299101732856.388, worksheet.lever_graphs_q3171, 0.002); end
  def test_lever_graphs_d3172; assert_equal("International", worksheet.lever_graphs_d3172); end
  def test_lever_graphs_e3172; assert_in_epsilon(4.0, worksheet.lever_graphs_e3172, 0.002); end
  def test_lever_graphs_h3172; assert_equal("International fast growth", worksheet.lever_graphs_h3172); end
  def test_lever_graphs_i3172; assert_in_epsilon(1334627970915.7546, worksheet.lever_graphs_i3172, 0.002); end
  def test_lever_graphs_j3172; assert_in_epsilon(1644650235105.823, worksheet.lever_graphs_j3172, 0.002); end
  def test_lever_graphs_k3172; assert_in_epsilon(1763998075068.8477, worksheet.lever_graphs_k3172, 0.002); end
  def test_lever_graphs_l3172; assert_in_epsilon(1892006666479.078, worksheet.lever_graphs_l3172, 0.002); end
  def test_lever_graphs_m3172; assert_in_epsilon(2029304496753.2402, worksheet.lever_graphs_m3172, 0.002); end
  def test_lever_graphs_n3172; assert_in_epsilon(2176565660947.9287, worksheet.lever_graphs_n3172, 0.002); end
  def test_lever_graphs_o3172; assert_in_epsilon(2334513171383.2485, worksheet.lever_graphs_o3172, 0.002); end
  def test_lever_graphs_p3172; assert_in_epsilon(2503922507436.937, worksheet.lever_graphs_p3172, 0.002); end
  def test_lever_graphs_q3172; assert_in_epsilon(2685625422937.4907, worksheet.lever_graphs_q3172, 0.002); end
  def test_lever_graphs_d3175; assert_equal("Type of travel", worksheet.lever_graphs_d3175); end
  def test_lever_graphs_e3175; assert_equal("Level", worksheet.lever_graphs_e3175); end
  def test_lever_graphs_f3175; assert_equal("Notes", worksheet.lever_graphs_f3175); end
  def test_lever_graphs_g3175; assert_equal("…", worksheet.lever_graphs_g3175); end
  def test_lever_graphs_h3175; assert_equal("…2", worksheet.lever_graphs_h3175); end
  def test_lever_graphs_i3175; assert_equal("2011", worksheet.lever_graphs_i3175); end
  def test_lever_graphs_j3175; assert_equal("2015", worksheet.lever_graphs_j3175); end
  def test_lever_graphs_k3175; assert_equal("2020", worksheet.lever_graphs_k3175); end
  def test_lever_graphs_l3175; assert_equal("2025", worksheet.lever_graphs_l3175); end
  def test_lever_graphs_m3175; assert_equal("2030", worksheet.lever_graphs_m3175); end
  def test_lever_graphs_n3175; assert_equal("2035", worksheet.lever_graphs_n3175); end
  def test_lever_graphs_o3175; assert_equal("2040", worksheet.lever_graphs_o3175); end
  def test_lever_graphs_p3175; assert_equal("2045", worksheet.lever_graphs_p3175); end
  def test_lever_graphs_q3175; assert_equal("2050", worksheet.lever_graphs_q3175); end
  def test_lever_graphs_d3176; assert_equal("Urban", worksheet.lever_graphs_d3176); end
  def test_lever_graphs_e3176; assert_in_delta(1.0, worksheet.lever_graphs_e3176, 0.002); end
  def test_lever_graphs_i3176; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3176, 0.002); end
  def test_lever_graphs_j3176; assert_in_epsilon(37215228548488.96, worksheet.lever_graphs_j3176, 0.002); end
  def test_lever_graphs_k3176; assert_in_epsilon(41050683984385.734, worksheet.lever_graphs_k3176, 0.002); end
  def test_lever_graphs_l3176; assert_in_epsilon(43125993322070.086, worksheet.lever_graphs_l3176, 0.002); end
  def test_lever_graphs_m3176; assert_in_epsilon(44624340607121.7, worksheet.lever_graphs_m3176, 0.002); end
  def test_lever_graphs_n3176; assert_in_epsilon(45823723012306.8, worksheet.lever_graphs_n3176, 0.002); end
  def test_lever_graphs_o3176; assert_in_epsilon(46540384117246.44, worksheet.lever_graphs_o3176, 0.002); end
  def test_lever_graphs_p3176; assert_in_epsilon(47269852145481.5, worksheet.lever_graphs_p3176, 0.002); end
  def test_lever_graphs_q3176; assert_in_epsilon(47770656836541.97, worksheet.lever_graphs_q3176, 0.002); end
  def test_lever_graphs_d3177; assert_equal("Urban", worksheet.lever_graphs_d3177); end
  def test_lever_graphs_e3177; assert_in_epsilon(2.0, worksheet.lever_graphs_e3177, 0.002); end
  def test_lever_graphs_i3177; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3177, 0.002); end
  def test_lever_graphs_j3177; assert_in_epsilon(37215228548488.96, worksheet.lever_graphs_j3177, 0.002); end
  def test_lever_graphs_k3177; assert_in_epsilon(39837330893243.445, worksheet.lever_graphs_k3177, 0.002); end
  def test_lever_graphs_l3177; assert_in_epsilon(41526467541832.37, worksheet.lever_graphs_l3177, 0.002); end
  def test_lever_graphs_m3177; assert_in_epsilon(42965982390047.35, worksheet.lever_graphs_m3177, 0.002); end
  def test_lever_graphs_n3177; assert_in_epsilon(43972375858161.94, worksheet.lever_graphs_n3177, 0.002); end
  def test_lever_graphs_o3177; assert_in_epsilon(44660663660907.87, worksheet.lever_graphs_o3177, 0.002); end
  def test_lever_graphs_p3177; assert_in_epsilon(44869585110684.336, worksheet.lever_graphs_p3177, 0.002); end
  def test_lever_graphs_q3177; assert_in_epsilon(44969418897869.79, worksheet.lever_graphs_q3177, 0.002); end
  def test_lever_graphs_d3178; assert_equal("Urban", worksheet.lever_graphs_d3178); end
  def test_lever_graphs_e3178; assert_in_epsilon(3.0, worksheet.lever_graphs_e3178, 0.002); end
  def test_lever_graphs_i3178; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3178, 0.002); end
  def test_lever_graphs_j3178; assert_in_epsilon(37215228548488.96, worksheet.lever_graphs_j3178, 0.002); end
  def test_lever_graphs_k3178; assert_in_epsilon(39093894080648.31, worksheet.lever_graphs_k3178, 0.002); end
  def test_lever_graphs_l3178; assert_in_epsilon(40395304123954.81, worksheet.lever_graphs_l3178, 0.002); end
  def test_lever_graphs_m3178; assert_in_epsilon(41360578292535.9, worksheet.lever_graphs_m3178, 0.002); end
  def test_lever_graphs_n3178; assert_in_epsilon(41919293098654.5, worksheet.lever_graphs_n3178, 0.002); end
  def test_lever_graphs_o3178; assert_in_epsilon(42219314890543.836, worksheet.lever_graphs_o3178, 0.002); end
  def test_lever_graphs_p3178; assert_in_epsilon(42370658272868.22, worksheet.lever_graphs_p3178, 0.002); end
  def test_lever_graphs_q3178; assert_in_epsilon(42331616983297.375, worksheet.lever_graphs_q3178, 0.002); end
  def test_lever_graphs_d3179; assert_equal("Urban", worksheet.lever_graphs_d3179); end
  def test_lever_graphs_e3179; assert_in_epsilon(4.0, worksheet.lever_graphs_e3179, 0.002); end
  def test_lever_graphs_i3179; assert_in_epsilon(33365814006759.76, worksheet.lever_graphs_i3179, 0.002); end
  def test_lever_graphs_j3179; assert_in_epsilon(37215228548488.96, worksheet.lever_graphs_j3179, 0.002); end
  def test_lever_graphs_k3179; assert_in_epsilon(38784393284391.78, worksheet.lever_graphs_k3179, 0.002); end
  def test_lever_graphs_l3179; assert_in_epsilon(39665850393170.19, worksheet.lever_graphs_l3179, 0.002); end
  def test_lever_graphs_m3179; assert_in_epsilon(40282740889095.05, worksheet.lever_graphs_m3179, 0.002); end
  def test_lever_graphs_n3179; assert_in_epsilon(40627756930549.96, worksheet.lever_graphs_n3179, 0.002); end
  def test_lever_graphs_o3179; assert_in_epsilon(40712904108955.34, worksheet.lever_graphs_o3179, 0.002); end
  def test_lever_graphs_p3179; assert_in_epsilon(40650403557290.17, worksheet.lever_graphs_p3179, 0.002); end
  def test_lever_graphs_q3179; assert_in_epsilon(40551515433146.26, worksheet.lever_graphs_q3179, 0.002); end
  def test_lever_graphs_d3180; assert_equal("Rural", worksheet.lever_graphs_d3180); end
  def test_lever_graphs_e3180; assert_in_delta(1.0, worksheet.lever_graphs_e3180, 0.002); end
  def test_lever_graphs_i3180; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3180, 0.002); end
  def test_lever_graphs_j3180; assert_in_epsilon(21194100054616.42, worksheet.lever_graphs_j3180, 0.002); end
  def test_lever_graphs_k3180; assert_in_epsilon(23399038763770.14, worksheet.lever_graphs_k3180, 0.002); end
  def test_lever_graphs_l3180; assert_in_epsilon(25644240159953.83, worksheet.lever_graphs_l3180, 0.002); end
  def test_lever_graphs_m3180; assert_in_epsilon(28129569930110.008, worksheet.lever_graphs_m3180, 0.002); end
  def test_lever_graphs_n3180; assert_in_epsilon(30607519092790.418, worksheet.lever_graphs_n3180, 0.002); end
  def test_lever_graphs_o3180; assert_in_epsilon(33322066871827.887, worksheet.lever_graphs_o3180, 0.002); end
  def test_lever_graphs_p3180; assert_in_epsilon(36104343993563.99, worksheet.lever_graphs_p3180, 0.002); end
  def test_lever_graphs_q3180; assert_in_epsilon(39158882656666.97, worksheet.lever_graphs_q3180, 0.002); end
  def test_lever_graphs_d3181; assert_equal("Rural", worksheet.lever_graphs_d3181); end
  def test_lever_graphs_e3181; assert_in_epsilon(2.0, worksheet.lever_graphs_e3181, 0.002); end
  def test_lever_graphs_i3181; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3181, 0.002); end
  def test_lever_graphs_j3181; assert_in_epsilon(21194100054616.42, worksheet.lever_graphs_j3181, 0.002); end
  def test_lever_graphs_k3181; assert_in_epsilon(23334792772502.027, worksheet.lever_graphs_k3181, 0.002); end
  def test_lever_graphs_l3181; assert_in_epsilon(25290418194322.297, worksheet.lever_graphs_l3181, 0.002); end
  def test_lever_graphs_m3181; assert_in_epsilon(27431578125105.805, worksheet.lever_graphs_m3181, 0.002); end
  def test_lever_graphs_n3181; assert_in_epsilon(29248752352022.31, worksheet.lever_graphs_n3181, 0.002); end
  def test_lever_graphs_o3181; assert_in_epsilon(30990388954116.64, worksheet.lever_graphs_o3181, 0.002); end
  def test_lever_graphs_p3181; assert_in_epsilon(32860108397355.586, worksheet.lever_graphs_p3181, 0.002); end
  def test_lever_graphs_q3181; assert_in_epsilon(34867727555539.23, worksheet.lever_graphs_q3181, 0.002); end
  def test_lever_graphs_d3182; assert_equal("Rural", worksheet.lever_graphs_d3182); end
  def test_lever_graphs_e3182; assert_in_epsilon(3.0, worksheet.lever_graphs_e3182, 0.002); end
  def test_lever_graphs_i3182; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3182, 0.002); end
  def test_lever_graphs_j3182; assert_in_epsilon(21194100054616.42, worksheet.lever_graphs_j3182, 0.002); end
  def test_lever_graphs_k3182; assert_in_epsilon(22855796511090.39, worksheet.lever_graphs_k3182, 0.002); end
  def test_lever_graphs_l3182; assert_in_epsilon(24253903599936.582, worksheet.lever_graphs_l3182, 0.002); end
  def test_lever_graphs_m3182; assert_in_epsilon(25658686620120.06, worksheet.lever_graphs_m3182, 0.002); end
  def test_lever_graphs_n3182; assert_in_epsilon(27166136772733.56, worksheet.lever_graphs_n3182, 0.002); end
  def test_lever_graphs_o3182; assert_in_epsilon(28746615693642.883, worksheet.lever_graphs_o3182, 0.002); end
  def test_lever_graphs_p3182; assert_in_epsilon(29830609691271.215, worksheet.lever_graphs_p3182, 0.002); end
  def test_lever_graphs_q3182; assert_in_epsilon(30913846541512.72, worksheet.lever_graphs_q3182, 0.002); end
  def test_lever_graphs_d3183; assert_equal("Rural", worksheet.lever_graphs_d3183); end
  def test_lever_graphs_e3183; assert_in_epsilon(4.0, worksheet.lever_graphs_e3183, 0.002); end
  def test_lever_graphs_i3183; assert_in_epsilon(18849796265677.367, worksheet.lever_graphs_i3183, 0.002); end
  def test_lever_graphs_j3183; assert_in_epsilon(21194100054616.42, worksheet.lever_graphs_j3183, 0.002); end
  def test_lever_graphs_k3183; assert_in_epsilon(22802705687734.445, worksheet.lever_graphs_k3183, 0.002); end
  def test_lever_graphs_l3183; assert_in_epsilon(24022088013827.426, worksheet.lever_graphs_l3183, 0.002); end
  def test_lever_graphs_m3183; assert_in_epsilon(25283181161155.96, worksheet.lever_graphs_m3183, 0.002); end
  def test_lever_graphs_n3183; assert_in_epsilon(26646188984057.297, worksheet.lever_graphs_n3183, 0.002); end
  def test_lever_graphs_o3183; assert_in_epsilon(27600672299516.082, worksheet.lever_graphs_o3183, 0.002); end
  def test_lever_graphs_p3183; assert_in_epsilon(28072830838682.02, worksheet.lever_graphs_p3183, 0.002); end
  def test_lever_graphs_q3183; assert_in_epsilon(28558592870051.91, worksheet.lever_graphs_q3183, 0.002); end
  def test_lever_graphs_d3184; assert_equal("International", worksheet.lever_graphs_d3184); end
  def test_lever_graphs_e3184; assert_in_delta(1.0, worksheet.lever_graphs_e3184, 0.002); end
  def test_lever_graphs_i3184; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3184, 0.002); end
  def test_lever_graphs_j3184; assert_in_epsilon(5982139560753.087, worksheet.lever_graphs_j3184, 0.002); end
  def test_lever_graphs_k3184; assert_in_epsilon(6929182753964.349, worksheet.lever_graphs_k3184, 0.002); end
  def test_lever_graphs_l3184; assert_in_epsilon(8070635866933.615, worksheet.lever_graphs_l3184, 0.002); end
  def test_lever_graphs_m3184; assert_in_epsilon(9455227504025.408, worksheet.lever_graphs_m3184, 0.002); end
  def test_lever_graphs_n3184; assert_in_epsilon(11145248731165.887, worksheet.lever_graphs_n3184, 0.002); end
  def test_lever_graphs_o3184; assert_in_epsilon(13220496774547.771, worksheet.lever_graphs_o3184, 0.002); end
  def test_lever_graphs_p3184; assert_in_epsilon(15783384519537.035, worksheet.lever_graphs_p3184, 0.002); end
  def test_lever_graphs_q3184; assert_in_epsilon(18965562489451.406, worksheet.lever_graphs_q3184, 0.002); end
  def test_lever_graphs_d3185; assert_equal("International", worksheet.lever_graphs_d3185); end
  def test_lever_graphs_e3185; assert_in_epsilon(2.0, worksheet.lever_graphs_e3185, 0.002); end
  def test_lever_graphs_i3185; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3185, 0.002); end
  def test_lever_graphs_j3185; assert_in_epsilon(5982139560753.087, worksheet.lever_graphs_j3185, 0.002); end
  def test_lever_graphs_k3185; assert_in_epsilon(6671625838725.451, worksheet.lever_graphs_k3185, 0.002); end
  def test_lever_graphs_l3185; assert_in_epsilon(7469934929376.354, worksheet.lever_graphs_l3185, 0.002); end
  def test_lever_graphs_m3185; assert_in_epsilon(8398449266896.646, worksheet.lever_graphs_m3185, 0.002); end
  def test_lever_graphs_n3185; assert_in_epsilon(9483192932682.967, worksheet.lever_graphs_n3185, 0.002); end
  def test_lever_graphs_o3185; assert_in_epsilon(10755876261165.238, worksheet.lever_graphs_o3185, 0.002); end
  def test_lever_graphs_p3185; assert_in_epsilon(12255178350834.143, worksheet.lever_graphs_p3185, 0.002); end
  def test_lever_graphs_q3185; assert_in_epsilon(14028321869192.453, worksheet.lever_graphs_q3185, 0.002); end
  def test_lever_graphs_d3186; assert_equal("International", worksheet.lever_graphs_d3186); end
  def test_lever_graphs_e3186; assert_in_epsilon(3.0, worksheet.lever_graphs_e3186, 0.002); end
  def test_lever_graphs_i3186; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3186, 0.002); end
  def test_lever_graphs_j3186; assert_in_epsilon(5982139560753.087, worksheet.lever_graphs_j3186, 0.002); end
  def test_lever_graphs_k3186; assert_in_epsilon(6344007204295.501, worksheet.lever_graphs_k3186, 0.002); end
  def test_lever_graphs_l3186; assert_in_epsilon(6744793133942.397, worksheet.lever_graphs_l3186, 0.002); end
  def test_lever_graphs_m3186; assert_in_epsilon(7189827697916.537, worksheet.lever_graphs_m3186, 0.002); end
  def test_lever_graphs_n3186; assert_in_epsilon(7685214587367.99, worksheet.lever_graphs_n3186, 0.002); end
  def test_lever_graphs_o3186; assert_in_epsilon(8237944320463.004, worksheet.lever_graphs_o3186, 0.002); end
  def test_lever_graphs_p3186; assert_in_epsilon(8856024415700.574, worksheet.lever_graphs_p3186, 0.002); end
  def test_lever_graphs_q3186; assert_in_epsilon(9548628709810.709, worksheet.lever_graphs_q3186, 0.002); end
  def test_lever_graphs_d3187; assert_equal("International", worksheet.lever_graphs_d3187); end
  def test_lever_graphs_e3187; assert_in_epsilon(4.0, worksheet.lever_graphs_e3187, 0.002); end
  def test_lever_graphs_i3187; assert_in_epsilon(5338511883663.011, worksheet.lever_graphs_i3187, 0.002); end
  def test_lever_graphs_j3187; assert_in_epsilon(5982139560753.087, worksheet.lever_graphs_j3187, 0.002); end
  def test_lever_graphs_k3187; assert_in_epsilon(5921519165523.93, worksheet.lever_graphs_k3187, 0.002); end
  def test_lever_graphs_l3187; assert_in_epsilon(5877026644597.284, worksheet.lever_graphs_l3187, 0.002); end
  def test_lever_graphs_m3187; assert_in_epsilon(5848980664472.443, worksheet.lever_graphs_m3187, 0.002); end
  def test_lever_graphs_n3187; assert_in_epsilon(5837758354172.936, worksheet.lever_graphs_n3187, 0.002); end
  def test_lever_graphs_o3187; assert_in_epsilon(5843798081503.822, worksheet.lever_graphs_o3187, 0.002); end
  def test_lever_graphs_p3187; assert_in_epsilon(5867602491609.546, worksheet.lever_graphs_p3187, 0.002); end
  def test_lever_graphs_q3187; assert_in_epsilon(5909741824342.67, worksheet.lever_graphs_q3187, 0.002); end
  def test_lever_graphs_d3190; assert_equal("Type of travel", worksheet.lever_graphs_d3190); end
  def test_lever_graphs_e3190; assert_equal("Level", worksheet.lever_graphs_e3190); end
  def test_lever_graphs_f3190; assert_equal("Notes", worksheet.lever_graphs_f3190); end
  def test_lever_graphs_g3190; assert_equal("…", worksheet.lever_graphs_g3190); end
  def test_lever_graphs_h3190; assert_equal("…2", worksheet.lever_graphs_h3190); end
  def test_lever_graphs_i3190; assert_equal("2011", worksheet.lever_graphs_i3190); end
  def test_lever_graphs_j3190; assert_equal("2015", worksheet.lever_graphs_j3190); end
  def test_lever_graphs_k3190; assert_equal("2020", worksheet.lever_graphs_k3190); end
  def test_lever_graphs_l3190; assert_equal("2025", worksheet.lever_graphs_l3190); end
  def test_lever_graphs_m3190; assert_equal("2030", worksheet.lever_graphs_m3190); end
  def test_lever_graphs_n3190; assert_equal("2035", worksheet.lever_graphs_n3190); end
  def test_lever_graphs_o3190; assert_equal("2040", worksheet.lever_graphs_o3190); end
  def test_lever_graphs_p3190; assert_equal("2045", worksheet.lever_graphs_p3190); end
  def test_lever_graphs_q3190; assert_equal("2050", worksheet.lever_graphs_q3190); end
  def test_lever_graphs_d3191; assert_equal("Urban", worksheet.lever_graphs_d3191); end
  def test_lever_graphs_e3191; assert_in_delta(1.0, worksheet.lever_graphs_e3191, 0.002); end
  def test_lever_graphs_i3191; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3191, 0.002); end
  def test_lever_graphs_j3191; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_j3191, 0.002); end
  def test_lever_graphs_k3191; assert_in_epsilon(9463.011291339797, worksheet.lever_graphs_k3191, 0.002); end
  def test_lever_graphs_l3191; assert_in_epsilon(9164.485145705561, worksheet.lever_graphs_l3191, 0.002); end
  def test_lever_graphs_m3191; assert_in_epsilon(8822.250918124892, worksheet.lever_graphs_m3191, 0.002); end
  def test_lever_graphs_n3191; assert_in_epsilon(8494.944177865158, worksheet.lever_graphs_n3191, 0.002); end
  def test_lever_graphs_o3191; assert_in_epsilon(8142.960912641419, worksheet.lever_graphs_o3191, 0.002); end
  def test_lever_graphs_p3191; assert_in_epsilon(7837.912157396099, worksheet.lever_graphs_p3191, 0.002); end
  def test_lever_graphs_q3191; assert_in_epsilon(7536.454372010625, worksheet.lever_graphs_q3191, 0.002); end
  def test_lever_graphs_d3192; assert_equal("Urban", worksheet.lever_graphs_d3192); end
  def test_lever_graphs_e3192; assert_in_epsilon(2.0, worksheet.lever_graphs_e3192, 0.002); end
  def test_lever_graphs_i3192; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3192, 0.002); end
  def test_lever_graphs_j3192; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_j3192, 0.002); end
  def test_lever_graphs_k3192; assert_in_epsilon(9183.308911563887, worksheet.lever_graphs_k3192, 0.002); end
  def test_lever_graphs_l3192; assert_in_epsilon(8824.578070552816, worksheet.lever_graphs_l3192, 0.002); end
  def test_lever_graphs_m3192; assert_in_epsilon(8494.392800691348, worksheet.lever_graphs_m3192, 0.002); end
  def test_lever_graphs_n3192; assert_in_epsilon(8151.735689020062, worksheet.lever_graphs_n3192, 0.002); end
  def test_lever_graphs_o3192; assert_in_epsilon(7814.074709981451, worksheet.lever_graphs_o3192, 0.002); end
  def test_lever_graphs_p3192; assert_in_epsilon(7439.918905478722, worksheet.lever_graphs_p3192, 0.002); end
  def test_lever_graphs_q3192; assert_in_epsilon(7094.521953493011, worksheet.lever_graphs_q3192, 0.002); end
  def test_lever_graphs_d3193; assert_equal("Urban", worksheet.lever_graphs_d3193); end
  def test_lever_graphs_e3193; assert_in_epsilon(3.0, worksheet.lever_graphs_e3193, 0.002); end
  def test_lever_graphs_i3193; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3193, 0.002); end
  def test_lever_graphs_j3193; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_j3193, 0.002); end
  def test_lever_graphs_k3193; assert_in_epsilon(9011.931719538017, worksheet.lever_graphs_k3193, 0.002); end
  def test_lever_graphs_l3193; assert_in_epsilon(8584.200295064007, worksheet.lever_graphs_l3193, 0.002); end
  def test_lever_graphs_m3193; assert_in_epsilon(8177.003734981063, worksheet.lever_graphs_m3193, 0.002); end
  def test_lever_graphs_n3193; assert_in_epsilon(7771.128826721488, worksheet.lever_graphs_n3193, 0.002); end
  def test_lever_graphs_o3193; assert_in_epsilon(7386.92293656425, worksheet.lever_graphs_o3193, 0.002); end
  def test_lever_graphs_p3193; assert_in_epsilon(7025.566667137004, worksheet.lever_graphs_p3193, 0.002); end
  def test_lever_graphs_q3193; assert_in_epsilon(6678.373734313191, worksheet.lever_graphs_q3193, 0.002); end
  def test_lever_graphs_d3194; assert_equal("Urban", worksheet.lever_graphs_d3194); end
  def test_lever_graphs_e3194; assert_in_epsilon(4.0, worksheet.lever_graphs_e3194, 0.002); end
  def test_lever_graphs_i3194; assert_in_epsilon(9187.12956717257, worksheet.lever_graphs_i3194, 0.002); end
  def test_lever_graphs_j3194; assert_in_epsilon(9404.232843830525, worksheet.lever_graphs_j3194, 0.002); end
  def test_lever_graphs_k3194; assert_in_epsilon(8940.585538539712, worksheet.lever_graphs_k3194, 0.002); end
  def test_lever_graphs_l3194; assert_in_epsilon(8429.187798764378, worksheet.lever_graphs_l3194, 0.002); end
  def test_lever_graphs_m3194; assert_in_epsilon(7963.914826714307, worksheet.lever_graphs_m3194, 0.002); end
  def test_lever_graphs_n3194; assert_in_epsilon(7531.699838186547, worksheet.lever_graphs_n3194, 0.002); end
  def test_lever_graphs_o3194; assert_in_epsilon(7123.353042470681, worksheet.lever_graphs_o3194, 0.002); end
  def test_lever_graphs_p3194; assert_in_epsilon(6740.327667286737, worksheet.lever_graphs_p3194, 0.002); end
  def test_lever_graphs_q3194; assert_in_epsilon(6397.53911744443, worksheet.lever_graphs_q3194, 0.002); end
  def test_lever_graphs_d3195; assert_equal("Rural", worksheet.lever_graphs_d3195); end
  def test_lever_graphs_e3195; assert_in_delta(1.0, worksheet.lever_graphs_e3195, 0.002); end
  def test_lever_graphs_i3195; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3195, 0.002); end
  def test_lever_graphs_j3195; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_j3195, 0.002); end
  def test_lever_graphs_k3195; assert_in_epsilon(6925.3862760219245, worksheet.lever_graphs_k3195, 0.002); end
  def test_lever_graphs_l3195; assert_in_epsilon(7592.356082456327, worksheet.lever_graphs_l3195, 0.002); end
  def test_lever_graphs_m3195; assert_in_epsilon(8355.03945930298, worksheet.lever_graphs_m3195, 0.002); end
  def test_lever_graphs_n3195; assert_in_epsilon(9138.721804253428, worksheet.lever_graphs_n3195, 0.002); end
  def test_lever_graphs_o3195; assert_in_epsilon(10026.878976944427, worksheet.lever_graphs_o3195, 0.002); end
  def test_lever_graphs_p3195; assert_in_epsilon(11015.770928571108, worksheet.lever_graphs_p3195, 0.002); end
  def test_lever_graphs_q3195; assert_in_epsilon(12190.167503148017, worksheet.lever_graphs_q3195, 0.002); end
  def test_lever_graphs_d3196; assert_equal("Rural", worksheet.lever_graphs_d3196); end
  def test_lever_graphs_e3196; assert_in_epsilon(2.0, worksheet.lever_graphs_e3196, 0.002); end
  def test_lever_graphs_i3196; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3196, 0.002); end
  def test_lever_graphs_j3196; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_j3196, 0.002); end
  def test_lever_graphs_k3196; assert_in_epsilon(6906.371464742304, worksheet.lever_graphs_k3196, 0.002); end
  def test_lever_graphs_l3196; assert_in_epsilon(7487.601863336815, worksheet.lever_graphs_l3196, 0.002); end
  def test_lever_graphs_m3196; assert_in_epsilon(8147.722067406493, worksheet.lever_graphs_m3196, 0.002); end
  def test_lever_graphs_n3196; assert_in_epsilon(8733.024393656147, worksheet.lever_graphs_n3196, 0.002); end
  def test_lever_graphs_o3196; assert_in_epsilon(9325.258264638895, worksheet.lever_graphs_o3196, 0.002); end
  def test_lever_graphs_p3196; assert_in_epsilon(10025.924494232935, worksheet.lever_graphs_p3196, 0.002); end
  def test_lever_graphs_q3196; assert_in_epsilon(10854.330116689056, worksheet.lever_graphs_q3196, 0.002); end
  def test_lever_graphs_d3197; assert_equal("Rural", worksheet.lever_graphs_d3197); end
  def test_lever_graphs_e3197; assert_in_epsilon(3.0, worksheet.lever_graphs_e3197, 0.002); end
  def test_lever_graphs_i3197; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3197, 0.002); end
  def test_lever_graphs_j3197; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_j3197, 0.002); end
  def test_lever_graphs_k3197; assert_in_epsilon(6764.603498607636, worksheet.lever_graphs_k3197, 0.002); end
  def test_lever_graphs_l3197; assert_in_epsilon(7180.726407633965, worksheet.lever_graphs_l3197, 0.002); end
  def test_lever_graphs_m3197; assert_in_epsilon(7621.138173019842, worksheet.lever_graphs_m3197, 0.002); end
  def test_lever_graphs_n3197; assert_in_epsilon(8111.201881788237, worksheet.lever_graphs_n3197, 0.002); end
  def test_lever_graphs_o3197; assert_in_epsilon(8650.088773472207, worksheet.lever_graphs_o3197, 0.002); end
  def test_lever_graphs_p3197; assert_in_epsilon(9101.596280969263, worksheet.lever_graphs_p3197, 0.002); end
  def test_lever_graphs_q3197; assert_in_epsilon(9623.486216696063, worksheet.lever_graphs_q3197, 0.002); end
  def test_lever_graphs_d3198; assert_equal("Rural", worksheet.lever_graphs_d3198); end
  def test_lever_graphs_e3198; assert_in_epsilon(4.0, worksheet.lever_graphs_e3198, 0.002); end
  def test_lever_graphs_i3198; assert_in_epsilon(5652.722918290269, worksheet.lever_graphs_i3198, 0.002); end
  def test_lever_graphs_j3198; assert_in_epsilon(6293.7247966009845, worksheet.lever_graphs_j3198, 0.002); end
  def test_lever_graphs_k3198; assert_in_epsilon(6748.890269394936, worksheet.lever_graphs_k3198, 0.002); end
  def test_lever_graphs_l3198; assert_in_epsilon(7112.093979290368, worksheet.lever_graphs_l3198, 0.002); end
  def test_lever_graphs_m3198; assert_in_epsilon(7509.605613701526, worksheet.lever_graphs_m3198, 0.002); end
  def test_lever_graphs_n3198; assert_in_epsilon(7955.957081350675, worksheet.lever_graphs_n3198, 0.002); end
  def test_lever_graphs_o3198; assert_in_epsilon(8305.265153390801, worksheet.lever_graphs_o3198, 0.002); end
  def test_lever_graphs_p3198; assert_in_epsilon(8565.281615158943, worksheet.lever_graphs_p3198, 0.002); end
  def test_lever_graphs_q3198; assert_in_epsilon(8890.295307771508, worksheet.lever_graphs_q3198, 0.002); end
  def test_lever_graphs_d3199; assert_equal("International", worksheet.lever_graphs_d3199); end
  def test_lever_graphs_e3199; assert_in_delta(1.0, worksheet.lever_graphs_e3199, 0.002); end
  def test_lever_graphs_i3199; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3199, 0.002); end
  def test_lever_graphs_j3199; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_j3199, 0.002); end
  def test_lever_graphs_k3199; assert_in_epsilon(897.9406682742109, worksheet.lever_graphs_k3199, 0.002); end
  def test_lever_graphs_l3199; assert_in_epsilon(998.419339322835, worksheet.lever_graphs_l3199, 0.002); end
  def test_lever_graphs_m3199; assert_in_epsilon(1122.290588526111, worksheet.lever_graphs_m3199, 0.002); end
  def test_lever_graphs_n3199; assert_in_epsilon(1274.6973511895121, worksheet.lever_graphs_n3199, 0.002); end
  def test_lever_graphs_o3199; assert_in_epsilon(1462.6567746562937, worksheet.lever_graphs_o3199, 0.002); end
  def test_lever_graphs_p3199; assert_in_epsilon(1695.5996827327028, worksheet.lever_graphs_p3199, 0.002); end
  def test_lever_graphs_q3199; assert_in_epsilon(1985.7262804310365, worksheet.lever_graphs_q3199, 0.002); end
  def test_lever_graphs_d3200; assert_equal("International", worksheet.lever_graphs_d3200); end
  def test_lever_graphs_e3200; assert_in_epsilon(2.0, worksheet.lever_graphs_e3200, 0.002); end
  def test_lever_graphs_i3200; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3200, 0.002); end
  def test_lever_graphs_j3200; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_j3200, 0.002); end
  def test_lever_graphs_k3200; assert_in_epsilon(864.564318306252, worksheet.lever_graphs_k3200, 0.002); end
  def test_lever_graphs_l3200; assert_in_epsilon(924.1065536768136, worksheet.lever_graphs_l3200, 0.002); end
  def test_lever_graphs_m3200; assert_in_epsilon(996.8560319082085, worksheet.lever_graphs_m3200, 0.002); end
  def test_lever_graphs_n3200; assert_in_epsilon(1084.6057547650219, worksheet.lever_graphs_n3200, 0.002); end
  def test_lever_graphs_o3200; assert_in_epsilon(1189.9821579356867, worksheet.lever_graphs_o3200, 0.002); end
  def test_lever_graphs_p3200; assert_in_epsilon(1316.5665765657077, worksheet.lever_graphs_p3200, 0.002); end
  def test_lever_graphs_q3200; assert_in_epsilon(1468.7888862507798, worksheet.lever_graphs_q3200, 0.002); end
  def test_lever_graphs_d3201; assert_equal("International", worksheet.lever_graphs_d3201); end
  def test_lever_graphs_e3201; assert_in_epsilon(3.0, worksheet.lever_graphs_e3201, 0.002); end
  def test_lever_graphs_i3201; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3201, 0.002); end
  def test_lever_graphs_j3201; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_j3201, 0.002); end
  def test_lever_graphs_k3201; assert_in_epsilon(822.1087927436154, worksheet.lever_graphs_k3201, 0.002); end
  def test_lever_graphs_l3201; assert_in_epsilon(834.3991744504948, worksheet.lever_graphs_l3201, 0.002); end
  def test_lever_graphs_m3201; assert_in_epsilon(853.3983931175435, worksheet.lever_graphs_m3201, 0.002); end
  def test_lever_graphs_n3201; assert_in_epsilon(878.968510630646, worksheet.lever_graphs_n3201, 0.002); end
  def test_lever_graphs_o3201; assert_in_epsilon(911.4094027664642, worksheet.lever_graphs_o3201, 0.002); end
  def test_lever_graphs_p3201; assert_in_epsilon(951.3974756775061, worksheet.lever_graphs_p3201, 0.002); end
  def test_lever_graphs_q3201; assert_in_epsilon(999.7574805226822, worksheet.lever_graphs_q3201, 0.002); end
  def test_lever_graphs_d3202; assert_equal("International", worksheet.lever_graphs_d3202); end
  def test_lever_graphs_e3202; assert_in_epsilon(4.0, worksheet.lever_graphs_e3202, 0.002); end
  def test_lever_graphs_i3202; assert_in_epsilon(766.3185363489457, worksheet.lever_graphs_i3202, 0.002); end
  def test_lever_graphs_j3202; assert_in_epsilon(816.6986486086666, worksheet.lever_graphs_j3202, 0.002); end
  def test_lever_graphs_k3202; assert_in_epsilon(767.359307076585, worksheet.lever_graphs_k3202, 0.002); end
  def test_lever_graphs_l3202; assert_in_epsilon(727.0476770885373, worksheet.lever_graphs_l3202, 0.002); end
  def test_lever_graphs_m3202; assert_in_epsilon(694.246219820094, worksheet.lever_graphs_m3202, 0.002); end
  def test_lever_graphs_n3202; assert_in_epsilon(667.6724127421297, worksheet.lever_graphs_n3202, 0.002); end
  def test_lever_graphs_o3202; assert_in_epsilon(646.5317453191843, worksheet.lever_graphs_o3202, 0.002); end
  def test_lever_graphs_p3202; assert_in_epsilon(630.3530722995142, worksheet.lever_graphs_p3202, 0.002); end
  def test_lever_graphs_q3202; assert_in_epsilon(618.7599053646178, worksheet.lever_graphs_q3202, 0.002); end
  def test_lever_graphs_b1245; assert_equal("Level", worksheet.lever_graphs_b1245); end
  def test_lever_graphs_c1245; assert_equal("1975", worksheet.lever_graphs_c1245); end
  def test_lever_graphs_d1245; assert_equal("1980", worksheet.lever_graphs_d1245); end
  def test_lever_graphs_e1245; assert_equal("1985", worksheet.lever_graphs_e1245); end
  def test_lever_graphs_f1245; assert_equal("1990", worksheet.lever_graphs_f1245); end
  def test_lever_graphs_g1245; assert_equal("1995", worksheet.lever_graphs_g1245); end
  def test_lever_graphs_h1245; assert_equal("2000", worksheet.lever_graphs_h1245); end
  def test_lever_graphs_i1245; assert_equal("2005", worksheet.lever_graphs_i1245); end
  def test_lever_graphs_j1245; assert_equal("2010", worksheet.lever_graphs_j1245); end
  def test_lever_graphs_k1245; assert_equal("2011", worksheet.lever_graphs_k1245); end
  def test_lever_graphs_l1245; assert_equal("2015", worksheet.lever_graphs_l1245); end
  def test_lever_graphs_m1245; assert_equal("2020", worksheet.lever_graphs_m1245); end
  def test_lever_graphs_n1245; assert_equal("2025", worksheet.lever_graphs_n1245); end
  def test_lever_graphs_o1245; assert_equal("2030", worksheet.lever_graphs_o1245); end
  def test_lever_graphs_p1245; assert_equal("2035", worksheet.lever_graphs_p1245); end
  def test_lever_graphs_q1245; assert_equal("2040", worksheet.lever_graphs_q1245); end
  def test_lever_graphs_r1245; assert_equal("2045", worksheet.lever_graphs_r1245); end
  def test_lever_graphs_s1245; assert_equal("2050", worksheet.lever_graphs_s1245); end
  def test_lever_graphs_b1246; assert_equal("Historic data", worksheet.lever_graphs_b1246); end
  def test_lever_graphs_b1247; assert_in_delta(1.0, worksheet.lever_graphs_b1247, 0.002); end
  def test_lever_graphs_k1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1247, 0.002); end
  def test_lever_graphs_l1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1247, 0.002); end
  def test_lever_graphs_m1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1247, 0.002); end
  def test_lever_graphs_n1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1247, 0.002); end
  def test_lever_graphs_o1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1247, 0.002); end
  def test_lever_graphs_p1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1247, 0.002); end
  def test_lever_graphs_q1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1247, 0.002); end
  def test_lever_graphs_r1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1247, 0.002); end
  def test_lever_graphs_s1247; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1247, 0.002); end
  def test_lever_graphs_b1248; assert_in_epsilon(2.0, worksheet.lever_graphs_b1248, 0.002); end
  def test_lever_graphs_k1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1248, 0.002); end
  def test_lever_graphs_l1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1248, 0.002); end
  def test_lever_graphs_m1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1248, 0.002); end
  def test_lever_graphs_n1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1248, 0.002); end
  def test_lever_graphs_o1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1248, 0.002); end
  def test_lever_graphs_p1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1248, 0.002); end
  def test_lever_graphs_q1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1248, 0.002); end
  def test_lever_graphs_r1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1248, 0.002); end
  def test_lever_graphs_s1248; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1248, 0.002); end
  def test_lever_graphs_b1249; assert_in_epsilon(3.0, worksheet.lever_graphs_b1249, 0.002); end
  def test_lever_graphs_k1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1249, 0.002); end
  def test_lever_graphs_l1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1249, 0.002); end
  def test_lever_graphs_m1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1249, 0.002); end
  def test_lever_graphs_n1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1249, 0.002); end
  def test_lever_graphs_o1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1249, 0.002); end
  def test_lever_graphs_p1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1249, 0.002); end
  def test_lever_graphs_q1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1249, 0.002); end
  def test_lever_graphs_r1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1249, 0.002); end
  def test_lever_graphs_s1249; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1249, 0.002); end
  def test_lever_graphs_b1250; assert_in_epsilon(4.0, worksheet.lever_graphs_b1250, 0.002); end
  def test_lever_graphs_k1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_k1250, 0.002); end
  def test_lever_graphs_l1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_l1250, 0.002); end
  def test_lever_graphs_m1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_m1250, 0.002); end
  def test_lever_graphs_n1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_n1250, 0.002); end
  def test_lever_graphs_o1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_o1250, 0.002); end
  def test_lever_graphs_p1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_p1250, 0.002); end
  def test_lever_graphs_q1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_q1250, 0.002); end
  def test_lever_graphs_r1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_r1250, 0.002); end
  def test_lever_graphs_s1250; assert_in_epsilon(23191.0, worksheet.lever_graphs_s1250, 0.002); end
  def test_lever_graphs_b1255; assert_equal("Level", worksheet.lever_graphs_b1255); end
  def test_lever_graphs_c1255; assert_equal("1975", worksheet.lever_graphs_c1255); end
  def test_lever_graphs_d1255; assert_equal("1980", worksheet.lever_graphs_d1255); end
  def test_lever_graphs_e1255; assert_equal("1985", worksheet.lever_graphs_e1255); end
  def test_lever_graphs_f1255; assert_equal("1990", worksheet.lever_graphs_f1255); end
  def test_lever_graphs_g1255; assert_equal("1995", worksheet.lever_graphs_g1255); end
  def test_lever_graphs_h1255; assert_equal("2000", worksheet.lever_graphs_h1255); end
  def test_lever_graphs_i1255; assert_equal("2005", worksheet.lever_graphs_i1255); end
  def test_lever_graphs_j1255; assert_equal("2010", worksheet.lever_graphs_j1255); end
  def test_lever_graphs_k1255; assert_equal("2011", worksheet.lever_graphs_k1255); end
  def test_lever_graphs_l1255; assert_equal("2015", worksheet.lever_graphs_l1255); end
  def test_lever_graphs_m1255; assert_equal("2020", worksheet.lever_graphs_m1255); end
  def test_lever_graphs_n1255; assert_equal("2025", worksheet.lever_graphs_n1255); end
  def test_lever_graphs_o1255; assert_equal("2030", worksheet.lever_graphs_o1255); end
  def test_lever_graphs_p1255; assert_equal("2035", worksheet.lever_graphs_p1255); end
  def test_lever_graphs_q1255; assert_equal("2040", worksheet.lever_graphs_q1255); end
  def test_lever_graphs_r1255; assert_equal("2045", worksheet.lever_graphs_r1255); end
  def test_lever_graphs_s1255; assert_equal("2050", worksheet.lever_graphs_s1255); end
  def test_lever_graphs_b1256; assert_equal("Historic data", worksheet.lever_graphs_b1256); end
  def test_lever_graphs_b1257; assert_in_delta(1.0, worksheet.lever_graphs_b1257, 0.002); end
  def test_lever_graphs_k1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1257, 0.002); end
  def test_lever_graphs_l1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1257, 0.002); end
  def test_lever_graphs_m1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1257, 0.002); end
  def test_lever_graphs_n1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1257, 0.002); end
  def test_lever_graphs_o1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1257, 0.002); end
  def test_lever_graphs_p1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1257, 0.002); end
  def test_lever_graphs_q1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1257, 0.002); end
  def test_lever_graphs_r1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1257, 0.002); end
  def test_lever_graphs_s1257; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1257, 0.002); end
  def test_lever_graphs_b1258; assert_in_epsilon(2.0, worksheet.lever_graphs_b1258, 0.002); end
  def test_lever_graphs_k1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1258, 0.002); end
  def test_lever_graphs_l1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1258, 0.002); end
  def test_lever_graphs_m1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1258, 0.002); end
  def test_lever_graphs_n1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1258, 0.002); end
  def test_lever_graphs_o1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1258, 0.002); end
  def test_lever_graphs_p1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1258, 0.002); end
  def test_lever_graphs_q1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1258, 0.002); end
  def test_lever_graphs_r1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1258, 0.002); end
  def test_lever_graphs_s1258; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1258, 0.002); end
  def test_lever_graphs_b1259; assert_in_epsilon(3.0, worksheet.lever_graphs_b1259, 0.002); end
  def test_lever_graphs_k1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1259, 0.002); end
  def test_lever_graphs_l1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1259, 0.002); end
  def test_lever_graphs_m1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1259, 0.002); end
  def test_lever_graphs_n1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1259, 0.002); end
  def test_lever_graphs_o1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1259, 0.002); end
  def test_lever_graphs_p1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1259, 0.002); end
  def test_lever_graphs_q1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1259, 0.002); end
  def test_lever_graphs_r1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1259, 0.002); end
  def test_lever_graphs_s1259; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1259, 0.002); end
  def test_lever_graphs_b1260; assert_in_epsilon(4.0, worksheet.lever_graphs_b1260, 0.002); end
  def test_lever_graphs_k1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_k1260, 0.002); end
  def test_lever_graphs_l1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_l1260, 0.002); end
  def test_lever_graphs_m1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_m1260, 0.002); end
  def test_lever_graphs_n1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_n1260, 0.002); end
  def test_lever_graphs_o1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_o1260, 0.002); end
  def test_lever_graphs_p1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_p1260, 0.002); end
  def test_lever_graphs_q1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_q1260, 0.002); end
  def test_lever_graphs_r1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_r1260, 0.002); end
  def test_lever_graphs_s1260; assert_in_epsilon(4007.0, worksheet.lever_graphs_s1260, 0.002); end
  def test_lever_graphs_b1275; assert_equal("Level", worksheet.lever_graphs_b1275); end
  def test_lever_graphs_c1275; assert_equal("1975", worksheet.lever_graphs_c1275); end
  def test_lever_graphs_d1275; assert_equal("1980", worksheet.lever_graphs_d1275); end
  def test_lever_graphs_e1275; assert_equal("1985", worksheet.lever_graphs_e1275); end
  def test_lever_graphs_f1275; assert_equal("1990", worksheet.lever_graphs_f1275); end
  def test_lever_graphs_g1275; assert_equal("1995", worksheet.lever_graphs_g1275); end
  def test_lever_graphs_h1275; assert_equal("2000", worksheet.lever_graphs_h1275); end
  def test_lever_graphs_i1275; assert_equal("2005", worksheet.lever_graphs_i1275); end
  def test_lever_graphs_j1275; assert_equal("2010", worksheet.lever_graphs_j1275); end
  def test_lever_graphs_k1275; assert_equal("2011", worksheet.lever_graphs_k1275); end
  def test_lever_graphs_l1275; assert_equal("2015", worksheet.lever_graphs_l1275); end
  def test_lever_graphs_m1275; assert_equal("2020", worksheet.lever_graphs_m1275); end
  def test_lever_graphs_n1275; assert_equal("2025", worksheet.lever_graphs_n1275); end
  def test_lever_graphs_o1275; assert_equal("2030", worksheet.lever_graphs_o1275); end
  def test_lever_graphs_p1275; assert_equal("2035", worksheet.lever_graphs_p1275); end
  def test_lever_graphs_q1275; assert_equal("2040", worksheet.lever_graphs_q1275); end
  def test_lever_graphs_r1275; assert_equal("2045", worksheet.lever_graphs_r1275); end
  def test_lever_graphs_s1275; assert_equal("2050", worksheet.lever_graphs_s1275); end
  def test_lever_graphs_b1276; assert_equal("Historic data", worksheet.lever_graphs_b1276); end
  def test_lever_graphs_b1277; assert_in_delta(1.0, worksheet.lever_graphs_b1277, 0.002); end
  def test_lever_graphs_k1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1277, 0.002); end
  def test_lever_graphs_l1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1277, 0.002); end
  def test_lever_graphs_m1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1277, 0.002); end
  def test_lever_graphs_n1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1277, 0.002); end
  def test_lever_graphs_o1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1277, 0.002); end
  def test_lever_graphs_p1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1277, 0.002); end
  def test_lever_graphs_q1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1277, 0.002); end
  def test_lever_graphs_r1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1277, 0.002); end
  def test_lever_graphs_s1277; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1277, 0.002); end
  def test_lever_graphs_b1278; assert_in_epsilon(2.0, worksheet.lever_graphs_b1278, 0.002); end
  def test_lever_graphs_k1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1278, 0.002); end
  def test_lever_graphs_l1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1278, 0.002); end
  def test_lever_graphs_m1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1278, 0.002); end
  def test_lever_graphs_n1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1278, 0.002); end
  def test_lever_graphs_o1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1278, 0.002); end
  def test_lever_graphs_p1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1278, 0.002); end
  def test_lever_graphs_q1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1278, 0.002); end
  def test_lever_graphs_r1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1278, 0.002); end
  def test_lever_graphs_s1278; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1278, 0.002); end
  def test_lever_graphs_b1279; assert_in_epsilon(3.0, worksheet.lever_graphs_b1279, 0.002); end
  def test_lever_graphs_k1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1279, 0.002); end
  def test_lever_graphs_l1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1279, 0.002); end
  def test_lever_graphs_m1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1279, 0.002); end
  def test_lever_graphs_n1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1279, 0.002); end
  def test_lever_graphs_o1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1279, 0.002); end
  def test_lever_graphs_p1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1279, 0.002); end
  def test_lever_graphs_q1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1279, 0.002); end
  def test_lever_graphs_r1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1279, 0.002); end
  def test_lever_graphs_s1279; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1279, 0.002); end
  def test_lever_graphs_b1280; assert_in_epsilon(4.0, worksheet.lever_graphs_b1280, 0.002); end
  def test_lever_graphs_k1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_k1280, 0.002); end
  def test_lever_graphs_l1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_l1280, 0.002); end
  def test_lever_graphs_m1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_m1280, 0.002); end
  def test_lever_graphs_n1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_n1280, 0.002); end
  def test_lever_graphs_o1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_o1280, 0.002); end
  def test_lever_graphs_p1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_p1280, 0.002); end
  def test_lever_graphs_q1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_q1280, 0.002); end
  def test_lever_graphs_r1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_r1280, 0.002); end
  def test_lever_graphs_s1280; assert_in_epsilon(233.26483269454, worksheet.lever_graphs_s1280, 0.002); end
  def test_outputs_energy_d62; assert_equal("Transport", worksheet.outputs_energy_d62); end
  def test_outputs_energy_f62; assert_equal("Excludes pipeline transport", worksheet.outputs_energy_f62); end
  def test_outputs_energy_h62; assert_in_epsilon(45.51369989, worksheet.outputs_energy_h62, 0.002); end
  def test_outputs_energy_i62; assert_in_epsilon(51.52193813, worksheet.outputs_energy_i62, 0.002); end
  def test_outputs_energy_j62; assert_in_epsilon(54.43186451, worksheet.outputs_energy_j62, 0.002); end
  def test_outputs_energy_k62; assert_in_epsilon(63.75351718, worksheet.outputs_energy_k62, 0.002); end
  def test_outputs_energy_l62; assert_in_epsilon(69.78995546, worksheet.outputs_energy_l62, 0.002); end
  def test_outputs_energy_m62; assert_in_epsilon(79.59210571, worksheet.outputs_energy_m62, 0.002); end
  def test_outputs_energy_n62; assert_in_epsilon(89.33971209, worksheet.outputs_energy_n62, 0.002); end
  def test_outputs_energy_o62; assert_in_epsilon(98.25619647, worksheet.outputs_energy_o62, 0.002); end
  def test_outputs_energy_p62; assert_in_epsilon(99.72109669, worksheet.outputs_energy_p62, 0.002); end
  def test_outputs_energy_r62; assert_in_epsilon(99.42401773955957, worksheet.outputs_energy_r62, 0.002); end
  def test_outputs_energy_s62; assert_in_epsilon(117.63583572588337, worksheet.outputs_energy_s62, 0.002); end
  def test_outputs_energy_t62; assert_in_epsilon(128.760813608959, worksheet.outputs_energy_t62, 0.002); end
  def test_outputs_energy_u62; assert_in_epsilon(136.4177868117951, worksheet.outputs_energy_u62, 0.002); end
  def test_outputs_energy_v62; assert_in_epsilon(143.1765019077929, worksheet.outputs_energy_v62, 0.002); end
  def test_outputs_energy_w62; assert_in_epsilon(147.7333537130125, worksheet.outputs_energy_w62, 0.002); end
  def test_outputs_energy_x62; assert_in_epsilon(150.07400692505672, worksheet.outputs_energy_x62, 0.002); end
  def test_outputs_energy_y62; assert_in_epsilon(152.7710359080702, worksheet.outputs_energy_y62, 0.002); end
  def test_outputs_energy_z62; assert_in_epsilon(155.99747852189017, worksheet.outputs_energy_z62, 0.002); end
  def test_outputs_energy_d64; assert_equal("Residential, public and commercial", worksheet.outputs_energy_d64); end
  def test_outputs_energy_h64; assert_in_epsilon(64.751263, worksheet.outputs_energy_h64, 0.002); end
  def test_outputs_energy_i64; assert_in_epsilon(71.065102, worksheet.outputs_energy_i64, 0.002); end
  def test_outputs_energy_j64; assert_in_epsilon(78.65053599999999, worksheet.outputs_energy_j64, 0.002); end
  def test_outputs_energy_k64; assert_in_epsilon(83.372944, worksheet.outputs_energy_k64, 0.002); end
  def test_outputs_energy_l64; assert_in_epsilon(93.688429, worksheet.outputs_energy_l64, 0.002); end
  def test_outputs_energy_m64; assert_in_epsilon(99.817678, worksheet.outputs_energy_m64, 0.002); end
  def test_outputs_energy_n64; assert_in_epsilon(108.462211, worksheet.outputs_energy_n64, 0.002); end
  def test_outputs_energy_o64; assert_in_epsilon(116.897329, worksheet.outputs_energy_o64, 0.002); end
  def test_outputs_energy_p64; assert_in_epsilon(116.729656, worksheet.outputs_energy_p64, 0.002); end
  def test_outputs_energy_r64; assert_in_epsilon(115.19348007126989, worksheet.outputs_energy_r64, 0.002); end
  def test_outputs_energy_s64; assert_in_epsilon(122.3725798661341, worksheet.outputs_energy_s64, 0.002); end
  def test_outputs_energy_t64; assert_in_epsilon(128.22427493318003, worksheet.outputs_energy_t64, 0.002); end
  def test_outputs_energy_u64; assert_in_epsilon(133.67670278226595, worksheet.outputs_energy_u64, 0.002); end
  def test_outputs_energy_v64; assert_in_epsilon(138.66532517272933, worksheet.outputs_energy_v64, 0.002); end
  def test_outputs_energy_w64; assert_in_epsilon(143.158445810158, worksheet.outputs_energy_w64, 0.002); end
  def test_outputs_energy_x64; assert_in_epsilon(147.09380041811966, worksheet.outputs_energy_x64, 0.002); end
  def test_outputs_energy_y64; assert_in_epsilon(150.4604373398366, worksheet.outputs_energy_y64, 0.002); end
  def test_outputs_energy_z64; assert_in_epsilon(153.1544166377607, worksheet.outputs_energy_z64, 0.002); end
  def test_outputs_energy_d66; assert_equal("Manufacturing", worksheet.outputs_energy_d66); end
  def test_outputs_energy_h66; assert_in_epsilon(77.74494084, worksheet.outputs_energy_h66, 0.002); end
  def test_outputs_energy_i66; assert_in_epsilon(90.57849988, worksheet.outputs_energy_i66, 0.002); end
  def test_outputs_energy_j66; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j66, 0.002); end
  def test_outputs_energy_k66; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k66, 0.002); end
  def test_outputs_energy_l66; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l66, 0.002); end
  def test_outputs_energy_m66; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m66, 0.002); end
  def test_outputs_energy_n66; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n66, 0.002); end
  def test_outputs_energy_o66; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o66, 0.002); end
  def test_outputs_energy_p66; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p66, 0.002); end
  def test_outputs_energy_r66; assert_in_epsilon(143.34762076351507, worksheet.outputs_energy_r66, 0.002); end
  def test_outputs_energy_s66; assert_in_epsilon(151.98575434727314, worksheet.outputs_energy_s66, 0.002); end
  def test_outputs_energy_t66; assert_in_epsilon(162.35183321808827, worksheet.outputs_energy_t66, 0.002); end
  def test_outputs_energy_u66; assert_in_epsilon(177.2870315862578, worksheet.outputs_energy_u66, 0.002); end
  def test_outputs_energy_v66; assert_in_epsilon(192.23288914846592, worksheet.outputs_energy_v66, 0.002); end
  def test_outputs_energy_w66; assert_in_epsilon(206.73103284164543, worksheet.outputs_energy_w66, 0.002); end
  def test_outputs_energy_x66; assert_in_epsilon(221.7906335309416, worksheet.outputs_energy_x66, 0.002); end
  def test_outputs_energy_y66; assert_in_epsilon(236.65556085367595, worksheet.outputs_energy_y66, 0.002); end
  def test_outputs_energy_z66; assert_in_epsilon(251.54898827776302, worksheet.outputs_energy_z66, 0.002); end
  def test_outputs_energy_d68; assert_equal("Other end uses", worksheet.outputs_energy_d68); end
  def test_outputs_energy_h68; assert_in_epsilon(11.382796, worksheet.outputs_energy_h68, 0.002); end
  def test_outputs_energy_i68; assert_in_epsilon(12.904924, worksheet.outputs_energy_i68, 0.002); end
  def test_outputs_energy_j68; assert_in_epsilon(13.314676, worksheet.outputs_energy_j68, 0.002); end
  def test_outputs_energy_k68; assert_in_epsilon(18.042997, worksheet.outputs_energy_k68, 0.002); end
  def test_outputs_energy_l68; assert_in_epsilon(11.223171, worksheet.outputs_energy_l68, 0.002); end
  def test_outputs_energy_m68; assert_in_epsilon(9.567384, worksheet.outputs_energy_m68, 0.002); end
  def test_outputs_energy_n68; assert_in_epsilon(11.61567, worksheet.outputs_energy_n68, 0.002); end
  def test_outputs_energy_o68; assert_in_epsilon(12.64839, worksheet.outputs_energy_o68, 0.002); end
  def test_outputs_energy_p68; assert_in_epsilon(12.784689, worksheet.outputs_energy_p68, 0.002); end
  def test_outputs_energy_r68; assert_in_epsilon(12.417000000000002, worksheet.outputs_energy_r68, 0.002); end
  def test_outputs_energy_s68; assert_in_epsilon(12.887298340401426, worksheet.outputs_energy_s68, 0.002); end
  def test_outputs_energy_t68; assert_in_epsilon(13.407814799203702, worksheet.outputs_energy_t68, 0.002); end
  def test_outputs_energy_u68; assert_in_epsilon(13.921846398104908, worksheet.outputs_energy_u68, 0.002); end
  def test_outputs_energy_v68; assert_in_epsilon(14.44838790926384, worksheet.outputs_energy_v68, 0.002); end
  def test_outputs_energy_w68; assert_in_epsilon(14.996877635707257, worksheet.outputs_energy_w68, 0.002); end
  def test_outputs_energy_x68; assert_in_epsilon(15.492693364637997, worksheet.outputs_energy_x68, 0.002); end
  def test_outputs_energy_y68; assert_in_epsilon(15.868695707346166, worksheet.outputs_energy_y68, 0.002); end
  def test_outputs_energy_z68; assert_in_epsilon(16.168846331876324, worksheet.outputs_energy_z68, 0.002); end
  def test_outputs_energy_d70; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_d70); end
  def test_outputs_energy_h70; assert_in_delta(0.0, (worksheet.outputs_energy_h70||0), 0.002); end
  def test_outputs_energy_i70; assert_in_delta(0.0, (worksheet.outputs_energy_i70||0), 0.002); end
  def test_outputs_energy_j70; assert_in_delta(0.0, (worksheet.outputs_energy_j70||0), 0.002); end
  def test_outputs_energy_k70; assert_in_delta(0.0, (worksheet.outputs_energy_k70||0), 0.002); end
  def test_outputs_energy_l70; assert_in_delta(0.0, (worksheet.outputs_energy_l70||0), 0.002); end
  def test_outputs_energy_m70; assert_in_delta(0.0, (worksheet.outputs_energy_m70||0), 0.002); end
  def test_outputs_energy_n70; assert_in_delta(0.0, (worksheet.outputs_energy_n70||0), 0.002); end
  def test_outputs_energy_o70; assert_in_delta(0.0, (worksheet.outputs_energy_o70||0), 0.002); end
  def test_outputs_energy_p70; assert_in_delta(0.0, (worksheet.outputs_energy_p70||0), 0.002); end
  def test_outputs_energy_r70; assert_in_delta(0.0, (worksheet.outputs_energy_r70||0), 0.002); end
  def test_outputs_energy_s70; assert_in_delta(0.0, (worksheet.outputs_energy_s70||0), 0.002); end
  def test_outputs_energy_t70; assert_in_delta(0.0, (worksheet.outputs_energy_t70||0), 0.002); end
  def test_outputs_energy_u70; assert_in_delta(0.0, (worksheet.outputs_energy_u70||0), 0.002); end
  def test_outputs_energy_v70; assert_in_delta(0.0, (worksheet.outputs_energy_v70||0), 0.002); end
  def test_outputs_energy_w70; assert_in_delta(0.0, (worksheet.outputs_energy_w70||0), 0.002); end
  def test_outputs_energy_x70; assert_in_delta(0.0, (worksheet.outputs_energy_x70||0), 0.002); end
  def test_outputs_energy_y70; assert_in_delta(0.0, (worksheet.outputs_energy_y70||0), 0.002); end
  def test_outputs_energy_z70; assert_in_delta(0.0, (worksheet.outputs_energy_z70||0), 0.002); end
  def test_outputs_energy_d110; assert_equal("Description", worksheet.outputs_energy_d110); end
  def test_outputs_energy_f110; assert_equal("Notes", worksheet.outputs_energy_f110); end
  def test_outputs_energy_h110; assert_equal("1975", worksheet.outputs_energy_h110); end
  def test_outputs_energy_i110; assert_equal("1980", worksheet.outputs_energy_i110); end
  def test_outputs_energy_j110; assert_equal("1985", worksheet.outputs_energy_j110); end
  def test_outputs_energy_k110; assert_equal("1990", worksheet.outputs_energy_k110); end
  def test_outputs_energy_l110; assert_equal("1995", worksheet.outputs_energy_l110); end
  def test_outputs_energy_m110; assert_equal("2000", worksheet.outputs_energy_m110); end
  def test_outputs_energy_n110; assert_equal("2005", worksheet.outputs_energy_n110); end
  def test_outputs_energy_o110; assert_in_epsilon(2010.0, worksheet.outputs_energy_o110, 0.002); end
  def test_outputs_energy_p110; assert_in_epsilon(2011.0, worksheet.outputs_energy_p110, 0.002); end
  def test_outputs_energy_r110; assert_in_epsilon(2011.0, worksheet.outputs_energy_r110, 0.002); end
  def test_outputs_energy_s110; assert_equal("2015", worksheet.outputs_energy_s110); end
  def test_outputs_energy_t110; assert_equal("2020", worksheet.outputs_energy_t110); end
  def test_outputs_energy_u110; assert_equal("2025", worksheet.outputs_energy_u110); end
  def test_outputs_energy_v110; assert_equal("2030", worksheet.outputs_energy_v110); end
  def test_outputs_energy_w110; assert_equal("2035", worksheet.outputs_energy_w110); end
  def test_outputs_energy_x110; assert_equal("2040", worksheet.outputs_energy_x110); end
  def test_outputs_energy_y110; assert_equal("2045", worksheet.outputs_energy_y110); end
  def test_outputs_energy_z110; assert_equal("2050", worksheet.outputs_energy_z110); end
  def test_outputs_energy_d111; assert_equal("Global nuclear fission", worksheet.outputs_energy_d111); end
  def test_outputs_energy_h111; assert_in_epsilon(4.19362582, worksheet.outputs_energy_h111, 0.002); end
  def test_outputs_energy_i111; assert_in_epsilon(7.8046283700000005, worksheet.outputs_energy_i111, 0.002); end
  def test_outputs_energy_j111; assert_in_epsilon(16.30822419, worksheet.outputs_energy_j111, 0.002); end
  def test_outputs_energy_k111; assert_in_epsilon(22.00642022, worksheet.outputs_energy_k111, 0.002); end
  def test_outputs_energy_l111; assert_in_epsilon(25.464435710000004, worksheet.outputs_energy_l111, 0.002); end
  def test_outputs_energy_m111; assert_in_epsilon(28.28553115, worksheet.outputs_energy_m111, 0.002); end
  def test_outputs_energy_n111; assert_in_epsilon(30.221805240000002, worksheet.outputs_energy_n111, 0.002); end
  def test_outputs_energy_o111; assert_in_epsilon(30.10136047, worksheet.outputs_energy_o111, 0.002); end
  def test_outputs_energy_p111; assert_in_epsilon(28.219279020000002, worksheet.outputs_energy_p111, 0.002); end
  def test_outputs_energy_r111; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_r111, 0.002); end
  def test_outputs_energy_s111; assert_in_epsilon(32.15380656912042, worksheet.outputs_energy_s111, 0.002); end
  def test_outputs_energy_t111; assert_in_epsilon(33.02625127433693, worksheet.outputs_energy_t111, 0.002); end
  def test_outputs_energy_u111; assert_in_epsilon(35.01016110558949, worksheet.outputs_energy_u111, 0.002); end
  def test_outputs_energy_v111; assert_in_epsilon(35.83235112380758, worksheet.outputs_energy_v111, 0.002); end
  def test_outputs_energy_w111; assert_in_epsilon(39.67377959576061, worksheet.outputs_energy_w111, 0.002); end
  def test_outputs_energy_x111; assert_in_epsilon(40.95327765602627, worksheet.outputs_energy_x111, 0.002); end
  def test_outputs_energy_y111; assert_in_epsilon(42.75957463926615, worksheet.outputs_energy_y111, 0.002); end
  def test_outputs_energy_z111; assert_in_epsilon(44.51400802028767, worksheet.outputs_energy_z111, 0.002); end
  def test_outputs_energy_d113; assert_equal("Global solar, wind, wave and tidal", worksheet.outputs_energy_d113); end
  def test_outputs_energy_h113; assert_in_delta(0.0020015000000000002, worksheet.outputs_energy_h113, 0.002); end
  def test_outputs_energy_i113; assert_in_delta(0.00299071, worksheet.outputs_energy_i113, 0.002); end
  def test_outputs_energy_j113; assert_in_delta(0.01511665, worksheet.outputs_energy_j113, 0.002); end
  def test_outputs_energy_k113; assert_in_delta(0.09888171, worksheet.outputs_energy_k113, 0.002); end
  def test_outputs_energy_l113; assert_in_delta(0.13671401, worksheet.outputs_energy_l113, 0.002); end
  def test_outputs_energy_m113; assert_in_delta(0.33011757999999997, worksheet.outputs_energy_m113, 0.002); end
  def test_outputs_energy_n113; assert_in_delta(0.6894200899999999, worksheet.outputs_energy_n113, 0.002); end
  def test_outputs_energy_o113; assert_in_epsilon(1.98106908, worksheet.outputs_energy_o113, 0.002); end
  def test_outputs_energy_p113; assert_in_epsilon(2.55947734, worksheet.outputs_energy_p113, 0.002); end
  def test_outputs_energy_r113; assert_in_epsilon(1.835384616144, worksheet.outputs_energy_r113, 0.002); end
  def test_outputs_energy_s113; assert_in_epsilon(3.4463074266105, worksheet.outputs_energy_s113, 0.002); end
  def test_outputs_energy_t113; assert_in_epsilon(5.274455516250834, worksheet.outputs_energy_t113, 0.002); end
  def test_outputs_energy_u113; assert_in_epsilon(6.668287778607715, worksheet.outputs_energy_u113, 0.002); end
  def test_outputs_energy_v113; assert_in_epsilon(9.165634658553104, worksheet.outputs_energy_v113, 0.002); end
  def test_outputs_energy_w113; assert_in_epsilon(10.595567594064642, worksheet.outputs_energy_w113, 0.002); end
  def test_outputs_energy_x113; assert_in_epsilon(13.869026569793702, worksheet.outputs_energy_x113, 0.002); end
  def test_outputs_energy_y113; assert_in_epsilon(21.423882039423596, worksheet.outputs_energy_y113, 0.002); end
  def test_outputs_energy_z113; assert_in_epsilon(27.27421731281254, worksheet.outputs_energy_z113, 0.002); end
  def test_outputs_energy_d115; assert_equal("Global geothermal", worksheet.outputs_energy_d115); end
  def test_outputs_energy_h115; assert_in_delta(0.30633308, worksheet.outputs_energy_h115, 0.002); end
  def test_outputs_energy_i115; assert_in_delta(0.51899125, worksheet.outputs_energy_i115, 0.002); end
  def test_outputs_energy_j115; assert_in_delta(0.87833525, worksheet.outputs_energy_j115, 0.002); end
  def test_outputs_energy_k115; assert_in_epsilon(1.42030705, worksheet.outputs_energy_k115, 0.002); end
  def test_outputs_energy_l115; assert_in_epsilon(1.64006674, worksheet.outputs_energy_l115, 0.002); end
  def test_outputs_energy_m115; assert_in_epsilon(2.1821505699999997, worksheet.outputs_energy_m115, 0.002); end
  def test_outputs_energy_n115; assert_in_epsilon(2.25915872, worksheet.outputs_energy_n115, 0.002); end
  def test_outputs_energy_o115; assert_in_epsilon(2.70416419, worksheet.outputs_energy_o115, 0.002); end
  def test_outputs_energy_p115; assert_in_epsilon(2.75792299, worksheet.outputs_energy_p115, 0.002); end
  def test_outputs_energy_r115; assert_in_epsilon(2.6331345863999998, worksheet.outputs_energy_r115, 0.002); end
  def test_outputs_energy_s115; assert_in_epsilon(3.333192775560331, worksheet.outputs_energy_s115, 0.002); end
  def test_outputs_energy_t115; assert_in_epsilon(4.05129719053816, worksheet.outputs_energy_t115, 0.002); end
  def test_outputs_energy_u115; assert_in_epsilon(4.604258176820889, worksheet.outputs_energy_u115, 0.002); end
  def test_outputs_energy_v115; assert_in_epsilon(5.397928321023374, worksheet.outputs_energy_v115, 0.002); end
  def test_outputs_energy_w115; assert_in_epsilon(8.324611130012148, worksheet.outputs_energy_w115, 0.002); end
  def test_outputs_energy_x115; assert_in_epsilon(10.340892269938646, worksheet.outputs_energy_x115, 0.002); end
  def test_outputs_energy_y115; assert_in_epsilon(14.435253893337357, worksheet.outputs_energy_y115, 0.002); end
  def test_outputs_energy_z115; assert_in_epsilon(18.07530311459353, worksheet.outputs_energy_z115, 0.002); end
  def test_outputs_energy_d117; assert_equal("Global hydro", worksheet.outputs_energy_d117); end
  def test_outputs_energy_h117; assert_in_epsilon(5.19828432, worksheet.outputs_energy_h117, 0.002); end
  def test_outputs_energy_i117; assert_in_epsilon(6.1818085300000005, worksheet.outputs_energy_i117, 0.002); end
  def test_outputs_energy_j117; assert_in_epsilon(7.10472662, worksheet.outputs_energy_j117, 0.002); end
  def test_outputs_energy_k117; assert_in_epsilon(7.721542830000001, worksheet.outputs_energy_k117, 0.002); end
  def test_outputs_energy_l117; assert_in_epsilon(8.93036678, worksheet.outputs_energy_l117, 0.002); end
  def test_outputs_energy_m117; assert_in_epsilon(9.43535406, worksheet.outputs_energy_m117, 0.002); end
  def test_outputs_energy_n117; assert_in_epsilon(10.548209940000001, worksheet.outputs_energy_n117, 0.002); end
  def test_outputs_energy_o117; assert_in_epsilon(12.39218819, worksheet.outputs_energy_o117, 0.002); end
  def test_outputs_energy_p117; assert_in_epsilon(12.56761896, worksheet.outputs_energy_p117, 0.002); end
  def test_outputs_energy_r117; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r117, 0.002); end
  def test_outputs_energy_s117; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s117, 0.002); end
  def test_outputs_energy_t117; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t117, 0.002); end
  def test_outputs_energy_u117; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u117, 0.002); end
  def test_outputs_energy_v117; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v117, 0.002); end
  def test_outputs_energy_w117; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w117, 0.002); end
  def test_outputs_energy_x117; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x117, 0.002); end
  def test_outputs_energy_y117; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y117, 0.002); end
  def test_outputs_energy_z117; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z117, 0.002); end
  def test_outputs_energy_d119; assert_equal("Global bioenergy and waste", worksheet.outputs_energy_d119); end
  def test_outputs_energy_f119; assert_equal("Includes non-renewable waste", worksheet.outputs_energy_f119); end
  def test_outputs_energy_h119; assert_in_epsilon(27.98767366, worksheet.outputs_energy_h119, 0.002); end
  def test_outputs_energy_i119; assert_in_epsilon(31.29700324, worksheet.outputs_energy_i119, 0.002); end
  def test_outputs_energy_j119; assert_in_epsilon(34.98284341, worksheet.outputs_energy_j119, 0.002); end
  def test_outputs_energy_k119; assert_in_epsilon(37.95396458, worksheet.outputs_energy_k119, 0.002); end
  def test_outputs_energy_l119; assert_in_epsilon(40.54645287, worksheet.outputs_energy_l119, 0.002); end
  def test_outputs_energy_m119; assert_in_epsilon(43.24484074, worksheet.outputs_energy_m119, 0.002); end
  def test_outputs_energy_n119; assert_in_epsilon(47.20029634, worksheet.outputs_energy_n119, 0.002); end
  def test_outputs_energy_o119; assert_in_epsilon(54.22172151, worksheet.outputs_energy_o119, 0.002); end
  def test_outputs_energy_p119; assert_in_epsilon(54.93713229, worksheet.outputs_energy_p119, 0.002); end
  def test_outputs_energy_r119; assert_in_epsilon(58.797381534610764, worksheet.outputs_energy_r119, 0.002); end
  def test_outputs_energy_s119; assert_in_epsilon(57.53700068421634, worksheet.outputs_energy_s119, 0.002); end
  def test_outputs_energy_t119; assert_in_epsilon(56.908277256422885, worksheet.outputs_energy_t119, 0.002); end
  def test_outputs_energy_u119; assert_in_epsilon(56.278867312535176, worksheet.outputs_energy_u119, 0.002); end
  def test_outputs_energy_v119; assert_in_epsilon(55.70096479915611, worksheet.outputs_energy_v119, 0.002); end
  def test_outputs_energy_w119; assert_in_epsilon(55.41465206795496, worksheet.outputs_energy_w119, 0.002); end
  def test_outputs_energy_x119; assert_in_epsilon(55.318791034413174, worksheet.outputs_energy_x119, 0.002); end
  def test_outputs_energy_y119; assert_in_epsilon(55.95600588789406, worksheet.outputs_energy_y119, 0.002); end
  def test_outputs_energy_z119; assert_in_epsilon(56.82561915788882, worksheet.outputs_energy_z119, 0.002); end
  def test_outputs_energy_d121; assert_equal("Global heat", worksheet.outputs_energy_d121); end
  def test_outputs_energy_h121; assert_in_delta(0.0, (worksheet.outputs_energy_h121||0), 0.002); end
  def test_outputs_energy_i121; assert_in_delta(0.0, (worksheet.outputs_energy_i121||0), 0.002); end
  def test_outputs_energy_j121; assert_in_delta(0.0, (worksheet.outputs_energy_j121||0), 0.002); end
  def test_outputs_energy_k121; assert_in_delta(0.00596866, worksheet.outputs_energy_k121, 0.002); end
  def test_outputs_energy_l121; assert_in_delta(0.01832307, worksheet.outputs_energy_l121, 0.002); end
  def test_outputs_energy_m121; assert_in_delta(0.0302848, worksheet.outputs_energy_m121, 0.002); end
  def test_outputs_energy_n121; assert_in_delta(0.03805726, worksheet.outputs_energy_n121, 0.002); end
  def test_outputs_energy_o121; assert_in_delta(0.04253198, worksheet.outputs_energy_o121, 0.002); end
  def test_outputs_energy_p121; assert_in_delta(0.04491708, worksheet.outputs_energy_p121, 0.002); end
  def test_outputs_energy_r121; assert_in_epsilon(3.71647618858541, worksheet.outputs_energy_r121, 0.002); end
  def test_outputs_energy_s121; assert_in_epsilon(4.179205778761453, worksheet.outputs_energy_s121, 0.002); end
  def test_outputs_energy_t121; assert_in_epsilon(4.949881056060994, worksheet.outputs_energy_t121, 0.002); end
  def test_outputs_energy_u121; assert_in_epsilon(5.765938884379526, worksheet.outputs_energy_u121, 0.002); end
  def test_outputs_energy_v121; assert_in_epsilon(6.6105996908929825, worksheet.outputs_energy_v121, 0.002); end
  def test_outputs_energy_w121; assert_in_epsilon(7.455791209512674, worksheet.outputs_energy_w121, 0.002); end
  def test_outputs_energy_x121; assert_in_epsilon(8.30335547091553, worksheet.outputs_energy_x121, 0.002); end
  def test_outputs_energy_y121; assert_in_epsilon(9.119729971580755, worksheet.outputs_energy_y121, 0.002); end
  def test_outputs_energy_z121; assert_in_epsilon(9.90963015195347, worksheet.outputs_energy_z121, 0.002); end
  def test_outputs_energy_d123; assert_equal("Global coal and peat", worksheet.outputs_energy_d123); end
  def test_outputs_energy_h123; assert_in_epsilon(64.46762364, worksheet.outputs_energy_h123, 0.002); end
  def test_outputs_energy_i123; assert_in_epsilon(74.84613603, worksheet.outputs_energy_i123, 0.002); end
  def test_outputs_energy_j123; assert_in_epsilon(84.35058561, worksheet.outputs_energy_j123, 0.002); end
  def test_outputs_energy_k123; assert_in_epsilon(93.38481894, worksheet.outputs_energy_k123, 0.002); end
  def test_outputs_energy_l123; assert_in_epsilon(93.03324736, worksheet.outputs_energy_l123, 0.002); end
  def test_outputs_energy_m123; assert_in_epsilon(98.72034811, worksheet.outputs_energy_m123, 0.002); end
  def test_outputs_energy_n123; assert_in_epsilon(124.50467193, worksheet.outputs_energy_n123, 0.002); end
  def test_outputs_energy_o123; assert_in_epsilon(150.53606094, worksheet.outputs_energy_o123, 0.002); end
  def test_outputs_energy_p123; assert_in_epsilon(158.09611592, worksheet.outputs_energy_p123, 0.002); end
  def test_outputs_energy_r123; assert_in_epsilon(173.15325173758544, worksheet.outputs_energy_r123, 0.002); end
  def test_outputs_energy_s123; assert_in_epsilon(173.72650077468333, worksheet.outputs_energy_s123, 0.002); end
  def test_outputs_energy_t123; assert_in_epsilon(191.23388042498354, worksheet.outputs_energy_t123, 0.002); end
  def test_outputs_energy_u123; assert_in_epsilon(217.05579522941218, worksheet.outputs_energy_u123, 0.002); end
  def test_outputs_energy_v123; assert_in_epsilon(236.68191481852813, worksheet.outputs_energy_v123, 0.002); end
  def test_outputs_energy_w123; assert_in_epsilon(252.33798135017628, worksheet.outputs_energy_w123, 0.002); end
  def test_outputs_energy_x123; assert_in_epsilon(262.889793992599, worksheet.outputs_energy_x123, 0.002); end
  def test_outputs_energy_y123; assert_in_epsilon(258.7784868320405, worksheet.outputs_energy_y123, 0.002); end
  def test_outputs_energy_z123; assert_in_epsilon(259.4704735368554, worksheet.outputs_energy_z123, 0.002); end
  def test_outputs_energy_d125; assert_equal("Global oil ", worksheet.outputs_energy_d125); end
  def test_outputs_energy_h125; assert_in_epsilon(116.5233284, worksheet.outputs_energy_h125, 0.002); end
  def test_outputs_energy_i125; assert_in_epsilon(131.85643926000003, worksheet.outputs_energy_i125, 0.002); end
  def test_outputs_energy_j125; assert_in_epsilon(122.84000791, worksheet.outputs_energy_j125, 0.002); end
  def test_outputs_energy_k125; assert_in_epsilon(137.87919456, worksheet.outputs_energy_k125, 0.002); end
  def test_outputs_energy_l125; assert_in_epsilon(143.51359745, worksheet.outputs_energy_l125, 0.002); end
  def test_outputs_energy_m125; assert_in_epsilon(156.74377747, worksheet.outputs_energy_m125, 0.002); end
  def test_outputs_energy_n125; assert_in_epsilon(171.78327319000002, worksheet.outputs_energy_n125, 0.002); end
  def test_outputs_energy_o125; assert_in_epsilon(175.91941010000002, worksheet.outputs_energy_o125, 0.002); end
  def test_outputs_energy_p125; assert_in_epsilon(176.66494085000002, worksheet.outputs_energy_p125, 0.002); end
  def test_outputs_energy_r125; assert_in_epsilon(176.38872059391656, worksheet.outputs_energy_r125, 0.002); end
  def test_outputs_energy_s125; assert_in_epsilon(198.85797854754088, worksheet.outputs_energy_s125, 0.002); end
  def test_outputs_energy_t125; assert_in_epsilon(231.79456354895416, worksheet.outputs_energy_t125, 0.002); end
  def test_outputs_energy_u125; assert_in_epsilon(255.99957281383703, worksheet.outputs_energy_u125, 0.002); end
  def test_outputs_energy_v125; assert_in_epsilon(278.4383605595772, worksheet.outputs_energy_v125, 0.002); end
  def test_outputs_energy_w125; assert_in_epsilon(295.0538755563286, worksheet.outputs_energy_w125, 0.002); end
  def test_outputs_energy_x125; assert_in_epsilon(314.99445953908025, worksheet.outputs_energy_x125, 0.002); end
  def test_outputs_energy_y125; assert_in_epsilon(335.82590818101767, worksheet.outputs_energy_y125, 0.002); end
  def test_outputs_energy_z125; assert_in_epsilon(353.92164271468476, worksheet.outputs_energy_z125, 0.002); end
  def test_outputs_energy_d127; assert_equal("Global gas ", worksheet.outputs_energy_d127); end
  def test_outputs_energy_h127; assert_in_epsilon(41.88575614, worksheet.outputs_energy_h127, 0.002); end
  def test_outputs_energy_i127; assert_in_epsilon(51.657453589999996, worksheet.outputs_energy_i127, 0.002); end
  def test_outputs_energy_j127; assert_in_epsilon(59.13014466, worksheet.outputs_energy_j127, 0.002); end
  def test_outputs_energy_k127; assert_in_epsilon(69.82757047999999, worksheet.outputs_energy_k127, 0.002); end
  def test_outputs_energy_l127; assert_in_epsilon(75.88166314, worksheet.outputs_energy_l127, 0.002); end
  def test_outputs_energy_m127; assert_in_epsilon(86.75456712, worksheet.outputs_energy_m127, 0.002); end
  def test_outputs_energy_n127; assert_in_epsilon(99.02950624, worksheet.outputs_energy_n127, 0.002); end
  def test_outputs_energy_o127; assert_in_epsilon(114.72290836, worksheet.outputs_energy_o127, 0.002); end
  def test_outputs_energy_p127; assert_in_epsilon(116.68415746000001, worksheet.outputs_energy_p127, 0.002); end
  def test_outputs_energy_r127; assert_in_epsilon(122.79382250223114, worksheet.outputs_energy_r127, 0.002); end
  def test_outputs_energy_s127; assert_in_epsilon(127.54380918989968, worksheet.outputs_energy_s127, 0.002); end
  def test_outputs_energy_t127; assert_in_epsilon(137.48574967426592, worksheet.outputs_energy_t127, 0.002); end
  def test_outputs_energy_u127; assert_in_epsilon(147.91100309726292, worksheet.outputs_energy_u127, 0.002); end
  def test_outputs_energy_v127; assert_in_epsilon(159.6687869960486, worksheet.outputs_energy_v127, 0.002); end
  def test_outputs_energy_w127; assert_in_epsilon(169.1113711165791, worksheet.outputs_energy_w127, 0.002); end
  def test_outputs_energy_x127; assert_in_epsilon(181.0991378071443, worksheet.outputs_energy_x127, 0.002); end
  def test_outputs_energy_y127; assert_in_epsilon(196.75156330244707, worksheet.outputs_energy_y127, 0.002); end
  def test_outputs_energy_z127; assert_in_epsilon(215.0037198210494, worksheet.outputs_energy_z127, 0.002); end
  def test_outputs_energy_c478; assert_equal("Description", worksheet.outputs_energy_c478); end
  def test_outputs_energy_r478; assert_in_epsilon(2011.0, worksheet.outputs_energy_r478, 0.002); end
  def test_outputs_energy_s478; assert_equal("2015", worksheet.outputs_energy_s478); end
  def test_outputs_energy_t478; assert_equal("2020", worksheet.outputs_energy_t478); end
  def test_outputs_energy_u478; assert_equal("2025", worksheet.outputs_energy_u478); end
  def test_outputs_energy_v478; assert_equal("2030", worksheet.outputs_energy_v478); end
  def test_outputs_energy_w478; assert_equal("2035", worksheet.outputs_energy_w478); end
  def test_outputs_energy_x478; assert_equal("2040", worksheet.outputs_energy_x478); end
  def test_outputs_energy_y478; assert_equal("2045", worksheet.outputs_energy_y478); end
  def test_outputs_energy_z478; assert_equal("2050", worksheet.outputs_energy_z478); end
  def test_outputs_energy_c479; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_c479); end
  def test_outputs_energy_i479; assert_equal("G.M.02", worksheet.outputs_energy_i479); end
  def test_outputs_energy_r479; assert_in_epsilon(1.3689321930948124, worksheet.outputs_energy_r479, 0.002); end
  def test_outputs_energy_s479; assert_in_epsilon(1.5327549998434788, worksheet.outputs_energy_s479, 0.002); end
  def test_outputs_energy_t479; assert_in_epsilon(1.687048292910751, worksheet.outputs_energy_t479, 0.002); end
  def test_outputs_energy_u479; assert_in_epsilon(1.9406005183602395, worksheet.outputs_energy_u479, 0.002); end
  def test_outputs_energy_v479; assert_in_epsilon(2.2095469569881776, worksheet.outputs_energy_v479, 0.002); end
  def test_outputs_energy_w479; assert_in_epsilon(2.483272432567618, worksheet.outputs_energy_w479, 0.002); end
  def test_outputs_energy_x479; assert_in_epsilon(2.7879013305103335, worksheet.outputs_energy_x479, 0.002); end
  def test_outputs_energy_y479; assert_in_epsilon(3.114514236898121, worksheet.outputs_energy_y479, 0.002); end
  def test_outputs_energy_z479; assert_in_epsilon(3.4773597262161515, worksheet.outputs_energy_z479, 0.002); end
  def test_outputs_energy_c480; assert_equal("Aluminium.Primary", worksheet.outputs_energy_c480); end
  def test_outputs_energy_i480; assert_equal("G.M.02", worksheet.outputs_energy_i480); end
  def test_outputs_energy_r480; assert_in_epsilon(2.7584780625440373, worksheet.outputs_energy_r480, 0.002); end
  def test_outputs_energy_s480; assert_in_epsilon(3.072764899976088, worksheet.outputs_energy_s480, 0.002); end
  def test_outputs_energy_t480; assert_in_epsilon(3.3724392179031395, worksheet.outputs_energy_t480, 0.002); end
  def test_outputs_energy_u480; assert_in_epsilon(3.8682027330684514, worksheet.outputs_energy_u480, 0.002); end
  def test_outputs_energy_v480; assert_in_epsilon(4.391665069234794, worksheet.outputs_energy_v480, 0.002); end
  def test_outputs_energy_w480; assert_in_epsilon(4.921524333625824, worksheet.outputs_energy_w480, 0.002); end
  def test_outputs_energy_x480; assert_in_epsilon(5.509324384355473, worksheet.outputs_energy_x480, 0.002); end
  def test_outputs_energy_y480; assert_in_epsilon(6.136960126456637, worksheet.outputs_energy_y480, 0.002); end
  def test_outputs_energy_z480; assert_in_epsilon(6.832049069282785, worksheet.outputs_energy_z480, 0.002); end
  def test_outputs_energy_c481; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_c481); end
  def test_outputs_energy_i481; assert_equal("G.M.02", worksheet.outputs_energy_i481); end
  def test_outputs_energy_r481; assert_in_delta(0.26361993307490655, worksheet.outputs_energy_r481, 0.002); end
  def test_outputs_energy_s481; assert_in_delta(0.2726036894912441, worksheet.outputs_energy_s481, 0.002); end
  def test_outputs_energy_t481; assert_in_delta(0.2627899762284887, worksheet.outputs_energy_t481, 0.002); end
  def test_outputs_energy_u481; assert_in_delta(0.26246538962927496, worksheet.outputs_energy_u481, 0.002); end
  def test_outputs_energy_v481; assert_in_delta(0.25662043215269154, worksheet.outputs_energy_v481, 0.002); end
  def test_outputs_energy_w481; assert_in_delta(0.24413670127508208, worksheet.outputs_energy_w481, 0.002); end
  def test_outputs_energy_x481; assert_in_delta(0.22761937322521528, worksheet.outputs_energy_x481, 0.002); end
  def test_outputs_energy_y481; assert_in_delta(0.2056748373545127, worksheet.outputs_energy_y481, 0.002); end
  def test_outputs_energy_z481; assert_in_delta(0.17872841058412653, worksheet.outputs_energy_z481, 0.002); end
  def test_outputs_energy_c482; assert_equal("Total", worksheet.outputs_energy_c482); end
  def test_outputs_energy_r482; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r482, 0.002); end
  def test_outputs_energy_s482; assert_in_epsilon(4.878123589310811, worksheet.outputs_energy_s482, 0.002); end
  def test_outputs_energy_t482; assert_in_epsilon(5.3222774870423795, worksheet.outputs_energy_t482, 0.002); end
  def test_outputs_energy_u482; assert_in_epsilon(6.071268641057966, worksheet.outputs_energy_u482, 0.002); end
  def test_outputs_energy_v482; assert_in_epsilon(6.857832458375662, worksheet.outputs_energy_v482, 0.002); end
  def test_outputs_energy_w482; assert_in_epsilon(7.648933467468524, worksheet.outputs_energy_w482, 0.002); end
  def test_outputs_energy_x482; assert_in_epsilon(8.524845088091022, worksheet.outputs_energy_x482, 0.002); end
  def test_outputs_energy_y482; assert_in_epsilon(9.45714920070927, worksheet.outputs_energy_y482, 0.002); end
  def test_outputs_energy_z482; assert_in_epsilon(10.488137206083064, worksheet.outputs_energy_z482, 0.002); end
  def test_outputs_energy_r138; assert_in_epsilon(4.622463534610763, worksheet.outputs_energy_r138, 0.002); end
  def test_outputs_energy_r140; assert_in_epsilon(19.751728988237762, worksheet.outputs_energy_r140, 0.002); end
  def test_outputs_energy_r142; assert_in_epsilon(11.875, worksheet.outputs_energy_r142, 0.002); end
  def test_outputs_energy_r144; assert_in_epsilon(21.048271011762242, worksheet.outputs_energy_r144, 0.002); end
  def test_outputs_energy_z138; assert_in_epsilon(7.5295498566693775, worksheet.outputs_energy_z138, 0.002); end
  def test_outputs_energy_z140; assert_in_epsilon(19.06355772307349, worksheet.outputs_energy_z140, 0.002); end
  def test_outputs_energy_z142; assert_in_epsilon(20.516677461139892, worksheet.outputs_energy_z142, 0.002); end
  def test_outputs_energy_z144; assert_in_epsilon(8.215916117006064, worksheet.outputs_energy_z144, 0.002); end
  def test_outputs_energy_d154; assert_equal("Losses", worksheet.outputs_energy_d154); end
  def test_outputs_energy_r154; assert_in_epsilon(3.992862237113767, worksheet.outputs_energy_r154, 0.002); end
  def test_outputs_energy_s154; assert_in_epsilon(4.017653480556572, worksheet.outputs_energy_s154, 0.002); end
  def test_outputs_energy_t154; assert_in_epsilon(4.170697178602868, worksheet.outputs_energy_t154, 0.002); end
  def test_outputs_energy_u154; assert_in_epsilon(4.291620148238289, worksheet.outputs_energy_u154, 0.002); end
  def test_outputs_energy_v154; assert_in_epsilon(4.390984048267693, worksheet.outputs_energy_v154, 0.002); end
  def test_outputs_energy_w154; assert_in_epsilon(4.477559211646312, worksheet.outputs_energy_w154, 0.002); end
  def test_outputs_energy_x154; assert_in_epsilon(4.530342108145529, worksheet.outputs_energy_x154, 0.002); end
  def test_outputs_energy_y154; assert_in_epsilon(4.524629593827985, worksheet.outputs_energy_y154, 0.002); end
  def test_outputs_energy_z154; assert_in_epsilon(4.468653250104858, worksheet.outputs_energy_z154, 0.002); end
  def test_outputs_energy_d155; assert_equal("Oversupply", worksheet.outputs_energy_d155); end
  def test_outputs_energy_r155; assert_in_delta(0.0, (worksheet.outputs_energy_r155||0), 0.002); end
  def test_outputs_energy_s155; assert_in_delta(0.0, (worksheet.outputs_energy_s155||0), 0.002); end
  def test_outputs_energy_t155; assert_in_delta(0.0, (worksheet.outputs_energy_t155||0), 0.002); end
  def test_outputs_energy_u155; assert_in_delta(0.0, (worksheet.outputs_energy_u155||0), 0.002); end
  def test_outputs_energy_v155; assert_in_delta(0.0, (worksheet.outputs_energy_v155||0), 0.002); end
  def test_outputs_energy_w155; assert_in_delta(0.0, (worksheet.outputs_energy_w155||0), 0.002); end
  def test_outputs_energy_x155; assert_in_delta(0.0, (worksheet.outputs_energy_x155||0), 0.002); end
  def test_outputs_energy_y155; assert_in_delta(0.0, (worksheet.outputs_energy_y155||0), 0.002); end
  def test_outputs_energy_z155; assert_in_delta(0.0, (worksheet.outputs_energy_z155||0), 0.002); end
  def test_outputs_energy_d156; assert_equal("Transport", worksheet.outputs_energy_d156); end
  def test_outputs_energy_r156; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r156, 0.002); end
  def test_outputs_energy_s156; assert_in_epsilon(3.9683672113723922, worksheet.outputs_energy_s156, 0.002); end
  def test_outputs_energy_t156; assert_in_epsilon(4.420238356203382, worksheet.outputs_energy_t156, 0.002); end
  def test_outputs_energy_u156; assert_in_epsilon(4.884230389644897, worksheet.outputs_energy_u156, 0.002); end
  def test_outputs_energy_v156; assert_in_epsilon(5.360343311696939, worksheet.outputs_energy_v156, 0.002); end
  def test_outputs_energy_w156; assert_in_epsilon(5.848577122359506, worksheet.outputs_energy_w156, 0.002); end
  def test_outputs_energy_x156; assert_in_epsilon(6.348931821632599, worksheet.outputs_energy_x156, 0.002); end
  def test_outputs_energy_y156; assert_in_epsilon(6.861407409516217, worksheet.outputs_energy_y156, 0.002); end
  def test_outputs_energy_z156; assert_in_epsilon(7.386003886010363, worksheet.outputs_energy_z156, 0.002); end
  def test_outputs_energy_d157; assert_equal("Electricity (unabated thermal)", worksheet.outputs_energy_d157); end
  def test_outputs_energy_r157; assert_in_epsilon(5.668264458751072, worksheet.outputs_energy_r157, 0.002); end
  def test_outputs_energy_s157; assert_in_epsilon(5.710474449636805, worksheet.outputs_energy_s157, 0.002); end
  def test_outputs_energy_t157; assert_in_epsilon(5.851588776813305, worksheet.outputs_energy_t157, 0.002); end
  def test_outputs_energy_u157; assert_in_epsilon(6.034663334454062, worksheet.outputs_energy_u157, 0.002); end
  def test_outputs_energy_v157; assert_in_epsilon(6.186939435532605, worksheet.outputs_energy_v157, 0.002); end
  def test_outputs_energy_w157; assert_in_epsilon(6.330359634997793, worksheet.outputs_energy_w157, 0.002); end
  def test_outputs_energy_x157; assert_in_epsilon(6.499799720144335, worksheet.outputs_energy_x157, 0.002); end
  def test_outputs_energy_y157; assert_in_epsilon(6.734620701236661, worksheet.outputs_energy_y157, 0.002); end
  def test_outputs_energy_z157; assert_in_epsilon(6.98518621635109, worksheet.outputs_energy_z157, 0.002); end
  def test_outputs_energy_d158; assert_equal("Electricity (carbon capture and storage)", worksheet.outputs_energy_d158); end
  def test_outputs_energy_r158; assert_in_delta(0.0, (worksheet.outputs_energy_r158||0), 0.002); end
  def test_outputs_energy_s158; assert_in_delta(0.007210677670970114, worksheet.outputs_energy_s158, 0.002); end
  def test_outputs_energy_t158; assert_in_delta(0.032345291966590285, worksheet.outputs_energy_t158, 0.002); end
  def test_outputs_energy_u158; assert_in_delta(0.03411601905270365, worksheet.outputs_energy_u158, 0.002); end
  def test_outputs_energy_v158; assert_in_delta(0.05842915286736593, worksheet.outputs_energy_v158, 0.002); end
  def test_outputs_energy_w158; assert_in_delta(0.06916806725537451, worksheet.outputs_energy_w158, 0.002); end
  def test_outputs_energy_x158; assert_in_delta(0.07740728281159026, worksheet.outputs_energy_x158, 0.002); end
  def test_outputs_energy_y158; assert_in_delta(0.08549113264187465, worksheet.outputs_energy_y158, 0.002); end
  def test_outputs_energy_z158; assert_in_delta(0.11630877271950645, worksheet.outputs_energy_z158, 0.002); end
  def test_outputs_energy_d159; assert_equal("Buildings", worksheet.outputs_energy_d159); end
  def test_outputs_energy_r159; assert_in_epsilon(37.08870586269262, worksheet.outputs_energy_r159, 0.002); end
  def test_outputs_energy_s159; assert_in_epsilon(35.53555436699928, worksheet.outputs_energy_s159, 0.002); end
  def test_outputs_energy_t159; assert_in_epsilon(33.94642180836849, worksheet.outputs_energy_t159, 0.002); end
  def test_outputs_energy_u159; assert_in_epsilon(32.335550520326024, worksheet.outputs_energy_u159, 0.002); end
  def test_outputs_energy_v159; assert_in_epsilon(30.805322152807552, worksheet.outputs_energy_v159, 0.002); end
  def test_outputs_energy_w159; assert_in_epsilon(29.61953818802465, worksheet.outputs_energy_w159, 0.002); end
  def test_outputs_energy_x159; assert_in_epsilon(28.59383421682613, worksheet.outputs_energy_x159, 0.002); end
  def test_outputs_energy_y159; assert_in_epsilon(28.200151754860983, worksheet.outputs_energy_y159, 0.002); end
  def test_outputs_energy_z159; assert_in_epsilon(27.989756845873654, worksheet.outputs_energy_z159, 0.002); end
  def test_outputs_energy_d160; assert_equal("Manufacturing", worksheet.outputs_energy_d160); end
  def test_outputs_energy_r160; assert_in_epsilon(6.747630976053304, worksheet.outputs_energy_r160, 0.002); end
  def test_outputs_energy_s160; assert_in_epsilon(6.797822497980332, worksheet.outputs_energy_s160, 0.002); end
  def test_outputs_energy_t160; assert_in_epsilon(6.987067844468245, worksheet.outputs_energy_t160, 0.002); end
  def test_outputs_energy_u160; assert_in_epsilon(7.198768900819196, worksheet.outputs_energy_u160, 0.002); end
  def test_outputs_energy_v160; assert_in_epsilon(7.399028697983949, worksheet.outputs_energy_v160, 0.002); end
  def test_outputs_energy_w160; assert_in_epsilon(7.569531843671324, worksheet.outputs_energy_w160, 0.002); end
  def test_outputs_energy_x160; assert_in_epsilon(7.768557884852992, worksheet.outputs_energy_x160, 0.002); end
  def test_outputs_energy_y160; assert_in_epsilon(8.04978729581033, worksheet.outputs_energy_y160, 0.002); end
  def test_outputs_energy_z160; assert_in_epsilon(8.379792186829347, worksheet.outputs_energy_z160, 0.002); end
  def test_outputs_energy_d137; assert_equal("Bioenergy", worksheet.outputs_energy_d137); end
  def test_outputs_energy_r137; assert_in_epsilon(2011.0, worksheet.outputs_energy_r137, 0.002); end
  def test_outputs_energy_s137; assert_equal("2015", worksheet.outputs_energy_s137); end
  def test_outputs_energy_t137; assert_equal("2020", worksheet.outputs_energy_t137); end
  def test_outputs_energy_u137; assert_equal("2025", worksheet.outputs_energy_u137); end
  def test_outputs_energy_v137; assert_equal("2030", worksheet.outputs_energy_v137); end
  def test_outputs_energy_w137; assert_equal("2035", worksheet.outputs_energy_w137); end
  def test_outputs_energy_x137; assert_equal("2040", worksheet.outputs_energy_x137); end
  def test_outputs_energy_y137; assert_equal("2045", worksheet.outputs_energy_y137); end
  def test_outputs_energy_z137; assert_equal("2050", worksheet.outputs_energy_z137); end
  def test_outputs_energy_d138; assert_equal("Waste", worksheet.outputs_energy_d138); end
  def test_outputs_energy_s138; assert_in_epsilon(4.882637834840564, worksheet.outputs_energy_s138, 0.002); end
  def test_outputs_energy_t138; assert_in_epsilon(5.229522918816525, worksheet.outputs_energy_t138, 0.002); end
  def test_outputs_energy_u138; assert_in_epsilon(5.578648632953704, worksheet.outputs_energy_u138, 0.002); end
  def test_outputs_energy_v138; assert_in_epsilon(5.961534892322683, worksheet.outputs_energy_v138, 0.002); end
  def test_outputs_energy_w138; assert_in_epsilon(6.405719818154743, worksheet.outputs_energy_w138, 0.002); end
  def test_outputs_energy_x138; assert_in_epsilon(6.849334977394624, worksheet.outputs_energy_x138, 0.002); end
  def test_outputs_energy_y138; assert_in_epsilon(7.21628510298417, worksheet.outputs_energy_y138, 0.002); end
  def test_outputs_energy_d140; assert_equal("Forest residues", worksheet.outputs_energy_d140); end
  def test_outputs_energy_s140; assert_in_epsilon(19.51735508398563, worksheet.outputs_energy_s140, 0.002); end
  def test_outputs_energy_t140; assert_in_epsilon(19.381809275136252, worksheet.outputs_energy_t140, 0.002); end
  def test_outputs_energy_u140; assert_in_epsilon(19.31908695092451, worksheet.outputs_energy_u140, 0.002); end
  def test_outputs_energy_v140; assert_in_epsilon(19.1630752707928, worksheet.outputs_energy_v140, 0.002); end
  def test_outputs_energy_w140; assert_in_epsilon(18.81612086101231, worksheet.outputs_energy_w140, 0.002); end
  def test_outputs_energy_x140; assert_in_epsilon(18.568950223395504, worksheet.outputs_energy_x140, 0.002); end
  def test_outputs_energy_y140; assert_in_epsilon(18.703939901648194, worksheet.outputs_energy_y140, 0.002); end
  def test_outputs_energy_d142; assert_equal("Bioenergy crops", worksheet.outputs_energy_d142); end
  def test_outputs_energy_s142; assert_in_epsilon(12.244170984455957, worksheet.outputs_energy_s142, 0.002); end
  def test_outputs_energy_t142; assert_in_epsilon(13.425957623982233, worksheet.outputs_energy_t142, 0.002); end
  def test_outputs_energy_u142; assert_in_epsilon(14.60774426350851, worksheet.outputs_energy_u142, 0.002); end
  def test_outputs_energy_v142; assert_in_epsilon(15.78953090303479, worksheet.outputs_energy_v142, 0.002); end
  def test_outputs_energy_w142; assert_in_epsilon(16.971317542561064, worksheet.outputs_energy_w142, 0.002); end
  def test_outputs_energy_x142; assert_in_epsilon(18.15310418208734, worksheet.outputs_energy_x142, 0.002); end
  def test_outputs_energy_y142; assert_in_epsilon(19.334890821613616, worksheet.outputs_energy_y142, 0.002); end
  def test_outputs_energy_d144; assert_equal("Traditional biomass", worksheet.outputs_energy_d144); end
  def test_outputs_energy_s144; assert_in_epsilon(19.392918780934195, worksheet.outputs_energy_s144, 0.002); end
  def test_outputs_energy_t144; assert_in_epsilon(17.371069438487872, worksheet.outputs_energy_t144, 0.002); end
  def test_outputs_energy_u144; assert_in_epsilon(15.27346946514845, worksheet.outputs_energy_u144, 0.002); end
  def test_outputs_energy_v144; assert_in_epsilon(13.286905733005835, worksheet.outputs_energy_v144, 0.002); end
  def test_outputs_energy_w144; assert_in_epsilon(11.721575846226846, worksheet.outputs_energy_w144, 0.002); end
  def test_outputs_energy_x144; assert_in_epsilon(10.24748365153571, worksheet.outputs_energy_x144, 0.002); end
  def test_outputs_energy_y144; assert_in_epsilon(9.200972061648073, worksheet.outputs_energy_y144, 0.002); end
  def test_outputs_energy_d145; assert_equal("Total", worksheet.outputs_energy_d145); end
  def test_outputs_energy_r145; assert_in_epsilon(57.29746353461077, worksheet.outputs_energy_r145, 0.002); end
  def test_outputs_energy_s145; assert_in_epsilon(56.037082684216344, worksheet.outputs_energy_s145, 0.002); end
  def test_outputs_energy_t145; assert_in_epsilon(55.408359256422884, worksheet.outputs_energy_t145, 0.002); end
  def test_outputs_energy_u145; assert_in_epsilon(54.778949312535175, worksheet.outputs_energy_u145, 0.002); end
  def test_outputs_energy_v145; assert_in_epsilon(54.2010467991561, worksheet.outputs_energy_v145, 0.002); end
  def test_outputs_energy_w145; assert_in_epsilon(53.91473406795496, worksheet.outputs_energy_w145, 0.002); end
  def test_outputs_energy_x145; assert_in_epsilon(53.81887303441318, worksheet.outputs_energy_x145, 0.002); end
  def test_outputs_energy_y145; assert_in_epsilon(54.45608788789406, worksheet.outputs_energy_y145, 0.002); end
  def test_outputs_energy_z145; assert_in_epsilon(55.325701157888815, worksheet.outputs_energy_z145, 0.002); end
  def test_outputs_energy_d146; assert_equal("Biocrops unused", worksheet.outputs_energy_d146); end
  def test_outputs_energy_r146; assert_in_delta(0.0, (worksheet.outputs_energy_r146||0), 0.002); end
  def test_outputs_energy_s146; assert_in_delta(0.0, (worksheet.outputs_energy_s146||0), 0.002); end
  def test_outputs_energy_t146; assert_in_delta(0.0, (worksheet.outputs_energy_t146||0), 0.002); end
  def test_outputs_energy_u146; assert_in_delta(0.0, (worksheet.outputs_energy_u146||0), 0.002); end
  def test_outputs_energy_v146; assert_in_delta(0.0, (worksheet.outputs_energy_v146||0), 0.002); end
  def test_outputs_energy_w146; assert_in_delta(0.0, (worksheet.outputs_energy_w146||0), 0.002); end
  def test_outputs_energy_x146; assert_in_delta(0.0, (worksheet.outputs_energy_x146||0), 0.002); end
  def test_outputs_energy_y146; assert_in_delta(0.0, (worksheet.outputs_energy_y146||0), 0.002); end
  def test_outputs_energy_z146; assert_in_delta(0.0, (worksheet.outputs_energy_z146||0), 0.002); end
  def test_outputs_energy_c448; assert_equal("Description", worksheet.outputs_energy_c448); end
  def test_outputs_energy_d448; assert_equal(".", worksheet.outputs_energy_d448); end
  def test_outputs_energy_e448; assert_equal("Notes", worksheet.outputs_energy_e448); end
  def test_outputs_energy_g448; assert_equal("..", worksheet.outputs_energy_g448); end
  def test_outputs_energy_h448; assert_equal("…", worksheet.outputs_energy_h448); end
  def test_outputs_energy_i448; assert_equal("….", worksheet.outputs_energy_i448); end
  def test_outputs_energy_j448; assert_equal("…..", worksheet.outputs_energy_j448); end
  def test_outputs_energy_k448; assert_equal("……", worksheet.outputs_energy_k448); end
  def test_outputs_energy_l448; assert_equal("…….", worksheet.outputs_energy_l448); end
  def test_outputs_energy_m448; assert_equal("……..", worksheet.outputs_energy_m448); end
  def test_outputs_energy_n448; assert_equal("……….", worksheet.outputs_energy_n448); end
  def test_outputs_energy_o448; assert_equal("………..", worksheet.outputs_energy_o448); end
  def test_outputs_energy_r448; assert_equal("2011", worksheet.outputs_energy_r448); end
  def test_outputs_energy_s448; assert_equal("2015", worksheet.outputs_energy_s448); end
  def test_outputs_energy_t448; assert_equal("2020", worksheet.outputs_energy_t448); end
  def test_outputs_energy_u448; assert_equal("2025", worksheet.outputs_energy_u448); end
  def test_outputs_energy_v448; assert_equal("2030", worksheet.outputs_energy_v448); end
  def test_outputs_energy_w448; assert_equal("2035", worksheet.outputs_energy_w448); end
  def test_outputs_energy_x448; assert_equal("2040", worksheet.outputs_energy_x448); end
  def test_outputs_energy_y448; assert_equal("2045", worksheet.outputs_energy_y448); end
  def test_outputs_energy_z448; assert_equal("2050", worksheet.outputs_energy_z448); end
  def test_outputs_energy_c449; assert_equal("Solid", worksheet.outputs_energy_c449); end
  def test_outputs_energy_r449; assert_in_epsilon(46.50000000000001, worksheet.outputs_energy_r449, 0.002); end
  def test_outputs_energy_s449; assert_in_epsilon(44.86282468197842, worksheet.outputs_energy_s449, 0.002); end
  def test_outputs_energy_t449; assert_in_epsilon(43.3832362479292, worksheet.outputs_energy_t449, 0.002); end
  def test_outputs_energy_u449; assert_in_epsilon(41.91890200054031, worksheet.outputs_energy_u449, 0.002); end
  def test_outputs_energy_v449; assert_in_epsilon(40.490495971344046, worksheet.outputs_energy_v449, 0.002); end
  def test_outputs_energy_w449; assert_in_epsilon(39.310562390778415, worksheet.outputs_energy_w449, 0.002); end
  def test_outputs_energy_x449; assert_in_epsilon(38.33983160738011, worksheet.outputs_energy_x449, 0.002); end
  def test_outputs_energy_y449; assert_in_epsilon(38.19702307757059, worksheet.outputs_energy_y449, 0.002); end
  def test_outputs_energy_z449; assert_in_epsilon(38.3584796690951, worksheet.outputs_energy_z449, 0.002); end
  def test_outputs_energy_c450; assert_equal("Liquid bioenergy", worksheet.outputs_energy_c450); end
  def test_outputs_energy_r450; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_r450, 0.002); end
  def test_outputs_energy_s450; assert_in_epsilon(3.9683672113723922, worksheet.outputs_energy_s450, 0.002); end
  def test_outputs_energy_t450; assert_in_epsilon(4.420238356203382, worksheet.outputs_energy_t450, 0.002); end
  def test_outputs_energy_u450; assert_in_epsilon(4.884230389644897, worksheet.outputs_energy_u450, 0.002); end
  def test_outputs_energy_v450; assert_in_epsilon(5.360343311696939, worksheet.outputs_energy_v450, 0.002); end
  def test_outputs_energy_w450; assert_in_epsilon(5.848577122359506, worksheet.outputs_energy_w450, 0.002); end
  def test_outputs_energy_x450; assert_in_epsilon(6.348931821632599, worksheet.outputs_energy_x450, 0.002); end
  def test_outputs_energy_y450; assert_in_epsilon(6.861407409516217, worksheet.outputs_energy_y450, 0.002); end
  def test_outputs_energy_z450; assert_in_epsilon(7.386003886010363, worksheet.outputs_energy_z450, 0.002); end
  def test_outputs_energy_c451; assert_equal("Gas", worksheet.outputs_energy_c451); end
  def test_outputs_energy_r451; assert_in_epsilon(3.0046012974969964, worksheet.outputs_energy_r451, 0.002); end
  def test_outputs_energy_s451; assert_in_epsilon(3.188237310308969, worksheet.outputs_energy_s451, 0.002); end
  def test_outputs_energy_t451; assert_in_epsilon(3.4341874736874365, worksheet.outputs_energy_t451, 0.002); end
  def test_outputs_energy_u451; assert_in_epsilon(3.684196774111682, worksheet.outputs_energy_u451, 0.002); end
  def test_outputs_energy_v451; assert_in_epsilon(3.959223467847431, worksheet.outputs_energy_v451, 0.002); end
  def test_outputs_energy_w451; assert_in_epsilon(4.278035343170729, worksheet.outputs_energy_w451, 0.002); end
  def test_outputs_energy_x451; assert_in_epsilon(4.5997674972549385, worksheet.outputs_energy_x451, 0.002); end
  def test_outputs_energy_y451; assert_in_epsilon(4.873027806979259, worksheet.outputs_energy_y451, 0.002); end
  def test_outputs_energy_z451; assert_in_epsilon(5.112564352678508, worksheet.outputs_energy_z451, 0.002); end
  def test_outputs_energy_c452; assert_equal("Losses", worksheet.outputs_energy_c452); end
  def test_outputs_energy_r452; assert_in_epsilon(3.992862237113769, worksheet.outputs_energy_r452, 0.002); end
  def test_outputs_energy_s452; assert_in_epsilon(4.017653480556568, worksheet.outputs_energy_s452, 0.002); end
  def test_outputs_energy_t452; assert_in_epsilon(4.170697178602865, worksheet.outputs_energy_t452, 0.002); end
  def test_outputs_energy_u452; assert_in_epsilon(4.291620148238287, worksheet.outputs_energy_u452, 0.002); end
  def test_outputs_energy_v452; assert_in_epsilon(4.39098404826769, worksheet.outputs_energy_v452, 0.002); end
  def test_outputs_energy_w452; assert_in_epsilon(4.477559211646309, worksheet.outputs_energy_w452, 0.002); end
  def test_outputs_energy_x452; assert_in_epsilon(4.530342108145533, worksheet.outputs_energy_x452, 0.002); end
  def test_outputs_energy_y452; assert_in_epsilon(4.524629593827989, worksheet.outputs_energy_y452, 0.002); end
  def test_outputs_energy_z452; assert_in_epsilon(4.46865325010485, worksheet.outputs_energy_z452, 0.002); end
  def test_outputs_energy_c453; assert_equal("Solid oversupply", worksheet.outputs_energy_c453); end
  def test_outputs_energy_e453; assert_equal("solid global oversupply", worksheet.outputs_energy_e453); end
  def test_outputs_energy_r453; assert_in_delta(0.0, (worksheet.outputs_energy_r453||0), 0.002); end
  def test_outputs_energy_s453; assert_in_delta(0.0, (worksheet.outputs_energy_s453||0), 0.002); end
  def test_outputs_energy_t453; assert_in_delta(0.0, (worksheet.outputs_energy_t453||0), 0.002); end
  def test_outputs_energy_u453; assert_in_delta(0.0, (worksheet.outputs_energy_u453||0), 0.002); end
  def test_outputs_energy_v453; assert_in_delta(0.0, (worksheet.outputs_energy_v453||0), 0.002); end
  def test_outputs_energy_w453; assert_in_delta(0.0, (worksheet.outputs_energy_w453||0), 0.002); end
  def test_outputs_energy_x453; assert_in_delta(0.0, (worksheet.outputs_energy_x453||0), 0.002); end
  def test_outputs_energy_y453; assert_in_delta(0.0, (worksheet.outputs_energy_y453||0), 0.002); end
  def test_outputs_energy_z453; assert_in_delta(0.0, (worksheet.outputs_energy_z453||0), 0.002); end
  def test_outputs_energy_c454; assert_equal("Liquid oversupply", worksheet.outputs_energy_c454); end
  def test_outputs_energy_e454; assert_equal("liquid global oversupply", worksheet.outputs_energy_e454); end
  def test_outputs_energy_r454; assert_in_delta(0.0, (worksheet.outputs_energy_r454||0), 0.002); end
  def test_outputs_energy_s454; assert_in_delta(0.0, (worksheet.outputs_energy_s454||0), 0.002); end
  def test_outputs_energy_t454; assert_in_delta(0.0, (worksheet.outputs_energy_t454||0), 0.002); end
  def test_outputs_energy_u454; assert_in_delta(0.0, (worksheet.outputs_energy_u454||0), 0.002); end
  def test_outputs_energy_v454; assert_in_delta(0.0, (worksheet.outputs_energy_v454||0), 0.002); end
  def test_outputs_energy_w454; assert_in_delta(0.0, (worksheet.outputs_energy_w454||0), 0.002); end
  def test_outputs_energy_x454; assert_in_delta(0.0, (worksheet.outputs_energy_x454||0), 0.002); end
  def test_outputs_energy_y454; assert_in_delta(0.0, (worksheet.outputs_energy_y454||0), 0.002); end
  def test_outputs_energy_z454; assert_in_delta(0.0, (worksheet.outputs_energy_z454||0), 0.002); end
  def test_outputs_energy_d34; assert_equal("RESIDENTIAL", worksheet.outputs_energy_d34); end
  def test_outputs_energy_d35; assert_equal("Global Heating", worksheet.outputs_energy_d35); end
  def test_outputs_energy_p35; assert_in_epsilon(25.25, worksheet.outputs_energy_p35, 0.002); end
  def test_outputs_energy_r35; assert_in_epsilon(24.638623385463372, worksheet.outputs_energy_r35, 0.002); end
  def test_outputs_energy_s35; assert_in_epsilon(25.29917577112387, worksheet.outputs_energy_s35, 0.002); end
  def test_outputs_energy_t35; assert_in_epsilon(25.57086382944378, worksheet.outputs_energy_t35, 0.002); end
  def test_outputs_energy_u35; assert_in_epsilon(25.4699616489048, worksheet.outputs_energy_u35, 0.002); end
  def test_outputs_energy_v35; assert_in_epsilon(25.134376708097058, worksheet.outputs_energy_v35, 0.002); end
  def test_outputs_energy_w35; assert_in_epsilon(24.775108854478795, worksheet.outputs_energy_w35, 0.002); end
  def test_outputs_energy_x35; assert_in_epsilon(24.235694319543615, worksheet.outputs_energy_x35, 0.002); end
  def test_outputs_energy_y35; assert_in_epsilon(23.758351276963708, worksheet.outputs_energy_y35, 0.002); end
  def test_outputs_energy_z35; assert_in_epsilon(23.14068203684787, worksheet.outputs_energy_z35, 0.002); end
  def test_outputs_energy_d36; assert_equal("Global Cooling", worksheet.outputs_energy_d36); end
  def test_outputs_energy_p36; assert_in_epsilon(2.44, worksheet.outputs_energy_p36, 0.002); end
  def test_outputs_energy_r36; assert_in_epsilon(2.4027110475744, worksheet.outputs_energy_r36, 0.002); end
  def test_outputs_energy_s36; assert_in_epsilon(2.928693244866195, worksheet.outputs_energy_s36, 0.002); end
  def test_outputs_energy_t36; assert_in_epsilon(3.6700296287850636, worksheet.outputs_energy_t36, 0.002); end
  def test_outputs_energy_u36; assert_in_epsilon(4.483769774847549, worksheet.outputs_energy_u36, 0.002); end
  def test_outputs_energy_v36; assert_in_epsilon(5.350862775697773, worksheet.outputs_energy_v36, 0.002); end
  def test_outputs_energy_w36; assert_in_epsilon(6.234469281028962, worksheet.outputs_energy_w36, 0.002); end
  def test_outputs_energy_x36; assert_in_epsilon(7.138679491384776, worksheet.outputs_energy_x36, 0.002); end
  def test_outputs_energy_y36; assert_in_epsilon(8.018537334811626, worksheet.outputs_energy_y36, 0.002); end
  def test_outputs_energy_z36; assert_in_epsilon(8.88252833895892, worksheet.outputs_energy_z36, 0.002); end
  def test_outputs_energy_d37; assert_equal("Global Hot water", worksheet.outputs_energy_d37); end
  def test_outputs_energy_p37; assert_in_epsilon(22.61, worksheet.outputs_energy_p37, 0.002); end
  def test_outputs_energy_r37; assert_in_epsilon(21.21373729912315, worksheet.outputs_energy_r37, 0.002); end
  def test_outputs_energy_s37; assert_in_epsilon(23.159259990168287, worksheet.outputs_energy_s37, 0.002); end
  def test_outputs_energy_t37; assert_in_epsilon(24.105023685912933, worksheet.outputs_energy_t37, 0.002); end
  def test_outputs_energy_u37; assert_in_epsilon(24.946044005409945, worksheet.outputs_energy_u37, 0.002); end
  def test_outputs_energy_v37; assert_in_epsilon(25.608745115750608, worksheet.outputs_energy_v37, 0.002); end
  def test_outputs_energy_w37; assert_in_epsilon(26.001303232962563, worksheet.outputs_energy_w37, 0.002); end
  def test_outputs_energy_x37; assert_in_epsilon(26.23646367043088, worksheet.outputs_energy_x37, 0.002); end
  def test_outputs_energy_y37; assert_in_epsilon(26.22998350724499, worksheet.outputs_energy_y37, 0.002); end
  def test_outputs_energy_z37; assert_in_epsilon(26.076860538904114, worksheet.outputs_energy_z37, 0.002); end
  def test_outputs_energy_d38; assert_equal("Global Appliances", worksheet.outputs_energy_d38); end
  def test_outputs_energy_p38; assert_in_epsilon(10.0, worksheet.outputs_energy_p38, 0.002); end
  def test_outputs_energy_r38; assert_in_epsilon(10.049316153808604, worksheet.outputs_energy_r38, 0.002); end
  def test_outputs_energy_s38; assert_in_epsilon(12.121796717015723, worksheet.outputs_energy_s38, 0.002); end
  def test_outputs_energy_t38; assert_in_epsilon(13.874919766573516, worksheet.outputs_energy_t38, 0.002); end
  def test_outputs_energy_u38; assert_in_epsilon(15.737009369681513, worksheet.outputs_energy_u38, 0.002); end
  def test_outputs_energy_v38; assert_in_epsilon(17.65528747345496, worksheet.outputs_energy_v38, 0.002); end
  def test_outputs_energy_w38; assert_in_epsilon(19.54202580483582, worksheet.outputs_energy_w38, 0.002); end
  def test_outputs_energy_x38; assert_in_epsilon(21.450542742600668, worksheet.outputs_energy_x38, 0.002); end
  def test_outputs_energy_y38; assert_in_epsilon(23.286036558529386, worksheet.outputs_energy_y38, 0.002); end
  def test_outputs_energy_z38; assert_in_epsilon(25.111413943377233, worksheet.outputs_energy_z38, 0.002); end
  def test_outputs_energy_d39; assert_equal("Global Cooking", worksheet.outputs_energy_d39); end
  def test_outputs_energy_p39; assert_in_epsilon(24.16, worksheet.outputs_energy_p39, 0.002); end
  def test_outputs_energy_r39; assert_in_epsilon(24.331916753204318, worksheet.outputs_energy_r39, 0.002); end
  def test_outputs_energy_s39; assert_in_epsilon(23.78985015284648, worksheet.outputs_energy_s39, 0.002); end
  def test_outputs_energy_t39; assert_in_epsilon(22.728280966880735, worksheet.outputs_energy_t39, 0.002); end
  def test_outputs_energy_u39; assert_in_epsilon(21.753392474383112, worksheet.outputs_energy_u39, 0.002); end
  def test_outputs_energy_v39; assert_in_epsilon(20.855966839087365, worksheet.outputs_energy_v39, 0.002); end
  def test_outputs_energy_w39; assert_in_epsilon(20.055331759129228, worksheet.outputs_energy_w39, 0.002); end
  def test_outputs_energy_x39; assert_in_epsilon(19.285849472277185, worksheet.outputs_energy_x39, 0.002); end
  def test_outputs_energy_y39; assert_in_epsilon(18.577893023202336, worksheet.outputs_energy_y39, 0.002); end
  def test_outputs_energy_z39; assert_in_epsilon(17.87071697911459, worksheet.outputs_energy_z39, 0.002); end
  def test_outputs_energy_d40; assert_equal("Global Lighting", worksheet.outputs_energy_d40); end
  def test_outputs_energy_p40; assert_in_epsilon(3.24, worksheet.outputs_energy_p40, 0.002); end
  def test_outputs_energy_r40; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_r40, 0.002); end
  def test_outputs_energy_s40; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_s40, 0.002); end
  def test_outputs_energy_t40; assert_in_epsilon(4.297142643420307, worksheet.outputs_energy_t40, 0.002); end
  def test_outputs_energy_u40; assert_in_epsilon(4.79848904568265, worksheet.outputs_energy_u40, 0.002); end
  def test_outputs_energy_v40; assert_in_epsilon(5.2877200428173525, worksheet.outputs_energy_v40, 0.002); end
  def test_outputs_energy_w40; assert_in_epsilon(5.735958765379613, worksheet.outputs_energy_w40, 0.002); end
  def test_outputs_energy_x40; assert_in_epsilon(6.156878502641403, worksheet.outputs_energy_x40, 0.002); end
  def test_outputs_energy_y40; assert_in_epsilon(6.521008632343029, worksheet.outputs_energy_y40, 0.002); end
  def test_outputs_energy_z40; assert_in_epsilon(6.845867715276849, worksheet.outputs_energy_z40, 0.002); end
  def test_outputs_energy_d42; assert_equal("NON-RESIDENTIAL", worksheet.outputs_energy_d42); end
  def test_outputs_energy_d43; assert_equal("Global Heating", worksheet.outputs_energy_d43); end
  def test_outputs_energy_f43; assert_equal("Non-residential", worksheet.outputs_energy_f43); end
  def test_outputs_energy_p43; assert_in_epsilon(8.27, worksheet.outputs_energy_p43, 0.002); end
  def test_outputs_energy_r43; assert_in_epsilon(8.19534221098603, worksheet.outputs_energy_r43, 0.002); end
  def test_outputs_energy_s43; assert_in_epsilon(8.42534681140818, worksheet.outputs_energy_s43, 0.002); end
  def test_outputs_energy_t43; assert_in_epsilon(9.00066346648593, worksheet.outputs_energy_t43, 0.002); end
  def test_outputs_energy_u43; assert_in_epsilon(9.50660228883203, worksheet.outputs_energy_u43, 0.002); end
  def test_outputs_energy_v43; assert_in_epsilon(9.939553776622226, worksheet.outputs_energy_v43, 0.002); end
  def test_outputs_energy_w43; assert_in_epsilon(10.299570865803439, worksheet.outputs_energy_w43, 0.002); end
  def test_outputs_energy_x43; assert_in_epsilon(10.585065267381832, worksheet.outputs_energy_x43, 0.002); end
  def test_outputs_energy_y43; assert_in_epsilon(10.793203668666996, worksheet.outputs_energy_y43, 0.002); end
  def test_outputs_energy_z43; assert_in_epsilon(10.922740012141547, worksheet.outputs_energy_z43, 0.002); end
  def test_outputs_energy_d44; assert_equal("Global Cooling", worksheet.outputs_energy_d44); end
  def test_outputs_energy_f44; assert_equal("Non-residential", worksheet.outputs_energy_f44); end
  def test_outputs_energy_p44; assert_in_epsilon(1.96, worksheet.outputs_energy_p44, 0.002); end
  def test_outputs_energy_r44; assert_in_epsilon(1.6954515193615998, worksheet.outputs_energy_r44, 0.002); end
  def test_outputs_energy_s44; assert_in_epsilon(1.7922669006681125, worksheet.outputs_energy_s44, 0.002); end
  def test_outputs_energy_t44; assert_in_epsilon(2.0098802455465803, worksheet.outputs_energy_t44, 0.002); end
  def test_outputs_energy_u44; assert_in_epsilon(2.2277772927900834, worksheet.outputs_energy_u44, 0.002); end
  def test_outputs_energy_v44; assert_in_epsilon(2.4437085863372863, worksheet.outputs_energy_v44, 0.002); end
  def test_outputs_energy_w44; assert_in_epsilon(2.6560573233242932, worksheet.outputs_energy_w44, 0.002); end
  def test_outputs_energy_x44; assert_in_epsilon(2.8626025261551376, worksheet.outputs_energy_x44, 0.002); end
  def test_outputs_energy_y44; assert_in_epsilon(3.060508483557915, worksheet.outputs_energy_y44, 0.002); end
  def test_outputs_energy_z44; assert_in_epsilon(3.2470548181618724, worksheet.outputs_energy_z44, 0.002); end
  def test_outputs_energy_d45; assert_equal("Global Appliances", worksheet.outputs_energy_d45); end
  def test_outputs_energy_f45; assert_equal("Non-residential", worksheet.outputs_energy_f45); end
  def test_outputs_energy_p45; assert_in_epsilon(12.36, worksheet.outputs_energy_p45, 0.002); end
  def test_outputs_energy_r45; assert_in_epsilon(11.576876918452356, worksheet.outputs_energy_r45, 0.002); end
  def test_outputs_energy_s45; assert_in_epsilon(12.475470437632243, worksheet.outputs_energy_s45, 0.002); end
  def test_outputs_energy_t45; assert_in_epsilon(13.609499663218532, worksheet.outputs_energy_t45, 0.002); end
  def test_outputs_energy_u45; assert_in_epsilon(14.670700347694591, worksheet.outputs_energy_u45, 0.002); end
  def test_outputs_energy_v45; assert_in_epsilon(15.645680829840959, worksheet.outputs_energy_v45, 0.002); end
  def test_outputs_energy_w45; assert_in_epsilon(16.52621371650964, worksheet.outputs_energy_w45, 0.002); end
  def test_outputs_energy_x45; assert_in_epsilon(17.301131461603823, worksheet.outputs_energy_x45, 0.002); end
  def test_outputs_energy_y45; assert_in_epsilon(17.956756197031016, worksheet.outputs_energy_y45, 0.002); end
  def test_outputs_energy_z45; assert_in_epsilon(18.481553027105956, worksheet.outputs_energy_z45, 0.002); end
  def test_outputs_energy_d46; assert_equal("Global Lighting", worksheet.outputs_energy_d46); end
  def test_outputs_energy_f46; assert_equal("Non-residential", worksheet.outputs_energy_f46); end
  def test_outputs_energy_p46; assert_in_epsilon(4.21, worksheet.outputs_energy_p46, 0.002); end
  def test_outputs_energy_r46; assert_in_epsilon(4.234995621034355, worksheet.outputs_energy_r46, 0.002); end
  def test_outputs_energy_s46; assert_in_epsilon(4.76447451343983, worksheet.outputs_energy_s46, 0.002); end
  def test_outputs_energy_t46; assert_in_epsilon(5.225806784722832, worksheet.outputs_energy_t46, 0.002); end
  def test_outputs_energy_u46; assert_in_epsilon(5.662891002473267, worksheet.outputs_energy_u46, 0.002); end
  def test_outputs_energy_v46; assert_in_epsilon(6.069789945485712, worksheet.outputs_energy_v46, 0.002); end
  def test_outputs_energy_w46; assert_in_epsilon(6.442455105885871, worksheet.outputs_energy_w46, 0.002); end
  def test_outputs_energy_x46; assert_in_epsilon(6.775605881783134, worksheet.outputs_energy_x46, 0.002); end
  def test_outputs_energy_y46; assert_in_epsilon(7.0628775196052205, worksheet.outputs_energy_y46, 0.002); end
  def test_outputs_energy_z46; assert_in_epsilon(7.29864721239947, worksheet.outputs_energy_z46, 0.002); end
  def test_outputs_energy_d47; assert_equal("Global Other", worksheet.outputs_energy_d47); end
  def test_outputs_energy_f47; assert_equal("Non-residential", worksheet.outputs_energy_f47); end
  def test_outputs_energy_p47; assert_in_epsilon(3.57, worksheet.outputs_energy_p47, 0.002); end
  def test_outputs_energy_r47; assert_in_epsilon(3.616434616787921, worksheet.outputs_energy_r47, 0.002); end
  def test_outputs_energy_s47; assert_in_epsilon(3.814456915195792, worksheet.outputs_energy_s47, 0.002); end
  def test_outputs_energy_t47; assert_in_epsilon(4.1321642521898365, worksheet.outputs_energy_t47, 0.002); end
  def test_outputs_energy_u47; assert_in_epsilon(4.420065531566408, worksheet.outputs_energy_u47, 0.002); end
  def test_outputs_energy_v47; assert_in_epsilon(4.67363307953802, worksheet.outputs_energy_v47, 0.002); end
  def test_outputs_energy_w47; assert_in_epsilon(4.889951100819809, worksheet.outputs_energy_w47, 0.002); end
  def test_outputs_energy_x47; assert_in_epsilon(5.06528708231718, worksheet.outputs_energy_x47, 0.002); end
  def test_outputs_energy_y47; assert_in_epsilon(5.195281137880362, worksheet.outputs_energy_y47, 0.002); end
  def test_outputs_energy_z47; assert_in_epsilon(5.276352015472267, worksheet.outputs_energy_z47, 0.002); end
  def test_outputs_energy_p379; assert_in_epsilon(2011.0, worksheet.outputs_energy_p379, 0.002); end
  def test_outputs_energy_r379; assert_in_epsilon(2011.0, worksheet.outputs_energy_r379, 0.002); end
  def test_outputs_energy_s379; assert_equal("2015", worksheet.outputs_energy_s379); end
  def test_outputs_energy_t379; assert_equal("2020", worksheet.outputs_energy_t379); end
  def test_outputs_energy_u379; assert_equal("2025", worksheet.outputs_energy_u379); end
  def test_outputs_energy_v379; assert_equal("2030", worksheet.outputs_energy_v379); end
  def test_outputs_energy_w379; assert_equal("2035", worksheet.outputs_energy_w379); end
  def test_outputs_energy_x379; assert_equal("2040", worksheet.outputs_energy_x379); end
  def test_outputs_energy_y379; assert_equal("2045", worksheet.outputs_energy_y379); end
  def test_outputs_energy_z379; assert_equal("2050", worksheet.outputs_energy_z379); end
  def test_outputs_energy_c380; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c380); end
  def test_outputs_energy_d380; assert_equal("G.C.01", worksheet.outputs_energy_d380); end
  def test_outputs_energy_e380; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e380); end
  def test_outputs_energy_i380; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i380); end
  def test_outputs_energy_j380; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j380); end
  def test_outputs_energy_k380; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k380); end
  def test_outputs_energy_l380; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l380); end
  def test_outputs_energy_m380; assert_equal("non-residential", worksheet.outputs_energy_m380); end
  def test_outputs_energy_p380; assert_in_epsilon(16.66953044628581, worksheet.outputs_energy_p380, 0.002); end
  def test_outputs_energy_r380; assert_in_epsilon(14.723368907246744, worksheet.outputs_energy_r380, 0.002); end
  def test_outputs_energy_s380; assert_in_epsilon(15.305394092341169, worksheet.outputs_energy_s380, 0.002); end
  def test_outputs_energy_t380; assert_in_epsilon(14.997315584618656, worksheet.outputs_energy_t380, 0.002); end
  def test_outputs_energy_u380; assert_in_epsilon(14.54547023942785, worksheet.outputs_energy_u380, 0.002); end
  def test_outputs_energy_v380; assert_in_epsilon(13.92612913100915, worksheet.outputs_energy_v380, 0.002); end
  def test_outputs_energy_w380; assert_in_epsilon(13.14790719812004, worksheet.outputs_energy_w380, 0.002); end
  def test_outputs_energy_x380; assert_in_epsilon(12.248591320378225, worksheet.outputs_energy_x380, 0.002); end
  def test_outputs_energy_y380; assert_in_epsilon(11.252174943473042, worksheet.outputs_energy_y380, 0.002); end
  def test_outputs_energy_z380; assert_in_epsilon(10.156981693821344, worksheet.outputs_energy_z380, 0.002); end
  def test_outputs_energy_c381; assert_equal("Traditional biomass", worksheet.outputs_energy_c381); end
  def test_outputs_energy_d381; assert_equal("G.BM.13", worksheet.outputs_energy_d381); end
  def test_outputs_energy_e381; assert_equal("Global Traditional biomass", worksheet.outputs_energy_e381); end
  def test_outputs_energy_i381; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i381); end
  def test_outputs_energy_j381; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j381); end
  def test_outputs_energy_k381; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k381); end
  def test_outputs_energy_l381; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l381); end
  def test_outputs_energy_m381; assert_equal("non-residential", worksheet.outputs_energy_m381); end
  def test_outputs_energy_p381; assert_in_epsilon(23.830469553714188, worksheet.outputs_energy_p381, 0.002); end
  def test_outputs_energy_r381; assert_in_epsilon(21.048271011762242, worksheet.outputs_energy_r381, 0.002); end
  def test_outputs_energy_s381; assert_in_epsilon(19.392918780934195, worksheet.outputs_energy_s381, 0.002); end
  def test_outputs_energy_t381; assert_in_epsilon(17.371069438487872, worksheet.outputs_energy_t381, 0.002); end
  def test_outputs_energy_u381; assert_in_epsilon(15.27346946514845, worksheet.outputs_energy_u381, 0.002); end
  def test_outputs_energy_v381; assert_in_epsilon(13.286905733005835, worksheet.outputs_energy_v381, 0.002); end
  def test_outputs_energy_w381; assert_in_epsilon(11.721575846226846, worksheet.outputs_energy_w381, 0.002); end
  def test_outputs_energy_x381; assert_in_epsilon(10.24748365153571, worksheet.outputs_energy_x381, 0.002); end
  def test_outputs_energy_y381; assert_in_epsilon(9.200972061648073, worksheet.outputs_energy_y381, 0.002); end
  def test_outputs_energy_z381; assert_in_epsilon(8.215916117006064, worksheet.outputs_energy_z381, 0.002); end
  def test_outputs_energy_c382; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c382); end
  def test_outputs_energy_d382; assert_equal("G.C.02", worksheet.outputs_energy_d382); end
  def test_outputs_energy_e382; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e382); end
  def test_outputs_energy_i382; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i382); end
  def test_outputs_energy_j382; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j382); end
  def test_outputs_energy_k382; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k382); end
  def test_outputs_energy_l382; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l382); end
  def test_outputs_energy_m382; assert_equal("non-residential", worksheet.outputs_energy_m382); end
  def test_outputs_energy_p382; assert_in_epsilon(12.95, worksheet.outputs_energy_p382, 0.002); end
  def test_outputs_energy_r382; assert_in_epsilon(9.366776041599586, worksheet.outputs_energy_r382, 0.002); end
  def test_outputs_energy_s382; assert_in_epsilon(10.047611463829188, worksheet.outputs_energy_s382, 0.002); end
  def test_outputs_energy_t382; assert_in_epsilon(10.195912647249708, worksheet.outputs_energy_t382, 0.002); end
  def test_outputs_energy_u382; assert_in_epsilon(10.214072047614774, worksheet.outputs_energy_u382, 0.002); end
  def test_outputs_energy_v382; assert_in_epsilon(10.084477260797012, worksheet.outputs_energy_v382, 0.002); end
  def test_outputs_energy_w382; assert_in_epsilon(9.786871135097618, worksheet.outputs_energy_w382, 0.002); end
  def test_outputs_energy_x382; assert_in_epsilon(9.365324326092406, worksheet.outputs_energy_x382, 0.002); end
  def test_outputs_energy_y382; assert_in_epsilon(8.807300307500785, worksheet.outputs_energy_y382, 0.002); end
  def test_outputs_energy_z382; assert_in_epsilon(8.15667717122048, worksheet.outputs_energy_z382, 0.002); end
  def test_outputs_energy_c383; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c383); end
  def test_outputs_energy_d383; assert_equal("G.C.03", worksheet.outputs_energy_d383); end
  def test_outputs_energy_e383; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e383); end
  def test_outputs_energy_i383; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i383); end
  def test_outputs_energy_j383; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j383); end
  def test_outputs_energy_k383; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k383); end
  def test_outputs_energy_l383; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l383); end
  def test_outputs_energy_m383; assert_equal("non-residential", worksheet.outputs_energy_m383); end
  def test_outputs_energy_p383; assert_in_epsilon(24.88, worksheet.outputs_energy_p383, 0.002); end
  def test_outputs_energy_r383; assert_in_epsilon(23.67302064250328, worksheet.outputs_energy_r383, 0.002); end
  def test_outputs_energy_s383; assert_in_epsilon(25.453534814051928, worksheet.outputs_energy_s383, 0.002); end
  def test_outputs_energy_t383; assert_in_epsilon(26.379160978005913, worksheet.outputs_energy_t383, 0.002); end
  def test_outputs_energy_u383; assert_in_epsilon(27.094517558799595, worksheet.outputs_energy_u383, 0.002); end
  def test_outputs_energy_v383; assert_in_epsilon(27.55967805463282, worksheet.outputs_energy_v383, 0.002); end
  def test_outputs_energy_w383; assert_in_epsilon(27.7101707738855, worksheet.outputs_energy_w383, 0.002); end
  def test_outputs_energy_x383; assert_in_epsilon(27.653792253235196, worksheet.outputs_energy_x383, 0.002); end
  def test_outputs_energy_y383; assert_in_epsilon(27.33262341831647, worksheet.outputs_energy_y383, 0.002); end
  def test_outputs_energy_z383; assert_in_epsilon(26.85558238519873, worksheet.outputs_energy_z383, 0.002); end
  def test_outputs_energy_c384; assert_equal("Electricity grid", worksheet.outputs_energy_c384); end
  def test_outputs_energy_d384; assert_equal("G.E.01", worksheet.outputs_energy_d384); end
  def test_outputs_energy_e384; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e384); end
  def test_outputs_energy_i384; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i384); end
  def test_outputs_energy_j384; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j384); end
  def test_outputs_energy_k384; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k384); end
  def test_outputs_energy_l384; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l384); end
  def test_outputs_energy_m384; assert_equal("non-residential", worksheet.outputs_energy_m384); end
  def test_outputs_energy_p384; assert_in_epsilon(34.28, worksheet.outputs_energy_p384, 0.002); end
  def test_outputs_energy_r384; assert_in_epsilon(37.16549844912868, worksheet.outputs_energy_r384, 0.002); end
  def test_outputs_energy_s384; assert_in_epsilon(42.321692794341885, worksheet.outputs_energy_s384, 0.002); end
  def test_outputs_energy_t384; assert_in_epsilon(47.920275866294915, worksheet.outputs_energy_t384, 0.002); end
  def test_outputs_energy_u384; assert_in_epsilon(53.613758349858834, worksheet.outputs_energy_u384, 0.002); end
  def test_outputs_energy_v384; assert_in_epsilon(59.26590276837615, worksheet.outputs_energy_v384, 0.002); end
  def test_outputs_energy_w384; assert_in_epsilon(64.67327401483121, worksheet.outputs_energy_w384, 0.002); end
  def test_outputs_energy_x384; assert_in_epsilon(69.89740918083238, worksheet.outputs_energy_x384, 0.002); end
  def test_outputs_energy_y384; assert_in_epsilon(74.71166532354762, worksheet.outputs_energy_y384, 0.002); end
  def test_outputs_energy_z384; assert_in_epsilon(79.20164031453845, worksheet.outputs_energy_z384, 0.002); end
  def test_outputs_energy_c385; assert_equal("Heat network", worksheet.outputs_energy_c385); end
  def test_outputs_energy_d385; assert_equal("G.H.01", worksheet.outputs_energy_d385); end
  def test_outputs_energy_e385; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e385); end
  def test_outputs_energy_i385; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i385); end
  def test_outputs_energy_j385; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j385); end
  def test_outputs_energy_k385; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k385); end
  def test_outputs_energy_l385; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l385); end
  def test_outputs_energy_m385; assert_equal("non-residential", worksheet.outputs_energy_m385); end
  def test_outputs_energy_p385; assert_in_epsilon(5.46, worksheet.outputs_energy_p385, 0.002); end
  def test_outputs_energy_r385; assert_in_epsilon(5.1069453671891, worksheet.outputs_energy_r385, 0.002); end
  def test_outputs_energy_s385; assert_in_epsilon(5.220316132647991, worksheet.outputs_energy_s385, 0.002); end
  def test_outputs_energy_t385; assert_in_epsilon(5.6520152018489345, worksheet.outputs_energy_t385, 0.002); end
  def test_outputs_energy_u385; assert_in_epsilon(6.0593814428816115, worksheet.outputs_energy_u385, 0.002); end
  def test_outputs_energy_v385; assert_in_epsilon(6.430279560306578, worksheet.outputs_energy_v385, 0.002); end
  def test_outputs_energy_w385; assert_in_epsilon(6.741646355303229, worksheet.outputs_energy_w385, 0.002); end
  def test_outputs_energy_x385; assert_in_epsilon(7.00754740269378, worksheet.outputs_energy_x385, 0.002); end
  def test_outputs_energy_y385; assert_in_epsilon(7.202830638651979, worksheet.outputs_energy_y385, 0.002); end
  def test_outputs_energy_z385; assert_in_epsilon(7.348427790875796, worksheet.outputs_energy_z385, 0.002); end
  def test_outputs_energy_c386; assert_equal("Solar", worksheet.outputs_energy_c386); end
  def test_outputs_energy_d386; assert_equal("G.R.01", worksheet.outputs_energy_d386); end
  def test_outputs_energy_e386; assert_equal("Global Solar", worksheet.outputs_energy_e386); end
  def test_outputs_energy_f386; assert_equal("G.R.07", worksheet.outputs_energy_f386); end
  def test_outputs_energy_g386; assert_equal("Global Environmental heat", worksheet.outputs_energy_g386); end
  def test_outputs_energy_i386; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_i386); end
  def test_outputs_energy_j386; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_j386); end
  def test_outputs_energy_k386; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_k386); end
  def test_outputs_energy_l386; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_l386); end
  def test_outputs_energy_m386; assert_equal("non-residential", worksheet.outputs_energy_m386); end
  def test_outputs_energy_r386; assert_in_epsilon(4.1095996518402576, worksheet.outputs_energy_r386, 0.002); end
  def test_outputs_energy_s386; assert_in_epsilon(4.631111787987766, worksheet.outputs_energy_s386, 0.002); end
  def test_outputs_energy_t386; assert_in_epsilon(5.708525216674042, worksheet.outputs_energy_t386, 0.002); end
  def test_outputs_energy_u386; assert_in_epsilon(6.876033678534835, worksheet.outputs_energy_u386, 0.002); end
  def test_outputs_energy_v386; assert_in_epsilon(8.11195266460178, worksheet.outputs_energy_v386, 0.002); end
  def test_outputs_energy_w386; assert_in_epsilon(9.377000486693579, worksheet.outputs_energy_w386, 0.002); end
  def test_outputs_energy_x386; assert_in_epsilon(10.673652283351927, worksheet.outputs_energy_x386, 0.002); end
  def test_outputs_energy_y386; assert_in_epsilon(11.952870646698612, worksheet.outputs_energy_y386, 0.002); end
  def test_outputs_energy_z386; assert_in_epsilon(13.21919116509981, worksheet.outputs_energy_z386, 0.002); end
  def test_outputs_energy_c491; assert_equal("Description", worksheet.outputs_energy_c491); end
  def test_outputs_energy_r491; assert_in_epsilon(2011.0, worksheet.outputs_energy_r491, 0.002); end
  def test_outputs_energy_s491; assert_equal("2015", worksheet.outputs_energy_s491); end
  def test_outputs_energy_t491; assert_equal("2020", worksheet.outputs_energy_t491); end
  def test_outputs_energy_u491; assert_equal("2025", worksheet.outputs_energy_u491); end
  def test_outputs_energy_v491; assert_equal("2030", worksheet.outputs_energy_v491); end
  def test_outputs_energy_w491; assert_equal("2035", worksheet.outputs_energy_w491); end
  def test_outputs_energy_x491; assert_equal("2040", worksheet.outputs_energy_x491); end
  def test_outputs_energy_y491; assert_equal("2045", worksheet.outputs_energy_y491); end
  def test_outputs_energy_z491; assert_equal("2050", worksheet.outputs_energy_z491); end
  def test_outputs_energy_c492; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_c492); end
  def test_outputs_energy_i492; assert_equal("G.M.02", worksheet.outputs_energy_i492); end
  def test_outputs_energy_r492; assert_in_epsilon(19.460745993692754, worksheet.outputs_energy_r492, 0.002); end
  def test_outputs_energy_s492; assert_in_epsilon(20.921243986024535, worksheet.outputs_energy_s492, 0.002); end
  def test_outputs_energy_t492; assert_in_epsilon(22.263565616200594, worksheet.outputs_energy_t492, 0.002); end
  def test_outputs_energy_u492; assert_in_epsilon(25.055689316999295, worksheet.outputs_energy_u492, 0.002); end
  def test_outputs_energy_v492; assert_in_epsilon(27.992090363626577, worksheet.outputs_energy_v492, 0.002); end
  def test_outputs_energy_w492; assert_in_epsilon(30.898965975606636, worksheet.outputs_energy_w492, 0.002); end
  def test_outputs_energy_x492; assert_in_epsilon(34.166480389259355, worksheet.outputs_energy_x492, 0.002); end
  def test_outputs_energy_y492; assert_in_epsilon(37.46777598463654, worksheet.outputs_energy_y492, 0.002); end
  def test_outputs_energy_z492; assert_in_epsilon(41.04434222569785, worksheet.outputs_energy_z492, 0.002); end
  def test_outputs_energy_c493; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_c493); end
  def test_outputs_energy_i493; assert_equal("G.M.02", worksheet.outputs_energy_i493); end
  def test_outputs_energy_r493; assert_in_epsilon(5.957349170600305, worksheet.outputs_energy_r493, 0.002); end
  def test_outputs_energy_s493; assert_in_epsilon(6.183685900926527, worksheet.outputs_energy_s493, 0.002); end
  def test_outputs_energy_t493; assert_in_epsilon(6.55327301977617, worksheet.outputs_energy_t493, 0.002); end
  def test_outputs_energy_u493; assert_in_epsilon(6.918554915187991, worksheet.outputs_energy_u493, 0.002); end
  def test_outputs_energy_v493; assert_in_epsilon(7.3183772491621255, worksheet.outputs_energy_v493, 0.002); end
  def test_outputs_energy_w493; assert_in_epsilon(7.785192802672141, worksheet.outputs_energy_w493, 0.002); end
  def test_outputs_energy_x493; assert_in_epsilon(8.242445236019744, worksheet.outputs_energy_x493, 0.002); end
  def test_outputs_energy_y493; assert_in_epsilon(8.599523175771411, worksheet.outputs_energy_y493, 0.002); end
  def test_outputs_energy_z493; assert_in_epsilon(8.886359440379362, worksheet.outputs_energy_z493, 0.002); end
  def test_outputs_energy_c494; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_c494); end
  def test_outputs_energy_i494; assert_equal("G.M.02", worksheet.outputs_energy_i494); end
  def test_outputs_energy_r494; assert_in_epsilon(1.6638113188620842, worksheet.outputs_energy_r494, 0.002); end
  def test_outputs_energy_s494; assert_in_epsilon(1.7733475492223862, worksheet.outputs_energy_s494, 0.002); end
  def test_outputs_energy_t494; assert_in_epsilon(1.893018049584576, worksheet.outputs_energy_t494, 0.002); end
  def test_outputs_energy_u494; assert_in_epsilon(2.132633409203651, worksheet.outputs_energy_u494, 0.002); end
  def test_outputs_energy_v494; assert_in_epsilon(2.383122983235223, worksheet.outputs_energy_v494, 0.002); end
  def test_outputs_energy_w494; assert_in_epsilon(2.6312981293820674, worksheet.outputs_energy_w494, 0.002); end
  def test_outputs_energy_x494; assert_in_epsilon(2.9092900103539874, worksheet.outputs_energy_x494, 0.002); end
  def test_outputs_energy_y494; assert_in_epsilon(3.1855250756097933, worksheet.outputs_energy_y494, 0.002); end
  def test_outputs_energy_z494; assert_in_epsilon(3.4933443138737923, worksheet.outputs_energy_z494, 0.002); end
  def test_outputs_energy_c495; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_c495); end
  def test_outputs_energy_i495; assert_equal("G.M.02", worksheet.outputs_energy_i495); end
  def test_outputs_energy_r495; assert_in_epsilon(12.7269993633999, worksheet.outputs_energy_r495, 0.002); end
  def test_outputs_energy_s495; assert_in_epsilon(13.506524687795169, worksheet.outputs_energy_s495, 0.002); end
  def test_outputs_energy_t495; assert_in_epsilon(14.426873500298548, worksheet.outputs_energy_t495, 0.002); end
  def test_outputs_energy_u495; assert_in_epsilon(16.26302402119415, worksheet.outputs_energy_u495, 0.002); end
  def test_outputs_energy_v495; assert_in_epsilon(18.184404823908594, worksheet.outputs_energy_v495, 0.002); end
  def test_outputs_energy_w495; assert_in_epsilon(20.090472409911445, worksheet.outputs_energy_w495, 0.002); end
  def test_outputs_energy_x495; assert_in_epsilon(22.22667392715983, worksheet.outputs_energy_x495, 0.002); end
  def test_outputs_energy_y495; assert_in_epsilon(24.352063974524043, worksheet.outputs_energy_y495, 0.002); end
  def test_outputs_energy_z495; assert_in_epsilon(26.72165428542426, worksheet.outputs_energy_z495, 0.002); end
  def test_outputs_energy_c496; assert_equal("Total", worksheet.outputs_energy_c496); end
  def test_outputs_energy_r496; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r496, 0.002); end
  def test_outputs_energy_s496; assert_in_epsilon(42.38480212396862, worksheet.outputs_energy_s496, 0.002); end
  def test_outputs_energy_t496; assert_in_epsilon(45.13673018585989, worksheet.outputs_energy_t496, 0.002); end
  def test_outputs_energy_u496; assert_in_epsilon(50.369901662585086, worksheet.outputs_energy_u496, 0.002); end
  def test_outputs_energy_v496; assert_in_epsilon(55.87799541993252, worksheet.outputs_energy_v496, 0.002); end
  def test_outputs_energy_w496; assert_in_epsilon(61.40592931757229, worksheet.outputs_energy_w496, 0.002); end
  def test_outputs_energy_x496; assert_in_epsilon(67.54488956279292, worksheet.outputs_energy_x496, 0.002); end
  def test_outputs_energy_y496; assert_in_epsilon(73.60488821054179, worksheet.outputs_energy_y496, 0.002); end
  def test_outputs_energy_z496; assert_in_epsilon(80.14570026537527, worksheet.outputs_energy_z496, 0.002); end
  def test_outputs_energy_d208; assert_in_epsilon(946.0, worksheet.outputs_energy_d208, 0.002); end
  def test_outputs_energy_d209; assert_in_epsilon(861.0, worksheet.outputs_energy_d209, 0.002); end
  def test_outputs_energy_d238; assert_in_epsilon(14500.0, worksheet.outputs_energy_d238, 0.002); end
  def test_outputs_energy_d239; assert_in_epsilon(10800.0, worksheet.outputs_energy_d239, 0.002); end
  def test_outputs_energy_d240; assert_in_epsilon(12650.0, worksheet.outputs_energy_d240, 0.002); end
  def test_outputs_energy_h208; assert_in_epsilon(278.8864693724007, worksheet.outputs_energy_h208, 0.002); end
  def test_outputs_energy_h221; assert_in_epsilon(131.05073953124648, worksheet.outputs_energy_h221, 0.002); end
  def test_outputs_energy_h214; assert_in_epsilon(228889875819807.8, worksheet.outputs_energy_h214, 0.002); end
  def test_outputs_energy_h228; assert_in_delta(0.0029755024373250595, worksheet.outputs_energy_h228, 0.002); end
  def test_outputs_energy_g180; assert_equal("Notes", worksheet.outputs_energy_g180); end
  def test_outputs_energy_r180; assert_in_epsilon(2011.0, worksheet.outputs_energy_r180, 0.002); end
  def test_outputs_energy_s180; assert_equal("2015", worksheet.outputs_energy_s180); end
  def test_outputs_energy_t180; assert_equal("2020", worksheet.outputs_energy_t180); end
  def test_outputs_energy_u180; assert_equal("2025", worksheet.outputs_energy_u180); end
  def test_outputs_energy_v180; assert_equal("2030", worksheet.outputs_energy_v180); end
  def test_outputs_energy_w180; assert_equal("2035", worksheet.outputs_energy_w180); end
  def test_outputs_energy_x180; assert_equal("2040", worksheet.outputs_energy_x180); end
  def test_outputs_energy_y180; assert_equal("2045", worksheet.outputs_energy_y180); end
  def test_outputs_energy_z180; assert_equal("2050", worksheet.outputs_energy_z180); end
  def test_outputs_energy_c181; assert_equal("G.Q.01", worksheet.outputs_energy_c181); end
  def test_outputs_energy_d181; assert_equal("Global Coal reserves ", worksheet.outputs_energy_d181); end
  def test_outputs_energy_g181; assert_equal("Gt", worksheet.outputs_energy_g181); end
  def test_outputs_energy_r181; assert_in_epsilon(6.6342242045051885, worksheet.outputs_energy_r181, 0.002); end
  def test_outputs_energy_s181; assert_in_epsilon(26.580823947300285, worksheet.outputs_energy_s181, 0.002); end
  def test_outputs_energy_t181; assert_in_epsilon(54.88252709766365, worksheet.outputs_energy_t181, 0.002); end
  def test_outputs_energy_u181; assert_in_epsilon(86.66376497931138, worksheet.outputs_energy_u181, 0.002); end
  def test_outputs_energy_v181; assert_in_epsilon(121.80891746553507, worksheet.outputs_energy_v181, 0.002); end
  def test_outputs_energy_w181; assert_in_epsilon(159.58163109018, worksheet.outputs_energy_w181, 0.002); end
  def test_outputs_energy_x181; assert_in_epsilon(199.26482867664595, worksheet.outputs_energy_x181, 0.002); end
  def test_outputs_energy_y181; assert_in_epsilon(239.16064890917468, worksheet.outputs_energy_y181, 0.002); end
  def test_outputs_energy_z181; assert_in_epsilon(278.8864693724007, worksheet.outputs_energy_z181, 0.002); end
  def test_outputs_energy_c182; assert_equal("G.Q.02", worksheet.outputs_energy_c182); end
  def test_outputs_energy_d182; assert_equal("Global Oil reserves ", worksheet.outputs_energy_d182); end
  def test_outputs_energy_g182; assert_equal("l", worksheet.outputs_energy_g182); end
  def test_outputs_energy_r182; assert_in_epsilon(4597305828809.44, worksheet.outputs_energy_r182, 0.002); end
  def test_outputs_energy_s182; assert_in_epsilon(19560477919402.996, worksheet.outputs_energy_s182, 0.002); end
  def test_outputs_energy_t182; assert_in_epsilon(42438316408509.05, worksheet.outputs_energy_t182, 0.002); end
  def test_outputs_energy_u182; assert_in_epsilon(68180986078771.25, worksheet.outputs_energy_u182, 0.002); end
  def test_outputs_energy_v182; assert_in_epsilon(96332039165368.94, worksheet.outputs_energy_v182, 0.002); end
  def test_outputs_energy_w182; assert_in_epsilon(126442987778372.39, worksheet.outputs_energy_w182, 0.002); end
  def test_outputs_energy_x182; assert_in_epsilon(158502826956440.3, worksheet.outputs_energy_x182, 0.002); end
  def test_outputs_energy_y182; assert_in_epsilon(192699598665408.16, worksheet.outputs_energy_y182, 0.002); end
  def test_outputs_energy_z182; assert_in_epsilon(228889875819807.8, worksheet.outputs_energy_z182, 0.002); end
  def test_outputs_energy_c183; assert_equal("G.Q.03", worksheet.outputs_energy_c183); end
  def test_outputs_energy_d183; assert_equal("Global Gas reserves ", worksheet.outputs_energy_d183); end
  def test_outputs_energy_g183; assert_equal("T.m3", worksheet.outputs_energy_g183); end
  def test_outputs_energy_r183; assert_in_epsilon(3.0960805072074664, worksheet.outputs_energy_r183, 0.002); end
  def test_outputs_energy_s183; assert_in_epsilon(12.62385103596568, worksheet.outputs_energy_s183, 0.002); end
  def test_outputs_energy_t183; assert_in_epsilon(26.113912607303337, worksheet.outputs_energy_t183, 0.002); end
  def test_outputs_energy_u183; assert_in_epsilon(40.63712983244423, worksheet.outputs_energy_u183, 0.002); end
  def test_outputs_energy_v183; assert_in_epsilon(56.29577673034734, worksheet.outputs_energy_v183, 0.002); end
  def test_outputs_energy_w183; assert_in_epsilon(72.99431364296404, worksheet.outputs_energy_w183, 0.002); end
  def test_outputs_energy_x183; assert_in_epsilon(90.80561197227502, worksheet.outputs_energy_x183, 0.002); end
  def test_outputs_energy_y183; assert_in_epsilon(110.05693029792181, worksheet.outputs_energy_y183, 0.002); end
  def test_outputs_energy_z183; assert_in_epsilon(131.05073953124648, worksheet.outputs_energy_z183, 0.002); end
  def test_outputs_energy_z60; assert_in_epsilon(451.08565077979017, worksheet.outputs_energy_z60, 0.002); end
  def test_outputs_energy_d316; assert_equal("Technology description", worksheet.outputs_energy_d316); end
  def test_outputs_energy_h316; assert_equal("1975", worksheet.outputs_energy_h316); end
  def test_outputs_energy_i316; assert_equal("1980", worksheet.outputs_energy_i316); end
  def test_outputs_energy_j316; assert_equal("1985", worksheet.outputs_energy_j316); end
  def test_outputs_energy_k316; assert_equal("1990", worksheet.outputs_energy_k316); end
  def test_outputs_energy_l316; assert_equal("1995", worksheet.outputs_energy_l316); end
  def test_outputs_energy_m316; assert_equal("2000", worksheet.outputs_energy_m316); end
  def test_outputs_energy_n316; assert_equal("2005", worksheet.outputs_energy_n316); end
  def test_outputs_energy_o316; assert_in_epsilon(2010.0, worksheet.outputs_energy_o316, 0.002); end
  def test_outputs_energy_p316; assert_in_epsilon(2011.0, worksheet.outputs_energy_p316, 0.002); end
  def test_outputs_energy_r316; assert_in_epsilon(2011.0, worksheet.outputs_energy_r316, 0.002); end
  def test_outputs_energy_s316; assert_equal("2015", worksheet.outputs_energy_s316); end
  def test_outputs_energy_t316; assert_equal("2020", worksheet.outputs_energy_t316); end
  def test_outputs_energy_u316; assert_equal("2025", worksheet.outputs_energy_u316); end
  def test_outputs_energy_v316; assert_equal("2030", worksheet.outputs_energy_v316); end
  def test_outputs_energy_w316; assert_equal("2035", worksheet.outputs_energy_w316); end
  def test_outputs_energy_x316; assert_equal("2040", worksheet.outputs_energy_x316); end
  def test_outputs_energy_y316; assert_equal("2045", worksheet.outputs_energy_y316); end
  def test_outputs_energy_z316; assert_equal("2050", worksheet.outputs_energy_z316); end
  def test_outputs_energy_d317; assert_equal("Unabated solid fuel power plants", worksheet.outputs_energy_d317); end
  def test_outputs_energy_h317; assert_in_epsilon(8.6961132, worksheet.outputs_energy_h317, 0.002); end
  def test_outputs_energy_i317; assert_in_epsilon(11.4665868, worksheet.outputs_energy_i317, 0.002); end
  def test_outputs_energy_j317; assert_in_epsilon(13.906404, worksheet.outputs_energy_j317, 0.002); end
  def test_outputs_energy_k317; assert_in_epsilon(16.4052396, worksheet.outputs_energy_k317, 0.002); end
  def test_outputs_energy_l317; assert_in_epsilon(18.456966, worksheet.outputs_energy_l317, 0.002); end
  def test_outputs_energy_m317; assert_in_epsilon(22.2185448, worksheet.outputs_energy_m317, 0.002); end
  def test_outputs_energy_n317; assert_in_epsilon(27.2447424, worksheet.outputs_energy_n317, 0.002); end
  def test_outputs_energy_o317; assert_in_epsilon(32.5517508, worksheet.outputs_energy_o317, 0.002); end
  def test_outputs_energy_p317; assert_in_epsilon(34.4380896, worksheet.outputs_energy_p317, 0.002); end
  def test_outputs_energy_r317; assert_in_epsilon(35.156186878760685, worksheet.outputs_energy_r317, 0.002); end
  def test_outputs_energy_s317; assert_in_epsilon(34.70675901301003, worksheet.outputs_energy_s317, 0.002); end
  def test_outputs_energy_t317; assert_in_epsilon(36.53458108155433, worksheet.outputs_energy_t317, 0.002); end
  def test_outputs_energy_u317; assert_in_epsilon(41.22099293619368, worksheet.outputs_energy_u317, 0.002); end
  def test_outputs_energy_v317; assert_in_epsilon(44.1409053562036, worksheet.outputs_energy_v317, 0.002); end
  def test_outputs_energy_w317; assert_in_epsilon(46.36513464007192, worksheet.outputs_energy_w317, 0.002); end
  def test_outputs_energy_x317; assert_in_epsilon(47.215005386072086, worksheet.outputs_energy_x317, 0.002); end
  def test_outputs_energy_y317; assert_in_epsilon(43.988941003188714, worksheet.outputs_energy_y317, 0.002); end
  def test_outputs_energy_z317; assert_in_epsilon(41.71267342110147, worksheet.outputs_energy_z317, 0.002); end
  def test_outputs_energy_d318; assert_equal("Unabated liquid fuel power plants", worksheet.outputs_energy_d318); end
  def test_outputs_energy_h318; assert_in_epsilon(5.200236, worksheet.outputs_energy_h318, 0.002); end
  def test_outputs_energy_i318; assert_in_epsilon(5.9519628, worksheet.outputs_energy_i318, 0.002); end
  def test_outputs_energy_j318; assert_in_epsilon(4.2661512, worksheet.outputs_energy_j318, 0.002); end
  def test_outputs_energy_k318; assert_in_epsilon(4.7950164, worksheet.outputs_energy_k318, 0.002); end
  def test_outputs_energy_l318; assert_in_epsilon(4.4350452, worksheet.outputs_energy_l318, 0.002); end
  def test_outputs_energy_m318; assert_in_epsilon(4.320846, worksheet.outputs_energy_m318, 0.002); end
  def test_outputs_energy_n318; assert_in_epsilon(4.1088132, worksheet.outputs_energy_n318, 0.002); end
  def test_outputs_energy_o318; assert_in_epsilon(3.4785432, worksheet.outputs_energy_o318, 0.002); end
  def test_outputs_energy_p318; assert_in_epsilon(3.808314, worksheet.outputs_energy_p318, 0.002); end
  def test_outputs_energy_r318; assert_in_epsilon(3.897986239049677, worksheet.outputs_energy_r318, 0.002); end
  def test_outputs_energy_s318; assert_in_epsilon(3.980191008313691, worksheet.outputs_energy_s318, 0.002); end
  def test_outputs_energy_t318; assert_in_epsilon(8.076933088877933, worksheet.outputs_energy_t318, 0.002); end
  def test_outputs_energy_u318; assert_in_epsilon(9.316783686885895, worksheet.outputs_energy_u318, 0.002); end
  def test_outputs_energy_v318; assert_in_epsilon(11.744026281828194, worksheet.outputs_energy_v318, 0.002); end
  def test_outputs_energy_w318; assert_in_epsilon(13.746146469663525, worksheet.outputs_energy_w318, 0.002); end
  def test_outputs_energy_x318; assert_in_epsilon(15.983988031620623, worksheet.outputs_energy_x318, 0.002); end
  def test_outputs_energy_y318; assert_in_epsilon(18.274669702205614, worksheet.outputs_energy_y318, 0.002); end
  def test_outputs_energy_z318; assert_in_epsilon(19.81769046257016, worksheet.outputs_energy_z318, 0.002); end
  def test_outputs_energy_d319; assert_equal("Unabated gas fuel power plants", worksheet.outputs_energy_d319); end
  def test_outputs_energy_h319; assert_in_epsilon(2.9048472, worksheet.outputs_energy_h319, 0.002); end
  def test_outputs_energy_i319; assert_in_epsilon(3.597156, worksheet.outputs_energy_i319, 0.002); end
  def test_outputs_energy_j319; assert_in_epsilon(4.4971236, worksheet.outputs_energy_j319, 0.002); end
  def test_outputs_energy_k319; assert_in_epsilon(6.229368, worksheet.outputs_energy_k319, 0.002); end
  def test_outputs_energy_l319; assert_in_epsilon(7.2358848, worksheet.outputs_energy_l319, 0.002); end
  def test_outputs_energy_m319; assert_in_epsilon(9.8646876, worksheet.outputs_energy_m319, 0.002); end
  def test_outputs_energy_n319; assert_in_epsilon(13.20507, worksheet.outputs_energy_n319, 0.002); end
  def test_outputs_energy_o319; assert_in_epsilon(17.210952, worksheet.outputs_energy_o319, 0.002); end
  def test_outputs_energy_p319; assert_in_epsilon(17.4675924, worksheet.outputs_energy_p319, 0.002); end
  def test_outputs_energy_r319; assert_in_epsilon(18.394758281911585, worksheet.outputs_energy_r319, 0.002); end
  def test_outputs_energy_s319; assert_in_epsilon(18.17292152601471, worksheet.outputs_energy_s319, 0.002); end
  def test_outputs_energy_t319; assert_in_epsilon(19.440294623207173, worksheet.outputs_energy_t319, 0.002); end
  def test_outputs_energy_u319; assert_in_epsilon(21.730170063903792, worksheet.outputs_energy_u319, 0.002); end
  def test_outputs_energy_v319; assert_in_epsilon(23.73558552690511, worksheet.outputs_energy_v319, 0.002); end
  def test_outputs_energy_w319; assert_in_epsilon(26.006664446357302, worksheet.outputs_energy_w319, 0.002); end
  def test_outputs_energy_x319; assert_in_epsilon(28.589154231443747, worksheet.outputs_energy_x319, 0.002); end
  def test_outputs_energy_y319; assert_in_epsilon(30.463554416412126, worksheet.outputs_energy_y319, 0.002); end
  def test_outputs_energy_z319; assert_in_epsilon(32.75877144114596, worksheet.outputs_energy_z319, 0.002); end
  def test_outputs_energy_d320; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_d320); end
  def test_outputs_energy_h320; assert_in_delta(0.0, (worksheet.outputs_energy_h320||0), 0.002); end
  def test_outputs_energy_i320; assert_in_delta(0.0, (worksheet.outputs_energy_i320||0), 0.002); end
  def test_outputs_energy_j320; assert_in_delta(0.0, (worksheet.outputs_energy_j320||0), 0.002); end
  def test_outputs_energy_k320; assert_in_delta(0.0, (worksheet.outputs_energy_k320||0), 0.002); end
  def test_outputs_energy_l320; assert_in_delta(0.0, (worksheet.outputs_energy_l320||0), 0.002); end
  def test_outputs_energy_m320; assert_in_delta(0.0, (worksheet.outputs_energy_m320||0), 0.002); end
  def test_outputs_energy_n320; assert_in_delta(0.0, (worksheet.outputs_energy_n320||0), 0.002); end
  def test_outputs_energy_o320; assert_in_delta(0.0, (worksheet.outputs_energy_o320||0), 0.002); end
  def test_outputs_energy_p320; assert_in_delta(0.0, (worksheet.outputs_energy_p320||0), 0.002); end
  def test_outputs_energy_r320; assert_in_delta(0.0, (worksheet.outputs_energy_r320||0), 0.002); end
  def test_outputs_energy_s320; assert_in_delta(0.07346609279999998, worksheet.outputs_energy_s320, 0.002); end
  def test_outputs_energy_t320; assert_in_delta(0.36228124799999994, worksheet.outputs_energy_t320, 0.002); end
  def test_outputs_energy_u320; assert_in_delta(0.417822624, worksheet.outputs_energy_u320, 0.002); end
  def test_outputs_energy_v320; assert_in_delta(0.76900190832, worksheet.outputs_energy_v320, 0.002); end
  def test_outputs_energy_w320; assert_in_delta(0.9621236907359997, worksheet.outputs_energy_w320, 0.002); end
  def test_outputs_energy_x320; assert_in_epsilon(1.1173814023679998, worksheet.outputs_energy_x320, 0.002); end
  def test_outputs_energy_y320; assert_in_epsilon(1.2021703620479995, worksheet.outputs_energy_y320, 0.002); end
  def test_outputs_energy_z320; assert_in_epsilon(1.6014345926399995, worksheet.outputs_energy_z320, 0.002); end
  def test_outputs_energy_d321; assert_equal("Nuclear", worksheet.outputs_energy_d321); end
  def test_outputs_energy_h321; assert_in_epsilon(1.3810068, worksheet.outputs_energy_h321, 0.002); end
  def test_outputs_energy_i321; assert_in_epsilon(2.56815, worksheet.outputs_energy_i321, 0.002); end
  def test_outputs_energy_j321; assert_in_epsilon(5.3715528, worksheet.outputs_energy_j321, 0.002); end
  def test_outputs_energy_k321; assert_in_epsilon(7.2464472, worksheet.outputs_energy_k321, 0.002); end
  def test_outputs_energy_l321; assert_in_epsilon(8.3950236, worksheet.outputs_energy_l321, 0.002); end
  def test_outputs_energy_m321; assert_in_epsilon(9.3262428, worksheet.outputs_energy_m321, 0.002); end
  def test_outputs_energy_n321; assert_in_epsilon(9.9646272, worksheet.outputs_energy_n321, 0.002); end
  def test_outputs_energy_o321; assert_in_epsilon(9.9226368, worksheet.outputs_energy_o321, 0.002); end
  def test_outputs_energy_p321; assert_in_epsilon(9.3012444, worksheet.outputs_energy_p321, 0.002); end
  def test_outputs_energy_r321; assert_in_epsilon(8.730094464, worksheet.outputs_energy_r321, 0.002); end
  def test_outputs_energy_s321; assert_in_epsilon(10.744731648000002, worksheet.outputs_energy_s321, 0.002); end
  def test_outputs_energy_t321; assert_in_epsilon(11.21241528, worksheet.outputs_energy_t321, 0.002); end
  def test_outputs_energy_u321; assert_in_epsilon(12.072675455999997, worksheet.outputs_energy_u321, 0.002); end
  def test_outputs_energy_v321; assert_in_epsilon(12.54730176, worksheet.outputs_energy_v321, 0.002); end
  def test_outputs_energy_w321; assert_in_epsilon(14.104038167999997, worksheet.outputs_energy_w321, 0.002); end
  def test_outputs_energy_x321; assert_in_epsilon(14.777319563999999, worksheet.outputs_energy_x321, 0.002); end
  def test_outputs_energy_y321; assert_in_epsilon(15.657145452, worksheet.outputs_energy_y321, 0.002); end
  def test_outputs_energy_z321; assert_in_epsilon(16.536971339999997, worksheet.outputs_energy_z321, 0.002); end
  def test_outputs_energy_d322; assert_equal("Wind, solar, marine", worksheet.outputs_energy_d322); end
  def test_outputs_energy_h322; assert_in_delta(0.0018612, worksheet.outputs_energy_h322, 0.002); end
  def test_outputs_energy_i322; assert_in_delta(0.0018216, worksheet.outputs_energy_i322, 0.002); end
  def test_outputs_energy_j322; assert_in_delta(0.0025236, worksheet.outputs_energy_j322, 0.002); end
  def test_outputs_energy_k322; assert_in_delta(0.0188136, worksheet.outputs_energy_k322, 0.002); end
  def test_outputs_energy_l322; assert_in_delta(0.0368568, worksheet.outputs_energy_l322, 0.002); end
  def test_outputs_energy_m322; assert_in_delta(0.1244772, worksheet.outputs_energy_m322, 0.002); end
  def test_outputs_energy_n322; assert_in_delta(0.4177584, worksheet.outputs_energy_n322, 0.002); end
  def test_outputs_energy_o322; assert_in_epsilon(1.370574, worksheet.outputs_energy_o322, 0.002); end
  def test_outputs_energy_p322; assert_in_epsilon(1.8177696, worksheet.outputs_energy_p322, 0.002); end
  def test_outputs_energy_r322; assert_in_epsilon(1.8149072401439998, worksheet.outputs_energy_r322, 0.002); end
  def test_outputs_energy_s322; assert_in_epsilon(3.3442219871999996, worksheet.outputs_energy_s322, 0.002); end
  def test_outputs_energy_t322; assert_in_epsilon(4.48789465728, worksheet.outputs_energy_t322, 0.002); end
  def test_outputs_energy_u322; assert_in_epsilon(5.43534848208, worksheet.outputs_energy_u322, 0.002); end
  def test_outputs_energy_v322; assert_in_epsilon(7.20688485024, worksheet.outputs_energy_v322, 0.002); end
  def test_outputs_energy_w322; assert_in_epsilon(8.291885630400001, worksheet.outputs_energy_w322, 0.002); end
  def test_outputs_energy_x322; assert_in_epsilon(11.19287481408, worksheet.outputs_energy_x322, 0.002); end
  def test_outputs_energy_y322; assert_in_epsilon(17.2694863512, worksheet.outputs_energy_y322, 0.002); end
  def test_outputs_energy_z322; assert_in_epsilon(22.1266427976, worksheet.outputs_energy_z322, 0.002); end
  def test_outputs_energy_d323; assert_equal("Hydro", worksheet.outputs_energy_d323); end
  def test_outputs_energy_h323; assert_in_epsilon(5.1973488, worksheet.outputs_energy_h323, 0.002); end
  def test_outputs_energy_i323; assert_in_epsilon(6.180696, worksheet.outputs_energy_i323, 0.002); end
  def test_outputs_energy_j323; assert_in_epsilon(7.103448, worksheet.outputs_energy_j323, 0.002); end
  def test_outputs_energy_k323; assert_in_epsilon(7.7201532, worksheet.outputs_energy_k323, 0.002); end
  def test_outputs_energy_l323; assert_in_epsilon(8.9287596, worksheet.outputs_energy_l323, 0.002); end
  def test_outputs_energy_m323; assert_in_epsilon(9.433656, worksheet.outputs_energy_m323, 0.002); end
  def test_outputs_energy_n323; assert_in_epsilon(10.5463116, worksheet.outputs_energy_n323, 0.002); end
  def test_outputs_energy_o323; assert_in_epsilon(12.389958, worksheet.outputs_energy_o323, 0.002); end
  def test_outputs_energy_p323; assert_in_epsilon(12.5653572, worksheet.outputs_energy_p323, 0.002); end
  def test_outputs_energy_r323; assert_in_epsilon(13.16267496, worksheet.outputs_energy_r323, 0.002); end
  def test_outputs_energy_s323; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_s323, 0.002); end
  def test_outputs_energy_t323; assert_in_epsilon(19.092663576, worksheet.outputs_energy_t323, 0.002); end
  def test_outputs_energy_u323; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_u323, 0.002); end
  def test_outputs_energy_v323; assert_in_epsilon(20.429285724, worksheet.outputs_energy_v323, 0.002); end
  def test_outputs_energy_w323; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_w323, 0.002); end
  def test_outputs_energy_x323; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_x323, 0.002); end
  def test_outputs_energy_y323; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_y323, 0.002); end
  def test_outputs_energy_z323; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_z323, 0.002); end
  def test_outputs_energy_d324; assert_equal("Geothermal", worksheet.outputs_energy_d324); end
  def test_outputs_energy_h324; assert_in_delta(0.0288324, worksheet.outputs_energy_h324, 0.002); end
  def test_outputs_energy_i324; assert_in_delta(0.0491184, worksheet.outputs_energy_i324, 0.002); end
  def test_outputs_energy_j324; assert_in_delta(0.0825156, worksheet.outputs_energy_j324, 0.002); end
  def test_outputs_energy_k324; assert_in_delta(0.1309248, worksheet.outputs_energy_k324, 0.002); end
  def test_outputs_energy_l324; assert_in_delta(0.143226, worksheet.outputs_energy_l324, 0.002); end
  def test_outputs_energy_m324; assert_in_delta(0.1867716, worksheet.outputs_energy_m324, 0.002); end
  def test_outputs_energy_n324; assert_in_delta(0.2097468, worksheet.outputs_energy_n324, 0.002); end
  def test_outputs_energy_o324; assert_in_delta(0.2452896, worksheet.outputs_energy_o324, 0.002); end
  def test_outputs_energy_p324; assert_in_delta(0.2491632, worksheet.outputs_energy_p324, 0.002); end
  def test_outputs_energy_r324; assert_in_delta(0.26331345864, worksheet.outputs_energy_r324, 0.002); end
  def test_outputs_energy_s324; assert_in_delta(0.334037196, worksheet.outputs_energy_s324, 0.002); end
  def test_outputs_energy_t324; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_t324, 0.002); end
  def test_outputs_energy_u324; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_u324, 0.002); end
  def test_outputs_energy_v324; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_v324, 0.002); end
  def test_outputs_energy_w324; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_w324, 0.002); end
  def test_outputs_energy_x324; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_x324, 0.002); end
  def test_outputs_energy_y324; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_y324, 0.002); end
  def test_outputs_energy_z324; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_z324, 0.002); end
  def test_outputs_energy_d325; assert_equal("Total", worksheet.outputs_energy_d325); end
  def test_outputs_energy_h325; assert_in_epsilon(23.4102456, worksheet.outputs_energy_h325, 0.002); end
  def test_outputs_energy_i325; assert_in_epsilon(29.815491599999998, worksheet.outputs_energy_i325, 0.002); end
  def test_outputs_energy_j325; assert_in_epsilon(35.2297188, worksheet.outputs_energy_j325, 0.002); end
  def test_outputs_energy_k325; assert_in_epsilon(42.545962800000005, worksheet.outputs_energy_k325, 0.002); end
  def test_outputs_energy_l325; assert_in_epsilon(47.631762, worksheet.outputs_energy_l325, 0.002); end
  def test_outputs_energy_m325; assert_in_epsilon(55.475226000000006, worksheet.outputs_energy_m325, 0.002); end
  def test_outputs_energy_n325; assert_in_epsilon(65.6970696, worksheet.outputs_energy_n325, 0.002); end
  def test_outputs_energy_o325; assert_in_epsilon(77.1697044, worksheet.outputs_energy_o325, 0.002); end
  def test_outputs_energy_p325; assert_in_epsilon(79.6475304, worksheet.outputs_energy_p325, 0.002); end
  def test_outputs_energy_r325; assert_in_epsilon(81.41992152250594, worksheet.outputs_energy_r325, 0.002); end
  def test_outputs_energy_s325; assert_in_epsilon(89.67551527133843, worksheet.outputs_energy_s325, 0.002); end
  def test_outputs_energy_t325; assert_in_epsilon(99.61415659491942, worksheet.outputs_energy_t325, 0.002); end
  def test_outputs_energy_u325; assert_in_epsilon(110.41527217706337, worksheet.outputs_energy_u325, 0.002); end
  def test_outputs_energy_v325; assert_in_epsilon(121.1183067354969, worksheet.outputs_energy_v325, 0.002); end
  def test_outputs_energy_w325; assert_in_epsilon(131.42020135722876, worksheet.outputs_energy_w325, 0.002); end
  def test_outputs_energy_x325; assert_in_epsilon(141.38383449598444, worksheet.outputs_energy_x325, 0.002); end
  def test_outputs_energy_y325; assert_in_epsilon(150.51656190545444, worksheet.outputs_energy_y325, 0.002); end
  def test_outputs_energy_z325; assert_in_epsilon(159.38414554145757, worksheet.outputs_energy_z325, 0.002); end
  def test_outputs_energy_d326; assert_equal("Demand for electricity to grid", worksheet.outputs_energy_d326); end
  def test_outputs_energy_f326; assert_equal("Net balance", worksheet.outputs_energy_f326); end
  def test_outputs_energy_g326; assert_equal("G.E.02", worksheet.outputs_energy_g326); end
  def test_outputs_energy_r326; assert_in_epsilon(81.41992152250594, worksheet.outputs_energy_r326, 0.002); end
  def test_outputs_energy_s326; assert_in_epsilon(89.67551527133844, worksheet.outputs_energy_s326, 0.002); end
  def test_outputs_energy_t326; assert_in_epsilon(99.61415659491942, worksheet.outputs_energy_t326, 0.002); end
  def test_outputs_energy_u326; assert_in_epsilon(110.41527217706337, worksheet.outputs_energy_u326, 0.002); end
  def test_outputs_energy_v326; assert_in_epsilon(121.1183067354969, worksheet.outputs_energy_v326, 0.002); end
  def test_outputs_energy_w326; assert_in_epsilon(131.42020135722876, worksheet.outputs_energy_w326, 0.002); end
  def test_outputs_energy_x326; assert_in_epsilon(141.38383449598444, worksheet.outputs_energy_x326, 0.002); end
  def test_outputs_energy_y326; assert_in_epsilon(150.5165619054544, worksheet.outputs_energy_y326, 0.002); end
  def test_outputs_energy_z326; assert_in_epsilon(159.38414554145757, worksheet.outputs_energy_z326, 0.002); end
  def test_outputs_energy_d221; assert_in_epsilon(193.88275276125742, worksheet.outputs_energy_d221, 0.002); end
  def test_outputs_energy_d222; assert_in_epsilon(187.29999999999998, worksheet.outputs_energy_d222, 0.002); end
  def test_outputs_energy_d223; assert_in_epsilon(191.07196261682242, worksheet.outputs_energy_d223, 0.002); end
  def test_outputs_energy_d252; assert_in_epsilon(511000.0, worksheet.outputs_energy_d252, 0.002); end
  def test_outputs_energy_d253; assert_in_epsilon(1300.0, worksheet.outputs_energy_d253, 0.002); end
  def test_outputs_energy_d254; assert_in_epsilon(400.0, worksheet.outputs_energy_d254, 0.002); end
  def test_outputs_energy_d255; assert_in_epsilon(346.99999999999994, worksheet.outputs_energy_d255, 0.002); end
  def test_outputs_energy_c335; assert_equal("Description", worksheet.outputs_energy_c335); end
  def test_outputs_energy_d335; assert_equal("Note for lookups", worksheet.outputs_energy_d335); end
  def test_outputs_energy_e335; assert_equal("Note for lookups 2", worksheet.outputs_energy_e335); end
  def test_outputs_energy_f335; assert_equal("Note for lookups 3", worksheet.outputs_energy_f335); end
  def test_outputs_energy_g335; assert_equal("Note for lookups 4", worksheet.outputs_energy_g335); end
  def test_outputs_energy_j335; assert_equal("1985", worksheet.outputs_energy_j335); end
  def test_outputs_energy_k335; assert_equal("1990", worksheet.outputs_energy_k335); end
  def test_outputs_energy_l335; assert_equal("1995", worksheet.outputs_energy_l335); end
  def test_outputs_energy_m335; assert_equal("2000", worksheet.outputs_energy_m335); end
  def test_outputs_energy_n335; assert_equal("2005", worksheet.outputs_energy_n335); end
  def test_outputs_energy_o335; assert_in_epsilon(2010.0, worksheet.outputs_energy_o335, 0.002); end
  def test_outputs_energy_p335; assert_in_epsilon(2011.0, worksheet.outputs_energy_p335, 0.002); end
  def test_outputs_energy_r335; assert_in_epsilon(2011.0, worksheet.outputs_energy_r335, 0.002); end
  def test_outputs_energy_s335; assert_equal("2015", worksheet.outputs_energy_s335); end
  def test_outputs_energy_t335; assert_equal("2020", worksheet.outputs_energy_t335); end
  def test_outputs_energy_u335; assert_equal("2025", worksheet.outputs_energy_u335); end
  def test_outputs_energy_v335; assert_equal("2030", worksheet.outputs_energy_v335); end
  def test_outputs_energy_w335; assert_equal("2035", worksheet.outputs_energy_w335); end
  def test_outputs_energy_x335; assert_equal("2040", worksheet.outputs_energy_x335); end
  def test_outputs_energy_y335; assert_equal("2045", worksheet.outputs_energy_y335); end
  def test_outputs_energy_z335; assert_equal("2050", worksheet.outputs_energy_z335); end
  def test_outputs_energy_c336; assert_equal("Iron and steel", worksheet.outputs_energy_c336); end
  def test_outputs_energy_d336; assert_equal("Steel.Oxygen", worksheet.outputs_energy_d336); end
  def test_outputs_energy_e336; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_e336); end
  def test_outputs_energy_f336; assert_equal("Steel.Electric", worksheet.outputs_energy_f336); end
  def test_outputs_energy_g336; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_g336); end
  def test_outputs_energy_h336; assert_equal("Steel.others", worksheet.outputs_energy_h336); end
  def test_outputs_energy_i336; assert_equal("G.M.02", worksheet.outputs_energy_i336); end
  def test_outputs_energy_r336; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r336, 0.002); end
  def test_outputs_energy_s336; assert_in_epsilon(32.716566844923456, worksheet.outputs_energy_s336, 0.002); end
  def test_outputs_energy_t336; assert_in_epsilon(33.53372003321352, worksheet.outputs_energy_t336, 0.002); end
  def test_outputs_energy_u336; assert_in_epsilon(35.84268538923547, worksheet.outputs_energy_u336, 0.002); end
  def test_outputs_energy_v336; assert_in_epsilon(38.1053101072573, worksheet.outputs_energy_v336, 0.002); end
  def test_outputs_energy_w336; assert_in_epsilon(40.15737723245193, worksheet.outputs_energy_w336, 0.002); end
  def test_outputs_energy_x336; assert_in_epsilon(42.37147442456698, worksheet.outputs_energy_x336, 0.002); end
  def test_outputs_energy_y336; assert_in_epsilon(44.756408614135395, worksheet.outputs_energy_y336, 0.002); end
  def test_outputs_energy_z336; assert_in_epsilon(46.931364134966074, worksheet.outputs_energy_z336, 0.002); end
  def test_outputs_energy_c337; assert_equal("Aluminium", worksheet.outputs_energy_c337); end
  def test_outputs_energy_d337; assert_equal("Aluminium.Alumina", worksheet.outputs_energy_d337); end
  def test_outputs_energy_e337; assert_equal("Aluminium.Primary", worksheet.outputs_energy_e337); end
  def test_outputs_energy_f337; assert_equal("Aluminium.Secondary", worksheet.outputs_energy_f337); end
  def test_outputs_energy_i337; assert_equal("G.M.02", worksheet.outputs_energy_i337); end
  def test_outputs_energy_r337; assert_in_epsilon(4.391030188713756, worksheet.outputs_energy_r337, 0.002); end
  def test_outputs_energy_s337; assert_in_epsilon(4.878123589310811, worksheet.outputs_energy_s337, 0.002); end
  def test_outputs_energy_t337; assert_in_epsilon(5.3222774870423795, worksheet.outputs_energy_t337, 0.002); end
  def test_outputs_energy_u337; assert_in_epsilon(6.071268641057966, worksheet.outputs_energy_u337, 0.002); end
  def test_outputs_energy_v337; assert_in_epsilon(6.857832458375662, worksheet.outputs_energy_v337, 0.002); end
  def test_outputs_energy_w337; assert_in_epsilon(7.648933467468524, worksheet.outputs_energy_w337, 0.002); end
  def test_outputs_energy_x337; assert_in_epsilon(8.524845088091022, worksheet.outputs_energy_x337, 0.002); end
  def test_outputs_energy_y337; assert_in_epsilon(9.45714920070927, worksheet.outputs_energy_y337, 0.002); end
  def test_outputs_energy_z337; assert_in_epsilon(10.488137206083064, worksheet.outputs_energy_z337, 0.002); end
  def test_outputs_energy_c338; assert_equal("Chemicals", worksheet.outputs_energy_c338); end
  def test_outputs_energy_d338; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_energy_d338); end
  def test_outputs_energy_e338; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_energy_e338); end
  def test_outputs_energy_f338; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_energy_f338); end
  def test_outputs_energy_g338; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_energy_g338); end
  def test_outputs_energy_i338; assert_equal("G.M.02", worksheet.outputs_energy_i338); end
  def test_outputs_energy_r338; assert_in_epsilon(39.80890584655504, worksheet.outputs_energy_r338, 0.002); end
  def test_outputs_energy_s338; assert_in_epsilon(42.38480212396862, worksheet.outputs_energy_s338, 0.002); end
  def test_outputs_energy_t338; assert_in_epsilon(45.13673018585989, worksheet.outputs_energy_t338, 0.002); end
  def test_outputs_energy_u338; assert_in_epsilon(50.369901662585086, worksheet.outputs_energy_u338, 0.002); end
  def test_outputs_energy_v338; assert_in_epsilon(55.87799541993252, worksheet.outputs_energy_v338, 0.002); end
  def test_outputs_energy_w338; assert_in_epsilon(61.40592931757229, worksheet.outputs_energy_w338, 0.002); end
  def test_outputs_energy_x338; assert_in_epsilon(67.54488956279292, worksheet.outputs_energy_x338, 0.002); end
  def test_outputs_energy_y338; assert_in_epsilon(73.60488821054179, worksheet.outputs_energy_y338, 0.002); end
  def test_outputs_energy_z338; assert_in_epsilon(80.14570026537527, worksheet.outputs_energy_z338, 0.002); end
  def test_outputs_energy_c339; assert_equal("Pulp and paper", worksheet.outputs_energy_c339); end
  def test_outputs_energy_d339; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_d339); end
  def test_outputs_energy_e339; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_e339); end
  def test_outputs_energy_f339; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_f339); end
  def test_outputs_energy_i339; assert_equal("G.M.02", worksheet.outputs_energy_i339); end
  def test_outputs_energy_r339; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r339, 0.002); end
  def test_outputs_energy_s339; assert_in_epsilon(6.86407872982948, worksheet.outputs_energy_s339, 0.002); end
  def test_outputs_energy_t339; assert_in_epsilon(7.0980066176315235, worksheet.outputs_energy_t339, 0.002); end
  def test_outputs_energy_u339; assert_in_epsilon(7.60453240572251, worksheet.outputs_energy_u339, 0.002); end
  def test_outputs_energy_v339; assert_in_epsilon(8.09576251608847, worksheet.outputs_energy_v339, 0.002); end
  def test_outputs_energy_w339; assert_in_epsilon(8.546727469322711, worksheet.outputs_energy_w339, 0.002); end
  def test_outputs_energy_x339; assert_in_epsilon(9.022220618931428, worksheet.outputs_energy_x339, 0.002); end
  def test_outputs_energy_y339; assert_in_epsilon(9.4510591936637, worksheet.outputs_energy_y339, 0.002); end
  def test_outputs_energy_z339; assert_in_epsilon(9.901509243652223, worksheet.outputs_energy_z339, 0.002); end
  def test_outputs_energy_c340; assert_equal("Cement", worksheet.outputs_energy_c340); end
  def test_outputs_energy_d340; assert_equal("Cement", worksheet.outputs_energy_d340); end
  def test_outputs_energy_i340; assert_equal("G.M.02", worksheet.outputs_energy_i340); end
  def test_outputs_energy_r340; assert_in_epsilon(10.600379598268718, worksheet.outputs_energy_r340, 0.002); end
  def test_outputs_energy_s340; assert_in_epsilon(11.096588321633043, worksheet.outputs_energy_s340, 0.002); end
  def test_outputs_energy_t340; assert_in_epsilon(11.177155643243694, worksheet.outputs_energy_t340, 0.002); end
  def test_outputs_energy_u340; assert_in_epsilon(11.640170003708898, worksheet.outputs_energy_u340, 0.002); end
  def test_outputs_energy_v340; assert_in_epsilon(12.034344341859185, worksheet.outputs_energy_v340, 0.002); end
  def test_outputs_energy_w340; assert_in_epsilon(12.405278300015958, worksheet.outputs_energy_w340, 0.002); end
  def test_outputs_energy_x340; assert_in_epsilon(12.703243896900188, worksheet.outputs_energy_x340, 0.002); end
  def test_outputs_energy_y340; assert_in_epsilon(13.006331382797022, worksheet.outputs_energy_y340, 0.002); end
  def test_outputs_energy_z340; assert_in_epsilon(13.321590927545573, worksheet.outputs_energy_z340, 0.002); end
  def test_outputs_energy_c341; assert_equal("Other", worksheet.outputs_energy_c341); end
  def test_outputs_energy_d341; assert_equal("Other industries", worksheet.outputs_energy_d341); end
  def test_outputs_energy_i341; assert_equal("G.M.02", worksheet.outputs_energy_i341); end
  def test_outputs_energy_r341; assert_in_epsilon(44.35126743259007, worksheet.outputs_energy_r341, 0.002); end
  def test_outputs_energy_s341; assert_in_epsilon(47.52653874409059, worksheet.outputs_energy_s341, 0.002); end
  def test_outputs_energy_t341; assert_in_epsilon(52.88670964686291, worksheet.outputs_energy_t341, 0.002); end
  def test_outputs_energy_u341; assert_in_epsilon(58.152160533899085, worksheet.outputs_energy_u341, 0.002); end
  def test_outputs_energy_v341; assert_in_epsilon(63.27125960428643, worksheet.outputs_energy_v341, 0.002); end
  def test_outputs_energy_w341; assert_in_epsilon(68.21159769576983, worksheet.outputs_energy_w341, 0.002); end
  def test_outputs_energy_x341; assert_in_epsilon(72.9275119901186, worksheet.outputs_energy_x341, 0.002); end
  def test_outputs_energy_y341; assert_in_epsilon(77.36016070715364, worksheet.outputs_energy_y341, 0.002); end
  def test_outputs_energy_z341; assert_in_epsilon(81.45614761489186, worksheet.outputs_energy_z341, 0.002); end
  def test_outputs_energy_c342; assert_equal("Timber", worksheet.outputs_energy_c342); end
  def test_outputs_energy_d342; assert_equal("Timber", worksheet.outputs_energy_d342); end
  def test_outputs_energy_i342; assert_equal("G.M.02", worksheet.outputs_energy_i342); end
  def test_outputs_energy_r342; assert_in_epsilon(6.142647935033601, worksheet.outputs_energy_r342, 0.002); end
  def test_outputs_energy_s342; assert_in_epsilon(6.5190559935171475, worksheet.outputs_energy_s342, 0.002); end
  def test_outputs_energy_t342; assert_in_epsilon(7.197233604234356, worksheet.outputs_energy_t342, 0.002); end
  def test_outputs_energy_u342; assert_in_epsilon(7.606312950048782, worksheet.outputs_energy_u342, 0.002); end
  def test_outputs_energy_v342; assert_in_epsilon(7.99038470066635, worksheet.outputs_energy_v342, 0.002); end
  def test_outputs_energy_w342; assert_in_epsilon(8.355189359044182, worksheet.outputs_energy_w342, 0.002); end
  def test_outputs_energy_x342; assert_in_epsilon(8.69644794954044, worksheet.outputs_energy_x342, 0.002); end
  def test_outputs_energy_y342; assert_in_epsilon(9.01956354467513, worksheet.outputs_energy_y342, 0.002); end
  def test_outputs_energy_z342; assert_in_epsilon(9.304538885248967, worksheet.outputs_energy_z342, 0.002); end
  def test_outputs_energy_c343; assert_equal("Total", worksheet.outputs_energy_c343); end
  def test_outputs_energy_j343; assert_in_epsilon(89.51563572, worksheet.outputs_energy_j343, 0.002); end
  def test_outputs_energy_k343; assert_in_epsilon(96.13700115, worksheet.outputs_energy_k343, 0.002); end
  def test_outputs_energy_l343; assert_in_epsilon(97.93670919, worksheet.outputs_energy_l343, 0.002); end
  def test_outputs_energy_m343; assert_in_epsilon(105.12064196, worksheet.outputs_energy_m343, 0.002); end
  def test_outputs_energy_n343; assert_in_epsilon(120.32151098, worksheet.outputs_energy_n343, 0.002); end
  def test_outputs_energy_o343; assert_in_epsilon(137.98756298, worksheet.outputs_energy_o343, 0.002); end
  def test_outputs_energy_p343; assert_in_epsilon(143.27425753, worksheet.outputs_energy_p343, 0.002); end
  def test_outputs_energy_r343; assert_in_epsilon(143.3476207635151, worksheet.outputs_energy_r343, 0.002); end
  def test_outputs_energy_s343; assert_in_epsilon(151.98575434727314, worksheet.outputs_energy_s343, 0.002); end
  def test_outputs_energy_t343; assert_in_epsilon(162.35183321808827, worksheet.outputs_energy_t343, 0.002); end
  def test_outputs_energy_u343; assert_in_epsilon(177.2870315862578, worksheet.outputs_energy_u343, 0.002); end
  def test_outputs_energy_v343; assert_in_epsilon(192.2328891484659, worksheet.outputs_energy_v343, 0.002); end
  def test_outputs_energy_w343; assert_in_epsilon(206.73103284164543, worksheet.outputs_energy_w343, 0.002); end
  def test_outputs_energy_x343; assert_in_epsilon(221.7906335309416, worksheet.outputs_energy_x343, 0.002); end
  def test_outputs_energy_y343; assert_in_epsilon(236.65556085367592, worksheet.outputs_energy_y343, 0.002); end
  def test_outputs_energy_z343; assert_in_epsilon(251.54898827776304, worksheet.outputs_energy_z343, 0.002); end
  def test_outputs_energy_c365; assert_equal("Description", worksheet.outputs_energy_c365); end
  def test_outputs_energy_p365; assert_in_epsilon(2011.0, worksheet.outputs_energy_p365, 0.002); end
  def test_outputs_energy_r365; assert_in_epsilon(2011.0, worksheet.outputs_energy_r365, 0.002); end
  def test_outputs_energy_s365; assert_equal("2015", worksheet.outputs_energy_s365); end
  def test_outputs_energy_t365; assert_equal("2020", worksheet.outputs_energy_t365); end
  def test_outputs_energy_u365; assert_equal("2025", worksheet.outputs_energy_u365); end
  def test_outputs_energy_v365; assert_equal("2030", worksheet.outputs_energy_v365); end
  def test_outputs_energy_w365; assert_equal("2035", worksheet.outputs_energy_w365); end
  def test_outputs_energy_x365; assert_equal("2040", worksheet.outputs_energy_x365); end
  def test_outputs_energy_y365; assert_equal("2045", worksheet.outputs_energy_y365); end
  def test_outputs_energy_z365; assert_equal("2050", worksheet.outputs_energy_z365); end
  def test_outputs_energy_c366; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c366); end
  def test_outputs_energy_d366; assert_equal("G.C.01", worksheet.outputs_energy_d366); end
  def test_outputs_energy_e366; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_e366); end
  def test_outputs_energy_f366; assert_equal("G.FF.01", worksheet.outputs_energy_f366); end
  def test_outputs_energy_g366; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_g366); end
  def test_outputs_energy_k366; assert_equal("Global manufacturing", worksheet.outputs_energy_k366); end
  def test_outputs_energy_p366; assert_in_epsilon(50.46, worksheet.outputs_energy_p366, 0.002); end
  def test_outputs_energy_r366; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_r366, 0.002); end
  def test_outputs_energy_s366; assert_in_epsilon(53.04626302356168, worksheet.outputs_energy_s366, 0.002); end
  def test_outputs_energy_t366; assert_in_epsilon(55.57939160091274, worksheet.outputs_energy_t366, 0.002); end
  def test_outputs_energy_u366; assert_in_epsilon(59.642418224219874, worksheet.outputs_energy_u366, 0.002); end
  def test_outputs_energy_v366; assert_in_epsilon(63.498183838727535, worksheet.outputs_energy_v366, 0.002); end
  def test_outputs_energy_w366; assert_in_epsilon(67.1157007843216, worksheet.outputs_energy_w366, 0.002); end
  def test_outputs_energy_x366; assert_in_epsilon(70.78310124285191, worksheet.outputs_energy_x366, 0.002); end
  def test_outputs_energy_y366; assert_in_epsilon(74.45888304870635, worksheet.outputs_energy_y366, 0.002); end
  def test_outputs_energy_z366; assert_in_epsilon(77.92345060059145, worksheet.outputs_energy_z366, 0.002); end
  def test_outputs_energy_c367; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c367); end
  def test_outputs_energy_d367; assert_equal("G.C.02", worksheet.outputs_energy_d367); end
  def test_outputs_energy_e367; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_e367); end
  def test_outputs_energy_f367; assert_equal("G.FF.02", worksheet.outputs_energy_f367); end
  def test_outputs_energy_g367; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_g367); end
  def test_outputs_energy_k367; assert_equal("Global manufacturing", worksheet.outputs_energy_k367); end
  def test_outputs_energy_p367; assert_in_epsilon(30.59, worksheet.outputs_energy_p367, 0.002); end
  def test_outputs_energy_r367; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_r367, 0.002); end
  def test_outputs_energy_s367; assert_in_epsilon(33.019826612477104, worksheet.outputs_energy_s367, 0.002); end
  def test_outputs_energy_t367; assert_in_epsilon(35.51885350577898, worksheet.outputs_energy_t367, 0.002); end
  def test_outputs_energy_u367; assert_in_epsilon(39.539740671094464, worksheet.outputs_energy_u367, 0.002); end
  def test_outputs_energy_v367; assert_in_epsilon(43.6707013362991, worksheet.outputs_energy_v367, 0.002); end
  def test_outputs_energy_w367; assert_in_epsilon(47.73039182544069, worksheet.outputs_energy_w367, 0.002); end
  def test_outputs_energy_x367; assert_in_epsilon(52.11084480419961, worksheet.outputs_energy_x367, 0.002); end
  def test_outputs_energy_y367; assert_in_epsilon(56.47922776973796, worksheet.outputs_energy_y367, 0.002); end
  def test_outputs_energy_z367; assert_in_epsilon(61.065619959933, worksheet.outputs_energy_z367, 0.002); end
  def test_outputs_energy_c368; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c368); end
  def test_outputs_energy_d368; assert_equal("G.C.03", worksheet.outputs_energy_d368); end
  def test_outputs_energy_e368; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_e368); end
  def test_outputs_energy_f368; assert_equal("G.FF.03", worksheet.outputs_energy_f368); end
  def test_outputs_energy_g368; assert_equal("Global Natural gas", worksheet.outputs_energy_g368); end
  def test_outputs_energy_k368; assert_equal("Global manufacturing", worksheet.outputs_energy_k368); end
  def test_outputs_energy_p368; assert_in_epsilon(27.89, worksheet.outputs_energy_p368, 0.002); end
  def test_outputs_energy_r368; assert_in_epsilon(28.315031514137644, worksheet.outputs_energy_r368, 0.002); end
  def test_outputs_energy_s368; assert_in_epsilon(30.25015202976967, worksheet.outputs_energy_s368, 0.002); end
  def test_outputs_energy_t368; assert_in_epsilon(32.742080665350144, worksheet.outputs_energy_t368, 0.002); end
  def test_outputs_energy_u368; assert_in_epsilon(35.91811195585025, worksheet.outputs_energy_u368, 0.002); end
  def test_outputs_energy_v368; assert_in_epsilon(39.13427030638985, worksheet.outputs_energy_v368, 0.002); end
  def test_outputs_energy_w368; assert_in_epsilon(42.33351884111195, worksheet.outputs_energy_w368, 0.002); end
  def test_outputs_energy_x368; assert_in_epsilon(45.62585794451883, worksheet.outputs_energy_x368, 0.002); end
  def test_outputs_energy_y368; assert_in_epsilon(48.784906042133365, worksheet.outputs_energy_y368, 0.002); end
  def test_outputs_energy_z368; assert_in_epsilon(51.941745006385894, worksheet.outputs_energy_z368, 0.002); end
  def test_outputs_energy_c369; assert_equal("Electricity grid", worksheet.outputs_energy_c369); end
  def test_outputs_energy_d369; assert_equal("G.E.01", worksheet.outputs_energy_d369); end
  def test_outputs_energy_e369; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_e369); end
  def test_outputs_energy_k369; assert_equal("Global manufacturing", worksheet.outputs_energy_k369); end
  def test_outputs_energy_p369; assert_in_epsilon(28.68, worksheet.outputs_energy_p369, 0.002); end
  def test_outputs_energy_r369; assert_in_epsilon(28.203628093079455, worksheet.outputs_energy_r369, 0.002); end
  def test_outputs_energy_s369; assert_in_epsilon(30.03162934440616, worksheet.outputs_energy_s369, 0.002); end
  def test_outputs_energy_t369; assert_in_epsilon(32.40242757691013, worksheet.outputs_energy_t369, 0.002); end
  def test_outputs_energy_u369; assert_in_epsilon(35.432201051447635, worksheet.outputs_energy_u369, 0.002); end
  def test_outputs_energy_v369; assert_in_epsilon(38.42867416731621, worksheet.outputs_energy_v369, 0.002); end
  def test_outputs_energy_w369; assert_in_epsilon(41.31125130709893, worksheet.outputs_energy_w369, 0.002); end
  def test_outputs_energy_x369; assert_in_epsilon(44.252846962380154, worksheet.outputs_energy_x369, 0.002); end
  def test_outputs_energy_y369; assert_in_epsilon(47.137142528438886, worksheet.outputs_energy_y369, 0.002); end
  def test_outputs_energy_z369; assert_in_epsilon(50.02265864193405, worksheet.outputs_energy_z369, 0.002); end
  def test_outputs_energy_c370; assert_equal("Heat network", worksheet.outputs_energy_c370); end
  def test_outputs_energy_d370; assert_equal("G.H.01", worksheet.outputs_energy_d370); end
  def test_outputs_energy_e370; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_e370); end
  def test_outputs_energy_k370; assert_equal("Global manufacturing", worksheet.outputs_energy_k370); end
  def test_outputs_energy_p370; assert_in_epsilon(5.31, worksheet.outputs_energy_p370, 0.002); end
  def test_outputs_energy_r370; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_r370, 0.002); end
  def test_outputs_energy_s370; assert_in_epsilon(5.637883337058537, worksheet.outputs_energy_s370, 0.002); end
  def test_outputs_energy_t370; assert_in_epsilon(6.109079869136266, worksheet.outputs_energy_t370, 0.002); end
  def test_outputs_energy_u370; assert_in_epsilon(6.754559683645565, worksheet.outputs_energy_u370, 0.002); end
  def test_outputs_energy_v370; assert_in_epsilon(7.40386792401911, worksheet.outputs_energy_v370, 0.002); end
  def test_outputs_energy_w370; assert_in_epsilon(8.035390663440873, worksheet.outputs_energy_w370, 0.002); end
  def test_outputs_energy_x370; assert_in_epsilon(8.6939962679787, worksheet.outputs_energy_x370, 0.002); end
  def test_outputs_energy_y370; assert_in_epsilon(9.339279733447285, worksheet.outputs_energy_y370, 0.002); end
  def test_outputs_energy_z370; assert_in_epsilon(9.997894022601116, worksheet.outputs_energy_z370, 0.002); end
  def test_outputs_energy_d214; assert_in_epsilon(242607775716314.97, worksheet.outputs_energy_d214, 0.002); end
  def test_outputs_energy_d215; assert_in_epsilon(265349795354999.97, worksheet.outputs_energy_d215, 0.002); end
  def test_outputs_energy_d216; assert_in_epsilon(234824234714999.97, worksheet.outputs_energy_d216, 0.002); end
  def test_outputs_energy_d245; assert_in_epsilon(636000000000000.0, worksheet.outputs_energy_d245, 0.002); end
  def test_outputs_energy_d246; assert_in_epsilon(477000000000000.0, worksheet.outputs_energy_d246, 0.002); end
  def test_outputs_energy_d247; assert_in_epsilon(365700000000000.0, worksheet.outputs_energy_d247, 0.002); end
  def test_outputs_energy_c505; assert_equal("Description", worksheet.outputs_energy_c505); end
  def test_outputs_energy_r505; assert_in_epsilon(2011.0, worksheet.outputs_energy_r505, 0.002); end
  def test_outputs_energy_s505; assert_equal("2015", worksheet.outputs_energy_s505); end
  def test_outputs_energy_t505; assert_equal("2020", worksheet.outputs_energy_t505); end
  def test_outputs_energy_u505; assert_equal("2025", worksheet.outputs_energy_u505); end
  def test_outputs_energy_v505; assert_equal("2030", worksheet.outputs_energy_v505); end
  def test_outputs_energy_w505; assert_equal("2035", worksheet.outputs_energy_w505); end
  def test_outputs_energy_x505; assert_equal("2040", worksheet.outputs_energy_x505); end
  def test_outputs_energy_y505; assert_equal("2045", worksheet.outputs_energy_y505); end
  def test_outputs_energy_z505; assert_equal("2050", worksheet.outputs_energy_z505); end
  def test_outputs_energy_c506; assert_equal("Pulp & paper.Pulp", worksheet.outputs_energy_c506); end
  def test_outputs_energy_i506; assert_equal("G.M.02", worksheet.outputs_energy_i506); end
  def test_outputs_energy_r506; assert_in_epsilon(3.020565131792657, worksheet.outputs_energy_r506, 0.002); end
  def test_outputs_energy_s506; assert_in_epsilon(3.129066746045473, worksheet.outputs_energy_s506, 0.002); end
  def test_outputs_energy_t506; assert_in_epsilon(3.235719472856197, worksheet.outputs_energy_t506, 0.002); end
  def test_outputs_energy_u506; assert_in_epsilon(3.4666409997064696, worksheet.outputs_energy_u506, 0.002); end
  def test_outputs_energy_v506; assert_in_epsilon(3.690591741051307, worksheet.outputs_energy_v506, 0.002); end
  def test_outputs_energy_w506; assert_in_epsilon(3.896188792041827, worksheet.outputs_energy_w506, 0.002); end
  def test_outputs_energy_x506; assert_in_epsilon(4.112969327852648, worksheet.outputs_energy_x506, 0.002); end
  def test_outputs_energy_y506; assert_in_epsilon(4.308483187348119, worksheet.outputs_energy_y506, 0.002); end
  def test_outputs_energy_z506; assert_in_epsilon(4.513850880616621, worksheet.outputs_energy_z506, 0.002); end
  def test_outputs_energy_c507; assert_equal("Pulp & paper.Virgin", worksheet.outputs_energy_c507); end
  def test_outputs_energy_i507; assert_equal("G.M.02", worksheet.outputs_energy_i507); end
  def test_outputs_energy_r507; assert_in_epsilon(3.059951650403277, worksheet.outputs_energy_r507, 0.002); end
  def test_outputs_energy_s507; assert_in_epsilon(3.1698859816764147, worksheet.outputs_energy_s507, 0.002); end
  def test_outputs_energy_t507; assert_in_epsilon(3.2779505884921125, worksheet.outputs_energy_t507, 0.002); end
  def test_outputs_energy_u507; assert_in_epsilon(3.511908039969869, worksheet.outputs_energy_u507, 0.002); end
  def test_outputs_energy_v507; assert_in_epsilon(3.7388065735114466, worksheet.outputs_energy_v507, 0.002); end
  def test_outputs_energy_w507; assert_in_epsilon(3.9471143695558464, worksheet.outputs_energy_w507, 0.002); end
  def test_outputs_energy_x507; assert_in_epsilon(4.166754509804987, worksheet.outputs_energy_x507, 0.002); end
  def test_outputs_energy_y507; assert_in_epsilon(4.364852490115158, worksheet.outputs_energy_y507, 0.002); end
  def test_outputs_energy_z507; assert_in_epsilon(4.572935772504205, worksheet.outputs_energy_z507, 0.002); end
  def test_outputs_energy_c508; assert_equal("Pulp & paper.Recycled", worksheet.outputs_energy_c508); end
  def test_outputs_energy_i508; assert_equal("G.M.02", worksheet.outputs_energy_i508); end
  def test_outputs_energy_r508; assert_in_delta(0.5308491227739531, worksheet.outputs_energy_r508, 0.002); end
  def test_outputs_energy_s508; assert_in_delta(0.5651260021075912, worksheet.outputs_energy_s508, 0.002); end
  def test_outputs_energy_t508; assert_in_delta(0.5843365562832147, worksheet.outputs_energy_t508, 0.002); end
  def test_outputs_energy_u508; assert_in_delta(0.6259833660461711, worksheet.outputs_energy_u508, 0.002); end
  def test_outputs_energy_v508; assert_in_delta(0.666364201525717, worksheet.outputs_energy_v508, 0.002); end
  def test_outputs_energy_w508; assert_in_delta(0.7034243077250377, worksheet.outputs_energy_w508, 0.002); end
  def test_outputs_energy_x508; assert_in_delta(0.742496781273793, worksheet.outputs_energy_x508, 0.002); end
  def test_outputs_energy_y508; assert_in_delta(0.7777235162004206, worksheet.outputs_energy_y508, 0.002); end
  def test_outputs_energy_z508; assert_in_delta(0.8147225905313972, worksheet.outputs_energy_z508, 0.002); end
  def test_outputs_energy_c509; assert_equal("Total", worksheet.outputs_energy_c509); end
  def test_outputs_energy_r509; assert_in_epsilon(6.611365904969887, worksheet.outputs_energy_r509, 0.002); end
  def test_outputs_energy_s509; assert_in_epsilon(6.86407872982948, worksheet.outputs_energy_s509, 0.002); end
  def test_outputs_energy_t509; assert_in_epsilon(7.0980066176315235, worksheet.outputs_energy_t509, 0.002); end
  def test_outputs_energy_u509; assert_in_epsilon(7.60453240572251, worksheet.outputs_energy_u509, 0.002); end
  def test_outputs_energy_v509; assert_in_epsilon(8.09576251608847, worksheet.outputs_energy_v509, 0.002); end
  def test_outputs_energy_w509; assert_in_epsilon(8.546727469322711, worksheet.outputs_energy_w509, 0.002); end
  def test_outputs_energy_x509; assert_in_epsilon(9.022220618931428, worksheet.outputs_energy_x509, 0.002); end
  def test_outputs_energy_y509; assert_in_epsilon(9.4510591936637, worksheet.outputs_energy_y509, 0.002); end
  def test_outputs_energy_z509; assert_in_epsilon(9.901509243652223, worksheet.outputs_energy_z509, 0.002); end
  def test_outputs_energy_c409; assert_equal("Description", worksheet.outputs_energy_c409); end
  def test_outputs_energy_r409; assert_in_epsilon(2011.0, worksheet.outputs_energy_r409, 0.002); end
  def test_outputs_energy_s409; assert_equal("2015", worksheet.outputs_energy_s409); end
  def test_outputs_energy_t409; assert_equal("2020", worksheet.outputs_energy_t409); end
  def test_outputs_energy_u409; assert_equal("2025", worksheet.outputs_energy_u409); end
  def test_outputs_energy_v409; assert_equal("2030", worksheet.outputs_energy_v409); end
  def test_outputs_energy_w409; assert_equal("2035", worksheet.outputs_energy_w409); end
  def test_outputs_energy_x409; assert_equal("2040", worksheet.outputs_energy_x409); end
  def test_outputs_energy_y409; assert_equal("2045", worksheet.outputs_energy_y409); end
  def test_outputs_energy_z409; assert_equal("2050", worksheet.outputs_energy_z409); end
  def test_outputs_energy_c410; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c410); end
  def test_outputs_energy_e410; assert_equal("G.C.01", worksheet.outputs_energy_e410); end
  def test_outputs_energy_f410; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f410); end
  def test_outputs_energy_k410; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k410); end
  def test_outputs_energy_r410; assert_in_epsilon(98.64877026723967, worksheet.outputs_energy_r410, 0.002); end
  def test_outputs_energy_s410; assert_in_epsilon(96.19709167517517, worksheet.outputs_energy_s410, 0.002); end
  def test_outputs_energy_t410; assert_in_epsilon(100.56317981444982, worksheet.outputs_energy_t410, 0.002); end
  def test_outputs_energy_u410; assert_in_epsilon(112.36383452280762, worksheet.outputs_energy_u410, 0.002); end
  def test_outputs_energy_v410; assert_in_epsilon(119.79601357389538, worksheet.outputs_energy_v410, 0.002); end
  def test_outputs_energy_w410; assert_in_epsilon(124.81836320297413, worksheet.outputs_energy_w410, 0.002); end
  def test_outputs_energy_x410; assert_in_epsilon(125.25283371405291, worksheet.outputs_energy_x410, 0.002); end
  def test_outputs_energy_y410; assert_in_epsilon(115.99438615016619, worksheet.outputs_energy_y410, 0.002); end
  def test_outputs_energy_z410; assert_in_epsilon(109.87398848217443, worksheet.outputs_energy_z410, 0.002); end
  def test_outputs_energy_c411; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c411); end
  def test_outputs_energy_e411; assert_equal("G.C.02", worksheet.outputs_energy_e411); end
  def test_outputs_energy_f411; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f411); end
  def test_outputs_energy_k411; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k411); end
  def test_outputs_energy_r411; assert_in_epsilon(11.450334577208425, worksheet.outputs_energy_r411, 0.002); end
  def test_outputs_energy_s411; assert_in_epsilon(11.526833448345865, worksheet.outputs_energy_s411, 0.002); end
  def test_outputs_energy_t411; assert_in_epsilon(23.121899202453015, worksheet.outputs_energy_t411, 0.002); end
  def test_outputs_energy_u411; assert_in_epsilon(26.469999187506836, worksheet.outputs_energy_u411, 0.002); end
  def test_outputs_energy_v411; assert_in_epsilon(32.93848881069181, worksheet.outputs_energy_v411, 0.002); end
  def test_outputs_energy_w411; assert_in_epsilon(38.03478794652899, worksheet.outputs_energy_w411, 0.002); end
  def test_outputs_energy_x411; assert_in_epsilon(43.780418947755855, worksheet.outputs_energy_x411, 0.002); end
  def test_outputs_energy_y411; assert_in_epsilon(49.78419739503785, worksheet.outputs_energy_y411, 0.002); end
  def test_outputs_energy_z411; assert_in_epsilon(53.687332002118154, worksheet.outputs_energy_z411, 0.002); end
  def test_outputs_energy_c412; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c412); end
  def test_outputs_energy_e412; assert_equal("G.C.03", worksheet.outputs_energy_e412); end
  def test_outputs_energy_f412; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f412); end
  def test_outputs_energy_k412; assert_equal("Global Electricity Generation", worksheet.outputs_energy_k412); end
  def test_outputs_energy_r412; assert_in_epsilon(41.379231585091354, worksheet.outputs_energy_r412, 0.002); end
  def test_outputs_energy_s412; assert_in_epsilon(40.33866173358211, worksheet.outputs_energy_s412, 0.002); end
  def test_outputs_energy_t412; assert_in_epsilon(42.0984997276119, worksheet.outputs_energy_t412, 0.002); end
  def test_outputs_energy_u412; assert_in_epsilon(45.719132914623444, worksheet.outputs_energy_u412, 0.002); end
  def test_outputs_energy_v412; assert_in_epsilon(49.571981914731, worksheet.outputs_energy_v412, 0.002); end
  def test_outputs_energy_w412; assert_in_epsilon(53.98007460785138, worksheet.outputs_energy_w412, 0.002); end
  def test_outputs_energy_x412; assert_in_epsilon(59.454602080461754, worksheet.outputs_energy_x412, 0.002); end
  def test_outputs_energy_y412; assert_in_epsilon(64.14829199842416, worksheet.outputs_energy_y412, 0.002); end
  def test_outputs_energy_z412; assert_in_epsilon(70.15511473628759, worksheet.outputs_energy_z412, 0.002); end
  def test_outputs_energy_n208; assert_in_epsilon(667.1135306275993, worksheet.outputs_energy_n208, 0.002); end
  def test_outputs_energy_n209; assert_in_epsilon(582.1135306275993, worksheet.outputs_energy_n209, 0.002); end
  def test_outputs_energy_n221; assert_in_epsilon(62.83201323001094, worksheet.outputs_energy_n221, 0.002); end
  def test_outputs_energy_n222; assert_in_epsilon(56.249260468753505, worksheet.outputs_energy_n222, 0.002); end
  def test_outputs_energy_n223; assert_in_epsilon(60.02122308557594, worksheet.outputs_energy_n223, 0.002); end
  def test_outputs_energy_n214; assert_in_epsilon(13717899896507.156, worksheet.outputs_energy_n214, 0.002); end
  def test_outputs_energy_n215; assert_in_epsilon(36459919535192.16, worksheet.outputs_energy_n215, 0.002); end
  def test_outputs_energy_n216; assert_in_epsilon(5934358895192.156, worksheet.outputs_energy_n216, 0.002); end
  def test_outputs_energy_c463; assert_equal("Description", worksheet.outputs_energy_c463); end
  def test_outputs_energy_r463; assert_in_epsilon(2011.0, worksheet.outputs_energy_r463, 0.002); end
  def test_outputs_energy_s463; assert_equal("2015", worksheet.outputs_energy_s463); end
  def test_outputs_energy_t463; assert_equal("2020", worksheet.outputs_energy_t463); end
  def test_outputs_energy_u463; assert_equal("2025", worksheet.outputs_energy_u463); end
  def test_outputs_energy_v463; assert_equal("2030", worksheet.outputs_energy_v463); end
  def test_outputs_energy_w463; assert_equal("2035", worksheet.outputs_energy_w463); end
  def test_outputs_energy_x463; assert_equal("2040", worksheet.outputs_energy_x463); end
  def test_outputs_energy_y463; assert_equal("2045", worksheet.outputs_energy_y463); end
  def test_outputs_energy_z463; assert_equal("2050", worksheet.outputs_energy_z463); end
  def test_outputs_energy_c464; assert_equal("Steel.Oxygen", worksheet.outputs_energy_c464); end
  def test_outputs_energy_i464; assert_equal("G.M.02", worksheet.outputs_energy_i464); end
  def test_outputs_energy_r464; assert_in_epsilon(21.619770962298666, worksheet.outputs_energy_r464, 0.002); end
  def test_outputs_energy_s464; assert_in_epsilon(22.231406834510235, worksheet.outputs_energy_s464, 0.002); end
  def test_outputs_energy_t464; assert_in_epsilon(22.719154872890595, worksheet.outputs_energy_t464, 0.002); end
  def test_outputs_energy_u464; assert_in_epsilon(24.21015622572607, worksheet.outputs_energy_u464, 0.002); end
  def test_outputs_energy_v464; assert_in_epsilon(25.659249911623196, worksheet.outputs_energy_v464, 0.002); end
  def test_outputs_energy_w464; assert_in_epsilon(26.956243104543304, worksheet.outputs_energy_w464, 0.002); end
  def test_outputs_energy_x464; assert_in_epsilon(28.351541880990744, worksheet.outputs_energy_x464, 0.002); end
  def test_outputs_energy_y464; assert_in_epsilon(29.849719971831124, worksheet.outputs_energy_y464, 0.002); end
  def test_outputs_energy_z464; assert_in_epsilon(31.196242141480163, worksheet.outputs_energy_z464, 0.002); end
  def test_outputs_energy_c465; assert_equal("Steel.OxygenHisarna", worksheet.outputs_energy_c465); end
  def test_outputs_energy_i465; assert_equal("G.M.02", worksheet.outputs_energy_i465); end
  def test_outputs_energy_r465; assert_in_delta(0.0, (worksheet.outputs_energy_r465||0), 0.002); end
  def test_outputs_energy_s465; assert_in_delta(0.005832503682847216, worksheet.outputs_energy_s465, 0.002); end
  def test_outputs_energy_t465; assert_in_delta(0.009261380274670312, worksheet.outputs_energy_t465, 0.002); end
  def test_outputs_energy_u465; assert_in_delta(0.01338775845420499, worksheet.outputs_energy_u465, 0.002); end
  def test_outputs_energy_v465; assert_in_delta(0.017919348011477685, worksheet.outputs_energy_v465, 0.002); end
  def test_outputs_energy_w465; assert_in_delta(0.02274507075144413, worksheet.outputs_energy_w465, 0.002); end
  def test_outputs_energy_x465; assert_in_delta(0.02804643968493689, worksheet.outputs_energy_x465, 0.002); end
  def test_outputs_energy_y465; assert_in_delta(0.033871711317619124, worksheet.outputs_energy_y465, 0.002); end
  def test_outputs_energy_z465; assert_in_delta(0.03994009450317255, worksheet.outputs_energy_z465, 0.002); end
  def test_outputs_energy_c466; assert_equal("Steel.Electric", worksheet.outputs_energy_c466); end
  def test_outputs_energy_i466; assert_equal("G.M.02", worksheet.outputs_energy_i466); end
  def test_outputs_energy_r466; assert_in_epsilon(2.6697592633263763, worksheet.outputs_energy_r466, 0.002); end
  def test_outputs_energy_s466; assert_in_epsilon(2.948551742110607, worksheet.outputs_energy_s466, 0.002); end
  def test_outputs_energy_t466; assert_in_epsilon(3.0263666871624504, worksheet.outputs_energy_t466, 0.002); end
  def test_outputs_energy_u466; assert_in_epsilon(3.2392410036123387, worksheet.outputs_energy_u466, 0.002); end
  def test_outputs_energy_v466; assert_in_epsilon(3.448540468548411, worksheet.outputs_energy_v466, 0.002); end
  def test_outputs_energy_w466; assert_in_epsilon(3.639372816948484, worksheet.outputs_energy_w466, 0.002); end
  def test_outputs_energy_x466; assert_in_epsilon(3.845479644052415, worksheet.outputs_energy_x466, 0.002); end
  def test_outputs_energy_y466; assert_in_epsilon(4.067732052261856, worksheet.outputs_energy_y466, 0.002); end
  def test_outputs_energy_z466; assert_in_epsilon(4.27154482912054, worksheet.outputs_energy_z466, 0.002); end
  def test_outputs_energy_c467; assert_equal("Steel.ElectricDRI", worksheet.outputs_energy_c467); end
  def test_outputs_energy_i467; assert_equal("G.M.02", worksheet.outputs_energy_i467); end
  def test_outputs_energy_r467; assert_in_delta(0.48100793205535164, worksheet.outputs_energy_r467, 0.002); end
  def test_outputs_energy_s467; assert_in_delta(0.5750828596274626, worksheet.outputs_energy_s467, 0.002); end
  def test_outputs_energy_t467; assert_in_delta(0.6152231799711319, worksheet.outputs_energy_t467, 0.002); end
  def test_outputs_energy_u467; assert_in_delta(0.685887317476551, worksheet.outputs_energy_u467, 0.002); end
  def test_outputs_energy_v467; assert_in_delta(0.7600890009848346, worksheet.outputs_energy_v467, 0.002); end
  def test_outputs_energy_w467; assert_in_delta(0.8344649714086797, worksheet.outputs_energy_w467, 0.002); end
  def test_outputs_energy_x467; assert_in_delta(0.9167021663861923, worksheet.outputs_energy_x467, 0.002); end
  def test_outputs_energy_y467; assert_in_epsilon(1.0075816680235306, worksheet.outputs_energy_y467, 0.002); end
  def test_outputs_energy_z467; assert_in_epsilon(1.0988204999098294, worksheet.outputs_energy_z467, 0.002); end
  def test_outputs_energy_c468; assert_equal("Steel.others", worksheet.outputs_energy_c468); end
  def test_outputs_energy_i468; assert_equal("G.M.02", worksheet.outputs_energy_i468); end
  def test_outputs_energy_r468; assert_in_epsilon(6.671485699703609, worksheet.outputs_energy_r468, 0.002); end
  def test_outputs_energy_s468; assert_in_epsilon(6.955692904992306, worksheet.outputs_energy_s468, 0.002); end
  def test_outputs_energy_t468; assert_in_epsilon(7.1637139129146705, worksheet.outputs_energy_t468, 0.002); end
  def test_outputs_energy_u468; assert_in_epsilon(7.694013083966307, worksheet.outputs_energy_u468, 0.002); end
  def test_outputs_energy_v468; assert_in_epsilon(8.219511378089381, worksheet.outputs_energy_v468, 0.002); end
  def test_outputs_energy_w468; assert_in_epsilon(8.704551268800017, worksheet.outputs_energy_w468, 0.002); end
  def test_outputs_energy_x468; assert_in_epsilon(9.229704293452691, worksheet.outputs_energy_x468, 0.002); end
  def test_outputs_energy_y468; assert_in_epsilon(9.797503210701269, worksheet.outputs_energy_y468, 0.002); end
  def test_outputs_energy_z468; assert_in_epsilon(10.324816569952365, worksheet.outputs_energy_z468, 0.002); end
  def test_outputs_energy_c469; assert_equal("Total", worksheet.outputs_energy_c469); end
  def test_outputs_energy_r469; assert_in_epsilon(31.442023857384005, worksheet.outputs_energy_r469, 0.002); end
  def test_outputs_energy_s469; assert_in_epsilon(32.716566844923456, worksheet.outputs_energy_s469, 0.002); end
  def test_outputs_energy_t469; assert_in_epsilon(33.53372003321352, worksheet.outputs_energy_t469, 0.002); end
  def test_outputs_energy_u469; assert_in_epsilon(35.84268538923547, worksheet.outputs_energy_u469, 0.002); end
  def test_outputs_energy_v469; assert_in_epsilon(38.1053101072573, worksheet.outputs_energy_v469, 0.002); end
  def test_outputs_energy_w469; assert_in_epsilon(40.15737723245193, worksheet.outputs_energy_w469, 0.002); end
  def test_outputs_energy_x469; assert_in_epsilon(42.37147442456698, worksheet.outputs_energy_x469, 0.002); end
  def test_outputs_energy_y469; assert_in_epsilon(44.756408614135395, worksheet.outputs_energy_y469, 0.002); end
  def test_outputs_energy_z469; assert_in_epsilon(46.931364134966074, worksheet.outputs_energy_z469, 0.002); end
  def test_outputs_energy_c352; assert_equal("Description", worksheet.outputs_energy_c352); end
  def test_outputs_energy_r352; assert_in_epsilon(2011.0, worksheet.outputs_energy_r352, 0.002); end
  def test_outputs_energy_s352; assert_equal("2015", worksheet.outputs_energy_s352); end
  def test_outputs_energy_t352; assert_equal("2020", worksheet.outputs_energy_t352); end
  def test_outputs_energy_u352; assert_equal("2025", worksheet.outputs_energy_u352); end
  def test_outputs_energy_v352; assert_equal("2030", worksheet.outputs_energy_v352); end
  def test_outputs_energy_w352; assert_equal("2035", worksheet.outputs_energy_w352); end
  def test_outputs_energy_x352; assert_equal("2040", worksheet.outputs_energy_x352); end
  def test_outputs_energy_y352; assert_equal("2045", worksheet.outputs_energy_y352); end
  def test_outputs_energy_z352; assert_equal("2050", worksheet.outputs_energy_z352); end
  def test_outputs_energy_c353; assert_equal("G.T.01", worksheet.outputs_energy_c353); end
  def test_outputs_energy_d353; assert_equal("Global Road transport", worksheet.outputs_energy_d353); end
  def test_outputs_energy_r353; assert_in_epsilon(75.1060656502734, worksheet.outputs_energy_r353, 0.002); end
  def test_outputs_energy_s353; assert_in_epsilon(90.34680483881336, worksheet.outputs_energy_s353, 0.002); end
  def test_outputs_energy_t353; assert_in_epsilon(99.46067356389705, worksheet.outputs_energy_t353, 0.002); end
  def test_outputs_energy_u353; assert_in_epsilon(105.39732574707978, worksheet.outputs_energy_u353, 0.002); end
  def test_outputs_energy_v353; assert_in_epsilon(110.42947796037129, worksheet.outputs_energy_v353, 0.002); end
  def test_outputs_energy_w353; assert_in_epsilon(114.10527194671187, worksheet.outputs_energy_w353, 0.002); end
  def test_outputs_energy_x353; assert_in_epsilon(115.9324075982805, worksheet.outputs_energy_x353, 0.002); end
  def test_outputs_energy_y353; assert_in_epsilon(117.76495571387287, worksheet.outputs_energy_y353, 0.002); end
  def test_outputs_energy_z353; assert_in_epsilon(119.9801509401486, worksheet.outputs_energy_z353, 0.002); end
  def test_outputs_energy_c354; assert_equal("G.T.02", worksheet.outputs_energy_c354); end
  def test_outputs_energy_d354; assert_equal("Global Rail transport", worksheet.outputs_energy_d354); end
  def test_outputs_energy_r354; assert_in_epsilon(2.9316800003272485, worksheet.outputs_energy_r354, 0.002); end
  def test_outputs_energy_s354; assert_in_epsilon(3.599079773502357, worksheet.outputs_energy_s354, 0.002); end
  def test_outputs_energy_t354; assert_in_epsilon(3.7492552910934673, worksheet.outputs_energy_t354, 0.002); end
  def test_outputs_energy_u354; assert_in_epsilon(3.7810397625020307, worksheet.outputs_energy_u354, 0.002); end
  def test_outputs_energy_v354; assert_in_epsilon(3.719005046772575, worksheet.outputs_energy_v354, 0.002); end
  def test_outputs_energy_w354; assert_in_epsilon(3.5784086491808993, worksheet.outputs_energy_w354, 0.002); end
  def test_outputs_energy_x354; assert_in_epsilon(3.369981912077032, worksheet.outputs_energy_x354, 0.002); end
  def test_outputs_energy_y354; assert_in_epsilon(3.1551768783673757, worksheet.outputs_energy_y354, 0.002); end
  def test_outputs_energy_z354; assert_in_epsilon(2.9373902606415734, worksheet.outputs_energy_z354, 0.002); end
  def test_outputs_energy_c355; assert_equal("G.T.03", worksheet.outputs_energy_c355); end
  def test_outputs_energy_d355; assert_equal("Global Aviation transport", worksheet.outputs_energy_d355); end
  def test_outputs_energy_r355; assert_in_epsilon(11.887639232071237, worksheet.outputs_energy_r355, 0.002); end
  def test_outputs_energy_s355; assert_in_epsilon(12.616042073616743, worksheet.outputs_energy_s355, 0.002); end
  def test_outputs_energy_t355; assert_in_epsilon(13.275913919957633, worksheet.outputs_energy_t355, 0.002); end
  def test_outputs_energy_u355; assert_in_epsilon(13.644564560216486, worksheet.outputs_energy_u355, 0.002); end
  def test_outputs_energy_v355; assert_in_epsilon(14.34252467577651, worksheet.outputs_energy_v355, 0.002); end
  def test_outputs_energy_w355; assert_in_epsilon(15.289191430593355, worksheet.outputs_energy_w355, 0.002); end
  def test_outputs_energy_x355; assert_in_epsilon(16.29937152141025, worksheet.outputs_energy_x355, 0.002); end
  def test_outputs_energy_y355; assert_in_epsilon(17.664624390126793, worksheet.outputs_energy_y355, 0.002); end
  def test_outputs_energy_z355; assert_in_epsilon(19.444994079124353, worksheet.outputs_energy_z355, 0.002); end
  def test_outputs_energy_c356; assert_equal("G.T.04", worksheet.outputs_energy_c356); end
  def test_outputs_energy_d356; assert_equal("Global Water transport", worksheet.outputs_energy_d356); end
  def test_outputs_energy_r356; assert_in_epsilon(9.498632856887696, worksheet.outputs_energy_r356, 0.002); end
  def test_outputs_energy_s356; assert_in_epsilon(11.073909039950905, worksheet.outputs_energy_s356, 0.002); end
  def test_outputs_energy_t356; assert_in_epsilon(12.27497083401087, worksheet.outputs_energy_t356, 0.002); end
  def test_outputs_energy_u356; assert_in_epsilon(13.59485674199682, worksheet.outputs_energy_u356, 0.002); end
  def test_outputs_energy_v356; assert_in_epsilon(14.685494224872553, worksheet.outputs_energy_v356, 0.002); end
  def test_outputs_energy_w356; assert_in_epsilon(14.760481686526376, worksheet.outputs_energy_w356, 0.002); end
  def test_outputs_energy_x356; assert_in_epsilon(14.472245893288942, worksheet.outputs_energy_x356, 0.002); end
  def test_outputs_energy_y356; assert_in_epsilon(14.186278925703121, worksheet.outputs_energy_y356, 0.002); end
  def test_outputs_energy_z356; assert_in_epsilon(13.634943241975641, worksheet.outputs_energy_z356, 0.002); end
  def test_outputs_energy_c395; assert_equal("Description", worksheet.outputs_energy_c395); end
  def test_outputs_energy_p395; assert_in_epsilon(2011.0, worksheet.outputs_energy_p395, 0.002); end
  def test_outputs_energy_r395; assert_in_epsilon(2011.0, worksheet.outputs_energy_r395, 0.002); end
  def test_outputs_energy_s395; assert_equal("2015", worksheet.outputs_energy_s395); end
  def test_outputs_energy_t395; assert_equal("2020", worksheet.outputs_energy_t395); end
  def test_outputs_energy_u395; assert_equal("2025", worksheet.outputs_energy_u395); end
  def test_outputs_energy_v395; assert_equal("2030", worksheet.outputs_energy_v395); end
  def test_outputs_energy_w395; assert_equal("2035", worksheet.outputs_energy_w395); end
  def test_outputs_energy_x395; assert_equal("2040", worksheet.outputs_energy_x395); end
  def test_outputs_energy_y395; assert_equal("2045", worksheet.outputs_energy_y395); end
  def test_outputs_energy_z395; assert_equal("2050", worksheet.outputs_energy_z395); end
  def test_outputs_energy_c396; assert_equal("Coal + solid modern bioenergy", worksheet.outputs_energy_c396); end
  def test_outputs_energy_e396; assert_equal("G.C.01", worksheet.outputs_energy_e396); end
  def test_outputs_energy_f396; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_f396); end
  def test_outputs_energy_k396; assert_equal("Global transport", worksheet.outputs_energy_k396); end
  def test_outputs_energy_p396; assert_in_delta(0.01, worksheet.outputs_energy_p396, 0.002); end
  def test_outputs_energy_r396; assert_in_delta(0.0, (worksheet.outputs_energy_r396||0), 0.002); end
  def test_outputs_energy_s396; assert_in_delta(0.0, (worksheet.outputs_energy_s396||0), 0.002); end
  def test_outputs_energy_t396; assert_in_delta(0.0, (worksheet.outputs_energy_t396||0), 0.002); end
  def test_outputs_energy_u396; assert_in_delta(0.0, (worksheet.outputs_energy_u396||0), 0.002); end
  def test_outputs_energy_v396; assert_in_delta(0.0, (worksheet.outputs_energy_v396||0), 0.002); end
  def test_outputs_energy_w396; assert_in_delta(0.0, (worksheet.outputs_energy_w396||0), 0.002); end
  def test_outputs_energy_x396; assert_in_delta(0.0, (worksheet.outputs_energy_x396||0), 0.002); end
  def test_outputs_energy_y396; assert_in_delta(0.0, (worksheet.outputs_energy_y396||0), 0.002); end
  def test_outputs_energy_z396; assert_in_delta(0.0, (worksheet.outputs_energy_z396||0), 0.002); end
  def test_outputs_energy_c397; assert_equal("Liquid hydrocarbons", worksheet.outputs_energy_c397); end
  def test_outputs_energy_e397; assert_equal("G.C.02", worksheet.outputs_energy_e397); end
  def test_outputs_energy_f397; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_f397); end
  def test_outputs_energy_k397; assert_equal("Global transport", worksheet.outputs_energy_k397); end
  def test_outputs_energy_p397; assert_in_epsilon(97.66, worksheet.outputs_energy_p397, 0.002); end
  def test_outputs_energy_r397; assert_in_epsilon(97.40993199671779, worksheet.outputs_energy_r397, 0.002); end
  def test_outputs_energy_s397; assert_in_epsilon(114.31617151793779, worksheet.outputs_energy_s397, 0.002); end
  def test_outputs_energy_t397; assert_in_epsilon(124.51207062919718, worksheet.outputs_energy_t397, 0.002); end
  def test_outputs_energy_u397; assert_in_epsilon(131.25621958593496, worksheet.outputs_energy_u397, 0.002); end
  def test_outputs_energy_v397; assert_in_epsilon(137.12601106696167, worksheet.outputs_energy_v397, 0.002); end
  def test_outputs_energy_w397; assert_in_epsilon(140.86136816955087, worksheet.outputs_energy_w397, 0.002); end
  def test_outputs_energy_x397; assert_in_epsilon(142.48043783671505, worksheet.outputs_energy_x397, 0.002); end
  def test_outputs_energy_y397; assert_in_epsilon(144.4545714889114, worksheet.outputs_energy_y397, 0.002); end
  def test_outputs_energy_z397; assert_in_epsilon(146.94001882333194, worksheet.outputs_energy_z397, 0.002); end
  def test_outputs_energy_c398; assert_equal("Gaseous hydrocarbons", worksheet.outputs_energy_c398); end
  def test_outputs_energy_e398; assert_equal("G.C.03", worksheet.outputs_energy_e398); end
  def test_outputs_energy_f398; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_f398); end
  def test_outputs_energy_k398; assert_equal("Global transport", worksheet.outputs_energy_k398); end
  def test_outputs_energy_p398; assert_in_delta(0.8, worksheet.outputs_energy_p398, 0.002); end
  def test_outputs_energy_r398; assert_in_delta(0.3390598127226956, worksheet.outputs_energy_r398, 0.002); end
  def test_outputs_energy_s398; assert_in_delta(0.8883942557734628, worksheet.outputs_energy_s398, 0.002); end
  def test_outputs_energy_t398; assert_in_epsilon(1.3020941442596676, worksheet.outputs_energy_t398, 0.002); end
  def test_outputs_energy_u398; assert_in_epsilon(1.7351659987419101, worksheet.outputs_energy_u398, 0.002); end
  def test_outputs_energy_v398; assert_in_epsilon(2.1772816663219956, worksheet.outputs_energy_v398, 0.002); end
  def test_outputs_energy_w398; assert_in_epsilon(2.5979188143275747, worksheet.outputs_energy_w398, 0.002); end
  def test_outputs_energy_x398; assert_in_epsilon(2.9718681855064584, worksheet.outputs_energy_x398, 0.002); end
  def test_outputs_energy_y398; assert_in_epsilon(3.3313965526605815, worksheet.outputs_energy_y398, 0.002); end
  def test_outputs_energy_z398; assert_in_epsilon(3.6748908740098893, worksheet.outputs_energy_z398, 0.002); end
  def test_outputs_energy_c399; assert_equal("Electricity grid", worksheet.outputs_energy_c399); end
  def test_outputs_energy_e399; assert_equal("G.E.01", worksheet.outputs_energy_e399); end
  def test_outputs_energy_f399; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_f399); end
  def test_outputs_energy_k399; assert_equal("Global transport", worksheet.outputs_energy_k399); end
  def test_outputs_energy_p399; assert_in_delta(0.75, worksheet.outputs_energy_p399, 0.002); end
  def test_outputs_energy_r399; assert_in_epsilon(1.6750258617433622, worksheet.outputs_energy_r399, 0.002); end
  def test_outputs_energy_s399; assert_in_epsilon(2.0230486519766315, worksheet.outputs_energy_s399, 0.002); end
  def test_outputs_energy_t399; assert_in_epsilon(2.558640066294828, worksheet.outputs_energy_t399, 0.002); end
  def test_outputs_energy_u399; assert_in_epsilon(3.070767211027325, worksheet.outputs_energy_u399, 0.002); end
  def test_outputs_energy_v399; assert_in_epsilon(3.5702154057514726, worksheet.outputs_energy_v399, 0.002); end
  def test_outputs_energy_w399; assert_in_epsilon(4.045656145959545, worksheet.outputs_energy_w399, 0.002); end
  def test_outputs_energy_x399; assert_in_epsilon(4.47240578808328, worksheet.outputs_energy_x399, 0.002); end
  def test_outputs_energy_y399; assert_in_epsilon(4.912116451375374, worksheet.outputs_energy_y399, 0.002); end
  def test_outputs_energy_z399; assert_in_epsilon(5.382568824548341, worksheet.outputs_energy_z399, 0.002); end
  def test_outputs_energy_c400; assert_equal("Hydrogen", worksheet.outputs_energy_c400); end
  def test_outputs_energy_e400; assert_equal("G.HY.01", worksheet.outputs_energy_e400); end
  def test_outputs_energy_f400; assert_equal("Global H2", worksheet.outputs_energy_f400); end
  def test_outputs_energy_k400; assert_equal("Global transport", worksheet.outputs_energy_k400); end
  def test_outputs_energy_p400; assert_in_delta(0.0, (worksheet.outputs_energy_p400||0), 0.002); end
  def test_outputs_energy_r400; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_r400, 0.002); end
  def test_outputs_energy_s400; assert_in_delta(0.4082213001954756, worksheet.outputs_energy_s400, 0.002); end
  def test_outputs_energy_t400; assert_in_delta(0.38800876920737004, worksheet.outputs_energy_t400, 0.002); end
  def test_outputs_energy_u400; assert_in_delta(0.35563401609091855, worksheet.outputs_energy_u400, 0.002); end
  def test_outputs_energy_v400; assert_in_delta(0.30299376875777534, worksheet.outputs_energy_v400, 0.002); end
  def test_outputs_energy_w400; assert_in_delta(0.2284105831745067, worksheet.outputs_energy_w400, 0.002); end
  def test_outputs_energy_x400; assert_in_delta(0.1492951147519168, worksheet.outputs_energy_x400, 0.002); end
  def test_outputs_energy_y400; assert_in_delta(0.0729514151228294, worksheet.outputs_energy_y400, 0.002); end
  def test_outputs_energy_z400; assert_in_delta(0.0, (worksheet.outputs_energy_z400||0), 0.002); end
  def test_outputs_energy_d228; assert_in_delta(0.0063, worksheet.outputs_energy_d228, 0.002); end
  def test_outputs_energy_d229; assert_in_delta(0.016, worksheet.outputs_energy_d229, 0.002); end
  def test_outputs_energy_d230; assert_in_delta(0.038, worksheet.outputs_energy_d230, 0.002); end
  def test_outputs_energy_d260; assert_in_epsilon(4.0, worksheet.outputs_energy_d260, 0.002); end
  def test_outputs_climate_impacts_c545; assert_equal("In order to avoid the most dangerous impacts of global climate change the international community agreed limiting global average temperature increase to no more than 2°C above pre-industrial levels (UNFCCC Cancun 2010).", worksheet.outputs_climate_impacts_c545); end
  def test_outputs_climate_impacts_h67; assert_in_epsilon(3200000.0, worksheet.outputs_climate_impacts_h67, 0.002); end
  def test_outputs_climate_impacts_i67; assert_in_epsilon(7800000.0, worksheet.outputs_climate_impacts_i67, 0.002); end
  def test_outputs_climate_impacts_i72; assert_in_epsilon(620000.0, worksheet.outputs_climate_impacts_i72, 0.002); end
  def test_outputs_climate_impacts_i77; assert_in_epsilon(1.7, worksheet.outputs_climate_impacts_i77, 0.002); end
  def test_outputs_climate_impacts_i82; assert_in_delta(0.37, worksheet.outputs_climate_impacts_i82, 0.002); end
  def test_outputs_climate_impacts_d11; assert_in_epsilon(3.691315070420626, worksheet.outputs_climate_impacts_d11, 0.002); end
  def test_outputs_climate_impacts_d12; assert_in_delta(0.8189882524806609, worksheet.outputs_climate_impacts_d12, 0.002); end
  def test_outputs_climate_impacts_e11; assert_in_epsilon(5.7527492848047945, worksheet.outputs_climate_impacts_e11, 0.002); end
  def test_outputs_climate_impacts_e12; assert_in_epsilon(1.8441602064001053, worksheet.outputs_climate_impacts_e12, 0.002); end
  def test_outputs_climate_impacts_d26; assert_in_epsilon(1870.0, worksheet.outputs_climate_impacts_d26, 0.002); end
  def test_outputs_climate_impacts_e26; assert_in_epsilon(1880.0, worksheet.outputs_climate_impacts_e26, 0.002); end
  def test_outputs_climate_impacts_f26; assert_in_epsilon(1890.0, worksheet.outputs_climate_impacts_f26, 0.002); end
  def test_outputs_climate_impacts_g26; assert_in_epsilon(1900.0, worksheet.outputs_climate_impacts_g26, 0.002); end
  def test_outputs_climate_impacts_h26; assert_in_epsilon(1910.0, worksheet.outputs_climate_impacts_h26, 0.002); end
  def test_outputs_climate_impacts_i26; assert_in_epsilon(1920.0, worksheet.outputs_climate_impacts_i26, 0.002); end
  def test_outputs_climate_impacts_j26; assert_in_epsilon(1930.0, worksheet.outputs_climate_impacts_j26, 0.002); end
  def test_outputs_climate_impacts_k26; assert_in_epsilon(1940.0, worksheet.outputs_climate_impacts_k26, 0.002); end
  def test_outputs_climate_impacts_l26; assert_in_epsilon(1950.0, worksheet.outputs_climate_impacts_l26, 0.002); end
  def test_outputs_climate_impacts_m26; assert_in_epsilon(1960.0, worksheet.outputs_climate_impacts_m26, 0.002); end
  def test_outputs_climate_impacts_n26; assert_in_epsilon(1970.0, worksheet.outputs_climate_impacts_n26, 0.002); end
  def test_outputs_climate_impacts_o26; assert_in_epsilon(1980.0, worksheet.outputs_climate_impacts_o26, 0.002); end
  def test_outputs_climate_impacts_p26; assert_in_epsilon(1990.0, worksheet.outputs_climate_impacts_p26, 0.002); end
  def test_outputs_climate_impacts_q26; assert_in_epsilon(2000.0, worksheet.outputs_climate_impacts_q26, 0.002); end
  def test_outputs_climate_impacts_r26; assert_in_epsilon(2005.0, worksheet.outputs_climate_impacts_r26, 0.002); end
  def test_outputs_climate_impacts_s26; assert_in_epsilon(2010.0, worksheet.outputs_climate_impacts_s26, 0.002); end
  def test_outputs_climate_impacts_t26; assert_in_epsilon(2011.0, worksheet.outputs_climate_impacts_t26, 0.002); end
  def test_outputs_climate_impacts_u26; assert_in_epsilon(2013.0, worksheet.outputs_climate_impacts_u26, 0.002); end
  def test_outputs_climate_impacts_v26; assert_in_epsilon(2015.0, worksheet.outputs_climate_impacts_v26, 0.002); end
  def test_outputs_climate_impacts_w26; assert_in_epsilon(2020.0, worksheet.outputs_climate_impacts_w26, 0.002); end
  def test_outputs_climate_impacts_x26; assert_in_epsilon(2025.0, worksheet.outputs_climate_impacts_x26, 0.002); end
  def test_outputs_climate_impacts_y26; assert_in_epsilon(2030.0, worksheet.outputs_climate_impacts_y26, 0.002); end
  def test_outputs_climate_impacts_z26; assert_in_epsilon(2035.0, worksheet.outputs_climate_impacts_z26, 0.002); end
  def test_outputs_climate_impacts_aa26; assert_in_epsilon(2040.0, worksheet.outputs_climate_impacts_aa26, 0.002); end
  def test_outputs_climate_impacts_ab26; assert_in_epsilon(2045.0, worksheet.outputs_climate_impacts_ab26, 0.002); end
  def test_outputs_climate_impacts_ac26; assert_in_epsilon(2050.0, worksheet.outputs_climate_impacts_ac26, 0.002); end
  def test_outputs_climate_impacts_ad26; assert_in_epsilon(2055.0, worksheet.outputs_climate_impacts_ad26, 0.002); end
  def test_outputs_climate_impacts_ae26; assert_in_epsilon(2060.0, worksheet.outputs_climate_impacts_ae26, 0.002); end
  def test_outputs_climate_impacts_af26; assert_in_epsilon(2065.0, worksheet.outputs_climate_impacts_af26, 0.002); end
  def test_outputs_climate_impacts_ag26; assert_in_epsilon(2070.0, worksheet.outputs_climate_impacts_ag26, 0.002); end
  def test_outputs_climate_impacts_ah26; assert_in_epsilon(2075.0, worksheet.outputs_climate_impacts_ah26, 0.002); end
  def test_outputs_climate_impacts_ai26; assert_in_epsilon(2080.0, worksheet.outputs_climate_impacts_ai26, 0.002); end
  def test_outputs_climate_impacts_aj26; assert_in_epsilon(2085.0, worksheet.outputs_climate_impacts_aj26, 0.002); end
  def test_outputs_climate_impacts_ak26; assert_in_epsilon(2090.0, worksheet.outputs_climate_impacts_ak26, 0.002); end
  def test_outputs_climate_impacts_al26; assert_in_epsilon(2095.0, worksheet.outputs_climate_impacts_al26, 0.002); end
  def test_outputs_climate_impacts_am26; assert_in_epsilon(2100.0, worksheet.outputs_climate_impacts_am26, 0.002); end
  def test_outputs_climate_impacts_c27; assert_equal("High estimate", worksheet.outputs_climate_impacts_c27); end
  def test_outputs_climate_impacts_w27; assert_in_epsilon(2.2175775641515427, worksheet.outputs_climate_impacts_w27, 0.002); end
  def test_outputs_climate_impacts_x27; assert_in_epsilon(2.415955619142409, worksheet.outputs_climate_impacts_x27, 0.002); end
  def test_outputs_climate_impacts_y27; assert_in_epsilon(2.6365613925369606, worksheet.outputs_climate_impacts_y27, 0.002); end
  def test_outputs_climate_impacts_z27; assert_in_epsilon(2.8852484647120527, worksheet.outputs_climate_impacts_z27, 0.002); end
  def test_outputs_climate_impacts_aa27; assert_in_epsilon(3.153513746816998, worksheet.outputs_climate_impacts_aa27, 0.002); end
  def test_outputs_climate_impacts_ab27; assert_in_epsilon(3.4223587556212225, worksheet.outputs_climate_impacts_ab27, 0.002); end
  def test_outputs_climate_impacts_ac27; assert_in_epsilon(3.691315070420626, worksheet.outputs_climate_impacts_ac27, 0.002); end
  def test_outputs_climate_impacts_ad27; assert_in_epsilon(3.9433452282006227, worksheet.outputs_climate_impacts_ad27, 0.002); end
  def test_outputs_climate_impacts_ae27; assert_in_epsilon(4.1439558474482165, worksheet.outputs_climate_impacts_ae27, 0.002); end
  def test_outputs_climate_impacts_af27; assert_in_epsilon(4.344761590761712, worksheet.outputs_climate_impacts_af27, 0.002); end
  def test_outputs_climate_impacts_ag27; assert_in_epsilon(4.5457748664235575, worksheet.outputs_climate_impacts_ag27, 0.002); end
  def test_outputs_climate_impacts_ah27; assert_in_epsilon(4.746856444820728, worksheet.outputs_climate_impacts_ah27, 0.002); end
  def test_outputs_climate_impacts_ai27; assert_in_epsilon(4.947989828724354, worksheet.outputs_climate_impacts_ai27, 0.002); end
  def test_outputs_climate_impacts_aj27; assert_in_epsilon(5.149159253092893, worksheet.outputs_climate_impacts_aj27, 0.002); end
  def test_outputs_climate_impacts_ak27; assert_in_epsilon(5.350345853819167, worksheet.outputs_climate_impacts_ak27, 0.002); end
  def test_outputs_climate_impacts_al27; assert_in_epsilon(5.551544007001644, worksheet.outputs_climate_impacts_al27, 0.002); end
  def test_outputs_climate_impacts_am27; assert_in_epsilon(5.7527492848047945, worksheet.outputs_climate_impacts_am27, 0.002); end
  def test_outputs_climate_impacts_c28; assert_equal("Actual (NASA)", worksheet.outputs_climate_impacts_c28); end
  def test_outputs_climate_impacts_f28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_f28, 0.002); end
  def test_outputs_climate_impacts_g28; assert_in_delta(-0.031, worksheet.outputs_climate_impacts_g28, 0.002); end
  def test_outputs_climate_impacts_h28; assert_in_delta(-0.231, worksheet.outputs_climate_impacts_h28, 0.002); end
  def test_outputs_climate_impacts_i28; assert_in_delta(-0.061000000000000026, worksheet.outputs_climate_impacts_i28, 0.002); end
  def test_outputs_climate_impacts_j28; assert_in_delta(0.059, worksheet.outputs_climate_impacts_j28, 0.002); end
  def test_outputs_climate_impacts_k28; assert_in_delta(0.259, worksheet.outputs_climate_impacts_k28, 0.002); end
  def test_outputs_climate_impacts_l28; assert_in_delta(0.119, worksheet.outputs_climate_impacts_l28, 0.002); end
  def test_outputs_climate_impacts_m28; assert_in_delta(0.22899999999999998, worksheet.outputs_climate_impacts_m28, 0.002); end
  def test_outputs_climate_impacts_n28; assert_in_delta(0.209, worksheet.outputs_climate_impacts_n28, 0.002); end
  def test_outputs_climate_impacts_o28; assert_in_delta(0.359, worksheet.outputs_climate_impacts_o28, 0.002); end
  def test_outputs_climate_impacts_p28; assert_in_delta(0.519, worksheet.outputs_climate_impacts_p28, 0.002); end
  def test_outputs_climate_impacts_q28; assert_in_delta(0.719, worksheet.outputs_climate_impacts_q28, 0.002); end
  def test_outputs_climate_impacts_r28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_r28, 0.002); end
  def test_outputs_climate_impacts_s28; assert_in_delta(0.7789999999999999, worksheet.outputs_climate_impacts_s28, 0.002); end
  def test_outputs_climate_impacts_t28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_t28, 0.002); end
  def test_outputs_climate_impacts_u28; assert_in_delta(0.7989999999999999, worksheet.outputs_climate_impacts_u28, 0.002); end
  def test_outputs_climate_impacts_c29; assert_equal("Actual (HadCRUT3)", worksheet.outputs_climate_impacts_c29); end
  def test_outputs_climate_impacts_d29; assert_in_delta(-0.0020333333333333314, worksheet.outputs_climate_impacts_d29, 0.002); end
  def test_outputs_climate_impacts_e29; assert_in_delta(0.08556666666666674, worksheet.outputs_climate_impacts_e29, 0.002); end
  def test_outputs_climate_impacts_f29; assert_in_delta(-0.08383333333333326, worksheet.outputs_climate_impacts_f29, 0.002); end
  def test_outputs_climate_impacts_g29; assert_in_delta(-0.06043333333333328, worksheet.outputs_climate_impacts_g29, 0.002); end
  def test_outputs_climate_impacts_h29; assert_in_delta(-0.2668333333333333, worksheet.outputs_climate_impacts_h29, 0.002); end
  def test_outputs_climate_impacts_i29; assert_in_delta(-0.052633333333333254, worksheet.outputs_climate_impacts_i29, 0.002); end
  def test_outputs_climate_impacts_j29; assert_in_delta(0.06776666666666673, worksheet.outputs_climate_impacts_j29, 0.002); end
  def test_outputs_climate_impacts_k29; assert_in_delta(0.29756666666666676, worksheet.outputs_climate_impacts_k29, 0.002); end
  def test_outputs_climate_impacts_l29; assert_in_delta(0.08816666666666673, worksheet.outputs_climate_impacts_l29, 0.002); end
  def test_outputs_climate_impacts_m29; assert_in_delta(0.23116666666666674, worksheet.outputs_climate_impacts_m29, 0.002); end
  def test_outputs_climate_impacts_n29; assert_in_delta(0.18496666666666672, worksheet.outputs_climate_impacts_n29, 0.002); end
  def test_outputs_climate_impacts_o29; assert_in_delta(0.3201666666666667, worksheet.outputs_climate_impacts_o29, 0.002); end
  def test_outputs_climate_impacts_p29; assert_in_delta(0.44456666666666667, worksheet.outputs_climate_impacts_p29, 0.002); end
  def test_outputs_climate_impacts_q29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_q29, 0.002); end
  def test_outputs_climate_impacts_r29; assert_in_delta(0.7283666666666667, worksheet.outputs_climate_impacts_r29, 0.002); end
  def test_outputs_climate_impacts_s29; assert_in_delta(0.6799666666666668, worksheet.outputs_climate_impacts_s29, 0.002); end
  def test_outputs_climate_impacts_t29; assert_in_delta(0.7063666666666668, worksheet.outputs_climate_impacts_t29, 0.002); end
  def test_outputs_climate_impacts_u29; assert_in_delta(0.7391666666666667, worksheet.outputs_climate_impacts_u29, 0.002); end
  def test_outputs_climate_impacts_c30; assert_equal("Actual (HadCRUT4)", worksheet.outputs_climate_impacts_c30); end
  def test_outputs_climate_impacts_d30; assert_in_delta(0.024, worksheet.outputs_climate_impacts_d30, 0.002); end
  def test_outputs_climate_impacts_e30; assert_in_delta(0.117, worksheet.outputs_climate_impacts_e30, 0.002); end
  def test_outputs_climate_impacts_f30; assert_in_delta(-0.052, worksheet.outputs_climate_impacts_f30, 0.002); end
  def test_outputs_climate_impacts_g30; assert_in_delta(-0.027, worksheet.outputs_climate_impacts_g30, 0.002); end
  def test_outputs_climate_impacts_h30; assert_in_delta(-0.224, worksheet.outputs_climate_impacts_h30, 0.002); end
  def test_outputs_climate_impacts_i30; assert_in_delta(0.012, worksheet.outputs_climate_impacts_i30, 0.002); end
  def test_outputs_climate_impacts_j30; assert_in_delta(0.103, worksheet.outputs_climate_impacts_j30, 0.002); end
  def test_outputs_climate_impacts_k30; assert_in_delta(0.278, worksheet.outputs_climate_impacts_k30, 0.002); end
  def test_outputs_climate_impacts_l30; assert_in_delta(0.227, worksheet.outputs_climate_impacts_l30, 0.002); end
  def test_outputs_climate_impacts_m30; assert_in_delta(0.302, worksheet.outputs_climate_impacts_m30, 0.002); end
  def test_outputs_climate_impacts_n30; assert_in_delta(0.214, worksheet.outputs_climate_impacts_n30, 0.002); end
  def test_outputs_climate_impacts_o30; assert_in_delta(0.336, worksheet.outputs_climate_impacts_o30, 0.002); end
  def test_outputs_climate_impacts_p30; assert_in_delta(0.481, worksheet.outputs_climate_impacts_p30, 0.002); end
  def test_outputs_climate_impacts_q30; assert_in_delta(0.698, worksheet.outputs_climate_impacts_q30, 0.002); end
  def test_outputs_climate_impacts_r30; assert_in_delta(0.78, worksheet.outputs_climate_impacts_r30, 0.002); end
  def test_outputs_climate_impacts_s30; assert_in_delta(0.744, worksheet.outputs_climate_impacts_s30, 0.002); end
  def test_outputs_climate_impacts_t30; assert_in_delta(0.764, worksheet.outputs_climate_impacts_t30, 0.002); end
  def test_outputs_climate_impacts_u30; assert_in_delta(0.774, worksheet.outputs_climate_impacts_u30, 0.002); end
  def test_outputs_climate_impacts_c31; assert_equal("Low estimate", worksheet.outputs_climate_impacts_c31); end
  def test_outputs_climate_impacts_w31; assert_in_delta(0.34976266544838164, worksheet.outputs_climate_impacts_w31, 0.002); end
  def test_outputs_climate_impacts_x31; assert_in_delta(0.41292456430176894, worksheet.outputs_climate_impacts_x31, 0.002); end
  def test_outputs_climate_impacts_y31; assert_in_delta(0.4831635811439363, worksheet.outputs_climate_impacts_y31, 0.002); end
  def test_outputs_climate_impacts_z31; assert_in_delta(0.5623434465760853, worksheet.outputs_climate_impacts_z31, 0.002); end
  def test_outputs_climate_impacts_aa31; assert_in_delta(0.6477568488547196, worksheet.outputs_climate_impacts_aa31, 0.002); end
  def test_outputs_climate_impacts_ab31; assert_in_delta(0.7333548312228417, worksheet.outputs_climate_impacts_ab31, 0.002); end
  def test_outputs_climate_impacts_ac31; assert_in_delta(0.8189882524806609, worksheet.outputs_climate_impacts_ac31, 0.002); end
  def test_outputs_climate_impacts_ad31; assert_in_delta(0.909869207181117, worksheet.outputs_climate_impacts_ad31, 0.002); end
  def test_outputs_climate_impacts_ae31; assert_in_epsilon(1.0134550785771022, worksheet.outputs_climate_impacts_ae31, 0.002); end
  def test_outputs_climate_impacts_af31; assert_in_epsilon(1.1171417028468518, worksheet.outputs_climate_impacts_af31, 0.002); end
  def test_outputs_climate_impacts_ag31; assert_in_epsilon(1.2209354870427678, worksheet.outputs_climate_impacts_ag31, 0.002); end
  def test_outputs_climate_impacts_ah31; assert_in_epsilon(1.3247645395529126, worksheet.outputs_climate_impacts_ah31, 0.002); end
  def test_outputs_climate_impacts_ai31; assert_in_epsilon(1.4286203419856158, worksheet.outputs_climate_impacts_ai31, 0.002); end
  def test_outputs_climate_impacts_aj31; assert_in_epsilon(1.5324947540162432, worksheet.outputs_climate_impacts_aj31, 0.002); end
  def test_outputs_climate_impacts_ak31; assert_in_epsilon(1.6363780351086894, worksheet.outputs_climate_impacts_ak31, 0.002); end
  def test_outputs_climate_impacts_al31; assert_in_epsilon(1.740267281345188, worksheet.outputs_climate_impacts_al31, 0.002); end
  def test_outputs_climate_impacts_am31; assert_in_epsilon(1.8441602064001053, worksheet.outputs_climate_impacts_am31, 0.002); end
  def test_outputs_climate_impacts_i9; assert_equal("no warning", worksheet.outputs_climate_impacts_i9); end
  def test_conversions_b66; assert_equal("Unit", worksheet.conversions_b66); end
  def test_conversions_c66; assert_equal("Name", worksheet.conversions_c66); end
  def test_conversions_d66; assert_equal("Name in formulae", worksheet.conversions_d66); end
  def test_conversions_e66; assert_equal("m^2", worksheet.conversions_e66); end
  def test_conversions_f66; assert_equal("M ha", worksheet.conversions_f66); end
  def test_conversions_b67; assert_equal("ha", worksheet.conversions_b67); end
  def test_conversions_c67; assert_equal("Hectares", worksheet.conversions_c67); end
  def test_conversions_d67; assert_equal("Unit.ha", worksheet.conversions_d67); end
  def test_conversions_e67; assert_in_epsilon(10000.0, worksheet.conversions_e67, 0.002); end
  def test_conversions_f67; assert_in_delta(1.0e-06, worksheet.conversions_f67, 0.002); end
  def test_conversions_b68; assert_equal("M ha", worksheet.conversions_b68); end
  def test_conversions_c68; assert_equal("Million hectares", worksheet.conversions_c68); end
  def test_conversions_d68; assert_equal("Unit.Mha", worksheet.conversions_d68); end
  def test_conversions_e68; assert_in_epsilon(10000000000.0, worksheet.conversions_e68, 0.002); end
  def test_conversions_f68; assert_in_delta(1.0, worksheet.conversions_f68, 0.002); end
  def test_conversions_b69; assert_equal("acres", worksheet.conversions_b69); end
  def test_conversions_c69; assert_equal("Acres", worksheet.conversions_c69); end
  def test_conversions_d69; assert_equal("Unit.acre", worksheet.conversions_d69); end
  def test_conversions_e69; assert_in_epsilon(4046.8564224, worksheet.conversions_e69, 0.002); end
  def test_conversions_f69; assert_in_delta(4.0468564224000004e-07, worksheet.conversions_f69, 0.002); end
  def test_conversions_b70; assert_equal("km^2", worksheet.conversions_b70); end
  def test_conversions_c70; assert_equal("Square kilometres", worksheet.conversions_c70); end
  def test_conversions_d70; assert_equal("Unit.km2", worksheet.conversions_d70); end
  def test_conversions_e70; assert_in_epsilon(1000000.0, worksheet.conversions_e70, 0.002); end
  def test_conversions_f70; assert_in_delta(0.0001, worksheet.conversions_f70, 0.002); end
  def test_conversions_b71; assert_equal("m^2", worksheet.conversions_b71); end
  def test_conversions_c71; assert_equal("Square metres", worksheet.conversions_c71); end
  def test_conversions_d71; assert_equal("Unit.m2", worksheet.conversions_d71); end
  def test_conversions_e71; assert_in_delta(1.0, worksheet.conversions_e71, 0.002); end
  def test_conversions_f71; assert_in_delta(1.0e-10, worksheet.conversions_f71, 0.002); end
  def test_conversions_b72; assert_equal("Football pitch", worksheet.conversions_b72); end
  def test_conversions_c72; assert_equal("Football pitch", worksheet.conversions_c72); end
  def test_conversions_d72; assert_equal("unit.footballpitch", worksheet.conversions_d72); end
  def test_conversions_e72; assert_in_epsilon(7140.0, worksheet.conversions_e72, 0.002); end
  def test_conversions_f72; assert_in_delta(7.14e-07, worksheet.conversions_f72, 0.002); end
  def test_conversions_b73; assert_equal("Australia", worksheet.conversions_b73); end
  def test_conversions_c73; assert_equal("Australia", worksheet.conversions_c73); end
  def test_conversions_d73; assert_equal("Unit.Australia", worksheet.conversions_d73); end
  def test_conversions_e73; assert_in_epsilon(7686850000000.0, worksheet.conversions_e73, 0.002); end
  def test_conversions_f73; assert_in_epsilon(768.685, worksheet.conversions_f73, 0.002); end
  def test_conversions_b74; assert_equal("India", worksheet.conversions_b74); end
  def test_conversions_c74; assert_equal("India", worksheet.conversions_c74); end
  def test_conversions_d74; assert_equal("Unit.India", worksheet.conversions_d74); end
  def test_conversions_e74; assert_in_epsilon(3287263000000.0, worksheet.conversions_e74, 0.002); end
  def test_conversions_f74; assert_in_epsilon(328.7263, worksheet.conversions_f74, 0.002); end
  def test_conversions_b75; assert_equal("Brazil", worksheet.conversions_b75); end
  def test_conversions_c75; assert_equal("Brazil", worksheet.conversions_c75); end
  def test_conversions_d75; assert_equal("Unit.Brazil", worksheet.conversions_d75); end
  def test_conversions_e75; assert_in_epsilon(8515767000000.0, worksheet.conversions_e75, 0.002); end
  def test_conversions_f75; assert_in_epsilon(851.5767, worksheet.conversions_f75, 0.002); end
  def test_conversions_b76; assert_equal("China", worksheet.conversions_b76); end
  def test_conversions_c76; assert_equal("China", worksheet.conversions_c76); end
  def test_conversions_d76; assert_equal("Unit.China", worksheet.conversions_d76); end
  def test_conversions_e76; assert_in_epsilon(9706961000000.0, worksheet.conversions_e76, 0.002); end
  def test_conversions_f76; assert_in_epsilon(970.6961, worksheet.conversions_f76, 0.002); end
  def test_conversions_b77; assert_equal("South Africa", worksheet.conversions_b77); end
  def test_conversions_c77; assert_equal("South Africa", worksheet.conversions_c77); end
  def test_conversions_d77; assert_equal("Unit.SouthAfrica", worksheet.conversions_d77); end
  def test_conversions_e77; assert_in_epsilon(1221037000000.0, worksheet.conversions_e77, 0.002); end
  def test_conversions_f77; assert_in_epsilon(122.1037, worksheet.conversions_f77, 0.002); end
  def test_conversions_b6; assert_equal("Unit", worksheet.conversions_b6); end
  def test_conversions_c6; assert_equal("Name", worksheet.conversions_c6); end
  def test_conversions_d6; assert_equal("Name in formulae", worksheet.conversions_d6); end
  def test_conversions_e6; assert_equal("Joules", worksheet.conversions_e6); end
  def test_conversions_f6; assert_equal("EJ", worksheet.conversions_f6); end
  def test_conversions_b7; assert_equal("EJ", worksheet.conversions_b7); end
  def test_conversions_c7; assert_equal("Exajoules", worksheet.conversions_c7); end
  def test_conversions_d7; assert_equal("Unit.EJ", worksheet.conversions_d7); end
  def test_conversions_e7; assert_in_epsilon(1.0e+18, worksheet.conversions_e7, 0.002); end
  def test_conversions_f7; assert_in_delta(1.0, worksheet.conversions_f7, 0.002); end
  def test_conversions_b8; assert_equal("PJ", worksheet.conversions_b8); end
  def test_conversions_c8; assert_equal("Petajoules", worksheet.conversions_c8); end
  def test_conversions_d8; assert_equal("Unit.PJ", worksheet.conversions_d8); end
  def test_conversions_e8; assert_in_epsilon(1.0e+15, worksheet.conversions_e8, 0.002); end
  def test_conversions_f8; assert_in_delta(0.001, worksheet.conversions_f8, 0.002); end
  def test_conversions_b9; assert_equal("TJ", worksheet.conversions_b9); end
  def test_conversions_c9; assert_equal("Terajoules", worksheet.conversions_c9); end
  def test_conversions_d9; assert_equal("Unit.TJ", worksheet.conversions_d9); end
  def test_conversions_e9; assert_in_epsilon(1000000000000.0, worksheet.conversions_e9, 0.002); end
  def test_conversions_f9; assert_in_delta(1.0e-06, worksheet.conversions_f9, 0.002); end
  def test_conversions_b10; assert_equal("GJ", worksheet.conversions_b10); end
  def test_conversions_c10; assert_equal("Gigajoules", worksheet.conversions_c10); end
  def test_conversions_d10; assert_equal("Unit.GJ", worksheet.conversions_d10); end
  def test_conversions_e10; assert_in_epsilon(1000000000.0, worksheet.conversions_e10, 0.002); end
  def test_conversions_f10; assert_in_delta(1.0e-09, worksheet.conversions_f10, 0.002); end
  def test_conversions_b11; assert_equal("MJ", worksheet.conversions_b11); end
  def test_conversions_c11; assert_equal("Megajoules", worksheet.conversions_c11); end
  def test_conversions_d11; assert_equal("Unit.MJ", worksheet.conversions_d11); end
  def test_conversions_e11; assert_in_epsilon(1000000.0, worksheet.conversions_e11, 0.002); end
  def test_conversions_f11; assert_in_delta(1.0e-12, worksheet.conversions_f11, 0.002); end
  def test_conversions_b12; assert_equal("J", worksheet.conversions_b12); end
  def test_conversions_c12; assert_equal("Joules", worksheet.conversions_c12); end
  def test_conversions_d12; assert_equal("Unit.J", worksheet.conversions_d12); end
  def test_conversions_e12; assert_in_delta(1.0, worksheet.conversions_e12, 0.002); end
  def test_conversions_f12; assert_in_delta(1.0e-18, worksheet.conversions_f12, 0.002); end
  def test_conversions_b13; assert_equal("TWh", worksheet.conversions_b13); end
  def test_conversions_c13; assert_equal("Terawatt-hours", worksheet.conversions_c13); end
  def test_conversions_d13; assert_equal("Unit.TWh", worksheet.conversions_d13); end
  def test_conversions_e13; assert_in_epsilon(3.6e+15, worksheet.conversions_e13, 0.002); end
  def test_conversions_f13; assert_in_delta(0.0036, worksheet.conversions_f13, 0.002); end
  def test_conversions_b14; assert_equal("GWh", worksheet.conversions_b14); end
  def test_conversions_c14; assert_equal("Gigawatt-hours", worksheet.conversions_c14); end
  def test_conversions_d14; assert_equal("Unit.GWh", worksheet.conversions_d14); end
  def test_conversions_e14; assert_in_epsilon(3600000000000.0, worksheet.conversions_e14, 0.002); end
  def test_conversions_f14; assert_in_delta(3.6e-06, worksheet.conversions_f14, 0.002); end
  def test_conversions_b15; assert_equal("MWh", worksheet.conversions_b15); end
  def test_conversions_c15; assert_equal("Megawatt-hours", worksheet.conversions_c15); end
  def test_conversions_d15; assert_equal("Unit.MWh", worksheet.conversions_d15); end
  def test_conversions_e15; assert_in_epsilon(3600000000.0, worksheet.conversions_e15, 0.002); end
  def test_conversions_f15; assert_in_delta(3.6e-09, worksheet.conversions_f15, 0.002); end
  def test_conversions_b16; assert_equal("kWh", worksheet.conversions_b16); end
  def test_conversions_c16; assert_equal("Kilowatt-hours", worksheet.conversions_c16); end
  def test_conversions_d16; assert_equal("Unit.kWh", worksheet.conversions_d16); end
  def test_conversions_e16; assert_in_epsilon(3600000.0, worksheet.conversions_e16, 0.002); end
  def test_conversions_f16; assert_in_delta(3.6e-12, worksheet.conversions_f16, 0.002); end
  def test_conversions_b17; assert_equal("boe", worksheet.conversions_b17); end
  def test_conversions_c17; assert_equal("Barrel of oil equivalent", worksheet.conversions_c17); end
  def test_conversions_d17; assert_equal("Unit.boe", worksheet.conversions_d17); end
  def test_conversions_e17; assert_in_epsilon(5861520000.0, worksheet.conversions_e17, 0.002); end
  def test_conversions_f17; assert_in_delta(5.86152e-09, worksheet.conversions_f17, 0.002); end
  def test_conversions_b18; assert_equal("Mboe", worksheet.conversions_b18); end
  def test_conversions_c18; assert_equal("Million barrels of oil equivalent", worksheet.conversions_c18); end
  def test_conversions_d18; assert_equal("Unit.Mboe", worksheet.conversions_d18); end
  def test_conversions_e18; assert_in_epsilon(5.86152e+15, worksheet.conversions_e18, 0.002); end
  def test_conversions_f18; assert_in_delta(0.00586152, worksheet.conversions_f18, 0.002); end
  def test_conversions_b19; assert_equal("toe", worksheet.conversions_b19); end
  def test_conversions_c19; assert_equal("Tonnes of oil equivalent", worksheet.conversions_c19); end
  def test_conversions_d19; assert_equal("Unit.toe", worksheet.conversions_d19); end
  def test_conversions_e19; assert_in_epsilon(41868000000.0, worksheet.conversions_e19, 0.002); end
  def test_conversions_f19; assert_in_delta(4.1868e-08, worksheet.conversions_f19, 0.002); end
  def test_conversions_b20; assert_equal("ktoe", worksheet.conversions_b20); end
  def test_conversions_c20; assert_equal("Kilotonnes of oil equivalent", worksheet.conversions_c20); end
  def test_conversions_d20; assert_equal("Unit.ktoe", worksheet.conversions_d20); end
  def test_conversions_e20; assert_in_epsilon(41868000000000.0, worksheet.conversions_e20, 0.002); end
  def test_conversions_f20; assert_in_delta(4.1868e-05, worksheet.conversions_f20, 0.002); end
  def test_conversions_b21; assert_equal("Mtoe", worksheet.conversions_b21); end
  def test_conversions_c21; assert_equal("Megatonnes of oil equivalent", worksheet.conversions_c21); end
  def test_conversions_d21; assert_equal("Unit.Mtoe", worksheet.conversions_d21); end
  def test_conversions_e21; assert_in_epsilon(4.1868e+16, worksheet.conversions_e21, 0.002); end
  def test_conversions_f21; assert_in_delta(0.041868, worksheet.conversions_f21, 0.002); end
  def test_conversions_b22; assert_equal("tce", worksheet.conversions_b22); end
  def test_conversions_c22; assert_equal("Tonnes of coal equivalent", worksheet.conversions_c22); end
  def test_conversions_d22; assert_equal("unit.tce", worksheet.conversions_d22); end
  def test_conversions_e22; assert_in_epsilon(29307600000.0, worksheet.conversions_e22, 0.002); end
  def test_conversions_f22; assert_in_delta(0.0293076, worksheet.conversions_f22, 0.002); end
  def test_conversions_b23; assert_equal("Mtce", worksheet.conversions_b23); end
  def test_conversions_c23; assert_equal("Million tonnes of coal equivalent", worksheet.conversions_c23); end
  def test_conversions_d23; assert_equal("unit.Mtce", worksheet.conversions_d23); end
  def test_conversions_e23; assert_in_epsilon(2.93076e+16, worksheet.conversions_e23, 0.002); end
  def test_conversions_f23; assert_in_delta(0.0293076, worksheet.conversions_f23, 0.002); end
  def test_conversions_b24; assert_equal("therm", worksheet.conversions_b24); end
  def test_conversions_c24; assert_equal("Therms", worksheet.conversions_c24); end
  def test_conversions_d24; assert_equal("Unit.therm", worksheet.conversions_d24); end
  def test_conversions_e24; assert_in_epsilon(105506136.12882091, worksheet.conversions_e24, 0.002); end
  def test_conversions_f24; assert_in_delta(1.055061361288209e-10, worksheet.conversions_f24, 0.002); end
  def test_conversions_b25; assert_equal("Btu", worksheet.conversions_b25); end
  def test_conversions_c25; assert_equal("British Thermal Unit", worksheet.conversions_c25); end
  def test_conversions_d25; assert_equal("Unit.Btu", worksheet.conversions_d25); end
  def test_conversions_e25; assert_in_epsilon(1055.0613612882091, worksheet.conversions_e25, 0.002); end
  def test_conversions_f25; assert_in_delta(1.055061361288209e-15, worksheet.conversions_f25, 0.002); end
  def test_conversions_b26; assert_equal("Mbtu", worksheet.conversions_b26); end
  def test_conversions_c26; assert_equal("Million British Thermal Units", worksheet.conversions_c26); end
  def test_conversions_d26; assert_equal("Unit.Mbtu", worksheet.conversions_d26); end
  def test_conversions_e26; assert_in_epsilon(1055061361.2882091, worksheet.conversions_e26, 0.002); end
  def test_conversions_f26; assert_in_delta(1.055061361288209e-09, worksheet.conversions_f26, 0.002); end
  def test_conversions_b27; assert_equal("calorie", worksheet.conversions_b27); end
  def test_conversions_c27; assert_equal("Calorie (NOT food calorie)", worksheet.conversions_c27); end
  def test_conversions_d27; assert_equal("Unit.calorie.not.food", worksheet.conversions_d27); end
  def test_conversions_e27; assert_in_epsilon(4.184, worksheet.conversions_e27, 0.002); end
  def test_conversions_f27; assert_in_delta(4.184e-18, worksheet.conversions_f27, 0.002); end
  def test_conversions_b28; assert_equal("kcal", worksheet.conversions_b28); end
  def test_conversions_c28; assert_equal("Food calories", worksheet.conversions_c28); end
  def test_conversions_d28; assert_equal("unit.kcal.food", worksheet.conversions_d28); end
  def test_conversions_e28; assert_in_epsilon(4184.0, worksheet.conversions_e28, 0.002); end
  def test_conversions_f28; assert_in_delta(4.184e-15, worksheet.conversions_f28, 0.002); end
  def test_conversions_b29; assert_equal("GW y", worksheet.conversions_b29); end
  def test_conversions_c29; assert_equal("Gigawatt-years", worksheet.conversions_c29); end
  def test_conversions_d29; assert_equal("Unit.GWyear", worksheet.conversions_d29); end
  def test_conversions_e29; assert_in_epsilon(3.15576e+16, worksheet.conversions_e29, 0.002); end
  def test_conversions_f29; assert_in_delta(0.0315576, worksheet.conversions_f29, 0.002); end
  def test_conversions_b33; assert_equal("Unit", worksheet.conversions_b33); end
  def test_conversions_c33; assert_equal("Name", worksheet.conversions_c33); end
  def test_conversions_d33; assert_equal("Name in formulae", worksheet.conversions_d33); end
  def test_conversions_e33; assert_equal("Watts", worksheet.conversions_e33); end
  def test_conversions_f33; assert_equal("GW", worksheet.conversions_f33); end
  def test_conversions_b34; assert_equal("GW", worksheet.conversions_b34); end
  def test_conversions_c34; assert_equal("Gigawatts", worksheet.conversions_c34); end
  def test_conversions_d34; assert_equal("Unit.GW", worksheet.conversions_d34); end
  def test_conversions_e34; assert_in_epsilon(1000000000.0, worksheet.conversions_e34, 0.002); end
  def test_conversions_f34; assert_in_delta(1.0, worksheet.conversions_f34, 0.002); end
  def test_conversions_b35; assert_equal("MW", worksheet.conversions_b35); end
  def test_conversions_c35; assert_equal("Megawatts", worksheet.conversions_c35); end
  def test_conversions_d35; assert_equal("Unit.MW", worksheet.conversions_d35); end
  def test_conversions_e35; assert_in_epsilon(1000000.0, worksheet.conversions_e35, 0.002); end
  def test_conversions_f35; assert_in_delta(0.001, worksheet.conversions_f35, 0.002); end
  def test_conversions_b36; assert_equal("kW", worksheet.conversions_b36); end
  def test_conversions_c36; assert_equal("Kilowatts", worksheet.conversions_c36); end
  def test_conversions_d36; assert_equal("Unit.kW", worksheet.conversions_d36); end
  def test_conversions_e36; assert_in_epsilon(1000.0, worksheet.conversions_e36, 0.002); end
  def test_conversions_f36; assert_in_delta(1.0e-06, worksheet.conversions_f36, 0.002); end
  def test_conversions_b37; assert_equal("W", worksheet.conversions_b37); end
  def test_conversions_c37; assert_equal("Watts", worksheet.conversions_c37); end
  def test_conversions_d37; assert_equal("Unit.W", worksheet.conversions_d37); end
  def test_conversions_e37; assert_in_delta(1.0, worksheet.conversions_e37, 0.002); end
  def test_conversions_f37; assert_in_delta(1.0e-09, worksheet.conversions_f37, 0.002); end
  def test_conversions_b38; assert_equal("mcm/d", worksheet.conversions_b38); end
  def test_conversions_c38; assert_equal("mcm/d natural gas", worksheet.conversions_c38); end
  def test_conversions_d38; assert_equal("Unit.mcm.d", worksheet.conversions_d38); end
  def test_conversions_e38; assert_in_epsilon(335648148.1481481, worksheet.conversions_e38, 0.002); end
  def test_conversions_f38; assert_in_delta(0.33564814814814814, worksheet.conversions_f38, 0.002); end
  def test_conversions_b39; assert_equal("Mtoe/y", worksheet.conversions_b39); end
  def test_conversions_c39; assert_equal("Mtoe per year", worksheet.conversions_c39); end
  def test_conversions_d39; assert_equal("Unit.Mtoe.y", worksheet.conversions_d39); end
  def test_conversions_e39; assert_in_epsilon(1326716860.597764, worksheet.conversions_e39, 0.002); end
  def test_conversions_f39; assert_in_epsilon(1.326716860597764, worksheet.conversions_f39, 0.002); end
  def test_outputs_physical_implications_q111; assert_in_epsilon(1856.7205617009683, worksheet.outputs_physical_implications_q111, 0.002); end
  def test_outputs_physical_implications_q112; assert_in_epsilon(366.5562365018784, worksheet.outputs_physical_implications_q112, 0.002); end
  def test_outputs_physical_implications_q113; assert_in_epsilon(1432.506812446416, worksheet.outputs_physical_implications_q113, 0.002); end
  def test_outputs_physical_implications_q114; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q114||0), 0.002); end
  def test_outputs_physical_implications_q115; assert_in_epsilon(364.0, worksheet.outputs_physical_implications_q115, 0.002); end
  def test_outputs_physical_implications_q116; assert_in_epsilon(237.67, worksheet.outputs_physical_implications_q116, 0.002); end
  def test_outputs_physical_implications_q117; assert_in_epsilon(970.0, worksheet.outputs_physical_implications_q117, 0.002); end
  def test_outputs_physical_implications_q118; assert_in_delta(0.527, worksheet.outputs_physical_implications_q118, 0.002); end
  def test_outputs_physical_implications_q119; assert_in_epsilon(71.28999999999999, worksheet.outputs_physical_implications_q119, 0.002); end
  def test_outputs_physical_implications_q120; assert_in_epsilon(11.43, worksheet.outputs_physical_implications_q120, 0.002); end
  def test_outputs_physical_implications_q121; assert_in_epsilon(120.0, worksheet.outputs_physical_implications_q121, 0.002); end
  def test_outputs_physical_implications_y111; assert_in_epsilon(4986.848758707791, worksheet.outputs_physical_implications_y111, 0.002); end
  def test_outputs_physical_implications_y112; assert_in_epsilon(4007.61005985829, worksheet.outputs_physical_implications_y112, 0.002); end
  def test_outputs_physical_implications_y113; assert_in_epsilon(6243.548644098903, worksheet.outputs_physical_implications_y113, 0.002); end
  def test_outputs_physical_implications_y114; assert_in_epsilon(110.79999999999997, worksheet.outputs_physical_implications_y114, 0.002); end
  def test_outputs_physical_implications_y115; assert_in_epsilon(616.4999999999999, worksheet.outputs_physical_implications_y115, 0.002); end
  def test_outputs_physical_implications_y116; assert_in_epsilon(1390.2000000000003, worksheet.outputs_physical_implications_y116, 0.002); end
  def test_outputs_physical_implications_y117; assert_in_epsilon(1693.8, worksheet.outputs_physical_implications_y117, 0.002); end
  def test_outputs_physical_implications_y118; assert_in_epsilon(43.599999999999994, worksheet.outputs_physical_implications_y118, 0.002); end
  def test_outputs_physical_implications_y119; assert_in_epsilon(881.7239999999997, worksheet.outputs_physical_implications_y119, 0.002); end
  def test_outputs_physical_implications_y120; assert_in_epsilon(68.79999999999998, worksheet.outputs_physical_implications_y120, 0.002); end
  def test_outputs_physical_implications_y121; assert_in_epsilon(277.5, worksheet.outputs_physical_implications_y121, 0.002); end
  def test_outputs_physical_implications_q89; assert_in_epsilon(33.043, worksheet.outputs_physical_implications_q89, 0.002); end
  def test_outputs_physical_implications_q90; assert_in_epsilon(44.69400000000001, worksheet.outputs_physical_implications_q90, 0.002); end
  def test_outputs_physical_implications_q91; assert_in_epsilon(101.61200000000001, worksheet.outputs_physical_implications_q91, 0.002); end
  def test_outputs_physical_implications_q92; assert_in_epsilon(9.168000000000003, worksheet.outputs_physical_implications_q92, 0.002); end
  def test_outputs_physical_implications_q93; assert_in_epsilon(2.482999999999989, worksheet.outputs_physical_implications_q93, 0.002); end
  def test_outputs_physical_implications_q94; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q94, 0.002); end
  def test_outputs_physical_implications_q95; assert_in_epsilon(7.0, worksheet.outputs_physical_implications_q95, 0.002); end
  def test_outputs_physical_implications_q96; assert_in_epsilon(26.768, worksheet.outputs_physical_implications_q96, 0.002); end
  def test_outputs_physical_implications_q97; assert_in_epsilon(26.768, worksheet.outputs_physical_implications_q97, 0.002); end
  def test_outputs_physical_implications_q98; assert_in_epsilon(99.424, worksheet.outputs_physical_implications_q98, 0.002); end
  def test_outputs_physical_implications_q99; assert_in_epsilon(1759.04, worksheet.outputs_physical_implications_q99, 0.002); end
  def test_outputs_physical_implications_y89; assert_in_epsilon(30.448791999999994, worksheet.outputs_physical_implications_y89, 0.002); end
  def test_outputs_physical_implications_y90; assert_in_epsilon(75.65382, worksheet.outputs_physical_implications_y90, 0.002); end
  def test_outputs_physical_implications_y91; assert_in_epsilon(92.12803599999998, worksheet.outputs_physical_implications_y91, 0.002); end
  def test_outputs_physical_implications_y92; assert_in_epsilon(7.631843999999999, worksheet.outputs_physical_implications_y92, 0.002); end
  def test_outputs_physical_implications_y93; assert_in_epsilon(3.1375079999999995, worksheet.outputs_physical_implications_y93, 0.002); end
  def test_outputs_physical_implications_y94; assert_in_epsilon(65.65445026178011, worksheet.outputs_physical_implications_y94, 0.002); end
  def test_outputs_physical_implications_y95; assert_in_epsilon(7.659685863874345, worksheet.outputs_physical_implications_y95, 0.002); end
  def test_outputs_physical_implications_y96; assert_in_epsilon(43.21140314136126, worksheet.outputs_physical_implications_y96, 0.002); end
  def test_outputs_physical_implications_y97; assert_in_epsilon(39.09603141361256, worksheet.outputs_physical_implications_y97, 0.002); end
  def test_outputs_physical_implications_y98; assert_in_epsilon(135.8072670157068, worksheet.outputs_physical_implications_y98, 0.002); end
  def test_outputs_physical_implications_y99; assert_in_epsilon(1839.5711623036648, worksheet.outputs_physical_implications_y99, 0.002); end
  def test_outputs_physical_implications_c186; assert_equal("Technology category", worksheet.outputs_physical_implications_c186); end
  def test_outputs_physical_implications_q186; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q186, 0.002); end
  def test_outputs_physical_implications_r186; assert_equal("2015", worksheet.outputs_physical_implications_r186); end
  def test_outputs_physical_implications_s186; assert_equal("2020", worksheet.outputs_physical_implications_s186); end
  def test_outputs_physical_implications_t186; assert_equal("2025", worksheet.outputs_physical_implications_t186); end
  def test_outputs_physical_implications_u186; assert_equal("2030", worksheet.outputs_physical_implications_u186); end
  def test_outputs_physical_implications_v186; assert_equal("2035", worksheet.outputs_physical_implications_v186); end
  def test_outputs_physical_implications_w186; assert_equal("2040", worksheet.outputs_physical_implications_w186); end
  def test_outputs_physical_implications_x186; assert_equal("2045", worksheet.outputs_physical_implications_x186); end
  def test_outputs_physical_implications_y186; assert_equal("2050", worksheet.outputs_physical_implications_y186); end
  def test_outputs_physical_implications_c187; assert_equal("Light road", worksheet.outputs_physical_implications_c187); end
  def test_outputs_physical_implications_q187; assert_in_epsilon(104512.00105377422, worksheet.outputs_physical_implications_q187, 0.002); end
  def test_outputs_physical_implications_r187; assert_in_epsilon(190979.03612154757, worksheet.outputs_physical_implications_r187, 0.002); end
  def test_outputs_physical_implications_s187; assert_in_epsilon(216748.79887209667, worksheet.outputs_physical_implications_s187, 0.002); end
  def test_outputs_physical_implications_t187; assert_in_epsilon(240088.29655482565, worksheet.outputs_physical_implications_t187, 0.002); end
  def test_outputs_physical_implications_u187; assert_in_epsilon(253223.5943623833, worksheet.outputs_physical_implications_u187, 0.002); end
  def test_outputs_physical_implications_v187; assert_in_epsilon(260567.31554313365, worksheet.outputs_physical_implications_v187, 0.002); end
  def test_outputs_physical_implications_w187; assert_in_epsilon(261554.99544244845, worksheet.outputs_physical_implications_w187, 0.002); end
  def test_outputs_physical_implications_x187; assert_in_epsilon(259945.47934960967, worksheet.outputs_physical_implications_x187, 0.002); end
  def test_outputs_physical_implications_y187; assert_in_epsilon(255780.24564466305, worksheet.outputs_physical_implications_y187, 0.002); end
  def test_outputs_physical_implications_c188; assert_equal("Heavy road", worksheet.outputs_physical_implications_c188); end
  def test_outputs_physical_implications_q188; assert_in_epsilon(52118.56449426207, worksheet.outputs_physical_implications_q188, 0.002); end
  def test_outputs_physical_implications_r188; assert_in_epsilon(69613.84889487915, worksheet.outputs_physical_implications_r188, 0.002); end
  def test_outputs_physical_implications_s188; assert_in_epsilon(81862.51568236103, worksheet.outputs_physical_implications_s188, 0.002); end
  def test_outputs_physical_implications_t188; assert_in_epsilon(94628.46703315765, worksheet.outputs_physical_implications_t188, 0.002); end
  def test_outputs_physical_implications_u188; assert_in_epsilon(104862.06329408709, worksheet.outputs_physical_implications_u188, 0.002); end
  def test_outputs_physical_implications_v188; assert_in_epsilon(111537.82761354561, worksheet.outputs_physical_implications_v188, 0.002); end
  def test_outputs_physical_implications_w188; assert_in_epsilon(115685.50495656407, worksheet.outputs_physical_implications_w188, 0.002); end
  def test_outputs_physical_implications_x188; assert_in_epsilon(119089.02192312843, worksheet.outputs_physical_implications_x188, 0.002); end
  def test_outputs_physical_implications_y188; assert_in_epsilon(120978.18746084091, worksheet.outputs_physical_implications_y188, 0.002); end
  def test_outputs_physical_implications_c189; assert_equal("Rail", worksheet.outputs_physical_implications_c189); end
  def test_outputs_physical_implications_q189; assert_in_epsilon(84.04510232546681, worksheet.outputs_physical_implications_q189, 0.002); end
  def test_outputs_physical_implications_r189; assert_in_epsilon(103.17382013164732, worksheet.outputs_physical_implications_r189, 0.002); end
  def test_outputs_physical_implications_s189; assert_in_epsilon(115.20662843928626, worksheet.outputs_physical_implications_s189, 0.002); end
  def test_outputs_physical_implications_t189; assert_in_epsilon(125.84059409855801, worksheet.outputs_physical_implications_t189, 0.002); end
  def test_outputs_physical_implications_u189; assert_in_epsilon(131.1201511452107, worksheet.outputs_physical_implications_u189, 0.002); end
  def test_outputs_physical_implications_v189; assert_in_epsilon(132.39532609135168, worksheet.outputs_physical_implications_v189, 0.002); end
  def test_outputs_physical_implications_w189; assert_in_epsilon(130.3069971399333, worksheet.outputs_physical_implications_w189, 0.002); end
  def test_outputs_physical_implications_x189; assert_in_epsilon(126.98344918660595, worksheet.outputs_physical_implications_x189, 0.002); end
  def test_outputs_physical_implications_y189; assert_in_epsilon(122.28989785532951, worksheet.outputs_physical_implications_y189, 0.002); end
  def test_outputs_physical_implications_c190; assert_equal("Ship", worksheet.outputs_physical_implications_c190); end
  def test_outputs_physical_implications_q190; assert_in_epsilon(84.8437433279107, worksheet.outputs_physical_implications_q190, 0.002); end
  def test_outputs_physical_implications_r190; assert_in_epsilon(101.19340272321695, worksheet.outputs_physical_implications_r190, 0.002); end
  def test_outputs_physical_implications_s190; assert_in_epsilon(115.09101588976644, worksheet.outputs_physical_implications_s190, 0.002); end
  def test_outputs_physical_implications_t190; assert_in_epsilon(130.21225625981657, worksheet.outputs_physical_implications_t190, 0.002); end
  def test_outputs_physical_implications_u190; assert_in_epsilon(143.1913310556199, worksheet.outputs_physical_implications_u190, 0.002); end
  def test_outputs_physical_implications_v190; assert_in_epsilon(147.8016762164031, worksheet.outputs_physical_implications_v190, 0.002); end
  def test_outputs_physical_implications_w190; assert_in_epsilon(148.82722182064566, worksheet.outputs_physical_implications_w190, 0.002); end
  def test_outputs_physical_implications_x190; assert_in_epsilon(149.6332353117242, worksheet.outputs_physical_implications_x190, 0.002); end
  def test_outputs_physical_implications_y190; assert_in_epsilon(147.72611040764863, worksheet.outputs_physical_implications_y190, 0.002); end
  def test_outputs_physical_implications_c191; assert_equal("Plane", worksheet.outputs_physical_implications_c191); end
  def test_outputs_physical_implications_q191; assert_in_epsilon(1.8014330268291616, worksheet.outputs_physical_implications_q191, 0.002); end
  def test_outputs_physical_implications_r191; assert_in_epsilon(2.2052400812399413, worksheet.outputs_physical_implications_r191, 0.002); end
  def test_outputs_physical_implications_s191; assert_in_epsilon(2.620569631899723, worksheet.outputs_physical_implications_s191, 0.002); end
  def test_outputs_physical_implications_t191; assert_in_epsilon(3.1115356360494144, worksheet.outputs_physical_implications_t191, 0.002); end
  def test_outputs_physical_implications_u191; assert_in_epsilon(3.6028567342678133, worksheet.outputs_physical_implications_u191, 0.002); end
  def test_outputs_physical_implications_v191; assert_in_epsilon(3.8724486921210213, worksheet.outputs_physical_implications_v191, 0.002); end
  def test_outputs_physical_implications_w191; assert_in_epsilon(4.057366009958294, worksheet.outputs_physical_implications_w191, 0.002); end
  def test_outputs_physical_implications_x191; assert_in_epsilon(4.248300290964544, worksheet.outputs_physical_implications_x191, 0.002); end
  def test_outputs_physical_implications_y191; assert_in_epsilon(4.357663598732831, worksheet.outputs_physical_implications_y191, 0.002); end
  def test_outputs_physical_implications_c192; assert_equal("Total", worksheet.outputs_physical_implications_c192); end
  def test_outputs_physical_implications_q192; assert_in_epsilon(156801.25582671652, worksheet.outputs_physical_implications_q192, 0.002); end
  def test_outputs_physical_implications_r192; assert_in_epsilon(260799.4574793628, worksheet.outputs_physical_implications_r192, 0.002); end
  def test_outputs_physical_implications_s192; assert_in_epsilon(298844.2327684187, worksheet.outputs_physical_implications_s192, 0.002); end
  def test_outputs_physical_implications_t192; assert_in_epsilon(334975.92797397776, worksheet.outputs_physical_implications_t192, 0.002); end
  def test_outputs_physical_implications_u192; assert_in_epsilon(358363.5719954054, worksheet.outputs_physical_implications_u192, 0.002); end
  def test_outputs_physical_implications_v192; assert_in_epsilon(372389.2126076791, worksheet.outputs_physical_implications_v192, 0.002); end
  def test_outputs_physical_implications_w192; assert_in_epsilon(377523.6919839831, worksheet.outputs_physical_implications_w192, 0.002); end
  def test_outputs_physical_implications_x192; assert_in_epsilon(379315.3662575274, worksheet.outputs_physical_implications_x192, 0.002); end
  def test_outputs_physical_implications_y192; assert_in_epsilon(377032.8067773657, worksheet.outputs_physical_implications_y192, 0.002); end
  def test_outputs_physical_implications_c56; assert_equal("Type of land", worksheet.outputs_physical_implications_c56); end
  def test_outputs_physical_implications_l56; assert_in_epsilon(1990.0, worksheet.outputs_physical_implications_l56, 0.002); end
  def test_outputs_physical_implications_m56; assert_in_epsilon(1995.0, worksheet.outputs_physical_implications_m56, 0.002); end
  def test_outputs_physical_implications_n56; assert_in_epsilon(2000.0, worksheet.outputs_physical_implications_n56, 0.002); end
  def test_outputs_physical_implications_o56; assert_in_epsilon(2005.0, worksheet.outputs_physical_implications_o56, 0.002); end
  def test_outputs_physical_implications_p56; assert_in_epsilon(2010.0, worksheet.outputs_physical_implications_p56, 0.002); end
  def test_outputs_physical_implications_q56; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q56, 0.002); end
  def test_outputs_physical_implications_r56; assert_equal("2015", worksheet.outputs_physical_implications_r56); end
  def test_outputs_physical_implications_s56; assert_equal("2020", worksheet.outputs_physical_implications_s56); end
  def test_outputs_physical_implications_t56; assert_equal("2025", worksheet.outputs_physical_implications_t56); end
  def test_outputs_physical_implications_u56; assert_equal("2030", worksheet.outputs_physical_implications_u56); end
  def test_outputs_physical_implications_v56; assert_equal("2035", worksheet.outputs_physical_implications_v56); end
  def test_outputs_physical_implications_w56; assert_equal("2040", worksheet.outputs_physical_implications_w56); end
  def test_outputs_physical_implications_x56; assert_equal("2045", worksheet.outputs_physical_implications_x56); end
  def test_outputs_physical_implications_y56; assert_equal("2050", worksheet.outputs_physical_implications_y56); end
  def test_outputs_physical_implications_c57; assert_equal("Land for animals", worksheet.outputs_physical_implications_c57); end
  def test_outputs_physical_implications_l57; assert_in_epsilon(3305.27405, worksheet.outputs_physical_implications_l57, 0.002); end
  def test_outputs_physical_implications_m57; assert_in_epsilon(3394.7165, worksheet.outputs_physical_implications_m57, 0.002); end
  def test_outputs_physical_implications_n57; assert_in_epsilon(3417.6424, worksheet.outputs_physical_implications_n57, 0.002); end
  def test_outputs_physical_implications_o57; assert_in_epsilon(3388.2637000000004, worksheet.outputs_physical_implications_o57, 0.002); end
  def test_outputs_physical_implications_p57; assert_in_epsilon(3358.24029, worksheet.outputs_physical_implications_p57, 0.002); end
  def test_outputs_physical_implications_q57; assert_in_epsilon(3362.6790000000005, worksheet.outputs_physical_implications_q57, 0.002); end
  def test_outputs_physical_implications_r57; assert_in_epsilon(3366.3177643505323, worksheet.outputs_physical_implications_r57, 0.002); end
  def test_outputs_physical_implications_s57; assert_in_epsilon(3314.084829079313, worksheet.outputs_physical_implications_s57, 0.002); end
  def test_outputs_physical_implications_t57; assert_in_epsilon(3252.817966724464, worksheet.outputs_physical_implications_t57, 0.002); end
  def test_outputs_physical_implications_u57; assert_in_epsilon(3204.3015418395335, worksheet.outputs_physical_implications_u57, 0.002); end
  def test_outputs_physical_implications_v57; assert_in_epsilon(3181.1677131220085, worksheet.outputs_physical_implications_v57, 0.002); end
  def test_outputs_physical_implications_w57; assert_in_epsilon(3143.156474418785, worksheet.outputs_physical_implications_w57, 0.002); end
  def test_outputs_physical_implications_x57; assert_in_epsilon(3054.7491418257287, worksheet.outputs_physical_implications_x57, 0.002); end
  def test_outputs_physical_implications_y57; assert_in_epsilon(2937.640358002139, worksheet.outputs_physical_implications_y57, 0.002); end
  def test_outputs_physical_implications_c58; assert_equal("Land for food crops", worksheet.outputs_physical_implications_c58); end
  def test_outputs_physical_implications_l58; assert_in_epsilon(1435.159, worksheet.outputs_physical_implications_l58, 0.002); end
  def test_outputs_physical_implications_m58; assert_in_epsilon(1435.5399510204102, worksheet.outputs_physical_implications_m58, 0.002); end
  def test_outputs_physical_implications_n58; assert_in_epsilon(1428.67608979592, worksheet.outputs_physical_implications_n58, 0.002); end
  def test_outputs_physical_implications_o58; assert_in_epsilon(1446.4106385714301, worksheet.outputs_physical_implications_o58, 0.002); end
  def test_outputs_physical_implications_p58; assert_in_epsilon(1438.53226734694, worksheet.outputs_physical_implications_p58, 0.002); end
  def test_outputs_physical_implications_q58; assert_in_epsilon(1443.0301900000002, worksheet.outputs_physical_implications_q58, 0.002); end
  def test_outputs_physical_implications_r58; assert_in_epsilon(1448.0713543325814, worksheet.outputs_physical_implications_r58, 0.002); end
  def test_outputs_physical_implications_s58; assert_in_epsilon(1478.66242718018, worksheet.outputs_physical_implications_s58, 0.002); end
  def test_outputs_physical_implications_t58; assert_in_epsilon(1506.3457520103618, worksheet.outputs_physical_implications_t58, 0.002); end
  def test_outputs_physical_implications_u58; assert_in_epsilon(1539.6322763985056, worksheet.outputs_physical_implications_u58, 0.002); end
  def test_outputs_physical_implications_v58; assert_in_epsilon(1584.6255219280777, worksheet.outputs_physical_implications_v58, 0.002); end
  def test_outputs_physical_implications_w58; assert_in_epsilon(1625.1792787605905, worksheet.outputs_physical_implications_w58, 0.002); end
  def test_outputs_physical_implications_x58; assert_in_epsilon(1644.4241330574507, worksheet.outputs_physical_implications_x58, 0.002); end
  def test_outputs_physical_implications_y58; assert_in_epsilon(1649.832291121951, worksheet.outputs_physical_implications_y58, 0.002); end
  def test_outputs_physical_implications_c59; assert_equal("Land for non-food crops ", worksheet.outputs_physical_implications_c59); end
  def test_outputs_physical_implications_l59; assert_in_epsilon(48.0, worksheet.outputs_physical_implications_l59, 0.002); end
  def test_outputs_physical_implications_m59; assert_in_epsilon(50.8571428571429, worksheet.outputs_physical_implications_m59, 0.002); end
  def test_outputs_physical_implications_n59; assert_in_epsilon(53.7142857142857, worksheet.outputs_physical_implications_n59, 0.002); end
  def test_outputs_physical_implications_o59; assert_in_epsilon(56.571428571428605, worksheet.outputs_physical_implications_o59, 0.002); end
  def test_outputs_physical_implications_p59; assert_in_epsilon(59.4285714285714, worksheet.outputs_physical_implications_p59, 0.002); end
  def test_outputs_physical_implications_q59; assert_in_epsilon(60.0, worksheet.outputs_physical_implications_q59, 0.002); end
  def test_outputs_physical_implications_r59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_r59, 0.002); end
  def test_outputs_physical_implications_s59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_s59, 0.002); end
  def test_outputs_physical_implications_t59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_t59, 0.002); end
  def test_outputs_physical_implications_u59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_u59, 0.002); end
  def test_outputs_physical_implications_v59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_v59, 0.002); end
  def test_outputs_physical_implications_w59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_w59, 0.002); end
  def test_outputs_physical_implications_x59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_x59, 0.002); end
  def test_outputs_physical_implications_y59; assert_in_epsilon(59.38461538461539, worksheet.outputs_physical_implications_y59, 0.002); end
  def test_outputs_physical_implications_c60; assert_equal("Native forest", worksheet.outputs_physical_implications_c60); end
  def test_outputs_physical_implications_l60; assert_in_epsilon(3949.19954, worksheet.outputs_physical_implications_l60, 0.002); end
  def test_outputs_physical_implications_m60; assert_in_epsilon(3894.5365409523797, worksheet.outputs_physical_implications_m60, 0.002); end
  def test_outputs_physical_implications_n60; assert_in_epsilon(3839.87336190476, worksheet.outputs_physical_implications_n60, 0.002); end
  def test_outputs_physical_implications_o60; assert_in_epsilon(3802.6219428571403, worksheet.outputs_physical_implications_o60, 0.002); end
  def test_outputs_physical_implications_p60; assert_in_epsilon(3761.66904380952, worksheet.outputs_physical_implications_p60, 0.002); end
  def test_outputs_physical_implications_q60; assert_in_epsilon(3753.47833, worksheet.outputs_physical_implications_q60, 0.002); end
  def test_outputs_physical_implications_r60; assert_in_epsilon(3708.939577405139, worksheet.outputs_physical_implications_r60, 0.002); end
  def test_outputs_physical_implications_s60; assert_in_epsilon(3683.181414332861, worksheet.outputs_physical_implications_s60, 0.002); end
  def test_outputs_physical_implications_t60; assert_in_epsilon(3671.262109198804, worksheet.outputs_physical_implications_t60, 0.002); end
  def test_outputs_physical_implications_u60; assert_in_epsilon(3641.6147572657155, worksheet.outputs_physical_implications_u60, 0.002); end
  def test_outputs_physical_implications_v60; assert_in_epsilon(3575.6820047768306, worksheet.outputs_physical_implications_v60, 0.002); end
  def test_outputs_physical_implications_w60; assert_in_epsilon(3528.711451836405, worksheet.outputs_physical_implications_w60, 0.002); end
  def test_outputs_physical_implications_x60; assert_in_epsilon(3554.3639317988873, worksheet.outputs_physical_implications_x60, 0.002); end
  def test_outputs_physical_implications_y60; assert_in_epsilon(3622.7031491203415, worksheet.outputs_physical_implications_y60, 0.002); end
  def test_outputs_physical_implications_c61; assert_equal("Commercial forest", worksheet.outputs_physical_implications_c61); end
  def test_outputs_physical_implications_l61; assert_in_epsilon(219.20000000000002, worksheet.outputs_physical_implications_l61, 0.002); end
  def test_outputs_physical_implications_m61; assert_in_epsilon(232.247619047619, worksheet.outputs_physical_implications_m61, 0.002); end
  def test_outputs_physical_implications_n61; assert_in_epsilon(245.295238095238, worksheet.outputs_physical_implications_n61, 0.002); end
  def test_outputs_physical_implications_o61; assert_in_epsilon(258.34285714285704, worksheet.outputs_physical_implications_o61, 0.002); end
  def test_outputs_physical_implications_p61; assert_in_epsilon(271.39047619047597, worksheet.outputs_physical_implications_p61, 0.002); end
  def test_outputs_physical_implications_q61; assert_in_epsilon(274.0, worksheet.outputs_physical_implications_q61, 0.002); end
  def test_outputs_physical_implications_r61; assert_in_epsilon(293.4895536750741, worksheet.outputs_physical_implications_r61, 0.002); end
  def test_outputs_physical_implications_s61; assert_in_epsilon(322.31118518472954, worksheet.outputs_physical_implications_s61, 0.002); end
  def test_outputs_physical_implications_t61; assert_in_epsilon(350.434941714841, worksheet.outputs_physical_implications_t61, 0.002); end
  def test_outputs_physical_implications_u61; assert_in_epsilon(379.1246900238128, worksheet.outputs_physical_implications_u61, 0.002); end
  def test_outputs_physical_implications_v61; assert_in_epsilon(408.1013357533879, worksheet.outputs_physical_implications_v61, 0.002); end
  def test_outputs_physical_implications_w61; assert_in_epsilon(438.53562864109944, worksheet.outputs_physical_implications_w61, 0.002); end
  def test_outputs_physical_implications_x61; assert_in_epsilon(469.26000890955476, worksheet.outputs_physical_implications_x61, 0.002); end
  def test_outputs_physical_implications_y61; assert_in_epsilon(501.12710637095455, worksheet.outputs_physical_implications_y61, 0.002); end
  def test_outputs_physical_implications_c62; assert_equal("Land for bioenergy", worksheet.outputs_physical_implications_c62); end
  def test_outputs_physical_implications_l62; assert_in_epsilon(36.0, worksheet.outputs_physical_implications_l62, 0.002); end
  def test_outputs_physical_implications_m62; assert_in_epsilon(36.429306122449, worksheet.outputs_physical_implications_m62, 0.002); end
  def test_outputs_physical_implications_n62; assert_in_epsilon(36.430224489795904, worksheet.outputs_physical_implications_n62, 0.002); end
  def test_outputs_physical_implications_o62; assert_in_epsilon(36.431142857142795, worksheet.outputs_physical_implications_o62, 0.002); end
  def test_outputs_physical_implications_p62; assert_in_epsilon(36.4320612244898, worksheet.outputs_physical_implications_p62, 0.002); end
  def test_outputs_physical_implications_q62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_q62, 0.002); end
  def test_outputs_physical_implications_r62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_r62, 0.002); end
  def test_outputs_physical_implications_s62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_s62, 0.002); end
  def test_outputs_physical_implications_t62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_t62, 0.002); end
  def test_outputs_physical_implications_u62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_u62, 0.002); end
  def test_outputs_physical_implications_v62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_v62, 0.002); end
  def test_outputs_physical_implications_w62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_w62, 0.002); end
  def test_outputs_physical_implications_x62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_x62, 0.002); end
  def test_outputs_physical_implications_y62; assert_in_epsilon(98.0, worksheet.outputs_physical_implications_y62, 0.002); end
  def test_outputs_physical_implications_c63; assert_equal("Natural grassland", worksheet.outputs_physical_implications_c63); end
  def test_outputs_physical_implications_l63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_l63||0), 0.002); end
  def test_outputs_physical_implications_m63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_m63||0), 0.002); end
  def test_outputs_physical_implications_n63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_n63||0), 0.002); end
  def test_outputs_physical_implications_o63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_o63||0), 0.002); end
  def test_outputs_physical_implications_p63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_p63||0), 0.002); end
  def test_outputs_physical_implications_q63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_q63||0), 0.002); end
  def test_outputs_physical_implications_r63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_r63||0), 0.002); end
  def test_outputs_physical_implications_s63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_s63||0), 0.002); end
  def test_outputs_physical_implications_t63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_t63||0), 0.002); end
  def test_outputs_physical_implications_u63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_u63||0), 0.002); end
  def test_outputs_physical_implications_v63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_v63||0), 0.002); end
  def test_outputs_physical_implications_w63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_w63||0), 0.002); end
  def test_outputs_physical_implications_x63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_x63||0), 0.002); end
  def test_outputs_physical_implications_y63; assert_in_delta(0.0, (worksheet.outputs_physical_implications_y63||0), 0.002); end
  def test_outputs_physical_implications_c64; assert_equal("Settlements and infrastructure", worksheet.outputs_physical_implications_c64); end
  def test_outputs_physical_implications_l64; assert_in_epsilon(196.0, worksheet.outputs_physical_implications_l64, 0.002); end
  def test_outputs_physical_implications_m64; assert_in_epsilon(207.666666666667, worksheet.outputs_physical_implications_m64, 0.002); end
  def test_outputs_physical_implications_n64; assert_in_epsilon(219.333333333333, worksheet.outputs_physical_implications_n64, 0.002); end
  def test_outputs_physical_implications_o64; assert_in_epsilon(231.0, worksheet.outputs_physical_implications_o64, 0.002); end
  def test_outputs_physical_implications_p64; assert_in_epsilon(242.666666666667, worksheet.outputs_physical_implications_p64, 0.002); end
  def test_outputs_physical_implications_q64; assert_in_epsilon(245.0, worksheet.outputs_physical_implications_q64, 0.002); end
  def test_outputs_physical_implications_r64; assert_in_epsilon(261.98465485205844, worksheet.outputs_physical_implications_r64, 0.002); end
  def test_outputs_physical_implications_s64; assert_in_epsilon(280.56304883830444, worksheet.outputs_physical_implications_s64, 0.002); end
  def test_outputs_physical_implications_t64; assert_in_epsilon(297.94213496691447, worksheet.outputs_physical_implications_t64, 0.002); end
  def test_outputs_physical_implications_u64; assert_in_epsilon(314.1296390878191, worksheet.outputs_physical_implications_u64, 0.002); end
  def test_outputs_physical_implications_v64; assert_in_epsilon(329.22632903508304, worksheet.outputs_physical_implications_v64, 0.002); end
  def test_outputs_physical_implications_w64; assert_in_epsilon(343.22007095850836, worksheet.outputs_physical_implications_w64, 0.002); end
  def test_outputs_physical_implications_x64; assert_in_epsilon(356.0056890237634, worksheet.outputs_physical_implications_x64, 0.002); end
  def test_outputs_physical_implications_y64; assert_in_epsilon(367.5, worksheet.outputs_physical_implications_y64, 0.002); end
  def test_outputs_physical_implications_c65; assert_equal("Desert, ice etc", worksheet.outputs_physical_implications_c65); end
  def test_outputs_physical_implications_l65; assert_in_epsilon(3878.6295800000003, worksheet.outputs_physical_implications_l65, 0.002); end
  def test_outputs_physical_implications_m65; assert_in_epsilon(3768.11670333333, worksheet.outputs_physical_implications_m65, 0.002); end
  def test_outputs_physical_implications_n65; assert_in_epsilon(3781.4923166666704, worksheet.outputs_physical_implications_n65, 0.002); end
  def test_outputs_physical_implications_o65; assert_in_epsilon(3802.21538, worksheet.outputs_physical_implications_o65, 0.002); end
  def test_outputs_physical_implications_p65; assert_in_epsilon(3850.9266033333297, worksheet.outputs_physical_implications_p65, 0.002); end
  def test_outputs_physical_implications_q65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_q65, 0.002); end
  def test_outputs_physical_implications_r65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_r65, 0.002); end
  def test_outputs_physical_implications_s65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_s65, 0.002); end
  def test_outputs_physical_implications_t65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_t65, 0.002); end
  def test_outputs_physical_implications_u65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_u65, 0.002); end
  def test_outputs_physical_implications_v65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_v65, 0.002); end
  def test_outputs_physical_implications_w65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_w65, 0.002); end
  def test_outputs_physical_implications_x65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_x65, 0.002); end
  def test_outputs_physical_implications_y65; assert_in_epsilon(3835.91162, worksheet.outputs_physical_implications_y65, 0.002); end
  def test_outputs_physical_implications_c152; assert_equal("Description", worksheet.outputs_physical_implications_c152); end
  def test_outputs_physical_implications_q152; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q152, 0.002); end
  def test_outputs_physical_implications_r152; assert_equal("2015", worksheet.outputs_physical_implications_r152); end
  def test_outputs_physical_implications_s152; assert_equal("2020", worksheet.outputs_physical_implications_s152); end
  def test_outputs_physical_implications_t152; assert_equal("2025", worksheet.outputs_physical_implications_t152); end
  def test_outputs_physical_implications_u152; assert_equal("2030", worksheet.outputs_physical_implications_u152); end
  def test_outputs_physical_implications_v152; assert_equal("2035", worksheet.outputs_physical_implications_v152); end
  def test_outputs_physical_implications_w152; assert_equal("2040", worksheet.outputs_physical_implications_w152); end
  def test_outputs_physical_implications_x152; assert_equal("2045", worksheet.outputs_physical_implications_x152); end
  def test_outputs_physical_implications_y152; assert_equal("2050", worksheet.outputs_physical_implications_y152); end
  def test_outputs_physical_implications_c153; assert_equal("Iron and steel", worksheet.outputs_physical_implications_c153); end
  def test_outputs_physical_implications_e153; assert_equal("Steel.Oxygen", worksheet.outputs_physical_implications_e153); end
  def test_outputs_physical_implications_f153; assert_equal("Steel.OxygenHisarna", worksheet.outputs_physical_implications_f153); end
  def test_outputs_physical_implications_g153; assert_equal("Steel.Electric", worksheet.outputs_physical_implications_g153); end
  def test_outputs_physical_implications_h153; assert_equal("Steel.ElectricDRI", worksheet.outputs_physical_implications_h153); end
  def test_outputs_physical_implications_q153; assert_in_epsilon(1.5183, worksheet.outputs_physical_implications_q153, 0.002); end
  def test_outputs_physical_implications_r153; assert_in_epsilon(1.6195564343725997, worksheet.outputs_physical_implications_r153, 0.002); end
  def test_outputs_physical_implications_s153; assert_in_epsilon(1.671309990879545, worksheet.outputs_physical_implications_s153, 0.002); end
  def test_outputs_physical_implications_t153; assert_in_epsilon(1.7986178635452013, worksheet.outputs_physical_implications_t153, 0.002); end
  def test_outputs_physical_implications_u153; assert_in_epsilon(1.9253217897204478, worksheet.outputs_physical_implications_u153, 0.002); end
  def test_outputs_physical_implications_v153; assert_in_epsilon(2.0430510207408323, worksheet.outputs_physical_implications_v153, 0.002); end
  def test_outputs_physical_implications_w153; assert_in_epsilon(2.1707024103173147, worksheet.outputs_physical_implications_w153, 0.002); end
  def test_outputs_physical_implications_x153; assert_in_epsilon(2.308935439805062, worksheet.outputs_physical_implications_x153, 0.002); end
  def test_outputs_physical_implications_y153; assert_in_epsilon(2.438185879033499, worksheet.outputs_physical_implications_y153, 0.002); end
  def test_outputs_physical_implications_c154; assert_equal("Aluminium", worksheet.outputs_physical_implications_c154); end
  def test_outputs_physical_implications_f154; assert_equal("Aluminium.Primary", worksheet.outputs_physical_implications_f154); end
  def test_outputs_physical_implications_g154; assert_equal("Aluminium.Secondary", worksheet.outputs_physical_implications_g154); end
  def test_outputs_physical_implications_q154; assert_in_delta(0.06769999999999998, worksheet.outputs_physical_implications_q154, 0.002); end
  def test_outputs_physical_implications_r154; assert_in_delta(0.07436231863767198, worksheet.outputs_physical_implications_r154, 0.002); end
  def test_outputs_physical_implications_s154; assert_in_delta(0.07912646997454112, worksheet.outputs_physical_implications_s154, 0.002); end
  def test_outputs_physical_implications_t154; assert_in_delta(0.08809807296656548, worksheet.outputs_physical_implications_t154, 0.002); end
  def test_outputs_physical_implications_u154; assert_in_delta(0.09719794392714168, worksheet.outputs_physical_implications_u154, 0.002); end
  def test_outputs_physical_implications_v154; assert_in_delta(0.1059640011687821, worksheet.outputs_physical_implications_v154, 0.002); end
  def test_outputs_physical_implications_w154; assert_in_delta(0.11551009247658028, worksheet.outputs_physical_implications_w154, 0.002); end
  def test_outputs_physical_implications_x154; assert_in_delta(0.125413473745405, worksheet.outputs_physical_implications_x154, 0.002); end
  def test_outputs_physical_implications_y154; assert_in_delta(0.13620537684746195, worksheet.outputs_physical_implications_y154, 0.002); end
  def test_outputs_physical_implications_c155; assert_equal("Chemicals", worksheet.outputs_physical_implications_c155); end
  def test_outputs_physical_implications_e155; assert_equal("Chemicals & petrochemicals.HVC", worksheet.outputs_physical_implications_e155); end
  def test_outputs_physical_implications_f155; assert_equal("Chemicals & petrochemicals.Ammonia", worksheet.outputs_physical_implications_f155); end
  def test_outputs_physical_implications_g155; assert_equal("Chemicals & petrochemicals.Methanol", worksheet.outputs_physical_implications_g155); end
  def test_outputs_physical_implications_h155; assert_equal("Chemicals & petrochemicals.Others", worksheet.outputs_physical_implications_h155); end
  def test_outputs_physical_implications_q155; assert_in_delta(0.7504088224854855, worksheet.outputs_physical_implications_q155, 0.002); end
  def test_outputs_physical_implications_r155; assert_in_delta(0.8001638980905059, worksheet.outputs_physical_implications_r155, 0.002); end
  def test_outputs_physical_implications_s155; assert_in_delta(0.8514030223114593, worksheet.outputs_physical_implications_s155, 0.002); end
  def test_outputs_physical_implications_t155; assert_in_delta(0.9456188938276824, worksheet.outputs_physical_implications_t155, 0.002); end
  def test_outputs_physical_implications_u155; assert_in_epsilon(1.0448378295864669, worksheet.outputs_physical_implications_u155, 0.002); end
  def test_outputs_physical_implications_v155; assert_in_epsilon(1.1449726275073508, worksheet.outputs_physical_implications_v155, 0.002); end
  def test_outputs_physical_implications_w155; assert_in_epsilon(1.2554866022641775, worksheet.outputs_physical_implications_w155, 0.002); end
  def test_outputs_physical_implications_x155; assert_in_epsilon(1.3634375366203648, worksheet.outputs_physical_implications_x155, 0.002); end
  def test_outputs_physical_implications_y155; assert_in_epsilon(1.4789670954298921, worksheet.outputs_physical_implications_y155, 0.002); end
  def test_outputs_physical_implications_c156; assert_equal("Pulp and paper", worksheet.outputs_physical_implications_c156); end
  def test_outputs_physical_implications_f156; assert_equal("Pulp & paper.Virgin", worksheet.outputs_physical_implications_f156); end
  def test_outputs_physical_implications_g156; assert_equal("Pulp & paper.Recycled", worksheet.outputs_physical_implications_g156); end
  def test_outputs_physical_implications_q156; assert_in_delta(0.6111514610000001, worksheet.outputs_physical_implications_q156, 0.002); end
  def test_outputs_physical_implications_r156; assert_in_delta(0.6557965839190023, worksheet.outputs_physical_implications_r156, 0.002); end
  def test_outputs_physical_implications_s156; assert_in_delta(0.6982579805188379, worksheet.outputs_physical_implications_s156, 0.002); end
  def test_outputs_physical_implications_t156; assert_in_delta(0.7707356013748743, worksheet.outputs_physical_implications_t156, 0.002); end
  def test_outputs_physical_implications_u156; assert_in_delta(0.8458964145044399, worksheet.outputs_physical_implications_u156, 0.002); end
  def test_outputs_physical_implications_v156; assert_in_delta(0.9212387292826277, worksheet.outputs_physical_implications_v156, 0.002); end
  def test_outputs_physical_implications_w156; assert_in_epsilon(1.0039205900688641, worksheet.outputs_physical_implications_w156, 0.002); end
  def test_outputs_physical_implications_x156; assert_in_epsilon(1.0864158487068374, worksheet.outputs_physical_implications_x156, 0.002); end
  def test_outputs_physical_implications_y156; assert_in_epsilon(1.1767371943662146, worksheet.outputs_physical_implications_y156, 0.002); end
  def test_outputs_physical_implications_c157; assert_equal("Cement", worksheet.outputs_physical_implications_c157); end
  def test_outputs_physical_implications_e157; assert_equal("Cement", worksheet.outputs_physical_implications_e157); end
  def test_outputs_physical_implications_q157; assert_in_epsilon(3.6351730407050002, worksheet.outputs_physical_implications_q157, 0.002); end
  def test_outputs_physical_implications_r157; assert_in_epsilon(3.856483648252404, worksheet.outputs_physical_implications_r157, 0.002); end
  def test_outputs_physical_implications_s157; assert_in_epsilon(3.932238785680315, worksheet.outputs_physical_implications_s157, 0.002); end
  def test_outputs_physical_implications_t157; assert_in_epsilon(4.14588202547087, worksheet.outputs_physical_implications_t157, 0.002); end
  def test_outputs_physical_implications_u157; assert_in_epsilon(4.339825955932206, worksheet.outputs_physical_implications_u157, 0.002); end
  def test_outputs_physical_implications_v157; assert_in_epsilon(4.52994225635747, worksheet.outputs_physical_implications_v157, 0.002); end
  def test_outputs_physical_implications_w157; assert_in_epsilon(4.697663282009246, worksheet.outputs_physical_implications_w157, 0.002); end
  def test_outputs_physical_implications_x157; assert_in_epsilon(4.871344043550177, worksheet.outputs_physical_implications_x157, 0.002); end
  def test_outputs_physical_implications_y157; assert_in_epsilon(5.053861330388155, worksheet.outputs_physical_implications_y157, 0.002); end
  def test_outputs_physical_implications_c158; assert_equal("Timber", worksheet.outputs_physical_implications_c158); end
  def test_outputs_physical_implications_e158; assert_equal("Timber", worksheet.outputs_physical_implications_e158); end
  def test_outputs_physical_implications_q158; assert_in_delta(0.8091999999999999, worksheet.outputs_physical_implications_q158, 0.002); end
  def test_outputs_physical_implications_r158; assert_in_delta(0.8767483074863396, worksheet.outputs_physical_implications_r158, 0.002); end
  def test_outputs_physical_implications_s158; assert_in_delta(0.9909797799237486, worksheet.outputs_physical_implications_s158, 0.002); end
  def test_outputs_physical_implications_t158; assert_in_epsilon(1.0728246294165913, worksheet.outputs_physical_implications_t158, 0.002); end
  def test_outputs_physical_implications_u158; assert_in_epsilon(1.155144034618845, worksheet.outputs_physical_implications_u158, 0.002); end
  def test_outputs_physical_implications_v158; assert_in_epsilon(1.2388259754844118, worksheet.outputs_physical_implications_v158, 0.002); end
  def test_outputs_physical_implications_w158; assert_in_epsilon(1.3233271755204286, worksheet.outputs_physical_implications_w158, 0.002); end
  def test_outputs_physical_implications_x158; assert_in_epsilon(1.4095587778779513, worksheet.outputs_physical_implications_x158, 0.002); end
  def test_outputs_physical_implications_y158; assert_in_epsilon(1.4944534032795898, worksheet.outputs_physical_implications_y158, 0.002); end
  def test_outputs_physical_implications_c177; assert_equal("Technology category", worksheet.outputs_physical_implications_c177); end
  def test_outputs_physical_implications_q177; assert_in_epsilon(2011.0, worksheet.outputs_physical_implications_q177, 0.002); end
  def test_outputs_physical_implications_r177; assert_equal("2015", worksheet.outputs_physical_implications_r177); end
  def test_outputs_physical_implications_s177; assert_equal("2020", worksheet.outputs_physical_implications_s177); end
  def test_outputs_physical_implications_t177; assert_equal("2025", worksheet.outputs_physical_implications_t177); end
  def test_outputs_physical_implications_u177; assert_equal("2030", worksheet.outputs_physical_implications_u177); end
  def test_outputs_physical_implications_v177; assert_equal("2035", worksheet.outputs_physical_implications_v177); end
  def test_outputs_physical_implications_w177; assert_equal("2040", worksheet.outputs_physical_implications_w177); end
  def test_outputs_physical_implications_x177; assert_equal("2045", worksheet.outputs_physical_implications_x177); end
  def test_outputs_physical_implications_y177; assert_equal("2050", worksheet.outputs_physical_implications_y177); end
  def test_outputs_physical_implications_c178; assert_equal("Light road", worksheet.outputs_physical_implications_c178); end
  def test_outputs_physical_implications_q178; assert_in_epsilon(1418223.7275823515, worksheet.outputs_physical_implications_q178, 0.002); end
  def test_outputs_physical_implications_r178; assert_in_epsilon(1692889.759213594, worksheet.outputs_physical_implications_r178, 0.002); end
  def test_outputs_physical_implications_s178; assert_in_epsilon(2023654.7404611732, worksheet.outputs_physical_implications_s178, 0.002); end
  def test_outputs_physical_implications_t178; assert_in_epsilon(2350852.6529416717, worksheet.outputs_physical_implications_t178, 0.002); end
  def test_outputs_physical_implications_u178; assert_in_epsilon(2702797.3047757978, worksheet.outputs_physical_implications_u178, 0.002); end
  def test_outputs_physical_implications_v178; assert_in_epsilon(3049735.0340671632, worksheet.outputs_physical_implications_v178, 0.002); end
  def test_outputs_physical_implications_w178; assert_in_epsilon(3400017.650667806, worksheet.outputs_physical_implications_w178, 0.002); end
  def test_outputs_physical_implications_x178; assert_in_epsilon(3747212.0861168024, worksheet.outputs_physical_implications_x178, 0.002); end
  def test_outputs_physical_implications_y178; assert_in_epsilon(4107024.173518366, worksheet.outputs_physical_implications_y178, 0.002); end
  def test_outputs_physical_implications_c179; assert_equal("Heavy road", worksheet.outputs_physical_implications_c179); end
  def test_outputs_physical_implications_q179; assert_in_epsilon(15049.891873347682, worksheet.outputs_physical_implications_q179, 0.002); end
  def test_outputs_physical_implications_r179; assert_in_epsilon(18503.07824243124, worksheet.outputs_physical_implications_r179, 0.002); end
  def test_outputs_physical_implications_s179; assert_in_epsilon(21280.34978193869, worksheet.outputs_physical_implications_s179, 0.002); end
  def test_outputs_physical_implications_t179; assert_in_epsilon(23565.64625883127, worksheet.outputs_physical_implications_t179, 0.002); end
  def test_outputs_physical_implications_u179; assert_in_epsilon(25610.58492043347, worksheet.outputs_physical_implications_u179, 0.002); end
  def test_outputs_physical_implications_v179; assert_in_epsilon(27211.881748090156, worksheet.outputs_physical_implications_v179, 0.002); end
  def test_outputs_physical_implications_w179; assert_in_epsilon(28419.98331370578, worksheet.outputs_physical_implications_w179, 0.002); end
  def test_outputs_physical_implications_x179; assert_in_epsilon(29218.902760780547, worksheet.outputs_physical_implications_x179, 0.002); end
  def test_outputs_physical_implications_y179; assert_in_epsilon(29773.892307694285, worksheet.outputs_physical_implications_y179, 0.002); end
  def test_outputs_physical_implications_c180; assert_equal("Rail", worksheet.outputs_physical_implications_c180); end
  def test_outputs_physical_implications_q180; assert_in_epsilon(103.51669767223133, worksheet.outputs_physical_implications_q180, 0.002); end
  def test_outputs_physical_implications_r180; assert_in_epsilon(121.4014544854675, worksheet.outputs_physical_implications_r180, 0.002); end
  def test_outputs_physical_implications_s180; assert_in_epsilon(128.76967511036915, worksheet.outputs_physical_implications_s180, 0.002); end
  def test_outputs_physical_implications_t180; assert_in_epsilon(132.38212423447987, worksheet.outputs_physical_implications_t180, 0.002); end
  def test_outputs_physical_implications_u180; assert_in_epsilon(134.59805192460792, worksheet.outputs_physical_implications_u180, 0.002); end
  def test_outputs_physical_implications_v180; assert_in_epsilon(133.78731810881422, worksheet.outputs_physical_implications_v180, 0.002); end
  def test_outputs_physical_implications_w180; assert_in_epsilon(131.4672865457253, worksheet.outputs_physical_implications_w180, 0.002); end
  def test_outputs_physical_implications_x180; assert_in_epsilon(127.89286462468093, worksheet.outputs_physical_implications_x180, 0.002); end
  def test_outputs_physical_implications_y180; assert_in_epsilon(123.84910291748335, worksheet.outputs_physical_implications_y180, 0.002); end
  def test_outputs_physical_implications_c181; assert_equal("Plane", worksheet.outputs_physical_implications_c181); end
  def test_outputs_physical_implications_q181; assert_in_epsilon(24.99654391376603, worksheet.outputs_physical_implications_q181, 0.002); end
  def test_outputs_physical_implications_r181; assert_in_epsilon(28.474560882801253, worksheet.outputs_physical_implications_r181, 0.002); end
  def test_outputs_physical_implications_s181; assert_in_epsilon(32.21009641893264, worksheet.outputs_physical_implications_s181, 0.002); end
  def test_outputs_physical_implications_t181; assert_in_epsilon(36.417699934147166, worksheet.outputs_physical_implications_t181, 0.002); end
  def test_outputs_physical_implications_u181; assert_in_epsilon(41.19619133496992, worksheet.outputs_physical_implications_u181, 0.002); end
  def test_outputs_physical_implications_v181; assert_in_epsilon(46.675017090693515, worksheet.outputs_physical_implications_v181, 0.002); end
  def test_outputs_physical_implications_w181; assert_in_epsilon(52.99758006516992, worksheet.outputs_physical_implications_w181, 0.002); end
  def test_outputs_physical_implications_x181; assert_in_epsilon(60.32263612853494, worksheet.outputs_physical_implications_x181, 0.002); end
  def test_outputs_physical_implications_y181; assert_in_epsilon(68.83941773053482, worksheet.outputs_physical_implications_y181, 0.002); end
  def test_outputs_physical_implications_c182; assert_equal("Total", worksheet.outputs_physical_implications_c182); end
  def test_outputs_physical_implications_q182; assert_in_epsilon(1433402.1326972852, worksheet.outputs_physical_implications_q182, 0.002); end
  def test_outputs_physical_implications_r182; assert_in_epsilon(1711542.7134713936, worksheet.outputs_physical_implications_r182, 0.002); end
  def test_outputs_physical_implications_s182; assert_in_epsilon(2045096.0700146412, worksheet.outputs_physical_implications_s182, 0.002); end
  def test_outputs_physical_implications_t182; assert_in_epsilon(2374587.0990246716, worksheet.outputs_physical_implications_t182, 0.002); end
  def test_outputs_physical_implications_u182; assert_in_epsilon(2728583.683939491, worksheet.outputs_physical_implications_u182, 0.002); end
  def test_outputs_physical_implications_v182; assert_in_epsilon(3077127.3781504524, worksheet.outputs_physical_implications_v182, 0.002); end
  def test_outputs_physical_implications_w182; assert_in_epsilon(3428622.098848123, worksheet.outputs_physical_implications_w182, 0.002); end
  def test_outputs_physical_implications_x182; assert_in_epsilon(3776619.2043783357, worksheet.outputs_physical_implications_x182, 0.002); end
  def test_outputs_physical_implications_y182; assert_in_epsilon(4136990.7543467083, worksheet.outputs_physical_implications_y182, 0.002); end
  def test_outputs_physical_implications_q48; assert_in_delta(0.8432926393963501, worksheet.outputs_physical_implications_q48, 0.002); end
  def test_outputs_physical_implications_y48; assert_in_delta(0.9389292544041041, worksheet.outputs_physical_implications_y48, 0.002); end
  def test_outputs_physical_implications_q9; assert_in_epsilon(6966439712.0, worksheet.outputs_physical_implications_q9, 0.002); end
  def test_outputs_physical_implications_y9; assert_in_epsilon(9550945000.0, worksheet.outputs_physical_implications_y9, 0.002); end
  def test_outputs_physical_implications_q35; assert_in_epsilon(833660013.8618993, worksheet.outputs_physical_implications_q35, 0.002); end
  def test_outputs_physical_implications_y35; assert_in_epsilon(917809553.0459162, worksheet.outputs_physical_implications_y35, 0.002); end
  def test_outputs_physical_implications_q30; assert_in_epsilon(1452719862.6209612, worksheet.outputs_physical_implications_q30, 0.002); end
  def test_outputs_physical_implications_y30; assert_in_epsilon(2881187074.6996784, worksheet.outputs_physical_implications_y30, 0.002); end
  def test_outputs_physical_implications_q21; assert_in_delta(0.5213279389034929, worksheet.outputs_physical_implications_q21, 0.002); end
  def test_outputs_physical_implications_y21; assert_in_delta(0.663663288223238, worksheet.outputs_physical_implications_y21, 0.002); end
  def test_outputs_costs_c7; assert_equal("Sector", worksheet.outputs_costs_c7); end
  def test_outputs_costs_d7; assert_equal("Sector number", worksheet.outputs_costs_d7); end
  def test_outputs_costs_f7; assert_equal("Low", worksheet.outputs_costs_f7); end
  def test_outputs_costs_g7; assert_equal("Point", worksheet.outputs_costs_g7); end
  def test_outputs_costs_h7; assert_equal("High", worksheet.outputs_costs_h7); end
  def test_outputs_costs_c8; assert_equal("Transport", worksheet.outputs_costs_c8); end
  def test_outputs_costs_d8; assert_in_epsilon(10.0, worksheet.outputs_costs_d8, 0.002); end
  def test_outputs_costs_f8; assert_in_epsilon(21786.713995466358, worksheet.outputs_costs_f8, 0.002); end
  def test_outputs_costs_g8; assert_in_epsilon(31885.957323359973, worksheet.outputs_costs_g8, 0.002); end
  def test_outputs_costs_h8; assert_in_epsilon(56345.45586106605, worksheet.outputs_costs_h8, 0.002); end
  def test_outputs_costs_c9; assert_equal("Buildings", worksheet.outputs_costs_c9); end
  def test_outputs_costs_d9; assert_in_epsilon(20.0, worksheet.outputs_costs_d9, 0.002); end
  def test_outputs_costs_f9; assert_in_epsilon(7537.615625149637, worksheet.outputs_costs_f9, 0.002); end
  def test_outputs_costs_g9; assert_in_epsilon(9290.897540593345, worksheet.outputs_costs_g9, 0.002); end
  def test_outputs_costs_h9; assert_in_epsilon(11055.439465760273, worksheet.outputs_costs_h9, 0.002); end
  def test_outputs_costs_c10; assert_equal("Manufacturing", worksheet.outputs_costs_c10); end
  def test_outputs_costs_d10; assert_in_epsilon(30.0, worksheet.outputs_costs_d10, 0.002); end
  def test_outputs_costs_f10; assert_in_epsilon(458.7377368128317, worksheet.outputs_costs_f10, 0.002); end
  def test_outputs_costs_g10; assert_in_epsilon(785.6170917553462, worksheet.outputs_costs_g10, 0.002); end
  def test_outputs_costs_h10; assert_in_epsilon(1093.1761406353446, worksheet.outputs_costs_h10, 0.002); end
  def test_outputs_costs_c11; assert_equal("Power", worksheet.outputs_costs_c11); end
  def test_outputs_costs_d11; assert_in_epsilon(40.0, worksheet.outputs_costs_d11, 0.002); end
  def test_outputs_costs_f11; assert_in_epsilon(4256.111692417933, worksheet.outputs_costs_f11, 0.002); end
  def test_outputs_costs_g11; assert_in_epsilon(5053.493816560874, worksheet.outputs_costs_g11, 0.002); end
  def test_outputs_costs_h11; assert_in_epsilon(5850.875940703813, worksheet.outputs_costs_h11, 0.002); end
  def test_outputs_costs_c12; assert_equal("Total capital and operating costs", worksheet.outputs_costs_c12); end
  def test_outputs_costs_f12; assert_in_epsilon(34039.17904984679, worksheet.outputs_costs_f12, 0.002); end
  def test_outputs_costs_g12; assert_in_epsilon(47015.965772269556, worksheet.outputs_costs_g12, 0.002); end
  def test_outputs_costs_h12; assert_in_epsilon(74344.9474081655, worksheet.outputs_costs_h12, 0.002); end
  def test_outputs_costs_j713; assert_equal("2011", worksheet.outputs_costs_j713); end
  def test_outputs_costs_k713; assert_equal("2015", worksheet.outputs_costs_k713); end
  def test_outputs_costs_l713; assert_equal("2020", worksheet.outputs_costs_l713); end
  def test_outputs_costs_m713; assert_equal("2025", worksheet.outputs_costs_m713); end
  def test_outputs_costs_n713; assert_equal("2030", worksheet.outputs_costs_n713); end
  def test_outputs_costs_o713; assert_equal("2035", worksheet.outputs_costs_o713); end
  def test_outputs_costs_p713; assert_equal("2040", worksheet.outputs_costs_p713); end
  def test_outputs_costs_q713; assert_equal("2045", worksheet.outputs_costs_q713); end
  def test_outputs_costs_r713; assert_equal("2050", worksheet.outputs_costs_r713); end
  def test_outputs_costs_c714; assert_equal("Capital costs (including finance)", worksheet.outputs_costs_c714); end
  def test_outputs_costs_j714; assert_in_epsilon(19152.704286787197, worksheet.outputs_costs_j714, 0.002); end
  def test_outputs_costs_k714; assert_in_epsilon(27117.970888461696, worksheet.outputs_costs_k714, 0.002); end
  def test_outputs_costs_l714; assert_in_epsilon(31287.818925534182, worksheet.outputs_costs_l714, 0.002); end
  def test_outputs_costs_m714; assert_in_epsilon(38032.283388147334, worksheet.outputs_costs_m714, 0.002); end
  def test_outputs_costs_n714; assert_in_epsilon(42946.93354688847, worksheet.outputs_costs_n714, 0.002); end
  def test_outputs_costs_o714; assert_in_epsilon(48501.456928006926, worksheet.outputs_costs_o714, 0.002); end
  def test_outputs_costs_p714; assert_in_epsilon(55185.07514509606, worksheet.outputs_costs_p714, 0.002); end
  def test_outputs_costs_q714; assert_in_epsilon(62027.97812541837, worksheet.outputs_costs_q714, 0.002); end
  def test_outputs_costs_r714; assert_in_epsilon(70323.71309093428, worksheet.outputs_costs_r714, 0.002); end
  def test_outputs_costs_c715; assert_equal("Operating costs", worksheet.outputs_costs_c715); end
  def test_outputs_costs_j715; assert_in_epsilon(1357.5699695226626, worksheet.outputs_costs_j715, 0.002); end
  def test_outputs_costs_k715; assert_in_epsilon(1674.9004332423035, worksheet.outputs_costs_k715, 0.002); end
  def test_outputs_costs_l715; assert_in_epsilon(1971.8113393632932, worksheet.outputs_costs_l715, 0.002); end
  def test_outputs_costs_m715; assert_in_epsilon(2265.481534984109, worksheet.outputs_costs_m715, 0.002); end
  def test_outputs_costs_n715; assert_in_epsilon(2600.195891280862, worksheet.outputs_costs_n715, 0.002); end
  def test_outputs_costs_o715; assert_in_epsilon(2901.9590170989172, worksheet.outputs_costs_o715, 0.002); end
  def test_outputs_costs_p715; assert_in_epsilon(3232.032869307411, worksheet.outputs_costs_p715, 0.002); end
  def test_outputs_costs_q715; assert_in_epsilon(3590.665883729776, worksheet.outputs_costs_q715, 0.002); end
  def test_outputs_costs_r715; assert_in_epsilon(4021.23431723121, worksheet.outputs_costs_r715, 0.002); end
  def test_outputs_costs_c716; assert_equal("Fuel costs", worksheet.outputs_costs_c716); end
  def test_outputs_costs_j716; assert_in_epsilon(2396.555016004285, worksheet.outputs_costs_j716, 0.002); end
  def test_outputs_costs_k716; assert_in_epsilon(2802.4229593345226, worksheet.outputs_costs_k716, 0.002); end
  def test_outputs_costs_l716; assert_in_epsilon(3464.673697292648, worksheet.outputs_costs_l716, 0.002); end
  def test_outputs_costs_m716; assert_in_epsilon(4157.451222191966, worksheet.outputs_costs_m716, 0.002); end
  def test_outputs_costs_n716; assert_in_epsilon(4882.96288335512, worksheet.outputs_costs_n716, 0.002); end
  def test_outputs_costs_o716; assert_in_epsilon(5580.759841525412, worksheet.outputs_costs_o716, 0.002); end
  def test_outputs_costs_p716; assert_in_epsilon(6362.745435791156, worksheet.outputs_costs_p716, 0.002); end
  def test_outputs_costs_q716; assert_in_epsilon(7181.36258237357, worksheet.outputs_costs_q716, 0.002); end
  def test_outputs_costs_r716; assert_in_epsilon(8047.8172485546065, worksheet.outputs_costs_r716, 0.002); end
  def test_outputs_costs_c717; assert_equal("Total", worksheet.outputs_costs_c717); end
  def test_outputs_costs_j717; assert_in_epsilon(22906.829272314142, worksheet.outputs_costs_j717, 0.002); end
  def test_outputs_costs_k717; assert_in_epsilon(31595.29428103852, worksheet.outputs_costs_k717, 0.002); end
  def test_outputs_costs_l717; assert_in_epsilon(36724.30396219012, worksheet.outputs_costs_l717, 0.002); end
  def test_outputs_costs_m717; assert_in_epsilon(44455.21614532341, worksheet.outputs_costs_m717, 0.002); end
  def test_outputs_costs_n717; assert_in_epsilon(50430.09232152445, worksheet.outputs_costs_n717, 0.002); end
  def test_outputs_costs_o717; assert_in_epsilon(56984.175786631255, worksheet.outputs_costs_o717, 0.002); end
  def test_outputs_costs_p717; assert_in_epsilon(64779.85345019463, worksheet.outputs_costs_p717, 0.002); end
  def test_outputs_costs_q717; assert_in_epsilon(72800.00659152171, worksheet.outputs_costs_q717, 0.002); end
  def test_outputs_costs_r717; assert_in_epsilon(82392.7646567201, worksheet.outputs_costs_r717, 0.002); end
  def test_outputs_costs_j735; assert_equal("2011", worksheet.outputs_costs_j735); end
  def test_outputs_costs_k735; assert_equal("2015", worksheet.outputs_costs_k735); end
  def test_outputs_costs_l735; assert_equal("2020", worksheet.outputs_costs_l735); end
  def test_outputs_costs_m735; assert_equal("2025", worksheet.outputs_costs_m735); end
  def test_outputs_costs_n735; assert_equal("2030", worksheet.outputs_costs_n735); end
  def test_outputs_costs_o735; assert_equal("2035", worksheet.outputs_costs_o735); end
  def test_outputs_costs_p735; assert_equal("2040", worksheet.outputs_costs_p735); end
  def test_outputs_costs_q735; assert_equal("2045", worksheet.outputs_costs_q735); end
  def test_outputs_costs_r735; assert_equal("2050", worksheet.outputs_costs_r735); end
  def test_outputs_costs_c736; assert_equal("Capital costs (including finance)", worksheet.outputs_costs_c736); end
  def test_outputs_costs_j736; assert_in_epsilon(19137.516626202043, worksheet.outputs_costs_j736, 0.002); end
  def test_outputs_costs_k736; assert_in_epsilon(24657.831731755527, worksheet.outputs_costs_k736, 0.002); end
  def test_outputs_costs_l736; assert_in_epsilon(25795.258889526565, worksheet.outputs_costs_l736, 0.002); end
  def test_outputs_costs_m736; assert_in_epsilon(28423.326866726435, worksheet.outputs_costs_m736, 0.002); end
  def test_outputs_costs_n736; assert_in_epsilon(28591.483064370877, worksheet.outputs_costs_n736, 0.002); end
  def test_outputs_costs_o736; assert_in_epsilon(29028.281107797346, worksheet.outputs_costs_o736, 0.002); end
  def test_outputs_costs_p736; assert_in_epsilon(29953.71151743676, worksheet.outputs_costs_p736, 0.002); end
  def test_outputs_costs_q736; assert_in_epsilon(30447.598317225296, worksheet.outputs_costs_q736, 0.002); end
  def test_outputs_costs_r736; assert_in_epsilon(31371.34259449826, worksheet.outputs_costs_r736, 0.002); end
  def test_outputs_costs_c737; assert_equal("Operating costs", worksheet.outputs_costs_c737); end
  def test_outputs_costs_j737; assert_in_epsilon(1324.6025113007345, worksheet.outputs_costs_j737, 0.002); end
  def test_outputs_costs_k737; assert_in_epsilon(1579.9027118119795, worksheet.outputs_costs_k737, 0.002); end
  def test_outputs_costs_l737; assert_in_epsilon(1776.8615205970498, worksheet.outputs_costs_l737, 0.002); end
  def test_outputs_costs_m737; assert_in_epsilon(1947.0123390230553, worksheet.outputs_costs_m737, 0.002); end
  def test_outputs_costs_n737; assert_in_epsilon(2129.1270130969438, worksheet.outputs_costs_n737, 0.002); end
  def test_outputs_costs_o737; assert_in_epsilon(2259.9634992905803, worksheet.outputs_costs_o737, 0.002); end
  def test_outputs_costs_p737; assert_in_epsilon(2390.467334877573, worksheet.outputs_costs_p737, 0.002); end
  def test_outputs_costs_q737; assert_in_epsilon(2517.926466548235, worksheet.outputs_costs_q737, 0.002); end
  def test_outputs_costs_r737; assert_in_epsilon(2667.8364553485235, worksheet.outputs_costs_r737, 0.002); end
  def test_outputs_costs_c738; assert_equal("Fuel costs", worksheet.outputs_costs_c738); end
  def test_outputs_costs_j738; assert_in_epsilon(2396.555016004285, worksheet.outputs_costs_j738, 0.002); end
  def test_outputs_costs_k738; assert_in_epsilon(2456.2708767383097, worksheet.outputs_costs_k738, 0.002); end
  def test_outputs_costs_l738; assert_in_epsilon(2576.304727629516, worksheet.outputs_costs_l738, 0.002); end
  def test_outputs_costs_m738; assert_in_epsilon(2635.6824835935386, worksheet.outputs_costs_m738, 0.002); end
  def test_outputs_costs_n738; assert_in_epsilon(2645.3132456462768, worksheet.outputs_costs_n738, 0.002); end
  def test_outputs_costs_o738; assert_in_epsilon(2590.1827964399395, worksheet.outputs_costs_o738, 0.002); end
  def test_outputs_costs_p738; assert_in_epsilon(2525.8914791239954, worksheet.outputs_costs_p738, 0.002); end
  def test_outputs_costs_q738; assert_in_epsilon(2436.470507512779, worksheet.outputs_costs_q738, 0.002); end
  def test_outputs_costs_r738; assert_in_epsilon(2336.766675377256, worksheet.outputs_costs_r738, 0.002); end
  def test_outputs_costs_c739; assert_equal("Total", worksheet.outputs_costs_c739); end
  def test_outputs_costs_j739; assert_in_epsilon(22858.67415350706, worksheet.outputs_costs_j739, 0.002); end
  def test_outputs_costs_k739; assert_in_epsilon(28694.005320305816, worksheet.outputs_costs_k739, 0.002); end
  def test_outputs_costs_l739; assert_in_epsilon(30148.42513775313, worksheet.outputs_costs_l739, 0.002); end
  def test_outputs_costs_m739; assert_in_epsilon(33006.021689343026, worksheet.outputs_costs_m739, 0.002); end
  def test_outputs_costs_n739; assert_in_epsilon(33365.9233231141, worksheet.outputs_costs_n739, 0.002); end
  def test_outputs_costs_o739; assert_in_epsilon(33878.427403527865, worksheet.outputs_costs_o739, 0.002); end
  def test_outputs_costs_p739; assert_in_epsilon(34870.07033143833, worksheet.outputs_costs_p739, 0.002); end
  def test_outputs_costs_q739; assert_in_epsilon(35401.99529128631, worksheet.outputs_costs_q739, 0.002); end
  def test_outputs_costs_r739; assert_in_epsilon(36375.94572522404, worksheet.outputs_costs_r739, 0.002); end
  def test_outputs_costs_j724; assert_equal("2011", worksheet.outputs_costs_j724); end
  def test_outputs_costs_k724; assert_equal("2015", worksheet.outputs_costs_k724); end
  def test_outputs_costs_l724; assert_equal("2020", worksheet.outputs_costs_l724); end
  def test_outputs_costs_m724; assert_equal("2025", worksheet.outputs_costs_m724); end
  def test_outputs_costs_n724; assert_equal("2030", worksheet.outputs_costs_n724); end
  def test_outputs_costs_o724; assert_equal("2035", worksheet.outputs_costs_o724); end
  def test_outputs_costs_p724; assert_equal("2040", worksheet.outputs_costs_p724); end
  def test_outputs_costs_q724; assert_equal("2045", worksheet.outputs_costs_q724); end
  def test_outputs_costs_r724; assert_equal("2050", worksheet.outputs_costs_r724); end
  def test_outputs_costs_c725; assert_equal("Capital costs (including finance)", worksheet.outputs_costs_c725); end
  def test_outputs_costs_j725; assert_in_epsilon(19142.816038090856, worksheet.outputs_costs_j725, 0.002); end
  def test_outputs_costs_k725; assert_in_epsilon(25352.18762126696, worksheet.outputs_costs_k725, 0.002); end
  def test_outputs_costs_l725; assert_in_epsilon(27395.23332072616, worksheet.outputs_costs_l725, 0.002); end
  def test_outputs_costs_m725; assert_in_epsilon(31255.272441826783, worksheet.outputs_costs_m725, 0.002); end
  def test_outputs_costs_n725; assert_in_epsilon(32896.40613683926, worksheet.outputs_costs_n725, 0.002); end
  def test_outputs_costs_o725; assert_in_epsilon(34926.84371379758, worksheet.outputs_costs_o725, 0.002); end
  def test_outputs_costs_p725; assert_in_epsilon(37706.16746055901, worksheet.outputs_costs_p725, 0.002); end
  def test_outputs_costs_q725; assert_in_epsilon(40278.5552752675, worksheet.outputs_costs_q725, 0.002); end
  def test_outputs_costs_r725; assert_in_epsilon(43672.45154274712, worksheet.outputs_costs_r725, 0.002); end
  def test_outputs_costs_c726; assert_equal("Operating costs", worksheet.outputs_costs_c726); end
  def test_outputs_costs_j726; assert_in_epsilon(1339.8935158425315, worksheet.outputs_costs_j726, 0.002); end
  def test_outputs_costs_k726; assert_in_epsilon(1626.2212003314778, worksheet.outputs_costs_k726, 0.002); end
  def test_outputs_costs_l726; assert_in_epsilon(1873.17992728464, worksheet.outputs_costs_l726, 0.002); end
  def test_outputs_costs_m726; assert_in_epsilon(2105.113919619314, worksheet.outputs_costs_m726, 0.002); end
  def test_outputs_costs_n726; assert_in_epsilon(2363.5515416645867, worksheet.outputs_costs_n726, 0.002); end
  def test_outputs_costs_o726; assert_in_epsilon(2579.874081702936, worksheet.outputs_costs_o726, 0.002); end
  def test_outputs_costs_p726; assert_in_epsilon(2810.185292318706, worksheet.outputs_costs_p726, 0.002); end
  def test_outputs_costs_q726; assert_in_epsilon(3053.2533701735897, worksheet.outputs_costs_q726, 0.002); end
  def test_outputs_costs_r726; assert_in_epsilon(3343.514229522437, worksheet.outputs_costs_r726, 0.002); end
  def test_outputs_costs_c727; assert_equal("Fuel costs", worksheet.outputs_costs_c727); end
  def test_outputs_costs_j727; assert_in_epsilon(2396.555016004285, worksheet.outputs_costs_j727, 0.002); end
  def test_outputs_costs_k727; assert_in_epsilon(2602.9308481185058, worksheet.outputs_costs_k727, 0.002); end
  def test_outputs_costs_l727; assert_in_epsilon(2951.7661971131047, worksheet.outputs_costs_l727, 0.002); end
  def test_outputs_costs_m727; assert_in_epsilon(3280.1777929115115, worksheet.outputs_costs_m727, 0.002); end
  def test_outputs_costs_n727; assert_in_epsilon(3594.235222305036, worksheet.outputs_costs_n727, 0.002); end
  def test_outputs_costs_o727; assert_in_epsilon(3859.9506594878144, worksheet.outputs_costs_o727, 0.002); end
  def test_outputs_costs_p727; assert_in_epsilon(4154.961382787088, worksheet.outputs_costs_p727, 0.002); end
  def test_outputs_costs_q727; assert_in_epsilon(4447.076792690812, worksheet.outputs_costs_q727, 0.002); end
  def test_outputs_costs_r727; assert_in_epsilon(4756.439786632163, worksheet.outputs_costs_r727, 0.002); end
  def test_outputs_costs_c728; assert_equal("Total", worksheet.outputs_costs_c728); end
  def test_outputs_costs_j728; assert_in_epsilon(22879.26456993767, worksheet.outputs_costs_j728, 0.002); end
  def test_outputs_costs_k728; assert_in_epsilon(29581.339669716945, worksheet.outputs_costs_k728, 0.002); end
  def test_outputs_costs_l728; assert_in_epsilon(32220.179445123907, worksheet.outputs_costs_l728, 0.002); end
  def test_outputs_costs_m728; assert_in_epsilon(36640.564154357606, worksheet.outputs_costs_m728, 0.002); end
  def test_outputs_costs_n728; assert_in_epsilon(38854.19290080888, worksheet.outputs_costs_n728, 0.002); end
  def test_outputs_costs_o728; assert_in_epsilon(41366.66845498833, worksheet.outputs_costs_o728, 0.002); end
  def test_outputs_costs_p728; assert_in_epsilon(44671.3141356648, worksheet.outputs_costs_p728, 0.002); end
  def test_outputs_costs_q728; assert_in_epsilon(47778.885438131896, worksheet.outputs_costs_q728, 0.002); end
  def test_outputs_costs_r728; assert_in_epsilon(51772.40555890172, worksheet.outputs_costs_r728, 0.002); end
  def test_outputs_costs_c746; assert_equal("Year", worksheet.outputs_costs_c746); end
  def test_outputs_costs_j746; assert_equal("2011", worksheet.outputs_costs_j746); end
  def test_outputs_costs_k746; assert_equal("2015", worksheet.outputs_costs_k746); end
  def test_outputs_costs_l746; assert_equal("2020", worksheet.outputs_costs_l746); end
  def test_outputs_costs_m746; assert_equal("2025", worksheet.outputs_costs_m746); end
  def test_outputs_costs_n746; assert_equal("2030", worksheet.outputs_costs_n746); end
  def test_outputs_costs_o746; assert_equal("2035", worksheet.outputs_costs_o746); end
  def test_outputs_costs_p746; assert_equal("2040", worksheet.outputs_costs_p746); end
  def test_outputs_costs_q746; assert_equal("2045", worksheet.outputs_costs_q746); end
  def test_outputs_costs_r746; assert_equal("2050", worksheet.outputs_costs_r746); end
  def test_outputs_costs_c747; assert_equal("High", worksheet.outputs_costs_c747); end
  def test_outputs_costs_j747; assert_in_epsilon(22906.829272314142, worksheet.outputs_costs_j747, 0.002); end
  def test_outputs_costs_k747; assert_in_epsilon(31595.29428103852, worksheet.outputs_costs_k747, 0.002); end
  def test_outputs_costs_l747; assert_in_epsilon(36724.30396219012, worksheet.outputs_costs_l747, 0.002); end
  def test_outputs_costs_m747; assert_in_epsilon(44455.21614532341, worksheet.outputs_costs_m747, 0.002); end
  def test_outputs_costs_n747; assert_in_epsilon(50430.09232152445, worksheet.outputs_costs_n747, 0.002); end
  def test_outputs_costs_o747; assert_in_epsilon(56984.175786631255, worksheet.outputs_costs_o747, 0.002); end
  def test_outputs_costs_p747; assert_in_epsilon(64779.85345019463, worksheet.outputs_costs_p747, 0.002); end
  def test_outputs_costs_q747; assert_in_epsilon(72800.00659152171, worksheet.outputs_costs_q747, 0.002); end
  def test_outputs_costs_r747; assert_in_epsilon(82392.7646567201, worksheet.outputs_costs_r747, 0.002); end
  def test_outputs_costs_c748; assert_equal("Point", worksheet.outputs_costs_c748); end
  def test_outputs_costs_j748; assert_in_epsilon(22879.26456993767, worksheet.outputs_costs_j748, 0.002); end
  def test_outputs_costs_k748; assert_in_epsilon(29581.339669716945, worksheet.outputs_costs_k748, 0.002); end
  def test_outputs_costs_l748; assert_in_epsilon(32220.179445123907, worksheet.outputs_costs_l748, 0.002); end
  def test_outputs_costs_m748; assert_in_epsilon(36640.564154357606, worksheet.outputs_costs_m748, 0.002); end
  def test_outputs_costs_n748; assert_in_epsilon(38854.19290080888, worksheet.outputs_costs_n748, 0.002); end
  def test_outputs_costs_o748; assert_in_epsilon(41366.66845498833, worksheet.outputs_costs_o748, 0.002); end
  def test_outputs_costs_p748; assert_in_epsilon(44671.3141356648, worksheet.outputs_costs_p748, 0.002); end
  def test_outputs_costs_q748; assert_in_epsilon(47778.885438131896, worksheet.outputs_costs_q748, 0.002); end
  def test_outputs_costs_r748; assert_in_epsilon(51772.40555890172, worksheet.outputs_costs_r748, 0.002); end
  def test_outputs_costs_c749; assert_equal("Low", worksheet.outputs_costs_c749); end
  def test_outputs_costs_j749; assert_in_epsilon(22858.67415350706, worksheet.outputs_costs_j749, 0.002); end
  def test_outputs_costs_k749; assert_in_epsilon(28694.005320305816, worksheet.outputs_costs_k749, 0.002); end
  def test_outputs_costs_l749; assert_in_epsilon(30148.42513775313, worksheet.outputs_costs_l749, 0.002); end
  def test_outputs_costs_m749; assert_in_epsilon(33006.021689343026, worksheet.outputs_costs_m749, 0.002); end
  def test_outputs_costs_n749; assert_in_epsilon(33365.9233231141, worksheet.outputs_costs_n749, 0.002); end
  def test_outputs_costs_o749; assert_in_epsilon(33878.427403527865, worksheet.outputs_costs_o749, 0.002); end
  def test_outputs_costs_p749; assert_in_epsilon(34870.07033143833, worksheet.outputs_costs_p749, 0.002); end
  def test_outputs_costs_q749; assert_in_epsilon(35401.99529128631, worksheet.outputs_costs_q749, 0.002); end
  def test_outputs_costs_r749; assert_in_epsilon(36375.94572522404, worksheet.outputs_costs_r749, 0.002); end
  def test_outputs_costs_br654; assert_in_epsilon(631.4576850655924, worksheet.outputs_costs_br654, 0.002); end
  def test_outputs_costs_br655; assert_in_epsilon(1930.432747087418, worksheet.outputs_costs_br655, 0.002); end
  def test_outputs_costs_br656; assert_in_epsilon(598.6416516431087, worksheet.outputs_costs_br656, 0.002); end
  def test_outputs_costs_br657; assert_in_epsilon(297.91433197428546, worksheet.outputs_costs_br657, 0.002); end
  def test_outputs_costs_br658; assert_in_epsilon(64.24754635386682, worksheet.outputs_costs_br658, 0.002); end
  def test_outputs_costs_br659; assert_in_epsilon(20.074356290853306, worksheet.outputs_costs_br659, 0.002); end
  def test_outputs_costs_br660; assert_in_epsilon(6.389075573885281, worksheet.outputs_costs_br660, 0.002); end
  def test_outputs_costs_br669; assert_in_epsilon(773.117438995051, worksheet.outputs_costs_br669, 0.002); end
  def test_outputs_costs_br670; assert_in_epsilon(3082.2546712152475, worksheet.outputs_costs_br670, 0.002); end
  def test_outputs_costs_br671; assert_in_epsilon(672.8701521928908, worksheet.outputs_costs_br671, 0.002); end
  def test_outputs_costs_br672; assert_in_epsilon(339.72907047266375, worksheet.outputs_costs_br672, 0.002); end
  def test_outputs_costs_br673; assert_in_epsilon(75.08370744386875, worksheet.outputs_costs_br673, 0.002); end
  def test_outputs_costs_br674; assert_in_epsilon(23.371807992047042, worksheet.outputs_costs_br674, 0.002); end
  def test_outputs_costs_br675; assert_in_epsilon(7.725850616311146, worksheet.outputs_costs_br675, 0.002); end
  def test_outputs_costs_br699; assert_in_epsilon(450.1332000358854, worksheet.outputs_costs_br699, 0.002); end
  def test_outputs_costs_br700; assert_in_epsilon(1205.211535599526, worksheet.outputs_costs_br700, 0.002); end
  def test_outputs_costs_br701; assert_in_epsilon(475.4898211855155, worksheet.outputs_costs_br701, 0.002); end
  def test_outputs_costs_br702; assert_in_epsilon(283.9760858081593, worksheet.outputs_costs_br702, 0.002); end
  def test_outputs_costs_br703; assert_in_epsilon(60.63549265719951, worksheet.outputs_costs_br703, 0.002); end
  def test_outputs_costs_br704; assert_in_epsilon(18.97520572378873, worksheet.outputs_costs_br704, 0.002); end
  def test_outputs_costs_br705; assert_in_epsilon(5.943483893076657, worksheet.outputs_costs_br705, 0.002); end
  def test_outputs_costs_br684; assert_in_epsilon(631.4576850655924, worksheet.outputs_costs_br684, 0.002); end
  def test_outputs_costs_br685; assert_in_epsilon(1930.432747087418, worksheet.outputs_costs_br685, 0.002); end
  def test_outputs_costs_br686; assert_in_epsilon(598.6416516431087, worksheet.outputs_costs_br686, 0.002); end
  def test_outputs_costs_br687; assert_in_epsilon(297.91433197428546, worksheet.outputs_costs_br687, 0.002); end
  def test_outputs_costs_br688; assert_in_epsilon(64.24754635386682, worksheet.outputs_costs_br688, 0.002); end
  def test_outputs_costs_br689; assert_in_epsilon(20.074356290853306, worksheet.outputs_costs_br689, 0.002); end
  def test_outputs_costs_br690; assert_in_epsilon(6.389075573885281, worksheet.outputs_costs_br690, 0.002); end
  def test_outputs_costs_c18; assert_equal("Cost", worksheet.outputs_costs_c18); end
  def test_outputs_costs_e18; assert_equal("Chosen cost", worksheet.outputs_costs_e18); end
  def test_outputs_costs_f18; assert_equal("Low", worksheet.outputs_costs_f18); end
  def test_outputs_costs_g18; assert_equal("Point", worksheet.outputs_costs_g18); end
  def test_outputs_costs_h18; assert_equal("High", worksheet.outputs_costs_h18); end
  def test_outputs_costs_c19; assert_equal("Fuel", worksheet.outputs_costs_c19); end
  def test_outputs_costs_e19; assert_in_epsilon(3549.1573939890095, worksheet.outputs_costs_e19, 0.002); end
  def test_outputs_costs_f19; assert_in_epsilon(2500.364824903151, worksheet.outputs_costs_f19, 0.002); end
  def test_outputs_costs_g19; assert_in_epsilon(3549.1573939890095, worksheet.outputs_costs_g19, 0.002); end
  def test_outputs_costs_h19; assert_in_epsilon(4974.15269892808, worksheet.outputs_costs_h19, 0.002); end
  def test_outputs_costs_c25; assert_equal("Scenario", worksheet.outputs_costs_c25); end
  def test_outputs_costs_j25; assert_equal("2011", worksheet.outputs_costs_j25); end
  def test_outputs_costs_k25; assert_equal("2015", worksheet.outputs_costs_k25); end
  def test_outputs_costs_l25; assert_equal("2020", worksheet.outputs_costs_l25); end
  def test_outputs_costs_m25; assert_equal("2025", worksheet.outputs_costs_m25); end
  def test_outputs_costs_n25; assert_equal("2030", worksheet.outputs_costs_n25); end
  def test_outputs_costs_o25; assert_equal("2035", worksheet.outputs_costs_o25); end
  def test_outputs_costs_p25; assert_equal("2040", worksheet.outputs_costs_p25); end
  def test_outputs_costs_q25; assert_equal("2045", worksheet.outputs_costs_q25); end
  def test_outputs_costs_r25; assert_equal("2050", worksheet.outputs_costs_r25); end
  def test_outputs_costs_c26; assert_equal("Global GDP", worksheet.outputs_costs_c26); end
  def test_outputs_costs_j26; assert_in_epsilon(67175.5376197859, worksheet.outputs_costs_j26, 0.002); end
  def test_outputs_costs_k26; assert_in_epsilon(76371.7262877051, worksheet.outputs_costs_k26, 0.002); end
  def test_outputs_costs_l26; assert_in_epsilon(91376.4988938779, worksheet.outputs_costs_l26, 0.002); end
  def test_outputs_costs_m26; assert_in_epsilon(107214.416539545, worksheet.outputs_costs_m26, 0.002); end
  def test_outputs_costs_n26; assert_in_epsilon(124607.262631566, worksheet.outputs_costs_n26, 0.002); end
  def test_outputs_costs_o26; assert_in_epsilon(143612.795634057, worksheet.outputs_costs_o26, 0.002); end
  def test_outputs_costs_p26; assert_in_epsilon(163745.90956641, worksheet.outputs_costs_p26, 0.002); end
  def test_outputs_costs_q26; assert_in_epsilon(184019.80808994902, worksheet.outputs_costs_q26, 0.002); end
  def test_outputs_costs_r26; assert_in_epsilon(204480.970522059, worksheet.outputs_costs_r26, 0.002); end
  def test_outputs_costs_j27; assert_in_epsilon(409.0, worksheet.outputs_costs_j27, 0.002); end
  def test_outputs_costs_nb38; assert_in_epsilon(151.97711102293326, worksheet.outputs_costs_nb38, 0.002); end
  def test_outputs_costs_nb39; assert_in_epsilon(385.60161705285407, worksheet.outputs_costs_nb39, 0.002); end
  def test_outputs_costs_nb40; assert_in_epsilon(330.04054211632086, worksheet.outputs_costs_nb40, 0.002); end
  def test_outputs_costs_nb41; assert_in_epsilon(7715.088504583857, worksheet.outputs_costs_nb41, 0.002); end
  def test_outputs_costs_nb42; assert_in_epsilon(178.1489043113128, worksheet.outputs_costs_nb42, 0.002); end
  def test_outputs_costs_nb43; assert_in_epsilon(785.7484088178305, worksheet.outputs_costs_nb43, 0.002); end
  def test_outputs_costs_nb44; assert_in_epsilon(397.14524360493493, worksheet.outputs_costs_nb44, 0.002); end
  def test_outputs_costs_nb45; assert_in_delta(0.0, (worksheet.outputs_costs_nb45||0), 0.002); end
  def test_outputs_costs_nb46; assert_in_epsilon(665.7400151887257, worksheet.outputs_costs_nb46, 0.002); end
  def test_outputs_costs_nb47; assert_in_epsilon(27.4054019714403, worksheet.outputs_costs_nb47, 0.002); end
  def test_outputs_costs_nb48; assert_in_epsilon(34.710535319555845, worksheet.outputs_costs_nb48, 0.002); end
  def test_outputs_costs_nb49; assert_in_epsilon(10.508356657496527, worksheet.outputs_costs_nb49, 0.002); end
  def test_outputs_costs_nb50; assert_in_delta(0.0, (worksheet.outputs_costs_nb50||0), 0.002); end
  def test_outputs_costs_nb51; assert_in_epsilon(47.98235746096976, worksheet.outputs_costs_nb51, 0.002); end
  def test_outputs_costs_nb52; assert_in_epsilon(33.0082309604633, worksheet.outputs_costs_nb52, 0.002); end
  def test_outputs_costs_nb53; assert_in_epsilon(60.705918958753685, worksheet.outputs_costs_nb53, 0.002); end
  def test_outputs_costs_nb54; assert_in_epsilon(245.38537570483948, worksheet.outputs_costs_nb54, 0.002); end
  def test_outputs_costs_nb55; assert_in_epsilon(207.4741658871571, worksheet.outputs_costs_nb55, 0.002); end
  def test_outputs_costs_nb56; assert_in_epsilon(2694.5567155894755, worksheet.outputs_costs_nb56, 0.002); end
  def test_outputs_costs_nb57; assert_in_epsilon(65.50905934427527, worksheet.outputs_costs_nb57, 0.002); end
  def test_outputs_costs_nb58; assert_in_epsilon(243.55831986077624, worksheet.outputs_costs_nb58, 0.002); end
  def test_outputs_costs_nb59; assert_in_epsilon(117.2022706080528, worksheet.outputs_costs_nb59, 0.002); end
  def test_outputs_costs_nb60; assert_in_delta(0.0, (worksheet.outputs_costs_nb60||0), 0.002); end
  def test_outputs_costs_nb61; assert_in_epsilon(98.37438429468043, worksheet.outputs_costs_nb61, 0.002); end
  def test_outputs_costs_nb62; assert_in_epsilon(4.026002417728337, worksheet.outputs_costs_nb62, 0.002); end
  def test_outputs_costs_nb63; assert_in_epsilon(5.090535673184949, worksheet.outputs_costs_nb63, 0.002); end
  def test_outputs_costs_nb64; assert_in_epsilon(1.513185446813158, worksheet.outputs_costs_nb64, 0.002); end
  def test_outputs_costs_nb65; assert_in_delta(0.0, (worksheet.outputs_costs_nb65||0), 0.002); end
  def test_outputs_costs_nb66; assert_in_epsilon(102.6291140334902, worksheet.outputs_costs_nb66, 0.002); end
  def test_outputs_costs_nb67; assert_in_epsilon(71.21600079161531, worksheet.outputs_costs_nb67, 0.002); end
  def test_outputs_costs_nb68; assert_in_epsilon(444.3465409114593, worksheet.outputs_costs_nb68, 0.002); end
  def test_outputs_costs_nb69; assert_in_delta(0.0, (worksheet.outputs_costs_nb69||0), 0.002); end
  def test_outputs_costs_nb70; assert_in_epsilon(1914.135501014921, worksheet.outputs_costs_nb70, 0.002); end
  def test_outputs_costs_nb71; assert_in_delta(0.0, (worksheet.outputs_costs_nb71||0), 0.002); end
  def test_outputs_costs_nb72; assert_in_epsilon(71.10697432018326, worksheet.outputs_costs_nb72, 0.002); end
  def test_outputs_costs_nb73; assert_in_epsilon(72.71303717572674, worksheet.outputs_costs_nb73, 0.002); end
  def test_outputs_costs_nb74; assert_in_epsilon(1015.2342223166648, worksheet.outputs_costs_nb74, 0.002); end
  def test_outputs_costs_nb75; assert_in_epsilon(69.92526854778126, worksheet.outputs_costs_nb75, 0.002); end
  def test_outputs_costs_nb76; assert_in_epsilon(91.97393533978729, worksheet.outputs_costs_nb76, 0.002); end
  def test_outputs_costs_nb77; assert_in_delta(0.47960390842037615, worksheet.outputs_costs_nb77, 0.002); end
  def test_outputs_costs_nb78; assert_in_delta(0.47770162319781234, worksheet.outputs_costs_nb78, 0.002); end
  def test_outputs_costs_nb79; assert_in_epsilon(875.3095731555193, worksheet.outputs_costs_nb79, 0.002); end
  def test_outputs_costs_nb80; assert_in_epsilon(79.19383845699721, worksheet.outputs_costs_nb80, 0.002); end
  def test_outputs_costs_nb81; assert_in_epsilon(96.84164611592908, worksheet.outputs_costs_nb81, 0.002); end
  def test_outputs_costs_nb82; assert_in_delta(0.2072831639159188, worksheet.outputs_costs_nb82, 0.002); end
  def test_outputs_costs_nb83; assert_in_delta(0.39918172213210557, worksheet.outputs_costs_nb83, 0.002); end
  def test_outputs_costs_nb84; assert_in_epsilon(134.07121398577902, worksheet.outputs_costs_nb84, 0.002); end
  def test_outputs_costs_nb85; assert_in_epsilon(203.66224258667745, worksheet.outputs_costs_nb85, 0.002); end
  def test_outputs_costs_nb86; assert_in_delta(0.0, (worksheet.outputs_costs_nb86||0), 0.002); end
  def test_outputs_costs_nb87; assert_in_delta(0.0, (worksheet.outputs_costs_nb87||0), 0.002); end
  def test_outputs_costs_nb88; assert_in_epsilon(318.7553848563947, worksheet.outputs_costs_nb88, 0.002); end
  def test_outputs_costs_nb89; assert_in_epsilon(27.96717500476372, worksheet.outputs_costs_nb89, 0.002); end
  def test_outputs_costs_nb90; assert_in_epsilon(34.24465567943327, worksheet.outputs_costs_nb90, 0.002); end
  def test_outputs_costs_nb91; assert_in_delta(0.00038599479650945276, worksheet.outputs_costs_nb91, 0.002); end
  def test_outputs_costs_nb92; assert_in_delta(0.1631790326919064, worksheet.outputs_costs_nb92, 0.002); end
  def test_outputs_costs_nb93; assert_in_epsilon(12.995236763762822, worksheet.outputs_costs_nb93, 0.002); end
  def test_outputs_costs_nb94; assert_in_epsilon(17.710110878346924, worksheet.outputs_costs_nb94, 0.002); end
  def test_outputs_costs_nb95; assert_in_delta(0.0, (worksheet.outputs_costs_nb95||0), 0.002); end
  def test_outputs_costs_nb96; assert_in_delta(0.0, (worksheet.outputs_costs_nb96||0), 0.002); end
  def test_outputs_costs_nb97; assert_in_epsilon(156.0924383285553, worksheet.outputs_costs_nb97, 0.002); end
  def test_outputs_costs_nb98; assert_in_delta(0.38627590964003317, worksheet.outputs_costs_nb98, 0.002); end
  def test_outputs_costs_nb99; assert_in_epsilon(25297.768217761306, worksheet.outputs_costs_nb99, 0.002); end
  def test_outputs_costs_nb100; assert_in_epsilon(1752.327284500322, worksheet.outputs_costs_nb100, 0.002); end
  def test_outputs_costs_nb101; assert_in_epsilon(8976.621474331412, worksheet.outputs_costs_nb101, 0.002); end
  def test_outputs_costs_nb102; assert_in_epsilon(41.47403410226511, worksheet.outputs_costs_nb102, 0.002); end
  def test_outputs_costs_nb103; assert_in_epsilon(183.66086152531958, worksheet.outputs_costs_nb103, 0.002); end
  def test_outputs_costs_nb104; assert_in_epsilon(808.4962692934769, worksheet.outputs_costs_nb104, 0.002); end
  def test_outputs_costs_nb105; assert_in_epsilon(265.1308677504224, worksheet.outputs_costs_nb105, 0.002); end
  def test_outputs_costs_nb106; assert_in_epsilon(130.03548115029255, worksheet.outputs_costs_nb106, 0.002); end
  def test_outputs_costs_nb107; assert_in_epsilon(64.80234116020938, worksheet.outputs_costs_nb107, 0.002); end
  def test_outputs_costs_nb108; assert_in_epsilon(5.084956436145315, worksheet.outputs_costs_nb108, 0.002); end
  def test_outputs_costs_nb109; assert_in_epsilon(198.14180334550468, worksheet.outputs_costs_nb109, 0.002); end
  def test_outputs_costs_nb110; assert_in_epsilon(45.16334410320147, worksheet.outputs_costs_nb110, 0.002); end
  def test_outputs_costs_nb111; assert_in_epsilon(212.21718242001992, worksheet.outputs_costs_nb111, 0.002); end
  def test_outputs_costs_nb112; assert_in_epsilon(61.051444474898695, worksheet.outputs_costs_nb112, 0.002); end
  def test_outputs_costs_nb113; assert_in_epsilon(52.27927762886945, worksheet.outputs_costs_nb113, 0.002); end
  def test_outputs_costs_nb114; assert_in_epsilon(15.693975508566478, worksheet.outputs_costs_nb114, 0.002); end
  def test_outputs_costs_nb115; assert_in_delta(0.0, (worksheet.outputs_costs_nb115||0), 0.002); end
  def test_outputs_costs_nb116; assert_in_epsilon(608.5507208962503, worksheet.outputs_costs_nb116, 0.002); end
  def test_outputs_costs_nb117; assert_in_epsilon(30.551678687085982, worksheet.outputs_costs_nb117, 0.002); end
  def test_outputs_costs_nb118; assert_in_epsilon(65.32325908480236, worksheet.outputs_costs_nb118, 0.002); end
  def test_outputs_costs_nb119; assert_in_epsilon(140.30791400998046, worksheet.outputs_costs_nb119, 0.002); end
  def test_outputs_costs_nb120; assert_in_epsilon(7.52566445361697, worksheet.outputs_costs_nb120, 0.002); end
  def test_outputs_costs_nb121; assert_in_epsilon(16.085072462311313, worksheet.outputs_costs_nb121, 0.002); end
  def test_outputs_costs_nb122; assert_in_epsilon(74.34547177949555, worksheet.outputs_costs_nb122, 0.002); end
  def test_outputs_costs_nb123; assert_in_epsilon(123.98206054895351, worksheet.outputs_costs_nb123, 0.002); end
  def test_outputs_costs_nb124; assert_in_epsilon(258.4817299250364, worksheet.outputs_costs_nb124, 0.002); end
  def test_outputs_costs_nb125; assert_in_epsilon(448.0188336669959, worksheet.outputs_costs_nb125, 0.002); end
  def test_outputs_costs_nb126; assert_in_epsilon(183.22155900119242, worksheet.outputs_costs_nb126, 0.002); end
  def test_outputs_costs_nb127; assert_in_epsilon(215.025419517228, worksheet.outputs_costs_nb127, 0.002); end
  def test_outputs_costs_nb128; assert_in_epsilon(1.093677437092677, worksheet.outputs_costs_nb128, 0.002); end
  def test_outputs_costs_nb129; assert_in_epsilon(331.2301507951128, worksheet.outputs_costs_nb129, 0.002); end
  def test_outputs_costs_nb130; assert_in_epsilon(16.958930527401403, worksheet.outputs_costs_nb130, 0.002); end
  def test_outputs_costs_nb131; assert_in_delta(0.8699887416986675, worksheet.outputs_costs_nb131, 0.002); end
  def test_outputs_costs_nb132; assert_in_epsilon(56.91976828176631, worksheet.outputs_costs_nb132, 0.002); end
  def test_outputs_costs_nb133; assert_in_epsilon(25.258128184241357, worksheet.outputs_costs_nb133, 0.002); end
  def test_outputs_costs_nb134; assert_in_epsilon(103.42431053572383, worksheet.outputs_costs_nb134, 0.002); end
  def test_outputs_costs_nb135; assert_in_delta(0.0, (worksheet.outputs_costs_nb135||0), 0.002); end
  def test_outputs_costs_nb136; assert_in_epsilon(301.7117950456129, worksheet.outputs_costs_nb136, 0.002); end
  def test_outputs_costs_nb137; assert_in_epsilon(215.26604949525557, worksheet.outputs_costs_nb137, 0.002); end
  def test_outputs_costs_nb138; assert_in_epsilon(288.28780537555446, worksheet.outputs_costs_nb138, 0.002); end
  def test_outputs_costs_nb139; assert_in_epsilon(194.33242940965553, worksheet.outputs_costs_nb139, 0.002); end
  def test_outputs_costs_nb140; assert_in_epsilon(1030.7715044296808, worksheet.outputs_costs_nb140, 0.002); end
  def test_outputs_costs_nb141; assert_in_epsilon(1586.669899735372, worksheet.outputs_costs_nb141, 0.002); end
  def test_outputs_costs_nb142; assert_in_epsilon(56.84045680166342, worksheet.outputs_costs_nb142, 0.002); end
  def test_outputs_costs_nb143; assert_in_epsilon(26.211625852638512, worksheet.outputs_costs_nb143, 0.002); end
  def test_outputs_costs_nb144; assert_in_epsilon(71.27822956070172, worksheet.outputs_costs_nb144, 0.002); end
  def test_outputs_costs_nb145; assert_in_epsilon(18.924240880340232, worksheet.outputs_costs_nb145, 0.002); end
  def test_outputs_costs_nb146; assert_in_epsilon(206.45951302745868, worksheet.outputs_costs_nb146, 0.002); end
  def test_outputs_costs_nb147; assert_in_epsilon(355.4342999002038, worksheet.outputs_costs_nb147, 0.002); end
  def test_outputs_costs_nb148; assert_in_epsilon(9.627078746595908, worksheet.outputs_costs_nb148, 0.002); end
  def test_outputs_costs_nb149; assert_in_epsilon(42.4773003849657, worksheet.outputs_costs_nb149, 0.002); end
  def test_outputs_costs_nb150; assert_in_epsilon(147.0625290747782, worksheet.outputs_costs_nb150, 0.002); end
  def test_outputs_costs_nb151; assert_in_epsilon(184.45449470824877, worksheet.outputs_costs_nb151, 0.002); end
  def test_outputs_costs_nb152; assert_in_epsilon(18.937541556665593, worksheet.outputs_costs_nb152, 0.002); end
  def test_outputs_costs_nb153; assert_in_epsilon(2.419048003885341, worksheet.outputs_costs_nb153, 0.002); end
  def test_outputs_costs_nb154; assert_in_epsilon(6.820338720791016, worksheet.outputs_costs_nb154, 0.002); end
  def test_outputs_costs_nb155; assert_in_epsilon(7.081979877903363, worksheet.outputs_costs_nb155, 0.002); end
  def test_outputs_costs_nb156; assert_in_epsilon(17.96752116725661, worksheet.outputs_costs_nb156, 0.002); end
  def test_outputs_costs_nb157; assert_in_epsilon(34.864732100828824, worksheet.outputs_costs_nb157, 0.002); end
  def test_outputs_costs_nb158; assert_in_epsilon(28.15996931217234, worksheet.outputs_costs_nb158, 0.002); end
  def test_outputs_costs_nb159; assert_in_epsilon(1.0175687395959758, worksheet.outputs_costs_nb159, 0.002); end
  def test_outputs_costs_nb160; assert_in_epsilon(27.725338512842015, worksheet.outputs_costs_nb160, 0.002); end
  def test_outputs_costs_nb161; assert_in_epsilon(5.968428837057723, worksheet.outputs_costs_nb161, 0.002); end
  def test_outputs_costs_nb162; assert_in_epsilon(5.56933433725116, worksheet.outputs_costs_nb162, 0.002); end
  def test_outputs_costs_nb163; assert_in_delta(0.17600422841531116, worksheet.outputs_costs_nb163, 0.002); end
  def test_outputs_costs_nb164; assert_in_epsilon(3.5763254039829224, worksheet.outputs_costs_nb164, 0.002); end
  def test_outputs_costs_nb165; assert_in_delta(0.5166772193839613, worksheet.outputs_costs_nb165, 0.002); end
  def test_outputs_costs_nb166; assert_in_epsilon(10.145036856023937, worksheet.outputs_costs_nb166, 0.002); end
  def test_outputs_costs_nb167; assert_in_epsilon(40.58014742409575, worksheet.outputs_costs_nb167, 0.002); end
  def test_outputs_costs_nb168; assert_in_epsilon(26.646576987042284, worksheet.outputs_costs_nb168, 0.002); end
  def test_outputs_costs_nb169; assert_in_epsilon(106.58630794816914, worksheet.outputs_costs_nb169, 0.002); end
  def test_outputs_costs_nb170; assert_in_epsilon(4.529550593136812, worksheet.outputs_costs_nb170, 0.002); end
  def test_outputs_costs_nb171; assert_in_epsilon(12.40852250798689, worksheet.outputs_costs_nb171, 0.002); end
  def test_outputs_costs_nb172; assert_in_delta(0.23288150621019651, worksheet.outputs_costs_nb172, 0.002); end
  def test_outputs_costs_nb173; assert_in_epsilon(4.000007894468688, worksheet.outputs_costs_nb173, 0.002); end
  def test_outputs_costs_nb174; assert_in_epsilon(34.37684643704816, worksheet.outputs_costs_nb174, 0.002); end
  def test_outputs_costs_nb175; assert_in_epsilon(24.966343414611853, worksheet.outputs_costs_nb175, 0.002); end
  def test_outputs_costs_nb176; assert_in_delta(0.0, (worksheet.outputs_costs_nb176||0), 0.002); end
  def test_outputs_costs_nb177; assert_in_delta(0.7961888946289457, worksheet.outputs_costs_nb177, 0.002); end
  def test_outputs_costs_nb178; assert_in_delta(0.6277690249898266, worksheet.outputs_costs_nb178, 0.002); end
  def test_outputs_costs_nb179; assert_in_epsilon(8.7510625610663, worksheet.outputs_costs_nb179, 0.002); end
  def test_outputs_costs_nb180; assert_in_delta(0.0038775821455671543, worksheet.outputs_costs_nb180, 0.002); end
  def test_outputs_costs_nb181; assert_in_delta(0.031454346690709914, worksheet.outputs_costs_nb181, 0.002); end
  def test_outputs_costs_nb182; assert_in_epsilon(14.86802544080852, worksheet.outputs_costs_nb182, 0.002); end
  def test_outputs_costs_nb183; assert_in_delta(0.9650640004898874, worksheet.outputs_costs_nb183, 0.002); end
  def test_outputs_costs_nb184; assert_in_epsilon(7.962155113510608, worksheet.outputs_costs_nb184, 0.002); end
  def test_outputs_costs_nb185; assert_in_epsilon(7.586674028304175, worksheet.outputs_costs_nb185, 0.002); end
  def test_outputs_costs_nb186; assert_in_epsilon(1011.6182459951541, worksheet.outputs_costs_nb186, 0.002); end
  def test_outputs_costs_nb187; assert_in_epsilon(13.911186099422661, worksheet.outputs_costs_nb187, 0.002); end
  def test_outputs_costs_nb188; assert_in_epsilon(3.152946873135759, worksheet.outputs_costs_nb188, 0.002); end
  def test_outputs_costs_nb189; assert_in_epsilon(5.604152341635464, worksheet.outputs_costs_nb189, 0.002); end
  def test_outputs_costs_nb190; assert_in_epsilon(12.655259691509663, worksheet.outputs_costs_nb190, 0.002); end
  def test_outputs_costs_nb191; assert_in_epsilon(15.41694431605084, worksheet.outputs_costs_nb191, 0.002); end
  def test_outputs_costs_nb192; assert_in_epsilon(-158.4297472184947, worksheet.outputs_costs_nb192, 0.002); end
  def test_outputs_costs_nb193; assert_in_epsilon(186.958332785851, worksheet.outputs_costs_nb193, 0.002); end
  def test_outputs_costs_nb194; assert_in_epsilon(-13.98409943905856, worksheet.outputs_costs_nb194, 0.002); end
  def test_outputs_costs_nb195; assert_in_epsilon(31.46422373788176, worksheet.outputs_costs_nb195, 0.002); end
  def test_outputs_costs_nb196; assert_in_epsilon(3.8950413222128866, worksheet.outputs_costs_nb196, 0.002); end
  def test_outputs_costs_nb197; assert_in_epsilon(1.8968765932084448, worksheet.outputs_costs_nb197, 0.002); end
  def test_outputs_costs_nb198; assert_in_epsilon(13.370302030774749, worksheet.outputs_costs_nb198, 0.002); end
  def test_outputs_costs_nb199; assert_in_delta(0.2235297491960066, worksheet.outputs_costs_nb199, 0.002); end
  def test_outputs_costs_nb200; assert_in_delta(0.7611702823152193, worksheet.outputs_costs_nb200, 0.002); end
  def test_outputs_costs_nb201; assert_in_delta(0.0018832737478380321, worksheet.outputs_costs_nb201, 0.002); end
  def test_outputs_costs_nb202; assert_in_delta(0.0015122812442093904, worksheet.outputs_costs_nb202, 0.002); end
  def test_outputs_costs_nb203; assert_in_epsilon(2.258993272574292, worksheet.outputs_costs_nb203, 0.002); end
  def test_outputs_costs_nb204; assert_in_epsilon(36.16285391154717, worksheet.outputs_costs_nb204, 0.002); end
  def test_outputs_costs_nb205; assert_in_epsilon(35.17516540845286, worksheet.outputs_costs_nb205, 0.002); end
  def test_outputs_costs_nb206; assert_in_epsilon(7.380959383272792, worksheet.outputs_costs_nb206, 0.002); end
  def test_outputs_costs_nb207; assert_in_epsilon(31.62224609765798, worksheet.outputs_costs_nb207, 0.002); end
  def test_outputs_costs_nb208; assert_in_epsilon(70.8965940050895, worksheet.outputs_costs_nb208, 0.002); end
  def test_outputs_costs_nb209; assert_in_epsilon(843.5203031578712, worksheet.outputs_costs_nb209, 0.002); end
  def test_outputs_costs_nb210; assert_in_epsilon(123.03879712309424, worksheet.outputs_costs_nb210, 0.002); end
  def test_outputs_costs_nb211; assert_in_epsilon(284.0540132497516, worksheet.outputs_costs_nb211, 0.002); end
  def test_outputs_costs_nb212; assert_in_epsilon(2029.9017489308276, worksheet.outputs_costs_nb212, 0.002); end
  def test_outputs_costs_nb213; assert_in_epsilon(26.048827354312394, worksheet.outputs_costs_nb213, 0.002); end
  def test_outputs_costs_nb214; assert_in_epsilon(304.3148606462642, worksheet.outputs_costs_nb214, 0.002); end
  def test_outputs_costs_nb215; assert_in_epsilon(688.6617680948825, worksheet.outputs_costs_nb215, 0.002); end
  def test_outputs_costs_nb216; assert_in_epsilon(110.3837582200888, worksheet.outputs_costs_nb216, 0.002); end
  def test_outputs_costs_nb217; assert_in_epsilon(26.697677574264787, worksheet.outputs_costs_nb217, 0.002); end
  def test_outputs_costs_nb218; assert_in_epsilon(19.17717138296227, worksheet.outputs_costs_nb218, 0.002); end
  def test_outputs_costs_nb219; assert_in_delta(0.0, (worksheet.outputs_costs_nb219||0), 0.002); end
  def test_outputs_costs_nb220; assert_in_delta(0.0, (worksheet.outputs_costs_nb220||0), 0.002); end
  def test_outputs_costs_nb221; assert_in_delta(0.0, (worksheet.outputs_costs_nb221||0), 0.002); end
  def test_outputs_costs_nb222; assert_in_epsilon(7.344049202605029, worksheet.outputs_costs_nb222, 0.002); end
  def test_outputs_costs_nb223; assert_in_epsilon(7.446897449661078, worksheet.outputs_costs_nb223, 0.002); end
  def test_outputs_costs_nb224; assert_in_epsilon(448.7416852124583, worksheet.outputs_costs_nb224, 0.002); end
  def test_outputs_costs_nb225; assert_in_epsilon(311.6699592816884, worksheet.outputs_costs_nb225, 0.002); end
  def test_outputs_costs_nb226; assert_in_epsilon(124.82011830899175, worksheet.outputs_costs_nb226, 0.002); end
  def test_outputs_costs_nb227; assert_in_epsilon(853.5199342274198, worksheet.outputs_costs_nb227, 0.002); end
  def test_outputs_costs_nb228; assert_in_epsilon(12.967689320386363, worksheet.outputs_costs_nb228, 0.002); end
  def test_outputs_costs_nb229; assert_in_epsilon(31.672305911876396, worksheet.outputs_costs_nb229, 0.002); end
  def test_outputs_costs_nb230; assert_in_epsilon(179.62422468380925, worksheet.outputs_costs_nb230, 0.002); end
  def test_outputs_costs_nb231; assert_in_epsilon(74.22831944357064, worksheet.outputs_costs_nb231, 0.002); end
  def test_outputs_costs_nb232; assert_in_epsilon(48.536284185965016, worksheet.outputs_costs_nb232, 0.002); end
  def test_outputs_costs_nb233; assert_in_epsilon(138.02585089893375, worksheet.outputs_costs_nb233, 0.002); end
  def test_outputs_costs_nb449; assert_in_epsilon(103.61244686755157, worksheet.outputs_costs_nb449, 0.002); end
  def test_outputs_costs_nb450; assert_in_epsilon(260.90496014505186, worksheet.outputs_costs_nb450, 0.002); end
  def test_outputs_costs_nb451; assert_in_epsilon(222.74336156814667, worksheet.outputs_costs_nb451, 0.002); end
  def test_outputs_costs_nb452; assert_in_epsilon(4393.117307482722, worksheet.outputs_costs_nb452, 0.002); end
  def test_outputs_costs_nb453; assert_in_epsilon(120.28028636367489, worksheet.outputs_costs_nb453, 0.002); end
  def test_outputs_costs_nb454; assert_in_epsilon(416.1781111150807, worksheet.outputs_costs_nb454, 0.002); end
  def test_outputs_costs_nb455; assert_in_epsilon(204.93703627598467, worksheet.outputs_costs_nb455, 0.002); end
  def test_outputs_costs_nb456; assert_in_delta(0.0, (worksheet.outputs_costs_nb456||0), 0.002); end
  def test_outputs_costs_nb457; assert_in_epsilon(457.17663339779585, worksheet.outputs_costs_nb457, 0.002); end
  def test_outputs_costs_nb458; assert_in_epsilon(18.770985697796124, worksheet.outputs_costs_nb458, 0.002); end
  def test_outputs_costs_nb459; assert_in_epsilon(24.349229683119294, worksheet.outputs_costs_nb459, 0.002); end
  def test_outputs_costs_nb460; assert_in_epsilon(7.7569809620088925, worksheet.outputs_costs_nb460, 0.002); end
  def test_outputs_costs_nb461; assert_in_delta(0.0, (worksheet.outputs_costs_nb461||0), 0.002); end
  def test_outputs_costs_nb462; assert_in_epsilon(36.294990385352754, worksheet.outputs_costs_nb462, 0.002); end
  def test_outputs_costs_nb463; assert_in_epsilon(25.02037528523381, worksheet.outputs_costs_nb463, 0.002); end
  def test_outputs_costs_nb464; assert_in_epsilon(41.644675961774226, worksheet.outputs_costs_nb464, 0.002); end
  def test_outputs_costs_nb465; assert_in_epsilon(166.00636656099093, worksheet.outputs_costs_nb465, 0.002); end
  def test_outputs_costs_nb466; assert_in_epsilon(140.04799332549698, worksheet.outputs_costs_nb466, 0.002); end
  def test_outputs_costs_nb467; assert_in_epsilon(1821.5850658408222, worksheet.outputs_costs_nb467, 0.002); end
  def test_outputs_costs_nb468; assert_in_epsilon(44.23567346684408, worksheet.outputs_costs_nb468, 0.002); end
  def test_outputs_costs_nb469; assert_in_epsilon(165.2608223583175, worksheet.outputs_costs_nb469, 0.002); end
  def test_outputs_costs_nb470; assert_in_epsilon(80.02052666664969, worksheet.outputs_costs_nb470, 0.002); end
  def test_outputs_costs_nb471; assert_in_delta(0.0, (worksheet.outputs_costs_nb471||0), 0.002); end
  def test_outputs_costs_nb472; assert_in_epsilon(67.47763480144037, worksheet.outputs_costs_nb472, 0.002); end
  def test_outputs_costs_nb473; assert_in_epsilon(2.7551906103283574, worksheet.outputs_costs_nb473, 0.002); end
  def test_outputs_costs_nb474; assert_in_epsilon(3.5655606298268365, worksheet.outputs_costs_nb474, 0.002); end
  def test_outputs_costs_nb475; assert_in_epsilon(1.1153057545110316, worksheet.outputs_costs_nb475, 0.002); end
  def test_outputs_costs_nb476; assert_in_delta(0.0, (worksheet.outputs_costs_nb476||0), 0.002); end
  def test_outputs_costs_nb477; assert_in_epsilon(77.02563764536531, worksheet.outputs_costs_nb477, 0.002); end
  def test_outputs_costs_nb478; assert_in_epsilon(53.611368265596546, worksheet.outputs_costs_nb478, 0.002); end
  def test_outputs_costs_nb479; assert_in_epsilon(309.479170440442, worksheet.outputs_costs_nb479, 0.002); end
  def test_outputs_costs_nb480; assert_in_delta(0.0, (worksheet.outputs_costs_nb480||0), 0.002); end
  def test_outputs_costs_nb481; assert_in_epsilon(1327.9306317829728, worksheet.outputs_costs_nb481, 0.002); end
  def test_outputs_costs_nb482; assert_in_delta(0.0, (worksheet.outputs_costs_nb482||0), 0.002); end
  def test_outputs_costs_nb483; assert_in_epsilon(49.890085965704536, worksheet.outputs_costs_nb483, 0.002); end
  def test_outputs_costs_nb484; assert_in_epsilon(50.80983174401389, worksheet.outputs_costs_nb484, 0.002); end
  def test_outputs_costs_nb485; assert_in_epsilon(687.4753229321541, worksheet.outputs_costs_nb485, 0.002); end
  def test_outputs_costs_nb486; assert_in_epsilon(47.28388119584754, worksheet.outputs_costs_nb486, 0.002); end
  def test_outputs_costs_nb487; assert_in_epsilon(62.56944193519115, worksheet.outputs_costs_nb487, 0.002); end
  def test_outputs_costs_nb488; assert_in_delta(0.36758039333165493, worksheet.outputs_costs_nb488, 0.002); end
  def test_outputs_costs_nb489; assert_in_delta(0.3894539578045906, worksheet.outputs_costs_nb489, 0.002); end
  def test_outputs_costs_nb490; assert_in_epsilon(593.0785275462615, worksheet.outputs_costs_nb490, 0.002); end
  def test_outputs_costs_nb491; assert_in_epsilon(53.54965885084508, worksheet.outputs_costs_nb491, 0.002); end
  def test_outputs_costs_nb492; assert_in_epsilon(66.06863050418445, worksheet.outputs_costs_nb492, 0.002); end
  def test_outputs_costs_nb493; assert_in_delta(0.15703094008319773, worksheet.outputs_costs_nb493, 0.002); end
  def test_outputs_costs_nb494; assert_in_delta(0.32517063723099787, worksheet.outputs_costs_nb494, 0.002); end
  def test_outputs_costs_nb495; assert_in_epsilon(101.14770263314375, worksheet.outputs_costs_nb495, 0.002); end
  def test_outputs_costs_nb496; assert_in_epsilon(151.6684986701816, worksheet.outputs_costs_nb496, 0.002); end
  def test_outputs_costs_nb497; assert_in_delta(0.0, (worksheet.outputs_costs_nb497||0), 0.002); end
  def test_outputs_costs_nb498; assert_in_delta(0.0, (worksheet.outputs_costs_nb498||0), 0.002); end
  def test_outputs_costs_nb499; assert_in_epsilon(216.0730139851843, worksheet.outputs_costs_nb499, 0.002); end
  def test_outputs_costs_nb500; assert_in_epsilon(18.92980232324095, worksheet.outputs_costs_nb500, 0.002); end
  def test_outputs_costs_nb501; assert_in_epsilon(23.39980842724173, worksheet.outputs_costs_nb501, 0.002); end
  def test_outputs_costs_nb502; assert_in_delta(0.00029260824580306494, worksheet.outputs_costs_nb502, 0.002); end
  def test_outputs_costs_nb503; assert_in_delta(0.13302497795318005, worksheet.outputs_costs_nb503, 0.002); end
  def test_outputs_costs_nb504; assert_in_epsilon(9.957885119376158, worksheet.outputs_costs_nb504, 0.002); end
  def test_outputs_costs_nb505; assert_in_epsilon(13.501717220711862, worksheet.outputs_costs_nb505, 0.002); end
  def test_outputs_costs_nb506; assert_in_delta(0.0, (worksheet.outputs_costs_nb506||0), 0.002); end
  def test_outputs_costs_nb507; assert_in_delta(0.0, (worksheet.outputs_costs_nb507||0), 0.002); end
  def test_outputs_costs_nb508; assert_in_epsilon(110.11380434186427, worksheet.outputs_costs_nb508, 0.002); end
  def test_outputs_costs_nb509; assert_in_delta(0.31006492811463127, worksheet.outputs_costs_nb509, 0.002); end
  def test_outputs_costs_nb510; assert_in_epsilon(6259.321566010363, worksheet.outputs_costs_nb510, 0.002); end
  def test_outputs_costs_nb511; assert_in_epsilon(559.2828653770569, worksheet.outputs_costs_nb511, 0.002); end
  def test_outputs_costs_nb512; assert_in_epsilon(2118.005002900134, worksheet.outputs_costs_nb512, 0.002); end
  def test_outputs_costs_nb513; assert_in_epsilon(30.84673222296145, worksheet.outputs_costs_nb513, 0.002); end
  def test_outputs_costs_nb514; assert_in_epsilon(126.98168056209393, worksheet.outputs_costs_nb514, 0.002); end
  def test_outputs_costs_nb515; assert_in_epsilon(558.2763113399826, worksheet.outputs_costs_nb515, 0.002); end
  def test_outputs_costs_nb516; assert_in_epsilon(179.99763175045962, worksheet.outputs_costs_nb516, 0.002); end
  def test_outputs_costs_nb517; assert_in_epsilon(88.10256621657942, worksheet.outputs_costs_nb517, 0.002); end
  def test_outputs_costs_nb518; assert_in_epsilon(44.43460341827698, worksheet.outputs_costs_nb518, 0.002); end
  def test_outputs_costs_nb519; assert_in_epsilon(3.38997095743021, worksheet.outputs_costs_nb519, 0.002); end
  def test_outputs_costs_nb520; assert_in_epsilon(144.19098928048803, worksheet.outputs_costs_nb520, 0.002); end
  def test_outputs_costs_nb521; assert_in_epsilon(31.31376705103338, worksheet.outputs_costs_nb521, 0.002); end
  def test_outputs_costs_nb522; assert_in_epsilon(146.2656859006907, worksheet.outputs_costs_nb522, 0.002); end
  def test_outputs_costs_nb523; assert_in_epsilon(41.498020928949366, worksheet.outputs_costs_nb523, 0.002); end
  def test_outputs_costs_nb524; assert_in_epsilon(35.4395996252884, worksheet.outputs_costs_nb524, 0.002); end
  def test_outputs_costs_nb525; assert_in_epsilon(10.798807959049576, worksheet.outputs_costs_nb525, 0.002); end
  def test_outputs_costs_nb526; assert_in_delta(0.0, (worksheet.outputs_costs_nb526||0), 0.002); end
  def test_outputs_costs_nb527; assert_in_epsilon(412.9312325376362, worksheet.outputs_costs_nb527, 0.002); end
  def test_outputs_costs_nb528; assert_in_epsilon(20.679045836862784, worksheet.outputs_costs_nb528, 0.002); end
  def test_outputs_costs_nb529; assert_in_epsilon(44.21529237732709, worksheet.outputs_costs_nb529, 0.002); end
  def test_outputs_costs_nb530; assert_in_epsilon(95.35314737295337, worksheet.outputs_costs_nb530, 0.002); end
  def test_outputs_costs_nb531; assert_in_epsilon(5.099846655933825, worksheet.outputs_costs_nb531, 0.002); end
  def test_outputs_costs_nb532; assert_in_epsilon(10.900449908728312, worksheet.outputs_costs_nb532, 0.002); end
  def test_outputs_costs_nb533; assert_in_epsilon(54.04620003508957, worksheet.outputs_costs_nb533, 0.002); end
  def test_outputs_costs_nb534; assert_in_epsilon(85.78500726147331, worksheet.outputs_costs_nb534, 0.002); end
  def test_outputs_costs_nb535; assert_in_epsilon(178.64912005942307, worksheet.outputs_costs_nb535, 0.002); end
  def test_outputs_costs_nb536; assert_in_epsilon(323.06281897343035, worksheet.outputs_costs_nb536, 0.002); end
  def test_outputs_costs_nb537; assert_in_epsilon(126.06556575798541, worksheet.outputs_costs_nb537, 0.002); end
  def test_outputs_costs_nb538; assert_in_epsilon(147.68858428458273, worksheet.outputs_costs_nb538, 0.002); end
  def test_outputs_costs_nb539; assert_in_delta(0.7291182913951181, worksheet.outputs_costs_nb539, 0.002); end
  def test_outputs_costs_nb540; assert_in_epsilon(239.55804008825407, worksheet.outputs_costs_nb540, 0.002); end
  def test_outputs_costs_nb541; assert_in_epsilon(11.769194582786568, worksheet.outputs_costs_nb541, 0.002); end
  def test_outputs_costs_nb542; assert_in_delta(0.6068302955368494, worksheet.outputs_costs_nb542, 0.002); end
  def test_outputs_costs_nb543; assert_in_epsilon(40.60030892687291, worksheet.outputs_costs_nb543, 0.002); end
  def test_outputs_costs_nb544; assert_in_epsilon(17.4003823726805, worksheet.outputs_costs_nb544, 0.002); end
  def test_outputs_costs_nb545; assert_in_epsilon(71.20744674228045, worksheet.outputs_costs_nb545, 0.002); end
  def test_outputs_costs_nb546; assert_in_delta(0.0, (worksheet.outputs_costs_nb546||0), 0.002); end
  def test_outputs_costs_nb547; assert_in_epsilon(204.46100704413323, worksheet.outputs_costs_nb547, 0.002); end
  def test_outputs_costs_nb548; assert_in_epsilon(145.77130034380252, worksheet.outputs_costs_nb548, 0.002); end
  def test_outputs_costs_nb549; assert_in_epsilon(195.21451442534033, worksheet.outputs_costs_nb549, 0.002); end
  def test_outputs_costs_nb550; assert_in_epsilon(131.4511544690967, worksheet.outputs_costs_nb550, 0.002); end
  def test_outputs_costs_nb551; assert_in_epsilon(691.2230850318688, worksheet.outputs_costs_nb551, 0.002); end
  def test_outputs_costs_nb552; assert_in_epsilon(1063.999740418148, worksheet.outputs_costs_nb552, 0.002); end
  def test_outputs_costs_nb553; assert_in_epsilon(38.536066950657954, worksheet.outputs_costs_nb553, 0.002); end
  def test_outputs_costs_nb554; assert_in_epsilon(17.581618134452953, worksheet.outputs_costs_nb554, 0.002); end
  def test_outputs_costs_nb555; assert_in_epsilon(48.27151500831389, worksheet.outputs_costs_nb555, 0.002); end
  def test_outputs_costs_nb556; assert_in_epsilon(12.988547516663909, worksheet.outputs_costs_nb556, 0.002); end
  def test_outputs_costs_nb557; assert_in_epsilon(138.46386760099796, worksheet.outputs_costs_nb557, 0.002); end
  def test_outputs_costs_nb558; assert_in_epsilon(238.41029540961205, worksheet.outputs_costs_nb558, 0.002); end
  def test_outputs_costs_nb559; assert_in_epsilon(6.60677751762309, worksheet.outputs_costs_nb559, 0.002); end
  def test_outputs_costs_nb560; assert_in_epsilon(29.13589384318437, worksheet.outputs_costs_nb560, 0.002); end
  def test_outputs_costs_nb561; assert_in_epsilon(100.72437649332556, worksheet.outputs_costs_nb561, 0.002); end
  def test_outputs_costs_nb562; assert_in_epsilon(123.62874591736517, worksheet.outputs_costs_nb562, 0.002); end
  def test_outputs_costs_nb563; assert_in_epsilon(12.924408747026003, worksheet.outputs_costs_nb563, 0.002); end
  def test_outputs_costs_nb564; assert_in_epsilon(1.6595964365983196, worksheet.outputs_costs_nb564, 0.002); end
  def test_outputs_costs_nb565; assert_in_epsilon(4.686151535405116, worksheet.outputs_costs_nb565, 0.002); end
  def test_outputs_costs_nb566; assert_in_epsilon(4.846960078412321, worksheet.outputs_costs_nb566, 0.002); end
  def test_outputs_costs_nb567; assert_in_epsilon(12.044396638447544, worksheet.outputs_costs_nb567, 0.002); end
  def test_outputs_costs_nb568; assert_in_epsilon(23.817351567494136, worksheet.outputs_costs_nb568, 0.002); end
  def test_outputs_costs_nb569; assert_in_epsilon(18.807456358277005, worksheet.outputs_costs_nb569, 0.002); end
  def test_outputs_costs_nb570; assert_in_delta(0.682233107871955, worksheet.outputs_costs_nb570, 0.002); end
  def test_outputs_costs_nb571; assert_in_epsilon(18.582408692683913, worksheet.outputs_costs_nb571, 0.002); end
  def test_outputs_costs_nb572; assert_in_epsilon(4.076229668497049, worksheet.outputs_costs_nb572, 0.002); end
  def test_outputs_costs_nb573; assert_in_epsilon(3.7224237325596166, worksheet.outputs_costs_nb573, 0.002); end
  def test_outputs_costs_nb574; assert_in_delta(0.11805918743278321, worksheet.outputs_costs_nb574, 0.002); end
  def test_outputs_costs_nb575; assert_in_epsilon(2.397979851059402, worksheet.outputs_costs_nb575, 0.002); end
  def test_outputs_costs_nb576; assert_in_delta(0.35344207530792826, worksheet.outputs_costs_nb576, 0.002); end
  def test_outputs_costs_nb577; assert_in_epsilon(7.253278543578782, worksheet.outputs_costs_nb577, 0.002); end
  def test_outputs_costs_nb578; assert_in_epsilon(29.013114174315128, worksheet.outputs_costs_nb578, 0.002); end
  def test_outputs_costs_nb579; assert_in_epsilon(19.405218142872922, worksheet.outputs_costs_nb579, 0.002); end
  def test_outputs_costs_nb580; assert_in_epsilon(77.62087257149169, worksheet.outputs_costs_nb580, 0.002); end
  def test_outputs_costs_nb581; assert_in_epsilon(3.082737073997957, worksheet.outputs_costs_nb581, 0.002); end
  def test_outputs_costs_nb582; assert_in_epsilon(8.49955531148264, worksheet.outputs_costs_nb582, 0.002); end
  def test_outputs_costs_nb583; assert_in_delta(0.157924918333539, worksheet.outputs_costs_nb583, 0.002); end
  def test_outputs_costs_nb584; assert_in_epsilon(2.672386815903299, worksheet.outputs_costs_nb584, 0.002); end
  def test_outputs_costs_nb585; assert_in_epsilon(22.94960944470906, worksheet.outputs_costs_nb585, 0.002); end
  def test_outputs_costs_nb586; assert_in_epsilon(16.66859497539161, worksheet.outputs_costs_nb586, 0.002); end
  def test_outputs_costs_nb587; assert_in_delta(0.0, (worksheet.outputs_costs_nb587||0), 0.002); end
  def test_outputs_costs_nb588; assert_in_delta(0.5318254300209578, worksheet.outputs_costs_nb588, 0.002); end
  def test_outputs_costs_nb589; assert_in_delta(0.4185126833265511, worksheet.outputs_costs_nb589, 0.002); end
  def test_outputs_costs_nb590; assert_in_epsilon(5.845450990535823, worksheet.outputs_costs_nb590, 0.002); end
  def test_outputs_costs_nb591; assert_in_delta(0.002820949562516854, worksheet.outputs_costs_nb591, 0.002); end
  def test_outputs_costs_nb592; assert_in_delta(0.021283002366933278, worksheet.outputs_costs_nb592, 0.002); end
  def test_outputs_costs_nb593; assert_in_epsilon(9.91524180463087, worksheet.outputs_costs_nb593, 0.002); end
  def test_outputs_costs_nb594; assert_in_delta(0.6511392614946583, worksheet.outputs_costs_nb594, 0.002); end
  def test_outputs_costs_nb595; assert_in_epsilon(5.387389843983282, worksheet.outputs_costs_nb595, 0.002); end
  def test_outputs_costs_nb596; assert_in_epsilon(5.1725633187521, worksheet.outputs_costs_nb596, 0.002); end
  def test_outputs_costs_nb597; assert_in_epsilon(686.3752611031218, worksheet.outputs_costs_nb597, 0.002); end
  def test_outputs_costs_nb598; assert_in_epsilon(4.397055272565595, worksheet.outputs_costs_nb598, 0.002); end
  def test_outputs_costs_nb599; assert_in_epsilon(1.001344251719372, worksheet.outputs_costs_nb599, 0.002); end
  def test_outputs_costs_nb600; assert_in_epsilon(2.246777464526514, worksheet.outputs_costs_nb600, 0.002); end
  def test_outputs_costs_nb601; assert_in_epsilon(2.3914748981886707, worksheet.outputs_costs_nb601, 0.002); end
  def test_outputs_costs_nb602; assert_in_epsilon(2.8625895265906767, worksheet.outputs_costs_nb602, 0.002); end
  def test_outputs_costs_nb603; assert_in_epsilon(-161.7435176828094, worksheet.outputs_costs_nb603, 0.002); end
  def test_outputs_costs_nb604; assert_in_epsilon(186.958332785851, worksheet.outputs_costs_nb604, 0.002); end
  def test_outputs_costs_nb605; assert_in_epsilon(-13.98409943905856, worksheet.outputs_costs_nb605, 0.002); end
  def test_outputs_costs_nb606; assert_in_epsilon(31.46422373788176, worksheet.outputs_costs_nb606, 0.002); end
  def test_outputs_costs_nb607; assert_in_epsilon(1.1160441033823458, worksheet.outputs_costs_nb607, 0.002); end
  def test_outputs_costs_nb608; assert_in_delta(0.49037182693784503, worksheet.outputs_costs_nb608, 0.002); end
  def test_outputs_costs_nb609; assert_in_epsilon(7.178574439365036, worksheet.outputs_costs_nb609, 0.002); end
  def test_outputs_costs_nb610; assert_in_delta(0.04157082814948911, worksheet.outputs_costs_nb610, 0.002); end
  def test_outputs_costs_nb611; assert_in_delta(0.002994235844337589, worksheet.outputs_costs_nb611, 0.002); end
  def test_outputs_costs_nb612; assert_in_delta(0.000844080861632701, worksheet.outputs_costs_nb612, 0.002); end
  def test_outputs_costs_nb613; assert_in_delta(0.0007099964291439777, worksheet.outputs_costs_nb613, 0.002); end
  def test_outputs_costs_nb614; assert_in_delta(0.014492436638703358, worksheet.outputs_costs_nb614, 0.002); end
  def test_outputs_costs_nb615; assert_in_epsilon(19.33604011553147, worksheet.outputs_costs_nb615, 0.002); end
  def test_outputs_costs_nb616; assert_in_epsilon(20.53456466789573, worksheet.outputs_costs_nb616, 0.002); end
  def test_outputs_costs_nb617; assert_in_epsilon(4.140305390302126, worksheet.outputs_costs_nb617, 0.002); end
  def test_outputs_costs_nb618; assert_in_epsilon(12.568251413605104, worksheet.outputs_costs_nb618, 0.002); end
  def test_outputs_costs_nb619; assert_in_epsilon(32.55996275664381, worksheet.outputs_costs_nb619, 0.002); end
  def test_outputs_costs_nb620; assert_in_epsilon(318.0580711193801, worksheet.outputs_costs_nb620, 0.002); end
  def test_outputs_costs_nb621; assert_in_epsilon(96.61837635819782, worksheet.outputs_costs_nb621, 0.002); end
  def test_outputs_costs_nb622; assert_in_epsilon(207.59582122711973, worksheet.outputs_costs_nb622, 0.002); end
  def test_outputs_costs_nb623; assert_in_epsilon(1426.4729937941117, worksheet.outputs_costs_nb623, 0.002); end
  def test_outputs_costs_nb624; assert_in_epsilon(18.214883563404687, worksheet.outputs_costs_nb624, 0.002); end
  def test_outputs_costs_nb625; assert_in_epsilon(209.6169902657645, worksheet.outputs_costs_nb625, 0.002); end
  def test_outputs_costs_nb626; assert_in_epsilon(467.1910702851357, worksheet.outputs_costs_nb626, 0.002); end
  def test_outputs_costs_nb627; assert_in_epsilon(82.43896528223809, worksheet.outputs_costs_nb627, 0.002); end
  def test_outputs_costs_nb628; assert_in_epsilon(19.9795752388757, worksheet.outputs_costs_nb628, 0.002); end
  def test_outputs_costs_nb629; assert_in_epsilon(13.701261482793697, worksheet.outputs_costs_nb629, 0.002); end
  def test_outputs_costs_nb630; assert_in_delta(0.0, (worksheet.outputs_costs_nb630||0), 0.002); end
  def test_outputs_costs_nb631; assert_in_delta(0.0, (worksheet.outputs_costs_nb631||0), 0.002); end
  def test_outputs_costs_nb632; assert_in_delta(0.0, (worksheet.outputs_costs_nb632||0), 0.002); end
  def test_outputs_costs_nb633; assert_in_epsilon(5.032244247493001, worksheet.outputs_costs_nb633, 0.002); end
  def test_outputs_costs_nb634; assert_in_epsilon(5.011686773186036, worksheet.outputs_costs_nb634, 0.002); end
  def test_outputs_costs_nb635; assert_in_epsilon(352.58356111584226, worksheet.outputs_costs_nb635, 0.002); end
  def test_outputs_costs_nb636; assert_in_epsilon(213.7773079679693, worksheet.outputs_costs_nb636, 0.002); end
  def test_outputs_costs_nb637; assert_in_epsilon(87.16636951155166, worksheet.outputs_costs_nb637, 0.002); end
  def test_outputs_costs_nb638; assert_in_epsilon(706.2509757529257, worksheet.outputs_costs_nb638, 0.002); end
  def test_outputs_costs_nb639; assert_in_epsilon(9.061580847773234, worksheet.outputs_costs_nb639, 0.002); end
  def test_outputs_costs_nb640; assert_in_epsilon(21.66867533973397, worksheet.outputs_costs_nb640, 0.002); end
  def test_outputs_costs_nb641; assert_in_epsilon(128.58752571581607, worksheet.outputs_costs_nb641, 0.002); end
  def test_outputs_costs_nb642; assert_in_epsilon(55.27057565640729, worksheet.outputs_costs_nb642, 0.002); end
  def test_outputs_costs_nb643; assert_in_epsilon(35.01129607172801, worksheet.outputs_costs_nb643, 0.002); end
  def test_outputs_costs_nb644; assert_in_epsilon(94.85995591986583, worksheet.outputs_costs_nb644, 0.002); end
  def test_outputs_costs_nb242; assert_in_epsilon(127.7947789452424, worksheet.outputs_costs_nb242, 0.002); end
  def test_outputs_costs_nb243; assert_in_epsilon(323.25328859895296, worksheet.outputs_costs_nb243, 0.002); end
  def test_outputs_costs_nb244; assert_in_epsilon(276.39195184223377, worksheet.outputs_costs_nb244, 0.002); end
  def test_outputs_costs_nb245; assert_in_epsilon(6176.93114020786, worksheet.outputs_costs_nb245, 0.002); end
  def test_outputs_costs_nb246; assert_in_epsilon(149.21459533749385, worksheet.outputs_costs_nb246, 0.002); end
  def test_outputs_costs_nb247; assert_in_epsilon(553.7715704899827, worksheet.outputs_costs_nb247, 0.002); end
  def test_outputs_costs_nb248; assert_in_epsilon(268.23747639939154, worksheet.outputs_costs_nb248, 0.002); end
  def test_outputs_costs_nb249; assert_in_delta(0.0, (worksheet.outputs_costs_nb249||0), 0.002); end
  def test_outputs_costs_nb250; assert_in_epsilon(561.4583242932608, worksheet.outputs_costs_nb250, 0.002); end
  def test_outputs_costs_nb251; assert_in_epsilon(23.08819383461821, worksheet.outputs_costs_nb251, 0.002); end
  def test_outputs_costs_nb252; assert_in_epsilon(29.529882501337568, worksheet.outputs_costs_nb252, 0.002); end
  def test_outputs_costs_nb253; assert_in_epsilon(9.13266880975271, worksheet.outputs_costs_nb253, 0.002); end
  def test_outputs_costs_nb254; assert_in_delta(0.0, (worksheet.outputs_costs_nb254||0), 0.002); end
  def test_outputs_costs_nb255; assert_in_epsilon(42.138673923161264, worksheet.outputs_costs_nb255, 0.002); end
  def test_outputs_costs_nb256; assert_in_epsilon(29.014303122848553, worksheet.outputs_costs_nb256, 0.002); end
  def test_outputs_costs_nb257; assert_in_epsilon(51.175297460263955, worksheet.outputs_costs_nb257, 0.002); end
  def test_outputs_costs_nb258; assert_in_epsilon(205.69587113291522, worksheet.outputs_costs_nb258, 0.002); end
  def test_outputs_costs_nb259; assert_in_epsilon(173.76107960632706, worksheet.outputs_costs_nb259, 0.002); end
  def test_outputs_costs_nb260; assert_in_epsilon(2258.070890715149, worksheet.outputs_costs_nb260, 0.002); end
  def test_outputs_costs_nb261; assert_in_epsilon(54.872366405559674, worksheet.outputs_costs_nb261, 0.002); end
  def test_outputs_costs_nb262; assert_in_epsilon(204.40957110954687, worksheet.outputs_costs_nb262, 0.002); end
  def test_outputs_costs_nb263; assert_in_epsilon(98.61139863735124, worksheet.outputs_costs_nb263, 0.002); end
  def test_outputs_costs_nb264; assert_in_delta(0.0, (worksheet.outputs_costs_nb264||0), 0.002); end
  def test_outputs_costs_nb265; assert_in_epsilon(82.92600954806039, worksheet.outputs_costs_nb265, 0.002); end
  def test_outputs_costs_nb266; assert_in_epsilon(3.390596514028347, worksheet.outputs_costs_nb266, 0.002); end
  def test_outputs_costs_nb267; assert_in_epsilon(4.328048151505893, worksheet.outputs_costs_nb267, 0.002); end
  def test_outputs_costs_nb268; assert_in_epsilon(1.3142456006620948, worksheet.outputs_costs_nb268, 0.002); end
  def test_outputs_costs_nb269; assert_in_delta(0.0, (worksheet.outputs_costs_nb269||0), 0.002); end
  def test_outputs_costs_nb270; assert_in_epsilon(89.82737583942776, worksheet.outputs_costs_nb270, 0.002); end
  def test_outputs_costs_nb271; assert_in_epsilon(62.41368452860593, worksheet.outputs_costs_nb271, 0.002); end
  def test_outputs_costs_nb272; assert_in_epsilon(376.9128556759506, worksheet.outputs_costs_nb272, 0.002); end
  def test_outputs_costs_nb273; assert_in_delta(0.0, (worksheet.outputs_costs_nb273||0), 0.002); end
  def test_outputs_costs_nb274; assert_in_epsilon(1621.0330663989466, worksheet.outputs_costs_nb274, 0.002); end
  def test_outputs_costs_nb275; assert_in_delta(0.0, (worksheet.outputs_costs_nb275||0), 0.002); end
  def test_outputs_costs_nb276; assert_in_epsilon(60.49853014294389, worksheet.outputs_costs_nb276, 0.002); end
  def test_outputs_costs_nb277; assert_in_epsilon(61.761434459870316, worksheet.outputs_costs_nb277, 0.002); end
  def test_outputs_costs_nb278; assert_in_epsilon(851.3547726244094, worksheet.outputs_costs_nb278, 0.002); end
  def test_outputs_costs_nb279; assert_in_epsilon(58.6045748718144, worksheet.outputs_costs_nb279, 0.002); end
  def test_outputs_costs_nb280; assert_in_epsilon(77.27168863748922, worksheet.outputs_costs_nb280, 0.002); end
  def test_outputs_costs_nb281; assert_in_delta(0.4235921508760157, worksheet.outputs_costs_nb281, 0.002); end
  def test_outputs_costs_nb282; assert_in_delta(0.43357779050120143, worksheet.outputs_costs_nb282, 0.002); end
  def test_outputs_costs_nb283; assert_in_epsilon(734.1940503508904, worksheet.outputs_costs_nb283, 0.002); end
  def test_outputs_costs_nb284; assert_in_epsilon(66.37174865392114, worksheet.outputs_costs_nb284, 0.002); end
  def test_outputs_costs_nb285; assert_in_epsilon(81.45513831005675, worksheet.outputs_costs_nb285, 0.002); end
  def test_outputs_costs_nb286; assert_in_delta(0.18215705199955826, worksheet.outputs_costs_nb286, 0.002); end
  def test_outputs_costs_nb287; assert_in_delta(0.3621761796815517, worksheet.outputs_costs_nb287, 0.002); end
  def test_outputs_costs_nb288; assert_in_epsilon(117.60945830946142, worksheet.outputs_costs_nb288, 0.002); end
  def test_outputs_costs_nb289; assert_in_epsilon(177.6653706284295, worksheet.outputs_costs_nb289, 0.002); end
  def test_outputs_costs_nb290; assert_in_delta(0.0, (worksheet.outputs_costs_nb290||0), 0.002); end
  def test_outputs_costs_nb291; assert_in_delta(0.0, (worksheet.outputs_costs_nb291||0), 0.002); end
  def test_outputs_costs_nb292; assert_in_epsilon(267.4141994207895, worksheet.outputs_costs_nb292, 0.002); end
  def test_outputs_costs_nb293; assert_in_epsilon(23.448488664002337, worksheet.outputs_costs_nb293, 0.002); end
  def test_outputs_costs_nb294; assert_in_epsilon(28.822232053337505, worksheet.outputs_costs_nb294, 0.002); end
  def test_outputs_costs_nb295; assert_in_delta(0.0003393015211562589, worksheet.outputs_costs_nb295, 0.002); end
  def test_outputs_costs_nb296; assert_in_delta(0.1481020053225432, worksheet.outputs_costs_nb296, 0.002); end
  def test_outputs_costs_nb297; assert_in_epsilon(11.47656094156949, worksheet.outputs_costs_nb297, 0.002); end
  def test_outputs_costs_nb298; assert_in_epsilon(15.60591404952939, worksheet.outputs_costs_nb298, 0.002); end
  def test_outputs_costs_nb299; assert_in_delta(0.0, (worksheet.outputs_costs_nb299||0), 0.002); end
  def test_outputs_costs_nb300; assert_in_delta(0.0, (worksheet.outputs_costs_nb300||0), 0.002); end
  def test_outputs_costs_nb301; assert_in_epsilon(133.10312133520978, worksheet.outputs_costs_nb301, 0.002); end
  def test_outputs_costs_nb302; assert_in_delta(0.34817041887733224, worksheet.outputs_costs_nb302, 0.002); end
  def test_outputs_costs_nb303; assert_in_epsilon(10398.114316391004, worksheet.outputs_costs_nb303, 0.002); end
  def test_outputs_costs_nb304; assert_in_epsilon(782.978693962669, worksheet.outputs_costs_nb304, 0.002); end
  def test_outputs_costs_nb305; assert_in_epsilon(4077.609709023357, worksheet.outputs_costs_nb305, 0.002); end
  def test_outputs_costs_nb306; assert_in_epsilon(36.160383162613286, worksheet.outputs_costs_nb306, 0.002); end
  def test_outputs_costs_nb307; assert_in_epsilon(155.32127104370676, worksheet.outputs_costs_nb307, 0.002); end
  def test_outputs_costs_nb308; assert_in_epsilon(683.3862903167297, worksheet.outputs_costs_nb308, 0.002); end
  def test_outputs_costs_nb309; assert_in_epsilon(222.56424975044104, worksheet.outputs_costs_nb309, 0.002); end
  def test_outputs_costs_nb310; assert_in_epsilon(109.069023683436, worksheet.outputs_costs_nb310, 0.002); end
  def test_outputs_costs_nb311; assert_in_epsilon(54.61847228924318, worksheet.outputs_costs_nb311, 0.002); end
  def test_outputs_costs_nb312; assert_in_epsilon(4.237463696787762, worksheet.outputs_costs_nb312, 0.002); end
  def test_outputs_costs_nb313; assert_in_epsilon(171.16639631299634, worksheet.outputs_costs_nb313, 0.002); end
  def test_outputs_costs_nb314; assert_in_epsilon(38.238555577117424, worksheet.outputs_costs_nb314, 0.002); end
  def test_outputs_costs_nb315; assert_in_epsilon(179.2414341603553, worksheet.outputs_costs_nb315, 0.002); end
  def test_outputs_costs_nb316; assert_in_epsilon(51.27473270192402, worksheet.outputs_costs_nb316, 0.002); end
  def test_outputs_costs_nb317; assert_in_epsilon(43.85943862707893, worksheet.outputs_costs_nb317, 0.002); end
  def test_outputs_costs_nb318; assert_in_epsilon(13.246391733808029, worksheet.outputs_costs_nb318, 0.002); end
  def test_outputs_costs_nb319; assert_in_delta(0.0, (worksheet.outputs_costs_nb319||0), 0.002); end
  def test_outputs_costs_nb320; assert_in_epsilon(510.74097671694335, worksheet.outputs_costs_nb320, 0.002); end
  def test_outputs_costs_nb321; assert_in_epsilon(25.615362261974383, worksheet.outputs_costs_nb321, 0.002); end
  def test_outputs_costs_nb322; assert_in_epsilon(54.76927573106474, worksheet.outputs_costs_nb322, 0.002); end
  def test_outputs_costs_nb323; assert_in_epsilon(117.83053069146693, worksheet.outputs_costs_nb323, 0.002); end
  def test_outputs_costs_nb324; assert_in_epsilon(6.312755554775398, worksheet.outputs_costs_nb324, 0.002); end
  def test_outputs_costs_nb325; assert_in_epsilon(13.492761185519814, worksheet.outputs_costs_nb325, 0.002); end
  def test_outputs_costs_nb326; assert_in_epsilon(64.19583590729258, worksheet.outputs_costs_nb326, 0.002); end
  def test_outputs_costs_nb327; assert_in_epsilon(104.8835339052134, worksheet.outputs_costs_nb327, 0.002); end
  def test_outputs_costs_nb328; assert_in_epsilon(218.5654249922298, worksheet.outputs_costs_nb328, 0.002); end
  def test_outputs_costs_nb329; assert_in_epsilon(385.54082632021317, worksheet.outputs_costs_nb329, 0.002); end
  def test_outputs_costs_nb330; assert_in_epsilon(154.6435623795889, worksheet.outputs_costs_nb330, 0.002); end
  def test_outputs_costs_nb331; assert_in_epsilon(181.35700190090537, worksheet.outputs_costs_nb331, 0.002); end
  def test_outputs_costs_nb332; assert_in_delta(0.9113978642438976, worksheet.outputs_costs_nb332, 0.002); end
  def test_outputs_costs_nb333; assert_in_epsilon(285.3940954416835, worksheet.outputs_costs_nb333, 0.002); end
  def test_outputs_costs_nb334; assert_in_epsilon(14.364062555093986, worksheet.outputs_costs_nb334, 0.002); end
  def test_outputs_costs_nb335; assert_in_delta(0.7384095186177584, worksheet.outputs_costs_nb335, 0.002); end
  def test_outputs_costs_nb336; assert_in_epsilon(48.760038604319604, worksheet.outputs_costs_nb336, 0.002); end
  def test_outputs_costs_nb337; assert_in_epsilon(21.329255278460927, worksheet.outputs_costs_nb337, 0.002); end
  def test_outputs_costs_nb338; assert_in_epsilon(87.31587863900214, worksheet.outputs_costs_nb338, 0.002); end
  def test_outputs_costs_nb339; assert_in_delta(0.0, (worksheet.outputs_costs_nb339||0), 0.002); end
  def test_outputs_costs_nb340; assert_in_epsilon(253.08640104487307, worksheet.outputs_costs_nb340, 0.002); end
  def test_outputs_costs_nb341; assert_in_epsilon(180.51867491952905, worksheet.outputs_costs_nb341, 0.002); end
  def test_outputs_costs_nb342; assert_in_epsilon(241.75115990044736, worksheet.outputs_costs_nb342, 0.002); end
  def test_outputs_costs_nb343; assert_in_epsilon(162.8917919393761, worksheet.outputs_costs_nb343, 0.002); end
  def test_outputs_costs_nb344; assert_in_epsilon(860.9972947307749, worksheet.outputs_costs_nb344, 0.002); end
  def test_outputs_costs_nb345; assert_in_epsilon(1325.33482007676, worksheet.outputs_costs_nb345, 0.002); end
  def test_outputs_costs_nb346; assert_in_epsilon(47.688261876160695, worksheet.outputs_costs_nb346, 0.002); end
  def test_outputs_costs_nb347; assert_in_epsilon(21.896621993545736, worksheet.outputs_costs_nb347, 0.002); end
  def test_outputs_costs_nb348; assert_in_epsilon(59.77487228450781, worksheet.outputs_costs_nb348, 0.002); end
  def test_outputs_costs_nb349; assert_in_epsilon(15.956394198502071, worksheet.outputs_costs_nb349, 0.002); end
  def test_outputs_costs_nb350; assert_in_epsilon(172.46169031422835, worksheet.outputs_costs_nb350, 0.002); end
  def test_outputs_costs_nb351; assert_in_epsilon(296.92229765490794, worksheet.outputs_costs_nb351, 0.002); end
  def test_outputs_costs_nb352; assert_in_epsilon(8.1169281321095, worksheet.outputs_costs_nb352, 0.002); end
  def test_outputs_costs_nb353; assert_in_epsilon(35.80659711407503, worksheet.outputs_costs_nb353, 0.002); end
  def test_outputs_costs_nb354; assert_in_epsilon(123.8934527840519, worksheet.outputs_costs_nb354, 0.002); end
  def test_outputs_costs_nb355; assert_in_epsilon(154.04162031280697, worksheet.outputs_costs_nb355, 0.002); end
  def test_outputs_costs_nb356; assert_in_epsilon(15.9309751518458, worksheet.outputs_costs_nb356, 0.002); end
  def test_outputs_costs_nb357; assert_in_epsilon(2.0393222202418304, worksheet.outputs_costs_nb357, 0.002); end
  def test_outputs_costs_nb358; assert_in_epsilon(5.753245128098065, worksheet.outputs_costs_nb358, 0.002); end
  def test_outputs_costs_nb359; assert_in_epsilon(5.964469978157843, worksheet.outputs_costs_nb359, 0.002); end
  def test_outputs_costs_nb360; assert_in_epsilon(15.005958902852079, worksheet.outputs_costs_nb360, 0.002); end
  def test_outputs_costs_nb361; assert_in_epsilon(29.34104183416148, worksheet.outputs_costs_nb361, 0.002); end
  def test_outputs_costs_nb362; assert_in_epsilon(23.483712835224676, worksheet.outputs_costs_nb362, 0.002); end
  def test_outputs_costs_nb363; assert_in_delta(0.8499009237339654, worksheet.outputs_costs_nb363, 0.002); end
  def test_outputs_costs_nb364; assert_in_epsilon(23.153873602762964, worksheet.outputs_costs_nb364, 0.002); end
  def test_outputs_costs_nb365; assert_in_epsilon(5.022329252777387, worksheet.outputs_costs_nb365, 0.002); end
  def test_outputs_costs_nb366; assert_in_epsilon(4.645879034905389, worksheet.outputs_costs_nb366, 0.002); end
  def test_outputs_costs_nb367; assert_in_delta(0.14703170792404718, worksheet.outputs_costs_nb367, 0.002); end
  def test_outputs_costs_nb368; assert_in_epsilon(2.987152627521162, worksheet.outputs_costs_nb368, 0.002); end
  def test_outputs_costs_nb369; assert_in_delta(0.4350596473459448, worksheet.outputs_costs_nb369, 0.002); end
  def test_outputs_costs_nb370; assert_in_epsilon(8.699157699801361, worksheet.outputs_costs_nb370, 0.002); end
  def test_outputs_costs_nb371; assert_in_epsilon(34.796630799205445, worksheet.outputs_costs_nb371, 0.002); end
  def test_outputs_costs_nb372; assert_in_epsilon(23.025897564957603, worksheet.outputs_costs_nb372, 0.002); end
  def test_outputs_costs_nb373; assert_in_epsilon(92.10359025983041, worksheet.outputs_costs_nb373, 0.002); end
  def test_outputs_costs_nb374; assert_in_epsilon(3.8061438335673845, worksheet.outputs_costs_nb374, 0.002); end
  def test_outputs_costs_nb375; assert_in_epsilon(10.454038909734765, worksheet.outputs_costs_nb375, 0.002); end
  def test_outputs_costs_nb376; assert_in_delta(0.19540321227186777, worksheet.outputs_costs_nb376, 0.002); end
  def test_outputs_costs_nb377; assert_in_epsilon(3.3361973551859934, worksheet.outputs_costs_nb377, 0.002); end
  def test_outputs_costs_nb378; assert_in_epsilon(28.663227940878606, worksheet.outputs_costs_nb378, 0.002); end
  def test_outputs_costs_nb379; assert_in_epsilon(20.81746919500173, worksheet.outputs_costs_nb379, 0.002); end
  def test_outputs_costs_nb380; assert_in_delta(0.0, (worksheet.outputs_costs_nb380||0), 0.002); end
  def test_outputs_costs_nb381; assert_in_delta(0.6640071623249518, worksheet.outputs_costs_nb381, 0.002); end
  def test_outputs_costs_nb382; assert_in_delta(0.5231408541581888, worksheet.outputs_costs_nb382, 0.002); end
  def test_outputs_costs_nb383; assert_in_epsilon(7.298256775801063, worksheet.outputs_costs_nb383, 0.002); end
  def test_outputs_costs_nb384; assert_in_delta(0.0033492658540420044, worksheet.outputs_costs_nb384, 0.002); end
  def test_outputs_costs_nb385; assert_in_delta(0.026368674528821596, worksheet.outputs_costs_nb385, 0.002); end
  def test_outputs_costs_nb386; assert_in_epsilon(12.391633622719695, worksheet.outputs_costs_nb386, 0.002); end
  def test_outputs_costs_nb387; assert_in_delta(0.8081016309922728, worksheet.outputs_costs_nb387, 0.002); end
  def test_outputs_costs_nb388; assert_in_epsilon(6.674772478746945, worksheet.outputs_costs_nb388, 0.002); end
  def test_outputs_costs_nb389; assert_in_epsilon(6.379618673528139, worksheet.outputs_costs_nb389, 0.002); end
  def test_outputs_costs_nb390; assert_in_epsilon(848.9967535491379, worksheet.outputs_costs_nb390, 0.002); end
  def test_outputs_costs_nb391; assert_in_epsilon(7.789288945934652, worksheet.outputs_costs_nb391, 0.002); end
  def test_outputs_costs_nb392; assert_in_epsilon(1.7670182312939526, worksheet.outputs_costs_nb392, 0.002); end
  def test_outputs_costs_nb393; assert_in_epsilon(3.459949740191921, worksheet.outputs_costs_nb393, 0.002); end
  def test_outputs_costs_nb394; assert_in_epsilon(6.022641930899475, worksheet.outputs_costs_nb394, 0.002); end
  def test_outputs_costs_nb395; assert_in_epsilon(7.150961657737934, worksheet.outputs_costs_nb395, 0.002); end
  def test_outputs_costs_nb396; assert_in_epsilon(-160.01108446424882, worksheet.outputs_costs_nb396, 0.002); end
  def test_outputs_costs_nb397; assert_in_epsilon(186.958332785851, worksheet.outputs_costs_nb397, 0.002); end
  def test_outputs_costs_nb398; assert_in_epsilon(-13.98409943905856, worksheet.outputs_costs_nb398, 0.002); end
  def test_outputs_costs_nb399; assert_in_epsilon(31.46422373788176, worksheet.outputs_costs_nb399, 0.002); end
  def test_outputs_costs_nb400; assert_in_epsilon(2.6952313122230533, worksheet.outputs_costs_nb400, 0.002); end
  def test_outputs_costs_nb401; assert_in_epsilon(1.1376423996705884, worksheet.outputs_costs_nb401, 0.002); end
  def test_outputs_costs_nb402; assert_in_epsilon(11.443661583349058, worksheet.outputs_costs_nb402, 0.002); end
  def test_outputs_costs_nb403; assert_in_delta(0.10024044410491864, worksheet.outputs_costs_nb403, 0.002); end
  def test_outputs_costs_nb404; assert_in_delta(0.006667273447422193, worksheet.outputs_costs_nb404, 0.002); end
  def test_outputs_costs_nb405; assert_in_delta(0.0014408187326294454, worksheet.outputs_costs_nb405, 0.002); end
  def test_outputs_costs_nb406; assert_in_delta(0.0011750914659616643, worksheet.outputs_costs_nb406, 0.002); end
  def test_outputs_costs_nb407; assert_in_delta(0.020647970799589077, worksheet.outputs_costs_nb407, 0.002); end
  def test_outputs_costs_nb408; assert_in_epsilon(30.054962524770243, worksheet.outputs_costs_nb408, 0.002); end
  def test_outputs_costs_nb409; assert_in_epsilon(33.0680602156, worksheet.outputs_costs_nb409, 0.002); end
  def test_outputs_costs_nb410; assert_in_epsilon(7.017748368844099, worksheet.outputs_costs_nb410, 0.002); end
  def test_outputs_costs_nb411; assert_in_epsilon(27.46686773352349, worksheet.outputs_costs_nb411, 0.002); end
  def test_outputs_costs_nb412; assert_in_epsilon(52.87846167200772, worksheet.outputs_costs_nb412, 0.002); end
  def test_outputs_costs_nb413; assert_in_epsilon(575.2969117263821, worksheet.outputs_costs_nb413, 0.002); end
  def test_outputs_costs_nb414; assert_in_epsilon(109.82858674064603, worksheet.outputs_costs_nb414, 0.002); end
  def test_outputs_costs_nb415; assert_in_epsilon(245.82491723843566, worksheet.outputs_costs_nb415, 0.002); end
  def test_outputs_costs_nb416; assert_in_epsilon(1728.1873713624695, worksheet.outputs_costs_nb416, 0.002); end
  def test_outputs_costs_nb417; assert_in_epsilon(22.13185545885854, worksheet.outputs_costs_nb417, 0.002); end
  def test_outputs_costs_nb418; assert_in_epsilon(256.96592545601436, worksheet.outputs_costs_nb418, 0.002); end
  def test_outputs_costs_nb419; assert_in_epsilon(577.9264191900091, worksheet.outputs_costs_nb419, 0.002); end
  def test_outputs_costs_nb420; assert_in_epsilon(96.41136175116347, worksheet.outputs_costs_nb420, 0.002); end
  def test_outputs_costs_nb421; assert_in_epsilon(23.338626406570242, worksheet.outputs_costs_nb421, 0.002); end
  def test_outputs_costs_nb422; assert_in_epsilon(16.439216432877984, worksheet.outputs_costs_nb422, 0.002); end
  def test_outputs_costs_nb423; assert_in_delta(0.0, (worksheet.outputs_costs_nb423||0), 0.002); end
  def test_outputs_costs_nb424; assert_in_delta(0.0, (worksheet.outputs_costs_nb424||0), 0.002); end
  def test_outputs_costs_nb425; assert_in_delta(0.0, (worksheet.outputs_costs_nb425||0), 0.002); end
  def test_outputs_costs_nb426; assert_in_epsilon(6.188146725049014, worksheet.outputs_costs_nb426, 0.002); end
  def test_outputs_costs_nb427; assert_in_epsilon(6.229292111423557, worksheet.outputs_costs_nb427, 0.002); end
  def test_outputs_costs_nb428; assert_in_epsilon(400.6626231641503, worksheet.outputs_costs_nb428, 0.002); end
  def test_outputs_costs_nb429; assert_in_epsilon(262.72363362482884, worksheet.outputs_costs_nb429, 0.002); end
  def test_outputs_costs_nb430; assert_in_epsilon(105.9932439102717, worksheet.outputs_costs_nb430, 0.002); end
  def test_outputs_costs_nb431; assert_in_epsilon(779.8854549901728, worksheet.outputs_costs_nb431, 0.002); end
  def test_outputs_costs_nb432; assert_in_epsilon(11.014635084079798, worksheet.outputs_costs_nb432, 0.002); end
  def test_outputs_costs_nb433; assert_in_epsilon(26.670490625805186, worksheet.outputs_costs_nb433, 0.002); end
  def test_outputs_costs_nb434; assert_in_epsilon(154.10587519981266, worksheet.outputs_costs_nb434, 0.002); end
  def test_outputs_costs_nb435; assert_in_epsilon(64.74944754998896, worksheet.outputs_costs_nb435, 0.002); end
  def test_outputs_costs_nb436; assert_in_epsilon(41.77379012884651, worksheet.outputs_costs_nb436, 0.002); end
  def test_outputs_costs_nb437; assert_in_epsilon(116.4429034093998, worksheet.outputs_costs_nb437, 0.002); end
  def test_outputs_emissions_h145; assert_in_delta(0.21613567908999795, worksheet.outputs_emissions_h145, 0.002); end
  def test_outputs_emissions_i145; assert_in_delta(0.21394604776644002, worksheet.outputs_emissions_i145, 0.002); end
  def test_outputs_emissions_j145; assert_in_delta(0.21806406453805793, worksheet.outputs_emissions_j145, 0.002); end
  def test_outputs_emissions_k145; assert_in_delta(0.2350098363903014, worksheet.outputs_emissions_k145, 0.002); end
  def test_outputs_emissions_l145; assert_in_delta(0.24810553785709447, worksheet.outputs_emissions_l145, 0.002); end
  def test_outputs_emissions_p145; assert_in_delta(0.2539422963690166, worksheet.outputs_emissions_p145, 0.002); end
  def test_outputs_emissions_q145; assert_in_delta(0.2641994110382409, worksheet.outputs_emissions_q145, 0.002); end
  def test_outputs_emissions_r145; assert_in_delta(0.279616295501677, worksheet.outputs_emissions_r145, 0.002); end
  def test_outputs_emissions_s145; assert_in_delta(0.29546326123384364, worksheet.outputs_emissions_s145, 0.002); end
  def test_outputs_emissions_t145; assert_in_delta(0.31124792895442094, worksheet.outputs_emissions_t145, 0.002); end
  def test_outputs_emissions_u145; assert_in_delta(0.32716065474562106, worksheet.outputs_emissions_u145, 0.002); end
  def test_outputs_emissions_v145; assert_in_delta(0.3424674939026147, worksheet.outputs_emissions_v145, 0.002); end
  def test_outputs_emissions_w145; assert_in_delta(0.3529353332302776, worksheet.outputs_emissions_w145, 0.002); end
  def test_outputs_emissions_x145; assert_in_delta(0.36240440654750755, worksheet.outputs_emissions_x145, 0.002); end
  def test_outputs_emissions_y145; assert_in_delta(0.36628121924571505, worksheet.outputs_emissions_y145, 0.002); end
  def test_outputs_emissions_z145; assert_in_delta(0.3689007290334561, worksheet.outputs_emissions_z145, 0.002); end
  def test_outputs_emissions_aa145; assert_in_delta(0.37065692257180577, worksheet.outputs_emissions_aa145, 0.002); end
  def test_outputs_emissions_ab145; assert_in_delta(0.37156469933447855, worksheet.outputs_emissions_ab145, 0.002); end
  def test_outputs_emissions_ac145; assert_in_delta(0.37214588214424255, worksheet.outputs_emissions_ac145, 0.002); end
  def test_outputs_emissions_ad145; assert_in_delta(0.37250284898642905, worksheet.outputs_emissions_ad145, 0.002); end
  def test_outputs_emissions_ae145; assert_in_delta(0.3727059008920376, worksheet.outputs_emissions_ae145, 0.002); end
  def test_outputs_emissions_af145; assert_in_delta(0.3728314330633691, worksheet.outputs_emissions_af145, 0.002); end
  def test_outputs_emissions_ag145; assert_in_delta(0.372906843664473, worksheet.outputs_emissions_ag145, 0.002); end
  def test_outputs_emissions_ah145; assert_in_delta(0.37295128307905784, worksheet.outputs_emissions_ah145, 0.002); end
  def test_outputs_emissions_h100; assert_in_epsilon(25.34891757, worksheet.outputs_emissions_h100, 0.002); end
  def test_outputs_emissions_i100; assert_in_epsilon(26.374524320000003, worksheet.outputs_emissions_i100, 0.002); end
  def test_outputs_emissions_j100; assert_in_epsilon(28.35797029, worksheet.outputs_emissions_j100, 0.002); end
  def test_outputs_emissions_k100; assert_in_epsilon(31.52379656, worksheet.outputs_emissions_k100, 0.002); end
  def test_outputs_emissions_l100; assert_in_epsilon(35.02307894, worksheet.outputs_emissions_l100, 0.002); end
  def test_outputs_emissions_p100; assert_in_epsilon(34.20053575449703, worksheet.outputs_emissions_p100, 0.002); end
  def test_outputs_emissions_q100; assert_in_epsilon(36.919857181414564, worksheet.outputs_emissions_q100, 0.002); end
  def test_outputs_emissions_r100; assert_in_epsilon(38.85343232080377, worksheet.outputs_emissions_r100, 0.002); end
  def test_outputs_emissions_s100; assert_in_epsilon(43.64374169178378, worksheet.outputs_emissions_s100, 0.002); end
  def test_outputs_emissions_t100; assert_in_epsilon(48.09701500002694, worksheet.outputs_emissions_t100, 0.002); end
  def test_outputs_emissions_u100; assert_in_epsilon(55.321584748085485, worksheet.outputs_emissions_u100, 0.002); end
  def test_outputs_emissions_v100; assert_in_epsilon(56.23877741176374, worksheet.outputs_emissions_v100, 0.002); end
  def test_outputs_emissions_w100; assert_in_epsilon(55.56266894659926, worksheet.outputs_emissions_w100, 0.002); end
  def test_outputs_emissions_x100; assert_in_epsilon(56.28506494116486, worksheet.outputs_emissions_x100, 0.002); end
  def test_outputs_emissions_y100; assert_in_epsilon(56.391047762403595, worksheet.outputs_emissions_y100, 0.002); end
  def test_outputs_emissions_z100; assert_in_epsilon(56.40779750097398, worksheet.outputs_emissions_z100, 0.002); end
  def test_outputs_emissions_aa100; assert_in_epsilon(56.500761641955194, worksheet.outputs_emissions_aa100, 0.002); end
  def test_outputs_emissions_ab100; assert_in_epsilon(56.52448827904213, worksheet.outputs_emissions_ab100, 0.002); end
  def test_outputs_emissions_ac100; assert_in_epsilon(56.53916673587237, worksheet.outputs_emissions_ac100, 0.002); end
  def test_outputs_emissions_ad100; assert_in_epsilon(56.553617351711196, worksheet.outputs_emissions_ad100, 0.002); end
  def test_outputs_emissions_ae100; assert_in_epsilon(56.55943147978436, worksheet.outputs_emissions_ae100, 0.002); end
  def test_outputs_emissions_af100; assert_in_epsilon(56.563275231866, worksheet.outputs_emissions_af100, 0.002); end
  def test_outputs_emissions_ag100; assert_in_epsilon(56.5659271664253, worksheet.outputs_emissions_ag100, 0.002); end
  def test_outputs_emissions_ah100; assert_in_epsilon(56.56728124604385, worksheet.outputs_emissions_ah100, 0.002); end
  def test_outputs_emissions_d4; assert_equal("2260 Gt CO2", worksheet.outputs_emissions_d4); end
  def test_outputs_emissions_d5; assert_equal("3010 Gt CO2", worksheet.outputs_emissions_d5); end
  def test_outputs_emissions_c91; assert_equal("Column1", worksheet.outputs_emissions_c91); end
  def test_outputs_emissions_d91; assert_equal("IPCC Sector", worksheet.outputs_emissions_d91); end
  def test_outputs_emissions_h91; assert_equal("1990", worksheet.outputs_emissions_h91); end
  def test_outputs_emissions_i91; assert_equal("1995", worksheet.outputs_emissions_i91); end
  def test_outputs_emissions_j91; assert_equal("2000", worksheet.outputs_emissions_j91); end
  def test_outputs_emissions_k91; assert_equal("2005", worksheet.outputs_emissions_k91); end
  def test_outputs_emissions_l91; assert_equal("2010", worksheet.outputs_emissions_l91); end
  def test_outputs_emissions_n91; assert_equal("2011 historic", worksheet.outputs_emissions_n91); end
  def test_outputs_emissions_p91; assert_equal("2011", worksheet.outputs_emissions_p91); end
  def test_outputs_emissions_q91; assert_equal("2015", worksheet.outputs_emissions_q91); end
  def test_outputs_emissions_r91; assert_equal("2020", worksheet.outputs_emissions_r91); end
  def test_outputs_emissions_s91; assert_equal("2025", worksheet.outputs_emissions_s91); end
  def test_outputs_emissions_t91; assert_equal("2030", worksheet.outputs_emissions_t91); end
  def test_outputs_emissions_u91; assert_equal("2035", worksheet.outputs_emissions_u91); end
  def test_outputs_emissions_v91; assert_equal("2040", worksheet.outputs_emissions_v91); end
  def test_outputs_emissions_w91; assert_equal("2045", worksheet.outputs_emissions_w91); end
  def test_outputs_emissions_x91; assert_equal("2050", worksheet.outputs_emissions_x91); end
  def test_outputs_emissions_y91; assert_equal("2055", worksheet.outputs_emissions_y91); end
  def test_outputs_emissions_z91; assert_equal("2060", worksheet.outputs_emissions_z91); end
  def test_outputs_emissions_aa91; assert_equal("2065", worksheet.outputs_emissions_aa91); end
  def test_outputs_emissions_ab91; assert_equal("2070", worksheet.outputs_emissions_ab91); end
  def test_outputs_emissions_ac91; assert_equal("2075", worksheet.outputs_emissions_ac91); end
  def test_outputs_emissions_ad91; assert_equal("2080", worksheet.outputs_emissions_ad91); end
  def test_outputs_emissions_ae91; assert_equal("2085", worksheet.outputs_emissions_ae91); end
  def test_outputs_emissions_af91; assert_equal("2090", worksheet.outputs_emissions_af91); end
  def test_outputs_emissions_ag91; assert_equal("2095", worksheet.outputs_emissions_ag91); end
  def test_outputs_emissions_ah91; assert_equal("2100", worksheet.outputs_emissions_ah91); end
  def test_outputs_emissions_c92; assert_equal("G.1A", worksheet.outputs_emissions_c92); end
  def test_outputs_emissions_d92; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d92); end
  def test_outputs_emissions_h92; assert_in_epsilon(20.98869, worksheet.outputs_emissions_h92, 0.002); end
  def test_outputs_emissions_i92; assert_in_epsilon(21.850990000000003, worksheet.outputs_emissions_i92, 0.002); end
  def test_outputs_emissions_j92; assert_in_epsilon(23.75862, worksheet.outputs_emissions_j92, 0.002); end
  def test_outputs_emissions_k92; assert_in_epsilon(27.50138, worksheet.outputs_emissions_k92, 0.002); end
  def test_outputs_emissions_l92; assert_in_epsilon(30.509400000000003, worksheet.outputs_emissions_l92, 0.002); end
  def test_outputs_emissions_p92; assert_in_epsilon(29.12310784105273, worksheet.outputs_emissions_p92, 0.002); end
  def test_outputs_emissions_q92; assert_in_epsilon(30.655558183042398, worksheet.outputs_emissions_q92, 0.002); end
  def test_outputs_emissions_r92; assert_in_epsilon(34.61102893824905, worksheet.outputs_emissions_r92, 0.002); end
  def test_outputs_emissions_s92; assert_in_epsilon(38.603152991102455, worksheet.outputs_emissions_s92, 0.002); end
  def test_outputs_emissions_t92; assert_in_epsilon(41.96481502059721, worksheet.outputs_emissions_t92, 0.002); end
  def test_outputs_emissions_u92; assert_in_epsilon(44.52375551828206, worksheet.outputs_emissions_u92, 0.002); end
  def test_outputs_emissions_v92; assert_in_epsilon(46.9687438254264, worksheet.outputs_emissions_v92, 0.002); end
  def test_outputs_emissions_w92; assert_in_epsilon(48.4067067825338, worksheet.outputs_emissions_w92, 0.002); end
  def test_outputs_emissions_x92; assert_in_epsilon(50.19015281935353, worksheet.outputs_emissions_x92, 0.002); end
  def test_outputs_emissions_c93; assert_equal("G.1B", worksheet.outputs_emissions_c93); end
  def test_outputs_emissions_d93; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d93); end
  def test_outputs_emissions_h93; assert_in_delta(0.16401936, worksheet.outputs_emissions_h93, 0.002); end
  def test_outputs_emissions_i93; assert_in_delta(0.20241883000000002, worksheet.outputs_emissions_i93, 0.002); end
  def test_outputs_emissions_j93; assert_in_delta(0.17221180000000003, worksheet.outputs_emissions_j93, 0.002); end
  def test_outputs_emissions_k93; assert_in_delta(0.21541402, worksheet.outputs_emissions_k93, 0.002); end
  def test_outputs_emissions_l93; assert_in_delta(0.22069656, worksheet.outputs_emissions_l93, 0.002); end
  def test_outputs_emissions_p93; assert_in_delta(0.051554036417539785, worksheet.outputs_emissions_p93, 0.002); end
  def test_outputs_emissions_q93; assert_in_delta(0.05400779609793907, worksheet.outputs_emissions_q93, 0.002); end
  def test_outputs_emissions_r93; assert_in_delta(0.05874619183215746, worksheet.outputs_emissions_r93, 0.002); end
  def test_outputs_emissions_s93; assert_in_delta(0.06341668507059946, worksheet.outputs_emissions_s93, 0.002); end
  def test_outputs_emissions_t93; assert_in_delta(0.06852403229186692, worksheet.outputs_emissions_t93, 0.002); end
  def test_outputs_emissions_u93; assert_in_delta(0.07258344243209759, worksheet.outputs_emissions_u93, 0.002); end
  def test_outputs_emissions_v93; assert_in_delta(0.07768825379352554, worksheet.outputs_emissions_v93, 0.002); end
  def test_outputs_emissions_w93; assert_in_delta(0.08417035535271475, worksheet.outputs_emissions_w93, 0.002); end
  def test_outputs_emissions_x93; assert_in_delta(0.09155178292701852, worksheet.outputs_emissions_x93, 0.002); end
  def test_outputs_emissions_c94; assert_equal("G.2", worksheet.outputs_emissions_c94); end
  def test_outputs_emissions_d94; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d94); end
  def test_outputs_emissions_h94; assert_in_delta(0.5752480000000001, worksheet.outputs_emissions_h94, 0.002); end
  def test_outputs_emissions_i94; assert_in_delta(0.721808, worksheet.outputs_emissions_i94, 0.002); end
  def test_outputs_emissions_j94; assert_in_delta(0.828064, worksheet.outputs_emissions_j94, 0.002); end
  def test_outputs_emissions_k94; assert_in_epsilon(1.17248, worksheet.outputs_emissions_k94, 0.002); end
  def test_outputs_emissions_l94; assert_in_epsilon(1.65306856, worksheet.outputs_emissions_l94, 0.002); end
  def test_outputs_emissions_p94; assert_in_epsilon(2.3859600570267654, worksheet.outputs_emissions_p94, 0.002); end
  def test_outputs_emissions_q94; assert_in_epsilon(2.5415717116162697, worksheet.outputs_emissions_q94, 0.002); end
  def test_outputs_emissions_r94; assert_in_epsilon(2.6775918225120794, worksheet.outputs_emissions_r94, 0.002); end
  def test_outputs_emissions_s94; assert_in_epsilon(2.9041491993087396, worksheet.outputs_emissions_s94, 0.002); end
  def test_outputs_emissions_t94; assert_in_epsilon(3.1320559796832215, worksheet.outputs_emissions_t94, 0.002); end
  def test_outputs_emissions_u94; assert_in_epsilon(3.3580093146624526, worksheet.outputs_emissions_u94, 0.002); end
  def test_outputs_emissions_v94; assert_in_epsilon(3.591941927823753, worksheet.outputs_emissions_v94, 0.002); end
  def test_outputs_emissions_w94; assert_in_epsilon(3.8296000155917578, worksheet.outputs_emissions_w94, 0.002); end
  def test_outputs_emissions_x94; assert_in_epsilon(4.06719972329749, worksheet.outputs_emissions_x94, 0.002); end
  def test_outputs_emissions_c95; assert_equal("G.3", worksheet.outputs_emissions_c95); end
  def test_outputs_emissions_d95; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d95); end
  def test_outputs_emissions_h95; assert_in_delta(0.0, (worksheet.outputs_emissions_h95||0), 0.002); end
  def test_outputs_emissions_i95; assert_in_delta(0.0, (worksheet.outputs_emissions_i95||0), 0.002); end
  def test_outputs_emissions_j95; assert_in_delta(0.0, (worksheet.outputs_emissions_j95||0), 0.002); end
  def test_outputs_emissions_k95; assert_in_delta(0.0, (worksheet.outputs_emissions_k95||0), 0.002); end
  def test_outputs_emissions_l95; assert_in_delta(0.0, (worksheet.outputs_emissions_l95||0), 0.002); end
  def test_outputs_emissions_p95; assert_in_delta(0.0, (worksheet.outputs_emissions_p95||0), 0.002); end
  def test_outputs_emissions_q95; assert_in_delta(0.0, (worksheet.outputs_emissions_q95||0), 0.002); end
  def test_outputs_emissions_r95; assert_in_delta(0.0, (worksheet.outputs_emissions_r95||0), 0.002); end
  def test_outputs_emissions_s95; assert_in_delta(0.0, (worksheet.outputs_emissions_s95||0), 0.002); end
  def test_outputs_emissions_t95; assert_in_delta(0.0, (worksheet.outputs_emissions_t95||0), 0.002); end
  def test_outputs_emissions_u95; assert_in_delta(0.0, (worksheet.outputs_emissions_u95||0), 0.002); end
  def test_outputs_emissions_v95; assert_in_delta(0.0, (worksheet.outputs_emissions_v95||0), 0.002); end
  def test_outputs_emissions_w95; assert_in_delta(0.0, (worksheet.outputs_emissions_w95||0), 0.002); end
  def test_outputs_emissions_x95; assert_in_delta(0.0, (worksheet.outputs_emissions_x95||0), 0.002); end
  def test_outputs_emissions_c96; assert_equal("G.4", worksheet.outputs_emissions_c96); end
  def test_outputs_emissions_d96; assert_equal("Global Agriculture", worksheet.outputs_emissions_d96); end
  def test_outputs_emissions_h96; assert_in_delta(0.0, (worksheet.outputs_emissions_h96||0), 0.002); end
  def test_outputs_emissions_i96; assert_in_delta(0.0, (worksheet.outputs_emissions_i96||0), 0.002); end
  def test_outputs_emissions_j96; assert_in_delta(0.0, (worksheet.outputs_emissions_j96||0), 0.002); end
  def test_outputs_emissions_k96; assert_in_delta(0.0, (worksheet.outputs_emissions_k96||0), 0.002); end
  def test_outputs_emissions_l96; assert_in_delta(0.0, (worksheet.outputs_emissions_l96||0), 0.002); end
  def test_outputs_emissions_p96; assert_in_delta(0.0, (worksheet.outputs_emissions_p96||0), 0.002); end
  def test_outputs_emissions_q96; assert_in_delta(0.0, (worksheet.outputs_emissions_q96||0), 0.002); end
  def test_outputs_emissions_r96; assert_in_delta(0.0, (worksheet.outputs_emissions_r96||0), 0.002); end
  def test_outputs_emissions_s96; assert_in_delta(0.0, (worksheet.outputs_emissions_s96||0), 0.002); end
  def test_outputs_emissions_t96; assert_in_delta(0.0, (worksheet.outputs_emissions_t96||0), 0.002); end
  def test_outputs_emissions_u96; assert_in_delta(0.0, (worksheet.outputs_emissions_u96||0), 0.002); end
  def test_outputs_emissions_v96; assert_in_delta(0.0, (worksheet.outputs_emissions_v96||0), 0.002); end
  def test_outputs_emissions_w96; assert_in_delta(0.0, (worksheet.outputs_emissions_w96||0), 0.002); end
  def test_outputs_emissions_x96; assert_in_delta(0.0, (worksheet.outputs_emissions_x96||0), 0.002); end
  def test_outputs_emissions_c97; assert_equal("G.5", worksheet.outputs_emissions_c97); end
  def test_outputs_emissions_d97; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d97); end
  def test_outputs_emissions_h97; assert_in_epsilon(3.6209602100000002, worksheet.outputs_emissions_h97, 0.002); end
  def test_outputs_emissions_i97; assert_in_epsilon(3.59930749, worksheet.outputs_emissions_i97, 0.002); end
  def test_outputs_emissions_j97; assert_in_epsilon(3.59907449, worksheet.outputs_emissions_j97, 0.002); end
  def test_outputs_emissions_k97; assert_in_epsilon(2.63452254, worksheet.outputs_emissions_k97, 0.002); end
  def test_outputs_emissions_l97; assert_in_epsilon(2.6399138200000003, worksheet.outputs_emissions_l97, 0.002); end
  def test_outputs_emissions_p97; assert_in_epsilon(2.63991382, worksheet.outputs_emissions_p97, 0.002); end
  def test_outputs_emissions_q97; assert_in_epsilon(3.6687194906579537, worksheet.outputs_emissions_q97, 0.002); end
  def test_outputs_emissions_r97; assert_in_epsilon(1.5060653682104876, worksheet.outputs_emissions_r97, 0.002); end
  def test_outputs_emissions_s97; assert_in_epsilon(2.073022816301985, worksheet.outputs_emissions_s97, 0.002); end
  def test_outputs_emissions_t97; assert_in_epsilon(2.9316199674546475, worksheet.outputs_emissions_t97, 0.002); end
  def test_outputs_emissions_u97; assert_in_epsilon(7.367236472708873, worksheet.outputs_emissions_u97, 0.002); end
  def test_outputs_emissions_v97; assert_in_epsilon(5.600403404720063, worksheet.outputs_emissions_v97, 0.002); end
  def test_outputs_emissions_w97; assert_in_epsilon(3.2421917931209774, worksheet.outputs_emissions_w97, 0.002); end
  def test_outputs_emissions_x97; assert_in_epsilon(1.9361606155868212, worksheet.outputs_emissions_x97, 0.002); end
  def test_outputs_emissions_c98; assert_equal("G.6", worksheet.outputs_emissions_c98); end
  def test_outputs_emissions_d98; assert_equal("Global Waste", worksheet.outputs_emissions_d98); end
  def test_outputs_emissions_h98; assert_in_delta(0.0, (worksheet.outputs_emissions_h98||0), 0.002); end
  def test_outputs_emissions_i98; assert_in_delta(0.0, (worksheet.outputs_emissions_i98||0), 0.002); end
  def test_outputs_emissions_j98; assert_in_delta(0.0, (worksheet.outputs_emissions_j98||0), 0.002); end
  def test_outputs_emissions_k98; assert_in_delta(0.0, (worksheet.outputs_emissions_k98||0), 0.002); end
  def test_outputs_emissions_l98; assert_in_delta(0.0, (worksheet.outputs_emissions_l98||0), 0.002); end
  def test_outputs_emissions_p98; assert_in_delta(0.0, (worksheet.outputs_emissions_p98||0), 0.002); end
  def test_outputs_emissions_q98; assert_in_delta(0.0, (worksheet.outputs_emissions_q98||0), 0.002); end
  def test_outputs_emissions_r98; assert_in_delta(0.0, (worksheet.outputs_emissions_r98||0), 0.002); end
  def test_outputs_emissions_s98; assert_in_delta(0.0, (worksheet.outputs_emissions_s98||0), 0.002); end
  def test_outputs_emissions_t98; assert_in_delta(0.0, (worksheet.outputs_emissions_t98||0), 0.002); end
  def test_outputs_emissions_u98; assert_in_delta(0.0, (worksheet.outputs_emissions_u98||0), 0.002); end
  def test_outputs_emissions_v98; assert_in_delta(0.0, (worksheet.outputs_emissions_v98||0), 0.002); end
  def test_outputs_emissions_w98; assert_in_delta(0.0, (worksheet.outputs_emissions_w98||0), 0.002); end
  def test_outputs_emissions_x98; assert_in_delta(0.0, (worksheet.outputs_emissions_x98||0), 0.002); end
  def test_outputs_emissions_c99; assert_equal("G.7", worksheet.outputs_emissions_c99); end
  def test_outputs_emissions_d99; assert_equal("Global Other", worksheet.outputs_emissions_d99); end
  def test_outputs_emissions_h99; assert_in_delta(0.0, (worksheet.outputs_emissions_h99||0), 0.002); end
  def test_outputs_emissions_i99; assert_in_delta(0.0, (worksheet.outputs_emissions_i99||0), 0.002); end
  def test_outputs_emissions_j99; assert_in_delta(0.0, (worksheet.outputs_emissions_j99||0), 0.002); end
  def test_outputs_emissions_k99; assert_in_delta(0.0, (worksheet.outputs_emissions_k99||0), 0.002); end
  def test_outputs_emissions_l99; assert_in_delta(0.0, (worksheet.outputs_emissions_l99||0), 0.002); end
  def test_outputs_emissions_p99; assert_in_delta(0.0, (worksheet.outputs_emissions_p99||0), 0.002); end
  def test_outputs_emissions_q99; assert_in_delta(0.0, (worksheet.outputs_emissions_q99||0), 0.002); end
  def test_outputs_emissions_r99; assert_in_delta(0.0, (worksheet.outputs_emissions_r99||0), 0.002); end
  def test_outputs_emissions_s99; assert_in_delta(0.0, (worksheet.outputs_emissions_s99||0), 0.002); end
  def test_outputs_emissions_t99; assert_in_delta(0.0, (worksheet.outputs_emissions_t99||0), 0.002); end
  def test_outputs_emissions_u99; assert_in_delta(0.0, (worksheet.outputs_emissions_u99||0), 0.002); end
  def test_outputs_emissions_v99; assert_in_delta(0.0, (worksheet.outputs_emissions_v99||0), 0.002); end
  def test_outputs_emissions_w99; assert_in_delta(0.0, (worksheet.outputs_emissions_w99||0), 0.002); end
  def test_outputs_emissions_x99; assert_in_delta(0.0, (worksheet.outputs_emissions_x99||0), 0.002); end
  def test_outputs_emissions_d100; assert_equal("Total", worksheet.outputs_emissions_d100); end
  def test_outputs_emissions_d101; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d101); end
  def test_outputs_emissions_h101; assert_in_epsilon(805.0, worksheet.outputs_emissions_h101, 0.002); end
  def test_outputs_emissions_i101; assert_in_epsilon(920.0, worksheet.outputs_emissions_i101, 0.002); end
  def test_outputs_emissions_j101; assert_in_epsilon(1041.0, worksheet.outputs_emissions_j101, 0.002); end
  def test_outputs_emissions_k101; assert_in_epsilon(1178.0, worksheet.outputs_emissions_k101, 0.002); end
  def test_outputs_emissions_l101; assert_in_epsilon(1855.799464245503, worksheet.outputs_emissions_l101, 0.002); end
  def test_outputs_emissions_n101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_n101, 0.002); end
  def test_outputs_emissions_p101; assert_in_epsilon(1890.0, worksheet.outputs_emissions_p101, 0.002); end
  def test_outputs_emissions_q101; assert_in_epsilon(2032.2407858718232, worksheet.outputs_emissions_q101, 0.002); end
  def test_outputs_emissions_r101; assert_in_epsilon(2221.674009627369, worksheet.outputs_emissions_r101, 0.002); end
  def test_outputs_emissions_s101; assert_in_epsilon(2427.9169446588376, worksheet.outputs_emissions_s101, 0.002); end
  def test_outputs_emissions_t101; assert_in_epsilon(2657.2688363883644, worksheet.outputs_emissions_t101, 0.002); end
  def test_outputs_emissions_u101; assert_in_epsilon(2915.8153357586457, worksheet.outputs_emissions_u101, 0.002); end
  def test_outputs_emissions_v101; assert_in_epsilon(3194.7162411582685, worksheet.outputs_emissions_v101, 0.002); end
  def test_outputs_emissions_w101; assert_in_epsilon(3474.219857054176, worksheet.outputs_emissions_w101, 0.002); end
  def test_outputs_emissions_x101; assert_in_epsilon(3753.839191773586, worksheet.outputs_emissions_x101, 0.002); end
  def test_outputs_emissions_y101; assert_in_epsilon(4035.5294735325074, worksheet.outputs_emissions_y101, 0.002); end
  def test_outputs_emissions_z101; assert_in_epsilon(4317.526586690951, worksheet.outputs_emissions_z101, 0.002); end
  def test_outputs_emissions_aa101; assert_in_epsilon(4599.797984548274, worksheet.outputs_emissions_aa101, 0.002); end
  def test_outputs_emissions_ab101; assert_in_epsilon(4882.361109350767, worksheet.outputs_emissions_ab101, 0.002); end
  def test_outputs_emissions_ac101; assert_in_epsilon(5165.020246888053, worksheet.outputs_emissions_ac101, 0.002); end
  def test_outputs_emissions_ad101; assert_in_epsilon(5447.7522071070125, worksheet.outputs_emissions_ad101, 0.002); end
  def test_outputs_emissions_ae101; assert_in_epsilon(5730.534829185752, worksheet.outputs_emissions_ae101, 0.002); end
  def test_outputs_emissions_af101; assert_in_epsilon(6013.341595964877, worksheet.outputs_emissions_af101, 0.002); end
  def test_outputs_emissions_ag101; assert_in_epsilon(6296.164601960606, worksheet.outputs_emissions_ag101, 0.002); end
  def test_outputs_emissions_ah101; assert_in_epsilon(6578.997622991779, worksheet.outputs_emissions_ah101, 0.002); end
  def test_outputs_emissions_d63; assert_equal("Gas", worksheet.outputs_emissions_d63); end
  def test_outputs_emissions_h63; assert_in_epsilon(1990.0, worksheet.outputs_emissions_h63, 0.002); end
  def test_outputs_emissions_i63; assert_in_epsilon(1995.0, worksheet.outputs_emissions_i63, 0.002); end
  def test_outputs_emissions_j63; assert_in_epsilon(2000.0, worksheet.outputs_emissions_j63, 0.002); end
  def test_outputs_emissions_k63; assert_in_epsilon(2005.0, worksheet.outputs_emissions_k63, 0.002); end
  def test_outputs_emissions_l63; assert_in_epsilon(2010.0, worksheet.outputs_emissions_l63, 0.002); end
  def test_outputs_emissions_p63; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p63, 0.002); end
  def test_outputs_emissions_q63; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q63, 0.002); end
  def test_outputs_emissions_r63; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r63, 0.002); end
  def test_outputs_emissions_s63; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s63, 0.002); end
  def test_outputs_emissions_t63; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t63, 0.002); end
  def test_outputs_emissions_u63; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u63, 0.002); end
  def test_outputs_emissions_v63; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v63, 0.002); end
  def test_outputs_emissions_w63; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w63, 0.002); end
  def test_outputs_emissions_x63; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x63, 0.002); end
  def test_outputs_emissions_y63; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y63, 0.002); end
  def test_outputs_emissions_z63; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z63, 0.002); end
  def test_outputs_emissions_aa63; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa63, 0.002); end
  def test_outputs_emissions_ab63; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab63, 0.002); end
  def test_outputs_emissions_ac63; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac63, 0.002); end
  def test_outputs_emissions_ad63; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad63, 0.002); end
  def test_outputs_emissions_ae63; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae63, 0.002); end
  def test_outputs_emissions_af63; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af63, 0.002); end
  def test_outputs_emissions_ag63; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag63, 0.002); end
  def test_outputs_emissions_ah63; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah63, 0.002); end
  def test_outputs_emissions_d64; assert_equal("CO2", worksheet.outputs_emissions_d64); end
  def test_outputs_emissions_h64; assert_in_epsilon(25.34891757, worksheet.outputs_emissions_h64, 0.002); end
  def test_outputs_emissions_i64; assert_in_epsilon(26.374524320000003, worksheet.outputs_emissions_i64, 0.002); end
  def test_outputs_emissions_j64; assert_in_epsilon(28.35797029, worksheet.outputs_emissions_j64, 0.002); end
  def test_outputs_emissions_k64; assert_in_epsilon(31.52379656, worksheet.outputs_emissions_k64, 0.002); end
  def test_outputs_emissions_l64; assert_in_epsilon(35.02307894, worksheet.outputs_emissions_l64, 0.002); end
  def test_outputs_emissions_p64; assert_in_epsilon(34.20053575449703, worksheet.outputs_emissions_p64, 0.002); end
  def test_outputs_emissions_q64; assert_in_epsilon(36.919857181414564, worksheet.outputs_emissions_q64, 0.002); end
  def test_outputs_emissions_r64; assert_in_epsilon(38.85343232080377, worksheet.outputs_emissions_r64, 0.002); end
  def test_outputs_emissions_s64; assert_in_epsilon(43.64374169178378, worksheet.outputs_emissions_s64, 0.002); end
  def test_outputs_emissions_t64; assert_in_epsilon(48.09701500002694, worksheet.outputs_emissions_t64, 0.002); end
  def test_outputs_emissions_u64; assert_in_epsilon(55.321584748085485, worksheet.outputs_emissions_u64, 0.002); end
  def test_outputs_emissions_v64; assert_in_epsilon(56.23877741176374, worksheet.outputs_emissions_v64, 0.002); end
  def test_outputs_emissions_w64; assert_in_epsilon(55.56266894659926, worksheet.outputs_emissions_w64, 0.002); end
  def test_outputs_emissions_x64; assert_in_epsilon(56.28506494116486, worksheet.outputs_emissions_x64, 0.002); end
  def test_outputs_emissions_y64; assert_in_epsilon(56.391047762403595, worksheet.outputs_emissions_y64, 0.002); end
  def test_outputs_emissions_z64; assert_in_epsilon(56.40779750097398, worksheet.outputs_emissions_z64, 0.002); end
  def test_outputs_emissions_aa64; assert_in_epsilon(56.500761641955194, worksheet.outputs_emissions_aa64, 0.002); end
  def test_outputs_emissions_ab64; assert_in_epsilon(56.52448827904213, worksheet.outputs_emissions_ab64, 0.002); end
  def test_outputs_emissions_ac64; assert_in_epsilon(56.53916673587237, worksheet.outputs_emissions_ac64, 0.002); end
  def test_outputs_emissions_ad64; assert_in_epsilon(56.553617351711196, worksheet.outputs_emissions_ad64, 0.002); end
  def test_outputs_emissions_ae64; assert_in_epsilon(56.55943147978436, worksheet.outputs_emissions_ae64, 0.002); end
  def test_outputs_emissions_af64; assert_in_epsilon(56.563275231866, worksheet.outputs_emissions_af64, 0.002); end
  def test_outputs_emissions_ag64; assert_in_epsilon(56.5659271664253, worksheet.outputs_emissions_ag64, 0.002); end
  def test_outputs_emissions_ah64; assert_in_epsilon(56.56728124604385, worksheet.outputs_emissions_ah64, 0.002); end
  def test_outputs_emissions_d65; assert_equal("CH4", worksheet.outputs_emissions_d65); end
  def test_outputs_emissions_h65; assert_in_epsilon(6.2679346936099405, worksheet.outputs_emissions_h65, 0.002); end
  def test_outputs_emissions_i65; assert_in_epsilon(6.204435385226761, worksheet.outputs_emissions_i65, 0.002); end
  def test_outputs_emissions_j65; assert_in_epsilon(6.32385787160368, worksheet.outputs_emissions_j65, 0.002); end
  def test_outputs_emissions_k65; assert_in_epsilon(6.815285255318741, worksheet.outputs_emissions_k65, 0.002); end
  def test_outputs_emissions_l65; assert_in_epsilon(7.19506059785574, worksheet.outputs_emissions_l65, 0.002); end
  def test_outputs_emissions_p65; assert_in_epsilon(7.364326594701482, worksheet.outputs_emissions_p65, 0.002); end
  def test_outputs_emissions_q65; assert_in_epsilon(7.661782920108986, worksheet.outputs_emissions_q65, 0.002); end
  def test_outputs_emissions_r65; assert_in_epsilon(8.108872569548632, worksheet.outputs_emissions_r65, 0.002); end
  def test_outputs_emissions_s65; assert_in_epsilon(8.568434575781465, worksheet.outputs_emissions_s65, 0.002); end
  def test_outputs_emissions_t65; assert_in_epsilon(9.026189939678208, worksheet.outputs_emissions_t65, 0.002); end
  def test_outputs_emissions_u65; assert_in_epsilon(9.48765898762301, worksheet.outputs_emissions_u65, 0.002); end
  def test_outputs_emissions_v65; assert_in_epsilon(9.931557323175827, worksheet.outputs_emissions_v65, 0.002); end
  def test_outputs_emissions_w65; assert_in_epsilon(10.23512466367805, worksheet.outputs_emissions_w65, 0.002); end
  def test_outputs_emissions_x65; assert_in_epsilon(10.509727789877719, worksheet.outputs_emissions_x65, 0.002); end
  def test_outputs_emissions_y65; assert_in_epsilon(10.622155358125736, worksheet.outputs_emissions_y65, 0.002); end
  def test_outputs_emissions_z65; assert_in_epsilon(10.698121141970228, worksheet.outputs_emissions_z65, 0.002); end
  def test_outputs_emissions_aa65; assert_in_epsilon(10.749050754582367, worksheet.outputs_emissions_aa65, 0.002); end
  def test_outputs_emissions_ab65; assert_in_epsilon(10.775376280699877, worksheet.outputs_emissions_ab65, 0.002); end
  def test_outputs_emissions_ac65; assert_in_epsilon(10.792230582183034, worksheet.outputs_emissions_ac65, 0.002); end
  def test_outputs_emissions_ad65; assert_in_epsilon(10.802582620606442, worksheet.outputs_emissions_ad65, 0.002); end
  def test_outputs_emissions_ae65; assert_in_epsilon(10.80847112586909, worksheet.outputs_emissions_ae65, 0.002); end
  def test_outputs_emissions_af65; assert_in_epsilon(10.812111558837703, worksheet.outputs_emissions_af65, 0.002); end
  def test_outputs_emissions_ag65; assert_in_epsilon(10.814298466269717, worksheet.outputs_emissions_ag65, 0.002); end
  def test_outputs_emissions_ah65; assert_in_epsilon(10.815587209292678, worksheet.outputs_emissions_ah65, 0.002); end
  def test_outputs_emissions_d66; assert_equal("N2O", worksheet.outputs_emissions_d66); end
  def test_outputs_emissions_h66; assert_in_epsilon(3.2380841507989895, worksheet.outputs_emissions_h66, 0.002); end
  def test_outputs_emissions_i66; assert_in_epsilon(3.1897596536509, worksheet.outputs_emissions_i66, 0.002); end
  def test_outputs_emissions_j66; assert_in_epsilon(3.13992066945797, worksheet.outputs_emissions_j66, 0.002); end
  def test_outputs_emissions_k66; assert_in_epsilon(3.3631391265087096, worksheet.outputs_emissions_k66, 0.002); end
  def test_outputs_emissions_l66; assert_in_epsilon(3.5161561617384898, worksheet.outputs_emissions_l66, 0.002); end
  def test_outputs_emissions_p66; assert_in_epsilon(2.369485086908545, worksheet.outputs_emissions_p66, 0.002); end
  def test_outputs_emissions_q66; assert_in_epsilon(2.458221625315083, worksheet.outputs_emissions_q66, 0.002); end
  def test_outputs_emissions_r66; assert_in_epsilon(2.5722637963654376, worksheet.outputs_emissions_r66, 0.002); end
  def test_outputs_emissions_s66; assert_in_epsilon(2.687926681498696, worksheet.outputs_emissions_s66, 0.002); end
  def test_outputs_emissions_t66; assert_in_epsilon(2.806634538184058, worksheet.outputs_emissions_t66, 0.002); end
  def test_outputs_emissions_u66; assert_in_epsilon(2.934156345510563, worksheet.outputs_emissions_u66, 0.002); end
  def test_outputs_emissions_v66; assert_in_epsilon(3.0609327149501846, worksheet.outputs_emissions_v66, 0.002); end
  def test_outputs_emissions_w66; assert_in_epsilon(3.1543003522502375, worksheet.outputs_emissions_w66, 0.002); end
  def test_outputs_emissions_x66; assert_in_epsilon(3.231815830720296, worksheet.outputs_emissions_x66, 0.002); end
  def test_outputs_emissions_y66; assert_in_epsilon(3.264558374093367, worksheet.outputs_emissions_y66, 0.002); end
  def test_outputs_emissions_z66; assert_in_epsilon(3.286957196599117, worksheet.outputs_emissions_z66, 0.002); end
  def test_outputs_emissions_aa66; assert_in_epsilon(3.301549449477494, worksheet.outputs_emissions_aa66, 0.002); end
  def test_outputs_emissions_ab66; assert_in_epsilon(3.3092201475407856, worksheet.outputs_emissions_ab66, 0.002); end
  def test_outputs_emissions_ac66; assert_in_epsilon(3.314132942620002, worksheet.outputs_emissions_ac66, 0.002); end
  def test_outputs_emissions_ad66; assert_in_epsilon(3.317122274682299, worksheet.outputs_emissions_ad66, 0.002); end
  def test_outputs_emissions_ae66; assert_in_epsilon(3.3188352854548278, worksheet.outputs_emissions_ae66, 0.002); end
  def test_outputs_emissions_af66; assert_in_epsilon(3.3198929506253725, worksheet.outputs_emissions_af66, 0.002); end
  def test_outputs_emissions_ag66; assert_in_epsilon(3.3205265515059628, worksheet.outputs_emissions_ag66, 0.002); end
  def test_outputs_emissions_ah66; assert_in_epsilon(3.320901021956566, worksheet.outputs_emissions_ah66, 0.002); end
  def test_outputs_emissions_d67; assert_equal("Total", worksheet.outputs_emissions_d67); end
  def test_outputs_emissions_h67; assert_in_epsilon(34.85493641440893, worksheet.outputs_emissions_h67, 0.002); end
  def test_outputs_emissions_i67; assert_in_epsilon(35.76871935887767, worksheet.outputs_emissions_i67, 0.002); end
  def test_outputs_emissions_j67; assert_in_epsilon(37.821748831061655, worksheet.outputs_emissions_j67, 0.002); end
  def test_outputs_emissions_k67; assert_in_epsilon(41.70222094182745, worksheet.outputs_emissions_k67, 0.002); end
  def test_outputs_emissions_l67; assert_in_epsilon(45.73429569959423, worksheet.outputs_emissions_l67, 0.002); end
  def test_outputs_emissions_p67; assert_in_epsilon(43.93434743610706, worksheet.outputs_emissions_p67, 0.002); end
  def test_outputs_emissions_q67; assert_in_epsilon(47.03986172683863, worksheet.outputs_emissions_q67, 0.002); end
  def test_outputs_emissions_r67; assert_in_epsilon(49.53456868671784, worksheet.outputs_emissions_r67, 0.002); end
  def test_outputs_emissions_s67; assert_in_epsilon(54.90010294906394, worksheet.outputs_emissions_s67, 0.002); end
  def test_outputs_emissions_t67; assert_in_epsilon(59.9298394778892, worksheet.outputs_emissions_t67, 0.002); end
  def test_outputs_emissions_u67; assert_in_epsilon(67.74340008121905, worksheet.outputs_emissions_u67, 0.002); end
  def test_outputs_emissions_v67; assert_in_epsilon(69.23126744988976, worksheet.outputs_emissions_v67, 0.002); end
  def test_outputs_emissions_w67; assert_in_epsilon(68.95209396252754, worksheet.outputs_emissions_w67, 0.002); end
  def test_outputs_emissions_x67; assert_in_epsilon(70.02660856176287, worksheet.outputs_emissions_x67, 0.002); end
  def test_outputs_emissions_y67; assert_in_epsilon(70.2777614946227, worksheet.outputs_emissions_y67, 0.002); end
  def test_outputs_emissions_z67; assert_in_epsilon(70.39287583954332, worksheet.outputs_emissions_z67, 0.002); end
  def test_outputs_emissions_aa67; assert_in_epsilon(70.55136184601506, worksheet.outputs_emissions_aa67, 0.002); end
  def test_outputs_emissions_ab67; assert_in_epsilon(70.60908470728279, worksheet.outputs_emissions_ab67, 0.002); end
  def test_outputs_emissions_ac67; assert_in_epsilon(70.64553026067541, worksheet.outputs_emissions_ac67, 0.002); end
  def test_outputs_emissions_ad67; assert_in_epsilon(70.67332224699994, worksheet.outputs_emissions_ad67, 0.002); end
  def test_outputs_emissions_ae67; assert_in_epsilon(70.68673789110828, worksheet.outputs_emissions_ae67, 0.002); end
  def test_outputs_emissions_af67; assert_in_epsilon(70.69527974132907, worksheet.outputs_emissions_af67, 0.002); end
  def test_outputs_emissions_ag67; assert_in_epsilon(70.70075218420098, worksheet.outputs_emissions_ag67, 0.002); end
  def test_outputs_emissions_ah67; assert_in_epsilon(70.7037694772931, worksheet.outputs_emissions_ah67, 0.002); end
  def test_outputs_emissions_c45; assert_equal("Column1", worksheet.outputs_emissions_c45); end
  def test_outputs_emissions_d45; assert_equal("IPCC Sector", worksheet.outputs_emissions_d45); end
  def test_outputs_emissions_h45; assert_equal("1990", worksheet.outputs_emissions_h45); end
  def test_outputs_emissions_i45; assert_equal("1995", worksheet.outputs_emissions_i45); end
  def test_outputs_emissions_j45; assert_equal("2000", worksheet.outputs_emissions_j45); end
  def test_outputs_emissions_k45; assert_equal("2005", worksheet.outputs_emissions_k45); end
  def test_outputs_emissions_l45; assert_equal("2010", worksheet.outputs_emissions_l45); end
  def test_outputs_emissions_m45; assert_equal("….", worksheet.outputs_emissions_m45); end
  def test_outputs_emissions_p45; assert_equal("2011", worksheet.outputs_emissions_p45); end
  def test_outputs_emissions_q45; assert_equal("2015", worksheet.outputs_emissions_q45); end
  def test_outputs_emissions_r45; assert_equal("2020", worksheet.outputs_emissions_r45); end
  def test_outputs_emissions_s45; assert_equal("2025", worksheet.outputs_emissions_s45); end
  def test_outputs_emissions_t45; assert_equal("2030", worksheet.outputs_emissions_t45); end
  def test_outputs_emissions_u45; assert_equal("2035", worksheet.outputs_emissions_u45); end
  def test_outputs_emissions_v45; assert_equal("2040", worksheet.outputs_emissions_v45); end
  def test_outputs_emissions_w45; assert_equal("2045", worksheet.outputs_emissions_w45); end
  def test_outputs_emissions_x45; assert_equal("2050", worksheet.outputs_emissions_x45); end
  def test_outputs_emissions_y45; assert_equal("2055", worksheet.outputs_emissions_y45); end
  def test_outputs_emissions_z45; assert_equal("2060", worksheet.outputs_emissions_z45); end
  def test_outputs_emissions_aa45; assert_equal("2065", worksheet.outputs_emissions_aa45); end
  def test_outputs_emissions_ab45; assert_equal("2070", worksheet.outputs_emissions_ab45); end
  def test_outputs_emissions_ac45; assert_equal("2075", worksheet.outputs_emissions_ac45); end
  def test_outputs_emissions_ad45; assert_equal("2080", worksheet.outputs_emissions_ad45); end
  def test_outputs_emissions_ae45; assert_equal("2085", worksheet.outputs_emissions_ae45); end
  def test_outputs_emissions_af45; assert_equal("2090", worksheet.outputs_emissions_af45); end
  def test_outputs_emissions_ag45; assert_equal("2095", worksheet.outputs_emissions_ag45); end
  def test_outputs_emissions_ah45; assert_equal("2100", worksheet.outputs_emissions_ah45); end
  def test_outputs_emissions_c46; assert_equal("G.1A", worksheet.outputs_emissions_c46); end
  def test_outputs_emissions_d46; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d46); end
  def test_outputs_emissions_h46; assert_in_epsilon(21.62825807111542, worksheet.outputs_emissions_h46, 0.002); end
  def test_outputs_emissions_i46; assert_in_epsilon(22.511665420052775, worksheet.outputs_emissions_i46, 0.002); end
  def test_outputs_emissions_j46; assert_in_epsilon(24.432527742912075, worksheet.outputs_emissions_j46, 0.002); end
  def test_outputs_emissions_k46; assert_in_epsilon(28.22731050431886, worksheet.outputs_emissions_k46, 0.002); end
  def test_outputs_emissions_l46; assert_in_epsilon(31.28377980273924, worksheet.outputs_emissions_l46, 0.002); end
  def test_outputs_emissions_p46; assert_in_epsilon(29.442829661019527, worksheet.outputs_emissions_p46, 0.002); end
  def test_outputs_emissions_q46; assert_in_epsilon(31.00787890658899, worksheet.outputs_emissions_q46, 0.002); end
  def test_outputs_emissions_r46; assert_in_epsilon(35.013627313382216, worksheet.outputs_emissions_r46, 0.002); end
  def test_outputs_emissions_s46; assert_in_epsilon(39.05266508692884, worksheet.outputs_emissions_s46, 0.002); end
  def test_outputs_emissions_t46; assert_in_epsilon(42.453735230497216, worksheet.outputs_emissions_t46, 0.002); end
  def test_outputs_emissions_u46; assert_in_epsilon(45.04184357920289, worksheet.outputs_emissions_u46, 0.002); end
  def test_outputs_emissions_v46; assert_in_epsilon(47.51863128072366, worksheet.outputs_emissions_v46, 0.002); end
  def test_outputs_emissions_w46; assert_in_epsilon(48.984239822310165, worksheet.outputs_emissions_w46, 0.002); end
  def test_outputs_emissions_x46; assert_in_epsilon(50.7987334824602, worksheet.outputs_emissions_x46, 0.002); end
  def test_outputs_emissions_c47; assert_equal("G.1B", worksheet.outputs_emissions_c47); end
  def test_outputs_emissions_d47; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d47); end
  def test_outputs_emissions_h47; assert_in_epsilon(1.97211881029452, worksheet.outputs_emissions_h47, 0.002); end
  def test_outputs_emissions_i47; assert_in_epsilon(1.92072397186996, worksheet.outputs_emissions_i47, 0.002); end
  def test_outputs_emissions_j47; assert_in_epsilon(2.0150954274728803, worksheet.outputs_emissions_j47, 0.002); end
  def test_outputs_emissions_k47; assert_in_epsilon(2.27969998630441, worksheet.outputs_emissions_k47, 0.002); end
  def test_outputs_emissions_l47; assert_in_epsilon(2.48650439282281, worksheet.outputs_emissions_l47, 0.002); end
  def test_outputs_emissions_p47; assert_in_epsilon(2.0573792708937355, worksheet.outputs_emissions_p47, 0.002); end
  def test_outputs_emissions_q47; assert_in_epsilon(2.1464204425936715, worksheet.outputs_emissions_q47, 0.002); end
  def test_outputs_emissions_r47; assert_in_epsilon(2.3766095840545183, worksheet.outputs_emissions_r47, 0.002); end
  def test_outputs_emissions_s47; assert_in_epsilon(2.628325401909558, worksheet.outputs_emissions_s47, 0.002); end
  def test_outputs_emissions_t47; assert_in_epsilon(2.8539897178225564, worksheet.outputs_emissions_t47, 0.002); end
  def test_outputs_emissions_u47; assert_in_epsilon(3.031190588406762, worksheet.outputs_emissions_u47, 0.002); end
  def test_outputs_emissions_v47; assert_in_epsilon(3.2080417589436023, worksheet.outputs_emissions_v47, 0.002); end
  def test_outputs_emissions_w47; assert_in_epsilon(3.339161296177599, worksheet.outputs_emissions_w47, 0.002); end
  def test_outputs_emissions_x47; assert_in_epsilon(3.503160022379203, worksheet.outputs_emissions_x47, 0.002); end
  def test_outputs_emissions_c48; assert_equal("G.2", worksheet.outputs_emissions_c48); end
  def test_outputs_emissions_d48; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d48); end
  def test_outputs_emissions_h48; assert_in_delta(0.8635527545553001, worksheet.outputs_emissions_h48, 0.002); end
  def test_outputs_emissions_i48; assert_in_epsilon(1.0090538613606506, worksheet.outputs_emissions_i48, 0.002); end
  def test_outputs_emissions_j48; assert_in_epsilon(1.05186394402772, worksheet.outputs_emissions_j48, 0.002); end
  def test_outputs_emissions_k48; assert_in_epsilon(1.3834269715517598, worksheet.outputs_emissions_k48, 0.002); end
  def test_outputs_emissions_l48; assert_in_epsilon(1.8539335657936016, worksheet.outputs_emissions_l48, 0.002); end
  def test_outputs_emissions_p48; assert_in_epsilon(2.5111122709267653, worksheet.outputs_emissions_p48, 0.002); end
  def test_outputs_emissions_q48; assert_in_epsilon(2.6758370855094373, worksheet.outputs_emissions_q48, 0.002); end
  def test_outputs_emissions_r48; assert_in_epsilon(2.8208280706284525, worksheet.outputs_emissions_r48, 0.002); end
  def test_outputs_emissions_s48; assert_in_epsilon(3.065261081290823, worksheet.outputs_emissions_s48, 0.002); end
  def test_outputs_emissions_t48; assert_in_epsilon(3.311868740187871, worksheet.outputs_emissions_t48, 0.002); end
  def test_outputs_emissions_u48; assert_in_epsilon(3.55633555562296, worksheet.outputs_emissions_u48, 0.002); end
  def test_outputs_emissions_v48; assert_in_epsilon(3.8109720370132902, worksheet.outputs_emissions_v48, 0.002); end
  def test_outputs_emissions_w48; assert_in_epsilon(4.069331127311877, worksheet.outputs_emissions_w48, 0.002); end
  def test_outputs_emissions_x48; assert_in_epsilon(4.329662025424533, worksheet.outputs_emissions_x48, 0.002); end
  def test_outputs_emissions_c49; assert_equal("G.3", worksheet.outputs_emissions_c49); end
  def test_outputs_emissions_d49; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d49); end
  def test_outputs_emissions_h49; assert_in_delta(0.0, (worksheet.outputs_emissions_h49||0), 0.002); end
  def test_outputs_emissions_i49; assert_in_delta(0.0, (worksheet.outputs_emissions_i49||0), 0.002); end
  def test_outputs_emissions_j49; assert_in_delta(0.0, (worksheet.outputs_emissions_j49||0), 0.002); end
  def test_outputs_emissions_k49; assert_in_delta(0.0, (worksheet.outputs_emissions_k49||0), 0.002); end
  def test_outputs_emissions_l49; assert_in_delta(0.0, (worksheet.outputs_emissions_l49||0), 0.002); end
  def test_outputs_emissions_p49; assert_in_delta(0.0, (worksheet.outputs_emissions_p49||0), 0.002); end
  def test_outputs_emissions_q49; assert_in_delta(0.0, (worksheet.outputs_emissions_q49||0), 0.002); end
  def test_outputs_emissions_r49; assert_in_delta(0.0, (worksheet.outputs_emissions_r49||0), 0.002); end
  def test_outputs_emissions_s49; assert_in_delta(0.0, (worksheet.outputs_emissions_s49||0), 0.002); end
  def test_outputs_emissions_t49; assert_in_delta(0.0, (worksheet.outputs_emissions_t49||0), 0.002); end
  def test_outputs_emissions_u49; assert_in_delta(0.0, (worksheet.outputs_emissions_u49||0), 0.002); end
  def test_outputs_emissions_v49; assert_in_delta(0.0, (worksheet.outputs_emissions_v49||0), 0.002); end
  def test_outputs_emissions_w49; assert_in_delta(0.0, (worksheet.outputs_emissions_w49||0), 0.002); end
  def test_outputs_emissions_x49; assert_in_delta(0.0, (worksheet.outputs_emissions_x49||0), 0.002); end
  def test_outputs_emissions_c50; assert_equal("G.4", worksheet.outputs_emissions_c50); end
  def test_outputs_emissions_d50; assert_equal("Global Agriculture", worksheet.outputs_emissions_d50); end
  def test_outputs_emissions_h50; assert_in_epsilon(5.62178989983279, worksheet.outputs_emissions_h50, 0.002); end
  def test_outputs_emissions_i50; assert_in_epsilon(5.501831340352361, worksheet.outputs_emissions_i50, 0.002); end
  def test_outputs_emissions_j50; assert_in_epsilon(5.42376971473413, worksheet.outputs_emissions_j50, 0.002); end
  def test_outputs_emissions_k50; assert_in_epsilon(5.79845056426927, worksheet.outputs_emissions_k50, 0.002); end
  def test_outputs_emissions_l50; assert_in_epsilon(5.99880140697078, worksheet.outputs_emissions_l50, 0.002); end
  def test_outputs_emissions_p50; assert_in_epsilon(5.811749701999231, worksheet.outputs_emissions_p50, 0.002); end
  def test_outputs_emissions_q50; assert_in_epsilon(6.037122789833699, worksheet.outputs_emissions_q50, 0.002); end
  def test_outputs_emissions_r50; assert_in_epsilon(6.2578060900559676, worksheet.outputs_emissions_r50, 0.002); end
  def test_outputs_emissions_s50; assert_in_epsilon(6.4690434919138315, worksheet.outputs_emissions_s50, 0.002); end
  def test_outputs_emissions_t50; assert_in_epsilon(6.709379355638263, worksheet.outputs_emissions_t50, 0.002); end
  def test_outputs_emissions_u50; assert_in_epsilon(7.007988337384166, worksheet.outputs_emissions_u50, 0.002); end
  def test_outputs_emissions_v50; assert_in_epsilon(7.289963547942566, worksheet.outputs_emissions_v50, 0.002); end
  def test_outputs_emissions_w50; assert_in_epsilon(7.473401039851009, worksheet.outputs_emissions_w50, 0.002); end
  def test_outputs_emissions_x50; assert_in_epsilon(7.590987386587164, worksheet.outputs_emissions_x50, 0.002); end
  def test_outputs_emissions_c51; assert_equal("G.5", worksheet.outputs_emissions_c51); end
  def test_outputs_emissions_d51; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d51); end
  def test_outputs_emissions_h51; assert_in_epsilon(3.6209602100000002, worksheet.outputs_emissions_h51, 0.002); end
  def test_outputs_emissions_i51; assert_in_epsilon(3.59930749, worksheet.outputs_emissions_i51, 0.002); end
  def test_outputs_emissions_j51; assert_in_epsilon(3.59907449, worksheet.outputs_emissions_j51, 0.002); end
  def test_outputs_emissions_k51; assert_in_epsilon(2.63452254, worksheet.outputs_emissions_k51, 0.002); end
  def test_outputs_emissions_l51; assert_in_epsilon(2.6399138200000003, worksheet.outputs_emissions_l51, 0.002); end
  def test_outputs_emissions_p51; assert_in_epsilon(2.63991382, worksheet.outputs_emissions_p51, 0.002); end
  def test_outputs_emissions_q51; assert_in_epsilon(3.6687194906579537, worksheet.outputs_emissions_q51, 0.002); end
  def test_outputs_emissions_r51; assert_in_epsilon(1.5060653682104876, worksheet.outputs_emissions_r51, 0.002); end
  def test_outputs_emissions_s51; assert_in_epsilon(2.073022816301985, worksheet.outputs_emissions_s51, 0.002); end
  def test_outputs_emissions_t51; assert_in_epsilon(2.9316199674546475, worksheet.outputs_emissions_t51, 0.002); end
  def test_outputs_emissions_u51; assert_in_epsilon(7.367236472708873, worksheet.outputs_emissions_u51, 0.002); end
  def test_outputs_emissions_v51; assert_in_epsilon(5.600403404720063, worksheet.outputs_emissions_v51, 0.002); end
  def test_outputs_emissions_w51; assert_in_epsilon(3.2421917931209774, worksheet.outputs_emissions_w51, 0.002); end
  def test_outputs_emissions_x51; assert_in_epsilon(1.9361606155868212, worksheet.outputs_emissions_x51, 0.002); end
  def test_outputs_emissions_c52; assert_equal("G.6", worksheet.outputs_emissions_c52); end
  def test_outputs_emissions_d52; assert_equal("Global Waste", worksheet.outputs_emissions_d52); end
  def test_outputs_emissions_h52; assert_in_epsilon(1.1482566686108997, worksheet.outputs_emissions_h52, 0.002); end
  def test_outputs_emissions_i52; assert_in_epsilon(1.2261372752419115, worksheet.outputs_emissions_i52, 0.002); end
  def test_outputs_emissions_j52; assert_in_epsilon(1.2994175119148552, worksheet.outputs_emissions_j52, 0.002); end
  def test_outputs_emissions_k52; assert_in_epsilon(1.3788103753831609, worksheet.outputs_emissions_k52, 0.002); end
  def test_outputs_emissions_l52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_l52, 0.002); end
  def test_outputs_emissions_p52; assert_in_epsilon(1.4713627112678027, worksheet.outputs_emissions_p52, 0.002); end
  def test_outputs_emissions_q52; assert_in_epsilon(1.5038830116548827, worksheet.outputs_emissions_q52, 0.002); end
  def test_outputs_emissions_r52; assert_in_epsilon(1.5596322603861978, worksheet.outputs_emissions_r52, 0.002); end
  def test_outputs_emissions_s52; assert_in_epsilon(1.611785070718899, worksheet.outputs_emissions_s52, 0.002); end
  def test_outputs_emissions_t52; assert_in_epsilon(1.6692464662886561, worksheet.outputs_emissions_t52, 0.002); end
  def test_outputs_emissions_u52; assert_in_epsilon(1.7388055478934097, worksheet.outputs_emissions_u52, 0.002); end
  def test_outputs_emissions_v52; assert_in_epsilon(1.8032554205465716, worksheet.outputs_emissions_v52, 0.002); end
  def test_outputs_emissions_w52; assert_in_epsilon(1.8437688837559099, worksheet.outputs_emissions_w52, 0.002); end
  def test_outputs_emissions_x52; assert_in_epsilon(1.8679050293249544, worksheet.outputs_emissions_x52, 0.002); end
  def test_outputs_emissions_c53; assert_equal("G.7", worksheet.outputs_emissions_c53); end
  def test_outputs_emissions_d53; assert_equal("Global Other", worksheet.outputs_emissions_d53); end
  def test_outputs_emissions_h53; assert_in_delta(0.0, (worksheet.outputs_emissions_h53||0), 0.002); end
  def test_outputs_emissions_i53; assert_in_delta(0.0, (worksheet.outputs_emissions_i53||0), 0.002); end
  def test_outputs_emissions_j53; assert_in_delta(0.0, (worksheet.outputs_emissions_j53||0), 0.002); end
  def test_outputs_emissions_k53; assert_in_delta(0.0, (worksheet.outputs_emissions_k53||0), 0.002); end
  def test_outputs_emissions_l53; assert_in_delta(0.0, (worksheet.outputs_emissions_l53||0), 0.002); end
  def test_outputs_emissions_p53; assert_in_delta(0.0, (worksheet.outputs_emissions_p53||0), 0.002); end
  def test_outputs_emissions_q53; assert_in_delta(0.0, (worksheet.outputs_emissions_q53||0), 0.002); end
  def test_outputs_emissions_r53; assert_in_delta(0.0, (worksheet.outputs_emissions_r53||0), 0.002); end
  def test_outputs_emissions_s53; assert_in_delta(0.0, (worksheet.outputs_emissions_s53||0), 0.002); end
  def test_outputs_emissions_t53; assert_in_delta(0.0, (worksheet.outputs_emissions_t53||0), 0.002); end
  def test_outputs_emissions_u53; assert_in_delta(0.0, (worksheet.outputs_emissions_u53||0), 0.002); end
  def test_outputs_emissions_v53; assert_in_delta(0.0, (worksheet.outputs_emissions_v53||0), 0.002); end
  def test_outputs_emissions_w53; assert_in_delta(0.0, (worksheet.outputs_emissions_w53||0), 0.002); end
  def test_outputs_emissions_x53; assert_in_delta(0.0, (worksheet.outputs_emissions_x53||0), 0.002); end
  def test_outputs_emissions_d54; assert_equal("Total", worksheet.outputs_emissions_d54); end
  def test_outputs_emissions_h54; assert_in_epsilon(34.85493641440893, worksheet.outputs_emissions_h54, 0.002); end
  def test_outputs_emissions_i54; assert_in_epsilon(35.76871935887767, worksheet.outputs_emissions_i54, 0.002); end
  def test_outputs_emissions_j54; assert_in_epsilon(37.821748831061655, worksheet.outputs_emissions_j54, 0.002); end
  def test_outputs_emissions_k54; assert_in_epsilon(41.70222094182745, worksheet.outputs_emissions_k54, 0.002); end
  def test_outputs_emissions_l54; assert_in_epsilon(45.73429569959423, worksheet.outputs_emissions_l54, 0.002); end
  def test_outputs_emissions_p54; assert_in_epsilon(43.93434743610706, worksheet.outputs_emissions_p54, 0.002); end
  def test_outputs_emissions_q54; assert_in_epsilon(47.03986172683863, worksheet.outputs_emissions_q54, 0.002); end
  def test_outputs_emissions_r54; assert_in_epsilon(49.53456868671784, worksheet.outputs_emissions_r54, 0.002); end
  def test_outputs_emissions_s54; assert_in_epsilon(54.90010294906394, worksheet.outputs_emissions_s54, 0.002); end
  def test_outputs_emissions_t54; assert_in_epsilon(59.9298394778892, worksheet.outputs_emissions_t54, 0.002); end
  def test_outputs_emissions_u54; assert_in_epsilon(67.74340008121905, worksheet.outputs_emissions_u54, 0.002); end
  def test_outputs_emissions_v54; assert_in_epsilon(69.23126744988976, worksheet.outputs_emissions_v54, 0.002); end
  def test_outputs_emissions_w54; assert_in_epsilon(68.95209396252754, worksheet.outputs_emissions_w54, 0.002); end
  def test_outputs_emissions_x54; assert_in_epsilon(70.02660856176287, worksheet.outputs_emissions_x54, 0.002); end
  def test_outputs_emissions_y54; assert_in_epsilon(70.2777614946227, worksheet.outputs_emissions_y54, 0.002); end
  def test_outputs_emissions_z54; assert_in_epsilon(70.39287583954332, worksheet.outputs_emissions_z54, 0.002); end
  def test_outputs_emissions_aa54; assert_in_epsilon(70.55136184601506, worksheet.outputs_emissions_aa54, 0.002); end
  def test_outputs_emissions_ab54; assert_in_epsilon(70.60908470728279, worksheet.outputs_emissions_ab54, 0.002); end
  def test_outputs_emissions_ac54; assert_in_epsilon(70.64553026067541, worksheet.outputs_emissions_ac54, 0.002); end
  def test_outputs_emissions_ad54; assert_in_epsilon(70.67332224699994, worksheet.outputs_emissions_ad54, 0.002); end
  def test_outputs_emissions_ae54; assert_in_epsilon(70.68673789110828, worksheet.outputs_emissions_ae54, 0.002); end
  def test_outputs_emissions_af54; assert_in_epsilon(70.69527974132907, worksheet.outputs_emissions_af54, 0.002); end
  def test_outputs_emissions_ag54; assert_in_epsilon(70.70075218420098, worksheet.outputs_emissions_ag54, 0.002); end
  def test_outputs_emissions_ah54; assert_in_epsilon(70.7037694772931, worksheet.outputs_emissions_ah54, 0.002); end
  def test_outputs_emissions_d13; assert_equal("IPCC Sector", worksheet.outputs_emissions_d13); end
  def test_outputs_emissions_p13; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p13, 0.002); end
  def test_outputs_emissions_q13; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q13, 0.002); end
  def test_outputs_emissions_r13; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r13, 0.002); end
  def test_outputs_emissions_s13; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s13, 0.002); end
  def test_outputs_emissions_t13; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t13, 0.002); end
  def test_outputs_emissions_u13; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u13, 0.002); end
  def test_outputs_emissions_v13; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v13, 0.002); end
  def test_outputs_emissions_w13; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w13, 0.002); end
  def test_outputs_emissions_x13; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x13, 0.002); end
  def test_outputs_emissions_y13; assert_in_epsilon(2055.0, worksheet.outputs_emissions_y13, 0.002); end
  def test_outputs_emissions_z13; assert_in_epsilon(2060.0, worksheet.outputs_emissions_z13, 0.002); end
  def test_outputs_emissions_aa13; assert_in_epsilon(2065.0, worksheet.outputs_emissions_aa13, 0.002); end
  def test_outputs_emissions_ab13; assert_in_epsilon(2070.0, worksheet.outputs_emissions_ab13, 0.002); end
  def test_outputs_emissions_ac13; assert_in_epsilon(2075.0, worksheet.outputs_emissions_ac13, 0.002); end
  def test_outputs_emissions_ad13; assert_in_epsilon(2080.0, worksheet.outputs_emissions_ad13, 0.002); end
  def test_outputs_emissions_ae13; assert_in_epsilon(2085.0, worksheet.outputs_emissions_ae13, 0.002); end
  def test_outputs_emissions_af13; assert_in_epsilon(2090.0, worksheet.outputs_emissions_af13, 0.002); end
  def test_outputs_emissions_ag13; assert_in_epsilon(2095.0, worksheet.outputs_emissions_ag13, 0.002); end
  def test_outputs_emissions_ah13; assert_in_epsilon(2100.0, worksheet.outputs_emissions_ah13, 0.002); end
  def test_outputs_emissions_c14; assert_equal("G.1A", worksheet.outputs_emissions_c14); end
  def test_outputs_emissions_d14; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d14); end
  def test_outputs_emissions_p14; assert_in_epsilon(4.2263811757823655, worksheet.outputs_emissions_p14, 0.002); end
  def test_outputs_emissions_q14; assert_in_epsilon(4.233283517050608, worksheet.outputs_emissions_q14, 0.002); end
  def test_outputs_emissions_r14; assert_in_epsilon(4.5373546960491025, worksheet.outputs_emissions_r14, 0.002); end
  def test_outputs_emissions_s14; assert_in_epsilon(4.831209921716092, worksheet.outputs_emissions_s14, 0.002); end
  def test_outputs_emissions_t14; assert_in_epsilon(5.039056699236708, worksheet.outputs_emissions_t14, 0.002); end
  def test_outputs_emissions_u14; assert_in_epsilon(5.151497296112493, worksheet.outputs_emissions_u14, 0.002); end
  def test_outputs_emissions_v14; assert_in_epsilon(5.257249341715633, worksheet.outputs_emissions_v14, 0.002); end
  def test_outputs_emissions_w14; assert_in_epsilon(5.26234797098183, worksheet.outputs_emissions_w14, 0.002); end
  def test_outputs_emissions_x14; assert_in_epsilon(5.31871280616318, worksheet.outputs_emissions_x14, 0.002); end
  def test_outputs_emissions_c15; assert_equal("G.1B", worksheet.outputs_emissions_c15); end
  def test_outputs_emissions_d15; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d15); end
  def test_outputs_emissions_p15; assert_in_delta(0.295327219634128, worksheet.outputs_emissions_p15, 0.002); end
  def test_outputs_emissions_q15; assert_in_delta(0.2930354026363749, worksheet.outputs_emissions_q15, 0.002); end
  def test_outputs_emissions_r15; assert_in_delta(0.30798067736225687, worksheet.outputs_emissions_r15, 0.002); end
  def test_outputs_emissions_s15; assert_in_delta(0.3251504533925902, worksheet.outputs_emissions_s15, 0.002); end
  def test_outputs_emissions_t15; assert_in_delta(0.338755021885927, worksheet.outputs_emissions_t15, 0.002); end
  def test_outputs_emissions_u15; assert_in_delta(0.3466814161973832, worksheet.outputs_emissions_u15, 0.002); end
  def test_outputs_emissions_v15; assert_in_delta(0.3549234262613145, worksheet.outputs_emissions_v15, 0.002); end
  def test_outputs_emissions_w15; assert_in_delta(0.358724127096039, worksheet.outputs_emissions_w15, 0.002); end
  def test_outputs_emissions_x15; assert_in_delta(0.36678674438803727, worksheet.outputs_emissions_x15, 0.002); end
  def test_outputs_emissions_c16; assert_equal("G.2", worksheet.outputs_emissions_c16); end
  def test_outputs_emissions_d16; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d16); end
  def test_outputs_emissions_p16; assert_in_delta(0.36045848019057186, worksheet.outputs_emissions_p16, 0.002); end
  def test_outputs_emissions_q16; assert_in_delta(0.3653128633056161, worksheet.outputs_emissions_q16, 0.002); end
  def test_outputs_emissions_r16; assert_in_delta(0.36554617373565634, worksheet.outputs_emissions_r16, 0.002); end
  def test_outputs_emissions_s16; assert_in_delta(0.37920381914060597, worksheet.outputs_emissions_s16, 0.002); end
  def test_outputs_emissions_t16; assert_in_delta(0.3931030867278736, worksheet.outputs_emissions_t16, 0.002); end
  def test_outputs_emissions_u16; assert_in_delta(0.4067429648310283, worksheet.outputs_emissions_u16, 0.002); end
  def test_outputs_emissions_v16; assert_in_delta(0.4216289420148402, worksheet.outputs_emissions_v16, 0.002); end
  def test_outputs_emissions_w16; assert_in_delta(0.43716584106934764, worksheet.outputs_emissions_w16, 0.002); end
  def test_outputs_emissions_x16; assert_in_delta(0.45332289374763773, worksheet.outputs_emissions_x16, 0.002); end
  def test_outputs_emissions_c17; assert_equal("G.3", worksheet.outputs_emissions_c17); end
  def test_outputs_emissions_d17; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d17); end
  def test_outputs_emissions_p17; assert_in_delta(0.0, (worksheet.outputs_emissions_p17||0), 0.002); end
  def test_outputs_emissions_q17; assert_in_delta(0.0, (worksheet.outputs_emissions_q17||0), 0.002); end
  def test_outputs_emissions_r17; assert_in_delta(0.0, (worksheet.outputs_emissions_r17||0), 0.002); end
  def test_outputs_emissions_s17; assert_in_delta(0.0, (worksheet.outputs_emissions_s17||0), 0.002); end
  def test_outputs_emissions_t17; assert_in_delta(0.0, (worksheet.outputs_emissions_t17||0), 0.002); end
  def test_outputs_emissions_u17; assert_in_delta(0.0, (worksheet.outputs_emissions_u17||0), 0.002); end
  def test_outputs_emissions_v17; assert_in_delta(0.0, (worksheet.outputs_emissions_v17||0), 0.002); end
  def test_outputs_emissions_w17; assert_in_delta(0.0, (worksheet.outputs_emissions_w17||0), 0.002); end
  def test_outputs_emissions_x17; assert_in_delta(0.0, (worksheet.outputs_emissions_x17||0), 0.002); end
  def test_outputs_emissions_c18; assert_equal("G.4", worksheet.outputs_emissions_c18); end
  def test_outputs_emissions_d18; assert_equal("Global Agriculture", worksheet.outputs_emissions_d18); end
  def test_outputs_emissions_p18; assert_in_delta(0.8342496228006158, worksheet.outputs_emissions_p18, 0.002); end
  def test_outputs_emissions_q18; assert_in_delta(0.8242051148872005, worksheet.outputs_emissions_q18, 0.002); end
  def test_outputs_emissions_r18; assert_in_delta(0.8109381411856168, worksheet.outputs_emissions_r18, 0.002); end
  def test_outputs_emissions_s18; assert_in_delta(0.8002861528804517, worksheet.outputs_emissions_s18, 0.002); end
  def test_outputs_emissions_t18; assert_in_delta(0.7963714572154382, worksheet.outputs_emissions_t18, 0.002); end
  def test_outputs_emissions_u18; assert_in_delta(0.8015132175427112, worksheet.outputs_emissions_u18, 0.002); end
  def test_outputs_emissions_v18; assert_in_delta(0.8065290398862762, worksheet.outputs_emissions_v18, 0.002); end
  def test_outputs_emissions_w18; assert_in_delta(0.802863062508555, worksheet.outputs_emissions_w18, 0.002); end
  def test_outputs_emissions_x18; assert_in_delta(0.7947891424971208, worksheet.outputs_emissions_x18, 0.002); end
  def test_outputs_emissions_c19; assert_equal("G.5", worksheet.outputs_emissions_c19); end
  def test_outputs_emissions_d19; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d19); end
  def test_outputs_emissions_p19; assert_in_delta(0.3789473431389396, worksheet.outputs_emissions_p19, 0.002); end
  def test_outputs_emissions_q19; assert_in_delta(0.5008639834820959, worksheet.outputs_emissions_q19, 0.002); end
  def test_outputs_emissions_r19; assert_in_delta(0.1951683757253848, worksheet.outputs_emissions_r19, 0.002); end
  def test_outputs_emissions_s19; assert_in_delta(0.25645390335765167, worksheet.outputs_emissions_s19, 0.002); end
  def test_outputs_emissions_t19; assert_in_delta(0.3479693637417879, worksheet.outputs_emissions_t19, 0.002); end
  def test_outputs_emissions_u19; assert_in_delta(0.8426009184602906, worksheet.outputs_emissions_u19, 0.002); end
  def test_outputs_emissions_v19; assert_in_delta(0.619603644281527, worksheet.outputs_emissions_v19, 0.002); end
  def test_outputs_emissions_w19; assert_in_delta(0.3483067506192744, worksheet.outputs_emissions_w19, 0.002); end
  def test_outputs_emissions_x19; assert_in_delta(0.2027192718193667, worksheet.outputs_emissions_x19, 0.002); end
  def test_outputs_emissions_c20; assert_equal("G.6", worksheet.outputs_emissions_c20); end
  def test_outputs_emissions_d20; assert_equal("Global Waste", worksheet.outputs_emissions_d20); end
  def test_outputs_emissions_p20; assert_in_delta(0.21120726972391873, worksheet.outputs_emissions_p20, 0.002); end
  def test_outputs_emissions_q20; assert_in_delta(0.2053143713567015, worksheet.outputs_emissions_q20, 0.002); end
  def test_outputs_emissions_r20; assert_in_delta(0.2021100155500973, worksheet.outputs_emissions_r20, 0.002); end
  def test_outputs_emissions_s20; assert_in_delta(0.1993941260602296, worksheet.outputs_emissions_s20, 0.002); end
  def test_outputs_emissions_t20; assert_in_delta(0.19813162594434308, worksheet.outputs_emissions_t20, 0.002); end
  def test_outputs_emissions_u20; assert_in_delta(0.198869570307158, worksheet.outputs_emissions_u20, 0.002); end
  def test_outputs_emissions_v20; assert_in_delta(0.1995041337913982, worksheet.outputs_emissions_v20, 0.002); end
  def test_outputs_emissions_w20; assert_in_delta(0.198075002890486, worksheet.outputs_emissions_w20, 0.002); end
  def test_outputs_emissions_x20; assert_in_delta(0.19557279717608617, worksheet.outputs_emissions_x20, 0.002); end
  def test_outputs_emissions_c21; assert_equal("G.7", worksheet.outputs_emissions_c21); end
  def test_outputs_emissions_d21; assert_equal("Global Other", worksheet.outputs_emissions_d21); end
  def test_outputs_emissions_p21; assert_in_delta(0.0, (worksheet.outputs_emissions_p21||0), 0.002); end
  def test_outputs_emissions_q21; assert_in_delta(0.0, (worksheet.outputs_emissions_q21||0), 0.002); end
  def test_outputs_emissions_r21; assert_in_delta(0.0, (worksheet.outputs_emissions_r21||0), 0.002); end
  def test_outputs_emissions_s21; assert_in_delta(0.0, (worksheet.outputs_emissions_s21||0), 0.002); end
  def test_outputs_emissions_t21; assert_in_delta(0.0, (worksheet.outputs_emissions_t21||0), 0.002); end
  def test_outputs_emissions_u21; assert_in_delta(0.0, (worksheet.outputs_emissions_u21||0), 0.002); end
  def test_outputs_emissions_v21; assert_in_delta(0.0, (worksheet.outputs_emissions_v21||0), 0.002); end
  def test_outputs_emissions_w21; assert_in_delta(0.0, (worksheet.outputs_emissions_w21||0), 0.002); end
  def test_outputs_emissions_x21; assert_in_delta(0.0, (worksheet.outputs_emissions_x21||0), 0.002); end
  def test_outputs_emissions_d22; assert_equal("Total", worksheet.outputs_emissions_d22); end
  def test_outputs_emissions_p22; assert_in_epsilon(6.30657111127054, worksheet.outputs_emissions_p22, 0.002); end
  def test_outputs_emissions_q22; assert_in_epsilon(6.422015252718595, worksheet.outputs_emissions_q22, 0.002); end
  def test_outputs_emissions_r22; assert_in_epsilon(6.419098079608115, worksheet.outputs_emissions_r22, 0.002); end
  def test_outputs_emissions_s22; assert_in_epsilon(6.79169837654762, worksheet.outputs_emissions_s22, 0.002); end
  def test_outputs_emissions_t22; assert_in_epsilon(7.1133872547520784, worksheet.outputs_emissions_t22, 0.002); end
  def test_outputs_emissions_u22; assert_in_epsilon(7.747905383451064, worksheet.outputs_emissions_u22, 0.002); end
  def test_outputs_emissions_v22; assert_in_epsilon(7.65943852795099, worksheet.outputs_emissions_v22, 0.002); end
  def test_outputs_emissions_w22; assert_in_epsilon(7.407482755165533, worksheet.outputs_emissions_w22, 0.002); end
  def test_outputs_emissions_x22; assert_in_epsilon(7.331903655791429, worksheet.outputs_emissions_x22, 0.002); end
  def test_outputs_emissions_x232; assert_in_delta(-0.2681040139240685, worksheet.outputs_emissions_x232, 0.002); end
  def test_outputs_emissions_c213; assert_equal("Method", worksheet.outputs_emissions_c213); end
  def test_outputs_emissions_p213; assert_in_epsilon(2011.0, worksheet.outputs_emissions_p213, 0.002); end
  def test_outputs_emissions_q213; assert_in_epsilon(2015.0, worksheet.outputs_emissions_q213, 0.002); end
  def test_outputs_emissions_r213; assert_in_epsilon(2020.0, worksheet.outputs_emissions_r213, 0.002); end
  def test_outputs_emissions_s213; assert_in_epsilon(2025.0, worksheet.outputs_emissions_s213, 0.002); end
  def test_outputs_emissions_t213; assert_in_epsilon(2030.0, worksheet.outputs_emissions_t213, 0.002); end
  def test_outputs_emissions_u213; assert_in_epsilon(2035.0, worksheet.outputs_emissions_u213, 0.002); end
  def test_outputs_emissions_v213; assert_in_epsilon(2040.0, worksheet.outputs_emissions_v213, 0.002); end
  def test_outputs_emissions_w213; assert_in_epsilon(2045.0, worksheet.outputs_emissions_w213, 0.002); end
  def test_outputs_emissions_x213; assert_in_epsilon(2050.0, worksheet.outputs_emissions_x213, 0.002); end
  def test_outputs_emissions_c214; assert_equal("Biochar", worksheet.outputs_emissions_c214); end
  def test_outputs_emissions_d214; assert_equal("GGR.biochar", worksheet.outputs_emissions_d214); end
  def test_outputs_emissions_f214; assert_equal("CO2", worksheet.outputs_emissions_f214); end
  def test_outputs_emissions_p214; assert_in_delta(0.0, (worksheet.outputs_emissions_p214||0), 0.002); end
  def test_outputs_emissions_q214; assert_in_delta(0.0, (worksheet.outputs_emissions_q214||0), 0.002); end
  def test_outputs_emissions_r214; assert_in_delta(0.0, (worksheet.outputs_emissions_r214||0), 0.002); end
  def test_outputs_emissions_s214; assert_in_delta(0.0, (worksheet.outputs_emissions_s214||0), 0.002); end
  def test_outputs_emissions_t214; assert_in_delta(0.0, (worksheet.outputs_emissions_t214||0), 0.002); end
  def test_outputs_emissions_u214; assert_in_delta(0.0, (worksheet.outputs_emissions_u214||0), 0.002); end
  def test_outputs_emissions_v214; assert_in_delta(0.0, (worksheet.outputs_emissions_v214||0), 0.002); end
  def test_outputs_emissions_w214; assert_in_delta(0.0, (worksheet.outputs_emissions_w214||0), 0.002); end
  def test_outputs_emissions_x214; assert_in_delta(0.0, (worksheet.outputs_emissions_x214||0), 0.002); end
  def test_outputs_emissions_c215; assert_equal("Air capture", worksheet.outputs_emissions_c215); end
  def test_outputs_emissions_d215; assert_equal("GGR.air.capture", worksheet.outputs_emissions_d215); end
  def test_outputs_emissions_f215; assert_equal("CO2", worksheet.outputs_emissions_f215); end
  def test_outputs_emissions_p215; assert_in_delta(0.0, (worksheet.outputs_emissions_p215||0), 0.002); end
  def test_outputs_emissions_q215; assert_in_delta(0.0, (worksheet.outputs_emissions_q215||0), 0.002); end
  def test_outputs_emissions_r215; assert_in_delta(0.0, (worksheet.outputs_emissions_r215||0), 0.002); end
  def test_outputs_emissions_s215; assert_in_delta(0.0, (worksheet.outputs_emissions_s215||0), 0.002); end
  def test_outputs_emissions_t215; assert_in_delta(0.0, (worksheet.outputs_emissions_t215||0), 0.002); end
  def test_outputs_emissions_u215; assert_in_delta(0.0, (worksheet.outputs_emissions_u215||0), 0.002); end
  def test_outputs_emissions_v215; assert_in_delta(0.0, (worksheet.outputs_emissions_v215||0), 0.002); end
  def test_outputs_emissions_w215; assert_in_delta(0.0, (worksheet.outputs_emissions_w215||0), 0.002); end
  def test_outputs_emissions_x215; assert_in_delta(0.0, (worksheet.outputs_emissions_x215||0), 0.002); end
  def test_outputs_emissions_c216; assert_equal("Ocean fertilisation", worksheet.outputs_emissions_c216); end
  def test_outputs_emissions_d216; assert_equal("GGR.ocean.fertilisation", worksheet.outputs_emissions_d216); end
  def test_outputs_emissions_f216; assert_equal("CO2", worksheet.outputs_emissions_f216); end
  def test_outputs_emissions_p216; assert_in_delta(0.0, (worksheet.outputs_emissions_p216||0), 0.002); end
  def test_outputs_emissions_q216; assert_in_delta(0.0, (worksheet.outputs_emissions_q216||0), 0.002); end
  def test_outputs_emissions_r216; assert_in_delta(0.0, (worksheet.outputs_emissions_r216||0), 0.002); end
  def test_outputs_emissions_s216; assert_in_delta(0.0, (worksheet.outputs_emissions_s216||0), 0.002); end
  def test_outputs_emissions_t216; assert_in_delta(0.0, (worksheet.outputs_emissions_t216||0), 0.002); end
  def test_outputs_emissions_u216; assert_in_delta(0.0, (worksheet.outputs_emissions_u216||0), 0.002); end
  def test_outputs_emissions_v216; assert_in_delta(0.0, (worksheet.outputs_emissions_v216||0), 0.002); end
  def test_outputs_emissions_w216; assert_in_delta(0.0, (worksheet.outputs_emissions_w216||0), 0.002); end
  def test_outputs_emissions_x216; assert_in_delta(0.0, (worksheet.outputs_emissions_x216||0), 0.002); end
  def test_outputs_emissions_c217; assert_equal("Enhanced weathering ocean", worksheet.outputs_emissions_c217); end
  def test_outputs_emissions_d217; assert_equal("GGR.enhanced.weathering.ocean", worksheet.outputs_emissions_d217); end
  def test_outputs_emissions_f217; assert_equal("CO2", worksheet.outputs_emissions_f217); end
  def test_outputs_emissions_p217; assert_in_delta(0.0, (worksheet.outputs_emissions_p217||0), 0.002); end
  def test_outputs_emissions_q217; assert_in_delta(0.0, (worksheet.outputs_emissions_q217||0), 0.002); end
  def test_outputs_emissions_r217; assert_in_delta(0.0, (worksheet.outputs_emissions_r217||0), 0.002); end
  def test_outputs_emissions_s217; assert_in_delta(0.0, (worksheet.outputs_emissions_s217||0), 0.002); end
  def test_outputs_emissions_t217; assert_in_delta(0.0, (worksheet.outputs_emissions_t217||0), 0.002); end
  def test_outputs_emissions_u217; assert_in_delta(0.0, (worksheet.outputs_emissions_u217||0), 0.002); end
  def test_outputs_emissions_v217; assert_in_delta(0.0, (worksheet.outputs_emissions_v217||0), 0.002); end
  def test_outputs_emissions_w217; assert_in_delta(0.0, (worksheet.outputs_emissions_w217||0), 0.002); end
  def test_outputs_emissions_x217; assert_in_delta(0.0, (worksheet.outputs_emissions_x217||0), 0.002); end
  def test_outputs_emissions_c218; assert_equal("Enhanced weathering terrestrial", worksheet.outputs_emissions_c218); end
  def test_outputs_emissions_d218; assert_equal("GGR.enhanced.weathering.terrestrial", worksheet.outputs_emissions_d218); end
  def test_outputs_emissions_f218; assert_equal("CO2", worksheet.outputs_emissions_f218); end
  def test_outputs_emissions_p218; assert_in_delta(0.0, (worksheet.outputs_emissions_p218||0), 0.002); end
  def test_outputs_emissions_q218; assert_in_delta(0.0, (worksheet.outputs_emissions_q218||0), 0.002); end
  def test_outputs_emissions_r218; assert_in_delta(0.0, (worksheet.outputs_emissions_r218||0), 0.002); end
  def test_outputs_emissions_s218; assert_in_delta(0.0, (worksheet.outputs_emissions_s218||0), 0.002); end
  def test_outputs_emissions_t218; assert_in_delta(0.0, (worksheet.outputs_emissions_t218||0), 0.002); end
  def test_outputs_emissions_u218; assert_in_delta(0.0, (worksheet.outputs_emissions_u218||0), 0.002); end
  def test_outputs_emissions_v218; assert_in_delta(0.0, (worksheet.outputs_emissions_v218||0), 0.002); end
  def test_outputs_emissions_w218; assert_in_delta(0.0, (worksheet.outputs_emissions_w218||0), 0.002); end
  def test_outputs_emissions_x218; assert_in_delta(0.0, (worksheet.outputs_emissions_x218||0), 0.002); end
  def test_outputs_emissions_h183; assert_in_delta(0.012219185474713169, worksheet.outputs_emissions_h183, 0.002); end
  def test_outputs_emissions_i183; assert_in_delta(0.01203682888170151, worksheet.outputs_emissions_i183, 0.002); end
  def test_outputs_emissions_j183; assert_in_delta(0.011848757243237622, worksheet.outputs_emissions_j183, 0.002); end
  def test_outputs_emissions_k183; assert_in_delta(0.012691091043429093, worksheet.outputs_emissions_k183, 0.002); end
  def test_outputs_emissions_l183; assert_in_delta(0.013268513817881094, worksheet.outputs_emissions_l183, 0.002); end
  def test_outputs_emissions_p183; assert_in_delta(0.008941453158145452, worksheet.outputs_emissions_p183, 0.002); end
  def test_outputs_emissions_q183; assert_in_delta(0.009276308020056917, worksheet.outputs_emissions_q183, 0.002); end
  def test_outputs_emissions_r183; assert_in_delta(0.009706655835341273, worksheet.outputs_emissions_r183, 0.002); end
  def test_outputs_emissions_s183; assert_in_delta(0.010143119552825269, worksheet.outputs_emissions_s183, 0.002); end
  def test_outputs_emissions_t183; assert_in_delta(0.010591073728996446, worksheet.outputs_emissions_t183, 0.002); end
  def test_outputs_emissions_u183; assert_in_delta(0.011072288096266276, worksheet.outputs_emissions_u183, 0.002); end
  def test_outputs_emissions_v183; assert_in_delta(0.011550689490378055, worksheet.outputs_emissions_v183, 0.002); end
  def test_outputs_emissions_w183; assert_in_delta(0.011903020197170707, worksheet.outputs_emissions_w183, 0.002); end
  def test_outputs_emissions_x183; assert_in_delta(0.012195531436680363, worksheet.outputs_emissions_x183, 0.002); end
  def test_outputs_emissions_y183; assert_in_delta(0.012319088204125913, worksheet.outputs_emissions_y183, 0.002); end
  def test_outputs_emissions_z183; assert_in_delta(0.012403612062638177, worksheet.outputs_emissions_z183, 0.002); end
  def test_outputs_emissions_aa183; assert_in_delta(0.0124586771678396, worksheet.outputs_emissions_aa183, 0.002); end
  def test_outputs_emissions_ab183; assert_in_delta(0.012487623198267116, worksheet.outputs_emissions_ab183, 0.002); end
  def test_outputs_emissions_ac183; assert_in_delta(0.012506162047622648, worksheet.outputs_emissions_ac183, 0.002); end
  def test_outputs_emissions_ad183; assert_in_delta(0.01251744254597094, worksheet.outputs_emissions_ad183, 0.002); end
  def test_outputs_emissions_ae183; assert_in_delta(0.012523906737565389, worksheet.outputs_emissions_ae183, 0.002); end
  def test_outputs_emissions_af183; assert_in_delta(0.012527897926888198, worksheet.outputs_emissions_af183, 0.002); end
  def test_outputs_emissions_ag183; assert_in_delta(0.012530288873607407, worksheet.outputs_emissions_ag183, 0.002); end
  def test_outputs_emissions_ah183; assert_in_delta(0.012531701969647419, worksheet.outputs_emissions_ah183, 0.002); end
  def test_outputs_emissions_c174; assert_equal("Column1", worksheet.outputs_emissions_c174); end
  def test_outputs_emissions_d174; assert_equal("IPCC Sector", worksheet.outputs_emissions_d174); end
  def test_outputs_emissions_h174; assert_equal("1990", worksheet.outputs_emissions_h174); end
  def test_outputs_emissions_i174; assert_equal("1995", worksheet.outputs_emissions_i174); end
  def test_outputs_emissions_j174; assert_equal("2000", worksheet.outputs_emissions_j174); end
  def test_outputs_emissions_k174; assert_equal("2005", worksheet.outputs_emissions_k174); end
  def test_outputs_emissions_l174; assert_equal("2010", worksheet.outputs_emissions_l174); end
  def test_outputs_emissions_p174; assert_equal("2011", worksheet.outputs_emissions_p174); end
  def test_outputs_emissions_q174; assert_equal("2015", worksheet.outputs_emissions_q174); end
  def test_outputs_emissions_r174; assert_equal("2020", worksheet.outputs_emissions_r174); end
  def test_outputs_emissions_s174; assert_equal("2025", worksheet.outputs_emissions_s174); end
  def test_outputs_emissions_t174; assert_equal("2030", worksheet.outputs_emissions_t174); end
  def test_outputs_emissions_u174; assert_equal("2035", worksheet.outputs_emissions_u174); end
  def test_outputs_emissions_v174; assert_equal("2040", worksheet.outputs_emissions_v174); end
  def test_outputs_emissions_w174; assert_equal("2045", worksheet.outputs_emissions_w174); end
  def test_outputs_emissions_x174; assert_equal("2050", worksheet.outputs_emissions_x174); end
  def test_outputs_emissions_y174; assert_equal("2055", worksheet.outputs_emissions_y174); end
  def test_outputs_emissions_z174; assert_equal("2060", worksheet.outputs_emissions_z174); end
  def test_outputs_emissions_aa174; assert_equal("2065", worksheet.outputs_emissions_aa174); end
  def test_outputs_emissions_ab174; assert_equal("2070", worksheet.outputs_emissions_ab174); end
  def test_outputs_emissions_ac174; assert_equal("2075", worksheet.outputs_emissions_ac174); end
  def test_outputs_emissions_ad174; assert_equal("2080", worksheet.outputs_emissions_ad174); end
  def test_outputs_emissions_ae174; assert_equal("2085", worksheet.outputs_emissions_ae174); end
  def test_outputs_emissions_af174; assert_equal("2090", worksheet.outputs_emissions_af174); end
  def test_outputs_emissions_ag174; assert_equal("2095", worksheet.outputs_emissions_ag174); end
  def test_outputs_emissions_ah174; assert_equal("2100", worksheet.outputs_emissions_ah174); end
  def test_outputs_emissions_c175; assert_equal("G.1A", worksheet.outputs_emissions_c175); end
  def test_outputs_emissions_d175; assert_equal("Global Fuel Combustion", worksheet.outputs_emissions_d175); end
  def test_outputs_emissions_h175; assert_in_delta(0.0009130686233989812, worksheet.outputs_emissions_h175, 0.002); end
  def test_outputs_emissions_i175; assert_in_delta(0.0009965133809872679, worksheet.outputs_emissions_i175, 0.002); end
  def test_outputs_emissions_j175; assert_in_delta(0.001054643547268351, worksheet.outputs_emissions_j175, 0.002); end
  def test_outputs_emissions_k175; assert_in_delta(0.001146013024618166, worksheet.outputs_emissions_k175, 0.002); end
  def test_outputs_emissions_l175; assert_in_delta(0.0012359546542829699, worksheet.outputs_emissions_l175, 0.002); end
  def test_outputs_emissions_p175; assert_in_delta(0.0010185864568150167, worksheet.outputs_emissions_p175, 0.002); end
  def test_outputs_emissions_q175; assert_in_delta(0.0011315780474885021, worksheet.outputs_emissions_q175, 0.002); end
  def test_outputs_emissions_r175; assert_in_delta(0.0012953632634999058, worksheet.outputs_emissions_r175, 0.002); end
  def test_outputs_emissions_s175; assert_in_delta(0.0014463682588931543, worksheet.outputs_emissions_s175, 0.002); end
  def test_outputs_emissions_t175; assert_in_delta(0.0015729112906404756, worksheet.outputs_emissions_t175, 0.002); end
  def test_outputs_emissions_u175; assert_in_delta(0.0016661690900792265, worksheet.outputs_emissions_u175, 0.002); end
  def test_outputs_emissions_v175; assert_in_delta(0.0017701332601472333, worksheet.outputs_emissions_v175, 0.002); end
  def test_outputs_emissions_w175; assert_in_delta(0.0018650414225143818, worksheet.outputs_emissions_w175, 0.002); end
  def test_outputs_emissions_x175; assert_in_delta(0.0019703468997175366, worksheet.outputs_emissions_x175, 0.002); end
  def test_outputs_emissions_c176; assert_equal("G.1B", worksheet.outputs_emissions_c176); end
  def test_outputs_emissions_d176; assert_equal("Global Fugitive Emissions from Fuels", worksheet.outputs_emissions_d176); end
  def test_outputs_emissions_h176; assert_in_delta(0.0, (worksheet.outputs_emissions_h176||0), 0.002); end
  def test_outputs_emissions_i176; assert_in_delta(0.0, (worksheet.outputs_emissions_i176||0), 0.002); end
  def test_outputs_emissions_j176; assert_in_delta(0.0, (worksheet.outputs_emissions_j176||0), 0.002); end
  def test_outputs_emissions_k176; assert_in_delta(0.0, (worksheet.outputs_emissions_k176||0), 0.002); end
  def test_outputs_emissions_l176; assert_in_delta(0.0, (worksheet.outputs_emissions_l176||0), 0.002); end
  def test_outputs_emissions_p176; assert_in_delta(0.0, (worksheet.outputs_emissions_p176||0), 0.002); end
  def test_outputs_emissions_q176; assert_in_delta(0.0, (worksheet.outputs_emissions_q176||0), 0.002); end
  def test_outputs_emissions_r176; assert_in_delta(0.0, (worksheet.outputs_emissions_r176||0), 0.002); end
  def test_outputs_emissions_s176; assert_in_delta(0.0, (worksheet.outputs_emissions_s176||0), 0.002); end
  def test_outputs_emissions_t176; assert_in_delta(0.0, (worksheet.outputs_emissions_t176||0), 0.002); end
  def test_outputs_emissions_u176; assert_in_delta(0.0, (worksheet.outputs_emissions_u176||0), 0.002); end
  def test_outputs_emissions_v176; assert_in_delta(0.0, (worksheet.outputs_emissions_v176||0), 0.002); end
  def test_outputs_emissions_w176; assert_in_delta(0.0, (worksheet.outputs_emissions_w176||0), 0.002); end
  def test_outputs_emissions_x176; assert_in_delta(0.0, (worksheet.outputs_emissions_x176||0), 0.002); end
  def test_outputs_emissions_c177; assert_equal("G.2", worksheet.outputs_emissions_c177); end
  def test_outputs_emissions_d177; assert_equal("Global Industrial Processes", worksheet.outputs_emissions_d177); end
  def test_outputs_emissions_h177; assert_in_delta(0.0010588904336770641, worksheet.outputs_emissions_h177, 0.002); end
  def test_outputs_emissions_i177; assert_in_delta(0.001058384026600717, worksheet.outputs_emissions_i177, 0.002); end
  def test_outputs_emissions_j177; assert_in_delta(0.0008160774983504037, worksheet.outputs_emissions_j177, 0.002); end
  def test_outputs_emissions_k177; assert_in_delta(0.0007678739913186566, worksheet.outputs_emissions_k177, 0.002); end
  def test_outputs_emissions_l177; assert_in_delta(0.0007341236710068264, worksheet.outputs_emissions_l177, 0.002); end
  def test_outputs_emissions_p177; assert_in_delta(0.00044470400000000014, worksheet.outputs_emissions_p177, 0.002); end
  def test_outputs_emissions_q177; assert_in_delta(0.000477213637648572, worksheet.outputs_emissions_q177, 0.002); end
  def test_outputs_emissions_r177; assert_in_delta(0.0005093537939539726, worksheet.outputs_emissions_r177, 0.002); end
  def test_outputs_emissions_s177; assert_in_delta(0.0005733461885135949, worksheet.outputs_emissions_s177, 0.002); end
  def test_outputs_emissions_t177; assert_in_delta(0.0006403181384179557, worksheet.outputs_emissions_t177, 0.002); end
  def test_outputs_emissions_u177; assert_in_delta(0.0007066411715826191, worksheet.outputs_emissions_u177, 0.002); end
  def test_outputs_emissions_v177; assert_in_delta(0.0007808382134111221, worksheet.outputs_emissions_v177, 0.002); end
  def test_outputs_emissions_w177; assert_in_delta(0.000854993093822311, worksheet.outputs_emissions_w177, 0.002); end
  def test_outputs_emissions_x177; assert_in_delta(0.0009365354325254607, worksheet.outputs_emissions_x177, 0.002); end
  def test_outputs_emissions_c178; assert_equal("G.3", worksheet.outputs_emissions_c178); end
  def test_outputs_emissions_d178; assert_equal("Global Solvent and Other Product Use", worksheet.outputs_emissions_d178); end
  def test_outputs_emissions_h178; assert_in_delta(0.0, (worksheet.outputs_emissions_h178||0), 0.002); end
  def test_outputs_emissions_i178; assert_in_delta(0.0, (worksheet.outputs_emissions_i178||0), 0.002); end
  def test_outputs_emissions_j178; assert_in_delta(0.0, (worksheet.outputs_emissions_j178||0), 0.002); end
  def test_outputs_emissions_k178; assert_in_delta(0.0, (worksheet.outputs_emissions_k178||0), 0.002); end
  def test_outputs_emissions_l178; assert_in_delta(0.0, (worksheet.outputs_emissions_l178||0), 0.002); end
  def test_outputs_emissions_p178; assert_in_delta(0.0, (worksheet.outputs_emissions_p178||0), 0.002); end
  def test_outputs_emissions_q178; assert_in_delta(0.0, (worksheet.outputs_emissions_q178||0), 0.002); end
  def test_outputs_emissions_r178; assert_in_delta(0.0, (worksheet.outputs_emissions_r178||0), 0.002); end
  def test_outputs_emissions_s178; assert_in_delta(0.0, (worksheet.outputs_emissions_s178||0), 0.002); end
  def test_outputs_emissions_t178; assert_in_delta(0.0, (worksheet.outputs_emissions_t178||0), 0.002); end
  def test_outputs_emissions_u178; assert_in_delta(0.0, (worksheet.outputs_emissions_u178||0), 0.002); end
  def test_outputs_emissions_v178; assert_in_delta(0.0, (worksheet.outputs_emissions_v178||0), 0.002); end
  def test_outputs_emissions_w178; assert_in_delta(0.0, (worksheet.outputs_emissions_w178||0), 0.002); end
  def test_outputs_emissions_x178; assert_in_delta(0.0, (worksheet.outputs_emissions_x178||0), 0.002); end
  def test_outputs_emissions_c179; assert_equal("G.4", worksheet.outputs_emissions_c179); end
  def test_outputs_emissions_d179; assert_equal("Global Agriculture", worksheet.outputs_emissions_d179); end
  def test_outputs_emissions_h179; assert_in_delta(0.009956991391139623, worksheet.outputs_emissions_h179, 0.002); end
  def test_outputs_emissions_i179; assert_in_delta(0.009679164975862868, worksheet.outputs_emissions_i179, 0.002); end
  def test_outputs_emissions_j179; assert_in_delta(0.009651220745010868, worksheet.outputs_emissions_j179, 0.002); end
  def test_outputs_emissions_k179; assert_in_delta(0.01042663335693185, worksheet.outputs_emissions_k179, 0.002); end
  def test_outputs_emissions_l179; assert_in_delta(0.010931037319002792, worksheet.outputs_emissions_l179, 0.002); end
  def test_outputs_emissions_p179; assert_in_delta(0.0071107645277419355, worksheet.outputs_emissions_p179, 0.002); end
  def test_outputs_emissions_q179; assert_in_delta(0.0072919978665357335, worksheet.outputs_emissions_q179, 0.002); end
  def test_outputs_emissions_r179; assert_in_delta(0.007512499763599844, worksheet.outputs_emissions_r179, 0.002); end
  def test_outputs_emissions_s179; assert_in_delta(0.007720943573218148, worksheet.outputs_emissions_s179, 0.002); end
  def test_outputs_emissions_t179; assert_in_delta(0.007961034700043317, worksheet.outputs_emissions_t179, 0.002); end
  def test_outputs_emissions_u179; assert_in_delta(0.008265299383819077, worksheet.outputs_emissions_u179, 0.002); end
  def test_outputs_emissions_v179; assert_in_delta(0.00854944648081515, worksheet.outputs_emissions_v179, 0.002); end
  def test_outputs_emissions_w179; assert_in_delta(0.008722597963227968, worksheet.outputs_emissions_w179, 0.002); end
  def test_outputs_emissions_x179; assert_in_delta(0.008822234609251852, worksheet.outputs_emissions_x179, 0.002); end
  def test_outputs_emissions_c180; assert_equal("G.5", worksheet.outputs_emissions_c180); end
  def test_outputs_emissions_d180; assert_equal("Global Land Use, Land-Use Change and Forestry", worksheet.outputs_emissions_d180); end
  def test_outputs_emissions_h180; assert_in_delta(0.0, (worksheet.outputs_emissions_h180||0), 0.002); end
  def test_outputs_emissions_i180; assert_in_delta(0.0, (worksheet.outputs_emissions_i180||0), 0.002); end
  def test_outputs_emissions_j180; assert_in_delta(0.0, (worksheet.outputs_emissions_j180||0), 0.002); end
  def test_outputs_emissions_k180; assert_in_delta(0.0, (worksheet.outputs_emissions_k180||0), 0.002); end
  def test_outputs_emissions_l180; assert_in_delta(0.0, (worksheet.outputs_emissions_l180||0), 0.002); end
  def test_outputs_emissions_p180; assert_in_delta(0.0, (worksheet.outputs_emissions_p180||0), 0.002); end
  def test_outputs_emissions_q180; assert_in_delta(0.0, (worksheet.outputs_emissions_q180||0), 0.002); end
  def test_outputs_emissions_r180; assert_in_delta(0.0, (worksheet.outputs_emissions_r180||0), 0.002); end
  def test_outputs_emissions_s180; assert_in_delta(0.0, (worksheet.outputs_emissions_s180||0), 0.002); end
  def test_outputs_emissions_t180; assert_in_delta(0.0, (worksheet.outputs_emissions_t180||0), 0.002); end
  def test_outputs_emissions_u180; assert_in_delta(0.0, (worksheet.outputs_emissions_u180||0), 0.002); end
  def test_outputs_emissions_v180; assert_in_delta(0.0, (worksheet.outputs_emissions_v180||0), 0.002); end
  def test_outputs_emissions_w180; assert_in_delta(0.0, (worksheet.outputs_emissions_w180||0), 0.002); end
  def test_outputs_emissions_x180; assert_in_delta(0.0, (worksheet.outputs_emissions_x180||0), 0.002); end
  def test_outputs_emissions_c181; assert_equal("G.6", worksheet.outputs_emissions_c181); end
  def test_outputs_emissions_d181; assert_equal("Global Waste", worksheet.outputs_emissions_d181); end
  def test_outputs_emissions_h181; assert_in_delta(0.0002902350264975083, worksheet.outputs_emissions_h181, 0.002); end
  def test_outputs_emissions_i181; assert_in_delta(0.0003027664982506464, worksheet.outputs_emissions_i181, 0.002); end
  def test_outputs_emissions_j181; assert_in_delta(0.0003268154526079815, worksheet.outputs_emissions_j181, 0.002); end
  def test_outputs_emissions_k181; assert_in_delta(0.0003505706705604558, worksheet.outputs_emissions_k181, 0.002); end
  def test_outputs_emissions_l181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_l181, 0.002); end
  def test_outputs_emissions_p181; assert_in_delta(0.0003673981735885, worksheet.outputs_emissions_p181, 0.002); end
  def test_outputs_emissions_q181; assert_in_delta(0.00037551846838411, worksheet.outputs_emissions_q181, 0.002); end
  def test_outputs_emissions_r181; assert_in_delta(0.00038943901428755193, worksheet.outputs_emissions_r181, 0.002); end
  def test_outputs_emissions_s181; assert_in_delta(0.0004024615322003729, worksheet.outputs_emissions_s181, 0.002); end
  def test_outputs_emissions_t181; assert_in_delta(0.0004168095998946973, worksheet.outputs_emissions_t181, 0.002); end
  def test_outputs_emissions_u181; assert_in_delta(0.00043417845078535204, worksheet.outputs_emissions_u181, 0.002); end
  def test_outputs_emissions_v181; assert_in_delta(0.00045027153600455007, worksheet.outputs_emissions_v181, 0.002); end
  def test_outputs_emissions_w181; assert_in_delta(0.0004603877176060469, worksheet.outputs_emissions_w181, 0.002); end
  def test_outputs_emissions_x181; assert_in_delta(0.00046641449518551424, worksheet.outputs_emissions_x181, 0.002); end
  def test_outputs_emissions_c182; assert_equal("G.7", worksheet.outputs_emissions_c182); end
  def test_outputs_emissions_d182; assert_equal("Global Other", worksheet.outputs_emissions_d182); end
  def test_outputs_emissions_h182; assert_in_delta(0.0, (worksheet.outputs_emissions_h182||0), 0.002); end
  def test_outputs_emissions_i182; assert_in_delta(0.0, (worksheet.outputs_emissions_i182||0), 0.002); end
  def test_outputs_emissions_j182; assert_in_delta(0.0, (worksheet.outputs_emissions_j182||0), 0.002); end
  def test_outputs_emissions_k182; assert_in_delta(0.0, (worksheet.outputs_emissions_k182||0), 0.002); end
  def test_outputs_emissions_l182; assert_in_delta(0.0, (worksheet.outputs_emissions_l182||0), 0.002); end
  def test_outputs_emissions_p182; assert_in_delta(0.0, (worksheet.outputs_emissions_p182||0), 0.002); end
  def test_outputs_emissions_q182; assert_in_delta(0.0, (worksheet.outputs_emissions_q182||0), 0.002); end
  def test_outputs_emissions_r182; assert_in_delta(0.0, (worksheet.outputs_emissions_r182||0), 0.002); end
  def test_outputs_emissions_s182; assert_in_delta(0.0, (worksheet.outputs_emissions_s182||0), 0.002); end
  def test_outputs_emissions_t182; assert_in_delta(0.0, (worksheet.outputs_emissions_t182||0), 0.002); end
  def test_outputs_emissions_u182; assert_in_delta(0.0, (worksheet.outputs_emissions_u182||0), 0.002); end
  def test_outputs_emissions_v182; assert_in_delta(0.0, (worksheet.outputs_emissions_v182||0), 0.002); end
  def test_outputs_emissions_w182; assert_in_delta(0.0, (worksheet.outputs_emissions_w182||0), 0.002); end
  def test_outputs_emissions_x182; assert_in_delta(0.0, (worksheet.outputs_emissions_x182||0), 0.002); end
  def test_outputs_emissions_d183; assert_equal("Total", worksheet.outputs_emissions_d183); end
  def test_outputs_emissions_d184; assert_equal("Cumulative emissions", worksheet.outputs_emissions_d184); end
  def test_outputs_emissions_p184; assert_in_delta(0.008941453158145452, worksheet.outputs_emissions_p184, 0.002); end
  def test_outputs_emissions_q184; assert_in_delta(0.01821776117820237, worksheet.outputs_emissions_q184, 0.002); end
  def test_outputs_emissions_r184; assert_in_delta(0.027924417013543642, worksheet.outputs_emissions_r184, 0.002); end
  def test_outputs_emissions_s184; assert_in_delta(0.03806753656636891, worksheet.outputs_emissions_s184, 0.002); end
  def test_outputs_emissions_t184; assert_in_delta(0.048658610295365355, worksheet.outputs_emissions_t184, 0.002); end
  def test_outputs_emissions_u184; assert_in_delta(0.059730898391631634, worksheet.outputs_emissions_u184, 0.002); end
  def test_outputs_emissions_v184; assert_in_delta(0.0712815878820097, worksheet.outputs_emissions_v184, 0.002); end
  def test_outputs_emissions_w184; assert_in_delta(0.0831846080791804, worksheet.outputs_emissions_w184, 0.002); end
  def test_outputs_emissions_x184; assert_in_delta(0.09538013951586077, worksheet.outputs_emissions_x184, 0.002); end
  def test_outputs_emissions_c229; assert_equal("Fuel type", worksheet.outputs_emissions_c229); end
  def test_outputs_emissions_d229; assert_equal("…", worksheet.outputs_emissions_d229); end
  def test_outputs_emissions_e229; assert_equal("Notes", worksheet.outputs_emissions_e229); end
  def test_outputs_emissions_f229; assert_equal("..", worksheet.outputs_emissions_f229); end
  def test_outputs_emissions_g229; assert_equal("..2", worksheet.outputs_emissions_g229); end
  def test_outputs_emissions_h229; assert_equal("….", worksheet.outputs_emissions_h229); end
  def test_outputs_emissions_p229; assert_equal("2011", worksheet.outputs_emissions_p229); end
  def test_outputs_emissions_q229; assert_equal("2015", worksheet.outputs_emissions_q229); end
  def test_outputs_emissions_r229; assert_equal("2020", worksheet.outputs_emissions_r229); end
  def test_outputs_emissions_s229; assert_equal("2025", worksheet.outputs_emissions_s229); end
  def test_outputs_emissions_t229; assert_equal("2030", worksheet.outputs_emissions_t229); end
  def test_outputs_emissions_u229; assert_equal("2035", worksheet.outputs_emissions_u229); end
  def test_outputs_emissions_v229; assert_equal("2040", worksheet.outputs_emissions_v229); end
  def test_outputs_emissions_w229; assert_equal("2045", worksheet.outputs_emissions_w229); end
  def test_outputs_emissions_x229; assert_equal("2050", worksheet.outputs_emissions_x229); end
  def test_outputs_emissions_c230; assert_equal("CO2e", worksheet.outputs_emissions_c230); end
  def test_outputs_emissions_e230; assert_equal("Total", worksheet.outputs_emissions_e230); end
  def test_outputs_emissions_p230; assert_in_delta(0.1467116251577074, worksheet.outputs_emissions_p230, 0.002); end
  def test_outputs_emissions_q230; assert_in_delta(0.12931518187307733, worksheet.outputs_emissions_q230, 0.002); end
  def test_outputs_emissions_r230; assert_in_delta(0.12893703237837048, worksheet.outputs_emissions_r230, 0.002); end
  def test_outputs_emissions_s230; assert_in_delta(0.13012506653606573, worksheet.outputs_emissions_s230, 0.002); end
  def test_outputs_emissions_t230; assert_in_delta(0.12925181539536437, worksheet.outputs_emissions_t230, 0.002); end
  def test_outputs_emissions_u230; assert_in_delta(0.12701406291232542, worksheet.outputs_emissions_u230, 0.002); end
  def test_outputs_emissions_v230; assert_in_delta(0.12308858633185706, worksheet.outputs_emissions_v230, 0.002); end
  def test_outputs_emissions_w230; assert_in_delta(0.11402008269873035, worksheet.outputs_emissions_w230, 0.002); end
  def test_outputs_emissions_x230; assert_in_delta(0.10737764956360268, worksheet.outputs_emissions_x230, 0.002); end
  def test_detailed_lever_guides_b72; assert_equal("Lever", worksheet.detailed_lever_guides_b72); end
  def test_detailed_lever_guides_c72; assert_equal("What is it", worksheet.detailed_lever_guides_c72); end
  def test_detailed_lever_guides_d72; assert_equal("Key constraints", worksheet.detailed_lever_guides_d72); end
  def test_detailed_lever_guides_e72; assert_equal("State of development of this technique", worksheet.detailed_lever_guides_e72); end
  def test_detailed_lever_guides_b73; assert_equal("Biochar", worksheet.detailed_lever_guides_b73); end
  def test_detailed_lever_guides_c73; assert_equal("Biomass contains carbon taken from the carbon dioxide air through the process of photosynthesis. Heating biomass in an oxygen-deficient environment results in incomplete combustion and the production of a char that has high carbon content, some of which is ‘recalcitrant’ (meaning resistant to decomposing and being re-released back into the atmosphere). If this char is buried, then this carbon is sequestered away from the atmosphere. ", worksheet.detailed_lever_guides_c73); end
  def test_detailed_lever_guides_d73; assert_equal("• Carbon stability: the proportion of recalcitrant carbon in a biochar is a function of many factors: the biomass feedstock, the method of producing the biochar, and the characteristics of the soil into which the biochar is placed. \r• Dispute for natural resources: the availability of biomass to produce the biochar.\r• Impacts on human health: Biochar dust poses a potential hazard to human health.\r• Impacts on soil biota: The addition of biochar alters the property of the soil. In many cases it can lead to enhanced crop yields. However, it can also lead to increased production of methane, and cause impacts on the biological diversity of the soil.\r• Albedo effect: the addition of large amounts of biochar to soils may result in reduced albedo (ability of the surface of the earth to reflect heat energy from the sun), thereby counteracting some of the cooling benefit of removing carbon dioxide.\r• Fire impacts: if a land area into which biochar has been added is affected by fire (e.g. fire use as an agronomical practice, accidental fire, or even as the result of a warming climate), then the carbon stored may be released back into the atmosphere.", worksheet.detailed_lever_guides_d73); end
  def test_detailed_lever_guides_e73; assert_equal("Biochar is produced from the pyrolysis of biomass, similar to the production of charcoal. Research is underway to enhance the understanding of the long-term behaviour of biochar as a means of storing carbon away from the atmosphere (sequestration potential). Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e73); end
  def test_detailed_lever_guides_b74; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b74); end
  def test_detailed_lever_guides_c74; assert_equal("Direct air capture (DAC) involves using chemical processes to directly capture carbon dioxide from ambient air. Typically this will involve using an alkaline material (such as sodium hydroxide) which reacts with carbon dioxide, or a material which adsorbs the carbon dioxide. The carbon dioxide is then stored underground in suitable geological formations. DAC differs from carbon capture and storage (CCS), in that CCS involves capturing carbon dioxide from large stationary sources, such as power plants or cement plants (4-30% concentration) rather than from ambient air (~0.04% concentration). ", worksheet.detailed_lever_guides_c74); end
  def test_detailed_lever_guides_d74; assert_equal("• Energy penalty: this is the amount of energy that is required to run such systems, which may counteract the carbon savings made through the DAC process.\r• Physical constraints: given the low initial concentration of carbon dioxide in ambient air, it is necessary to treat 1.4 million cubic metres of air to remove a single tonne of carbon dioxide. These volumes indicate that the scale of the machinery is likely to be large with significant resource implications.\r• Water: many, but not all, DAC techniques have a significant water requirement.\r• Costs: it is unlikely that DAC from ambient air will be cost competitive with CCS, as the starting concentration of the carbon dioxide feedstock is so much lower. It would make economic sense to first exhaust all potential CCS opportunities before applying DAC. The exception to this would be if large quantities of extra low-carbon energy ¬¬¬(known as “stranded energy”) were available in locations close to geological storage sites.\r• Geological storage: DAC will compete with geological storage space with CCS from large stationary plants.", worksheet.detailed_lever_guides_d74); end
  def test_detailed_lever_guides_e74; assert_equal("There are about a dozen proposed Direct Air Capture (DAC) technologies that have been demonstrated at small scales. Technically the process works – in fact, the removal of carbon dioxide from ambient air in submarines and spacecraft has been practised for decades. The real questions are around the carbon balance of the systems and the economics. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e74); end
  def test_detailed_lever_guides_b75; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b75); end
  def test_detailed_lever_guides_c75; assert_equal("Ocean fertilisation (OF) involves enhancing the biological capacity of the oceans to draw down more carbon dioxide from the atmosphere. Photosynthesising organisms incorporate carbon dioxide from the air into their cells as they grow and multiply. Some of this carbon will eventually end up in the deep ocean where it will be effectively stored away from the atmosphere. Some parts of the ocean are deficient in micronutrients such as iron, which organisms need to grow. By adding iron filings, more photosynthesis can occur and more carbon can be transported from the atmosphere to the deep ocean. ", worksheet.detailed_lever_guides_c75); end
  def test_detailed_lever_guides_d75; assert_equal("• Biological constraints: The effectiveness of OF is limited by the area of ocean that is deficient in micronutrients. Once iron is no longer a constraint, photosynthetic activity can increase up to the point that the next constraining factor limits growth (typically the availability of nitrate).\r• Logistics: some proponents of OF have suggested that it may be possible to boost macronutrients such as nitrate as a means of enhancing photosynthetic capacity. While that may be possible, the quantity of material that is required to boost photosynthesis may be impractical.\r• Impacts on marine biodiversity: serious environmental concerns have been raised about OF. The introduction of micronutrients into the ocean will alter its ecology, favouring certain types of organism over others that thrive in low-iron waters. In addition, increased photosynthetic activity could lead to increased ocean acidification and a decrease in dissolved oxygen.\r• Efficacy: it is not sufficient for photosynthetic activity to just increase – for the technique to have a positive impact on the climate, the carbon must be transferred from the atmosphere to the deep ocean. Some studies show that a large fraction of the carbon is released back into the atmosphere as the algae die or enter the food chain, so the efficacy of the technique has been questioned. \r• Governance: the governance issues relating to OF are complicated. Rules established by the London Convention/London Protocol (LC/LP) restrict activities to small-scale scientific experiments, while the Convention on Biological Diversity also seeks to restrict such activities.", worksheet.detailed_lever_guides_d75); end
  def test_detailed_lever_guides_e75; assert_equal("A small number of Ocean fertilisation (OF) experiments have been undertaken, most with the approval of national research establishments, but some without such approval. Those experiments conducted without approval have been highly controversial. The results of the officially approved experiments have indicated, at least in some instances, that there has been a net carbon drawdown, but there are still many unanswered questions as to the long-term effects of this technique. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e75); end
  def test_detailed_lever_guides_b76; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b76); end
  def test_detailed_lever_guides_c76; assert_equal("Enhanced weathering – oceanic (EW-O) seeks to enhance the chemical capacity of the oceans to draw down carbon dioxide by introducing alkaline materials that increase the pH of the ocean and allow more carbon to be stored as dissolved inorganic carbon (DIC) in the ocean. Various proposed methods have been suggested – adding limestone (calcium carbonate), hydrated lime (calcium hydroxide) or finely ground olivine (magnesium silicate), or by electrolysis of seawater.", worksheet.detailed_lever_guides_c76); end
  def test_detailed_lever_guides_d76; assert_equal("• Impacts on ocean biota: The increase in pH will affect ecosystems as certain organisms will be more suited to it than others. However, adding alkaline materials could counteract the ocean acidification process that has been caused by higher levels of carbon dioxide in the atmosphere and affects some species. Calcium and magnesium ion concentrations will become higher than historical levels, though.\r• Energy penalty and costs: the process for obtaining alkaline materials is likely to be costly both in economic and energy terms. There are few naturally occurring deposits of alkaline materials that could be added to the ocean, but it may be possible to manufacture such materials.\r• Logistics: to have a real impact on the concentration of carbon dioxide in the atmosphere would require a massive mining, mineral processing and distribution industry.\r• Governance: the application of EW-O would involve governance challenges, as the ocean is a global commons (an international global resource). An amendment (currently in progress) to the LC/LP would permit small scale research activities, but deployment would require further amendments. ", worksheet.detailed_lever_guides_d76); end
  def test_detailed_lever_guides_e76; assert_equal("Enhanced weathering (oceanic) (EW-O) has been studied in the laboratory and has been modelled, but it has not been researched in the open environment. The processes required to generate alkaline materials are well established at an industrial scale. However, the environmental impacts of adding them into the oceans are not known. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e76); end
  def test_detailed_lever_guides_b77; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b77); end
  def test_detailed_lever_guides_c77; assert_equal("As silicate minerals weather, they absorb carbon dioxide from the atmosphere and store it in carbonate minerals. Enhanced weathering – terrestrial (EW-T) seeks to accelerate this natural process, which is usually very slow. The main proposed method involves grinding minerals like olivine (magnesium silicate) into a fine dust, which will react more quickly because of the higher surface-area-to-volume ratio.", worksheet.detailed_lever_guides_c77); end
  def test_detailed_lever_guides_d77; assert_equal("• Energy penalty and costs: the energy and cost requirements for grinding appropriate minerals sufficiently are high.\r• Impacts on human health: the particle size to which such minerals need to be ground to is often smaller than 10 microns in diameter - a size which can cause harm to health.\r• Geological constraints: there is an upper limit as to the amount of carbon dioxide that can be sequestered via this method, based on the saturation state of silicic acid that is produced when the magnesium silicate reacts.\r• Land use impacts: this technique will affect soils, for example by introducing trace metals present in the olivine, changing the pH. The places currently identified as most suitable for enhanced weathering (tropical areas that have high rainfall and high temperatures) are also some of the most important areas for biodiversity globally. \r• Transboundary effects: while EW-T would occur on territory under the jurisdiction of individual states, runoff from EW-T could have transboundary effects by altering the pH of river systems and potentially enhancing the saturation state of silicic acid in coastal waters. ", worksheet.detailed_lever_guides_d77); end
  def test_detailed_lever_guides_e77; assert_equal("Enhanced weathering (terrestrial) (EW-T) has been studied in the laboratory and has been modelled, but it has had little research in the open environment (although proponents of EW-T have marketed ground olivine as a soil additive already). Technical and theoretical modelling of the particle sizes indicate that while there would be some carbon dioxide drawdown, it is far less than has been claimed. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_e77); end
  def test_detailed_lever_guides_y5; assert_equal("Lever controls", worksheet.detailed_lever_guides_y5); end
  def test_detailed_lever_guides_z5; assert_equal("One-pager context", worksheet.detailed_lever_guides_z5); end
  def test_detailed_lever_guides_aa5; assert_equal("Things to consider", worksheet.detailed_lever_guides_aa5); end
  def test_detailed_lever_guides_ab5; assert_equal("1-pager Level 1", worksheet.detailed_lever_guides_ab5); end
  def test_detailed_lever_guides_ac5; assert_equal("1-pager Level 2", worksheet.detailed_lever_guides_ac5); end
  def test_detailed_lever_guides_ad5; assert_equal("1-pager Level 3", worksheet.detailed_lever_guides_ad5); end
  def test_detailed_lever_guides_y31; assert_equal("This lever controls total world nuclear power capacity (GW).  \r\r\r\r", worksheet.detailed_lever_guides_y31); end
  def test_detailed_lever_guides_z31; assert_equal("Nuclear power is a form of thermal electricity generation that uses the heat produced from nuclear reactions rather than from the combustion of fossil fuels. These reactions do not produce greenhouse gases like carbon dioxide, so it is a low-carbon source of electricity. \rNuclear power stations was first used commercially in the 1950s. In 2011 operating power stations had 369 GW of capacity, producing around 13% of the world’s electricity. The country with the highest proportion of nuclear generation is France, with around 80%. Build rates have slowed in the last few years, but are expected to increase in the next decade. ", worksheet.detailed_lever_guides_z31); end
  def test_detailed_lever_guides_aa31; assert_equal("Nuclear has some benefits compared to many other low-carbon electricity sources. It can produce a reliable supply of power, unlike some renewables such as wind and solar which are intermittent. Once built, a reactor has a lifespan of around 40 years and perhaps longer. If power plants are located close to buildings with heat demand, then the waste heat produced in the generating process can be used in district heating systems rather than being released into the atmosphere. This reduces the need for high-carbon sources of heat like gas. \rHowever, nuclear power has disadvantages too. Nuclear accidents, though rare, can have serious and long-term consequences. The safe disposal and storage of the radioactive waste produced by nuclear processes is also a serious challenge, as some of the substances have a half-life of many thousand – and even millions – of years. These concerns mean that some countries and organisations do not support the use of this technology.  Even in countries that support the use of nuclear power, the planning process can be long and difficult, as local residents may object to having a power plant near their homes. The meltdown of three reactors at the Fukushima Daiichi plant in Japan in 2011 has increased safety concerns, and led to more countries closing nuclear power plants before their natural lifespan has come to an end.\rWhen choosing levels 3 or 4, you should consider that building this amount of nuclear power is likely to result in many planning challenges and may be difficult in terms of public acceptability.  ", worksheet.detailed_lever_guides_aa31); end
  def test_detailed_lever_guides_ab31; assert_equal("No new power stations are built, and all existing plant are switched off by 2050. It is likely that some reactors would have to retire early, before the end of their technical and economic lifespan. This represents a future that has turned away from nuclear power. \r", worksheet.detailed_lever_guides_ab31); end
  def test_detailed_lever_guides_ac31; assert_equal("Current global build rates for nuclear plants continue for the next few decades, meaning that there would be 558 GW in total by 2050. \r", worksheet.detailed_lever_guides_ac31); end
  def test_detailed_lever_guides_ad31; assert_equal("The increased build rate planned from 2011 to 2020 is sustained until 2050, meaning that there would be 989 GW in total. \r", worksheet.detailed_lever_guides_ad31); end
  def test_detailed_lever_guides_b5; assert_equal("Lever", worksheet.detailed_lever_guides_b5); end
  def test_detailed_lever_guides_c5; assert_equal("Code", worksheet.detailed_lever_guides_c5); end
  def test_detailed_lever_guides_d5; assert_equal("Situation today", worksheet.detailed_lever_guides_d5); end
  def test_detailed_lever_guides_e5; assert_equal("Chosen level description", worksheet.detailed_lever_guides_e5); end
  def test_detailed_lever_guides_f5; assert_equal("Energy supply / demand from choice by 2050", worksheet.detailed_lever_guides_f5); end
  def test_detailed_lever_guides_g5; assert_equal("Interactions with other levers", worksheet.detailed_lever_guides_g5); end
  def test_detailed_lever_guides_h5; assert_equal("Level 1 short description", worksheet.detailed_lever_guides_h5); end
  def test_detailed_lever_guides_i5; assert_equal("Level 1 longer description", worksheet.detailed_lever_guides_i5); end
  def test_detailed_lever_guides_j5; assert_equal("Level 2 short description", worksheet.detailed_lever_guides_j5); end
  def test_detailed_lever_guides_k5; assert_equal("Level 2 longer description", worksheet.detailed_lever_guides_k5); end
  def test_detailed_lever_guides_l5; assert_equal("Level 3 short description", worksheet.detailed_lever_guides_l5); end
  def test_detailed_lever_guides_m5; assert_equal("Level 3 longer description", worksheet.detailed_lever_guides_m5); end
  def test_detailed_lever_guides_n5; assert_equal("Level 4 short description", worksheet.detailed_lever_guides_n5); end
  def test_detailed_lever_guides_o5; assert_equal("Level 4 longer description", worksheet.detailed_lever_guides_o5); end
  def test_detailed_lever_guides_b6; assert_equal("Global population", worksheet.detailed_lever_guides_b6); end
  def test_detailed_lever_guides_d6; assert_equal("How many people will there be in 2050? In 2011 there were 6.97 billion.", worksheet.detailed_lever_guides_d6); end
  def test_detailed_lever_guides_g6; assert_equal("This lever also drives the total food consumption, total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g6); end
  def test_detailed_lever_guides_h6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_h6); end
  def test_detailed_lever_guides_i6; assert_equal("In 2050 the population rises to 10.9 billion.", worksheet.detailed_lever_guides_i6); end
  def test_detailed_lever_guides_j6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_j6); end
  def test_detailed_lever_guides_k6; assert_equal("In 2050 the population rises to 9.6 billion.", worksheet.detailed_lever_guides_k6); end
  def test_detailed_lever_guides_l6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_l6); end
  def test_detailed_lever_guides_m6; assert_equal("In 2050 the population rises to 8.3 billion.", worksheet.detailed_lever_guides_m6); end
  def test_detailed_lever_guides_n6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_n6); end
  def test_detailed_lever_guides_o6; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_o6); end
  def test_detailed_lever_guides_b7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_b7); end
  def test_detailed_lever_guides_d7; assert_equal("What percentage of people will live in urban areas? In 2011 it was 52%.", worksheet.detailed_lever_guides_d7); end
  def test_detailed_lever_guides_g7; assert_equal("This lever also drives the total buildings demand and total transport demand.", worksheet.detailed_lever_guides_g7); end
  def test_detailed_lever_guides_h7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_h7); end
  def test_detailed_lever_guides_i7; assert_equal("75% of people live in urban areas.", worksheet.detailed_lever_guides_i7); end
  def test_detailed_lever_guides_j7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_j7); end
  def test_detailed_lever_guides_k7; assert_equal("66% of people live in urban areas.", worksheet.detailed_lever_guides_k7); end
  def test_detailed_lever_guides_l7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_l7); end
  def test_detailed_lever_guides_m7; assert_equal("58% of people live in urban areas.", worksheet.detailed_lever_guides_m7); end
  def test_detailed_lever_guides_n7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_n7); end
  def test_detailed_lever_guides_o7; assert_equal("This lever only has three levels.", worksheet.detailed_lever_guides_o7); end
  def test_detailed_lever_guides_b8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_b8); end
  def test_detailed_lever_guides_d8; assert_equal("How far will we travel? In 2011, the weighted average distance travelled per person was around 7,500 km/year, however this masks the variation throughout the world. While the yearly average distance travelled per person was roughly 10-12,000 km per capita in automobile dominant countries (such as in North America), it was closer to 6,000 km per capita in transit-based countries (such as in Europe), and 1,500 km per capita in many developing countries.", worksheet.detailed_lever_guides_d8); end
  def test_detailed_lever_guides_g8; assert_equal("Passenger demand is very dependent on mode and occupancy. If more car trips are shifted to walking, cycling, transit, rail and 2-3 wheelers through better city design then number as well as distance of trips will likely be reduced. ", worksheet.detailed_lever_guides_g8); end
  def test_detailed_lever_guides_h8; assert_equal("By 2050, the yearly average distance travelled per person will increase by 180% from 2011.", worksheet.detailed_lever_guides_h8); end
  def test_detailed_lever_guides_i8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing at a rate of 2.65% annually, or increasing by 180% by 2050. The global average travel per person will be similar to present day UK.", worksheet.detailed_lever_guides_i8); end
  def test_detailed_lever_guides_j8; assert_equal("By 2050, the yearly average distance travelled per person will increase by 125% from 2011.", worksheet.detailed_lever_guides_j8); end
  def test_detailed_lever_guides_k8; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing at a rate of 2.1% annually, or 125% by 2050. The global average travel per person will be similar to present day Netherlands.", worksheet.detailed_lever_guides_k8); end
  def test_detailed_lever_guides_l8; assert_equal("By 2050, the yearly average distance travelled per person will increase by 100% from 2011.", worksheet.detailed_lever_guides_l8); end
  def test_detailed_lever_guides_m8; assert_equal("Cities with established development patterns as well as growing cities pursue initiatives to reduce the need for travel throughout the city. Global distance travelled per person increases at a rate of 1.75% annually, or 100% by 2050. The global average travel per person will be similar to present day Hungary.", worksheet.detailed_lever_guides_m8); end
  def test_detailed_lever_guides_n8; assert_equal("By 2050, the yearly average distance travelled per person will increase by 40% from 2011.", worksheet.detailed_lever_guides_n8); end
  def test_detailed_lever_guides_o8; assert_equal("Cities make a significant effort to develop as transit-oriented, multi-use cities along with significant advances in communication technologies. Total distance travelled per person increases at a rate of 0.9% annually, or 40% by 2050. The global average travel per person will be similar to present day Brazil.", worksheet.detailed_lever_guides_o8); end
  def test_detailed_lever_guides_b9; assert_equal("Freight distance", worksheet.detailed_lever_guides_b9); end
  def test_detailed_lever_guides_d9; assert_equal("How far will our freight travel? Freight demand, expressed in freight tonne-kilometres shipped, depends on the quantity of goods as well as the distance they are shipped. In 2011 this number was 65 trillion tonne-km. Future growth depends on GDP growth, growth in demand for different types of goods, as well as where goods are produced versus where they are consumed. ", worksheet.detailed_lever_guides_d9); end
  def test_detailed_lever_guides_g9; assert_equal("Freight demand’s impact on reducing CO2 emissions is highly dependent on vehicle load factors and the modes by which freight growth is accommodated.", worksheet.detailed_lever_guides_g9); end
  def test_detailed_lever_guides_h9; assert_equal("By 2050, freight tonne-kms increase by 140% from 2011.", worksheet.detailed_lever_guides_h9); end
  def test_detailed_lever_guides_i9; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing by roughly 140% in road, rail, and shipping by 2050, or 2.4% annually. ", worksheet.detailed_lever_guides_i9); end
  def test_detailed_lever_guides_j9; assert_equal("By 2050, freight tonne-kms increase by 100% from 2011.", worksheet.detailed_lever_guides_j9); end
  def test_detailed_lever_guides_k9; assert_equal("Growth in freight tonne-kms is at a slower rate than GDP, increasing by roughly 100% in road, rail, and shipping by 2050, or 1.75% annually. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_k9); end
  def test_detailed_lever_guides_l9; assert_equal("By 2050, freight tonne-kms increase by 80% from 2011.", worksheet.detailed_lever_guides_l9); end
  def test_detailed_lever_guides_m9; assert_equal("Growth in freight tonne-kms is decoupled from GDP and increases by roughly 80% in road, rail, and shipping by 2050, or 1.5% annually. This could be due to producing products closer to the source of consumption and reducing demand for products such as fuels.", worksheet.detailed_lever_guides_m9); end
  def test_detailed_lever_guides_n9; assert_equal("By 2050, freight tonne-kms increase by 40% from 2011.", worksheet.detailed_lever_guides_n9); end
  def test_detailed_lever_guides_o9; assert_equal("Growth in freight tonne-kms is significantly decoupled from GDP and increases by roughly 40% in road, rail, and shipping by 2050, or 0.85% annually. This could be due to significant reduction in demand as well major technological improvements.", worksheet.detailed_lever_guides_o9); end
  def test_detailed_lever_guides_b10; assert_equal("Mode", worksheet.detailed_lever_guides_b10); end
  def test_detailed_lever_guides_d10; assert_equal("Do we use cars, or do we switch to public transport, cycling and walking? In 2011, between 60 and 80% of trips are made by car in developed countries. For developing countries, this number is often less than 20%. The global average is around 40%. Roughly 83% of freight tonne-kms are made by truck or ship. The mode of travel will have a big impact on reducing overall vehicle kilometres travelled and reducing emissions from person and freight travel. This lever includes a switch between all modes including flights.", worksheet.detailed_lever_guides_d10); end
  def test_detailed_lever_guides_g10; assert_equal("The effectiveness of mode shifts will also be impacted by the total quantity of demand. The modes also impact vehicle types, thereby impacting the results from the efficiency and electrification levers. ", worksheet.detailed_lever_guides_g10); end
  def test_detailed_lever_guides_h10; assert_equal("By 2050 cars are the dominant mode of travel in cities around the world (around 65%). Most new ground freight is shipped by road.", worksheet.detailed_lever_guides_h10); end
  def test_detailed_lever_guides_i10; assert_equal("Cities continue to grow in a sprawled pattern of development. Similar to the UK in 2011, 80% of passenger-kms (pkm) globally are by private vehicles. There is no significant effort to use more rail transport for freight or to improve logistics by 2050, and 65% of ground freight is by road, similar to Latin America in 2011.", worksheet.detailed_lever_guides_i10); end
  def test_detailed_lever_guides_j10; assert_equal("By 2050, cars still dominate the mode share for urban areas (50%) but with larger shares of transit and 2-3 wheelers. Focus on rail shipping allows rail to maintain its current share of ground shipping.", worksheet.detailed_lever_guides_j10); end
  def test_detailed_lever_guides_k10; assert_equal("Cities focus on shifting trips to walking, cycling, and transit instead of using private automobiles. Similar to the Middle East in 2011, 75% of pkm globally are by private vehicles. With some effort in logistics and growth in rail infrastructure in developing countries, by 2050 60% of ground freight is by road, similar to the global total in 2011.", worksheet.detailed_lever_guides_k10); end
  def test_detailed_lever_guides_l10; assert_equal("By 2050, car travel accounts for the same mode share for urban areas as in 2011 (around 40%). Transit and 2-3 wheelers take a significant share of travel along with biking and walking, those cars are still significant. Rail and waterborne freight take portions of ground shipping.", worksheet.detailed_lever_guides_l10); end
  def test_detailed_lever_guides_m10; assert_equal("Cities focus on shifting trips to walking, cycling, transit and 2-3 wheelers. Similar to Russia and Eastern Europe in 2011, 63% of pkm globally are by private vehicles. With significant effort in logistics and rail infrastructure, only 45% of ground freight is by road in 2050, similar to combined OECD countries in 2011.", worksheet.detailed_lever_guides_m10); end
  def test_detailed_lever_guides_n10; assert_equal("By 2050, car travel accounts for a lower proportion of the mode share for urban areas than 2011 (at around 30%). Transit, 2-3 wheelers, cycling and walking are the dominant modes of transport. Rail and waterborne freight take larger portions of ground shipping.", worksheet.detailed_lever_guides_n10); end
  def test_detailed_lever_guides_o10; assert_equal("Cities make a robust effort to shift people from private automobiles to walking, cycling, transit, and 2-3 wheelers. Similar to Brazil in 2011, 50% of pkm globally are by private vehicles. With significant effort in logistics and rail infrastructure, only 36% of ground freight is by road in 2050, similar to historical US rates.", worksheet.detailed_lever_guides_o10); end
  def test_detailed_lever_guides_b11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_b11); end
  def test_detailed_lever_guides_d11; assert_equal("In 2011, the average car carried 2 people, the average train carried 384 people, and the average international ship carried around 20 000 tonnes of cargo (the dominant mode for freight).", worksheet.detailed_lever_guides_d11); end
  def test_detailed_lever_guides_g11; assert_equal("The impact of changes to occupancy will depend on the other transport levers.", worksheet.detailed_lever_guides_g11); end
  def test_detailed_lever_guides_h11; assert_equal("By 2050, passenger car and train occupancies remain unchanged, and the average freight vehicle carries the same amount of cargo.", worksheet.detailed_lever_guides_h11); end
  def test_detailed_lever_guides_i11; assert_equal("By 2050, passenger car and train occupancies remain unchanged, and the average freight vehicle carries the same amount of cargo.", worksheet.detailed_lever_guides_i11); end
  def test_detailed_lever_guides_j11; assert_equal("By 2050, car and train occupancies increase by 10%, and domestic freight vehicles and international freight ships carry 10% and 5% more cargo respectively.", worksheet.detailed_lever_guides_j11); end
  def test_detailed_lever_guides_k11; assert_equal("By 2050, car and train occupancies increase by 10%, and domestic freight vehicles and international freight ships carry 10% and 5% more cargo respectively.", worksheet.detailed_lever_guides_k11); end
  def test_detailed_lever_guides_l11; assert_equal("By 2050, car and train occupancies increase by 20%, and domestic freight vehicles and international freight ships carry 20% and 10% more cargo respectively.", worksheet.detailed_lever_guides_l11); end
  def test_detailed_lever_guides_m11; assert_equal("By 2050, car and train occupancies increase by 20%, and domestic freight vehicles and international freight ships carry 20% and 10% more cargo respectively.", worksheet.detailed_lever_guides_m11); end
  def test_detailed_lever_guides_n11; assert_equal("By 2050, car and train occupancies increase by 30%, and domestic freight vehicles and international freight ships carry 30% and 15% more cargo respectively.", worksheet.detailed_lever_guides_n11); end
  def test_detailed_lever_guides_o11; assert_equal("By 2050, car and train occupancies increase by 30%, and domestic freight vehicles and international freight ships carry 30% and 15% more cargo respectively.", worksheet.detailed_lever_guides_o11); end
  def test_detailed_lever_guides_b12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_b12); end
  def test_detailed_lever_guides_d12; assert_equal("Will people move away from owning private cars, towards either hired or self-driving vehicles?", worksheet.detailed_lever_guides_d12); end
  def test_detailed_lever_guides_h12; assert_equal("Very low car hire rates (twice as many cars needed per vehicle-km travelled, compared to 2011).", worksheet.detailed_lever_guides_h12); end
  def test_detailed_lever_guides_j12; assert_equal("Car ownership rate same as today (identical to 2011 figure).", worksheet.detailed_lever_guides_j12); end
  def test_detailed_lever_guides_l12; assert_equal("Medium car hire rates (50% as many cars needed per vehicle-km travelled, compared to 2011).", worksheet.detailed_lever_guides_l12); end
  def test_detailed_lever_guides_n12; assert_equal("High car hire rates (just 25% as many cars needed per vehicle-km travelled, compared to 2011).", worksheet.detailed_lever_guides_n12); end
  def test_detailed_lever_guides_b13; assert_equal("Efficiency", worksheet.detailed_lever_guides_b13); end
  def test_detailed_lever_guides_d13; assert_equal("How efficient will our vehicles be? The efficiency of vehicles in 2011 applies to different vehicle types and fuels used in the calculator. In 2011 light-duty vehicles had an efficiency of 10 litres gasoline equivalent (lpe) per 100km and heavy-duty vehicles, 32 lge/100km. The rate of improvement is 1 to 2% globally per year. Though many improvements in efficiency can take place by implementing existing technology globally, additional improvements will depend on the development of new technologies and making attractive, affordable vehicles with these technologies.", worksheet.detailed_lever_guides_d13); end
  def test_detailed_lever_guides_g13; assert_equal("The efficiency lever will depend on the mode and occupancy lever. The more vehicles in the fleet, the more effective efficiency improvements will be in reducing emissions.", worksheet.detailed_lever_guides_g13); end
  def test_detailed_lever_guides_h13; assert_equal("Limited improvement, with most transport modes decreasing their energy intensity by 0.5% annually.", worksheet.detailed_lever_guides_h13); end
  def test_detailed_lever_guides_i13; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.detailed_lever_guides_i13); end
  def test_detailed_lever_guides_j13; assert_equal("The pace of improvement doubles from level 1, with most transport modes decreasing their energy intensity by 1% annually or ~33% over 40 years.", worksheet.detailed_lever_guides_j13); end
  def test_detailed_lever_guides_k13; assert_equal("Up to 2050 most transport modes decrease their energy intensity by 1% annually to roughly 7 lge/100km for LDVs and 22 lge/100km for HDVs.", worksheet.detailed_lever_guides_k13); end
  def test_detailed_lever_guides_l13; assert_equal("The pace of improvement is significant, with most transport modes decreasing their energy intensity by ~2% annually or ~50% over 40 years.", worksheet.detailed_lever_guides_l13); end
  def test_detailed_lever_guides_m13; assert_equal("Most transport modes decrease their energy intensity by 2% annually to roughly 4.5 lge/100km for LDVs and 15 lge/100km for HDVs by 2050.", worksheet.detailed_lever_guides_m13); end
  def test_detailed_lever_guides_n13; assert_equal("The pace of improvement is extreme, with most transport modes decreasing their energy intensity by ~3% annually or ~70% over 40 years.", worksheet.detailed_lever_guides_n13); end
  def test_detailed_lever_guides_o13; assert_equal("Most transport modes decrease their energy intensity by 3% annually to roughly 3 lge/100km for LDVs and 10 lge/100km for HDVs.", worksheet.detailed_lever_guides_o13); end
  def test_detailed_lever_guides_b14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_b14); end
  def test_detailed_lever_guides_d14; assert_equal("Will we switch to lower emission vehicles, such as hybrid, electric or hydrogen vehicles? In 2011, around 5% of the global fleet used hybrid technology and very little electric, with the exception of 2-3 wheelers which are 50% electric. This lever includes a variety of vehicle types and technologies, including hybrids, electric, and hydrogen vehicles. Moving towards greater vehicle electrification depends both on technological innovation as well as a variety of policies that increase the uptake rate of new technologies. ", worksheet.detailed_lever_guides_d14); end
  def test_detailed_lever_guides_g14; assert_equal("The impact of the electrification lever depends on the distribution of modes as well as the passenger and freight demand. The more vehicles in the fleet, the greater the impact of electrification in reducing emissions.", worksheet.detailed_lever_guides_g14); end
  def test_detailed_lever_guides_h14; assert_equal("By 2050, 2% of passenger cars are electric/hydrogen-powered", worksheet.detailed_lever_guides_h14); end
  def test_detailed_lever_guides_i14; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.detailed_lever_guides_i14); end
  def test_detailed_lever_guides_j14; assert_equal("By 2050, 10% of passenger cars are electric/hydrogen powered", worksheet.detailed_lever_guides_j14); end
  def test_detailed_lever_guides_k14; assert_equal("By 2050, there is an increased share of new technologies in the vehicle fleet. The percentage of hybrid and electric vehicles increases (10% and 10%) for passenger cars, heavy duty vehicles (10% and 3%), and 2-3 wheelers (60% electric). Some new technologies are adopted for ships or airplanes (20% hydrogen).", worksheet.detailed_lever_guides_k14); end
  def test_detailed_lever_guides_l14; assert_equal("By 2050, 35% of passenger cars are electric/hydrogen powered", worksheet.detailed_lever_guides_l14); end
  def test_detailed_lever_guides_m14; assert_equal("By 2050 there is significant adoption of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (20%, 20%, and 15%) for passenger cars, heavy duty vehicles (15%, 6%, and 10%), and 2-3 wheelers (70% electric). Some new technologies are adopted for ships or airplanes (40% hydrogen).", worksheet.detailed_lever_guides_m14); end
  def test_detailed_lever_guides_n14; assert_equal("By 2050, 55% of passenger cars are electric/hydrogen powered", worksheet.detailed_lever_guides_n14); end
  def test_detailed_lever_guides_o14; assert_equal("By 2050 there is major deployment of low emission vehicles. The percentage of hybrid, electric and hydrogen vehicles increases (33%, 35%, and 20%) for passenger cars, heavy duty vehicles (20% ,10%, and 20%), and 2-3 wheelers (80% electric). Many new technologies are adopted for ships or airplanes (60% hydrogen).", worksheet.detailed_lever_guides_o14); end
  def test_detailed_lever_guides_b15; assert_equal("Building size", worksheet.detailed_lever_guides_b15); end
  def test_detailed_lever_guides_d15; assert_equal("How big will our buildings be? For example, in 2011 the average area of an urban household was 92 m<sup>2</sup>.", worksheet.detailed_lever_guides_d15); end
  def test_detailed_lever_guides_e15; assert_equal("The average urban home will have a floor area of 105 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_e15); end
  def test_detailed_lever_guides_h15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_h15); end
  def test_detailed_lever_guides_i15; assert_equal("The average urban home has a floor area of 110 m<sup>2</sup> by 2050. This is the same level as in western Europe today.", worksheet.detailed_lever_guides_i15); end
  def test_detailed_lever_guides_j15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_j15); end
  def test_detailed_lever_guides_k15; assert_equal("The average urban home has a floor area of 105 m<sup>2</sup> by 2050.. This is a little lower than the level of western Europe today.", worksheet.detailed_lever_guides_k15); end
  def test_detailed_lever_guides_l15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_l15); end
  def test_detailed_lever_guides_m15; assert_equal("The average urban home has a floor area of 100 m<sup>2</sup> by 2050.. This is the same level as countries in  southern Europe today, such as Spain.", worksheet.detailed_lever_guides_m15); end
  def test_detailed_lever_guides_n15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050.", worksheet.detailed_lever_guides_n15); end
  def test_detailed_lever_guides_o15; assert_equal("The average urban home has a floor area of 95 m<sup>2</sup> by 2050. This is the current OECD average, and the same as Japan today.", worksheet.detailed_lever_guides_o15); end
  def test_detailed_lever_guides_b16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_b16); end
  def test_detailed_lever_guides_d16; assert_equal("How comfortable will our home temperatures be? For example, in 2011 the average urban home temperature was 17.5&deg;C in winter and 26.5&deg;C in summer.", worksheet.detailed_lever_guides_d16); end
  def test_detailed_lever_guides_e16; assert_equal("In 2050 the average urban home will have an inside temperature of 19 &deg;C in winter and 25 &deg;C in summer.", worksheet.detailed_lever_guides_e16); end
  def test_detailed_lever_guides_h16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_h16); end
  def test_detailed_lever_guides_i16; assert_equal("20&deg;C in winter, 24&deg;C in summer.", worksheet.detailed_lever_guides_i16); end
  def test_detailed_lever_guides_j16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_j16); end
  def test_detailed_lever_guides_k16; assert_equal("19&deg;C in winter, 25&deg;C in summer.", worksheet.detailed_lever_guides_k16); end
  def test_detailed_lever_guides_l16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_l16); end
  def test_detailed_lever_guides_m16; assert_equal("18&deg;C in winter, 26&deg;C in summer.", worksheet.detailed_lever_guides_m16); end
  def test_detailed_lever_guides_n16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_n16); end
  def test_detailed_lever_guides_o16; assert_equal("17 &deg;C in winter, 27 &deg;C in summer.", worksheet.detailed_lever_guides_o16); end
  def test_detailed_lever_guides_b17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_b17); end
  def test_detailed_lever_guides_d17; assert_equal("How much technology will we have in our homes? In 2011 the average urban household had 1 refrigerator, 0.3 dishwashers, 0.8 clothes washers, 0.3 clothes dryers, 1.6 TVs and had 24 light bulbs.", worksheet.detailed_lever_guides_d17); end
  def test_detailed_lever_guides_e17; assert_equal("In 2050 the average urban household will have 1.2 refrigerator, 0.6 dishwasher, 0.9 clothes washers, 0.6 clothes dryers, 2.1 TV, 4.2 miscellaneous appliances. And will have 35 bulbs.", worksheet.detailed_lever_guides_e17); end
  def test_detailed_lever_guides_h17; assert_equal("In 2050 the average urban household will have 1.4 refrigerators, 0.7 dishwashers, 1 clothes washers, 0.8 clothes dryers, 2.4 TVs, 5 miscellaneous appliances and will have 40 light bulbs.", worksheet.detailed_lever_guides_h17); end
  def test_detailed_lever_guides_i17; assert_equal("In 2050 the average urban household will have 1.4 refrigerators, 0.7 dishwashers, 1 clothes washers, 0.8 clothes dryers, 2.4 TVs, 5 miscellaneous appliances and will have 40 light bulbs.", worksheet.detailed_lever_guides_i17); end
  def test_detailed_lever_guides_j17; assert_equal("In 2050 the average urban household will have 1.2 refrigerators, 0.6 dishwashers, 0.9 clothes washers, 0.6 clothes dryers, 2.1 TVs, 4.2 miscellaneous appliances and will have 35 light bulbs.", worksheet.detailed_lever_guides_j17); end
  def test_detailed_lever_guides_k17; assert_equal("In 2050 the average urban household will have 1.2 refrigerators, 0.6 dishwashers, 0.9 clothes washers, 0.6 clothes dryers, 2.1 TVs, 4.2 miscellaneous appliances and will have 35 light bulbs.", worksheet.detailed_lever_guides_k17); end
  def test_detailed_lever_guides_l17; assert_equal("In 2050 the average urban household will have 1.1 refrigerator, 0.5 dishwashers, 0.9 clothes washers, 0.5 clothes dryers, 2 TVs, 3.6 miscellaneous appliances and will have 30 bulbs.", worksheet.detailed_lever_guides_l17); end
  def test_detailed_lever_guides_m17; assert_equal("In 2050 the average urban household will have 1.1 refrigerator, 0.5 dishwashers, 0.9 clothes washers, 0.5 clothes dryers, 2 TVs, 3.6 miscellaneous appliances and will have 30 bulbs.", worksheet.detailed_lever_guides_m17); end
  def test_detailed_lever_guides_n17; assert_equal("In 2050 the average urban household will have 1 refrigerators, 0.3 dishwashers, 0.8 clothes washers, 0.3 clothes dryers, 1.6 TVs, 3 miscellaneous appliances and will have 25 light bulbs.", worksheet.detailed_lever_guides_n17); end
  def test_detailed_lever_guides_o17; assert_equal("In 2050 the average urban household will have 1 refrigerators, 0.3 dishwashers, 0.8 clothes washers, 0.3 clothes dryers, 1.6 TVs, 3 miscellaneous appliances and will have 25 light bulbs.", worksheet.detailed_lever_guides_o17); end
  def test_detailed_lever_guides_b18; assert_equal("Building insulation", worksheet.detailed_lever_guides_b18); end
  def test_detailed_lever_guides_d18; assert_equal("How insulated will our buildings be? In 2011 the average heat loss coefficient of buildings is 15 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_d18); end
  def test_detailed_lever_guides_e18; assert_equal("Through better insulation, thermal performance of buildings improves by 32% by 2050. The average heat loss coefficient of buildings will be 10.2 GW/(M ha*&deg;C).", worksheet.detailed_lever_guides_e18); end
  def test_detailed_lever_guides_h18; assert_equal("Through better insulation, thermal performance of buildings improves by 20%.", worksheet.detailed_lever_guides_h18); end
  def test_detailed_lever_guides_i18; assert_equal("Through better insulation, thermal performance of buildings improves by 20%.", worksheet.detailed_lever_guides_i18); end
  def test_detailed_lever_guides_j18; assert_equal("Through better insulation, thermal performance of buildings improves by 40%.", worksheet.detailed_lever_guides_j18); end
  def test_detailed_lever_guides_k18; assert_equal("Through better insulation, thermal performance of buildings improves by 40%.", worksheet.detailed_lever_guides_k18); end
  def test_detailed_lever_guides_l18; assert_equal("Through better insulation, thermal performance of buildings improves by 60%.", worksheet.detailed_lever_guides_l18); end
  def test_detailed_lever_guides_m18; assert_equal("Through better insulation, thermal performance of buildings improves by 60%.", worksheet.detailed_lever_guides_m18); end
  def test_detailed_lever_guides_n18; assert_equal("Through better insulation, thermal performance of buildings improves by 73%.", worksheet.detailed_lever_guides_n18); end
  def test_detailed_lever_guides_o18; assert_equal("Through better insulation, thermal performance of buildings improves by 73%.", worksheet.detailed_lever_guides_o18); end
  def test_detailed_lever_guides_b19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_b19); end
  def test_detailed_lever_guides_d19; assert_equal("How will we heat, cool and light our buildings, and how will we cook our food? In 2011, 2% of heating is from either solar or heat pumps, and 0% of cooling is solar. ", worksheet.detailed_lever_guides_d19); end
  def test_detailed_lever_guides_e19; assert_equal("In 2050 the heating technology structure will be 2% solid boiler, 8% liquid boiler, 33% gas boiler, 9% heat pumps, 7% electricity heater, 3% solar heater, 5% micro-CHP, 36% district heating. The cooling structure will be 89% air-conditioning, 4% chiller, 8% solar cooling. The cooking technology structure will be 5% solid stoves, 12% liquid stoves, 38% gas stoves, 38% electric stoves, 9% traditional biomass stoves. ", worksheet.detailed_lever_guides_e19); end
  def test_detailed_lever_guides_h19; assert_equal("2% of heating is from either solar or heat pumps, and 5% of cooling is solar. ", worksheet.detailed_lever_guides_h19); end
  def test_detailed_lever_guides_i19; assert_equal("Technology mix remains the same in 2050 as today. HEATING: 2% solid boiler, 14% liquid boiler, 55% gas boiler, 2% heat pumps, 8% electricity heater, 0% solar heater, 2% micro-CHP, 17% district heating. COOLING: 93% air-conditioning 2% chiller, 5% solar cooling. COOKING: 8% solid stoves, 15% liquid stoves, 40% gas stoves, 25% electric stoves, 12% traditional biomass stoves. LIGHTING: 51% incandescents, 3% halogens, 45% CFLs, 1% LEDs. ", worksheet.detailed_lever_guides_i19); end
  def test_detailed_lever_guides_j19; assert_equal("20% of heating is from either solar or heat pumps, and 10% of cooling is solar. ", worksheet.detailed_lever_guides_j19); end
  def test_detailed_lever_guides_k19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 1% liquid boiler, 10% gas boiler, 15% heat pumps, 5% electricity heater, 5% solar heater, 8% micro-CHP, 55% district heating. COOLING: 85% air-conditioning 5% chiller, 10% solar cooling. COOKING: 1% solid stoves, 8% liquid stoves, 35% gas stoves, 50% electric stoves, 6% traditional biomass stoves. LIGHTING: 20% incandescents, 1% halogens, 69% CFLs, 10% LEDs.", worksheet.detailed_lever_guides_k19); end
  def test_detailed_lever_guides_l19; assert_equal("45% of heating is from either solar or heat pumps, and 15% of cooling is solar. ", worksheet.detailed_lever_guides_l19); end
  def test_detailed_lever_guides_m19; assert_equal("In 2050 the technology mix will be: HEATING: 1% solid boiler, 0% liquid boiler, 30% gas boiler, 35% heat pumps, 5% electricity heater, 10% solar heater, 9% micro-CHP, 10% district heating. COOLING: 75% air-conditioning 10% chiller, 15% solar cooling. COOKING: 0% solid stoves, 1% liquid stoves, 25% gas stoves, 73% electric stoves, 1% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 50% CFLs, 50% LEDs.", worksheet.detailed_lever_guides_m19); end
  def test_detailed_lever_guides_n19; assert_equal("70% of heating is from either solar or heat pumps, and 20% of cooling is solar. ", worksheet.detailed_lever_guides_n19); end
  def test_detailed_lever_guides_o19; assert_equal("In 2050 the technology mix will be: HEATING: 0% solid boiler, 0% liquid boiler, 10% gas boiler, 50% heat pumps, 2% electricity heater, 20% solar heater, 11% micro-CHP, 7% district heating. COOLING: 65% air-conditioning 15% chiller, 20% solar cooling. COOKING: 0% solid stoves, 0% liquid stoves, 15% gas stoves, 85% electric stoves, 0% traditional biomass stoves. LIGHTING: 0% incandescents, 0% halogens, 20% CFLs, 80% LEDs.", worksheet.detailed_lever_guides_o19); end
  def test_detailed_lever_guides_b20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_b20); end
  def test_detailed_lever_guides_d20; assert_equal("How efficient will our appliances be? In 2011, the rate at which appliances used energy is on average: refrigerator 66W, dishwasher 1500W, clothes washer 700W, clothes dryer 1500W, TV 250W, miscellaneous appliances 100W.", worksheet.detailed_lever_guides_d20); end
  def test_detailed_lever_guides_e20; assert_equal("In 2050 the appliance efficiency will be: refrigerator 54W (improved by 18%), dishwasher 1192W (improved by 21%), clothes washer 558W (improved by 20%), clothes dryer 1319W (improved by 12%), TV 243W (improved by 3%), miscellaneous 90W (improved by 10%).", worksheet.detailed_lever_guides_e20); end
  def test_detailed_lever_guides_h20; assert_equal("Minimal improvements in efficiency by 2050. For example, refrigerators will be 54W (an improvement of 18%).", worksheet.detailed_lever_guides_h20); end
  def test_detailed_lever_guides_i20; assert_equal("Minimal improvements in efficiency by 2050. For example, refrigerators will be 54W (an improvement of 18%).", worksheet.detailed_lever_guides_i20); end
  def test_detailed_lever_guides_j20; assert_equal("Ambitious improvements in efficiency by 2050. For example, refrigerators will be 45W (improved by 32%).", worksheet.detailed_lever_guides_j20); end
  def test_detailed_lever_guides_k20; assert_equal("Ambitious improvements in efficiency by 2050. For example, refrigerators will be 45W (improved by 32%).", worksheet.detailed_lever_guides_k20); end
  def test_detailed_lever_guides_l20; assert_equal("Very ambitious improvements in efficiency by 2050. For example, refrigerators will be 40W (improved by 39%).", worksheet.detailed_lever_guides_l20); end
  def test_detailed_lever_guides_m20; assert_equal("Very ambitious improvements in efficiency by 2050. For example, refrigerators will be 40W (improved by 39%).", worksheet.detailed_lever_guides_m20); end
  def test_detailed_lever_guides_n20; assert_equal("Extreme improvements in efficiency by 2050. For example, refrigerators will be 34W (improved by 48%).", worksheet.detailed_lever_guides_n20); end
  def test_detailed_lever_guides_o20; assert_equal("Extreme improvements in efficiency by 2050. For example, refrigerators will be 34W (improved by 48%).", worksheet.detailed_lever_guides_o20); end
  def test_detailed_lever_guides_b21; assert_equal("Product lifespan & demand", worksheet.detailed_lever_guides_b21); end
  def test_detailed_lever_guides_d21; assert_equal("How long will our products last? Demand for products leads to the production of 8.7Gt of materials, that is: 1.8Gt of crude steel, 0.1Gt of aluminium, 0.8Gt of chemicals, 0.6Gt of paper, 0.8Gt of timber, 1Gt of other materials, & 3.6Gt of cement.", worksheet.detailed_lever_guides_d21); end
  def test_detailed_lever_guides_e21; assert_equal("Demand for products leads to the production of 14.8Gt of materials, that is: 2.9Gt of crude steel, 0.1Gt of aluminium, 1.6Gt of chemicals, 1.2Gt of paper, 1.5Gt of timber, 2.3Gt of other materials, & 5.1Gt of cement.", worksheet.detailed_lever_guides_e21); end
  def test_detailed_lever_guides_f21; assert_equal("Demand for these products leads to the production of 17.5Gt of materials, that is: 3.1Gt of crude steel, 0.2Gt of aluminium, 1.4Gt of chemicals, 0.9Gt of paper, 1.4Gt of timber, 2.4Gt of other materials, & 1.4Gt of cement", worksheet.detailed_lever_guides_f21); end
  def test_detailed_lever_guides_g21; assert_equal("Product demand is defined by the activity in the other sectors whenever possible (e.g. amount of buildings, infrastructure and transport demand are defined in their respective sectors). Product demand is defined by this lever when there is no link with the activity in the other sectors (e.g. packaging and paper demand are defined by this lever). This lever also specifies the lifetime of all the consumer products (and therefore the need for new products to answer a specified stock requirement at a given time).", worksheet.detailed_lever_guides_g21); end
  def test_detailed_lever_guides_h21; assert_equal("By 2050 the demand for consumer goods per head increases, with product demand correlated to GDP growth projection. Buildings, infrastructure & transport product demand are defined by the other sectors and transport lifespan is unchanged from 2011 levels. There is no development in product reuse or recycling.", worksheet.detailed_lever_guides_h21); end
  def test_detailed_lever_guides_i21; assert_equal("To 2050, product demand is in line with historical trends and  the GDP growth projection. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods increase (paper+10%, metal goods +20% and packaging +10%).There is no development in product reuse nor recycling (product lifetime for cars is 12.5 years, for TVs 5 years, and for appliances 10 years).", worksheet.detailed_lever_guides_i21); end
  def test_detailed_lever_guides_j21; assert_equal("Consumer product demand per head worldwide reaches current EU levels then flattens. Buildings, infrastructure & transport product demand are defined by the other sectors and transport lifespan increases 10% from 2011 levels by 2050. Consumer goods stabilize.\rModerate development in product reuse and recycling.", worksheet.detailed_lever_guides_j21); end
  def test_detailed_lever_guides_k21; assert_equal("Consumer product demand worldwide reaches current EU levels then flattens. Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods stabilize (paper+0%, metal goods +10%, packaging +0%). Moderate development in product reuse and recycling (product lifetime for cars is 13.7 years, for TVs 7 years, and for appliances 15 years).", worksheet.detailed_lever_guides_k21); end
  def test_detailed_lever_guides_l21; assert_equal("Consumer product demand remains constant (increases in some parts of the world balance decreases in other). Buildings, infrastructure & transport product demand are defined by the other sectors and transport technology lifespan increases by 20% by 2050 from 2011 levels. Significant development in product reuse and recycling.", worksheet.detailed_lever_guides_l21); end
  def test_detailed_lever_guides_m21; assert_equal("Consumer product demand remains constant (increases in some parts of the world balance decreases in others). Buildings, infrastructure and transport product demand are defined by the other sectors. Consumer goods decrease (paper-10%, metal goods -10% and packaging -10%). Significant development in product reuse and recycling (product lifetime for cars is 15 years, for TV 10 years, and for appliances 20 years).", worksheet.detailed_lever_guides_m21); end
  def test_detailed_lever_guides_n21; assert_equal("Consumers buy fewer goods (e.g. they are higher value but less resource intensive). Buildings, infrastructure & transport product demand are defined by the other sectors and transport technology lifespan increases 30% from 2011 levels by 2050. Consumer goods decrease as product demand is not correlated to GDP increase.", worksheet.detailed_lever_guides_n21); end
  def test_detailed_lever_guides_o21; assert_equal("Consumers buy fewer goods (e.g. they are higher value but less resource intensive). Buildings, infrastructure & transport product demand are defined by the other sectors. Consumer goods decrease (paper-20%, metals goods -20%, packaging -20%).Product demand not correlated to GDP increase (product life time of cars is 16.2 years, of TV 15 years, of appliances 30 years).", worksheet.detailed_lever_guides_o21); end
  def test_detailed_lever_guides_b22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_b22); end
  def test_detailed_lever_guides_d22; assert_equal("How efficiently will we use materials, and will we recycle more? Demand for products leads to the production of 8.7Gt of materials per year.", worksheet.detailed_lever_guides_d22); end
  def test_detailed_lever_guides_e22; assert_equal("Product design leads to the reduction of -1% of materials in 2050.", worksheet.detailed_lever_guides_e22); end
  def test_detailed_lever_guides_h22; assert_equal("No product & material design improvements that would lead to less material needed to make products. No switch to less CO2 intensive materials. Stable level of recycled products & materials (slight increase in chemicals, decrease in aluminium).", worksheet.detailed_lever_guides_h22); end
  def test_detailed_lever_guides_i22; assert_equal("No product & material design improvements (leading to less materials to make products by 2050). No switch to materials which are less CO2 intensive over the product lifetime.Recycling levels the same as today (36% recycled steel, 8% non-recycled chemicals becomes recycled, -29% non-recycled aluminium becomes recycled).", worksheet.detailed_lever_guides_i22); end
  def test_detailed_lever_guides_j22; assert_equal("Ambitious product & material design improvements, resulting in -10% less material to make products. Minor switches to materials which are less CO2 intensive over product lifetimes. Minor increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_j22); end
  def test_detailed_lever_guides_k22; assert_equal("Ambitious product and material design improvements, leading to -10% less materials needed to make products. Minor material switches (5% steel to timber in buildings, 5% cement to timber in buildings, 5% steel to aluminium in cars and trucks, 5% steel to carbon fibres [plastics] in cars and trucks, 1.25% cement to insulation materials [plastics] in buildings and infrastructure). Minor increase by 2050 in recycling (44% steel, 16% chemicals, -21% aluminium, 9% paper).", worksheet.detailed_lever_guides_k22); end
  def test_detailed_lever_guides_l22; assert_equal("Very ambitious product & material design improvements result in -20% less material needed to make products. Significant switches to materials which are less CO2 intensive over product lifetimes. Significant increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_l22); end
  def test_detailed_lever_guides_m22; assert_equal("Very ambitious product and material design improvements, leading to -20% less material needed to make products. Significant material switches (10% steel to timber in buildings, 10% cement to timber in buildings, 10% steel to aluminium in cars and trucks, 10% steel to carbon fibres [plastics] in cars and trucks, 2,5% cement to insulation materials [plastics] in buildings and infrastructure). Significant increase in non recycled which will get recycled (56% steel, 24% chemicals, -14% aluminium, 24% paper).", worksheet.detailed_lever_guides_m22); end
  def test_detailed_lever_guides_n22; assert_equal("Extreme improvements in product & material design, resulting in -30% less material to make products by 2050. which are less CO2 intensive over product lifetimes. Extreme increase in recycling (except aluminium which decreases).", worksheet.detailed_lever_guides_n22); end
  def test_detailed_lever_guides_o22; assert_equal("Extreme improvements in product and material design, leading to -30% less material needed to make products by 2050. Major material switches (20% steel to timber in buildings, 10% cement to timber in buildings, 20% steel to aluminium in cars and trucks, 20% steel to carbon fibres [plastics] in cars and trucks, 5% cement to insulation materials [plastics] in buildings and infrastructure). Major increase in recycling (75% steel, 32% chemicals, -7% aluminium, 39% paper).", worksheet.detailed_lever_guides_o22); end
  def test_detailed_lever_guides_b23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_b23); end
  def test_detailed_lever_guides_d23; assert_equal("How much will emissions reduce from iron, steel and aluminium production? Current emissions in the production of metals are 0.6 GtCO2 per Gt of steel and 1 GtCO2 per Gt of aluminium.", worksheet.detailed_lever_guides_d23); end
  def test_detailed_lever_guides_e23; assert_equal("Specific emissions for Steel reduce/increase by -3% and for Aluminium by -2%.", worksheet.detailed_lever_guides_e23); end
  def test_detailed_lever_guides_h23; assert_equal("Continued use of current processes & technologies. Continued use of fuels. Minimal improvements in energy efficiency. No change in emissions per tonne of steel and aluminium.", worksheet.detailed_lever_guides_h23); end
  def test_detailed_lever_guides_i23; assert_equal("Continued use of current processes and technologies. Steel: 70% classic blast oxygen furnaces (using 21% scrap), 0% HIsarna, 5% electric arc furnace DRI (using 9% scrap), 25% electric arc furnace scrap (using 70% of scrap). Aluminium: 0% decrease in consumption per tonne for primary aluminium and 0% for secondary aluminium. Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne of steel and aluminium are unchanged by 2050 (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i23); end
  def test_detailed_lever_guides_j23; assert_equal("Moderate decrease in classic blast oxygen furnaces, increase in electric arc furnaces and new oxygen furnace technologies. Moderate improvements in aluminium. Equivalent to the development of recent programmes for some sectors. Emissions per tonne decrease by 2% for steel and by 3% for aluminium.", worksheet.detailed_lever_guides_j23); end
  def test_detailed_lever_guides_k23; assert_equal("Moderate process and technology change. Steel: 61% classic blast oxygen furnaces (using 19% of scrap), 2% HIsarna (using 0.2% of scrap), 6% EAF DRI (using 10% scrap), 31% EAF scrap (using 71% scrap). Aluminium: 5% decrease in consumption per tonne for primary aluminium and 5% for secondary aluminium. Some fuel switches in blast oxygen furnaces (2% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap & EAF DRI), some in primary aluminium (2% coal to biomass potential), none in secondary aluminium. Significant energy efficiency improvements (5% in blast oxygen furnaces, none in other technologies and no additional CHP development) Emissions per tonne decrease by 2% for steel and by 3% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k23); end
  def test_detailed_lever_guides_l23; assert_equal("Significant technology progress. Fuel switch towards biomass and electrification, and energy efficiency requiring significant financial investments. Emissions per tonne decrease by 1% for steel and by 7% for aluminium.", worksheet.detailed_lever_guides_l23); end
  def test_detailed_lever_guides_m23; assert_equal("Significant technology progress. Steel: 48% classic blast oxygen furnaces (using 18% scrap), 5% HIsarna (using 1% scrap), 8% EAF DRI (using 9% scrap), 40% EAF scrap (using 72% scrap). Aluminium: (10% decrease in consumption per tonne for primary aluminium and 10% for secondary aluminium.Important fuel switches in blast oxygen furnaces (3% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (3% coal to biomass potential), none in secondary aluminium. Significant energy efficiency increases (7% in blast oxygen furnaces, none in other technologies and no additional CHP development).  Emissions per tonne decrease by 1% for steel and by 7% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m23); end
  def test_detailed_lever_guides_n23; assert_equal("Very important technology progress, fuel switch (towards biomass & electrification) & energy efficiency close to technical and physical constraints (but limited breakthrough technologies).\rEmissions per tonne decrease by 1% for steel and by 13% for aluminium.", worksheet.detailed_lever_guides_n23); end
  def test_detailed_lever_guides_o23; assert_equal("Extreme technology progress. Steel: 25% classic blast oxygen furnaces (using 13% scrap), 10% HIsarna (using 4% scrap), 10% EAF DRI (using 10% scrap), 55% EAF scrap (using 73% scrap). Aluminium: 20% decrease in consumption per tonne for primary aluminium and 20% for secondary aluminium. Major fuel switches in blast oxygen furnaces (5% coal to gas, 15% coal to biomass potential), none in the other steel technologies (HIsarna, EAF scrap and EAF DRI), some in primary aluminium (5% coal to biomass potential), none in secondary aluminium. Energy efficiency improvements close to technical and physical constraints (10% in blast oxygen furnaces, none in other technologies and no additional CHP development). Emissions per tonne reduce by 1% for steel & by 13% for aluminium (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o23); end
  def test_detailed_lever_guides_b24; assert_equal("Chemicals", worksheet.detailed_lever_guides_b24); end
  def test_detailed_lever_guides_d24; assert_equal("How much will emissions reduce from chemical production? Specific emissions for chemicals are 1.5GtCO2 per Gt.", worksheet.detailed_lever_guides_d24); end
  def test_detailed_lever_guides_e24; assert_equal("Specific emissions for chemicals reduce/increase by 1%", worksheet.detailed_lever_guides_e24); end
  def test_detailed_lever_guides_h24; assert_equal("1% increase in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_h24); end
  def test_detailed_lever_guides_i24; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (5% of electricity produced by CHP as now).  Emissions per tonne increase by 1% for chemicals (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i24); end
  def test_detailed_lever_guides_j24; assert_equal("3% decrease in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_j24); end
  def test_detailed_lever_guides_k24; assert_equal("Moderate process and technology changes: 5% decrease in consumption per ton for high value chemicals (HVC), 0% in ammonia, 0% in methanol, 5% in other chemicals. Some fuel switches in HVC (10% coal to gas,10% oil to gas), some switches across all chemical technologies (5% coal to biomass potential). Significant energy efficiency improvements (5% for HVC, 8% for ammonia, 8% for methanol & 5% for other chemicals. 10% of electricity produced by CHP)  Emissions per tonne decrease by 3% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k24); end
  def test_detailed_lever_guides_l24; assert_equal("7% decrease in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_l24); end
  def test_detailed_lever_guides_m24; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 10% for other chemicals. Important fuel switches in HVCs (20% coal to gas,20% oil to gas), some switches across all chemical technologies (10% coal to biomass potential). Significant energy efficiency improvements (10% for HVC, 15% for ammonia, 15% for methanol & 10% for other chemicals & 15% of electricity produced by CHP).  Emissions per tonne decrease by 7% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m24); end
  def test_detailed_lever_guides_n24; assert_equal("15% decrease in CO<sub>2</sub> emissions per tonne of chemicals", worksheet.detailed_lever_guides_n24); end
  def test_detailed_lever_guides_o24; assert_equal("Very important process and technology changes: 20% decrease in consumption per tonne for HVCs, 0% for ammonia, 0% for methanol, 20% for other chemicals.Major fuel switches in HVCs (30% coal to gas,30% oil to gas), some switches across all chemical technologies (20% coal to biomass potential). Energy efficiency improvements close to technical and physical constraints (20% for HVC, 30% for ammonia, 30% for methanol & 20% for other chemicals & 20% of electricity produced by CHP).  Emissions per tonne decrease by 15% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o24); end
  def test_detailed_lever_guides_b25; assert_equal("Paper and other", worksheet.detailed_lever_guides_b25); end
  def test_detailed_lever_guides_d25; assert_equal("How efficiently do we produce paper? Specific emissions for pulp & paper are 0.5 GtCO2 per Gt and for other materials of are 2.4 GtCO2 per Gt.", worksheet.detailed_lever_guides_d25); end
  def test_detailed_lever_guides_e25; assert_equal("Specific emissions for pulp & paper change by -20% and for other materials by -13%.", worksheet.detailed_lever_guides_e25); end
  def test_detailed_lever_guides_h25; assert_equal("1% increase in CO<sub>2</sub> per tonne of pulp and paper produced, and 2% increase for other materials", worksheet.detailed_lever_guides_h25); end
  def test_detailed_lever_guides_i25; assert_equal("Continued use of current processes and technologies. Continued use of fuels. Minimal improvements in energy efficiency (No additional CHP ( 5% of electricity produced by CHP for paper, 5% for timber & 5% for other industries). )Emissions per tonne increase by 1% for paper and 2% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i25); end
  def test_detailed_lever_guides_j25; assert_equal("20% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, 20% decrease for other materials.", worksheet.detailed_lever_guides_j25); end
  def test_detailed_lever_guides_k25; assert_equal("Moderate process and technology changes: paper (5% decrease in consumption per tonne for paper pulp, 5% for virgin paper, 5% for recycled paper), 0% for timber & 0% for other industries. Some fuel switches (coal to biomass potential) inpPaper (2%), timber(2%), and other industries (2%) Significant energy efficiency (20% for paper, 20% for timber, 20% for other industries. 10% of electricity produced by CHP for paper, 10% for timber & 10% for other industries). Emissions per tonne decrease by 20% for pulp and paper and by 20% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k25); end
  def test_detailed_lever_guides_l25; assert_equal("32% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, and 31% decrease for other materials", worksheet.detailed_lever_guides_l25); end
  def test_detailed_lever_guides_m25; assert_equal("Significant process and technology changes: 10% decrease in consumption per tonne for paper pulp, 10% for virgin paper, 10% for recycled paper), 0% for timber & 0% for other industries. Significant fuel switches (coal to biomass potential) in paper (3%), timber (3%), and other industries (3%). Significant energy efficiency (30% for paper, 30% for timber, 30% for other industries. 15% of electricity produced by CHP for paper, 15% for timber & 15% for other industries).  Emissions per tonne decrease by 32% for pulp and paper, and by 31% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m25); end
  def test_detailed_lever_guides_n25; assert_equal("45% decrease in CO<sub>2</sub> per tonne of pulp and paper produced, 42% decrease for other materials", worksheet.detailed_lever_guides_n25); end
  def test_detailed_lever_guides_o25; assert_equal("Very important process and technology changes: paper (20% decrease in consumption per ton for paper pulp, 20% for virgin paper, 20% for recycled paper), % for timber and % in other industries), 0% for timber and 0% for other industries. Major fuel switches (coal to biomass potential) in paper (5%), timber(5%), and other industries (5%). Energy efficiency close to technical and physical constraints (40% for paper, 40% for timber, 40% for other industries. 20% of electricity produced by CHP for paper, 20% for timber & 20% for other industries).  Emissions per tonne reduce by 45% for pulp and paper, and by 42% for other materials (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o25); end
  def test_detailed_lever_guides_b26; assert_equal("Cement", worksheet.detailed_lever_guides_b26); end
  def test_detailed_lever_guides_d26; assert_equal("How efficiently do we produce cement? In 2011, 0.4 Gt of CO2  were emitted per Gt of cement produced.", worksheet.detailed_lever_guides_d26); end
  def test_detailed_lever_guides_e26; assert_equal("Specific emissions for cement reduce/increase by -5%.", worksheet.detailed_lever_guides_e26); end
  def test_detailed_lever_guides_h26; assert_equal("2% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_h26); end
  def test_detailed_lever_guides_i26; assert_equal("Continued use of current processes and technologies (28% clinker in cement). Continued use of fuels. Minimal improvements in energy efficiency (no additional CHP). Emissions per tonne decrease by 2% for cement (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_i26); end
  def test_detailed_lever_guides_j26; assert_equal("4% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_j26); end
  def test_detailed_lever_guides_k26; assert_equal("Moderate process and technology changes: 4% decrease in consumption per tonne (31% clinker in cement). Some fuel switches (6% coal to biomass potential) Significant energy efficiency (9%). No additional CHP developments.  Emissions per tonne decrease by 4% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_k26); end
  def test_detailed_lever_guides_l26; assert_equal("8% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_l26); end
  def test_detailed_lever_guides_m26; assert_equal("Significant process and technology changes: 8% decrease in consumption per tonne (34% clinker in cement). Significant fuel switches (46% coal to biomass potential). Significant energy efficiency (18%). No additional CHP developments.  Emissions per tonne decrease by 8% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_m26); end
  def test_detailed_lever_guides_n26; assert_equal("31% decrease in CO<sub>2</sub> emissions per tonne of cement produced.", worksheet.detailed_lever_guides_n26); end
  def test_detailed_lever_guides_o26; assert_equal("Very important process and technology changes: 86% decrease in consumption per tonne (90% clinker in cement).Major fuel switches (100% coal to biomass potential). Energy efficiency close to technical & physical constraints (30%). No additional CHP developments.  Emissions per tonne reduce by 31% (excluding electricity emissions and counting biomass as fossil fuel).", worksheet.detailed_lever_guides_o26); end
  def test_detailed_lever_guides_b27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_b27); end
  def test_detailed_lever_guides_d27; assert_equal("Will we use CCS in industry to capture process and combustion emissions? CCS is not implemented in industry in 2011.", worksheet.detailed_lever_guides_d27); end
  def test_detailed_lever_guides_e27; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.detailed_lever_guides_e27); end
  def test_detailed_lever_guides_h27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_h27); end
  def test_detailed_lever_guides_i27; assert_equal("No CCS development.", worksheet.detailed_lever_guides_i27); end
  def test_detailed_lever_guides_j27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions . It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_j27); end
  def test_detailed_lever_guides_k27; assert_equal("Partial CCS development as of 2030 progressively leading to a reduction of 18% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_k27); end
  def test_detailed_lever_guides_l27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_l27); end
  def test_detailed_lever_guides_m27; assert_equal("Important CCS development as of 2030 progressively leading to a reduction of 39% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_m27); end
  def test_detailed_lever_guides_n27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions. It also implies a 1 EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_n27); end
  def test_detailed_lever_guides_o27; assert_equal("Very important CCS development as of 2030 progressively leading to a reduction of 70% of emissions (excluding electricity emissions & counting biomass as fossil fuel). It also implies a 119EJ additional electricity consumption per GtCO2 captured.", worksheet.detailed_lever_guides_o27); end
  def test_detailed_lever_guides_b28; assert_equal("Coal (incl. biomass) / oil / gas", worksheet.detailed_lever_guides_b28); end
  def test_detailed_lever_guides_c28; assert_equal("SLG.elec", worksheet.detailed_lever_guides_c28); end
  def test_detailed_lever_guides_d28; assert_equal("In thermal power plants, do we use solid fuel (coal or wood) or gaseous fuel (natural gas or biogas)? In 2011 out of total power supplied by fossil fuels 60% was supplied by solid fuel (coal / biomass), 9% by liquid fuel and 31% by gas fuel.", worksheet.detailed_lever_guides_d28); end
  def test_detailed_lever_guides_e28; assert_equal("In 2050 out of total fossil energy supplied it is 44% of solid, 21% of liquid and 35% of gas power.", worksheet.detailed_lever_guides_e28); end
  def test_detailed_lever_guides_g28; assert_equal("If the user supplies bioenergy from the land and food choices, some of this is allocated to thermal power plants.", worksheet.detailed_lever_guides_g28); end
  def test_detailed_lever_guides_h28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 61% is solid, 29% liquid and 10% is gas-based power.", worksheet.detailed_lever_guides_h28); end
  def test_detailed_lever_guides_i28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 61% is solid, 29% liquid and 10% is gas-based power.. This represents a slight move away from gas to liquid based power.", worksheet.detailed_lever_guides_i28); end
  def test_detailed_lever_guides_j28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 40% is solid, 19% of liquid and 41% of gas-based power", worksheet.detailed_lever_guides_j28); end
  def test_detailed_lever_guides_k28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 61% is solid, 29% liquid and 10% is gas-based power.. This represents a slight move away from solid to gas and liquid based power.", worksheet.detailed_lever_guides_k28); end
  def test_detailed_lever_guides_l28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 32% is solid, 6% is liquid and 62% is gas-based power.", worksheet.detailed_lever_guides_l28); end
  def test_detailed_lever_guides_m28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 61% is solid, 29% liquid and 10% is gas-based power.. This represents a strong move away from solid to gas based power.", worksheet.detailed_lever_guides_m28); end
  def test_detailed_lever_guides_n28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 26% is solid, 2% is liquid and 72% is gas-based power.", worksheet.detailed_lever_guides_n28); end
  def test_detailed_lever_guides_o28; assert_equal("By 2050, out of total electricity from fossil fuel / bioenergy based power, 61% is solid, 29% liquid and 10% is gas-based power.. This represents a significant move away from coal and liquid based power toward gas based power.", worksheet.detailed_lever_guides_o28); end
  def test_detailed_lever_guides_b29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_b29); end
  def test_detailed_lever_guides_d29; assert_equal("How efficient will power stations be? In 2011:\rSOLID FUELED POWER: 8% by ultrasupercritical, 17% supercritical, 75% sub-critical\rLIQUID FUELED POWER: 30% are efficient plants (over 50% efficient), 70% are inefficient plants (under 50% efficient)\rGAS FUELED POWER: 35% open cycle gas turbines and 65% by combined cycle gas turbines.", worksheet.detailed_lever_guides_d29); end
  def test_detailed_lever_guides_e29; assert_equal("In 2050 out of fossil energy supplied it is 17% by solid USC, 25% by solid SC, 58% by solid Sub-C, 41% by eff. liquid, 59% by ineff. liquid, 53% by OCGT and 47% by CCGT plant.", worksheet.detailed_lever_guides_e29); end
  def test_detailed_lever_guides_h29; assert_equal("By 2050:SOLID FUELED POWER 14% by solid ultrasupercritical, 23% by solid supercritical, 63% by solid subcritical. LIQUID FUELED POWER: 33% by efficient (plants that are over 50% efficient), 67% by inefficient (plants that less than 50% efficient). GAS FUELED POWER: 61% open cycle gas turbine, 39% combined cycle gas turbines.", worksheet.detailed_lever_guides_h29); end
  def test_detailed_lever_guides_i29; assert_equal("By 2050:SOLID FUELED POWER 14% by solid ultrasupercritical, 23% by solid supercritical, 63% by solid subcritical. LIQUID FUELED POWER: 33% by efficient (plants that are over 50% efficient), 67% by inefficient (plants that less than 50% efficient). GAS FUELED POWER: 61% open cycle gas turbine, 39% combined cycle gas turbines.", worksheet.detailed_lever_guides_i29); end
  def test_detailed_lever_guides_j29; assert_equal("By 2050:SOLID FUELED POWER:18% by solid ultrasupercritical, 27% by solid supercritical, 55% by solid subcritical. LIQUID FUELED: 47% by efficient (plants that are over 50% efficient), 53% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 48% open cycle gas turbine 53% combined cycle gas turbines.", worksheet.detailed_lever_guides_j29); end
  def test_detailed_lever_guides_k29; assert_equal("By 2050:SOLID FUELED POWER:18% by solid ultrasupercritical, 27% by solid supercritical, 55% by solid subcritical. LIQUID FUELED: 47% by efficient (plants that are over 50% efficient), 53% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 48% open cycle gas turbine 53% combined cycle gas turbines.", worksheet.detailed_lever_guides_k29); end
  def test_detailed_lever_guides_l29; assert_equal("By 2050:SOLID FUELED POWER: 20% by solid ultrasupercritical, 29% by solid supercritical, 50% by solid subcritical.LIQUID FUELED POWER: 65% by efficient (plants that are over 50% efficient), 35% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 18% open cycle gas turbine 83% combined cycle gas turbines.", worksheet.detailed_lever_guides_l29); end
  def test_detailed_lever_guides_m29; assert_equal("By 2050:SOLID FUELED POWER: 20% by solid ultrasupercritical, 29% by solid supercritical, 50% by solid subcritical.LIQUID FUELED POWER: 65% by efficient (plants that are over 50% efficient), 35% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 18% open cycle gas turbine 83% combined cycle gas turbines.", worksheet.detailed_lever_guides_m29); end
  def test_detailed_lever_guides_n29; assert_equal("By 2050: SOLID FUELED POWER: 23% by solid ultrasupercritical, 32% by solid supercritical, 45% by solid subcritical.LIQUID FUELED POWER: 71% by efficient (plants that are over 50% efficient), 29% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 7% open cycle gas turbine 93% combined cycle gas turbines.", worksheet.detailed_lever_guides_n29); end
  def test_detailed_lever_guides_o29; assert_equal("By 2050: SOLID FUELED POWER: 23% by solid ultrasupercritical, 32% by solid supercritical, 45% by solid subcritical.LIQUID FUELED POWER: 71% by efficient (plants that are over 50% efficient), 29% by inefficient (plants that are less than 50% efficient).GAS FUELED POWER: 7% open cycle gas turbine 93% combined cycle gas turbines.", worksheet.detailed_lever_guides_o29); end
  def test_detailed_lever_guides_b30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_b30); end
  def test_detailed_lever_guides_c30; assert_equal("CCS.elec", worksheet.detailed_lever_guides_c30); end
  def test_detailed_lever_guides_d30; assert_equal("Do we use carbon capture and storage in electricity generation? In 2011, most of the CCS projects implemented in the power sector were demonstration projects of kW and MW scale. There was no commercial deployment of CCS in power in 2011. However, there is a pipeline of CCS projects being developed by OECD countries (mainly USA and EU). These are not expected until the early 2020s.", worksheet.detailed_lever_guides_d30); end
  def test_detailed_lever_guides_e30; assert_equal("111 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_e30); end
  def test_detailed_lever_guides_h30; assert_equal("16 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_h30); end
  def test_detailed_lever_guides_i30; assert_equal("By 2050 there will be 16 GW of power plants with CCS. No new CCS plants will be commissioned beyond 2020 and the plants commissioned between 2015-2020 will be operating by 2050.", worksheet.detailed_lever_guides_i30); end
  def test_detailed_lever_guides_j30; assert_equal("490 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_j30); end
  def test_detailed_lever_guides_k30; assert_equal("490 GW of CCS installed power capacity by 2050. This could be interpreted as expansion mostly driven by the US and EU and no/low participation from non-OECD countries. 10% of total fossil fuel plants will have CCS by 2050.", worksheet.detailed_lever_guides_k30); end
  def test_detailed_lever_guides_l30; assert_equal("1,487 GW of CCS installed power capacity by 2050.", worksheet.detailed_lever_guides_l30); end
  def test_detailed_lever_guides_m30; assert_equal("1,487 GW of CCS installed power capacity by 2050. This could be interpreted as moderate penetration of CCS in OECD countries and emerging economies and low expansion in developing countries. 30% of total fossil fuel-based plants have adopted CCS technology by 2050.", worksheet.detailed_lever_guides_m30); end
  def test_detailed_lever_guides_n30; assert_equal("3,700 GW of CCS installed power capacity by 2050", worksheet.detailed_lever_guides_n30); end
  def test_detailed_lever_guides_o30; assert_equal("3,700 GW of CCS installed power capacity by 2050 High CCS expansion worldwide.", worksheet.detailed_lever_guides_o30); end
  def test_detailed_lever_guides_b31; assert_equal("Nuclear", worksheet.detailed_lever_guides_b31); end
  def test_detailed_lever_guides_c31; assert_equal("nuclear.elec", worksheet.detailed_lever_guides_c31); end
  def test_detailed_lever_guides_d31; assert_equal("Do we use nuclear power? In 2011, global capacity was 364 GW.", worksheet.detailed_lever_guides_d31); end
  def test_detailed_lever_guides_e31; assert_equal("617 GW of installed nuclear power capacity by 2050.", worksheet.detailed_lever_guides_e31); end
  def test_detailed_lever_guides_h31; assert_equal("0 GW", worksheet.detailed_lever_guides_h31); end
  def test_detailed_lever_guides_i31; assert_equal("0 GW", worksheet.detailed_lever_guides_i31); end
  def test_detailed_lever_guides_j31; assert_equal("685 GW", worksheet.detailed_lever_guides_j31); end
  def test_detailed_lever_guides_k31; assert_equal("685 GW This is equivalent to current global build rates continuing up to 2050.", worksheet.detailed_lever_guides_k31); end
  def test_detailed_lever_guides_l31; assert_equal("1,030 GW", worksheet.detailed_lever_guides_l31); end
  def test_detailed_lever_guides_m31; assert_equal("1,030 GW This is equivalent to global planned build rates over the next decade (until 2020) continuing up to 2050.", worksheet.detailed_lever_guides_m31); end
  def test_detailed_lever_guides_n31; assert_equal("1,870 GW", worksheet.detailed_lever_guides_n31); end
  def test_detailed_lever_guides_o31; assert_equal("1,870 GW This is equivalent to implementation of all planned projects over the next decade, followed by expansion of the technology at the highest achievable build rate until 2050.", worksheet.detailed_lever_guides_o31); end
  def test_detailed_lever_guides_b32; assert_equal("Wind", worksheet.detailed_lever_guides_b32); end
  def test_detailed_lever_guides_c32; assert_equal("onshore.wind.elec, offshore.wind.elec", worksheet.detailed_lever_guides_c32); end
  def test_detailed_lever_guides_d32; assert_equal("Do we use wind power? In 2011 there was around 234 GW of onshore wind capacity, in 83 countries. There was also 4 GW of offshore power installed.", worksheet.detailed_lever_guides_d32); end
  def test_detailed_lever_guides_e32; assert_equal("1,390 GW of installed wind power capacity by 2050.", worksheet.detailed_lever_guides_e32); end
  def test_detailed_lever_guides_h32; assert_equal("0 GW", worksheet.detailed_lever_guides_h32); end
  def test_detailed_lever_guides_i32; assert_equal("By 2050 there is 0 GW of onshore wind energy. It builds at a rate of 19.64% till 2013, 8% till 2015, 5% till 2020 with decommissioning in tandem. by 2050 the offshore wind energy is also 0 GW with a build rate of 34.06% by 2015. After this, the rate of build up and decommissioning matches each other until 2020 after which it serves its technical lifespan. ", worksheet.detailed_lever_guides_i32); end
  def test_detailed_lever_guides_j32; assert_equal("2,317 GW", worksheet.detailed_lever_guides_j32); end
  def test_detailed_lever_guides_k32; assert_equal("By 2050 there is 1862 GW of onshore wind energy and 455 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_k32); end
  def test_detailed_lever_guides_l32; assert_equal("4,710 GW", worksheet.detailed_lever_guides_l32); end
  def test_detailed_lever_guides_m32; assert_equal("by 2050 there is 3800 GW of onshore wind energy and 910 GW of offshore wind energy. Different build rates were arrived by technical and geographical analysis.", worksheet.detailed_lever_guides_m32); end
  def test_detailed_lever_guides_n32; assert_equal("6,466 GW", worksheet.detailed_lever_guides_n32); end
  def test_detailed_lever_guides_o32; assert_equal("By 2050 there is 5058 GW of onshore wind energy. It builds at a rate of 21% by 2015, 16% by 2020, 8% by 2030, 6% until 2040 and 2% until 2050. There is 1408 GW of offshore wind energy which builds at a rate of 34.06% until 2020, 20% until 2030, 8% by 2040 and 4% by 2050. ", worksheet.detailed_lever_guides_o32); end
  def test_detailed_lever_guides_b33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_b33); end
  def test_detailed_lever_guides_c33; assert_equal("hydro.elec", worksheet.detailed_lever_guides_c33); end
  def test_detailed_lever_guides_d33; assert_equal("Do we use hydroelectric power? In 2011 global capacity was 970 GW.", worksheet.detailed_lever_guides_d33); end
  def test_detailed_lever_guides_e33; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.detailed_lever_guides_e33); end
  def test_detailed_lever_guides_h33; assert_equal("1,188 GW", worksheet.detailed_lever_guides_h33); end
  def test_detailed_lever_guides_i33; assert_equal("1,188 GW This is equivalent to all current capacity plus all projects already under construction or that have been commissioned.", worksheet.detailed_lever_guides_i33); end
  def test_detailed_lever_guides_j33; assert_equal("1,750 GW", worksheet.detailed_lever_guides_j33); end
  def test_detailed_lever_guides_k33; assert_equal("1,750 GW This is equivalent to steady growth of 1.5% a year.", worksheet.detailed_lever_guides_k33); end
  def test_detailed_lever_guides_l33; assert_equal("2,101 GW", worksheet.detailed_lever_guides_l33); end
  def test_detailed_lever_guides_m33; assert_equal("2,101 GW This is equivalent to steady growth of 2% a year, with continued investment in large hydro and technology upgrading.", worksheet.detailed_lever_guides_m33); end
  def test_detailed_lever_guides_n33; assert_equal("2,375 GW", worksheet.detailed_lever_guides_n33); end
  def test_detailed_lever_guides_o33; assert_equal("2,375 GW This is equivalent to a growth rate of 3% per year. Considering a limiting build rate of 3.55% to realize the entire hydro potential by 2050.", worksheet.detailed_lever_guides_o33); end
  def test_detailed_lever_guides_b34; assert_equal("Marine", worksheet.detailed_lever_guides_b34); end
  def test_detailed_lever_guides_c34; assert_equal("tidal.elec, wave.elec", worksheet.detailed_lever_guides_c34); end
  def test_detailed_lever_guides_d34; assert_equal("Do we use wave and tidal power? In 2011, global capacity was 0.5 GW of marine in total  (0.5 GW of tidal power and 0 GW of wave power).", worksheet.detailed_lever_guides_d34); end
  def test_detailed_lever_guides_e34; assert_equal("43.6 GW of installed marine power capacity by 2050.", worksheet.detailed_lever_guides_e34); end
  def test_detailed_lever_guides_h34; assert_equal("8 GW", worksheet.detailed_lever_guides_h34); end
  def test_detailed_lever_guides_i34; assert_equal("By 2050 there is 0 GW of tidal energy if not harnessed as the present installation would serve its technical lifespan whereas there will be 8 GW of wave energy.", worksheet.detailed_lever_guides_i34); end
  def test_detailed_lever_guides_j34; assert_equal("97 GW", worksheet.detailed_lever_guides_j34); end
  def test_detailed_lever_guides_k34; assert_equal("By 2050, there is 35 GW of tidal electricity and 62 GW of wave. ", worksheet.detailed_lever_guides_k34); end
  def test_detailed_lever_guides_l34; assert_equal("237 GW", worksheet.detailed_lever_guides_l34); end
  def test_detailed_lever_guides_m34; assert_equal("by 2050 there is 49 GW of tidal electricity. Build up rate enhanced considering construction time, global technological and environmental factors whereas there will be 105 GW of wave energy based on similar analysis.", worksheet.detailed_lever_guides_m34); end
  def test_detailed_lever_guides_n34; assert_equal("436 GW", worksheet.detailed_lever_guides_n34); end
  def test_detailed_lever_guides_o34; assert_equal("By 2050 there is 64 GW of tidal energy and 143 GW of wave energy. Different build up rate computed considering technical maturity and potential acceptance. ", worksheet.detailed_lever_guides_o34); end
  def test_detailed_lever_guides_b35; assert_equal("Solar", worksheet.detailed_lever_guides_b35); end
  def test_detailed_lever_guides_c35; assert_equal("concentrated.solar.elec, solarpv.elec", worksheet.detailed_lever_guides_c35); end
  def test_detailed_lever_guides_d35; assert_equal("Do we use solar power? In 2011, global capacity was 71.3 GW in total (69.7 GW of photovoltaic power and 1.6 GW of concentrated solar power). ", worksheet.detailed_lever_guides_d35); end
  def test_detailed_lever_guides_e35; assert_equal("882 GW of installed solar power capacity by 2050.", worksheet.detailed_lever_guides_e35); end
  def test_detailed_lever_guides_h35; assert_equal("0 GW", worksheet.detailed_lever_guides_h35); end
  def test_detailed_lever_guides_i35; assert_equal("By 2050 there is 0 GW of concentrated solar power. The average build up rate is 44.45% till 2015, 43.09% by 2020 after which the rate of decommissioning and technical lifespan will exceed build up rate. by 2050 there is 0 GW of photovoltaic which builds by 18.34% by 2015, 16.58% by 2020 post which rate of decommission & technical life span takes over.", worksheet.detailed_lever_guides_i35); end
  def test_detailed_lever_guides_j35; assert_equal("2,204 GW", worksheet.detailed_lever_guides_j35); end
  def test_detailed_lever_guides_k35; assert_equal("By 2050 there is 388 GW of concentrated solar power and 811 GW of photovoltaic. Build up rates computed by analysing various technologies, barriers and country specific factors.", worksheet.detailed_lever_guides_k35); end
  def test_detailed_lever_guides_l35; assert_equal("4,149 GW", worksheet.detailed_lever_guides_l35); end
  def test_detailed_lever_guides_m35; assert_equal("by 2050 there is 879 GW of concentrated solar power and 1860 GW of photovoltaic. Build up rates computed by analysing various factors.", worksheet.detailed_lever_guides_m35); end
  def test_detailed_lever_guides_n35; assert_equal("7,547 GW", worksheet.detailed_lever_guides_n35); end
  def test_detailed_lever_guides_o35; assert_equal("By 2050 there is 1067 GW of concentrated solar energy. The average build rate is 58% up to 2020 where CSP landscape will change to average 8% by 2030 and 6% by 2050. by 2050 there is 3750 GW of photovoltaic with 22.76% till 2020, 15.3% by 2030, 8.75% by 2040 and 6% till 2050. ", worksheet.detailed_lever_guides_o35); end
  def test_detailed_lever_guides_b36; assert_equal("Geothermal", worksheet.detailed_lever_guides_b36); end
  def test_detailed_lever_guides_c36; assert_equal("geothermal.elec", worksheet.detailed_lever_guides_c36); end
  def test_detailed_lever_guides_d36; assert_equal("Do we use geothermal power? In 2011, global capacity was 11 GW, centred in 24 countries. Maximum potential exists in the 'ring of fire' around the Pacific Ocean.", worksheet.detailed_lever_guides_d36); end
  def test_detailed_lever_guides_e36; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.detailed_lever_guides_e36); end
  def test_detailed_lever_guides_h36; assert_equal("0 GW", worksheet.detailed_lever_guides_h36); end
  def test_detailed_lever_guides_i36; assert_equal("By 2050 there is 0 GW of geothermal electricity. Technological lifespan and depreciating CAGR was arrived by analysis of various intertwined factors.", worksheet.detailed_lever_guides_i36); end
  def test_detailed_lever_guides_j36; assert_equal("172 GW", worksheet.detailed_lever_guides_j36); end
  def test_detailed_lever_guides_k36; assert_equal("By 2050 there is 172 GW of geothermal electricity. Different build up rate were arrived for different timespans with emphasis on ring of fire countries.", worksheet.detailed_lever_guides_k36); end
  def test_detailed_lever_guides_l36; assert_equal("289 GW", worksheet.detailed_lever_guides_l36); end
  def test_detailed_lever_guides_m36; assert_equal("by 2050 there is 289 GW of geothermal electricity. Average growth rate is arrived by considering various global factors.", worksheet.detailed_lever_guides_m36); end
  def test_detailed_lever_guides_n36; assert_equal("404 GW", worksheet.detailed_lever_guides_n36); end
  def test_detailed_lever_guides_o36; assert_equal("By 2050 there is 404 GW of geothermal electricity. The average built up rate is 9% till 2020, whereas 11.55% till 2040 and 6% up till 2050. For developing the levels different variables were mapped and interdependence of factors was analysed.", worksheet.detailed_lever_guides_o36); end
  def test_detailed_lever_guides_b37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_b37); end
  def test_detailed_lever_guides_c37; assert_equal("storage.elec", worksheet.detailed_lever_guides_c37); end
  def test_detailed_lever_guides_d37; assert_equal("How much electricity storage will we have? This is important in a grid using intermittent renewable technologies (like solar and wind) to make sure that peak demand is met. In 2011, there were 120 GW of electricity storage plants.", worksheet.detailed_lever_guides_d37); end
  def test_detailed_lever_guides_e37; assert_equal("278 GW of electricity storage capacity by 2050.", worksheet.detailed_lever_guides_e37); end
  def test_detailed_lever_guides_h37; assert_equal("152 GW", worksheet.detailed_lever_guides_h37); end
  def test_detailed_lever_guides_i37; assert_equal("By 2050, around 152 GW of peak demand is met by energy storage. The storage has an annual growth rate of 3%.", worksheet.detailed_lever_guides_i37); end
  def test_detailed_lever_guides_j37; assert_equal("403 GW", worksheet.detailed_lever_guides_j37); end
  def test_detailed_lever_guides_k37; assert_equal("By 2050 there is 600 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_k37); end
  def test_detailed_lever_guides_l37; assert_equal("800 GW", worksheet.detailed_lever_guides_l37); end
  def test_detailed_lever_guides_m37; assert_equal("By 2050 there is 800 GW of energy storage system by 2050.", worksheet.detailed_lever_guides_m37); end
  def test_detailed_lever_guides_n37; assert_equal("1,200 GW", worksheet.detailed_lever_guides_n37); end
  def test_detailed_lever_guides_o37; assert_equal("High adoption of storage technologies across the globe, with 1200 GW of energy storage by 2050. ", worksheet.detailed_lever_guides_o37); end
  def test_detailed_lever_guides_b38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_b38); end
  def test_detailed_lever_guides_d38; assert_equal("How much food will we eat? In 2011, the global average calorie consumption was 2,170 kcal/person/day. This value represents the effective calorie intake by person and excludes losses along the supply chain (24% in terms of food energy content) and accounts for extremes, such as undernourishment and obesity. Currently, approximately 805 million people in the world do not have enough food to lead a healthy active life (FAO, 2014). In 2010, more than 1.4 billion adults were overweight (BMI >25) of which 500 million were obese (BMI >30) (WHO, 2014).", worksheet.detailed_lever_guides_d38); end
  def test_detailed_lever_guides_h38; assert_equal("High global average calorie consumption by 2050, reflecting the current European level (2,560 kcal/person/day).", worksheet.detailed_lever_guides_h38); end
  def test_detailed_lever_guides_i38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day to the current European level, i.e., 2,560 kcal/person/day, by 2050. This represents and extreme scenario, where the entire world would reach European levels of food consumption with high risks of obesity, diabetes and cardiovascular problems. More land would have to be allocated to agricultural production.", worksheet.detailed_lever_guides_i38); end
  def test_detailed_lever_guides_j38; assert_equal("Global average calorie consumption increases to 2,430 kcal/person/day by 2050 (2000-2010 annual average growth rate).", worksheet.detailed_lever_guides_j38); end
  def test_detailed_lever_guides_k38; assert_equal("Global average calorie consumption increases from 2,170 kcal/person/day in 2011 to 2,430 kcal/person/day by 2050 based on the growth rate of the past decade (2000-2010). Therefore, this pathway corresponds to approximately the same changes in food consumption observed in the last 10 years, in which some developing countries (e.g., China and India) have substantially increased their calorie intake.", worksheet.detailed_lever_guides_k38); end
  def test_detailed_lever_guides_l38; assert_equal("Global average calorie consumption rises to 2,330 kcal/person/day by 2050 based on trend forecast by the UN’s Food and Agricultural Organisation (FAO).", worksheet.detailed_lever_guides_l38); end
  def test_detailed_lever_guides_m38; assert_equal("Global average calorie consumption increases  from 2,140 kcal/capita/day in 2011 to approximately 2,330 kcal/capita/day by 2050, which is similar to the UN's Food and Agricultural Organisation (FAO) forecast by Alexandratos and Bruinsma (2012) (adjusted to exclude food losses). In this trajectory, there will be still a significant increase of food consumption globally, but the current trend would be slightly reduced by population and consumption peaks in some countries.", worksheet.detailed_lever_guides_m38); end
  def test_detailed_lever_guides_n38; assert_equal("Global average calorie consumption meets the target for a healthy diet by 2050 (2,100 kcal/person/day).", worksheet.detailed_lever_guides_n38); end
  def test_detailed_lever_guides_o38; assert_equal("Global average calorie consumption reduces slightly from 2,170 kcal/person/day in 2011 to 2,100 kcal/person/day by 2050, which is the target for a healthy diet (2,200 kcal/person/day for men, and 2,000 kcal/person/day for women). However, this scenario may also see a redistribution of calorie intakes, where some developing countries could increase food consumption (e.g., by reducing poverty), whilst some developed countries could reduce their consumption (by tackling obesity issues). Overall, this is an extreme target, given that values below this global average would result in more cases of undernourishment.", worksheet.detailed_lever_guides_o38); end
  def test_detailed_lever_guides_b39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_b39); end
  def test_detailed_lever_guides_d39; assert_equal("How much meat will we eat? The current global average meat consumption is 191 kcal/person/day, but growing incomes in developing countries tend to promote an increase in meat consumption. This value represents the effective calorie intake by person and excludes losses along the supply chain (19% in terms of meat energy content). People in developing countries on average consume 32 kg of meat a year (88 g/person/day), compared to 80 kg/person/year (219 g/person/day) in industrialised countries (Worldwatch, 2011).  As meat production is, on average, associated with significantly higher GHG emissions than the production of grains, fruit and vegetables per unit of output, a shift from a high meat diet to lower levels of meat consumption can help in the reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_d39); end
  def test_detailed_lever_guides_h39; assert_equal("Very high global average meat consumption by 2050 (278 kcal/person/day), reflecting the 2011 average meat consumption in Europe.", worksheet.detailed_lever_guides_h39); end
  def test_detailed_lever_guides_i39; assert_equal("Very high consumption of meat with an increase from 191 kcal/person/day in 2011 to 278 kcal/person/day by 2050. This level assumes the total meat consumption per person in Europe in 2011 as a global target for 2050. This represents a very risky pathway, given that a significant amount of land would be necessary to meet this extreme demand for meat.", worksheet.detailed_lever_guides_i39); end
  def test_detailed_lever_guides_j39; assert_equal("Global average meat consumption stabilises at 191 kcal/person/day by 2050.", worksheet.detailed_lever_guides_j39); end
  def test_detailed_lever_guides_k39; assert_equal("The current global average meat consumption of 191 kcal/person/day stabilises and continues until 2050. In this pathway, there is no significant change in average meat calorie consumption.", worksheet.detailed_lever_guides_k39); end
  def test_detailed_lever_guides_l39; assert_equal("Low global average meat consumption by 2050 at 162 kcal/person/day, based on the WHO reference for a healthy diet (90g meat/ day).", worksheet.detailed_lever_guides_l39); end
  def test_detailed_lever_guides_m39; assert_equal("WHO recommended meat consumption of 90 g meat/day (162 kcal/person/day) for a healthy diet by 2050.", worksheet.detailed_lever_guides_m39); end
  def test_detailed_lever_guides_n39; assert_equal("Extremely low global average meat consumption (14 kcal/person/day) akin to the Indian level in 2011, including vegetarian diets and meat alternatives.", worksheet.detailed_lever_guides_n39); end
  def test_detailed_lever_guides_o39; assert_equal("Extremely low global average meat consumption of 14 kcal/person/day by 2050, which reflects India’s 2011 average meat consumption.  This lever considers vegetarian diets and meat alternatives (e.g., soy meat substitutes, yeast-based meat and potential stem cell-based technologies). It represents an extreme situation and assumes an unprecedented change in dietary preferences worldwide.", worksheet.detailed_lever_guides_o39); end
  def test_detailed_lever_guides_b40; assert_equal("Type of meat", worksheet.detailed_lever_guides_b40); end
  def test_detailed_lever_guides_d40; assert_equal("Do we eat more red meat or white meat? Currently, the red meat constitutes the dominant share of meat consumed globally (75%), while only 25% is white meat (2011). Red meat includes beef, pork, mutton (sheep) and goat, with respective shares of 17%, 53% and 5% (2011). White meat includes chicken and other poultry. As the production of red meat is, on average, associated with significantly higher GHG emissions per kg than white meat and other resource use (i.e., land, water), a shift from a red to a predominantly white meat diet can help in significantly reduction of the GHG footprint of our diets. ", worksheet.detailed_lever_guides_d40); end
  def test_detailed_lever_guides_h40; assert_equal("Very high global consumption of red meat, reflecting current levels of 75% red meat and 25% white meat by 2050.", worksheet.detailed_lever_guides_h40); end
  def test_detailed_lever_guides_i40; assert_equal("Very high global consumption of red meat (75%, with 17% beef, 53% pork and 5% mutton and goat, respectively) and a low consumption of ~25% white meat (chicken and other poultry) by 2050. This assumes that the current (2011) global share of meat types consumed remains unchanged by 2050.", worksheet.detailed_lever_guides_i40); end
  def test_detailed_lever_guides_j40; assert_equal("Reduced  global consumption of red meat (60%) and a slightly increased consumption of white meat (40%) by 2050. ", worksheet.detailed_lever_guides_j40); end
  def test_detailed_lever_guides_k40; assert_equal("Reduced global consumption of red meat (60%, with 14% beef, 42% pork and 4% mutton and goat, respectively) and a slightly increased consumption of white meat (40%; chicken and other poultry) by 2050. This entails a gradual shift from red to white meat from the current (2011) global share of meat types (75% red meat and 25% white meat, respectively) consumed by 2050.", worksheet.detailed_lever_guides_k40); end
  def test_detailed_lever_guides_l40; assert_equal("Significantly reduced consumption of red meat (40%) and a significantly increased consumption of white meat (60%) by 2050. ", worksheet.detailed_lever_guides_l40); end
  def test_detailed_lever_guides_m40; assert_equal("Significantly reduced global consumption of red meat (40%, with 9% beef, 28% pork and 3% mutton and goat, respectively) and a significant increase in consumption of white meat (60%; chicken and other poultry) by 2050. This entails a significant shift from red to white meat from the current (2011) global share of meat types (75% red meat and 25% white meat, respectively) consumed by 2050.", worksheet.detailed_lever_guides_m40); end
  def test_detailed_lever_guides_n40; assert_equal("Extremely reduced consumption of red meat (25%) and a high consumption of white meat (75%) by 2050. ", worksheet.detailed_lever_guides_n40); end
  def test_detailed_lever_guides_o40; assert_equal("Extremely reduced global consumption of red meat (25%, with 5% beef, 17% pork and ~2% mutton and goat, respectively) and a high increase in consumption of white meat (75%; chicken and other poultry) by 2050. This entails an extreme shift from red to white meat from the current (2011) global share of meat types (75% red meat and 25% white meat, respectively) consumed by 2050.", worksheet.detailed_lever_guides_o40); end
  def test_detailed_lever_guides_b41; assert_equal("Crop yields", worksheet.detailed_lever_guides_b41); end
  def test_detailed_lever_guides_d41; assert_equal("Can we increase crop yields? Globally, crop yields are continuing to increase, although a lower rates than historically. There is a large potential, particularly in developing countries with significant productivity gaps (the difference between actual and potential yields based on agro-ecological parameters), to increase yields substantially to levels achieved in industrialised countries. From 1987-2007 global average annual crop yield growth was approximately 1.9% (FAO, 2012).", worksheet.detailed_lever_guides_d41); end
  def test_detailed_lever_guides_h41; assert_equal("Negative crop yields, potentially due to adverse climate change impacts on agriculture (yields fall 10% by 2050).", worksheet.detailed_lever_guides_h41); end
  def test_detailed_lever_guides_i41; assert_equal("A severe crop productivity decrease of -10% overall by 2050, potentially due to negative impacts of climate change on agriculture or scarcity of key resources, e.g., water and fertilisers.", worksheet.detailed_lever_guides_i41); end
  def test_detailed_lever_guides_j41; assert_equal("Moderate crop yield growth (40% increase from 2011 by 2050).", worksheet.detailed_lever_guides_j41); end
  def test_detailed_lever_guides_k41; assert_equal("Moderate crop yield growth of approximately 40% by 2050, as suggested by the UN's Food and Agriculture Organisation (FAO) as a likely trend (assuming grains as a reference).", worksheet.detailed_lever_guides_k41); end
  def test_detailed_lever_guides_l41; assert_equal("High crop yield growth (60% increase from 2011 by 2050).", worksheet.detailed_lever_guides_l41); end
  def test_detailed_lever_guides_m41; assert_equal("Global yields increase by approximately 60% by 2050. This increase represents a linear extrapolation of past yield growths, taking grains as a reference. This level assumes a significant contribution from improved crop varieties, more irrigation, higher use of fertilisers, improved farm management, technology transfer and capacity development programmes to reduce the yield gap and low levels of adverse climate change impacts on agricultural productivity.", worksheet.detailed_lever_guides_m41); end
  def test_detailed_lever_guides_n41; assert_equal("High crop yield growth (100% increase from 2011 by 2050).", worksheet.detailed_lever_guides_n41); end
  def test_detailed_lever_guides_o41; assert_equal("Extreme yield growth of 100% by 2050. This ambitious level of effort assumes a substantial increase globally in the use of mechanisation, irrigation, fertilisers, biotechnology, a high increase in photosynthetic efficiencies, technology transfer, and potentially positive climate change impacts on crop productivity.", worksheet.detailed_lever_guides_o41); end
  def test_detailed_lever_guides_b42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_b42); end
  def test_detailed_lever_guides_d42; assert_equal("Can we use smarter land-use techniques to increase productivity? The efficiency of land use can be increased by using land for multiple purposes (e.g., multi-cropping, co-cropping, and integrated agro-livestock-forestry schemes). These techniques can decrease the land area needed per unit of output.  Conversely, an overexploitation of land resources due to inappropriate integrations and mismanagement, can lead to land degradation. Generally, land use integration is associated with benefits to the farmers and the environment.", worksheet.detailed_lever_guides_d42); end
  def test_detailed_lever_guides_h42; assert_equal("Mismanaged land use. It assumes that 10% more agricultural land would be necessary to achieve the selected food/livestock/bioenergy production.", worksheet.detailed_lever_guides_h42); end
  def test_detailed_lever_guides_i42; assert_equal("This level assumes that 10% more agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It reflects mismanaged land use, which can cause soil degradation, soil loss or desertification, e.g. through erosion, water scarcity or salinisation.", worksheet.detailed_lever_guides_i42); end
  def test_detailed_lever_guides_j42; assert_equal("Current world pattern of agricultural system stabilised until 2050 (no change from 2011).", worksheet.detailed_lever_guides_j42); end
  def test_detailed_lever_guides_k42; assert_equal("No land use efficiency improvements. This level assumes that the current global pattern of agricultural systems and practices remains stable until 2050. No further improvements or damages from land multi-use would be expected by 2050.", worksheet.detailed_lever_guides_k42); end
  def test_detailed_lever_guides_l42; assert_equal("10% less agricultural land is necessary to achieve the selected food/livestock/bioenergy production by 2050.", worksheet.detailed_lever_guides_l42); end
  def test_detailed_lever_guides_m42; assert_equal("10% improvement in efficiency, i.e., 10% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails an increase in agro-forestry-pasture synergies and best farming practices, e.g., crop rotations, dual cropping, co-cropping and no tillage technologies. ", worksheet.detailed_lever_guides_m42); end
  def test_detailed_lever_guides_n42; assert_equal("30% less agricultural land would be necessary to achieve the selected food/livestock/bioenergy productions by 2050.", worksheet.detailed_lever_guides_n42); end
  def test_detailed_lever_guides_o42; assert_equal("30% improvement in efficiency, i.e., 30% less agricultural land would be necessary to meet the selected food/livestock/bioenergy production levels by 2050. It entails a substantial increase in agro-forestry-pasture synergies and best farming practices and high uptake of climate-smart agriculture and integrated agricultural land use management (e.g., dual/triple cropping).", worksheet.detailed_lever_guides_o42); end
  def test_detailed_lever_guides_b43; assert_equal("Livestock intensification", worksheet.detailed_lever_guides_b43); end
  def test_detailed_lever_guides_d43; assert_equal("The production of meat to meet future demands poses a major challenge. The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the intensification of animals traditionally raised on pasture land in confined systems, i.e., cattle, sheep and goats and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems already and therefore these are not considered in this lever.  Currently, globally, only 2% cattle and 4% of sheep and goats are raised in confined systems, although the percentage is much higher in some regions, for example, North America and EU. On average, modern feedlots are generally associated with higher meat yields, appropriate no pasture land and have fewer emissions per kg of meat produced than free range animals (although significant amounts of crop land are required to produce the necessary animal feed).", worksheet.detailed_lever_guides_d43); end
  def test_detailed_lever_guides_h43; assert_equal("No increase in feedlot systems by 2050 and a 5% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_h43); end
  def test_detailed_lever_guides_i43; assert_equal("No increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems remains at current levels (2% of cattle and 4% of sheep and goats, respectively). The feed conversion ratio (kg of meat produced per kg of animal feed) increases slightly by 5%.", worksheet.detailed_lever_guides_i43); end
  def test_detailed_lever_guides_j43; assert_equal("Low increase in feedlot systems in 2050 and a 10% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_j43); end
  def test_detailed_lever_guides_k43; assert_equal("Low increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems increases from 2% (2011) to 5% for cattle and from 4% to 6% for sheep and goats, respectively, by 2050. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 10%.", worksheet.detailed_lever_guides_k43); end
  def test_detailed_lever_guides_l43; assert_equal("Moderate increase in feedlot systems and a 15% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_l43); end
  def test_detailed_lever_guides_m43; assert_equal("Moderate increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems increases from 2% (2011) to 15% for cattle and from 4% to 8% for sheep and goats, respectively, by 2050. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 15%. This entails a higher use of conventional animal genetic improvements and technology transfer and capacity development programmes.", worksheet.detailed_lever_guides_m43); end
  def test_detailed_lever_guides_n43; assert_equal("High increase in feedlot systems and a 20% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_n43); end
  def test_detailed_lever_guides_o43; assert_equal("High increase in feedlot systems by 2050, i.e., the percentage of cattle, sheep and goats raised in confined systems increases from 2% (2011) to 30% for cattle and from 4% to 15% for sheep and goats, respectively, by 2050. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 20%.This entails a high use of conventional animal genetic improvements and improved pasture rotation management and capacity development programmes. Furthermore, it involves the extensive use of biotechnology, and strong technology transfer from developed to developing countries to leap-frog the learning curves to achieve higher levels of productivity.", worksheet.detailed_lever_guides_o43); end
  def test_detailed_lever_guides_b44; assert_equal("Extensive livestock yields", worksheet.detailed_lever_guides_b44); end
  def test_detailed_lever_guides_d44; assert_equal("The production of meat to meet future demands poses a major challenge. Meat production appropriates large areas of land globally for animal feed production and pastures. Globally, there has been a gradual annual increase in livestock yields, but significant yield gaps remain in developing countries and extensive production systems prevail. In general, red meat (e.g., beef) has a larger environmental footprint (including GHG emissions, water and land requirements) than white meat (e.g., poultry). Livestock yields are affected by (a) the animal density in grass-fed systems (i.e., number of animals/ha of pasture), (b) the percentage of animals reared in high efficiency feedlots (confined systems), and (c) feed conversion ratios (kg of meat produced per kg of animal feed). Improvements in one or more of these parameters have the potential to significantly reduce the environmental impacts associated with meat production. This lever considers the increase of pasture intensity, i.e. the number of animals / ha of pasture (through improved animal husbandry schemes) and feed conversion ratios (kg of edible meat per kg of feed input). It is assumed that poultry and pigs are generally raised in confined systems and therefore these are not considered in this lever. Increasing the number of animals per ha of land results in a higher production of meat per unit of pasture land and reduced emissions per kg of meat produced.", worksheet.detailed_lever_guides_d44); end
  def test_detailed_lever_guides_h44; assert_equal("Low increase in pasture animal density (10% by 2050) and a 5% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_h44); end
  def test_detailed_lever_guides_i44; assert_equal("Low increase in pasture animal density (10% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases slightly by 5%.", worksheet.detailed_lever_guides_i44); end
  def test_detailed_lever_guides_j44; assert_equal("Moderate in pasture animal density (30% by 2050) and a 10% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_j44); end
  def test_detailed_lever_guides_k44; assert_equal("Moderate increase in pasture animal density (30% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 10%.", worksheet.detailed_lever_guides_k44); end
  def test_detailed_lever_guides_l44; assert_equal("High increase in pasture animal density (50% by 2050) and a 15% increase in feed conversion ratio. ", worksheet.detailed_lever_guides_l44); end
  def test_detailed_lever_guides_m44; assert_equal("High increase in pasture animal density (50% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 15%. This entails a higher use of conventional animal genetic improvements and technology transfer and capacity development programmes.", worksheet.detailed_lever_guides_m44); end
  def test_detailed_lever_guides_n44; assert_equal("Extreme increase in pasture animal density (80% by 2050) and a 20% increase in feed conversion ratio.", worksheet.detailed_lever_guides_n44); end
  def test_detailed_lever_guides_o44; assert_equal("Extreme increase in pasture animal density (80% by 2050), i.e., the number of cows, sheep and goats per unit of pasture land through improved animal husbandry. The feed conversion ratio (kg of meat produced per kg of animal feed) increases by 20%. This entails a high use of conventional animal genetic improvements and improved pasture rotation management and capacity development programmes. Furthermore, it involves the extensive use of biotechnology, and strong technology transfer from developed to developing countries to leap-frog the learning curves to achieve higher levels of productivity.", worksheet.detailed_lever_guides_o44); end
  def test_detailed_lever_guides_b45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_b45); end
  def test_detailed_lever_guides_d45; assert_equal("Could we get more usable energy out of each hectare of biocrops, for example by using more efficient crop types and introducing better conversion technology? Bioenergy (solid, gaseous and liquid) represents approximately 60 EJ of the world energy mix (IPCC, 2011). Bioenergy yields are affected by (a) yields of bioenergy feedstocks (b) energy content of these crops, and (c) advances in conversion technologies. Currently, liquid bioenergy, i.e., biofuels, are primarily produced from crop-based feedstocks (e.g., wheat, maize, sugarcane, oilseed rape, etc.), but increasingly advanced biofuel technologies (based on lignocellulosic feedstocks, such as high-yielding energy crops and agricultural and forestry residues) and biorefineries (co-production of energy (fuel, heat, electricity), feed and chemicals) are deployed at commercial scales. Main producers of biofuels include the USA, Brazil, EU and China. Solid biomass is used mainly for cooking and heating, but could play a larger role in the future by displacing coal in thermal power plants and industrial uses. Biogas, produced by anaerobic decomposition of agricultural residues, manure and the organic fraction of municipal solid waste is used for cooking, heating,  transportation and industrial application (e.g., drying).", worksheet.detailed_lever_guides_d45); end
  def test_detailed_lever_guides_h45; assert_equal("Low yield increase of energy production per unit of land area, without significant changes in the energy crop mix and/or conversion technologies. Total increase: 20% by 2050.", worksheet.detailed_lever_guides_h45); end
  def test_detailed_lever_guides_i45; assert_equal("Low yield increase of energy production per unit of area of 20% by 2050 (approximately 0.5% CAGR). This is below the current crop yield growth trend, and relies primarily on the use of crops with low energy balance (e.g., corn-based ethanol, oilseed rape-based biodiesel) for biofuels and on low efficiency solid biomass for power, heating and cooking.", worksheet.detailed_lever_guides_i45); end
  def test_detailed_lever_guides_j45; assert_equal("Moderate increase in energy production per unit of land area, and changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient conversion technologies. Total increase: 50% by 2050.", worksheet.detailed_lever_guides_j45); end
  def test_detailed_lever_guides_k45; assert_equal("Moderate increase in energy production per unit of land area of 50% by 2050 (approximately 1.0% CAGR) with associated changes in the mix of energy crops towards a higher share of energy-efficient feedstocks and more efficient technologies, such as lignocellulosic fuels, anaerobic digestion and high-efficiency biomass boilers. ", worksheet.detailed_lever_guides_k45); end
  def test_detailed_lever_guides_l45; assert_equal("High increase in energy production per unit of land area, with substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies. Total increase: 120% by 2050.", worksheet.detailed_lever_guides_l45); end
  def test_detailed_lever_guides_m45; assert_equal("High increase in energy production per unit of land area of 120% by 2050 (approximately 2.0% CAGR) with associated substantial changes in the mix of energy crops towards a high share of energy-efficient feedstocks and highly efficient conversion technologies (including lignocellulosic bioethanol and Fischer-Tropsch biodiesel).", worksheet.detailed_lever_guides_m45); end
  def test_detailed_lever_guides_n45; assert_equal("Extreme increase in energy production per unit of land area relying on highly energy-efficient feedstocks and very efficient conversion technologies. Total increase: 200% by 2050.", worksheet.detailed_lever_guides_n45); end
  def test_detailed_lever_guides_o45; assert_equal("Extreme increase in energy production per unit of land area of 200% by 2050 (approximately 3.0% CAGR) with a reliance on  highly energy-efficient feedstocks and very efficient conversion technologies , including advanced fuel technologies and boilers, biorefineries and biotechnology and state-of-the-art farm management. This level assumes that highly energy-efficient dedicated energy crops (e.g., sugarcane, oil palm, switchgrass, napier grass and miscanthus) would dominate the market.", worksheet.detailed_lever_guides_o45); end
  def test_detailed_lever_guides_b46; assert_equal("Bioenergy type (biomass and biofuels)", worksheet.detailed_lever_guides_b46); end
  def test_detailed_lever_guides_d46; assert_equal("Should we use solid or liquid biofuels? The global production of bioenergy is consumed in two main types: 60% is solid biomass (e.g., wood logs, pellets and chips; excluding traditional biomass) and 40% is liquid fuels (e.g., bioethanol and biodiesel). Traditional biomass (e.g., woody biomass from forests for cooking and heating, mainly in rural areas) represents approximately 79% out of the total bioenergy consumption (IPCC, 2011). This lever's scenarios illustrate an incremental shift away from traditional biomass towards modern, more efficient and cleaner bioenergy applications by 2050 (including in rural areas), due to environmental concerns, rural development and technology transfer. This lever considers bioenergy from the perspective of the end user (demand side), therefore solid biomass feedstocks (e.g., miscanthus, switchgrass) converted to biofuels (lingo-cellulosic conversion and biomass-to-liquids technologies) are accounted for as a liquids. It includes both traditional and modern bioenergy, but excludes farm residues and food wastes, which are modelled separately in the ‘wastes and residues’ lever. Similarly, biogas is also represented in 'wastes and residues’ (e.g., slurry gas an anaerobic digestion), although it can be also produced from the conversion of solid biomass (gasification).", worksheet.detailed_lever_guides_d46); end
  def test_detailed_lever_guides_h46; assert_equal("Reduced use of liquid biofuels. Modern solid biomass will represent 60% of the total bioenergy consumed in 2050.", worksheet.detailed_lever_guides_h46); end
  def test_detailed_lever_guides_i46; assert_equal("Liquid biofuels are reduced from 40% in 2011 to 20% by 2050, and therefore 80% of the bioenergy produced would be consumed in solid form, such as wood pellets and chips. This level assumes that technology changes, particularly in transport (i.e., electrification), would result a reduction of liquid biofuels.", worksheet.detailed_lever_guides_i46); end
  def test_detailed_lever_guides_j46; assert_equal("The current share of bioenergy forms remains unchanged (60% modern solid biomass and 40% liquid biofuels in 2050).", worksheet.detailed_lever_guides_j46); end
  def test_detailed_lever_guides_k46; assert_equal("The current share of solid and liquid bioenergy (60% solid biomass and 40% liquid biofuels in 2011) remains the constant until 2050. This level assumes no substantial changes in the current pattern of bioenergy production and consumption.", worksheet.detailed_lever_guides_k46); end
  def test_detailed_lever_guides_l46; assert_equal("Increase in liquid biofuels from 40% to 60% by 2050, while solid biomass would decrease from 60% in 2011 to 40% in 2050. ", worksheet.detailed_lever_guides_l46); end
  def test_detailed_lever_guides_m46; assert_equal("Increase in liquid biofuels from 40% to 60% by 2050, while solid biomass would decrease from 60% in 2011 to 40% in 2050. Biofuels would increase their relevance as a renewable energy source, mainly for the transport sector as new technologies enhance the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquids (Fischer-Tropschs).  ", worksheet.detailed_lever_guides_m46); end
  def test_detailed_lever_guides_n46; assert_equal("Extreme shift towards liquid biofuels from currently 40% to 80% of total bioenergy consumption in 2050, while solid biomass decreases its share from 60% to 20%, respectively.", worksheet.detailed_lever_guides_n46); end
  def test_detailed_lever_guides_o46; assert_equal("Extreme shift towards liquid biofuels from currently 40% to 80% in 2050, while solid biomass decreases its share from 60% to 20%, respectively. Liquid biofuel would be mainly used in the transport sector, including shipping and aviation. To achieve this level of liquid biofuel penetration, it is expected that new technologies would substantially increase the competitiveness of advanced biofuels, e.g., lignocellulosic ethanol and biomass-to-liquid (Fischer-Tropsch). In contrast, the use of traditional biomass would substantially decrease worldwide.", worksheet.detailed_lever_guides_o46); end
  def test_detailed_lever_guides_b47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_b47); end
  def test_detailed_lever_guides_d47; assert_equal("After accounting for food production, do we use surplus land for growing biocrops, or for the regeneration of forests and grassland? In 2011, around 6 million ha of land were deforested, not only due to livestock and agricultural expansions, but also because of timber operations and land speculations. This lever allows you to decide how any land you have freed up in your pathway is used. The size of the potential surplus land can be increased through climate-smart dietary choices (calories and meat consumed), increased yields (crops, livestock and bioenergy), and enhanced land-use efficiencies. Depending on the levels selected, more or less land will be allocated to forests and natural regeneration and/or the production of dedicated energy crops. Land occupied by settlements (which can increase according to population growth) or unsuitable for production (e.g., deserts, ice sheets, degraded lands) is pre-allocated and does not factor in the allocation of surplus land.", worksheet.detailed_lever_guides_d47); end
  def test_detailed_lever_guides_h47; assert_equal("20% of surplus land is used for biocrops, with 80% for forests (including natural regeneration and planted forests)", worksheet.detailed_lever_guides_h47); end
  def test_detailed_lever_guides_i47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 80% forests (including natural regeneration and planted forests), and 20% restoration of natural grasslands. 0% of the surplus land will be used for the production of dedicated bioenergy crops. ", worksheet.detailed_lever_guides_i47); end
  def test_detailed_lever_guides_j47; assert_equal("40% of surplus land is used for biocrops, with 60% for forests", worksheet.detailed_lever_guides_j47); end
  def test_detailed_lever_guides_k47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 60% forest and restoration of natural grasslands.  40% of the surplus land will be used for the limited expansion of dedicated bioenergy crops. ", worksheet.detailed_lever_guides_k47); end
  def test_detailed_lever_guides_l47; assert_equal("60% of surplus land is used for biocrops.", worksheet.detailed_lever_guides_l47); end
  def test_detailed_lever_guides_m47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated to 40% forest and restoration of natural grasslands and 60% to a limited expansion of energy crops. ", worksheet.detailed_lever_guides_m47); end
  def test_detailed_lever_guides_n47; assert_equal("80% of surplus land is used for biocrops.", worksheet.detailed_lever_guides_n47); end
  def test_detailed_lever_guides_o47; assert_equal("Surplus land (achieved through climate-smart dietary, yield improvement and positive land-use efficiency choices) is allocated 80% to a substantial expansion of dedicated energy crops and the remaining 20% to forest and restoration of natural grasslands. This choice results in a maximum expansion of bioenergy in the Global Calculator based on a growth rate for meeting approximately 350 EJ of bioenergy production by 2050 (when all levers are set in level 4), based on the technical capacity of the market to cope with such an extreme level of investments in the timeframe. This level of bioenergy production is considered to be an extreme global bioenergy potential by IPCC as well.", worksheet.detailed_lever_guides_o47); end
  def test_detailed_lever_guides_b48; assert_equal("Biochar", worksheet.detailed_lever_guides_b48); end
  def test_detailed_lever_guides_d48; assert_equal("Do we use biochar technology to remove CO<sub>2</sub> from the atmosphere? Biochar is produced from the pyrolysis of biomass, similar to the production of charcoal. Research is underway to enhance the understanding of the long-term behaviour of biochar as a means of storing carbon away from the atmosphere (sequestration potential). Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_d48); end
  def test_detailed_lever_guides_h48; assert_equal("No biochar technologies, i.e., biochar will not be implemented by 2050 at any scale.", worksheet.detailed_lever_guides_h48); end
  def test_detailed_lever_guides_j48; assert_equal("Low effort in the dissemination of biochar with an abatement potential of 0.3 Gt CO2/year by 2050 (10% of level 4).", worksheet.detailed_lever_guides_j48); end
  def test_detailed_lever_guides_l48; assert_equal("High effort in the dissemination of biochar with a substantial abatement potential of 0.8 Gt CO2/year by 2050 (25% of level 4).", worksheet.detailed_lever_guides_l48); end
  def test_detailed_lever_guides_n48; assert_equal("Top-level effort in the dissemination of biochar with an extreme abatement potential of 3.3 Gt CO2/year by 2050.", worksheet.detailed_lever_guides_n48); end
  def test_detailed_lever_guides_b49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_b49); end
  def test_detailed_lever_guides_d49; assert_equal("Do we use direct air capture  technology to remove CO<sub>2</sub> from the atmosphere? There are about a dozen proposed Direct Air Capture (DAC) technologies that have been demonstrated at small scales. Technically the process works – in fact, the removal of carbon dioxide from ambient air in submarines and spacecraft has been practised for decades. The real questions are around the carbon balance of the systems and the economics. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_d49); end
  def test_detailed_lever_guides_h49; assert_equal("No Direct Air Capture technologies (DAC), i.e., DAC will not be implemented by 2050 at any scale.", worksheet.detailed_lever_guides_h49); end
  def test_detailed_lever_guides_j49; assert_equal("Low effort in the dissemination of Direct Air Capture (DAC) technologies with an abatement potential of 1 Gt CO2/year by 2050 (10% of level 4).", worksheet.detailed_lever_guides_j49); end
  def test_detailed_lever_guides_l49; assert_equal("High effort in the dissemination of Direct Air Capture (DAC) technologies with a substantial abatement potential of 2.5 Gt CO2/year by 2050 (25% of level 4).", worksheet.detailed_lever_guides_l49); end
  def test_detailed_lever_guides_n49; assert_equal("Top-level effort in the dissemination of Direct Air Capture (DAC) technologies with an extreme abatement potential of 10 Gt CO2/year by 2050.", worksheet.detailed_lever_guides_n49); end
  def test_detailed_lever_guides_b50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_b50); end
  def test_detailed_lever_guides_d50; assert_equal("Do we use ocean fertilisation  technology to remove CO<sub>2</sub> from the atmosphere? A small number of Ocean fertilisation (OF) experiments have been undertaken, most with the approval of national research establishments, but some without such approval. Those experiments conducted without approval have been highly controversial. The results of the officially approved experiments have indicated, at least in some instances, that there has been a net carbon drawdown, but there are still many unanswered questions as to the long-term effects of this technique. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_d50); end
  def test_detailed_lever_guides_h50; assert_equal("No ocean fertilisation (OF) technologies, i.e., OF will not be implemented by 2050 at any scale.", worksheet.detailed_lever_guides_h50); end
  def test_detailed_lever_guides_j50; assert_equal("Low effort in the dissemination of ocean fertilisation (OF) technologies with an abatement potential of 0.1 Gt CO2/year by 2050 (10% of level 4).", worksheet.detailed_lever_guides_j50); end
  def test_detailed_lever_guides_l50; assert_equal("High effort in the dissemination of ocean fertilisation (OF) technologies with a substantial abatement potential of 0.25 Gt CO2/year by 2050 (25% of level 4).", worksheet.detailed_lever_guides_l50); end
  def test_detailed_lever_guides_n50; assert_equal("Top-level effort in the dissemination of ocean fertilisation (OF) technologies with an extreme abatement potential of 1 Gt CO2/year by 2050.\r\r", worksheet.detailed_lever_guides_n50); end
  def test_detailed_lever_guides_b51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_b51); end
  def test_detailed_lever_guides_d51; assert_equal("Do we use enhanced weathering (oceanic) technology to remove CO<sub>2</sub> from the atmosphere? Enhanced weathering (oceanic) (EW-O) has been studied in the laboratory and has been modelled, but it has not been researched in the open environment. The processes required to generate alkaline materials are well established at an industrial scale. However, the environmental impacts of adding them into the oceans are not known. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_d51); end
  def test_detailed_lever_guides_h51; assert_equal("No enhanced weathering (oceanic) (EW-O) technologies, i.e., EW-O will not be implemented by 2050 at any scale. ", worksheet.detailed_lever_guides_h51); end
  def test_detailed_lever_guides_j51; assert_equal("Low effort in the dissemination of enhanced weathering (oceanic) (EW-O) technologies with an abatement potential of 1Gt CO2/year by 2050 (10% of level 4).", worksheet.detailed_lever_guides_j51); end
  def test_detailed_lever_guides_l51; assert_equal("High effort in the dissemination of enhanced weathering (oceanic) (EW-O) technologies with a substantial abatement potential of 2.5 Gt CO2/year by 2050 (25% of level 4).\r\r", worksheet.detailed_lever_guides_l51); end
  def test_detailed_lever_guides_n51; assert_equal("Top-level effort in the dissemination of enhanced weathering (oceanic) (EW-O) technologies with an extreme abatement potential of 10 Gt CO2/year by 2050.", worksheet.detailed_lever_guides_n51); end
  def test_detailed_lever_guides_b52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_b52); end
  def test_detailed_lever_guides_d52; assert_equal("Do we use enhanced weathering (terrestrial)  technology to remove CO<sub>2</sub> from the atmosphere? Enhanced weathering (terrestrial) (EW-T) has been studied in the laboratory and has been modelled, but it has had little research in the open environment (although proponents of EW-T have marketed ground olivine as a soil additive already). Technical and theoretical modelling of the particle sizes indicate that while there would be some carbon dioxide drawdown, it is far less than has been claimed. Due to these uncertainties, this mitigation measure is considered to be speculative in the Global Calculator.", worksheet.detailed_lever_guides_d52); end
  def test_detailed_lever_guides_h52; assert_equal("No enhanced weathering (terrestrial) (EW-T) technologies, i.e., EW-T will not be implemented by 2050 at any scale. ", worksheet.detailed_lever_guides_h52); end
  def test_detailed_lever_guides_j52; assert_equal("Low effort in the dissemination of enhanced weathering (terrestrial) (EW-T) technologies with an abatement potential of approximately 0.4 Gt CO2/year by 2050 (10% of level 4).", worksheet.detailed_lever_guides_j52); end
  def test_detailed_lever_guides_l52; assert_equal("High effort in the dissemination of enhanced weathering (terrestrial) (EW-T) technologies with a substantial abatement potential of approximately 1 Gt CO2/year by 2050 (25% of level 4).", worksheet.detailed_lever_guides_l52); end
  def test_detailed_lever_guides_n52; assert_equal("Top-level effort in the dissemination of enhanced weathering (terrestrial) (EW-T) technologies with an extreme abatement potential of approximately 4 Gt CO2/year by 2050.", worksheet.detailed_lever_guides_n52); end
  def test_detailed_lever_guides_b53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_b53); end
  def test_detailed_lever_guides_d53; assert_equal("How much is wasted on farms, and how much food is wasted? The production of wastes and residues (across the supply chain, i.e., both on- and post-farm) globally is substantial and only small fractions are currently collected for energy production, animal feed and other uses. For example, the production of total on-farm wastes and residues is approximately equivalent to 100% of the total food production by mass, (i.e., globally, on average, for each tonne of food produced, one tonne of wastes and residues is generated). This includes straws, stoves and husks, of which only approximately 10% are currently collected for energy or feed use. As for the post-farm wastes and residues, it is estimated that 24% of the total food production, 19% of meat products, 18% of milk products and 10% of egg products are lost or wasted, with the collection rates of only 1% for food and meat, 0.1% of milk (including dairy products) and 0.2% eggs (including egg products) by energy (not mass).  By reducing post-farm waste generation and reducing waste and residue collection efficiencies across the food supply chain (and utilisation), the environmental impact of food production, including greenhouse gas emissions) can be reduced significantly.", worksheet.detailed_lever_guides_d53); end
  def test_detailed_lever_guides_h53; assert_equal("No increase in the collection of on-farm residues and no increase in the production of post-farm wastes and residues, but with a low increase in post-farm wastes and residues collection for energy and feed, i.e.,  plant-based food and meat from 1% to 5%; eggs from 0.2% to 0.5%; and milk from 0.1% to 0.5%, respectively, from 2011 to 2050.", worksheet.detailed_lever_guides_h53); end
  def test_detailed_lever_guides_i53; assert_equal("No increase in the collection of on-farm residues and no increase in the production of post-farm wastes and residues, but with a low increase in post-farm wastes and residues collection for energy and feed, i.e.,  plant-based food and meat from 1% to 5%; eggs from 0.2% to 0.5%; and milk from 0.1% to 0.5%, respectively, from 2011 to 2050.", worksheet.detailed_lever_guides_i53); end
  def test_detailed_lever_guides_j53; assert_equal("Moderate increase in the collection of on-farm residues (from 10% in 2011 to 20% in 2050), accompanied by a moderate reduction in the production of post-farm residues and wastes (plant-based food 24% to 20%; meat 19% to 15%; eggs 10% to 8%; milk 18% to 15%, respectively, from 2011 to 2050) and a moderate increase in their collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% to 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_j53); end
  def test_detailed_lever_guides_k53; assert_equal("Moderate increase in the collection of on-farm residues (from 10% in 2011 to 20% in 2050), accompanied by a moderate reduction in the production of post-farm residues and wastes (plant-based food 24% to 20%; meat 19% to 15%; eggs 10% to 8%; milk 18% to 15%, respectively, from 2011 to 2050) and a moderate increase in their collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% to 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_k53); end
  def test_detailed_lever_guides_l53; assert_equal("High increase in the collection of on-farm residues (from 10% in 2011 to 30% in 2050), accompanied by a significant reduction in the production of post-farm residues and wastes (plant-based food 24% to 16%; meat 19% to 10%; eggs 10% to 6%; milk 18% to 10%, respectively, from 2011 to 2050), as well as a significant increase in collection for energy and feed (plant-based food and meat from 1% to 20%; eggs from 0.2% to 5%; and milk from 0.1% to 5%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_l53); end
  def test_detailed_lever_guides_m53; assert_equal("High increase in the collection of on-farm residues (from 10% in 2011 to 30% in 2050), accompanied by a significant reduction in the production of post-farm residues and wastes (plant-based food 24% to 16%; meat 19% to 10%; eggs 10% to 6%; milk 18% to 10%, respectively, from 2011 to 2050), as well as a significant increase in collection for energy and feed (plant-based food and meat from 1% to 20%; eggs from 0.2% to 5%; and milk from 0.1% to 5%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_m53); end
  def test_detailed_lever_guides_n53; assert_equal("Extreme increase in the collection of on-farm residues (from 10% in 2011 to 50% in 2050) , accompanied by a reduction in the production of post-farm residues and wastes (plant-based food 24% to 10%; meat 19% to 5%; eggs 10% to 5%; milk 18% to 5%, respectively, from 2011 to 2050), as well as a moderate increase in collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_n53); end
  def test_detailed_lever_guides_o53; assert_equal("Extreme increase in the collection of on-farm residues (from 10% in 2011 to 50% in 2050) , accompanied by a reduction in the production of post-farm residues and wastes (plant-based food 24% to 10%; meat 19% to 5%; eggs 10% to 5%; milk 18% to 5%, respectively, from 2011 to 2050), as well as a moderate increase in collection for energy and feed (plant-based food and meat from 1% to 30%; eggs from 0.2% to 10%; and milk from 0.1% 10%, respectively, from 2011 to 2050).", worksheet.detailed_lever_guides_o53); end
  def test_detailed_lever_guides_b54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_b54); end
  def test_detailed_lever_guides_h54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_h54); end
  def test_detailed_lever_guides_i54; assert_equal("After 2050, emissions are flat.", worksheet.detailed_lever_guides_i54); end
  def test_detailed_lever_guides_j54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_j54); end
  def test_detailed_lever_guides_k54; assert_equal("After 2050, emissions change every year by one third of the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_k54); end
  def test_detailed_lever_guides_l54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_l54); end
  def test_detailed_lever_guides_m54; assert_equal("After 2050, emissions change every year by two thirds the average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_m54); end
  def test_detailed_lever_guides_n54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_n54); end
  def test_detailed_lever_guides_o54; assert_equal("After 2050, emissions change every year by 1.16 x average yearly change for the previous 15 year period (unless an absolute lower limit is hit).", worksheet.detailed_lever_guides_o54); end
  def test_detailed_lever_guides_b55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_b55); end
  def test_detailed_lever_guides_c55; assert_equal("atm.fraction", worksheet.detailed_lever_guides_c55); end
  def test_detailed_lever_guides_d55; assert_equal("What proportion of emitted CO<sub>2</sub> remains in the atmosphere? In 2011, this was assumed to be 44% (plus or minus 6%) , and it is expected to rise if emissions continue to increase.", worksheet.detailed_lever_guides_d55); end
  def test_detailed_lever_guides_h55; assert_equal("Decreases to 30% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_h55); end
  def test_detailed_lever_guides_i55; assert_equal("Land and ocean sinks increase relative to the present day; by 2100, only 30% of emitted CO2 remains in atmosphere. Such a low atmospheric fraction is only expected for trajectories with very low rates of CO2 emissions.", worksheet.detailed_lever_guides_i55); end
  def test_detailed_lever_guides_j55; assert_equal("Remains at 44% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_j55); end
  def test_detailed_lever_guides_k55; assert_equal(" Land and ocean sinks remain similar to today; 44% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_k55); end
  def test_detailed_lever_guides_l55; assert_equal("Increases over time to 60% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_l55); end
  def test_detailed_lever_guides_m55; assert_equal("Land and ocean sinks decrease slightly; by 2100, 60% of emitted CO2 remains in atmosphere.", worksheet.detailed_lever_guides_m55); end
  def test_detailed_lever_guides_n55; assert_equal("Increases over time to 74% of emitted CO<sub>2</sub> remaining in the atmosphere.", worksheet.detailed_lever_guides_n55); end
  def test_detailed_lever_guides_o55; assert_equal("Land and ocean sinks decrease significantly: by 2100, 74% of emitted CO2 remains in atmosphere. Such a high atmospheric fraction is only expected for trajectories with very high rates of CO2 emissions.", worksheet.detailed_lever_guides_o55); end
  def test_detailed_lever_guides_b56; assert_equal("Confidence in climate models", worksheet.detailed_lever_guides_b56); end
  def test_detailed_lever_guides_c56; assert_equal("model.unc", worksheet.detailed_lever_guides_c56); end
  def test_detailed_lever_guides_d56; assert_equal("How confident are you about the ability of computer models to simulate the climate?  Do you want to use the raw data from climate models, or do you want to show an uncertainty range to reflect phenomena that are not included in the model? If you do not have confidence in climate models, please visit the basic physics page below to see some simple calculations based on your pathway.", worksheet.detailed_lever_guides_d56); end
  def test_detailed_lever_guides_h56; assert_equal("Over-confident in model ability: show only the raw output from climate models.", worksheet.detailed_lever_guides_h56); end
  def test_detailed_lever_guides_i56; assert_equal("Display only the range of model-generated outputs with no additional range to account for unmodelled phenomena. This level is provided for comparison purposes only.", worksheet.detailed_lever_guides_i56); end
  def test_detailed_lever_guides_j56; assert_equal("IPCC approach: generate an uncertainty range to take into account phenomena that were not included in the model. ", worksheet.detailed_lever_guides_j56); end
  def test_detailed_lever_guides_k56; assert_equal("Generate an uncertainty range based on model output, using a method similar to the most recent IPCC report, to account for unmodelled phenomena. This method takes the \"very likely\" range generated by computer models and downgrades that to a \"likely\" range, so that the effect in the Calculator is to widen the range of projected temperatures. See documentation for further details.", worksheet.detailed_lever_guides_k56); end
  def test_detailed_lever_guides_l56; assert_equal("n/a", worksheet.detailed_lever_guides_l56); end
  def test_detailed_lever_guides_m56; assert_equal("n/a", worksheet.detailed_lever_guides_m56); end
  def test_detailed_lever_guides_n56; assert_equal("n/a", worksheet.detailed_lever_guides_n56); end
  def test_detailed_lever_guides_o56; assert_equal("n/a", worksheet.detailed_lever_guides_o56); end
  def test_detailed_lever_guides_b57; assert_equal("Region factor", worksheet.detailed_lever_guides_b57); end
  def test_detailed_lever_guides_h57; assert_equal("US costs", worksheet.detailed_lever_guides_h57); end
  def test_detailed_lever_guides_b58; assert_equal(:ref, worksheet.detailed_lever_guides_b58); end
  def test_detailed_lever_guides_h58; assert_equal("US costs", worksheet.detailed_lever_guides_h58); end
  def test_detailed_lever_guides_b59; assert_equal(:ref, worksheet.detailed_lever_guides_b59); end
  def test_detailed_lever_guides_h59; assert_equal("US costs", worksheet.detailed_lever_guides_h59); end
  def test_detailed_lever_guides_b60; assert_equal("Coal", worksheet.detailed_lever_guides_b60); end
  def test_detailed_lever_guides_b61; assert_equal("Oil", worksheet.detailed_lever_guides_b61); end
  def test_detailed_lever_guides_b62; assert_equal("Gas", worksheet.detailed_lever_guides_b62); end
  def test_detailed_lever_guides_b63; assert_equal("Solid bioenergy", worksheet.detailed_lever_guides_b63); end
  def test_detailed_lever_guides_b64; assert_equal("Liquid bioenergy", worksheet.detailed_lever_guides_b64); end
  def test_detailed_lever_guides_b65; assert_equal("Gaseous bioenergy", worksheet.detailed_lever_guides_b65); end
  def test_detailed_lever_guides_b66; assert_equal("Hydrogen", worksheet.detailed_lever_guides_b66); end
  def test_detailed_lever_guides_b67; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_b67); end
  def test_detailed_lever_guides_d67; assert_equal("Can each vehicle carry more people or heavier loads? In 2011, the average car carried 2 people, the average train carried 384 people, and the average international ship carried around 20 000 tonnes of cargo (the dominant mode for freight).", worksheet.detailed_lever_guides_d67); end
  def test_detailed_lever_guides_g67; assert_equal("The impact of changes to occupancy will depend on the other transport levers.", worksheet.detailed_lever_guides_g67); end
  def test_detailed_lever_guides_h67; assert_equal("By 2050, passenger car and train occupancies remain unchanged, and the average freight vehicle carries the same amount of cargo.", worksheet.detailed_lever_guides_h67); end
  def test_detailed_lever_guides_i67; assert_equal("By 2050, passenger car and train occupancies remain unchanged, and the average freight vehicle carries the same amount of cargo.", worksheet.detailed_lever_guides_i67); end
  def test_detailed_lever_guides_j67; assert_equal("By 2050, car and train occupancies increase by 10%, and domestic freight vehicles and international freight ships carry 10% and 5% more cargo respectively.", worksheet.detailed_lever_guides_j67); end
  def test_detailed_lever_guides_k67; assert_equal("By 2050, car and train occupancies increase by 10%, and domestic freight vehicles and international freight ships carry 10% and 5% more cargo respectively.", worksheet.detailed_lever_guides_k67); end
  def test_detailed_lever_guides_l67; assert_equal("By 2050, car and train occupancies increase by 20%, and domestic freight vehicles and international freight ships carry 20% and 10% more cargo respectively.", worksheet.detailed_lever_guides_l67); end
  def test_detailed_lever_guides_m67; assert_equal("By 2050, car and train occupancies increase by 20%, and domestic freight vehicles and international freight ships carry 20% and 10% more cargo respectively.", worksheet.detailed_lever_guides_m67); end
  def test_detailed_lever_guides_n67; assert_equal("By 2050, car and train occupancies increase by 30%, and domestic freight vehicles and international freight ships carry 30% and 15% more cargo respectively.", worksheet.detailed_lever_guides_n67); end
  def test_detailed_lever_guides_o67; assert_equal("By 2050, car and train occupancies increase by 30%, and domestic freight vehicles and international freight ships carry 30% and 15% more cargo respectively.", worksheet.detailed_lever_guides_o67); end
  def test_detailed_lever_guides_q5; assert_equal("Lever", worksheet.detailed_lever_guides_q5); end
  def test_detailed_lever_guides_r5; assert_equal("Question for key number", worksheet.detailed_lever_guides_r5); end
  def test_detailed_lever_guides_s5; assert_equal("Metric - key question", worksheet.detailed_lever_guides_s5); end
  def test_detailed_lever_guides_t5; assert_equal("Metric - 2011", worksheet.detailed_lever_guides_t5); end
  def test_detailed_lever_guides_u5; assert_equal("Metric - L1", worksheet.detailed_lever_guides_u5); end
  def test_detailed_lever_guides_v5; assert_equal("Metric - L2", worksheet.detailed_lever_guides_v5); end
  def test_detailed_lever_guides_w5; assert_equal("Metric - L3", worksheet.detailed_lever_guides_w5); end
  def test_detailed_lever_guides_x5; assert_equal("Metric - L4", worksheet.detailed_lever_guides_x5); end
  def test_detailed_lever_guides_q6; assert_equal("Global population", worksheet.detailed_lever_guides_q6); end
  def test_detailed_lever_guides_r6; assert_equal("How many people will there be?", worksheet.detailed_lever_guides_r6); end
  def test_detailed_lever_guides_s6; assert_equal("Number of people globally", worksheet.detailed_lever_guides_s6); end
  def test_detailed_lever_guides_t6; assert_equal("6,970,000,000", worksheet.detailed_lever_guides_t6); end
  def test_detailed_lever_guides_u6; assert_equal("10,900,000,000", worksheet.detailed_lever_guides_u6); end
  def test_detailed_lever_guides_v6; assert_equal("9,600,000,000", worksheet.detailed_lever_guides_v6); end
  def test_detailed_lever_guides_w6; assert_equal("8,300,000,000", worksheet.detailed_lever_guides_w6); end
  def test_detailed_lever_guides_x6; assert_equal("(no level 4)", worksheet.detailed_lever_guides_x6); end
  def test_detailed_lever_guides_q7; assert_equal("Urbanisation", worksheet.detailed_lever_guides_q7); end
  def test_detailed_lever_guides_r7; assert_equal("How many people will live in urban areas?", worksheet.detailed_lever_guides_r7); end
  def test_detailed_lever_guides_s7; assert_equal("% of population living in urban areas", worksheet.detailed_lever_guides_s7); end
  def test_detailed_lever_guides_t7; assert_in_epsilon(52.0, worksheet.detailed_lever_guides_t7, 0.002); end
  def test_detailed_lever_guides_u7; assert_in_epsilon(75.0, worksheet.detailed_lever_guides_u7, 0.002); end
  def test_detailed_lever_guides_v7; assert_in_epsilon(66.0, worksheet.detailed_lever_guides_v7, 0.002); end
  def test_detailed_lever_guides_w7; assert_in_epsilon(58.0, worksheet.detailed_lever_guides_w7, 0.002); end
  def test_detailed_lever_guides_x7; assert_equal("(no level 4)", worksheet.detailed_lever_guides_x7); end
  def test_detailed_lever_guides_q8; assert_equal("Passenger distance", worksheet.detailed_lever_guides_q8); end
  def test_detailed_lever_guides_r8; assert_equal("How far will we travel?", worksheet.detailed_lever_guides_r8); end
  def test_detailed_lever_guides_s8; assert_equal("average distance travelled in km/person/year", worksheet.detailed_lever_guides_s8); end
  def test_detailed_lever_guides_t8; assert_equal("TO ADD", worksheet.detailed_lever_guides_t8); end
  def test_detailed_lever_guides_u8; assert_equal("TO ADD", worksheet.detailed_lever_guides_u8); end
  def test_detailed_lever_guides_v8; assert_equal("TO ADD", worksheet.detailed_lever_guides_v8); end
  def test_detailed_lever_guides_w8; assert_equal("TO ADD", worksheet.detailed_lever_guides_w8); end
  def test_detailed_lever_guides_x8; assert_equal("TO ADD", worksheet.detailed_lever_guides_x8); end
  def test_detailed_lever_guides_q9; assert_equal("Freight distance", worksheet.detailed_lever_guides_q9); end
  def test_detailed_lever_guides_r9; assert_equal("How far will our stuff travel?", worksheet.detailed_lever_guides_r9); end
  def test_detailed_lever_guides_s9; assert_equal("tonne-km per year", worksheet.detailed_lever_guides_s9); end
  def test_detailed_lever_guides_t9; assert_equal("TO ADD", worksheet.detailed_lever_guides_t9); end
  def test_detailed_lever_guides_u9; assert_equal("TO ADD", worksheet.detailed_lever_guides_u9); end
  def test_detailed_lever_guides_v9; assert_equal("TO ADD", worksheet.detailed_lever_guides_v9); end
  def test_detailed_lever_guides_w9; assert_equal("TO ADD", worksheet.detailed_lever_guides_w9); end
  def test_detailed_lever_guides_x9; assert_equal("TO ADD", worksheet.detailed_lever_guides_x9); end
  def test_detailed_lever_guides_q10; assert_equal("Mode", worksheet.detailed_lever_guides_q10); end
  def test_detailed_lever_guides_r10; assert_equal("What proportion of km travelled were by car?", worksheet.detailed_lever_guides_r10); end
  def test_detailed_lever_guides_s10; assert_equal("% of km travelled by car", worksheet.detailed_lever_guides_s10); end
  def test_detailed_lever_guides_t10; assert_in_delta(0.4, worksheet.detailed_lever_guides_t10, 0.002); end
  def test_detailed_lever_guides_u10; assert_in_delta(0.65, worksheet.detailed_lever_guides_u10, 0.002); end
  def test_detailed_lever_guides_v10; assert_in_delta(0.5, worksheet.detailed_lever_guides_v10, 0.002); end
  def test_detailed_lever_guides_w10; assert_in_delta(0.4, worksheet.detailed_lever_guides_w10, 0.002); end
  def test_detailed_lever_guides_x10; assert_in_delta(0.3, worksheet.detailed_lever_guides_x10, 0.002); end
  def test_detailed_lever_guides_q11; assert_equal("Occupancy and load", worksheet.detailed_lever_guides_q11); end
  def test_detailed_lever_guides_r11; assert_equal("Can each vehicle carry more people or heavier loads?", worksheet.detailed_lever_guides_r11); end
  def test_detailed_lever_guides_s11; assert_equal("Occupancy (number of people) per average car, and % increase in the future", worksheet.detailed_lever_guides_s11); end
  def test_detailed_lever_guides_t11; assert_in_epsilon(2.0, worksheet.detailed_lever_guides_t11, 0.002); end
  def test_detailed_lever_guides_u11; assert_in_delta(-0.1, worksheet.detailed_lever_guides_u11, 0.002); end
  def test_detailed_lever_guides_v11; assert_in_delta(0.0, (worksheet.detailed_lever_guides_v11||0), 0.002); end
  def test_detailed_lever_guides_w11; assert_in_delta(0.1, worksheet.detailed_lever_guides_w11, 0.002); end
  def test_detailed_lever_guides_x11; assert_in_delta(0.2, worksheet.detailed_lever_guides_x11, 0.002); end
  def test_detailed_lever_guides_q12; assert_equal("Car own or hire ", worksheet.detailed_lever_guides_q12); end
  def test_detailed_lever_guides_r12; assert_equal("TO ADD", worksheet.detailed_lever_guides_r12); end
  def test_detailed_lever_guides_s12; assert_equal("TO ADD", worksheet.detailed_lever_guides_s12); end
  def test_detailed_lever_guides_t12; assert_equal("TO ADD", worksheet.detailed_lever_guides_t12); end
  def test_detailed_lever_guides_u12; assert_equal("TO ADD", worksheet.detailed_lever_guides_u12); end
  def test_detailed_lever_guides_v12; assert_equal("TO ADD", worksheet.detailed_lever_guides_v12); end
  def test_detailed_lever_guides_w12; assert_equal("TO ADD", worksheet.detailed_lever_guides_w12); end
  def test_detailed_lever_guides_x12; assert_equal("TO ADD", worksheet.detailed_lever_guides_x12); end
  def test_detailed_lever_guides_q13; assert_equal("Efficiency", worksheet.detailed_lever_guides_q13); end
  def test_detailed_lever_guides_r13; assert_equal("TO ADD", worksheet.detailed_lever_guides_r13); end
  def test_detailed_lever_guides_s13; assert_equal("TO ADD", worksheet.detailed_lever_guides_s13); end
  def test_detailed_lever_guides_t13; assert_equal("TO ADD", worksheet.detailed_lever_guides_t13); end
  def test_detailed_lever_guides_u13; assert_equal("TO ADD", worksheet.detailed_lever_guides_u13); end
  def test_detailed_lever_guides_v13; assert_equal("TO ADD", worksheet.detailed_lever_guides_v13); end
  def test_detailed_lever_guides_w13; assert_equal("TO ADD", worksheet.detailed_lever_guides_w13); end
  def test_detailed_lever_guides_x13; assert_equal("TO ADD", worksheet.detailed_lever_guides_x13); end
  def test_detailed_lever_guides_q14; assert_equal("Electric and hydrogen", worksheet.detailed_lever_guides_q14); end
  def test_detailed_lever_guides_r14; assert_equal("How many vehicles will be either electric or hydrogen powered?", worksheet.detailed_lever_guides_r14); end
  def test_detailed_lever_guides_s14; assert_equal("% of passenger cars that are electric or hydrogen powered", worksheet.detailed_lever_guides_s14); end
  def test_detailed_lever_guides_t14; assert_in_delta(0.002, worksheet.detailed_lever_guides_t14, 0.002); end
  def test_detailed_lever_guides_u14; assert_in_delta(0.02, worksheet.detailed_lever_guides_u14, 0.002); end
  def test_detailed_lever_guides_v14; assert_in_delta(0.1, worksheet.detailed_lever_guides_v14, 0.002); end
  def test_detailed_lever_guides_w14; assert_in_delta(0.35, worksheet.detailed_lever_guides_w14, 0.002); end
  def test_detailed_lever_guides_x14; assert_in_delta(0.55, worksheet.detailed_lever_guides_x14, 0.002); end
  def test_detailed_lever_guides_q15; assert_equal("Building size", worksheet.detailed_lever_guides_q15); end
  def test_detailed_lever_guides_r15; assert_equal("How big will the average urban home be?", worksheet.detailed_lever_guides_r15); end
  def test_detailed_lever_guides_s15; assert_equal("Area of average urban household (square metres)", worksheet.detailed_lever_guides_s15); end
  def test_detailed_lever_guides_t15; assert_in_epsilon(92.0, worksheet.detailed_lever_guides_t15, 0.002); end
  def test_detailed_lever_guides_u15; assert_in_epsilon(110.0, worksheet.detailed_lever_guides_u15, 0.002); end
  def test_detailed_lever_guides_v15; assert_in_epsilon(105.0, worksheet.detailed_lever_guides_v15, 0.002); end
  def test_detailed_lever_guides_w15; assert_in_epsilon(100.0, worksheet.detailed_lever_guides_w15, 0.002); end
  def test_detailed_lever_guides_x15; assert_in_epsilon(95.0, worksheet.detailed_lever_guides_x15, 0.002); end
  def test_detailed_lever_guides_q16; assert_equal("Temperature & hot water use", worksheet.detailed_lever_guides_q16); end
  def test_detailed_lever_guides_r16; assert_equal("How comfortable will our home temperatures be?", worksheet.detailed_lever_guides_r16); end
  def test_detailed_lever_guides_s16; assert_equal("average urban home temperature in winter and summer", worksheet.detailed_lever_guides_s16); end
  def test_detailed_lever_guides_t16; assert_equal("17.5&deg;C in winter, 26.5&deg;C in summer", worksheet.detailed_lever_guides_t16); end
  def test_detailed_lever_guides_u16; assert_equal("20 and 24", worksheet.detailed_lever_guides_u16); end
  def test_detailed_lever_guides_v16; assert_equal("19 and 25", worksheet.detailed_lever_guides_v16); end
  def test_detailed_lever_guides_w16; assert_equal("18 and 26", worksheet.detailed_lever_guides_w16); end
  def test_detailed_lever_guides_x16; assert_equal("17 and 27", worksheet.detailed_lever_guides_x16); end
  def test_detailed_lever_guides_q17; assert_equal("Lighting, cooking & appliance use", worksheet.detailed_lever_guides_q17); end
  def test_detailed_lever_guides_r17; assert_equal("How many appliances will we have in our homes?", worksheet.detailed_lever_guides_r17); end
  def test_detailed_lever_guides_s17; assert_equal("TO ADD", worksheet.detailed_lever_guides_s17); end
  def test_detailed_lever_guides_t17; assert_equal("TO ADD", worksheet.detailed_lever_guides_t17); end
  def test_detailed_lever_guides_u17; assert_equal("TO ADD", worksheet.detailed_lever_guides_u17); end
  def test_detailed_lever_guides_v17; assert_equal("TO ADD", worksheet.detailed_lever_guides_v17); end
  def test_detailed_lever_guides_w17; assert_equal("TO ADD", worksheet.detailed_lever_guides_w17); end
  def test_detailed_lever_guides_x17; assert_equal("TO ADD", worksheet.detailed_lever_guides_x17); end
  def test_detailed_lever_guides_q18; assert_equal("Building insulation", worksheet.detailed_lever_guides_q18); end
  def test_detailed_lever_guides_r18; assert_equal("How much will insulation of buildings reduce heat loss?", worksheet.detailed_lever_guides_r18); end
  def test_detailed_lever_guides_s18; assert_equal("Rate of heat loss GW/(M ha*&deg;C)", worksheet.detailed_lever_guides_s18); end
  def test_detailed_lever_guides_t18; assert_equal("15 GW/(M ha*&deg;C)", worksheet.detailed_lever_guides_t18); end
  def test_detailed_lever_guides_u18; assert_in_delta(0.2, worksheet.detailed_lever_guides_u18, 0.002); end
  def test_detailed_lever_guides_v18; assert_in_delta(0.4, worksheet.detailed_lever_guides_v18, 0.002); end
  def test_detailed_lever_guides_w18; assert_in_delta(0.6, worksheet.detailed_lever_guides_w18, 0.002); end
  def test_detailed_lever_guides_x18; assert_in_delta(0.73, worksheet.detailed_lever_guides_x18, 0.002); end
  def test_detailed_lever_guides_q19; assert_equal("Temperature, cooking & lighting technology", worksheet.detailed_lever_guides_q19); end
  def test_detailed_lever_guides_r19; assert_equal("How much will we use low-carbon technologies to heat and cool our buildings?", worksheet.detailed_lever_guides_r19); end
  def test_detailed_lever_guides_s19; assert_equal("% of urban space heating technologies that are low-carbon (solar and heat pumps)", worksheet.detailed_lever_guides_s19); end
  def test_detailed_lever_guides_t19; assert_equal("TO ADD", worksheet.detailed_lever_guides_t19); end
  def test_detailed_lever_guides_u19; assert_equal("TO ADD", worksheet.detailed_lever_guides_u19); end
  def test_detailed_lever_guides_v19; assert_equal("TO ADD", worksheet.detailed_lever_guides_v19); end
  def test_detailed_lever_guides_w19; assert_equal("TO ADD", worksheet.detailed_lever_guides_w19); end
  def test_detailed_lever_guides_x19; assert_equal("TO ADD", worksheet.detailed_lever_guides_x19); end
  def test_detailed_lever_guides_q20; assert_equal("Appliance efficiency", worksheet.detailed_lever_guides_q20); end
  def test_detailed_lever_guides_r20; assert_equal("% reduction in power needed by average appliance", worksheet.detailed_lever_guides_r20); end
  def test_detailed_lever_guides_s20; assert_equal("Energy used by average appliances excluding TVs (and reduction from 2011 levels)", worksheet.detailed_lever_guides_s20); end
  def test_detailed_lever_guides_t20; assert_equal("Baseline", worksheet.detailed_lever_guides_t20); end
  def test_detailed_lever_guides_u20; assert_in_delta(0.2, worksheet.detailed_lever_guides_u20, 0.002); end
  def test_detailed_lever_guides_v20; assert_in_delta(0.35, worksheet.detailed_lever_guides_v20, 0.002); end
  def test_detailed_lever_guides_w20; assert_in_delta(0.5, worksheet.detailed_lever_guides_w20, 0.002); end
  def test_detailed_lever_guides_x20; assert_in_delta(0.65, worksheet.detailed_lever_guides_x20, 0.002); end
  def test_detailed_lever_guides_q21; assert_equal("Product lifespan & demand", worksheet.detailed_lever_guides_q21); end
  def test_detailed_lever_guides_r21; assert_equal("How frequently will we replace products?", worksheet.detailed_lever_guides_r21); end
  def test_detailed_lever_guides_s21; assert_equal("Lifespan of TV (years)", worksheet.detailed_lever_guides_s21); end
  def test_detailed_lever_guides_t21; assert_in_epsilon(7.0, worksheet.detailed_lever_guides_t21, 0.002); end
  def test_detailed_lever_guides_u21; assert_in_epsilon(5.0, worksheet.detailed_lever_guides_u21, 0.002); end
  def test_detailed_lever_guides_v21; assert_in_epsilon(7.0, worksheet.detailed_lever_guides_v21, 0.002); end
  def test_detailed_lever_guides_w21; assert_in_epsilon(10.0, worksheet.detailed_lever_guides_w21, 0.002); end
  def test_detailed_lever_guides_x21; assert_in_epsilon(15.0, worksheet.detailed_lever_guides_x21, 0.002); end
  def test_detailed_lever_guides_q22; assert_equal("Design, material switch & recycling", worksheet.detailed_lever_guides_q22); end
  def test_detailed_lever_guides_r22; assert_equal("% reduction in material needed for a given product between 2011 and 2050", worksheet.detailed_lever_guides_r22); end
  def test_detailed_lever_guides_s22; assert_equal("% reduction in material used to make a given product between 2011 and 2050", worksheet.detailed_lever_guides_s22); end
  def test_detailed_lever_guides_t22; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t22||0), 0.002); end
  def test_detailed_lever_guides_u22; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u22||0), 0.002); end
  def test_detailed_lever_guides_v22; assert_in_delta(0.1, worksheet.detailed_lever_guides_v22, 0.002); end
  def test_detailed_lever_guides_w22; assert_in_delta(0.2, worksheet.detailed_lever_guides_w22, 0.002); end
  def test_detailed_lever_guides_x22; assert_in_delta(0.3, worksheet.detailed_lever_guides_x22, 0.002); end
  def test_detailed_lever_guides_q23; assert_equal("Iron, steel & aluminium", worksheet.detailed_lever_guides_q23); end
  def test_detailed_lever_guides_r23; assert_equal("How many tonnes of CO2 are produced per tonne of steel?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r23); end
  def test_detailed_lever_guides_s23; assert_equal("Change in emissions per tonne of steel from now to 2050 ", worksheet.detailed_lever_guides_s23); end
  def test_detailed_lever_guides_t23; assert_equal("2 tonnes of CO2 currently produced per tonne of steel. ", worksheet.detailed_lever_guides_t23); end
  def test_detailed_lever_guides_u23; assert_equal("TO ADD", worksheet.detailed_lever_guides_u23); end
  def test_detailed_lever_guides_v23; assert_equal("TO ADD", worksheet.detailed_lever_guides_v23); end
  def test_detailed_lever_guides_w23; assert_equal("TO ADD", worksheet.detailed_lever_guides_w23); end
  def test_detailed_lever_guides_x23; assert_equal("TO ADD", worksheet.detailed_lever_guides_x23); end
  def test_detailed_lever_guides_q24; assert_equal("Chemicals", worksheet.detailed_lever_guides_q24); end
  def test_detailed_lever_guides_r24; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r24); end
  def test_detailed_lever_guides_s24; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_s24); end
  def test_detailed_lever_guides_t24; assert_equal("1.7 tonnes of CO2 produced per tonne of chemicals on average", worksheet.detailed_lever_guides_t24); end
  def test_detailed_lever_guides_u24; assert_in_delta(0.01, worksheet.detailed_lever_guides_u24, 0.002); end
  def test_detailed_lever_guides_v24; assert_in_delta(-0.03, worksheet.detailed_lever_guides_v24, 0.002); end
  def test_detailed_lever_guides_w24; assert_in_delta(-0.07, worksheet.detailed_lever_guides_w24, 0.002); end
  def test_detailed_lever_guides_x24; assert_in_delta(-0.15, worksheet.detailed_lever_guides_x24, 0.002); end
  def test_detailed_lever_guides_q25; assert_equal("Paper and other", worksheet.detailed_lever_guides_q25); end
  def test_detailed_lever_guides_r25; assert_equal("How many tonnes of CO2 are produced per tonne of chemicals on paper on average?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r25); end
  def test_detailed_lever_guides_s25; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_s25); end
  def test_detailed_lever_guides_t25; assert_equal("0.5 tonnes of CO2 produced per tonne of paper", worksheet.detailed_lever_guides_t25); end
  def test_detailed_lever_guides_u25; assert_in_delta(0.01, worksheet.detailed_lever_guides_u25, 0.002); end
  def test_detailed_lever_guides_v25; assert_in_delta(-0.2, worksheet.detailed_lever_guides_v25, 0.002); end
  def test_detailed_lever_guides_w25; assert_in_delta(-0.32, worksheet.detailed_lever_guides_w25, 0.002); end
  def test_detailed_lever_guides_x25; assert_in_delta(-0.45, worksheet.detailed_lever_guides_x25, 0.002); end
  def test_detailed_lever_guides_q26; assert_equal("Cement", worksheet.detailed_lever_guides_q26); end
  def test_detailed_lever_guides_r26; assert_equal("How many tonnes of CO2 are produced per tonne of cement?\r(% reduction from 2011 to 2050)", worksheet.detailed_lever_guides_r26); end
  def test_detailed_lever_guides_s26; assert_equal("Change in emissions per tonne from now to 2050", worksheet.detailed_lever_guides_s26); end
  def test_detailed_lever_guides_t26; assert_equal("0.4 tonnes of CO2 produced per tonne of cement", worksheet.detailed_lever_guides_t26); end
  def test_detailed_lever_guides_u26; assert_in_delta(0.02, worksheet.detailed_lever_guides_u26, 0.002); end
  def test_detailed_lever_guides_v26; assert_in_delta(0.04, worksheet.detailed_lever_guides_v26, 0.002); end
  def test_detailed_lever_guides_w26; assert_in_delta(0.08, worksheet.detailed_lever_guides_w26, 0.002); end
  def test_detailed_lever_guides_x26; assert_in_delta(0.31, worksheet.detailed_lever_guides_x26, 0.002); end
  def test_detailed_lever_guides_q27; assert_equal("Carbon capture and storage (ind.)", worksheet.detailed_lever_guides_q27); end
  def test_detailed_lever_guides_r27; assert_equal("Do we use CCS in industry to capture process and combustion emissions? ", worksheet.detailed_lever_guides_r27); end
  def test_detailed_lever_guides_s27; assert_equal("tonnes of CO2 captured within industry", worksheet.detailed_lever_guides_s27); end
  def test_detailed_lever_guides_t27; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t27||0), 0.002); end
  def test_detailed_lever_guides_u27; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u27||0), 0.002); end
  def test_detailed_lever_guides_v27; assert_equal("TO ADD", worksheet.detailed_lever_guides_v27); end
  def test_detailed_lever_guides_w27; assert_equal("TO ADD", worksheet.detailed_lever_guides_w27); end
  def test_detailed_lever_guides_x27; assert_equal("TO ADD", worksheet.detailed_lever_guides_x27); end
  def test_detailed_lever_guides_q28; assert_equal("Coal (incl. biomass) / oil / gas", worksheet.detailed_lever_guides_q28); end
  def test_detailed_lever_guides_r28; assert_equal("Thermal power plants: % that is supplied by solid fuel", worksheet.detailed_lever_guides_r28); end
  def test_detailed_lever_guides_s28; assert_equal("% solid", worksheet.detailed_lever_guides_s28); end
  def test_detailed_lever_guides_t28; assert_in_delta(0.6, worksheet.detailed_lever_guides_t28, 0.002); end
  def test_detailed_lever_guides_u28; assert_in_delta(0.58, worksheet.detailed_lever_guides_u28, 0.002); end
  def test_detailed_lever_guides_v28; assert_in_delta(0.4, worksheet.detailed_lever_guides_v28, 0.002); end
  def test_detailed_lever_guides_w28; assert_in_delta(0.32, worksheet.detailed_lever_guides_w28, 0.002); end
  def test_detailed_lever_guides_x28; assert_in_delta(0.26, worksheet.detailed_lever_guides_x28, 0.002); end
  def test_detailed_lever_guides_q29; assert_equal("Fossil fuel efficiency", worksheet.detailed_lever_guides_q29); end
  def test_detailed_lever_guides_r29; assert_equal("How many coal power stations use the most efficient technologies (ultra- or super- critical)?", worksheet.detailed_lever_guides_r29); end
  def test_detailed_lever_guides_s29; assert_equal("% of coal power stations using most efficient technologies (ultra- or super- critical)", worksheet.detailed_lever_guides_s29); end
  def test_detailed_lever_guides_t29; assert_in_delta(0.25, worksheet.detailed_lever_guides_t29, 0.002); end
  def test_detailed_lever_guides_u29; assert_in_delta(0.38, worksheet.detailed_lever_guides_u29, 0.002); end
  def test_detailed_lever_guides_v29; assert_in_delta(0.45, worksheet.detailed_lever_guides_v29, 0.002); end
  def test_detailed_lever_guides_w29; assert_in_delta(0.5, worksheet.detailed_lever_guides_w29, 0.002); end
  def test_detailed_lever_guides_x29; assert_in_delta(0.55, worksheet.detailed_lever_guides_x29, 0.002); end
  def test_detailed_lever_guides_q30; assert_equal("Carbon capture and storage (power)", worksheet.detailed_lever_guides_q30); end
  def test_detailed_lever_guides_r30; assert_equal("How much do we use carbon capture and storage for electricity generation?", worksheet.detailed_lever_guides_r30); end
  def test_detailed_lever_guides_s30; assert_equal("GW of CCS power capacity", worksheet.detailed_lever_guides_s30); end
  def test_detailed_lever_guides_t30; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t30||0), 0.002); end
  def test_detailed_lever_guides_u30; assert_in_epsilon(16.0, worksheet.detailed_lever_guides_u30, 0.002); end
  def test_detailed_lever_guides_v30; assert_in_epsilon(490.0, worksheet.detailed_lever_guides_v30, 0.002); end
  def test_detailed_lever_guides_w30; assert_in_epsilon(1487.0, worksheet.detailed_lever_guides_w30, 0.002); end
  def test_detailed_lever_guides_x30; assert_in_epsilon(3700.0, worksheet.detailed_lever_guides_x30, 0.002); end
  def test_detailed_lever_guides_q31; assert_equal("Nuclear", worksheet.detailed_lever_guides_q31); end
  def test_detailed_lever_guides_r31; assert_equal("How much do we use nuclear power?", worksheet.detailed_lever_guides_r31); end
  def test_detailed_lever_guides_s31; assert_equal("GW of nuclear power capacity", worksheet.detailed_lever_guides_s31); end
  def test_detailed_lever_guides_t31; assert_in_epsilon(369.0, worksheet.detailed_lever_guides_t31, 0.002); end
  def test_detailed_lever_guides_u31; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u31||0), 0.002); end
  def test_detailed_lever_guides_v31; assert_in_epsilon(558.0, worksheet.detailed_lever_guides_v31, 0.002); end
  def test_detailed_lever_guides_w31; assert_in_epsilon(989.0, worksheet.detailed_lever_guides_w31, 0.002); end
  def test_detailed_lever_guides_x31; assert_in_epsilon(1870.0, worksheet.detailed_lever_guides_x31, 0.002); end
  def test_detailed_lever_guides_q32; assert_equal("Wind", worksheet.detailed_lever_guides_q32); end
  def test_detailed_lever_guides_r32; assert_equal("How much do we use wind power?", worksheet.detailed_lever_guides_r32); end
  def test_detailed_lever_guides_s32; assert_equal("total GW of onshore and offshore wind power capacity", worksheet.detailed_lever_guides_s32); end
  def test_detailed_lever_guides_t32; assert_in_epsilon(242.0, worksheet.detailed_lever_guides_t32, 0.002); end
  def test_detailed_lever_guides_u32; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u32||0), 0.002); end
  def test_detailed_lever_guides_v32; assert_in_epsilon(2317.0, worksheet.detailed_lever_guides_v32, 0.002); end
  def test_detailed_lever_guides_w32; assert_in_epsilon(4710.0, worksheet.detailed_lever_guides_w32, 0.002); end
  def test_detailed_lever_guides_x32; assert_in_epsilon(6466.0, worksheet.detailed_lever_guides_x32, 0.002); end
  def test_detailed_lever_guides_q33; assert_equal("Hydroelectric", worksheet.detailed_lever_guides_q33); end
  def test_detailed_lever_guides_r33; assert_equal("How much do we use hydroelectric power?", worksheet.detailed_lever_guides_r33); end
  def test_detailed_lever_guides_s33; assert_equal("GW of hydroelectric capacity", worksheet.detailed_lever_guides_s33); end
  def test_detailed_lever_guides_t33; assert_in_epsilon(970.0, worksheet.detailed_lever_guides_t33, 0.002); end
  def test_detailed_lever_guides_u33; assert_in_epsilon(1324.0, worksheet.detailed_lever_guides_u33, 0.002); end
  def test_detailed_lever_guides_v33; assert_in_epsilon(1697.0, worksheet.detailed_lever_guides_v33, 0.002); end
  def test_detailed_lever_guides_w33; assert_in_epsilon(1912.0, worksheet.detailed_lever_guides_w33, 0.002); end
  def test_detailed_lever_guides_x33; assert_in_epsilon(2342.0, worksheet.detailed_lever_guides_x33, 0.002); end
  def test_detailed_lever_guides_q34; assert_equal("Marine", worksheet.detailed_lever_guides_q34); end
  def test_detailed_lever_guides_r34; assert_equal("How much do we use wave and tidal power?", worksheet.detailed_lever_guides_r34); end
  def test_detailed_lever_guides_s34; assert_equal("total GW of marine capacity (wave and tidal)", worksheet.detailed_lever_guides_s34); end
  def test_detailed_lever_guides_t34; assert_in_epsilon(1.01, worksheet.detailed_lever_guides_t34, 0.002); end
  def test_detailed_lever_guides_u34; assert_in_epsilon(8.0, worksheet.detailed_lever_guides_u34, 0.002); end
  def test_detailed_lever_guides_v34; assert_in_epsilon(97.0, worksheet.detailed_lever_guides_v34, 0.002); end
  def test_detailed_lever_guides_w34; assert_in_epsilon(367.0, worksheet.detailed_lever_guides_w34, 0.002); end
  def test_detailed_lever_guides_x34; assert_in_epsilon(436.0, worksheet.detailed_lever_guides_x34, 0.002); end
  def test_detailed_lever_guides_q35; assert_equal("Solar", worksheet.detailed_lever_guides_q35); end
  def test_detailed_lever_guides_r35; assert_equal("How much do we use solar power?", worksheet.detailed_lever_guides_r35); end
  def test_detailed_lever_guides_s35; assert_equal("total GW of solar power capacity", worksheet.detailed_lever_guides_s35); end
  def test_detailed_lever_guides_t35; assert_in_epsilon(30.0, worksheet.detailed_lever_guides_t35, 0.002); end
  def test_detailed_lever_guides_u35; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u35||0), 0.002); end
  def test_detailed_lever_guides_v35; assert_in_epsilon(1199.0, worksheet.detailed_lever_guides_v35, 0.002); end
  def test_detailed_lever_guides_w35; assert_in_epsilon(3854.0, worksheet.detailed_lever_guides_w35, 0.002); end
  def test_detailed_lever_guides_x35; assert_in_epsilon(7547.0, worksheet.detailed_lever_guides_x35, 0.002); end
  def test_detailed_lever_guides_q36; assert_equal("Geothermal", worksheet.detailed_lever_guides_q36); end
  def test_detailed_lever_guides_r36; assert_equal("How much do we use geothermal power?", worksheet.detailed_lever_guides_r36); end
  def test_detailed_lever_guides_s36; assert_equal("total GW of geothermal capacity", worksheet.detailed_lever_guides_s36); end
  def test_detailed_lever_guides_t36; assert_in_epsilon(11.56, worksheet.detailed_lever_guides_t36, 0.002); end
  def test_detailed_lever_guides_u36; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u36||0), 0.002); end
  def test_detailed_lever_guides_v36; assert_in_epsilon(172.0, worksheet.detailed_lever_guides_v36, 0.002); end
  def test_detailed_lever_guides_w36; assert_in_epsilon(289.0, worksheet.detailed_lever_guides_w36, 0.002); end
  def test_detailed_lever_guides_x36; assert_in_epsilon(404.0, worksheet.detailed_lever_guides_x36, 0.002); end
  def test_detailed_lever_guides_q37; assert_equal("Storage and demand shifting", worksheet.detailed_lever_guides_q37); end
  def test_detailed_lever_guides_r37; assert_equal("How much electricity storage will we have?", worksheet.detailed_lever_guides_r37); end
  def test_detailed_lever_guides_s37; assert_equal("GW of electricity storage plants.", worksheet.detailed_lever_guides_s37); end
  def test_detailed_lever_guides_t37; assert_in_epsilon(120.0, worksheet.detailed_lever_guides_t37, 0.002); end
  def test_detailed_lever_guides_u37; assert_in_epsilon(152.0, worksheet.detailed_lever_guides_u37, 0.002); end
  def test_detailed_lever_guides_v37; assert_in_epsilon(403.0, worksheet.detailed_lever_guides_v37, 0.002); end
  def test_detailed_lever_guides_w37; assert_in_epsilon(800.0, worksheet.detailed_lever_guides_w37, 0.002); end
  def test_detailed_lever_guides_x37; assert_in_epsilon(1200.0, worksheet.detailed_lever_guides_x37, 0.002); end
  def test_detailed_lever_guides_q38; assert_equal("Calories consumed", worksheet.detailed_lever_guides_q38); end
  def test_detailed_lever_guides_r38; assert_equal("How much food will we eat?", worksheet.detailed_lever_guides_r38); end
  def test_detailed_lever_guides_s38; assert_equal("Global average food consumption (kcals/person/day)", worksheet.detailed_lever_guides_s38); end
  def test_detailed_lever_guides_t38; assert_in_epsilon(2140.0, worksheet.detailed_lever_guides_t38, 0.002); end
  def test_detailed_lever_guides_u38; assert_in_epsilon(2520.0, worksheet.detailed_lever_guides_u38, 0.002); end
  def test_detailed_lever_guides_v38; assert_in_epsilon(2400.0, worksheet.detailed_lever_guides_v38, 0.002); end
  def test_detailed_lever_guides_w38; assert_in_epsilon(2330.0, worksheet.detailed_lever_guides_w38, 0.002); end
  def test_detailed_lever_guides_x38; assert_in_epsilon(2100.0, worksheet.detailed_lever_guides_x38, 0.002); end
  def test_detailed_lever_guides_q39; assert_equal("Quantity of meat", worksheet.detailed_lever_guides_q39); end
  def test_detailed_lever_guides_r39; assert_equal("How much meat will we eat?", worksheet.detailed_lever_guides_r39); end
  def test_detailed_lever_guides_s39; assert_equal("Global average meat consumption (kcals meat/person/day)", worksheet.detailed_lever_guides_s39); end
  def test_detailed_lever_guides_t39; assert_equal("TO ADD", worksheet.detailed_lever_guides_t39); end
  def test_detailed_lever_guides_u39; assert_equal("TO ADD", worksheet.detailed_lever_guides_u39); end
  def test_detailed_lever_guides_v39; assert_equal("TO ADD", worksheet.detailed_lever_guides_v39); end
  def test_detailed_lever_guides_w39; assert_equal("TO ADD", worksheet.detailed_lever_guides_w39); end
  def test_detailed_lever_guides_x39; assert_equal("TO ADD", worksheet.detailed_lever_guides_x39); end
  def test_detailed_lever_guides_q40; assert_equal("Type of meat", worksheet.detailed_lever_guides_q40); end
  def test_detailed_lever_guides_r40; assert_equal("TO ADD", worksheet.detailed_lever_guides_r40); end
  def test_detailed_lever_guides_s40; assert_equal("TO ADD", worksheet.detailed_lever_guides_s40); end
  def test_detailed_lever_guides_t40; assert_equal("TO ADD", worksheet.detailed_lever_guides_t40); end
  def test_detailed_lever_guides_u40; assert_equal("TO ADD", worksheet.detailed_lever_guides_u40); end
  def test_detailed_lever_guides_v40; assert_equal("TO ADD", worksheet.detailed_lever_guides_v40); end
  def test_detailed_lever_guides_w40; assert_equal("TO ADD", worksheet.detailed_lever_guides_w40); end
  def test_detailed_lever_guides_x40; assert_equal("TO ADD", worksheet.detailed_lever_guides_x40); end
  def test_detailed_lever_guides_q41; assert_equal("Crop yields", worksheet.detailed_lever_guides_q41); end
  def test_detailed_lever_guides_r41; assert_equal("Will crop yields increase?", worksheet.detailed_lever_guides_r41); end
  def test_detailed_lever_guides_s41; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_s41); end
  def test_detailed_lever_guides_t41; assert_equal("Baseline", worksheet.detailed_lever_guides_t41); end
  def test_detailed_lever_guides_u41; assert_in_delta(-0.1, worksheet.detailed_lever_guides_u41, 0.002); end
  def test_detailed_lever_guides_v41; assert_in_delta(0.4, worksheet.detailed_lever_guides_v41, 0.002); end
  def test_detailed_lever_guides_w41; assert_in_delta(0.6, worksheet.detailed_lever_guides_w41, 0.002); end
  def test_detailed_lever_guides_x41; assert_in_epsilon(1.2, worksheet.detailed_lever_guides_x41, 0.002); end
  def test_detailed_lever_guides_q42; assert_equal("Land-use efficiency ", worksheet.detailed_lever_guides_q42); end
  def test_detailed_lever_guides_r42; assert_in_delta(0.0, (worksheet.detailed_lever_guides_r42||0), 0.002); end
  def test_detailed_lever_guides_s42; assert_equal("% more land which is needed to get the same yield", worksheet.detailed_lever_guides_s42); end
  def test_detailed_lever_guides_t42; assert_equal("Baseline", worksheet.detailed_lever_guides_t42); end
  def test_detailed_lever_guides_u42; assert_in_delta(0.1, worksheet.detailed_lever_guides_u42, 0.002); end
  def test_detailed_lever_guides_v42; assert_in_delta(0.0, (worksheet.detailed_lever_guides_v42||0), 0.002); end
  def test_detailed_lever_guides_w42; assert_in_delta(-0.1, worksheet.detailed_lever_guides_w42, 0.002); end
  def test_detailed_lever_guides_x42; assert_in_delta(-0.3, worksheet.detailed_lever_guides_x42, 0.002); end
  def test_detailed_lever_guides_q43; assert_equal("Livestock intensification", worksheet.detailed_lever_guides_q43); end
  def test_detailed_lever_guides_r43; assert_equal("TO ADD", worksheet.detailed_lever_guides_r43); end
  def test_detailed_lever_guides_s43; assert_equal("TO ADD", worksheet.detailed_lever_guides_s43); end
  def test_detailed_lever_guides_t43; assert_equal("TO ADD", worksheet.detailed_lever_guides_t43); end
  def test_detailed_lever_guides_u43; assert_equal("TO ADD", worksheet.detailed_lever_guides_u43); end
  def test_detailed_lever_guides_v43; assert_equal("TO ADD", worksheet.detailed_lever_guides_v43); end
  def test_detailed_lever_guides_w43; assert_equal("TO ADD", worksheet.detailed_lever_guides_w43); end
  def test_detailed_lever_guides_x43; assert_equal("TO ADD", worksheet.detailed_lever_guides_x43); end
  def test_detailed_lever_guides_q44; assert_equal("Extensive livestock yields", worksheet.detailed_lever_guides_q44); end
  def test_detailed_lever_guides_r44; assert_in_delta(0.0, (worksheet.detailed_lever_guides_r44||0), 0.002); end
  def test_detailed_lever_guides_s44; assert_equal("Yields (but measured how?) Need to check which thing has the most impact. Or increase in yield overall if you choose each level. Is this possible?", worksheet.detailed_lever_guides_s44); end
  def test_detailed_lever_guides_t44; assert_equal("TO ADD", worksheet.detailed_lever_guides_t44); end
  def test_detailed_lever_guides_u44; assert_equal("TO ADD", worksheet.detailed_lever_guides_u44); end
  def test_detailed_lever_guides_v44; assert_equal("TO ADD", worksheet.detailed_lever_guides_v44); end
  def test_detailed_lever_guides_w44; assert_equal("TO ADD", worksheet.detailed_lever_guides_w44); end
  def test_detailed_lever_guides_x44; assert_equal("TO ADD", worksheet.detailed_lever_guides_x44); end
  def test_detailed_lever_guides_q45; assert_equal("Bioenergy yields", worksheet.detailed_lever_guides_q45); end
  def test_detailed_lever_guides_r45; assert_equal("Increase in bioenergy crop yields between 2011 and 2050", worksheet.detailed_lever_guides_r45); end
  def test_detailed_lever_guides_s45; assert_equal("Change in average yield per hectare of land from 2011 to 2050. ", worksheet.detailed_lever_guides_s45); end
  def test_detailed_lever_guides_t45; assert_equal("TO ADD", worksheet.detailed_lever_guides_t45); end
  def test_detailed_lever_guides_u45; assert_in_delta(0.2, worksheet.detailed_lever_guides_u45, 0.002); end
  def test_detailed_lever_guides_v45; assert_in_delta(0.5, worksheet.detailed_lever_guides_v45, 0.002); end
  def test_detailed_lever_guides_w45; assert_in_epsilon(1.2, worksheet.detailed_lever_guides_w45, 0.002); end
  def test_detailed_lever_guides_x45; assert_in_epsilon(2.2, worksheet.detailed_lever_guides_x45, 0.002); end
  def test_detailed_lever_guides_q46; assert_equal("Bioenergy type (biomass and biofuels)", worksheet.detailed_lever_guides_q46); end
  def test_detailed_lever_guides_r46; assert_equal("TO ADD", worksheet.detailed_lever_guides_r46); end
  def test_detailed_lever_guides_s46; assert_equal("TO ADD", worksheet.detailed_lever_guides_s46); end
  def test_detailed_lever_guides_t46; assert_equal("TO ADD", worksheet.detailed_lever_guides_t46); end
  def test_detailed_lever_guides_u46; assert_equal("TO ADD", worksheet.detailed_lever_guides_u46); end
  def test_detailed_lever_guides_v46; assert_equal("TO ADD", worksheet.detailed_lever_guides_v46); end
  def test_detailed_lever_guides_w46; assert_equal("TO ADD", worksheet.detailed_lever_guides_w46); end
  def test_detailed_lever_guides_x46; assert_equal("TO ADD", worksheet.detailed_lever_guides_x46); end
  def test_detailed_lever_guides_q47; assert_equal("Surplus land (forest & bioenergy) ", worksheet.detailed_lever_guides_q47); end
  def test_detailed_lever_guides_r47; assert_equal("Percentage of surplus land that is used for biocrops", worksheet.detailed_lever_guides_r47); end
  def test_detailed_lever_guides_s47; assert_equal("% of 2050's surplus land (if any) used for biocrops", worksheet.detailed_lever_guides_s47); end
  def test_detailed_lever_guides_t47; assert_equal("Historic data", worksheet.detailed_lever_guides_t47); end
  def test_detailed_lever_guides_u47; assert_in_delta(0.2, worksheet.detailed_lever_guides_u47, 0.002); end
  def test_detailed_lever_guides_v47; assert_in_delta(0.4, worksheet.detailed_lever_guides_v47, 0.002); end
  def test_detailed_lever_guides_w47; assert_in_delta(0.6, worksheet.detailed_lever_guides_w47, 0.002); end
  def test_detailed_lever_guides_x47; assert_in_delta(0.8, worksheet.detailed_lever_guides_x47, 0.002); end
  def test_detailed_lever_guides_q48; assert_equal("Biochar", worksheet.detailed_lever_guides_q48); end
  def test_detailed_lever_guides_r48; assert_equal("How much CO2 do we capture through biochar technology?", worksheet.detailed_lever_guides_r48); end
  def test_detailed_lever_guides_s48; assert_equal("Removal rate through biochar(GtCO2/year)", worksheet.detailed_lever_guides_s48); end
  def test_detailed_lever_guides_t48; assert_equal("0 GtCO2/year", worksheet.detailed_lever_guides_t48); end
  def test_detailed_lever_guides_u48; assert_equal("0 GtCO2/year", worksheet.detailed_lever_guides_u48); end
  def test_detailed_lever_guides_v48; assert_equal("0.33 GtCO2/year", worksheet.detailed_lever_guides_v48); end
  def test_detailed_lever_guides_w48; assert_equal("0.825 GtCO2/year", worksheet.detailed_lever_guides_w48); end
  def test_detailed_lever_guides_x48; assert_equal("3.3 GtCO2/year", worksheet.detailed_lever_guides_x48); end
  def test_detailed_lever_guides_q49; assert_equal("Direct air capture", worksheet.detailed_lever_guides_q49); end
  def test_detailed_lever_guides_r49; assert_equal("How much CO2 do we capture through direct air capture technology?", worksheet.detailed_lever_guides_r49); end
  def test_detailed_lever_guides_s49; assert_equal("Removal rate through air-capture (GtCO2/year)", worksheet.detailed_lever_guides_s49); end
  def test_detailed_lever_guides_t49; assert_equal("0 GtCO2/year", worksheet.detailed_lever_guides_t49); end
  def test_detailed_lever_guides_u49; assert_equal("0 GtCO2/year", worksheet.detailed_lever_guides_u49); end
  def test_detailed_lever_guides_v49; assert_equal("1 GtCO2/year", worksheet.detailed_lever_guides_v49); end
  def test_detailed_lever_guides_w49; assert_equal("2.5 GtCO2/year", worksheet.detailed_lever_guides_w49); end
  def test_detailed_lever_guides_x49; assert_equal("10 GtCO2/year", worksheet.detailed_lever_guides_x49); end
  def test_detailed_lever_guides_q50; assert_equal("Ocean fertilisation", worksheet.detailed_lever_guides_q50); end
  def test_detailed_lever_guides_r50; assert_equal("How much CO2 do we capture through ocean fertilisation technology?", worksheet.detailed_lever_guides_r50); end
  def test_detailed_lever_guides_s50; assert_equal("Removal rate through ocean fertilisation (GtCO2/year)", worksheet.detailed_lever_guides_s50); end
  def test_detailed_lever_guides_t50; assert_equal("0 GtCO2/year", worksheet.detailed_lever_guides_t50); end
  def test_detailed_lever_guides_u50; assert_equal("0 GtCO2/year", worksheet.detailed_lever_guides_u50); end
  def test_detailed_lever_guides_v50; assert_equal("0.1 GtCO2/year", worksheet.detailed_lever_guides_v50); end
  def test_detailed_lever_guides_w50; assert_equal("0.25 GtCO2/year", worksheet.detailed_lever_guides_w50); end
  def test_detailed_lever_guides_x50; assert_equal("1 GtCO2/year", worksheet.detailed_lever_guides_x50); end
  def test_detailed_lever_guides_q51; assert_equal("Enhanced weathering (oceanic)", worksheet.detailed_lever_guides_q51); end
  def test_detailed_lever_guides_r51; assert_equal("How much CO2 do we capture through enhanced weather (oceanic) technology?", worksheet.detailed_lever_guides_r51); end
  def test_detailed_lever_guides_s51; assert_equal("TO ADD", worksheet.detailed_lever_guides_s51); end
  def test_detailed_lever_guides_t51; assert_equal("TO ADD", worksheet.detailed_lever_guides_t51); end
  def test_detailed_lever_guides_u51; assert_equal("TO ADD", worksheet.detailed_lever_guides_u51); end
  def test_detailed_lever_guides_v51; assert_equal("TO ADD", worksheet.detailed_lever_guides_v51); end
  def test_detailed_lever_guides_w51; assert_equal("TO ADD", worksheet.detailed_lever_guides_w51); end
  def test_detailed_lever_guides_x51; assert_equal("TO ADD", worksheet.detailed_lever_guides_x51); end
  def test_detailed_lever_guides_q52; assert_equal("Enhanced weathering (terrestial)", worksheet.detailed_lever_guides_q52); end
  def test_detailed_lever_guides_r52; assert_equal("How much CO2 do we capture through enhanced weather (terrestrial) technology?", worksheet.detailed_lever_guides_r52); end
  def test_detailed_lever_guides_s52; assert_equal("TO ADD", worksheet.detailed_lever_guides_s52); end
  def test_detailed_lever_guides_t52; assert_equal("TO ADD", worksheet.detailed_lever_guides_t52); end
  def test_detailed_lever_guides_u52; assert_equal("TO ADD", worksheet.detailed_lever_guides_u52); end
  def test_detailed_lever_guides_v52; assert_equal("TO ADD", worksheet.detailed_lever_guides_v52); end
  def test_detailed_lever_guides_w52; assert_equal("TO ADD", worksheet.detailed_lever_guides_w52); end
  def test_detailed_lever_guides_x52; assert_equal("TO ADD", worksheet.detailed_lever_guides_x52); end
  def test_detailed_lever_guides_q53; assert_equal("Wastes and residues", worksheet.detailed_lever_guides_q53); end
  def test_detailed_lever_guides_r53; assert_equal("How much food is wasted after leaving the farm?", worksheet.detailed_lever_guides_r53); end
  def test_detailed_lever_guides_s53; assert_equal("% of crop energy content that is wasted after leaving the farm", worksheet.detailed_lever_guides_s53); end
  def test_detailed_lever_guides_t53; assert_in_delta(0.24, worksheet.detailed_lever_guides_t53, 0.002); end
  def test_detailed_lever_guides_u53; assert_in_delta(0.24, worksheet.detailed_lever_guides_u53, 0.002); end
  def test_detailed_lever_guides_v53; assert_in_delta(0.2, worksheet.detailed_lever_guides_v53, 0.002); end
  def test_detailed_lever_guides_w53; assert_in_delta(0.16, worksheet.detailed_lever_guides_w53, 0.002); end
  def test_detailed_lever_guides_x53; assert_in_delta(0.1, worksheet.detailed_lever_guides_x53, 0.002); end
  def test_detailed_lever_guides_q54; assert_equal("Emissions trajectory", worksheet.detailed_lever_guides_q54); end
  def test_detailed_lever_guides_r54; assert_equal("TO ADD", worksheet.detailed_lever_guides_r54); end
  def test_detailed_lever_guides_s54; assert_equal("Emissions change every year between 2050 and 2100 ", worksheet.detailed_lever_guides_s54); end
  def test_detailed_lever_guides_t54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_t54||0), 0.002); end
  def test_detailed_lever_guides_u54; assert_in_delta(0.0, (worksheet.detailed_lever_guides_u54||0), 0.002); end
  def test_detailed_lever_guides_v54; assert_in_delta(0.3333333333333333, worksheet.detailed_lever_guides_v54, 0.002); end
  def test_detailed_lever_guides_w54; assert_in_delta(0.6666666666666666, worksheet.detailed_lever_guides_w54, 0.002); end
  def test_detailed_lever_guides_x54; assert_in_epsilon(1.16, worksheet.detailed_lever_guides_x54, 0.002); end
  def test_detailed_lever_guides_q55; assert_equal("Atmospheric CO2 fraction", worksheet.detailed_lever_guides_q55); end
  def test_detailed_lever_guides_r55; assert_equal("TO ADD", worksheet.detailed_lever_guides_r55); end
  def test_detailed_lever_guides_s55; assert_equal("By 2100, % of historically -emitted CO2 that remains in atmosphere", worksheet.detailed_lever_guides_s55); end
  def test_detailed_lever_guides_t55; assert_in_delta(0.44, worksheet.detailed_lever_guides_t55, 0.002); end
  def test_detailed_lever_guides_u55; assert_in_delta(0.3, worksheet.detailed_lever_guides_u55, 0.002); end
  def test_detailed_lever_guides_v55; assert_in_delta(0.44, worksheet.detailed_lever_guides_v55, 0.002); end
  def test_detailed_lever_guides_w55; assert_in_delta(0.6, worksheet.detailed_lever_guides_w55, 0.002); end
  def test_detailed_lever_guides_x55; assert_in_delta(0.74, worksheet.detailed_lever_guides_x55, 0.002); end
  def test_detailed_lever_guides_r67; assert_equal("How many more people can travel per vehicle?", worksheet.detailed_lever_guides_r67); end
  def test_detailed_lever_guides_s67; assert_equal("Occupancy (number of people) per average car", worksheet.detailed_lever_guides_s67); end
  def test_detailed_lever_guides_t67; assert_in_epsilon(2.0, worksheet.detailed_lever_guides_t67, 0.002); end
  def test_detailed_lever_guides_u67; assert_equal("TO ADD", worksheet.detailed_lever_guides_u67); end
  def test_detailed_lever_guides_v67; assert_equal("TO ADD", worksheet.detailed_lever_guides_v67); end
  def test_detailed_lever_guides_w67; assert_equal("TO ADD", worksheet.detailed_lever_guides_w67); end
  def test_detailed_lever_guides_x67; assert_equal("TO ADD", worksheet.detailed_lever_guides_x67); end
  def test_user_inputs_h6; assert_equal("IEA \"2DS\" (approx)", worksheet.user_inputs_h6); end
  def test_user_inputs_i6; assert_equal("IEA \"4DS\" (approx)", worksheet.user_inputs_i6); end
  def test_user_inputs_j6; assert_equal("IEA \"6DS\" (approx)", worksheet.user_inputs_j6); end
  def test_user_inputs_k6; assert_equal("Tom Bain example", worksheet.user_inputs_k6); end
  def test_user_inputs_l6; assert_equal("Incumbent technology", worksheet.user_inputs_l6); end
  def test_user_inputs_m6; assert_equal("Minimal CCS", worksheet.user_inputs_m6); end
  def test_user_inputs_n6; assert_equal("No new nuclear", worksheet.user_inputs_n6); end
  def test_user_inputs_o6; assert_equal("Farming failure", worksheet.user_inputs_o6); end
  def test_user_inputs_p6; assert_equal("Healthy eating", worksheet.user_inputs_p6); end
  def test_user_inputs_q6; assert_equal("UCL TIAM 2DS (approx)", worksheet.user_inputs_q6); end
  def test_user_inputs_r6; assert_equal("UCL TIAM 4DS (approx)", worksheet.user_inputs_r6); end
  def test_user_inputs_h7; assert_in_epsilon(2.0, worksheet.user_inputs_h7, 0.002); end
  def test_user_inputs_i7; assert_in_epsilon(2.0, worksheet.user_inputs_i7, 0.002); end
  def test_user_inputs_j7; assert_in_epsilon(2.0, worksheet.user_inputs_j7, 0.002); end
  def test_user_inputs_k7; assert_in_epsilon(2.0, worksheet.user_inputs_k7, 0.002); end
  def test_user_inputs_l7; assert_in_epsilon(2.0, worksheet.user_inputs_l7, 0.002); end
  def test_user_inputs_m7; assert_in_epsilon(2.0, worksheet.user_inputs_m7, 0.002); end
  def test_user_inputs_n7; assert_in_epsilon(2.0, worksheet.user_inputs_n7, 0.002); end
  def test_user_inputs_o7; assert_in_epsilon(2.0, worksheet.user_inputs_o7, 0.002); end
  def test_user_inputs_p7; assert_in_epsilon(2.0, worksheet.user_inputs_p7, 0.002); end
  def test_user_inputs_q7; assert_in_epsilon(2.1, worksheet.user_inputs_q7, 0.002); end
  def test_user_inputs_r7; assert_in_epsilon(2.1, worksheet.user_inputs_r7, 0.002); end
  def test_user_inputs_h8; assert_in_epsilon(2.0, worksheet.user_inputs_h8, 0.002); end
  def test_user_inputs_i8; assert_in_epsilon(2.0, worksheet.user_inputs_i8, 0.002); end
  def test_user_inputs_j8; assert_in_epsilon(2.0, worksheet.user_inputs_j8, 0.002); end
  def test_user_inputs_k8; assert_in_epsilon(2.0, worksheet.user_inputs_k8, 0.002); end
  def test_user_inputs_l8; assert_in_epsilon(2.0, worksheet.user_inputs_l8, 0.002); end
  def test_user_inputs_m8; assert_in_epsilon(2.0, worksheet.user_inputs_m8, 0.002); end
  def test_user_inputs_n8; assert_in_epsilon(2.0, worksheet.user_inputs_n8, 0.002); end
  def test_user_inputs_o8; assert_in_epsilon(2.0, worksheet.user_inputs_o8, 0.002); end
  def test_user_inputs_p8; assert_in_epsilon(2.0, worksheet.user_inputs_p8, 0.002); end
  def test_user_inputs_q8; assert_in_epsilon(2.0, worksheet.user_inputs_q8, 0.002); end
  def test_user_inputs_r8; assert_in_epsilon(2.0, worksheet.user_inputs_r8, 0.002); end
  def test_user_inputs_h9; assert_in_epsilon(2.0, worksheet.user_inputs_h9, 0.002); end
  def test_user_inputs_i9; assert_in_epsilon(2.0, worksheet.user_inputs_i9, 0.002); end
  def test_user_inputs_j9; assert_in_epsilon(2.0, worksheet.user_inputs_j9, 0.002); end
  def test_user_inputs_k9; assert_in_delta(1.0, worksheet.user_inputs_k9, 0.002); end
  def test_user_inputs_l9; assert_in_epsilon(2.0, worksheet.user_inputs_l9, 0.002); end
  def test_user_inputs_m9; assert_in_epsilon(2.0, worksheet.user_inputs_m9, 0.002); end
  def test_user_inputs_n9; assert_in_epsilon(2.0, worksheet.user_inputs_n9, 0.002); end
  def test_user_inputs_o9; assert_in_epsilon(2.0, worksheet.user_inputs_o9, 0.002); end
  def test_user_inputs_p9; assert_in_epsilon(2.0, worksheet.user_inputs_p9, 0.002); end
  def test_user_inputs_q9; assert_in_epsilon(3.2, worksheet.user_inputs_q9, 0.002); end
  def test_user_inputs_r9; assert_in_epsilon(3.0, worksheet.user_inputs_r9, 0.002); end
  def test_user_inputs_h10; assert_in_epsilon(2.0, worksheet.user_inputs_h10, 0.002); end
  def test_user_inputs_i10; assert_in_epsilon(2.0, worksheet.user_inputs_i10, 0.002); end
  def test_user_inputs_j10; assert_in_epsilon(2.0, worksheet.user_inputs_j10, 0.002); end
  def test_user_inputs_k10; assert_in_epsilon(1.5, worksheet.user_inputs_k10, 0.002); end
  def test_user_inputs_l10; assert_in_epsilon(2.0, worksheet.user_inputs_l10, 0.002); end
  def test_user_inputs_m10; assert_in_epsilon(2.0, worksheet.user_inputs_m10, 0.002); end
  def test_user_inputs_n10; assert_in_epsilon(2.0, worksheet.user_inputs_n10, 0.002); end
  def test_user_inputs_o10; assert_in_epsilon(2.0, worksheet.user_inputs_o10, 0.002); end
  def test_user_inputs_p10; assert_in_epsilon(2.0, worksheet.user_inputs_p10, 0.002); end
  def test_user_inputs_q10; assert_in_epsilon(3.5, worksheet.user_inputs_q10, 0.002); end
  def test_user_inputs_r10; assert_in_epsilon(3.3, worksheet.user_inputs_r10, 0.002); end
  def test_user_inputs_h11; assert_in_epsilon(2.8, worksheet.user_inputs_h11, 0.002); end
  def test_user_inputs_i11; assert_in_epsilon(2.0, worksheet.user_inputs_i11, 0.002); end
  def test_user_inputs_j11; assert_in_epsilon(1.9, worksheet.user_inputs_j11, 0.002); end
  def test_user_inputs_k11; assert_in_epsilon(2.5, worksheet.user_inputs_k11, 0.002); end
  def test_user_inputs_l11; assert_in_epsilon(2.5, worksheet.user_inputs_l11, 0.002); end
  def test_user_inputs_m11; assert_in_epsilon(2.0, worksheet.user_inputs_m11, 0.002); end
  def test_user_inputs_n11; assert_in_epsilon(3.1, worksheet.user_inputs_n11, 0.002); end
  def test_user_inputs_o11; assert_in_epsilon(2.0, worksheet.user_inputs_o11, 0.002); end
  def test_user_inputs_p11; assert_in_epsilon(2.8, worksheet.user_inputs_p11, 0.002); end
  def test_user_inputs_q11; assert_in_epsilon(1.2, worksheet.user_inputs_q11, 0.002); end
  def test_user_inputs_r11; assert_in_delta(1.0, worksheet.user_inputs_r11, 0.002); end
  def test_user_inputs_h12; assert_in_epsilon(2.8, worksheet.user_inputs_h12, 0.002); end
  def test_user_inputs_i12; assert_in_epsilon(2.0, worksheet.user_inputs_i12, 0.002); end
  def test_user_inputs_j12; assert_in_epsilon(1.9, worksheet.user_inputs_j12, 0.002); end
  def test_user_inputs_k12; assert_in_delta(1.0, worksheet.user_inputs_k12, 0.002); end
  def test_user_inputs_l12; assert_in_epsilon(2.8, worksheet.user_inputs_l12, 0.002); end
  def test_user_inputs_m12; assert_in_epsilon(2.0, worksheet.user_inputs_m12, 0.002); end
  def test_user_inputs_n12; assert_in_epsilon(3.0, worksheet.user_inputs_n12, 0.002); end
  def test_user_inputs_o12; assert_in_epsilon(2.0, worksheet.user_inputs_o12, 0.002); end
  def test_user_inputs_p12; assert_in_epsilon(2.8, worksheet.user_inputs_p12, 0.002); end
  def test_user_inputs_q12; assert_in_epsilon(1.2, worksheet.user_inputs_q12, 0.002); end
  def test_user_inputs_r12; assert_in_delta(1.0, worksheet.user_inputs_r12, 0.002); end
  def test_user_inputs_h13; assert_in_epsilon(2.8, worksheet.user_inputs_h13, 0.002); end
  def test_user_inputs_i13; assert_in_epsilon(2.0, worksheet.user_inputs_i13, 0.002); end
  def test_user_inputs_j13; assert_in_epsilon(1.9, worksheet.user_inputs_j13, 0.002); end
  def test_user_inputs_k13; assert_in_epsilon(3.0, worksheet.user_inputs_k13, 0.002); end
  def test_user_inputs_l13; assert_in_epsilon(2.8, worksheet.user_inputs_l13, 0.002); end
  def test_user_inputs_m13; assert_in_epsilon(2.8, worksheet.user_inputs_m13, 0.002); end
  def test_user_inputs_n13; assert_in_epsilon(1.3, worksheet.user_inputs_n13, 0.002); end
  def test_user_inputs_o13; assert_in_epsilon(2.8, worksheet.user_inputs_o13, 0.002); end
  def test_user_inputs_p13; assert_in_epsilon(2.8, worksheet.user_inputs_p13, 0.002); end
  def test_user_inputs_q13; assert_in_epsilon(1.2, worksheet.user_inputs_q13, 0.002); end
  def test_user_inputs_r13; assert_in_delta(1.0, worksheet.user_inputs_r13, 0.002); end
  def test_user_inputs_h14; assert_in_epsilon(3.2, worksheet.user_inputs_h14, 0.002); end
  def test_user_inputs_i14; assert_in_epsilon(2.2, worksheet.user_inputs_i14, 0.002); end
  def test_user_inputs_j14; assert_in_epsilon(2.0, worksheet.user_inputs_j14, 0.002); end
  def test_user_inputs_k14; assert_in_epsilon(3.0, worksheet.user_inputs_k14, 0.002); end
  def test_user_inputs_l14; assert_in_epsilon(3.0, worksheet.user_inputs_l14, 0.002); end
  def test_user_inputs_m14; assert_in_epsilon(3.0, worksheet.user_inputs_m14, 0.002); end
  def test_user_inputs_n14; assert_in_epsilon(3.4, worksheet.user_inputs_n14, 0.002); end
  def test_user_inputs_o14; assert_in_epsilon(3.4, worksheet.user_inputs_o14, 0.002); end
  def test_user_inputs_p14; assert_in_epsilon(2.8, worksheet.user_inputs_p14, 0.002); end
  def test_user_inputs_q14; assert_in_epsilon(3.8, worksheet.user_inputs_q14, 0.002); end
  def test_user_inputs_r14; assert_in_epsilon(2.6, worksheet.user_inputs_r14, 0.002); end
  def test_user_inputs_h15; assert_in_epsilon(2.5, worksheet.user_inputs_h15, 0.002); end
  def test_user_inputs_i15; assert_in_epsilon(1.2, worksheet.user_inputs_i15, 0.002); end
  def test_user_inputs_j15; assert_in_delta(1.0, worksheet.user_inputs_j15, 0.002); end
  def test_user_inputs_k15; assert_in_epsilon(3.0, worksheet.user_inputs_k15, 0.002); end
  def test_user_inputs_l15; assert_in_delta(1.0, worksheet.user_inputs_l15, 0.002); end
  def test_user_inputs_m15; assert_in_epsilon(3.0, worksheet.user_inputs_m15, 0.002); end
  def test_user_inputs_n15; assert_in_epsilon(3.4, worksheet.user_inputs_n15, 0.002); end
  def test_user_inputs_o15; assert_in_epsilon(3.2, worksheet.user_inputs_o15, 0.002); end
  def test_user_inputs_p15; assert_in_epsilon(2.5, worksheet.user_inputs_p15, 0.002); end
  def test_user_inputs_q15; assert_in_epsilon(3.7, worksheet.user_inputs_q15, 0.002); end
  def test_user_inputs_r15; assert_in_epsilon(2.5, worksheet.user_inputs_r15, 0.002); end
  def test_user_inputs_h16; assert_in_epsilon(2.0, worksheet.user_inputs_h16, 0.002); end
  def test_user_inputs_i16; assert_in_epsilon(2.0, worksheet.user_inputs_i16, 0.002); end
  def test_user_inputs_j16; assert_in_epsilon(2.0, worksheet.user_inputs_j16, 0.002); end
  def test_user_inputs_k16; assert_in_delta(1.0, worksheet.user_inputs_k16, 0.002); end
  def test_user_inputs_l16; assert_in_epsilon(2.0, worksheet.user_inputs_l16, 0.002); end
  def test_user_inputs_m16; assert_in_epsilon(2.0, worksheet.user_inputs_m16, 0.002); end
  def test_user_inputs_n16; assert_in_epsilon(2.0, worksheet.user_inputs_n16, 0.002); end
  def test_user_inputs_o16; assert_in_epsilon(2.0, worksheet.user_inputs_o16, 0.002); end
  def test_user_inputs_p16; assert_in_epsilon(2.0, worksheet.user_inputs_p16, 0.002); end
  def test_user_inputs_q16; assert_in_epsilon(2.5, worksheet.user_inputs_q16, 0.002); end
  def test_user_inputs_r16; assert_in_epsilon(1.8, worksheet.user_inputs_r16, 0.002); end
  def test_user_inputs_h17; assert_in_epsilon(2.0, worksheet.user_inputs_h17, 0.002); end
  def test_user_inputs_i17; assert_in_epsilon(2.0, worksheet.user_inputs_i17, 0.002); end
  def test_user_inputs_j17; assert_in_epsilon(2.0, worksheet.user_inputs_j17, 0.002); end
  def test_user_inputs_k17; assert_in_delta(1.0, worksheet.user_inputs_k17, 0.002); end
  def test_user_inputs_l17; assert_in_epsilon(2.0, worksheet.user_inputs_l17, 0.002); end
  def test_user_inputs_m17; assert_in_epsilon(2.0, worksheet.user_inputs_m17, 0.002); end
  def test_user_inputs_n17; assert_in_epsilon(2.0, worksheet.user_inputs_n17, 0.002); end
  def test_user_inputs_o17; assert_in_epsilon(2.0, worksheet.user_inputs_o17, 0.002); end
  def test_user_inputs_p17; assert_in_epsilon(2.0, worksheet.user_inputs_p17, 0.002); end
  def test_user_inputs_q17; assert_in_epsilon(2.5, worksheet.user_inputs_q17, 0.002); end
  def test_user_inputs_r17; assert_in_epsilon(2.0, worksheet.user_inputs_r17, 0.002); end
  def test_user_inputs_h18; assert_in_epsilon(2.0, worksheet.user_inputs_h18, 0.002); end
  def test_user_inputs_i18; assert_in_epsilon(2.0, worksheet.user_inputs_i18, 0.002); end
  def test_user_inputs_j18; assert_in_epsilon(2.0, worksheet.user_inputs_j18, 0.002); end
  def test_user_inputs_k18; assert_in_delta(1.0, worksheet.user_inputs_k18, 0.002); end
  def test_user_inputs_l18; assert_in_epsilon(2.0, worksheet.user_inputs_l18, 0.002); end
  def test_user_inputs_m18; assert_in_epsilon(2.0, worksheet.user_inputs_m18, 0.002); end
  def test_user_inputs_n18; assert_in_epsilon(2.0, worksheet.user_inputs_n18, 0.002); end
  def test_user_inputs_o18; assert_in_epsilon(2.0, worksheet.user_inputs_o18, 0.002); end
  def test_user_inputs_p18; assert_in_epsilon(2.0, worksheet.user_inputs_p18, 0.002); end
  def test_user_inputs_q18; assert_in_epsilon(3.0, worksheet.user_inputs_q18, 0.002); end
  def test_user_inputs_r18; assert_in_epsilon(2.5, worksheet.user_inputs_r18, 0.002); end
  def test_user_inputs_h19; assert_in_epsilon(2.9, worksheet.user_inputs_h19, 0.002); end
  def test_user_inputs_i19; assert_in_epsilon(1.9, worksheet.user_inputs_i19, 0.002); end
  def test_user_inputs_j19; assert_in_epsilon(1.6, worksheet.user_inputs_j19, 0.002); end
  def test_user_inputs_k19; assert_in_epsilon(3.0, worksheet.user_inputs_k19, 0.002); end
  def test_user_inputs_l19; assert_in_epsilon(3.0, worksheet.user_inputs_l19, 0.002); end
  def test_user_inputs_m19; assert_in_epsilon(3.1, worksheet.user_inputs_m19, 0.002); end
  def test_user_inputs_n19; assert_in_epsilon(3.3, worksheet.user_inputs_n19, 0.002); end
  def test_user_inputs_o19; assert_in_epsilon(3.3, worksheet.user_inputs_o19, 0.002); end
  def test_user_inputs_p19; assert_in_epsilon(2.8, worksheet.user_inputs_p19, 0.002); end
  def test_user_inputs_q19; assert_in_epsilon(2.5, worksheet.user_inputs_q19, 0.002); end
  def test_user_inputs_r19; assert_in_epsilon(2.0, worksheet.user_inputs_r19, 0.002); end
  def test_user_inputs_h20; assert_in_epsilon(2.9, worksheet.user_inputs_h20, 0.002); end
  def test_user_inputs_i20; assert_in_epsilon(1.8, worksheet.user_inputs_i20, 0.002); end
  def test_user_inputs_j20; assert_in_epsilon(1.5, worksheet.user_inputs_j20, 0.002); end
  def test_user_inputs_k20; assert_in_epsilon(3.0, worksheet.user_inputs_k20, 0.002); end
  def test_user_inputs_l20; assert_in_epsilon(1.5, worksheet.user_inputs_l20, 0.002); end
  def test_user_inputs_m20; assert_in_epsilon(3.1, worksheet.user_inputs_m20, 0.002); end
  def test_user_inputs_n20; assert_in_epsilon(3.3, worksheet.user_inputs_n20, 0.002); end
  def test_user_inputs_o20; assert_in_epsilon(3.3, worksheet.user_inputs_o20, 0.002); end
  def test_user_inputs_p20; assert_in_epsilon(3.0, worksheet.user_inputs_p20, 0.002); end
  def test_user_inputs_q20; assert_in_epsilon(3.8, worksheet.user_inputs_q20, 0.002); end
  def test_user_inputs_r20; assert_in_epsilon(1.5, worksheet.user_inputs_r20, 0.002); end
  def test_user_inputs_h21; assert_in_epsilon(3.0, worksheet.user_inputs_h21, 0.002); end
  def test_user_inputs_i21; assert_in_epsilon(2.5, worksheet.user_inputs_i21, 0.002); end
  def test_user_inputs_j21; assert_in_epsilon(1.6, worksheet.user_inputs_j21, 0.002); end
  def test_user_inputs_k21; assert_in_epsilon(3.0, worksheet.user_inputs_k21, 0.002); end
  def test_user_inputs_l21; assert_in_epsilon(3.0, worksheet.user_inputs_l21, 0.002); end
  def test_user_inputs_m21; assert_in_epsilon(3.1, worksheet.user_inputs_m21, 0.002); end
  def test_user_inputs_n21; assert_in_epsilon(3.3, worksheet.user_inputs_n21, 0.002); end
  def test_user_inputs_o21; assert_in_epsilon(3.3, worksheet.user_inputs_o21, 0.002); end
  def test_user_inputs_p21; assert_in_epsilon(3.0, worksheet.user_inputs_p21, 0.002); end
  def test_user_inputs_q21; assert_in_epsilon(3.0, worksheet.user_inputs_q21, 0.002); end
  def test_user_inputs_r21; assert_in_delta(1.0, worksheet.user_inputs_r21, 0.002); end
  def test_user_inputs_h22; assert_in_epsilon(1.7, worksheet.user_inputs_h22, 0.002); end
  def test_user_inputs_i22; assert_in_epsilon(1.5, worksheet.user_inputs_i22, 0.002); end
  def test_user_inputs_j22; assert_in_epsilon(1.4, worksheet.user_inputs_j22, 0.002); end
  def test_user_inputs_k22; assert_in_epsilon(2.5, worksheet.user_inputs_k22, 0.002); end
  def test_user_inputs_l22; assert_in_epsilon(1.7, worksheet.user_inputs_l22, 0.002); end
  def test_user_inputs_m22; assert_in_epsilon(2.0, worksheet.user_inputs_m22, 0.002); end
  def test_user_inputs_n22; assert_in_epsilon(3.3, worksheet.user_inputs_n22, 0.002); end
  def test_user_inputs_o22; assert_in_epsilon(3.3, worksheet.user_inputs_o22, 0.002); end
  def test_user_inputs_p22; assert_in_epsilon(1.7, worksheet.user_inputs_p22, 0.002); end
  def test_user_inputs_q22; assert_in_epsilon(1.5, worksheet.user_inputs_q22, 0.002); end
  def test_user_inputs_r22; assert_in_epsilon(1.2, worksheet.user_inputs_r22, 0.002); end
  def test_user_inputs_h23; assert_in_epsilon(2.0, worksheet.user_inputs_h23, 0.002); end
  def test_user_inputs_i23; assert_in_epsilon(1.5, worksheet.user_inputs_i23, 0.002); end
  def test_user_inputs_j23; assert_in_epsilon(1.1, worksheet.user_inputs_j23, 0.002); end
  def test_user_inputs_k23; assert_in_epsilon(2.5, worksheet.user_inputs_k23, 0.002); end
  def test_user_inputs_l23; assert_in_epsilon(2.6, worksheet.user_inputs_l23, 0.002); end
  def test_user_inputs_m23; assert_in_epsilon(3.0, worksheet.user_inputs_m23, 0.002); end
  def test_user_inputs_n23; assert_in_epsilon(3.3, worksheet.user_inputs_n23, 0.002); end
  def test_user_inputs_o23; assert_in_epsilon(3.3, worksheet.user_inputs_o23, 0.002); end
  def test_user_inputs_p23; assert_in_epsilon(1.7, worksheet.user_inputs_p23, 0.002); end
  def test_user_inputs_q23; assert_in_epsilon(1.5, worksheet.user_inputs_q23, 0.002); end
  def test_user_inputs_r23; assert_in_delta(1.0, worksheet.user_inputs_r23, 0.002); end
  def test_user_inputs_h24; assert_in_epsilon(3.9, worksheet.user_inputs_h24, 0.002); end
  def test_user_inputs_i24; assert_in_epsilon(2.5, worksheet.user_inputs_i24, 0.002); end
  def test_user_inputs_j24; assert_in_epsilon(1.5, worksheet.user_inputs_j24, 0.002); end
  def test_user_inputs_k24; assert_in_epsilon(3.0, worksheet.user_inputs_k24, 0.002); end
  def test_user_inputs_l24; assert_in_epsilon(2.0, worksheet.user_inputs_l24, 0.002); end
  def test_user_inputs_m24; assert_in_epsilon(3.0, worksheet.user_inputs_m24, 0.002); end
  def test_user_inputs_n24; assert_in_epsilon(3.3, worksheet.user_inputs_n24, 0.002); end
  def test_user_inputs_o24; assert_in_epsilon(3.3, worksheet.user_inputs_o24, 0.002); end
  def test_user_inputs_p24; assert_in_epsilon(2.9, worksheet.user_inputs_p24, 0.002); end
  def test_user_inputs_q24; assert_in_epsilon(3.9, worksheet.user_inputs_q24, 0.002); end
  def test_user_inputs_r24; assert_in_epsilon(1.5, worksheet.user_inputs_r24, 0.002); end
  def test_user_inputs_h25; assert_in_epsilon(2.2, worksheet.user_inputs_h25, 0.002); end
  def test_user_inputs_i25; assert_in_delta(1.0, worksheet.user_inputs_i25, 0.002); end
  def test_user_inputs_j25; assert_in_delta(1.0, worksheet.user_inputs_j25, 0.002); end
  def test_user_inputs_k25; assert_in_epsilon(3.0, worksheet.user_inputs_k25, 0.002); end
  def test_user_inputs_l25; assert_in_epsilon(2.0, worksheet.user_inputs_l25, 0.002); end
  def test_user_inputs_m25; assert_in_epsilon(3.0, worksheet.user_inputs_m25, 0.002); end
  def test_user_inputs_n25; assert_in_epsilon(3.3, worksheet.user_inputs_n25, 0.002); end
  def test_user_inputs_o25; assert_in_epsilon(3.3, worksheet.user_inputs_o25, 0.002); end
  def test_user_inputs_p25; assert_in_epsilon(2.4, worksheet.user_inputs_p25, 0.002); end
  def test_user_inputs_q25; assert_in_epsilon(3.2, worksheet.user_inputs_q25, 0.002); end
  def test_user_inputs_r25; assert_in_epsilon(2.5, worksheet.user_inputs_r25, 0.002); end
  def test_user_inputs_h26; assert_in_epsilon(3.9, worksheet.user_inputs_h26, 0.002); end
  def test_user_inputs_i26; assert_in_epsilon(2.9, worksheet.user_inputs_i26, 0.002); end
  def test_user_inputs_j26; assert_in_epsilon(1.9, worksheet.user_inputs_j26, 0.002); end
  def test_user_inputs_k26; assert_in_epsilon(3.0, worksheet.user_inputs_k26, 0.002); end
  def test_user_inputs_l26; assert_in_epsilon(2.0, worksheet.user_inputs_l26, 0.002); end
  def test_user_inputs_m26; assert_in_epsilon(3.0, worksheet.user_inputs_m26, 0.002); end
  def test_user_inputs_n26; assert_in_epsilon(3.3, worksheet.user_inputs_n26, 0.002); end
  def test_user_inputs_o26; assert_in_epsilon(3.3, worksheet.user_inputs_o26, 0.002); end
  def test_user_inputs_p26; assert_in_epsilon(2.9, worksheet.user_inputs_p26, 0.002); end
  def test_user_inputs_q26; assert_in_epsilon(2.8, worksheet.user_inputs_q26, 0.002); end
  def test_user_inputs_r26; assert_in_epsilon(2.2, worksheet.user_inputs_r26, 0.002); end
  def test_user_inputs_h27; assert_in_epsilon(3.2, worksheet.user_inputs_h27, 0.002); end
  def test_user_inputs_i27; assert_in_epsilon(2.9, worksheet.user_inputs_i27, 0.002); end
  def test_user_inputs_j27; assert_in_epsilon(1.6, worksheet.user_inputs_j27, 0.002); end
  def test_user_inputs_k27; assert_in_epsilon(3.0, worksheet.user_inputs_k27, 0.002); end
  def test_user_inputs_l27; assert_in_epsilon(2.0, worksheet.user_inputs_l27, 0.002); end
  def test_user_inputs_m27; assert_in_epsilon(3.0, worksheet.user_inputs_m27, 0.002); end
  def test_user_inputs_n27; assert_in_epsilon(3.3, worksheet.user_inputs_n27, 0.002); end
  def test_user_inputs_o27; assert_in_epsilon(3.3, worksheet.user_inputs_o27, 0.002); end
  def test_user_inputs_p27; assert_in_epsilon(3.0, worksheet.user_inputs_p27, 0.002); end
  def test_user_inputs_q27; assert_in_epsilon(4.0, worksheet.user_inputs_q27, 0.002); end
  def test_user_inputs_r27; assert_in_epsilon(2.0, worksheet.user_inputs_r27, 0.002); end
  def test_user_inputs_h28; assert_in_epsilon(2.7, worksheet.user_inputs_h28, 0.002); end
  def test_user_inputs_i28; assert_in_epsilon(1.1, worksheet.user_inputs_i28, 0.002); end
  def test_user_inputs_j28; assert_in_delta(1.0, worksheet.user_inputs_j28, 0.002); end
  def test_user_inputs_k28; assert_in_delta(1.0, worksheet.user_inputs_k28, 0.002); end
  def test_user_inputs_l28; assert_in_epsilon(3.5, worksheet.user_inputs_l28, 0.002); end
  def test_user_inputs_m28; assert_in_epsilon(1.3, worksheet.user_inputs_m28, 0.002); end
  def test_user_inputs_n28; assert_in_epsilon(3.0, worksheet.user_inputs_n28, 0.002); end
  def test_user_inputs_o28; assert_in_epsilon(3.1, worksheet.user_inputs_o28, 0.002); end
  def test_user_inputs_p28; assert_in_epsilon(2.7, worksheet.user_inputs_p28, 0.002); end
  def test_user_inputs_q28; assert_in_epsilon(3.8, worksheet.user_inputs_q28, 0.002); end
  def test_user_inputs_r28; assert_in_delta(1.0, worksheet.user_inputs_r28, 0.002); end
  def test_user_inputs_h29; assert_in_epsilon(1.8, worksheet.user_inputs_h29, 0.002); end
  def test_user_inputs_i29; assert_in_epsilon(1.8, worksheet.user_inputs_i29, 0.002); end
  def test_user_inputs_j29; assert_in_epsilon(1.8, worksheet.user_inputs_j29, 0.002); end
  def test_user_inputs_k29; assert_in_epsilon(3.0, worksheet.user_inputs_k29, 0.002); end
  def test_user_inputs_l29; assert_in_epsilon(2.1, worksheet.user_inputs_l29, 0.002); end
  def test_user_inputs_m29; assert_in_epsilon(3.0, worksheet.user_inputs_m29, 0.002); end
  def test_user_inputs_n29; assert_in_epsilon(3.0, worksheet.user_inputs_n29, 0.002); end
  def test_user_inputs_o29; assert_in_epsilon(3.3, worksheet.user_inputs_o29, 0.002); end
  def test_user_inputs_p29; assert_in_epsilon(2.1, worksheet.user_inputs_p29, 0.002); end
  def test_user_inputs_q29; assert_in_epsilon(3.1, worksheet.user_inputs_q29, 0.002); end
  def test_user_inputs_r29; assert_in_delta(1.0, worksheet.user_inputs_r29, 0.002); end
  def test_user_inputs_h30; assert_in_epsilon(3.6, worksheet.user_inputs_h30, 0.002); end
  def test_user_inputs_i30; assert_in_epsilon(2.0, worksheet.user_inputs_i30, 0.002); end
  def test_user_inputs_j30; assert_in_epsilon(1.6, worksheet.user_inputs_j30, 0.002); end
  def test_user_inputs_k30; assert_in_epsilon(3.0, worksheet.user_inputs_k30, 0.002); end
  def test_user_inputs_l30; assert_in_epsilon(3.3, worksheet.user_inputs_l30, 0.002); end
  def test_user_inputs_m30; assert_in_epsilon(3.0, worksheet.user_inputs_m30, 0.002); end
  def test_user_inputs_n30; assert_in_epsilon(3.3, worksheet.user_inputs_n30, 0.002); end
  def test_user_inputs_o30; assert_in_epsilon(3.3, worksheet.user_inputs_o30, 0.002); end
  def test_user_inputs_p30; assert_in_epsilon(3.3, worksheet.user_inputs_p30, 0.002); end
  def test_user_inputs_q30; assert_in_delta(1.0, worksheet.user_inputs_q30, 0.002); end
  def test_user_inputs_r30; assert_in_epsilon(2.1, worksheet.user_inputs_r30, 0.002); end
  def test_user_inputs_h31; assert_in_epsilon(2.5, worksheet.user_inputs_h31, 0.002); end
  def test_user_inputs_i31; assert_in_epsilon(1.2, worksheet.user_inputs_i31, 0.002); end
  def test_user_inputs_j31; assert_in_epsilon(1.2, worksheet.user_inputs_j31, 0.002); end
  def test_user_inputs_k31; assert_in_delta(1.0, worksheet.user_inputs_k31, 0.002); end
  def test_user_inputs_l31; assert_in_epsilon(3.5, worksheet.user_inputs_l31, 0.002); end
  def test_user_inputs_m31; assert_in_epsilon(1.3, worksheet.user_inputs_m31, 0.002); end
  def test_user_inputs_n31; assert_in_epsilon(2.6, worksheet.user_inputs_n31, 0.002); end
  def test_user_inputs_o31; assert_in_epsilon(3.0, worksheet.user_inputs_o31, 0.002); end
  def test_user_inputs_p31; assert_in_epsilon(2.7, worksheet.user_inputs_p31, 0.002); end
  def test_user_inputs_q31; assert_in_epsilon(2.1, worksheet.user_inputs_q31, 0.002); end
  def test_user_inputs_r31; assert_in_delta(1.0, worksheet.user_inputs_r31, 0.002); end
  def test_user_inputs_h32; assert_in_epsilon(2.8, worksheet.user_inputs_h32, 0.002); end
  def test_user_inputs_i32; assert_in_epsilon(2.3, worksheet.user_inputs_i32, 0.002); end
  def test_user_inputs_j32; assert_in_epsilon(1.9, worksheet.user_inputs_j32, 0.002); end
  def test_user_inputs_k32; assert_in_epsilon(2.0, worksheet.user_inputs_k32, 0.002); end
  def test_user_inputs_l32; assert_in_epsilon(2.0, worksheet.user_inputs_l32, 0.002); end
  def test_user_inputs_m32; assert_in_epsilon(2.5, worksheet.user_inputs_m32, 0.002); end
  def test_user_inputs_n32; assert_in_epsilon(1.6, worksheet.user_inputs_n32, 0.002); end
  def test_user_inputs_o32; assert_in_epsilon(2.0, worksheet.user_inputs_o32, 0.002); end
  def test_user_inputs_p32; assert_in_epsilon(3.1, worksheet.user_inputs_p32, 0.002); end
  def test_user_inputs_q32; assert_in_epsilon(3.2, worksheet.user_inputs_q32, 0.002); end
  def test_user_inputs_r32; assert_in_epsilon(2.2, worksheet.user_inputs_r32, 0.002); end
  def test_user_inputs_h33; assert_in_epsilon(2.2, worksheet.user_inputs_h33, 0.002); end
  def test_user_inputs_i33; assert_in_epsilon(2.0, worksheet.user_inputs_i33, 0.002); end
  def test_user_inputs_j33; assert_in_epsilon(1.6, worksheet.user_inputs_j33, 0.002); end
  def test_user_inputs_k33; assert_in_epsilon(3.0, worksheet.user_inputs_k33, 0.002); end
  def test_user_inputs_l33; assert_in_epsilon(2.0, worksheet.user_inputs_l33, 0.002); end
  def test_user_inputs_m33; assert_in_epsilon(2.8, worksheet.user_inputs_m33, 0.002); end
  def test_user_inputs_n33; assert_in_epsilon(3.2, worksheet.user_inputs_n33, 0.002); end
  def test_user_inputs_o33; assert_in_epsilon(2.1, worksheet.user_inputs_o33, 0.002); end
  def test_user_inputs_p33; assert_in_epsilon(2.4, worksheet.user_inputs_p33, 0.002); end
  def test_user_inputs_q33; assert_in_epsilon(1.8, worksheet.user_inputs_q33, 0.002); end
  def test_user_inputs_r33; assert_in_epsilon(1.2, worksheet.user_inputs_r33, 0.002); end
  def test_user_inputs_h34; assert_in_epsilon(2.8, worksheet.user_inputs_h34, 0.002); end
  def test_user_inputs_i34; assert_in_epsilon(2.2, worksheet.user_inputs_i34, 0.002); end
  def test_user_inputs_j34; assert_in_epsilon(1.9, worksheet.user_inputs_j34, 0.002); end
  def test_user_inputs_k34; assert_in_epsilon(1.5, worksheet.user_inputs_k34, 0.002); end
  def test_user_inputs_l34; assert_in_delta(1.0, worksheet.user_inputs_l34, 0.002); end
  def test_user_inputs_m34; assert_in_epsilon(2.8, worksheet.user_inputs_m34, 0.002); end
  def test_user_inputs_n34; assert_in_epsilon(1.6, worksheet.user_inputs_n34, 0.002); end
  def test_user_inputs_o34; assert_in_epsilon(1.4, worksheet.user_inputs_o34, 0.002); end
  def test_user_inputs_p34; assert_in_epsilon(2.8, worksheet.user_inputs_p34, 0.002); end
  def test_user_inputs_q34; assert_in_epsilon(2.5, worksheet.user_inputs_q34, 0.002); end
  def test_user_inputs_r34; assert_in_delta(1.0, worksheet.user_inputs_r34, 0.002); end
  def test_user_inputs_h35; assert_in_epsilon(2.6, worksheet.user_inputs_h35, 0.002); end
  def test_user_inputs_i35; assert_in_epsilon(1.9, worksheet.user_inputs_i35, 0.002); end
  def test_user_inputs_j35; assert_in_epsilon(1.4, worksheet.user_inputs_j35, 0.002); end
  def test_user_inputs_k35; assert_in_delta(1.0, worksheet.user_inputs_k35, 0.002); end
  def test_user_inputs_l35; assert_in_delta(1.0, worksheet.user_inputs_l35, 0.002); end
  def test_user_inputs_m35; assert_in_epsilon(2.5, worksheet.user_inputs_m35, 0.002); end
  def test_user_inputs_n35; assert_in_epsilon(1.1, worksheet.user_inputs_n35, 0.002); end
  def test_user_inputs_o35; assert_in_epsilon(2.0, worksheet.user_inputs_o35, 0.002); end
  def test_user_inputs_p35; assert_in_epsilon(2.6, worksheet.user_inputs_p35, 0.002); end
  def test_user_inputs_q35; assert_in_delta(1.0, worksheet.user_inputs_q35, 0.002); end
  def test_user_inputs_r35; assert_in_delta(1.0, worksheet.user_inputs_r35, 0.002); end
  def test_user_inputs_h36; assert_in_epsilon(2.4, worksheet.user_inputs_h36, 0.002); end
  def test_user_inputs_i36; assert_in_epsilon(1.9, worksheet.user_inputs_i36, 0.002); end
  def test_user_inputs_j36; assert_in_epsilon(1.4, worksheet.user_inputs_j36, 0.002); end
  def test_user_inputs_k36; assert_in_epsilon(3.0, worksheet.user_inputs_k36, 0.002); end
  def test_user_inputs_l36; assert_in_delta(1.0, worksheet.user_inputs_l36, 0.002); end
  def test_user_inputs_m36; assert_in_epsilon(2.8, worksheet.user_inputs_m36, 0.002); end
  def test_user_inputs_n36; assert_in_epsilon(3.2, worksheet.user_inputs_n36, 0.002); end
  def test_user_inputs_o36; assert_in_epsilon(2.6, worksheet.user_inputs_o36, 0.002); end
  def test_user_inputs_p36; assert_in_epsilon(2.7, worksheet.user_inputs_p36, 0.002); end
  def test_user_inputs_q36; assert_in_epsilon(3.5, worksheet.user_inputs_q36, 0.002); end
  def test_user_inputs_r36; assert_in_epsilon(2.5, worksheet.user_inputs_r36, 0.002); end
  def test_user_inputs_h37; assert_in_epsilon(2.0, worksheet.user_inputs_h37, 0.002); end
  def test_user_inputs_i37; assert_in_epsilon(1.6, worksheet.user_inputs_i37, 0.002); end
  def test_user_inputs_j37; assert_in_epsilon(1.4, worksheet.user_inputs_j37, 0.002); end
  def test_user_inputs_k37; assert_in_epsilon(1.5, worksheet.user_inputs_k37, 0.002); end
  def test_user_inputs_l37; assert_in_delta(1.0, worksheet.user_inputs_l37, 0.002); end
  def test_user_inputs_m37; assert_in_epsilon(2.8, worksheet.user_inputs_m37, 0.002); end
  def test_user_inputs_n37; assert_in_delta(1.0, worksheet.user_inputs_n37, 0.002); end
  def test_user_inputs_o37; assert_in_epsilon(2.6, worksheet.user_inputs_o37, 0.002); end
  def test_user_inputs_p37; assert_in_epsilon(2.0, worksheet.user_inputs_p37, 0.002); end
  def test_user_inputs_q37; assert_in_epsilon(4.0, worksheet.user_inputs_q37, 0.002); end
  def test_user_inputs_r37; assert_in_epsilon(1.6, worksheet.user_inputs_r37, 0.002); end
  def test_user_inputs_h38; assert_in_epsilon(2.5, worksheet.user_inputs_h38, 0.002); end
  def test_user_inputs_i38; assert_in_epsilon(1.8, worksheet.user_inputs_i38, 0.002); end
  def test_user_inputs_j38; assert_in_epsilon(1.5, worksheet.user_inputs_j38, 0.002); end
  def test_user_inputs_k38; assert_in_epsilon(2.5, worksheet.user_inputs_k38, 0.002); end
  def test_user_inputs_l38; assert_in_delta(1.0, worksheet.user_inputs_l38, 0.002); end
  def test_user_inputs_m38; assert_in_epsilon(2.9, worksheet.user_inputs_m38, 0.002); end
  def test_user_inputs_n38; assert_in_epsilon(3.0, worksheet.user_inputs_n38, 0.002); end
  def test_user_inputs_o38; assert_in_epsilon(2.6, worksheet.user_inputs_o38, 0.002); end
  def test_user_inputs_p38; assert_in_epsilon(2.5, worksheet.user_inputs_p38, 0.002); end
  def test_user_inputs_q38; assert_in_delta(1.0, worksheet.user_inputs_q38, 0.002); end
  def test_user_inputs_r38; assert_in_delta(1.0, worksheet.user_inputs_r38, 0.002); end
  def test_user_inputs_h39; assert_in_epsilon(2.9, worksheet.user_inputs_h39, 0.002); end
  def test_user_inputs_i39; assert_in_epsilon(2.9, worksheet.user_inputs_i39, 0.002); end
  def test_user_inputs_j39; assert_in_epsilon(2.9, worksheet.user_inputs_j39, 0.002); end
  def test_user_inputs_k39; assert_in_epsilon(2.0, worksheet.user_inputs_k39, 0.002); end
  def test_user_inputs_l39; assert_in_epsilon(2.5, worksheet.user_inputs_l39, 0.002); end
  def test_user_inputs_m39; assert_in_epsilon(2.5, worksheet.user_inputs_m39, 0.002); end
  def test_user_inputs_n39; assert_in_epsilon(2.5, worksheet.user_inputs_n39, 0.002); end
  def test_user_inputs_o39; assert_in_epsilon(2.5, worksheet.user_inputs_o39, 0.002); end
  def test_user_inputs_p39; assert_in_epsilon(3.9, worksheet.user_inputs_p39, 0.002); end
  def test_user_inputs_q39; assert_in_epsilon(3.0, worksheet.user_inputs_q39, 0.002); end
  def test_user_inputs_r39; assert_in_epsilon(2.5, worksheet.user_inputs_r39, 0.002); end
  def test_user_inputs_h40; assert_in_epsilon(1.9, worksheet.user_inputs_h40, 0.002); end
  def test_user_inputs_i40; assert_in_epsilon(1.9, worksheet.user_inputs_i40, 0.002); end
  def test_user_inputs_j40; assert_in_epsilon(1.8, worksheet.user_inputs_j40, 0.002); end
  def test_user_inputs_k40; assert_in_epsilon(1.6, worksheet.user_inputs_k40, 0.002); end
  def test_user_inputs_l40; assert_in_epsilon(1.9, worksheet.user_inputs_l40, 0.002); end
  def test_user_inputs_m40; assert_in_epsilon(1.9, worksheet.user_inputs_m40, 0.002); end
  def test_user_inputs_n40; assert_in_epsilon(1.9, worksheet.user_inputs_n40, 0.002); end
  def test_user_inputs_o40; assert_in_epsilon(2.5, worksheet.user_inputs_o40, 0.002); end
  def test_user_inputs_p40; assert_in_epsilon(3.0, worksheet.user_inputs_p40, 0.002); end
  def test_user_inputs_q40; assert_in_epsilon(2.5, worksheet.user_inputs_q40, 0.002); end
  def test_user_inputs_r40; assert_in_epsilon(2.5, worksheet.user_inputs_r40, 0.002); end
  def test_user_inputs_h41; assert_in_epsilon(1.9, worksheet.user_inputs_h41, 0.002); end
  def test_user_inputs_i41; assert_in_epsilon(1.9, worksheet.user_inputs_i41, 0.002); end
  def test_user_inputs_j41; assert_in_epsilon(1.8, worksheet.user_inputs_j41, 0.002); end
  def test_user_inputs_k41; assert_in_epsilon(3.0, worksheet.user_inputs_k41, 0.002); end
  def test_user_inputs_l41; assert_in_epsilon(1.9, worksheet.user_inputs_l41, 0.002); end
  def test_user_inputs_m41; assert_in_epsilon(1.9, worksheet.user_inputs_m41, 0.002); end
  def test_user_inputs_n41; assert_in_epsilon(3.0, worksheet.user_inputs_n41, 0.002); end
  def test_user_inputs_o41; assert_in_epsilon(2.8, worksheet.user_inputs_o41, 0.002); end
  def test_user_inputs_p41; assert_in_epsilon(3.0, worksheet.user_inputs_p41, 0.002); end
  def test_user_inputs_q41; assert_in_epsilon(2.5, worksheet.user_inputs_q41, 0.002); end
  def test_user_inputs_r41; assert_in_epsilon(2.5, worksheet.user_inputs_r41, 0.002); end
  def test_user_inputs_h42; assert_in_epsilon(2.2, worksheet.user_inputs_h42, 0.002); end
  def test_user_inputs_i42; assert_in_epsilon(2.1, worksheet.user_inputs_i42, 0.002); end
  def test_user_inputs_j42; assert_in_epsilon(2.0, worksheet.user_inputs_j42, 0.002); end
  def test_user_inputs_k42; assert_in_epsilon(2.6, worksheet.user_inputs_k42, 0.002); end
  def test_user_inputs_l42; assert_in_epsilon(3.0, worksheet.user_inputs_l42, 0.002); end
  def test_user_inputs_m42; assert_in_epsilon(2.4, worksheet.user_inputs_m42, 0.002); end
  def test_user_inputs_n42; assert_in_epsilon(1.5, worksheet.user_inputs_n42, 0.002); end
  def test_user_inputs_o42; assert_in_epsilon(1.6, worksheet.user_inputs_o42, 0.002); end
  def test_user_inputs_p42; assert_in_epsilon(2.0, worksheet.user_inputs_p42, 0.002); end
  def test_user_inputs_q42; assert_in_epsilon(2.0, worksheet.user_inputs_q42, 0.002); end
  def test_user_inputs_r42; assert_in_epsilon(2.0, worksheet.user_inputs_r42, 0.002); end
  def test_user_inputs_h43; assert_in_epsilon(2.2, worksheet.user_inputs_h43, 0.002); end
  def test_user_inputs_i43; assert_in_epsilon(2.0, worksheet.user_inputs_i43, 0.002); end
  def test_user_inputs_j43; assert_in_epsilon(2.0, worksheet.user_inputs_j43, 0.002); end
  def test_user_inputs_k43; assert_in_epsilon(2.8, worksheet.user_inputs_k43, 0.002); end
  def test_user_inputs_l43; assert_in_epsilon(3.0, worksheet.user_inputs_l43, 0.002); end
  def test_user_inputs_m43; assert_in_epsilon(2.4, worksheet.user_inputs_m43, 0.002); end
  def test_user_inputs_n43; assert_in_epsilon(1.8, worksheet.user_inputs_n43, 0.002); end
  def test_user_inputs_o43; assert_in_epsilon(2.2, worksheet.user_inputs_o43, 0.002); end
  def test_user_inputs_p43; assert_in_epsilon(2.0, worksheet.user_inputs_p43, 0.002); end
  def test_user_inputs_q43; assert_in_epsilon(2.0, worksheet.user_inputs_q43, 0.002); end
  def test_user_inputs_r43; assert_in_delta(1.0, worksheet.user_inputs_r43, 0.002); end
  def test_user_inputs_h44; assert_in_epsilon(2.2, worksheet.user_inputs_h44, 0.002); end
  def test_user_inputs_i44; assert_in_epsilon(2.0, worksheet.user_inputs_i44, 0.002); end
  def test_user_inputs_j44; assert_in_epsilon(2.0, worksheet.user_inputs_j44, 0.002); end
  def test_user_inputs_k44; assert_in_delta(1.0, worksheet.user_inputs_k44, 0.002); end
  def test_user_inputs_l44; assert_in_epsilon(2.5, worksheet.user_inputs_l44, 0.002); end
  def test_user_inputs_m44; assert_in_epsilon(2.4, worksheet.user_inputs_m44, 0.002); end
  def test_user_inputs_n44; assert_in_epsilon(1.5, worksheet.user_inputs_n44, 0.002); end
  def test_user_inputs_o44; assert_in_epsilon(1.3, worksheet.user_inputs_o44, 0.002); end
  def test_user_inputs_p44; assert_in_epsilon(2.0, worksheet.user_inputs_p44, 0.002); end
  def test_user_inputs_q44; assert_in_epsilon(2.0, worksheet.user_inputs_q44, 0.002); end
  def test_user_inputs_r44; assert_in_epsilon(2.0, worksheet.user_inputs_r44, 0.002); end
  def test_user_inputs_h45; assert_in_epsilon(2.2, worksheet.user_inputs_h45, 0.002); end
  def test_user_inputs_i45; assert_in_epsilon(2.0, worksheet.user_inputs_i45, 0.002); end
  def test_user_inputs_j45; assert_in_epsilon(2.0, worksheet.user_inputs_j45, 0.002); end
  def test_user_inputs_k45; assert_in_epsilon(3.0, worksheet.user_inputs_k45, 0.002); end
  def test_user_inputs_l45; assert_in_epsilon(2.5, worksheet.user_inputs_l45, 0.002); end
  def test_user_inputs_m45; assert_in_epsilon(2.4, worksheet.user_inputs_m45, 0.002); end
  def test_user_inputs_n45; assert_in_epsilon(1.5, worksheet.user_inputs_n45, 0.002); end
  def test_user_inputs_o45; assert_in_epsilon(1.3, worksheet.user_inputs_o45, 0.002); end
  def test_user_inputs_p45; assert_in_epsilon(2.0, worksheet.user_inputs_p45, 0.002); end
  def test_user_inputs_q45; assert_in_epsilon(2.0, worksheet.user_inputs_q45, 0.002); end
  def test_user_inputs_r45; assert_in_epsilon(2.0, worksheet.user_inputs_r45, 0.002); end
  def test_user_inputs_h46; assert_in_epsilon(2.3, worksheet.user_inputs_h46, 0.002); end
  def test_user_inputs_i46; assert_in_epsilon(2.3, worksheet.user_inputs_i46, 0.002); end
  def test_user_inputs_j46; assert_in_epsilon(2.3, worksheet.user_inputs_j46, 0.002); end
  def test_user_inputs_k46; assert_in_epsilon(2.6, worksheet.user_inputs_k46, 0.002); end
  def test_user_inputs_l46; assert_in_epsilon(2.5, worksheet.user_inputs_l46, 0.002); end
  def test_user_inputs_m46; assert_in_epsilon(1.8, worksheet.user_inputs_m46, 0.002); end
  def test_user_inputs_n46; assert_in_epsilon(1.3, worksheet.user_inputs_n46, 0.002); end
  def test_user_inputs_o46; assert_in_epsilon(1.2, worksheet.user_inputs_o46, 0.002); end
  def test_user_inputs_p46; assert_in_epsilon(1.8, worksheet.user_inputs_p46, 0.002); end
  def test_user_inputs_q46; assert_in_epsilon(2.9, worksheet.user_inputs_q46, 0.002); end
  def test_user_inputs_r46; assert_in_delta(1.0, worksheet.user_inputs_r46, 0.002); end
  def test_user_inputs_h47; assert_in_epsilon(3.3, worksheet.user_inputs_h47, 0.002); end
  def test_user_inputs_i47; assert_in_epsilon(2.1, worksheet.user_inputs_i47, 0.002); end
  def test_user_inputs_j47; assert_in_epsilon(2.0, worksheet.user_inputs_j47, 0.002); end
  def test_user_inputs_k47; assert_in_epsilon(3.0, worksheet.user_inputs_k47, 0.002); end
  def test_user_inputs_l47; assert_in_epsilon(2.5, worksheet.user_inputs_l47, 0.002); end
  def test_user_inputs_m47; assert_in_epsilon(2.0, worksheet.user_inputs_m47, 0.002); end
  def test_user_inputs_n47; assert_in_epsilon(3.0, worksheet.user_inputs_n47, 0.002); end
  def test_user_inputs_o47; assert_in_epsilon(2.0, worksheet.user_inputs_o47, 0.002); end
  def test_user_inputs_p47; assert_in_epsilon(2.0, worksheet.user_inputs_p47, 0.002); end
  def test_user_inputs_q47; assert_in_epsilon(2.0, worksheet.user_inputs_q47, 0.002); end
  def test_user_inputs_r47; assert_in_epsilon(2.0, worksheet.user_inputs_r47, 0.002); end
  def test_user_inputs_h48; assert_in_epsilon(2.0, worksheet.user_inputs_h48, 0.002); end
  def test_user_inputs_i48; assert_in_epsilon(1.6, worksheet.user_inputs_i48, 0.002); end
  def test_user_inputs_j48; assert_in_epsilon(3.9, worksheet.user_inputs_j48, 0.002); end
  def test_user_inputs_k48; assert_in_epsilon(1.3, worksheet.user_inputs_k48, 0.002); end
  def test_user_inputs_l48; assert_in_epsilon(2.0, worksheet.user_inputs_l48, 0.002); end
  def test_user_inputs_m48; assert_in_epsilon(1.2, worksheet.user_inputs_m48, 0.002); end
  def test_user_inputs_n48; assert_in_delta(1.0, worksheet.user_inputs_n48, 0.002); end
  def test_user_inputs_o48; assert_in_epsilon(1.5, worksheet.user_inputs_o48, 0.002); end
  def test_user_inputs_p48; assert_in_epsilon(1.2, worksheet.user_inputs_p48, 0.002); end
  def test_user_inputs_q48; assert_in_delta(1.0, worksheet.user_inputs_q48, 0.002); end
  def test_user_inputs_r48; assert_in_delta(1.0, worksheet.user_inputs_r48, 0.002); end
  def test_user_inputs_h49; assert_in_delta(1.0, worksheet.user_inputs_h49, 0.002); end
  def test_user_inputs_i49; assert_in_delta(1.0, worksheet.user_inputs_i49, 0.002); end
  def test_user_inputs_j49; assert_in_delta(1.0, worksheet.user_inputs_j49, 0.002); end
  def test_user_inputs_k49; assert_in_delta(1.0, worksheet.user_inputs_k49, 0.002); end
  def test_user_inputs_l49; assert_in_delta(1.0, worksheet.user_inputs_l49, 0.002); end
  def test_user_inputs_m49; assert_in_delta(1.0, worksheet.user_inputs_m49, 0.002); end
  def test_user_inputs_n49; assert_in_delta(1.0, worksheet.user_inputs_n49, 0.002); end
  def test_user_inputs_o49; assert_in_delta(1.0, worksheet.user_inputs_o49, 0.002); end
  def test_user_inputs_p49; assert_in_delta(1.0, worksheet.user_inputs_p49, 0.002); end
  def test_user_inputs_q49; assert_in_delta(1.0, worksheet.user_inputs_q49, 0.002); end
  def test_user_inputs_r49; assert_in_delta(1.0, worksheet.user_inputs_r49, 0.002); end
  def test_user_inputs_h50; assert_in_delta(1.0, worksheet.user_inputs_h50, 0.002); end
  def test_user_inputs_i50; assert_in_delta(1.0, worksheet.user_inputs_i50, 0.002); end
  def test_user_inputs_j50; assert_in_delta(1.0, worksheet.user_inputs_j50, 0.002); end
  def test_user_inputs_k50; assert_in_delta(1.0, worksheet.user_inputs_k50, 0.002); end
  def test_user_inputs_l50; assert_in_delta(1.0, worksheet.user_inputs_l50, 0.002); end
  def test_user_inputs_m50; assert_in_delta(1.0, worksheet.user_inputs_m50, 0.002); end
  def test_user_inputs_n50; assert_in_delta(1.0, worksheet.user_inputs_n50, 0.002); end
  def test_user_inputs_o50; assert_in_delta(1.0, worksheet.user_inputs_o50, 0.002); end
  def test_user_inputs_p50; assert_in_delta(1.0, worksheet.user_inputs_p50, 0.002); end
  def test_user_inputs_q50; assert_in_delta(1.0, worksheet.user_inputs_q50, 0.002); end
  def test_user_inputs_r50; assert_in_delta(1.0, worksheet.user_inputs_r50, 0.002); end
  def test_user_inputs_h51; assert_in_delta(1.0, worksheet.user_inputs_h51, 0.002); end
  def test_user_inputs_i51; assert_in_delta(1.0, worksheet.user_inputs_i51, 0.002); end
  def test_user_inputs_j51; assert_in_delta(1.0, worksheet.user_inputs_j51, 0.002); end
  def test_user_inputs_k51; assert_in_delta(1.0, worksheet.user_inputs_k51, 0.002); end
  def test_user_inputs_l51; assert_in_delta(1.0, worksheet.user_inputs_l51, 0.002); end
  def test_user_inputs_m51; assert_in_delta(1.0, worksheet.user_inputs_m51, 0.002); end
  def test_user_inputs_n51; assert_in_delta(1.0, worksheet.user_inputs_n51, 0.002); end
  def test_user_inputs_o51; assert_in_delta(1.0, worksheet.user_inputs_o51, 0.002); end
  def test_user_inputs_p51; assert_in_delta(1.0, worksheet.user_inputs_p51, 0.002); end
  def test_user_inputs_q51; assert_in_delta(1.0, worksheet.user_inputs_q51, 0.002); end
  def test_user_inputs_r51; assert_in_delta(1.0, worksheet.user_inputs_r51, 0.002); end
  def test_user_inputs_h52; assert_in_delta(1.0, worksheet.user_inputs_h52, 0.002); end
  def test_user_inputs_i52; assert_in_delta(1.0, worksheet.user_inputs_i52, 0.002); end
  def test_user_inputs_j52; assert_in_delta(1.0, worksheet.user_inputs_j52, 0.002); end
  def test_user_inputs_k52; assert_in_delta(1.0, worksheet.user_inputs_k52, 0.002); end
  def test_user_inputs_l52; assert_in_delta(1.0, worksheet.user_inputs_l52, 0.002); end
  def test_user_inputs_m52; assert_in_delta(1.0, worksheet.user_inputs_m52, 0.002); end
  def test_user_inputs_n52; assert_in_delta(1.0, worksheet.user_inputs_n52, 0.002); end
  def test_user_inputs_o52; assert_in_delta(1.0, worksheet.user_inputs_o52, 0.002); end
  def test_user_inputs_p52; assert_in_delta(1.0, worksheet.user_inputs_p52, 0.002); end
  def test_user_inputs_q52; assert_in_delta(1.0, worksheet.user_inputs_q52, 0.002); end
  def test_user_inputs_r52; assert_in_delta(1.0, worksheet.user_inputs_r52, 0.002); end
  def test_user_inputs_h53; assert_in_delta(1.0, worksheet.user_inputs_h53, 0.002); end
  def test_user_inputs_i53; assert_in_delta(1.0, worksheet.user_inputs_i53, 0.002); end
  def test_user_inputs_j53; assert_in_delta(1.0, worksheet.user_inputs_j53, 0.002); end
  def test_user_inputs_k53; assert_in_delta(1.0, worksheet.user_inputs_k53, 0.002); end
  def test_user_inputs_l53; assert_in_delta(1.0, worksheet.user_inputs_l53, 0.002); end
  def test_user_inputs_m53; assert_in_delta(1.0, worksheet.user_inputs_m53, 0.002); end
  def test_user_inputs_n53; assert_in_delta(1.0, worksheet.user_inputs_n53, 0.002); end
  def test_user_inputs_o53; assert_in_delta(1.0, worksheet.user_inputs_o53, 0.002); end
  def test_user_inputs_p53; assert_in_delta(1.0, worksheet.user_inputs_p53, 0.002); end
  def test_user_inputs_q53; assert_in_delta(1.0, worksheet.user_inputs_q53, 0.002); end
  def test_user_inputs_r53; assert_in_delta(1.0, worksheet.user_inputs_r53, 0.002); end
  def test_user_inputs_h54; assert_in_epsilon(2.3, worksheet.user_inputs_h54, 0.002); end
  def test_user_inputs_i54; assert_in_epsilon(1.5, worksheet.user_inputs_i54, 0.002); end
  def test_user_inputs_j54; assert_in_epsilon(1.3, worksheet.user_inputs_j54, 0.002); end
  def test_user_inputs_k54; assert_in_epsilon(3.0, worksheet.user_inputs_k54, 0.002); end
  def test_user_inputs_l54; assert_in_epsilon(2.5, worksheet.user_inputs_l54, 0.002); end
  def test_user_inputs_m54; assert_in_epsilon(3.0, worksheet.user_inputs_m54, 0.002); end
  def test_user_inputs_n54; assert_in_epsilon(2.5, worksheet.user_inputs_n54, 0.002); end
  def test_user_inputs_o54; assert_in_epsilon(2.9, worksheet.user_inputs_o54, 0.002); end
  def test_user_inputs_p54; assert_in_epsilon(1.3, worksheet.user_inputs_p54, 0.002); end
  def test_user_inputs_q54; assert_in_epsilon(2.3, worksheet.user_inputs_q54, 0.002); end
  def test_user_inputs_r54; assert_in_delta(1.0, worksheet.user_inputs_r54, 0.002); end
  def test_user_inputs_h55; assert_in_epsilon(2.0, worksheet.user_inputs_h55, 0.002); end
  def test_user_inputs_i55; assert_in_epsilon(2.0, worksheet.user_inputs_i55, 0.002); end
  def test_user_inputs_j55; assert_in_epsilon(2.0, worksheet.user_inputs_j55, 0.002); end
  def test_user_inputs_k55; assert_in_epsilon(2.0, worksheet.user_inputs_k55, 0.002); end
  def test_user_inputs_l55; assert_in_epsilon(2.0, worksheet.user_inputs_l55, 0.002); end
  def test_user_inputs_m55; assert_in_epsilon(2.0, worksheet.user_inputs_m55, 0.002); end
  def test_user_inputs_n55; assert_in_epsilon(2.0, worksheet.user_inputs_n55, 0.002); end
  def test_user_inputs_o55; assert_in_epsilon(2.0, worksheet.user_inputs_o55, 0.002); end
  def test_user_inputs_p55; assert_in_epsilon(2.0, worksheet.user_inputs_p55, 0.002); end
  def test_user_inputs_q55; assert_in_epsilon(2.0, worksheet.user_inputs_q55, 0.002); end
  def test_user_inputs_r55; assert_in_epsilon(2.0, worksheet.user_inputs_r55, 0.002); end
  def test_user_inputs_h56; assert_in_epsilon(2.0, worksheet.user_inputs_h56, 0.002); end
  def test_user_inputs_i56; assert_in_epsilon(2.0, worksheet.user_inputs_i56, 0.002); end
  def test_user_inputs_j56; assert_in_epsilon(2.0, worksheet.user_inputs_j56, 0.002); end
  def test_user_inputs_k56; assert_in_epsilon(2.0, worksheet.user_inputs_k56, 0.002); end
  def test_user_inputs_l56; assert_in_epsilon(2.0, worksheet.user_inputs_l56, 0.002); end
  def test_user_inputs_m56; assert_in_epsilon(2.0, worksheet.user_inputs_m56, 0.002); end
  def test_user_inputs_n56; assert_in_epsilon(2.0, worksheet.user_inputs_n56, 0.002); end
  def test_user_inputs_o56; assert_in_epsilon(2.0, worksheet.user_inputs_o56, 0.002); end
  def test_user_inputs_p56; assert_in_epsilon(2.0, worksheet.user_inputs_p56, 0.002); end
  def test_user_inputs_q56; assert_in_epsilon(2.0, worksheet.user_inputs_q56, 0.002); end
  def test_user_inputs_r56; assert_in_epsilon(2.0, worksheet.user_inputs_r56, 0.002); end
  def test_user_inputs_h57; assert_equal("B", worksheet.user_inputs_h57); end
  def test_user_inputs_i57; assert_equal("B", worksheet.user_inputs_i57); end
  def test_user_inputs_j57; assert_equal("B", worksheet.user_inputs_j57); end
  def test_user_inputs_k57; assert_equal("B", worksheet.user_inputs_k57); end
  def test_user_inputs_l57; assert_equal("B", worksheet.user_inputs_l57); end
  def test_user_inputs_m57; assert_equal("B", worksheet.user_inputs_m57); end
  def test_user_inputs_n57; assert_equal("B", worksheet.user_inputs_n57); end
  def test_user_inputs_o57; assert_equal("B", worksheet.user_inputs_o57); end
  def test_user_inputs_p57; assert_equal("B", worksheet.user_inputs_p57); end
  def test_user_inputs_q57; assert_equal("B", worksheet.user_inputs_q57); end
  def test_user_inputs_r57; assert_equal("B", worksheet.user_inputs_r57); end
  def test_user_inputs_h58; assert_equal("US", worksheet.user_inputs_h58); end
  def test_user_inputs_i58; assert_equal("US", worksheet.user_inputs_i58); end
  def test_user_inputs_j58; assert_equal("US", worksheet.user_inputs_j58); end
  def test_user_inputs_k58; assert_equal("US", worksheet.user_inputs_k58); end
  def test_user_inputs_l58; assert_equal("US", worksheet.user_inputs_l58); end
  def test_user_inputs_m58; assert_equal("US", worksheet.user_inputs_m58); end
  def test_user_inputs_n58; assert_equal("US", worksheet.user_inputs_n58); end
  def test_user_inputs_o58; assert_equal("US", worksheet.user_inputs_o58); end
  def test_user_inputs_p58; assert_equal("US", worksheet.user_inputs_p58); end
  def test_user_inputs_q58; assert_equal("US", worksheet.user_inputs_q58); end
  def test_user_inputs_r58; assert_equal("US", worksheet.user_inputs_r58); end
  def test_user_inputs_h59; assert_equal("Point", worksheet.user_inputs_h59); end
  def test_user_inputs_i59; assert_equal("Point", worksheet.user_inputs_i59); end
  def test_user_inputs_j59; assert_equal("Point", worksheet.user_inputs_j59); end
  def test_user_inputs_k59; assert_equal("Point", worksheet.user_inputs_k59); end
  def test_user_inputs_l59; assert_equal("Point", worksheet.user_inputs_l59); end
  def test_user_inputs_m59; assert_equal("Point", worksheet.user_inputs_m59); end
  def test_user_inputs_n59; assert_equal("Point", worksheet.user_inputs_n59); end
  def test_user_inputs_o59; assert_equal("Point", worksheet.user_inputs_o59); end
  def test_user_inputs_p59; assert_equal("Point", worksheet.user_inputs_p59); end
  def test_user_inputs_q59; assert_equal("Point", worksheet.user_inputs_q59); end
  def test_user_inputs_r59; assert_equal("Point", worksheet.user_inputs_r59); end
  def test_user_inputs_h60; assert_equal("Point", worksheet.user_inputs_h60); end
  def test_user_inputs_i60; assert_equal("Point", worksheet.user_inputs_i60); end
  def test_user_inputs_j60; assert_equal("Point", worksheet.user_inputs_j60); end
  def test_user_inputs_k60; assert_equal("Point", worksheet.user_inputs_k60); end
  def test_user_inputs_l60; assert_equal("Point", worksheet.user_inputs_l60); end
  def test_user_inputs_m60; assert_equal("Point", worksheet.user_inputs_m60); end
  def test_user_inputs_n60; assert_equal("Point", worksheet.user_inputs_n60); end
  def test_user_inputs_o60; assert_equal("Point", worksheet.user_inputs_o60); end
  def test_user_inputs_p60; assert_equal("Point", worksheet.user_inputs_p60); end
  def test_user_inputs_q60; assert_equal("Point", worksheet.user_inputs_q60); end
  def test_user_inputs_r60; assert_equal("Point", worksheet.user_inputs_r60); end
  def test_user_inputs_h61; assert_equal("Point", worksheet.user_inputs_h61); end
  def test_user_inputs_i61; assert_equal("Point", worksheet.user_inputs_i61); end
  def test_user_inputs_j61; assert_equal("Point", worksheet.user_inputs_j61); end
  def test_user_inputs_k61; assert_equal("Point", worksheet.user_inputs_k61); end
  def test_user_inputs_l61; assert_equal("Point", worksheet.user_inputs_l61); end
  def test_user_inputs_m61; assert_equal("Point", worksheet.user_inputs_m61); end
  def test_user_inputs_n61; assert_equal("Point", worksheet.user_inputs_n61); end
  def test_user_inputs_o61; assert_equal("Point", worksheet.user_inputs_o61); end
  def test_user_inputs_p61; assert_equal("Point", worksheet.user_inputs_p61); end
  def test_user_inputs_q61; assert_equal("Point", worksheet.user_inputs_q61); end
  def test_user_inputs_r61; assert_equal("Point", worksheet.user_inputs_r61); end
  def test_user_inputs_h62; assert_equal("Point", worksheet.user_inputs_h62); end
  def test_user_inputs_i62; assert_equal("Point", worksheet.user_inputs_i62); end
  def test_user_inputs_j62; assert_equal("Point", worksheet.user_inputs_j62); end
  def test_user_inputs_k62; assert_equal("Point", worksheet.user_inputs_k62); end
  def test_user_inputs_l62; assert_equal("Point", worksheet.user_inputs_l62); end
  def test_user_inputs_m62; assert_equal("Point", worksheet.user_inputs_m62); end
  def test_user_inputs_n62; assert_equal("Point", worksheet.user_inputs_n62); end
  def test_user_inputs_o62; assert_equal("Point", worksheet.user_inputs_o62); end
  def test_user_inputs_p62; assert_equal("Point", worksheet.user_inputs_p62); end
  def test_user_inputs_q62; assert_equal("Point", worksheet.user_inputs_q62); end
  def test_user_inputs_r62; assert_equal("Point", worksheet.user_inputs_r62); end
  def test_user_inputs_h63; assert_equal("Point", worksheet.user_inputs_h63); end
  def test_user_inputs_i63; assert_equal("Point", worksheet.user_inputs_i63); end
  def test_user_inputs_j63; assert_equal("Point", worksheet.user_inputs_j63); end
  def test_user_inputs_k63; assert_equal("Point", worksheet.user_inputs_k63); end
  def test_user_inputs_l63; assert_equal("Point", worksheet.user_inputs_l63); end
  def test_user_inputs_m63; assert_equal("Point", worksheet.user_inputs_m63); end
  def test_user_inputs_n63; assert_equal("Point", worksheet.user_inputs_n63); end
  def test_user_inputs_o63; assert_equal("Point", worksheet.user_inputs_o63); end
  def test_user_inputs_p63; assert_equal("Point", worksheet.user_inputs_p63); end
  def test_user_inputs_q63; assert_equal("Point", worksheet.user_inputs_q63); end
  def test_user_inputs_r63; assert_equal("Point", worksheet.user_inputs_r63); end
  def test_user_inputs_h64; assert_equal("Point", worksheet.user_inputs_h64); end
  def test_user_inputs_i64; assert_equal("Point", worksheet.user_inputs_i64); end
  def test_user_inputs_j64; assert_equal("Point", worksheet.user_inputs_j64); end
  def test_user_inputs_k64; assert_equal("Point", worksheet.user_inputs_k64); end
  def test_user_inputs_l64; assert_equal("Point", worksheet.user_inputs_l64); end
  def test_user_inputs_m64; assert_equal("Point", worksheet.user_inputs_m64); end
  def test_user_inputs_n64; assert_equal("Point", worksheet.user_inputs_n64); end
  def test_user_inputs_o64; assert_equal("Point", worksheet.user_inputs_o64); end
  def test_user_inputs_p64; assert_equal("Point", worksheet.user_inputs_p64); end
  def test_user_inputs_q64; assert_equal("Point", worksheet.user_inputs_q64); end
  def test_user_inputs_r64; assert_equal("Point", worksheet.user_inputs_r64); end
  def test_user_inputs_h65; assert_equal("Point", worksheet.user_inputs_h65); end
  def test_user_inputs_i65; assert_equal("Point", worksheet.user_inputs_i65); end
  def test_user_inputs_j65; assert_equal("Point", worksheet.user_inputs_j65); end
  def test_user_inputs_k65; assert_equal("Point", worksheet.user_inputs_k65); end
  def test_user_inputs_l65; assert_equal("Point", worksheet.user_inputs_l65); end
  def test_user_inputs_m65; assert_equal("Point", worksheet.user_inputs_m65); end
  def test_user_inputs_n65; assert_equal("Point", worksheet.user_inputs_n65); end
  def test_user_inputs_o65; assert_equal("Point", worksheet.user_inputs_o65); end
  def test_user_inputs_p65; assert_equal("Point", worksheet.user_inputs_p65); end
  def test_user_inputs_q65; assert_equal("Point", worksheet.user_inputs_q65); end
  def test_user_inputs_r65; assert_equal("Point", worksheet.user_inputs_r65); end
  def test_user_inputs_g7; assert_in_delta(0.0, (worksheet.user_inputs_g7||0), 0.002); end
  def test_user_inputs_g8; assert_in_delta(0.0, (worksheet.user_inputs_g8||0), 0.002); end
  def test_user_inputs_g9; assert_equal("Growth in travel demand continues in cities around the world, with global distance travelled per person increasing at a rate of 2.65% annually, or increasing by 180% by 2050. The global average travel per person will be similar to present day UK.", worksheet.user_inputs_g9); end
  def test_user_inputs_g10; assert_equal("Growth in freight tonne-kms remains closely tied to GDP, increasing by roughly 140% in road, rail, and shipping by 2050, or 2.4% annually. ", worksheet.user_inputs_g10); end
  def test_user_inputs_g11; assert_equal("Cities continue to grow in a sprawled pattern of development. Similar to the UK in 2011, 80% of passenger-kms (pkm) globally are by private vehicles. There is no significant effort to use more rail transport for freight or to improve logistics by 2050, and 65% of ground freight is by road, similar to Latin America in 2011.", worksheet.user_inputs_g11); end
  def test_user_inputs_g12; assert_equal("By 2050, passenger car and train occupancies remain unchanged, and the average freight vehicle carries the same amount of cargo.", worksheet.user_inputs_g12); end
  def test_user_inputs_g13; assert_in_delta(0.0, (worksheet.user_inputs_g13||0), 0.002); end
  def test_user_inputs_g14; assert_equal("By 2050 most transport modes decrease their energy intensity by 0.5% annually to roughly 8 lge/100km for LDVs and 26 lge/100km for HDVs.", worksheet.user_inputs_g14); end
  def test_user_inputs_g15; assert_equal("By 2050 the percentage of hybrid and electric vehicles remains low (5% and 2%) for passenger cars, and heavy duty vehicles (5% hybrid), and decreases for 2-3 wheelers (40% electric). Few new technologies are adopted for ships or airplanes.", worksheet.user_inputs_g15); end
  def test_user_inputs_g16; assert_equal("The average urban home will have a floor area of 105 m<sup>2</sup> by 2050.", worksheet.user_inputs_g16); end
  def test_user_inputs_g17; assert_equal("In 2050 the average urban home will have an inside temperature of 19 &deg;C in winter and 25 &deg;C in summer.", worksheet.user_inputs_g17); end
  def test_user_inputs_g18; assert_equal("In 2050 the average urban household will have 1.2 refrigerator, 0.6 dishwasher, 0.9 clothes washers, 0.6 clothes dryers, 2.1 TV, 4.2 miscellaneous appliances. And will have 35 bulbs.", worksheet.user_inputs_g18); end
  def test_user_inputs_g19; assert_equal("Through better insulation, thermal performance of buildings improves by 32% by 2050. The average heat loss coefficient of buildings will be 10.2 GW/(M ha*&deg;C).", worksheet.user_inputs_g19); end
  def test_user_inputs_g20; assert_equal("In 2050 the heating technology structure will be 2% solid boiler, 8% liquid boiler, 33% gas boiler, 9% heat pumps, 7% electricity heater, 3% solar heater, 5% micro-CHP, 36% district heating. The cooling structure will be 89% air-conditioning, 4% chiller, 8% solar cooling. The cooking technology structure will be 5% solid stoves, 12% liquid stoves, 38% gas stoves, 38% electric stoves, 9% traditional biomass stoves. ", worksheet.user_inputs_g20); end
  def test_user_inputs_g21; assert_equal("In 2050 the appliance efficiency will be: refrigerator 54W (improved by 18%), dishwasher 1192W (improved by 21%), clothes washer 558W (improved by 20%), clothes dryer 1319W (improved by 12%), TV 243W (improved by 3%), miscellaneous 90W (improved by 10%).", worksheet.user_inputs_g21); end
  def test_user_inputs_g22; assert_equal("Demand for products leads to the production of 14.8Gt of materials, that is: 2.9Gt of crude steel, 0.1Gt of aluminium, 1.6Gt of chemicals, 1.2Gt of paper, 1.5Gt of timber, 2.3Gt of other materials, & 5.1Gt of cement.", worksheet.user_inputs_g22); end
  def test_user_inputs_g23; assert_equal("Product design leads to the reduction of -1% of materials in 2050.", worksheet.user_inputs_g23); end
  def test_user_inputs_g24; assert_equal("Specific emissions for Steel reduce/increase by -3% and for Aluminium by -2%.", worksheet.user_inputs_g24); end
  def test_user_inputs_g25; assert_equal("Specific emissions for chemicals reduce/increase by 1%", worksheet.user_inputs_g25); end
  def test_user_inputs_g26; assert_equal("Specific emissions for pulp & paper change by -20% and for other materials by -13%.", worksheet.user_inputs_g26); end
  def test_user_inputs_g27; assert_equal("Specific emissions for Steel reduce/increase by -3% and for Aluminium by -2%.", worksheet.user_inputs_g27); end
  def test_user_inputs_g28; assert_equal("CCS enables a 0% CO2 reduction (excluding electricity emissions & counting biomass as fossil fuel) and an 0 EJ electricity consumption increase.", worksheet.user_inputs_g28); end
  def test_user_inputs_g29; assert_equal("In 2050 out of total fossil energy supplied it is 44% of solid, 21% of liquid and 35% of gas power.", worksheet.user_inputs_g29); end
  def test_user_inputs_g30; assert_equal("In 2050 out of fossil energy supplied it is 17% by solid USC, 25% by solid SC, 58% by solid Sub-C, 41% by eff. liquid, 59% by ineff. liquid, 53% by OCGT and 47% by CCGT plant.", worksheet.user_inputs_g30); end
  def test_user_inputs_g31; assert_equal("111 GW of CCS installed power capacity by 2050.", worksheet.user_inputs_g31); end
  def test_user_inputs_g32; assert_equal("617 GW of installed nuclear power capacity by 2050.", worksheet.user_inputs_g32); end
  def test_user_inputs_g33; assert_equal("1,390 GW of installed wind power capacity by 2050.", worksheet.user_inputs_g33); end
  def test_user_inputs_g34; assert_equal("1,694 GW of installed hydroelectric power capacity by 2050.", worksheet.user_inputs_g34); end
  def test_user_inputs_g35; assert_equal("43.6 GW of installed marine power capacity by 2050.", worksheet.user_inputs_g35); end
  def test_user_inputs_g36; assert_equal("882 GW of installed solar power capacity by 2050.", worksheet.user_inputs_g36); end
  def test_user_inputs_g37; assert_equal("69 GW of installed geothermal power capacity by 2050.", worksheet.user_inputs_g37); end
  def test_user_inputs_g38; assert_equal("278 GW of electricity storage capacity by 2050.", worksheet.user_inputs_g38); end
  def test_user_inputs_g39; assert_in_delta(0.0, (worksheet.user_inputs_g39||0), 0.002); end
  def test_user_inputs_g40; assert_in_delta(0.0, (worksheet.user_inputs_g40||0), 0.002); end
  def test_user_inputs_g42; assert_in_delta(0.0, (worksheet.user_inputs_g42||0), 0.002); end
  def test_user_inputs_g43; assert_in_delta(0.0, (worksheet.user_inputs_g43||0), 0.002); end
  def test_user_inputs_g44; assert_in_delta(0.0, (worksheet.user_inputs_g44||0), 0.002); end
  def test_user_inputs_g46; assert_in_delta(0.0, (worksheet.user_inputs_g46||0), 0.002); end
  def test_user_inputs_g47; assert_in_delta(0.0, (worksheet.user_inputs_g47||0), 0.002); end
  def test_user_inputs_g48; assert_in_delta(0.0, (worksheet.user_inputs_g48||0), 0.002); end
  def test_user_inputs_g49; assert_in_delta(0.0, (worksheet.user_inputs_g49||0), 0.002); end
  def test_user_inputs_g50; assert_in_delta(0.0, (worksheet.user_inputs_g50||0), 0.002); end
  def test_user_inputs_g51; assert_in_delta(0.0, (worksheet.user_inputs_g51||0), 0.002); end
  def test_user_inputs_g52; assert_in_delta(0.0, (worksheet.user_inputs_g52||0), 0.002); end
  def test_user_inputs_g53; assert_in_delta(0.0, (worksheet.user_inputs_g53||0), 0.002); end
  def test_user_inputs_g54; assert_in_delta(0.0, (worksheet.user_inputs_g54||0), 0.002); end
  def test_user_inputs_g55; assert_in_delta(0.0, (worksheet.user_inputs_g55||0), 0.002); end
  def test_user_inputs_g56; assert_in_delta(0.0, (worksheet.user_inputs_g56||0), 0.002); end
  def test_user_inputs_g57; assert_in_delta(0.0, (worksheet.user_inputs_g57||0), 0.002); end
  def test_user_inputs_f7; assert_in_epsilon(3.0, worksheet.user_inputs_f7, 0.002); end
  def test_user_inputs_f8; assert_in_epsilon(3.0, worksheet.user_inputs_f8, 0.002); end
  def test_user_inputs_f9; assert_in_epsilon(4.0, worksheet.user_inputs_f9, 0.002); end
  def test_user_inputs_f10; assert_in_epsilon(4.0, worksheet.user_inputs_f10, 0.002); end
  def test_user_inputs_f11; assert_in_epsilon(4.0, worksheet.user_inputs_f11, 0.002); end
  def test_user_inputs_f12; assert_in_epsilon(4.0, worksheet.user_inputs_f12, 0.002); end
  def test_user_inputs_f13; assert_in_epsilon(4.0, worksheet.user_inputs_f13, 0.002); end
  def test_user_inputs_f14; assert_in_epsilon(4.0, worksheet.user_inputs_f14, 0.002); end
  def test_user_inputs_f15; assert_in_epsilon(4.0, worksheet.user_inputs_f15, 0.002); end
  def test_user_inputs_f16; assert_in_epsilon(4.0, worksheet.user_inputs_f16, 0.002); end
  def test_user_inputs_f17; assert_in_epsilon(4.0, worksheet.user_inputs_f17, 0.002); end
  def test_user_inputs_f18; assert_in_epsilon(4.0, worksheet.user_inputs_f18, 0.002); end
  def test_user_inputs_f19; assert_in_epsilon(4.0, worksheet.user_inputs_f19, 0.002); end
  def test_user_inputs_f20; assert_in_epsilon(4.0, worksheet.user_inputs_f20, 0.002); end
  def test_user_inputs_f21; assert_in_epsilon(4.0, worksheet.user_inputs_f21, 0.002); end
  def test_user_inputs_f22; assert_in_epsilon(4.0, worksheet.user_inputs_f22, 0.002); end
  def test_user_inputs_f23; assert_in_epsilon(4.0, worksheet.user_inputs_f23, 0.002); end
  def test_user_inputs_f24; assert_in_epsilon(4.0, worksheet.user_inputs_f24, 0.002); end
  def test_user_inputs_f25; assert_in_epsilon(4.0, worksheet.user_inputs_f25, 0.002); end
  def test_user_inputs_f26; assert_in_epsilon(4.0, worksheet.user_inputs_f26, 0.002); end
  def test_user_inputs_f27; assert_in_epsilon(4.0, worksheet.user_inputs_f27, 0.002); end
  def test_user_inputs_f28; assert_in_epsilon(4.0, worksheet.user_inputs_f28, 0.002); end
  def test_user_inputs_f29; assert_in_epsilon(4.0, worksheet.user_inputs_f29, 0.002); end
  def test_user_inputs_f30; assert_in_epsilon(4.0, worksheet.user_inputs_f30, 0.002); end
  def test_user_inputs_f31; assert_in_epsilon(4.0, worksheet.user_inputs_f31, 0.002); end
  def test_user_inputs_f32; assert_in_epsilon(4.0, worksheet.user_inputs_f32, 0.002); end
  def test_user_inputs_f33; assert_in_epsilon(4.0, worksheet.user_inputs_f33, 0.002); end
  def test_user_inputs_f34; assert_in_epsilon(4.0, worksheet.user_inputs_f34, 0.002); end
  def test_user_inputs_f35; assert_in_epsilon(4.0, worksheet.user_inputs_f35, 0.002); end
  def test_user_inputs_f36; assert_in_epsilon(4.0, worksheet.user_inputs_f36, 0.002); end
  def test_user_inputs_f37; assert_in_epsilon(4.0, worksheet.user_inputs_f37, 0.002); end
  def test_user_inputs_f38; assert_in_epsilon(4.0, worksheet.user_inputs_f38, 0.002); end
  def test_user_inputs_f39; assert_in_epsilon(4.0, worksheet.user_inputs_f39, 0.002); end
  def test_user_inputs_f40; assert_in_epsilon(4.0, worksheet.user_inputs_f40, 0.002); end
  def test_user_inputs_f41; assert_in_epsilon(4.0, worksheet.user_inputs_f41, 0.002); end
  def test_user_inputs_f42; assert_in_epsilon(4.0, worksheet.user_inputs_f42, 0.002); end
  def test_user_inputs_f43; assert_in_epsilon(4.0, worksheet.user_inputs_f43, 0.002); end
  def test_user_inputs_f44; assert_in_epsilon(4.0, worksheet.user_inputs_f44, 0.002); end
  def test_user_inputs_f45; assert_in_epsilon(4.0, worksheet.user_inputs_f45, 0.002); end
  def test_user_inputs_f46; assert_in_epsilon(4.0, worksheet.user_inputs_f46, 0.002); end
  def test_user_inputs_f47; assert_in_epsilon(4.0, worksheet.user_inputs_f47, 0.002); end
  def test_user_inputs_f48; assert_in_epsilon(4.0, worksheet.user_inputs_f48, 0.002); end
  def test_user_inputs_f49; assert_in_epsilon(4.0, worksheet.user_inputs_f49, 0.002); end
  def test_user_inputs_f50; assert_in_epsilon(4.0, worksheet.user_inputs_f50, 0.002); end
  def test_user_inputs_f51; assert_in_epsilon(4.0, worksheet.user_inputs_f51, 0.002); end
  def test_user_inputs_f52; assert_in_epsilon(4.0, worksheet.user_inputs_f52, 0.002); end
  def test_user_inputs_f53; assert_in_epsilon(4.0, worksheet.user_inputs_f53, 0.002); end
  def test_user_inputs_f54; assert_in_epsilon(4.0, worksheet.user_inputs_f54, 0.002); end
  def test_user_inputs_f55; assert_in_epsilon(4.0, worksheet.user_inputs_f55, 0.002); end
  def test_user_inputs_f56; assert_in_epsilon(4.0, worksheet.user_inputs_f56, 0.002); end
  def test_user_inputs_f57; assert_equal("B", worksheet.user_inputs_f57); end
  def test_user_inputs_d7; assert_equal("Global population", worksheet.user_inputs_d7); end
  def test_user_inputs_d8; assert_equal("Urbanisation", worksheet.user_inputs_d8); end
  def test_user_inputs_d9; assert_equal("Passenger distance", worksheet.user_inputs_d9); end
  def test_user_inputs_d10; assert_equal("Freight distance", worksheet.user_inputs_d10); end
  def test_user_inputs_d11; assert_equal("Mode", worksheet.user_inputs_d11); end
  def test_user_inputs_d12; assert_equal("Occupancy and load", worksheet.user_inputs_d12); end
  def test_user_inputs_d13; assert_equal("Car own or hire ", worksheet.user_inputs_d13); end
  def test_user_inputs_d14; assert_equal("Efficiency", worksheet.user_inputs_d14); end
  def test_user_inputs_d15; assert_equal("Electric and hydrogen", worksheet.user_inputs_d15); end
  def test_user_inputs_d16; assert_equal("Building size", worksheet.user_inputs_d16); end
  def test_user_inputs_d17; assert_equal("Temperature & hot water use", worksheet.user_inputs_d17); end
  def test_user_inputs_d18; assert_equal("Lighting, cooking & appliance use", worksheet.user_inputs_d18); end
  def test_user_inputs_d19; assert_equal("Building insulation", worksheet.user_inputs_d19); end
  def test_user_inputs_d20; assert_equal("Temperature, cooking & lighting technology", worksheet.user_inputs_d20); end
  def test_user_inputs_d21; assert_equal("Appliance efficiency", worksheet.user_inputs_d21); end
  def test_user_inputs_d22; assert_equal("Product lifespan & demand", worksheet.user_inputs_d22); end
  def test_user_inputs_d23; assert_equal("Design, material switch & recycling", worksheet.user_inputs_d23); end
  def test_user_inputs_d24; assert_equal("Iron, steel & aluminium", worksheet.user_inputs_d24); end
  def test_user_inputs_d25; assert_equal("Chemicals", worksheet.user_inputs_d25); end
  def test_user_inputs_d26; assert_equal("Paper and other", worksheet.user_inputs_d26); end
  def test_user_inputs_d27; assert_equal("Cement", worksheet.user_inputs_d27); end
  def test_user_inputs_d28; assert_equal("Carbon capture and storage (ind.)", worksheet.user_inputs_d28); end
  def test_user_inputs_d29; assert_equal("Coal (incl. biomass) / oil / gas", worksheet.user_inputs_d29); end
  def test_user_inputs_d30; assert_equal("Fossil fuel efficiency", worksheet.user_inputs_d30); end
  def test_user_inputs_d31; assert_equal("Carbon capture and storage (power)", worksheet.user_inputs_d31); end
  def test_user_inputs_d32; assert_equal("Nuclear", worksheet.user_inputs_d32); end
  def test_user_inputs_d33; assert_equal("Wind", worksheet.user_inputs_d33); end
  def test_user_inputs_d34; assert_equal("Hydroelectric", worksheet.user_inputs_d34); end
  def test_user_inputs_d35; assert_equal("Marine", worksheet.user_inputs_d35); end
  def test_user_inputs_d36; assert_equal("Solar", worksheet.user_inputs_d36); end
  def test_user_inputs_d37; assert_equal("Geothermal", worksheet.user_inputs_d37); end
  def test_user_inputs_d38; assert_equal("Storage and demand shifting", worksheet.user_inputs_d38); end
  def test_user_inputs_d39; assert_equal("Calories consumed", worksheet.user_inputs_d39); end
  def test_user_inputs_d40; assert_equal("Quantity of meat", worksheet.user_inputs_d40); end
  def test_user_inputs_d41; assert_equal("Type of meat", worksheet.user_inputs_d41); end
  def test_user_inputs_d42; assert_equal("Crop yields", worksheet.user_inputs_d42); end
  def test_user_inputs_d43; assert_equal("Land-use efficiency ", worksheet.user_inputs_d43); end
  def test_user_inputs_d44; assert_equal("Livestock intensification", worksheet.user_inputs_d44); end
  def test_user_inputs_d45; assert_equal("Extensive livestock yields", worksheet.user_inputs_d45); end
  def test_user_inputs_d46; assert_equal("Bioenergy yields", worksheet.user_inputs_d46); end
  def test_user_inputs_d47; assert_equal("Solid or liquid", worksheet.user_inputs_d47); end
  def test_user_inputs_d48; assert_equal("Surplus land (forest & bioenergy) ", worksheet.user_inputs_d48); end
  def test_user_inputs_d49; assert_equal("Biochar", worksheet.user_inputs_d49); end
  def test_user_inputs_d50; assert_equal("Direct air capture", worksheet.user_inputs_d50); end
  def test_user_inputs_d51; assert_equal("Ocean fertilisation", worksheet.user_inputs_d51); end
  def test_user_inputs_d52; assert_equal("Enhanced weathering (oceanic)", worksheet.user_inputs_d52); end
  def test_user_inputs_d53; assert_equal("Enhanced weathering (terrestial)", worksheet.user_inputs_d53); end
  def test_user_inputs_d54; assert_equal("Wastes and residues", worksheet.user_inputs_d54); end
  def test_user_inputs_d55; assert_equal("Emissions trajectory", worksheet.user_inputs_d55); end
  def test_user_inputs_d56; assert_equal("Atmospheric CO2 fraction", worksheet.user_inputs_d56); end
  def test_user_inputs_d57; assert_equal("Confidence in climate models", worksheet.user_inputs_d57); end
  def test_user_inputs_d58; assert_equal("Region factor", worksheet.user_inputs_d58); end
  def test_user_inputs_d59; assert_equal("Coal", worksheet.user_inputs_d59); end
  def test_user_inputs_d60; assert_equal("Oil", worksheet.user_inputs_d60); end
  def test_user_inputs_d61; assert_equal("Gas", worksheet.user_inputs_d61); end
  def test_user_inputs_d62; assert_equal("Solid bioenergy", worksheet.user_inputs_d62); end
  def test_user_inputs_d63; assert_equal("Liquid bioenergy", worksheet.user_inputs_d63); end
  def test_user_inputs_d64; assert_equal("Gaseous bioenergy", worksheet.user_inputs_d64); end
  def test_user_inputs_d65; assert_equal("Hydrogen", worksheet.user_inputs_d65); end
  def test_outputs_lifestyle_e8; assert_equal("2011", worksheet.outputs_lifestyle_e8); end
  def test_outputs_lifestyle_f8; assert_equal("2011", worksheet.outputs_lifestyle_f8); end
  def test_outputs_lifestyle_g8; assert_in_epsilon(2011.0, worksheet.outputs_lifestyle_g8, 0.002); end
  def test_outputs_lifestyle_h8; assert_equal("2050", worksheet.outputs_lifestyle_h8); end
  def test_outputs_lifestyle_i8; assert_equal("2050", worksheet.outputs_lifestyle_i8); end
  def test_outputs_lifestyle_j8; assert_in_epsilon(2050.0, worksheet.outputs_lifestyle_j8, 0.002); end
  def test_outputs_lifestyle_e9; assert_equal("Urban", worksheet.outputs_lifestyle_e9); end
  def test_outputs_lifestyle_f9; assert_equal("Rural", worksheet.outputs_lifestyle_f9); end
  def test_outputs_lifestyle_g9; assert_equal("2011 weighted average", worksheet.outputs_lifestyle_g9); end
  def test_outputs_lifestyle_h9; assert_equal("Urban", worksheet.outputs_lifestyle_h9); end
  def test_outputs_lifestyle_i9; assert_equal("Rural", worksheet.outputs_lifestyle_i9); end
  def test_outputs_lifestyle_j9; assert_equal("2050 weighted average", worksheet.outputs_lifestyle_j9); end
  def test_outputs_lifestyle_d10; assert_equal("Passenger km/head", worksheet.outputs_lifestyle_d10); end
  def test_outputs_lifestyle_e10; assert_in_epsilon(9187.0, worksheet.outputs_lifestyle_e10, 0.002); end
  def test_outputs_lifestyle_f10; assert_in_epsilon(5653.0, worksheet.outputs_lifestyle_f10, 0.002); end
  def test_outputs_lifestyle_g10; assert_in_epsilon(7495.0, worksheet.outputs_lifestyle_g10, 0.002); end
  def test_outputs_lifestyle_h10; assert_in_epsilon(12512.0, worksheet.outputs_lifestyle_h10, 0.002); end
  def test_outputs_lifestyle_i10; assert_in_epsilon(9968.0, worksheet.outputs_lifestyle_i10, 0.002); end
  def test_outputs_lifestyle_j10; assert_in_epsilon(11656.0, worksheet.outputs_lifestyle_j10, 0.002); end
  def test_outputs_lifestyle_d11; assert_equal("% of total passenger km using private transport", worksheet.outputs_lifestyle_d11); end
  def test_outputs_lifestyle_e11; assert_in_delta(0.62700782098222, worksheet.outputs_lifestyle_e11, 0.002); end
  def test_outputs_lifestyle_f11; assert_in_delta(0.6896646251594333, worksheet.outputs_lifestyle_f11, 0.002); end
  def test_outputs_lifestyle_g11; assert_in_delta(0.6569998825794469, worksheet.outputs_lifestyle_g11, 0.002); end
  def test_outputs_lifestyle_h11; assert_in_delta(0.7253554429019312, worksheet.outputs_lifestyle_h11, 0.002); end
  def test_outputs_lifestyle_i11; assert_in_delta(0.8040670916329327, worksheet.outputs_lifestyle_i11, 0.002); end
  def test_outputs_lifestyle_j11; assert_in_delta(0.7518290600146438, worksheet.outputs_lifestyle_j11, 0.002); end
  def test_outputs_lifestyle_d13; assert_equal("Number of appliances per household", worksheet.outputs_lifestyle_d13); end
  def test_outputs_lifestyle_e13; assert_in_epsilon(5.958364024436915, worksheet.outputs_lifestyle_e13, 0.002); end
  def test_outputs_lifestyle_f13; assert_in_epsilon(3.4791820122184576, worksheet.outputs_lifestyle_f13, 0.002); end
  def test_outputs_lifestyle_g13; assert_in_epsilon(5.054404480386185, worksheet.outputs_lifestyle_g13, 0.002); end
  def test_outputs_lifestyle_h13; assert_in_epsilon(9.675857262288101, worksheet.outputs_lifestyle_h13, 0.002); end
  def test_outputs_lifestyle_i13; assert_in_epsilon(7.629803593190585, worksheet.outputs_lifestyle_i13, 0.002); end
  def test_outputs_lifestyle_j13; assert_in_epsilon(9.181545793352493, worksheet.outputs_lifestyle_j13, 0.002); end
  def test_outputs_lifestyle_d14; assert_equal("Building temperature in warm months", worksheet.outputs_lifestyle_d14); end
  def test_outputs_lifestyle_e14; assert_in_epsilon(26.5, worksheet.outputs_lifestyle_e14, 0.002); end
  def test_outputs_lifestyle_f14; assert_in_epsilon(29.0, worksheet.outputs_lifestyle_f14, 0.002); end
  def test_outputs_lifestyle_g14; assert_in_epsilon(27.411550200424607, worksheet.outputs_lifestyle_g14, 0.002); end
  def test_outputs_lifestyle_h14; assert_in_epsilon(25.0, worksheet.outputs_lifestyle_h14, 0.002); end
  def test_outputs_lifestyle_i14; assert_in_epsilon(25.0, worksheet.outputs_lifestyle_i14, 0.002); end
  def test_outputs_lifestyle_j14; assert_in_epsilon(25.0, worksheet.outputs_lifestyle_j14, 0.002); end
  def test_outputs_lifestyle_d15; assert_equal("Building temp in cold months", worksheet.outputs_lifestyle_d15); end
  def test_outputs_lifestyle_e15; assert_in_epsilon(17.5, worksheet.outputs_lifestyle_e15, 0.002); end
  def test_outputs_lifestyle_f15; assert_in_epsilon(13.0, worksheet.outputs_lifestyle_f15, 0.002); end
  def test_outputs_lifestyle_g15; assert_in_epsilon(15.8592096392357, worksheet.outputs_lifestyle_g15, 0.002); end
  def test_outputs_lifestyle_h15; assert_in_epsilon(19.0, worksheet.outputs_lifestyle_h15, 0.002); end
  def test_outputs_lifestyle_i15; assert_in_epsilon(16.0, worksheet.outputs_lifestyle_i15, 0.002); end
  def test_outputs_lifestyle_j15; assert_in_epsilon(18.275222136543015, worksheet.outputs_lifestyle_j15, 0.002); end
  def test_outputs_lifestyle_d17; assert_equal("Building insulation (GW / (M ha*℃)", worksheet.outputs_lifestyle_d17); end
  def test_outputs_lifestyle_e17; assert_in_epsilon(15.0, worksheet.outputs_lifestyle_e17, 0.002); end
  def test_outputs_lifestyle_f17; assert_in_epsilon(18.0, worksheet.outputs_lifestyle_f17, 0.002); end
  def test_outputs_lifestyle_g17; assert_in_epsilon(16.09386024050953, worksheet.outputs_lifestyle_g17, 0.002); end
  def test_outputs_lifestyle_h17; assert_in_epsilon(10.2, worksheet.outputs_lifestyle_h17, 0.002); end
  def test_outputs_lifestyle_i17; assert_in_epsilon(10.2, worksheet.outputs_lifestyle_i17, 0.002); end
  def test_outputs_lifestyle_j17; assert_in_epsilon(10.2, worksheet.outputs_lifestyle_j17, 0.002); end
  def test_outputs_lifestyle_d18; assert_equal("Building size (in metres squared)", worksheet.outputs_lifestyle_d18); end
  def test_outputs_lifestyle_e18; assert_in_epsilon(92.0, worksheet.outputs_lifestyle_e18, 0.002); end
  def test_outputs_lifestyle_f18; assert_in_epsilon(78.0, worksheet.outputs_lifestyle_f18, 0.002); end
  def test_outputs_lifestyle_g18; assert_in_epsilon(86.89531887762217, worksheet.outputs_lifestyle_g18, 0.002); end
  def test_outputs_lifestyle_h18; assert_in_epsilon(105.0, worksheet.outputs_lifestyle_h18, 0.002); end
  def test_outputs_lifestyle_i18; assert_in_epsilon(95.0, worksheet.outputs_lifestyle_i18, 0.002); end
  def test_outputs_lifestyle_j18; assert_in_epsilon(102.58407378847672, worksheet.outputs_lifestyle_j18, 0.002); end
  def test_outputs_lifestyle_e23; assert_equal("webtool.lifestyle", worksheet.outputs_lifestyle_e23); end
  def test_outputs_lifestyle_h23; assert_equal("User’s pathway", worksheet.outputs_lifestyle_h23); end
  def test_outputs_lifestyle_e25; assert_equal("2011", worksheet.outputs_lifestyle_e25); end
  def test_outputs_lifestyle_f25; assert_equal("2011", worksheet.outputs_lifestyle_f25); end
  def test_outputs_lifestyle_g25; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_g25); end
  def test_outputs_lifestyle_h25; assert_equal("2050", worksheet.outputs_lifestyle_h25); end
  def test_outputs_lifestyle_i25; assert_equal("2050", worksheet.outputs_lifestyle_i25); end
  def test_outputs_lifestyle_e26; assert_equal("Urban", worksheet.outputs_lifestyle_e26); end
  def test_outputs_lifestyle_f26; assert_equal("Rural", worksheet.outputs_lifestyle_f26); end
  def test_outputs_lifestyle_h26; assert_equal("Urban", worksheet.outputs_lifestyle_h26); end
  def test_outputs_lifestyle_i26; assert_equal("Rural", worksheet.outputs_lifestyle_i26); end
  def test_outputs_lifestyle_j26; assert_equal("Total urban & rural", worksheet.outputs_lifestyle_j26); end
  def test_outputs_lifestyle_d27; assert_equal("Passenger km (millions)", worksheet.outputs_lifestyle_d27); end
  def test_outputs_lifestyle_e27; assert_in_epsilon(33365814.006759763, worksheet.outputs_lifestyle_e27, 0.002); end
  def test_outputs_lifestyle_f27; assert_in_epsilon(18849796.265677366, worksheet.outputs_lifestyle_f27, 0.002); end
  def test_outputs_lifestyle_g27; assert_in_epsilon(52215610.272437125, worksheet.outputs_lifestyle_g27, 0.002); end
  def test_outputs_lifestyle_h27; assert_in_epsilon(79309925.9317507, worksheet.outputs_lifestyle_h27, 0.002); end
  def test_outputs_lifestyle_i27; assert_in_epsilon(32019137.673547648, worksheet.outputs_lifestyle_i27, 0.002); end
  def test_outputs_lifestyle_j27; assert_in_epsilon(111329063.60529834, worksheet.outputs_lifestyle_j27, 0.002); end
  def test_outputs_lifestyle_d28; assert_equal("Total households", worksheet.outputs_lifestyle_d28); end
  def test_outputs_lifestyle_e28; assert_in_epsilon(1452719862.6209612, worksheet.outputs_lifestyle_e28, 0.002); end
  def test_outputs_lifestyle_f28; assert_in_epsilon(833660013.8618993, worksheet.outputs_lifestyle_f28, 0.002); end
  def test_outputs_lifestyle_g28; assert_in_epsilon(2286379876.4828606, worksheet.outputs_lifestyle_g28, 0.002); end
  def test_outputs_lifestyle_h28; assert_in_epsilon(2881187074.6996784, worksheet.outputs_lifestyle_h28, 0.002); end
  def test_outputs_lifestyle_i28; assert_in_epsilon(917809553.0459162, worksheet.outputs_lifestyle_i28, 0.002); end
  def test_outputs_lifestyle_j28; assert_in_epsilon(3798996627.7455945, worksheet.outputs_lifestyle_j28, 0.002); end
  def test_outputs_lifestyle_d29; assert_equal("% of households in urban/rural areas", worksheet.outputs_lifestyle_d29); end
  def test_outputs_lifestyle_e29; assert_in_delta(0.6353799198301556, worksheet.outputs_lifestyle_e29, 0.002); end
  def test_outputs_lifestyle_f29; assert_in_delta(0.36462008016984426, worksheet.outputs_lifestyle_f29, 0.002); end
  def test_outputs_lifestyle_g29; assert_in_delta(0.9999999999999999, worksheet.outputs_lifestyle_g29, 0.002); end
  def test_outputs_lifestyle_h29; assert_in_delta(0.7584073788476712, worksheet.outputs_lifestyle_h29, 0.002); end
  def test_outputs_lifestyle_i29; assert_in_delta(0.24159262115232882, worksheet.outputs_lifestyle_i29, 0.002); end
  def test_outputs_lifestyle_j29; assert_in_delta(1.0, worksheet.outputs_lifestyle_j29, 0.002); end
  def test_outputs_lifestyle_d30; assert_equal("Total population", worksheet.outputs_lifestyle_d30); end
  def test_outputs_lifestyle_e30; assert_in_epsilon(3631799656.552403, worksheet.outputs_lifestyle_e30, 0.002); end
  def test_outputs_lifestyle_f30; assert_in_epsilon(3334640055.447597, worksheet.outputs_lifestyle_f30, 0.002); end
  def test_outputs_lifestyle_g30; assert_in_epsilon(6966439712.0, worksheet.outputs_lifestyle_g30, 0.002); end
  def test_outputs_lifestyle_h30; assert_in_epsilon(6338611564.3392935, worksheet.outputs_lifestyle_h30, 0.002); end
  def test_outputs_lifestyle_i30; assert_in_epsilon(3212333435.6607065, worksheet.outputs_lifestyle_i30, 0.002); end
  def test_outputs_lifestyle_j30; assert_in_epsilon(9550945000.0, worksheet.outputs_lifestyle_j30, 0.002); end
  def test_outputs_lifestyle_d31; assert_equal("% of population in urban/rural areas", worksheet.outputs_lifestyle_d31); end
  def test_outputs_lifestyle_e31; assert_in_delta(0.5213279389034929, worksheet.outputs_lifestyle_e31, 0.002); end
  def test_outputs_lifestyle_f31; assert_in_delta(0.47867206109650706, worksheet.outputs_lifestyle_f31, 0.002); end
  def test_outputs_lifestyle_g31; assert_in_delta(1.0, worksheet.outputs_lifestyle_g31, 0.002); end
  def test_outputs_lifestyle_h31; assert_in_delta(0.663663288223238, worksheet.outputs_lifestyle_h31, 0.002); end
  def test_outputs_lifestyle_i31; assert_in_delta(0.33633671177676205, worksheet.outputs_lifestyle_i31, 0.002); end
  def test_outputs_lifestyle_j31; assert_in_delta(1.0, worksheet.outputs_lifestyle_j31, 0.002); end
  def test_front_page_y4; assert_equal("3.70.0", worksheet.front_page_y4); end
  def test_outputs_energy_flows_c8; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c8); end
  def test_outputs_energy_flows_d8; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d8); end
  def test_outputs_energy_flows_e8; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e8); end
  def test_outputs_energy_flows_f8; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f8); end
  def test_outputs_energy_flows_g8; assert_equal("Technology code", worksheet.outputs_energy_flows_g8); end
  def test_outputs_energy_flows_h8; assert_equal("Technology description", worksheet.outputs_energy_flows_h8); end
  def test_outputs_energy_flows_i8; assert_equal("Energy code", worksheet.outputs_energy_flows_i8); end
  def test_outputs_energy_flows_j8; assert_equal("Description", worksheet.outputs_energy_flows_j8); end
  def test_outputs_energy_flows_k8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k8); end
  def test_outputs_energy_flows_l8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l8); end
  def test_outputs_energy_flows_m8; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m8); end
  def test_outputs_energy_flows_v8; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v8, 0.002); end
  def test_outputs_energy_flows_w8; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w8, 0.002); end
  def test_outputs_energy_flows_x8; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x8, 0.002); end
  def test_outputs_energy_flows_y8; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y8, 0.002); end
  def test_outputs_energy_flows_z8; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z8, 0.002); end
  def test_outputs_energy_flows_aa8; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa8, 0.002); end
  def test_outputs_energy_flows_ab8; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab8, 0.002); end
  def test_outputs_energy_flows_ac8; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac8, 0.002); end
  def test_outputs_energy_flows_ad8; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad8, 0.002); end
  def test_outputs_energy_flows_c10; assert_equal("R.01", worksheet.outputs_energy_flows_c10); end
  def test_outputs_energy_flows_d10; assert_equal("Global Solar", worksheet.outputs_energy_flows_d10); end
  def test_outputs_energy_flows_e10; assert_equal("n/a", worksheet.outputs_energy_flows_e10); end
  def test_outputs_energy_flows_f10; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f10); end
  def test_outputs_energy_flows_g10; assert_equal("n/a", worksheet.outputs_energy_flows_g10); end
  def test_outputs_energy_flows_h10; assert_equal("solar", worksheet.outputs_energy_flows_h10); end
  def test_outputs_energy_flows_i10; assert_equal("E.02", worksheet.outputs_energy_flows_i10); end
  def test_outputs_energy_flows_j10; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j10); end
  def test_outputs_energy_flows_v10; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v10, 0.002); end
  def test_outputs_energy_flows_w10; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w10, 0.002); end
  def test_outputs_energy_flows_x10; assert_in_delta(0.9980911497599998, worksheet.outputs_energy_flows_x10, 0.002); end
  def test_outputs_energy_flows_y10; assert_in_epsilon(1.2660846004799997, worksheet.outputs_energy_flows_y10, 0.002); end
  def test_outputs_energy_flows_z10; assert_in_epsilon(2.0224129766399996, worksheet.outputs_energy_flows_z10, 0.002); end
  def test_outputs_energy_flows_aa10; assert_in_epsilon(2.5494753887999995, worksheet.outputs_energy_flows_aa10, 0.002); end
  def test_outputs_energy_flows_ab10; assert_in_epsilon(3.235941550079999, worksheet.outputs_energy_flows_ab10, 0.002); end
  def test_outputs_energy_flows_ac10; assert_in_epsilon(5.5679282712, worksheet.outputs_energy_flows_ac10, 0.002); end
  def test_outputs_energy_flows_ad10; assert_in_epsilon(7.6909342535999965, worksheet.outputs_energy_flows_ad10, 0.002); end
  def test_outputs_energy_flows_c12; assert_equal("R.01", worksheet.outputs_energy_flows_c12); end
  def test_outputs_energy_flows_d12; assert_equal("Global Solar", worksheet.outputs_energy_flows_d12); end
  def test_outputs_energy_flows_e12; assert_equal("L.01", worksheet.outputs_energy_flows_e12); end
  def test_outputs_energy_flows_f12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f12); end
  def test_outputs_energy_flows_g12; assert_equal("n/a", worksheet.outputs_energy_flows_g12); end
  def test_outputs_energy_flows_h12; assert_equal("solar", worksheet.outputs_energy_flows_h12); end
  def test_outputs_energy_flows_i12; assert_equal("L.01", worksheet.outputs_energy_flows_i12); end
  def test_outputs_energy_flows_j12; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j12); end
  def test_outputs_energy_flows_v12; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v12, 0.002); end
  def test_outputs_energy_flows_w12; assert_in_delta(0.10208543941050044, worksheet.outputs_energy_flows_w12, 0.002); end
  def test_outputs_energy_flows_x12; assert_in_delta(0.7865608589708333, worksheet.outputs_energy_flows_x12, 0.002); end
  def test_outputs_energy_flows_y12; assert_in_epsilon(1.232939296527714, worksheet.outputs_energy_flows_y12, 0.002); end
  def test_outputs_energy_flows_z12; assert_in_epsilon(1.958749808313104, worksheet.outputs_energy_flows_z12, 0.002); end
  def test_outputs_energy_flows_aa12; assert_in_epsilon(2.30368196366464, worksheet.outputs_energy_flows_aa12, 0.002); end
  def test_outputs_energy_flows_ab12; assert_in_epsilon(2.676151755713701, worksheet.outputs_energy_flows_ab12, 0.002); end
  def test_outputs_energy_flows_ac12; assert_in_epsilon(4.154395688223597, worksheet.outputs_energy_flows_ac12, 0.002); end
  def test_outputs_energy_flows_ad12; assert_in_epsilon(5.147574515212536, worksheet.outputs_energy_flows_ad12, 0.002); end
  def test_outputs_energy_flows_c14; assert_equal("R.01", worksheet.outputs_energy_flows_c14); end
  def test_outputs_energy_flows_d14; assert_equal("Global Solar", worksheet.outputs_energy_flows_d14); end
  def test_outputs_energy_flows_e14; assert_equal("N/A", worksheet.outputs_energy_flows_e14); end
  def test_outputs_energy_flows_f14; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f14); end
  def test_outputs_energy_flows_g14; assert_equal("n/a", worksheet.outputs_energy_flows_g14); end
  def test_outputs_energy_flows_h14; assert_equal("Global buildings", worksheet.outputs_energy_flows_h14); end
  def test_outputs_energy_flows_i14; assert_equal("N/A", worksheet.outputs_energy_flows_i14); end
  def test_outputs_energy_flows_j14; assert_equal("Heating, cooling and hot water", worksheet.outputs_energy_flows_j14); end
  def test_outputs_energy_flows_v14; assert_in_delta(0.6298897350573448, worksheet.outputs_energy_flows_v14, 0.002); end
  def test_outputs_energy_flows_w14; assert_in_delta(0.6886722810288107, worksheet.outputs_energy_flows_w14, 0.002); end
  def test_outputs_energy_flows_x14; assert_in_epsilon(1.0292341855301894, worksheet.outputs_energy_flows_x14, 0.002); end
  def test_outputs_energy_flows_y14; assert_in_epsilon(1.4145085721870927, worksheet.outputs_energy_flows_y14, 0.002); end
  def test_outputs_energy_flows_z14; assert_in_epsilon(1.8395905048552232, worksheet.outputs_energy_flows_z14, 0.002); end
  def test_outputs_energy_flows_aa14; assert_in_epsilon(2.293270561441972, worksheet.outputs_energy_flows_aa14, 0.002); end
  def test_outputs_energy_flows_ab14; assert_in_epsilon(2.776181849812108, worksheet.outputs_energy_flows_ab14, 0.002); end
  def test_outputs_energy_flows_ac14; assert_in_epsilon(3.2728494656082097, worksheet.outputs_energy_flows_ac14, 0.002); end
  def test_outputs_energy_flows_ad14; assert_in_epsilon(3.7830935567513353, worksheet.outputs_energy_flows_ad14, 0.002); end
  def test_outputs_energy_flows_c16; assert_equal("R.02", worksheet.outputs_energy_flows_c16); end
  def test_outputs_energy_flows_d16; assert_equal("Global Wind", worksheet.outputs_energy_flows_d16); end
  def test_outputs_energy_flows_e16; assert_equal("n/a", worksheet.outputs_energy_flows_e16); end
  def test_outputs_energy_flows_f16; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f16); end
  def test_outputs_energy_flows_h16; assert_equal("wind", worksheet.outputs_energy_flows_h16); end
  def test_outputs_energy_flows_i16; assert_equal("E.02", worksheet.outputs_energy_flows_i16); end
  def test_outputs_energy_flows_j16; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j16); end
  def test_outputs_energy_flows_v16; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v16, 0.002); end
  def test_outputs_energy_flows_w16; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w16, 0.002); end
  def test_outputs_energy_flows_x16; assert_in_epsilon(3.4827598512, worksheet.outputs_energy_flows_x16, 0.002); end
  def test_outputs_energy_flows_y16; assert_in_epsilon(4.139852198400001, worksheet.outputs_energy_flows_y16, 0.002); end
  def test_outputs_energy_flows_z16; assert_in_epsilon(5.099266353600001, worksheet.outputs_energy_flows_z16, 0.002); end
  def test_outputs_energy_flows_aa16; assert_in_epsilon(5.6019789216000015, worksheet.outputs_energy_flows_aa16, 0.002); end
  def test_outputs_energy_flows_ab16; assert_in_epsilon(7.732874304000001, worksheet.outputs_energy_flows_ab16, 0.002); end
  def test_outputs_energy_flows_ac16; assert_in_epsilon(11.362629456, worksheet.outputs_energy_flows_ac16, 0.002); end
  def test_outputs_energy_flows_ad16; assert_in_epsilon(14.022935136000005, worksheet.outputs_energy_flows_ad16, 0.002); end
  def test_outputs_energy_flows_c18; assert_equal("R.03", worksheet.outputs_energy_flows_c18); end
  def test_outputs_energy_flows_d18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_d18); end
  def test_outputs_energy_flows_e18; assert_equal("n/a", worksheet.outputs_energy_flows_e18); end
  def test_outputs_energy_flows_f18; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f18); end
  def test_outputs_energy_flows_g18; assert_equal("tidal.elec", worksheet.outputs_energy_flows_g18); end
  def test_outputs_energy_flows_h18; assert_equal("Global Tidal", worksheet.outputs_energy_flows_h18); end
  def test_outputs_energy_flows_i18; assert_equal("E.02", worksheet.outputs_energy_flows_i18); end
  def test_outputs_energy_flows_j18; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j18); end
  def test_outputs_energy_flows_v18; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v18, 0.002); end
  def test_outputs_energy_flows_w18; assert_in_delta(0.003786912, worksheet.outputs_energy_flows_w18, 0.002); end
  def test_outputs_energy_flows_x18; assert_in_delta(0.005301676799999999, worksheet.outputs_energy_flows_x18, 0.002); end
  def test_outputs_energy_flows_y18; assert_in_delta(0.013885343999999997, worksheet.outputs_energy_flows_y18, 0.002); end
  def test_outputs_energy_flows_z18; assert_in_delta(0.029979719999999994, worksheet.outputs_energy_flows_z18, 0.002); end
  def test_outputs_energy_flows_aa18; assert_in_delta(0.04575851999999999, worksheet.outputs_energy_flows_aa18, 0.002); end
  def test_outputs_energy_flows_ab18; assert_in_delta(0.08520551999999998, worksheet.outputs_energy_flows_ab18, 0.002); end
  def test_outputs_energy_flows_ac18; assert_in_delta(0.10603353599999997, worksheet.outputs_energy_flows_ac18, 0.002); end
  def test_outputs_energy_flows_ad18; assert_in_delta(0.13254191999999995, worksheet.outputs_energy_flows_ad18, 0.002); end
  def test_outputs_energy_flows_c20; assert_equal("R.04", worksheet.outputs_energy_flows_c20); end
  def test_outputs_energy_flows_d20; assert_equal("Global Wave", worksheet.outputs_energy_flows_d20); end
  def test_outputs_energy_flows_e20; assert_equal("n/a", worksheet.outputs_energy_flows_e20); end
  def test_outputs_energy_flows_f20; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f20); end
  def test_outputs_energy_flows_g20; assert_equal("wave.elec", worksheet.outputs_energy_flows_g20); end
  def test_outputs_energy_flows_h20; assert_equal("Global Wave", worksheet.outputs_energy_flows_h20); end
  def test_outputs_energy_flows_i20; assert_equal("E.02", worksheet.outputs_energy_flows_i20); end
  def test_outputs_energy_flows_j20; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j20); end
  def test_outputs_energy_flows_v20; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v20||0), 0.002); end
  def test_outputs_energy_flows_w20; assert_in_delta(0.00037869119999999997, worksheet.outputs_energy_flows_w20, 0.002); end
  def test_outputs_energy_flows_x20; assert_in_delta(0.0017419795199999995, worksheet.outputs_energy_flows_x20, 0.002); end
  def test_outputs_energy_flows_y20; assert_in_delta(0.015526339199999998, worksheet.outputs_energy_flows_y20, 0.002); end
  def test_outputs_energy_flows_z20; assert_in_delta(0.055225799999999985, worksheet.outputs_energy_flows_z20, 0.002); end
  def test_outputs_energy_flows_aa20; assert_in_delta(0.09467279999999996, worksheet.outputs_energy_flows_aa20, 0.002); end
  def test_outputs_energy_flows_ab20; assert_in_delta(0.13885343999999997, worksheet.outputs_energy_flows_ab20, 0.002); end
  def test_outputs_energy_flows_ac20; assert_in_delta(0.23289508799999994, worksheet.outputs_energy_flows_ac20, 0.002); end
  def test_outputs_energy_flows_ad20; assert_in_delta(0.2802314879999999, worksheet.outputs_energy_flows_ad20, 0.002); end
  def test_outputs_energy_flows_c22; assert_equal("R.05", worksheet.outputs_energy_flows_c22); end
  def test_outputs_energy_flows_d22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d22); end
  def test_outputs_energy_flows_e22; assert_equal("n/a", worksheet.outputs_energy_flows_e22); end
  def test_outputs_energy_flows_f22; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f22); end
  def test_outputs_energy_flows_g22; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g22); end
  def test_outputs_energy_flows_h22; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h22); end
  def test_outputs_energy_flows_i22; assert_equal("E.02", worksheet.outputs_energy_flows_i22); end
  def test_outputs_energy_flows_j22; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j22); end
  def test_outputs_energy_flows_v22; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v22, 0.002); end
  def test_outputs_energy_flows_w22; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w22, 0.002); end
  def test_outputs_energy_flows_x22; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x22, 0.002); end
  def test_outputs_energy_flows_y22; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y22, 0.002); end
  def test_outputs_energy_flows_z22; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z22, 0.002); end
  def test_outputs_energy_flows_aa22; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa22, 0.002); end
  def test_outputs_energy_flows_ab22; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab22, 0.002); end
  def test_outputs_energy_flows_ac22; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac22, 0.002); end
  def test_outputs_energy_flows_ad22; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad22, 0.002); end
  def test_outputs_energy_flows_c24; assert_equal("R.05", worksheet.outputs_energy_flows_c24); end
  def test_outputs_energy_flows_d24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_d24); end
  def test_outputs_energy_flows_e24; assert_equal("L.01", worksheet.outputs_energy_flows_e24); end
  def test_outputs_energy_flows_f24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f24); end
  def test_outputs_energy_flows_g24; assert_equal("geothermal.elec", worksheet.outputs_energy_flows_g24); end
  def test_outputs_energy_flows_h24; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_h24); end
  def test_outputs_energy_flows_i24; assert_equal("L.01", worksheet.outputs_energy_flows_i24); end
  def test_outputs_energy_flows_j24; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j24); end
  def test_outputs_energy_flows_v24; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v24, 0.002); end
  def test_outputs_energy_flows_w24; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w24, 0.002); end
  def test_outputs_energy_flows_x24; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x24, 0.002); end
  def test_outputs_energy_flows_y24; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y24, 0.002); end
  def test_outputs_energy_flows_z24; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z24, 0.002); end
  def test_outputs_energy_flows_aa24; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa24, 0.002); end
  def test_outputs_energy_flows_ab24; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab24, 0.002); end
  def test_outputs_energy_flows_ac24; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac24, 0.002); end
  def test_outputs_energy_flows_ad24; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad24, 0.002); end
  def test_outputs_energy_flows_c26; assert_equal("R.06", worksheet.outputs_energy_flows_c26); end
  def test_outputs_energy_flows_d26; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d26); end
  def test_outputs_energy_flows_e26; assert_equal("n/a", worksheet.outputs_energy_flows_e26); end
  def test_outputs_energy_flows_f26; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f26); end
  def test_outputs_energy_flows_g26; assert_equal("hydro.elec", worksheet.outputs_energy_flows_g26); end
  def test_outputs_energy_flows_h26; assert_equal("Global Hydroelectric dam", worksheet.outputs_energy_flows_h26); end
  def test_outputs_energy_flows_i26; assert_equal("E.02", worksheet.outputs_energy_flows_i26); end
  def test_outputs_energy_flows_j26; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j26); end
  def test_outputs_energy_flows_v26; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v26, 0.002); end
  def test_outputs_energy_flows_w26; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w26, 0.002); end
  def test_outputs_energy_flows_x26; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x26, 0.002); end
  def test_outputs_energy_flows_y26; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y26, 0.002); end
  def test_outputs_energy_flows_z26; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z26, 0.002); end
  def test_outputs_energy_flows_aa26; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa26, 0.002); end
  def test_outputs_energy_flows_ab26; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab26, 0.002); end
  def test_outputs_energy_flows_ac26; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac26, 0.002); end
  def test_outputs_energy_flows_ad26; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad26, 0.002); end
  def test_outputs_energy_flows_c28; assert_equal("R.06", worksheet.outputs_energy_flows_c28); end
  def test_outputs_energy_flows_d28; assert_equal("Global Hydro", worksheet.outputs_energy_flows_d28); end
  def test_outputs_energy_flows_e28; assert_equal("E.02", worksheet.outputs_energy_flows_e28); end
  def test_outputs_energy_flows_f28; assert_equal("Storage", worksheet.outputs_energy_flows_f28); end
  def test_outputs_energy_flows_g28; assert_equal("storage.elec", worksheet.outputs_energy_flows_g28); end
  def test_outputs_energy_flows_h28; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h28); end
  def test_outputs_energy_flows_i28; assert_equal("E.02", worksheet.outputs_energy_flows_i28); end
  def test_outputs_energy_flows_j28; assert_equal("Storage", worksheet.outputs_energy_flows_j28); end
  def test_outputs_energy_flows_v28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v28||0), 0.002); end
  def test_outputs_energy_flows_w28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w28||0), 0.002); end
  def test_outputs_energy_flows_x28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x28||0), 0.002); end
  def test_outputs_energy_flows_y28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y28||0), 0.002); end
  def test_outputs_energy_flows_z28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z28||0), 0.002); end
  def test_outputs_energy_flows_aa28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa28||0), 0.002); end
  def test_outputs_energy_flows_ab28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab28||0), 0.002); end
  def test_outputs_energy_flows_ac28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac28||0), 0.002); end
  def test_outputs_energy_flows_ad28; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad28||0), 0.002); end
  def test_outputs_energy_flows_c30; assert_equal("R.07", worksheet.outputs_energy_flows_c30); end
  def test_outputs_energy_flows_d30; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_d30); end
  def test_outputs_energy_flows_e30; assert_equal("n/a", worksheet.outputs_energy_flows_e30); end
  def test_outputs_energy_flows_f30; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f30); end
  def test_outputs_energy_flows_g30; assert_equal("n/a", worksheet.outputs_energy_flows_g30); end
  def test_outputs_energy_flows_h30; assert_equal("Global buildings", worksheet.outputs_energy_flows_h30); end
  def test_outputs_energy_flows_v30; assert_in_epsilon(3.71647618858541, worksheet.outputs_energy_flows_v30, 0.002); end
  def test_outputs_energy_flows_w30; assert_in_epsilon(4.179205778761453, worksheet.outputs_energy_flows_w30, 0.002); end
  def test_outputs_energy_flows_x30; assert_in_epsilon(4.949881056060994, worksheet.outputs_energy_flows_x30, 0.002); end
  def test_outputs_energy_flows_y30; assert_in_epsilon(5.765938884379526, worksheet.outputs_energy_flows_y30, 0.002); end
  def test_outputs_energy_flows_z30; assert_in_epsilon(6.6105996908929825, worksheet.outputs_energy_flows_z30, 0.002); end
  def test_outputs_energy_flows_aa30; assert_in_epsilon(7.455791209512674, worksheet.outputs_energy_flows_aa30, 0.002); end
  def test_outputs_energy_flows_ab30; assert_in_epsilon(8.30335547091553, worksheet.outputs_energy_flows_ab30, 0.002); end
  def test_outputs_energy_flows_ac30; assert_in_epsilon(9.119729971580755, worksheet.outputs_energy_flows_ac30, 0.002); end
  def test_outputs_energy_flows_ad30; assert_in_epsilon(9.90963015195347, worksheet.outputs_energy_flows_ad30, 0.002); end
  def test_outputs_energy_flows_d32; assert_equal("Forest residues", worksheet.outputs_energy_flows_d32); end
  def test_outputs_energy_flows_e32; assert_equal("Forest", worksheet.outputs_energy_flows_e32); end
  def test_outputs_energy_flows_f32; assert_equal("Solid", worksheet.outputs_energy_flows_f32); end
  def test_outputs_energy_flows_g32; assert_equal("Forest", worksheet.outputs_energy_flows_g32); end
  def test_outputs_energy_flows_h32; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h32); end
  def test_outputs_energy_flows_i32; assert_equal("C.01", worksheet.outputs_energy_flows_i32); end
  def test_outputs_energy_flows_j32; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j32); end
  def test_outputs_energy_flows_v32; assert_in_epsilon(19.751728988237762, worksheet.outputs_energy_flows_v32, 0.002); end
  def test_outputs_energy_flows_w32; assert_in_epsilon(19.51735508398563, worksheet.outputs_energy_flows_w32, 0.002); end
  def test_outputs_energy_flows_x32; assert_in_epsilon(19.381809275136252, worksheet.outputs_energy_flows_x32, 0.002); end
  def test_outputs_energy_flows_y32; assert_in_epsilon(19.31908695092451, worksheet.outputs_energy_flows_y32, 0.002); end
  def test_outputs_energy_flows_z32; assert_in_epsilon(19.1630752707928, worksheet.outputs_energy_flows_z32, 0.002); end
  def test_outputs_energy_flows_aa32; assert_in_epsilon(18.81612086101231, worksheet.outputs_energy_flows_aa32, 0.002); end
  def test_outputs_energy_flows_ab32; assert_in_epsilon(18.568950223395504, worksheet.outputs_energy_flows_ab32, 0.002); end
  def test_outputs_energy_flows_ac32; assert_in_epsilon(18.703939901648194, worksheet.outputs_energy_flows_ac32, 0.002); end
  def test_outputs_energy_flows_ad32; assert_in_epsilon(19.06355772307349, worksheet.outputs_energy_flows_ad32, 0.002); end
  def test_outputs_energy_flows_d34; assert_equal("Traditional biomass", worksheet.outputs_energy_flows_d34); end
  def test_outputs_energy_flows_e34; assert_equal("Forest", worksheet.outputs_energy_flows_e34); end
  def test_outputs_energy_flows_f34; assert_equal("Solid", worksheet.outputs_energy_flows_f34); end
  def test_outputs_energy_flows_g34; assert_equal("Forest", worksheet.outputs_energy_flows_g34); end
  def test_outputs_energy_flows_h34; assert_equal("Global Native forest", worksheet.outputs_energy_flows_h34); end
  def test_outputs_energy_flows_i34; assert_equal("BM.13", worksheet.outputs_energy_flows_i34); end
  def test_outputs_energy_flows_j34; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_j34); end
  def test_outputs_energy_flows_v34; assert_in_epsilon(21.048271011762242, worksheet.outputs_energy_flows_v34, 0.002); end
  def test_outputs_energy_flows_w34; assert_in_epsilon(19.392918780934195, worksheet.outputs_energy_flows_w34, 0.002); end
  def test_outputs_energy_flows_x34; assert_in_epsilon(17.371069438487872, worksheet.outputs_energy_flows_x34, 0.002); end
  def test_outputs_energy_flows_y34; assert_in_epsilon(15.27346946514845, worksheet.outputs_energy_flows_y34, 0.002); end
  def test_outputs_energy_flows_z34; assert_in_epsilon(13.286905733005835, worksheet.outputs_energy_flows_z34, 0.002); end
  def test_outputs_energy_flows_aa34; assert_in_epsilon(11.721575846226846, worksheet.outputs_energy_flows_aa34, 0.002); end
  def test_outputs_energy_flows_ab34; assert_in_epsilon(10.24748365153571, worksheet.outputs_energy_flows_ab34, 0.002); end
  def test_outputs_energy_flows_ac34; assert_in_epsilon(9.200972061648073, worksheet.outputs_energy_flows_ac34, 0.002); end
  def test_outputs_energy_flows_ad34; assert_in_epsilon(8.215916117006064, worksheet.outputs_energy_flows_ad34, 0.002); end
  def test_outputs_energy_flows_d36; assert_equal("Biocrops", worksheet.outputs_energy_flows_d36); end
  def test_outputs_energy_flows_f36; assert_equal("Solid", worksheet.outputs_energy_flows_f36); end
  def test_outputs_energy_flows_g36; assert_equal("arable.bio", worksheet.outputs_energy_flows_g36); end
  def test_outputs_energy_flows_h36; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h36); end
  def test_outputs_energy_flows_i36; assert_equal("C.01", worksheet.outputs_energy_flows_i36); end
  def test_outputs_energy_flows_j36; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j36); end
  def test_outputs_energy_flows_v36; assert_in_epsilon(5.7, worksheet.outputs_energy_flows_v36, 0.002); end
  def test_outputs_energy_flows_w36; assert_in_epsilon(5.952550817058588, worksheet.outputs_energy_flows_w36, 0.002); end
  def test_outputs_energy_flows_x36; assert_in_epsilon(6.630357534305072, worksheet.outputs_energy_flows_x36, 0.002); end
  def test_outputs_energy_flows_y36; assert_in_epsilon(7.3263455844673455, worksheet.outputs_energy_flows_y36, 0.002); end
  def test_outputs_energy_flows_z36; assert_in_epsilon(8.040514967545409, worksheet.outputs_energy_flows_z36, 0.002); end
  def test_outputs_energy_flows_aa36; assert_in_epsilon(8.772865683539258, worksheet.outputs_energy_flows_aa36, 0.002); end
  def test_outputs_energy_flows_ab36; assert_in_epsilon(9.523397732448897, worksheet.outputs_energy_flows_ab36, 0.002); end
  def test_outputs_energy_flows_ac36; assert_in_epsilon(10.292111114274325, worksheet.outputs_energy_flows_ac36, 0.002); end
  def test_outputs_energy_flows_ad36; assert_in_epsilon(11.079005829015541, worksheet.outputs_energy_flows_ad36, 0.002); end
  def test_outputs_energy_flows_d38; assert_equal("Biocrops", worksheet.outputs_energy_flows_d38); end
  def test_outputs_energy_flows_f38; assert_equal("Liquid", worksheet.outputs_energy_flows_f38); end
  def test_outputs_energy_flows_g38; assert_equal("arable.bio", worksheet.outputs_energy_flows_g38); end
  def test_outputs_energy_flows_h38; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h38); end
  def test_outputs_energy_flows_i38; assert_equal("C.02", worksheet.outputs_energy_flows_i38); end
  def test_outputs_energy_flows_j38; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j38); end
  def test_outputs_energy_flows_v38; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v38, 0.002); end
  def test_outputs_energy_flows_w38; assert_in_epsilon(3.9683672113723922, worksheet.outputs_energy_flows_w38, 0.002); end
  def test_outputs_energy_flows_x38; assert_in_epsilon(4.420238356203382, worksheet.outputs_energy_flows_x38, 0.002); end
  def test_outputs_energy_flows_y38; assert_in_epsilon(4.884230389644897, worksheet.outputs_energy_flows_y38, 0.002); end
  def test_outputs_energy_flows_z38; assert_in_epsilon(5.360343311696939, worksheet.outputs_energy_flows_z38, 0.002); end
  def test_outputs_energy_flows_aa38; assert_in_epsilon(5.848577122359506, worksheet.outputs_energy_flows_aa38, 0.002); end
  def test_outputs_energy_flows_ab38; assert_in_epsilon(6.348931821632599, worksheet.outputs_energy_flows_ab38, 0.002); end
  def test_outputs_energy_flows_ac38; assert_in_epsilon(6.861407409516217, worksheet.outputs_energy_flows_ac38, 0.002); end
  def test_outputs_energy_flows_ad38; assert_in_epsilon(7.386003886010363, worksheet.outputs_energy_flows_ad38, 0.002); end
  def test_outputs_energy_flows_d40; assert_equal("Biocrops", worksheet.outputs_energy_flows_d40); end
  def test_outputs_energy_flows_f40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f40); end
  def test_outputs_energy_flows_g40; assert_equal("arable.bio", worksheet.outputs_energy_flows_g40); end
  def test_outputs_energy_flows_h40; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h40); end
  def test_outputs_energy_flows_i40; assert_equal("L.01", worksheet.outputs_energy_flows_i40); end
  def test_outputs_energy_flows_j40; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j40); end
  def test_outputs_energy_flows_v40; assert_in_epsilon(2.375, worksheet.outputs_energy_flows_v40, 0.002); end
  def test_outputs_energy_flows_w40; assert_in_epsilon(2.3232529560249766, worksheet.outputs_energy_flows_w40, 0.002); end
  def test_outputs_energy_flows_x40; assert_in_epsilon(2.3753617334737793, worksheet.outputs_energy_flows_x40, 0.002); end
  def test_outputs_energy_flows_y40; assert_in_epsilon(2.3971682893962676, worksheet.outputs_energy_flows_y40, 0.002); end
  def test_outputs_energy_flows_z40; assert_in_epsilon(2.3886726237924414, worksheet.outputs_energy_flows_z40, 0.002); end
  def test_outputs_energy_flows_aa40; assert_in_epsilon(2.349874736662299, worksheet.outputs_energy_flows_aa40, 0.002); end
  def test_outputs_energy_flows_ab40; assert_in_epsilon(2.280774628005844, worksheet.outputs_energy_flows_ab40, 0.002); end
  def test_outputs_energy_flows_ac40; assert_in_epsilon(2.1813722978230743, worksheet.outputs_energy_flows_ac40, 0.002); end
  def test_outputs_energy_flows_ad40; assert_in_epsilon(2.0516677461139885, worksheet.outputs_energy_flows_ad40, 0.002); end
  def test_outputs_energy_flows_d42; assert_equal("Biocrops", worksheet.outputs_energy_flows_d42); end
  def test_outputs_energy_flows_f42; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f42); end
  def test_outputs_energy_flows_g42; assert_equal("arable.bio", worksheet.outputs_energy_flows_g42); end
  def test_outputs_energy_flows_h42; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h42); end
  def test_outputs_energy_flows_i42; assert_equal("O.01", worksheet.outputs_energy_flows_i42); end
  def test_outputs_energy_flows_j42; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j42); end
  def test_outputs_energy_flows_v42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v42||0), 0.002); end
  def test_outputs_energy_flows_w42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w42||0), 0.002); end
  def test_outputs_energy_flows_x42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x42||0), 0.002); end
  def test_outputs_energy_flows_y42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y42||0), 0.002); end
  def test_outputs_energy_flows_z42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z42||0), 0.002); end
  def test_outputs_energy_flows_aa42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa42||0), 0.002); end
  def test_outputs_energy_flows_ab42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab42||0), 0.002); end
  def test_outputs_energy_flows_ac42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac42||0), 0.002); end
  def test_outputs_energy_flows_ad42; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad42||0), 0.002); end
  def test_outputs_energy_flows_c44; assert_equal("n/a", worksheet.outputs_energy_flows_c44); end
  def test_outputs_energy_flows_d44; assert_equal("Food waste", worksheet.outputs_energy_flows_d44); end
  def test_outputs_energy_flows_e44; assert_equal("n/a", worksheet.outputs_energy_flows_e44); end
  def test_outputs_energy_flows_f44; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f44); end
  def test_outputs_energy_flows_g44; assert_equal("Arable.food", worksheet.outputs_energy_flows_g44); end
  def test_outputs_energy_flows_h44; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_h44); end
  def test_outputs_energy_flows_i44; assert_equal("BM.09", worksheet.outputs_energy_flows_i44); end
  def test_outputs_energy_flows_j44; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j44); end
  def test_outputs_energy_flows_v44; assert_in_epsilon(4.559262495489626, worksheet.outputs_energy_flows_v44, 0.002); end
  def test_outputs_energy_flows_w44; assert_in_epsilon(4.791275124290851, worksheet.outputs_energy_flows_w44, 0.002); end
  def test_outputs_energy_flows_x44; assert_in_epsilon(5.070184060826728, worksheet.outputs_energy_flows_x44, 0.002); end
  def test_outputs_energy_flows_y44; assert_in_epsilon(5.3461254778557565, worksheet.outputs_energy_flows_y44, 0.002); end
  def test_outputs_energy_flows_z44; assert_in_epsilon(5.6492798064704, worksheet.outputs_energy_flows_z44, 0.002); end
  def test_outputs_energy_flows_aa44; assert_in_epsilon(6.004795807750643, worksheet.outputs_energy_flows_aa44, 0.002); end
  def test_outputs_energy_flows_ab44; assert_in_epsilon(6.353768979189643, worksheet.outputs_energy_flows_ab44, 0.002); end
  def test_outputs_energy_flows_ac44; assert_in_epsilon(6.62661930383124, worksheet.outputs_energy_flows_ac44, 0.002); end
  def test_outputs_energy_flows_ad44; assert_in_epsilon(6.846673753198792, worksheet.outputs_energy_flows_ad44, 0.002); end
  def test_outputs_energy_flows_c46; assert_equal("n/a ", worksheet.outputs_energy_flows_c46); end
  def test_outputs_energy_flows_d46; assert_equal("Waste from animals", worksheet.outputs_energy_flows_d46); end
  def test_outputs_energy_flows_e46; assert_equal("n/a", worksheet.outputs_energy_flows_e46); end
  def test_outputs_energy_flows_f46; assert_equal("Bio conversion", worksheet.outputs_energy_flows_f46); end
  def test_outputs_energy_flows_g46; assert_equal("Pasture.food", worksheet.outputs_energy_flows_g46); end
  def test_outputs_energy_flows_h46; assert_equal("Global Pasture for animals", worksheet.outputs_energy_flows_h46); end
  def test_outputs_energy_flows_i46; assert_equal("BM.09", worksheet.outputs_energy_flows_i46); end
  def test_outputs_energy_flows_j46; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_j46); end
  def test_outputs_energy_flows_v46; assert_in_delta(0.0010023132251759234, worksheet.outputs_energy_flows_v46, 0.002); end
  def test_outputs_energy_flows_w46; assert_in_delta(0.0014261552629854905, worksheet.outputs_energy_flows_w46, 0.002); end
  def test_outputs_energy_flows_x46; assert_in_delta(0.0024206055578001448, worksheet.outputs_energy_flows_x46, 0.002); end
  def test_outputs_energy_flows_y46; assert_in_delta(0.00343754183916713, worksheet.outputs_energy_flows_y46, 0.002); end
  def test_outputs_energy_flows_z46; assert_in_delta(0.0044962912420213495, worksheet.outputs_energy_flows_z46, 0.002); end
  def test_outputs_energy_flows_aa46; assert_in_delta(0.005630683853053604, worksheet.outputs_energy_flows_aa46, 0.002); end
  def test_outputs_energy_flows_ab46; assert_in_delta(0.006781437514409035, worksheet.outputs_energy_flows_ab46, 0.002); end
  def test_outputs_energy_flows_ac46; assert_in_delta(0.007838706354546934, worksheet.outputs_energy_flows_ac46, 0.002); end
  def test_outputs_energy_flows_ad46; assert_in_delta(0.008800969838453833, worksheet.outputs_energy_flows_ad46, 0.002); end
  def test_outputs_energy_flows_c48; assert_equal("Q.01", worksheet.outputs_energy_flows_c48); end
  def test_outputs_energy_flows_d48; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d48); end
  def test_outputs_energy_flows_e48; assert_equal("CFF.01", worksheet.outputs_energy_flows_e48); end
  def test_outputs_energy_flows_f48; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_f48); end
  def test_outputs_energy_flows_g48; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g48); end
  def test_outputs_energy_flows_h48; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h48); end
  def test_outputs_energy_flows_v48; assert_in_epsilon(147.1802639769476, worksheet.outputs_energy_flows_v48, 0.002); end
  def test_outputs_energy_flows_w48; assert_in_epsilon(147.6675256584808, worksheet.outputs_energy_flows_w48, 0.002); end
  def test_outputs_energy_flows_x48; assert_in_epsilon(158.72412075273633, worksheet.outputs_energy_flows_x48, 0.002); end
  def test_outputs_energy_flows_y48; assert_in_epsilon(176.6834173167415, worksheet.outputs_energy_flows_y48, 0.002); end
  def test_outputs_energy_flows_z48; assert_in_epsilon(190.76562334373367, worksheet.outputs_energy_flows_z48, 0.002); end
  def test_outputs_energy_flows_aa48; assert_in_epsilon(201.36570911744064, worksheet.outputs_energy_flows_aa48, 0.002); end
  def test_outputs_energy_flows_ab48; assert_in_epsilon(207.68293725415316, worksheet.outputs_energy_flows_ab48, 0.002); end
  def test_outputs_energy_flows_ac48; assert_in_epsilon(202.3647767026557, worksheet.outputs_energy_flows_ac48, 0.002); end
  def test_outputs_energy_flows_ad48; assert_in_epsilon(200.8301465175261, worksheet.outputs_energy_flows_ad48, 0.002); end
  def test_outputs_energy_flows_c50; assert_equal("Q.01", worksheet.outputs_energy_flows_c50); end
  def test_outputs_energy_flows_d50; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_d50); end
  def test_outputs_energy_flows_e50; assert_equal("L.02", worksheet.outputs_energy_flows_e50); end
  def test_outputs_energy_flows_f50; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f50); end
  def test_outputs_energy_flows_g50; assert_equal("Coal.extract", worksheet.outputs_energy_flows_g50); end
  def test_outputs_energy_flows_h50; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_h50); end
  def test_outputs_energy_flows_v50; assert_in_epsilon(25.972987760637835, worksheet.outputs_energy_flows_v50, 0.002); end
  def test_outputs_energy_flows_w50; assert_in_epsilon(26.058975116202532, worksheet.outputs_energy_flows_w50, 0.002); end
  def test_outputs_energy_flows_x50; assert_in_epsilon(32.50975967224721, worksheet.outputs_energy_flows_x50, 0.002); end
  def test_outputs_energy_flows_y50; assert_in_epsilon(40.372377912670686, worksheet.outputs_energy_flows_y50, 0.002); end
  def test_outputs_energy_flows_z50; assert_in_epsilon(45.91629147479446, worksheet.outputs_energy_flows_z50, 0.002); end
  def test_outputs_energy_flows_aa50; assert_in_epsilon(50.972272232735634, worksheet.outputs_energy_flows_aa50, 0.002); end
  def test_outputs_energy_flows_ab50; assert_in_epsilon(55.20685673844582, worksheet.outputs_energy_flows_ab50, 0.002); end
  def test_outputs_energy_flows_ac50; assert_in_epsilon(56.41371012938484, worksheet.outputs_energy_flows_ac50, 0.002); end
  def test_outputs_energy_flows_ad50; assert_in_epsilon(58.640327019329334, worksheet.outputs_energy_flows_ad50, 0.002); end
  def test_outputs_energy_flows_c52; assert_equal("Q.02", worksheet.outputs_energy_flows_c52); end
  def test_outputs_energy_flows_d52; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d52); end
  def test_outputs_energy_flows_e52; assert_equal("CFF.02", worksheet.outputs_energy_flows_e52); end
  def test_outputs_energy_flows_f52; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_f52); end
  def test_outputs_energy_flows_g52; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g52); end
  def test_outputs_energy_flows_h52; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h52); end
  def test_outputs_energy_flows_v52; assert_in_epsilon(164.04151015234243, worksheet.outputs_energy_flows_v52, 0.002); end
  def test_outputs_energy_flows_w52; assert_in_epsilon(184.93792004921306, worksheet.outputs_energy_flows_w52, 0.002); end
  def test_outputs_energy_flows_x52; assert_in_epsilon(211.86023108374414, worksheet.outputs_energy_flows_x52, 0.002); end
  def test_outputs_energy_flows_y52; assert_in_epsilon(226.81562151305965, worksheet.outputs_energy_flows_y52, 0.002); end
  def test_outputs_energy_flows_z52; assert_in_epsilon(244.4688805713088, worksheet.outputs_energy_flows_z52, 0.002); end
  def test_outputs_energy_flows_aa52; assert_in_epsilon(256.1067639828932, worksheet.outputs_energy_flows_aa52, 0.002); end
  def test_outputs_energy_flows_ab52; assert_in_epsilon(268.37527952729636, worksheet.outputs_energy_flows_ab52, 0.002); end
  def test_outputs_energy_flows_ac52; assert_in_epsilon(280.7504592393308, worksheet.outputs_energy_flows_ac52, 0.002); end
  def test_outputs_energy_flows_ad52; assert_in_epsilon(291.63143359690025, worksheet.outputs_energy_flows_ad52, 0.002); end
  def test_outputs_energy_flows_c54; assert_equal("Q.02", worksheet.outputs_energy_flows_c54); end
  def test_outputs_energy_flows_d54; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_d54); end
  def test_outputs_energy_flows_e54; assert_equal("L.02", worksheet.outputs_energy_flows_e54); end
  def test_outputs_energy_flows_f54; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f54); end
  def test_outputs_energy_flows_g54; assert_equal("Oil.extract", worksheet.outputs_energy_flows_g54); end
  def test_outputs_energy_flows_h54; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_h54); end
  def test_outputs_energy_flows_v54; assert_in_epsilon(12.347210441574134, worksheet.outputs_energy_flows_v54, 0.002); end
  def test_outputs_energy_flows_w54; assert_in_epsilon(13.920058498327819, worksheet.outputs_energy_flows_w54, 0.002); end
  def test_outputs_energy_flows_x54; assert_in_epsilon(19.93433246521002, worksheet.outputs_energy_flows_x54, 0.002); end
  def test_outputs_energy_flows_y54; assert_in_epsilon(29.18395130077738, worksheet.outputs_energy_flows_y54, 0.002); end
  def test_outputs_energy_flows_z54; assert_in_epsilon(33.969479988268375, worksheet.outputs_energy_flows_z54, 0.002); end
  def test_outputs_energy_flows_aa54; assert_in_epsilon(38.94711157343539, worksheet.outputs_energy_flows_aa54, 0.002); end
  def test_outputs_energy_flows_ab54; assert_in_epsilon(46.6191800117839, worksheet.outputs_energy_flows_ab54, 0.002); end
  def test_outputs_energy_flows_ac54; assert_in_epsilon(55.075448941686886, worksheet.outputs_energy_flows_ac54, 0.002); end
  def test_outputs_energy_flows_ad54; assert_in_epsilon(62.290209117784514, worksheet.outputs_energy_flows_ad54, 0.002); end
  def test_outputs_energy_flows_c56; assert_equal("Q.03", worksheet.outputs_energy_flows_c56); end
  def test_outputs_energy_flows_d56; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d56); end
  def test_outputs_energy_flows_e56; assert_equal("CFF.03", worksheet.outputs_energy_flows_e56); end
  def test_outputs_energy_flows_f56; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_f56); end
  def test_outputs_energy_flows_g56; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g56); end
  def test_outputs_energy_flows_h56; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h56); end
  def test_outputs_energy_flows_v56; assert_in_epsilon(94.55124332671798, worksheet.outputs_energy_flows_v56, 0.002); end
  def test_outputs_energy_flows_w56; assert_in_epsilon(98.20873307622276, worksheet.outputs_energy_flows_w56, 0.002); end
  def test_outputs_energy_flows_x56; assert_in_epsilon(103.6642552543965, worksheet.outputs_energy_flows_x56, 0.002); end
  def test_outputs_energy_flows_y56; assert_in_epsilon(111.52489633533625, worksheet.outputs_energy_flows_y56, 0.002); end
  def test_outputs_energy_flows_z56; assert_in_epsilon(119.43225267304435, worksheet.outputs_energy_flows_z56, 0.002); end
  def test_outputs_energy_flows_aa56; assert_in_epsilon(127.50997382190066, worksheet.outputs_energy_flows_aa56, 0.002); end
  def test_outputs_energy_flows_ab56; assert_in_epsilon(136.5487499065868, worksheet.outputs_energy_flows_ab56, 0.002); end
  def test_outputs_energy_flows_ac56; assert_in_epsilon(144.41564746399615, worksheet.outputs_energy_flows_ac56, 0.002); end
  def test_outputs_energy_flows_ad56; assert_in_epsilon(153.51265595222927, worksheet.outputs_energy_flows_ad56, 0.002); end
  def test_outputs_energy_flows_c58; assert_equal("Q.03", worksheet.outputs_energy_flows_c58); end
  def test_outputs_energy_flows_d58; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_d58); end
  def test_outputs_energy_flows_e58; assert_equal("L.02", worksheet.outputs_energy_flows_e58); end
  def test_outputs_energy_flows_f58; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f58); end
  def test_outputs_energy_flows_g58; assert_equal("NaturalGas.extract", worksheet.outputs_energy_flows_g58); end
  def test_outputs_energy_flows_h58; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_h58); end
  def test_outputs_energy_flows_v58; assert_in_epsilon(28.242579175513157, worksheet.outputs_energy_flows_v58, 0.002); end
  def test_outputs_energy_flows_w58; assert_in_epsilon(29.33507611367692, worksheet.outputs_energy_flows_w58, 0.002); end
  def test_outputs_energy_flows_x58; assert_in_epsilon(33.821494419869424, worksheet.outputs_energy_flows_x58, 0.002); end
  def test_outputs_energy_flows_y58; assert_in_epsilon(36.38610676192667, worksheet.outputs_energy_flows_y58, 0.002); end
  def test_outputs_energy_flows_z58; assert_in_epsilon(40.23653432300425, worksheet.outputs_energy_flows_z58, 0.002); end
  def test_outputs_energy_flows_aa58; assert_in_epsilon(41.60139729467845, worksheet.outputs_energy_flows_aa58, 0.002); end
  def test_outputs_energy_flows_ab58; assert_in_epsilon(44.550387900557496, worksheet.outputs_energy_flows_ab58, 0.002); end
  def test_outputs_energy_flows_ac58; assert_in_epsilon(52.335915838450916, worksheet.outputs_energy_flows_ac58, 0.002); end
  def test_outputs_energy_flows_ad58; assert_in_epsilon(61.491063868820135, worksheet.outputs_energy_flows_ad58, 0.002); end
  def test_outputs_energy_flows_c60; assert_equal("CFF.01", worksheet.outputs_energy_flows_c60); end
  def test_outputs_energy_flows_d60; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d60); end
  def test_outputs_energy_flows_e60; assert_equal("FF.01", worksheet.outputs_energy_flows_e60); end
  def test_outputs_energy_flows_f60; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_f60); end
  def test_outputs_energy_flows_g60; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g60); end
  def test_outputs_energy_flows_h60; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h60); end
  def test_outputs_energy_flows_v60; assert_in_epsilon(139.82125077810022, worksheet.outputs_energy_flows_v60, 0.002); end
  def test_outputs_energy_flows_w60; assert_in_epsilon(140.28414937555675, worksheet.outputs_energy_flows_w60, 0.002); end
  def test_outputs_energy_flows_x60; assert_in_epsilon(146.34363933402292, worksheet.outputs_energy_flows_x60, 0.002); end
  def test_outputs_energy_flows_y60; assert_in_epsilon(161.13527659286828, worksheet.outputs_energy_flows_y60, 0.002); end
  def test_outputs_energy_flows_z60; assert_in_epsilon(171.30752976267286, worksheet.outputs_energy_flows_z60, 0.002); end
  def test_outputs_energy_flows_aa60; assert_in_epsilon(178.8127496962873, worksheet.outputs_energy_flows_aa60, 0.002); end
  def test_outputs_energy_flows_ab60; assert_in_epsilon(181.5148871601299, worksheet.outputs_energy_flows_ab60, 0.002); end
  def test_outputs_energy_flows_ac60; assert_in_epsilon(174.0337079642839, worksheet.outputs_energy_flows_ac60, 0.002); end
  def test_outputs_energy_flows_ad60; assert_in_epsilon(169.09898336775697, worksheet.outputs_energy_flows_ad60, 0.002); end
  def test_outputs_energy_flows_c62; assert_equal("CFF.01", worksheet.outputs_energy_flows_c62); end
  def test_outputs_energy_flows_d62; assert_equal("Global Crude coal", worksheet.outputs_energy_flows_d62); end
  def test_outputs_energy_flows_e62; assert_equal("L.02", worksheet.outputs_energy_flows_e62); end
  def test_outputs_energy_flows_f62; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f62); end
  def test_outputs_energy_flows_g62; assert_equal("Coal.wash", worksheet.outputs_energy_flows_g62); end
  def test_outputs_energy_flows_h62; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_h62); end
  def test_outputs_energy_flows_v62; assert_in_epsilon(7.359013198847379, worksheet.outputs_energy_flows_v62, 0.002); end
  def test_outputs_energy_flows_w62; assert_in_epsilon(7.383376282924047, worksheet.outputs_energy_flows_w62, 0.002); end
  def test_outputs_energy_flows_x62; assert_in_epsilon(12.380481418713401, worksheet.outputs_energy_flows_x62, 0.002); end
  def test_outputs_energy_flows_y62; assert_in_epsilon(15.548140723873217, worksheet.outputs_energy_flows_y62, 0.002); end
  def test_outputs_energy_flows_z62; assert_in_epsilon(19.458093581060808, worksheet.outputs_energy_flows_z62, 0.002); end
  def test_outputs_energy_flows_aa62; assert_in_epsilon(22.552959421153332, worksheet.outputs_energy_flows_aa62, 0.002); end
  def test_outputs_energy_flows_ab62; assert_in_epsilon(26.168050094023272, worksheet.outputs_energy_flows_ab62, 0.002); end
  def test_outputs_energy_flows_ac62; assert_in_epsilon(28.331068738371783, worksheet.outputs_energy_flows_ac62, 0.002); end
  def test_outputs_energy_flows_ad62; assert_in_epsilon(31.731163149769117, worksheet.outputs_energy_flows_ad62, 0.002); end
  def test_outputs_energy_flows_c64; assert_equal("CFF.02", worksheet.outputs_energy_flows_c64); end
  def test_outputs_energy_flows_d64; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d64); end
  def test_outputs_energy_flows_e64; assert_equal("FF.02", worksheet.outputs_energy_flows_e64); end
  def test_outputs_energy_flows_f64; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_f64); end
  def test_outputs_energy_flows_g64; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g64); end
  def test_outputs_energy_flows_h64; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h64); end
  def test_outputs_energy_flows_v64; assert_in_epsilon(152.06841254112993, worksheet.outputs_energy_flows_v64, 0.002); end
  def test_outputs_energy_flows_w64; assert_in_epsilon(171.99226564576819, worksheet.outputs_energy_flows_w64, 0.002); end
  def test_outputs_energy_flows_x64; assert_in_epsilon(196.18257398354712, worksheet.outputs_energy_flows_x64, 0.002); end
  def test_outputs_energy_flows_y64; assert_in_epsilon(210.03126552109327, worksheet.outputs_energy_flows_y64, 0.002); end
  def test_outputs_energy_flows_z64; assert_in_epsilon(226.0848207523464, worksheet.outputs_energy_flows_z64, 0.002); end
  def test_outputs_energy_flows_aa64; assert_in_epsilon(238.38417591527698, worksheet.outputs_energy_flows_aa64, 0.002); end
  def test_outputs_energy_flows_ab64; assert_in_epsilon(249.37430973676376, worksheet.outputs_energy_flows_ab64, 0.002); end
  def test_outputs_energy_flows_ac64; assert_in_epsilon(260.7610265414904, worksheet.outputs_energy_flows_ac64, 0.002); end
  def test_outputs_energy_flows_ad64; assert_in_epsilon(270.6339703779234, worksheet.outputs_energy_flows_ad64, 0.002); end
  def test_outputs_energy_flows_c66; assert_equal("CFF.02", worksheet.outputs_energy_flows_c66); end
  def test_outputs_energy_flows_d66; assert_equal("Global Crude oil", worksheet.outputs_energy_flows_d66); end
  def test_outputs_energy_flows_e66; assert_equal("L.02", worksheet.outputs_energy_flows_e66); end
  def test_outputs_energy_flows_f66; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f66); end
  def test_outputs_energy_flows_g66; assert_equal("Oil.refine", worksheet.outputs_energy_flows_g66); end
  def test_outputs_energy_flows_h66; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_h66); end
  def test_outputs_energy_flows_v66; assert_in_epsilon(11.973097611212495, worksheet.outputs_energy_flows_v66, 0.002); end
  def test_outputs_energy_flows_w66; assert_in_epsilon(12.945654403444877, worksheet.outputs_energy_flows_w66, 0.002); end
  def test_outputs_energy_flows_x66; assert_in_epsilon(15.677657100197024, worksheet.outputs_energy_flows_x66, 0.002); end
  def test_outputs_energy_flows_y66; assert_in_epsilon(16.78435599196638, worksheet.outputs_energy_flows_y66, 0.002); end
  def test_outputs_energy_flows_z66; assert_in_epsilon(18.384059818962413, worksheet.outputs_energy_flows_z66, 0.002); end
  def test_outputs_energy_flows_aa66; assert_in_epsilon(17.722588067616215, worksheet.outputs_energy_flows_aa66, 0.002); end
  def test_outputs_energy_flows_ab66; assert_in_epsilon(19.000969790532594, worksheet.outputs_energy_flows_ab66, 0.002); end
  def test_outputs_energy_flows_ac66; assert_in_epsilon(19.989432697840357, worksheet.outputs_energy_flows_ac66, 0.002); end
  def test_outputs_energy_flows_ad66; assert_in_epsilon(20.99746321897686, worksheet.outputs_energy_flows_ad66, 0.002); end
  def test_outputs_energy_flows_c68; assert_equal("CFF.03", worksheet.outputs_energy_flows_c68); end
  def test_outputs_energy_flows_d68; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d68); end
  def test_outputs_energy_flows_e68; assert_equal("FF.03", worksheet.outputs_energy_flows_e68); end
  def test_outputs_energy_flows_f68; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_f68); end
  def test_outputs_energy_flows_g68; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g68); end
  def test_outputs_energy_flows_h68; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h68); end
  def test_outputs_energy_flows_v68; assert_in_epsilon(92.66021846018361, worksheet.outputs_energy_flows_v68, 0.002); end
  def test_outputs_energy_flows_w68; assert_in_epsilon(96.2445584146983, worksheet.outputs_energy_flows_w68, 0.002); end
  def test_outputs_energy_flows_x68; assert_in_epsilon(101.59097014930856, worksheet.outputs_energy_flows_x68, 0.002); end
  def test_outputs_energy_flows_y68; assert_in_epsilon(109.29439840862952, worksheet.outputs_energy_flows_y68, 0.002); end
  def test_outputs_energy_flows_z68; assert_in_epsilon(117.04360761958345, worksheet.outputs_energy_flows_z68, 0.002); end
  def test_outputs_energy_flows_aa68; assert_in_epsilon(124.95977434546265, worksheet.outputs_energy_flows_aa68, 0.002); end
  def test_outputs_energy_flows_ab68; assert_in_epsilon(133.81777490845508, worksheet.outputs_energy_flows_ab68, 0.002); end
  def test_outputs_energy_flows_ac68; assert_in_epsilon(141.52733451471622, worksheet.outputs_energy_flows_ac68, 0.002); end
  def test_outputs_energy_flows_ad68; assert_in_epsilon(150.44240283318467, worksheet.outputs_energy_flows_ad68, 0.002); end
  def test_outputs_energy_flows_c70; assert_equal("CFF.03", worksheet.outputs_energy_flows_c70); end
  def test_outputs_energy_flows_d70; assert_equal("Global Unprocessed gas", worksheet.outputs_energy_flows_d70); end
  def test_outputs_energy_flows_e70; assert_equal("L.02", worksheet.outputs_energy_flows_e70); end
  def test_outputs_energy_flows_f70; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f70); end
  def test_outputs_energy_flows_g70; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_g70); end
  def test_outputs_energy_flows_h70; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_h70); end
  def test_outputs_energy_flows_v70; assert_in_epsilon(1.8910248665343659, worksheet.outputs_energy_flows_v70, 0.002); end
  def test_outputs_energy_flows_w70; assert_in_epsilon(1.9641746615244529, worksheet.outputs_energy_flows_w70, 0.002); end
  def test_outputs_energy_flows_x70; assert_in_epsilon(2.0732851050879333, worksheet.outputs_energy_flows_x70, 0.002); end
  def test_outputs_energy_flows_y70; assert_in_epsilon(2.2304979267067324, worksheet.outputs_energy_flows_y70, 0.002); end
  def test_outputs_energy_flows_z70; assert_in_epsilon(2.388645053460891, worksheet.outputs_energy_flows_z70, 0.002); end
  def test_outputs_energy_flows_aa70; assert_in_epsilon(2.55019947643801, worksheet.outputs_energy_flows_aa70, 0.002); end
  def test_outputs_energy_flows_ab70; assert_in_epsilon(2.730974998131728, worksheet.outputs_energy_flows_ab70, 0.002); end
  def test_outputs_energy_flows_ac70; assert_in_epsilon(2.8883129492799355, worksheet.outputs_energy_flows_ac70, 0.002); end
  def test_outputs_energy_flows_ad70; assert_in_epsilon(3.070253119044594, worksheet.outputs_energy_flows_ad70, 0.002); end
  def test_outputs_energy_flows_c72; assert_equal("FF.01", worksheet.outputs_energy_flows_c72); end
  def test_outputs_energy_flows_d72; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d72); end
  def test_outputs_energy_flows_e72; assert_equal("n/a", worksheet.outputs_energy_flows_e72); end
  def test_outputs_energy_flows_f72; assert_equal("Solid", worksheet.outputs_energy_flows_f72); end
  def test_outputs_energy_flows_g72; assert_equal("coal.network", worksheet.outputs_energy_flows_g72); end
  def test_outputs_energy_flows_h72; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h72); end
  def test_outputs_energy_flows_i72; assert_equal("C.01", worksheet.outputs_energy_flows_i72); end
  def test_outputs_energy_flows_j72; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j72); end
  def test_outputs_energy_flows_v72; assert_in_epsilon(139.70058677118658, worksheet.outputs_energy_flows_v72, 0.002); end
  def test_outputs_energy_flows_w72; assert_in_epsilon(140.19428483897497, worksheet.outputs_energy_flows_w72, 0.002); end
  def test_outputs_energy_flows_x72; assert_in_epsilon(146.2790483574302, worksheet.outputs_energy_flows_x72, 0.002); end
  def test_outputs_energy_flows_y72; assert_in_epsilon(161.0862805897641, worksheet.outputs_energy_flows_y72, 0.002); end
  def test_outputs_energy_flows_z72; assert_in_epsilon(171.2716440543252, worksheet.outputs_energy_flows_z72, 0.002); end
  def test_outputs_energy_flows_aa72; assert_in_epsilon(178.78694537646112, worksheet.outputs_energy_flows_aa72, 0.002); end
  def test_outputs_energy_flows_ab72; assert_in_epsilon(181.49684259884123, worksheet.outputs_energy_flows_ab72, 0.002); end
  def test_outputs_energy_flows_ac72; assert_in_epsilon(174.02179002978718, worksheet.outputs_energy_flows_ac72, 0.002); end
  def test_outputs_energy_flows_ad72; assert_in_epsilon(169.09101620996432, worksheet.outputs_energy_flows_ad72, 0.002); end
  def test_outputs_energy_flows_c74; assert_equal("FF.01", worksheet.outputs_energy_flows_c74); end
  def test_outputs_energy_flows_d74; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d74); end
  def test_outputs_energy_flows_e74; assert_equal("L.02", worksheet.outputs_energy_flows_e74); end
  def test_outputs_energy_flows_f74; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f74); end
  def test_outputs_energy_flows_g74; assert_equal("coal.network", worksheet.outputs_energy_flows_g74); end
  def test_outputs_energy_flows_h74; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_h74); end
  def test_outputs_energy_flows_i74; assert_equal("C.01", worksheet.outputs_energy_flows_i74); end
  def test_outputs_energy_flows_j74; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j74); end
  def test_outputs_energy_flows_v74; assert_in_delta(0.1206640069136373, worksheet.outputs_energy_flows_v74, 0.002); end
  def test_outputs_energy_flows_w74; assert_in_delta(0.08986453658178295, worksheet.outputs_energy_flows_w74, 0.002); end
  def test_outputs_energy_flows_x74; assert_in_delta(0.06459097659270689, worksheet.outputs_energy_flows_x74, 0.002); end
  def test_outputs_energy_flows_y74; assert_in_delta(0.048996003104182645, worksheet.outputs_energy_flows_y74, 0.002); end
  def test_outputs_energy_flows_z74; assert_in_delta(0.03588570834764689, worksheet.outputs_energy_flows_z74, 0.002); end
  def test_outputs_energy_flows_aa74; assert_in_delta(0.025804319826184634, worksheet.outputs_energy_flows_aa74, 0.002); end
  def test_outputs_energy_flows_ab74; assert_in_delta(0.01804456128865087, worksheet.outputs_energy_flows_ab74, 0.002); end
  def test_outputs_energy_flows_ac74; assert_in_delta(0.011917934496726984, worksheet.outputs_energy_flows_ac74, 0.002); end
  def test_outputs_energy_flows_ad74; assert_in_delta(0.00796715779264413, worksheet.outputs_energy_flows_ad74, 0.002); end
  def test_outputs_energy_flows_c76; assert_equal("FF.02", worksheet.outputs_energy_flows_c76); end
  def test_outputs_energy_flows_d76; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d76); end
  def test_outputs_energy_flows_e76; assert_equal("n/a", worksheet.outputs_energy_flows_e76); end
  def test_outputs_energy_flows_f76; assert_equal("Liquid", worksheet.outputs_energy_flows_f76); end
  def test_outputs_energy_flows_g76; assert_equal("oil.network", worksheet.outputs_energy_flows_g76); end
  def test_outputs_energy_flows_h76; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h76); end
  def test_outputs_energy_flows_i76; assert_equal("C.02", worksheet.outputs_energy_flows_i76); end
  def test_outputs_energy_flows_j76; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j76); end
  def test_outputs_energy_flows_v76; assert_in_epsilon(151.78392090250395, worksheet.outputs_energy_flows_v76, 0.002); end
  def test_outputs_energy_flows_w76; assert_in_epsilon(171.68248686543805, worksheet.outputs_energy_flows_w76, 0.002); end
  def test_outputs_energy_flows_x76; assert_in_epsilon(195.84560346789317, worksheet.outputs_energy_flows_x76, 0.002); end
  def test_outputs_energy_flows_y76; assert_in_epsilon(209.68723065429134, worksheet.outputs_energy_flows_y76, 0.002); end
  def test_outputs_energy_flows_z76; assert_in_epsilon(225.73165763723034, worksheet.outputs_energy_flows_z76, 0.002); end
  def test_outputs_energy_flows_aa76; assert_in_epsilon(238.02906397277778, worksheet.outputs_energy_flows_aa76, 0.002); end
  def test_outputs_energy_flows_ab76; assert_in_epsilon(249.02004982955543, worksheet.outputs_energy_flows_ab76, 0.002); end
  def test_outputs_energy_flows_ac76; assert_in_epsilon(260.4077668958438, worksheet.outputs_energy_flows_ac76, 0.002); end
  def test_outputs_energy_flows_ad76; assert_in_epsilon(270.2843366144481, worksheet.outputs_energy_flows_ad76, 0.002); end
  def test_outputs_energy_flows_c78; assert_equal("FF.02", worksheet.outputs_energy_flows_c78); end
  def test_outputs_energy_flows_d78; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d78); end
  def test_outputs_energy_flows_e78; assert_equal("L.02", worksheet.outputs_energy_flows_e78); end
  def test_outputs_energy_flows_f78; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f78); end
  def test_outputs_energy_flows_g78; assert_equal("oil.network", worksheet.outputs_energy_flows_g78); end
  def test_outputs_energy_flows_h78; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_h78); end
  def test_outputs_energy_flows_i78; assert_equal("C.02", worksheet.outputs_energy_flows_i78); end
  def test_outputs_energy_flows_j78; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j78); end
  def test_outputs_energy_flows_v78; assert_in_delta(0.2844916386259812, worksheet.outputs_energy_flows_v78, 0.002); end
  def test_outputs_energy_flows_w78; assert_in_delta(0.3097787803301365, worksheet.outputs_energy_flows_w78, 0.002); end
  def test_outputs_energy_flows_x78; assert_in_delta(0.33697051565395164, worksheet.outputs_energy_flows_x78, 0.002); end
  def test_outputs_energy_flows_y78; assert_in_delta(0.344034866801926, worksheet.outputs_energy_flows_y78, 0.002); end
  def test_outputs_energy_flows_z78; assert_in_delta(0.3531631151160427, worksheet.outputs_energy_flows_z78, 0.002); end
  def test_outputs_energy_flows_aa78; assert_in_delta(0.3551119424992148, worksheet.outputs_energy_flows_aa78, 0.002); end
  def test_outputs_energy_flows_ab78; assert_in_delta(0.35425990720832284, worksheet.outputs_energy_flows_ab78, 0.002); end
  def test_outputs_energy_flows_ac78; assert_in_delta(0.3532596456466333, worksheet.outputs_energy_flows_ac78, 0.002); end
  def test_outputs_energy_flows_ad78; assert_in_delta(0.34963376347530983, worksheet.outputs_energy_flows_ad78, 0.002); end
  def test_outputs_energy_flows_c80; assert_equal("FF.03", worksheet.outputs_energy_flows_c80); end
  def test_outputs_energy_flows_d80; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d80); end
  def test_outputs_energy_flows_e80; assert_equal("n/a", worksheet.outputs_energy_flows_e80); end
  def test_outputs_energy_flows_f80; assert_equal("Gas", worksheet.outputs_energy_flows_f80); end
  def test_outputs_energy_flows_g80; assert_equal("gas.nework", worksheet.outputs_energy_flows_g80); end
  def test_outputs_energy_flows_h80; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h80); end
  def test_outputs_energy_flows_i80; assert_equal("C.03", worksheet.outputs_energy_flows_i80); end
  def test_outputs_energy_flows_j80; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j80); end
  def test_outputs_energy_flows_v80; assert_in_epsilon(92.05742643190749, worksheet.outputs_energy_flows_v80, 0.002); end
  def test_outputs_energy_flows_w80; assert_in_epsilon(95.61257611439555, worksheet.outputs_energy_flows_w80, 0.002); end
  def test_outputs_energy_flows_x80; assert_in_epsilon(100.91605111767933, worksheet.outputs_energy_flows_x80, 0.002); end
  def test_outputs_energy_flows_y80; assert_in_epsilon(108.55977982823282, worksheet.outputs_energy_flows_y80, 0.002); end
  def test_outputs_energy_flows_z80; assert_in_epsilon(116.24767052590305, worksheet.outputs_energy_flows_z80, 0.002); end
  def test_outputs_energy_flows_aa80; assert_in_epsilon(124.10003289656152, worksheet.outputs_energy_flows_aa80, 0.002); end
  def test_outputs_energy_flows_ab80; assert_in_epsilon(132.88628721640572, worksheet.outputs_energy_flows_ab80, 0.002); end
  def test_outputs_energy_flows_ac80; assert_in_epsilon(140.53062168469916, worksheet.outputs_energy_flows_ac80, 0.002); end
  def test_outputs_energy_flows_ad80; assert_in_epsilon(149.37047543060385, worksheet.outputs_energy_flows_ad80, 0.002); end
  def test_outputs_energy_flows_c82; assert_equal("FF.03", worksheet.outputs_energy_flows_c82); end
  def test_outputs_energy_flows_d82; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d82); end
  def test_outputs_energy_flows_e82; assert_equal("L.02", worksheet.outputs_energy_flows_e82); end
  def test_outputs_energy_flows_f82; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f82); end
  def test_outputs_energy_flows_g82; assert_equal("gas.nework", worksheet.outputs_energy_flows_g82); end
  def test_outputs_energy_flows_h82; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_h82); end
  def test_outputs_energy_flows_i82; assert_equal("C.03", worksheet.outputs_energy_flows_i82); end
  def test_outputs_energy_flows_j82; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j82); end
  def test_outputs_energy_flows_v82; assert_in_delta(0.6027920282761302, worksheet.outputs_energy_flows_v82, 0.002); end
  def test_outputs_energy_flows_w82; assert_in_delta(0.6319823003027585, worksheet.outputs_energy_flows_w82, 0.002); end
  def test_outputs_energy_flows_x82; assert_in_delta(0.6749190316292311, worksheet.outputs_energy_flows_x82, 0.002); end
  def test_outputs_energy_flows_y82; assert_in_delta(0.7346185803967041, worksheet.outputs_energy_flows_y82, 0.002); end
  def test_outputs_energy_flows_z82; assert_in_delta(0.7959370936804028, worksheet.outputs_energy_flows_z82, 0.002); end
  def test_outputs_energy_flows_aa82; assert_in_delta(0.8597414489011279, worksheet.outputs_energy_flows_aa82, 0.002); end
  def test_outputs_energy_flows_ab82; assert_in_delta(0.9314876920493506, worksheet.outputs_energy_flows_ab82, 0.002); end
  def test_outputs_energy_flows_ac82; assert_in_delta(0.9967128300170555, worksheet.outputs_energy_flows_ac82, 0.002); end
  def test_outputs_energy_flows_ad82; assert_in_epsilon(1.0719274025808325, worksheet.outputs_energy_flows_ad82, 0.002); end
  def test_outputs_energy_flows_c84; assert_equal("n/a ", worksheet.outputs_energy_flows_c84); end
  def test_outputs_energy_flows_d84; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d84); end
  def test_outputs_energy_flows_e84; assert_equal("n/a ", worksheet.outputs_energy_flows_e84); end
  def test_outputs_energy_flows_f84; assert_equal("Solid", worksheet.outputs_energy_flows_f84); end
  def test_outputs_energy_flows_g84; assert_equal("n/a", worksheet.outputs_energy_flows_g84); end
  def test_outputs_energy_flows_h84; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h84); end
  def test_outputs_energy_flows_i84; assert_equal("C.01", worksheet.outputs_energy_flows_i84); end
  def test_outputs_energy_flows_j84; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j84); end
  def test_outputs_energy_flows_v84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v84||0), 0.002); end
  def test_outputs_energy_flows_w84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w84||0), 0.002); end
  def test_outputs_energy_flows_x84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x84||0), 0.002); end
  def test_outputs_energy_flows_y84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y84||0), 0.002); end
  def test_outputs_energy_flows_z84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z84||0), 0.002); end
  def test_outputs_energy_flows_aa84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa84||0), 0.002); end
  def test_outputs_energy_flows_ab84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab84||0), 0.002); end
  def test_outputs_energy_flows_ac84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac84||0), 0.002); end
  def test_outputs_energy_flows_ad84; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad84||0), 0.002); end
  def test_outputs_energy_flows_c86; assert_equal("n/a ", worksheet.outputs_energy_flows_c86); end
  def test_outputs_energy_flows_d86; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d86); end
  def test_outputs_energy_flows_e86; assert_equal("n/a ", worksheet.outputs_energy_flows_e86); end
  def test_outputs_energy_flows_f86; assert_equal("Liquid", worksheet.outputs_energy_flows_f86); end
  def test_outputs_energy_flows_g86; assert_equal("n/a", worksheet.outputs_energy_flows_g86); end
  def test_outputs_energy_flows_h86; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h86); end
  def test_outputs_energy_flows_i86; assert_equal("C.02", worksheet.outputs_energy_flows_i86); end
  def test_outputs_energy_flows_j86; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j86); end
  def test_outputs_energy_flows_v86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v86||0), 0.002); end
  def test_outputs_energy_flows_w86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w86||0), 0.002); end
  def test_outputs_energy_flows_x86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x86||0), 0.002); end
  def test_outputs_energy_flows_y86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y86||0), 0.002); end
  def test_outputs_energy_flows_z86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z86||0), 0.002); end
  def test_outputs_energy_flows_aa86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa86||0), 0.002); end
  def test_outputs_energy_flows_ab86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab86||0), 0.002); end
  def test_outputs_energy_flows_ac86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac86||0), 0.002); end
  def test_outputs_energy_flows_ad86; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad86||0), 0.002); end
  def test_outputs_energy_flows_c88; assert_equal("n/a ", worksheet.outputs_energy_flows_c88); end
  def test_outputs_energy_flows_d88; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d88); end
  def test_outputs_energy_flows_e88; assert_equal("n/a ", worksheet.outputs_energy_flows_e88); end
  def test_outputs_energy_flows_f88; assert_equal("Gas", worksheet.outputs_energy_flows_f88); end
  def test_outputs_energy_flows_g88; assert_equal("n/a", worksheet.outputs_energy_flows_g88); end
  def test_outputs_energy_flows_h88; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h88); end
  def test_outputs_energy_flows_i88; assert_equal("C.03", worksheet.outputs_energy_flows_i88); end
  def test_outputs_energy_flows_j88; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j88); end
  def test_outputs_energy_flows_v88; assert_in_epsilon(3.0046012974969964, worksheet.outputs_energy_flows_v88, 0.002); end
  def test_outputs_energy_flows_w88; assert_in_epsilon(3.188237310308969, worksheet.outputs_energy_flows_w88, 0.002); end
  def test_outputs_energy_flows_x88; assert_in_epsilon(3.4341874736874365, worksheet.outputs_energy_flows_x88, 0.002); end
  def test_outputs_energy_flows_y88; assert_in_epsilon(3.684196774111682, worksheet.outputs_energy_flows_y88, 0.002); end
  def test_outputs_energy_flows_z88; assert_in_epsilon(3.959223467847431, worksheet.outputs_energy_flows_z88, 0.002); end
  def test_outputs_energy_flows_aa88; assert_in_epsilon(4.278035343170729, worksheet.outputs_energy_flows_aa88, 0.002); end
  def test_outputs_energy_flows_ab88; assert_in_epsilon(4.5997674972549385, worksheet.outputs_energy_flows_ab88, 0.002); end
  def test_outputs_energy_flows_ac88; assert_in_epsilon(4.873027806979259, worksheet.outputs_energy_flows_ac88, 0.002); end
  def test_outputs_energy_flows_ad88; assert_in_epsilon(5.112564352678508, worksheet.outputs_energy_flows_ad88, 0.002); end
  def test_outputs_energy_flows_c90; assert_equal("n/a ", worksheet.outputs_energy_flows_c90); end
  def test_outputs_energy_flows_d90; assert_equal("Bio conversion", worksheet.outputs_energy_flows_d90); end
  def test_outputs_energy_flows_e90; assert_equal("n/a ", worksheet.outputs_energy_flows_e90); end
  def test_outputs_energy_flows_f90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f90); end
  def test_outputs_energy_flows_g90; assert_equal("n/a", worksheet.outputs_energy_flows_g90); end
  def test_outputs_energy_flows_h90; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_h90); end
  def test_outputs_energy_flows_i90; assert_equal("L.01", worksheet.outputs_energy_flows_i90); end
  def test_outputs_energy_flows_j90; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j90); end
  def test_outputs_energy_flows_v90; assert_in_epsilon(1.617862237113767, worksheet.outputs_energy_flows_v90, 0.002); end
  def test_outputs_energy_flows_w90; assert_in_epsilon(1.6944005245315945, worksheet.outputs_energy_flows_w90, 0.002); end
  def test_outputs_energy_flows_x90; assert_in_epsilon(1.7953354451290888, worksheet.outputs_energy_flows_x90, 0.002); end
  def test_outputs_energy_flows_y90; assert_in_epsilon(1.894451858842022, worksheet.outputs_energy_flows_y90, 0.002); end
  def test_outputs_energy_flows_z90; assert_in_epsilon(2.0023114244752516, worksheet.outputs_energy_flows_z90, 0.002); end
  def test_outputs_energy_flows_aa90; assert_in_epsilon(2.1276844749840134, worksheet.outputs_energy_flows_aa90, 0.002); end
  def test_outputs_energy_flows_ab90; assert_in_epsilon(2.249567480139685, worksheet.outputs_energy_flows_ab90, 0.002); end
  def test_outputs_energy_flows_ac90; assert_in_epsilon(2.3432572960049107, worksheet.outputs_energy_flows_ac90, 0.002); end
  def test_outputs_energy_flows_ad90; assert_in_epsilon(2.41698550399087, worksheet.outputs_energy_flows_ad90, 0.002); end
  def test_outputs_energy_flows_c92; assert_equal("n/a", worksheet.outputs_energy_flows_c92); end
  def test_outputs_energy_flows_d92; assert_equal("Solid", worksheet.outputs_energy_flows_d92); end
  def test_outputs_energy_flows_e92; assert_equal("n/a", worksheet.outputs_energy_flows_e92); end
  def test_outputs_energy_flows_f92; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f92); end
  def test_outputs_energy_flows_i92; assert_equal("C.01", worksheet.outputs_energy_flows_i92); end
  def test_outputs_energy_flows_j92; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j92); end
  def test_outputs_energy_flows_k92; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k92); end
  def test_outputs_energy_flows_l92; assert_equal("Unabated power", worksheet.outputs_energy_flows_l92); end
  def test_outputs_energy_flows_v92; assert_in_epsilon(98.64877026723967, worksheet.outputs_energy_flows_v92, 0.002); end
  def test_outputs_energy_flows_w92; assert_in_epsilon(96.19709167517517, worksheet.outputs_energy_flows_w92, 0.002); end
  def test_outputs_energy_flows_x92; assert_in_epsilon(100.56317981444982, worksheet.outputs_energy_flows_x92, 0.002); end
  def test_outputs_energy_flows_y92; assert_in_epsilon(112.36383452280762, worksheet.outputs_energy_flows_y92, 0.002); end
  def test_outputs_energy_flows_z92; assert_in_epsilon(119.79601357389538, worksheet.outputs_energy_flows_z92, 0.002); end
  def test_outputs_energy_flows_aa92; assert_in_epsilon(124.81836320297413, worksheet.outputs_energy_flows_aa92, 0.002); end
  def test_outputs_energy_flows_ab92; assert_in_epsilon(125.25283371405291, worksheet.outputs_energy_flows_ab92, 0.002); end
  def test_outputs_energy_flows_ac92; assert_in_epsilon(115.99438615016619, worksheet.outputs_energy_flows_ac92, 0.002); end
  def test_outputs_energy_flows_ad92; assert_in_epsilon(109.87398848217443, worksheet.outputs_energy_flows_ad92, 0.002); end
  def test_outputs_energy_flows_c94; assert_equal("n/a", worksheet.outputs_energy_flows_c94); end
  def test_outputs_energy_flows_d94; assert_equal("Liquid", worksheet.outputs_energy_flows_d94); end
  def test_outputs_energy_flows_e94; assert_equal("n/a", worksheet.outputs_energy_flows_e94); end
  def test_outputs_energy_flows_f94; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f94); end
  def test_outputs_energy_flows_i94; assert_equal("C.02", worksheet.outputs_energy_flows_i94); end
  def test_outputs_energy_flows_j94; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j94); end
  def test_outputs_energy_flows_k94; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k94); end
  def test_outputs_energy_flows_l94; assert_equal("Unabated power", worksheet.outputs_energy_flows_l94); end
  def test_outputs_energy_flows_v94; assert_in_epsilon(11.450334577208425, worksheet.outputs_energy_flows_v94, 0.002); end
  def test_outputs_energy_flows_w94; assert_in_epsilon(11.526833448345865, worksheet.outputs_energy_flows_w94, 0.002); end
  def test_outputs_energy_flows_x94; assert_in_epsilon(23.121899202453015, worksheet.outputs_energy_flows_x94, 0.002); end
  def test_outputs_energy_flows_y94; assert_in_epsilon(26.469999187506836, worksheet.outputs_energy_flows_y94, 0.002); end
  def test_outputs_energy_flows_z94; assert_in_epsilon(32.93848881069181, worksheet.outputs_energy_flows_z94, 0.002); end
  def test_outputs_energy_flows_aa94; assert_in_epsilon(38.03478794652899, worksheet.outputs_energy_flows_aa94, 0.002); end
  def test_outputs_energy_flows_ab94; assert_in_epsilon(43.780418947755855, worksheet.outputs_energy_flows_ab94, 0.002); end
  def test_outputs_energy_flows_ac94; assert_in_epsilon(49.78419739503785, worksheet.outputs_energy_flows_ac94, 0.002); end
  def test_outputs_energy_flows_ad94; assert_in_epsilon(53.687332002118154, worksheet.outputs_energy_flows_ad94, 0.002); end
  def test_outputs_energy_flows_c96; assert_equal("n/a", worksheet.outputs_energy_flows_c96); end
  def test_outputs_energy_flows_d96; assert_equal("Gas", worksheet.outputs_energy_flows_d96); end
  def test_outputs_energy_flows_e96; assert_equal("n/a", worksheet.outputs_energy_flows_e96); end
  def test_outputs_energy_flows_f96; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f96); end
  def test_outputs_energy_flows_i96; assert_equal("C.03", worksheet.outputs_energy_flows_i96); end
  def test_outputs_energy_flows_j96; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j96); end
  def test_outputs_energy_flows_k96; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k96); end
  def test_outputs_energy_flows_l96; assert_equal("Unabated power", worksheet.outputs_energy_flows_l96); end
  def test_outputs_energy_flows_v96; assert_in_epsilon(41.379231585091354, worksheet.outputs_energy_flows_v96, 0.002); end
  def test_outputs_energy_flows_w96; assert_in_epsilon(40.33866173358211, worksheet.outputs_energy_flows_w96, 0.002); end
  def test_outputs_energy_flows_x96; assert_in_epsilon(42.0984997276119, worksheet.outputs_energy_flows_x96, 0.002); end
  def test_outputs_energy_flows_y96; assert_in_epsilon(45.719132914623444, worksheet.outputs_energy_flows_y96, 0.002); end
  def test_outputs_energy_flows_z96; assert_in_epsilon(49.571981914731, worksheet.outputs_energy_flows_z96, 0.002); end
  def test_outputs_energy_flows_aa96; assert_in_epsilon(53.98007460785138, worksheet.outputs_energy_flows_aa96, 0.002); end
  def test_outputs_energy_flows_ab96; assert_in_epsilon(59.454602080461754, worksheet.outputs_energy_flows_ab96, 0.002); end
  def test_outputs_energy_flows_ac96; assert_in_epsilon(64.14829199842416, worksheet.outputs_energy_flows_ac96, 0.002); end
  def test_outputs_energy_flows_ad96; assert_in_epsilon(70.15511473628759, worksheet.outputs_energy_flows_ad96, 0.002); end
  def test_outputs_energy_flows_c98; assert_equal("N.01", worksheet.outputs_energy_flows_c98); end
  def test_outputs_energy_flows_d98; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_d98); end
  def test_outputs_energy_flows_e98; assert_equal("n/a", worksheet.outputs_energy_flows_e98); end
  def test_outputs_energy_flows_f98; assert_equal("Thermal generation", worksheet.outputs_energy_flows_f98); end
  def test_outputs_energy_flows_g98; assert_equal("nuclear.elec", worksheet.outputs_energy_flows_g98); end
  def test_outputs_energy_flows_h98; assert_equal("Global Nuclear power stations", worksheet.outputs_energy_flows_h98); end
  def test_outputs_energy_flows_v98; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v98, 0.002); end
  def test_outputs_energy_flows_w98; assert_in_epsilon(32.15380656912042, worksheet.outputs_energy_flows_w98, 0.002); end
  def test_outputs_energy_flows_x98; assert_in_epsilon(33.02625127433693, worksheet.outputs_energy_flows_x98, 0.002); end
  def test_outputs_energy_flows_y98; assert_in_epsilon(35.01016110558949, worksheet.outputs_energy_flows_y98, 0.002); end
  def test_outputs_energy_flows_z98; assert_in_epsilon(35.83235112380758, worksheet.outputs_energy_flows_z98, 0.002); end
  def test_outputs_energy_flows_aa98; assert_in_epsilon(39.67377959576061, worksheet.outputs_energy_flows_aa98, 0.002); end
  def test_outputs_energy_flows_ab98; assert_in_epsilon(40.95327765602627, worksheet.outputs_energy_flows_ab98, 0.002); end
  def test_outputs_energy_flows_ac98; assert_in_epsilon(42.75957463926615, worksheet.outputs_energy_flows_ac98, 0.002); end
  def test_outputs_energy_flows_ad98; assert_in_epsilon(44.51400802028767, worksheet.outputs_energy_flows_ad98, 0.002); end
  def test_outputs_energy_flows_c100; assert_equal("n/a", worksheet.outputs_energy_flows_c100); end
  def test_outputs_energy_flows_d100; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d100); end
  def test_outputs_energy_flows_e100; assert_equal("H.01", worksheet.outputs_energy_flows_e100); end
  def test_outputs_energy_flows_f100; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_f100); end
  def test_outputs_energy_flows_k100; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k100); end
  def test_outputs_energy_flows_l100; assert_equal("Unabated power", worksheet.outputs_energy_flows_l100); end
  def test_outputs_energy_flows_m100; assert_equal("Nuclear", worksheet.outputs_energy_flows_m100); end
  def test_outputs_energy_flows_v100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v100||0), 0.002); end
  def test_outputs_energy_flows_w100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w100||0), 0.002); end
  def test_outputs_energy_flows_x100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x100||0), 0.002); end
  def test_outputs_energy_flows_y100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y100||0), 0.002); end
  def test_outputs_energy_flows_z100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z100||0), 0.002); end
  def test_outputs_energy_flows_aa100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa100||0), 0.002); end
  def test_outputs_energy_flows_ab100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab100||0), 0.002); end
  def test_outputs_energy_flows_ac100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac100||0), 0.002); end
  def test_outputs_energy_flows_ad100; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad100||0), 0.002); end
  def test_outputs_energy_flows_c102; assert_equal("n/a", worksheet.outputs_energy_flows_c102); end
  def test_outputs_energy_flows_d102; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d102); end
  def test_outputs_energy_flows_f102; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f102); end
  def test_outputs_energy_flows_i102; assert_equal("E.02", worksheet.outputs_energy_flows_i102); end
  def test_outputs_energy_flows_j102; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j102); end
  def test_outputs_energy_flows_k102; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k102); end
  def test_outputs_energy_flows_l102; assert_equal("Unabated power", worksheet.outputs_energy_flows_l102); end
  def test_outputs_energy_flows_m102; assert_equal("Nuclear", worksheet.outputs_energy_flows_m102); end
  def test_outputs_energy_flows_v102; assert_in_epsilon(61.79335326396476, worksheet.outputs_energy_flows_v102, 0.002); end
  def test_outputs_energy_flows_w102; assert_in_epsilon(63.19149739258736, worksheet.outputs_energy_flows_w102, 0.002); end
  def test_outputs_energy_flows_x102; assert_in_epsilon(70.60706723093335, worksheet.outputs_energy_flows_x102, 0.002); end
  def test_outputs_energy_flows_y102; assert_in_epsilon(79.13286425745946, worksheet.outputs_energy_flows_y102, 0.002); end
  def test_outputs_energy_flows_z102; assert_in_epsilon(86.76197534487316, worksheet.outputs_energy_flows_z102, 0.002); end
  def test_outputs_energy_flows_aa102; assert_in_epsilon(94.45889244301559, worksheet.outputs_energy_flows_aa102, 0.002); end
  def test_outputs_energy_flows_ab102; assert_in_epsilon(100.52407269714666, worksheet.outputs_energy_flows_ab102, 0.002); end
  def test_outputs_energy_flows_ac102; assert_in_epsilon(102.30079877135691, worksheet.outputs_energy_flows_ac102, 0.002); end
  def test_outputs_energy_flows_ad102; assert_in_epsilon(104.94762424924498, worksheet.outputs_energy_flows_ad102, 0.002); end
  def test_outputs_energy_flows_c104; assert_equal("n/a", worksheet.outputs_energy_flows_c104); end
  def test_outputs_energy_flows_d104; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d104); end
  def test_outputs_energy_flows_e104; assert_equal("L.02", worksheet.outputs_energy_flows_e104); end
  def test_outputs_energy_flows_f104; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f104); end
  def test_outputs_energy_flows_k104; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k104); end
  def test_outputs_energy_flows_l104; assert_equal("Unabated power", worksheet.outputs_energy_flows_l104); end
  def test_outputs_energy_flows_m104; assert_equal("Nuclear", worksheet.outputs_energy_flows_m104); end
  def test_outputs_energy_flows_v104; assert_in_epsilon(4.385672599757188, worksheet.outputs_energy_flows_v104, 0.002); end
  def test_outputs_energy_flows_w104; assert_in_epsilon(4.486571895551074, worksheet.outputs_energy_flows_w104, 0.002); end
  def test_outputs_energy_flows_x104; assert_in_epsilon(5.019438090706071, worksheet.outputs_energy_flows_x104, 0.002); end
  def test_outputs_energy_flows_y104; assert_in_epsilon(5.625580509523914, worksheet.outputs_energy_flows_y104, 0.002); end
  def test_outputs_energy_flows_z104; assert_in_epsilon(6.1748454883837365, worksheet.outputs_energy_flows_z104, 0.002); end
  def test_outputs_energy_flows_aa104; assert_in_epsilon(6.725214971813162, worksheet.outputs_energy_flows_aa104, 0.002); end
  def test_outputs_energy_flows_ab104; assert_in_epsilon(7.158775918357782, worksheet.outputs_energy_flows_ab104, 0.002); end
  def test_outputs_energy_flows_ac104; assert_in_epsilon(7.285682164497551, worksheet.outputs_energy_flows_ac104, 0.002); end
  def test_outputs_energy_flows_ad104; assert_in_epsilon(7.479917008212595, worksheet.outputs_energy_flows_ad104, 0.002); end
  def test_outputs_energy_flows_c106; assert_equal("n/a", worksheet.outputs_energy_flows_c106); end
  def test_outputs_energy_flows_d106; assert_equal("Thermal generation", worksheet.outputs_energy_flows_d106); end
  def test_outputs_energy_flows_e106; assert_equal("L.01", worksheet.outputs_energy_flows_e106); end
  def test_outputs_energy_flows_f106; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f106); end
  def test_outputs_energy_flows_k106; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_k106); end
  def test_outputs_energy_flows_l106; assert_equal("Unabated power", worksheet.outputs_energy_flows_l106); end
  def test_outputs_energy_flows_m106; assert_equal("Nuclear", worksheet.outputs_energy_flows_m106); end
  def test_outputs_energy_flows_v106; assert_in_epsilon(102.52827672029427, worksheet.outputs_energy_flows_v106, 0.002); end
  def test_outputs_energy_flows_w106; assert_in_epsilon(102.8655063396705, worksheet.outputs_energy_flows_w106, 0.002); end
  def test_outputs_energy_flows_x106; assert_in_epsilon(112.64594816444004, worksheet.outputs_energy_flows_x106, 0.002); end
  def test_outputs_energy_flows_y106; assert_in_epsilon(123.2631756060716, worksheet.outputs_energy_flows_y106, 0.002); end
  def test_outputs_energy_flows_z106; assert_in_epsilon(132.6685141839833, worksheet.outputs_energy_flows_z106, 0.002); end
  def test_outputs_energy_flows_aa106; assert_in_epsilon(141.84815880923438, worksheet.outputs_energy_flows_aa106, 0.002); end
  def test_outputs_energy_flows_ab106; assert_in_epsilon(147.34737300740403, worksheet.outputs_energy_flows_ab106, 0.002); end
  def test_outputs_energy_flows_ac106; assert_in_epsilon(147.8191812095911, worksheet.outputs_energy_flows_ac106, 0.002); end
  def test_outputs_energy_flows_ad106; assert_in_epsilon(149.67621340910492, worksheet.outputs_energy_flows_ad106, 0.002); end
  def test_outputs_energy_flows_c108; assert_equal("n/a", worksheet.outputs_energy_flows_c108); end
  def test_outputs_energy_flows_d108; assert_equal("Storage", worksheet.outputs_energy_flows_d108); end
  def test_outputs_energy_flows_e108; assert_equal("n/a", worksheet.outputs_energy_flows_e108); end
  def test_outputs_energy_flows_f108; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f108); end
  def test_outputs_energy_flows_g108; assert_equal("storage.elec", worksheet.outputs_energy_flows_g108); end
  def test_outputs_energy_flows_h108; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h108); end
  def test_outputs_energy_flows_i108; assert_equal("E.02", worksheet.outputs_energy_flows_i108); end
  def test_outputs_energy_flows_j108; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j108); end
  def test_outputs_energy_flows_v108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v108||0), 0.002); end
  def test_outputs_energy_flows_w108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w108||0), 0.002); end
  def test_outputs_energy_flows_x108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x108||0), 0.002); end
  def test_outputs_energy_flows_y108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y108||0), 0.002); end
  def test_outputs_energy_flows_z108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z108||0), 0.002); end
  def test_outputs_energy_flows_aa108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa108||0), 0.002); end
  def test_outputs_energy_flows_ab108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab108||0), 0.002); end
  def test_outputs_energy_flows_ac108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac108||0), 0.002); end
  def test_outputs_energy_flows_ad108; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad108||0), 0.002); end
  def test_outputs_energy_flows_c110; assert_equal("n/a", worksheet.outputs_energy_flows_c110); end
  def test_outputs_energy_flows_d110; assert_equal("Storage", worksheet.outputs_energy_flows_d110); end
  def test_outputs_energy_flows_e110; assert_equal("L.01", worksheet.outputs_energy_flows_e110); end
  def test_outputs_energy_flows_f110; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f110); end
  def test_outputs_energy_flows_g110; assert_equal("storage.elec", worksheet.outputs_energy_flows_g110); end
  def test_outputs_energy_flows_h110; assert_equal("Global Storage unit", worksheet.outputs_energy_flows_h110); end
  def test_outputs_energy_flows_v110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v110||0), 0.002); end
  def test_outputs_energy_flows_w110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w110||0), 0.002); end
  def test_outputs_energy_flows_x110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x110||0), 0.002); end
  def test_outputs_energy_flows_y110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y110||0), 0.002); end
  def test_outputs_energy_flows_z110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z110||0), 0.002); end
  def test_outputs_energy_flows_aa110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa110||0), 0.002); end
  def test_outputs_energy_flows_ab110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab110||0), 0.002); end
  def test_outputs_energy_flows_ac110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac110||0), 0.002); end
  def test_outputs_energy_flows_ad110; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad110||0), 0.002); end
  def test_outputs_energy_flows_c112; assert_equal("n/a", worksheet.outputs_energy_flows_c112); end
  def test_outputs_energy_flows_d112; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d112); end
  def test_outputs_energy_flows_e112; assert_equal("L.02", worksheet.outputs_energy_flows_e112); end
  def test_outputs_energy_flows_f112; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_f112); end
  def test_outputs_energy_flows_g112; assert_equal("electricity.network", worksheet.outputs_energy_flows_g112); end
  def test_outputs_energy_flows_h112; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_h112); end
  def test_outputs_energy_flows_v112; assert_in_epsilon(6.0350965130992895, worksheet.outputs_energy_flows_v112, 0.002); end
  def test_outputs_energy_flows_w112; assert_in_epsilon(6.6739599893730235, worksheet.outputs_energy_flows_w112, 0.002); end
  def test_outputs_energy_flows_x112; assert_in_epsilon(7.410836917159837, worksheet.outputs_energy_flows_x112, 0.002); end
  def test_outputs_energy_flows_y112; assert_in_epsilon(8.209542010667416, worksheet.outputs_energy_flows_y112, 0.002); end
  def test_outputs_energy_flows_z112; assert_in_epsilon(9.005019090556265, worksheet.outputs_energy_flows_z112, 0.002); end
  def test_outputs_energy_flows_aa112; assert_in_epsilon(9.7689831219131, worksheet.outputs_energy_flows_aa112, 0.002); end
  def test_outputs_energy_flows_ab112; assert_in_epsilon(10.515597858359412, worksheet.outputs_energy_flows_ab112, 0.002); end
  def test_outputs_energy_flows_ac112; assert_in_epsilon(11.221141180459096, worksheet.outputs_energy_flows_ac112, 0.002); end
  def test_outputs_energy_flows_ad112; assert_in_epsilon(11.900637609452952, worksheet.outputs_energy_flows_ad112, 0.002); end
  def test_outputs_energy_flows_c114; assert_equal("n/a", worksheet.outputs_energy_flows_c114); end
  def test_outputs_energy_flows_d114; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d114); end
  def test_outputs_energy_flows_e114; assert_equal("n/a", worksheet.outputs_energy_flows_e114); end
  def test_outputs_energy_flows_f114; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f114); end
  def test_outputs_energy_flows_i114; assert_equal("E.01", worksheet.outputs_energy_flows_i114); end
  def test_outputs_energy_flows_j114; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j114); end
  def test_outputs_energy_flows_k114; assert_equal("Global buildings", worksheet.outputs_energy_flows_k114); end
  def test_outputs_energy_flows_v114; assert_in_epsilon(4.30423483528763, worksheet.outputs_energy_flows_v114, 0.002); end
  def test_outputs_energy_flows_w114; assert_in_epsilon(4.948146421888033, worksheet.outputs_energy_flows_w114, 0.002); end
  def test_outputs_energy_flows_x114; assert_in_epsilon(5.915482053668065, worksheet.outputs_energy_flows_x114, 0.002); end
  def test_outputs_energy_flows_y114; assert_in_epsilon(6.927614180963367, worksheet.outputs_energy_flows_y114, 0.002); end
  def test_outputs_energy_flows_z114; assert_in_epsilon(7.955570073368818, worksheet.outputs_energy_flows_z114, 0.002); end
  def test_outputs_energy_flows_aa114; assert_in_epsilon(8.949123827743854, worksheet.outputs_energy_flows_aa114, 0.002); end
  def test_outputs_energy_flows_ab114; assert_in_epsilon(9.921695427677655, worksheet.outputs_energy_flows_ab114, 0.002); end
  def test_outputs_energy_flows_ac114; assert_in_epsilon(10.819150640544443, worksheet.outputs_energy_flows_ac114, 0.002); end
  def test_outputs_energy_flows_ad114; assert_in_epsilon(11.663246598803994, worksheet.outputs_energy_flows_ad114, 0.002); end
  def test_outputs_energy_flows_c116; assert_equal("n/a", worksheet.outputs_energy_flows_c116); end
  def test_outputs_energy_flows_d116; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d116); end
  def test_outputs_energy_flows_e116; assert_equal("n/a", worksheet.outputs_energy_flows_e116); end
  def test_outputs_energy_flows_f116; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f116); end
  def test_outputs_energy_flows_i116; assert_equal("E.01", worksheet.outputs_energy_flows_i116); end
  def test_outputs_energy_flows_j116; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j116); end
  def test_outputs_energy_flows_k116; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k116); end
  def test_outputs_energy_flows_l116; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l116); end
  def test_outputs_energy_flows_v116; assert_in_epsilon(3.238074545473781, worksheet.outputs_energy_flows_v116, 0.002); end
  def test_outputs_energy_flows_w116; assert_in_epsilon(3.8017884117693965, worksheet.outputs_energy_flows_w116, 0.002); end
  def test_outputs_energy_flows_x116; assert_in_epsilon(4.297142643420306, worksheet.outputs_energy_flows_x116, 0.002); end
  def test_outputs_energy_flows_y116; assert_in_epsilon(4.798489045682649, worksheet.outputs_energy_flows_y116, 0.002); end
  def test_outputs_energy_flows_z116; assert_in_epsilon(5.287720042817352, worksheet.outputs_energy_flows_z116, 0.002); end
  def test_outputs_energy_flows_aa116; assert_in_epsilon(5.735958765379613, worksheet.outputs_energy_flows_aa116, 0.002); end
  def test_outputs_energy_flows_ab116; assert_in_epsilon(6.156878502641402, worksheet.outputs_energy_flows_ab116, 0.002); end
  def test_outputs_energy_flows_ac116; assert_in_epsilon(6.52100863234303, worksheet.outputs_energy_flows_ac116, 0.002); end
  def test_outputs_energy_flows_ad116; assert_in_epsilon(6.8458677152768495, worksheet.outputs_energy_flows_ad116, 0.002); end
  def test_outputs_energy_flows_c118; assert_equal("n/a", worksheet.outputs_energy_flows_c118); end
  def test_outputs_energy_flows_d118; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d118); end
  def test_outputs_energy_flows_e118; assert_equal("n/a", worksheet.outputs_energy_flows_e118); end
  def test_outputs_energy_flows_f118; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f118); end
  def test_outputs_energy_flows_i118; assert_equal("E.01", worksheet.outputs_energy_flows_i118); end
  def test_outputs_energy_flows_j118; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j118); end
  def test_outputs_energy_flows_k118; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k118); end
  def test_outputs_energy_flows_l118; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l118); end
  def test_outputs_energy_flows_v118; assert_in_epsilon(10.049316153808604, worksheet.outputs_energy_flows_v118, 0.002); end
  def test_outputs_energy_flows_w118; assert_in_epsilon(12.121796717015723, worksheet.outputs_energy_flows_w118, 0.002); end
  def test_outputs_energy_flows_x118; assert_in_epsilon(13.874919766573516, worksheet.outputs_energy_flows_x118, 0.002); end
  def test_outputs_energy_flows_y118; assert_in_epsilon(15.737009369681513, worksheet.outputs_energy_flows_y118, 0.002); end
  def test_outputs_energy_flows_z118; assert_in_epsilon(17.655287473454962, worksheet.outputs_energy_flows_z118, 0.002); end
  def test_outputs_energy_flows_aa118; assert_in_epsilon(19.542025804835824, worksheet.outputs_energy_flows_aa118, 0.002); end
  def test_outputs_energy_flows_ab118; assert_in_epsilon(21.450542742600668, worksheet.outputs_energy_flows_ab118, 0.002); end
  def test_outputs_energy_flows_ac118; assert_in_epsilon(23.286036558529382, worksheet.outputs_energy_flows_ac118, 0.002); end
  def test_outputs_energy_flows_ad118; assert_in_epsilon(25.111413943377233, worksheet.outputs_energy_flows_ad118, 0.002); end
  def test_outputs_energy_flows_c120; assert_equal("n/a", worksheet.outputs_energy_flows_c120); end
  def test_outputs_energy_flows_d120; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d120); end
  def test_outputs_energy_flows_e120; assert_equal("n/a", worksheet.outputs_energy_flows_e120); end
  def test_outputs_energy_flows_f120; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f120); end
  def test_outputs_energy_flows_i120; assert_equal("E.01", worksheet.outputs_energy_flows_i120); end
  def test_outputs_energy_flows_j120; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j120); end
  def test_outputs_energy_flows_k120; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k120); end
  def test_outputs_energy_flows_l120; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l120); end
  def test_outputs_energy_flows_v120; assert_in_epsilon(1.5226055251988835, worksheet.outputs_energy_flows_v120, 0.002); end
  def test_outputs_energy_flows_w120; assert_in_epsilon(1.694572033868082, worksheet.outputs_energy_flows_w120, 0.002); end
  def test_outputs_energy_flows_x120; assert_in_epsilon(2.069281822001692, worksheet.outputs_energy_flows_x120, 0.002); end
  def test_outputs_energy_flows_y120; assert_in_epsilon(2.4640667910875615, worksheet.outputs_energy_flows_y120, 0.002); end
  def test_outputs_energy_flows_z120; assert_in_epsilon(2.8682790404389444, worksheet.outputs_energy_flows_z120, 0.002); end
  def test_outputs_energy_flows_aa120; assert_in_epsilon(3.2632854334193957, worksheet.outputs_energy_flows_aa120, 0.002); end
  def test_outputs_energy_flows_ab120; assert_in_epsilon(3.6534749861654943, worksheet.outputs_energy_flows_ab120, 0.002); end
  def test_outputs_energy_flows_ac120; assert_in_epsilon(4.018659166442024, worksheet.outputs_energy_flows_ac120, 0.002); end
  def test_outputs_energy_flows_ad120; assert_in_epsilon(4.367398331125888, worksheet.outputs_energy_flows_ad120, 0.002); end
  def test_outputs_energy_flows_c122; assert_equal("n/a", worksheet.outputs_energy_flows_c122); end
  def test_outputs_energy_flows_d122; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d122); end
  def test_outputs_energy_flows_e122; assert_equal("n/a", worksheet.outputs_energy_flows_e122); end
  def test_outputs_energy_flows_f122; assert_equal("Non domestic", worksheet.outputs_energy_flows_f122); end
  def test_outputs_energy_flows_i122; assert_equal("E.01", worksheet.outputs_energy_flows_i122); end
  def test_outputs_energy_flows_j122; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j122); end
  def test_outputs_energy_flows_k122; assert_equal("Non-residential", worksheet.outputs_energy_flows_k122); end
  def test_outputs_energy_flows_v122; assert_in_epsilon(18.05126738935978, worksheet.outputs_energy_flows_v122, 0.002); end
  def test_outputs_energy_flows_w122; assert_in_epsilon(19.75538920980065, worksheet.outputs_energy_flows_w122, 0.002); end
  def test_outputs_energy_flows_x122; assert_in_epsilon(21.763449580631338, worksheet.outputs_energy_flows_x122, 0.002); end
  def test_outputs_energy_flows_y122; assert_in_epsilon(23.686578962443743, worksheet.outputs_energy_flows_y122, 0.002); end
  def test_outputs_energy_flows_z122; assert_in_epsilon(25.499046138296077, worksheet.outputs_energy_flows_z122, 0.002); end
  def test_outputs_energy_flows_aa122; assert_in_epsilon(27.18288018345252, worksheet.outputs_energy_flows_aa122, 0.002); end
  def test_outputs_energy_flows_ab122; assert_in_epsilon(28.714817521747165, worksheet.outputs_energy_flows_ab122, 0.002); end
  def test_outputs_energy_flows_ac122; assert_in_epsilon(30.066810325688742, worksheet.outputs_energy_flows_ac122, 0.002); end
  def test_outputs_energy_flows_ad122; assert_in_epsilon(31.21371372595449, worksheet.outputs_energy_flows_ad122, 0.002); end
  def test_outputs_energy_flows_c124; assert_equal("n/a", worksheet.outputs_energy_flows_c124); end
  def test_outputs_energy_flows_d124; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d124); end
  def test_outputs_energy_flows_e124; assert_equal("n/a", worksheet.outputs_energy_flows_e124); end
  def test_outputs_energy_flows_f124; assert_equal("Steel", worksheet.outputs_energy_flows_f124); end
  def test_outputs_energy_flows_i124; assert_equal("E.01", worksheet.outputs_energy_flows_i124); end
  def test_outputs_energy_flows_j124; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j124); end
  def test_outputs_energy_flows_v124; assert_in_epsilon(3.944226186432, worksheet.outputs_energy_flows_v124, 0.002); end
  def test_outputs_energy_flows_w124; assert_in_epsilon(4.212178675685413, worksheet.outputs_energy_flows_w124, 0.002); end
  def test_outputs_energy_flows_x124; assert_in_epsilon(4.330374051201725, worksheet.outputs_energy_flows_x124, 0.002); end
  def test_outputs_energy_flows_y124; assert_in_epsilon(4.642299289940592, worksheet.outputs_energy_flows_y124, 0.002); end
  def test_outputs_energy_flows_z124; assert_in_epsilon(4.949840298657707, worksheet.outputs_energy_flows_z124, 0.002); end
  def test_outputs_energy_flows_aa124; assert_in_epsilon(5.231523199053205, worksheet.outputs_energy_flows_aa124, 0.002); end
  def test_outputs_energy_flows_ab124; assert_in_epsilon(5.535762084421236, worksheet.outputs_energy_flows_ab124, 0.002); end
  def test_outputs_energy_flows_ac124; assert_in_epsilon(5.863863396904761, worksheet.outputs_energy_flows_ac124, 0.002); end
  def test_outputs_energy_flows_ad124; assert_in_epsilon(6.165952322401227, worksheet.outputs_energy_flows_ad124, 0.002); end
  def test_outputs_energy_flows_c126; assert_equal("n/a", worksheet.outputs_energy_flows_c126); end
  def test_outputs_energy_flows_d126; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d126); end
  def test_outputs_energy_flows_e126; assert_equal("n/a", worksheet.outputs_energy_flows_e126); end
  def test_outputs_energy_flows_f126; assert_equal("Aluminium", worksheet.outputs_energy_flows_f126); end
  def test_outputs_energy_flows_i126; assert_equal("E.01", worksheet.outputs_energy_flows_i126); end
  def test_outputs_energy_flows_j126; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j126); end
  def test_outputs_energy_flows_v126; assert_in_epsilon(2.4366032392955344, worksheet.outputs_energy_flows_v126, 0.002); end
  def test_outputs_energy_flows_w126; assert_in_epsilon(2.7130363951022374, worksheet.outputs_energy_flows_w126, 0.002); end
  def test_outputs_energy_flows_x126; assert_in_epsilon(2.9751727948367357, worksheet.outputs_energy_flows_x126, 0.002); end
  def test_outputs_energy_flows_y126; assert_in_epsilon(3.4098949568791292, worksheet.outputs_energy_flows_y126, 0.002); end
  def test_outputs_energy_flows_z126; assert_in_epsilon(3.868517227103504, worksheet.outputs_energy_flows_z126, 0.002); end
  def test_outputs_energy_flows_aa126; assert_in_epsilon(4.332280021623919, worksheet.outputs_energy_flows_aa126, 0.002); end
  def test_outputs_energy_flows_ab126; assert_in_epsilon(4.846555423120421, worksheet.outputs_energy_flows_ab126, 0.002); end
  def test_outputs_energy_flows_ac126; assert_in_epsilon(5.395367999292771, worksheet.outputs_energy_flows_ac126, 0.002); end
  def test_outputs_energy_flows_ad126; assert_in_epsilon(6.002959198177094, worksheet.outputs_energy_flows_ad126, 0.002); end
  def test_outputs_energy_flows_c128; assert_equal("n/a", worksheet.outputs_energy_flows_c128); end
  def test_outputs_energy_flows_d128; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d128); end
  def test_outputs_energy_flows_e128; assert_equal("n/a", worksheet.outputs_energy_flows_e128); end
  def test_outputs_energy_flows_f128; assert_equal("Cement", worksheet.outputs_energy_flows_f128); end
  def test_outputs_energy_flows_i128; assert_equal("E.01", worksheet.outputs_energy_flows_i128); end
  def test_outputs_energy_flows_j128; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j128); end
  def test_outputs_energy_flows_v128; assert_in_epsilon(1.288872331200076, worksheet.outputs_energy_flows_v128, 0.002); end
  def test_outputs_energy_flows_w128; assert_in_epsilon(1.3489283441622342, worksheet.outputs_energy_flows_w128, 0.002); end
  def test_outputs_energy_flows_x128; assert_in_epsilon(1.3585292635527542, worksheet.outputs_energy_flows_x128, 0.002); end
  def test_outputs_energy_flows_y128; assert_in_epsilon(1.4146054415519909, worksheet.outputs_energy_flows_y128, 0.002); end
  def test_outputs_energy_flows_z128; assert_in_epsilon(1.4623008947718497, worksheet.outputs_energy_flows_z128, 0.002); end
  def test_outputs_energy_flows_aa128; assert_in_epsilon(1.507159248656223, worksheet.outputs_energy_flows_aa128, 0.002); end
  def test_outputs_energy_flows_ab128; assert_in_epsilon(1.5431409488804353, worksheet.outputs_energy_flows_ab128, 0.002); end
  def test_outputs_energy_flows_ac128; assert_in_epsilon(1.5797345310853532, worksheet.outputs_energy_flows_ac128, 0.002); end
  def test_outputs_energy_flows_ad128; assert_in_epsilon(1.61779591891753, worksheet.outputs_energy_flows_ad128, 0.002); end
  def test_outputs_energy_flows_c130; assert_equal("n/a", worksheet.outputs_energy_flows_c130); end
  def test_outputs_energy_flows_d130; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d130); end
  def test_outputs_energy_flows_e130; assert_equal("n/a", worksheet.outputs_energy_flows_e130); end
  def test_outputs_energy_flows_f130; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f130); end
  def test_outputs_energy_flows_i130; assert_equal("E.01", worksheet.outputs_energy_flows_i130); end
  def test_outputs_energy_flows_j130; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j130); end
  def test_outputs_energy_flows_v130; assert_in_epsilon(1.82013932102304, worksheet.outputs_energy_flows_v130, 0.002); end
  def test_outputs_energy_flows_w130; assert_in_epsilon(1.882092317438087, worksheet.outputs_energy_flows_w130, 0.002); end
  def test_outputs_energy_flows_x130; assert_in_epsilon(1.9344412305322913, worksheet.outputs_energy_flows_x130, 0.002); end
  def test_outputs_energy_flows_y130; assert_in_epsilon(2.059852653355689, worksheet.outputs_energy_flows_y130, 0.002); end
  def test_outputs_energy_flows_z130; assert_in_epsilon(2.1794641541463027, worksheet.outputs_energy_flows_z130, 0.002); end
  def test_outputs_energy_flows_aa130; assert_in_epsilon(2.286671545486349, worksheet.outputs_energy_flows_aa130, 0.002); end
  def test_outputs_energy_flows_ab130; assert_in_epsilon(2.3989034210548286, worksheet.outputs_energy_flows_ab130, 0.002); end
  def test_outputs_energy_flows_ac130; assert_in_epsilon(2.4972292616028953, worksheet.outputs_energy_flows_ac130, 0.002); end
  def test_outputs_energy_flows_ad130; assert_in_epsilon(2.599806054940846, worksheet.outputs_energy_flows_ad130, 0.002); end
  def test_outputs_energy_flows_c132; assert_equal("n/a", worksheet.outputs_energy_flows_c132); end
  def test_outputs_energy_flows_d132; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d132); end
  def test_outputs_energy_flows_e132; assert_equal("n/a", worksheet.outputs_energy_flows_e132); end
  def test_outputs_energy_flows_f132; assert_equal("Chemicals", worksheet.outputs_energy_flows_f132); end
  def test_outputs_energy_flows_i132; assert_equal("E.01", worksheet.outputs_energy_flows_i132); end
  def test_outputs_energy_flows_j132; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j132); end
  def test_outputs_energy_flows_v132; assert_in_epsilon(4.185756900815473, worksheet.outputs_energy_flows_v132, 0.002); end
  def test_outputs_energy_flows_w132; assert_in_epsilon(4.410506504348868, worksheet.outputs_energy_flows_w132, 0.002); end
  def test_outputs_energy_flows_x132; assert_in_epsilon(4.71586959246209, worksheet.outputs_energy_flows_x132, 0.002); end
  def test_outputs_energy_flows_y132; assert_in_epsilon(5.3215127709323555, worksheet.outputs_energy_flows_y132, 0.002); end
  def test_outputs_energy_flows_z132; assert_in_epsilon(5.9563014321403704, worksheet.outputs_energy_flows_z132, 0.002); end
  def test_outputs_energy_flows_aa132; assert_in_epsilon(6.587354385760714, worksheet.outputs_energy_flows_aa132, 0.002); end
  def test_outputs_energy_flows_ab132; assert_in_epsilon(7.295216609608916, worksheet.outputs_energy_flows_ab132, 0.002); end
  def test_outputs_energy_flows_ac132; assert_in_epsilon(8.00095551297292, worksheet.outputs_energy_flows_ac132, 0.002); end
  def test_outputs_energy_flows_ad132; assert_in_epsilon(8.788430456599015, worksheet.outputs_energy_flows_ad132, 0.002); end
  def test_outputs_energy_flows_c134; assert_equal("n/a", worksheet.outputs_energy_flows_c134); end
  def test_outputs_energy_flows_d134; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d134); end
  def test_outputs_energy_flows_e134; assert_equal("n/a", worksheet.outputs_energy_flows_e134); end
  def test_outputs_energy_flows_f134; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f134); end
  def test_outputs_energy_flows_i134; assert_equal("E.01", worksheet.outputs_energy_flows_i134); end
  def test_outputs_energy_flows_j134; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j134); end
  def test_outputs_energy_flows_l134; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l134); end
  def test_outputs_energy_flows_m134; assert_equal("Timber", worksheet.outputs_energy_flows_m134); end
  def test_outputs_energy_flows_v134; assert_in_epsilon(14.528030114313331, worksheet.outputs_energy_flows_v134, 0.002); end
  def test_outputs_energy_flows_w134; assert_in_epsilon(15.46488710766932, worksheet.outputs_energy_flows_w134, 0.002); end
  def test_outputs_energy_flows_x134; assert_in_epsilon(17.088040644324536, worksheet.outputs_energy_flows_x134, 0.002); end
  def test_outputs_energy_flows_y134; assert_in_epsilon(18.58403593878788, worksheet.outputs_energy_flows_y134, 0.002); end
  def test_outputs_energy_flows_z134; assert_in_epsilon(20.01225016049647, worksheet.outputs_energy_flows_z134, 0.002); end
  def test_outputs_energy_flows_aa134; assert_in_epsilon(21.36626290651852, worksheet.outputs_energy_flows_aa134, 0.002); end
  def test_outputs_energy_flows_ab134; assert_in_epsilon(22.633268475294322, worksheet.outputs_energy_flows_ab134, 0.002); end
  def test_outputs_energy_flows_ac134; assert_in_epsilon(23.79999182658019, worksheet.outputs_energy_flows_ac134, 0.002); end
  def test_outputs_energy_flows_ad134; assert_in_epsilon(24.847714690898343, worksheet.outputs_energy_flows_ad134, 0.002); end
  def test_outputs_energy_flows_c136; assert_equal("n/a", worksheet.outputs_energy_flows_c136); end
  def test_outputs_energy_flows_d136; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d136); end
  def test_outputs_energy_flows_e136; assert_equal("n/a", worksheet.outputs_energy_flows_e136); end
  def test_outputs_energy_flows_f136; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f136); end
  def test_outputs_energy_flows_i136; assert_equal("E.01", worksheet.outputs_energy_flows_i136); end
  def test_outputs_energy_flows_j136; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j136); end
  def test_outputs_energy_flows_l136; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l136); end
  def test_outputs_energy_flows_m136; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m136); end
  def test_outputs_energy_flows_v136; assert_in_delta(0.5210581484658151, worksheet.outputs_energy_flows_v136, 0.002); end
  def test_outputs_energy_flows_w136; assert_in_delta(0.8286128699185127, worksheet.outputs_energy_flows_w136, 0.002); end
  def test_outputs_energy_flows_x136; assert_in_epsilon(1.1005485755717055, worksheet.outputs_energy_flows_x136, 0.002); end
  def test_outputs_energy_flows_y136; assert_in_epsilon(1.3471697840235293, worksheet.outputs_energy_flows_y136, 0.002); end
  def test_outputs_energy_flows_z136; assert_in_epsilon(1.639985694852972, worksheet.outputs_energy_flows_z136, 0.002); end
  def test_outputs_energy_flows_aa136; assert_in_epsilon(1.9657744337601075, worksheet.outputs_energy_flows_aa136, 0.002); end
  def test_outputs_energy_flows_ab136; assert_in_epsilon(2.2984121922736853, worksheet.outputs_energy_flows_ab136, 0.002); end
  def test_outputs_energy_flows_ac136; assert_in_epsilon(2.66914129428742, worksheet.outputs_energy_flows_ac136, 0.002); end
  def test_outputs_energy_flows_ad136; assert_in_epsilon(3.1015012431021094, worksheet.outputs_energy_flows_ad136, 0.002); end
  def test_outputs_energy_flows_c138; assert_equal("n/a", worksheet.outputs_energy_flows_c138); end
  def test_outputs_energy_flows_d138; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d138); end
  def test_outputs_energy_flows_e138; assert_equal("n/a", worksheet.outputs_energy_flows_e138); end
  def test_outputs_energy_flows_f138; assert_equal("International passenger", worksheet.outputs_energy_flows_f138); end
  def test_outputs_energy_flows_i138; assert_equal("E.01", worksheet.outputs_energy_flows_i138); end
  def test_outputs_energy_flows_j138; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j138); end
  def test_outputs_energy_flows_l138; assert_equal("International", worksheet.outputs_energy_flows_l138); end
  def test_outputs_energy_flows_v138; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v138||0), 0.002); end
  def test_outputs_energy_flows_w138; assert_in_delta(0.0038634121066087666, worksheet.outputs_energy_flows_w138, 0.002); end
  def test_outputs_energy_flows_x138; assert_in_delta(0.008809034284302134, worksheet.outputs_energy_flows_x138, 0.002); end
  def test_outputs_energy_flows_y138; assert_in_delta(0.014152998391795154, worksheet.outputs_energy_flows_y138, 0.002); end
  def test_outputs_energy_flows_z138; assert_in_delta(0.020564608425935202, worksheet.outputs_energy_flows_z138, 0.002); end
  def test_outputs_energy_flows_aa138; assert_in_delta(0.028535756399362205, worksheet.outputs_energy_flows_aa138, 0.002); end
  def test_outputs_energy_flows_ab138; assert_in_delta(0.03803420355952461, worksheet.outputs_energy_flows_ab138, 0.002); end
  def test_outputs_energy_flows_ac138; assert_in_delta(0.050116010828805416, worksheet.outputs_energy_flows_ac138, 0.002); end
  def test_outputs_energy_flows_ad138; assert_in_delta(0.06581041725383018, worksheet.outputs_energy_flows_ad138, 0.002); end
  def test_outputs_energy_flows_c140; assert_equal("n/a", worksheet.outputs_energy_flows_c140); end
  def test_outputs_energy_flows_d140; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d140); end
  def test_outputs_energy_flows_e140; assert_equal("n/a", worksheet.outputs_energy_flows_e140); end
  def test_outputs_energy_flows_f140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f140); end
  def test_outputs_energy_flows_i140; assert_equal("E.01", worksheet.outputs_energy_flows_i140); end
  def test_outputs_energy_flows_j140; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j140); end
  def test_outputs_energy_flows_l140; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l140); end
  def test_outputs_energy_flows_v140; assert_in_epsilon(1.064394758330311, worksheet.outputs_energy_flows_v140, 0.002); end
  def test_outputs_energy_flows_w140; assert_in_epsilon(1.0220337311886263, worksheet.outputs_energy_flows_w140, 0.002); end
  def test_outputs_energy_flows_x140; assert_in_epsilon(1.2455310670532052, worksheet.outputs_energy_flows_x140, 0.002); end
  def test_outputs_energy_flows_y140; assert_in_epsilon(1.467804857576649, worksheet.outputs_energy_flows_y140, 0.002); end
  def test_outputs_energy_flows_z140; assert_in_epsilon(1.6343141452166376, worksheet.outputs_energy_flows_z140, 0.002); end
  def test_outputs_energy_flows_aa140; assert_in_epsilon(1.7636960526360934, worksheet.outputs_energy_flows_aa140, 0.002); end
  def test_outputs_energy_flows_ab140; assert_in_epsilon(1.8461819031453182, worksheet.outputs_energy_flows_ab140, 0.002); end
  def test_outputs_energy_flows_ac140; assert_in_epsilon(1.903947422171397, worksheet.outputs_energy_flows_ac140, 0.002); end
  def test_outputs_energy_flows_ad140; assert_in_epsilon(1.9355919204901308, worksheet.outputs_energy_flows_ad140, 0.002); end
  def test_outputs_energy_flows_c142; assert_equal("n/a", worksheet.outputs_energy_flows_c142); end
  def test_outputs_energy_flows_d142; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d142); end
  def test_outputs_energy_flows_e142; assert_equal("n/a", worksheet.outputs_energy_flows_e142); end
  def test_outputs_energy_flows_f142; assert_equal("International freight", worksheet.outputs_energy_flows_f142); end
  def test_outputs_energy_flows_i142; assert_equal("E.01", worksheet.outputs_energy_flows_i142); end
  def test_outputs_energy_flows_j142; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j142); end
  def test_outputs_energy_flows_l142; assert_equal("International freight", worksheet.outputs_energy_flows_l142); end
  def test_outputs_energy_flows_v142; assert_in_delta(0.08957295494723592, worksheet.outputs_energy_flows_v142, 0.002); end
  def test_outputs_energy_flows_w142; assert_in_delta(0.1685386387628837, worksheet.outputs_energy_flows_w142, 0.002); end
  def test_outputs_energy_flows_x142; assert_in_delta(0.20375138938561507, worksheet.outputs_energy_flows_x142, 0.002); end
  def test_outputs_energy_flows_y142; assert_in_delta(0.24163957103535166, worksheet.outputs_energy_flows_y142, 0.002); end
  def test_outputs_energy_flows_z142; assert_in_delta(0.2753509572559275, worksheet.outputs_energy_flows_z142, 0.002); end
  def test_outputs_energy_flows_aa142; assert_in_delta(0.28764990316398165, worksheet.outputs_energy_flows_aa142, 0.002); end
  def test_outputs_energy_flows_ab142; assert_in_delta(0.28977748910475165, worksheet.outputs_energy_flows_ab142, 0.002); end
  def test_outputs_energy_flows_ac142; assert_in_delta(0.2889117240877517, worksheet.outputs_energy_flows_ac142, 0.002); end
  def test_outputs_energy_flows_ad142; assert_in_delta(0.27966524370227036, worksheet.outputs_energy_flows_ad142, 0.002); end
  def test_outputs_energy_flows_c144; assert_equal("n/a", worksheet.outputs_energy_flows_c144); end
  def test_outputs_energy_flows_d144; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d144); end
  def test_outputs_energy_flows_e144; assert_equal("n/a", worksheet.outputs_energy_flows_e144); end
  def test_outputs_energy_flows_f144; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f144); end
  def test_outputs_energy_flows_i144; assert_equal("E.01", worksheet.outputs_energy_flows_i144); end
  def test_outputs_energy_flows_j144; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j144); end
  def test_outputs_energy_flows_v144; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v144, 0.002); end
  def test_outputs_energy_flows_w144; assert_in_delta(0.0338155483926007, worksheet.outputs_energy_flows_w144, 0.002); end
  def test_outputs_energy_flows_x144; assert_in_delta(0.03194876203052603, worksheet.outputs_energy_flows_x144, 0.002); end
  def test_outputs_energy_flows_y144; assert_in_delta(0.029106985546156098, worksheet.outputs_energy_flows_y144, 0.002); end
  def test_outputs_energy_flows_z144; assert_in_delta(0.07162241870986559, worksheet.outputs_energy_flows_z144, 0.002); end
  def test_outputs_energy_flows_aa144; assert_in_delta(0.11909222734173094, worksheet.outputs_energy_flows_aa144, 0.002); end
  def test_outputs_energy_flows_ab144; assert_in_delta(0.15214450294742876, worksheet.outputs_energy_flows_ab144, 0.002); end
  def test_outputs_energy_flows_ac144; assert_in_delta(0.19439760878657483, worksheet.outputs_energy_flows_ac144, 0.002); end
  def test_outputs_energy_flows_ad144; assert_in_delta(0.24670403649986267, worksheet.outputs_energy_flows_ad144, 0.002); end
  def test_outputs_energy_flows_c146; assert_equal("n/a", worksheet.outputs_energy_flows_c146); end
  def test_outputs_energy_flows_d146; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d146); end
  def test_outputs_energy_flows_e146; assert_equal("G.01", worksheet.outputs_energy_flows_e146); end
  def test_outputs_energy_flows_f146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f146); end
  def test_outputs_energy_flows_g146; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g146); end
  def test_outputs_energy_flows_h146; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h146); end
  def test_outputs_energy_flows_i146; assert_equal("E.01", worksheet.outputs_energy_flows_i146); end
  def test_outputs_energy_flows_j146; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j146); end
  def test_outputs_energy_flows_v146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v146||0), 0.002); end
  def test_outputs_energy_flows_w146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w146||0), 0.002); end
  def test_outputs_energy_flows_x146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x146||0), 0.002); end
  def test_outputs_energy_flows_y146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y146||0), 0.002); end
  def test_outputs_energy_flows_z146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z146||0), 0.002); end
  def test_outputs_energy_flows_aa146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa146||0), 0.002); end
  def test_outputs_energy_flows_ab146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab146||0), 0.002); end
  def test_outputs_energy_flows_ac146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac146||0), 0.002); end
  def test_outputs_energy_flows_ad146; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad146||0), 0.002); end
  def test_outputs_energy_flows_c148; assert_equal("n/a", worksheet.outputs_energy_flows_c148); end
  def test_outputs_energy_flows_d148; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d148); end
  def test_outputs_energy_flows_e148; assert_equal("n/a", worksheet.outputs_energy_flows_e148); end
  def test_outputs_energy_flows_f148; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f148); end
  def test_outputs_energy_flows_g148; assert_equal("n/a", worksheet.outputs_energy_flows_g148); end
  def test_outputs_energy_flows_h148; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h148); end
  def test_outputs_energy_flows_i148; assert_equal("E.01", worksheet.outputs_energy_flows_i148); end
  def test_outputs_energy_flows_j148; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j148); end
  def test_outputs_energy_flows_v148; assert_in_epsilon(3.9550000000000005, worksheet.outputs_energy_flows_v148, 0.002); end
  def test_outputs_energy_flows_w148; assert_in_epsilon(4.104797047297063, worksheet.outputs_energy_flows_w148, 0.002); end
  def test_outputs_energy_flows_x148; assert_in_epsilon(4.270589315523124, worksheet.outputs_energy_flows_x148, 0.002); end
  def test_outputs_energy_flows_y148; assert_in_epsilon(4.4343160589921, worksheet.outputs_energy_flows_y148, 0.002); end
  def test_outputs_energy_flows_z148; assert_in_epsilon(4.602027396403196, worksheet.outputs_energy_flows_z148, 0.002); end
  def test_outputs_energy_flows_aa148; assert_in_epsilon(4.7767295682710955, worksheet.outputs_energy_flows_aa148, 0.002); end
  def test_outputs_energy_flows_ab148; assert_in_epsilon(4.934654285024021, worksheet.outputs_energy_flows_ab148, 0.002); end
  def test_outputs_energy_flows_ac148; assert_in_epsilon(5.054416648349366, worksheet.outputs_energy_flows_ac148, 0.002); end
  def test_outputs_energy_flows_ad148; assert_in_epsilon(5.150019106271309, worksheet.outputs_energy_flows_ad148, 0.002); end
  def test_outputs_energy_flows_d150; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d150); end
  def test_outputs_energy_flows_f150; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f150); end
  def test_outputs_energy_flows_i150; assert_equal("G.E.02", worksheet.outputs_energy_flows_i150); end
  def test_outputs_energy_flows_j150; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j150); end
  def test_outputs_energy_flows_p150; assert_equal("Net balance", worksheet.outputs_energy_flows_p150); end
  def test_outputs_energy_flows_v150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v150||0), 0.002); end
  def test_outputs_energy_flows_w150; assert_in_delta(-1.4210854715202004e-14, worksheet.outputs_energy_flows_w150, 0.002); end
  def test_outputs_energy_flows_x150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x150||0), 0.002); end
  def test_outputs_energy_flows_y150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y150||0), 0.002); end
  def test_outputs_energy_flows_z150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z150||0), 0.002); end
  def test_outputs_energy_flows_aa150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa150||0), 0.002); end
  def test_outputs_energy_flows_ab150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab150||0), 0.002); end
  def test_outputs_energy_flows_ac150; assert_in_delta(2.842170943040401e-14, worksheet.outputs_energy_flows_ac150, 0.002); end
  def test_outputs_energy_flows_ad150; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad150||0), 0.002); end
  def test_outputs_energy_flows_c152; assert_equal("n/a", worksheet.outputs_energy_flows_c152); end
  def test_outputs_energy_flows_d152; assert_equal("Solid", worksheet.outputs_energy_flows_d152); end
  def test_outputs_energy_flows_e152; assert_equal("n/a", worksheet.outputs_energy_flows_e152); end
  def test_outputs_energy_flows_f152; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f152); end
  def test_outputs_energy_flows_i152; assert_equal("C.01", worksheet.outputs_energy_flows_i152); end
  def test_outputs_energy_flows_j152; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j152); end
  def test_outputs_energy_flows_k152; assert_equal("Global buildings", worksheet.outputs_energy_flows_k152); end
  def test_outputs_energy_flows_v152; assert_in_epsilon(12.49378870882165, worksheet.outputs_energy_flows_v152, 0.002); end
  def test_outputs_energy_flows_w152; assert_in_epsilon(13.012983979750972, worksheet.outputs_energy_flows_w152, 0.002); end
  def test_outputs_energy_flows_x152; assert_in_epsilon(12.805840573525135, worksheet.outputs_energy_flows_x152, 0.002); end
  def test_outputs_energy_flows_y152; assert_in_epsilon(12.500318516952095, worksheet.outputs_energy_flows_y152, 0.002); end
  def test_outputs_energy_flows_z152; assert_in_epsilon(12.073673731920055, worksheet.outputs_energy_flows_z152, 0.002); end
  def test_outputs_energy_flows_aa152; assert_in_epsilon(11.533978536666297, worksheet.outputs_energy_flows_aa152, 0.002); end
  def test_outputs_energy_flows_ab152; assert_in_epsilon(10.901138455208276, worksheet.outputs_energy_flows_ab152, 0.002); end
  def test_outputs_energy_flows_ac152; assert_in_epsilon(10.197028807183647, worksheet.outputs_energy_flows_ac152, 0.002); end
  def test_outputs_energy_flows_ad152; assert_in_epsilon(9.405780377625339, worksheet.outputs_energy_flows_ad152, 0.002); end
  def test_outputs_energy_flows_c154; assert_equal("n/a", worksheet.outputs_energy_flows_c154); end
  def test_outputs_energy_flows_d154; assert_equal("Solid", worksheet.outputs_energy_flows_d154); end
  def test_outputs_energy_flows_e154; assert_equal("n/a", worksheet.outputs_energy_flows_e154); end
  def test_outputs_energy_flows_f154; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f154); end
  def test_outputs_energy_flows_i154; assert_equal("C.01", worksheet.outputs_energy_flows_i154); end
  def test_outputs_energy_flows_j154; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j154); end
  def test_outputs_energy_flows_k154; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k154); end
  def test_outputs_energy_flows_l154; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l154); end
  def test_outputs_energy_flows_v154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v154||0), 0.002); end
  def test_outputs_energy_flows_w154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w154||0), 0.002); end
  def test_outputs_energy_flows_x154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x154||0), 0.002); end
  def test_outputs_energy_flows_y154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y154||0), 0.002); end
  def test_outputs_energy_flows_z154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z154||0), 0.002); end
  def test_outputs_energy_flows_aa154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa154||0), 0.002); end
  def test_outputs_energy_flows_ab154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab154||0), 0.002); end
  def test_outputs_energy_flows_ac154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac154||0), 0.002); end
  def test_outputs_energy_flows_ad154; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad154||0), 0.002); end
  def test_outputs_energy_flows_c156; assert_equal("n/a", worksheet.outputs_energy_flows_c156); end
  def test_outputs_energy_flows_d156; assert_equal("Solid", worksheet.outputs_energy_flows_d156); end
  def test_outputs_energy_flows_e156; assert_equal("n/a", worksheet.outputs_energy_flows_e156); end
  def test_outputs_energy_flows_f156; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f156); end
  def test_outputs_energy_flows_i156; assert_equal("C.01", worksheet.outputs_energy_flows_i156); end
  def test_outputs_energy_flows_j156; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j156); end
  def test_outputs_energy_flows_k156; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k156); end
  def test_outputs_energy_flows_l156; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l156); end
  def test_outputs_energy_flows_v156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v156||0), 0.002); end
  def test_outputs_energy_flows_w156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w156||0), 0.002); end
  def test_outputs_energy_flows_x156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x156||0), 0.002); end
  def test_outputs_energy_flows_y156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y156||0), 0.002); end
  def test_outputs_energy_flows_z156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z156||0), 0.002); end
  def test_outputs_energy_flows_aa156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa156||0), 0.002); end
  def test_outputs_energy_flows_ab156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab156||0), 0.002); end
  def test_outputs_energy_flows_ac156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac156||0), 0.002); end
  def test_outputs_energy_flows_ad156; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad156||0), 0.002); end
  def test_outputs_energy_flows_c158; assert_equal("n/a", worksheet.outputs_energy_flows_c158); end
  def test_outputs_energy_flows_d158; assert_equal("Solid", worksheet.outputs_energy_flows_d158); end
  def test_outputs_energy_flows_e158; assert_equal("n/a", worksheet.outputs_energy_flows_e158); end
  def test_outputs_energy_flows_f158; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f158); end
  def test_outputs_energy_flows_i158; assert_equal("C.01", worksheet.outputs_energy_flows_i158); end
  def test_outputs_energy_flows_j158; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j158); end
  def test_outputs_energy_flows_k158; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k158); end
  def test_outputs_energy_flows_l158; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l158); end
  def test_outputs_energy_flows_v158; assert_in_epsilon(2.7875467832665146, worksheet.outputs_energy_flows_v158, 0.002); end
  def test_outputs_energy_flows_w158; assert_in_epsilon(2.836352246295604, worksheet.outputs_energy_flows_w158, 0.002); end
  def test_outputs_energy_flows_x158; assert_in_epsilon(2.668569322719999, worksheet.outputs_energy_flows_x158, 0.002); end
  def test_outputs_energy_flows_y158; assert_in_epsilon(2.471147347105303, worksheet.outputs_energy_flows_y158, 0.002); end
  def test_outputs_energy_flows_z158; assert_in_epsilon(2.2426758834768963, worksheet.outputs_energy_flows_z158, 0.002); end
  def test_outputs_energy_flows_aa158; assert_in_epsilon(1.9827580449472235, worksheet.outputs_energy_flows_aa158, 0.002); end
  def test_outputs_energy_flows_ab158; assert_in_epsilon(1.7083023603743952, worksheet.outputs_energy_flows_ab158, 0.002); end
  def test_outputs_energy_flows_ac158; assert_in_epsilon(1.4203342623514108, worksheet.outputs_energy_flows_ac158, 0.002); end
  def test_outputs_energy_flows_ad158; assert_in_epsilon(1.1316174651498747, worksheet.outputs_energy_flows_ad158, 0.002); end
  def test_outputs_energy_flows_c160; assert_equal("n/a", worksheet.outputs_energy_flows_c160); end
  def test_outputs_energy_flows_d160; assert_equal("Solid", worksheet.outputs_energy_flows_d160); end
  def test_outputs_energy_flows_e160; assert_equal("n/a", worksheet.outputs_energy_flows_e160); end
  def test_outputs_energy_flows_f160; assert_equal("Non domestic", worksheet.outputs_energy_flows_f160); end
  def test_outputs_energy_flows_i160; assert_equal("C.01", worksheet.outputs_energy_flows_i160); end
  def test_outputs_energy_flows_j160; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j160); end
  def test_outputs_energy_flows_k160; assert_equal("Non-residential", worksheet.outputs_energy_flows_k160); end
  def test_outputs_energy_flows_v160; assert_in_delta(0.8347761904673903, worksheet.outputs_energy_flows_v160, 0.002); end
  def test_outputs_energy_flows_w160; assert_in_delta(0.8488006416034026, worksheet.outputs_energy_flows_w160, 0.002); end
  def test_outputs_energy_flows_x160; assert_in_delta(0.8591701822421322, worksheet.outputs_energy_flows_x160, 0.002); end
  def test_outputs_energy_flows_y160; assert_in_delta(0.8543544308748071, worksheet.outputs_energy_flows_y160, 0.002); end
  def test_outputs_energy_flows_z160; assert_in_delta(0.834770574193002, worksheet.outputs_energy_flows_z160, 0.002); end
  def test_outputs_energy_flows_aa160; assert_in_delta(0.8013498840641666, worksheet.outputs_energy_flows_aa160, 0.002); end
  def test_outputs_energy_flows_ab160; assert_in_delta(0.7550571137007673, worksheet.outputs_energy_flows_ab160, 0.002); end
  def test_outputs_energy_flows_ac160; assert_in_delta(0.6969770410780618, worksheet.outputs_energy_flows_ac160, 0.002); end
  def test_outputs_energy_flows_ad160; assert_in_delta(0.6285310320226825, worksheet.outputs_energy_flows_ad160, 0.002); end
  def test_outputs_energy_flows_c162; assert_equal("n/a", worksheet.outputs_energy_flows_c162); end
  def test_outputs_energy_flows_d162; assert_equal("Solid", worksheet.outputs_energy_flows_d162); end
  def test_outputs_energy_flows_e162; assert_equal("n/a", worksheet.outputs_energy_flows_e162); end
  def test_outputs_energy_flows_f162; assert_equal("Steel", worksheet.outputs_energy_flows_f162); end
  def test_outputs_energy_flows_i162; assert_equal("C.01", worksheet.outputs_energy_flows_i162); end
  def test_outputs_energy_flows_j162; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j162); end
  def test_outputs_energy_flows_v162; assert_in_delta(0.5489501886, worksheet.outputs_energy_flows_v162, 0.002); end
  def test_outputs_energy_flows_w162; assert_in_delta(0.6009501011113728, worksheet.outputs_energy_flows_w162, 0.002); end
  def test_outputs_energy_flows_x162; assert_in_delta(0.6363119050367225, worksheet.outputs_energy_flows_x162, 0.002); end
  def test_outputs_energy_flows_y162; assert_in_delta(0.7029094293735714, worksheet.outputs_energy_flows_y162, 0.002); end
  def test_outputs_energy_flows_z162; assert_in_delta(0.7726116548814645, worksheet.outputs_energy_flows_z162, 0.002); end
  def test_outputs_energy_flows_aa162; assert_in_delta(0.8420923007382421, worksheet.outputs_energy_flows_aa162, 0.002); end
  def test_outputs_energy_flows_ab162; assert_in_delta(0.9191897927356145, worksheet.outputs_energy_flows_ab162, 0.002); end
  def test_outputs_energy_flows_ac162; assert_in_epsilon(1.0046653584576357, worksheet.outputs_energy_flows_ac162, 0.002); end
  def test_outputs_energy_flows_ad162; assert_in_epsilon(1.090288842035837, worksheet.outputs_energy_flows_ad162, 0.002); end
  def test_outputs_energy_flows_c164; assert_equal("n/a", worksheet.outputs_energy_flows_c164); end
  def test_outputs_energy_flows_d164; assert_equal("Solid", worksheet.outputs_energy_flows_d164); end
  def test_outputs_energy_flows_e164; assert_equal("n/a", worksheet.outputs_energy_flows_e164); end
  def test_outputs_energy_flows_f164; assert_equal("Aluminium", worksheet.outputs_energy_flows_f164); end
  def test_outputs_energy_flows_i164; assert_equal("C.01", worksheet.outputs_energy_flows_i164); end
  def test_outputs_energy_flows_j164; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j164); end
  def test_outputs_energy_flows_v164; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v164||0), 0.002); end
  def test_outputs_energy_flows_w164; assert_in_delta(0.00027868438251727113, worksheet.outputs_energy_flows_w164, 0.002); end
  def test_outputs_energy_flows_x164; assert_in_delta(0.0004751794128973057, worksheet.outputs_energy_flows_x164, 0.002); end
  def test_outputs_energy_flows_y164; assert_in_delta(0.0007392382485565124, worksheet.outputs_energy_flows_y164, 0.002); end
  def test_outputs_energy_flows_z164; assert_in_delta(0.0010597602749253944, worksheet.outputs_energy_flows_z164, 0.002); end
  def test_outputs_energy_flows_aa164; assert_in_delta(0.0014347071409473958, worksheet.outputs_energy_flows_aa164, 0.002); end
  def test_outputs_energy_flows_ab164; assert_in_delta(0.0018826555941544355, worksheet.outputs_energy_flows_ab164, 0.002); end
  def test_outputs_energy_flows_ac164; assert_in_delta(0.002405236075250989, worksheet.outputs_energy_flows_ac164, 0.002); end
  def test_outputs_energy_flows_ad164; assert_in_delta(0.003020658487409625, worksheet.outputs_energy_flows_ad164, 0.002); end
  def test_outputs_energy_flows_c166; assert_equal("n/a", worksheet.outputs_energy_flows_c166); end
  def test_outputs_energy_flows_d166; assert_equal("Solid", worksheet.outputs_energy_flows_d166); end
  def test_outputs_energy_flows_e166; assert_equal("n/a", worksheet.outputs_energy_flows_e166); end
  def test_outputs_energy_flows_f166; assert_equal("Cement", worksheet.outputs_energy_flows_f166); end
  def test_outputs_energy_flows_i166; assert_equal("C.01", worksheet.outputs_energy_flows_i166); end
  def test_outputs_energy_flows_j166; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j166); end
  def test_outputs_energy_flows_v166; assert_in_delta(0.4925092998042991, worksheet.outputs_energy_flows_v166, 0.002); end
  def test_outputs_energy_flows_w166; assert_in_delta(0.5632490402055293, worksheet.outputs_energy_flows_w166, 0.002); end
  def test_outputs_energy_flows_x166; assert_in_delta(0.6006058631672738, worksheet.outputs_energy_flows_x166, 0.002); end
  def test_outputs_energy_flows_y166; assert_in_delta(0.660121581709198, worksheet.outputs_energy_flows_y166, 0.002); end
  def test_outputs_energy_flows_z166; assert_in_delta(0.7182737498523386, worksheet.outputs_energy_flows_z166, 0.002); end
  def test_outputs_energy_flows_aa166; assert_in_delta(0.7773042771763343, worksheet.outputs_energy_flows_aa166, 0.002); end
  def test_outputs_energy_flows_ab166; assert_in_delta(0.8337411350752038, worksheet.outputs_energy_flows_ab166, 0.002); end
  def test_outputs_energy_flows_ac166; assert_in_delta(0.8922900971810526, worksheet.outputs_energy_flows_ac166, 0.002); end
  def test_outputs_energy_flows_ad166; assert_in_delta(0.9535006897114919, worksheet.outputs_energy_flows_ad166, 0.002); end
  def test_outputs_energy_flows_c168; assert_equal("n/a", worksheet.outputs_energy_flows_c168); end
  def test_outputs_energy_flows_d168; assert_equal("Solid", worksheet.outputs_energy_flows_d168); end
  def test_outputs_energy_flows_e168; assert_equal("n/a", worksheet.outputs_energy_flows_e168); end
  def test_outputs_energy_flows_f168; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f168); end
  def test_outputs_energy_flows_i168; assert_equal("C.01", worksheet.outputs_energy_flows_i168); end
  def test_outputs_energy_flows_j168; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j168); end
  def test_outputs_energy_flows_v168; assert_in_epsilon(1.7854467564492018, worksheet.outputs_energy_flows_v168, 0.002); end
  def test_outputs_energy_flows_w168; assert_in_epsilon(1.8529407163687055, worksheet.outputs_energy_flows_w168, 0.002); end
  def test_outputs_energy_flows_x168; assert_in_epsilon(1.919955111112601, worksheet.outputs_energy_flows_x168, 0.002); end
  def test_outputs_energy_flows_y168; assert_in_epsilon(2.0611081800604816, worksheet.outputs_energy_flows_y168, 0.002); end
  def test_outputs_energy_flows_z168; assert_in_epsilon(2.1986587404399636, worksheet.outputs_energy_flows_z168, 0.002); end
  def test_outputs_energy_flows_aa168; assert_in_epsilon(2.32578691151782, worksheet.outputs_energy_flows_aa168, 0.002); end
  def test_outputs_energy_flows_ab168; assert_in_epsilon(2.4600941093484323, worksheet.outputs_energy_flows_ab168, 0.002); end
  def test_outputs_energy_flows_ac168; assert_in_epsilon(2.582172153394105, worksheet.outputs_energy_flows_ac168, 0.002); end
  def test_outputs_energy_flows_ad168; assert_in_epsilon(2.7106332772847943, worksheet.outputs_energy_flows_ad168, 0.002); end
  def test_outputs_energy_flows_c170; assert_equal("n/a", worksheet.outputs_energy_flows_c170); end
  def test_outputs_energy_flows_d170; assert_equal("Solid", worksheet.outputs_energy_flows_d170); end
  def test_outputs_energy_flows_e170; assert_equal("n/a", worksheet.outputs_energy_flows_e170); end
  def test_outputs_energy_flows_f170; assert_equal("Chemicals", worksheet.outputs_energy_flows_f170); end
  def test_outputs_energy_flows_i170; assert_equal("C.01", worksheet.outputs_energy_flows_i170); end
  def test_outputs_energy_flows_j170; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j170); end
  def test_outputs_energy_flows_v170; assert_in_delta(0.16313870478909603, worksheet.outputs_energy_flows_v170, 0.002); end
  def test_outputs_energy_flows_w170; assert_in_delta(0.1880850925951288, worksheet.outputs_energy_flows_w170, 0.002); end
  def test_outputs_energy_flows_x170; assert_in_delta(0.1985697030876586, worksheet.outputs_energy_flows_x170, 0.002); end
  def test_outputs_energy_flows_y170; assert_in_delta(0.2208749822068348, worksheet.outputs_energy_flows_y170, 0.002); end
  def test_outputs_energy_flows_z170; assert_in_delta(0.2439081758032193, worksheet.outputs_energy_flows_z170, 0.002); end
  def test_outputs_energy_flows_aa170; assert_in_delta(0.266334264853472, worksheet.outputs_energy_flows_aa170, 0.002); end
  def test_outputs_energy_flows_ab170; assert_in_delta(0.29127879879274365, worksheet.outputs_energy_flows_ab170, 0.002); end
  def test_outputs_energy_flows_ac170; assert_in_delta(0.3155689747816784, worksheet.outputs_energy_flows_ac170, 0.002); end
  def test_outputs_energy_flows_ad170; assert_in_delta(0.34252661962745273, worksheet.outputs_energy_flows_ad170, 0.002); end
  def test_outputs_energy_flows_c172; assert_equal("n/a", worksheet.outputs_energy_flows_c172); end
  def test_outputs_energy_flows_d172; assert_equal("Solid", worksheet.outputs_energy_flows_d172); end
  def test_outputs_energy_flows_e172; assert_equal("n/a", worksheet.outputs_energy_flows_e172); end
  def test_outputs_energy_flows_f172; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f172); end
  def test_outputs_energy_flows_i172; assert_equal("C.01", worksheet.outputs_energy_flows_i172); end
  def test_outputs_energy_flows_j172; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j172); end
  def test_outputs_energy_flows_l172; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l172); end
  def test_outputs_energy_flows_m172; assert_equal("Timber", worksheet.outputs_energy_flows_m172); end
  def test_outputs_energy_flows_v172; assert_in_epsilon(5.432131184106508, worksheet.outputs_energy_flows_v172, 0.002); end
  def test_outputs_energy_flows_w172; assert_in_epsilon(5.82326485606165, worksheet.outputs_energy_flows_w172, 0.002); end
  def test_outputs_energy_flows_x172; assert_in_epsilon(6.487467831024594, worksheet.outputs_energy_flows_x172, 0.002); end
  def test_outputs_energy_flows_y172; assert_in_epsilon(7.086341988827936, worksheet.outputs_energy_flows_y172, 0.002); end
  def test_outputs_energy_flows_z172; assert_in_epsilon(7.669659705620372, worksheet.outputs_energy_flows_z172, 0.002); end
  def test_outputs_energy_flows_aa172; assert_in_epsilon(8.235529726297717, worksheet.outputs_energy_flows_aa172, 0.002); end
  def test_outputs_energy_flows_ab172; assert_in_epsilon(8.778524121894362, worksheet.outputs_energy_flows_ab172, 0.002); end
  def test_outputs_energy_flows_ac172; assert_in_epsilon(9.294120296040465, worksheet.outputs_energy_flows_ac172, 0.002); end
  def test_outputs_energy_flows_ad172; assert_in_epsilon(9.772451687385669, worksheet.outputs_energy_flows_ad172, 0.002); end
  def test_outputs_energy_flows_c174; assert_equal("n/a", worksheet.outputs_energy_flows_c174); end
  def test_outputs_energy_flows_d174; assert_equal("Solid", worksheet.outputs_energy_flows_d174); end
  def test_outputs_energy_flows_e174; assert_equal("n/a", worksheet.outputs_energy_flows_e174); end
  def test_outputs_energy_flows_f174; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f174); end
  def test_outputs_energy_flows_i174; assert_equal("C.01", worksheet.outputs_energy_flows_i174); end
  def test_outputs_energy_flows_j174; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j174); end
  def test_outputs_energy_flows_l174; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l174); end
  def test_outputs_energy_flows_m174; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m174); end
  def test_outputs_energy_flows_v174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v174||0), 0.002); end
  def test_outputs_energy_flows_w174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w174||0), 0.002); end
  def test_outputs_energy_flows_x174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x174||0), 0.002); end
  def test_outputs_energy_flows_y174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y174||0), 0.002); end
  def test_outputs_energy_flows_z174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z174||0), 0.002); end
  def test_outputs_energy_flows_aa174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa174||0), 0.002); end
  def test_outputs_energy_flows_ab174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab174||0), 0.002); end
  def test_outputs_energy_flows_ac174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac174||0), 0.002); end
  def test_outputs_energy_flows_ad174; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad174||0), 0.002); end
  def test_outputs_energy_flows_c176; assert_equal("n/a", worksheet.outputs_energy_flows_c176); end
  def test_outputs_energy_flows_d176; assert_equal("Solid", worksheet.outputs_energy_flows_d176); end
  def test_outputs_energy_flows_e176; assert_equal("n/a", worksheet.outputs_energy_flows_e176); end
  def test_outputs_energy_flows_f176; assert_equal("International passenger", worksheet.outputs_energy_flows_f176); end
  def test_outputs_energy_flows_i176; assert_equal("C.01", worksheet.outputs_energy_flows_i176); end
  def test_outputs_energy_flows_j176; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j176); end
  def test_outputs_energy_flows_l176; assert_equal("International", worksheet.outputs_energy_flows_l176); end
  def test_outputs_energy_flows_v176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v176||0), 0.002); end
  def test_outputs_energy_flows_w176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w176||0), 0.002); end
  def test_outputs_energy_flows_x176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x176||0), 0.002); end
  def test_outputs_energy_flows_y176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y176||0), 0.002); end
  def test_outputs_energy_flows_z176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z176||0), 0.002); end
  def test_outputs_energy_flows_aa176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa176||0), 0.002); end
  def test_outputs_energy_flows_ab176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab176||0), 0.002); end
  def test_outputs_energy_flows_ac176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac176||0), 0.002); end
  def test_outputs_energy_flows_ad176; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad176||0), 0.002); end
  def test_outputs_energy_flows_c178; assert_equal("n/a", worksheet.outputs_energy_flows_c178); end
  def test_outputs_energy_flows_d178; assert_equal("Solid", worksheet.outputs_energy_flows_d178); end
  def test_outputs_energy_flows_e178; assert_equal("n/a", worksheet.outputs_energy_flows_e178); end
  def test_outputs_energy_flows_f178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f178); end
  def test_outputs_energy_flows_i178; assert_equal("C.01", worksheet.outputs_energy_flows_i178); end
  def test_outputs_energy_flows_j178; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j178); end
  def test_outputs_energy_flows_l178; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l178); end
  def test_outputs_energy_flows_v178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v178||0), 0.002); end
  def test_outputs_energy_flows_w178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w178||0), 0.002); end
  def test_outputs_energy_flows_x178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x178||0), 0.002); end
  def test_outputs_energy_flows_y178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y178||0), 0.002); end
  def test_outputs_energy_flows_z178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z178||0), 0.002); end
  def test_outputs_energy_flows_aa178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa178||0), 0.002); end
  def test_outputs_energy_flows_ab178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab178||0), 0.002); end
  def test_outputs_energy_flows_ac178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac178||0), 0.002); end
  def test_outputs_energy_flows_ad178; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad178||0), 0.002); end
  def test_outputs_energy_flows_c180; assert_equal("n/a", worksheet.outputs_energy_flows_c180); end
  def test_outputs_energy_flows_d180; assert_equal("Solid", worksheet.outputs_energy_flows_d180); end
  def test_outputs_energy_flows_e180; assert_equal("n/a", worksheet.outputs_energy_flows_e180); end
  def test_outputs_energy_flows_f180; assert_equal("International freight", worksheet.outputs_energy_flows_f180); end
  def test_outputs_energy_flows_i180; assert_equal("C.01", worksheet.outputs_energy_flows_i180); end
  def test_outputs_energy_flows_j180; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j180); end
  def test_outputs_energy_flows_l180; assert_equal("International freight", worksheet.outputs_energy_flows_l180); end
  def test_outputs_energy_flows_v180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v180||0), 0.002); end
  def test_outputs_energy_flows_w180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w180||0), 0.002); end
  def test_outputs_energy_flows_x180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x180||0), 0.002); end
  def test_outputs_energy_flows_y180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y180||0), 0.002); end
  def test_outputs_energy_flows_z180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z180||0), 0.002); end
  def test_outputs_energy_flows_aa180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa180||0), 0.002); end
  def test_outputs_energy_flows_ab180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab180||0), 0.002); end
  def test_outputs_energy_flows_ac180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac180||0), 0.002); end
  def test_outputs_energy_flows_ad180; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad180||0), 0.002); end
  def test_outputs_energy_flows_c182; assert_equal("n/a", worksheet.outputs_energy_flows_c182); end
  def test_outputs_energy_flows_d182; assert_equal("Solid", worksheet.outputs_energy_flows_d182); end
  def test_outputs_energy_flows_e182; assert_equal("n/a", worksheet.outputs_energy_flows_e182); end
  def test_outputs_energy_flows_f182; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f182); end
  def test_outputs_energy_flows_i182; assert_equal("C.01", worksheet.outputs_energy_flows_i182); end
  def test_outputs_energy_flows_j182; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j182); end
  def test_outputs_energy_flows_v182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v182||0), 0.002); end
  def test_outputs_energy_flows_w182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w182||0), 0.002); end
  def test_outputs_energy_flows_x182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x182||0), 0.002); end
  def test_outputs_energy_flows_y182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y182||0), 0.002); end
  def test_outputs_energy_flows_z182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z182||0), 0.002); end
  def test_outputs_energy_flows_aa182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa182||0), 0.002); end
  def test_outputs_energy_flows_ab182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab182||0), 0.002); end
  def test_outputs_energy_flows_ac182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac182||0), 0.002); end
  def test_outputs_energy_flows_ad182; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad182||0), 0.002); end
  def test_outputs_energy_flows_c184; assert_equal("n/a", worksheet.outputs_energy_flows_c184); end
  def test_outputs_energy_flows_d184; assert_equal("Solid", worksheet.outputs_energy_flows_d184); end
  def test_outputs_energy_flows_e184; assert_equal("G.01", worksheet.outputs_energy_flows_e184); end
  def test_outputs_energy_flows_f184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f184); end
  def test_outputs_energy_flows_g184; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g184); end
  def test_outputs_energy_flows_h184; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h184); end
  def test_outputs_energy_flows_i184; assert_equal("C.01", worksheet.outputs_energy_flows_i184); end
  def test_outputs_energy_flows_j184; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j184); end
  def test_outputs_energy_flows_v184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v184||0), 0.002); end
  def test_outputs_energy_flows_w184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w184||0), 0.002); end
  def test_outputs_energy_flows_x184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x184||0), 0.002); end
  def test_outputs_energy_flows_y184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y184||0), 0.002); end
  def test_outputs_energy_flows_z184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z184||0), 0.002); end
  def test_outputs_energy_flows_aa184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa184||0), 0.002); end
  def test_outputs_energy_flows_ab184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab184||0), 0.002); end
  def test_outputs_energy_flows_ac184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac184||0), 0.002); end
  def test_outputs_energy_flows_ad184; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad184||0), 0.002); end
  def test_outputs_energy_flows_c186; assert_equal("n/a", worksheet.outputs_energy_flows_c186); end
  def test_outputs_energy_flows_d186; assert_equal("Solid", worksheet.outputs_energy_flows_d186); end
  def test_outputs_energy_flows_e186; assert_equal("n/a", worksheet.outputs_energy_flows_e186); end
  def test_outputs_energy_flows_f186; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f186); end
  def test_outputs_energy_flows_g186; assert_equal("n/a", worksheet.outputs_energy_flows_g186); end
  def test_outputs_energy_flows_h186; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h186); end
  def test_outputs_energy_flows_i186; assert_equal("C.01", worksheet.outputs_energy_flows_i186); end
  def test_outputs_energy_flows_j186; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j186); end
  def test_outputs_energy_flows_v186; assert_in_epsilon(25.77364698823776, worksheet.outputs_energy_flows_v186, 0.002); end
  def test_outputs_energy_flows_w186; assert_in_epsilon(25.747206727411868, worksheet.outputs_energy_flows_w186, 0.002); end
  def test_outputs_energy_flows_x186; assert_in_epsilon(26.24008627247894, worksheet.outputs_energy_flows_x186, 0.002); end
  def test_outputs_energy_flows_y186; assert_in_epsilon(26.824585853345667, worksheet.outputs_energy_flows_y186, 0.002); end
  def test_outputs_energy_flows_z186; assert_in_epsilon(27.332790596628232, worksheet.outputs_energy_flows_z186, 0.002); end
  def test_outputs_energy_flows_aa186; assert_in_epsilon(27.666151717390164, worksheet.outputs_energy_flows_aa186, 0.002); end
  def test_outputs_energy_flows_ab186; assert_in_epsilon(28.122475122024355, worksheet.outputs_energy_flows_ab186, 0.002); end
  def test_outputs_energy_flows_ac186; assert_in_epsilon(28.990506863771934, worksheet.outputs_energy_flows_ac186, 0.002); end
  def test_outputs_energy_flows_ad186; assert_in_epsilon(30.10854412928559, worksheet.outputs_energy_flows_ad186, 0.002); end
  def test_outputs_energy_flows_c188; assert_equal("n/a", worksheet.outputs_energy_flows_c188); end
  def test_outputs_energy_flows_d188; assert_equal("Liquid", worksheet.outputs_energy_flows_d188); end
  def test_outputs_energy_flows_e188; assert_equal("n/a", worksheet.outputs_energy_flows_e188); end
  def test_outputs_energy_flows_f188; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f188); end
  def test_outputs_energy_flows_i188; assert_equal("C.02", worksheet.outputs_energy_flows_i188); end
  def test_outputs_energy_flows_j188; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j188); end
  def test_outputs_energy_flows_k188; assert_equal("Global buildings", worksheet.outputs_energy_flows_k188); end
  def test_outputs_energy_flows_v188; assert_in_epsilon(5.831189655713504, worksheet.outputs_energy_flows_v188, 0.002); end
  def test_outputs_energy_flows_w188; assert_in_epsilon(6.268775680889616, worksheet.outputs_energy_flows_w188, 0.002); end
  def test_outputs_energy_flows_x188; assert_in_epsilon(6.22971616054493, worksheet.outputs_energy_flows_x188, 0.002); end
  def test_outputs_energy_flows_y188; assert_in_epsilon(6.113864135972456, worksheet.outputs_energy_flows_y188, 0.002); end
  def test_outputs_energy_flows_z188; assert_in_epsilon(5.909309759578027, worksheet.outputs_energy_flows_z188, 0.002); end
  def test_outputs_energy_flows_aa188; assert_in_epsilon(5.602060255948994, worksheet.outputs_energy_flows_aa188, 0.002); end
  def test_outputs_energy_flows_ab188; assert_in_epsilon(5.222824694461373, worksheet.outputs_energy_flows_ab188, 0.002); end
  def test_outputs_energy_flows_ac188; assert_in_epsilon(4.763714392107943, worksheet.outputs_energy_flows_ac188, 0.002); end
  def test_outputs_energy_flows_ad188; assert_in_epsilon(4.254513155201405, worksheet.outputs_energy_flows_ad188, 0.002); end
  def test_outputs_energy_flows_c190; assert_equal("n/a", worksheet.outputs_energy_flows_c190); end
  def test_outputs_energy_flows_d190; assert_equal("Liquid", worksheet.outputs_energy_flows_d190); end
  def test_outputs_energy_flows_e190; assert_equal("n/a", worksheet.outputs_energy_flows_e190); end
  def test_outputs_energy_flows_f190; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f190); end
  def test_outputs_energy_flows_i190; assert_equal("C.02", worksheet.outputs_energy_flows_i190); end
  def test_outputs_energy_flows_j190; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j190); end
  def test_outputs_energy_flows_k190; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k190); end
  def test_outputs_energy_flows_l190; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l190); end
  def test_outputs_energy_flows_v190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v190||0), 0.002); end
  def test_outputs_energy_flows_w190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w190||0), 0.002); end
  def test_outputs_energy_flows_x190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x190||0), 0.002); end
  def test_outputs_energy_flows_y190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y190||0), 0.002); end
  def test_outputs_energy_flows_z190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z190||0), 0.002); end
  def test_outputs_energy_flows_aa190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa190||0), 0.002); end
  def test_outputs_energy_flows_ab190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab190||0), 0.002); end
  def test_outputs_energy_flows_ac190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac190||0), 0.002); end
  def test_outputs_energy_flows_ad190; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad190||0), 0.002); end
  def test_outputs_energy_flows_c192; assert_equal("n/a", worksheet.outputs_energy_flows_c192); end
  def test_outputs_energy_flows_d192; assert_equal("Liquid", worksheet.outputs_energy_flows_d192); end
  def test_outputs_energy_flows_e192; assert_equal("n/a", worksheet.outputs_energy_flows_e192); end
  def test_outputs_energy_flows_f192; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f192); end
  def test_outputs_energy_flows_i192; assert_equal("C.02", worksheet.outputs_energy_flows_i192); end
  def test_outputs_energy_flows_j192; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j192); end
  def test_outputs_energy_flows_k192; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k192); end
  def test_outputs_energy_flows_l192; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l192); end
  def test_outputs_energy_flows_v192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v192||0), 0.002); end
  def test_outputs_energy_flows_w192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w192||0), 0.002); end
  def test_outputs_energy_flows_x192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x192||0), 0.002); end
  def test_outputs_energy_flows_y192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y192||0), 0.002); end
  def test_outputs_energy_flows_z192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z192||0), 0.002); end
  def test_outputs_energy_flows_aa192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa192||0), 0.002); end
  def test_outputs_energy_flows_ab192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab192||0), 0.002); end
  def test_outputs_energy_flows_ac192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac192||0), 0.002); end
  def test_outputs_energy_flows_ad192; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad192||0), 0.002); end
  def test_outputs_energy_flows_c194; assert_equal("n/a", worksheet.outputs_energy_flows_c194); end
  def test_outputs_energy_flows_d194; assert_equal("Liquid", worksheet.outputs_energy_flows_d194); end
  def test_outputs_energy_flows_e194; assert_equal("n/a", worksheet.outputs_energy_flows_e194); end
  def test_outputs_energy_flows_f194; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f194); end
  def test_outputs_energy_flows_i194; assert_equal("C.02", worksheet.outputs_energy_flows_i194); end
  def test_outputs_energy_flows_j194; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j194); end
  def test_outputs_energy_flows_k194; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k194); end
  def test_outputs_energy_flows_l194; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l194); end
  def test_outputs_energy_flows_v194; assert_in_epsilon(2.12837206627918, worksheet.outputs_energy_flows_v194, 0.002); end
  def test_outputs_energy_flows_w194; assert_in_epsilon(2.295047936539375, worksheet.outputs_energy_flows_w194, 0.002); end
  def test_outputs_energy_flows_x194; assert_in_epsilon(2.3602896740097408, worksheet.outputs_energy_flows_x194, 0.002); end
  def test_outputs_energy_flows_y194; assert_in_epsilon(2.4070294701699275, worksheet.outputs_energy_flows_y194, 0.002); end
  def test_outputs_energy_flows_z194; assert_in_epsilon(2.428995726369904, worksheet.outputs_energy_flows_z194, 0.002); end
  def test_outputs_energy_flows_aa194; assert_in_epsilon(2.418119630800876, worksheet.outputs_energy_flows_aa194, 0.002); end
  def test_outputs_energy_flows_ab194; assert_in_epsilon(2.385971195446873, worksheet.outputs_energy_flows_ab194, 0.002); end
  def test_outputs_energy_flows_ac194; assert_in_epsilon(2.325929576886287, worksheet.outputs_energy_flows_ac194, 0.002); end
  def test_outputs_energy_flows_ad194; assert_in_epsilon(2.249346123788635, worksheet.outputs_energy_flows_ad194, 0.002); end
  def test_outputs_energy_flows_c196; assert_equal("n/a", worksheet.outputs_energy_flows_c196); end
  def test_outputs_energy_flows_d196; assert_equal("Liquid", worksheet.outputs_energy_flows_d196); end
  def test_outputs_energy_flows_e196; assert_equal("n/a", worksheet.outputs_energy_flows_e196); end
  def test_outputs_energy_flows_f196; assert_equal("Non domestic", worksheet.outputs_energy_flows_f196); end
  def test_outputs_energy_flows_i196; assert_equal("C.02", worksheet.outputs_energy_flows_i196); end
  def test_outputs_energy_flows_j196; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j196); end
  def test_outputs_energy_flows_k196; assert_equal("Non-residential", worksheet.outputs_energy_flows_k196); end
  def test_outputs_energy_flows_v196; assert_in_epsilon(2.103585707261307, worksheet.outputs_energy_flows_v196, 0.002); end
  def test_outputs_energy_flows_w196; assert_in_epsilon(2.1515901514841644, worksheet.outputs_energy_flows_w196, 0.002); end
  def test_outputs_energy_flows_x196; assert_in_epsilon(2.2051319731933825, worksheet.outputs_energy_flows_x196, 0.002); end
  def test_outputs_energy_flows_y196; assert_in_epsilon(2.2245110877803125, worksheet.outputs_energy_flows_y196, 0.002); end
  def test_outputs_energy_flows_z196; assert_in_epsilon(2.2102863359154914, worksheet.outputs_energy_flows_z196, 0.002); end
  def test_outputs_energy_flows_aa196; assert_in_epsilon(2.1642521533513084, worksheet.outputs_energy_flows_aa196, 0.002); end
  def test_outputs_energy_flows_ab196; assert_in_epsilon(2.08819031125008, worksheet.outputs_energy_flows_ab196, 0.002); end
  def test_outputs_energy_flows_ac196; assert_in_epsilon(1.9840641986097542, worksheet.outputs_energy_flows_ac196, 0.002); end
  def test_outputs_energy_flows_ad196; assert_in_epsilon(1.8546073284257512, worksheet.outputs_energy_flows_ad196, 0.002); end
  def test_outputs_energy_flows_c198; assert_equal("n/a", worksheet.outputs_energy_flows_c198); end
  def test_outputs_energy_flows_d198; assert_equal("Liquid", worksheet.outputs_energy_flows_d198); end
  def test_outputs_energy_flows_e198; assert_equal("n/a", worksheet.outputs_energy_flows_e198); end
  def test_outputs_energy_flows_f198; assert_equal("Steel", worksheet.outputs_energy_flows_f198); end
  def test_outputs_energy_flows_i198; assert_equal("C.02", worksheet.outputs_energy_flows_i198); end
  def test_outputs_energy_flows_j198; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j198); end
  def test_outputs_energy_flows_v198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v198||0), 0.002); end
  def test_outputs_energy_flows_w198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w198||0), 0.002); end
  def test_outputs_energy_flows_x198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x198||0), 0.002); end
  def test_outputs_energy_flows_y198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y198||0), 0.002); end
  def test_outputs_energy_flows_z198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z198||0), 0.002); end
  def test_outputs_energy_flows_aa198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa198||0), 0.002); end
  def test_outputs_energy_flows_ab198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab198||0), 0.002); end
  def test_outputs_energy_flows_ac198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac198||0), 0.002); end
  def test_outputs_energy_flows_ad198; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad198||0), 0.002); end
  def test_outputs_energy_flows_c200; assert_equal("n/a", worksheet.outputs_energy_flows_c200); end
  def test_outputs_energy_flows_d200; assert_equal("Liquid", worksheet.outputs_energy_flows_d200); end
  def test_outputs_energy_flows_e200; assert_equal("n/a", worksheet.outputs_energy_flows_e200); end
  def test_outputs_energy_flows_f200; assert_equal("Aluminium", worksheet.outputs_energy_flows_f200); end
  def test_outputs_energy_flows_i200; assert_equal("C.02", worksheet.outputs_energy_flows_i200); end
  def test_outputs_energy_flows_j200; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j200); end
  def test_outputs_energy_flows_v200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v200||0), 0.002); end
  def test_outputs_energy_flows_w200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w200||0), 0.002); end
  def test_outputs_energy_flows_x200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x200||0), 0.002); end
  def test_outputs_energy_flows_y200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y200||0), 0.002); end
  def test_outputs_energy_flows_z200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z200||0), 0.002); end
  def test_outputs_energy_flows_aa200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa200||0), 0.002); end
  def test_outputs_energy_flows_ab200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab200||0), 0.002); end
  def test_outputs_energy_flows_ac200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac200||0), 0.002); end
  def test_outputs_energy_flows_ad200; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad200||0), 0.002); end
  def test_outputs_energy_flows_c202; assert_equal("n/a", worksheet.outputs_energy_flows_c202); end
  def test_outputs_energy_flows_d202; assert_equal("Liquid", worksheet.outputs_energy_flows_d202); end
  def test_outputs_energy_flows_e202; assert_equal("n/a", worksheet.outputs_energy_flows_e202); end
  def test_outputs_energy_flows_f202; assert_equal("Cement", worksheet.outputs_energy_flows_f202); end
  def test_outputs_energy_flows_i202; assert_equal("C.02", worksheet.outputs_energy_flows_i202); end
  def test_outputs_energy_flows_j202; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j202); end
  def test_outputs_energy_flows_v202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v202||0), 0.002); end
  def test_outputs_energy_flows_w202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w202||0), 0.002); end
  def test_outputs_energy_flows_x202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x202||0), 0.002); end
  def test_outputs_energy_flows_y202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y202||0), 0.002); end
  def test_outputs_energy_flows_z202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z202||0), 0.002); end
  def test_outputs_energy_flows_aa202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa202||0), 0.002); end
  def test_outputs_energy_flows_ab202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab202||0), 0.002); end
  def test_outputs_energy_flows_ac202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac202||0), 0.002); end
  def test_outputs_energy_flows_ad202; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad202||0), 0.002); end
  def test_outputs_energy_flows_c204; assert_equal("n/a", worksheet.outputs_energy_flows_c204); end
  def test_outputs_energy_flows_d204; assert_equal("Liquid", worksheet.outputs_energy_flows_d204); end
  def test_outputs_energy_flows_e204; assert_equal("n/a", worksheet.outputs_energy_flows_e204); end
  def test_outputs_energy_flows_f204; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f204); end
  def test_outputs_energy_flows_i204; assert_equal("C.02", worksheet.outputs_energy_flows_i204); end
  def test_outputs_energy_flows_j204; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j204); end
  def test_outputs_energy_flows_v204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v204||0), 0.002); end
  def test_outputs_energy_flows_w204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w204||0), 0.002); end
  def test_outputs_energy_flows_x204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x204||0), 0.002); end
  def test_outputs_energy_flows_y204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y204||0), 0.002); end
  def test_outputs_energy_flows_z204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z204||0), 0.002); end
  def test_outputs_energy_flows_aa204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa204||0), 0.002); end
  def test_outputs_energy_flows_ab204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab204||0), 0.002); end
  def test_outputs_energy_flows_ac204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac204||0), 0.002); end
  def test_outputs_energy_flows_ad204; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad204||0), 0.002); end
  def test_outputs_energy_flows_c206; assert_equal("n/a", worksheet.outputs_energy_flows_c206); end
  def test_outputs_energy_flows_d206; assert_equal("Liquid", worksheet.outputs_energy_flows_d206); end
  def test_outputs_energy_flows_e206; assert_equal("n/a", worksheet.outputs_energy_flows_e206); end
  def test_outputs_energy_flows_f206; assert_equal("Chemicals", worksheet.outputs_energy_flows_f206); end
  def test_outputs_energy_flows_i206; assert_equal("C.02", worksheet.outputs_energy_flows_i206); end
  def test_outputs_energy_flows_j206; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j206); end
  def test_outputs_energy_flows_v206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v206||0), 0.002); end
  def test_outputs_energy_flows_w206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w206||0), 0.002); end
  def test_outputs_energy_flows_x206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x206||0), 0.002); end
  def test_outputs_energy_flows_y206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y206||0), 0.002); end
  def test_outputs_energy_flows_z206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z206||0), 0.002); end
  def test_outputs_energy_flows_aa206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa206||0), 0.002); end
  def test_outputs_energy_flows_ab206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab206||0), 0.002); end
  def test_outputs_energy_flows_ac206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac206||0), 0.002); end
  def test_outputs_energy_flows_ad206; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad206||0), 0.002); end
  def test_outputs_energy_flows_c208; assert_equal("n/a", worksheet.outputs_energy_flows_c208); end
  def test_outputs_energy_flows_d208; assert_equal("Liquid", worksheet.outputs_energy_flows_d208); end
  def test_outputs_energy_flows_e208; assert_equal("n/a", worksheet.outputs_energy_flows_e208); end
  def test_outputs_energy_flows_f208; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f208); end
  def test_outputs_energy_flows_i208; assert_equal("C.02", worksheet.outputs_energy_flows_i208); end
  def test_outputs_energy_flows_j208; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j208); end
  def test_outputs_energy_flows_l208; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l208); end
  def test_outputs_energy_flows_m208; assert_equal("Timber", worksheet.outputs_energy_flows_m208); end
  def test_outputs_energy_flows_v208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v208||0), 0.002); end
  def test_outputs_energy_flows_w208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w208||0), 0.002); end
  def test_outputs_energy_flows_x208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x208||0), 0.002); end
  def test_outputs_energy_flows_y208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y208||0), 0.002); end
  def test_outputs_energy_flows_z208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z208||0), 0.002); end
  def test_outputs_energy_flows_aa208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa208||0), 0.002); end
  def test_outputs_energy_flows_ab208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab208||0), 0.002); end
  def test_outputs_energy_flows_ac208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac208||0), 0.002); end
  def test_outputs_energy_flows_ad208; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad208||0), 0.002); end
  def test_outputs_energy_flows_c210; assert_equal("n/a", worksheet.outputs_energy_flows_c210); end
  def test_outputs_energy_flows_d210; assert_equal("Liquid", worksheet.outputs_energy_flows_d210); end
  def test_outputs_energy_flows_e210; assert_equal("n/a", worksheet.outputs_energy_flows_e210); end
  def test_outputs_energy_flows_f210; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f210); end
  def test_outputs_energy_flows_i210; assert_equal("C.02", worksheet.outputs_energy_flows_i210); end
  def test_outputs_energy_flows_j210; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j210); end
  def test_outputs_energy_flows_l210; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l210); end
  def test_outputs_energy_flows_m210; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m210); end
  def test_outputs_energy_flows_v210; assert_in_epsilon(46.91167300441669, worksheet.outputs_energy_flows_v210, 0.002); end
  def test_outputs_energy_flows_w210; assert_in_epsilon(50.64614495259717, worksheet.outputs_energy_flows_w210, 0.002); end
  def test_outputs_energy_flows_x210; assert_in_epsilon(55.144475393168364, worksheet.outputs_energy_flows_x210, 0.002); end
  def test_outputs_energy_flows_y210; assert_in_epsilon(56.92719411829883, worksheet.outputs_energy_flows_y210, 0.002); end
  def test_outputs_energy_flows_z210; assert_in_epsilon(59.68014969031395, worksheet.outputs_energy_flows_z210, 0.002); end
  def test_outputs_energy_flows_aa210; assert_in_epsilon(62.7365059269852, worksheet.outputs_energy_flows_aa210, 0.002); end
  def test_outputs_energy_flows_ab210; assert_in_epsilon(65.14427847205747, worksheet.outputs_energy_flows_ab210, 0.002); end
  def test_outputs_energy_flows_ac210; assert_in_epsilon(67.86154482703206, worksheet.outputs_energy_flows_ac210, 0.002); end
  def test_outputs_energy_flows_ad210; assert_in_epsilon(71.37315545239062, worksheet.outputs_energy_flows_ad210, 0.002); end
  def test_outputs_energy_flows_c212; assert_equal("n/a", worksheet.outputs_energy_flows_c212); end
  def test_outputs_energy_flows_d212; assert_equal("Liquid", worksheet.outputs_energy_flows_d212); end
  def test_outputs_energy_flows_e212; assert_equal("n/a", worksheet.outputs_energy_flows_e212); end
  def test_outputs_energy_flows_f212; assert_equal("International passenger", worksheet.outputs_energy_flows_f212); end
  def test_outputs_energy_flows_i212; assert_equal("C.02", worksheet.outputs_energy_flows_i212); end
  def test_outputs_energy_flows_j212; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j212); end
  def test_outputs_energy_flows_l212; assert_equal("International", worksheet.outputs_energy_flows_l212); end
  def test_outputs_energy_flows_v212; assert_in_epsilon(11.200783672219371, worksheet.outputs_energy_flows_v212, 0.002); end
  def test_outputs_energy_flows_w212; assert_in_epsilon(11.815011975001859, worksheet.outputs_energy_flows_w212, 0.002); end
  def test_outputs_energy_flows_x212; assert_in_epsilon(12.373327660323621, worksheet.outputs_energy_flows_x212, 0.002); end
  def test_outputs_energy_flows_y212; assert_in_epsilon(12.625333366234578, worksheet.outputs_energy_flows_y212, 0.002); end
  def test_outputs_energy_flows_z212; assert_in_epsilon(13.220315571712552, worksheet.outputs_energy_flows_z212, 0.002); end
  def test_outputs_energy_flows_aa212; assert_in_epsilon(14.14783977025938, worksheet.outputs_energy_flows_aa212, 0.002); end
  def test_outputs_energy_flows_ab212; assert_in_epsilon(15.172144943957791, worksheet.outputs_energy_flows_ab212, 0.002); end
  def test_outputs_energy_flows_ac212; assert_in_epsilon(16.55754443296371, worksheet.outputs_energy_flows_ac212, 0.002); end
  def test_outputs_energy_flows_ad212; assert_in_epsilon(18.390557363957566, worksheet.outputs_energy_flows_ad212, 0.002); end
  def test_outputs_energy_flows_c214; assert_equal("n/a", worksheet.outputs_energy_flows_c214); end
  def test_outputs_energy_flows_d214; assert_equal("Liquid", worksheet.outputs_energy_flows_d214); end
  def test_outputs_energy_flows_e214; assert_equal("n/a", worksheet.outputs_energy_flows_e214); end
  def test_outputs_energy_flows_f214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f214); end
  def test_outputs_energy_flows_i214; assert_equal("C.02", worksheet.outputs_energy_flows_i214); end
  def test_outputs_energy_flows_j214; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j214); end
  def test_outputs_energy_flows_l214; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l214); end
  def test_outputs_energy_flows_v214; assert_in_epsilon(23.68414579378021, worksheet.outputs_energy_flows_v214, 0.002); end
  def test_outputs_energy_flows_w214; assert_in_epsilon(31.97972704348857, worksheet.outputs_energy_flows_w214, 0.002); end
  def test_outputs_energy_flows_x214; assert_in_epsilon(35.25612530637011, worksheet.outputs_energy_flows_x214, 0.002); end
  def test_outputs_energy_flows_y214; assert_in_epsilon(37.91789746111759, worksheet.outputs_energy_flows_y214, 0.002); end
  def test_outputs_energy_flows_z214; assert_in_epsilon(38.8138192054554, worksheet.outputs_energy_flows_z214, 0.002); end
  def test_outputs_energy_flows_aa214; assert_in_epsilon(38.74640241831899, worksheet.outputs_energy_flows_aa214, 0.002); end
  def test_outputs_energy_flows_ab214; assert_in_epsilon(37.71641444766613, worksheet.outputs_energy_flows_ab214, 0.002); end
  def test_outputs_energy_flows_ac214; assert_in_epsilon(36.336109126959386, worksheet.outputs_energy_flows_ac214, 0.002); end
  def test_outputs_energy_flows_ad214; assert_in_epsilon(34.645804178125445, worksheet.outputs_energy_flows_ad214, 0.002); end
  def test_outputs_energy_flows_c216; assert_equal("n/a", worksheet.outputs_energy_flows_c216); end
  def test_outputs_energy_flows_d216; assert_equal("Liquid", worksheet.outputs_energy_flows_d216); end
  def test_outputs_energy_flows_e216; assert_equal("n/a", worksheet.outputs_energy_flows_e216); end
  def test_outputs_energy_flows_f216; assert_equal("International freight", worksheet.outputs_energy_flows_f216); end
  def test_outputs_energy_flows_i216; assert_equal("C.02", worksheet.outputs_energy_flows_i216); end
  def test_outputs_energy_flows_j216; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j216); end
  def test_outputs_energy_flows_l216; assert_equal("International freight", worksheet.outputs_energy_flows_l216); end
  def test_outputs_energy_flows_v216; assert_in_epsilon(15.613329526301518, worksheet.outputs_energy_flows_v216, 0.002); end
  def test_outputs_energy_flows_w216; assert_in_epsilon(19.87528754685019, worksheet.outputs_energy_flows_w216, 0.002); end
  def test_outputs_energy_flows_x216; assert_in_epsilon(21.73814226933508, worksheet.outputs_energy_flows_x216, 0.002); end
  def test_outputs_energy_flows_y216; assert_in_epsilon(23.785794640283957, worksheet.outputs_energy_flows_y216, 0.002); end
  def test_outputs_energy_flows_z216; assert_in_epsilon(25.411726599479778, worksheet.outputs_energy_flows_z216, 0.002); end
  def test_outputs_energy_flows_aa216; assert_in_epsilon(25.230620053987284, worksheet.outputs_energy_flows_aa216, 0.002); end
  def test_outputs_energy_flows_ab216; assert_in_epsilon(24.447599973033686, worksheet.outputs_energy_flows_ab216, 0.002); end
  def test_outputs_energy_flows_ac216; assert_in_epsilon(23.69937310195623, worksheet.outputs_energy_flows_ac216, 0.002); end
  def test_outputs_energy_flows_ad216; assert_in_epsilon(22.5305018288583, worksheet.outputs_energy_flows_ad216, 0.002); end
  def test_outputs_energy_flows_c218; assert_equal("n/a", worksheet.outputs_energy_flows_c218); end
  def test_outputs_energy_flows_d218; assert_equal("Liquid", worksheet.outputs_energy_flows_d218); end
  def test_outputs_energy_flows_e218; assert_equal("n/a", worksheet.outputs_energy_flows_e218); end
  def test_outputs_energy_flows_f218; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f218); end
  def test_outputs_energy_flows_i218; assert_equal("C.02", worksheet.outputs_energy_flows_i218); end
  def test_outputs_energy_flows_j218; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j218); end
  def test_outputs_energy_flows_v218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v218||0), 0.002); end
  def test_outputs_energy_flows_w218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w218||0), 0.002); end
  def test_outputs_energy_flows_x218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x218||0), 0.002); end
  def test_outputs_energy_flows_y218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y218||0), 0.002); end
  def test_outputs_energy_flows_z218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z218||0), 0.002); end
  def test_outputs_energy_flows_aa218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa218||0), 0.002); end
  def test_outputs_energy_flows_ab218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab218||0), 0.002); end
  def test_outputs_energy_flows_ac218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac218||0), 0.002); end
  def test_outputs_energy_flows_ad218; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad218||0), 0.002); end
  def test_outputs_energy_flows_c220; assert_equal("n/a", worksheet.outputs_energy_flows_c220); end
  def test_outputs_energy_flows_d220; assert_equal("Liquid", worksheet.outputs_energy_flows_d220); end
  def test_outputs_energy_flows_e220; assert_equal("G.01", worksheet.outputs_energy_flows_e220); end
  def test_outputs_energy_flows_f220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f220); end
  def test_outputs_energy_flows_g220; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g220); end
  def test_outputs_energy_flows_h220; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h220); end
  def test_outputs_energy_flows_i220; assert_equal("C.02", worksheet.outputs_energy_flows_i220); end
  def test_outputs_energy_flows_j220; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j220); end
  def test_outputs_energy_flows_v220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v220||0), 0.002); end
  def test_outputs_energy_flows_w220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w220||0), 0.002); end
  def test_outputs_energy_flows_x220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x220||0), 0.002); end
  def test_outputs_energy_flows_y220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y220||0), 0.002); end
  def test_outputs_energy_flows_z220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z220||0), 0.002); end
  def test_outputs_energy_flows_aa220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa220||0), 0.002); end
  def test_outputs_energy_flows_ab220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab220||0), 0.002); end
  def test_outputs_energy_flows_ac220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac220||0), 0.002); end
  def test_outputs_energy_flows_ad220; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad220||0), 0.002); end
  def test_outputs_energy_flows_c222; assert_equal("n/a", worksheet.outputs_energy_flows_c222); end
  def test_outputs_energy_flows_d222; assert_equal("Liquid", worksheet.outputs_energy_flows_d222); end
  def test_outputs_energy_flows_e222; assert_equal("n/a", worksheet.outputs_energy_flows_e222); end
  def test_outputs_energy_flows_f222; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f222); end
  def test_outputs_energy_flows_g222; assert_equal("n/a", worksheet.outputs_energy_flows_g222); end
  def test_outputs_energy_flows_h222; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h222); end
  def test_outputs_energy_flows_i222; assert_equal("C.02", worksheet.outputs_energy_flows_i222); end
  def test_outputs_energy_flows_j222; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j222); end
  def test_outputs_energy_flows_v222; assert_in_epsilon(2.051000000000001, worksheet.outputs_energy_flows_v222, 0.002); end
  def test_outputs_energy_flows_w222; assert_in_epsilon(2.104241517764174, worksheet.outputs_energy_flows_w222, 0.002); end
  def test_outputs_energy_flows_x222; assert_in_epsilon(1.8976423227159116, worksheet.outputs_energy_flows_x222, 0.002); end
  def test_outputs_energy_flows_y222; assert_in_epsilon(1.6758665158324177, worksheet.outputs_energy_flows_y222, 0.002); end
  def test_outputs_energy_flows_z222; assert_in_epsilon(1.447864601414338, worksheet.outputs_energy_flows_z222, 0.002); end
  def test_outputs_energy_flows_aa222; assert_in_epsilon(1.218083991156091, worksheet.outputs_energy_flows_aa222, 0.002); end
  def test_outputs_energy_flows_ab222; assert_in_delta(0.9513620397265798, worksheet.outputs_energy_flows_ab222, 0.002); end
  def test_outputs_energy_flows_ac222; assert_in_delta(0.6160620745525924, worksheet.outputs_energy_flows_ac222, 0.002); end
  def test_outputs_energy_flows_ad222; assert_in_delta(0.23289922164916543, worksheet.outputs_energy_flows_ad222, 0.002); end
  def test_outputs_energy_flows_c224; assert_equal("n/a", worksheet.outputs_energy_flows_c224); end
  def test_outputs_energy_flows_d224; assert_equal("Gas", worksheet.outputs_energy_flows_d224); end
  def test_outputs_energy_flows_e224; assert_equal("n/a", worksheet.outputs_energy_flows_e224); end
  def test_outputs_energy_flows_f224; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f224); end
  def test_outputs_energy_flows_i224; assert_equal("C.03", worksheet.outputs_energy_flows_i224); end
  def test_outputs_energy_flows_j224; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j224); end
  def test_outputs_energy_flows_k224; assert_equal("Global buildings", worksheet.outputs_energy_flows_k224); end
  def test_outputs_energy_flows_v224; assert_in_epsilon(16.224733430844413, worksheet.outputs_energy_flows_v224, 0.002); end
  def test_outputs_energy_flows_w224; assert_in_epsilon(17.493385732060943, worksheet.outputs_energy_flows_w224, 0.002); end
  def test_outputs_energy_flows_x224; assert_in_epsilon(17.761279702542282, worksheet.outputs_energy_flows_x224, 0.002); end
  def test_outputs_energy_flows_y224; assert_in_epsilon(17.87706463949417, worksheet.outputs_energy_flows_y224, 0.002); end
  def test_outputs_energy_flows_z224; assert_in_epsilon(17.81569026953137, worksheet.outputs_energy_flows_z224, 0.002); end
  def test_outputs_energy_flows_aa224; assert_in_epsilon(17.532548775283562, worksheet.outputs_energy_flows_aa224, 0.002); end
  def test_outputs_energy_flows_ab224; assert_in_epsilon(17.120494226022025, worksheet.outputs_energy_flows_ab224, 0.002); end
  def test_outputs_energy_flows_ac224; assert_in_epsilon(16.54184724907638, worksheet.outputs_energy_flows_ac224, 0.002); end
  def test_outputs_energy_flows_ad224; assert_in_epsilon(15.887952243973503, worksheet.outputs_energy_flows_ad224, 0.002); end
  def test_outputs_energy_flows_c226; assert_equal("n/a", worksheet.outputs_energy_flows_c226); end
  def test_outputs_energy_flows_d226; assert_equal("Gas", worksheet.outputs_energy_flows_d226); end
  def test_outputs_energy_flows_e226; assert_equal("n/a", worksheet.outputs_energy_flows_e226); end
  def test_outputs_energy_flows_f226; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f226); end
  def test_outputs_energy_flows_i226; assert_equal("C.03", worksheet.outputs_energy_flows_i226); end
  def test_outputs_energy_flows_j226; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j226); end
  def test_outputs_energy_flows_k226; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k226); end
  def test_outputs_energy_flows_l226; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l226); end
  def test_outputs_energy_flows_v226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v226||0), 0.002); end
  def test_outputs_energy_flows_w226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w226||0), 0.002); end
  def test_outputs_energy_flows_x226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x226||0), 0.002); end
  def test_outputs_energy_flows_y226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y226||0), 0.002); end
  def test_outputs_energy_flows_z226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z226||0), 0.002); end
  def test_outputs_energy_flows_aa226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa226||0), 0.002); end
  def test_outputs_energy_flows_ab226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab226||0), 0.002); end
  def test_outputs_energy_flows_ac226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac226||0), 0.002); end
  def test_outputs_energy_flows_ad226; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad226||0), 0.002); end
  def test_outputs_energy_flows_c228; assert_equal("n/a", worksheet.outputs_energy_flows_c228); end
  def test_outputs_energy_flows_d228; assert_equal("Gas", worksheet.outputs_energy_flows_d228); end
  def test_outputs_energy_flows_e228; assert_equal("n/a", worksheet.outputs_energy_flows_e228); end
  def test_outputs_energy_flows_f228; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f228); end
  def test_outputs_energy_flows_i228; assert_equal("C.03", worksheet.outputs_energy_flows_i228); end
  def test_outputs_energy_flows_j228; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j228); end
  def test_outputs_energy_flows_k228; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k228); end
  def test_outputs_energy_flows_l228; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l228); end
  def test_outputs_energy_flows_v228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v228||0), 0.002); end
  def test_outputs_energy_flows_w228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w228||0), 0.002); end
  def test_outputs_energy_flows_x228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x228||0), 0.002); end
  def test_outputs_energy_flows_y228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y228||0), 0.002); end
  def test_outputs_energy_flows_z228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z228||0), 0.002); end
  def test_outputs_energy_flows_aa228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa228||0), 0.002); end
  def test_outputs_energy_flows_ab228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab228||0), 0.002); end
  def test_outputs_energy_flows_ac228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac228||0), 0.002); end
  def test_outputs_energy_flows_ad228; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad228||0), 0.002); end
  def test_outputs_energy_flows_c230; assert_equal("n/a", worksheet.outputs_energy_flows_c230); end
  def test_outputs_energy_flows_d230; assert_equal("Gas", worksheet.outputs_energy_flows_d230); end
  def test_outputs_energy_flows_e230; assert_equal("n/a", worksheet.outputs_energy_flows_e230); end
  def test_outputs_energy_flows_f230; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f230); end
  def test_outputs_energy_flows_i230; assert_equal("C.03", worksheet.outputs_energy_flows_i230); end
  def test_outputs_energy_flows_j230; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j230); end
  def test_outputs_energy_flows_k230; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k230); end
  def test_outputs_energy_flows_l230; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l230); end
  def test_outputs_energy_flows_v230; assert_in_epsilon(3.5232041853812337, worksheet.outputs_energy_flows_v230, 0.002); end
  def test_outputs_energy_flows_w230; assert_in_epsilon(3.8083848628438006, worksheet.outputs_energy_flows_w230, 0.002); end
  def test_outputs_energy_flows_x230; assert_in_epsilon(4.046775744028341, worksheet.outputs_energy_flows_x230, 0.002); end
  def test_outputs_energy_flows_y230; assert_in_epsilon(4.258183444703689, worksheet.outputs_energy_flows_y230, 0.002); end
  def test_outputs_energy_flows_z230; assert_in_epsilon(4.432223851104456, worksheet.outputs_energy_flows_z230, 0.002); end
  def test_outputs_energy_flows_aa230; assert_in_epsilon(4.551613669028922, worksheet.outputs_energy_flows_aa230, 0.002); end
  def test_outputs_energy_flows_ab230; assert_in_epsilon(4.635024880419369, worksheet.outputs_energy_flows_ab230, 0.002); end
  def test_outputs_energy_flows_ac230; assert_in_epsilon(4.6668958828948774, worksheet.outputs_energy_flows_ac230, 0.002); end
  def test_outputs_energy_flows_ad230; assert_in_epsilon(4.668677600286548, worksheet.outputs_energy_flows_ad230, 0.002); end
  def test_outputs_energy_flows_c232; assert_equal("n/a", worksheet.outputs_energy_flows_c232); end
  def test_outputs_energy_flows_d232; assert_equal("Gas", worksheet.outputs_energy_flows_d232); end
  def test_outputs_energy_flows_e232; assert_equal("n/a", worksheet.outputs_energy_flows_e232); end
  def test_outputs_energy_flows_f232; assert_equal("Non domestic", worksheet.outputs_energy_flows_f232); end
  def test_outputs_energy_flows_i232; assert_equal("C.03", worksheet.outputs_energy_flows_i232); end
  def test_outputs_energy_flows_j232; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j232); end
  def test_outputs_energy_flows_k232; assert_equal("Non-residential", worksheet.outputs_energy_flows_k232); end
  def test_outputs_energy_flows_v232; assert_in_epsilon(4.582767114617904, worksheet.outputs_energy_flows_v232, 0.002); end
  def test_outputs_energy_flows_w232; assert_in_epsilon(4.780317496078858, worksheet.outputs_energy_flows_w232, 0.002); end
  def test_outputs_energy_flows_x232; assert_in_epsilon(5.181593812157882, worksheet.outputs_energy_flows_x232, 0.002); end
  def test_outputs_energy_flows_y232; assert_in_epsilon(5.551878987218183, worksheet.outputs_energy_flows_y232, 0.002); end
  def test_outputs_energy_flows_z232; assert_in_epsilon(5.88667804169979, worksheet.outputs_energy_flows_z232, 0.002); end
  def test_outputs_energy_flows_aa232; assert_in_epsilon(6.183407589109008, worksheet.outputs_energy_flows_aa232, 0.002); end
  def test_outputs_energy_flows_ab232; assert_in_epsilon(6.438335365445136, worksheet.outputs_energy_flows_ab232, 0.002); end
  def test_outputs_energy_flows_ac232; assert_in_epsilon(6.646780577471465, worksheet.outputs_energy_flows_ac232, 0.002); end
  def test_outputs_energy_flows_ad232; assert_in_epsilon(6.804863378123503, worksheet.outputs_energy_flows_ad232, 0.002); end
  def test_outputs_energy_flows_c234; assert_equal("n/a", worksheet.outputs_energy_flows_c234); end
  def test_outputs_energy_flows_d234; assert_equal("Gas", worksheet.outputs_energy_flows_d234); end
  def test_outputs_energy_flows_e234; assert_equal("n/a", worksheet.outputs_energy_flows_e234); end
  def test_outputs_energy_flows_f234; assert_equal("Steel", worksheet.outputs_energy_flows_f234); end
  def test_outputs_energy_flows_i234; assert_equal("C.03", worksheet.outputs_energy_flows_i234); end
  def test_outputs_energy_flows_j234; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j234); end
  def test_outputs_energy_flows_v234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v234||0), 0.002); end
  def test_outputs_energy_flows_w234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w234||0), 0.002); end
  def test_outputs_energy_flows_x234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x234||0), 0.002); end
  def test_outputs_energy_flows_y234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y234||0), 0.002); end
  def test_outputs_energy_flows_z234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z234||0), 0.002); end
  def test_outputs_energy_flows_aa234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa234||0), 0.002); end
  def test_outputs_energy_flows_ab234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab234||0), 0.002); end
  def test_outputs_energy_flows_ac234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac234||0), 0.002); end
  def test_outputs_energy_flows_ad234; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad234||0), 0.002); end
  def test_outputs_energy_flows_c236; assert_equal("n/a", worksheet.outputs_energy_flows_c236); end
  def test_outputs_energy_flows_d236; assert_equal("Gas", worksheet.outputs_energy_flows_d236); end
  def test_outputs_energy_flows_e236; assert_equal("n/a", worksheet.outputs_energy_flows_e236); end
  def test_outputs_energy_flows_f236; assert_equal("Aluminium", worksheet.outputs_energy_flows_f236); end
  def test_outputs_energy_flows_i236; assert_equal("C.03", worksheet.outputs_energy_flows_i236); end
  def test_outputs_energy_flows_j236; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j236); end
  def test_outputs_energy_flows_v236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v236||0), 0.002); end
  def test_outputs_energy_flows_w236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w236||0), 0.002); end
  def test_outputs_energy_flows_x236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x236||0), 0.002); end
  def test_outputs_energy_flows_y236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y236||0), 0.002); end
  def test_outputs_energy_flows_z236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z236||0), 0.002); end
  def test_outputs_energy_flows_aa236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa236||0), 0.002); end
  def test_outputs_energy_flows_ab236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab236||0), 0.002); end
  def test_outputs_energy_flows_ac236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac236||0), 0.002); end
  def test_outputs_energy_flows_ad236; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad236||0), 0.002); end
  def test_outputs_energy_flows_c238; assert_equal("n/a", worksheet.outputs_energy_flows_c238); end
  def test_outputs_energy_flows_d238; assert_equal("Gas", worksheet.outputs_energy_flows_d238); end
  def test_outputs_energy_flows_e238; assert_equal("n/a", worksheet.outputs_energy_flows_e238); end
  def test_outputs_energy_flows_f238; assert_equal("Cement", worksheet.outputs_energy_flows_f238); end
  def test_outputs_energy_flows_i238; assert_equal("C.03", worksheet.outputs_energy_flows_i238); end
  def test_outputs_energy_flows_j238; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j238); end
  def test_outputs_energy_flows_v238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v238||0), 0.002); end
  def test_outputs_energy_flows_w238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w238||0), 0.002); end
  def test_outputs_energy_flows_x238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x238||0), 0.002); end
  def test_outputs_energy_flows_y238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y238||0), 0.002); end
  def test_outputs_energy_flows_z238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z238||0), 0.002); end
  def test_outputs_energy_flows_aa238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa238||0), 0.002); end
  def test_outputs_energy_flows_ab238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab238||0), 0.002); end
  def test_outputs_energy_flows_ac238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac238||0), 0.002); end
  def test_outputs_energy_flows_ad238; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad238||0), 0.002); end
  def test_outputs_energy_flows_c240; assert_equal("n/a", worksheet.outputs_energy_flows_c240); end
  def test_outputs_energy_flows_d240; assert_equal("Gas", worksheet.outputs_energy_flows_d240); end
  def test_outputs_energy_flows_e240; assert_equal("n/a", worksheet.outputs_energy_flows_e240); end
  def test_outputs_energy_flows_f240; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f240); end
  def test_outputs_energy_flows_i240; assert_equal("C.03", worksheet.outputs_energy_flows_i240); end
  def test_outputs_energy_flows_j240; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j240); end
  def test_outputs_energy_flows_v240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v240||0), 0.002); end
  def test_outputs_energy_flows_w240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w240||0), 0.002); end
  def test_outputs_energy_flows_x240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x240||0), 0.002); end
  def test_outputs_energy_flows_y240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y240||0), 0.002); end
  def test_outputs_energy_flows_z240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z240||0), 0.002); end
  def test_outputs_energy_flows_aa240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa240||0), 0.002); end
  def test_outputs_energy_flows_ab240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab240||0), 0.002); end
  def test_outputs_energy_flows_ac240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac240||0), 0.002); end
  def test_outputs_energy_flows_ad240; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad240||0), 0.002); end
  def test_outputs_energy_flows_c242; assert_equal("n/a", worksheet.outputs_energy_flows_c242); end
  def test_outputs_energy_flows_d242; assert_equal("Gas", worksheet.outputs_energy_flows_d242); end
  def test_outputs_energy_flows_e242; assert_equal("n/a", worksheet.outputs_energy_flows_e242); end
  def test_outputs_energy_flows_f242; assert_equal("Chemicals", worksheet.outputs_energy_flows_f242); end
  def test_outputs_energy_flows_i242; assert_equal("C.03", worksheet.outputs_energy_flows_i242); end
  def test_outputs_energy_flows_j242; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j242); end
  def test_outputs_energy_flows_v242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v242||0), 0.002); end
  def test_outputs_energy_flows_w242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w242||0), 0.002); end
  def test_outputs_energy_flows_x242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x242||0), 0.002); end
  def test_outputs_energy_flows_y242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y242||0), 0.002); end
  def test_outputs_energy_flows_z242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z242||0), 0.002); end
  def test_outputs_energy_flows_aa242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa242||0), 0.002); end
  def test_outputs_energy_flows_ab242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab242||0), 0.002); end
  def test_outputs_energy_flows_ac242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac242||0), 0.002); end
  def test_outputs_energy_flows_ad242; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad242||0), 0.002); end
  def test_outputs_energy_flows_c244; assert_equal("n/a", worksheet.outputs_energy_flows_c244); end
  def test_outputs_energy_flows_d244; assert_equal("Gas", worksheet.outputs_energy_flows_d244); end
  def test_outputs_energy_flows_e244; assert_equal("n/a", worksheet.outputs_energy_flows_e244); end
  def test_outputs_energy_flows_f244; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f244); end
  def test_outputs_energy_flows_i244; assert_equal("C.03", worksheet.outputs_energy_flows_i244); end
  def test_outputs_energy_flows_j244; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j244); end
  def test_outputs_energy_flows_l244; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l244); end
  def test_outputs_energy_flows_m244; assert_equal("Timber", worksheet.outputs_energy_flows_m244); end
  def test_outputs_energy_flows_v244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v244||0), 0.002); end
  def test_outputs_energy_flows_w244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w244||0), 0.002); end
  def test_outputs_energy_flows_x244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x244||0), 0.002); end
  def test_outputs_energy_flows_y244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y244||0), 0.002); end
  def test_outputs_energy_flows_z244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z244||0), 0.002); end
  def test_outputs_energy_flows_aa244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa244||0), 0.002); end
  def test_outputs_energy_flows_ab244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab244||0), 0.002); end
  def test_outputs_energy_flows_ac244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac244||0), 0.002); end
  def test_outputs_energy_flows_ad244; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad244||0), 0.002); end
  def test_outputs_energy_flows_c246; assert_equal("n/a", worksheet.outputs_energy_flows_c246); end
  def test_outputs_energy_flows_d246; assert_equal("Gas", worksheet.outputs_energy_flows_d246); end
  def test_outputs_energy_flows_e246; assert_equal("n/a", worksheet.outputs_energy_flows_e246); end
  def test_outputs_energy_flows_f246; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f246); end
  def test_outputs_energy_flows_i246; assert_equal("C.03", worksheet.outputs_energy_flows_i246); end
  def test_outputs_energy_flows_j246; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j246); end
  def test_outputs_energy_flows_l246; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l246); end
  def test_outputs_energy_flows_m246; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m246); end
  def test_outputs_energy_flows_v246; assert_in_delta(0.32713692653982857, worksheet.outputs_energy_flows_v246, 0.002); end
  def test_outputs_energy_flows_w246; assert_in_delta(0.46029028321697496, worksheet.outputs_energy_flows_w246, 0.002); end
  def test_outputs_energy_flows_x246; assert_in_delta(0.5815546496042707, worksheet.outputs_energy_flows_x246, 0.002); end
  def test_outputs_energy_flows_y246; assert_in_delta(0.685784087829847, worksheet.outputs_energy_flows_y246, 0.002); end
  def test_outputs_energy_flows_z246; assert_in_delta(0.810408772339478, worksheet.outputs_energy_flows_z246, 0.002); end
  def test_outputs_energy_flows_aa246; assert_in_delta(0.950198256764841, worksheet.outputs_energy_flows_aa246, 0.002); end
  def test_outputs_energy_flows_ab246; assert_in_epsilon(1.0899578188386512, worksheet.outputs_energy_flows_ab246, 0.002); end
  def test_outputs_energy_flows_ac246; assert_in_epsilon(1.244082668423078, worksheet.outputs_energy_flows_ac246, 0.002); end
  def test_outputs_energy_flows_ad246; assert_in_epsilon(1.424156971109554, worksheet.outputs_energy_flows_ad246, 0.002); end
  def test_outputs_energy_flows_c248; assert_equal("n/a", worksheet.outputs_energy_flows_c248); end
  def test_outputs_energy_flows_d248; assert_equal("Gas", worksheet.outputs_energy_flows_d248); end
  def test_outputs_energy_flows_e248; assert_equal("n/a", worksheet.outputs_energy_flows_e248); end
  def test_outputs_energy_flows_f248; assert_equal("International passenger", worksheet.outputs_energy_flows_f248); end
  def test_outputs_energy_flows_i248; assert_equal("C.03", worksheet.outputs_energy_flows_i248); end
  def test_outputs_energy_flows_j248; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j248); end
  def test_outputs_energy_flows_l248; assert_equal("International", worksheet.outputs_energy_flows_l248); end
  def test_outputs_energy_flows_v248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v248||0), 0.002); end
  def test_outputs_energy_flows_w248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w248||0), 0.002); end
  def test_outputs_energy_flows_x248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x248||0), 0.002); end
  def test_outputs_energy_flows_y248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y248||0), 0.002); end
  def test_outputs_energy_flows_z248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z248||0), 0.002); end
  def test_outputs_energy_flows_aa248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa248||0), 0.002); end
  def test_outputs_energy_flows_ab248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab248||0), 0.002); end
  def test_outputs_energy_flows_ac248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac248||0), 0.002); end
  def test_outputs_energy_flows_ad248; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad248||0), 0.002); end
  def test_outputs_energy_flows_c250; assert_equal("n/a", worksheet.outputs_energy_flows_c250); end
  def test_outputs_energy_flows_d250; assert_equal("Gas", worksheet.outputs_energy_flows_d250); end
  def test_outputs_energy_flows_e250; assert_equal("n/a", worksheet.outputs_energy_flows_e250); end
  def test_outputs_energy_flows_f250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f250); end
  def test_outputs_energy_flows_i250; assert_equal("C.03", worksheet.outputs_energy_flows_i250); end
  def test_outputs_energy_flows_j250; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j250); end
  def test_outputs_energy_flows_l250; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l250); end
  def test_outputs_energy_flows_v250; assert_in_delta(0.011922881771682584, worksheet.outputs_energy_flows_v250, 0.002); end
  def test_outputs_energy_flows_w250; assert_in_delta(0.3391240213293589, worksheet.outputs_energy_flows_w250, 0.002); end
  def test_outputs_energy_flows_x250; assert_in_delta(0.571954769222464, worksheet.outputs_energy_flows_x250, 0.002); end
  def test_outputs_energy_flows_y250; assert_in_delta(0.8328184269522697, worksheet.outputs_energy_flows_y250, 0.002); end
  def test_outputs_energy_flows_z250; assert_in_epsilon(1.0801480614770127, worksheet.outputs_energy_flows_z250, 0.002); end
  def test_outputs_energy_flows_aa250; assert_in_epsilon(1.3104287210295975, worksheet.outputs_energy_flows_aa250, 0.002); end
  def test_outputs_energy_flows_ab250; assert_in_epsilon(1.5064354837114462, worksheet.outputs_energy_flows_ab250, 0.002); end
  def test_outputs_energy_flows_ac250; assert_in_epsilon(1.6784652236352753, worksheet.outputs_energy_flows_ac250, 0.002); end
  def test_outputs_energy_flows_ad250; assert_in_epsilon(1.8216141748822046, worksheet.outputs_energy_flows_ad250, 0.002); end
  def test_outputs_energy_flows_c252; assert_equal("n/a", worksheet.outputs_energy_flows_c252); end
  def test_outputs_energy_flows_d252; assert_equal("Gas", worksheet.outputs_energy_flows_d252); end
  def test_outputs_energy_flows_e252; assert_equal("n/a", worksheet.outputs_energy_flows_e252); end
  def test_outputs_energy_flows_f252; assert_equal("International freight", worksheet.outputs_energy_flows_f252); end
  def test_outputs_energy_flows_i252; assert_equal("C.03", worksheet.outputs_energy_flows_i252); end
  def test_outputs_energy_flows_j252; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j252); end
  def test_outputs_energy_flows_l252; assert_equal("International freight", worksheet.outputs_energy_flows_l252); end
  def test_outputs_energy_flows_v252; assert_in_delta(4.41118442617133e-09, worksheet.outputs_energy_flows_v252, 0.002); end
  def test_outputs_energy_flows_w252; assert_in_delta(0.08897995122712887, worksheet.outputs_energy_flows_w252, 0.002); end
  def test_outputs_energy_flows_x252; assert_in_delta(0.14858472543293286, worksheet.outputs_energy_flows_x252, 0.002); end
  def test_outputs_energy_flows_y252; assert_in_delta(0.2165634839597934, worksheet.outputs_energy_flows_y252, 0.002); end
  def test_outputs_energy_flows_z252; assert_in_delta(0.28672483250550473, worksheet.outputs_energy_flows_z252, 0.002); end
  def test_outputs_energy_flows_aa252; assert_in_delta(0.33729183653313627, worksheet.outputs_energy_flows_aa252, 0.002); end
  def test_outputs_energy_flows_ab252; assert_in_delta(0.3754748829563609, worksheet.outputs_energy_flows_ab252, 0.002); end
  def test_outputs_energy_flows_ac252; assert_in_delta(0.4088486606022284, worksheet.outputs_energy_flows_ac252, 0.002); end
  def test_outputs_energy_flows_ad252; assert_in_delta(0.4291197280181308, worksheet.outputs_energy_flows_ad252, 0.002); end
  def test_outputs_energy_flows_c254; assert_equal("n/a", worksheet.outputs_energy_flows_c254); end
  def test_outputs_energy_flows_d254; assert_equal("Gas", worksheet.outputs_energy_flows_d254); end
  def test_outputs_energy_flows_e254; assert_equal("n/a", worksheet.outputs_energy_flows_e254); end
  def test_outputs_energy_flows_f254; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f254); end
  def test_outputs_energy_flows_i254; assert_equal("C.03", worksheet.outputs_energy_flows_i254); end
  def test_outputs_energy_flows_j254; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j254); end
  def test_outputs_energy_flows_v254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v254||0), 0.002); end
  def test_outputs_energy_flows_w254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w254||0), 0.002); end
  def test_outputs_energy_flows_x254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x254||0), 0.002); end
  def test_outputs_energy_flows_y254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y254||0), 0.002); end
  def test_outputs_energy_flows_z254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z254||0), 0.002); end
  def test_outputs_energy_flows_aa254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa254||0), 0.002); end
  def test_outputs_energy_flows_ab254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab254||0), 0.002); end
  def test_outputs_energy_flows_ac254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac254||0), 0.002); end
  def test_outputs_energy_flows_ad254; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad254||0), 0.002); end
  def test_outputs_energy_flows_c256; assert_equal("n/a", worksheet.outputs_energy_flows_c256); end
  def test_outputs_energy_flows_d256; assert_equal("Gas", worksheet.outputs_energy_flows_d256); end
  def test_outputs_energy_flows_e256; assert_equal("G.01", worksheet.outputs_energy_flows_e256); end
  def test_outputs_energy_flows_f256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f256); end
  def test_outputs_energy_flows_g256; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g256); end
  def test_outputs_energy_flows_h256; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h256); end
  def test_outputs_energy_flows_i256; assert_equal("C.03", worksheet.outputs_energy_flows_i256); end
  def test_outputs_energy_flows_j256; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j256); end
  def test_outputs_energy_flows_v256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v256||0), 0.002); end
  def test_outputs_energy_flows_w256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w256||0), 0.002); end
  def test_outputs_energy_flows_x256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x256||0), 0.002); end
  def test_outputs_energy_flows_y256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y256||0), 0.002); end
  def test_outputs_energy_flows_z256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z256||0), 0.002); end
  def test_outputs_energy_flows_aa256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa256||0), 0.002); end
  def test_outputs_energy_flows_ab256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab256||0), 0.002); end
  def test_outputs_energy_flows_ac256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac256||0), 0.002); end
  def test_outputs_energy_flows_ad256; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad256||0), 0.002); end
  def test_outputs_energy_flows_c258; assert_equal("n/a", worksheet.outputs_energy_flows_c258); end
  def test_outputs_energy_flows_d258; assert_equal("Gas", worksheet.outputs_energy_flows_d258); end
  def test_outputs_energy_flows_e258; assert_equal("n/a", worksheet.outputs_energy_flows_e258); end
  def test_outputs_energy_flows_f258; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f258); end
  def test_outputs_energy_flows_g258; assert_equal("n/a", worksheet.outputs_energy_flows_g258); end
  def test_outputs_energy_flows_h258; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h258); end
  def test_outputs_energy_flows_i258; assert_equal("C.03", worksheet.outputs_energy_flows_i258); end
  def test_outputs_energy_flows_j258; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j258); end
  def test_outputs_energy_flows_v258; assert_in_delta(0.6980000000000002, worksheet.outputs_energy_flows_v258, 0.002); end
  def test_outputs_energy_flows_w258; assert_in_delta(0.7244370010147536, worksheet.outputs_energy_flows_w258, 0.002); end
  def test_outputs_energy_flows_x258; assert_in_delta(0.7536969259760156, worksheet.outputs_energy_flows_x258, 0.002); end
  def test_outputs_energy_flows_y258; assert_in_delta(0.7825923158474049, worksheet.outputs_energy_flows_y258, 0.002); end
  def test_outputs_energy_flows_z258; assert_in_delta(0.8121909286193252, worksheet.outputs_energy_flows_z258, 0.002); end
  def test_outputs_energy_flows_aa258; assert_in_delta(0.8430233220362138, worksheet.outputs_energy_flows_aa258, 0.002); end
  def test_outputs_energy_flows_ab258; assert_in_delta(0.8708947385453267, worksheet.outputs_energy_flows_ab258, 0.002); end
  def test_outputs_energy_flows_ac258; assert_in_delta(0.8920310545000905, worksheet.outputs_energy_flows_ac258, 0.002); end
  def test_outputs_energy_flows_ad258; assert_in_delta(0.9089034984013589, worksheet.outputs_energy_flows_ad258, 0.002); end
  def test_outputs_energy_flows_c260; assert_equal("FF.01", worksheet.outputs_energy_flows_c260); end
  def test_outputs_energy_flows_d260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d260); end
  def test_outputs_energy_flows_e260; assert_equal("n/a", worksheet.outputs_energy_flows_e260); end
  def test_outputs_energy_flows_f260; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f260); end
  def test_outputs_energy_flows_i260; assert_equal("FF.01", worksheet.outputs_energy_flows_i260); end
  def test_outputs_energy_flows_j260; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j260); end
  def test_outputs_energy_flows_k260; assert_equal("Global buildings", worksheet.outputs_energy_flows_k260); end
  def test_outputs_energy_flows_v260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v260||0), 0.002); end
  def test_outputs_energy_flows_w260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w260||0), 0.002); end
  def test_outputs_energy_flows_x260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x260||0), 0.002); end
  def test_outputs_energy_flows_y260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y260||0), 0.002); end
  def test_outputs_energy_flows_z260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z260||0), 0.002); end
  def test_outputs_energy_flows_aa260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa260||0), 0.002); end
  def test_outputs_energy_flows_ab260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab260||0), 0.002); end
  def test_outputs_energy_flows_ac260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac260||0), 0.002); end
  def test_outputs_energy_flows_ad260; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad260||0), 0.002); end
  def test_outputs_energy_flows_c262; assert_equal("FF.01", worksheet.outputs_energy_flows_c262); end
  def test_outputs_energy_flows_d262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d262); end
  def test_outputs_energy_flows_e262; assert_equal("n/a", worksheet.outputs_energy_flows_e262); end
  def test_outputs_energy_flows_f262; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f262); end
  def test_outputs_energy_flows_i262; assert_equal("FF.01", worksheet.outputs_energy_flows_i262); end
  def test_outputs_energy_flows_j262; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j262); end
  def test_outputs_energy_flows_k262; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k262); end
  def test_outputs_energy_flows_l262; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l262); end
  def test_outputs_energy_flows_v262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v262||0), 0.002); end
  def test_outputs_energy_flows_w262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w262||0), 0.002); end
  def test_outputs_energy_flows_x262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x262||0), 0.002); end
  def test_outputs_energy_flows_y262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y262||0), 0.002); end
  def test_outputs_energy_flows_z262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z262||0), 0.002); end
  def test_outputs_energy_flows_aa262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa262||0), 0.002); end
  def test_outputs_energy_flows_ab262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab262||0), 0.002); end
  def test_outputs_energy_flows_ac262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac262||0), 0.002); end
  def test_outputs_energy_flows_ad262; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad262||0), 0.002); end
  def test_outputs_energy_flows_c264; assert_equal("FF.01", worksheet.outputs_energy_flows_c264); end
  def test_outputs_energy_flows_d264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d264); end
  def test_outputs_energy_flows_e264; assert_equal("n/a", worksheet.outputs_energy_flows_e264); end
  def test_outputs_energy_flows_f264; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f264); end
  def test_outputs_energy_flows_i264; assert_equal("FF.01", worksheet.outputs_energy_flows_i264); end
  def test_outputs_energy_flows_j264; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j264); end
  def test_outputs_energy_flows_k264; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k264); end
  def test_outputs_energy_flows_l264; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l264); end
  def test_outputs_energy_flows_v264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v264||0), 0.002); end
  def test_outputs_energy_flows_w264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w264||0), 0.002); end
  def test_outputs_energy_flows_x264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x264||0), 0.002); end
  def test_outputs_energy_flows_y264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y264||0), 0.002); end
  def test_outputs_energy_flows_z264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z264||0), 0.002); end
  def test_outputs_energy_flows_aa264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa264||0), 0.002); end
  def test_outputs_energy_flows_ab264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab264||0), 0.002); end
  def test_outputs_energy_flows_ac264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac264||0), 0.002); end
  def test_outputs_energy_flows_ad264; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad264||0), 0.002); end
  def test_outputs_energy_flows_c266; assert_equal("FF.01", worksheet.outputs_energy_flows_c266); end
  def test_outputs_energy_flows_d266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d266); end
  def test_outputs_energy_flows_e266; assert_equal("n/a", worksheet.outputs_energy_flows_e266); end
  def test_outputs_energy_flows_f266; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f266); end
  def test_outputs_energy_flows_i266; assert_equal("FF.01", worksheet.outputs_energy_flows_i266); end
  def test_outputs_energy_flows_j266; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j266); end
  def test_outputs_energy_flows_k266; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k266); end
  def test_outputs_energy_flows_l266; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l266); end
  def test_outputs_energy_flows_v266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v266||0), 0.002); end
  def test_outputs_energy_flows_w266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w266||0), 0.002); end
  def test_outputs_energy_flows_x266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x266||0), 0.002); end
  def test_outputs_energy_flows_y266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y266||0), 0.002); end
  def test_outputs_energy_flows_z266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z266||0), 0.002); end
  def test_outputs_energy_flows_aa266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa266||0), 0.002); end
  def test_outputs_energy_flows_ab266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab266||0), 0.002); end
  def test_outputs_energy_flows_ac266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac266||0), 0.002); end
  def test_outputs_energy_flows_ad266; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad266||0), 0.002); end
  def test_outputs_energy_flows_c268; assert_equal("FF.01", worksheet.outputs_energy_flows_c268); end
  def test_outputs_energy_flows_d268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d268); end
  def test_outputs_energy_flows_e268; assert_equal("n/a", worksheet.outputs_energy_flows_e268); end
  def test_outputs_energy_flows_f268; assert_equal("Non domestic", worksheet.outputs_energy_flows_f268); end
  def test_outputs_energy_flows_i268; assert_equal("FF.01", worksheet.outputs_energy_flows_i268); end
  def test_outputs_energy_flows_j268; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j268); end
  def test_outputs_energy_flows_k268; assert_equal("Non-residential", worksheet.outputs_energy_flows_k268); end
  def test_outputs_energy_flows_v268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v268||0), 0.002); end
  def test_outputs_energy_flows_w268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w268||0), 0.002); end
  def test_outputs_energy_flows_x268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x268||0), 0.002); end
  def test_outputs_energy_flows_y268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y268||0), 0.002); end
  def test_outputs_energy_flows_z268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z268||0), 0.002); end
  def test_outputs_energy_flows_aa268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa268||0), 0.002); end
  def test_outputs_energy_flows_ab268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab268||0), 0.002); end
  def test_outputs_energy_flows_ac268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac268||0), 0.002); end
  def test_outputs_energy_flows_ad268; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad268||0), 0.002); end
  def test_outputs_energy_flows_c270; assert_equal("FF.01", worksheet.outputs_energy_flows_c270); end
  def test_outputs_energy_flows_d270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d270); end
  def test_outputs_energy_flows_e270; assert_equal("n/a", worksheet.outputs_energy_flows_e270); end
  def test_outputs_energy_flows_f270; assert_equal("Steel", worksheet.outputs_energy_flows_f270); end
  def test_outputs_energy_flows_i270; assert_equal("FF.01", worksheet.outputs_energy_flows_i270); end
  def test_outputs_energy_flows_j270; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j270); end
  def test_outputs_energy_flows_v270; assert_in_epsilon(23.235493129092, worksheet.outputs_energy_flows_v270, 0.002); end
  def test_outputs_energy_flows_w270; assert_in_epsilon(23.955614318464647, worksheet.outputs_energy_flows_w270, 0.002); end
  def test_outputs_energy_flows_x270; assert_in_epsilon(24.507199461264825, worksheet.outputs_energy_flows_x270, 0.002); end
  def test_outputs_energy_flows_y270; assert_in_epsilon(26.143783531892026, worksheet.outputs_energy_flows_y270, 0.002); end
  def test_outputs_energy_flows_z270; assert_in_epsilon(27.641931396928115, worksheet.outputs_energy_flows_z270, 0.002); end
  def test_outputs_energy_flows_aa270; assert_in_epsilon(28.969158955538035, worksheet.outputs_energy_flows_aa270, 0.002); end
  def test_outputs_energy_flows_ab270; assert_in_epsilon(30.395131877624678, worksheet.outputs_energy_flows_ab270, 0.002); end
  def test_outputs_energy_flows_ac270; assert_in_epsilon(31.924007258034806, worksheet.outputs_energy_flows_ac270, 0.002); end
  def test_outputs_energy_flows_ad270; assert_in_epsilon(33.28345623364947, worksheet.outputs_energy_flows_ad270, 0.002); end
  def test_outputs_energy_flows_c272; assert_equal("FF.01", worksheet.outputs_energy_flows_c272); end
  def test_outputs_energy_flows_d272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d272); end
  def test_outputs_energy_flows_e272; assert_equal("n/a", worksheet.outputs_energy_flows_e272); end
  def test_outputs_energy_flows_f272; assert_equal("Aluminium", worksheet.outputs_energy_flows_f272); end
  def test_outputs_energy_flows_i272; assert_equal("FF.01", worksheet.outputs_energy_flows_i272); end
  def test_outputs_energy_flows_j272; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j272); end
  def test_outputs_energy_flows_v272; assert_in_delta(0.7339274805745352, worksheet.outputs_energy_flows_v272, 0.002); end
  def test_outputs_energy_flows_w272; assert_in_delta(0.8208256567908188, worksheet.outputs_energy_flows_w272, 0.002); end
  def test_outputs_energy_flows_x272; assert_in_delta(0.9028864808006947, worksheet.outputs_energy_flows_x272, 0.002); end
  def test_outputs_energy_flows_y272; assert_in_epsilon(1.037933443603608, worksheet.outputs_energy_flows_y272, 0.002); end
  def test_outputs_energy_flows_z272; assert_in_epsilon(1.1810399791668407, worksheet.outputs_energy_flows_z272, 0.002); end
  def test_outputs_energy_flows_aa272; assert_in_epsilon(1.3265206223901178, worksheet.outputs_energy_flows_aa272, 0.002); end
  def test_outputs_energy_flows_ab272; assert_in_epsilon(1.4883174983893437, worksheet.outputs_energy_flows_ab272, 0.002); end
  def test_outputs_energy_flows_ac272; assert_in_epsilon(1.6616415170594536, worksheet.outputs_energy_flows_ac272, 0.002); end
  def test_outputs_energy_flows_ad272; assert_in_epsilon(1.8540683316589424, worksheet.outputs_energy_flows_ad272, 0.002); end
  def test_outputs_energy_flows_c274; assert_equal("FF.01", worksheet.outputs_energy_flows_c274); end
  def test_outputs_energy_flows_d274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d274); end
  def test_outputs_energy_flows_e274; assert_equal("n/a", worksheet.outputs_energy_flows_e274); end
  def test_outputs_energy_flows_f274; assert_equal("Cement", worksheet.outputs_energy_flows_f274); end
  def test_outputs_energy_flows_i274; assert_equal("FF.01", worksheet.outputs_energy_flows_i274); end
  def test_outputs_energy_flows_j274; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j274); end
  def test_outputs_energy_flows_v274; assert_in_epsilon(6.851960921136625, worksheet.outputs_energy_flows_v274, 0.002); end
  def test_outputs_energy_flows_w274; assert_in_epsilon(7.1257182635943, worksheet.outputs_energy_flows_w274, 0.002); end
  def test_outputs_energy_flows_x274; assert_in_epsilon(7.144675216940189, worksheet.outputs_energy_flows_x274, 0.002); end
  def test_outputs_energy_flows_y274; assert_in_epsilon(7.406515954218706, worksheet.outputs_energy_flows_y274, 0.002); end
  def test_outputs_energy_flows_z274; assert_in_epsilon(7.622051347036801, worksheet.outputs_energy_flows_z274, 0.002); end
  def test_outputs_energy_flows_aa274; assert_in_epsilon(7.820634993180253, worksheet.outputs_energy_flows_aa274, 0.002); end
  def test_outputs_energy_flows_ab274; assert_in_epsilon(7.971267875115808, worksheet.outputs_energy_flows_ab274, 0.002); end
  def test_outputs_energy_flows_ac274; assert_in_epsilon(8.123364824542268, worksheet.outputs_energy_flows_ac274, 0.002); end
  def test_outputs_energy_flows_ad274; assert_in_epsilon(8.281264277266116, worksheet.outputs_energy_flows_ad274, 0.002); end
  def test_outputs_energy_flows_c276; assert_equal("FF.01", worksheet.outputs_energy_flows_c276); end
  def test_outputs_energy_flows_d276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d276); end
  def test_outputs_energy_flows_e276; assert_equal("n/a", worksheet.outputs_energy_flows_e276); end
  def test_outputs_energy_flows_f276; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f276); end
  def test_outputs_energy_flows_i276; assert_equal("FF.01", worksheet.outputs_energy_flows_i276); end
  def test_outputs_energy_flows_j276; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j276); end
  def test_outputs_energy_flows_v276; assert_in_epsilon(1.518261087438881, worksheet.outputs_energy_flows_v276, 0.002); end
  def test_outputs_energy_flows_w276; assert_in_epsilon(1.5737245324176008, worksheet.outputs_energy_flows_w276, 0.002); end
  def test_outputs_energy_flows_x276; assert_in_epsilon(1.6235966212825352, worksheet.outputs_energy_flows_x276, 0.002); end
  def test_outputs_energy_flows_y276; assert_in_epsilon(1.7354306375464357, worksheet.outputs_energy_flows_y276, 0.002); end
  def test_outputs_energy_flows_z276; assert_in_epsilon(1.843245691852633, worksheet.outputs_energy_flows_z276, 0.002); end
  def test_outputs_energy_flows_aa276; assert_in_epsilon(1.941394303098395, worksheet.outputs_energy_flows_aa276, 0.002); end
  def test_outputs_energy_flows_ab276; assert_in_epsilon(2.0446240268410882, worksheet.outputs_energy_flows_ab276, 0.002); end
  def test_outputs_energy_flows_ac276; assert_in_epsilon(2.136802124952409, worksheet.outputs_energy_flows_ac276, 0.002); end
  def test_outputs_energy_flows_ad276; assert_in_epsilon(2.23340097058551, worksheet.outputs_energy_flows_ad276, 0.002); end
  def test_outputs_energy_flows_c278; assert_equal("FF.01", worksheet.outputs_energy_flows_c278); end
  def test_outputs_energy_flows_d278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d278); end
  def test_outputs_energy_flows_e278; assert_equal("n/a", worksheet.outputs_energy_flows_e278); end
  def test_outputs_energy_flows_f278; assert_equal("Chemicals", worksheet.outputs_energy_flows_f278); end
  def test_outputs_energy_flows_i278; assert_equal("FF.01", worksheet.outputs_energy_flows_i278); end
  def test_outputs_energy_flows_j278; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j278); end
  def test_outputs_energy_flows_v278; assert_in_epsilon(2.7901474530640202, worksheet.outputs_energy_flows_v278, 0.002); end
  def test_outputs_energy_flows_w278; assert_in_epsilon(2.9036540838178575, worksheet.outputs_energy_flows_w278, 0.002); end
  def test_outputs_energy_flows_x278; assert_in_epsilon(3.0921863859385104, worksheet.outputs_energy_flows_x278, 0.002); end
  def test_outputs_energy_flows_y278; assert_in_epsilon(3.3771006518408533, worksheet.outputs_energy_flows_y278, 0.002); end
  def test_outputs_energy_flows_z278; assert_in_epsilon(3.6802098049115575, worksheet.outputs_energy_flows_z278, 0.002); end
  def test_outputs_energy_flows_aa278; assert_in_epsilon(3.9985637847900537, worksheet.outputs_energy_flows_aa278, 0.002); end
  def test_outputs_energy_flows_ab278; assert_in_epsilon(4.339824036362487, worksheet.outputs_energy_flows_ab278, 0.002); end
  def test_outputs_energy_flows_ac278; assert_in_epsilon(4.6572081902464415, worksheet.outputs_energy_flows_ac278, 0.002); end
  def test_outputs_energy_flows_ad278; assert_in_epsilon(4.982970790345624, worksheet.outputs_energy_flows_ad278, 0.002); end
  def test_outputs_energy_flows_c280; assert_equal("FF.01", worksheet.outputs_energy_flows_c280); end
  def test_outputs_energy_flows_d280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d280); end
  def test_outputs_energy_flows_e280; assert_equal("n/a", worksheet.outputs_energy_flows_e280); end
  def test_outputs_energy_flows_f280; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f280); end
  def test_outputs_energy_flows_i280; assert_equal("FF.01", worksheet.outputs_energy_flows_i280); end
  def test_outputs_energy_flows_j280; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j280); end
  def test_outputs_energy_flows_l280; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l280); end
  def test_outputs_energy_flows_m280; assert_equal("Timber", worksheet.outputs_energy_flows_m280); end
  def test_outputs_energy_flows_v280; assert_in_epsilon(7.157385604573962, worksheet.outputs_energy_flows_v280, 0.002); end
  def test_outputs_energy_flows_w280; assert_in_epsilon(7.637957677751552, worksheet.outputs_energy_flows_w280, 0.002); end
  def test_outputs_energy_flows_x280; assert_in_epsilon(8.465461841844242, worksheet.outputs_energy_flows_x280, 0.002); end
  def test_outputs_energy_flows_y280; assert_in_epsilon(9.209558604691669, worksheet.outputs_energy_flows_y280, 0.002); end
  def test_outputs_energy_flows_z280; assert_in_epsilon(9.925533831959305, worksheet.outputs_energy_flows_z280, 0.002); end
  def test_outputs_energy_flows_aa280; assert_in_epsilon(10.610945937600222, worksheet.outputs_energy_flows_aa280, 0.002); end
  def test_outputs_energy_flows_ab280; assert_in_epsilon(11.259225315077993, worksheet.outputs_energy_flows_ab280, 0.002); end
  def test_outputs_energy_flows_ac280; assert_in_epsilon(11.86463701794079, worksheet.outputs_energy_flows_ac280, 0.002); end
  def test_outputs_energy_flows_ad280; assert_in_epsilon(12.41586822255313, worksheet.outputs_energy_flows_ad280, 0.002); end
  def test_outputs_energy_flows_c282; assert_equal("FF.01", worksheet.outputs_energy_flows_c282); end
  def test_outputs_energy_flows_d282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d282); end
  def test_outputs_energy_flows_e282; assert_equal("n/a", worksheet.outputs_energy_flows_e282); end
  def test_outputs_energy_flows_f282; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f282); end
  def test_outputs_energy_flows_i282; assert_equal("FF.01", worksheet.outputs_energy_flows_i282); end
  def test_outputs_energy_flows_j282; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j282); end
  def test_outputs_energy_flows_l282; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l282); end
  def test_outputs_energy_flows_m282; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m282); end
  def test_outputs_energy_flows_v282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v282||0), 0.002); end
  def test_outputs_energy_flows_w282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w282||0), 0.002); end
  def test_outputs_energy_flows_x282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x282||0), 0.002); end
  def test_outputs_energy_flows_y282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y282||0), 0.002); end
  def test_outputs_energy_flows_z282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z282||0), 0.002); end
  def test_outputs_energy_flows_aa282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa282||0), 0.002); end
  def test_outputs_energy_flows_ab282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab282||0), 0.002); end
  def test_outputs_energy_flows_ac282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac282||0), 0.002); end
  def test_outputs_energy_flows_ad282; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad282||0), 0.002); end
  def test_outputs_energy_flows_c284; assert_equal("FF.01", worksheet.outputs_energy_flows_c284); end
  def test_outputs_energy_flows_d284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d284); end
  def test_outputs_energy_flows_e284; assert_equal("n/a", worksheet.outputs_energy_flows_e284); end
  def test_outputs_energy_flows_f284; assert_equal("International passenger", worksheet.outputs_energy_flows_f284); end
  def test_outputs_energy_flows_i284; assert_equal("FF.01", worksheet.outputs_energy_flows_i284); end
  def test_outputs_energy_flows_j284; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j284); end
  def test_outputs_energy_flows_l284; assert_equal("International", worksheet.outputs_energy_flows_l284); end
  def test_outputs_energy_flows_v284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v284||0), 0.002); end
  def test_outputs_energy_flows_w284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w284||0), 0.002); end
  def test_outputs_energy_flows_x284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x284||0), 0.002); end
  def test_outputs_energy_flows_y284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y284||0), 0.002); end
  def test_outputs_energy_flows_z284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z284||0), 0.002); end
  def test_outputs_energy_flows_aa284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa284||0), 0.002); end
  def test_outputs_energy_flows_ab284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab284||0), 0.002); end
  def test_outputs_energy_flows_ac284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac284||0), 0.002); end
  def test_outputs_energy_flows_ad284; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad284||0), 0.002); end
  def test_outputs_energy_flows_c286; assert_equal("FF.01", worksheet.outputs_energy_flows_c286); end
  def test_outputs_energy_flows_d286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d286); end
  def test_outputs_energy_flows_e286; assert_equal("n/a", worksheet.outputs_energy_flows_e286); end
  def test_outputs_energy_flows_f286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f286); end
  def test_outputs_energy_flows_i286; assert_equal("FF.01", worksheet.outputs_energy_flows_i286); end
  def test_outputs_energy_flows_j286; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j286); end
  def test_outputs_energy_flows_l286; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l286); end
  def test_outputs_energy_flows_v286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v286||0), 0.002); end
  def test_outputs_energy_flows_w286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w286||0), 0.002); end
  def test_outputs_energy_flows_x286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x286||0), 0.002); end
  def test_outputs_energy_flows_y286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y286||0), 0.002); end
  def test_outputs_energy_flows_z286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z286||0), 0.002); end
  def test_outputs_energy_flows_aa286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa286||0), 0.002); end
  def test_outputs_energy_flows_ab286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab286||0), 0.002); end
  def test_outputs_energy_flows_ac286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac286||0), 0.002); end
  def test_outputs_energy_flows_ad286; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad286||0), 0.002); end
  def test_outputs_energy_flows_c288; assert_equal("FF.01", worksheet.outputs_energy_flows_c288); end
  def test_outputs_energy_flows_d288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d288); end
  def test_outputs_energy_flows_e288; assert_equal("n/a", worksheet.outputs_energy_flows_e288); end
  def test_outputs_energy_flows_f288; assert_equal("International freight", worksheet.outputs_energy_flows_f288); end
  def test_outputs_energy_flows_i288; assert_equal("FF.01", worksheet.outputs_energy_flows_i288); end
  def test_outputs_energy_flows_j288; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j288); end
  def test_outputs_energy_flows_l288; assert_equal("International freight", worksheet.outputs_energy_flows_l288); end
  def test_outputs_energy_flows_v288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v288||0), 0.002); end
  def test_outputs_energy_flows_w288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w288||0), 0.002); end
  def test_outputs_energy_flows_x288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x288||0), 0.002); end
  def test_outputs_energy_flows_y288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y288||0), 0.002); end
  def test_outputs_energy_flows_z288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z288||0), 0.002); end
  def test_outputs_energy_flows_aa288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa288||0), 0.002); end
  def test_outputs_energy_flows_ab288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab288||0), 0.002); end
  def test_outputs_energy_flows_ac288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac288||0), 0.002); end
  def test_outputs_energy_flows_ad288; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad288||0), 0.002); end
  def test_outputs_energy_flows_c290; assert_equal("FF.01", worksheet.outputs_energy_flows_c290); end
  def test_outputs_energy_flows_d290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d290); end
  def test_outputs_energy_flows_e290; assert_equal("n/a", worksheet.outputs_energy_flows_e290); end
  def test_outputs_energy_flows_f290; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f290); end
  def test_outputs_energy_flows_i290; assert_equal("FF.01", worksheet.outputs_energy_flows_i290); end
  def test_outputs_energy_flows_j290; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j290); end
  def test_outputs_energy_flows_v290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v290||0), 0.002); end
  def test_outputs_energy_flows_w290; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w290||0), 0.002); end
  def test_outputs_energy_flows_x290; assert_in_delta(0.04298313605930763, worksheet.outputs_energy_flows_x290, 0.002); end
  def test_outputs_energy_flows_y290; assert_in_delta(0.07879340115008719, worksheet.outputs_energy_flows_y290, 0.002); end
  def test_outputs_energy_flows_z290; assert_in_delta(0.15911704874057594, worksheet.outputs_energy_flows_z290, 0.002); end
  def test_outputs_energy_flows_aa290; assert_in_delta(0.2009466408778609, worksheet.outputs_energy_flows_aa290, 0.002); end
  def test_outputs_energy_flows_ab290; assert_in_delta(0.2188848346773111, worksheet.outputs_energy_flows_ab290, 0.002); end
  def test_outputs_energy_flows_ac290; assert_in_delta(0.24468758407345403, worksheet.outputs_energy_flows_ac290, 0.002); end
  def test_outputs_energy_flows_ad290; assert_in_delta(0.23619238168612466, worksheet.outputs_energy_flows_ad290, 0.002); end
  def test_outputs_energy_flows_c292; assert_equal("FF.01", worksheet.outputs_energy_flows_c292); end
  def test_outputs_energy_flows_d292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d292); end
  def test_outputs_energy_flows_e292; assert_equal("G.01", worksheet.outputs_energy_flows_e292); end
  def test_outputs_energy_flows_f292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f292); end
  def test_outputs_energy_flows_g292; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g292); end
  def test_outputs_energy_flows_h292; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h292); end
  def test_outputs_energy_flows_i292; assert_equal("FF.01", worksheet.outputs_energy_flows_i292); end
  def test_outputs_energy_flows_j292; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j292); end
  def test_outputs_energy_flows_v292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v292||0), 0.002); end
  def test_outputs_energy_flows_w292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w292||0), 0.002); end
  def test_outputs_energy_flows_x292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x292||0), 0.002); end
  def test_outputs_energy_flows_y292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y292||0), 0.002); end
  def test_outputs_energy_flows_z292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z292||0), 0.002); end
  def test_outputs_energy_flows_aa292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa292||0), 0.002); end
  def test_outputs_energy_flows_ab292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab292||0), 0.002); end
  def test_outputs_energy_flows_ac292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac292||0), 0.002); end
  def test_outputs_energy_flows_ad292; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad292||0), 0.002); end
  def test_outputs_energy_flows_c294; assert_equal("FF.01", worksheet.outputs_energy_flows_c294); end
  def test_outputs_energy_flows_d294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_d294); end
  def test_outputs_energy_flows_e294; assert_equal("n/a", worksheet.outputs_energy_flows_e294); end
  def test_outputs_energy_flows_f294; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f294); end
  def test_outputs_energy_flows_g294; assert_equal("n/a", worksheet.outputs_energy_flows_g294); end
  def test_outputs_energy_flows_h294; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h294); end
  def test_outputs_energy_flows_i294; assert_equal("FF.01", worksheet.outputs_energy_flows_i294); end
  def test_outputs_energy_flows_j294; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j294); end
  def test_outputs_energy_flows_v294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v294||0), 0.002); end
  def test_outputs_energy_flows_w294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w294||0), 0.002); end
  def test_outputs_energy_flows_x294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x294||0), 0.002); end
  def test_outputs_energy_flows_y294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y294||0), 0.002); end
  def test_outputs_energy_flows_z294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z294||0), 0.002); end
  def test_outputs_energy_flows_aa294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa294||0), 0.002); end
  def test_outputs_energy_flows_ab294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab294||0), 0.002); end
  def test_outputs_energy_flows_ac294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac294||0), 0.002); end
  def test_outputs_energy_flows_ad294; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad294||0), 0.002); end
  def test_outputs_energy_flows_c296; assert_equal("FF.02", worksheet.outputs_energy_flows_c296); end
  def test_outputs_energy_flows_d296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d296); end
  def test_outputs_energy_flows_e296; assert_equal("n/a", worksheet.outputs_energy_flows_e296); end
  def test_outputs_energy_flows_f296; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f296); end
  def test_outputs_energy_flows_i296; assert_equal("FF.02", worksheet.outputs_energy_flows_i296); end
  def test_outputs_energy_flows_j296; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j296); end
  def test_outputs_energy_flows_k296; assert_equal("Global buildings", worksheet.outputs_energy_flows_k296); end
  def test_outputs_energy_flows_v296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v296||0), 0.002); end
  def test_outputs_energy_flows_w296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w296||0), 0.002); end
  def test_outputs_energy_flows_x296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x296||0), 0.002); end
  def test_outputs_energy_flows_y296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y296||0), 0.002); end
  def test_outputs_energy_flows_z296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z296||0), 0.002); end
  def test_outputs_energy_flows_aa296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa296||0), 0.002); end
  def test_outputs_energy_flows_ab296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab296||0), 0.002); end
  def test_outputs_energy_flows_ac296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac296||0), 0.002); end
  def test_outputs_energy_flows_ad296; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad296||0), 0.002); end
  def test_outputs_energy_flows_c298; assert_equal("FF.02", worksheet.outputs_energy_flows_c298); end
  def test_outputs_energy_flows_d298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d298); end
  def test_outputs_energy_flows_e298; assert_equal("n/a", worksheet.outputs_energy_flows_e298); end
  def test_outputs_energy_flows_f298; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f298); end
  def test_outputs_energy_flows_i298; assert_equal("FF.02", worksheet.outputs_energy_flows_i298); end
  def test_outputs_energy_flows_j298; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j298); end
  def test_outputs_energy_flows_k298; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k298); end
  def test_outputs_energy_flows_l298; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l298); end
  def test_outputs_energy_flows_v298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v298||0), 0.002); end
  def test_outputs_energy_flows_w298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w298||0), 0.002); end
  def test_outputs_energy_flows_x298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x298||0), 0.002); end
  def test_outputs_energy_flows_y298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y298||0), 0.002); end
  def test_outputs_energy_flows_z298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z298||0), 0.002); end
  def test_outputs_energy_flows_aa298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa298||0), 0.002); end
  def test_outputs_energy_flows_ab298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab298||0), 0.002); end
  def test_outputs_energy_flows_ac298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac298||0), 0.002); end
  def test_outputs_energy_flows_ad298; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad298||0), 0.002); end
  def test_outputs_energy_flows_c300; assert_equal("FF.02", worksheet.outputs_energy_flows_c300); end
  def test_outputs_energy_flows_d300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d300); end
  def test_outputs_energy_flows_e300; assert_equal("n/a", worksheet.outputs_energy_flows_e300); end
  def test_outputs_energy_flows_f300; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f300); end
  def test_outputs_energy_flows_i300; assert_equal("FF.02", worksheet.outputs_energy_flows_i300); end
  def test_outputs_energy_flows_j300; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j300); end
  def test_outputs_energy_flows_k300; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k300); end
  def test_outputs_energy_flows_l300; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l300); end
  def test_outputs_energy_flows_v300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v300||0), 0.002); end
  def test_outputs_energy_flows_w300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w300||0), 0.002); end
  def test_outputs_energy_flows_x300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x300||0), 0.002); end
  def test_outputs_energy_flows_y300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y300||0), 0.002); end
  def test_outputs_energy_flows_z300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z300||0), 0.002); end
  def test_outputs_energy_flows_aa300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa300||0), 0.002); end
  def test_outputs_energy_flows_ab300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab300||0), 0.002); end
  def test_outputs_energy_flows_ac300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac300||0), 0.002); end
  def test_outputs_energy_flows_ad300; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad300||0), 0.002); end
  def test_outputs_energy_flows_c302; assert_equal("FF.02", worksheet.outputs_energy_flows_c302); end
  def test_outputs_energy_flows_d302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d302); end
  def test_outputs_energy_flows_e302; assert_equal("n/a", worksheet.outputs_energy_flows_e302); end
  def test_outputs_energy_flows_f302; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f302); end
  def test_outputs_energy_flows_i302; assert_equal("FF.02", worksheet.outputs_energy_flows_i302); end
  def test_outputs_energy_flows_j302; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j302); end
  def test_outputs_energy_flows_k302; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k302); end
  def test_outputs_energy_flows_l302; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l302); end
  def test_outputs_energy_flows_v302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v302||0), 0.002); end
  def test_outputs_energy_flows_w302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w302||0), 0.002); end
  def test_outputs_energy_flows_x302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x302||0), 0.002); end
  def test_outputs_energy_flows_y302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y302||0), 0.002); end
  def test_outputs_energy_flows_z302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z302||0), 0.002); end
  def test_outputs_energy_flows_aa302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa302||0), 0.002); end
  def test_outputs_energy_flows_ab302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab302||0), 0.002); end
  def test_outputs_energy_flows_ac302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac302||0), 0.002); end
  def test_outputs_energy_flows_ad302; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad302||0), 0.002); end
  def test_outputs_energy_flows_c304; assert_equal("FF.02", worksheet.outputs_energy_flows_c304); end
  def test_outputs_energy_flows_d304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d304); end
  def test_outputs_energy_flows_e304; assert_equal("n/a", worksheet.outputs_energy_flows_e304); end
  def test_outputs_energy_flows_f304; assert_equal("Non domestic", worksheet.outputs_energy_flows_f304); end
  def test_outputs_energy_flows_i304; assert_equal("FF.02", worksheet.outputs_energy_flows_i304); end
  def test_outputs_energy_flows_j304; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j304); end
  def test_outputs_energy_flows_k304; assert_equal("Non-residential", worksheet.outputs_energy_flows_k304); end
  def test_outputs_energy_flows_v304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v304||0), 0.002); end
  def test_outputs_energy_flows_w304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w304||0), 0.002); end
  def test_outputs_energy_flows_x304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x304||0), 0.002); end
  def test_outputs_energy_flows_y304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y304||0), 0.002); end
  def test_outputs_energy_flows_z304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z304||0), 0.002); end
  def test_outputs_energy_flows_aa304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa304||0), 0.002); end
  def test_outputs_energy_flows_ab304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab304||0), 0.002); end
  def test_outputs_energy_flows_ac304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac304||0), 0.002); end
  def test_outputs_energy_flows_ad304; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad304||0), 0.002); end
  def test_outputs_energy_flows_c306; assert_equal("FF.02", worksheet.outputs_energy_flows_c306); end
  def test_outputs_energy_flows_d306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d306); end
  def test_outputs_energy_flows_e306; assert_equal("n/a", worksheet.outputs_energy_flows_e306); end
  def test_outputs_energy_flows_f306; assert_equal("Steel", worksheet.outputs_energy_flows_f306); end
  def test_outputs_energy_flows_i306; assert_equal("FF.02", worksheet.outputs_energy_flows_i306); end
  def test_outputs_energy_flows_j306; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j306); end
  def test_outputs_energy_flows_v306; assert_in_delta(0.6053795859240001, worksheet.outputs_energy_flows_v306, 0.002); end
  def test_outputs_energy_flows_w306; assert_in_delta(0.6273546401967129, worksheet.outputs_energy_flows_w306, 0.002); end
  def test_outputs_energy_flows_x306; assert_in_delta(0.6438600812631247, worksheet.outputs_energy_flows_x306, 0.002); end
  def test_outputs_energy_flows_y306; assert_in_delta(0.6890354324245306, worksheet.outputs_energy_flows_y306, 0.002); end
  def test_outputs_energy_flows_z306; assert_in_delta(0.7333716250050203, worksheet.outputs_energy_flows_z306, 0.002); end
  def test_outputs_energy_flows_aa306; assert_in_delta(0.7736905826555021, worksheet.outputs_energy_flows_aa306, 0.002); end
  def test_outputs_energy_flows_ab306; assert_in_delta(0.8171543872120713, worksheet.outputs_energy_flows_ab306, 0.002); end
  def test_outputs_energy_flows_ac306; assert_in_delta(0.8639307640906672, worksheet.outputs_energy_flows_ac306, 0.002); end
  def test_outputs_energy_flows_ad306; assert_in_delta(0.9066591082151577, worksheet.outputs_energy_flows_ad306, 0.002); end
  def test_outputs_energy_flows_c308; assert_equal("FF.02", worksheet.outputs_energy_flows_c308); end
  def test_outputs_energy_flows_d308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d308); end
  def test_outputs_energy_flows_e308; assert_equal("n/a", worksheet.outputs_energy_flows_e308); end
  def test_outputs_energy_flows_f308; assert_equal("Aluminium", worksheet.outputs_energy_flows_f308); end
  def test_outputs_energy_flows_i308; assert_equal("FF.02", worksheet.outputs_energy_flows_i308); end
  def test_outputs_energy_flows_j308; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j308); end
  def test_outputs_energy_flows_v308; assert_in_delta(0.5405428608660054, worksheet.outputs_energy_flows_v308, 0.002); end
  def test_outputs_energy_flows_w308; assert_in_delta(0.6041797451561582, worksheet.outputs_energy_flows_w308, 0.002); end
  def test_outputs_energy_flows_x308; assert_in_delta(0.6643423731058612, worksheet.outputs_energy_flows_x308, 0.002); end
  def test_outputs_energy_flows_y308; assert_in_delta(0.7634355265558607, worksheet.outputs_energy_flows_y308, 0.002); end
  def test_outputs_energy_flows_z308; assert_in_delta(0.8683841647540383, worksheet.outputs_energy_flows_z308, 0.002); end
  def test_outputs_energy_flows_aa308; assert_in_delta(0.9750031474293616, worksheet.outputs_energy_flows_aa308, 0.002); end
  def test_outputs_energy_flows_ab308; assert_in_epsilon(1.0935345439423751, worksheet.outputs_energy_flows_ab308, 0.002); end
  def test_outputs_energy_flows_ac308; assert_in_epsilon(1.2204479857958204, worksheet.outputs_energy_flows_ac308, 0.002); end
  def test_outputs_energy_flows_ad308; assert_in_epsilon(1.3612965481314718, worksheet.outputs_energy_flows_ad308, 0.002); end
  def test_outputs_energy_flows_c310; assert_equal("FF.02", worksheet.outputs_energy_flows_c310); end
  def test_outputs_energy_flows_d310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d310); end
  def test_outputs_energy_flows_e310; assert_equal("n/a", worksheet.outputs_energy_flows_e310); end
  def test_outputs_energy_flows_f310; assert_equal("Cement", worksheet.outputs_energy_flows_f310); end
  def test_outputs_energy_flows_i310; assert_equal("FF.02", worksheet.outputs_energy_flows_i310); end
  def test_outputs_energy_flows_j310; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j310); end
  def test_outputs_energy_flows_v310; assert_in_epsilon(1.1385974140784139, worksheet.outputs_energy_flows_v310, 0.002); end
  def test_outputs_energy_flows_w310; assert_in_epsilon(1.1916512499031802, worksheet.outputs_energy_flows_w310, 0.002); end
  def test_outputs_energy_flows_x310; assert_in_epsilon(1.200132758681201, worksheet.outputs_energy_flows_x310, 0.002); end
  def test_outputs_energy_flows_y310; assert_in_epsilon(1.24967078484232, worksheet.outputs_energy_flows_y310, 0.002); end
  def test_outputs_energy_flows_z310; assert_in_epsilon(1.2918052293368063, worksheet.outputs_energy_flows_z310, 0.002); end
  def test_outputs_energy_flows_aa310; assert_in_epsilon(1.3314333635562798, worksheet.outputs_energy_flows_aa310, 0.002); end
  def test_outputs_energy_flows_ab310; assert_in_epsilon(1.3632198096128005, worksheet.outputs_energy_flows_ab310, 0.002); end
  def test_outputs_energy_flows_ac310; assert_in_epsilon(1.3955467958175476, worksheet.outputs_energy_flows_ac310, 0.002); end
  def test_outputs_energy_flows_ad310; assert_in_epsilon(1.4291704501647562, worksheet.outputs_energy_flows_ad310, 0.002); end
  def test_outputs_energy_flows_c312; assert_equal("FF.02", worksheet.outputs_energy_flows_c312); end
  def test_outputs_energy_flows_d312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d312); end
  def test_outputs_energy_flows_e312; assert_equal("n/a", worksheet.outputs_energy_flows_e312); end
  def test_outputs_energy_flows_f312; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f312); end
  def test_outputs_energy_flows_i312; assert_equal("FF.02", worksheet.outputs_energy_flows_i312); end
  def test_outputs_energy_flows_j312; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j312); end
  def test_outputs_energy_flows_v312; assert_in_delta(0.40529936521738275, worksheet.outputs_energy_flows_v312, 0.002); end
  def test_outputs_energy_flows_w312; assert_in_delta(0.42095795528494745, worksheet.outputs_energy_flows_w312, 0.002); end
  def test_outputs_energy_flows_x312; assert_in_delta(0.4352921592679039, worksheet.outputs_energy_flows_x312, 0.002); end
  def test_outputs_energy_flows_y312; assert_in_delta(0.46634243849856755, worksheet.outputs_energy_flows_y312, 0.002); end
  def test_outputs_energy_flows_z312; assert_in_delta(0.49645302866084656, worksheet.outputs_energy_flows_z312, 0.002); end
  def test_outputs_energy_flows_aa312; assert_in_delta(0.5240928573077636, worksheet.outputs_energy_flows_aa312, 0.002); end
  def test_outputs_energy_flows_ab312; assert_in_delta(0.553235205135964, worksheet.outputs_energy_flows_ab312, 0.002); end
  def test_outputs_energy_flows_ac312; assert_in_delta(0.5795151987637551, worksheet.outputs_energy_flows_ac312, 0.002); end
  def test_outputs_energy_flows_ad312; assert_in_delta(0.6071188626287977, worksheet.outputs_energy_flows_ad312, 0.002); end
  def test_outputs_energy_flows_c314; assert_equal("FF.02", worksheet.outputs_energy_flows_c314); end
  def test_outputs_energy_flows_d314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d314); end
  def test_outputs_energy_flows_e314; assert_equal("n/a", worksheet.outputs_energy_flows_e314); end
  def test_outputs_energy_flows_f314; assert_equal("Chemicals", worksheet.outputs_energy_flows_f314); end
  def test_outputs_energy_flows_i314; assert_equal("FF.02", worksheet.outputs_energy_flows_i314); end
  def test_outputs_energy_flows_j314; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j314); end
  def test_outputs_energy_flows_v314; assert_in_epsilon(19.210879294175747, worksheet.outputs_energy_flows_v314, 0.002); end
  def test_outputs_energy_flows_w314; assert_in_epsilon(20.63290996969171, worksheet.outputs_energy_flows_w314, 0.002); end
  def test_outputs_energy_flows_x314; assert_in_epsilon(21.95970307847011, worksheet.outputs_energy_flows_x314, 0.002); end
  def test_outputs_energy_flows_y314; assert_in_epsilon(24.717072244942436, worksheet.outputs_energy_flows_y314, 0.002); end
  def test_outputs_energy_flows_z314; assert_in_epsilon(27.61754651882692, worksheet.outputs_energy_flows_z314, 0.002); end
  def test_outputs_energy_flows_aa314; assert_in_epsilon(30.48968679572826, worksheet.outputs_energy_flows_aa314, 0.002); end
  def test_outputs_energy_flows_ab314; assert_in_epsilon(33.718533456873736, worksheet.outputs_energy_flows_ab314, 0.002); end
  def test_outputs_energy_flows_ac314; assert_in_epsilon(36.98161985758925, worksheet.outputs_energy_flows_ac314, 0.002); end
  def test_outputs_energy_flows_ad314; assert_in_epsilon(40.51735244179616, worksheet.outputs_energy_flows_ad314, 0.002); end
  def test_outputs_energy_flows_c316; assert_equal("FF.02", worksheet.outputs_energy_flows_c316); end
  def test_outputs_energy_flows_d316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d316); end
  def test_outputs_energy_flows_e316; assert_equal("n/a", worksheet.outputs_energy_flows_e316); end
  def test_outputs_energy_flows_f316; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f316); end
  def test_outputs_energy_flows_i316; assert_equal("FF.02", worksheet.outputs_energy_flows_i316); end
  def test_outputs_energy_flows_j316; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j316); end
  def test_outputs_energy_flows_l316; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l316); end
  def test_outputs_energy_flows_m316; assert_equal("Timber", worksheet.outputs_energy_flows_m316); end
  def test_outputs_energy_flows_v316; assert_in_epsilon(8.9088083790622, worksheet.outputs_energy_flows_v316, 0.002); end
  def test_outputs_energy_flows_w316; assert_in_epsilon(9.542773052244392, worksheet.outputs_energy_flows_w316, 0.002); end
  def test_outputs_energy_flows_x316; assert_in_epsilon(10.615523054990776, worksheet.outputs_energy_flows_x316, 0.002); end
  def test_outputs_energy_flows_y316; assert_in_epsilon(11.65418424383075, worksheet.outputs_energy_flows_y316, 0.002); end
  def test_outputs_energy_flows_z316; assert_in_epsilon(12.663140769715476, worksheet.outputs_energy_flows_z316, 0.002); end
  def test_outputs_energy_flows_aa316; assert_in_epsilon(13.636485078763517, worksheet.outputs_energy_flows_aa316, 0.002); end
  def test_outputs_energy_flows_ab316; assert_in_epsilon(14.565167401422661, worksheet.outputs_energy_flows_ab316, 0.002); end
  def test_outputs_energy_flows_ac316; assert_in_epsilon(15.438167167680913, worksheet.outputs_energy_flows_ac316, 0.002); end
  def test_outputs_energy_flows_ad316; assert_in_epsilon(16.244022548996664, worksheet.outputs_energy_flows_ad316, 0.002); end
  def test_outputs_energy_flows_c318; assert_equal("FF.02", worksheet.outputs_energy_flows_c318); end
  def test_outputs_energy_flows_d318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d318); end
  def test_outputs_energy_flows_e318; assert_equal("n/a", worksheet.outputs_energy_flows_e318); end
  def test_outputs_energy_flows_f318; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f318); end
  def test_outputs_energy_flows_i318; assert_equal("FF.02", worksheet.outputs_energy_flows_i318); end
  def test_outputs_energy_flows_j318; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j318); end
  def test_outputs_energy_flows_l318; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l318); end
  def test_outputs_energy_flows_m318; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m318); end
  def test_outputs_energy_flows_v318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v318||0), 0.002); end
  def test_outputs_energy_flows_w318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w318||0), 0.002); end
  def test_outputs_energy_flows_x318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x318||0), 0.002); end
  def test_outputs_energy_flows_y318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y318||0), 0.002); end
  def test_outputs_energy_flows_z318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z318||0), 0.002); end
  def test_outputs_energy_flows_aa318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa318||0), 0.002); end
  def test_outputs_energy_flows_ab318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab318||0), 0.002); end
  def test_outputs_energy_flows_ac318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac318||0), 0.002); end
  def test_outputs_energy_flows_ad318; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad318||0), 0.002); end
  def test_outputs_energy_flows_c320; assert_equal("FF.02", worksheet.outputs_energy_flows_c320); end
  def test_outputs_energy_flows_d320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d320); end
  def test_outputs_energy_flows_e320; assert_equal("n/a", worksheet.outputs_energy_flows_e320); end
  def test_outputs_energy_flows_f320; assert_equal("International passenger", worksheet.outputs_energy_flows_f320); end
  def test_outputs_energy_flows_i320; assert_equal("FF.02", worksheet.outputs_energy_flows_i320); end
  def test_outputs_energy_flows_j320; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j320); end
  def test_outputs_energy_flows_l320; assert_equal("International", worksheet.outputs_energy_flows_l320); end
  def test_outputs_energy_flows_v320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v320||0), 0.002); end
  def test_outputs_energy_flows_w320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w320||0), 0.002); end
  def test_outputs_energy_flows_x320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x320||0), 0.002); end
  def test_outputs_energy_flows_y320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y320||0), 0.002); end
  def test_outputs_energy_flows_z320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z320||0), 0.002); end
  def test_outputs_energy_flows_aa320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa320||0), 0.002); end
  def test_outputs_energy_flows_ab320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab320||0), 0.002); end
  def test_outputs_energy_flows_ac320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac320||0), 0.002); end
  def test_outputs_energy_flows_ad320; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad320||0), 0.002); end
  def test_outputs_energy_flows_c322; assert_equal("FF.02", worksheet.outputs_energy_flows_c322); end
  def test_outputs_energy_flows_d322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d322); end
  def test_outputs_energy_flows_e322; assert_equal("n/a", worksheet.outputs_energy_flows_e322); end
  def test_outputs_energy_flows_f322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f322); end
  def test_outputs_energy_flows_i322; assert_equal("FF.02", worksheet.outputs_energy_flows_i322); end
  def test_outputs_energy_flows_j322; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j322); end
  def test_outputs_energy_flows_l322; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l322); end
  def test_outputs_energy_flows_v322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v322||0), 0.002); end
  def test_outputs_energy_flows_w322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w322||0), 0.002); end
  def test_outputs_energy_flows_x322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x322||0), 0.002); end
  def test_outputs_energy_flows_y322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y322||0), 0.002); end
  def test_outputs_energy_flows_z322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z322||0), 0.002); end
  def test_outputs_energy_flows_aa322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa322||0), 0.002); end
  def test_outputs_energy_flows_ab322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab322||0), 0.002); end
  def test_outputs_energy_flows_ac322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac322||0), 0.002); end
  def test_outputs_energy_flows_ad322; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad322||0), 0.002); end
  def test_outputs_energy_flows_c324; assert_equal("FF.02", worksheet.outputs_energy_flows_c324); end
  def test_outputs_energy_flows_d324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d324); end
  def test_outputs_energy_flows_e324; assert_equal("n/a", worksheet.outputs_energy_flows_e324); end
  def test_outputs_energy_flows_f324; assert_equal("International freight", worksheet.outputs_energy_flows_f324); end
  def test_outputs_energy_flows_i324; assert_equal("FF.02", worksheet.outputs_energy_flows_i324); end
  def test_outputs_energy_flows_j324; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j324); end
  def test_outputs_energy_flows_l324; assert_equal("International freight", worksheet.outputs_energy_flows_l324); end
  def test_outputs_energy_flows_v324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v324||0), 0.002); end
  def test_outputs_energy_flows_w324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w324||0), 0.002); end
  def test_outputs_energy_flows_x324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x324||0), 0.002); end
  def test_outputs_energy_flows_y324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y324||0), 0.002); end
  def test_outputs_energy_flows_z324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z324||0), 0.002); end
  def test_outputs_energy_flows_aa324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa324||0), 0.002); end
  def test_outputs_energy_flows_ab324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab324||0), 0.002); end
  def test_outputs_energy_flows_ac324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac324||0), 0.002); end
  def test_outputs_energy_flows_ad324; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad324||0), 0.002); end
  def test_outputs_energy_flows_c326; assert_equal("FF.02", worksheet.outputs_energy_flows_c326); end
  def test_outputs_energy_flows_d326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d326); end
  def test_outputs_energy_flows_e326; assert_equal("n/a", worksheet.outputs_energy_flows_e326); end
  def test_outputs_energy_flows_f326; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f326); end
  def test_outputs_energy_flows_i326; assert_equal("FF.02", worksheet.outputs_energy_flows_i326); end
  def test_outputs_energy_flows_j326; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j326); end
  def test_outputs_energy_flows_v326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v326||0), 0.002); end
  def test_outputs_energy_flows_w326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w326||0), 0.002); end
  def test_outputs_energy_flows_x326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x326||0), 0.002); end
  def test_outputs_energy_flows_y326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y326||0), 0.002); end
  def test_outputs_energy_flows_z326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z326||0), 0.002); end
  def test_outputs_energy_flows_aa326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa326||0), 0.002); end
  def test_outputs_energy_flows_ab326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab326||0), 0.002); end
  def test_outputs_energy_flows_ac326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac326||0), 0.002); end
  def test_outputs_energy_flows_ad326; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad326||0), 0.002); end
  def test_outputs_energy_flows_c328; assert_equal("FF.02", worksheet.outputs_energy_flows_c328); end
  def test_outputs_energy_flows_d328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d328); end
  def test_outputs_energy_flows_e328; assert_equal("G.01", worksheet.outputs_energy_flows_e328); end
  def test_outputs_energy_flows_f328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f328); end
  def test_outputs_energy_flows_g328; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g328); end
  def test_outputs_energy_flows_h328; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h328); end
  def test_outputs_energy_flows_i328; assert_equal("FF.02", worksheet.outputs_energy_flows_i328); end
  def test_outputs_energy_flows_j328; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j328); end
  def test_outputs_energy_flows_v328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v328||0), 0.002); end
  def test_outputs_energy_flows_w328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w328||0), 0.002); end
  def test_outputs_energy_flows_x328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x328||0), 0.002); end
  def test_outputs_energy_flows_y328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y328||0), 0.002); end
  def test_outputs_energy_flows_z328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z328||0), 0.002); end
  def test_outputs_energy_flows_aa328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa328||0), 0.002); end
  def test_outputs_energy_flows_ab328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab328||0), 0.002); end
  def test_outputs_energy_flows_ac328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac328||0), 0.002); end
  def test_outputs_energy_flows_ad328; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad328||0), 0.002); end
  def test_outputs_energy_flows_c330; assert_equal("FF.02", worksheet.outputs_energy_flows_c330); end
  def test_outputs_energy_flows_d330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_d330); end
  def test_outputs_energy_flows_e330; assert_equal("n/a", worksheet.outputs_energy_flows_e330); end
  def test_outputs_energy_flows_f330; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f330); end
  def test_outputs_energy_flows_g330; assert_equal("n/a", worksheet.outputs_energy_flows_g330); end
  def test_outputs_energy_flows_h330; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h330); end
  def test_outputs_energy_flows_i330; assert_equal("FF.02", worksheet.outputs_energy_flows_i330); end
  def test_outputs_energy_flows_j330; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_j330); end
  def test_outputs_energy_flows_v330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v330||0), 0.002); end
  def test_outputs_energy_flows_w330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w330||0), 0.002); end
  def test_outputs_energy_flows_x330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x330||0), 0.002); end
  def test_outputs_energy_flows_y330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y330||0), 0.002); end
  def test_outputs_energy_flows_z330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z330||0), 0.002); end
  def test_outputs_energy_flows_aa330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa330||0), 0.002); end
  def test_outputs_energy_flows_ab330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab330||0), 0.002); end
  def test_outputs_energy_flows_ac330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac330||0), 0.002); end
  def test_outputs_energy_flows_ad330; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad330||0), 0.002); end
  def test_outputs_energy_flows_c332; assert_equal("FF.03", worksheet.outputs_energy_flows_c332); end
  def test_outputs_energy_flows_d332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d332); end
  def test_outputs_energy_flows_e332; assert_equal("n/a", worksheet.outputs_energy_flows_e332); end
  def test_outputs_energy_flows_f332; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f332); end
  def test_outputs_energy_flows_i332; assert_equal("FF.03", worksheet.outputs_energy_flows_i332); end
  def test_outputs_energy_flows_j332; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j332); end
  def test_outputs_energy_flows_k332; assert_equal("Global buildings", worksheet.outputs_energy_flows_k332); end
  def test_outputs_energy_flows_v332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v332||0), 0.002); end
  def test_outputs_energy_flows_w332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w332||0), 0.002); end
  def test_outputs_energy_flows_x332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x332||0), 0.002); end
  def test_outputs_energy_flows_y332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y332||0), 0.002); end
  def test_outputs_energy_flows_z332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z332||0), 0.002); end
  def test_outputs_energy_flows_aa332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa332||0), 0.002); end
  def test_outputs_energy_flows_ab332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab332||0), 0.002); end
  def test_outputs_energy_flows_ac332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac332||0), 0.002); end
  def test_outputs_energy_flows_ad332; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad332||0), 0.002); end
  def test_outputs_energy_flows_c334; assert_equal("FF.03", worksheet.outputs_energy_flows_c334); end
  def test_outputs_energy_flows_d334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d334); end
  def test_outputs_energy_flows_e334; assert_equal("n/a", worksheet.outputs_energy_flows_e334); end
  def test_outputs_energy_flows_f334; assert_equal("Domestic lighting", worksheet.outputs_energy_flows_f334); end
  def test_outputs_energy_flows_i334; assert_equal("FF.03", worksheet.outputs_energy_flows_i334); end
  def test_outputs_energy_flows_j334; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j334); end
  def test_outputs_energy_flows_k334; assert_equal("Urban lighting", worksheet.outputs_energy_flows_k334); end
  def test_outputs_energy_flows_l334; assert_equal("Rural lighting", worksheet.outputs_energy_flows_l334); end
  def test_outputs_energy_flows_v334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v334||0), 0.002); end
  def test_outputs_energy_flows_w334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w334||0), 0.002); end
  def test_outputs_energy_flows_x334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x334||0), 0.002); end
  def test_outputs_energy_flows_y334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y334||0), 0.002); end
  def test_outputs_energy_flows_z334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z334||0), 0.002); end
  def test_outputs_energy_flows_aa334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa334||0), 0.002); end
  def test_outputs_energy_flows_ab334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab334||0), 0.002); end
  def test_outputs_energy_flows_ac334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac334||0), 0.002); end
  def test_outputs_energy_flows_ad334; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad334||0), 0.002); end
  def test_outputs_energy_flows_c336; assert_equal("FF.03", worksheet.outputs_energy_flows_c336); end
  def test_outputs_energy_flows_d336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d336); end
  def test_outputs_energy_flows_e336; assert_equal("n/a", worksheet.outputs_energy_flows_e336); end
  def test_outputs_energy_flows_f336; assert_equal("Domestic appliances", worksheet.outputs_energy_flows_f336); end
  def test_outputs_energy_flows_i336; assert_equal("FF.03", worksheet.outputs_energy_flows_i336); end
  def test_outputs_energy_flows_j336; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j336); end
  def test_outputs_energy_flows_k336; assert_equal("Urban appliances", worksheet.outputs_energy_flows_k336); end
  def test_outputs_energy_flows_l336; assert_equal("Rural appliances", worksheet.outputs_energy_flows_l336); end
  def test_outputs_energy_flows_v336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v336||0), 0.002); end
  def test_outputs_energy_flows_w336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w336||0), 0.002); end
  def test_outputs_energy_flows_x336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x336||0), 0.002); end
  def test_outputs_energy_flows_y336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y336||0), 0.002); end
  def test_outputs_energy_flows_z336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z336||0), 0.002); end
  def test_outputs_energy_flows_aa336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa336||0), 0.002); end
  def test_outputs_energy_flows_ab336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab336||0), 0.002); end
  def test_outputs_energy_flows_ac336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac336||0), 0.002); end
  def test_outputs_energy_flows_ad336; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad336||0), 0.002); end
  def test_outputs_energy_flows_c338; assert_equal("FF.03", worksheet.outputs_energy_flows_c338); end
  def test_outputs_energy_flows_d338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d338); end
  def test_outputs_energy_flows_e338; assert_equal("n/a", worksheet.outputs_energy_flows_e338); end
  def test_outputs_energy_flows_f338; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f338); end
  def test_outputs_energy_flows_i338; assert_equal("FF.03", worksheet.outputs_energy_flows_i338); end
  def test_outputs_energy_flows_j338; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j338); end
  def test_outputs_energy_flows_k338; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k338); end
  def test_outputs_energy_flows_l338; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l338); end
  def test_outputs_energy_flows_v338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v338||0), 0.002); end
  def test_outputs_energy_flows_w338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w338||0), 0.002); end
  def test_outputs_energy_flows_x338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x338||0), 0.002); end
  def test_outputs_energy_flows_y338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y338||0), 0.002); end
  def test_outputs_energy_flows_z338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z338||0), 0.002); end
  def test_outputs_energy_flows_aa338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa338||0), 0.002); end
  def test_outputs_energy_flows_ab338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab338||0), 0.002); end
  def test_outputs_energy_flows_ac338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac338||0), 0.002); end
  def test_outputs_energy_flows_ad338; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad338||0), 0.002); end
  def test_outputs_energy_flows_c340; assert_equal("FF.03", worksheet.outputs_energy_flows_c340); end
  def test_outputs_energy_flows_d340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d340); end
  def test_outputs_energy_flows_e340; assert_equal("n/a", worksheet.outputs_energy_flows_e340); end
  def test_outputs_energy_flows_f340; assert_equal("Non domestic", worksheet.outputs_energy_flows_f340); end
  def test_outputs_energy_flows_i340; assert_equal("FF.03", worksheet.outputs_energy_flows_i340); end
  def test_outputs_energy_flows_j340; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j340); end
  def test_outputs_energy_flows_k340; assert_equal("Non-residential", worksheet.outputs_energy_flows_k340); end
  def test_outputs_energy_flows_v340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v340||0), 0.002); end
  def test_outputs_energy_flows_w340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w340||0), 0.002); end
  def test_outputs_energy_flows_x340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x340||0), 0.002); end
  def test_outputs_energy_flows_y340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y340||0), 0.002); end
  def test_outputs_energy_flows_z340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z340||0), 0.002); end
  def test_outputs_energy_flows_aa340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa340||0), 0.002); end
  def test_outputs_energy_flows_ab340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab340||0), 0.002); end
  def test_outputs_energy_flows_ac340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac340||0), 0.002); end
  def test_outputs_energy_flows_ad340; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad340||0), 0.002); end
  def test_outputs_energy_flows_c342; assert_equal("FF.03", worksheet.outputs_energy_flows_c342); end
  def test_outputs_energy_flows_d342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d342); end
  def test_outputs_energy_flows_e342; assert_equal("n/a", worksheet.outputs_energy_flows_e342); end
  def test_outputs_energy_flows_f342; assert_equal("Steel", worksheet.outputs_energy_flows_f342); end
  def test_outputs_energy_flows_i342; assert_equal("FF.03", worksheet.outputs_energy_flows_i342); end
  def test_outputs_energy_flows_j342; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j342); end
  def test_outputs_energy_flows_v342; assert_in_epsilon(2.3045661146880003, worksheet.outputs_energy_flows_v342, 0.002); end
  def test_outputs_energy_flows_w342; assert_in_epsilon(2.4878970209241813, worksheet.outputs_energy_flows_w342, 0.002); end
  def test_outputs_energy_flows_x342; assert_in_epsilon(2.561497818665728, worksheet.outputs_energy_flows_x342, 0.002); end
  def test_outputs_energy_flows_y342; assert_in_epsilon(2.7502280795280916, worksheet.outputs_energy_flows_y342, 0.002); end
  def test_outputs_energy_flows_z342; assert_in_epsilon(2.9370946800874718, worksheet.outputs_energy_flows_z342, 0.002); end
  def test_outputs_energy_flows_aa342; assert_in_epsilon(3.1093559832260804, worksheet.outputs_energy_flows_aa342, 0.002); end
  def test_outputs_energy_flows_ab342; assert_in_epsilon(3.2957916923432706, worksheet.outputs_energy_flows_ab342, 0.002); end
  def test_outputs_energy_flows_ac342; assert_in_epsilon(3.497284167822269, worksheet.outputs_energy_flows_ac342, 0.002); end
  def test_outputs_energy_flows_ad342; assert_in_epsilon(3.6841461954897867, worksheet.outputs_energy_flows_ad342, 0.002); end
  def test_outputs_energy_flows_c344; assert_equal("FF.03", worksheet.outputs_energy_flows_c344); end
  def test_outputs_energy_flows_d344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d344); end
  def test_outputs_energy_flows_e344; assert_equal("n/a", worksheet.outputs_energy_flows_e344); end
  def test_outputs_energy_flows_f344; assert_equal("Aluminium", worksheet.outputs_energy_flows_f344); end
  def test_outputs_energy_flows_i344; assert_equal("FF.03", worksheet.outputs_energy_flows_i344); end
  def test_outputs_energy_flows_j344; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j344); end
  def test_outputs_energy_flows_v344; assert_in_delta(0.6799566079776812, worksheet.outputs_energy_flows_v344, 0.002); end
  def test_outputs_energy_flows_w344; assert_in_delta(0.7398031078790792, worksheet.outputs_energy_flows_w344, 0.002); end
  def test_outputs_energy_flows_x344; assert_in_delta(0.7794006588861908, worksheet.outputs_energy_flows_x344, 0.002); end
  def test_outputs_energy_flows_y344; assert_in_delta(0.8592654757708111, worksheet.outputs_energy_flows_y344, 0.002); end
  def test_outputs_energy_flows_z344; assert_in_delta(0.9388313270763542, worksheet.outputs_energy_flows_z344, 0.002); end
  def test_outputs_energy_flows_aa344; assert_in_epsilon(1.0136949688841779, worksheet.outputs_energy_flows_aa344, 0.002); end
  def test_outputs_energy_flows_ab344; assert_in_epsilon(1.094554967044728, worksheet.outputs_energy_flows_ab344, 0.002); end
  def test_outputs_energy_flows_ac344; assert_in_epsilon(1.177286462485975, worksheet.outputs_energy_flows_ac344, 0.002); end
  def test_outputs_energy_flows_ad344; assert_in_epsilon(1.2667924696281463, worksheet.outputs_energy_flows_ad344, 0.002); end
  def test_outputs_energy_flows_c346; assert_equal("FF.03", worksheet.outputs_energy_flows_c346); end
  def test_outputs_energy_flows_d346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d346); end
  def test_outputs_energy_flows_e346; assert_equal("n/a", worksheet.outputs_energy_flows_e346); end
  def test_outputs_energy_flows_f346; assert_equal("Cement", worksheet.outputs_energy_flows_f346); end
  def test_outputs_energy_flows_i346; assert_equal("FF.03", worksheet.outputs_energy_flows_i346); end
  def test_outputs_energy_flows_j346; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j346); end
  def test_outputs_energy_flows_v346; assert_in_delta(0.8284396320493046, worksheet.outputs_energy_flows_v346, 0.002); end
  def test_outputs_energy_flows_w346; assert_in_delta(0.8670414237678004, worksheet.outputs_energy_flows_w346, 0.002); end
  def test_outputs_energy_flows_x346; assert_in_delta(0.8732125409022738, worksheet.outputs_energy_flows_x346, 0.002); end
  def test_outputs_energy_flows_y346; assert_in_delta(0.9092562413866838, worksheet.outputs_energy_flows_y346, 0.002); end
  def test_outputs_energy_flows_z346; assert_in_delta(0.9399131208613902, worksheet.outputs_energy_flows_z346, 0.002); end
  def test_outputs_energy_flows_aa346; assert_in_delta(0.9687464174468692, worksheet.outputs_energy_flows_aa346, 0.002); end
  def test_outputs_energy_flows_ab346; assert_in_delta(0.9918741282159402, worksheet.outputs_energy_flows_ab346, 0.002); end
  def test_outputs_energy_flows_ac346; assert_in_epsilon(1.0153951341707992, worksheet.outputs_energy_flows_ac346, 0.002); end
  def test_outputs_energy_flows_ad346; assert_in_epsilon(1.039859591485679, worksheet.outputs_energy_flows_ad346, 0.002); end
  def test_outputs_energy_flows_c348; assert_equal("FF.03", worksheet.outputs_energy_flows_c348); end
  def test_outputs_energy_flows_d348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d348); end
  def test_outputs_energy_flows_e348; assert_equal("n/a", worksheet.outputs_energy_flows_e348); end
  def test_outputs_energy_flows_f348; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f348); end
  def test_outputs_energy_flows_i348; assert_equal("FF.03", worksheet.outputs_energy_flows_i348); end
  def test_outputs_energy_flows_j348; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j348); end
  def test_outputs_energy_flows_v348; assert_in_epsilon(1.0822193748413809, worksheet.outputs_energy_flows_v348, 0.002); end
  def test_outputs_energy_flows_w348; assert_in_epsilon(1.134363208320138, worksheet.outputs_energy_flows_w348, 0.002); end
  def test_outputs_energy_flows_x348; assert_in_epsilon(1.1847214954361933, worksheet.outputs_energy_flows_x348, 0.002); end
  def test_outputs_energy_flows_y348; assert_in_epsilon(1.2817984962613362, worksheet.outputs_energy_flows_y348, 0.002); end
  def test_outputs_energy_flows_z348; assert_in_epsilon(1.3779409009887251, worksheet.outputs_energy_flows_z348, 0.002); end
  def test_outputs_energy_flows_aa348; assert_in_epsilon(1.4687818519123836, worksheet.outputs_energy_flows_aa348, 0.002); end
  def test_outputs_energy_flows_ab348; assert_in_epsilon(1.5653638565511143, worksheet.outputs_energy_flows_ab348, 0.002); end
  def test_outputs_energy_flows_ac348; assert_in_epsilon(1.655340454950534, worksheet.outputs_energy_flows_ac348, 0.002); end
  def test_outputs_energy_flows_ad348; assert_in_epsilon(1.7505500782122752, worksheet.outputs_energy_flows_ad348, 0.002); end
  def test_outputs_energy_flows_c350; assert_equal("FF.03", worksheet.outputs_energy_flows_c350); end
  def test_outputs_energy_flows_d350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d350); end
  def test_outputs_energy_flows_e350; assert_equal("n/a", worksheet.outputs_energy_flows_e350); end
  def test_outputs_energy_flows_f350; assert_equal("Chemicals", worksheet.outputs_energy_flows_f350); end
  def test_outputs_energy_flows_i350; assert_equal("FF.03", worksheet.outputs_energy_flows_i350); end
  def test_outputs_energy_flows_j350; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j350); end
  def test_outputs_energy_flows_v350; assert_in_epsilon(11.488845061925616, worksheet.outputs_energy_flows_v350, 0.002); end
  def test_outputs_energy_flows_w350; assert_in_epsilon(12.1624567488829, worksheet.outputs_energy_flows_w350, 0.002); end
  def test_outputs_energy_flows_x350; assert_in_epsilon(12.940433322773849, worksheet.outputs_energy_flows_x350, 0.002); end
  def test_outputs_energy_flows_y350; assert_in_epsilon(14.218933670205878, worksheet.outputs_energy_flows_y350, 0.002); end
  def test_outputs_energy_flows_z350; assert_in_epsilon(15.567862412240155, worksheet.outputs_energy_flows_z350, 0.002); end
  def test_outputs_energy_flows_aa350; assert_in_epsilon(16.956285969706364, worksheet.outputs_energy_flows_aa350, 0.002); end
  def test_outputs_energy_flows_ab350; assert_in_epsilon(18.46104383791844, worksheet.outputs_energy_flows_ab350, 0.002); end
  def test_outputs_energy_flows_ac350; assert_in_epsilon(19.880765660717152, worksheet.outputs_energy_flows_ac350, 0.002); end
  def test_outputs_energy_flows_ad350; assert_in_epsilon(21.377910119504712, worksheet.outputs_energy_flows_ad350, 0.002); end
  def test_outputs_energy_flows_c352; assert_equal("FF.03", worksheet.outputs_energy_flows_c352); end
  def test_outputs_energy_flows_d352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d352); end
  def test_outputs_energy_flows_e352; assert_equal("n/a", worksheet.outputs_energy_flows_e352); end
  def test_outputs_energy_flows_f352; assert_equal("Other manufacturing", worksheet.outputs_energy_flows_f352); end
  def test_outputs_energy_flows_i352; assert_equal("FF.03", worksheet.outputs_energy_flows_i352); end
  def test_outputs_energy_flows_j352; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j352); end
  def test_outputs_energy_flows_l352; assert_equal("Global Other industries", worksheet.outputs_energy_flows_l352); end
  def test_outputs_energy_flows_m352; assert_equal("Timber", worksheet.outputs_energy_flows_m352); end
  def test_outputs_energy_flows_v352; assert_in_epsilon(11.931004722655661, worksheet.outputs_energy_flows_v352, 0.002); end
  def test_outputs_energy_flows_w352; assert_in_epsilon(12.858590519995571, worksheet.outputs_energy_flows_w352, 0.002); end
  def test_outputs_energy_flows_x352; assert_in_epsilon(14.402814828685912, worksheet.outputs_energy_flows_x352, 0.002); end
  def test_outputs_energy_flows_y352; assert_in_epsilon(15.89862999269745, worksheet.outputs_energy_flows_y352, 0.002); end
  def test_outputs_energy_flows_z352; assert_in_epsilon(17.37262786513575, worksheet.outputs_energy_flows_z352, 0.002); end
  def test_outputs_energy_flows_aa352; assert_in_epsilon(18.816653649936075, worksheet.outputs_energy_flows_aa352, 0.002); end
  def test_outputs_energy_flows_ab352; assert_in_epsilon(20.217229462445335, worksheet.outputs_energy_flows_ab352, 0.002); end
  def test_outputs_energy_flows_ac352; assert_in_epsilon(21.55883416198664, worksheet.outputs_energy_flows_ac352, 0.002); end
  def test_outputs_energy_flows_ad352; assert_in_epsilon(22.8224865520653, worksheet.outputs_energy_flows_ad352, 0.002); end
  def test_outputs_energy_flows_c354; assert_equal("FF.03", worksheet.outputs_energy_flows_c354); end
  def test_outputs_energy_flows_d354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d354); end
  def test_outputs_energy_flows_e354; assert_equal("n/a", worksheet.outputs_energy_flows_e354); end
  def test_outputs_energy_flows_f354; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f354); end
  def test_outputs_energy_flows_i354; assert_equal("FF.03", worksheet.outputs_energy_flows_i354); end
  def test_outputs_energy_flows_j354; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j354); end
  def test_outputs_energy_flows_l354; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l354); end
  def test_outputs_energy_flows_m354; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m354); end
  def test_outputs_energy_flows_v354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v354||0), 0.002); end
  def test_outputs_energy_flows_w354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w354||0), 0.002); end
  def test_outputs_energy_flows_x354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x354||0), 0.002); end
  def test_outputs_energy_flows_y354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y354||0), 0.002); end
  def test_outputs_energy_flows_z354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z354||0), 0.002); end
  def test_outputs_energy_flows_aa354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa354||0), 0.002); end
  def test_outputs_energy_flows_ab354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab354||0), 0.002); end
  def test_outputs_energy_flows_ac354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac354||0), 0.002); end
  def test_outputs_energy_flows_ad354; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad354||0), 0.002); end
  def test_outputs_energy_flows_c356; assert_equal("FF.03", worksheet.outputs_energy_flows_c356); end
  def test_outputs_energy_flows_d356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d356); end
  def test_outputs_energy_flows_e356; assert_equal("n/a", worksheet.outputs_energy_flows_e356); end
  def test_outputs_energy_flows_f356; assert_equal("International passenger", worksheet.outputs_energy_flows_f356); end
  def test_outputs_energy_flows_i356; assert_equal("FF.03", worksheet.outputs_energy_flows_i356); end
  def test_outputs_energy_flows_j356; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j356); end
  def test_outputs_energy_flows_l356; assert_equal("International", worksheet.outputs_energy_flows_l356); end
  def test_outputs_energy_flows_v356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v356||0), 0.002); end
  def test_outputs_energy_flows_w356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w356||0), 0.002); end
  def test_outputs_energy_flows_x356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x356||0), 0.002); end
  def test_outputs_energy_flows_y356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y356||0), 0.002); end
  def test_outputs_energy_flows_z356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z356||0), 0.002); end
  def test_outputs_energy_flows_aa356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa356||0), 0.002); end
  def test_outputs_energy_flows_ab356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab356||0), 0.002); end
  def test_outputs_energy_flows_ac356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac356||0), 0.002); end
  def test_outputs_energy_flows_ad356; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad356||0), 0.002); end
  def test_outputs_energy_flows_c358; assert_equal("FF.03", worksheet.outputs_energy_flows_c358); end
  def test_outputs_energy_flows_d358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d358); end
  def test_outputs_energy_flows_e358; assert_equal("n/a", worksheet.outputs_energy_flows_e358); end
  def test_outputs_energy_flows_f358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f358); end
  def test_outputs_energy_flows_i358; assert_equal("FF.03", worksheet.outputs_energy_flows_i358); end
  def test_outputs_energy_flows_j358; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j358); end
  def test_outputs_energy_flows_l358; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l358); end
  def test_outputs_energy_flows_v358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v358||0), 0.002); end
  def test_outputs_energy_flows_w358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w358||0), 0.002); end
  def test_outputs_energy_flows_x358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x358||0), 0.002); end
  def test_outputs_energy_flows_y358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y358||0), 0.002); end
  def test_outputs_energy_flows_z358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z358||0), 0.002); end
  def test_outputs_energy_flows_aa358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa358||0), 0.002); end
  def test_outputs_energy_flows_ab358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab358||0), 0.002); end
  def test_outputs_energy_flows_ac358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac358||0), 0.002); end
  def test_outputs_energy_flows_ad358; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad358||0), 0.002); end
  def test_outputs_energy_flows_c360; assert_equal("FF.03", worksheet.outputs_energy_flows_c360); end
  def test_outputs_energy_flows_d360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d360); end
  def test_outputs_energy_flows_e360; assert_equal("n/a", worksheet.outputs_energy_flows_e360); end
  def test_outputs_energy_flows_f360; assert_equal("International freight", worksheet.outputs_energy_flows_f360); end
  def test_outputs_energy_flows_i360; assert_equal("FF.03", worksheet.outputs_energy_flows_i360); end
  def test_outputs_energy_flows_j360; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j360); end
  def test_outputs_energy_flows_l360; assert_equal("International freight", worksheet.outputs_energy_flows_l360); end
  def test_outputs_energy_flows_v360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v360||0), 0.002); end
  def test_outputs_energy_flows_w360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w360||0), 0.002); end
  def test_outputs_energy_flows_x360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x360||0), 0.002); end
  def test_outputs_energy_flows_y360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y360||0), 0.002); end
  def test_outputs_energy_flows_z360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z360||0), 0.002); end
  def test_outputs_energy_flows_aa360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa360||0), 0.002); end
  def test_outputs_energy_flows_ab360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab360||0), 0.002); end
  def test_outputs_energy_flows_ac360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac360||0), 0.002); end
  def test_outputs_energy_flows_ad360; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad360||0), 0.002); end
  def test_outputs_energy_flows_c362; assert_equal("FF.03", worksheet.outputs_energy_flows_c362); end
  def test_outputs_energy_flows_d362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d362); end
  def test_outputs_energy_flows_e362; assert_equal("n/a", worksheet.outputs_energy_flows_e362); end
  def test_outputs_energy_flows_f362; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_f362); end
  def test_outputs_energy_flows_i362; assert_equal("FF.03", worksheet.outputs_energy_flows_i362); end
  def test_outputs_energy_flows_j362; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j362); end
  def test_outputs_energy_flows_v362; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v362, 0.002); end
  def test_outputs_energy_flows_w362; assert_in_delta(0.5170803135809358, worksheet.outputs_energy_flows_w362, 0.002); end
  def test_outputs_energy_flows_x362; assert_in_delta(0.46421786944052257, worksheet.outputs_energy_flows_x362, 0.002); end
  def test_outputs_energy_flows_y362; assert_in_delta(0.40184634586544465, worksheet.outputs_energy_flows_y362, 0.002); end
  def test_outputs_energy_flows_z362; assert_in_delta(0.37657701535269633, worksheet.outputs_energy_flows_z362, 0.002); end
  def test_outputs_energy_flows_aa362; assert_in_delta(0.35596262098363934, worksheet.outputs_energy_flows_aa362, 0.002); end
  def test_outputs_energy_flows_ab362; assert_in_delta(0.368977292741753, worksheet.outputs_energy_flows_ab362, 0.002); end
  def test_outputs_energy_flows_ac362; assert_in_delta(0.39150013451752647, worksheet.outputs_energy_flows_ac362, 0.002); end
  def test_outputs_energy_flows_ad362; assert_in_delta(0.4408924458140994, worksheet.outputs_energy_flows_ad362, 0.002); end
  def test_outputs_energy_flows_c364; assert_equal("FF.03", worksheet.outputs_energy_flows_c364); end
  def test_outputs_energy_flows_d364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d364); end
  def test_outputs_energy_flows_e364; assert_equal("G.01", worksheet.outputs_energy_flows_e364); end
  def test_outputs_energy_flows_f364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f364); end
  def test_outputs_energy_flows_g364; assert_equal("GGR.tech", worksheet.outputs_energy_flows_g364); end
  def test_outputs_energy_flows_h364; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_h364); end
  def test_outputs_energy_flows_i364; assert_equal("FF.03", worksheet.outputs_energy_flows_i364); end
  def test_outputs_energy_flows_j364; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j364); end
  def test_outputs_energy_flows_v364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v364||0), 0.002); end
  def test_outputs_energy_flows_w364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w364||0), 0.002); end
  def test_outputs_energy_flows_x364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x364||0), 0.002); end
  def test_outputs_energy_flows_y364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y364||0), 0.002); end
  def test_outputs_energy_flows_z364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z364||0), 0.002); end
  def test_outputs_energy_flows_aa364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa364||0), 0.002); end
  def test_outputs_energy_flows_ab364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab364||0), 0.002); end
  def test_outputs_energy_flows_ac364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac364||0), 0.002); end
  def test_outputs_energy_flows_ad364; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad364||0), 0.002); end
  def test_outputs_energy_flows_c366; assert_equal("FF.03", worksheet.outputs_energy_flows_c366); end
  def test_outputs_energy_flows_d366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_d366); end
  def test_outputs_energy_flows_e366; assert_equal("n/a", worksheet.outputs_energy_flows_e366); end
  def test_outputs_energy_flows_f366; assert_equal("Agriculture including bioenergy production", worksheet.outputs_energy_flows_f366); end
  def test_outputs_energy_flows_g366; assert_equal("n/a", worksheet.outputs_energy_flows_g366); end
  def test_outputs_energy_flows_h366; assert_equal("Global Land / Food / Bioenergy / Sequestration", worksheet.outputs_energy_flows_h366); end
  def test_outputs_energy_flows_i366; assert_equal("FF.03", worksheet.outputs_energy_flows_i366); end
  def test_outputs_energy_flows_j366; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j366); end
  def test_outputs_energy_flows_v366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v366||0), 0.002); end
  def test_outputs_energy_flows_w366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w366||0), 0.002); end
  def test_outputs_energy_flows_x366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x366||0), 0.002); end
  def test_outputs_energy_flows_y366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y366||0), 0.002); end
  def test_outputs_energy_flows_z366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z366||0), 0.002); end
  def test_outputs_energy_flows_aa366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa366||0), 0.002); end
  def test_outputs_energy_flows_ab366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab366||0), 0.002); end
  def test_outputs_energy_flows_ac366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac366||0), 0.002); end
  def test_outputs_energy_flows_ad366; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad366||0), 0.002); end
  def test_outputs_energy_flows_c368; assert_equal("n/a", worksheet.outputs_energy_flows_c368); end
  def test_outputs_energy_flows_d368; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_d368); end
  def test_outputs_energy_flows_e368; assert_equal("L.01", worksheet.outputs_energy_flows_e368); end
  def test_outputs_energy_flows_f368; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_f368); end
  def test_outputs_energy_flows_v368; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v368, 0.002); end
  def test_outputs_energy_flows_w368; assert_in_delta(0.1426745617780609, worksheet.outputs_energy_flows_w368, 0.002); end
  def test_outputs_energy_flows_x368; assert_in_delta(0.15114099832298616, worksheet.outputs_energy_flows_x368, 0.002); end
  def test_outputs_energy_flows_y368; assert_in_delta(0.15411271647076943, worksheet.outputs_energy_flows_y368, 0.002); end
  def test_outputs_energy_flows_z368; assert_in_delta(0.20713113833126168, worksheet.outputs_energy_flows_z368, 0.002); end
  def test_outputs_energy_flows_aa368; assert_in_delta(0.24281148579735717, worksheet.outputs_energy_flows_aa368, 0.002); end
  def test_outputs_energy_flows_ab368; assert_in_delta(0.26672520660221444, worksheet.outputs_energy_flows_ab368, 0.002); end
  def test_outputs_energy_flows_ac368; assert_in_delta(0.30151218104262567, worksheet.outputs_energy_flows_ac368, 0.002); end
  def test_outputs_energy_flows_ad368; assert_in_delta(0.3261688176825954, worksheet.outputs_energy_flows_ad368, 0.002); end
  def test_outputs_energy_flows_c370; assert_equal("HY.01", worksheet.outputs_energy_flows_c370); end
  def test_outputs_energy_flows_d370; assert_equal("Global H2", worksheet.outputs_energy_flows_d370); end
  def test_outputs_energy_flows_e370; assert_equal("n/a", worksheet.outputs_energy_flows_e370); end
  def test_outputs_energy_flows_f370; assert_equal("Domestic passenger", worksheet.outputs_energy_flows_f370); end
  def test_outputs_energy_flows_i370; assert_equal("HY.01", worksheet.outputs_energy_flows_i370); end
  def test_outputs_energy_flows_j370; assert_equal("Global H2", worksheet.outputs_energy_flows_j370); end
  def test_outputs_energy_flows_l370; assert_equal("Urban passenger", worksheet.outputs_energy_flows_l370); end
  def test_outputs_energy_flows_m370; assert_equal("Rural passenger", worksheet.outputs_energy_flows_m370); end
  def test_outputs_energy_flows_v370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v370||0), 0.002); end
  def test_outputs_energy_flows_w370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w370||0), 0.002); end
  def test_outputs_energy_flows_x370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x370||0), 0.002); end
  def test_outputs_energy_flows_y370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y370||0), 0.002); end
  def test_outputs_energy_flows_z370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z370||0), 0.002); end
  def test_outputs_energy_flows_aa370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa370||0), 0.002); end
  def test_outputs_energy_flows_ab370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab370||0), 0.002); end
  def test_outputs_energy_flows_ac370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac370||0), 0.002); end
  def test_outputs_energy_flows_ad370; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad370||0), 0.002); end
  def test_outputs_energy_flows_c372; assert_equal("HY.01", worksheet.outputs_energy_flows_c372); end
  def test_outputs_energy_flows_d372; assert_equal("Global H2", worksheet.outputs_energy_flows_d372); end
  def test_outputs_energy_flows_e372; assert_equal("n/a", worksheet.outputs_energy_flows_e372); end
  def test_outputs_energy_flows_f372; assert_equal("International passenger", worksheet.outputs_energy_flows_f372); end
  def test_outputs_energy_flows_i372; assert_equal("HY.01", worksheet.outputs_energy_flows_i372); end
  def test_outputs_energy_flows_j372; assert_equal("Global H2", worksheet.outputs_energy_flows_j372); end
  def test_outputs_energy_flows_l372; assert_equal("International", worksheet.outputs_energy_flows_l372); end
  def test_outputs_energy_flows_v372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v372||0), 0.002); end
  def test_outputs_energy_flows_w372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w372||0), 0.002); end
  def test_outputs_energy_flows_x372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x372||0), 0.002); end
  def test_outputs_energy_flows_y372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y372||0), 0.002); end
  def test_outputs_energy_flows_z372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z372||0), 0.002); end
  def test_outputs_energy_flows_aa372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa372||0), 0.002); end
  def test_outputs_energy_flows_ab372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab372||0), 0.002); end
  def test_outputs_energy_flows_ac372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac372||0), 0.002); end
  def test_outputs_energy_flows_ad372; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad372||0), 0.002); end
  def test_outputs_energy_flows_c374; assert_equal("HY.01", worksheet.outputs_energy_flows_c374); end
  def test_outputs_energy_flows_d374; assert_equal("Global H2", worksheet.outputs_energy_flows_d374); end
  def test_outputs_energy_flows_e374; assert_equal("n/a", worksheet.outputs_energy_flows_e374); end
  def test_outputs_energy_flows_f374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_f374); end
  def test_outputs_energy_flows_i374; assert_equal("HY.01", worksheet.outputs_energy_flows_i374); end
  def test_outputs_energy_flows_j374; assert_equal("Global H2", worksheet.outputs_energy_flows_j374); end
  def test_outputs_energy_flows_l374; assert_equal("Domestic freight", worksheet.outputs_energy_flows_l374); end
  def test_outputs_energy_flows_v374; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v374, 0.002); end
  def test_outputs_energy_flows_w374; assert_in_delta(0.13673660179613994, worksheet.outputs_energy_flows_w374, 0.002); end
  def test_outputs_energy_flows_x374; assert_in_delta(0.13014413741861633, worksheet.outputs_energy_flows_x374, 0.002); end
  def test_outputs_energy_flows_y374; assert_in_delta(0.11748706495780652, worksheet.outputs_energy_flows_y374, 0.002); end
  def test_outputs_energy_flows_z374; assert_in_delta(0.09691029086630683, worksheet.outputs_energy_flows_z374, 0.002); end
  def test_outputs_energy_flows_aa374; assert_in_delta(0.07308614250226016, worksheet.outputs_energy_flows_aa374, 0.002); end
  def test_outputs_energy_flows_ab374; assert_in_delta(0.047776381516500925, worksheet.outputs_energy_flows_ab374, 0.002); end
  def test_outputs_energy_flows_ac374; assert_in_delta(0.02318321948529925, worksheet.outputs_energy_flows_ac374, 0.002); end
  def test_outputs_energy_flows_ad374; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad374||0), 0.002); end
  def test_outputs_energy_flows_c376; assert_equal("HY.01", worksheet.outputs_energy_flows_c376); end
  def test_outputs_energy_flows_d376; assert_equal("Global H2", worksheet.outputs_energy_flows_d376); end
  def test_outputs_energy_flows_e376; assert_equal("n/a", worksheet.outputs_energy_flows_e376); end
  def test_outputs_energy_flows_f376; assert_equal("International freight", worksheet.outputs_energy_flows_f376); end
  def test_outputs_energy_flows_i376; assert_equal("HY.01", worksheet.outputs_energy_flows_i376); end
  def test_outputs_energy_flows_j376; assert_equal("Global H2", worksheet.outputs_energy_flows_j376); end
  def test_outputs_energy_flows_l376; assert_equal("International freight", worksheet.outputs_energy_flows_l376); end
  def test_outputs_energy_flows_v376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v376||0), 0.002); end
  def test_outputs_energy_flows_w376; assert_in_delta(0.27148469839933564, worksheet.outputs_energy_flows_w376, 0.002); end
  def test_outputs_energy_flows_x376; assert_in_delta(0.25786463178875374, worksheet.outputs_energy_flows_x376, 0.002); end
  def test_outputs_energy_flows_y376; assert_in_delta(0.23814695113311202, worksheet.outputs_energy_flows_y376, 0.002); end
  def test_outputs_energy_flows_z376; assert_in_delta(0.20608347789146853, worksheet.outputs_energy_flows_z376, 0.002); end
  def test_outputs_energy_flows_aa376; assert_in_delta(0.15532444067224652, worksheet.outputs_energy_flows_aa376, 0.002); end
  def test_outputs_energy_flows_ab376; assert_in_delta(0.10151873323541588, worksheet.outputs_energy_flows_ab376, 0.002); end
  def test_outputs_energy_flows_ac376; assert_in_delta(0.04976819563753016, worksheet.outputs_energy_flows_ac376, 0.002); end
  def test_outputs_energy_flows_ad376; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad376||0), 0.002); end
  def test_outputs_energy_flows_c378; assert_equal("H.01", worksheet.outputs_energy_flows_c378); end
  def test_outputs_energy_flows_d378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d378); end
  def test_outputs_energy_flows_e378; assert_equal("n/a", worksheet.outputs_energy_flows_e378); end
  def test_outputs_energy_flows_f378; assert_equal("Domestic heating, cooling and hot water", worksheet.outputs_energy_flows_f378); end
  def test_outputs_energy_flows_i378; assert_equal("H.01", worksheet.outputs_energy_flows_i378); end
  def test_outputs_energy_flows_j378; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j378); end
  def test_outputs_energy_flows_k378; assert_equal("Global buildings", worksheet.outputs_energy_flows_k378); end
  def test_outputs_energy_flows_v378; assert_in_epsilon(-8.19303474712924, worksheet.outputs_energy_flows_v378, 0.002); end
  def test_outputs_energy_flows_w378; assert_in_epsilon(-8.409002243573, worksheet.outputs_energy_flows_w378, 0.002); end
  def test_outputs_energy_flows_x378; assert_in_epsilon(-8.86755885838608, worksheet.outputs_energy_flows_x378, 0.002); end
  def test_outputs_energy_flows_y378; assert_in_epsilon(-9.456577430695782, worksheet.outputs_energy_flows_y378, 0.002); end
  def test_outputs_energy_flows_z378; assert_in_epsilon(-10.009239325576337, worksheet.outputs_energy_flows_z378, 0.002); end
  def test_outputs_energy_flows_aa378; assert_in_epsilon(-10.508128661329131, worksheet.outputs_energy_flows_aa378, 0.002); end
  def test_outputs_energy_flows_ab378; assert_in_epsilon(-10.997379922562173, worksheet.outputs_energy_flows_ab378, 0.002); end
  def test_outputs_energy_flows_ac378; assert_in_epsilon(-11.43658460645081, worksheet.outputs_energy_flows_ac378, 0.002); end
  def test_outputs_energy_flows_ad378; assert_in_epsilon(-11.859664891542167, worksheet.outputs_energy_flows_ad378, 0.002); end
  def test_outputs_energy_flows_c380; assert_equal("H.01", worksheet.outputs_energy_flows_c380); end
  def test_outputs_energy_flows_d380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d380); end
  def test_outputs_energy_flows_e380; assert_equal("n/a", worksheet.outputs_energy_flows_e380); end
  def test_outputs_energy_flows_f380; assert_equal("Domestic cooking", worksheet.outputs_energy_flows_f380); end
  def test_outputs_energy_flows_i380; assert_equal("H.01", worksheet.outputs_energy_flows_i380); end
  def test_outputs_energy_flows_j380; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j380); end
  def test_outputs_energy_flows_k380; assert_equal("Urban cooking", worksheet.outputs_energy_flows_k380); end
  def test_outputs_energy_flows_l380; assert_equal("Rural cooking", worksheet.outputs_energy_flows_l380); end
  def test_outputs_energy_flows_v380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v380||0), 0.002); end
  def test_outputs_energy_flows_w380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w380||0), 0.002); end
  def test_outputs_energy_flows_x380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x380||0), 0.002); end
  def test_outputs_energy_flows_y380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y380||0), 0.002); end
  def test_outputs_energy_flows_z380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z380||0), 0.002); end
  def test_outputs_energy_flows_aa380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa380||0), 0.002); end
  def test_outputs_energy_flows_ab380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab380||0), 0.002); end
  def test_outputs_energy_flows_ac380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac380||0), 0.002); end
  def test_outputs_energy_flows_ad380; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad380||0), 0.002); end
  def test_outputs_energy_flows_c382; assert_equal("H.01", worksheet.outputs_energy_flows_c382); end
  def test_outputs_energy_flows_d382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d382); end
  def test_outputs_energy_flows_e382; assert_equal("n/a", worksheet.outputs_energy_flows_e382); end
  def test_outputs_energy_flows_f382; assert_equal("Non domestic", worksheet.outputs_energy_flows_f382); end
  def test_outputs_energy_flows_i382; assert_equal("H.01", worksheet.outputs_energy_flows_i382); end
  def test_outputs_energy_flows_j382; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j382); end
  def test_outputs_energy_flows_k382; assert_equal("Non-residential", worksheet.outputs_energy_flows_k382); end
  def test_outputs_energy_flows_v382; assert_in_epsilon(2.147932299784144, worksheet.outputs_energy_flows_v382, 0.002); end
  def test_outputs_energy_flows_w382; assert_in_epsilon(2.0082805171937688, worksheet.outputs_energy_flows_w382, 0.002); end
  def test_outputs_energy_flows_x382; assert_in_epsilon(1.964829647426932, worksheet.outputs_energy_flows_x382, 0.002); end
  def test_outputs_energy_flows_y382; assert_in_epsilon(1.8779413113083239, worksheet.outputs_energy_flows_y382, 0.002); end
  def test_outputs_energy_flows_z382; assert_in_epsilon(1.7501273721371635, worksheet.outputs_energy_flows_z382, 0.002); end
  def test_outputs_energy_flows_aa382; assert_in_epsilon(1.585027193165309, worksheet.outputs_energy_flows_aa382, 0.002); end
  def test_outputs_energy_flows_ab382; assert_in_epsilon(1.386324008694052, worksheet.outputs_energy_flows_ab382, 0.002); end
  def test_outputs_energy_flows_ac382; assert_in_epsilon(1.1579885047262104, worksheet.outputs_energy_flows_ac382, 0.002); end
  def test_outputs_energy_flows_ad382; assert_in_delta(0.9046876722003647, worksheet.outputs_energy_flows_ad382, 0.002); end
  def test_outputs_energy_flows_c384; assert_equal("H.01", worksheet.outputs_energy_flows_c384); end
  def test_outputs_energy_flows_d384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d384); end
  def test_outputs_energy_flows_e384; assert_equal("n/a", worksheet.outputs_energy_flows_e384); end
  def test_outputs_energy_flows_f384; assert_equal("Steel", worksheet.outputs_energy_flows_f384); end
  def test_outputs_energy_flows_i384; assert_equal("H.01", worksheet.outputs_energy_flows_i384); end
  def test_outputs_energy_flows_j384; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j384); end
  def test_outputs_energy_flows_v384; assert_in_delta(0.803408652648, worksheet.outputs_energy_flows_v384, 0.002); end
  def test_outputs_energy_flows_w384; assert_in_delta(0.8325720885411346, worksheet.outputs_energy_flows_w384, 0.002); end
  def test_outputs_energy_flows_x384; assert_in_delta(0.8544767157813924, worksheet.outputs_energy_flows_x384, 0.002); end
  def test_outputs_energy_flows_y384; assert_in_delta(0.9144296260766559, worksheet.outputs_energy_flows_y384, 0.002); end
  def test_outputs_energy_flows_z384; assert_in_delta(0.9732688759834166, worksheet.outputs_energy_flows_z384, 0.002); end
  def test_outputs_energy_flows_aa384; assert_in_epsilon(1.0267767910094974, worksheet.outputs_energy_flows_aa384, 0.002); end
  def test_outputs_energy_flows_ab384; assert_in_epsilon(1.0844582812177466, worksheet.outputs_energy_flows_ab384, 0.002); end
  def test_outputs_energy_flows_ac384; assert_in_epsilon(1.1465359376131603, worksheet.outputs_energy_flows_ac384, 0.002); end
  def test_outputs_energy_flows_ad384; assert_in_epsilon(1.2032413868571104, worksheet.outputs_energy_flows_ad384, 0.002); end
  def test_outputs_energy_flows_c386; assert_equal("H.01", worksheet.outputs_energy_flows_c386); end
  def test_outputs_energy_flows_d386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d386); end
  def test_outputs_energy_flows_e386; assert_equal("n/a", worksheet.outputs_energy_flows_e386); end
  def test_outputs_energy_flows_f386; assert_equal("Aluminium", worksheet.outputs_energy_flows_f386); end
  def test_outputs_energy_flows_i386; assert_equal("H.01", worksheet.outputs_energy_flows_i386); end
  def test_outputs_energy_flows_j386; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j386); end
  def test_outputs_energy_flows_v386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v386||0), 0.002); end
  def test_outputs_energy_flows_w386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w386||0), 0.002); end
  def test_outputs_energy_flows_x386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x386||0), 0.002); end
  def test_outputs_energy_flows_y386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y386||0), 0.002); end
  def test_outputs_energy_flows_z386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z386||0), 0.002); end
  def test_outputs_energy_flows_aa386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa386||0), 0.002); end
  def test_outputs_energy_flows_ab386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab386||0), 0.002); end
  def test_outputs_energy_flows_ac386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac386||0), 0.002); end
  def test_outputs_energy_flows_ad386; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad386||0), 0.002); end
  def test_outputs_energy_flows_c388; assert_equal("H.01", worksheet.outputs_energy_flows_c388); end
  def test_outputs_energy_flows_d388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d388); end
  def test_outputs_energy_flows_e388; assert_equal("n/a", worksheet.outputs_energy_flows_e388); end
  def test_outputs_energy_flows_f388; assert_equal("Cement", worksheet.outputs_energy_flows_f388); end
  def test_outputs_energy_flows_i388; assert_equal("H.01", worksheet.outputs_energy_flows_i388); end
  def test_outputs_energy_flows_j388; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j388); end
  def test_outputs_energy_flows_v388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v388||0), 0.002); end
  def test_outputs_energy_flows_w388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w388||0), 0.002); end
  def test_outputs_energy_flows_x388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x388||0), 0.002); end
  def test_outputs_energy_flows_y388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y388||0), 0.002); end
  def test_outputs_energy_flows_z388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z388||0), 0.002); end
  def test_outputs_energy_flows_aa388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa388||0), 0.002); end
  def test_outputs_energy_flows_ab388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab388||0), 0.002); end
  def test_outputs_energy_flows_ac388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac388||0), 0.002); end
  def test_outputs_energy_flows_ad388; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad388||0), 0.002); end
  def test_outputs_energy_flows_c390; assert_equal("H.01", worksheet.outputs_energy_flows_c390); end
  def test_outputs_energy_flows_d390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d390); end
  def test_outputs_energy_flows_e390; assert_equal("n/a", worksheet.outputs_energy_flows_e390); end
  def test_outputs_energy_flows_f390; assert_equal("Pulp and paper", worksheet.outputs_energy_flows_f390); end
  def test_outputs_energy_flows_i390; assert_equal("H.01", worksheet.outputs_energy_flows_i390); end
  def test_outputs_energy_flows_j390; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j390); end
  def test_outputs_energy_flows_v390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v390||0), 0.002); end
  def test_outputs_energy_flows_w390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w390||0), 0.002); end
  def test_outputs_energy_flows_x390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x390||0), 0.002); end
  def test_outputs_energy_flows_y390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y390||0), 0.002); end
  def test_outputs_energy_flows_z390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z390||0), 0.002); end
  def test_outputs_energy_flows_aa390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa390||0), 0.002); end
  def test_outputs_energy_flows_ab390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab390||0), 0.002); end
  def test_outputs_energy_flows_ac390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac390||0), 0.002); end
  def test_outputs_energy_flows_ad390; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad390||0), 0.002); end
  def test_outputs_energy_flows_c392; assert_equal("H.01", worksheet.outputs_energy_flows_c392); end
  def test_outputs_energy_flows_d392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_d392); end
  def test_outputs_energy_flows_e392; assert_equal("n/a", worksheet.outputs_energy_flows_e392); end
  def test_outputs_energy_flows_f392; assert_equal("Chemicals", worksheet.outputs_energy_flows_f392); end
  def test_outputs_energy_flows_i392; assert_equal("H.01", worksheet.outputs_energy_flows_i392); end
  def test_outputs_energy_flows_j392; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j392); end
  def test_outputs_energy_flows_v392; assert_in_epsilon(1.970138431785092, worksheet.outputs_energy_flows_v392, 0.002); end
  def test_outputs_energy_flows_w392; assert_in_epsilon(2.0871897246321542, worksheet.outputs_energy_flows_w392, 0.002); end
  def test_outputs_energy_flows_x392; assert_in_epsilon(2.2299681031276712, worksheet.outputs_energy_flows_x392, 0.002); end
  def test_outputs_energy_flows_y392; assert_in_epsilon(2.5144073424567264, worksheet.outputs_energy_flows_y392, 0.002); end
  def test_outputs_energy_flows_z392; assert_in_epsilon(2.8121670760102973, worksheet.outputs_energy_flows_z392, 0.002); end
  def test_outputs_energy_flows_aa392; assert_in_epsilon(3.107704116733424, worksheet.outputs_energy_flows_aa392, 0.002); end
  def test_outputs_energy_flows_ab392; assert_in_epsilon(3.438992823236588, worksheet.outputs_energy_flows_ab392, 0.002); end
  def test_outputs_energy_flows_ac392; assert_in_epsilon(3.7687700142343505, worksheet.outputs_energy_flows_ac392, 0.002); end
  def test_outputs_energy_flows_ad392; assert_in_epsilon(4.136509837502295, worksheet.outputs_energy_flows_ad392, 0.002); end
  def test_outputs_energy_flows_c400; assert_equal("Vector code energy is taken from", worksheet.outputs_energy_flows_c400); end
  def test_outputs_energy_flows_d400; assert_equal("TAKEN FROM", worksheet.outputs_energy_flows_d400); end
  def test_outputs_energy_flows_e400; assert_equal("Vector code energy is taken to", worksheet.outputs_energy_flows_e400); end
  def test_outputs_energy_flows_f400; assert_equal("TAKEN TO", worksheet.outputs_energy_flows_f400); end
  def test_outputs_energy_flows_g400; assert_equal("Technology code", worksheet.outputs_energy_flows_g400); end
  def test_outputs_energy_flows_h400; assert_equal("Technology description", worksheet.outputs_energy_flows_h400); end
  def test_outputs_energy_flows_i400; assert_equal("Energy code", worksheet.outputs_energy_flows_i400); end
  def test_outputs_energy_flows_j400; assert_equal("Description", worksheet.outputs_energy_flows_j400); end
  def test_outputs_energy_flows_k400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_k400); end
  def test_outputs_energy_flows_l400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_l400); end
  def test_outputs_energy_flows_m400; assert_equal("Other name of other lookup", worksheet.outputs_energy_flows_m400); end
  def test_outputs_energy_flows_v400; assert_in_epsilon(2011.0, worksheet.outputs_energy_flows_v400, 0.002); end
  def test_outputs_energy_flows_w400; assert_in_epsilon(2015.0, worksheet.outputs_energy_flows_w400, 0.002); end
  def test_outputs_energy_flows_x400; assert_in_epsilon(2020.0, worksheet.outputs_energy_flows_x400, 0.002); end
  def test_outputs_energy_flows_y400; assert_in_epsilon(2025.0, worksheet.outputs_energy_flows_y400, 0.002); end
  def test_outputs_energy_flows_z400; assert_in_epsilon(2030.0, worksheet.outputs_energy_flows_z400, 0.002); end
  def test_outputs_energy_flows_aa400; assert_in_epsilon(2035.0, worksheet.outputs_energy_flows_aa400, 0.002); end
  def test_outputs_energy_flows_ab400; assert_in_epsilon(2040.0, worksheet.outputs_energy_flows_ab400, 0.002); end
  def test_outputs_energy_flows_ac400; assert_in_epsilon(2045.0, worksheet.outputs_energy_flows_ac400, 0.002); end
  def test_outputs_energy_flows_ad400; assert_in_epsilon(2050.0, worksheet.outputs_energy_flows_ad400, 0.002); end
  def test_outputs_energy_flows_d402; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d402); end
  def test_outputs_energy_flows_f402; assert_equal("Solid", worksheet.outputs_energy_flows_f402); end
  def test_outputs_energy_flows_i402; assert_equal("G.Q.01", worksheet.outputs_energy_flows_i402); end
  def test_outputs_energy_flows_j402; assert_equal("Global Coal reserves ", worksheet.outputs_energy_flows_j402); end
  def test_outputs_energy_flows_v402; assert_in_epsilon(139.70058677118658, worksheet.outputs_energy_flows_v402, 0.002); end
  def test_outputs_energy_flows_w402; assert_in_epsilon(140.19428483897497, worksheet.outputs_energy_flows_w402, 0.002); end
  def test_outputs_energy_flows_x402; assert_in_epsilon(146.2790483574302, worksheet.outputs_energy_flows_x402, 0.002); end
  def test_outputs_energy_flows_y402; assert_in_epsilon(161.0862805897641, worksheet.outputs_energy_flows_y402, 0.002); end
  def test_outputs_energy_flows_z402; assert_in_epsilon(171.2716440543252, worksheet.outputs_energy_flows_z402, 0.002); end
  def test_outputs_energy_flows_aa402; assert_in_epsilon(178.78694537646112, worksheet.outputs_energy_flows_aa402, 0.002); end
  def test_outputs_energy_flows_ab402; assert_in_epsilon(181.49684259884123, worksheet.outputs_energy_flows_ab402, 0.002); end
  def test_outputs_energy_flows_ac402; assert_in_epsilon(174.02179002978718, worksheet.outputs_energy_flows_ac402, 0.002); end
  def test_outputs_energy_flows_ad402; assert_in_epsilon(169.09101620996432, worksheet.outputs_energy_flows_ad402, 0.002); end
  def test_outputs_energy_flows_d404; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d404); end
  def test_outputs_energy_flows_f404; assert_equal("Solid", worksheet.outputs_energy_flows_f404); end
  def test_outputs_energy_flows_i404; assert_equal("G.C.01", worksheet.outputs_energy_flows_i404); end
  def test_outputs_energy_flows_j404; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j404); end
  def test_outputs_energy_flows_k404; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k404); end
  def test_outputs_energy_flows_l404; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l404); end
  def test_outputs_energy_flows_n404; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n404); end
  def test_outputs_energy_flows_o404; assert_equal("Forest", worksheet.outputs_energy_flows_o404); end
  def test_outputs_energy_flows_p404; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p404); end
  def test_outputs_energy_flows_q404; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q404); end
  def test_outputs_energy_flows_r404; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r404); end
  def test_outputs_energy_flows_s404; assert_equal("industrial.municipal.non.renewable.waste", worksheet.outputs_energy_flows_s404); end
  def test_outputs_energy_flows_t404; assert_equal("Global Non renewable waste", worksheet.outputs_energy_flows_t404); end
  def test_outputs_energy_flows_v404; assert_in_epsilon(47.99991800000001, worksheet.outputs_energy_flows_v404, 0.002); end
  def test_outputs_energy_flows_w404; assert_in_epsilon(46.36274268197842, worksheet.outputs_energy_flows_w404, 0.002); end
  def test_outputs_energy_flows_x404; assert_in_epsilon(44.8831542479292, worksheet.outputs_energy_flows_x404, 0.002); end
  def test_outputs_energy_flows_y404; assert_in_epsilon(43.41882000054031, worksheet.outputs_energy_flows_y404, 0.002); end
  def test_outputs_energy_flows_z404; assert_in_epsilon(41.99041397134405, worksheet.outputs_energy_flows_z404, 0.002); end
  def test_outputs_energy_flows_aa404; assert_in_epsilon(40.810480390778416, worksheet.outputs_energy_flows_aa404, 0.002); end
  def test_outputs_energy_flows_ab404; assert_in_epsilon(39.839749607380114, worksheet.outputs_energy_flows_ab404, 0.002); end
  def test_outputs_energy_flows_ac404; assert_in_epsilon(39.69694107757059, worksheet.outputs_energy_flows_ac404, 0.002); end
  def test_outputs_energy_flows_ad404; assert_in_epsilon(39.8583976690951, worksheet.outputs_energy_flows_ad404, 0.002); end
  def test_outputs_energy_flows_d406; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d406); end
  def test_outputs_energy_flows_f406; assert_equal("Liquid", worksheet.outputs_energy_flows_f406); end
  def test_outputs_energy_flows_i406; assert_equal("G.Q.02", worksheet.outputs_energy_flows_i406); end
  def test_outputs_energy_flows_j406; assert_equal("Global Oil reserves ", worksheet.outputs_energy_flows_j406); end
  def test_outputs_energy_flows_v406; assert_in_epsilon(151.78392090250395, worksheet.outputs_energy_flows_v406, 0.002); end
  def test_outputs_energy_flows_w406; assert_in_epsilon(171.68248686543805, worksheet.outputs_energy_flows_w406, 0.002); end
  def test_outputs_energy_flows_x406; assert_in_epsilon(195.84560346789317, worksheet.outputs_energy_flows_x406, 0.002); end
  def test_outputs_energy_flows_y406; assert_in_epsilon(209.68723065429134, worksheet.outputs_energy_flows_y406, 0.002); end
  def test_outputs_energy_flows_z406; assert_in_epsilon(225.73165763723034, worksheet.outputs_energy_flows_z406, 0.002); end
  def test_outputs_energy_flows_aa406; assert_in_epsilon(238.02906397277778, worksheet.outputs_energy_flows_aa406, 0.002); end
  def test_outputs_energy_flows_ab406; assert_in_epsilon(249.02004982955543, worksheet.outputs_energy_flows_ab406, 0.002); end
  def test_outputs_energy_flows_ac406; assert_in_epsilon(260.4077668958438, worksheet.outputs_energy_flows_ac406, 0.002); end
  def test_outputs_energy_flows_ad406; assert_in_epsilon(270.2843366144481, worksheet.outputs_energy_flows_ad406, 0.002); end
  def test_outputs_energy_flows_d408; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d408); end
  def test_outputs_energy_flows_f408; assert_equal("Liquid", worksheet.outputs_energy_flows_f408); end
  def test_outputs_energy_flows_i408; assert_equal("G.C.02", worksheet.outputs_energy_flows_i408); end
  def test_outputs_energy_flows_j408; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j408); end
  def test_outputs_energy_flows_n408; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n408); end
  def test_outputs_energy_flows_o408; assert_equal("Forest", worksheet.outputs_energy_flows_o408); end
  def test_outputs_energy_flows_p408; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p408); end
  def test_outputs_energy_flows_q408; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q408); end
  def test_outputs_energy_flows_r408; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r408); end
  def test_outputs_energy_flows_v408; assert_in_epsilon(3.8000000000000003, worksheet.outputs_energy_flows_v408, 0.002); end
  def test_outputs_energy_flows_w408; assert_in_epsilon(3.9683672113723922, worksheet.outputs_energy_flows_w408, 0.002); end
  def test_outputs_energy_flows_x408; assert_in_epsilon(4.420238356203382, worksheet.outputs_energy_flows_x408, 0.002); end
  def test_outputs_energy_flows_y408; assert_in_epsilon(4.884230389644897, worksheet.outputs_energy_flows_y408, 0.002); end
  def test_outputs_energy_flows_z408; assert_in_epsilon(5.360343311696939, worksheet.outputs_energy_flows_z408, 0.002); end
  def test_outputs_energy_flows_aa408; assert_in_epsilon(5.848577122359506, worksheet.outputs_energy_flows_aa408, 0.002); end
  def test_outputs_energy_flows_ab408; assert_in_epsilon(6.348931821632599, worksheet.outputs_energy_flows_ab408, 0.002); end
  def test_outputs_energy_flows_ac408; assert_in_epsilon(6.861407409516217, worksheet.outputs_energy_flows_ac408, 0.002); end
  def test_outputs_energy_flows_ad408; assert_in_epsilon(7.386003886010363, worksheet.outputs_energy_flows_ad408, 0.002); end
  def test_outputs_energy_flows_d410; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d410); end
  def test_outputs_energy_flows_f410; assert_equal("Gas", worksheet.outputs_energy_flows_f410); end
  def test_outputs_energy_flows_i410; assert_equal("G.Q.03", worksheet.outputs_energy_flows_i410); end
  def test_outputs_energy_flows_j410; assert_equal("Global Gas reserves ", worksheet.outputs_energy_flows_j410); end
  def test_outputs_energy_flows_v410; assert_in_epsilon(92.05742643190749, worksheet.outputs_energy_flows_v410, 0.002); end
  def test_outputs_energy_flows_w410; assert_in_epsilon(95.61257611439555, worksheet.outputs_energy_flows_w410, 0.002); end
  def test_outputs_energy_flows_x410; assert_in_epsilon(100.91605111767933, worksheet.outputs_energy_flows_x410, 0.002); end
  def test_outputs_energy_flows_y410; assert_in_epsilon(108.55977982823282, worksheet.outputs_energy_flows_y410, 0.002); end
  def test_outputs_energy_flows_z410; assert_in_epsilon(116.24767052590306, worksheet.outputs_energy_flows_z410, 0.002); end
  def test_outputs_energy_flows_aa410; assert_in_epsilon(124.10003289656152, worksheet.outputs_energy_flows_aa410, 0.002); end
  def test_outputs_energy_flows_ab410; assert_in_epsilon(132.88628721640572, worksheet.outputs_energy_flows_ab410, 0.002); end
  def test_outputs_energy_flows_ac410; assert_in_epsilon(140.53062168469916, worksheet.outputs_energy_flows_ac410, 0.002); end
  def test_outputs_energy_flows_ad410; assert_in_epsilon(149.37047543060385, worksheet.outputs_energy_flows_ad410, 0.002); end
  def test_outputs_energy_flows_d412; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d412); end
  def test_outputs_energy_flows_f412; assert_equal("Gas", worksheet.outputs_energy_flows_f412); end
  def test_outputs_energy_flows_i412; assert_equal("G.C.03", worksheet.outputs_energy_flows_i412); end
  def test_outputs_energy_flows_j412; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j412); end
  def test_outputs_energy_flows_n412; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n412); end
  def test_outputs_energy_flows_o412; assert_equal("Forest", worksheet.outputs_energy_flows_o412); end
  def test_outputs_energy_flows_p412; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p412); end
  def test_outputs_energy_flows_q412; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q412); end
  def test_outputs_energy_flows_r412; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r412); end
  def test_outputs_energy_flows_v412; assert_in_epsilon(3.0046012974969964, worksheet.outputs_energy_flows_v412, 0.002); end
  def test_outputs_energy_flows_w412; assert_in_epsilon(3.188237310308969, worksheet.outputs_energy_flows_w412, 0.002); end
  def test_outputs_energy_flows_x412; assert_in_epsilon(3.4341874736874365, worksheet.outputs_energy_flows_x412, 0.002); end
  def test_outputs_energy_flows_y412; assert_in_epsilon(3.684196774111682, worksheet.outputs_energy_flows_y412, 0.002); end
  def test_outputs_energy_flows_z412; assert_in_epsilon(3.959223467847431, worksheet.outputs_energy_flows_z412, 0.002); end
  def test_outputs_energy_flows_aa412; assert_in_epsilon(4.278035343170729, worksheet.outputs_energy_flows_aa412, 0.002); end
  def test_outputs_energy_flows_ab412; assert_in_epsilon(4.5997674972549385, worksheet.outputs_energy_flows_ab412, 0.002); end
  def test_outputs_energy_flows_ac412; assert_in_epsilon(4.873027806979259, worksheet.outputs_energy_flows_ac412, 0.002); end
  def test_outputs_energy_flows_ad412; assert_in_epsilon(5.112564352678508, worksheet.outputs_energy_flows_ad412, 0.002); end
  def test_outputs_energy_flows_d414; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d414); end
  def test_outputs_energy_flows_f414; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f414); end
  def test_outputs_energy_flows_i414; assert_equal("G.L.01", worksheet.outputs_energy_flows_i414); end
  def test_outputs_energy_flows_j414; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j414); end
  def test_outputs_energy_flows_n414; assert_equal("Bioenergy from waste", worksheet.outputs_energy_flows_n414); end
  def test_outputs_energy_flows_o414; assert_equal("Forest", worksheet.outputs_energy_flows_o414); end
  def test_outputs_energy_flows_p414; assert_equal("Global Native forest", worksheet.outputs_energy_flows_p414); end
  def test_outputs_energy_flows_q414; assert_equal("Arable.bio", worksheet.outputs_energy_flows_q414); end
  def test_outputs_energy_flows_r414; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_r414); end
  def test_outputs_energy_flows_v414; assert_in_epsilon(3.992862237113767, worksheet.outputs_energy_flows_v414, 0.002); end
  def test_outputs_energy_flows_w414; assert_in_epsilon(4.017653480556572, worksheet.outputs_energy_flows_w414, 0.002); end
  def test_outputs_energy_flows_x414; assert_in_epsilon(4.170697178602868, worksheet.outputs_energy_flows_x414, 0.002); end
  def test_outputs_energy_flows_y414; assert_in_epsilon(4.291620148238289, worksheet.outputs_energy_flows_y414, 0.002); end
  def test_outputs_energy_flows_z414; assert_in_epsilon(4.390984048267693, worksheet.outputs_energy_flows_z414, 0.002); end
  def test_outputs_energy_flows_aa414; assert_in_epsilon(4.477559211646312, worksheet.outputs_energy_flows_aa414, 0.002); end
  def test_outputs_energy_flows_ab414; assert_in_epsilon(4.530342108145529, worksheet.outputs_energy_flows_ab414, 0.002); end
  def test_outputs_energy_flows_ac414; assert_in_epsilon(4.524629593827985, worksheet.outputs_energy_flows_ac414, 0.002); end
  def test_outputs_energy_flows_ad414; assert_in_epsilon(4.468653250104858, worksheet.outputs_energy_flows_ad414, 0.002); end
  def test_outputs_energy_flows_d416; assert_equal("Biomass and waste", worksheet.outputs_energy_flows_d416); end
  def test_outputs_energy_flows_f416; assert_equal("Global oversupply", worksheet.outputs_energy_flows_f416); end
  def test_outputs_energy_flows_g416; assert_equal("arable.bio", worksheet.outputs_energy_flows_g416); end
  def test_outputs_energy_flows_h416; assert_equal("Global Arable land for bioenergy", worksheet.outputs_energy_flows_h416); end
  def test_outputs_energy_flows_i416; assert_equal("O.01", worksheet.outputs_energy_flows_i416); end
  def test_outputs_energy_flows_j416; assert_equal("Global Oversupply", worksheet.outputs_energy_flows_j416); end
  def test_outputs_energy_flows_v416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v416||0), 0.002); end
  def test_outputs_energy_flows_w416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w416||0), 0.002); end
  def test_outputs_energy_flows_x416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x416||0), 0.002); end
  def test_outputs_energy_flows_y416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y416||0), 0.002); end
  def test_outputs_energy_flows_z416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z416||0), 0.002); end
  def test_outputs_energy_flows_aa416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa416||0), 0.002); end
  def test_outputs_energy_flows_ab416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab416||0), 0.002); end
  def test_outputs_energy_flows_ac416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac416||0), 0.002); end
  def test_outputs_energy_flows_ad416; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad416||0), 0.002); end
  def test_outputs_energy_flows_d418; assert_equal("Coal reserves", worksheet.outputs_energy_flows_d418); end
  def test_outputs_energy_flows_f418; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f418); end
  def test_outputs_energy_flows_i418; assert_equal("G.L.02", worksheet.outputs_energy_flows_i418); end
  def test_outputs_energy_flows_j418; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j418); end
  def test_outputs_energy_flows_o418; assert_equal("Coal.extract", worksheet.outputs_energy_flows_o418); end
  def test_outputs_energy_flows_p418; assert_equal("Global Coal Extraction", worksheet.outputs_energy_flows_p418); end
  def test_outputs_energy_flows_q418; assert_equal("Coal.wash", worksheet.outputs_energy_flows_q418); end
  def test_outputs_energy_flows_r418; assert_equal("Global Coal washeries", worksheet.outputs_energy_flows_r418); end
  def test_outputs_energy_flows_s418; assert_equal("coal.network", worksheet.outputs_energy_flows_s418); end
  def test_outputs_energy_flows_t418; assert_equal("Global Coal distribution network", worksheet.outputs_energy_flows_t418); end
  def test_outputs_energy_flows_v418; assert_in_epsilon(33.45266496639885, worksheet.outputs_energy_flows_v418, 0.002); end
  def test_outputs_energy_flows_w418; assert_in_epsilon(33.532215935708365, worksheet.outputs_energy_flows_w418, 0.002); end
  def test_outputs_energy_flows_x418; assert_in_epsilon(44.95483206755332, worksheet.outputs_energy_flows_x418, 0.002); end
  def test_outputs_energy_flows_y418; assert_in_epsilon(55.96951463964809, worksheet.outputs_energy_flows_y418, 0.002); end
  def test_outputs_energy_flows_z418; assert_in_epsilon(65.41027076420292, worksheet.outputs_energy_flows_z418, 0.002); end
  def test_outputs_energy_flows_aa418; assert_in_epsilon(73.55103597371514, worksheet.outputs_energy_flows_aa418, 0.002); end
  def test_outputs_energy_flows_ab418; assert_in_epsilon(81.39295139375774, worksheet.outputs_energy_flows_ab418, 0.002); end
  def test_outputs_energy_flows_ac418; assert_in_epsilon(84.75669680225334, worksheet.outputs_energy_flows_ac418, 0.002); end
  def test_outputs_energy_flows_ad418; assert_in_epsilon(90.3794573268911, worksheet.outputs_energy_flows_ad418, 0.002); end
  def test_outputs_energy_flows_d420; assert_equal("Oil reserves", worksheet.outputs_energy_flows_d420); end
  def test_outputs_energy_flows_f420; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f420); end
  def test_outputs_energy_flows_i420; assert_equal("G.L.02", worksheet.outputs_energy_flows_i420); end
  def test_outputs_energy_flows_j420; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j420); end
  def test_outputs_energy_flows_o420; assert_equal("Oil.extract", worksheet.outputs_energy_flows_o420); end
  def test_outputs_energy_flows_p420; assert_equal("Global Oil Extraction", worksheet.outputs_energy_flows_p420); end
  def test_outputs_energy_flows_q420; assert_equal("Oil.refine", worksheet.outputs_energy_flows_q420); end
  def test_outputs_energy_flows_r420; assert_equal("Global Oil refineries", worksheet.outputs_energy_flows_r420); end
  def test_outputs_energy_flows_s420; assert_equal("oil.network", worksheet.outputs_energy_flows_s420); end
  def test_outputs_energy_flows_t420; assert_equal("Global Oil distribution network", worksheet.outputs_energy_flows_t420); end
  def test_outputs_energy_flows_v420; assert_in_epsilon(24.60479969141261, worksheet.outputs_energy_flows_v420, 0.002); end
  def test_outputs_energy_flows_w420; assert_in_epsilon(27.175491682102834, worksheet.outputs_energy_flows_w420, 0.002); end
  def test_outputs_energy_flows_x420; assert_in_epsilon(35.948960081060996, worksheet.outputs_energy_flows_x420, 0.002); end
  def test_outputs_energy_flows_y420; assert_in_epsilon(46.312342159545686, worksheet.outputs_energy_flows_y420, 0.002); end
  def test_outputs_energy_flows_z420; assert_in_epsilon(52.70670292234683, worksheet.outputs_energy_flows_z420, 0.002); end
  def test_outputs_energy_flows_aa420; assert_in_epsilon(57.02481158355082, worksheet.outputs_energy_flows_aa420, 0.002); end
  def test_outputs_energy_flows_ab420; assert_in_epsilon(65.9744097095248, worksheet.outputs_energy_flows_ab420, 0.002); end
  def test_outputs_energy_flows_ac420; assert_in_epsilon(75.41814128517387, worksheet.outputs_energy_flows_ac420, 0.002); end
  def test_outputs_energy_flows_ad420; assert_in_epsilon(83.63730610023669, worksheet.outputs_energy_flows_ad420, 0.002); end
  def test_outputs_energy_flows_d422; assert_equal("Gas reserves", worksheet.outputs_energy_flows_d422); end
  def test_outputs_energy_flows_f422; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f422); end
  def test_outputs_energy_flows_i422; assert_equal("G.L.02", worksheet.outputs_energy_flows_i422); end
  def test_outputs_energy_flows_j422; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j422); end
  def test_outputs_energy_flows_o422; assert_equal("Naturalgas.extract", worksheet.outputs_energy_flows_o422); end
  def test_outputs_energy_flows_p422; assert_equal("Global Natural Gas Extraction", worksheet.outputs_energy_flows_p422); end
  def test_outputs_energy_flows_q422; assert_equal("Natural.gas.process", worksheet.outputs_energy_flows_q422); end
  def test_outputs_energy_flows_r422; assert_equal("Global Natural gas processing plants", worksheet.outputs_energy_flows_r422); end
  def test_outputs_energy_flows_s422; assert_equal("gas.nework", worksheet.outputs_energy_flows_s422); end
  def test_outputs_energy_flows_t422; assert_equal("Global Gas distribution network", worksheet.outputs_energy_flows_t422); end
  def test_outputs_energy_flows_v422; assert_in_epsilon(30.736396070323654, worksheet.outputs_energy_flows_v422, 0.002); end
  def test_outputs_energy_flows_w422; assert_in_epsilon(31.93123307550413, worksheet.outputs_energy_flows_w422, 0.002); end
  def test_outputs_energy_flows_x422; assert_in_epsilon(36.56969855658659, worksheet.outputs_energy_flows_x422, 0.002); end
  def test_outputs_energy_flows_y422; assert_in_epsilon(39.35122326903011, worksheet.outputs_energy_flows_y422, 0.002); end
  def test_outputs_energy_flows_z422; assert_in_epsilon(43.42111647014554, worksheet.outputs_energy_flows_z422, 0.002); end
  def test_outputs_energy_flows_aa422; assert_in_epsilon(45.011338220017585, worksheet.outputs_energy_flows_aa422, 0.002); end
  def test_outputs_energy_flows_ab422; assert_in_epsilon(48.212850590738576, worksheet.outputs_energy_flows_ab422, 0.002); end
  def test_outputs_energy_flows_ac422; assert_in_epsilon(56.220941617747904, worksheet.outputs_energy_flows_ac422, 0.002); end
  def test_outputs_energy_flows_ad422; assert_in_epsilon(65.63324439044555, worksheet.outputs_energy_flows_ad422, 0.002); end
  def test_outputs_energy_flows_d424; assert_equal("Solid", worksheet.outputs_energy_flows_d424); end
  def test_outputs_energy_flows_f424; assert_equal("Power plants", worksheet.outputs_energy_flows_f424); end
  def test_outputs_energy_flows_i424; assert_equal("G.C.01", worksheet.outputs_energy_flows_i424); end
  def test_outputs_energy_flows_j424; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j424); end
  def test_outputs_energy_flows_n424; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n424); end
  def test_outputs_energy_flows_v424; assert_in_epsilon(98.64877026723967, worksheet.outputs_energy_flows_v424, 0.002); end
  def test_outputs_energy_flows_w424; assert_in_epsilon(96.19709167517517, worksheet.outputs_energy_flows_w424, 0.002); end
  def test_outputs_energy_flows_x424; assert_in_epsilon(100.56317981444982, worksheet.outputs_energy_flows_x424, 0.002); end
  def test_outputs_energy_flows_y424; assert_in_epsilon(112.36383452280762, worksheet.outputs_energy_flows_y424, 0.002); end
  def test_outputs_energy_flows_z424; assert_in_epsilon(119.79601357389538, worksheet.outputs_energy_flows_z424, 0.002); end
  def test_outputs_energy_flows_aa424; assert_in_epsilon(124.81836320297413, worksheet.outputs_energy_flows_aa424, 0.002); end
  def test_outputs_energy_flows_ab424; assert_in_epsilon(125.25283371405291, worksheet.outputs_energy_flows_ab424, 0.002); end
  def test_outputs_energy_flows_ac424; assert_in_epsilon(115.99438615016619, worksheet.outputs_energy_flows_ac424, 0.002); end
  def test_outputs_energy_flows_ad424; assert_in_epsilon(109.87398848217443, worksheet.outputs_energy_flows_ad424, 0.002); end
  def test_outputs_energy_flows_d426; assert_equal("Liquid", worksheet.outputs_energy_flows_d426); end
  def test_outputs_energy_flows_f426; assert_equal("Power plants", worksheet.outputs_energy_flows_f426); end
  def test_outputs_energy_flows_i426; assert_equal("G.C.02", worksheet.outputs_energy_flows_i426); end
  def test_outputs_energy_flows_j426; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j426); end
  def test_outputs_energy_flows_n426; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n426); end
  def test_outputs_energy_flows_v426; assert_in_epsilon(11.450334577208425, worksheet.outputs_energy_flows_v426, 0.002); end
  def test_outputs_energy_flows_w426; assert_in_epsilon(11.526833448345865, worksheet.outputs_energy_flows_w426, 0.002); end
  def test_outputs_energy_flows_x426; assert_in_epsilon(23.121899202453015, worksheet.outputs_energy_flows_x426, 0.002); end
  def test_outputs_energy_flows_y426; assert_in_epsilon(26.469999187506836, worksheet.outputs_energy_flows_y426, 0.002); end
  def test_outputs_energy_flows_z426; assert_in_epsilon(32.93848881069181, worksheet.outputs_energy_flows_z426, 0.002); end
  def test_outputs_energy_flows_aa426; assert_in_epsilon(38.03478794652899, worksheet.outputs_energy_flows_aa426, 0.002); end
  def test_outputs_energy_flows_ab426; assert_in_epsilon(43.780418947755855, worksheet.outputs_energy_flows_ab426, 0.002); end
  def test_outputs_energy_flows_ac426; assert_in_epsilon(49.78419739503785, worksheet.outputs_energy_flows_ac426, 0.002); end
  def test_outputs_energy_flows_ad426; assert_in_epsilon(53.687332002118154, worksheet.outputs_energy_flows_ad426, 0.002); end
  def test_outputs_energy_flows_d428; assert_equal("Gas", worksheet.outputs_energy_flows_d428); end
  def test_outputs_energy_flows_f428; assert_equal("Power plants", worksheet.outputs_energy_flows_f428); end
  def test_outputs_energy_flows_i428; assert_equal("G.C.03", worksheet.outputs_energy_flows_i428); end
  def test_outputs_energy_flows_j428; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j428); end
  def test_outputs_energy_flows_n428; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n428); end
  def test_outputs_energy_flows_v428; assert_in_epsilon(41.379231585091354, worksheet.outputs_energy_flows_v428, 0.002); end
  def test_outputs_energy_flows_w428; assert_in_epsilon(40.33866173358211, worksheet.outputs_energy_flows_w428, 0.002); end
  def test_outputs_energy_flows_x428; assert_in_epsilon(42.0984997276119, worksheet.outputs_energy_flows_x428, 0.002); end
  def test_outputs_energy_flows_y428; assert_in_epsilon(45.719132914623444, worksheet.outputs_energy_flows_y428, 0.002); end
  def test_outputs_energy_flows_z428; assert_in_epsilon(49.571981914731, worksheet.outputs_energy_flows_z428, 0.002); end
  def test_outputs_energy_flows_aa428; assert_in_epsilon(53.98007460785138, worksheet.outputs_energy_flows_aa428, 0.002); end
  def test_outputs_energy_flows_ab428; assert_in_epsilon(59.454602080461754, worksheet.outputs_energy_flows_ab428, 0.002); end
  def test_outputs_energy_flows_ac428; assert_in_epsilon(64.14829199842416, worksheet.outputs_energy_flows_ac428, 0.002); end
  def test_outputs_energy_flows_ad428; assert_in_epsilon(70.15511473628759, worksheet.outputs_energy_flows_ad428, 0.002); end
  def test_outputs_energy_flows_d430; assert_equal("Nuclear", worksheet.outputs_energy_flows_d430); end
  def test_outputs_energy_flows_f430; assert_equal("Power plants", worksheet.outputs_energy_flows_f430); end
  def test_outputs_energy_flows_i430; assert_equal("G.N.01", worksheet.outputs_energy_flows_i430); end
  def test_outputs_energy_flows_j430; assert_equal("Global Nuclear fission", worksheet.outputs_energy_flows_j430); end
  def test_outputs_energy_flows_n430; assert_equal("Global Electricity Generation", worksheet.outputs_energy_flows_n430); end
  def test_outputs_energy_flows_v430; assert_in_epsilon(26.462850754774173, worksheet.outputs_energy_flows_v430, 0.002); end
  def test_outputs_energy_flows_w430; assert_in_epsilon(32.15380656912042, worksheet.outputs_energy_flows_w430, 0.002); end
  def test_outputs_energy_flows_x430; assert_in_epsilon(33.02625127433693, worksheet.outputs_energy_flows_x430, 0.002); end
  def test_outputs_energy_flows_y430; assert_in_epsilon(35.01016110558949, worksheet.outputs_energy_flows_y430, 0.002); end
  def test_outputs_energy_flows_z430; assert_in_epsilon(35.83235112380758, worksheet.outputs_energy_flows_z430, 0.002); end
  def test_outputs_energy_flows_aa430; assert_in_epsilon(39.67377959576061, worksheet.outputs_energy_flows_aa430, 0.002); end
  def test_outputs_energy_flows_ab430; assert_in_epsilon(40.95327765602627, worksheet.outputs_energy_flows_ab430, 0.002); end
  def test_outputs_energy_flows_ac430; assert_in_epsilon(42.75957463926615, worksheet.outputs_energy_flows_ac430, 0.002); end
  def test_outputs_energy_flows_ad430; assert_in_epsilon(44.51400802028767, worksheet.outputs_energy_flows_ad430, 0.002); end
  def test_outputs_energy_flows_d432; assert_equal("Power plants", worksheet.outputs_energy_flows_d432); end
  def test_outputs_energy_flows_f432; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f432); end
  def test_outputs_energy_flows_i432; assert_equal("G.E.02", worksheet.outputs_energy_flows_i432); end
  def test_outputs_energy_flows_j432; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j432); end
  def test_outputs_energy_flows_p432; assert_equal("Unabated power", worksheet.outputs_energy_flows_p432); end
  def test_outputs_energy_flows_r432; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r432); end
  def test_outputs_energy_flows_t432; assert_equal("Nuclear", worksheet.outputs_energy_flows_t432); end
  def test_outputs_energy_flows_v432; assert_in_epsilon(61.79335326396476, worksheet.outputs_energy_flows_v432, 0.002); end
  def test_outputs_energy_flows_w432; assert_in_epsilon(63.19149739258736, worksheet.outputs_energy_flows_w432, 0.002); end
  def test_outputs_energy_flows_x432; assert_in_epsilon(70.60706723093335, worksheet.outputs_energy_flows_x432, 0.002); end
  def test_outputs_energy_flows_y432; assert_in_epsilon(79.13286425745946, worksheet.outputs_energy_flows_y432, 0.002); end
  def test_outputs_energy_flows_z432; assert_in_epsilon(86.76197534487316, worksheet.outputs_energy_flows_z432, 0.002); end
  def test_outputs_energy_flows_aa432; assert_in_epsilon(94.45889244301559, worksheet.outputs_energy_flows_aa432, 0.002); end
  def test_outputs_energy_flows_ab432; assert_in_epsilon(100.52407269714666, worksheet.outputs_energy_flows_ab432, 0.002); end
  def test_outputs_energy_flows_ac432; assert_in_epsilon(102.30079877135691, worksheet.outputs_energy_flows_ac432, 0.002); end
  def test_outputs_energy_flows_ad432; assert_in_epsilon(104.94762424924498, worksheet.outputs_energy_flows_ad432, 0.002); end
  def test_outputs_energy_flows_d434; assert_equal("Power plants", worksheet.outputs_energy_flows_d434); end
  def test_outputs_energy_flows_f434; assert_equal("Heat network", worksheet.outputs_energy_flows_f434); end
  def test_outputs_energy_flows_i434; assert_equal("G.H.01", worksheet.outputs_energy_flows_i434); end
  def test_outputs_energy_flows_j434; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j434); end
  def test_outputs_energy_flows_p434; assert_equal("Unabated power", worksheet.outputs_energy_flows_p434); end
  def test_outputs_energy_flows_r434; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r434); end
  def test_outputs_energy_flows_t434; assert_equal("Nuclear", worksheet.outputs_energy_flows_t434); end
  def test_outputs_energy_flows_v434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v434||0), 0.002); end
  def test_outputs_energy_flows_w434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w434||0), 0.002); end
  def test_outputs_energy_flows_x434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x434||0), 0.002); end
  def test_outputs_energy_flows_y434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y434||0), 0.002); end
  def test_outputs_energy_flows_z434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z434||0), 0.002); end
  def test_outputs_energy_flows_aa434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa434||0), 0.002); end
  def test_outputs_energy_flows_ab434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab434||0), 0.002); end
  def test_outputs_energy_flows_ac434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac434||0), 0.002); end
  def test_outputs_energy_flows_ad434; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad434||0), 0.002); end
  def test_outputs_energy_flows_d436; assert_equal("Solid", worksheet.outputs_energy_flows_d436); end
  def test_outputs_energy_flows_f436; assert_equal("Heat network", worksheet.outputs_energy_flows_f436); end
  def test_outputs_energy_flows_i436; assert_equal("G.C.01", worksheet.outputs_energy_flows_i436); end
  def test_outputs_energy_flows_j436; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j436); end
  def test_outputs_energy_flows_n436; assert_equal("Heat network", worksheet.outputs_energy_flows_n436); end
  def test_outputs_energy_flows_v436; assert_in_epsilon(1.3927427753088097, worksheet.outputs_energy_flows_v436, 0.002); end
  def test_outputs_energy_flows_w436; assert_in_epsilon(1.39274277530881, worksheet.outputs_energy_flows_w436, 0.002); end
  def test_outputs_energy_flows_x436; assert_in_epsilon(1.3362644938686112, worksheet.outputs_energy_flows_x436, 0.002); end
  def test_outputs_energy_flows_y436; assert_in_epsilon(1.280350055504355, worksheet.outputs_energy_flows_y436, 0.002); end
  def test_outputs_energy_flows_z436; assert_in_epsilon(1.224991058580803, worksheet.outputs_energy_flows_z436, 0.002); end
  def test_outputs_energy_flows_aa436; assert_in_epsilon(1.1701792675576488, worksheet.outputs_energy_flows_aa436, 0.002); end
  def test_outputs_energy_flows_ab436; assert_in_epsilon(1.1159066089052143, worksheet.outputs_energy_flows_ab436, 0.002); end
  def test_outputs_energy_flows_ac436; assert_in_epsilon(1.062165167140079, worksheet.outputs_energy_flows_ac436, 0.002); end
  def test_outputs_energy_flows_ad436; assert_in_epsilon(1.0089471809765522, worksheet.outputs_energy_flows_ad436, 0.002); end
  def test_outputs_energy_flows_d438; assert_equal("Liquid", worksheet.outputs_energy_flows_d438); end
  def test_outputs_energy_flows_f438; assert_equal("Heat network", worksheet.outputs_energy_flows_f438); end
  def test_outputs_energy_flows_i438; assert_equal("G.C.02", worksheet.outputs_energy_flows_i438); end
  def test_outputs_energy_flows_j438; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j438); end
  def test_outputs_energy_flows_n438; assert_equal("Heat network", worksheet.outputs_energy_flows_n438); end
  def test_outputs_energy_flows_v438; assert_in_delta(0.6963713876544049, worksheet.outputs_energy_flows_v438, 0.002); end
  def test_outputs_energy_flows_w438; assert_in_delta(0.6678023050839677, worksheet.outputs_energy_flows_w438, 0.002); end
  def test_outputs_energy_flows_x438; assert_in_delta(0.5992251604983457, worksheet.outputs_energy_flows_x438, 0.002); end
  def test_outputs_energy_flows_y438; assert_in_delta(0.5313326463079217, worksheet.outputs_energy_flows_y438, 0.002); end
  def test_outputs_energy_flows_z438; assert_in_delta(0.4641145610664089, worksheet.outputs_energy_flows_z438, 0.002); end
  def test_outputs_energy_flows_aa438; assert_in_delta(0.39756090500356017, worksheet.outputs_energy_flows_aa438, 0.002); end
  def test_outputs_energy_flows_ab438; assert_in_delta(0.3316618750659199, worksheet.outputs_energy_flows_ab438, 0.002); end
  def test_outputs_energy_flows_ac438; assert_in_delta(0.2664078601031993, worksheet.outputs_energy_flows_ac438, 0.002); end
  def test_outputs_energy_flows_ad438; assert_in_delta(0.20178943619531042, worksheet.outputs_energy_flows_ad438, 0.002); end
  def test_outputs_energy_flows_d440; assert_equal("Gas", worksheet.outputs_energy_flows_d440); end
  def test_outputs_energy_flows_f440; assert_equal("Heat network", worksheet.outputs_energy_flows_f440); end
  def test_outputs_energy_flows_i440; assert_equal("G.C.03", worksheet.outputs_energy_flows_i440); end
  def test_outputs_energy_flows_j440; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j440); end
  def test_outputs_energy_flows_n440; assert_equal("Heat network", worksheet.outputs_energy_flows_n440); end
  def test_outputs_energy_flows_v440; assert_in_delta(0.657684088340271, worksheet.outputs_energy_flows_v440, 0.002); end
  def test_outputs_energy_flows_w440; assert_in_delta(0.6285532769316731, worksheet.outputs_energy_flows_w440, 0.002); end
  def test_outputs_energy_flows_x440; assert_in_delta(0.6104882807225933, worksheet.outputs_energy_flows_x440, 0.002); end
  def test_outputs_energy_flows_y440; assert_in_delta(0.5926095126164445, worksheet.outputs_energy_flows_y440, 0.002); end
  def test_outputs_energy_flows_z440; assert_in_delta(0.5749141077027963, worksheet.outputs_energy_flows_z440, 0.002); end
  def test_outputs_energy_flows_aa440; assert_in_delta(0.5573992595359901, worksheet.outputs_energy_flows_aa440, 0.002); end
  def test_outputs_energy_flows_ab440; assert_in_delta(0.5400622186513329, worksheet.outputs_energy_flows_ab440, 0.002); end
  def test_outputs_energy_flows_ac440; assert_in_delta(0.5229002911262504, worksheet.outputs_energy_flows_ac440, 0.002); end
  def test_outputs_energy_flows_ad440; assert_in_delta(0.505910837184824, worksheet.outputs_energy_flows_ad440, 0.002); end
  def test_outputs_energy_flows_d442; assert_equal("Geothermal", worksheet.outputs_energy_flows_d442); end
  def test_outputs_energy_flows_f442; assert_equal("Heat network", worksheet.outputs_energy_flows_f442); end
  def test_outputs_energy_flows_i442; assert_equal("G.R.05", worksheet.outputs_energy_flows_i442); end
  def test_outputs_energy_flows_j442; assert_equal("Global Geothermal", worksheet.outputs_energy_flows_j442); end
  def test_outputs_energy_flows_n442; assert_equal("Heat network", worksheet.outputs_energy_flows_n442); end
  def test_outputs_energy_flows_v442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v442||0), 0.002); end
  def test_outputs_energy_flows_w442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w442||0), 0.002); end
  def test_outputs_energy_flows_x442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x442||0), 0.002); end
  def test_outputs_energy_flows_y442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y442||0), 0.002); end
  def test_outputs_energy_flows_z442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z442||0), 0.002); end
  def test_outputs_energy_flows_aa442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa442||0), 0.002); end
  def test_outputs_energy_flows_ab442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab442||0), 0.002); end
  def test_outputs_energy_flows_ac442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac442||0), 0.002); end
  def test_outputs_energy_flows_ad442; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad442||0), 0.002); end
  def test_outputs_energy_flows_d444; assert_equal("Solar", worksheet.outputs_energy_flows_d444); end
  def test_outputs_energy_flows_f444; assert_equal("Heat network", worksheet.outputs_energy_flows_f444); end
  def test_outputs_energy_flows_i444; assert_equal("G.R.01", worksheet.outputs_energy_flows_i444); end
  def test_outputs_energy_flows_j444; assert_equal("Global Solar", worksheet.outputs_energy_flows_j444); end
  def test_outputs_energy_flows_n444; assert_equal("Heat network", worksheet.outputs_energy_flows_n444); end
  def test_outputs_energy_flows_v444; assert_in_delta(0.1183831359012488, worksheet.outputs_energy_flows_v444, 0.002); end
  def test_outputs_energy_flows_w444; assert_in_delta(0.11838313590124883, worksheet.outputs_energy_flows_w444, 0.002); end
  def test_outputs_energy_flows_x444; assert_in_delta(0.13529501245857006, worksheet.outputs_energy_flows_x444, 0.002); end
  def test_outputs_energy_flows_y444; assert_in_delta(0.15220688901589133, worksheet.outputs_energy_flows_y444, 0.002); end
  def test_outputs_energy_flows_z444; assert_in_delta(0.1691187655732126, worksheet.outputs_energy_flows_z444, 0.002); end
  def test_outputs_energy_flows_aa444; assert_in_delta(0.1860306421305338, worksheet.outputs_energy_flows_aa444, 0.002); end
  def test_outputs_energy_flows_ab444; assert_in_delta(0.2029425186878551, worksheet.outputs_energy_flows_ab444, 0.002); end
  def test_outputs_energy_flows_ac444; assert_in_delta(0.2198543952451763, worksheet.outputs_energy_flows_ac444, 0.002); end
  def test_outputs_energy_flows_ad444; assert_in_delta(0.2367662718024976, worksheet.outputs_energy_flows_ad444, 0.002); end
  def test_outputs_energy_flows_d446; assert_equal("Solar", worksheet.outputs_energy_flows_d446); end
  def test_outputs_energy_flows_f446; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f446); end
  def test_outputs_energy_flows_i446; assert_equal("G.E.02", worksheet.outputs_energy_flows_i446); end
  def test_outputs_energy_flows_j446; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j446); end
  def test_outputs_energy_flows_p446; assert_equal("Solar", worksheet.outputs_energy_flows_p446); end
  def test_outputs_energy_flows_v446; assert_in_delta(0.2274987384, worksheet.outputs_energy_flows_v446, 0.002); end
  def test_outputs_energy_flows_w446; assert_in_delta(0.5585695199999999, worksheet.outputs_energy_flows_w446, 0.002); end
  def test_outputs_energy_flows_x446; assert_in_delta(0.9980911497599998, worksheet.outputs_energy_flows_x446, 0.002); end
  def test_outputs_energy_flows_y446; assert_in_epsilon(1.2660846004799997, worksheet.outputs_energy_flows_y446, 0.002); end
  def test_outputs_energy_flows_z446; assert_in_epsilon(2.0224129766399996, worksheet.outputs_energy_flows_z446, 0.002); end
  def test_outputs_energy_flows_aa446; assert_in_epsilon(2.5494753887999995, worksheet.outputs_energy_flows_aa446, 0.002); end
  def test_outputs_energy_flows_ab446; assert_in_epsilon(3.235941550079999, worksheet.outputs_energy_flows_ab446, 0.002); end
  def test_outputs_energy_flows_ac446; assert_in_epsilon(5.5679282712, worksheet.outputs_energy_flows_ac446, 0.002); end
  def test_outputs_energy_flows_ad446; assert_in_epsilon(7.6909342535999965, worksheet.outputs_energy_flows_ad446, 0.002); end
  def test_outputs_energy_flows_d448; assert_equal("Wind", worksheet.outputs_energy_flows_d448); end
  def test_outputs_energy_flows_f448; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f448); end
  def test_outputs_energy_flows_i448; assert_equal("G.E.02", worksheet.outputs_energy_flows_i448); end
  def test_outputs_energy_flows_j448; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j448); end
  def test_outputs_energy_flows_p448; assert_equal("Wind", worksheet.outputs_energy_flows_p448); end
  def test_outputs_energy_flows_v448; assert_in_epsilon(1.5854127991199998, worksheet.outputs_energy_flows_v448, 0.002); end
  def test_outputs_energy_flows_w448; assert_in_epsilon(2.7814868639999997, worksheet.outputs_energy_flows_w448, 0.002); end
  def test_outputs_energy_flows_x448; assert_in_epsilon(3.4827598512, worksheet.outputs_energy_flows_x448, 0.002); end
  def test_outputs_energy_flows_y448; assert_in_epsilon(4.139852198400001, worksheet.outputs_energy_flows_y448, 0.002); end
  def test_outputs_energy_flows_z448; assert_in_epsilon(5.099266353600001, worksheet.outputs_energy_flows_z448, 0.002); end
  def test_outputs_energy_flows_aa448; assert_in_epsilon(5.6019789216000015, worksheet.outputs_energy_flows_aa448, 0.002); end
  def test_outputs_energy_flows_ab448; assert_in_epsilon(7.732874304000001, worksheet.outputs_energy_flows_ab448, 0.002); end
  def test_outputs_energy_flows_ac448; assert_in_epsilon(11.362629456, worksheet.outputs_energy_flows_ac448, 0.002); end
  def test_outputs_energy_flows_ad448; assert_in_epsilon(14.022935136000005, worksheet.outputs_energy_flows_ad448, 0.002); end
  def test_outputs_energy_flows_d450; assert_equal("Marine", worksheet.outputs_energy_flows_d450); end
  def test_outputs_energy_flows_f450; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f450); end
  def test_outputs_energy_flows_i450; assert_equal("G.E.02", worksheet.outputs_energy_flows_i450); end
  def test_outputs_energy_flows_j450; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j450); end
  def test_outputs_energy_flows_p450; assert_equal("Marine", worksheet.outputs_energy_flows_p450); end
  def test_outputs_energy_flows_v450; assert_in_delta(0.0019957026240000003, worksheet.outputs_energy_flows_v450, 0.002); end
  def test_outputs_energy_flows_w450; assert_in_delta(0.0041656031999999996, worksheet.outputs_energy_flows_w450, 0.002); end
  def test_outputs_energy_flows_x450; assert_in_delta(0.007043656319999999, worksheet.outputs_energy_flows_x450, 0.002); end
  def test_outputs_energy_flows_y450; assert_in_delta(0.029411683199999997, worksheet.outputs_energy_flows_y450, 0.002); end
  def test_outputs_energy_flows_z450; assert_in_delta(0.08520551999999998, worksheet.outputs_energy_flows_z450, 0.002); end
  def test_outputs_energy_flows_aa450; assert_in_delta(0.14043131999999994, worksheet.outputs_energy_flows_aa450, 0.002); end
  def test_outputs_energy_flows_ab450; assert_in_delta(0.22405895999999995, worksheet.outputs_energy_flows_ab450, 0.002); end
  def test_outputs_energy_flows_ac450; assert_in_delta(0.3389286239999999, worksheet.outputs_energy_flows_ac450, 0.002); end
  def test_outputs_energy_flows_ad450; assert_in_delta(0.41277340799999984, worksheet.outputs_energy_flows_ad450, 0.002); end
  def test_outputs_energy_flows_d452; assert_equal("Geothermal", worksheet.outputs_energy_flows_d452); end
  def test_outputs_energy_flows_f452; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f452); end
  def test_outputs_energy_flows_i452; assert_equal("G.E.02", worksheet.outputs_energy_flows_i452); end
  def test_outputs_energy_flows_j452; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j452); end
  def test_outputs_energy_flows_p452; assert_equal("Geothermal", worksheet.outputs_energy_flows_p452); end
  def test_outputs_energy_flows_v452; assert_in_delta(0.26331345864, worksheet.outputs_energy_flows_v452, 0.002); end
  def test_outputs_energy_flows_w452; assert_in_delta(0.334037196, worksheet.outputs_energy_flows_w452, 0.002); end
  def test_outputs_energy_flows_x452; assert_in_delta(0.4070930399999999, worksheet.outputs_energy_flows_x452, 0.002); end
  def test_outputs_energy_flows_y452; assert_in_delta(0.46389672000000004, worksheet.outputs_energy_flows_y452, 0.002); end
  def test_outputs_energy_flows_z452; assert_in_delta(0.5453153279999999, worksheet.outputs_energy_flows_z452, 0.002); end
  def test_outputs_energy_flows_aa452; assert_in_delta(0.8432190719999999, worksheet.outputs_energy_flows_aa452, 0.002); end
  def test_outputs_energy_flows_ab452; assert_in_epsilon(1.0502369279999997, worksheet.outputs_energy_flows_ab452, 0.002); end
  def test_outputs_energy_flows_ac452; assert_in_epsilon(1.4699530079999996, worksheet.outputs_energy_flows_ac452, 0.002); end
  def test_outputs_energy_flows_ad452; assert_in_epsilon(1.8454884479999996, worksheet.outputs_energy_flows_ad452, 0.002); end
  def test_outputs_energy_flows_d454; assert_equal("Hydro", worksheet.outputs_energy_flows_d454); end
  def test_outputs_energy_flows_f454; assert_equal("Electricity grid", worksheet.outputs_energy_flows_f454); end
  def test_outputs_energy_flows_i454; assert_equal("G.E.02", worksheet.outputs_energy_flows_i454); end
  def test_outputs_energy_flows_j454; assert_equal("Global Electricity (supplied to grid)", worksheet.outputs_energy_flows_j454); end
  def test_outputs_energy_flows_p454; assert_equal("Hydro", worksheet.outputs_energy_flows_p454); end
  def test_outputs_energy_flows_v454; assert_in_epsilon(13.16267496, worksheet.outputs_energy_flows_v454, 0.002); end
  def test_outputs_energy_flows_w454; assert_in_epsilon(18.319186799999997, worksheet.outputs_energy_flows_w454, 0.002); end
  def test_outputs_energy_flows_x454; assert_in_epsilon(19.092663576, worksheet.outputs_energy_flows_x454, 0.002); end
  def test_outputs_energy_flows_y454; assert_in_epsilon(19.757582208000002, worksheet.outputs_energy_flows_y454, 0.002); end
  def test_outputs_energy_flows_z454; assert_in_epsilon(20.429285724, worksheet.outputs_energy_flows_z454, 0.002); end
  def test_outputs_energy_flows_aa454; assert_in_epsilon(21.100989239999997, worksheet.outputs_energy_flows_aa454, 0.002); end
  def test_outputs_energy_flows_ab454; assert_in_epsilon(21.4578741384, worksheet.outputs_energy_flows_ab454, 0.002); end
  def test_outputs_energy_flows_ac454; assert_in_epsilon(22.1906416104, worksheet.outputs_energy_flows_ac454, 0.002); end
  def test_outputs_energy_flows_ad454; assert_in_epsilon(22.984473038399997, worksheet.outputs_energy_flows_ad454, 0.002); end
  def test_outputs_energy_flows_d456; assert_equal("Solar", worksheet.outputs_energy_flows_d456); end
  def test_outputs_energy_flows_f456; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f456); end
  def test_outputs_energy_flows_i456; assert_equal("G.L.01", worksheet.outputs_energy_flows_i456); end
  def test_outputs_energy_flows_j456; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j456); end
  def test_outputs_energy_flows_p456; assert_equal("Solar", worksheet.outputs_energy_flows_p456); end
  def test_outputs_energy_flows_v456; assert_in_delta(0.020477376, worksheet.outputs_energy_flows_v456, 0.002); end
  def test_outputs_energy_flows_w456; assert_in_delta(0.10208543941050044, worksheet.outputs_energy_flows_w456, 0.002); end
  def test_outputs_energy_flows_x456; assert_in_delta(0.7865608589708333, worksheet.outputs_energy_flows_x456, 0.002); end
  def test_outputs_energy_flows_y456; assert_in_epsilon(1.232939296527714, worksheet.outputs_energy_flows_y456, 0.002); end
  def test_outputs_energy_flows_z456; assert_in_epsilon(1.958749808313104, worksheet.outputs_energy_flows_z456, 0.002); end
  def test_outputs_energy_flows_aa456; assert_in_epsilon(2.30368196366464, worksheet.outputs_energy_flows_aa456, 0.002); end
  def test_outputs_energy_flows_ab456; assert_in_epsilon(2.676151755713701, worksheet.outputs_energy_flows_ab456, 0.002); end
  def test_outputs_energy_flows_ac456; assert_in_epsilon(4.154395688223597, worksheet.outputs_energy_flows_ac456, 0.002); end
  def test_outputs_energy_flows_ad456; assert_in_epsilon(5.147574515212536, worksheet.outputs_energy_flows_ad456, 0.002); end
  def test_outputs_energy_flows_d458; assert_equal("Power plants", worksheet.outputs_energy_flows_d458); end
  def test_outputs_energy_flows_f458; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f458); end
  def test_outputs_energy_flows_i458; assert_equal("G.L.01", worksheet.outputs_energy_flows_i458); end
  def test_outputs_energy_flows_j458; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j458); end
  def test_outputs_energy_flows_k458; assert_equal("G.L.02", worksheet.outputs_energy_flows_k458); end
  def test_outputs_energy_flows_l458; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_l458); end
  def test_outputs_energy_flows_p458; assert_equal("Unabated power", worksheet.outputs_energy_flows_p458); end
  def test_outputs_energy_flows_r458; assert_equal("Carbon Capture and Storage", worksheet.outputs_energy_flows_r458); end
  def test_outputs_energy_flows_t458; assert_equal("Nuclear", worksheet.outputs_energy_flows_t458); end
  def test_outputs_energy_flows_v458; assert_in_epsilon(102.52827672029427, worksheet.outputs_energy_flows_v458, 0.002); end
  def test_outputs_energy_flows_w458; assert_in_epsilon(102.8655063396705, worksheet.outputs_energy_flows_w458, 0.002); end
  def test_outputs_energy_flows_x458; assert_in_epsilon(112.64594816444004, worksheet.outputs_energy_flows_x458, 0.002); end
  def test_outputs_energy_flows_y458; assert_in_epsilon(123.2631756060716, worksheet.outputs_energy_flows_y458, 0.002); end
  def test_outputs_energy_flows_z458; assert_in_epsilon(132.6685141839833, worksheet.outputs_energy_flows_z458, 0.002); end
  def test_outputs_energy_flows_aa458; assert_in_epsilon(141.84815880923438, worksheet.outputs_energy_flows_aa458, 0.002); end
  def test_outputs_energy_flows_ab458; assert_in_epsilon(147.34737300740403, worksheet.outputs_energy_flows_ab458, 0.002); end
  def test_outputs_energy_flows_ac458; assert_in_epsilon(147.8191812095911, worksheet.outputs_energy_flows_ac458, 0.002); end
  def test_outputs_energy_flows_ad458; assert_in_epsilon(149.67621340910492, worksheet.outputs_energy_flows_ad458, 0.002); end
  def test_outputs_energy_flows_d460; assert_equal("Geothermal", worksheet.outputs_energy_flows_d460); end
  def test_outputs_energy_flows_f460; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f460); end
  def test_outputs_energy_flows_i460; assert_equal("G.L.01", worksheet.outputs_energy_flows_i460); end
  def test_outputs_energy_flows_j460; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j460); end
  def test_outputs_energy_flows_p460; assert_equal("Geothermal", worksheet.outputs_energy_flows_p460); end
  def test_outputs_energy_flows_v460; assert_in_epsilon(2.36982112776, worksheet.outputs_energy_flows_v460, 0.002); end
  def test_outputs_energy_flows_w460; assert_in_epsilon(2.999155579560331, worksheet.outputs_energy_flows_w460, 0.002); end
  def test_outputs_energy_flows_x460; assert_in_epsilon(3.6442041505381604, worksheet.outputs_energy_flows_x460, 0.002); end
  def test_outputs_energy_flows_y460; assert_in_epsilon(4.140361456820889, worksheet.outputs_energy_flows_y460, 0.002); end
  def test_outputs_energy_flows_z460; assert_in_epsilon(4.852612993023374, worksheet.outputs_energy_flows_z460, 0.002); end
  def test_outputs_energy_flows_aa460; assert_in_epsilon(7.481392058012148, worksheet.outputs_energy_flows_aa460, 0.002); end
  def test_outputs_energy_flows_ab460; assert_in_epsilon(9.290655341938646, worksheet.outputs_energy_flows_ab460, 0.002); end
  def test_outputs_energy_flows_ac460; assert_in_epsilon(12.965300885337358, worksheet.outputs_energy_flows_ac460, 0.002); end
  def test_outputs_energy_flows_ad460; assert_in_epsilon(16.22981466659353, worksheet.outputs_energy_flows_ad460, 0.002); end
  def test_outputs_energy_flows_d462; assert_equal("Solid", worksheet.outputs_energy_flows_d462); end
  def test_outputs_energy_flows_f462; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f462); end
  def test_outputs_energy_flows_i462; assert_equal("G.FF.01", worksheet.outputs_energy_flows_i462); end
  def test_outputs_energy_flows_j462; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_j462); end
  def test_outputs_energy_flows_p462; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p462); end
  def test_outputs_energy_flows_v462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v462||0), 0.002); end
  def test_outputs_energy_flows_w462; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w462||0), 0.002); end
  def test_outputs_energy_flows_x462; assert_in_delta(0.04298313605930763, worksheet.outputs_energy_flows_x462, 0.002); end
  def test_outputs_energy_flows_y462; assert_in_delta(0.07879340115008719, worksheet.outputs_energy_flows_y462, 0.002); end
  def test_outputs_energy_flows_z462; assert_in_delta(0.15911704874057594, worksheet.outputs_energy_flows_z462, 0.002); end
  def test_outputs_energy_flows_aa462; assert_in_delta(0.2009466408778609, worksheet.outputs_energy_flows_aa462, 0.002); end
  def test_outputs_energy_flows_ab462; assert_in_delta(0.2188848346773111, worksheet.outputs_energy_flows_ab462, 0.002); end
  def test_outputs_energy_flows_ac462; assert_in_delta(0.24468758407345403, worksheet.outputs_energy_flows_ac462, 0.002); end
  def test_outputs_energy_flows_ad462; assert_in_delta(0.23619238168612466, worksheet.outputs_energy_flows_ad462, 0.002); end
  def test_outputs_energy_flows_d464; assert_equal("Gas", worksheet.outputs_energy_flows_d464); end
  def test_outputs_energy_flows_f464; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f464); end
  def test_outputs_energy_flows_i464; assert_equal("G.FF.03", worksheet.outputs_energy_flows_i464); end
  def test_outputs_energy_flows_j464; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_j464); end
  def test_outputs_energy_flows_p464; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p464); end
  def test_outputs_energy_flows_v464; assert_in_delta(8.660925161525873e-08, worksheet.outputs_energy_flows_v464, 0.002); end
  def test_outputs_energy_flows_w464; assert_in_delta(0.5170803135809358, worksheet.outputs_energy_flows_w464, 0.002); end
  def test_outputs_energy_flows_x464; assert_in_delta(0.46421786944052257, worksheet.outputs_energy_flows_x464, 0.002); end
  def test_outputs_energy_flows_y464; assert_in_delta(0.40184634586544465, worksheet.outputs_energy_flows_y464, 0.002); end
  def test_outputs_energy_flows_z464; assert_in_delta(0.37657701535269633, worksheet.outputs_energy_flows_z464, 0.002); end
  def test_outputs_energy_flows_aa464; assert_in_delta(0.35596262098363934, worksheet.outputs_energy_flows_aa464, 0.002); end
  def test_outputs_energy_flows_ab464; assert_in_delta(0.368977292741753, worksheet.outputs_energy_flows_ab464, 0.002); end
  def test_outputs_energy_flows_ac464; assert_in_delta(0.39150013451752647, worksheet.outputs_energy_flows_ac464, 0.002); end
  def test_outputs_energy_flows_ad464; assert_in_delta(0.4408924458140994, worksheet.outputs_energy_flows_ad464, 0.002); end
  def test_outputs_energy_flows_d466; assert_equal("Electricity", worksheet.outputs_energy_flows_d466); end
  def test_outputs_energy_flows_f466; assert_equal("Hydrogen", worksheet.outputs_energy_flows_f466); end
  def test_outputs_energy_flows_i466; assert_equal("G.E.01", worksheet.outputs_energy_flows_i466); end
  def test_outputs_energy_flows_j466; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j466); end
  def test_outputs_energy_flows_p466; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p466); end
  def test_outputs_energy_flows_v466; assert_in_delta(5.697977079951232e-09, worksheet.outputs_energy_flows_v466, 0.002); end
  def test_outputs_energy_flows_w466; assert_in_delta(0.0338155483926007, worksheet.outputs_energy_flows_w466, 0.002); end
  def test_outputs_energy_flows_x466; assert_in_delta(0.03194876203052603, worksheet.outputs_energy_flows_x466, 0.002); end
  def test_outputs_energy_flows_y466; assert_in_delta(0.029106985546156098, worksheet.outputs_energy_flows_y466, 0.002); end
  def test_outputs_energy_flows_z466; assert_in_delta(0.07162241870986559, worksheet.outputs_energy_flows_z466, 0.002); end
  def test_outputs_energy_flows_aa466; assert_in_delta(0.11909222734173094, worksheet.outputs_energy_flows_aa466, 0.002); end
  def test_outputs_energy_flows_ab466; assert_in_delta(0.15214450294742876, worksheet.outputs_energy_flows_ab466, 0.002); end
  def test_outputs_energy_flows_ac466; assert_in_delta(0.19439760878657483, worksheet.outputs_energy_flows_ac466, 0.002); end
  def test_outputs_energy_flows_ad466; assert_in_delta(0.24670403649986267, worksheet.outputs_energy_flows_ad466, 0.002); end
  def test_outputs_energy_flows_d468; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d468); end
  def test_outputs_energy_flows_f468; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f468); end
  def test_outputs_energy_flows_i468; assert_equal("G.L.01", worksheet.outputs_energy_flows_i468); end
  def test_outputs_energy_flows_j468; assert_equal("Global Conversion losses", worksheet.outputs_energy_flows_j468); end
  def test_outputs_energy_flows_p468; assert_equal("Hydrogen production", worksheet.outputs_energy_flows_p468); end
  def test_outputs_energy_flows_v468; assert_in_delta(2.3931503735795177e-08, worksheet.outputs_energy_flows_v468, 0.002); end
  def test_outputs_energy_flows_w468; assert_in_delta(0.1426745617780609, worksheet.outputs_energy_flows_w468, 0.002); end
  def test_outputs_energy_flows_x468; assert_in_delta(0.15114099832298616, worksheet.outputs_energy_flows_x468, 0.002); end
  def test_outputs_energy_flows_y468; assert_in_delta(0.15411271647076943, worksheet.outputs_energy_flows_y468, 0.002); end
  def test_outputs_energy_flows_z468; assert_in_delta(0.20713113833126168, worksheet.outputs_energy_flows_z468, 0.002); end
  def test_outputs_energy_flows_aa468; assert_in_delta(0.24281148579735717, worksheet.outputs_energy_flows_aa468, 0.002); end
  def test_outputs_energy_flows_ab468; assert_in_delta(0.26672520660221444, worksheet.outputs_energy_flows_ab468, 0.002); end
  def test_outputs_energy_flows_ac468; assert_in_delta(0.30151218104262567, worksheet.outputs_energy_flows_ac468, 0.002); end
  def test_outputs_energy_flows_ad468; assert_in_delta(0.3261688176825954, worksheet.outputs_energy_flows_ad468, 0.002); end
  def test_outputs_energy_flows_d470; assert_equal("Hydrogen", worksheet.outputs_energy_flows_d470); end
  def test_outputs_energy_flows_f470; assert_equal("Transport", worksheet.outputs_energy_flows_f470); end
  def test_outputs_energy_flows_i470; assert_equal("G.HY.01", worksheet.outputs_energy_flows_i470); end
  def test_outputs_energy_flows_j470; assert_equal("Global H2", worksheet.outputs_energy_flows_j470); end
  def test_outputs_energy_flows_p470; assert_equal("Global transport", worksheet.outputs_energy_flows_p470); end
  def test_outputs_energy_flows_v470; assert_in_delta(6.837572495941478e-08, worksheet.outputs_energy_flows_v470, 0.002); end
  def test_outputs_energy_flows_w470; assert_in_delta(0.4082213001954756, worksheet.outputs_energy_flows_w470, 0.002); end
  def test_outputs_energy_flows_x470; assert_in_delta(0.38800876920737004, worksheet.outputs_energy_flows_x470, 0.002); end
  def test_outputs_energy_flows_y470; assert_in_delta(0.35563401609091855, worksheet.outputs_energy_flows_y470, 0.002); end
  def test_outputs_energy_flows_z470; assert_in_delta(0.30299376875777534, worksheet.outputs_energy_flows_z470, 0.002); end
  def test_outputs_energy_flows_aa470; assert_in_delta(0.2284105831745067, worksheet.outputs_energy_flows_aa470, 0.002); end
  def test_outputs_energy_flows_ab470; assert_in_delta(0.1492951147519168, worksheet.outputs_energy_flows_ab470, 0.002); end
  def test_outputs_energy_flows_ac470; assert_in_delta(0.0729514151228294, worksheet.outputs_energy_flows_ac470, 0.002); end
  def test_outputs_energy_flows_ad470; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad470||0), 0.002); end
  def test_outputs_energy_flows_d472; assert_equal("Solid", worksheet.outputs_energy_flows_d472); end
  def test_outputs_energy_flows_f472; assert_equal("Transport", worksheet.outputs_energy_flows_f472); end
  def test_outputs_energy_flows_i472; assert_equal("G.C.01", worksheet.outputs_energy_flows_i472); end
  def test_outputs_energy_flows_j472; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j472); end
  def test_outputs_energy_flows_p472; assert_equal("Global transport", worksheet.outputs_energy_flows_p472); end
  def test_outputs_energy_flows_v472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v472||0), 0.002); end
  def test_outputs_energy_flows_w472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w472||0), 0.002); end
  def test_outputs_energy_flows_x472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x472||0), 0.002); end
  def test_outputs_energy_flows_y472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y472||0), 0.002); end
  def test_outputs_energy_flows_z472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z472||0), 0.002); end
  def test_outputs_energy_flows_aa472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa472||0), 0.002); end
  def test_outputs_energy_flows_ab472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab472||0), 0.002); end
  def test_outputs_energy_flows_ac472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac472||0), 0.002); end
  def test_outputs_energy_flows_ad472; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad472||0), 0.002); end
  def test_outputs_energy_flows_d474; assert_equal("Liquid", worksheet.outputs_energy_flows_d474); end
  def test_outputs_energy_flows_f474; assert_equal("Transport", worksheet.outputs_energy_flows_f474); end
  def test_outputs_energy_flows_i474; assert_equal("G.C.02", worksheet.outputs_energy_flows_i474); end
  def test_outputs_energy_flows_j474; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j474); end
  def test_outputs_energy_flows_p474; assert_equal("Global transport", worksheet.outputs_energy_flows_p474); end
  def test_outputs_energy_flows_v474; assert_in_epsilon(97.40993199671779, worksheet.outputs_energy_flows_v474, 0.002); end
  def test_outputs_energy_flows_w474; assert_in_epsilon(114.31617151793779, worksheet.outputs_energy_flows_w474, 0.002); end
  def test_outputs_energy_flows_x474; assert_in_epsilon(124.51207062919718, worksheet.outputs_energy_flows_x474, 0.002); end
  def test_outputs_energy_flows_y474; assert_in_epsilon(131.25621958593496, worksheet.outputs_energy_flows_y474, 0.002); end
  def test_outputs_energy_flows_z474; assert_in_epsilon(137.12601106696167, worksheet.outputs_energy_flows_z474, 0.002); end
  def test_outputs_energy_flows_aa474; assert_in_epsilon(140.86136816955087, worksheet.outputs_energy_flows_aa474, 0.002); end
  def test_outputs_energy_flows_ab474; assert_in_epsilon(142.48043783671505, worksheet.outputs_energy_flows_ab474, 0.002); end
  def test_outputs_energy_flows_ac474; assert_in_epsilon(144.4545714889114, worksheet.outputs_energy_flows_ac474, 0.002); end
  def test_outputs_energy_flows_ad474; assert_in_epsilon(146.94001882333194, worksheet.outputs_energy_flows_ad474, 0.002); end
  def test_outputs_energy_flows_d476; assert_equal("Gas", worksheet.outputs_energy_flows_d476); end
  def test_outputs_energy_flows_f476; assert_equal("Transport", worksheet.outputs_energy_flows_f476); end
  def test_outputs_energy_flows_i476; assert_equal("G.C.03", worksheet.outputs_energy_flows_i476); end
  def test_outputs_energy_flows_j476; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j476); end
  def test_outputs_energy_flows_p476; assert_equal("Global transport", worksheet.outputs_energy_flows_p476); end
  def test_outputs_energy_flows_v476; assert_in_delta(0.3390598127226956, worksheet.outputs_energy_flows_v476, 0.002); end
  def test_outputs_energy_flows_w476; assert_in_delta(0.8883942557734628, worksheet.outputs_energy_flows_w476, 0.002); end
  def test_outputs_energy_flows_x476; assert_in_epsilon(1.3020941442596676, worksheet.outputs_energy_flows_x476, 0.002); end
  def test_outputs_energy_flows_y476; assert_in_epsilon(1.7351659987419101, worksheet.outputs_energy_flows_y476, 0.002); end
  def test_outputs_energy_flows_z476; assert_in_epsilon(2.1772816663219956, worksheet.outputs_energy_flows_z476, 0.002); end
  def test_outputs_energy_flows_aa476; assert_in_epsilon(2.5979188143275747, worksheet.outputs_energy_flows_aa476, 0.002); end
  def test_outputs_energy_flows_ab476; assert_in_epsilon(2.9718681855064584, worksheet.outputs_energy_flows_ab476, 0.002); end
  def test_outputs_energy_flows_ac476; assert_in_epsilon(3.3313965526605815, worksheet.outputs_energy_flows_ac476, 0.002); end
  def test_outputs_energy_flows_ad476; assert_in_epsilon(3.6748908740098893, worksheet.outputs_energy_flows_ad476, 0.002); end
  def test_outputs_energy_flows_d478; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d478); end
  def test_outputs_energy_flows_f478; assert_equal("Transport", worksheet.outputs_energy_flows_f478); end
  def test_outputs_energy_flows_i478; assert_equal("G.E.01", worksheet.outputs_energy_flows_i478); end
  def test_outputs_energy_flows_j478; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j478); end
  def test_outputs_energy_flows_p478; assert_equal("Global transport", worksheet.outputs_energy_flows_p478); end
  def test_outputs_energy_flows_v478; assert_in_epsilon(1.6750258617433622, worksheet.outputs_energy_flows_v478, 0.002); end
  def test_outputs_energy_flows_w478; assert_in_epsilon(2.0230486519766315, worksheet.outputs_energy_flows_w478, 0.002); end
  def test_outputs_energy_flows_x478; assert_in_epsilon(2.558640066294828, worksheet.outputs_energy_flows_x478, 0.002); end
  def test_outputs_energy_flows_y478; assert_in_epsilon(3.070767211027325, worksheet.outputs_energy_flows_y478, 0.002); end
  def test_outputs_energy_flows_z478; assert_in_epsilon(3.5702154057514726, worksheet.outputs_energy_flows_z478, 0.002); end
  def test_outputs_energy_flows_aa478; assert_in_epsilon(4.045656145959545, worksheet.outputs_energy_flows_aa478, 0.002); end
  def test_outputs_energy_flows_ab478; assert_in_epsilon(4.47240578808328, worksheet.outputs_energy_flows_ab478, 0.002); end
  def test_outputs_energy_flows_ac478; assert_in_epsilon(4.912116451375374, worksheet.outputs_energy_flows_ac478, 0.002); end
  def test_outputs_energy_flows_ad478; assert_in_epsilon(5.382568824548341, worksheet.outputs_energy_flows_ad478, 0.002); end
  def test_outputs_energy_flows_d480; assert_equal("Solid", worksheet.outputs_energy_flows_d480); end
  def test_outputs_energy_flows_f480; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f480); end
  def test_outputs_energy_flows_i480; assert_equal("G.C.01", worksheet.outputs_energy_flows_i480); end
  def test_outputs_energy_flows_j480; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j480); end
  def test_outputs_energy_flows_k480; assert_equal("G.FF.01", worksheet.outputs_energy_flows_k480); end
  def test_outputs_energy_flows_l480; assert_equal("Global Coal and fossil waste", worksheet.outputs_energy_flows_l480); end
  def test_outputs_energy_flows_p480; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p480); end
  def test_outputs_energy_flows_v480; assert_in_epsilon(50.709351809629126, worksheet.outputs_energy_flows_v480, 0.002); end
  def test_outputs_energy_flows_w480; assert_in_epsilon(53.04626302356168, worksheet.outputs_energy_flows_w480, 0.002); end
  def test_outputs_energy_flows_x480; assert_in_epsilon(55.57939160091274, worksheet.outputs_energy_flows_x480, 0.002); end
  def test_outputs_energy_flows_y480; assert_in_epsilon(59.642418224219874, worksheet.outputs_energy_flows_y480, 0.002); end
  def test_outputs_energy_flows_z480; assert_in_epsilon(63.498183838727535, worksheet.outputs_energy_flows_z480, 0.002); end
  def test_outputs_energy_flows_aa480; assert_in_epsilon(67.1157007843216, worksheet.outputs_energy_flows_aa480, 0.002); end
  def test_outputs_energy_flows_ab480; assert_in_epsilon(70.78310124285191, worksheet.outputs_energy_flows_ab480, 0.002); end
  def test_outputs_energy_flows_ac480; assert_in_epsilon(74.45888304870635, worksheet.outputs_energy_flows_ac480, 0.002); end
  def test_outputs_energy_flows_ad480; assert_in_epsilon(77.92345060059145, worksheet.outputs_energy_flows_ad480, 0.002); end
  def test_outputs_energy_flows_d482; assert_equal("Liquid", worksheet.outputs_energy_flows_d482); end
  def test_outputs_energy_flows_f482; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f482); end
  def test_outputs_energy_flows_i482; assert_equal("G.C.02", worksheet.outputs_energy_flows_i482); end
  def test_outputs_energy_flows_j482; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j482); end
  def test_outputs_energy_flows_k482; assert_equal("G.FF.02", worksheet.outputs_energy_flows_k482); end
  def test_outputs_energy_flows_l482; assert_equal("Global Oil and petroleum products", worksheet.outputs_energy_flows_l482); end
  def test_outputs_energy_flows_p482; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p482); end
  def test_outputs_energy_flows_v482; assert_in_epsilon(30.80950689932375, worksheet.outputs_energy_flows_v482, 0.002); end
  def test_outputs_energy_flows_w482; assert_in_epsilon(33.019826612477104, worksheet.outputs_energy_flows_w482, 0.002); end
  def test_outputs_energy_flows_x482; assert_in_epsilon(35.51885350577898, worksheet.outputs_energy_flows_x482, 0.002); end
  def test_outputs_energy_flows_y482; assert_in_epsilon(39.539740671094464, worksheet.outputs_energy_flows_y482, 0.002); end
  def test_outputs_energy_flows_z482; assert_in_epsilon(43.6707013362991, worksheet.outputs_energy_flows_z482, 0.002); end
  def test_outputs_energy_flows_aa482; assert_in_epsilon(47.73039182544069, worksheet.outputs_energy_flows_aa482, 0.002); end
  def test_outputs_energy_flows_ab482; assert_in_epsilon(52.11084480419961, worksheet.outputs_energy_flows_ab482, 0.002); end
  def test_outputs_energy_flows_ac482; assert_in_epsilon(56.47922776973796, worksheet.outputs_energy_flows_ac482, 0.002); end
  def test_outputs_energy_flows_ad482; assert_in_epsilon(61.065619959933, worksheet.outputs_energy_flows_ad482, 0.002); end
  def test_outputs_energy_flows_d484; assert_equal("Gas", worksheet.outputs_energy_flows_d484); end
  def test_outputs_energy_flows_f484; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f484); end
  def test_outputs_energy_flows_i484; assert_equal("G.C.03", worksheet.outputs_energy_flows_i484); end
  def test_outputs_energy_flows_j484; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j484); end
  def test_outputs_energy_flows_k484; assert_equal("G.FF.03", worksheet.outputs_energy_flows_k484); end
  def test_outputs_energy_flows_l484; assert_equal("Global Natural gas", worksheet.outputs_energy_flows_l484); end
  def test_outputs_energy_flows_p484; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p484); end
  def test_outputs_energy_flows_v484; assert_in_epsilon(28.315031514137644, worksheet.outputs_energy_flows_v484, 0.002); end
  def test_outputs_energy_flows_w484; assert_in_epsilon(30.25015202976967, worksheet.outputs_energy_flows_w484, 0.002); end
  def test_outputs_energy_flows_x484; assert_in_epsilon(32.742080665350144, worksheet.outputs_energy_flows_x484, 0.002); end
  def test_outputs_energy_flows_y484; assert_in_epsilon(35.91811195585025, worksheet.outputs_energy_flows_y484, 0.002); end
  def test_outputs_energy_flows_z484; assert_in_epsilon(39.13427030638985, worksheet.outputs_energy_flows_z484, 0.002); end
  def test_outputs_energy_flows_aa484; assert_in_epsilon(42.33351884111195, worksheet.outputs_energy_flows_aa484, 0.002); end
  def test_outputs_energy_flows_ab484; assert_in_epsilon(45.62585794451883, worksheet.outputs_energy_flows_ab484, 0.002); end
  def test_outputs_energy_flows_ac484; assert_in_epsilon(48.784906042133365, worksheet.outputs_energy_flows_ac484, 0.002); end
  def test_outputs_energy_flows_ad484; assert_in_epsilon(51.941745006385894, worksheet.outputs_energy_flows_ad484, 0.002); end
  def test_outputs_energy_flows_d486; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d486); end
  def test_outputs_energy_flows_f486; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f486); end
  def test_outputs_energy_flows_i486; assert_equal("G.E.01", worksheet.outputs_energy_flows_i486); end
  def test_outputs_energy_flows_j486; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j486); end
  def test_outputs_energy_flows_p486; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p486); end
  def test_outputs_energy_flows_v486; assert_in_epsilon(28.203628093079455, worksheet.outputs_energy_flows_v486, 0.002); end
  def test_outputs_energy_flows_w486; assert_in_epsilon(30.03162934440616, worksheet.outputs_energy_flows_w486, 0.002); end
  def test_outputs_energy_flows_x486; assert_in_epsilon(32.40242757691013, worksheet.outputs_energy_flows_x486, 0.002); end
  def test_outputs_energy_flows_y486; assert_in_epsilon(35.432201051447635, worksheet.outputs_energy_flows_y486, 0.002); end
  def test_outputs_energy_flows_z486; assert_in_epsilon(38.42867416731621, worksheet.outputs_energy_flows_z486, 0.002); end
  def test_outputs_energy_flows_aa486; assert_in_epsilon(41.31125130709893, worksheet.outputs_energy_flows_aa486, 0.002); end
  def test_outputs_energy_flows_ab486; assert_in_epsilon(44.252846962380154, worksheet.outputs_energy_flows_ab486, 0.002); end
  def test_outputs_energy_flows_ac486; assert_in_epsilon(47.137142528438886, worksheet.outputs_energy_flows_ac486, 0.002); end
  def test_outputs_energy_flows_ad486; assert_in_epsilon(50.02265864193405, worksheet.outputs_energy_flows_ad486, 0.002); end
  def test_outputs_energy_flows_d488; assert_equal("Heat network", worksheet.outputs_energy_flows_d488); end
  def test_outputs_energy_flows_f488; assert_equal("Manufacturing", worksheet.outputs_energy_flows_f488); end
  def test_outputs_energy_flows_i488; assert_equal("G.H.01", worksheet.outputs_energy_flows_i488); end
  def test_outputs_energy_flows_j488; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j488); end
  def test_outputs_energy_flows_p488; assert_equal("Global manufacturing", worksheet.outputs_energy_flows_p488); end
  def test_outputs_energy_flows_v488; assert_in_epsilon(5.310102447345097, worksheet.outputs_energy_flows_v488, 0.002); end
  def test_outputs_energy_flows_w488; assert_in_epsilon(5.637883337058537, worksheet.outputs_energy_flows_w488, 0.002); end
  def test_outputs_energy_flows_x488; assert_in_epsilon(6.109079869136266, worksheet.outputs_energy_flows_x488, 0.002); end
  def test_outputs_energy_flows_y488; assert_in_epsilon(6.754559683645565, worksheet.outputs_energy_flows_y488, 0.002); end
  def test_outputs_energy_flows_z488; assert_in_epsilon(7.40386792401911, worksheet.outputs_energy_flows_z488, 0.002); end
  def test_outputs_energy_flows_aa488; assert_in_epsilon(8.035390663440873, worksheet.outputs_energy_flows_aa488, 0.002); end
  def test_outputs_energy_flows_ab488; assert_in_epsilon(8.6939962679787, worksheet.outputs_energy_flows_ab488, 0.002); end
  def test_outputs_energy_flows_ac488; assert_in_epsilon(9.339279733447285, worksheet.outputs_energy_flows_ac488, 0.002); end
  def test_outputs_energy_flows_ad488; assert_in_epsilon(9.997894022601116, worksheet.outputs_energy_flows_ad488, 0.002); end
  def test_outputs_energy_flows_d490; assert_equal("Solid", worksheet.outputs_energy_flows_d490); end
  def test_outputs_energy_flows_f490; assert_equal("Buildings", worksheet.outputs_energy_flows_f490); end
  def test_outputs_energy_flows_i490; assert_equal("G.C.01", worksheet.outputs_energy_flows_i490); end
  def test_outputs_energy_flows_j490; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j490); end
  def test_outputs_energy_flows_k490; assert_equal("G.BM.13", worksheet.outputs_energy_flows_k490); end
  def test_outputs_energy_flows_l490; assert_equal("Global Traditional biomass", worksheet.outputs_energy_flows_l490); end
  def test_outputs_energy_flows_n490; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n490); end
  def test_outputs_energy_flows_o490; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o490); end
  def test_outputs_energy_flows_p490; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p490); end
  def test_outputs_energy_flows_q490; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q490); end
  def test_outputs_energy_flows_r490; assert_equal("non-residential", worksheet.outputs_energy_flows_r490); end
  def test_outputs_energy_flows_v490; assert_in_epsilon(35.77163991900899, worksheet.outputs_energy_flows_v490, 0.002); end
  def test_outputs_energy_flows_w490; assert_in_epsilon(34.69831287327536, worksheet.outputs_energy_flows_w490, 0.002); end
  def test_outputs_energy_flows_x490; assert_in_epsilon(32.368385023106526, worksheet.outputs_energy_flows_x490, 0.002); end
  def test_outputs_energy_flows_y490; assert_in_epsilon(29.818939704576295, worksheet.outputs_energy_flows_y490, 0.002); end
  def test_outputs_energy_flows_z490; assert_in_epsilon(27.213034864014986, worksheet.outputs_energy_flows_z490, 0.002); end
  def test_outputs_energy_flows_aa490; assert_in_epsilon(24.869483044346886, worksheet.outputs_energy_flows_aa490, 0.002); end
  def test_outputs_energy_flows_ab490; assert_in_epsilon(22.496074971913934, worksheet.outputs_energy_flows_ab490, 0.002); end
  def test_outputs_energy_flows_ac490; assert_in_epsilon(20.453147005121117, worksheet.outputs_energy_flows_ac490, 0.002); end
  def test_outputs_energy_flows_ad490; assert_in_epsilon(18.372897810827407, worksheet.outputs_energy_flows_ad490, 0.002); end
  def test_outputs_energy_flows_d492; assert_equal("Liquid", worksheet.outputs_energy_flows_d492); end
  def test_outputs_energy_flows_f492; assert_equal("Buildings", worksheet.outputs_energy_flows_f492); end
  def test_outputs_energy_flows_i492; assert_equal("G.C.02", worksheet.outputs_energy_flows_i492); end
  def test_outputs_energy_flows_j492; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j492); end
  def test_outputs_energy_flows_n492; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n492); end
  def test_outputs_energy_flows_o492; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o492); end
  def test_outputs_energy_flows_p492; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p492); end
  def test_outputs_energy_flows_q492; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q492); end
  def test_outputs_energy_flows_r492; assert_equal("non-residential", worksheet.outputs_energy_flows_r492); end
  def test_outputs_energy_flows_v492; assert_in_epsilon(9.366776041599586, worksheet.outputs_energy_flows_v492, 0.002); end
  def test_outputs_energy_flows_w492; assert_in_epsilon(10.047611463829188, worksheet.outputs_energy_flows_w492, 0.002); end
  def test_outputs_energy_flows_x492; assert_in_epsilon(10.195912647249708, worksheet.outputs_energy_flows_x492, 0.002); end
  def test_outputs_energy_flows_y492; assert_in_epsilon(10.214072047614774, worksheet.outputs_energy_flows_y492, 0.002); end
  def test_outputs_energy_flows_z492; assert_in_epsilon(10.084477260797012, worksheet.outputs_energy_flows_z492, 0.002); end
  def test_outputs_energy_flows_aa492; assert_in_epsilon(9.786871135097618, worksheet.outputs_energy_flows_aa492, 0.002); end
  def test_outputs_energy_flows_ab492; assert_in_epsilon(9.365324326092406, worksheet.outputs_energy_flows_ab492, 0.002); end
  def test_outputs_energy_flows_ac492; assert_in_epsilon(8.807300307500785, worksheet.outputs_energy_flows_ac492, 0.002); end
  def test_outputs_energy_flows_ad492; assert_in_epsilon(8.15667717122048, worksheet.outputs_energy_flows_ad492, 0.002); end
  def test_outputs_energy_flows_d494; assert_equal("Gas", worksheet.outputs_energy_flows_d494); end
  def test_outputs_energy_flows_f494; assert_equal("Buildings", worksheet.outputs_energy_flows_f494); end
  def test_outputs_energy_flows_i494; assert_equal("G.C.03", worksheet.outputs_energy_flows_i494); end
  def test_outputs_energy_flows_j494; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j494); end
  def test_outputs_energy_flows_n494; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n494); end
  def test_outputs_energy_flows_o494; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o494); end
  def test_outputs_energy_flows_p494; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p494); end
  def test_outputs_energy_flows_q494; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q494); end
  def test_outputs_energy_flows_r494; assert_equal("non-residential", worksheet.outputs_energy_flows_r494); end
  def test_outputs_energy_flows_v494; assert_in_epsilon(23.67302064250328, worksheet.outputs_energy_flows_v494, 0.002); end
  def test_outputs_energy_flows_w494; assert_in_epsilon(25.453534814051928, worksheet.outputs_energy_flows_w494, 0.002); end
  def test_outputs_energy_flows_x494; assert_in_epsilon(26.379160978005913, worksheet.outputs_energy_flows_x494, 0.002); end
  def test_outputs_energy_flows_y494; assert_in_epsilon(27.094517558799595, worksheet.outputs_energy_flows_y494, 0.002); end
  def test_outputs_energy_flows_z494; assert_in_epsilon(27.55967805463282, worksheet.outputs_energy_flows_z494, 0.002); end
  def test_outputs_energy_flows_aa494; assert_in_epsilon(27.7101707738855, worksheet.outputs_energy_flows_aa494, 0.002); end
  def test_outputs_energy_flows_ab494; assert_in_epsilon(27.653792253235196, worksheet.outputs_energy_flows_ab494, 0.002); end
  def test_outputs_energy_flows_ac494; assert_in_epsilon(27.33262341831647, worksheet.outputs_energy_flows_ac494, 0.002); end
  def test_outputs_energy_flows_ad494; assert_in_epsilon(26.85558238519873, worksheet.outputs_energy_flows_ad494, 0.002); end
  def test_outputs_energy_flows_d496; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d496); end
  def test_outputs_energy_flows_f496; assert_equal("Buildings", worksheet.outputs_energy_flows_f496); end
  def test_outputs_energy_flows_i496; assert_equal("G.E.01", worksheet.outputs_energy_flows_i496); end
  def test_outputs_energy_flows_j496; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j496); end
  def test_outputs_energy_flows_n496; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n496); end
  def test_outputs_energy_flows_o496; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o496); end
  def test_outputs_energy_flows_p496; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p496); end
  def test_outputs_energy_flows_q496; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q496); end
  def test_outputs_energy_flows_r496; assert_equal("non-residential", worksheet.outputs_energy_flows_r496); end
  def test_outputs_energy_flows_v496; assert_in_epsilon(37.16549844912868, worksheet.outputs_energy_flows_v496, 0.002); end
  def test_outputs_energy_flows_w496; assert_in_epsilon(42.321692794341885, worksheet.outputs_energy_flows_w496, 0.002); end
  def test_outputs_energy_flows_x496; assert_in_epsilon(47.920275866294915, worksheet.outputs_energy_flows_x496, 0.002); end
  def test_outputs_energy_flows_y496; assert_in_epsilon(53.613758349858834, worksheet.outputs_energy_flows_y496, 0.002); end
  def test_outputs_energy_flows_z496; assert_in_epsilon(59.26590276837615, worksheet.outputs_energy_flows_z496, 0.002); end
  def test_outputs_energy_flows_aa496; assert_in_epsilon(64.67327401483121, worksheet.outputs_energy_flows_aa496, 0.002); end
  def test_outputs_energy_flows_ab496; assert_in_epsilon(69.89740918083238, worksheet.outputs_energy_flows_ab496, 0.002); end
  def test_outputs_energy_flows_ac496; assert_in_epsilon(74.71166532354762, worksheet.outputs_energy_flows_ac496, 0.002); end
  def test_outputs_energy_flows_ad496; assert_in_epsilon(79.20164031453845, worksheet.outputs_energy_flows_ad496, 0.002); end
  def test_outputs_energy_flows_d498; assert_equal("Heat network", worksheet.outputs_energy_flows_d498); end
  def test_outputs_energy_flows_f498; assert_equal("Buildings", worksheet.outputs_energy_flows_f498); end
  def test_outputs_energy_flows_i498; assert_equal("G.H.01", worksheet.outputs_energy_flows_i498); end
  def test_outputs_energy_flows_j498; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j498); end
  def test_outputs_energy_flows_n498; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n498); end
  def test_outputs_energy_flows_o498; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o498); end
  def test_outputs_energy_flows_p498; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p498); end
  def test_outputs_energy_flows_q498; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q498); end
  def test_outputs_energy_flows_r498; assert_equal("non-residential", worksheet.outputs_energy_flows_r498); end
  def test_outputs_energy_flows_v498; assert_in_epsilon(5.1069453671891, worksheet.outputs_energy_flows_v498, 0.002); end
  def test_outputs_energy_flows_w498; assert_in_epsilon(5.220316132647991, worksheet.outputs_energy_flows_w498, 0.002); end
  def test_outputs_energy_flows_x498; assert_in_epsilon(5.6520152018489345, worksheet.outputs_energy_flows_x498, 0.002); end
  def test_outputs_energy_flows_y498; assert_in_epsilon(6.0593814428816115, worksheet.outputs_energy_flows_y498, 0.002); end
  def test_outputs_energy_flows_z498; assert_in_epsilon(6.430279560306578, worksheet.outputs_energy_flows_z498, 0.002); end
  def test_outputs_energy_flows_aa498; assert_in_epsilon(6.741646355303229, worksheet.outputs_energy_flows_aa498, 0.002); end
  def test_outputs_energy_flows_ab498; assert_in_epsilon(7.00754740269378, worksheet.outputs_energy_flows_ab498, 0.002); end
  def test_outputs_energy_flows_ac498; assert_in_epsilon(7.202830638651979, worksheet.outputs_energy_flows_ac498, 0.002); end
  def test_outputs_energy_flows_ad498; assert_in_epsilon(7.348427790875796, worksheet.outputs_energy_flows_ad498, 0.002); end
  def test_outputs_energy_flows_d500; assert_equal("Solar", worksheet.outputs_energy_flows_d500); end
  def test_outputs_energy_flows_f500; assert_equal("Buildings", worksheet.outputs_energy_flows_f500); end
  def test_outputs_energy_flows_i500; assert_equal("G.R.01", worksheet.outputs_energy_flows_i500); end
  def test_outputs_energy_flows_j500; assert_equal("Global Solar", worksheet.outputs_energy_flows_j500); end
  def test_outputs_energy_flows_k500; assert_equal("G.R.07", worksheet.outputs_energy_flows_k500); end
  def test_outputs_energy_flows_l500; assert_equal("Global Environmental heat", worksheet.outputs_energy_flows_l500); end
  def test_outputs_energy_flows_n500; assert_equal("Urban residents with access to electricity", worksheet.outputs_energy_flows_n500); end
  def test_outputs_energy_flows_o500; assert_equal("Rural residents with access to electricity", worksheet.outputs_energy_flows_o500); end
  def test_outputs_energy_flows_p500; assert_equal("Urban residents with no access to electricity", worksheet.outputs_energy_flows_p500); end
  def test_outputs_energy_flows_q500; assert_equal("Rural residents with no access to electricity", worksheet.outputs_energy_flows_q500); end
  def test_outputs_energy_flows_r500; assert_equal("non-residential", worksheet.outputs_energy_flows_r500); end
  def test_outputs_energy_flows_v500; assert_in_epsilon(4.1095996518402576, worksheet.outputs_energy_flows_v500, 0.002); end
  def test_outputs_energy_flows_w500; assert_in_epsilon(4.631111787987766, worksheet.outputs_energy_flows_w500, 0.002); end
  def test_outputs_energy_flows_x500; assert_in_epsilon(5.708525216674042, worksheet.outputs_energy_flows_x500, 0.002); end
  def test_outputs_energy_flows_y500; assert_in_epsilon(6.876033678534835, worksheet.outputs_energy_flows_y500, 0.002); end
  def test_outputs_energy_flows_z500; assert_in_epsilon(8.11195266460178, worksheet.outputs_energy_flows_z500, 0.002); end
  def test_outputs_energy_flows_aa500; assert_in_epsilon(9.377000486693579, worksheet.outputs_energy_flows_aa500, 0.002); end
  def test_outputs_energy_flows_ab500; assert_in_epsilon(10.67365228335193, worksheet.outputs_energy_flows_ab500, 0.002); end
  def test_outputs_energy_flows_ac500; assert_in_epsilon(11.952870646698612, worksheet.outputs_energy_flows_ac500, 0.002); end
  def test_outputs_energy_flows_ad500; assert_in_epsilon(13.219191165099808, worksheet.outputs_energy_flows_ad500, 0.002); end
  def test_outputs_energy_flows_d502; assert_equal("Solid", worksheet.outputs_energy_flows_d502); end
  def test_outputs_energy_flows_f502; assert_equal("Other", worksheet.outputs_energy_flows_f502); end
  def test_outputs_energy_flows_i502; assert_equal("G.C.01", worksheet.outputs_energy_flows_i502); end
  def test_outputs_energy_flows_j502; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j502); end
  def test_outputs_energy_flows_k502; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k502); end
  def test_outputs_energy_flows_l502; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l502); end
  def test_outputs_energy_flows_n502; assert_equal("Arable.food", worksheet.outputs_energy_flows_n502); end
  def test_outputs_energy_flows_o502; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o502); end
  def test_outputs_energy_flows_v502; assert_in_delta(0.7356901397380772, worksheet.outputs_energy_flows_v502, 0.002); end
  def test_outputs_energy_flows_w502; assert_in_delta(0.7382602418177013, worksheet.outputs_energy_flows_w502, 0.002); end
  def test_outputs_energy_flows_x502; assert_in_delta(0.753856277724606, worksheet.outputs_energy_flows_x502, 0.002); end
  def test_outputs_energy_flows_y502; assert_in_delta(0.7679698764932714, worksheet.outputs_energy_flows_y502, 0.002); end
  def test_outputs_energy_flows_z502; assert_in_delta(0.7849401158882687, worksheet.outputs_energy_flows_z502, 0.002); end
  def test_outputs_energy_flows_aa502; assert_in_delta(0.8078787122671293, worksheet.outputs_energy_flows_aa502, 0.002); end
  def test_outputs_energy_flows_ab502; assert_in_delta(0.8285539547102658, worksheet.outputs_energy_flows_ab502, 0.002); end
  def test_outputs_energy_flows_ac502; assert_in_delta(0.8383654261853678, worksheet.outputs_energy_flows_ac502, 0.002); end
  def test_outputs_energy_flows_ad502; assert_in_delta(0.8411226301508633, worksheet.outputs_energy_flows_ad502, 0.002); end
  def test_outputs_energy_flows_d504; assert_equal("Liquid", worksheet.outputs_energy_flows_d504); end
  def test_outputs_energy_flows_f504; assert_equal("Other", worksheet.outputs_energy_flows_f504); end
  def test_outputs_energy_flows_i504; assert_equal("G.C.02", worksheet.outputs_energy_flows_i504); end
  def test_outputs_energy_flows_j504; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j504); end
  def test_outputs_energy_flows_n504; assert_equal("Arable.food", worksheet.outputs_energy_flows_n504); end
  def test_outputs_energy_flows_o504; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o504); end
  def test_outputs_energy_flows_v504; assert_in_epsilon(3.6540942339622156, worksheet.outputs_energy_flows_v504, 0.002); end
  def test_outputs_energy_flows_w504; assert_in_epsilon(3.6668596560911464, worksheet.outputs_energy_flows_w504, 0.002); end
  def test_outputs_energy_flows_x504; assert_in_epsilon(3.7443234982739133, worksheet.outputs_energy_flows_x504, 0.002); end
  def test_outputs_energy_flows_y504; assert_in_epsilon(3.8144242337539316, worksheet.outputs_energy_flows_y504, 0.002); end
  def test_outputs_energy_flows_z504; assert_in_epsilon(3.8987135976759424, worksheet.outputs_energy_flows_z504, 0.002); end
  def test_outputs_energy_flows_aa504; assert_in_epsilon(4.012647152355665, worksheet.outputs_energy_flows_aa504, 0.002); end
  def test_outputs_energy_flows_ab504; assert_in_epsilon(4.115338870127135, worksheet.outputs_energy_flows_ab504, 0.002); end
  def test_outputs_energy_flows_ac504; assert_in_epsilon(4.164071399499649, worksheet.outputs_energy_flows_ac504, 0.002); end
  def test_outputs_energy_flows_ad504; assert_in_epsilon(4.1777661366831085, worksheet.outputs_energy_flows_ad504, 0.002); end
  def test_outputs_energy_flows_d506; assert_equal("Gas", worksheet.outputs_energy_flows_d506); end
  def test_outputs_energy_flows_f506; assert_equal("Other", worksheet.outputs_energy_flows_f506); end
  def test_outputs_energy_flows_i506; assert_equal("G.C.03", worksheet.outputs_energy_flows_i506); end
  def test_outputs_energy_flows_j506; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j506); end
  def test_outputs_energy_flows_n506; assert_equal("Arable.food", worksheet.outputs_energy_flows_n506); end
  def test_outputs_energy_flows_o506; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o506); end
  def test_outputs_energy_flows_v506; assert_in_delta(0.4359182661605925, worksheet.outputs_energy_flows_v506, 0.002); end
  def test_outputs_energy_flows_w506; assert_in_delta(0.43744112800403695, worksheet.outputs_energy_flows_w506, 0.002); end
  def test_outputs_energy_flows_x506; assert_in_delta(0.4466822426585526, worksheet.outputs_energy_flows_x506, 0.002); end
  def test_outputs_energy_flows_y506; assert_in_delta(0.45504496926341553, worksheet.outputs_energy_flows_y506, 0.002); end
  def test_outputs_energy_flows_z506; assert_in_delta(0.4651003403141015, worksheet.outputs_energy_flows_z506, 0.002); end
  def test_outputs_energy_flows_aa506; assert_in_delta(0.47869214020582024, worksheet.outputs_energy_flows_aa506, 0.002); end
  def test_outputs_energy_flows_ab506; assert_in_delta(0.49094283564326446, worksheet.outputs_energy_flows_ab506, 0.002); end
  def test_outputs_energy_flows_ac506; assert_in_delta(0.4967564240045728, worksheet.outputs_energy_flows_ac506, 0.002); end
  def test_outputs_energy_flows_ad506; assert_in_delta(0.49839014927445047, worksheet.outputs_energy_flows_ad506, 0.002); end
  def test_outputs_energy_flows_d508; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d508); end
  def test_outputs_energy_flows_f508; assert_equal("Other", worksheet.outputs_energy_flows_f508); end
  def test_outputs_energy_flows_i508; assert_equal("G.E.01", worksheet.outputs_energy_flows_i508); end
  def test_outputs_energy_flows_j508; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j508); end
  def test_outputs_energy_flows_n508; assert_equal("Arable.food", worksheet.outputs_energy_flows_n508); end
  def test_outputs_energy_flows_o508; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o508); end
  def test_outputs_energy_flows_v508; assert_in_epsilon(2.4699953333311506, worksheet.outputs_energy_flows_v508, 0.002); end
  def test_outputs_energy_flows_w508; assert_in_epsilon(2.478624156527172, worksheet.outputs_energy_flows_w508, 0.002); end
  def test_outputs_energy_flows_x508; assert_in_epsilon(2.530986059763002, worksheet.outputs_energy_flows_x508, 0.002); end
  def test_outputs_energy_flows_y508; assert_in_epsilon(2.5783708501960003, worksheet.outputs_energy_flows_y508, 0.002); end
  def test_outputs_energy_flows_z508; assert_in_epsilon(2.635346484157982, worksheet.outputs_energy_flows_z508, 0.002); end
  def test_outputs_energy_flows_aa508; assert_in_epsilon(2.7123601927134944, worksheet.outputs_energy_flows_aa508, 0.002); end
  def test_outputs_energy_flows_ab508; assert_in_epsilon(2.7817749498124797, worksheet.outputs_energy_flows_ab508, 0.002); end
  def test_outputs_energy_flows_ac508; assert_in_epsilon(2.8147158408855093, worksheet.outputs_energy_flows_ac508, 0.002); end
  def test_outputs_energy_flows_ad508; assert_in_epsilon(2.823972837221277, worksheet.outputs_energy_flows_ad508, 0.002); end
  def test_outputs_energy_flows_d510; assert_equal("Heat network", worksheet.outputs_energy_flows_d510); end
  def test_outputs_energy_flows_f510; assert_equal("Other", worksheet.outputs_energy_flows_f510); end
  def test_outputs_energy_flows_i510; assert_equal("G.H.01", worksheet.outputs_energy_flows_i510); end
  def test_outputs_energy_flows_j510; assert_equal("Global Heat (delivered to end user)", worksheet.outputs_energy_flows_j510); end
  def test_outputs_energy_flows_n510; assert_equal("Arable.food", worksheet.outputs_energy_flows_n510); end
  def test_outputs_energy_flows_o510; assert_equal("Global Arable land for food crops", worksheet.outputs_energy_flows_o510); end
  def test_outputs_energy_flows_v510; assert_in_delta(0.45902568141552363, worksheet.outputs_energy_flows_v510, 0.002); end
  def test_outputs_energy_flows_w510; assert_in_delta(0.46062926802717363, worksheet.outputs_energy_flows_w510, 0.002); end
  def test_outputs_energy_flows_x510; assert_in_delta(0.4703602411948943, worksheet.outputs_energy_flows_x510, 0.002); end
  def test_outputs_energy_flows_y510; assert_in_delta(0.47916626419571695, worksheet.outputs_energy_flows_y510, 0.002); end
  def test_outputs_energy_flows_z510; assert_in_delta(0.48975465634794363, worksheet.outputs_energy_flows_z510, 0.002); end
  def test_outputs_energy_flows_aa510; assert_in_delta(0.5040669384688795, worksheet.outputs_energy_flows_aa510, 0.002); end
  def test_outputs_energy_flows_ab510; assert_in_delta(0.5169670260713459, worksheet.outputs_energy_flows_ab510, 0.002); end
  def test_outputs_energy_flows_ac510; assert_in_delta(0.5230887845893425, worksheet.outputs_energy_flows_ac510, 0.002); end
  def test_outputs_energy_flows_ad510; assert_in_delta(0.5248091113420074, worksheet.outputs_energy_flows_ad510, 0.002); end
  def test_outputs_energy_flows_d512; assert_equal("Solid", worksheet.outputs_energy_flows_d512); end
  def test_outputs_energy_flows_f512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f512); end
  def test_outputs_energy_flows_i512; assert_equal("G.C.01", worksheet.outputs_energy_flows_i512); end
  def test_outputs_energy_flows_j512; assert_equal("Global Solid hydrocarbons", worksheet.outputs_energy_flows_j512); end
  def test_outputs_energy_flows_k512; assert_equal("G.BM.09", worksheet.outputs_energy_flows_k512); end
  def test_outputs_energy_flows_l512; assert_equal("Global Dry biomass and waste", worksheet.outputs_energy_flows_l512); end
  def test_outputs_energy_flows_q512; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q512); end
  def test_outputs_energy_flows_v512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v512||0), 0.002); end
  def test_outputs_energy_flows_w512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w512||0), 0.002); end
  def test_outputs_energy_flows_x512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x512||0), 0.002); end
  def test_outputs_energy_flows_y512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y512||0), 0.002); end
  def test_outputs_energy_flows_z512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z512||0), 0.002); end
  def test_outputs_energy_flows_aa512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa512||0), 0.002); end
  def test_outputs_energy_flows_ab512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab512||0), 0.002); end
  def test_outputs_energy_flows_ac512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac512||0), 0.002); end
  def test_outputs_energy_flows_ad512; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad512||0), 0.002); end
  def test_outputs_energy_flows_d514; assert_equal("Liquid", worksheet.outputs_energy_flows_d514); end
  def test_outputs_energy_flows_f514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f514); end
  def test_outputs_energy_flows_i514; assert_equal("G.C.02", worksheet.outputs_energy_flows_i514); end
  def test_outputs_energy_flows_j514; assert_equal("Global Liquid hydrocarbons", worksheet.outputs_energy_flows_j514); end
  def test_outputs_energy_flows_q514; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q514); end
  def test_outputs_energy_flows_v514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v514||0), 0.002); end
  def test_outputs_energy_flows_w514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w514||0), 0.002); end
  def test_outputs_energy_flows_x514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x514||0), 0.002); end
  def test_outputs_energy_flows_y514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y514||0), 0.002); end
  def test_outputs_energy_flows_z514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z514||0), 0.002); end
  def test_outputs_energy_flows_aa514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa514||0), 0.002); end
  def test_outputs_energy_flows_ab514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab514||0), 0.002); end
  def test_outputs_energy_flows_ac514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac514||0), 0.002); end
  def test_outputs_energy_flows_ad514; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad514||0), 0.002); end
  def test_outputs_energy_flows_d516; assert_equal("Gas", worksheet.outputs_energy_flows_d516); end
  def test_outputs_energy_flows_f516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f516); end
  def test_outputs_energy_flows_i516; assert_equal("G.C.03", worksheet.outputs_energy_flows_i516); end
  def test_outputs_energy_flows_j516; assert_equal("Global Gaseous hydrocarbons", worksheet.outputs_energy_flows_j516); end
  def test_outputs_energy_flows_q516; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q516); end
  def test_outputs_energy_flows_v516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v516||0), 0.002); end
  def test_outputs_energy_flows_w516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w516||0), 0.002); end
  def test_outputs_energy_flows_x516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x516||0), 0.002); end
  def test_outputs_energy_flows_y516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y516||0), 0.002); end
  def test_outputs_energy_flows_z516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z516||0), 0.002); end
  def test_outputs_energy_flows_aa516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa516||0), 0.002); end
  def test_outputs_energy_flows_ab516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab516||0), 0.002); end
  def test_outputs_energy_flows_ac516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac516||0), 0.002); end
  def test_outputs_energy_flows_ad516; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad516||0), 0.002); end
  def test_outputs_energy_flows_d518; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d518); end
  def test_outputs_energy_flows_f518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_f518); end
  def test_outputs_energy_flows_i518; assert_equal("G.E.01", worksheet.outputs_energy_flows_i518); end
  def test_outputs_energy_flows_j518; assert_equal("Global Electricity (delivered to end user)", worksheet.outputs_energy_flows_j518); end
  def test_outputs_energy_flows_q518; assert_equal("Greenhouse gas removal", worksheet.outputs_energy_flows_q518); end
  def test_outputs_energy_flows_v518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_v518||0), 0.002); end
  def test_outputs_energy_flows_w518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_w518||0), 0.002); end
  def test_outputs_energy_flows_x518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_x518||0), 0.002); end
  def test_outputs_energy_flows_y518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_y518||0), 0.002); end
  def test_outputs_energy_flows_z518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_z518||0), 0.002); end
  def test_outputs_energy_flows_aa518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_aa518||0), 0.002); end
  def test_outputs_energy_flows_ab518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ab518||0), 0.002); end
  def test_outputs_energy_flows_ac518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ac518||0), 0.002); end
  def test_outputs_energy_flows_ad518; assert_in_delta(0.0, (worksheet.outputs_energy_flows_ad518||0), 0.002); end
  def test_outputs_energy_flows_d520; assert_equal("Electricity grid", worksheet.outputs_energy_flows_d520); end
  def test_outputs_energy_flows_f520; assert_equal("Losses / own use", worksheet.outputs_energy_flows_f520); end
  def test_outputs_energy_flows_i520; assert_equal("G.L.02", worksheet.outputs_energy_flows_i520); end
  def test_outputs_energy_flows_j520; assert_equal("Global Distribution losses and own use", worksheet.outputs_energy_flows_j520); end
  def test_outputs_energy_flows_o520; assert_equal("electricity.network", worksheet.outputs_energy_flows_o520); end
  def test_outputs_energy_flows_p520; assert_equal("Global Electricity distribution network", worksheet.outputs_energy_flows_p520); end
  def test_outputs_energy_flows_v520; assert_in_epsilon(6.0350965130992895, worksheet.outputs_energy_flows_v520, 0.002); end
  def test_outputs_energy_flows_w520; assert_in_epsilon(6.6739599893730235, worksheet.outputs_energy_flows_w520, 0.002); end
  def test_outputs_energy_flows_x520; assert_in_epsilon(7.410836917159837, worksheet.outputs_energy_flows_x520, 0.002); end
  def test_outputs_energy_flows_y520; assert_in_epsilon(8.209542010667416, worksheet.outputs_energy_flows_y520, 0.002); end
  def test_outputs_energy_flows_z520; assert_in_epsilon(9.005019090556265, worksheet.outputs_energy_flows_z520, 0.002); end
  def test_outputs_energy_flows_aa520; assert_in_epsilon(9.7689831219131, worksheet.outputs_energy_flows_aa520, 0.002); end
  def test_outputs_energy_flows_ab520; assert_in_epsilon(10.515597858359412, worksheet.outputs_energy_flows_ab520, 0.002); end
  def test_outputs_energy_flows_ac520; assert_in_epsilon(11.221141180459096, worksheet.outputs_energy_flows_ac520, 0.002); end
  def test_outputs_energy_flows_ad520; assert_in_epsilon(11.900637609452952, worksheet.outputs_energy_flows_ad520, 0.002); end
  def test_outputs_summary_table_c5; assert_equal("Supertable", worksheet.outputs_summary_table_c5); end
  def test_outputs_summary_table_d5; assert_equal("webtool.supertable", worksheet.outputs_summary_table_d5); end
  def test_outputs_summary_table_e5; assert_equal("Formatted numbers", worksheet.outputs_summary_table_e5); end
  def test_outputs_summary_table_f6; assert_equal("User’s pathway", worksheet.outputs_summary_table_f6); end
  def test_outputs_summary_table_g6; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g6); end
  def test_outputs_summary_table_c7; assert_equal("Name", worksheet.outputs_summary_table_c7); end
  def test_outputs_summary_table_d7; assert_equal("Unit", worksheet.outputs_summary_table_d7); end
  def test_outputs_summary_table_e7; assert_equal("2011", worksheet.outputs_summary_table_e7); end
  def test_outputs_summary_table_f7; assert_equal("2050", worksheet.outputs_summary_table_f7); end
  def test_outputs_summary_table_g7; assert_equal("% increase 2011 to 2050", worksheet.outputs_summary_table_g7); end
  def test_outputs_summary_table_b8; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b8); end
  def test_outputs_summary_table_c8; assert_equal("GHG emissions (t CO2e) per capita", worksheet.outputs_summary_table_c8); end
  def test_outputs_summary_table_d8; assert_equal("t CO2e / capita", worksheet.outputs_summary_table_d8); end
  def test_outputs_summary_table_e8; assert_equal("6.3", worksheet.outputs_summary_table_e8); end
  def test_outputs_summary_table_f8; assert_equal("7.3", worksheet.outputs_summary_table_f8); end
  def test_outputs_summary_table_g8; assert_equal("16%", worksheet.outputs_summary_table_g8); end
  def test_outputs_summary_table_c9; assert_equal("Cumulative emissions by 2100 (Gt CO2e)", worksheet.outputs_summary_table_c9); end
  def test_outputs_summary_table_d9; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d9); end
  def test_outputs_summary_table_e9; assert_equal("6,579", worksheet.outputs_summary_table_e9); end
  def test_outputs_summary_table_c10; assert_equal("Temperature change in 2100 (⁰C)", worksheet.outputs_summary_table_c10); end
  def test_outputs_summary_table_d10; assert_equal("⁰C", worksheet.outputs_summary_table_d10); end
  def test_outputs_summary_table_e10; assert_equal("1.8⁰C to 5.8⁰C higher", worksheet.outputs_summary_table_e10); end
  def test_outputs_summary_table_b12; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b12); end
  def test_outputs_summary_table_c12; assert_equal("Population (billions of people)", worksheet.outputs_summary_table_c12); end
  def test_outputs_summary_table_d12; assert_equal("billions of people", worksheet.outputs_summary_table_d12); end
  def test_outputs_summary_table_e12; assert_equal("7.0", worksheet.outputs_summary_table_e12); end
  def test_outputs_summary_table_f12; assert_equal("9.6", worksheet.outputs_summary_table_f12); end
  def test_outputs_summary_table_g12; assert_equal("37%", worksheet.outputs_summary_table_g12); end
  def test_outputs_summary_table_c13; assert_equal("% population in urban areas", worksheet.outputs_summary_table_c13); end
  def test_outputs_summary_table_d13; assert_equal("%", worksheet.outputs_summary_table_d13); end
  def test_outputs_summary_table_e13; assert_equal("52.1%", worksheet.outputs_summary_table_e13); end
  def test_outputs_summary_table_f13; assert_equal("66.4%", worksheet.outputs_summary_table_f13); end
  def test_outputs_summary_table_g13; assert_equal("27%", worksheet.outputs_summary_table_g13); end
  def test_outputs_summary_table_b15; assert_equal("Energy", worksheet.outputs_summary_table_b15); end
  def test_outputs_summary_table_c15; assert_equal("Total energy supply (EJ / year)", worksheet.outputs_summary_table_c15); end
  def test_outputs_summary_table_d15; assert_equal("EJ / year", worksheet.outputs_summary_table_d15); end
  def test_outputs_summary_table_e15; assert_equal("579", worksheet.outputs_summary_table_e15); end
  def test_outputs_summary_table_f15; assert_equal("1,008", worksheet.outputs_summary_table_f15); end
  def test_outputs_summary_table_g15; assert_equal("74%", worksheet.outputs_summary_table_g15); end
  def test_outputs_summary_table_c16; assert_equal("Total energy supply (EJ / year)", worksheet.outputs_summary_table_c16); end
  def test_outputs_summary_table_d16; assert_equal("EJ / year", worksheet.outputs_summary_table_d16); end
  def test_outputs_summary_table_e16; assert_equal("370", worksheet.outputs_summary_table_e16); end
  def test_outputs_summary_table_f16; assert_equal("577", worksheet.outputs_summary_table_f16); end
  def test_outputs_summary_table_g16; assert_equal("56%", worksheet.outputs_summary_table_g16); end
  def test_outputs_summary_table_c17; assert_equal("Energy demand (kWh / capita)", worksheet.outputs_summary_table_c17); end
  def test_outputs_summary_table_d17; assert_equal("kWh / capita", worksheet.outputs_summary_table_d17); end
  def test_outputs_summary_table_e17; assert_equal("14,769", worksheet.outputs_summary_table_e17); end
  def test_outputs_summary_table_f17; assert_equal("16,778", worksheet.outputs_summary_table_f17); end
  def test_outputs_summary_table_g17; assert_equal("14%", worksheet.outputs_summary_table_g17); end
  def test_outputs_summary_table_c18; assert_equal("Proportion of primary energy from fossil fuels ", worksheet.outputs_summary_table_c18); end
  def test_outputs_summary_table_d18; assert_equal("%", worksheet.outputs_summary_table_d18); end
  def test_outputs_summary_table_e18; assert_equal("81.6%", worksheet.outputs_summary_table_e18); end
  def test_outputs_summary_table_f18; assert_equal("82.2%", worksheet.outputs_summary_table_f18); end
  def test_outputs_summary_table_g18; assert_equal("1%", worksheet.outputs_summary_table_g18); end
  def test_outputs_summary_table_c19; assert_equal("Bioenergy supply (EJ / year)", worksheet.outputs_summary_table_c19); end
  def test_outputs_summary_table_d19; assert_equal("EJ / year", worksheet.outputs_summary_table_d19); end
  def test_outputs_summary_table_e19; assert_equal("57.3", worksheet.outputs_summary_table_e19); end
  def test_outputs_summary_table_f19; assert_equal("55.3", worksheet.outputs_summary_table_f19); end
  def test_outputs_summary_table_g19; assert_equal("-3%", worksheet.outputs_summary_table_g19); end
  def test_outputs_summary_table_c20; assert_equal("% of oil reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c20); end
  def test_outputs_summary_table_d20; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d20); end
  def test_outputs_summary_table_e20; assert_equal("100%", worksheet.outputs_summary_table_e20); end
  def test_outputs_summary_table_f20; assert_equal("3% to 14%", worksheet.outputs_summary_table_f20); end
  def test_outputs_summary_table_c21; assert_equal("% of gas reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c21); end
  def test_outputs_summary_table_d21; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d21); end
  def test_outputs_summary_table_e21; assert_equal("100%", worksheet.outputs_summary_table_e21); end
  def test_outputs_summary_table_f21; assert_equal("30% to 32%", worksheet.outputs_summary_table_f21); end
  def test_outputs_summary_table_c22; assert_equal("% of coal reserves (as of 2011) left in the ground ", worksheet.outputs_summary_table_c22); end
  def test_outputs_summary_table_d22; assert_equal("% of 2011 reserves", worksheet.outputs_summary_table_d22); end
  def test_outputs_summary_table_e22; assert_equal("100%", worksheet.outputs_summary_table_e22); end
  def test_outputs_summary_table_f22; assert_equal("68% to 71%", worksheet.outputs_summary_table_f22); end
  def test_outputs_summary_table_b24; assert_equal("Electricity", worksheet.outputs_summary_table_b24); end
  def test_outputs_summary_table_c24; assert_equal("Electricity demand (kWh / capita)", worksheet.outputs_summary_table_c24); end
  def test_outputs_summary_table_d24; assert_equal("kWh / capita", worksheet.outputs_summary_table_d24); end
  def test_outputs_summary_table_e24; assert_equal("2,831", worksheet.outputs_summary_table_e24); end
  def test_outputs_summary_table_f24; assert_equal("4,072", worksheet.outputs_summary_table_f24); end
  def test_outputs_summary_table_g24; assert_equal("44%", worksheet.outputs_summary_table_g24); end
  def test_outputs_summary_table_c25; assert_equal("Wind capacity (GW)", worksheet.outputs_summary_table_c25); end
  def test_outputs_summary_table_d25; assert_equal("GW", worksheet.outputs_summary_table_d25); end
  def test_outputs_summary_table_e25; assert_equal("238", worksheet.outputs_summary_table_e25); end
  def test_outputs_summary_table_f25; assert_equal("1,390", worksheet.outputs_summary_table_f25); end
  def test_outputs_summary_table_g25; assert_equal("485%", worksheet.outputs_summary_table_g25); end
  def test_outputs_summary_table_c26; assert_equal("Solar capacity (GW)", worksheet.outputs_summary_table_c26); end
  def test_outputs_summary_table_d26; assert_equal("GW", worksheet.outputs_summary_table_d26); end
  def test_outputs_summary_table_e26; assert_equal("71", worksheet.outputs_summary_table_e26); end
  def test_outputs_summary_table_f26; assert_equal("882", worksheet.outputs_summary_table_f26); end
  def test_outputs_summary_table_g26; assert_equal("1137%", worksheet.outputs_summary_table_g26); end
  def test_outputs_summary_table_c27; assert_equal("Nuclear capacity (GW)", worksheet.outputs_summary_table_c27); end
  def test_outputs_summary_table_d27; assert_equal("GW", worksheet.outputs_summary_table_d27); end
  def test_outputs_summary_table_e27; assert_equal("364", worksheet.outputs_summary_table_e27); end
  def test_outputs_summary_table_f27; assert_equal("617", worksheet.outputs_summary_table_f27); end
  def test_outputs_summary_table_g27; assert_equal("69%", worksheet.outputs_summary_table_g27); end
  def test_outputs_summary_table_c28; assert_equal("Hydro-electric capacity (GW)", worksheet.outputs_summary_table_c28); end
  def test_outputs_summary_table_d28; assert_equal("GW", worksheet.outputs_summary_table_d28); end
  def test_outputs_summary_table_e28; assert_equal("970", worksheet.outputs_summary_table_e28); end
  def test_outputs_summary_table_f28; assert_equal("1,694", worksheet.outputs_summary_table_f28); end
  def test_outputs_summary_table_g28; assert_equal("75%", worksheet.outputs_summary_table_g28); end
  def test_outputs_summary_table_c29; assert_equal("CCS for power (GW)", worksheet.outputs_summary_table_c29); end
  def test_outputs_summary_table_d29; assert_equal("GW", worksheet.outputs_summary_table_d29); end
  def test_outputs_summary_table_e29; assert_equal("0", worksheet.outputs_summary_table_e29); end
  def test_outputs_summary_table_f29; assert_equal("111", worksheet.outputs_summary_table_f29); end
  def test_outputs_summary_table_g29; assert_equal("", worksheet.outputs_summary_table_g29); end
  def test_outputs_summary_table_c30; assert_equal("Unabated fossil fuel capacity (GW)", worksheet.outputs_summary_table_c30); end
  def test_outputs_summary_table_d30; assert_equal("GW", worksheet.outputs_summary_table_d30); end
  def test_outputs_summary_table_e30; assert_equal("3,656", worksheet.outputs_summary_table_e30); end
  def test_outputs_summary_table_f30; assert_equal("15,238", worksheet.outputs_summary_table_f30); end
  def test_outputs_summary_table_g30; assert_equal("317%", worksheet.outputs_summary_table_g30); end
  def test_outputs_summary_table_c31; assert_equal("Storage capacity (GW)", worksheet.outputs_summary_table_c31); end
  def test_outputs_summary_table_d31; assert_equal("GW", worksheet.outputs_summary_table_d31); end
  def test_outputs_summary_table_e31; assert_equal("120", worksheet.outputs_summary_table_e31); end
  def test_outputs_summary_table_f31; assert_equal("278", worksheet.outputs_summary_table_f31); end
  def test_outputs_summary_table_g31; assert_equal("131%", worksheet.outputs_summary_table_g31); end
  def test_outputs_summary_table_c32; assert_equal("Efficiency of unabated fossil fuel power generation", worksheet.outputs_summary_table_c32); end
  def test_outputs_summary_table_d32; assert_equal("% efficiency", worksheet.outputs_summary_table_d32); end
  def test_outputs_summary_table_e32; assert_equal("39%", worksheet.outputs_summary_table_e32); end
  def test_outputs_summary_table_f32; assert_equal("39%", worksheet.outputs_summary_table_f32); end
  def test_outputs_summary_table_g32; assert_equal("0%", worksheet.outputs_summary_table_g32); end
  def test_outputs_summary_table_c33; assert_equal("Efficiency of CCS fossil fuel power generation", worksheet.outputs_summary_table_c33); end
  def test_outputs_summary_table_d33; assert_equal("% efficiency", worksheet.outputs_summary_table_d33); end
  def test_outputs_summary_table_e33; assert_equal("n / a", worksheet.outputs_summary_table_e33); end
  def test_outputs_summary_table_f33; assert_equal("46%", worksheet.outputs_summary_table_f33); end
  def test_outputs_summary_table_g33; assert_equal("", worksheet.outputs_summary_table_g33); end
  def test_outputs_summary_table_b36; assert_equal("Transport", worksheet.outputs_summary_table_b36); end
  def test_outputs_summary_table_c36; assert_equal("Number of passenger vehicles on the road (thousands)", worksheet.outputs_summary_table_c36); end
  def test_outputs_summary_table_d36; assert_equal("000's", worksheet.outputs_summary_table_d36); end
  def test_outputs_summary_table_e36; assert_equal("1,433,274", worksheet.outputs_summary_table_e36); end
  def test_outputs_summary_table_f36; assert_equal("4,136,798", worksheet.outputs_summary_table_f36); end
  def test_outputs_summary_table_g36; assert_equal("189%", worksheet.outputs_summary_table_g36); end
  def test_outputs_summary_table_c37; assert_equal("% urban cars that are zero emission (electric/hydrogen)", worksheet.outputs_summary_table_c37); end
  def test_outputs_summary_table_d37; assert_equal("% of urban cars", worksheet.outputs_summary_table_d37); end
  def test_outputs_summary_table_e37; assert_equal("0.2%", worksheet.outputs_summary_table_e37); end
  def test_outputs_summary_table_f37; assert_equal("2.0%", worksheet.outputs_summary_table_f37); end
  def test_outputs_summary_table_g37; assert_equal("821%", worksheet.outputs_summary_table_g37); end
  def test_outputs_summary_table_c38; assert_equal("Efficiency of urban ICE cars (lge per 100km)", worksheet.outputs_summary_table_c38); end
  def test_outputs_summary_table_d38; assert_equal("lge per 100km", worksheet.outputs_summary_table_d38); end
  def test_outputs_summary_table_e38; assert_equal("8.6", worksheet.outputs_summary_table_e38); end
  def test_outputs_summary_table_f38; assert_equal("5.2", worksheet.outputs_summary_table_f38); end
  def test_outputs_summary_table_g38; assert_equal("-40%", worksheet.outputs_summary_table_g38); end
  def test_outputs_summary_table_c39; assert_equal("Total passenger vehicle km travelled per capita", worksheet.outputs_summary_table_c39); end
  def test_outputs_summary_table_d39; assert_equal("Passenger km / capita", worksheet.outputs_summary_table_d39); end
  def test_outputs_summary_table_e39; assert_equal("7,495", worksheet.outputs_summary_table_e39); end
  def test_outputs_summary_table_f39; assert_equal("11,656", worksheet.outputs_summary_table_f39); end
  def test_outputs_summary_table_g39; assert_equal("56%", worksheet.outputs_summary_table_g39); end
  def test_outputs_summary_table_c40; assert_equal("% of total passenger km travelled using private transport", worksheet.outputs_summary_table_c40); end
  def test_outputs_summary_table_d40; assert_equal("% of total passenger km", worksheet.outputs_summary_table_d40); end
  def test_outputs_summary_table_e40; assert_equal("65.7%", worksheet.outputs_summary_table_e40); end
  def test_outputs_summary_table_f40; assert_equal("75.2%", worksheet.outputs_summary_table_f40); end
  def test_outputs_summary_table_g40; assert_equal("14%", worksheet.outputs_summary_table_g40); end
  def test_outputs_summary_table_c41; assert_equal("Domestic freight (Tonne km / capita)", worksheet.outputs_summary_table_c41); end
  def test_outputs_summary_table_d41; assert_equal("Tonne km / capita", worksheet.outputs_summary_table_d41); end
  def test_outputs_summary_table_e41; assert_equal("2,647", worksheet.outputs_summary_table_e41); end
  def test_outputs_summary_table_f41; assert_equal("3,649", worksheet.outputs_summary_table_f41); end
  def test_outputs_summary_table_g41; assert_equal("38%", worksheet.outputs_summary_table_g41); end
  def test_outputs_summary_table_c42; assert_equal("International freight (Tonne km / capita)", worksheet.outputs_summary_table_c42); end
  def test_outputs_summary_table_d42; assert_equal("Tonne km / capita", worksheet.outputs_summary_table_d42); end
  def test_outputs_summary_table_e42; assert_equal("9,577", worksheet.outputs_summary_table_e42); end
  def test_outputs_summary_table_f42; assert_equal("14,697", worksheet.outputs_summary_table_f42); end
  def test_outputs_summary_table_g42; assert_equal("53%", worksheet.outputs_summary_table_g42); end
  def test_outputs_summary_table_c43; assert_equal("Air freight (as % of international freight tonne-km)", worksheet.outputs_summary_table_c43); end
  def test_outputs_summary_table_d43; assert_equal("% of international freight tonne-km", worksheet.outputs_summary_table_d43); end
  def test_outputs_summary_table_e43; assert_equal("0.27%", worksheet.outputs_summary_table_e43); end
  def test_outputs_summary_table_f43; assert_equal("0.32%", worksheet.outputs_summary_table_f43); end
  def test_outputs_summary_table_g43; assert_equal("20%", worksheet.outputs_summary_table_g43); end
  def test_outputs_summary_table_b45; assert_equal("Buildings", worksheet.outputs_summary_table_b45); end
  def test_outputs_summary_table_c45; assert_equal("Number of appliances per household", worksheet.outputs_summary_table_c45); end
  def test_outputs_summary_table_d45; assert_equal("No. of appliances", worksheet.outputs_summary_table_d45); end
  def test_outputs_summary_table_e45; assert_equal("5.1", worksheet.outputs_summary_table_e45); end
  def test_outputs_summary_table_f45; assert_equal("9.2", worksheet.outputs_summary_table_f45); end
  def test_outputs_summary_table_g45; assert_equal("82%", worksheet.outputs_summary_table_g45); end
  def test_outputs_summary_table_c46; assert_equal("Refrigerator average power (W) in urban areas", worksheet.outputs_summary_table_c46); end
  def test_outputs_summary_table_d46; assert_equal("Average power (W)", worksheet.outputs_summary_table_d46); end
  def test_outputs_summary_table_e46; assert_equal("66", worksheet.outputs_summary_table_e46); end
  def test_outputs_summary_table_f46; assert_equal("49", worksheet.outputs_summary_table_f46); end
  def test_outputs_summary_table_g46; assert_equal("-26%", worksheet.outputs_summary_table_g46); end
  def test_outputs_summary_table_c47; assert_equal("Building temperature in warm months (⁰C)", worksheet.outputs_summary_table_c47); end
  def test_outputs_summary_table_d47; assert_equal("⁰C", worksheet.outputs_summary_table_d47); end
  def test_outputs_summary_table_e47; assert_equal("27.4", worksheet.outputs_summary_table_e47); end
  def test_outputs_summary_table_f47; assert_equal("25.0", worksheet.outputs_summary_table_f47); end
  def test_outputs_summary_table_g47; assert_equal("-9%", worksheet.outputs_summary_table_g47); end
  def test_outputs_summary_table_c48; assert_equal("Building temperature in cold months (⁰C)", worksheet.outputs_summary_table_c48); end
  def test_outputs_summary_table_d48; assert_equal("⁰C", worksheet.outputs_summary_table_d48); end
  def test_outputs_summary_table_e48; assert_equal("15.9", worksheet.outputs_summary_table_e48); end
  def test_outputs_summary_table_f48; assert_equal("18.3", worksheet.outputs_summary_table_f48); end
  def test_outputs_summary_table_g48; assert_equal("15%", worksheet.outputs_summary_table_g48); end
  def test_outputs_summary_table_c49; assert_equal("Home/building insulation  (rate of heat loss in GW / M ha*℃)", worksheet.outputs_summary_table_c49); end
  def test_outputs_summary_table_d49; assert_equal("GW / M ha*℃", worksheet.outputs_summary_table_d49); end
  def test_outputs_summary_table_e49; assert_equal("16.1", worksheet.outputs_summary_table_e49); end
  def test_outputs_summary_table_f49; assert_equal("10.2", worksheet.outputs_summary_table_f49); end
  def test_outputs_summary_table_g49; assert_equal("-37%", worksheet.outputs_summary_table_g49); end
  def test_outputs_summary_table_c50; assert_equal("% urban households using heat-pumps for space heating", worksheet.outputs_summary_table_c50); end
  def test_outputs_summary_table_d50; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d50); end
  def test_outputs_summary_table_e50; assert_equal("2.0%", worksheet.outputs_summary_table_e50); end
  def test_outputs_summary_table_f50; assert_equal("8.5%", worksheet.outputs_summary_table_f50); end
  def test_outputs_summary_table_g50; assert_equal("325%", worksheet.outputs_summary_table_g50); end
  def test_outputs_summary_table_c51; assert_equal("% urban households using electric-powered space heating", worksheet.outputs_summary_table_c51); end
  def test_outputs_summary_table_d51; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d51); end
  def test_outputs_summary_table_e51; assert_equal("3.0%", worksheet.outputs_summary_table_e51); end
  def test_outputs_summary_table_f51; assert_equal("6.5%", worksheet.outputs_summary_table_f51); end
  def test_outputs_summary_table_g51; assert_equal("117%", worksheet.outputs_summary_table_g51); end
  def test_outputs_summary_table_c52; assert_equal("% urban households using solar-powered space heating", worksheet.outputs_summary_table_c52); end
  def test_outputs_summary_table_d52; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d52); end
  def test_outputs_summary_table_e52; assert_equal("0.0%", worksheet.outputs_summary_table_e52); end
  def test_outputs_summary_table_f52; assert_equal("2.5%", worksheet.outputs_summary_table_f52); end
  def test_outputs_summary_table_g52; assert_equal("", worksheet.outputs_summary_table_g52); end
  def test_outputs_summary_table_b54; assert_equal("Manufacturing", worksheet.outputs_summary_table_b54); end
  def test_outputs_summary_table_c54; assert_equal("Iron, steel and aluminium output (Gt)", worksheet.outputs_summary_table_c54); end
  def test_outputs_summary_table_d54; assert_equal("Gt", worksheet.outputs_summary_table_d54); end
  def test_outputs_summary_table_e54; assert_equal("1.8", worksheet.outputs_summary_table_e54); end
  def test_outputs_summary_table_f54; assert_equal("2.9", worksheet.outputs_summary_table_f54); end
  def test_outputs_summary_table_g54; assert_equal("60%", worksheet.outputs_summary_table_g54); end
  def test_outputs_summary_table_c55; assert_equal("Paper and other output (Gt)", worksheet.outputs_summary_table_c55); end
  def test_outputs_summary_table_d55; assert_equal("Gt", worksheet.outputs_summary_table_d55); end
  def test_outputs_summary_table_e55; assert_equal("0.6", worksheet.outputs_summary_table_e55); end
  def test_outputs_summary_table_f55; assert_equal("1.2", worksheet.outputs_summary_table_f55); end
  def test_outputs_summary_table_g55; assert_equal("93%", worksheet.outputs_summary_table_g55); end
  def test_outputs_summary_table_c56; assert_equal("Chemicals output (Gt)", worksheet.outputs_summary_table_c56); end
  def test_outputs_summary_table_d56; assert_equal("Gt", worksheet.outputs_summary_table_d56); end
  def test_outputs_summary_table_e56; assert_equal("0.8", worksheet.outputs_summary_table_e56); end
  def test_outputs_summary_table_f56; assert_equal("1.5", worksheet.outputs_summary_table_f56); end
  def test_outputs_summary_table_g56; assert_equal("97%", worksheet.outputs_summary_table_g56); end
  def test_outputs_summary_table_c57; assert_equal("Cement output (Gt)", worksheet.outputs_summary_table_c57); end
  def test_outputs_summary_table_d57; assert_equal("Gt", worksheet.outputs_summary_table_d57); end
  def test_outputs_summary_table_e57; assert_equal("3.6", worksheet.outputs_summary_table_e57); end
  def test_outputs_summary_table_f57; assert_equal("5.1", worksheet.outputs_summary_table_f57); end
  def test_outputs_summary_table_g57; assert_equal("39%", worksheet.outputs_summary_table_g57); end
  def test_outputs_summary_table_c58; assert_equal("Timber output (Gt)", worksheet.outputs_summary_table_c58); end
  def test_outputs_summary_table_d58; assert_equal("Gt", worksheet.outputs_summary_table_d58); end
  def test_outputs_summary_table_e58; assert_equal("0.8", worksheet.outputs_summary_table_e58); end
  def test_outputs_summary_table_f58; assert_equal("1.5", worksheet.outputs_summary_table_f58); end
  def test_outputs_summary_table_g58; assert_equal("85%", worksheet.outputs_summary_table_g58); end
  def test_outputs_summary_table_c59; assert_equal("Global Oxygen steel technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c59); end
  def test_outputs_summary_table_d59; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d59); end
  def test_outputs_summary_table_e59; assert_equal("0.0%", worksheet.outputs_summary_table_e59); end
  def test_outputs_summary_table_f59; assert_equal("2.5%", worksheet.outputs_summary_table_f59); end
  def test_outputs_summary_table_g59; assert_equal("", worksheet.outputs_summary_table_g59); end
  def test_outputs_summary_table_c60; assert_equal("Global Pulp & paper: Pulp technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c60); end
  def test_outputs_summary_table_d60; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d60); end
  def test_outputs_summary_table_e60; assert_equal("0.0%", worksheet.outputs_summary_table_e60); end
  def test_outputs_summary_table_f60; assert_equal("18.0%", worksheet.outputs_summary_table_f60); end
  def test_outputs_summary_table_g60; assert_equal("", worksheet.outputs_summary_table_g60); end
  def test_outputs_summary_table_c61; assert_equal("Global Chemicals: High Value Chemicals  technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c61); end
  def test_outputs_summary_table_d61; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d61); end
  def test_outputs_summary_table_e61; assert_equal("0.0%", worksheet.outputs_summary_table_e61); end
  def test_outputs_summary_table_f61; assert_equal("0.0%", worksheet.outputs_summary_table_f61); end
  def test_outputs_summary_table_g61; assert_equal("", worksheet.outputs_summary_table_g61); end
  def test_outputs_summary_table_c62; assert_equal("Global Cement technology (% decrease in energy demand from 2011)", worksheet.outputs_summary_table_c62); end
  def test_outputs_summary_table_d62; assert_equal("% decrease in energy demand from 2011", worksheet.outputs_summary_table_d62); end
  def test_outputs_summary_table_e62; assert_equal("0.0%", worksheet.outputs_summary_table_e62); end
  def test_outputs_summary_table_f62; assert_equal("7.4%", worksheet.outputs_summary_table_f62); end
  def test_outputs_summary_table_g62; assert_equal("", worksheet.outputs_summary_table_g62); end
  def test_outputs_summary_table_c63; assert_equal("% of manufacturing emissions captured by CCS", worksheet.outputs_summary_table_c63); end
  def test_outputs_summary_table_d63; assert_equal("%", worksheet.outputs_summary_table_d63); end
  def test_outputs_summary_table_e63; assert_equal("0.0%", worksheet.outputs_summary_table_e63); end
  def test_outputs_summary_table_f63; assert_equal("0.0%", worksheet.outputs_summary_table_f63); end
  def test_outputs_summary_table_g63; assert_equal("", worksheet.outputs_summary_table_g63); end
  def test_outputs_summary_table_c64; assert_equal("Demand for consumer packaging (% of 2011 tonne demand)", worksheet.outputs_summary_table_c64); end
  def test_outputs_summary_table_d64; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d64); end
  def test_outputs_summary_table_e64; assert_equal("100.0%", worksheet.outputs_summary_table_e64); end
  def test_outputs_summary_table_f64; assert_equal("252.4%", worksheet.outputs_summary_table_f64); end
  def test_outputs_summary_table_g64; assert_equal("152%", worksheet.outputs_summary_table_g64); end
  def test_outputs_summary_table_c65; assert_equal("Demand for electrical equipment (% of 2011 tonne demand)", worksheet.outputs_summary_table_c65); end
  def test_outputs_summary_table_d65; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d65); end
  def test_outputs_summary_table_e65; assert_equal("100.0%", worksheet.outputs_summary_table_e65); end
  def test_outputs_summary_table_f65; assert_equal("226.2%", worksheet.outputs_summary_table_f65); end
  def test_outputs_summary_table_g65; assert_equal("126%", worksheet.outputs_summary_table_g65); end
  def test_outputs_summary_table_c66; assert_equal("Lifespan of refrigerator (years) in urban areas", worksheet.outputs_summary_table_c66); end
  def test_outputs_summary_table_d66; assert_equal("Refrigerator lifespan (years)", worksheet.outputs_summary_table_d66); end
  def test_outputs_summary_table_e66; assert_equal("15", worksheet.outputs_summary_table_e66); end
  def test_outputs_summary_table_f66; assert_equal("12", worksheet.outputs_summary_table_f66); end
  def test_outputs_summary_table_g66; assert_equal("-20%", worksheet.outputs_summary_table_g66); end
  def test_outputs_summary_table_b68; assert_equal("Land", worksheet.outputs_summary_table_b68); end
  def test_outputs_summary_table_c68; assert_equal("Crop yields (EJ per M ha)", worksheet.outputs_summary_table_c68); end
  def test_outputs_summary_table_d68; assert_equal("EJ per M ha", worksheet.outputs_summary_table_d68); end
  def test_outputs_summary_table_e68; assert_equal("0.03", worksheet.outputs_summary_table_e68); end
  def test_outputs_summary_table_f68; assert_equal("0.04", worksheet.outputs_summary_table_f68); end
  def test_outputs_summary_table_g68; assert_equal("30%", worksheet.outputs_summary_table_g68); end
  def test_outputs_summary_table_c69; assert_equal("Livestock yields for cows and other bovines (% increase from 2011 in non-intensive animal yields and carrying capacity of pasture)", worksheet.outputs_summary_table_c69); end
  def test_outputs_summary_table_d69; assert_equal("% increase from 2011 in non-intensive animal yields (animals per area) and carrying capacity of pasture", worksheet.outputs_summary_table_d69); end
  def test_outputs_summary_table_e69; assert_equal("0.0%", worksheet.outputs_summary_table_e69); end
  def test_outputs_summary_table_f69; assert_equal("33.0%", worksheet.outputs_summary_table_f69); end
  def test_outputs_summary_table_g69; assert_equal("", worksheet.outputs_summary_table_g69); end
  def test_outputs_summary_table_c70; assert_equal("Bioenergy yields (Increase in energy crop yields (NPP) and change in crop mix from base year)", worksheet.outputs_summary_table_c70); end
  def test_outputs_summary_table_d70; assert_equal("Increase in energy crop yields (NPP) and change in crop mix from base year", worksheet.outputs_summary_table_d70); end
  def test_outputs_summary_table_e70; assert_equal("12.1%", worksheet.outputs_summary_table_e70); end
  def test_outputs_summary_table_f70; assert_equal("20.7%", worksheet.outputs_summary_table_f70); end
  def test_outputs_summary_table_g70; assert_equal("71%", worksheet.outputs_summary_table_g70); end
  def test_outputs_summary_table_c71; assert_equal("% of productive land used for bioenergy", worksheet.outputs_summary_table_c71); end
  def test_outputs_summary_table_d71; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d71); end
  def test_outputs_summary_table_e71; assert_equal(:na, worksheet.outputs_summary_table_e71); end
  def test_outputs_summary_table_f71; assert_equal(:na, worksheet.outputs_summary_table_f71); end
  def test_outputs_summary_table_g71; assert_equal(:na, worksheet.outputs_summary_table_g71); end
  def test_outputs_summary_table_c72; assert_equal("% of productive land used for food (livestock and food crops)", worksheet.outputs_summary_table_c72); end
  def test_outputs_summary_table_d72; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d72); end
  def test_outputs_summary_table_e72; assert_equal(:na, worksheet.outputs_summary_table_e72); end
  def test_outputs_summary_table_f72; assert_equal(:na, worksheet.outputs_summary_table_f72); end
  def test_outputs_summary_table_g72; assert_equal(:na, worksheet.outputs_summary_table_g72); end
  def test_outputs_summary_table_c73; assert_equal("% of productive land used for commercial forestry", worksheet.outputs_summary_table_c73); end
  def test_outputs_summary_table_d73; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d73); end
  def test_outputs_summary_table_e73; assert_equal(:na, worksheet.outputs_summary_table_e73); end
  def test_outputs_summary_table_f73; assert_equal(:na, worksheet.outputs_summary_table_f73); end
  def test_outputs_summary_table_g73; assert_equal(:na, worksheet.outputs_summary_table_g73); end
  def test_outputs_summary_table_c74; assert_equal("% of productive land used for native forest", worksheet.outputs_summary_table_c74); end
  def test_outputs_summary_table_d74; assert_equal("% of all productive land (M ha)", worksheet.outputs_summary_table_d74); end
  def test_outputs_summary_table_e74; assert_equal(:na, worksheet.outputs_summary_table_e74); end
  def test_outputs_summary_table_f74; assert_equal(:na, worksheet.outputs_summary_table_f74); end
  def test_outputs_summary_table_g74; assert_equal(:na, worksheet.outputs_summary_table_g74); end
  def test_outputs_summary_table_b76; assert_equal("Food", worksheet.outputs_summary_table_b76); end
  def test_outputs_summary_table_c76; assert_equal("Calories consumed per head (kCal)", worksheet.outputs_summary_table_c76); end
  def test_outputs_summary_table_d76; assert_equal("kCal", worksheet.outputs_summary_table_d76); end
  def test_outputs_summary_table_e76; assert_equal("2,170", worksheet.outputs_summary_table_e76); end
  def test_outputs_summary_table_f76; assert_equal("2,340", worksheet.outputs_summary_table_f76); end
  def test_outputs_summary_table_g76; assert_equal("8%", worksheet.outputs_summary_table_g76); end
  def test_outputs_summary_table_c77; assert_equal("Calories from meat (kCal)", worksheet.outputs_summary_table_c77); end
  def test_outputs_summary_table_d77; assert_equal("kCal", worksheet.outputs_summary_table_d77); end
  def test_outputs_summary_table_e77; assert_equal("191", worksheet.outputs_summary_table_e77); end
  def test_outputs_summary_table_f77; assert_equal("209", worksheet.outputs_summary_table_f77); end
  def test_outputs_summary_table_g77; assert_equal("9%", worksheet.outputs_summary_table_g77); end
  def test_outputs_summary_table_b79; assert_equal("Cost", worksheet.outputs_summary_table_b79); end
  def test_outputs_summary_table_c79; assert_equal("Cost in 2050 - point estimate ($bn)", worksheet.outputs_summary_table_c79); end
  def test_outputs_summary_table_d79; assert_equal("$bn", worksheet.outputs_summary_table_d79); end
  def test_outputs_summary_table_e79; assert_equal("n / a", worksheet.outputs_summary_table_e79); end
  def test_outputs_summary_table_f79; assert_equal("51772.4", worksheet.outputs_summary_table_f79); end
  def test_outputs_summary_table_g79; assert_equal("", worksheet.outputs_summary_table_g79); end
  def test_outputs_summary_table_c80; assert_equal("Cost in 2050 - high estimate ($bn)", worksheet.outputs_summary_table_c80); end
  def test_outputs_summary_table_d80; assert_equal("$bn", worksheet.outputs_summary_table_d80); end
  def test_outputs_summary_table_e80; assert_equal("n / a", worksheet.outputs_summary_table_e80); end
  def test_outputs_summary_table_f80; assert_equal("82392.8", worksheet.outputs_summary_table_f80); end
  def test_outputs_summary_table_g80; assert_equal("", worksheet.outputs_summary_table_g80); end
  def test_outputs_summary_table_c81; assert_equal("Cost in 2050 - low estimate ($bn)", worksheet.outputs_summary_table_c81); end
  def test_outputs_summary_table_d81; assert_equal("$bn", worksheet.outputs_summary_table_d81); end
  def test_outputs_summary_table_e81; assert_equal("n / a", worksheet.outputs_summary_table_e81); end
  def test_outputs_summary_table_f81; assert_equal("36375.9", worksheet.outputs_summary_table_f81); end
  def test_outputs_summary_table_g81; assert_equal("", worksheet.outputs_summary_table_g81); end
  def test_outputs_summary_table_c82; assert_equal("Fuel costs as % of total costs", worksheet.outputs_summary_table_c82); end
  def test_outputs_summary_table_d82; assert_equal("% ($bn)", worksheet.outputs_summary_table_d82); end
  def test_outputs_summary_table_e82; assert_equal("n / a", worksheet.outputs_summary_table_e82); end
  def test_outputs_summary_table_f82; assert_equal("9.2%", worksheet.outputs_summary_table_f82); end
  def test_outputs_summary_table_g82; assert_equal("", worksheet.outputs_summary_table_g82); end
  def test_outputs_summary_table_c83; assert_equal("Tax levied by fossil fuel exporters in 2050 ($bn)", worksheet.outputs_summary_table_c83); end
  def test_outputs_summary_table_d83; assert_equal("$bn", worksheet.outputs_summary_table_d83); end
  def test_outputs_summary_table_e83; assert_equal("n / a", worksheet.outputs_summary_table_e83); end
  def test_outputs_summary_table_f83; assert_equal("7356.0", worksheet.outputs_summary_table_f83); end
  def test_outputs_summary_table_g83; assert_equal("", worksheet.outputs_summary_table_g83); end
  def test_outputs_summary_table_b85; assert_equal("Emissions saved", worksheet.outputs_summary_table_b85); end
  def test_outputs_summary_table_c85; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2e)", worksheet.outputs_summary_table_c85); end
  def test_outputs_summary_table_d85; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d85); end
  def test_outputs_summary_table_e85; assert_equal("0.000", worksheet.outputs_summary_table_e85); end
  def test_outputs_summary_table_f85; assert_equal("0.000", worksheet.outputs_summary_table_f85); end
  def test_outputs_summary_table_g85; assert_equal("", worksheet.outputs_summary_table_g85); end
  def test_outputs_summary_table_d90; assert_equal("Unit", worksheet.outputs_summary_table_d90); end
  def test_outputs_summary_table_e90; assert_equal("2011", worksheet.outputs_summary_table_e90); end
  def test_outputs_summary_table_f90; assert_equal("2050", worksheet.outputs_summary_table_f90); end
  def test_outputs_summary_table_g90; assert_equal("% increase", worksheet.outputs_summary_table_g90); end
  def test_outputs_summary_table_b91; assert_equal("Emissions and temperature", worksheet.outputs_summary_table_b91); end
  def test_outputs_summary_table_c91; assert_equal("Cumulative emissions by each year (Gt CO2e)", worksheet.outputs_summary_table_c91); end
  def test_outputs_summary_table_d91; assert_equal("Gt CO2e", worksheet.outputs_summary_table_d91); end
  def test_outputs_summary_table_e91; assert_equal("1,890", worksheet.outputs_summary_table_e91); end
  def test_outputs_summary_table_f91; assert_equal("3,754", worksheet.outputs_summary_table_f91); end
  def test_outputs_summary_table_g91; assert_equal("", worksheet.outputs_summary_table_g91); end
  def test_outputs_summary_table_c92; assert_equal("Post-2050 emissions trajectory", worksheet.outputs_summary_table_c92); end
  def test_outputs_summary_table_d92; assert_equal("% emissions increase every year: a proportion of average yearly change for the previous 15 year period", worksheet.outputs_summary_table_d92); end
  def test_outputs_summary_table_e92; assert_equal("33.0%", worksheet.outputs_summary_table_e92); end
  def test_outputs_summary_table_g92; assert_equal("", worksheet.outputs_summary_table_g92); end
  def test_outputs_summary_table_b94; assert_equal("Demographics and long term", worksheet.outputs_summary_table_b94); end
  def test_outputs_summary_table_c94; assert_equal("Urban population (billions of people)", worksheet.outputs_summary_table_c94); end
  def test_outputs_summary_table_d94; assert_equal("billions of people", worksheet.outputs_summary_table_d94); end
  def test_outputs_summary_table_e94; assert_equal("3.6", worksheet.outputs_summary_table_e94); end
  def test_outputs_summary_table_f94; assert_equal("6.3", worksheet.outputs_summary_table_f94); end
  def test_outputs_summary_table_g94; assert_equal("75%", worksheet.outputs_summary_table_g94); end
  def test_outputs_summary_table_c95; assert_equal("Rural population (billions of people)", worksheet.outputs_summary_table_c95); end
  def test_outputs_summary_table_d95; assert_equal("billions of people", worksheet.outputs_summary_table_d95); end
  def test_outputs_summary_table_e95; assert_equal("3.3", worksheet.outputs_summary_table_e95); end
  def test_outputs_summary_table_f95; assert_equal("3.2", worksheet.outputs_summary_table_f95); end
  def test_outputs_summary_table_g95; assert_equal("-4%", worksheet.outputs_summary_table_g95); end
  def test_outputs_summary_table_b97; assert_equal("Electricity", worksheet.outputs_summary_table_b97); end
  def test_outputs_summary_table_c97; assert_equal("Electricity demand (kWh per capita)", worksheet.outputs_summary_table_c97); end
  def test_outputs_summary_table_d97; assert_equal("kWh per capita", worksheet.outputs_summary_table_d97); end
  def test_outputs_summary_table_e97; assert_equal("2,831", worksheet.outputs_summary_table_e97); end
  def test_outputs_summary_table_f97; assert_equal("4,072", worksheet.outputs_summary_table_f97); end
  def test_outputs_summary_table_g97; assert_equal("44%", worksheet.outputs_summary_table_g97); end
  def test_outputs_summary_table_c98; assert_equal("Offshore wind capacity (GW)", worksheet.outputs_summary_table_c98); end
  def test_outputs_summary_table_d98; assert_equal("GW", worksheet.outputs_summary_table_d98); end
  def test_outputs_summary_table_e98; assert_equal("4", worksheet.outputs_summary_table_e98); end
  def test_outputs_summary_table_f98; assert_equal("273", worksheet.outputs_summary_table_f98); end
  def test_outputs_summary_table_g98; assert_equal("6559%", worksheet.outputs_summary_table_g98); end
  def test_outputs_summary_table_c99; assert_equal("Onshore wind capacity (GW)", worksheet.outputs_summary_table_c99); end
  def test_outputs_summary_table_d99; assert_equal("GW", worksheet.outputs_summary_table_d99); end
  def test_outputs_summary_table_e99; assert_equal("234", worksheet.outputs_summary_table_e99); end
  def test_outputs_summary_table_f99; assert_equal("1,117", worksheet.outputs_summary_table_f99); end
  def test_outputs_summary_table_g99; assert_equal("378%", worksheet.outputs_summary_table_g99); end
  def test_outputs_summary_table_c100; assert_equal("Solar PV capacity (GW)", worksheet.outputs_summary_table_c100); end
  def test_outputs_summary_table_d100; assert_equal("GW", worksheet.outputs_summary_table_d100); end
  def test_outputs_summary_table_e100; assert_equal("70", worksheet.outputs_summary_table_e100); end
  def test_outputs_summary_table_f100; assert_equal("727", worksheet.outputs_summary_table_f100); end
  def test_outputs_summary_table_g100; assert_equal("943%", worksheet.outputs_summary_table_g100); end
  def test_outputs_summary_table_c101; assert_equal("CSP capacity (GW)", worksheet.outputs_summary_table_c101); end
  def test_outputs_summary_table_d101; assert_equal("GW", worksheet.outputs_summary_table_d101); end
  def test_outputs_summary_table_e101; assert_equal("2", worksheet.outputs_summary_table_e101); end
  def test_outputs_summary_table_f101; assert_equal("155", worksheet.outputs_summary_table_f101); end
  def test_outputs_summary_table_g101; assert_equal("9600%", worksheet.outputs_summary_table_g101); end
  def test_outputs_summary_table_c102; assert_equal("Unabated (GW)", worksheet.outputs_summary_table_c102); end
  def test_outputs_summary_table_d102; assert_equal("GW", worksheet.outputs_summary_table_d102); end
  def test_outputs_summary_table_e102; assert_equal("3,656", worksheet.outputs_summary_table_e102); end
  def test_outputs_summary_table_f102; assert_equal("15,238", worksheet.outputs_summary_table_f102); end
  def test_outputs_summary_table_g102; assert_equal("317%", worksheet.outputs_summary_table_g102); end
  def test_outputs_summary_table_b104; assert_equal("Transport", worksheet.outputs_summary_table_b104); end
  def test_outputs_summary_table_c104; assert_equal("Light road (number of vehicles)", worksheet.outputs_summary_table_c104); end
  def test_outputs_summary_table_d104; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d104); end
  def test_outputs_summary_table_e104; assert_equal("1,418,223,728", worksheet.outputs_summary_table_e104); end
  def test_outputs_summary_table_f104; assert_equal("4,107,024,174", worksheet.outputs_summary_table_f104); end
  def test_outputs_summary_table_g104; assert_equal("190%", worksheet.outputs_summary_table_g104); end
  def test_outputs_summary_table_c105; assert_equal("Heavy road (number of vehicles)", worksheet.outputs_summary_table_c105); end
  def test_outputs_summary_table_d105; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d105); end
  def test_outputs_summary_table_e105; assert_equal("15,049,892", worksheet.outputs_summary_table_e105); end
  def test_outputs_summary_table_f105; assert_equal("29,773,892", worksheet.outputs_summary_table_f105); end
  def test_outputs_summary_table_g105; assert_equal("98%", worksheet.outputs_summary_table_g105); end
  def test_outputs_summary_table_c106; assert_equal("Rail (number of vehicles)", worksheet.outputs_summary_table_c106); end
  def test_outputs_summary_table_d106; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d106); end
  def test_outputs_summary_table_e106; assert_equal("103,517", worksheet.outputs_summary_table_e106); end
  def test_outputs_summary_table_f106; assert_equal("123,849", worksheet.outputs_summary_table_f106); end
  def test_outputs_summary_table_g106; assert_equal("20%", worksheet.outputs_summary_table_g106); end
  def test_outputs_summary_table_c107; assert_equal("Plane (number of vehicles)", worksheet.outputs_summary_table_c107); end
  def test_outputs_summary_table_d107; assert_equal("Number of vehicles", worksheet.outputs_summary_table_d107); end
  def test_outputs_summary_table_e107; assert_equal("24,997", worksheet.outputs_summary_table_e107); end
  def test_outputs_summary_table_f107; assert_equal("68,839", worksheet.outputs_summary_table_f107); end
  def test_outputs_summary_table_g107; assert_equal("175%", worksheet.outputs_summary_table_g107); end
  def test_outputs_summary_table_c108; assert_equal("Air freight (as % of international freight tonne-km)", worksheet.outputs_summary_table_c108); end
  def test_outputs_summary_table_d108; assert_equal("% of international freight tonne-km", worksheet.outputs_summary_table_d108); end
  def test_outputs_summary_table_e108; assert_equal("0.3%", worksheet.outputs_summary_table_e108); end
  def test_outputs_summary_table_f108; assert_equal("0.3%", worksheet.outputs_summary_table_f108); end
  def test_outputs_summary_table_g108; assert_equal("20%", worksheet.outputs_summary_table_g108); end
  def test_outputs_summary_table_c109; assert_equal("car.passenger.urban.ICE.liquid", worksheet.outputs_summary_table_c109); end
  def test_outputs_summary_table_d109; assert_equal("% of urban cars", worksheet.outputs_summary_table_d109); end
  def test_outputs_summary_table_e109; assert_equal("98.8%", worksheet.outputs_summary_table_e109); end
  def test_outputs_summary_table_f109; assert_equal("91.0%", worksheet.outputs_summary_table_f109); end
  def test_outputs_summary_table_g109; assert_equal("", worksheet.outputs_summary_table_g109); end
  def test_outputs_summary_table_c110; assert_equal("car.passenger.urban.ICE.gas", worksheet.outputs_summary_table_c110); end
  def test_outputs_summary_table_d110; assert_equal("% of urban cars", worksheet.outputs_summary_table_d110); end
  def test_outputs_summary_table_e110; assert_equal("1.0%", worksheet.outputs_summary_table_e110); end
  def test_outputs_summary_table_f110; assert_equal("2.0%", worksheet.outputs_summary_table_f110); end
  def test_outputs_summary_table_g110; assert_equal("", worksheet.outputs_summary_table_g110); end
  def test_outputs_summary_table_c111; assert_equal("car.passenger.urban.PH", worksheet.outputs_summary_table_c111); end
  def test_outputs_summary_table_d111; assert_equal("% of urban cars", worksheet.outputs_summary_table_d111); end
  def test_outputs_summary_table_e111; assert_equal("0.0%", worksheet.outputs_summary_table_e111); end
  def test_outputs_summary_table_f111; assert_equal("5.0%", worksheet.outputs_summary_table_f111); end
  def test_outputs_summary_table_g111; assert_equal("", worksheet.outputs_summary_table_g111); end
  def test_outputs_summary_table_c112; assert_equal("car.passenger.urban.EV", worksheet.outputs_summary_table_c112); end
  def test_outputs_summary_table_d112; assert_equal("% of urban cars", worksheet.outputs_summary_table_d112); end
  def test_outputs_summary_table_e112; assert_equal("0.2%", worksheet.outputs_summary_table_e112); end
  def test_outputs_summary_table_f112; assert_equal("2.0%", worksheet.outputs_summary_table_f112); end
  def test_outputs_summary_table_g112; assert_equal("", worksheet.outputs_summary_table_g112); end
  def test_outputs_summary_table_c113; assert_equal("car.passenger.urban.H2", worksheet.outputs_summary_table_c113); end
  def test_outputs_summary_table_d113; assert_equal("% of urban cars", worksheet.outputs_summary_table_d113); end
  def test_outputs_summary_table_e113; assert_equal("0.0%", worksheet.outputs_summary_table_e113); end
  def test_outputs_summary_table_f113; assert_equal("0.0%", worksheet.outputs_summary_table_f113); end
  def test_outputs_summary_table_g113; assert_equal("", worksheet.outputs_summary_table_g113); end
  def test_outputs_summary_table_b116; assert_equal("Buildings", worksheet.outputs_summary_table_b116); end
  def test_outputs_summary_table_c116; assert_equal("Global Urban solid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c116); end
  def test_outputs_summary_table_d116; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d116); end
  def test_outputs_summary_table_e116; assert_equal("7%", worksheet.outputs_summary_table_e116); end
  def test_outputs_summary_table_f116; assert_equal("2%", worksheet.outputs_summary_table_f116); end
  def test_outputs_summary_table_g116; assert_equal("-79%", worksheet.outputs_summary_table_g116); end
  def test_outputs_summary_table_c117; assert_equal("Global urban liquid boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c117); end
  def test_outputs_summary_table_d117; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d117); end
  def test_outputs_summary_table_e117; assert_equal("14%", worksheet.outputs_summary_table_e117); end
  def test_outputs_summary_table_f117; assert_equal("8%", worksheet.outputs_summary_table_f117); end
  def test_outputs_summary_table_g117; assert_equal("-46%", worksheet.outputs_summary_table_g117); end
  def test_outputs_summary_table_c118; assert_equal("Global urban gas boiler used by people with access to electricity for space heating", worksheet.outputs_summary_table_c118); end
  def test_outputs_summary_table_d118; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d118); end
  def test_outputs_summary_table_e118; assert_equal("55%", worksheet.outputs_summary_table_e118); end
  def test_outputs_summary_table_f118; assert_equal("33%", worksheet.outputs_summary_table_f118); end
  def test_outputs_summary_table_g118; assert_equal("-41%", worksheet.outputs_summary_table_g118); end
  def test_outputs_summary_table_c119; assert_equal("Global urban heat pump used by people with access to electricity for space heating", worksheet.outputs_summary_table_c119); end
  def test_outputs_summary_table_d119; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d119); end
  def test_outputs_summary_table_e119; assert_equal("2%", worksheet.outputs_summary_table_e119); end
  def test_outputs_summary_table_f119; assert_equal("9%", worksheet.outputs_summary_table_f119); end
  def test_outputs_summary_table_g119; assert_equal("325%", worksheet.outputs_summary_table_g119); end
  def test_outputs_summary_table_c120; assert_equal("Global urban electricity heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c120); end
  def test_outputs_summary_table_d120; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d120); end
  def test_outputs_summary_table_e120; assert_equal("3%", worksheet.outputs_summary_table_e120); end
  def test_outputs_summary_table_f120; assert_equal("7%", worksheet.outputs_summary_table_f120); end
  def test_outputs_summary_table_g120; assert_equal("117%", worksheet.outputs_summary_table_g120); end
  def test_outputs_summary_table_c121; assert_equal("Global urban solar heater used by people with access to electricity for space heating", worksheet.outputs_summary_table_c121); end
  def test_outputs_summary_table_d121; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d121); end
  def test_outputs_summary_table_e121; assert_equal("0%", worksheet.outputs_summary_table_e121); end
  def test_outputs_summary_table_f121; assert_equal("3%", worksheet.outputs_summary_table_f121); end
  def test_outputs_summary_table_g121; assert_equal("", worksheet.outputs_summary_table_g121); end
  def test_outputs_summary_table_c122; assert_equal("Global urban chp used by people with access to electricity for space heating", worksheet.outputs_summary_table_c122); end
  def test_outputs_summary_table_d122; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d122); end
  def test_outputs_summary_table_e122; assert_equal("2%", worksheet.outputs_summary_table_e122); end
  def test_outputs_summary_table_f122; assert_equal("5%", worksheet.outputs_summary_table_f122); end
  def test_outputs_summary_table_g122; assert_equal("150%", worksheet.outputs_summary_table_g122); end
  def test_outputs_summary_table_c123; assert_equal("Global urban district heating used by people with access to electricity for space heating", worksheet.outputs_summary_table_c123); end
  def test_outputs_summary_table_d123; assert_equal("% of households (from urban households with electricity access)", worksheet.outputs_summary_table_d123); end
  def test_outputs_summary_table_e123; assert_equal("17%", worksheet.outputs_summary_table_e123); end
  def test_outputs_summary_table_f123; assert_equal("36%", worksheet.outputs_summary_table_f123); end
  def test_outputs_summary_table_g123; assert_equal("112%", worksheet.outputs_summary_table_g123); end
  def test_outputs_summary_table_c124; assert_equal("% urban households using hydrocarbons (and all district heating) for space heating", worksheet.outputs_summary_table_c124); end
  def test_outputs_summary_table_d124; assert_equal("% of hhds (from all urban households with access to electricity)", worksheet.outputs_summary_table_d124); end
  def test_outputs_summary_table_e124; assert_equal("95%", worksheet.outputs_summary_table_e124); end
  def test_outputs_summary_table_f124; assert_equal("83%", worksheet.outputs_summary_table_f124); end
  def test_outputs_summary_table_g124; assert_equal("-13%", worksheet.outputs_summary_table_g124); end
  def test_outputs_summary_table_b126; assert_equal("Manufacturing", worksheet.outputs_summary_table_b126); end
  def test_outputs_summary_table_c126; assert_equal("Electrical equipment (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c126); end
  def test_outputs_summary_table_d126; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d126); end
  def test_outputs_summary_table_e126; assert_equal("100%", worksheet.outputs_summary_table_e126); end
  def test_outputs_summary_table_f126; assert_equal("226%", worksheet.outputs_summary_table_f126); end
  def test_outputs_summary_table_g126; assert_equal("126%", worksheet.outputs_summary_table_g126); end
  def test_outputs_summary_table_c127; assert_equal("Consumer packaging (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c127); end
  def test_outputs_summary_table_d127; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d127); end
  def test_outputs_summary_table_e127; assert_equal("100%", worksheet.outputs_summary_table_e127); end
  def test_outputs_summary_table_f127; assert_equal("252%", worksheet.outputs_summary_table_f127); end
  def test_outputs_summary_table_g127; assert_equal("152%", worksheet.outputs_summary_table_g127); end
  def test_outputs_summary_table_c128; assert_equal("Metal goods (% of 2011 demand (tonnes))", worksheet.outputs_summary_table_c128); end
  def test_outputs_summary_table_d128; assert_equal("% of 2011 demand (tonnes)", worksheet.outputs_summary_table_d128); end
  def test_outputs_summary_table_e128; assert_equal("100%", worksheet.outputs_summary_table_e128); end
  def test_outputs_summary_table_f128; assert_equal("252%", worksheet.outputs_summary_table_f128); end
  def test_outputs_summary_table_g128; assert_equal("152%", worksheet.outputs_summary_table_g128); end
  def test_outputs_summary_table_c129; assert_equal("IPCC emissions sector G.X2.A (Gt CO2)", worksheet.outputs_summary_table_c129); end
  def test_outputs_summary_table_d129; assert_equal("Gt CO2", worksheet.outputs_summary_table_d129); end
  def test_outputs_summary_table_e129; assert_equal("0.0", worksheet.outputs_summary_table_e129); end
  def test_outputs_summary_table_f129; assert_equal("0.0", worksheet.outputs_summary_table_f129); end
  def test_outputs_summary_table_g129; assert_equal("", worksheet.outputs_summary_table_g129); end
  def test_outputs_summary_table_c130; assert_equal("IPCC emissions sector G.X2.B (Gt CO2)", worksheet.outputs_summary_table_c130); end
  def test_outputs_summary_table_d130; assert_equal("Gt CO2", worksheet.outputs_summary_table_d130); end
  def test_outputs_summary_table_e130; assert_equal("0.0", worksheet.outputs_summary_table_e130); end
  def test_outputs_summary_table_f130; assert_equal("0.0", worksheet.outputs_summary_table_f130); end
  def test_outputs_summary_table_g130; assert_equal("", worksheet.outputs_summary_table_g130); end
  def test_outputs_summary_table_c131; assert_equal("IPCC emissions sector G.1A (Gt CO2)", worksheet.outputs_summary_table_c131); end
  def test_outputs_summary_table_d131; assert_equal("Gt CO2", worksheet.outputs_summary_table_d131); end
  def test_outputs_summary_table_e131; assert_equal("4.4", worksheet.outputs_summary_table_e131); end
  def test_outputs_summary_table_f131; assert_equal("7.5", worksheet.outputs_summary_table_f131); end
  def test_outputs_summary_table_g131; assert_equal("71%", worksheet.outputs_summary_table_g131); end
  def test_outputs_summary_table_c132; assert_equal("IPCC emissions sector G.2 (Gt CO2)", worksheet.outputs_summary_table_c132); end
  def test_outputs_summary_table_d132; assert_equal("Gt CO2", worksheet.outputs_summary_table_d132); end
  def test_outputs_summary_table_e132; assert_equal("2.4", worksheet.outputs_summary_table_e132); end
  def test_outputs_summary_table_f132; assert_equal("4.1", worksheet.outputs_summary_table_f132); end
  def test_outputs_summary_table_g132; assert_equal("70%", worksheet.outputs_summary_table_g132); end
  def test_outputs_summary_table_b134; assert_equal("Land", worksheet.outputs_summary_table_b134); end
  def test_outputs_summary_table_c134; assert_equal("Productive land for forest", worksheet.outputs_summary_table_c134); end
  def test_outputs_summary_table_d134; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d134); end
  def test_outputs_summary_table_e134; assert_equal("18%", worksheet.outputs_summary_table_e134); end
  def test_outputs_summary_table_f134; assert_equal("18%", worksheet.outputs_summary_table_f134); end
  def test_outputs_summary_table_g134; assert_equal("0%", worksheet.outputs_summary_table_g134); end
  def test_outputs_summary_table_c135; assert_equal("Productive land for bioenergy", worksheet.outputs_summary_table_c135); end
  def test_outputs_summary_table_d135; assert_equal("% of unallocated land", worksheet.outputs_summary_table_d135); end
  def test_outputs_summary_table_e135; assert_equal("78%", worksheet.outputs_summary_table_e135); end
  def test_outputs_summary_table_f135; assert_equal("78%", worksheet.outputs_summary_table_f135); end
  def test_outputs_summary_table_g135; assert_equal("0%", worksheet.outputs_summary_table_g135); end
  def test_outputs_summary_table_c136; assert_equal("Land for animals (M ha)", worksheet.outputs_summary_table_c136); end
  def test_outputs_summary_table_d136; assert_equal("M ha", worksheet.outputs_summary_table_d136); end
  def test_outputs_summary_table_e136; assert_equal("3,363", worksheet.outputs_summary_table_e136); end
  def test_outputs_summary_table_f136; assert_equal("2,938", worksheet.outputs_summary_table_f136); end
  def test_outputs_summary_table_g136; assert_equal("-13%", worksheet.outputs_summary_table_g136); end
  def test_outputs_summary_table_c137; assert_equal("Land for food crops (M ha)", worksheet.outputs_summary_table_c137); end
  def test_outputs_summary_table_d137; assert_equal("M ha", worksheet.outputs_summary_table_d137); end
  def test_outputs_summary_table_e137; assert_equal("1,443", worksheet.outputs_summary_table_e137); end
  def test_outputs_summary_table_f137; assert_equal("1,650", worksheet.outputs_summary_table_f137); end
  def test_outputs_summary_table_g137; assert_equal("14%", worksheet.outputs_summary_table_g137); end
  def test_outputs_summary_table_c138; assert_equal("Land for non-food crops  (M ha)", worksheet.outputs_summary_table_c138); end
  def test_outputs_summary_table_d138; assert_equal("M ha", worksheet.outputs_summary_table_d138); end
  def test_outputs_summary_table_e138; assert_equal("60", worksheet.outputs_summary_table_e138); end
  def test_outputs_summary_table_f138; assert_equal("59", worksheet.outputs_summary_table_f138); end
  def test_outputs_summary_table_g138; assert_equal("-1%", worksheet.outputs_summary_table_g138); end
  def test_outputs_summary_table_c139; assert_equal("Native forest (M ha)", worksheet.outputs_summary_table_c139); end
  def test_outputs_summary_table_d139; assert_equal("M ha", worksheet.outputs_summary_table_d139); end
  def test_outputs_summary_table_e139; assert_equal("3,753", worksheet.outputs_summary_table_e139); end
  def test_outputs_summary_table_f139; assert_equal("3,623", worksheet.outputs_summary_table_f139); end
  def test_outputs_summary_table_g139; assert_equal("-3%", worksheet.outputs_summary_table_g139); end
  def test_outputs_summary_table_c140; assert_equal("Commercial forest (M ha)", worksheet.outputs_summary_table_c140); end
  def test_outputs_summary_table_d140; assert_equal("M ha", worksheet.outputs_summary_table_d140); end
  def test_outputs_summary_table_e140; assert_equal("274", worksheet.outputs_summary_table_e140); end
  def test_outputs_summary_table_f140; assert_equal("501", worksheet.outputs_summary_table_f140); end
  def test_outputs_summary_table_g140; assert_equal("83%", worksheet.outputs_summary_table_g140); end
  def test_outputs_summary_table_c141; assert_equal("Land for bioenergy (M ha)", worksheet.outputs_summary_table_c141); end
  def test_outputs_summary_table_d141; assert_equal("M ha", worksheet.outputs_summary_table_d141); end
  def test_outputs_summary_table_e141; assert_equal("98", worksheet.outputs_summary_table_e141); end
  def test_outputs_summary_table_f141; assert_equal("98", worksheet.outputs_summary_table_f141); end
  def test_outputs_summary_table_g141; assert_equal("0%", worksheet.outputs_summary_table_g141); end
  def test_outputs_summary_table_c142; assert_equal("Unused productive land (M ha)", worksheet.outputs_summary_table_c142); end
  def test_outputs_summary_table_d142; assert_equal("M ha", worksheet.outputs_summary_table_d142); end
  def test_outputs_summary_table_e142; assert_equal(:na, worksheet.outputs_summary_table_e142); end
  def test_outputs_summary_table_f142; assert_equal(:na, worksheet.outputs_summary_table_f142); end
  def test_outputs_summary_table_g142; assert_equal(:na, worksheet.outputs_summary_table_g142); end
  def test_outputs_summary_table_c143; assert_equal("Settlements and infrastructure (M ha)", worksheet.outputs_summary_table_c143); end
  def test_outputs_summary_table_d143; assert_equal("M ha", worksheet.outputs_summary_table_d143); end
  def test_outputs_summary_table_e143; assert_equal("245", worksheet.outputs_summary_table_e143); end
  def test_outputs_summary_table_f143; assert_equal("368", worksheet.outputs_summary_table_f143); end
  def test_outputs_summary_table_g143; assert_equal("50%", worksheet.outputs_summary_table_g143); end
  def test_outputs_summary_table_c144; assert_equal("Desert, ice etc (M ha)", worksheet.outputs_summary_table_c144); end
  def test_outputs_summary_table_d144; assert_equal("M ha", worksheet.outputs_summary_table_d144); end
  def test_outputs_summary_table_e144; assert_equal("3,836", worksheet.outputs_summary_table_e144); end
  def test_outputs_summary_table_f144; assert_equal("3,836", worksheet.outputs_summary_table_f144); end
  def test_outputs_summary_table_g144; assert_equal("0%", worksheet.outputs_summary_table_g144); end
  def test_outputs_summary_table_c145; assert_equal("Total productive land (all excluding desert, ice) (M ha)", worksheet.outputs_summary_table_c145); end
  def test_outputs_summary_table_d145; assert_equal("M ha", worksheet.outputs_summary_table_d145); end
  def test_outputs_summary_table_e145; assert_equal(:na, worksheet.outputs_summary_table_e145); end
  def test_outputs_summary_table_f145; assert_equal(:na, worksheet.outputs_summary_table_f145); end
  def test_outputs_summary_table_g145; assert_equal(:na, worksheet.outputs_summary_table_g145); end
  def test_outputs_summary_table_c146; assert_equal("% of land used for food (livestock)", worksheet.outputs_summary_table_c146); end
  def test_outputs_summary_table_d146; assert_equal("% of all productive land ()", worksheet.outputs_summary_table_d146); end
  def test_outputs_summary_table_e146; assert_equal(:na, worksheet.outputs_summary_table_e146); end
  def test_outputs_summary_table_f146; assert_equal(:na, worksheet.outputs_summary_table_f146); end
  def test_outputs_summary_table_g146; assert_equal(:na, worksheet.outputs_summary_table_g146); end
  def test_outputs_summary_table_c147; assert_equal("Emissions saved by speculative GHG removal technologies (Gt CO2)", worksheet.outputs_summary_table_c147); end
  def test_outputs_summary_table_d147; assert_equal("Gt CO2", worksheet.outputs_summary_table_d147); end
  def test_outputs_summary_table_e147; assert_equal("0.0", worksheet.outputs_summary_table_e147); end
  def test_outputs_summary_table_f147; assert_equal("0.0", worksheet.outputs_summary_table_f147); end
  def test_outputs_summary_table_g147; assert_equal("", worksheet.outputs_summary_table_g147); end
  def test_outputs_summary_table_b150; assert_equal("Cost", worksheet.outputs_summary_table_b150); end
  def test_outputs_summary_table_c150; assert_equal("Cost in 2050 - point estimate ($bn)", worksheet.outputs_summary_table_c150); end
  def test_outputs_summary_table_d150; assert_equal("$bn", worksheet.outputs_summary_table_d150); end
  def test_outputs_summary_table_e150; assert_equal("n / a", worksheet.outputs_summary_table_e150); end
  def test_outputs_summary_table_f150; assert_equal("4756.4", worksheet.outputs_summary_table_f150); end
  def test_outputs_summary_table_g150; assert_equal("", worksheet.outputs_summary_table_g150); end
  def test_outputs_summary_table_c151; assert_equal("Fuel tax rate - coal", worksheet.outputs_summary_table_c151); end
  def test_outputs_summary_table_d151; assert_equal("%", worksheet.outputs_summary_table_d151); end
  def test_outputs_summary_table_e151; assert_equal("n / a", worksheet.outputs_summary_table_e151); end
  def test_outputs_summary_table_f151; assert_equal("39.0%", worksheet.outputs_summary_table_f151); end
  def test_outputs_summary_table_g151; assert_equal("", worksheet.outputs_summary_table_g151); end
  def test_outputs_summary_table_c152; assert_equal("Fuel tax rate - oil", worksheet.outputs_summary_table_c152); end
  def test_outputs_summary_table_d152; assert_equal("%", worksheet.outputs_summary_table_d152); end
  def test_outputs_summary_table_e152; assert_equal("n / a", worksheet.outputs_summary_table_e152); end
  def test_outputs_summary_table_f152; assert_equal("67.0%", worksheet.outputs_summary_table_f152); end
  def test_outputs_summary_table_g152; assert_equal("", worksheet.outputs_summary_table_g152); end
  def test_outputs_summary_table_c153; assert_equal("Fuel tax rate - gas", worksheet.outputs_summary_table_c153); end
  def test_outputs_summary_table_d153; assert_equal("%", worksheet.outputs_summary_table_d153); end
  def test_outputs_summary_table_e153; assert_equal("n / a", worksheet.outputs_summary_table_e153); end
  def test_outputs_summary_table_f153; assert_equal("60.0%", worksheet.outputs_summary_table_f153); end
  def test_outputs_summary_table_g153; assert_equal("", worksheet.outputs_summary_table_g153); end
  def test_outputs_summary_table_c154; assert_equal("Fuel cost (excluding tax) - coal", worksheet.outputs_summary_table_c154); end
  def test_outputs_summary_table_d154; assert_equal("$bn", worksheet.outputs_summary_table_d154); end
  def test_outputs_summary_table_e154; assert_equal("n / a", worksheet.outputs_summary_table_e154); end
  def test_outputs_summary_table_f154; assert_equal("721.6", worksheet.outputs_summary_table_f154); end
  def test_outputs_summary_table_g154; assert_equal("", worksheet.outputs_summary_table_g154); end
  def test_outputs_summary_table_c155; assert_equal("Fuel cost (excluding tax) - oil", worksheet.outputs_summary_table_c155); end
  def test_outputs_summary_table_d155; assert_equal("$bn", worksheet.outputs_summary_table_d155); end
  def test_outputs_summary_table_e155; assert_equal("n / a", worksheet.outputs_summary_table_e155); end
  def test_outputs_summary_table_f155; assert_equal("2729.8", worksheet.outputs_summary_table_f155); end
  def test_outputs_summary_table_g155; assert_equal("", worksheet.outputs_summary_table_g155); end
  def test_outputs_summary_table_c156; assert_equal("Fuel cost (excluding tax) - gas", worksheet.outputs_summary_table_c156); end
  def test_outputs_summary_table_d156; assert_equal("$bn", worksheet.outputs_summary_table_d156); end
  def test_outputs_summary_table_e156; assert_equal("n / a", worksheet.outputs_summary_table_e156); end
  def test_outputs_summary_table_f156; assert_equal("901.5", worksheet.outputs_summary_table_f156); end
  def test_outputs_summary_table_g156; assert_equal("", worksheet.outputs_summary_table_g156); end
  def test_outputs_summary_table_c157; assert_equal("Tax amount paid to exporters - coal", worksheet.outputs_summary_table_c157); end
  def test_outputs_summary_table_d157; assert_equal("$bn", worksheet.outputs_summary_table_d157); end
  def test_outputs_summary_table_e157; assert_equal("n / a", worksheet.outputs_summary_table_e157); end
  def test_outputs_summary_table_f157; assert_equal("461.4", worksheet.outputs_summary_table_f157); end
  def test_outputs_summary_table_g157; assert_equal("", worksheet.outputs_summary_table_g157); end
  def test_outputs_summary_table_c158; assert_equal("Tax amount paid to exporters - oil", worksheet.outputs_summary_table_c158); end
  def test_outputs_summary_table_d158; assert_equal("$bn", worksheet.outputs_summary_table_d158); end
  def test_outputs_summary_table_e158; assert_equal("n / a", worksheet.outputs_summary_table_e158); end
  def test_outputs_summary_table_f158; assert_equal("5542.3", worksheet.outputs_summary_table_f158); end
  def test_outputs_summary_table_g158; assert_equal("", worksheet.outputs_summary_table_g158); end
  def test_outputs_summary_table_c159; assert_equal("Tax amount paid to exporters - gas", worksheet.outputs_summary_table_c159); end
  def test_outputs_summary_table_d159; assert_equal("$bn", worksheet.outputs_summary_table_d159); end
  def test_outputs_summary_table_e159; assert_equal("n / a", worksheet.outputs_summary_table_e159); end
  def test_outputs_summary_table_f159; assert_equal("1352.3", worksheet.outputs_summary_table_f159); end
  def test_outputs_summary_table_g159; assert_equal("", worksheet.outputs_summary_table_g159); end
  def test_outputs_summary_table_c160; assert_equal("Checking calculations below", worksheet.outputs_summary_table_c160); end
  def test_outputs_summary_table_c161; assert_equal("Fuel amount paid (if tax added back in) - coal", worksheet.outputs_summary_table_c161); end
  def test_outputs_summary_table_d161; assert_equal("$bn", worksheet.outputs_summary_table_d161); end
  def test_outputs_summary_table_f161; assert_equal("1183.0", worksheet.outputs_summary_table_f161); end
  def test_outputs_summary_table_c162; assert_equal("Fuel amount paid (if tax added back in) - oil", worksheet.outputs_summary_table_c162); end
  def test_outputs_summary_table_d162; assert_equal("$bn", worksheet.outputs_summary_table_d162); end
  def test_outputs_summary_table_f162; assert_equal("8272.1", worksheet.outputs_summary_table_f162); end
  def test_outputs_summary_table_c163; assert_equal("Fuel amount paid (if tax added back in) - gas", worksheet.outputs_summary_table_c163); end
  def test_outputs_summary_table_d163; assert_equal("$bn", worksheet.outputs_summary_table_d163); end
  def test_outputs_summary_table_f163; assert_equal("2253.8", worksheet.outputs_summary_table_f163); end
  def test_outputs_summary_table_c164; assert_equal("Checking - coal", worksheet.outputs_summary_table_c164); end
  def test_outputs_summary_table_d164; assert_equal("%", worksheet.outputs_summary_table_d164); end
  def test_outputs_summary_table_f164; assert_equal("0.4", worksheet.outputs_summary_table_f164); end
  def test_outputs_summary_table_c165; assert_equal("Checking - oil", worksheet.outputs_summary_table_c165); end
  def test_outputs_summary_table_d165; assert_equal("%", worksheet.outputs_summary_table_d165); end
  def test_outputs_summary_table_f165; assert_equal("0.7", worksheet.outputs_summary_table_f165); end
  def test_outputs_summary_table_c166; assert_equal("Checking - gas", worksheet.outputs_summary_table_c166); end
  def test_outputs_summary_table_d166; assert_equal("%", worksheet.outputs_summary_table_d166); end
  def test_outputs_summary_table_f166; assert_equal("0.6", worksheet.outputs_summary_table_f166); end
  def test_outputs_summary_graphs_c47; assert_equal("WARNING: Cumulative CO2 emissions by 2100 exceed 3010 GtCO2, the amount associated with a 50% chance of keeping global mean temperature increase below 2C by 2100.  Reduce emissions by increasing effort across more levers.", worksheet.outputs_summary_graphs_c47); end
  def test_outputs_summary_graphs_c56; assert_equal("No warning on bio crop oversupply ", worksheet.outputs_summary_graphs_c56); end
  def test_outputs_summary_graphs_c51; assert_equal("No warning on electricity oversupply", worksheet.outputs_summary_graphs_c51); end
  def test_outputs_summary_graphs_c59; assert_equal("No warning on CO2 concentrations being below pre-industrial levels", worksheet.outputs_summary_graphs_c59); end
  def test_outputs_summary_graphs_c52; assert_equal("No warning on coal consumption", worksheet.outputs_summary_graphs_c52); end
  def test_outputs_summary_graphs_c61; assert_equal("No warning on crop yield choice and consistency with midpoint temperature rise", worksheet.outputs_summary_graphs_c61); end
  def test_outputs_summary_graphs_c58; assert_equal("No warning on forest area change", worksheet.outputs_summary_graphs_c58); end
  def test_outputs_summary_graphs_c50; assert_equal("WARNING – Your pathway increases the world’s dependence on fossil fuels from 2011 to 2050. This could mean greater import dependence for some countries and greater exposure to potentially volatile fossil fuel prices. Click on the energy tab to see more detail on the use of coal, oil and gas in your pathway", worksheet.outputs_summary_graphs_c50); end
  def test_outputs_summary_graphs_c54; assert_equal("No warning on gas consumption", worksheet.outputs_summary_graphs_c54); end
  def test_outputs_summary_graphs_c48; assert_equal("No warning on GGR", worksheet.outputs_summary_graphs_c48); end
  def test_outputs_summary_graphs_c57; assert_equal("No warning on land use", worksheet.outputs_summary_graphs_c57); end
  def test_outputs_summary_graphs_c49; assert_equal("No warning on level 4s", worksheet.outputs_summary_graphs_c49); end
  def test_outputs_summary_graphs_c60; assert_equal("No warning on temperatures below 0 degrees", worksheet.outputs_summary_graphs_c60); end
  def test_outputs_summary_graphs_c53; assert_equal("No warning on oil consumption", worksheet.outputs_summary_graphs_c53); end
  def test_outputs_summary_graphs_c55; assert_equal("No warning on uranium consumption", worksheet.outputs_summary_graphs_c55); end
end
